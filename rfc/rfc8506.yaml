- title: __initial_text__
  contents:
  - '                  Diameter Credit-Control Application

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a Diameter application that can be used\
    \ to\n   implement real-time credit-control for a variety of end-user services\n\
    \   such as network access, Session Initiation Protocol (SIP) services,\n   messaging\
    \ services, and download services.  The Diameter Credit-\n   Control application\
    \ as defined in this document obsoletes RFC 4006,\n   and it must be supported\
    \ by all new Diameter Credit-Control\n   application implementations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8506.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................6\n\
    \      1.1. Requirements Language ......................................7\n  \
    \    1.2. Terminology ................................................7\n    \
    \  1.3. Advertising Application Support ............................9\n   2. Architecture\
    \ Models .............................................9\n   3. Credit-Control\
    \ Messages ........................................11\n      3.1. Credit-Control-Request\
    \ (CCR) Command ......................11\n      3.2. Credit-Control-Answer (CCA)\
    \ Command .......................12\n   4. Credit-Control Application Overview\
    \ ............................13\n      4.1. Service-Specific Rating Input and\
    \ Interoperability ........14\n           4.1.1. Specifying Rating Input AVPs\
    \ .......................15\n           4.1.2. Service-Specific Documentation\
    \ .....................16\n           4.1.3. Handling of Unsupported/Incorrect\
    \ Rating Input .....16\n           4.1.4. RADIUS Vendor-Specific Rating Attributes\
    \ ...........17\n   5. Session-Based Credit-Control ...................................17\n\
    \      5.1. General Principles ........................................17\n  \
    \         5.1.1. Basic Support for Tariff Time Change ...............18\n    \
    \       5.1.2. Credit-Control for Multiple Services within\n                 \
    \ a (Sub-)Session ....................................19\n      5.2. First Interrogation\
    \ .......................................23\n           5.2.1. First Interrogation\
    \ after Authorization and\n                  Authentication .....................................25\n\
    \           5.2.2. First Interrogation Included with\n                  Authorization\
    \ Messages .............................27\n      5.3. Intermediate Interrogation\
    \ ................................29\n      5.4. Final Interrogation .......................................31\n\
    \      5.5. Server-Initiated Credit Re-authorization ..................32\n  \
    \    5.6. Graceful Service Termination ..............................34\n    \
    \       5.6.1. Terminate Action ...................................37\n      \
    \     5.6.2. Redirect Action ....................................38\n        \
    \   5.6.3. Restrict Access Action .............................40\n          \
    \ 5.6.4. Usage of the Server-Initiated Credit\n                  Re-authorization\
    \ ...................................41\n      5.7. Failure Procedures ........................................41\n\
    \   6. One-Time Event .................................................44\n  \
    \    6.1. Service Price Inquiry .....................................45\n    \
    \  6.2. Balance Checks ............................................46\n      6.3.\
    \ Direct Debiting ...........................................46\n      6.4. Refunds\
    \ ...................................................47\n      6.5. Failure Procedure\
    \ .........................................48\n   7. Credit-Control Application\
    \ State Machines ......................50\n   8. Credit-Control AVPs ............................................59\n\
    \      8.1. CC-Correlation-Id AVP .....................................61\n  \
    \    8.2. CC-Request-Number AVP .....................................62\n    \
    \  8.3. CC-Request-Type AVP .......................................62\n      8.4.\
    \ CC-Session-Failover AVP ...................................63\n      8.5. CC-Sub-Session-Id\
    \ AVP .....................................64\n      8.6. Check-Balance-Result\
    \ AVP ..................................64\n      8.7. Cost-Information AVP ......................................64\n\
    \      8.8. Unit-Value AVP ............................................65\n  \
    \    8.9. Exponent AVP ..............................................65\n    \
    \  8.10. Value-Digits AVP .........................................66\n      8.11.\
    \ Currency-Code AVP ........................................66\n      8.12. Cost-Unit\
    \ AVP ............................................66\n      8.13. Credit-Control\
    \ AVP .......................................66\n      8.14. Credit-Control-Failure-Handling\
    \ AVP (CCFH) ...............67\n      8.15. Direct-Debiting-Failure-Handling AVP\
    \ (DDFH) ..............68\n      8.16. Multiple-Services-Credit-Control AVP .....................68\n\
    \      8.17. Granted-Service-Unit AVP .................................70\n  \
    \    8.18. Requested-Service-Unit AVP ...............................71\n    \
    \  8.19. Used-Service-Unit AVP ....................................71\n      8.20.\
    \ Tariff-Time-Change AVP ...................................72\n      8.21. CC-Time\
    \ AVP ..............................................72\n      8.22. CC-Money AVP\
    \ .............................................72\n      8.23. CC-Total-Octets\
    \ AVP ......................................72\n      8.24. CC-Input-Octets AVP\
    \ ......................................72\n      8.25. CC-Output-Octets AVP .....................................73\n\
    \      8.26. CC-Service-Specific-Units AVP ............................73\n  \
    \    8.27. Tariff-Change-Usage AVP ..................................73\n    \
    \  8.28. Service-Identifier AVP ...................................74\n      8.29.\
    \ Rating-Group AVP .........................................74\n      8.30. G-S-U-Pool-Reference\
    \ AVP .................................74\n      8.31. G-S-U-Pool-Identifier AVP\
    \ ................................75\n      8.32. CC-Unit-Type AVP .........................................75\n\
    \      8.33. Validity-Time AVP ........................................75\n  \
    \    8.34. Final-Unit-Indication AVP ................................76\n    \
    \  8.35. Final-Unit-Action AVP ....................................77\n      8.36.\
    \ Restriction-Filter-Rule AVP ..............................78\n      8.37. Redirect-Server\
    \ AVP ......................................78\n      8.38. Redirect-Address-Type\
    \ AVP ................................79\n      8.39. Redirect-Server-Address\
    \ AVP ..............................79\n      8.40. Multiple-Services-Indicator\
    \ AVP ..........................80\n      8.41. Requested-Action AVP .....................................80\n\
    \      8.42. Service-Context-Id AVP ...................................81\n  \
    \    8.43. Service-Parameter-Info AVP ...............................82\n    \
    \  8.44. Service-Parameter-Type AVP ...............................82\n      8.45.\
    \ Service-Parameter-Value AVP ..............................83\n      8.46. Subscription-Id\
    \ AVP ......................................83\n      8.47. Subscription-Id-Type\
    \ AVP .................................83\n      8.48. Subscription-Id-Data AVP\
    \ .................................84\n      8.49. User-Equipment-Info AVP ..................................84\n\
    \      8.50. User-Equipment-Info-Type AVP .............................84\n  \
    \    8.51. User-Equipment-Info-Value AVP ............................85\n    \
    \  8.52. User-Equipment-Info-Extension AVP ........................85\n      8.53.\
    \ User-Equipment-Info-IMEISV AVP ...........................86\n      8.54. User-Equipment-Info-MAC\
    \ AVP ..............................86\n      8.55. User-Equipment-Info-EUI64\
    \ AVP ............................86\n      8.56. User-Equipment-Info-ModifiedEUI64\
    \ AVP ....................86\n      8.57. User-Equipment-Info-IMEI AVP .............................86\n\
    \      8.58. Subscription-Id-Extension AVP ............................87\n  \
    \    8.59. Subscription-Id-E164 AVP .................................87\n    \
    \  8.60. Subscription-Id-IMSI AVP .................................87\n      8.61.\
    \ Subscription-Id-SIP-URI AVP ..............................88\n      8.62. Subscription-Id-NAI\
    \ AVP ..................................88\n      8.63. Subscription-Id-Private\
    \ AVP ..............................88\n      8.64. Redirect-Server-Extension\
    \ AVP ............................88\n      8.65. Redirect-Address-IPAddress AVP\
    \ ...........................89\n      8.66. Redirect-Address-URL AVP .................................89\n\
    \      8.67. Redirect-Address-SIP-URI AVP .............................89\n  \
    \    8.68. QoS-Final-Unit-Indication AVP ............................89\n   9.\
    \ Result-Code AVP Values .........................................91\n      9.1.\
    \ Transient Failures ........................................91\n      9.2. Permanent\
    \ Failures ........................................92\n   10. AVP Occurrence Table\
    \ ..........................................92\n      10.1. Credit-Control AVP\
    \ Table .................................93\n      10.2. Re-Auth-Request/Re-Auth-Answer\
    \ AVP Table .................94\n   11. RADIUS/Diameter Credit-Control Interworking\
    \ Model .............94\n   12. IANA Considerations ...........................................97\n\
    \      12.1. Application Identifier ...................................97\n  \
    \    12.2. Command Codes ............................................97\n    \
    \  12.3. AVP Codes ................................................97\n      12.4.\
    \ Result-Code AVP Values ...................................98\n      12.5. CC-Request-Type\
    \ AVP ......................................98\n      12.6. CC-Session-Failover\
    \ AVP ..................................98\n      12.7. CC-Unit-Type AVP .........................................99\n\
    \      12.8. Check-Balance-Result AVP .................................99\n  \
    \    12.9. Credit-Control AVP .......................................99\n    \
    \  12.10. Credit-Control-Failure-Handling AVP .....................99\n      12.11.\
    \ Direct-Debiting-Failure-Handling AVP ....................99\n      12.12. Final-Unit-Action\
    \ AVP ...................................99\n      12.13. Multiple-Services-Indicator\
    \ AVP ........................100\n      12.14. Redirect-Address-Type AVP ..............................100\n\
    \      12.15. Requested-Action AVP ...................................100\n  \
    \    12.16. Subscription-Id-Type AVP ...............................100\n    \
    \  12.17. Tariff-Change-Usage AVP ................................100\n      12.18.\
    \ User-Equipment-Info-Type AVP ...........................100\n   13. Parameters\
    \ Related to the Credit-Control Application .........101\n   14. Security Considerations\
    \ ......................................101\n      14.1. Direct Connection with\
    \ Redirects ........................102\n      14.2. Application-Level Redirects\
    \ .............................103\n   15. Privacy Considerations .......................................104\n\
    \      15.1. Privacy-Sensitive AVPs ..................................104\n  \
    \    15.2. Data Minimization .......................................106\n    \
    \  15.3. Diameter Agents .........................................107\n   16.\
    \ References ...................................................107\n      16.1.\
    \ Normative References ....................................107\n      16.2. Informative\
    \ References ..................................110\n   Appendix A. Credit-Control\
    \ Sequences .............................111\n     A.1. Flow I ....................................................111\n\
    \     A.2. Flow II ...................................................113\n  \
    \   A.3. Flow III ..................................................116\n    \
    \ A.4. Flow IV ...................................................117\n     A.5.\
    \ Flow V ....................................................119\n     A.6. Flow\
    \ VI ...................................................120\n     A.7. Flow VII\
    \ ..................................................121\n     A.8. Flow VIII .................................................123\n\
    \     A.9. Flow IX ...................................................124\n  \
    \ Acknowledgements .................................................130\n   Authors'\
    \ Addresses ...............................................130\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a Diameter application that can\
    \ be used to\n   implement real-time credit-control for a variety of end-user\
    \ services\n   such as network access, Session Initiation Protocol (SIP) services,\n\
    \   messaging services, and download services.  (\"Credit-control\" is\n   sometimes\
    \ abbreviated as \"CC\" in figures and tables throughout this\n   document.) \
    \ The Diameter Credit-Control application as defined in\n   this document obsoletes\
    \ [RFC4006], and it must be supported by all\n   new Diameter Credit-Control application\
    \ implementations.  This\n   document provides a general solution to real-time\
    \ cost and\n   credit-control.\n   The prepaid model has been shown to be very\
    \ successful -- for\n   instance, in GSM networks, where network operators offering\
    \ prepaid\n   services have experienced a substantial growth of their customer\
    \ base\n   and revenues.  Prepaid services are now cropping up in many other\n\
    \   wireless and wire-line-based networks.\n   In mobile networks, additional\
    \ functionality is required beyond that\n   specified in the Diameter base protocol\
    \ [RFC6733].  For example, the\n   3GPP charging and billing requirements document\
    \ [TGPPCHARG] states\n   that an application must be able to rate service information\
    \ in\n   real time.  In addition, it is necessary to check that the end user's\n\
    \   account provides coverage for the requested service prior to\n   initiation\
    \ of that service.  When an account is exhausted or expired,\n   the user must\
    \ be denied the ability to compile additional chargeable\n   events.\n   A mechanism\
    \ has to be provided to allow the user to be informed of\n   the charges to be\
    \ levied for a requested service.  In addition, there\n   are services such as\
    \ gaming and advertising that may credit as well\n   as debit a user account.\n\
    \   The other Diameter applications provide service-specific\n   authorization,\
    \ and they do not provide credit authorization for\n   prepaid users.  The credit\
    \ authorization shall be generic and\n   applicable to all the service environments\
    \ required to support\n   prepaid services.\n   To fulfill these requirements,\
    \ it is necessary to facilitate\n   credit-control communication between the network\
    \ element providing\n   the service (e.g., Network Access Server (NAS), SIP Proxy,\n\
    \   Application Server) and a credit-control server.\n   The scope of this specification\
    \ is credit authorization.  Service-\n   specific authorization and authentication\
    \ are out of scope.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   AAA:  Authentication, Authorization, and Accounting.\n\
    \   AA-Answer:  \"AA-Answer\" generically refers to a service-specific\n     \
    \ authorization and authentication answer.  AA-Answer commands are\n      defined\
    \ in service-specific authorization applications, e.g.,\n      [RFC7155] [RFC4004].\n\
    \   AA-Request:  \"AA-Request\" generically refers to a service-specific\n   \
    \   authorization and authentication request.  AA-Request commands are\n     \
    \ defined in service-specific authorization applications, e.g.,\n      [RFC7155]\
    \ [RFC4004].\n   Credit-control:  \"Credit-control\" is a mechanism that directly\n\
    \      interacts in real time with an account and controls or monitors\n     \
    \ the charges related to service usage.  Credit-control is a\n      process of\
    \ (1) checking whether or not credit is available,\n      (2) credit reservation,\
    \ (3) deduction of credit from the end-user\n      account when service is completed,\
    \ and (4) refunding of reserved\n      credit that is not used.\n   Diameter Credit-Control\
    \ server:  A Diameter Credit-Control server\n      acts as a prepaid server, performing\
    \ real-time rating and\n      credit-control.  It is located in the home domain\
    \ and is accessed\n      by Service Elements or Diameter AAA servers in real time,\
    \ for the\n      purpose of price determination and credit-control before the\n\
    \      service event is delivered to the end user.  It may also interact\n   \
    \   with Business Support Systems.\n   Diameter Credit-Control client:  A Diameter\
    \ Credit-Control client is\n      an entity that interacts with a credit-control\
    \ server.  It\n      monitors the usage of the granted quota according to instructions\n\
    \      returned by the credit-control server.\n   Interrogation:  The Diameter\
    \ Credit-Control client uses interrogation\n      to initiate a session-based\
    \ credit-control process.  During the\n      credit-control process, it is used\
    \ to report the used quota and\n      request a new one.  An interrogation maps\
    \ to a request/answer\n      transaction.\n   One-time event:  A charging transaction\
    \ session comprising a single\n      request and single response.\n   Rating:\
    \  The act of determining the cost of the service event.\n   Service:  A type\
    \ of task performed by a Service Element for an\n      end user.\n   Service Element:\
    \  A network element that provides a service to the\n      end users.  The Service\
    \ Element may include the Diameter\n      Credit-Control client or another entity\
    \ (e.g., a RADIUS AAA\n      server) that can act as a credit-control client on\
    \ behalf of the\n      Service Element.  In the latter case, the interface between\
    \ the\n      Service Element and the Diameter Credit-Control client is outside\n\
    \      the scope of this specification.  Examples of Service Elements\n      include\
    \ NASs, SIP Proxies, and Application Servers such as\n      messaging servers,\
    \ content servers, and gaming servers.\n   Service event:  An event relating to\
    \ a service provided to the\n      end user.\n   Session-based credit-control:\
    \  A credit-control process that makes\n      use of several interrogations: the\
    \ first, a possible intermediate,\n      and the final.  The first interrogation\
    \ is used to reserve money\n      from the user's account and to initiate the\
    \ process.  Intermediate\n      interrogations (if any) may be needed to request\
    \ a new quota while\n      the service is being rendered.  The final interrogation\
    \ is used to\n      exit the process.  The credit-control server is required to\n\
    \      maintain session state for session-based credit-control.\n"
- title: 1.3.  Advertising Application Support
  contents:
  - "1.3.  Advertising Application Support\n   Diameter nodes conforming to this specification\
    \ MUST advertise\n   support by including the value of 4 in the Auth-Application-Id\
    \ of the\n   Capabilities-Exchange-Request and Capabilities-Exchange-Answer\n\
    \   commands [RFC6733].\n"
- title: 2.  Architecture Models
  contents:
  - "2.  Architecture Models\n   The current accounting models specified in the RADIUS\
    \ accounting and\n   Diameter base specifications [RFC2866] [RFC6733] are not\
    \ sufficient\n   for real-time credit-control, where creditworthiness is to be\n\
    \   determined prior to service initiation.  Also, the existing Diameter\n   authorization\
    \ applications [RFC7155] [RFC4004] only provide service\n   authorization; they\
    \ do not provide credit authorization for prepaid\n   users.  In order to support\
    \ real-time credit-control, a new type of\n   server is needed in the AAA infrastructure:\
    \ the Diameter\n   Credit-Control server.  The Diameter Credit-Control server\
    \ is the\n   entity responsible for credit authorization for prepaid subscribers.\n\
    \   A Service Element may authenticate and authorize the end user with\n   the\
    \ AAA server by using AAA protocols, e.g., RADIUS or the Diameter\n   base protocol\
    \ (possibly extended via a Diameter application).\n   Accounting protocols such\
    \ as RADIUS accounting and the Diameter base\n   accounting protocol can be used\
    \ to provide accounting data to the\n   accounting server after service is initiated\
    \ and to provide possible\n   interim reports until service completion.  However,\
    \ for real-time\n   credit-control, these authorization and accounting models\
    \ are not\n   sufficient.\n   When real-time credit-control is required, the credit-control\
    \ client\n   contacts the credit-control server with information about a possible\n\
    \   service event.  The credit-control process is performed to determine\n   potential\
    \ charges and to verify whether the end user's account\n   balance is sufficient\
    \ to cover the cost of the service being\n   rendered.\n   Figure 1 illustrates\
    \ the typical credit-control architecture, which\n   consists of a Service Element\
    \ with an embedded Diameter\n   Credit-Control client, a Diameter Credit-Control\
    \ server, and a AAA\n   server.  A Business Support System is usually deployed;\
    \ at a minimum,\n   it includes billing functionality.  The credit-control server\
    \ and AAA\n   server in this architecture model are logical entities.  The real\n\
    \   configuration can combine them into a single host.  The\n   credit-control\
    \ protocol is the Diameter base protocol [RFC6733] with\n   the Diameter Credit-Control\
    \ application.\n   When an end user requests services such as SIP or messaging,\
    \ the\n   request is typically forwarded to a Service Element (e.g., a SIP\n \
    \  Proxy) in the user's home realm as defined in [RFC6733].  In some\n   cases,\
    \ it might be possible that the Service Element in the local\n   realm [RFC6733]\
    \ can offer services to the end user; however, a\n   commercial agreement must\
    \ exist between the local realm and the home\n   realm.  Network access is an\
    \ example of a service offered in the\n   local realm where the NAS, through a\
    \ AAA infrastructure,\n   authenticates and authorizes the user with the user's\
    \ home network.\n                  Service Element   AAA and CC\n   +----------+\
    \      +---------+     Protocols+-----------+  +--------+\n   |  End     |<---->|+-------+|<------------>|\
    \    AAA    |  |Business|\n   |  User    |   +->|| CC    ||              |   Server\
    \  |->|Support |\n   |          |   |  || Client||<-----+       |           |\
    \  |System  |\n   +----------+   |  |+-------+|      |       +-----------+  |\
    \        |\n                  |  +---------+      |             ^        +--------+\n\
    \   +----------+   |                   | CC Protocol |             ^\n   |  End\
    \     |<--+                   |       +-----v----+        |\n   |  User    | \
    \                      +------>|Credit-   |        |\n   +----------+        \
    \        Credit-Control |Control   |--------+\n                              \
    \ Protocol       |Server    |\n                                              +----------+\n\
    \               Figure 1: Typical Credit-Control Architecture\n   There can be\
    \ multiple credit-control servers in the system for\n   redundancy and load balancing.\
    \  The system can also contain separate\n   rating server(s), and accounts can\
    \ be located in a centralized\n   database.  To ensure that the end user's account\
    \ is not debited or\n   credited multiple times for the same service event, only\
    \ one entity\n   in the credit-control system should perform duplicate detection.\n\
    \   System-internal interfaces can exist to relay messages between\n   servers\
    \ and an account manager.  However, the detailed architecture\n   of the credit-control\
    \ system and its interfaces is implementation\n   specific and is out of scope\
    \ for this specification.\n   Protocol-transparent Diameter relays can exist between\
    \ the\n   credit-control client and credit-control server.  Also, Diameter\n \
    \  redirect agents that refer credit-control clients to credit-control\n   servers\
    \ and allow them to communicate directly can exist.  These\n   agents transparently\
    \ support the Diameter Credit-Control application.\n   The different roles of\
    \ Diameter agents are defined in Diameter base\n   [RFC6733], Section 2.8.\n \
    \  If Diameter Credit-Control proxies exist between the credit-control\n   client\
    \ and the credit-control server, they MUST advertise support for\n   the Diameter\
    \ Credit-Control application.\n"
- title: 3.  Credit-Control Messages
  contents:
  - "3.  Credit-Control Messages\n   This section defines new Diameter message Command\
    \ Code values that\n   MUST be supported by all Diameter implementations that\
    \ conform to\n   this specification.  The Command Codes are as follows:\n    \
    \     +------------------------+---------+------+-------------+\n         | Command\
    \ Name           | Abbrev. | Code | Reference   |\n         +------------------------+---------+------+-------------+\n\
    \         | Credit-Control-Request | CCR     | 272  | Section 3.1 |\n        \
    \ | Credit-Control-Answer  | CCA     | 272  | Section 3.2 |\n         +------------------------+---------+------+-------------+\n\
    \                     Table 1: Credit-Control Commands\n   Section 3.2 of [RFC6733]\
    \ (Diameter base) defines the Command Code\n   Format specification.  These formats\
    \ are observed in credit-control\n   messages.\n"
- title: 3.1.  Credit-Control-Request (CCR) Command
  contents:
  - "3.1.  Credit-Control-Request (CCR) Command\n   The Credit-Control-Request message\
    \ (CCR) is indicated by the Command\n   Code field being set to 272 and the 'R'\
    \ bit being set in the Command\n   Flags field.  It is used between the Diameter\
    \ Credit-Control client\n   and the credit-control server to request credit authorization\
    \ for a\n   given service.\n   The Auth-Application-Id MUST be set to the value\
    \ 4, indicating the\n   Diameter Credit-Control application.\n   The CCR is extensible\
    \ via the inclusion of one or more\n   Attribute-Value Pairs (AVPs).\n   Message\
    \ Format:\n   <Credit-Control-Request> ::= < Diameter Header: 272, REQ, PXY >\n\
    \                                < Session-Id >\n                            \
    \    { Origin-Host }\n                                { Origin-Realm }\n     \
    \                           { Destination-Realm }\n                          \
    \      { Auth-Application-Id }\n                                { Service-Context-Id\
    \ }\n                                { CC-Request-Type }\n                   \
    \             { CC-Request-Number }\n                                [ Destination-Host\
    \ ]\n                                [ User-Name ]\n                         \
    \       [ CC-Sub-Session-Id ]\n                                [ Acct-Multi-Session-Id\
    \ ]\n                                [ Origin-State-Id ]\n                   \
    \             [ Event-Timestamp ]\n                               *[ Subscription-Id\
    \ ]\n                               *[ Subscription-Id-Extension ]\n         \
    \                       [ Service-Identifier ]\n                             \
    \   [ Termination-Cause ]\n                                [ Requested-Service-Unit\
    \ ]\n                                [ Requested-Action ]\n                  \
    \             *[ Used-Service-Unit ]\n                                [ Multiple-Services-Indicator\
    \ ]\n                               *[ Multiple-Services-Credit-Control ]\n  \
    \                             *[ Service-Parameter-Info ]\n                  \
    \              [ CC-Correlation-Id ]\n                                [ User-Equipment-Info\
    \ ]\n                                [ User-Equipment-Info-Extension ]\n     \
    \                          *[ Proxy-Info ]\n                               *[\
    \ Route-Record ]\n                               *[ AVP ]\n"
- title: 3.2.  Credit-Control-Answer (CCA) Command
  contents:
  - "3.2.  Credit-Control-Answer (CCA) Command\n   The Credit-Control-Answer message\
    \ (CCA) is indicated by the Command\n   Code field being set to 272 and the 'R'\
    \ bit being cleared in the\n   Command Flags field.  It is used between the credit-control\
    \ server\n   and the Diameter Credit-Control client to acknowledge a\n   Credit-Control-Request\
    \ command.\n   Message Format:\n        <Credit-Control-Answer> ::= < Diameter\
    \ Header: 272, PXY >\n                                    < Session-Id >\n   \
    \                                 { Result-Code }\n                          \
    \          { Origin-Host }\n                                    { Origin-Realm\
    \ }\n                                    { Auth-Application-Id }\n           \
    \                         { CC-Request-Type }\n                              \
    \      { CC-Request-Number }\n                                    [ User-Name\
    \ ]\n                                    [ CC-Session-Failover ]\n           \
    \                         [ CC-Sub-Session-Id ]\n                            \
    \        [ Acct-Multi-Session-Id ]\n                                    [ Origin-State-Id\
    \ ]\n                                    [ Event-Timestamp ]\n               \
    \                     [ Granted-Service-Unit ]\n                             \
    \      *[ Multiple-Services-Credit-Control ]\n                               \
    \     [ Cost-Information ]\n                                    [ Final-Unit-Indication\
    \ ]\n                                    [ QoS-Final-Unit-Indication ]\n     \
    \                               [ Check-Balance-Result ]\n                   \
    \                 [ Credit-Control-Failure-Handling ]\n                      \
    \              [ Direct-Debiting-Failure-Handling ]\n                        \
    \            [ Validity-Time ]\n                                   *[ Redirect-Host\
    \ ]\n                                    [ Redirect-Host-Usage ]\n           \
    \                         [ Redirect-Max-Cache-Time ]\n                      \
    \             *[ Proxy-Info ]\n                                   *[ Route-Record\
    \ ]\n                                   *[ Failed-AVP ]\n                    \
    \               *[ AVP ]\n"
- title: 4.  Credit-Control Application Overview
  contents:
  - "4.  Credit-Control Application Overview\n   The credit authorization process\
    \ takes place before and during\n   service delivery to the end user and generally\
    \ requires the user's\n   authentication and authorization before any requests\
    \ are sent to the\n   credit-control server.  The credit-control application defined\
    \ in\n   this specification supports two different credit authorization\n   models:\
    \ credit authorization with money reservation and credit\n   authorization with\
    \ direct debiting.  In both models, the\n   credit-control client requests credit\
    \ authorization from the\n   credit-control server prior to allowing any services\
    \ to be delivered\n   to the end user.\n   In the first model, the credit-control\
    \ server rates the request,\n   reserves a suitable amount of money from the user's\
    \ account, and\n   returns the amount of credit reserved.  Note that credit resources\n\
    \   may not imply actual monetary credit; credit resources may be granted\n  \
    \ to the credit-control client in the form of units (e.g., data volume\n   or\
    \ time) to be metered.\n   Upon receipt of a successful credit authorization answer\
    \ with a\n   certain amount of credit resources, the credit-control client allows\n\
    \   service delivery to the end user and starts monitoring the usage of\n   the\
    \ granted resources.  When the credit resources granted to the user\n   have been\
    \ consumed or the service has been successfully delivered or\n   terminated, the\
    \ credit-control client reports back to the server the\n   used amount.  The credit-control\
    \ server deducts the used amount from\n   the end user's account; it may perform\
    \ rating and make a new credit\n   reservation if the service delivery is continuing.\
    \  This process is\n   accomplished with session-based credit-control that includes\
    \ the\n   first interrogation, possible intermediate interrogations, and the\n\
    \   final interrogation.  For session-based credit-control, both the\n   credit-control\
    \ client and the credit-control server are required to\n   maintain credit-control\
    \ session state.  Session-based credit-control\n   is described in more detail,\
    \ with more variations, in Section 5.\n   In contrast, credit authorization with\
    \ direct debiting is a\n   single-transaction process wherein the credit-control\
    \ server directly\n   deducts a suitable amount of money from the user's account\
    \ as soon as\n   the credit authorization request is received.  Upon receipt of\
    \ a\n   successful credit authorization answer, the credit-control client\n  \
    \ allows service delivery to the end user.  This process is\n   accomplished with\
    \ the one-time event.  Session state is not\n   maintained.\n   In a multi-service\
    \ environment, an end user can issue an additional\n   service request (e.g.,\
    \ data service) during an ongoing service (e.g.,\n   voice call) toward the same\
    \ account.  Alternatively, during an active\n   multimedia session, an additional\
    \ media type is added to the session,\n   causing a new simultaneous request toward\
    \ the same account.\n   Consequently, this needs to be considered when credit\
    \ resources are\n   granted to the services.\n   The credit-control application\
    \ also supports operations such as\n   service price inquiries, user's balance\
    \ checks, and refunds of credit\n   on the user's account.  These operations are\
    \ accomplished with the\n   one-time event.  Session state is not maintained.\n\
    \   Flexible failure handling, specific to the credit-control\n   application,\
    \ is defined in the application.  This allows the service\n   provider to control\
    \ the credit-control client's behavior according to\n   its own risk management\
    \ policy.\n   The Credit-Control-Failure-Handling AVP (also referred to as the\n\
    \   CCFH) and the Direct-Debiting-Failure-Handling AVP (also referred to\n   as\
    \ the DDFH) are defined to determine what is done if the sending of\n   credit-control\
    \ messages to the credit-control server has been\n   temporarily prevented.  The\
    \ usage of the CCFH and the DDFH allows\n   flexibility, as failure handling for\
    \ the credit-control session and\n   one-time event direct debiting may be different.\n"
- title: 4.1.  Service-Specific Rating Input and Interoperability
  contents:
  - "4.1.  Service-Specific Rating Input and Interoperability\n   The Diameter Credit-Control\
    \ application defines the framework for\n   credit-control; it provides generic\
    \ credit-control mechanisms\n   supporting multiple service applications.  The\
    \ credit-control\n   application therefore does not define AVPs that could be\
    \ used as\n   input in the rating process.  Listing the possible services that\n\
    \   could use this Diameter application is out of scope for this generic\n   mechanism.\n\
    \   It is reasonable to expect that a service level agreement will exist\n   between\
    \ providers of the credit-control client and the credit-control\n   server covering\
    \ the charging, services offered, roaming agreements,\n   agreed-upon rating input\
    \ (i.e., AVPs), and so on.\n   Therefore, it is assumed that a Diameter Credit-Control\
    \ server will\n   provide service only for Diameter Credit-Control clients that\
    \ have\n   agreed beforehand as to the content of credit-control messages.\n \
    \  Naturally, it is possible that any arbitrary Diameter Credit-Control\n   client\
    \ can interchange credit-control messages with any Diameter\n   Credit-Control\
    \ server, but with a higher likelihood that unsupported\n   services/AVPs could\
    \ be present in the credit-control message, causing\n   the server to reject the\
    \ request with an appropriate Result-Code.\n"
- title: 4.1.1.  Specifying Rating Input AVPs
  contents:
  - "4.1.1.  Specifying Rating Input AVPs\n   There are two ways to provide rating\
    \ input to the credit-control\n   server: by either using AVPs or including the\
    \ rating input in the\n   Service-Parameter-Info AVP.  The general principles\
    \ for sending\n   rating parameters are as follows:\n   1.  Using AVPs:\n    \
    \   A.  The service SHOULD reuse existing AVPs if it can use AVPs\n          \
    \ defined in existing Diameter applications (e.g., [RFC7155]\n           for network\
    \ access services).  [RFC6733] strongly recommends\n           the reuse of existing\
    \ AVPs.\n           For AVPs of type Enumerated, the service may require a new\n\
    \           value to be defined.  Allocation of new AVP values is done as\n  \
    \         specified in [RFC6733], Section 1.3.\n       B.  New AVPs can be defined\
    \ if the existing AVPs do not provide\n           sufficient rating information.\
    \  In this case, the procedures\n           defined in [RFC6733] for creating\
    \ new AVPs MUST be followed.\n       C.  For services specific only to one vendor's\
    \ implementation, a\n           vendor-specific AVP code for private use can be\
    \ used.  Where\n           a vendor-specific AVP is implemented by more than one\
    \ vendor,\n           allocation of global AVPs is encouraged instead; refer to\n\
    \           [RFC6733].\n   2.  The Service-Parameter-Info AVP MAY be used as a\
    \ container to pass\n       legacy rating information in its original encoded\
    \ form (e.g.,\n       ASN.1 BER).  This method can be used to avoid unnecessary\n\
    \       conversions from an existing data format to an AVP format.  In\n     \
    \  this case, the rating input is embedded in the Service-Parameter-\n       Info\
    \ AVP as defined in Section 8.43.\n   New service applications SHOULD favor the\
    \ use of explicitly defined\n   AVPs as described in items 1a and 1b, to simplify\
    \ interoperability.\n"
- title: 4.1.2.  Service-Specific Documentation
  contents:
  - "4.1.2.  Service-Specific Documentation\n   The service-specific rating input\
    \ AVPs, and the contents of the\n   Service-Parameter-Info AVP or Service-Context-Id\
    \ AVP (defined in\n   Section 8.42), are not within the scope of this document.\
    \  To\n   facilitate interoperability, it is RECOMMENDED that the rating input\n\
    \   and the values of the Service-Context-Id be coordinated via an\n   informational\
    \ RFC or other permanent and readily available reference\n   (preferably that\
    \ of another cooperative standardization body, e.g.,\n   3GPP, the Open Mobile\
    \ Alliance (OMA), or 3GPP2).  However, private\n   services may be deployed that\
    \ are subject to agreements between\n   providers of the credit-control server\
    \ and client.  In this case,\n   vendor-specific AVPs can be used.\n   This specification,\
    \ together with the above-mentioned service-\n   specific documents, governs the\
    \ credit-control message.  Service-\n   specific documents (i.e., those documents\
    \ that do not define new\n   credit-control applications) define which existing\
    \ AVPs or new AVPs\n   are used as input to the rating process; thus, the AVPs\
    \ in question\n   have to be included in the Credit-Control-Request command by\
    \ a\n   Diameter Credit-Control client supporting a given service as\n   \"* [AVP]\"\
    .  Should the Service-Parameter-Info AVP be used, the\n   service-specific document\
    \ MUST specify the exact content of this\n   Grouped AVP.\n   The Service-Context-Id\
    \ AVP MUST be included at the command level of a\n   Credit-Control-Request to\
    \ identify the service-specific document that\n   applies to the request.  The\
    \ specific service or rating-group the\n   request relates to is uniquely identified\
    \ by the combination of\n   Service-Context-Id and Service-Identifier or rating-group.\n"
- title: 4.1.3.  Handling of Unsupported/Incorrect Rating Input
  contents:
  - "4.1.3.  Handling of Unsupported/Incorrect Rating Input\n   Diameter Credit-Control\
    \ implementations are required to support\n   mandatory rating-related AVPs defined\
    \ in service-specific documents\n   for the services they support, according to\
    \ the 'M' bit rules in\n   [RFC6733].\n   If a rating input required for the rating\
    \ process is incorrect in\n   the Credit-Control-Request or if the credit-control\
    \ server does not\n   support the requested service context (identified by the\n\
    \   Service-Context-Id AVP at the command level), the\n   Credit-Control-Answer\
    \ MUST contain the error code\n   DIAMETER_RATING_FAILED.  A CCA message with\
    \ this error MUST contain\n   one or more Failed-AVP AVPs containing the missing\
    \ and/or unsupported\n   AVPs that caused the failure.  A Diameter Credit-Control\
    \ client that\n   receives the error code DIAMETER_RATING_FAILED in response to\
    \ a\n   request MUST NOT send similar requests in the future.\n"
- title: 4.1.4.  RADIUS Vendor-Specific Rating Attributes
  contents:
  - "4.1.4.  RADIUS Vendor-Specific Rating Attributes\n   When service-specific documents\
    \ include RADIUS vendor-specific\n   attributes that could be used as input in\
    \ the rating process, the\n   rules described in [RFC7155] for formatting the\
    \ Diameter AVP MUST be\n   followed.\n   For example, if the AVP code used is\
    \ the vendor attribute type code,\n   the Vendor-Specific flag MUST be set to\
    \ 1 and the Vendor-Id MUST be\n   set to the IANA Vendor identification value.\
    \  The Diameter AVP Data\n   field contains only the attribute value of the RADIUS\
    \ attribute.\n"
- title: 5.  Session-Based Credit-Control
  contents:
  - '5.  Session-Based Credit-Control

    '
- title: 5.1.  General Principles
  contents:
  - "5.1.  General Principles\n   For session-based credit-control, several interrogations\
    \ are needed:\n   the first, the intermediate (optional), and the final.  This\
    \ is\n   illustrated in Figures 3 and 4 (Sections 5.2.1 and 5.2.2).\n   If the\
    \ credit-control client performs credit reservation before\n   granting service\
    \ to the end user, it MUST use several interrogations\n   toward the credit-control\
    \ server (i.e., session-based\n   credit-control).  In this case, the credit-control\
    \ server MUST\n   maintain the credit-control session state.\n   Each credit-control\
    \ session MUST have a globally unique Session-Id as\n   defined in [RFC6733];\
    \ this Session-Id MUST NOT be changed during the\n   lifetime of a credit-control\
    \ session.\n   Certain applications require multiple credit-control sub-sessions.\n\
    \   These applications would send messages with a constant Session-Id AVP\n  \
    \ but with a different CC-Sub-Session-Id AVP.  If several credit\n   sub-sessions\
    \ will be used, all sub-sessions MUST be closed separately\n   before the main\
    \ session is closed so that units per sub-session may\n   be reported.  The absence\
    \ of the CC-Sub-Session-Id AVP implies that\n   no sub-sessions are in use.\n\
    \   Note that the Service Element might send a service-specific\n   re-authorization\
    \ message to the AAA server due to expiration of the\n   authorization lifetime\
    \ during an ongoing credit-control session.\n   However, the service-specific\
    \ re-authorization does not influence the\n   credit authorization that is ongoing\
    \ between the credit-control\n   client and credit-control server, as credit authorization\
    \ is\n   controlled by the burning rate of the granted quota.\n   If service-specific\
    \ re-authorization fails, the user will be\n   disconnected, and the credit-control\
    \ client MUST send a final\n   interrogation to the credit-control server.\n \
    \  The Diameter Credit-Control server may seek to control the validity\n   time\
    \ of the granted quota and/or the production of intermediate\n   interrogations.\
    \  Thus, it MAY include the Validity-Time AVP in the\n   Answer message to the\
    \ credit-control client.  Upon expiration of the\n   Validity-Time, the credit-control\
    \ client MUST generate a\n   credit-control update request and report the used\
    \ quota to the\n   credit-control server.  It is up to the credit-control server\
    \ to\n   determine the value of the Validity-Time to be used for consumption\n\
    \   of the granted service unit(s) (G-S-U).  If the Validity-Time is\n   used,\
    \ its value SHOULD be given as input to set the session\n   supervision timer\
    \ Tcc (the session supervision timer MAY be set to\n   two times the value of\
    \ the Validity-Time, as defined in Section 13).\n   Since credit-control update\
    \ requests are also produced at the expiry\n   of granted service units and/or\
    \ for mid-session service events, the\n   omission of Validity-Time does not mean\
    \ that intermediate\n   interrogation for the purpose of credit-control is not\
    \ performed.\n"
- title: 5.1.1.  Basic Support for Tariff Time Change
  contents:
  - "5.1.1.  Basic Support for Tariff Time Change\n   The Diameter Credit-Control\
    \ server and client MAY optionally support\n   a tariff change mechanism.  The\
    \ Diameter Credit-Control server may\n   include a Tariff-Time-Change AVP in the\
    \ Answer message.  Note that\n   the granted units should be allocated based on\
    \ the worst-case\n   scenario, so that the overall reported used units would never\
    \ exceed\n   the credit reservation.  For example, in the case of a forthcoming\n\
    \   tariff change, in which the new rate is higher, the allocation should\n  \
    \ be given so it does not exceed the credit, assuming that all of it is\n   used\
    \ after the tariff changed.\n   When the Diameter Credit-Control client reports\
    \ the used units and a\n   tariff change has occurred during the reporting period,\
    \ the Diameter\n   Credit-Control client MUST separately itemize the units used\
    \ before\n   and after the tariff change.  If the client is unable to distinguish\n\
    \   whether units straddling the tariff change were used before or after\n   the\
    \ tariff change, the credit-control client MUST itemize those units\n   in a third\
    \ category.\n   If a client does not support the tariff change mechanism and it\n\
    \   receives a CCA message carrying the Tariff-Time-Change AVP, it MUST\n   terminate\
    \ the credit-control session, giving a reason of\n   DIAMETER_BAD_ANSWER in the\
    \ Termination-Cause AVP.\n   For time-based services, the quota is consumed at\
    \ the rate of the\n   passage of real time (ignoring leap seconds).  That is,\
    \ precisely\n   1 second of quota is consumed per second of real time.  At the\
    \ time\n   when credit resources are allocated, the server already knows how\n\
    \   many units will be consumed before the tariff time change and how\n   many\
    \ units will be consumed afterward.  Similarly, the server can\n   determine the\
    \ units consumed at the \"before\" rate and the units\n   consumed at the \"afterward\"\
    \ rate in the event that the end user\n   closes the session before the consumption\
    \ of the allotted quota.\n   There is no need for additional traffic between the\
    \ client and server\n   in the case of tariff time changes for continuous time-based\
    \ service.\n   Therefore, the tariff change mechanism is not used for such services.\n\
    \   For time-based services in which the quota is NOT continuously\n   consumed\
    \ at a regular rate, the tariff change mechanism described for\n   volume and\
    \ event units MAY be used.\n"
- title: 5.1.2.  Credit-Control for Multiple Services within a (Sub-)Session
  contents:
  - "5.1.2.  Credit-Control for Multiple Services within a (Sub-)Session\n   When\
    \ multiple services are used within the same user session and each\n   service\
    \ or group of services is subject to different cost, it is\n   necessary to perform\
    \ credit-control for each service independently.\n   Making use of credit-control\
    \ sub-sessions to achieve independent\n   credit-control will result in increased\
    \ signaling load and usage of\n   resources in both the credit-control client\
    \ and the credit-control\n   server.  For instance, during one network access\
    \ session, the\n   end user may use several HTTP-based services that could be\
    \ charged\n   with different costs.  The network-access-specific attributes, such\n\
    \   as Quality of Service (QoS), are common to all the services carried\n   within\
    \ the access bearer, but the cost of the bearer may vary,\n   depending on its\
    \ content.\n   To support these scenarios optimally, the credit-control application\n\
    \   enables independent credit-control of multiple services in a single\n   credit-control\
    \ (sub-)session.  This is achieved by including the\n   optional Multiple-Services-Credit-Control\
    \ AVP in Credit-Control-\n   Request/Credit-Control-Answer messages.  It is possible\
    \ to request\n   and allocate resources as a credit pool shared between multiple\n\
    \   services.  The services can be grouped into rating-groups in order to\n  \
    \ achieve even further aggregation of credit allocation.  It is also\n   possible\
    \ to request and allocate quotas on a per-service basis.\n   Where quotas are\
    \ allocated to a pool by means of the Multiple-\n   Services-Credit-Control AVP,\
    \ the quotas remain independent objects\n   that can be re-authorized independently\
    \ at any time.  Quotas can also\n   be given independent result codes, validity\
    \ times, and Final-Unit-\n   Indication AVP values or QoS-Final-Unit-Indication\
    \ AVP values.\n   A rating-group gathers a set of services, identified by a Service-\n\
    \   Identifier and subject to the same cost and rating type (e.g.,\n   $0.1/minute).\
    \  It is assumed that the Service Element is provided\n   with rating-groups,\
    \ service-identifiers, and their associated\n   parameters that define what has\
    \ to be metered by means outside the\n   scope of this specification.  (Examples\
    \ of parameters associated to\n   service-identifiers are IP 5-tuples and HTTP\
    \ URLs.)  Service-\n   identifiers enable authorization on a per-service-based\
    \ credit as\n   well as itemized reporting of service usage.  It is up to the\n\
    \   credit-control server whether to authorize credit for one or more\n   services\
    \ or for the whole rating-group.  However, the client SHOULD\n   always report\
    \ used units at the finest supported level of\n   granularity.  Where a quota\
    \ is allocated to a rating-group, all the\n   services belonging to that group\
    \ draw from the allotted quota.\n   Figure 2 provides a graphical representation\
    \ of the relationship\n   between service-identifiers, rating-groups, credit pools,\
    \ and\n   credit-control (sub-)sessions.\n                  Diameter Credit-Control\
    \ (Sub-)Session\n                                  |\n         +------------+-----------+-------------+---------------\
    \ +\n         |            |           |             |                |\n   Service-Id\
    \ a Service-Id b Service-Id c Service-Id d.....Service-Id z\n         \\     \
    \   /                 \\         /                /\n          \\      /     \
    \              \\       /                /\n           \\    /               \
    \   Rating-Group 1.......Rating-Group n\n            \\  /                   \
    \      |                    |\n           Quota       ---------------Quota   \
    \              Quota\n             |        /                                \
    \       |\n             |       /                                        |\n \
    \         Credit Pool                                    Credit Pool\n       \
    \      Figure 2: Multiple-Service (Sub-)Session Example\n   If independent credit-control\
    \ of multiple services is used, the\n   Validity-Time AVP, and the Final-Unit-Indication\
    \ AVP or\n   QoS-Final-Unit-Indication AVP, SHOULD be present either in the\n\
    \   Multiple-Services-Credit-Control AVP(s) or at the command level as\n   single\
    \ AVPs.  However, the Result-Code AVP MAY be present both at the\n   command level\
    \ and within the Multiple-Services-Credit-Control AVP.\n   If the Result-Code\
    \ AVP at the command level indicates a value other\n   than SUCCESS, then the\
    \ Result-Code AVP at the command level takes\n   precedence over any other AVPs\
    \ included in the Multiple-Services-\n   Credit-Control AVP.\n   The credit-control\
    \ client MUST indicate support for independent\n   credit-control of multiple\
    \ services within a (sub-)session by\n   including the Multiple-Services-Indicator\
    \ AVP in the first\n   interrogation.  A credit-control server not supporting\
    \ this feature\n   MUST treat the Multiple-Services-Indicator AVP and any received\n\
    \   Multiple-Services-Credit-Control AVPs as invalid AVPs.\n   If the client indicated\
    \ support for independent credit-control of\n   multiple services, a credit-control\
    \ server that wishes to use the\n   feature MUST return the granted units within\
    \ the Multiple-Services-\n   Credit-Control AVP associated to the corresponding\
    \ service-identifier\n   and/or rating-group.\n   To avoid a situation where several\
    \ parallel (and typically also\n   small) credit reservations must be made on\
    \ the same account (i.e.,\n   credit fragmentation), and also to avoid unnecessary\
    \ load on the\n   credit-control server, it is possible to provide service units\
    \ as a\n   pool that applies to multiple services or rating-groups.  This is\n\
    \   achieved by providing the service units in the form of a quota for a\n   particular\
    \ service or rating-group in the Multiple-Services-Credit-\n   Control AVP, and\
    \ also by including a reference to a credit pool for\n   that unit type.\n   The\
    \ reference includes a multiplier derived from the rating\n   parameter, which\
    \ translates from service units of a specific type to\n   the abstract service\
    \ units in the pool.  For instance, if the rating\n   parameter for service 1\
    \ is $1/MB and the rating parameter for\n   service 2 is $0.5/MB, the multipliers\
    \ could be 10 and 5 for\n   services 1 and 2, respectively.\n   If (1) S is the\
    \ total service units within the pool, (2) M1, M2, ...,\n   Mn are the multipliers\
    \ provided for services 1, 2, ..., n, and\n   (3) C1, C2, ..., Cn are the used\
    \ resources within the session, then\n   the pool's credit is exhausted and re-authorization\
    \ MUST be sought\n   when:\n            C1*M1 + C2*M2 + ... + Cn*Mn >= S\n   The\
    \ total credit in the pool, S, is calculated from the quotas, which\n   are currently\
    \ allocated to the pool as follows:\n            S = Q1*M1 + Q2*M2 + ... + Qn*Mn\n\
    \   If services or rating-groups are added to or removed from the pool,\n   then\
    \ the total credit is adjusted appropriately.  Note that when the\n   total credit\
    \ is adjusted because services or rating-groups are\n   removed from the pool,\
    \ the value that needs to be removed is the\n   consumed one (i.e., Cx*Mx).\n\
    \   Re-authorizations for an individual service or rating-group may be\n   sought\
    \ at any time -- for example, if a \"non-pooled\" quota is used up\n   or the\
    \ Validity-Time expires.\n   Where multiple G-S-U-Pool-Reference AVPs (Section\
    \ 8.30) with the same\n   G-S-U-Pool-Identifier are provided within a Multiple-Services-Credit-\n\
    \   Control AVP (Section 8.16) along with the Granted-Service-Unit AVP,\n   these\
    \ AVPs MUST have different CC-Unit-Type values, and they all draw\n   from the\
    \ credit pool separately.  For instance, if one multiplier for\n   time (M1t)\
    \ and one multiplier for volume (M1v) are given, then the\n   used resources from\
    \ the pool yield the sum of C1t*M1t + C1v*M1v,\n   where C1t is the time unit\
    \ and C1v is the volume unit.\n   Where service units are provided within a Multiple-Services-Credit-\n\
    \   Control AVP without a corresponding G-S-U-Pool-Reference AVP, these\n   units\
    \ are handled independently from any credit pools and from any\n   other services\
    \ or rating-groups within the session.\n   The \"credit pool\" concept is an optimal\
    \ tool to avoid the\n   over-reservation effect of the basic single-quota tariff\
    \ time change\n   mechanism (Section 5.1.1).  Therefore, Diameter Credit-Control\n\
    \   clients and servers implementing the independent credit-control of\n   multiple\
    \ services SHOULD leverage the credit pool concept when\n   supporting the tariff\
    \ time change.  The Diameter Credit-Control\n   server SHOULD include both the\
    \ Tariff-Time-Change AVP and the\n   Tariff-Change-Usage AVP in two quota allocations\
    \ in the Answer\n   message (i.e., two instances of the Multiple-Services-Credit-Control\n\
    \   AVP).  One of the grants is allocated to be used before the potential\n  \
    \ tariff change, while the second grant is for use after a tariff\n   change.\
    \  Both granted unit quotas MUST contain the same Service-\n   Identifier and/or\
    \ rating-group.  This dual-quota mechanism ensures\n   that the overall reported\
    \ used units would never exceed the credit\n   reservation.  The Diameter Credit-Control\
    \ client reports the used\n   units both before and after the tariff change in\
    \ a single instance of\n   the Multiple-Services-Credit-Control AVP.\n   Failure\
    \ handling for credit-control sessions is defined in\n   Section 5.7 and reflected\
    \ in the basic credit-control state machines\n   defined in Section 7.  Credit-control\
    \ clients and servers\n   implementing the functionality of independent credit-control\
    \ of\n   multiple services in a (sub-)session MUST ensure failure handling and\n\
    \   general behavior fully consistent with Sections 5.7 and 7 while\n   maintaining\
    \ the ability to handle parallel ongoing credit\n   re-authorization within a\
    \ (sub-)session.  Therefore, it is\n   RECOMMENDED that Diameter Credit-Control\
    \ clients maintain a PendingU\n   message queue (Section 7) and restart the Tx\
    \ timer (Section 13) every\n   time a CCR message with the value UPDATE_REQUEST\
    \ is sent while they\n   are in PendingU state.  When answers to all pending messages\
    \ are\n   received, the state machine moves to Open state, and the Tx timer is\n\
    \   stopped.  Naturally, when a problem is detected and acted upon per\n   Section\
    \ 5.7, all of the ongoing services are affected (e.g., failover\n   to a backup\
    \ server affects all of the CCR messages in the PendingU\n   queue).\n   Since\
    \ the client may send CCR messages with the value UPDATE_REQUEST\n   while in\
    \ PendingU state (i.e., without waiting for an answer to\n   ongoing credit re-authorization),\
    \ the time space between these\n   requests may be very short, and the server\
    \ may not have received the\n   previous request(s) yet.  Therefore, in this situation\
    \ the server may\n   receive out-of-sequence requests and SHOULD NOT consider\
    \ this an\n   error condition.  A proper answer is to be returned to each of those\n\
    \   requests.\n"
- title: 5.2.  First Interrogation
  contents:
  - "5.2.  First Interrogation\n   When session-based credit-control is required (e.g.,\
    \ the\n   authentication server indicated a prepaid user), the first\n   interrogation\
    \ MUST be sent before the Diameter Credit-Control client\n   allows any service\
    \ events for the end user.  The CC-Request-Type AVP\n   is set to the value INITIAL_REQUEST\
    \ in the request message.\n   If the Diameter Credit-Control client knows the\
    \ cost of the service\n   event (e.g., a content server delivering ringing tones\
    \ may know their\n   cost) the monetary amount to be charged is included in the\
    \ Requested-\n   Service-Unit AVP.  If the Diameter Credit-Control client does\
    \ not\n   know the cost of the service event, the Requested-Service-Unit AVP\n\
    \   MAY contain the number of requested service events.  Where the\n   Multiple-Services-Credit-Control\
    \ AVP is used, it MUST contain the\n   Requested-Service-Unit AVP to indicate\
    \ that the quota for the\n   associated service/rating-group is requested.  In\
    \ the case of\n   multiple services, the Service-Identifier AVP or the Rating-Group\
    \ AVP\n   within the Multiple-Services-Credit-Control AVP always indicates the\n\
    \   service concerned.  Additional service event information to be rated\n   MAY\
    \ be sent as service-specific AVPs or MAY be sent within the\n   Service-Parameter-Info\
    \ AVP at the command level.  The\n   Service-Context-Id AVP indicates the service-specific\
    \ document\n   applicable to the request.\n   The Event-Timestamp AVP SHOULD be\
    \ included in the request and\n   contains the time when the service event is\
    \ requested in the Service\n   Element.  The Subscription-Id AVP or the Subscription-Id-Extension\n\
    \   AVP SHOULD be included to identify the end user in the credit-control\n  \
    \ server.  The credit-control client MAY include the User-Equipment-\n   Info\
    \ AVP or User-Equipment-Info-Extension AVP so that the\n   credit-control server\
    \ has some indication of the type and\n   capabilities of the end-user access\
    \ device.  How the credit-control\n   server uses this information is outside\
    \ the scope of this document.\n   The credit-control server SHOULD rate the service\
    \ event and make a\n   credit reservation from the end user's account that covers\
    \ the cost\n   of the service event.  If the type of the Requested-Service-Unit\
    \ AVP\n   is \"money\", no rating is needed, but the corresponding monetary\n\
    \   amount is reserved from the end user's account.\n   The credit-control server\
    \ returns the Granted-Service-Unit AVP in the\n   Answer message to the Diameter\
    \ Credit-Control client.  The Granted-\n   Service-Unit AVP contains the amount\
    \ of service units that the\n   Diameter Credit-Control client can provide to\
    \ the end user until a\n   new Credit-Control-Request MUST be sent to the credit-control\
    \ server.\n   If several unit types are sent in the Answer message, the\n   credit-control\
    \ client MUST handle each unit type separately.  The\n   type of the Granted-Service-Unit\
    \ AVP can be time, volume, service-\n   specific, or money, depending on the type\
    \ of service event.  The unit\n   type(s) SHOULD NOT be changed within an ongoing\
    \ credit-control\n   session.\n   There MUST be a maximum of one instance of the\
    \ same unit type in one\n   Answer message.  However, if multiple quotas are conveyed\
    \ to the\n   credit-control client in the Multiple-Services-Credit-Control AVPs,\n\
    \   it is possible to carry two instances of the same unit type\n   associated\
    \ to a service-identifier/rating-group.  This is typically\n   the case when a\
    \ tariff time change is expected and the credit-control\n   server wants to make\
    \ a distinction between the granted quota before\n   the tariff change and the\
    \ granted quota after the tariff change.\n   If the credit-control server determines\
    \ that no further control is\n   needed for the service, it MAY include the result\
    \ code indicating\n   that the credit-control is not applicable (e.g., if the\
    \ service is\n   free of charge).  This result code, at the command level, implies\n\
    \   that the credit-control session is to be terminated.\n   The Credit-Control-Answer\
    \ message MAY also include the Final-Unit-\n   Indication AVP or the QoS-Final-Unit-Indication\
    \ AVP to indicate that\n   the Answer message contains the final units for the\
    \ service.  After\n   the end user has consumed these units, the Diameter Credit-Control\n\
    \   client MUST behave as described in Section 5.6.\n   This document defines\
    \ two different approaches for performing the\n   first interrogation to be used\
    \ in different network architectures.\n   The first approach uses credit-control\
    \ messages after the user's\n   authorization and authentication take place. \
    \ The second approach\n   uses (1) service-specific authorization messages to\
    \ perform the first\n   interrogation during the user's authorization/authentication\
    \ phase\n   and (2) credit-control messages for the intermediate and final\n \
    \  interrogations.  If an implementation of the credit-control client\n   supports\
    \ both methods, determining which method to use SHOULD be\n   configurable.\n\
    \   In service environments such as NAS environments, it is desired to\n   perform\
    \ the first interrogation as part of the authorization/\n   authentication process\
    \ for the sake of protocol efficiency.  Further\n   credit authorizations after\
    \ the first interrogation are performed\n   with credit-control commands defined\
    \ in this specification.\n   Implementations of credit-control clients operating\
    \ in the\n   environments mentioned in this document SHOULD support this method.\n\
    \   If the credit-control server and AAA server are separate physical\n   entities,\
    \ the Service Element sends the request messages to the AAA\n   server, which\
    \ then issues an appropriate request or proxies the\n   received request forward\
    \ to the credit-control server.\n   In other service environments, such as the\
    \ 3GPP network and some SIP\n   scenarios, there is a substantial decoupling between\
    \ registration/\n   access to the network and the actual service request (i.e.,\
    \ the\n   authentication/authorization is executed once during registration/\n\
    \   access to the network and is not executed for every service event\n   requested\
    \ by the subscriber).  In these environments, it is more\n   appropriate to perform\
    \ the first interrogation after the user has\n   been authenticated and authorized.\
    \  The first, intermediate, and\n   final interrogations are executed with credit-control\
    \ commands\n   defined in this specification.\n   Other IETF standards or standards\
    \ developed by other standardization\n   bodies may define the most suitable method\
    \ in their architectures.\n"
- title: 5.2.1.  First Interrogation after Authorization and Authentication
  contents:
  - "5.2.1.  First Interrogation after Authorization and Authentication\n   The Diameter\
    \ Credit-Control client in the Service Element may get\n   information from the\
    \ authorization server as to whether\n   credit-control is required, based on\
    \ its knowledge of the end user.\n   If credit-control is required, the credit-control\
    \ server needs to be\n   contacted prior to initiating service delivery to the\
    \ end user.  The\n   accounting protocol and the credit-control protocol can be\
    \ used in\n   parallel.  The authorization server may also determine whether the\n\
    \   parallel accounting stream is required.\n   Figure 3 illustrates the case\
    \ where both protocols are used in\n   parallel and the Service Element sends\
    \ credit-control messages\n   directly to the credit-control server.  More credit-control\
    \ sequence\n   examples are given in Appendix A.\n                           \
    \               Diameter\n   End User      Service Element          AAA Server\
    \          CC Server\n                    (CC Client)\n     | Registration   \
    \   | AA-Request/Answer(accounting, CC, or both)|\n     |<----------------->|<------------------>|\
    \                      |\n     |        :          |                    |    \
    \                  |\n     |        :          |                    |        \
    \              |\n     | Service Request   |                    |            \
    \          |\n     |------------------>|                    |                \
    \      |\n     |                   | CCR(Initial, Credit-Control AVPs)       \
    \  |\n     |                  +|------------------------------------------>|\n\
    \     |         CC stream||                    |    CCA(Granted-Units)|\n    \
    \ |                  +|<------------------------------------------|\n     | Service\
    \ Delivery  |                    |                      |\n     |<----------------->|\
    \ ACR(start, Accounting AVPs)               |\n     |         :         |------------------->|+\
    \                     |\n     |         :         |                ACA ||  Accounting\
    \ stream  |\n     |                   |<-------------------|+                \
    \     |\n     |         :         |                    |                     \
    \ |\n     |         :         |                    |                      |\n\
    \     |                   | CCR(Update, Used-Units)                   |\n    \
    \ |                   |------------------------------------------>|\n     |  \
    \                 |                    |    CCA(Granted-Units)|\n     |      \
    \             |<------------------------------------------|\n     |         :\
    \         |                    |                      |\n     |         :    \
    \     |                    |                      |\n     | End of Service   \
    \ |                    |                      |\n     |------------------>| CCR(Termination,\
    \ Used-Units)              |\n     |                   |------------------------------------------>|\n\
    \     |                   |                    |                 CCA  |\n    \
    \ |                   |<------------------------------------------|\n     |  \
    \                 | ACR(stop)          |                      |\n     |      \
    \             |------------------->|                      |\n     |          \
    \         |                ACA |                      |\n     |              \
    \     |<-------------------|                      |\n     ACR: Accounting-Request\n\
    \     ACA: Accounting-Answer\n            Figure 3: Protocol Example with First\
    \ Interrogation\n                 after User's Authorization/Authentication\n"
- title: 5.2.2.  First Interrogation Included with Authorization Messages
  contents:
  - "5.2.2.  First Interrogation Included with Authorization Messages\n   The Diameter\
    \ Credit-Control client in the Service Element MUST\n   actively co-operate with\
    \ the authorization/authentication client in\n   the construction of the AA-Request\
    \ by adding appropriate\n   Credit-Control AVPs.  The credit-control client MUST\
    \ add the\n   Credit-Control AVP to indicate credit-control capabilities and MAY\n\
    \   add other relevant credit-control-specific AVPs to the proper\n   authorization/authentication\
    \ command to perform the first\n   interrogation toward the home Diameter AAA\
    \ server.  The\n   Auth-Application-Id is set to the appropriate value, as defined\
    \ in\n   service-specific authorization/authentication application document\n\
    \   (e.g., [RFC7155] [RFC4004]).  The home Diameter AAA server\n   authenticates/authorizes\
    \ the subscriber and determines whether\n   credit-control is required.\n   If\
    \ credit-control is not required for the subscriber, the home\n   Diameter AAA\
    \ server will respond as usual, with an appropriate\n   AA-Answer message.  If\
    \ credit-control is required for the subscriber\n   and the Credit-Control AVP\
    \ with the value set to CREDIT_AUTHORIZATION\n   was present in the authorization\
    \ request, the home AAA server MUST\n   contact the credit-control server to perform\
    \ the first interrogation.\n   If credit-control is required for the subscriber\
    \ and the\n   Credit-Control AVP was not present in the authorization request,\
    \ the\n   home AAA server MUST send an authorization reject Answer message.\n\
    \   The Diameter AAA server supporting credit-control is required to send\n  \
    \ the Credit-Control-Request command (CCR) defined in this document to\n   the\
    \ credit-control server.  The Diameter AAA server populates the CCR\n   based\
    \ on service-specific AVPs used for input to the rating process,\n   and possibly\
    \ on Credit-Control AVPs received in the AA-Request.  The\n   credit-control server\
    \ will reserve money from the user's account,\n   will rate the request, and will\
    \ send a Credit-Control-Answer message\n   to the home Diameter AAA server.  The\
    \ Answer message includes the\n   Granted-Service-Unit AVP(s) and MAY include\
    \ other credit-control-\n   specific AVPs, as appropriate.  Additionally, the\
    \ credit-control\n   server MAY set the Validity-Time and MAY include the CCFH\
    \ and the\n   DDFH to determine what to do if the sending of credit-control\n\
    \   messages to the credit-control server has been temporarily prevented.\n  \
    \ Upon receiving the Credit-Control-Answer message from the\n   credit-control\
    \ server, the home Diameter AAA server will populate the\n   AA-Answer with the\
    \ received Credit-Control AVPs and with the\n   appropriate service attributes\
    \ according to the authorization/\n   authentication-specific application (e.g.,\
    \ [RFC7155] [RFC4004]).  It\n   will then forward the packet to the credit-control\
    \ client.  If the\n   home Diameter AAA server receives a credit-control reject\
    \ message, it\n   will simply generate an appropriate authorization reject message\
    \ to\n   the credit-control client, including the credit-control-specific\n  \
    \ error code.\n   In this model, the credit-control client sends further credit-control\n\
    \   messages to the credit-control server via the home Diameter AAA\n   server.\
    \  Upon receiving a successful authorization Answer message\n   with the Granted-Service-Unit\
    \ AVP(s), the credit-control client will\n   grant the service to the end user\
    \ and will generate an intermediate\n   Credit-Control-Request, if required, by\
    \ using credit-control\n   commands.  The CC-Request-Number of the first UPDATE_REQUEST\
    \ MUST be\n   set to 1 (for details regarding how to produce a unique value for\
    \ the\n   CC-Request-Number AVP, see Section 8.2).\n   If service-specific re-authorization\
    \ is performed (i.e., the\n   authorization lifetime expires), the credit-control\
    \ client MUST add\n   to the service-specific re-authorization request the Credit-Control\n\
    \   AVP with a value set to RE_AUTHORIZATION to indicate that the\n   credit-control\
    \ server MUST NOT be contacted.  When session-based\n   credit-control is used\
    \ for the subscriber, a constant credit-control\n   message stream flows through\
    \ the home Diameter AAA server.  The home\n   Diameter AAA server can make use\
    \ of this credit-control message flow\n   to deduce that the user's activity is\
    \ ongoing; therefore, it is\n   recommended to set the authorization lifetime\
    \ to a reasonably high\n   value when credit-control is used for the subscriber.\n\
    \   In this scenario, the home Diameter AAA server MUST advertise support\n  \
    \ for the credit-control application to its peers during the capability\n   exchange\
    \ process.\n   Figure 4 illustrates the use of authorization/authentication messages\n\
    \   to perform the first interrogation.  The parallel accounting stream\n   is\
    \ not shown in the figure.\n                                            Diameter\n\
    \                  Service Element           AAA Server        CC Server\n   End\
    \ User          (CC Client)\n    | Service Request   | AA-Request (CC AVPs) |\
    \                     |\n    |------------------>|--------------------->|    \
    \                 |\n    |                   |                      | CCR(Initial,\
    \ CC AVPs)\n    |                   |                      |-------------------->|\n\
    \    |                   |                      |   CCA(Granted-Units)|\n    |\
    \                   |                      |<--------------------|\n    |    \
    \               | AA-Answer(Granted-Units)                   |\n    | Service\
    \ Delivery  |<---------------------|                     |\n    |<----------------->|\
    \                      |                     |\n    |         :         |    \
    \                  |                     |\n    |         :         |        \
    \              |                     |\n    |         :         |            \
    \          |                     |\n    |                   |                \
    \      |                     |\n    |                   | CCR(Update, Used-Units)\
    \                    |\n    |                   |--------------------->| CCR(Update,\
    \ Used-Units)\n    |                   |                      |-------------------->|\n\
    \    |                   |                      |   CCA(Granted-Units)|\n    |\
    \                   |    CCA(Granted-Units)|<--------------------|\n    |    \
    \               |<---------------------|                     |\n    |        \
    \ :         |                      |                     |\n    |         :  \
    \       |                      |                     |\n    | End of Service \
    \   |                      |                     |\n    |------------------>|\
    \ CCR(Termination, Used-Units)               |\n    |                   |--------------------->|\
    \ CCR(Term., Used-Units)\n    |                   |                      |-------------------->|\n\
    \    |                   |                      |                 CCA |\n    |\
    \                   |                  CCA |<--------------------|\n    |    \
    \               |<---------------------|                     |\n       Figure\
    \ 4: Protocol Example with Use of Authorization Messages\n                   \
    \     for the First Interrogation\n"
- title: 5.3.  Intermediate Interrogation
  contents:
  - "5.3.  Intermediate Interrogation\n   When all the granted service units for one\
    \ unit type are spent by the\n   end user or the Validity-Time has expired, the\
    \ Diameter\n   Credit-Control client MUST send a new Credit-Control-Request to\
    \ the\n   credit-control server.  In the event that credit-control for multiple\n\
    \   services is applied in one credit-control session (i.e., units\n   associated\
    \ to Service-Identifier(s) or the rating-group are granted),\n   a new Credit-Control-Request\
    \ MUST be sent to the credit-control\n   server when the credit reservation has\
    \ been wholly consumed or upon\n   expiration of the Validity-Time.  It is always\
    \ up to the Diameter\n   Credit-Control client to send a new request well in advance\
    \ of the\n   expiration of the previous request in order to avoid interruption\
    \ in\n   the Service Element.  Even if the granted service units reserved by\n\
    \   the credit-control server have not been spent upon expiration of the\n   Validity-Time,\
    \ the Diameter Credit-Control client MUST send a new\n   Credit-Control-Request\
    \ to the credit-control server.\n   There can also be mid-session service events,\
    \ which might affect the\n   rating of the current service events.  In this case,\
    \ a spontaneous\n   update (a new Credit-Control-Request) SHOULD be sent, including\n\
    \   information related to the service event, even if all the granted\n   service\
    \ units have not been spent or the Validity-Time has not\n   expired.\n   When\
    \ the used units are reported to the credit-control server, the\n   credit-control\
    \ client will not have any units in its possession\n   before new granted units\
    \ are received from the credit-control server.\n   When the new granted units\
    \ are received, these units apply from the\n   point where the measurement of\
    \ the reported used units stopped.\n   Where independent credit-control of multiple\
    \ services is supported,\n   this process may be executed for one or more services,\
    \ a single\n   rating-group, or a pool within the (sub-)session.\n   The CC-Request-Type\
    \ AVP is set to the value UPDATE_REQUEST in the\n   intermediate request message.\
    \  The Subscription-Id AVP or\n   Subscription-Id-Extension AVP SHOULD be included\
    \ in the intermediate\n   message to identify the end user in the credit-control\
    \ server.  The\n   Service-Context-Id AVP indicates the service-specific document\n\
    \   applicable to the request.\n   The Requested-Service-Unit AVP MAY contain\
    \ the new amount of\n   requested service units.  Where the Multiple-Services-Credit-Control\n\
    \   AVP is used, it MUST contain the Requested-Service-Unit AVP if a new\n   quota\
    \ is requested for the associated service/rating-group.  The\n   Used-Service-Unit\
    \ AVP contains the amount of used service units\n   measured from the point when\
    \ the service became active or, if interim\n   interrogations are used during\
    \ the session, from the point when the\n   previous measurement ended.  The same\
    \ unit types used in the previous\n   message SHOULD be used.  If several unit\
    \ types were included in the\n   previous Answer message, the used service units\
    \ for each unit type\n   MUST be reported.\n   The Event-Timestamp AVP SHOULD\
    \ be included in the request and\n   contains the time of the event that triggered\
    \ the sending of the new\n   Credit-Control-Request.\n   The credit-control server\
    \ MUST deduct the used amount from the\n   end user's account.  It MAY rate the\
    \ new request and make a new\n   credit reservation from the end user's account\
    \ that covers the cost\n   of the requested service event.\n   A Credit-Control-Answer\
    \ message with the CC-Request-Type AVP set to\n   the value UPDATE_REQUEST MAY\
    \ include the Cost-Information AVP\n   containing the accumulated cost estimation\
    \ for the session, without\n   taking any credit reservations into account.\n\
    \   The Credit-Control-Answer message MAY also include the Final-Unit-\n   Indication\
    \ AVP or the QoS-Final-Unit-Indication AVP to indicate that\n   the Answer message\
    \ contains the final units for the service.  After\n   the end user has consumed\
    \ these units, the Diameter Credit-Control\n   client MUST behave as described\
    \ in Section 5.6.\n   There can be several intermediate interrogations within\
    \ a session.\n"
- title: 5.4.  Final Interrogation
  contents:
  - "5.4.  Final Interrogation\n   When the end user terminates the service session\
    \ or when graceful\n   service termination (described in Section 5.6) takes place,\
    \ the\n   Diameter Credit-Control client MUST send a final Credit-Control-\n \
    \  Request message to the credit-control server.  The CC-Request-Type\n   AVP\
    \ is set to the value TERMINATION_REQUEST.  The Service-Context-Id\n   AVP indicates\
    \ the service-specific document applicable to the\n   request.\n   The Event-Timestamp\
    \ AVP SHOULD be included in the request and\n   contains the time when the session\
    \ was terminated.\n   The Used-Service-Unit AVP contains the amount of used service\
    \ units\n   measured from the point when the service became active or, if interim\n\
    \   interrogations are used during the session, from the point when the\n   previous\
    \ measurement ended.  If several unit types were included in\n   the previous\
    \ Answer message, the used service units for each unit\n   type MUST be reported.\n\
    \   After final interrogation, the credit-control server MUST refund the\n   reserved\
    \ credit amount not used to the end user's account and deduct\n   the used monetary\
    \ amount from the end user's account.\n   A Credit-Control-Answer message with\
    \ the CC-Request-Type AVP set to\n   the value TERMINATION_REQUEST MAY include\
    \ the Cost-Information AVP\n   containing the estimated total cost for the session\
    \ in question.\n   If the user logs off during an ongoing credit-control session\
    \ or if\n   the user becomes logged off for some other reason (e.g., a final-unit\n\
    \   indication causes user logoff according to local policy), the Service\n  \
    \ Element, according to application-specific policy, may send a\n   Session-Termination-Request\
    \ (STR) to the home Diameter AAA server as\n   usual [RFC6733].  Figure 5 illustrates\
    \ the case when the final-unit\n   indication causes user logoff upon consumption\
    \ of the final granted\n   units and the generation of an STR.\n   The Diameter\
    \ AAA server responds with a Session-Termination-Answer\n   (STA).\n         \
    \        Service Element         AAA Server         CC Server\n   End User   \
    \     (CC Client)\n    | Service Delivery  |                     |           \
    \          |\n    |<----------------->|                     |                \
    \     |\n    |         :         |                     |                     |\n\
    \    |         :         |                     |                     |\n    |\
    \         :         |                     |                     |\n    |     \
    \              |                     |                     |\n    |          \
    \         | CCR(Update, Used-Units)                   |\n    |               \
    \    |-------------------->| CCR(Update, Used-Units)\n    |                  \
    \ |                     |-------------------->|\n    |                   |   \
    \                CCA(Final-Unit, Terminate)\n    |               CCA(Final-Unit,\
    \ Terminate)|<--------------------|\n    |                   |<--------------------|\
    \                     |\n    |         :         |                     |     \
    \                |\n    |         :         |                     |          \
    \           |\n    |  Disconnect user  |                     |               \
    \      |\n    |<------------------| CCR(Termination, Used-Units)             \
    \ |\n    |                   |-------------------->| CCR(Term., Used-Units)\n\
    \    |                   |                     |-------------------->|\n    |\
    \                   |                     |                 CCA |\n    |     \
    \              |                 CCA |<--------------------|\n    |          \
    \         |<--------------------|                     |\n    |               \
    \    | STR                 |                     |\n    |                   |-------------------->|\
    \                     |\n    |                   |                STA  |     \
    \                |\n    |                   |<--------------------|          \
    \           |\n           Figure 5: User Disconnected Due to Exhausted Account\n"
- title: 5.5.  Server-Initiated Credit Re-authorization
  contents:
  - "5.5.  Server-Initiated Credit Re-authorization\n   The Diameter Credit-Control\
    \ application supports server-initiated\n   re-authorization.  The credit-control\
    \ server MAY optionally initiate\n   the credit re-authorization by issuing a\
    \ Re-Auth-Request (RAR) as\n   defined in the Diameter base protocol [RFC6733].\
    \  The\n   Auth-Application-Id in the RAR message is set to 4 to indicate\n  \
    \ \"Diameter Credit Control\", and the Re-Auth-Request-Type is set to\n   AUTHORIZE_ONLY.\n\
    \   Section 5.1.2 defines the feature to enable credit-control for\n   multiple\
    \ services within a single (sub-)session where the server can\n   authorize credit\
    \ usage at a different level of granularity.  Further,\n   the server may provide\
    \ credit resources to multiple services or\n   rating-groups as a pool (see Section\
    \ 5.1.2 for details and\n   definitions).  Therefore, the server, based on its\
    \ service logic and\n   its knowledge of the ongoing session, can decide to request\
    \ credit\n   re-authorization for a whole (sub-)session, a single credit pool,\
    \ a\n   single service, or a single rating-group.  To request credit\n   re-authorization\
    \ for a credit pool, the server includes in the RAR\n   message the G-S-U-Pool-Identifier\
    \ AVP indicating the affected pool.\n   To request credit re-authorization for\
    \ a service or a rating-group,\n   the server includes in the RAR message the\
    \ Service-Identifier AVP or\n   the Rating-Group AVP, respectively.  To request\
    \ credit\n   re-authorization for all the ongoing services within the\n   (sub-)session,\
    \ the server includes none of the above-mentioned AVPs\n   in the RAR message.\n\
    \   If a credit re-authorization is not already ongoing (i.e., the\n   credit-control\
    \ session is in Open state), a credit-control client\n   that receives an RAR\
    \ message with Session-Id equal to a currently\n   active credit-control session\
    \ MUST acknowledge the request by sending\n   the Re-Auth-Answer (RAA) message\
    \ and MUST initiate the credit\n   re-authorization toward the server by sending\
    \ a Credit-Control-\n   Request message with the CC-Request-Type AVP set to the\
    \ value\n   UPDATE_REQUEST.  The Result-Code 2002 (DIAMETER_LIMITED_SUCCESS)\n\
    \   SHOULD be used in the RAA message to indicate that an additional\n   message\
    \ (i.e., a CCR message with the value UPDATE_REQUEST) is\n   required to complete\
    \ the procedure.  If a quota was allocated to the\n   service, the credit-control\
    \ client MUST report the used quota in the\n   Credit-Control-Request.  Note that\
    \ the end user does not need to be\n   prompted for the credit re-authorization,\
    \ since the credit\n   re-authorization is transparent to the user (i.e., it takes\
    \ place\n   exclusively between the credit-control client and the credit-control\n\
    \   server).\n   Where multiple services in a user's session are supported, the\n\
    \   procedure in the above paragraph will be executed at the granularity\n   requested\
    \ by the server in the RAR message.\n   If credit re-authorization is ongoing\
    \ at the time when the RAR\n   message is received (i.e., an RAR-CCR collision),\
    \ the credit-control\n   client successfully acknowledges the request but does\
    \ not initiate a\n   new credit re-authorization.  The Result-Code 2001 (DIAMETER_SUCCESS)\n\
    \   SHOULD be used in the RAA message to indicate that a credit\n   re-authorization\
    \ procedure is already ongoing (i.e., the client was\n   in PendingU state when\
    \ the RAR was received).  The credit-control\n   server SHOULD process the Credit-Control-Request\
    \ as if it was\n   received in answer to the server-initiated credit re-authorization\n\
    \   and should consider the server-initiated credit re-authorization\n   process\
    \ successful upon reception of the RAA message.\n   When multiple services are\
    \ supported in a user's session, the server\n   may request credit re-authorization\
    \ for a credit pool (or for the\n   (sub-)session) while a credit re-authorization\
    \ is already ongoing for\n   some of the services or rating-groups.  In this case,\
    \ the client\n   acknowledges the server request with an RAA message and MUST\
    \ send a\n   new Credit-Control-Request message to perform re-authorization for\n\
    \   the remaining services/rating-groups.  The Result-Code 2002\n   (DIAMETER_LIMITED_SUCCESS)\
    \ SHOULD be used in the RAA message to\n   indicate that an additional message\
    \ (i.e., a CCR message with the\n   value UPDATE_REQUEST) is required to complete\
    \ the procedure.  The\n   server processes the received requests and returns an\
    \ appropriate\n   answer to both requests.\n   The above-defined procedures are\
    \ enabled for each of the possibly\n   active Diameter Credit-Control sub-sessions.\
    \  The server MAY request\n   re-authorization for an active sub-session by including\
    \ the\n   CC-Sub-Session-Id AVP in the RAR message in addition to the\n   Session-Id\
    \ AVP.\n"
- title: 5.6.  Graceful Service Termination
  contents:
  - "5.6.  Graceful Service Termination\n   When the user's account runs out of money,\
    \ the user may not be\n   allowed to compile additional chargeable events.  However,\
    \ the home\n   service provider may offer some services -- for instance, access\
    \ to a\n   service portal where it is possible to refill the account -- from\n\
    \   which the user is allowed to benefit for a limited time.  The length\n   of\
    \ this time is usually dependent on the home service provider\n   policy.\n  \
    \ This section defines the optional graceful service termination\n   feature.\
    \  This feature MAY be supported by the credit-control server.\n   Credit-control\
    \ client implementations MUST support the Final-Unit-\n   Indication AVP or QoS-Final-Unit-Indication\
    \ AVP with at least the\n   teardown of the ongoing service session once the subscriber\
    \ has\n   consumed all the final granted units.\n   Where independent credit-control\
    \ of multiple services in a single\n   credit-control (sub-)session is supported,\
    \ it is possible to use\n   graceful service termination for each of the services/rating-groups\n\
    \   independently.  Naturally, the graceful service termination process\n   defined\
    \ in the following subsections will apply to the specific\n   service/rating-group\
    \ as requested by the server.\n   In some service environments (e.g., NAS), graceful\
    \ service\n   termination may be used to redirect the subscriber to a service\n\
    \   portal for online balance refill or other services offered by the\n   home\
    \ service provider.  In this case, the graceful service\n   termination process\
    \ installs a set of packet filters to restrict the\n   user's access capability\
    \ only to/from the specified destinations.\n   All the IP packets not matching\
    \ the filters will be dropped or,\n   possibly, redirected to the service portal.\
    \  The user may also be\n   sent an appropriate notification as to why the access\
    \ has been\n   limited.  These actions may be communicated explicitly from the\n\
    \   server to the client or may be configured \"per service\" at the\n   client.\
    \  Explicitly signaled redirection or restriction instructions\n   always take\
    \ precedence over configured ones.\n   It is also possible to use graceful service\
    \ termination to connect\n   the prepaid user to a top-up server that plays an\
    \ announcement and\n   prompts the user to replenish the account.  In this case,\
    \ the\n   credit-control server sends only the address of the top-up server\n\
    \   where the prepaid user shall be connected after the final granted\n   units\
    \ have been consumed.  An example of this case is given in\n   Appendix A.7.\n\
    \   The credit-control server MAY initiate graceful service termination\n   by\
    \ including the Final-Unit-Indication AVP or the\n   QoS-Final-Unit-Indication\
    \ AVP in the Credit-Control-Answer to\n   indicate that the message contains the\
    \ final units for the service.\n   When the credit-control client receives the\
    \ Final-Unit-Indication AVP\n   or the QoS-Final-Unit-Indication AVP in the answer\
    \ from the server,\n   its behavior depends on the value indicated in the Final-Unit-Action\n\
    \   AVP.  The server may request the following actions: TERMINATE,\n   REDIRECT,\
    \ or RESTRICT_ACCESS.\n   Figure 6 illustrates the graceful service termination\
    \ procedure\n   described in the following subsections.\n                    \
    \                        Diameter\n   End User        Service Element        \
    \  AAA Server         CC Server\n                   (CC Client)\n     |  Service\
    \ Delivery |                     |                     |\n     |<----------------->|\
    \                     |                     |\n     |                   |CCR(Update,\
    \ Used-Units)                    |\n     |                   |-------------------->|CCR(Update,\
    \ Used-Units)\n     |         :         |                     |-------------------->|\n\
    \     |         :         |                     |CCA(Final-Unit, Action)\n   \
    \  |         :         |                     |<--------------------|\n     | \
    \                  |CCA(Final-Unit, Action)                    |\n     |     \
    \              |<--------------------|                     |\n     |         \
    \          |                     |                     |\n     |         :   \
    \      |                     |                     |\n     |         :       \
    \  |                     |                     |\n     | ///////////////   |CCR(Update,\
    \ Used-Units)                    |\n     |/Final Units End/->|-------------------->|CCR(Update,\
    \ Used-Units)\n     |/Action and    //  |                     |-------------------->|\n\
    \     |/Restrictions //   |                     |   CCA(Validity-Time)|\n    \
    \ |/Start       //    |   CCA(Validity-Time)|<--------------------|\n     | /////////////\
    \     |<--------------------|                     |\n     |         :        \
    \ |                     |                     |\n     |         :         |  \
    \                   |                     |\n     |                 Replenish\
    \ account       |     +-------+       |\n     |<--------------------------------------------->|Account|\
    \       |\n     |                   |                     |     +-------+    \
    \   |\n     |                   |                     |                 RAR |\n\
    \     |                 + |                 RAR |<====================|\n    \
    \ |                 | |<====================|                     |\n     |  \
    \               | | RAA                 |                     |\n     |  /////////////\
    \  | |====================>| RAA                 |\n     | /If supported / | |\
    \ CCR(Update)         |====================>|\n     | /by CC Server/  | |====================>|\
    \ CCR(Update)         |\n     | /////////////   | |                     |====================>|\n\
    \     |                 | |                     |   CCA(Granted-Units)|\n    \
    \ |                 | |   CCA(Granted-Units)|<====================|\n     |  Restrictions\
    \ ->+ |<====================|                     |\n     |  removed         \
    \ |                     |                     |\n     |         :         |  \
    \                   |                     |\n     |        OR         | CCR(Update)\
    \         |                     |\n     |   Validity-Time ->|-------------------->|\
    \ CCR(Update)         |\n     |   expires         |                     |-------------------->|\n\
    \     |                   |                     |   CCA(Granted-Units)|\n    \
    \ |                   |   CCA(Granted-Units)|<--------------------|\n     |  \
    \  Restrictions ->|<--------------------|                     |\n     |    removed\
    \        |                     |                     |\n         Figure 6: Optional\
    \ Graceful Service Termination Procedure\n   In addition, the credit-control server\
    \ MAY reply with the Final-Unit-\n   Indication AVP or QoS-Final-Unit-Indication\
    \ AVP holding a Granted-\n   Service-Unit (G-S-U) with a zero grant, indicating\
    \ that the service\n   SHOULD be terminated immediately, and no further reporting\
    \ is\n   required.  Figure 7 illustrates a graceful service termination\n   procedure\
    \ that applies immediately after receiving a zero grant.\n                   \
    \                          Diameter\n   End User        Service Element      \
    \     AAA Server        CC Server\n                   (CC Client)\n     |  Service\
    \ Delivery |                      |                     |\n     |<----------------->|\
    \                      |                     |\n     |                   |CCR(Update,\
    \ Used-Units)                     |\n     |                   |--------------------->|CCR(Update,\
    \ Used-Units)\n     |         :         |                      |-------------------->|\n\
    \     |         :         |                      |CCA(Final-Unit, Action,\n  \
    \   |         :         |                      |            Zero G-S-U)\n    \
    \ |         :         |                      |<--------------------|\n     | \
    \                  |CCA(Final-Unit, Action,                     |\n     |    \
    \               |            Zero G-S-U)                     |\n     |       \
    \            |<---------------------|                     |\n     | ///////////////\
    \   |                      |                     |\n     |/Action and    //  |\
    \                      |                     |\n     |/Restrictions //   |   \
    \                   |                     |\n     |/Start       //    |      \
    \                |                     |\n     | /////////////     |         \
    \             |                     |\n     |         :         |            \
    \          |                     |\n     |         :         |               \
    \       |                     |\n    Figure 7: Optional Immediate Graceful Service\
    \ Termination Procedure\n"
- title: 5.6.1.  Terminate Action
  contents:
  - "5.6.1.  Terminate Action\n   The Final-Unit-Indication AVP or the QoS-Final-Unit-Indication\
    \ AVP\n   with Final-Unit-Action set to TERMINATE does not include any other\n\
    \   information.  When the subscriber has consumed the final granted\n   units,\
    \ the Service Element MUST terminate the service.  This is the\n   default handling\
    \ applicable whenever the credit-control client\n   receives an unsupported Final-Unit-Action\
    \ value and MUST be supported\n   by all the Diameter Credit-Control client implementations\
    \ conforming\n   to this specification.  A final Credit-Control-Request message\
    \ to the\n   credit-control server MUST be sent if the Final-Unit-Indication AVP\n\
    \   or the QoS-Final-Unit-Indication AVP indicating action TERMINATE was\n   present\
    \ at the command level.  The CC-Request-Type AVP in the request\n   is set to\
    \ the value TERMINATION_REQUEST.\n"
- title: 5.6.2.  Redirect Action
  contents:
  - "5.6.2.  Redirect Action\n   The Final-Unit-Indication AVP or the QoS-Final-Unit-Indication\
    \ AVP\n   with Final-Unit-Action set to REDIRECT indicates to the Service\n  \
    \ Element supporting this action that, upon consumption of the final\n   granted\
    \ units, the user MUST be redirected to the address specified\n   in the Redirect-Server\
    \ AVP or Redirect-Server-Extension AVP as\n   follows.\n   The credit-control\
    \ server sends the Redirect-Server AVP or Redirect-\n   Server-Extension AVP in\
    \ the Credit-Control-Answer message.  In such a\n   case, the Service Element\
    \ MUST redirect or connect the user to the\n   destination specified in the Redirect-Server\
    \ AVP or Redirect-Server-\n   Extension AVP, if possible.  When the end user is\
    \ redirected (by\n   using protocols other than Diameter) to the specified server\
    \ or\n   connected to the top-up server, an additional authorization (and\n  \
    \ possibly authentication) may be needed before the subscriber can\n   replenish\
    \ the account; however, this scenario is out of scope for\n   this specification.\n\
    \   In addition to the Redirect-Server AVP or Redirect-Server-Extension\n   AVP,\
    \ the credit-control server MAY include one or more Restriction-\n   Filter-Rule\
    \ AVPs, one or more Filter-Rule AVPs, or one or more\n   Filter-Id AVPs in the\
    \ Credit-Control-Answer message to enable the\n   user to access other services\
    \ (for example, zero-rated services).  In\n   such a case, the access device MUST\
    \ treat all packets according to\n   the Restriction-Filter-Rule AVPs, Filter-Rule\
    \ AVPs, and the rules\n   referred to by the Filter-Id AVP.  After treatment is\
    \ applied\n   according to these rules, all traffic that has not been dropped\
    \ or\n   already forwarded MUST be redirected to the destination specified in\n\
    \   the Redirect-Server AVP or Redirect-Server-Extension AVP.\n   An entity other\
    \ than the credit-control server may provision the\n   access device with appropriate\
    \ IP packet filters to be used in\n   conjunction with the Diameter Credit-Control\
    \ application.  This case\n   is considered in Section 5.6.3.\n   When the final\
    \ granted units have been consumed, the credit-control\n   client MUST perform\
    \ an intermediate interrogation.  The purpose of\n   this interrogation is to\
    \ indicate to the credit-control server that\n   the specified action started\
    \ and to report the used units.  The\n   credit-control server MUST deduct the\
    \ used amount from the end user's\n   account but MUST NOT make a new credit reservation.\
    \  The\n   credit-control client, however, may send intermediate interrogations\n\
    \   before all the final granted units have been consumed for which\n   rating\
    \ and money reservation may be needed -- for instance, upon\n   Validity-Time\
    \ expiration or upon mid-session service events that\n   affect the rating of\
    \ the current service.  Therefore, the\n   credit-control client MUST NOT include\
    \ any rating-related AVPs in the\n   request sent once all the final granted units\
    \ have been consumed, as\n   an indication to the server that (1) the requested\
    \ final unit action\n   started and (2) rating and money reservation are not required\
    \ (when\n   the Multiple-Services-Credit-Control AVP is used, the Service-\n \
    \  Identifier AVP or the Rating-Group AVP is included to indicate the\n   services\
    \ concerned).  Naturally, the Credit-Control-Answer message\n   does not contain\
    \ any granted service units and MUST include the\n   Validity-Time AVP to indicate\
    \ to the credit-control client how long\n   the subscriber is allowed to use network\
    \ resources before a new\n   intermediate interrogation is sent to the server.\n\
    \   At the expiry of Validity-Time, the credit-control client sends a\n   Credit-Control-Request\
    \ (UPDATE_REQUEST) as usual.  This message does\n   not include the Used-Service-Unit\
    \ AVP, as there is no allotted quota\n   to report.  The credit-control server\
    \ processes the request and MUST\n   perform the credit reservation.  If during\
    \ this time the subscriber\n   did not replenish their account, whether they will\
    \ be disconnected or\n   will be granted access to services not controlled by\
    \ a credit-control\n   server for an unlimited time is dependent on the home service\n\
    \   provider policy.  (Note: The latter option implies that the Service\n   Element\
    \ should not remove the restriction filters upon termination of\n   the credit-control.)\
    \  The server will return the appropriate\n   Result-Code (see Section 9.1) in\
    \ the Credit-Control-Answer message in\n   order to implement the policy-defined\
    \ action.  Otherwise, a new quota\n   will be returned, and the Service Element\
    \ MUST remove all the\n   possible restrictions activated by the graceful service\
    \ termination\n   process and continue the credit-control session and service\
    \ session\n   as usual.\n   The credit-control client may not wait until the expiration\
    \ of the\n   Validity-Time and may send a spontaneous update (a new\n   Credit-Control-Request)\
    \ if the Service Element can determine, for\n   instance, that communication between\
    \ the end user and the top-up\n   server took place.  An example of this case\
    \ is given in Appendix A.8\n   (Figure 18).\n   Note that the credit-control server\
    \ may already have initiated the\n   above-described process for the first interrogation.\
    \  However, the\n   user's account might be empty when this first interrogation\
    \ is\n   performed.  In this case, the subscriber can be offered a chance to\n\
    \   replenish the account and continue the service.  When the\n   credit-control\
    \ client receives (at either the session level or a\n   service-specific level)\
    \ a Final-Unit-Indication AVP or QoS-Final-\n   Unit-Indication AVP, together\
    \ with Validity-Time AVPs, but without a\n   Granted-Service-Unit AVP, it immediately\
    \ starts the graceful service\n   termination process without sending any messages\
    \ to the server.  An\n   example of this case is illustrated in Appendix A.8 (Figure\
    \ 18).\n"
- title: 5.6.3.  Restrict Access Action
  contents:
  - "5.6.3.  Restrict Access Action\n   A Final-Unit-Indication AVP with Final-Unit-Action\
    \ set to\n   RESTRICT_ACCESS indicates to the device supporting this action that,\n\
    \   upon consumption of the final granted units, the user's access MUST\n   be\
    \ restricted according to the IP packet filters given in the\n   Restriction-Filter-Rule\
    \ AVP(s) or according to the IP packet filters\n   identified by the Filter-Id\
    \ AVP(s).  The credit-control server SHOULD\n   include either the Restriction-Filter-Rule\
    \ AVP or the Filter-Id AVP\n   in the Final-Unit-Indication group AVP of the Credit-Control-Answer\n\
    \   message.\n   A QoS-Final-Unit-Indication AVP with Final-Unit-Action set to\n\
    \   RESTRICT_ACCESS indicates to the device supporting this action that,\n   upon\
    \ consumption of the final granted units, the actions specified in\n   Filter-Rule\
    \ AVP(s) MUST restrict the traffic according to the\n   classifiers in the Filter-Rule\
    \ AVP(s).  If one or more Filter-Id AVPs\n   are provided in the Credit-Control-Answer\
    \ message, the credit-control\n   client MUST restrict the traffic according to\
    \ the IP packet filters\n   identified by the Filter-Id AVP(s).  The credit-control\
    \ server SHOULD\n   include either the Filter-Rule AVP or the Filter-Id AVP in\
    \ the\n   QoS-Final-Unit-Indication group AVP of the Credit-Control-Answer\n \
    \  message.\n   If both the Final-Unit-Indication AVP and the QoS-Final-Unit-\n\
    \   Indication AVP exist in the Credit-Control-Answer message, a\n   credit-control\
    \ client that supports the QoS-Final-Unit-Indication AVP\n   SHOULD follow the\
    \ directives included in the QoS-Final-Unit-\n   Indication AVP and SHOULD ignore\
    \ the Final-Unit-Indication AVP.\n   An entity other than the credit-control server\
    \ may provision the\n   access device with appropriate IP packet filters to be\
    \ used in\n   conjunction with the Diameter Credit-Control application.  Such\
    \ an\n   entity may, for instance, configure the access device with IP flows\n\
    \   to be passed when the Diameter Credit-Control application indicates\n   RESTRICT_ACCESS\
    \ or REDIRECT.  The access device passes IP packets\n   according to the filter\
    \ rules that may have been received in the\n   Credit-Control-Answer message,\
    \ in addition to those rules that may\n   have been configured by the other entity.\
    \  However, when the user's\n   account cannot cover the cost of the requested\
    \ service, the action\n   taken is the responsibility of the credit-control server\
    \ that\n   controls the prepaid subscriber.\n   If another entity working in conjunction\
    \ with the Diameter\n   Credit-Control application already provisions the access\
    \ device with\n   all the required filter rules for the end user, the credit-control\n\
    \   server presumably need not send any additional filters.  Therefore,\n   it\
    \ is RECOMMENDED that credit-control server implementations\n   supporting graceful\
    \ service termination be configurable for sending\n   the Restriction-Filter-Rule\
    \ AVP, the Filter-Rule AVP, the Filter-Id\n   AVP, or none of the above.\n   When\
    \ the final granted units have been consumed, the credit-control\n   client MUST\
    \ perform an intermediate interrogation.  The\n   credit-control client and the\
    \ credit-control server process this\n   intermediate interrogation and execute\
    \ subsequent procedures, as\n   specified in Section 5.6.2.\n   The credit-control\
    \ server may initiate graceful service termination\n   when replying with the\
    \ action RESTRICT_ACCESS for the first\n   interrogation.  This is similar to\
    \ the behavior specified in\n   Section 5.6.2.\n"
- title: 5.6.4.  Usage of the Server-Initiated Credit Re-authorization
  contents:
  - "5.6.4.  Usage of the Server-Initiated Credit Re-authorization\n   Once the subscriber\
    \ replenishes the account, they presumably expect\n   all the restrictions applied\
    \ by the graceful service termination\n   procedure to be removed immediately\
    \ and unlimited service access to\n   be resumed.  For the best user experience,\
    \ the credit-control server\n   implementation MAY support the server-initiated\
    \ credit\n   re-authorization (see Section 5.5).  In such a case, upon the\n \
    \  successful account top-up, the credit-control server sends the\n   Re-Auth-Request\
    \ (RAR) message to solicit the credit re-authorization.\n   The credit-control\
    \ client initiates the credit re-authorization by\n   sending the Credit-Control-Request\
    \ message with the CC-Request-Type\n   AVP set to the value UPDATE_REQUEST.  The\
    \ Used-Service-Unit AVP is\n   not included in the request, as there is no allotted\
    \ quota to report.\n   The Requested-Service-Unit AVP MAY be included in the request.\
    \  After\n   the credit-control client successfully receives the Credit-Control-\n\
    \   Answer with a new Granted-Service-Unit AVP, all the possible\n   restrictions\
    \ activated for the purpose of graceful service\n   termination MUST be removed\
    \ in the Service Element.  The\n   credit-control session and the service session\
    \ continue as usual.\n"
- title: 5.7.  Failure Procedures
  contents:
  - "5.7.  Failure Procedures\n   The CCFH, as described in this section, determines\
    \ the behavior of\n   the credit-control client in fault situations.  The CCFH\
    \ may be\n   (1) received from the Diameter home AAA server, (2) received from\
    \ the\n   credit-control server, or (3) configured locally.  The CCFH value\n\
    \   received from the home AAA server overrides the locally configured\n   value.\
    \  The CCFH value received from the credit-control server in the\n   Credit-Control-Answer\
    \ message always overrides any existing values.\n   The authorization server MAY\
    \ include the Accounting-Realtime-Required\n   AVP to determine what to do if\
    \ the sending of accounting records to\n   the accounting server has been temporarily\
    \ prevented, as defined in\n   [RFC6733].  It is RECOMMENDED that the client complement\
    \ the\n   credit-control failure procedures with a backup accounting flow\n  \
    \ toward an accounting server.  By using different combinations of the\n   Accounting-Realtime-Required\
    \ AVP and the CCFH, different safety\n   levels can be built.  For example, by\
    \ choosing a CCFH equal to\n   CONTINUE for the credit-control flow and an Accounting-Realtime-\n\
    \   Required AVP equal to DELIVER_AND_GRANT for the accounting flow, the\n   service\
    \ can be granted to the end user even if the connection to the\n   credit-control\
    \ server is down, as long as the accounting server is\n   able to collect the\
    \ accounting information and information exchange\n   is taking place between\
    \ the accounting server and credit-control\n   server.\n   As the credit-control\
    \ application is based on real-time bidirectional\n   communication between the\
    \ credit-control client and the\n   credit-control server, the usage of alternative\
    \ destinations and the\n   buffering of messages may not be sufficient in the\
    \ event of\n   communication failures.  Because the credit-control server has\
    \ to\n   maintain session states, moving the credit-control message stream to\n\
    \   a backup server requires a complex context transfer solution.\n   Whether\
    \ the credit-control message stream is moved to a backup\n   credit-control server\
    \ during an ongoing credit-control session\n   depends on the value of the CC-Session-Failover\
    \ AVP.  However,\n   failover may occur at any point in the path between the\n\
    \   credit-control client and the credit-control server if a transport\n   failure\
    \ is detected with a peer, as described in [RFC6733].  As a\n   consequence, the\
    \ credit-control server might receive duplicate\n   messages.  These duplicate\
    \ or out-of-sequence messages can be\n   detected in the credit-control server\
    \ based on the credit-control\n   server session state machine (Section 7), Session-Id\
    \ AVP, and\n   CC-Request-Number AVP.\n   If a failure occurs during an ongoing\
    \ credit-control session, the\n   credit-control client may move the credit-control\
    \ message stream to\n   an alternative server if the credit-control server indicated\n\
    \   FAILOVER_SUPPORTED in the CC-Session-Failover AVP.  A secondary\n   credit-control\
    \ server name, either received from the home Diameter\n   AAA server or configured\
    \ locally, can be used as an address of the\n   backup server.  If the CC-Session-Failover\
    \ AVP is set to\n   FAILOVER_NOT_SUPPORTED, the credit-control message stream\
    \ MUST NOT be\n   moved to a backup server.\n   For new credit-control sessions,\
    \ failover to an alternative\n   credit-control server SHOULD be performed, if\
    \ possible.  For\n   instance, if an implementation of the credit-control client\
    \ can\n   determine primary credit-control server unavailability, it can\n   establish\
    \ the new credit-control sessions with a possibly available\n   secondary credit-control\
    \ server.\n   The AAA transport profile [RFC3539] defines an application-layer\n\
    \   watchdog algorithm that enables failover from a peer that has failed\n   and\
    \ is controlled by a watchdog timer (Tw) (defined in [RFC3539]).\n   The recommended\
    \ default initial value for Tw (Twinit) is 30 seconds.\n   Twinit may be set as\
    \ low as 6 seconds; however, according to\n   [RFC3539], setting too low a value\
    \ for Twinit is likely to result in\n   an increased probability of duplicates,\
    \ as well as an increase in\n   spurious failover and failback attempts.  The\
    \ Diameter base protocol\n   [RFC6733] is common to several different types of\
    \ Diameter AAA\n   applications that may be run in the same Service Element. \
    \ Therefore,\n   tuning the timer for Twinit to a lower value in order to satisfy\
    \ the\n   requirements of real-time applications, such as the Diameter\n   Credit-Control\
    \ application, will certainly cause the above-mentioned\n   problems.  For prepaid\
    \ services, however, the end user expects an\n   answer from the network in a\
    \ reasonable time.  Thus, the Diameter\n   Credit-Control client will react more\
    \ quickly than would the\n   underlying base protocol.  Therefore, this specification\
    \ defines the\n   Tx timer (as defined in Section 13), which is used by the\n\
    \   credit-control client to supervise communication with the\n   credit-control\
    \ server.  When the Tx timer elapses, the credit-control\n   client takes action\
    \ for the end user according to the CCFH.\n   When the Tx timer expires, the Diameter\
    \ Credit-Control client always\n   terminates the service if the CCFH is set to\
    \ the value TERMINATE.\n   The credit-control session may be moved to an alternative\
    \ server only\n   if a protocol error DIAMETER_TOO_BUSY or DIAMETER_UNABLE_TO_DELIVER\n\
    \   is received before the Tx timer expires.  Therefore, the value\n   TERMINATE\
    \ is not appropriate if proper failover behavior is desired.\n   If the CCFH is\
    \ set to the value CONTINUE or RETRY_AND_TERMINATE, the\n   service will be granted\
    \ to the end user when the Tx timer expires.\n   An Answer message with granted\
    \ units may arrive later if the base\n   protocol transport failover occurred\
    \ in the path to the\n   credit-control server.  (The Twinit default value is\
    \ 3 times more\n   than the recommended Tx timeout value.)  The credit-control\
    \ client\n   SHOULD grant the service to the end user, start monitoring resource\n\
    \   usage, and wait for the possible late answer until the timeout of the\n  \
    \ request (e.g., 120 seconds).  If the request fails and the\n   CC-Session-Failover\
    \ AVP is set to FAILOVER_NOT_SUPPORTED, the\n   credit-control client terminates\
    \ or continues the service --\n   depending on the value set in the CCFH -- and\
    \ MUST free all the\n   reserved resources for the credit-control session.  If\
    \ the protocol\n   error DIAMETER_UNABLE_TO_DELIVER or DIAMETER_TOO_BUSY is received\
    \ or\n   the request times out and the CC-Session-Failover AVP is set to\n   FAILOVER_SUPPORTED,\
    \ the credit-control client MAY send the request to\n   a backup server, if possible.\
    \  If the credit-control client receives\n   a successful answer from the backup\
    \ server, it continues the\n   credit-control session with such a server.  If\
    \ the retransmitted\n   request also fails, the credit-control client terminates\
    \ or continues\n   the service -- depending on the value set in the CCFH -- and\
    \ MUST\n   free all the reserved resources for the credit-control session.\n \
    \  If a communication failure occurs during the graceful service\n   termination\
    \ procedure, the Service Element SHOULD always terminate\n   the ongoing service\
    \ session.\n   If the credit-control server detects a failure during an ongoing\n\
    \   credit-control session, it will terminate the credit-control session\n   and\
    \ return the reserved units back to the end user's account.\n   The supervision\
    \ session timer Tcc (as defined in Section 13) is used\n   in the credit-control\
    \ server to supervise the credit-control session.\n   In order to support failover\
    \ between credit-control servers,\n   information transfer about the credit-control\
    \ session and account\n   state SHOULD take place between the primary and secondary\n\
    \   credit-control servers.  Implementations supporting credit-control\n   session\
    \ failover MUST also ensure proper detection of duplicate or\n   out-of-sequence\
    \ messages.  Communication between the servers is\n   regarded as an implementation\
    \ issue and is outside the scope of this\n   specification.\n"
- title: 6.  One-Time Event
  contents:
  - "6.  One-Time Event\n   The one-time event is used when there is no need to maintain\
    \ any\n   state in the Diameter Credit-Control server -- for example, inquiring\n\
    \   about the price of the service.  The use of a one-time event implies\n   that\
    \ the user has been authenticated and authorized beforehand.\n   The one-time\
    \ event can be used when the credit-control client wants\n   to know the cost\
    \ of the service event or to check the account balance\n   without any credit\
    \ reservations.  It can also be used for refunding\n   service units on the user's\
    \ account or for direct debiting without\n   any credit reservations.  The one-time\
    \ event is shown in Figure 8.\n                                          Diameter\n\
    \   End User        Service Element        AAA Server        CC Server\n     \
    \                  (CC Client)\n     | Service Request   |                   \
    \ |                    |\n     |------------------>|                    |    \
    \                |\n     |                   | CCR(Event)         |          \
    \          |\n     |                   |------------------->| CCR(Event)     \
    \    |\n     |                   |                    |------------------->|\n\
    \     |                   |                    |  CCA(Granted-Units)|\n     |\
    \                   |  CCA(Granted-Units)|<-------------------|\n     |  Service\
    \ Delivery |<-------------------|                    |\n     |<----------------->|\
    \                    |                    |\n                         Figure 8:\
    \ One-Time Event\n   In environments such as the 3GPP architecture, the one-time\
    \ event can\n   be sent from the Service Element directly to the credit-control\n\
    \   server.\n"
- title: 6.1.  Service Price Inquiry
  contents:
  - "6.1.  Service Price Inquiry\n   The credit-control client may need to know the\
    \ price of the service\n   event.  Services offered by application service providers\
    \ whose\n   prices are not known in the credit-control client might exist.  The\n\
    \   end user might also want to get an estimate of the price of a service\n  \
    \ event before requesting it.\n   A Diameter Credit-Control client requesting\
    \ the cost information MUST\n   set the CC-Request-Type AVP equal to EVENT_REQUEST,\
    \ include the\n   Requested-Action AVP set to PRICE_ENQUIRY, and set the requested\n\
    \   service event information in the Service-Identifier AVP in the\n   Credit-Control-Request\
    \ message.  Additional service event information\n   may be sent as service-specific\
    \ AVPs or within the Service-Parameter-\n   Info AVP.  The Service-Context-Id\
    \ AVP indicates the service-specific\n   document applicable to the request.\n\
    \   The credit-control server calculates the cost of the requested\n   service\
    \ event, but it does not perform any account-balance checks or\n   credit reservations\
    \ from the account.\n   The estimated cost of the requested service event is returned\
    \ to the\n   credit-control client in the Cost-Information AVP in the\n   Credit-Control-Answer\
    \ message.\n"
- title: 6.2.  Balance Checks
  contents:
  - "6.2.  Balance Checks\n   The Diameter Credit-Control client may only have to\
    \ verify that the\n   end user's account balance covers the cost of a certain\
    \ service\n   without reserving any units from the account at the time of the\n\
    \   inquiry.  This method does not guarantee that credit would be left\n   when\
    \ the Diameter Credit-Control client requests the debiting of the\n   account\
    \ with a separate request.\n   A Diameter Credit-Control client requesting a balance\
    \ check MUST set\n   the CC-Request-Type AVP equal to EVENT_REQUEST, include a\
    \ Requested-\n   Action AVP set to CHECK_BALANCE, and include the Subscription-Id\
    \ AVP\n   or Subscription-Id-Extension AVP in order to identify the end user in\n\
    \   the credit-control server.  The Service-Context-Id AVP indicates the\n   service-specific\
    \ document applicable to the request.\n   The credit-control server makes the\
    \ balance check, but it does not\n   make any credit reservations from the account.\n\
    \   The result of the balance check (ENOUGH_CREDIT/NO_CREDIT) is returned\n  \
    \ to the credit-control client in the Check-Balance-Result AVP in the\n   Credit-Control-Answer\
    \ message.\n"
- title: 6.3.  Direct Debiting
  contents:
  - "6.3.  Direct Debiting\n   There are certain service events for which service\
    \ execution is\n   always successful in the service environment.  The delay between\
    \ the\n   service invocation and the actual service delivery to the end user\n\
    \   can be sufficiently long that the use of session-based credit-control\n  \
    \ would lead to unreasonably long credit-control sessions.  In these\n   cases,\
    \ the Diameter Credit-Control client can use the one-time event\n   scenario for\
    \ direct debiting.  The Diameter Credit-Control client\n   SHOULD be sure that\
    \ the requested service event execution would be\n   successful when this scenario\
    \ is used.\n   In the Credit-Control-Request message, the CC-Request-Type AVP\
    \ is set\n   to the value EVENT_REQUEST and the Requested-Action AVP is set to\n\
    \   DIRECT_DEBITING.  The Subscription-Id AVP or Subscription-Id-\n   Extension\
    \ AVP SHOULD be included to identify the end user in the\n   credit-control server.\
    \  The Event-Timestamp AVP SHOULD be included in\n   the request and contain the\
    \ time when the service event is requested\n   in the Service Element.  The Service-Context-Id\
    \ AVP indicates the\n   service-specific document applicable to the request.\n\
    \   If it knows the cost of the service event, the Diameter\n   Credit-Control\
    \ client MAY include in the Requested-Service-Unit AVP\n   the monetary amount\
    \ to be charged.  If the Diameter Credit-Control\n   client does not know the\
    \ cost of the service event, the Requested-\n   Service-Unit AVP MAY contain the\
    \ number of requested service events.\n   The Service-Identifier AVP always indicates\
    \ the service concerned.\n   Additional service event information to be rated\
    \ MAY be sent as\n   service-specific AVPs or within the Service-Parameter-Info\
    \ AVP.\n   The credit-control server SHOULD rate the service event and deduct\n\
    \   the corresponding monetary amount from the end user's account.  If\n   the\
    \ type of the Requested-Service-Unit AVP is \"money\", no rating is\n   needed,\
    \ but the corresponding monetary amount is deducted from the\n   end user's account.\n\
    \   The credit-control server returns the Granted-Service-Unit AVP in the\n  \
    \ Credit-Control-Answer message to the Diameter Credit-Control client.\n   The\
    \ Granted-Service-Unit AVP contains the amount of service units\n   that the Diameter\
    \ Credit-Control client can provide to the end user.\n   The type of the Granted-Service-Unit\
    \ can be time, volume, service-\n   specific, or money, depending on the type\
    \ of service event.\n   If the credit-control server determines that no credit-control\
    \ is\n   needed for the service, it can include the result code indicating\n \
    \  that the credit-control is not applicable (e.g., the service is free\n   of\
    \ charge).\n   For informative purposes, the Credit-Control-Answer message MAY\
    \ also\n   include the Cost-Information AVP containing the estimated total cost\n\
    \   of the requested service.\n"
- title: 6.4.  Refunds
  contents:
  - "6.4.  Refunds\n   Some services may refund service units to the end user's account\
    \ --\n   for example, gaming services.\n   The credit-control client MUST set\
    \ the CC-Request-Type AVP to the\n   value EVENT_REQUEST and the Requested-Action\
    \ AVP to REFUND_ACCOUNT in\n   the Credit-Control-Request message.  The Subscription-Id\
    \ AVP or\n   Subscription-Id-Extension AVP SHOULD be included to identify the\n\
    \   end user in the credit-control server.  The Service-Context-Id AVP\n   indicates\
    \ the service-specific document applicable to the request.\n   The Diameter Credit-Control\
    \ client MAY include the monetary amount to\n   be refunded in the Requested-Service-Unit\
    \ AVP.  The Service-\n   Identifier AVP always indicates the service concerned.\
    \  If the\n   Diameter Credit-Control client does not know the monetary amount\
    \ to\n   be refunded, in addition to the Service-Identifier AVP it MAY send\n\
    \   service-specific AVPs or the Service-Parameter-Info AVP containing\n   additional\
    \ service event information to be rated.\n   For informative purposes, the Credit-Control-Answer\
    \ message MAY also\n   include the Cost-Information AVP containing the estimated\
    \ monetary\n   amount of refunded units.\n"
- title: 6.5.  Failure Procedure
  contents:
  - "6.5.  Failure Procedure\n   Failover to an alternative credit-control server\
    \ is allowed for a\n   one-time event, as the server is not maintaining session\
    \ states.  For\n   instance, if the credit-control client receives a protocol\
    \ error\n   DIAMETER_UNABLE_TO_DELIVER or DIAMETER_TOO_BUSY, it can resend the\n\
    \   request to an alternative server, if possible.  There MAY be\n   protocol-transparent\
    \ Diameter relays and redirect agents or Diameter\n   Credit-Control proxies between\
    \ the credit-control client and\n   credit-control server.  Failover may occur\
    \ at any point in the path\n   between the credit-control client and the credit-control\
    \ server if a\n   transport failure is detected with a peer, as described in [RFC6733].\n\
    \   Because there can be duplicate requests for various reasons, the\n   credit-control\
    \ server is responsible for real-time duplicate\n   detection.  Implementation\
    \ issues for duplicate detection are\n   discussed in [RFC6733], Appendix C.\n\
    \   When the credit-control client detects a communication failure with\n   the\
    \ credit-control server, its behavior depends on the requested\n   action.  The\
    \ Tx timer (as defined in Section 13) is used in the\n   credit-control client\
    \ to supervise communication with the\n   credit-control server.\n   If the requested\
    \ action is PRICE_ENQUIRY or CHECK_BALANCE and a\n   communication failure is\
    \ detected, the credit-control client SHOULD\n   forward the request messages\
    \ to an alternative credit-control server,\n   if possible.  The secondary credit-control\
    \ server name, if received\n   from the home Diameter AAA server, can be used\
    \ as an address of the\n   backup server.\n   If the requested action is DIRECT_DEBITING,\
    \ the DDFH controls the\n   credit-control client's behavior.  The DDFH may be\
    \ received from the\n   home Diameter AAA server or may be locally configured.\
    \  The\n   credit-control server may also send the DDFH in any CCA messages to\n\
    \   be used for direct-debiting events compiled thereafter.  The DDFH\n   value\
    \ received from the home Diameter AAA server overrides the\n   locally configured\
    \ value, and the DDFH value received from the\n   credit-control server in a Credit-Control-Answer\
    \ message always\n   overrides any existing values.\n   If the DDFH is set to\
    \ TERMINATE_OR_BUFFER, the credit-control client\n   SHOULD NOT grant the service\
    \ if, after a possible retransmission\n   attempt to an alternative credit-control\
    \ server, the credit-control\n   client can eventually determine from the result\
    \ code or error code in\n   the Answer message that units have not been debited.\
    \  Otherwise, the\n   credit-control client SHOULD grant the service to the end\
    \ user and\n   store the request in credit-control application-level non-volatile\n\
    \   storage.  (Note that resending the request at a later time is not a\n   guarantee\
    \ that the service will be debited, as the user's account may\n   be empty when\
    \ the server successfully processes the request.)  The\n   credit-control client\
    \ MUST mark these request messages as possible\n   duplicates by setting the T\
    \ flag in the command header as described\n   in [RFC6733], Section 3.\n   If\
    \ the DDFH is set to CONTINUE, the service SHOULD be granted, even\n   if credit-control\
    \ messages cannot be delivered and messages are not\n   buffered.\n   If the Tx\
    \ timer expires, the credit-control client MUST continue the\n   service and wait\
    \ for a possible late answer.  If the request\n   times out, the credit-control\
    \ client retransmits the request (marked\n   with the T flag) to a backup credit-control\
    \ server, if possible.  If\n   the retransmitted request also times out or if\
    \ a temporary error is\n   received in answer, the credit-control client buffers\
    \ the request if\n   the value of the DDFH is set to TERMINATE_OR_BUFFER.  If\
    \ a failed\n   answer is received for the retransmitted request, the credit-control\n\
    \   client frees all the resources reserved for the event message and\n   deletes\
    \ the request regardless of the value of the DDFH.\n   The Credit-Control-Request\
    \ with the requested action REFUND_ACCOUNT\n   should always be stored in credit-control\
    \ application-level\n   non-volatile storage in case a temporary failure occurs.\
    \  The\n   credit-control client MUST mark the retransmitted request message as\n\
    \   a possible duplicate by setting the T flag in the command header as\n   described\
    \ in [RFC6733], Section 3.\n   For stored requests, the implementation may choose\
    \ to limit the\n   number of retransmission attempts and to define a retransmission\n\
    \   interval.\n   Note that only one entity in the credit-control system SHOULD\
    \ be\n   responsible for duplicate detection.  If there is only one\n   credit-control\
    \ server within the given realm, the credit-control\n   server may perform duplicate\
    \ detection.  If there is more than one\n   credit-control server in a given realm,\
    \ only one entity in the\n   credit-control system should be responsible, to ensure\
    \ that the\n   end user's account is not debited or credited multiple times for\
    \ the\n   same service event.\n"
- title: 7.  Credit-Control Application State Machines
  contents:
  - "7.  Credit-Control Application State Machines\n   This section defines five credit-control\
    \ application state machines.\n   The first four state machines are to be observed\
    \ by credit-control\n   clients.\n   The first state machine describes session-based\
    \ credit-control where\n   the first interrogation is executed as part of the\
    \ authorization/\n   authentication process.  The second state machine describes\n\
    \   session-based credit-control where the first interrogation is\n   executed\
    \ after the authorization/authentication process.  The\n   requirements regarding\
    \ what has to be supported for these two state\n   machines are discussed in Section\
    \ 5.2.\n   The third state machine describes session-based credit-control for\n\
    \   the intermediate and final interrogations.  The fourth state machine\n   describes\
    \ event-based credit-control.  These two state machines are\n   to be observed\
    \ by all implementations that conform to this\n   specification.\n   The fifth\
    \ state machine describes the credit-control session from a\n   credit-control\
    \ server's perspective.\n   Any event not listed in the state machines MUST be\
    \ considered an\n   error condition, and a corresponding answer, if applicable,\
    \ MUST be\n   returned to the originator of the message.\n   In Tables 3, 4, and\
    \ 5, the event \"failure to send\" means that the\n   Diameter Credit-Control\
    \ client is unable to communicate with the\n   desired destination or, if a failover\
    \ procedure is supported, with a\n   possibly defined alternative destination\
    \ (e.g., the request times out\n   and the Answer message is not received).  This\
    \ could be due to\n   (1) the peer being down or (2) a physical link failure in\
    \ the path to\n   or from the credit-control server.\n   The event \"temporary\
    \ error\" means that the Diameter Credit-Control\n   client received a protocol\
    \ error notification (DIAMETER_TOO_BUSY,\n   DIAMETER_UNABLE_TO_DELIVER, or DIAMETER_LOOP_DETECTED)\
    \ in the\n   Result-Code AVP of the Credit-Control-Answer command.  This type\
    \ of\n   notification may ultimately be received in answer to the\n   retransmitted\
    \ request to a defined alternative destination, if\n   failover is supported.\n\
    \   The event \"failed answer\" means that the Diameter Credit-Control\n   client\
    \ received a non-transient failure (permanent failure)\n   notification in the\
    \ Credit-Control-Answer command.  This type of\n   notification may ultimately\
    \ be received in answer to the\n   retransmitted request to a defined alternative\
    \ destination, if\n   failover is supported.\n   The action \"store request\"\
    \ means that a request is stored in\n   credit-control application-level non-volatile\
    \ storage.\n   The event \"not successfully processed\" means that the credit-control\n\
    \   server could not process the message, e.g., due to an unknown\n   end user,\
    \ an account being empty, or errors defined in [RFC6733].\n   The event \"user\
    \ service terminated\" can be triggered for various\n   reasons, e.g., normal\
    \ user termination, network failure, and ASR\n   (Abort-Session-Request).  The\
    \ Termination-Cause AVP contains\n   information about the reason for termination,\
    \ as specified in\n   [RFC6733].\n   The Tx timer, which is used to control the\
    \ waiting time in the\n   credit-control client in the Pending state, is stopped\
    \ upon exit of\n   the Pending state.  The stopping of the Tx timer is omitted\
    \ in the\n   state machine when the new state is Idle, as moving to Idle state\n\
    \   implies the clearing of the session and all the variables associated\n   to\
    \ it.\n   The states PendingI, PendingU, PendingT, PendingE, and PendingB stand\n\
    \   for pending states to wait for an answer to a credit-control request\n   related\
    \ to Initial, Update, Termination, Event, or Buffered request,\n   respectively.\n\
    \   In Table 2, failover to a secondary server upon \"temporary error\" or\n \
    \  \"failure to send\" is not explicitly described.  However, moving an\n   ongoing\
    \ credit-control message stream to an alternative server is\n   possible if the\
    \ CC-Session-Failover AVP is set to FAILOVER_SUPPORTED,\n   as described in Section\
    \ 5.7.\n   Resending a credit-control event to an alternative server is\n   supported\
    \ as described in Section 6.5.\n   +----------+-------------------------------+-------------+----------+\n\
    \   | State    | Event                         | Action      | New      |\n  \
    \ |          |                               |             | State    |\n   +----------+-------------------------------+-------------+----------+\n\
    \   | Idle     | Client or device requests     | Send        | PendingI |\n  \
    \ |          | access/service                | AA-Request  |          |\n   |\
    \          |                               | with added  |          |\n   |  \
    \        |                               | CC AVPs,    |          |\n   |    \
    \      |                               | start Tx    |          |\n   |      \
    \    |                               | timer       |          |\n   |        \
    \  |                               |             |          |\n   | PendingI |\
    \ Successful answer to          | Grant       | Open     |\n   |          | AA-Request\
    \ received           | service to  |          |\n   |          |             \
    \                  | end user,   |          |\n   |          |               \
    \                | stop Tx     |          |\n   |          |                 \
    \              | timer       |          |\n   |          |                   \
    \            |             |          |\n   | PendingI | Tx timer expired    \
    \          | Disconnect  | Idle     |\n   |          |                       \
    \        | user/dev    |          |\n   |          |                         \
    \      |             |          |\n   | PendingI | Failed AA-Answer received \
    \    | Disconnect  | Idle     |\n   |          |                             \
    \  | user/dev    |          |\n   |          |                               |\
    \             |          |\n   | PendingI | AA-Answer received with       | Grant\
    \       | Idle     |\n   |          | Result-Code equal to          | service\
    \ to  |          |\n   |          | CREDIT_CONTROL_NOT_APPLICABLE | end user \
    \   |          |\n   |          |                               |            \
    \ |          |\n   | PendingI | User service terminated       | Queue       |\
    \ PendingI |\n   |          |                               | termination |  \
    \        |\n   |          |                               | event       |    \
    \      |\n   |          |                               |             |      \
    \    |\n   | PendingI | Change in rating condition    | Queue       | PendingI\
    \ |\n   |          |                               | changed     |          |\n\
    \   |          |                               | rating      |          |\n  \
    \ |          |                               | condition   |          |\n   |\
    \          |                               | event       |          |\n   +----------+-------------------------------+-------------+----------+\n\
    \            Table 2: Session-Based Client State Machine for the\n           \
    \         First Interrogation with AA-Request\n   +----------+-------------------------------+-------------+----------+\n\
    \   | State    | Event                         | Action      | New      |\n  \
    \ |          |                               |             | State    |\n   +----------+-------------------------------+-------------+----------+\n\
    \   | Idle     | Client or device requests     | Send CC     | PendingI |\n  \
    \ |          | access/service                | initial     |          |\n   |\
    \          |                               | req., start |          |\n   |  \
    \        |                               | Tx timer    |          |\n   |    \
    \      |                               |             |          |\n   | PendingI\
    \ | Successful CC initial answer  | Stop Tx     | Open     |\n   |          |\
    \ received                      | timer       |          |\n   |          |  \
    \                             |             |          |\n   | PendingI | Failure\
    \ to send, or temporary | Grant       | Idle     |\n   |          | error and\
    \ CCFH equal to       | service to  |          |\n   |          | CONTINUE   \
    \                   | end user    |          |\n   |          |              \
    \                 |             |          |\n   | PendingI | Failure to send,\
    \ or temporary | Terminate   | Idle     |\n   |          | error and CCFH equal\
    \ to       | end user's  |          |\n   |          | TERMINATE or to       \
    \        | service     |          |\n   |          | RETRY_AND_TERMINATE     \
    \      |             |          |\n   |          |                           \
    \    |             |          |\n   | PendingI | Tx timer expired and CCFH   \
    \  | Terminate   | Idle     |\n   |          | equal to TERMINATE            |\
    \ end user's  |          |\n   |          |                               | service\
    \     |          |\n   |          |                               |          \
    \   |          |\n   | PendingI | Tx timer expired and CCFH     | Grant      \
    \ | PendingI |\n   |          | equal to CONTINUE or to       | service to  |\
    \          |\n   |          | RETRY_AND_TERMINATE           | end user    |  \
    \        |\n   |          |                               |             |    \
    \      |\n   | PendingI | CC initial answer received    | Terminate   | Idle \
    \    |\n   |          | with Result-Code equal to     | end user's  |        \
    \  |\n   |          | END_USER_SERVICE_DENIED or to | service     |          |\n\
    \   |          | USER_UNKNOWN                  |             |          |\n  \
    \ |          |                               |             |          |\n   |\
    \ PendingI | CC initial answer received    | Grant       | Idle     |\n   |  \
    \        | with Result-Code equal to     | service to  |          |\n   |    \
    \      | CREDIT_CONTROL_NOT_APPLICABLE | end user    |          |\n   |      \
    \    |                               |             |          |\n   | PendingI\
    \ | Failed CC initial answer      | Grant       | Idle     |\n   |          |\
    \ received and CCFH equal to    | service to  |          |\n   |          | CONTINUE\
    \                      | end user    |          |\n   |          |           \
    \                    |             |          |\n   | PendingI | Failed CC initial\
    \ answer      | Terminate   | Idle     |\n   |          | received and CCFH equal\
    \ to    | end user's  |          |\n   |          | TERMINATE or to          \
    \     | service     |          |\n   |          | RETRY_AND_TERMINATE        \
    \   |             |          |\n   |          |                              \
    \ |             |          |\n   | PendingI | User service terminated       |\
    \ Queue       | PendingI |\n   |          |                               | termination\
    \ |          |\n   |          |                               | event       |\
    \          |\n   |          |                               |             |  \
    \        |\n   | PendingI | Change in rating condition    | Queue       | PendingI\
    \ |\n   |          |                               | changed     |          |\n\
    \   |          |                               | rating      |          |\n  \
    \ |          |                               | condition   |          |\n   |\
    \          |                               | event       |          |\n   +----------+-------------------------------+-------------+----------+\n\
    \            Table 3: Session-Based Client State Machine for the\n           \
    \            First Interrogation with CCR\n   +----------+-------------------------------+-------------+----------+\n\
    \   | State    | Event                         | Action      | New      |\n  \
    \ |          |                               |             | State    |\n   +----------+-------------------------------+-------------+----------+\n\
    \   | Open     | Granted unit elapses and no   | Send CC     | PendingU |\n  \
    \ |          | final-unit indication         | update      |          |\n   |\
    \          | received                      | req., start |          |\n   |  \
    \        |                               | Tx timer    |          |\n   |    \
    \      |                               |             |          |\n   | Open \
    \    | Granted unit elapses and      | Terminate   | PendingT |\n   |        \
    \  | final unit action equal to    | end user's  |          |\n   |          |\
    \ TERMINATE received            | service,    |          |\n   |          |  \
    \                             | send CC     |          |\n   |          |    \
    \                           | termination |          |\n   |          |      \
    \                         | req.        |          |\n   |          |        \
    \                       |             |          |\n   | Open     | Change in\
    \ rating condition in | Send CC     | PendingU |\n   |          | queue      \
    \                   | update      |          |\n   |          |              \
    \                 | req., start |          |\n   |          |                \
    \               | Tx timer    |          |\n   |          |                  \
    \             |             |          |\n   | Open     | Service terminated in\
    \ queue   | Send CC     | PendingT |\n   |          |                        \
    \       | termination |          |\n   |          |                          \
    \     | req.        |          |\n   |          |                            \
    \   |             |          |\n   | Open     | Change in rating condition or\
    \ | Send CC     | PendingU |\n   |          | Validity-Time elapses         |\
    \ update      |          |\n   |          |                               | req.,\
    \ start |          |\n   |          |                               | Tx timer\
    \    |          |\n   |          |                               |           \
    \  |          |\n   | Open     | User service terminated       | Send CC     |\
    \ PendingT |\n   |          |                               | termination |  \
    \        |\n   |          |                               | req.        |    \
    \      |\n   |          |                               |             |      \
    \    |\n   | Open     | RAR received                  | Send RAA    | PendingU\
    \ |\n   |          |                               | followed by |          |\n\
    \   |          |                               | CC update   |          |\n  \
    \ |          |                               | req., start |          |\n   |\
    \          |                               | Tx timer    |          |\n   |  \
    \        |                               |             |          |\n   | PendingU\
    \ | Successful CC update answer   | Stop Tx     | Open     |\n   |          |\
    \ received                      | timer       |          |\n   |          |  \
    \                             |             |          |\n   | PendingU | Failure\
    \ to send, or temporary | Grant       | Idle     |\n   |          | error and\
    \ CCFH equal to       | service to  |          |\n   |          | CONTINUE   \
    \                   | end user    |          |\n   |          |              \
    \                 |             |          |\n   | PendingU | Failure to send,\
    \ or temporary | Terminate   | Idle     |\n   |          | error and CCFH equal\
    \ to       | end user's  |          |\n   |          | TERMINATE or to       \
    \        | service     |          |\n   |          | RETRY_AND_TERMINATE     \
    \      |             |          |\n   |          |                           \
    \    |             |          |\n   | PendingU | Tx timer expired and CCFH   \
    \  | Terminate   | Idle     |\n   |          | equal to TERMINATE            |\
    \ end user's  |          |\n   |          |                               | service\
    \     |          |\n   |          |                               |          \
    \   |          |\n   | PendingU | Tx timer expired and CCFH     | Grant      \
    \ | PendingU |\n   |          | equal to CONTINUE or to       | service to  |\
    \          |\n   |          | RETRY_AND_TERMINATE           | end user    |  \
    \        |\n   |          |                               |             |    \
    \      |\n   | PendingU | CC update answer received     | Terminate   | Idle \
    \    |\n   |          | with Result-Code equal to     | end user's  |        \
    \  |\n   |          | END_USER_SERVICE_DENIED       | service     |          |\n\
    \   |          |                               |             |          |\n  \
    \ | PendingU | CC update answer received     | Grant       | Idle     |\n   |\
    \          | with Result-Code equal to     | service to  |          |\n   |  \
    \        | CREDIT_CONTROL_NOT_APPLICABLE | end user    |          |\n   |    \
    \      |                               |             |          |\n   | PendingU\
    \ | Failed CC update answer       | Grant       | Idle     |\n   |          |\
    \ received and CCFH equal to    | service to  |          |\n   |          | CONTINUE\
    \                      | end user    |          |\n   |          |           \
    \                    |             |          |\n   | PendingU | Failed CC update\
    \ answer       | Terminate   | Idle     |\n   |          | received and CCFH equal\
    \ to    | end user's  |          |\n   |          | TERMINATE or to          \
    \     | service     |          |\n   |          | RETRY_AND_TERMINATE        \
    \   |             |          |\n   |          |                              \
    \ |             |          |\n   | PendingU | User service terminated       |\
    \ Queue       | PendingU |\n   |          |                               | termination\
    \ |          |\n   |          |                               | event       |\
    \          |\n   |          |                               |             |  \
    \        |\n   | PendingU | Change in rating condition    | Queue       | PendingU\
    \ |\n   |          |                               | changed     |          |\n\
    \   |          |                               | rating      |          |\n  \
    \ |          |                               | condition   |          |\n   |\
    \          |                               | event       |          |\n   |  \
    \        |                               |             |          |\n   | PendingU\
    \ | RAR received                  | Send RAA    | PendingU |\n   |          |\
    \                               |             |          |\n   | PendingT | Successful\
    \ CC termination     |             | Idle     |\n   |          | answer received\
    \               |             |          |\n   |          |                  \
    \             |             |          |\n   | PendingT | Failure to send, temporary\
    \    |             | Idle     |\n   |          | error, or failed answer     \
    \  |             |          |\n   |          |                               |\
    \             |          |\n   | PendingT | Change in rating condition    |  \
    \           | PendingT |\n   +----------+-------------------------------+-------------+----------+\n\
    \     Table 4: Session-Based Client State Machine for Intermediate and\n     \
    \                      Final Interrogations\n   +----------+--------------------------------+------------+----------+\n\
    \   | State    | Event                          | Action     | New      |\n  \
    \ |          |                                |            | State    |\n   +----------+--------------------------------+------------+----------+\n\
    \   | Idle     | Client or device requests a    | Send CC    | PendingE |\n  \
    \ |          | one-time service               | event      |          |\n   |\
    \          |                                | req.,      |          |\n   |  \
    \        |                                | start Tx   |          |\n   |    \
    \      |                                | timer      |          |\n   |      \
    \    |                                |            |          |\n   | Idle   \
    \  | Request in storage             | Send       | PendingB |\n   |          |\
    \                                | stored     |          |\n   |          |  \
    \                              | request    |          |\n   |          |    \
    \                            |            |          |\n   | PendingE | Successful\
    \ CC event answer     | Grant      | Idle     |\n   |          | received    \
    \                   | service to |          |\n   |          |               \
    \                 | end user   |          |\n   |          |                 \
    \               |            |          |\n   | PendingE | Failure to send, temporary\
    \     | Indicate   | Idle     |\n   |          | error, failed CC event answer\
    \  | service    |          |\n   |          | received, or Tx timer expired; |\
    \ error      |          |\n   |          | requested action CHECK_BALANCE |  \
    \          |          |\n   |          | or PRICE_ENQUIRY               |    \
    \        |          |\n   |          |                                |      \
    \      |          |\n   | PendingE | CC event answer received with  | Terminate\
    \  | Idle     |\n   |          | Result-Code equal to           | end user's |\
    \          |\n   |          | END_USER_SERVICE_DENIED or to  | service    |  \
    \        |\n   |          | USER_UNKNOWN and Tx timer      |            |    \
    \      |\n   |          | running                        |            |      \
    \    |\n   |          |                                |            |        \
    \  |\n   | PendingE | CC event answer received with  | Grant      | Idle     |\n\
    \   |          | Result-Code equal to           | service to |          |\n  \
    \ |          | CREDIT_CONTROL_NOT_APPLICABLE; | end user   |          |\n   |\
    \          | requested action               |            |          |\n   |  \
    \        | DIRECT_DEBITING                |            |          |\n   |    \
    \      |                                |            |          |\n   | PendingE\
    \ | Failure to send, temporary     | Grant      | Idle     |\n   |          |\
    \ error, or failed CC event      | service to |          |\n   |          | answer\
    \ received; requested     | end user   |          |\n   |          | action DIRECT_DEBITING;\
    \ DDFH   |            |          |\n   |          | equal to CONTINUE        \
    \      |            |          |\n   |          |                            \
    \    |            |          |\n   | PendingE | Failed CC event answer       \
    \  | Terminate  | Idle     |\n   |          | received or temporary error;   |\
    \ end user's |          |\n   |          | requested action               | service\
    \    |          |\n   |          | DIRECT_DEBITING; DDFH equal to |          \
    \  |          |\n   |          | TERMINATE_OR_BUFFER and Tx     |            |\
    \          |\n   |          | timer running                  |            |  \
    \        |\n   |          |                                |            |    \
    \      |\n   | PendingE | Tx timer expired; requested    | Grant      | PendingE\
    \ |\n   |          | action DIRECT_DEBITING         | service to |          |\n\
    \   |          |                                | end user   |          |\n  \
    \ |          |                                |            |          |\n   |\
    \ PendingE | Failure to send; requested     | Store      | Idle     |\n   |  \
    \        | action DIRECT_DEBITING; DDFH   | request    |          |\n   |    \
    \      | equal to TERMINATE_OR_BUFFER   | with       |          |\n   |      \
    \    |                                | T flag     |          |\n   |        \
    \  |                                |            |          |\n   | PendingE |\
    \ Temporary error; requested     | Store      | Idle     |\n   |          | action\
    \ DIRECT_DEBITING; DDFH   | request    |          |\n   |          | equal to\
    \ TERMINATE_OR_BUFFER;  |            |          |\n   |          | Tx timer expired\
    \               |            |          |\n   |          |                   \
    \             |            |          |\n   | PendingE | Failed answer or answer\
    \        |            | Idle     |\n   |          | received with Result-Code\
    \      |            |          |\n   |          | equal to END_USER_SERVICE  \
    \    |            |          |\n   |          | DENIED or to USER_UNKNOWN;   \
    \  |            |          |\n   |          | requested action               |\
    \            |          |\n   |          | DIRECT_DEBITING; Tx timer      |  \
    \          |          |\n   |          | expired                        |    \
    \        |          |\n   |          |                                |      \
    \      |          |\n   | PendingE | Failed CC event answer         | Indicate\
    \   | Idle     |\n   |          | received; requested action     | service   \
    \ |          |\n   |          | REFUND_ACCOUNT                 | error and  |\
    \          |\n   |          |                                | delete     |  \
    \        |\n   |          |                                | request    |    \
    \      |\n   |          |                                |            |      \
    \    |\n   | PendingE | Failure to send or Tx timer    | Store      | Idle   \
    \  |\n   |          | expired; requested action      | request    |          |\n\
    \   |          | REFUND_ACCOUNT                 | with       |          |\n  \
    \ |          |                                | T flag     |          |\n   |\
    \          |                                |            |          |\n   | PendingE\
    \ | Temporary error; requested     | Store      | Idle     |\n   |          |\
    \ action REFUND_ACCOUNT          | request    |          |\n   |          |  \
    \                              |            |          |\n   | PendingB | Successful\
    \ CC answer received  | Delete     | Idle     |\n   |          |             \
    \                   | request    |          |\n   |          |               \
    \                 |            |          |\n   | PendingB | Failed CC answer\
    \ received      | Delete     | Idle     |\n   |          |                   \
    \             | request    |          |\n   |          |                     \
    \           |            |          |\n   | PendingB | Failure to send or temporary\
    \   |            | Idle     |\n   |          | error                         \
    \ |            |          |\n   +----------+--------------------------------+------------+----------+\n\
    \               Table 5: One-Time Event Client State Machine\n   +-------+------------------------+--------------------------+-------+\n\
    \   | State | Event                  | Action                   | New   |\n  \
    \ |       |                        |                          | State |\n   +-------+------------------------+--------------------------+-------+\n\
    \   | Idle  | CC initial request     | Send CC initial answer,  | Open  |\n  \
    \ |       | received and           | reserve units, start Tcc |       |\n   |\
    \       | successfully processed |                          |       |\n   |  \
    \     |                        |                          |       |\n   | Idle\
    \  | CC initial request     | Send CC initial answer   | Idle  |\n   |       |\
    \ received but not       | with Result-Code !=      |       |\n   |       | successfully\
    \ processed | SUCCESS                  |       |\n   |       |               \
    \         |                          |       |\n   | Idle  | CC event request\
    \       | Send CC event answer     | Idle  |\n   |       | received and      \
    \     |                          |       |\n   |       | successfully processed\
    \ |                          |       |\n   |       |                        |\
    \                          |       |\n   | Idle  | CC event request       | Send\
    \ CC event answer     | Idle  |\n   |       | received but not       | with Result-Code\
    \ !=      |       |\n   |       | successfully processed | SUCCESS           \
    \       |       |\n   |       |                        |                     \
    \     |       |\n   | Open  | CC update request      | Send CC update answer,\
    \   | Open  |\n   |       | received and           | debit used units,       \
    \ |       |\n   |       | successfully processed | reserve new units,       |\
    \       |\n   |       |                        | restart Tcc              |  \
    \     |\n   |       |                        |                          |    \
    \   |\n   | Open  | CC update request      | Send CC update answer    | Idle \
    \ |\n   |       | received but not       | with Result-Code !=      |       |\n\
    \   |       | successfully processed | SUCCESS, debit used      |       |\n  \
    \ |       |                        | units                    |       |\n   |\
    \       |                        |                          |       |\n   | Open\
    \  | CC termination request | Send CC termin. answer,  | Idle  |\n   |       |\
    \ received and           | stop Tcc, debit used     |       |\n   |       | successfully\
    \ processed | units                    |       |\n   |       |               \
    \         |                          |       |\n   | Open  | CC termination request\
    \ | Send CC termin. answer   | Idle  |\n   |       | received but not       |\
    \ with Result-Code !=      |       |\n   |       | successfully processed | SUCCESS,\
    \ debit used      |       |\n   |       |                        | units     \
    \               |       |\n   |       |                        |             \
    \             |       |\n   | Open  | Session supervision    | Release reserved\
    \ units   | Idle  |\n   |       | timer Tcc expired      |                   \
    \       |       |\n   +-------+------------------------+--------------------------+-------+\n\
    \        Table 6: Session-Based and Event-Based Server State Machine\n"
- title: 8.  Credit-Control AVPs
  contents:
  - "8.  Credit-Control AVPs\n   This section defines the Credit-Control AVPs that\
    \ are specific to the\n   Diameter Credit-Control application and that MAY be\
    \ included in the\n   Diameter Credit-Control messages.\n   The AVPs defined in\
    \ this section MAY also be included in\n   authorization commands defined in authorization-specific\n\
    \   applications, such as [RFC7155] and [RFC4004], if the first\n   interrogation\
    \ is performed as part of the authorization/\n   authentication process, as described\
    \ in Section 5.2.\n   The Diameter AVP rules are defined in [RFC6733], Section\
    \ 4.  These\n   AVP rules are observed in AVPs defined in this section.\n   The\
    \ following table describes the Diameter AVPs defined in the\n   credit-control\
    \ application, their AVP Code values, types, and\n   possible flag values.  The\
    \ AVP Flag rules ('M', 'V') are explained in\n   [RFC6733], Section 4.1.\n   \
    \                                                    +---------------+\n     \
    \                                                  |AVP Flag Rules |\n       \
    \                            Defined             |----+-----+----|\n         \
    \                    AVP   in                  |    |     |MUST|\n   Attribute\
    \ Name            Code  Section Data Type   |MUST| MAY |NOT |\n   ----------------------------------------------------|----+-----+----|\n\
    \   CC-Correlation-Id         411   8.1     OctetString |    |  M  |  V |\n  \
    \ CC-Input-Octets           412   8.24    Unsigned64  | M  |     |  V |\n   CC-Money\
    \                  413   8.22    Grouped     | M  |     |  V |\n   CC-Output-Octets\
    \          414   8.25    Unsigned64  | M  |     |  V |\n   CC-Request-Number \
    \        415   8.2     Unsigned32  | M  |     |  V |\n   CC-Request-Type     \
    \      416   8.3     Enumerated  | M  |     |  V |\n   CC-Service-Specific-  \
    \    417   8.26    Unsigned64  | M  |     |  V |\n     Units                 \
    \                            |    |     |    |\n   CC-Session-Failover       418\
    \   8.4     Enumerated  | M  |     |  V |\n   CC-Sub-Session-Id         419  \
    \ 8.5     Unsigned64  | M  |     |  V |\n   CC-Time                   420   8.21\
    \    Unsigned32  | M  |     |  V |\n   CC-Total-Octets           421   8.23  \
    \  Unsigned64  | M  |     |  V |\n   CC-Unit-Type              454   8.32    Enumerated\
    \  | M  |     |  V |\n   Check-Balance-Result      422   8.6     Enumerated  |\
    \ M  |     |  V |\n   Cost-Information          423   8.7     Grouped     | M\
    \  |     |  V |\n   Cost-Unit                 424   8.12    UTF8String  | M  |\
    \     |  V |\n   Credit-Control            426   8.13    Enumerated  | M  |  \
    \   |  V |\n   Credit-Control-           427   8.14    Enumerated  | M  |    \
    \ |  V |\n     Failure-Handling                                  |    |     |\
    \    |\n   Currency-Code             425   8.11    Unsigned32  | M  |     |  V\
    \ |\n   Direct-Debiting-          428   8.15    Enumerated  | M  |     |  V |\n\
    \     Failure-Handling                                  |    |     |    |\n  \
    \ Exponent                  429   8.9     Integer32   | M  |     |  V |\n   Final-Unit-Action\
    \         449   8.35    Enumerated  | M  |     |  V |\n   Final-Unit-Indication\
    \     430   8.34    Grouped     | M  |     |  V |\n   QoS-Final-Unit-Indication\
    \ 669   8.68    Grouped     |    |  M  |  V |\n   Granted-Service-Unit      431\
    \   8.17    Grouped     | M  |     |  V |\n   G-S-U-Pool-Identifier     453  \
    \ 8.31    Unsigned32  | M  |     |  V |\n   G-S-U-Pool-Reference      457   8.30\
    \    Grouped     | M  |     |  V |\n   Multiple-Services-        456   8.16  \
    \  Grouped     | M  |     |  V |\n     Credit-Control                        \
    \            |    |     |    |\n   Multiple-Services-        455   8.40    Enumerated\
    \  | M  |     |  V |\n     Indicator                                         |\
    \    |     |    |\n   Rating-Group              432   8.29    Unsigned32  | M\
    \  |     |  V |\n   Redirect-Address-Type     433   8.38    Enumerated  | M  |\
    \     |  V |\n   Redirect-Server           434   8.37    Grouped     | M  |  \
    \   |  V |\n   Redirect-Server-Address   435   8.39    UTF8String  | M  |    \
    \ |  V |\n   Redirect-Server-Extension 665   8.64    Grouped     |    |  M  |\
    \  V |\n   Redirect-Address-         666   8.65    Address     |    |  M  |  V\
    \ |\n     IPAddress                                         |    |     |    |\n\
    \   Redirect-Address-URL      667   8.66    UTF8String  |    |  M  |  V |\n  \
    \ Redirect-Address-SIP-URI  668   8.67    UTF8String  |    |  M  |  V |\n   Requested-Action\
    \          436   8.41    Enumerated  | M  |     |  V |\n   Requested-Service-Unit\
    \    437   8.18    Grouped     | M  |     |  V |\n   Restriction-Filter-Rule \
    \  438   8.36    IPFilterRule| M  |     |  V |\n   Service-Context-Id        461\
    \   8.42    UTF8String  | M  |     |  V |\n   Service-Identifier        439  \
    \ 8.28    Unsigned32  | M  |     |  V |\n   Service-Parameter-Info    440   8.43\
    \    Grouped     |    |  M  |  V |\n   Service-Parameter-Type    441   8.44  \
    \  Unsigned32  |    |  M  |  V |\n   Service-Parameter-Value   442   8.45    OctetString\
    \ |    |  M  |  V |\n   Subscription-Id           443   8.46    Grouped     |\
    \ M  |     |  V |\n   Subscription-Id-Data      444   8.48    UTF8String  | M\
    \  |     |  V |\n   Subscription-Id-Type      450   8.47    Enumerated  | M  |\
    \     |  V |\n   Subscription-Id-Extension 659   8.58    Grouped     |    |  M\
    \  |  V |\n   Subscription-Id-E164      660   8.59    UTF8String  |    |  M  |\
    \  V |\n   Subscription-Id-IMSI      661   8.60    UTF8String  |    |  M  |  V\
    \ |\n   Subscription-Id-SIP-URI   662   8.61    UTF8String  |    |  M  |  V |\n\
    \   Subscription-Id-NAI       663   8.62    UTF8String  |    |  M  |  V |\n  \
    \ Subscription-Id-Private   664   8.63    UTF8String  |    |  M  |  V |\n   Tariff-Change-Usage\
    \       452   8.27    Enumerated  | M  |     |  V |\n   Tariff-Time-Change   \
    \     451   8.20    Time        | M  |     |  V |\n   Unit-Value             \
    \   445   8.8     Grouped     | M  |     |  V |\n   Used-Service-Unit        \
    \ 446   8.19    Grouped     | M  |     |  V |\n   User-Equipment-Info       458\
    \   8.49    Grouped     |    |  M  |  V |\n   User-Equipment-Info-Type  459  \
    \ 8.50    Enumerated  |    |  M  |  V |\n   User-Equipment-Info-Value 460   8.51\
    \    OctetString |    |  M  |  V |\n   User-Equipment-Info-      653   8.52  \
    \  Grouped     |    |  M  |  V |\n     Extension                             \
    \            |    |     |    |\n   User-Equipment-Info-      654   8.53    OctetString\
    \ |    |  M  |  V |\n     IMEISV                                            |\
    \    |     |    |\n   User-Equipment-Info-MAC   655   8.54    OctetString |  \
    \  |  M  |  V |\n   User-Equipment-Info-EUI64 656   8.55    OctetString |    |\
    \  M  |  V |\n   User-Equipment-Info-      657   8.56    OctetString |    |  M\
    \  |  V |\n     ModifiedEUI64                                     |    |     |\
    \    |\n   User-Equipment-Info-IMEI  658   8.57    OctetString |    |  M  |  V\
    \ |\n   Value-Digits              447   8.10    Integer64   | M  |     |  V |\n\
    \   Validity-Time             448   8.33    Unsigned32  | M  |     |  V |\n"
- title: 8.1.  CC-Correlation-Id AVP
  contents:
  - "8.1.  CC-Correlation-Id AVP\n   The CC-Correlation-Id AVP (AVP Code 411) is of\
    \ type OctetString and\n   contains information to correlate credit-control requests\
    \ generated\n   for different components of the service, e.g., transport and service\n\
    \   level.  Whoever allocates the Service-Context-Id (i.e., a unique\n   identifier\
    \ of a service-specific document) is also responsible for\n   defining the content\
    \ and encoding of the CC-Correlation-Id AVP.\n"
- title: 8.2.  CC-Request-Number AVP
  contents:
  - "8.2.  CC-Request-Number AVP\n   The CC-Request-Number AVP (AVP Code 415) is of\
    \ type Unsigned32 and\n   identifies this request within one session.  As Session-Id\
    \ AVPs are\n   globally unique, the combination of the Session-Id AVP and the\n\
    \   CC-Request-Number AVP is also globally unique and can be used in\n   matching\
    \ credit-control messages with confirmations.  An easy way to\n   produce unique\
    \ numbers is to set the value of the CC-Request-Number\n   AVP to 0 for a credit-control\
    \ request with a CC-Request-Type AVP of\n   INITIAL_REQUEST (the initial request\
    \ in a session).  The value of the\n   CC-Request-Number AVP should be set to\
    \ 1 for the first\n   UPDATE_REQUEST, to 2 for the second, and so on until the\
    \ value for\n   TERMINATION_REQUEST is one more than the value for the last\n\
    \   UPDATE_REQUEST.  In the case of event charging (when the CC-Request-\n   Type\
    \ AVP has the value EVENT_REQUEST), the CC-Request-Number AVP\n   should be set\
    \ to 0 for a credit-control request.\n"
- title: 8.3.  CC-Request-Type AVP
  contents:
  - "8.3.  CC-Request-Type AVP\n   The CC-Request-Type AVP (AVP Code 416) is of type\
    \ Enumerated and\n   contains the reason for sending the Credit-Control-Request\
    \ message.\n   It MUST be present in all Credit-Control-Request messages.  The\n\
    \   following values are defined for the CC-Request-Type AVP (the value\n   of\
    \ 0 (zero) is reserved):\n   INITIAL_REQUEST       1\n   This request is used\
    \ to initiate a credit-control session.  It\n   contains credit-control information\
    \ that is relevant to the\n   initiation.\n   UPDATE_REQUEST        2\n   This\
    \ request contains credit-control information for an existing\n   credit-control\
    \ session.  Credit-control requests of this type SHOULD\n   be sent every time\
    \ a credit-control re-authorization is needed at the\n   expiry of the allocated\
    \ quota or validity time.  Further, additional\n   service-specific events MAY\
    \ trigger a spontaneous UPDATE_REQUEST.\n   TERMINATION_REQUEST   3\n   This request\
    \ is sent to terminate a credit-control session.  It\n   contains credit-control\
    \ information relevant to the existing session.\n   EVENT_REQUEST         4\n\
    \   This request is used when there is no need to maintain any\n   credit-control\
    \ session state in the credit-control server.  It\n   contains all information\
    \ relevant to the service and is the only\n   request of the service.  The reason\
    \ for this request is further\n   detailed in the Requested-Action AVP.  The Requested-Action\
    \ AVP MUST\n   be included in the Credit-Control-Request message when CC-Request-\n\
    \   Type is set to EVENT_REQUEST.\n"
- title: 8.4.  CC-Session-Failover AVP
  contents:
  - "8.4.  CC-Session-Failover AVP\n   The CC-Session-Failover AVP (AVP Code 418)\
    \ is of type Enumerated and\n   contains information as to whether moving the\
    \ credit-control message\n   stream to a backup server during an ongoing credit-control\
    \ session is\n   supported.  In the case of communication failures, the credit-control\n\
    \   message streams can be moved to an alternative destination if the\n   credit-control\
    \ server supports failover to an alternative server.\n   The secondary credit-control\
    \ server name, if received from the home\n   Diameter AAA server, can be used\
    \ as an address of the backup server.\n   An implementation is not required to\
    \ support moving a credit-control\n   message stream to an alternative server,\
    \ as this also requires moving\n   information related to the credit-control session\
    \ to the backup\n   server.\n   The following values are defined for the CC-Session-Failover\
    \ AVP:\n   FAILOVER_NOT_SUPPORTED   0\n   When the CC-Session-Failover AVP is\
    \ set to FAILOVER_NOT_SUPPORTED,\n   the credit-control message stream MUST NOT\
    \ be moved to an alternative\n   destination in the case of a communication failure.\
    \  This is the\n   default behavior if the AVP isn't included in the reply from\
    \ the\n   authorization or credit-control server.\n   FAILOVER_SUPPORTED     \
    \  1\n   When the CC-Session-Failover AVP is set to FAILOVER_SUPPORTED, the\n\
    \   credit-control message stream SHOULD be moved to an alternative\n   destination\
    \ in the case of a communication failure.  Moving the\n   credit-control message\
    \ stream to a backup server MAY require that\n   information related to the credit-control\
    \ session should also be\n   forwarded to an alternative server.\n"
- title: 8.5.  CC-Sub-Session-Id AVP
  contents:
  - "8.5.  CC-Sub-Session-Id AVP\n   The CC-Sub-Session-Id AVP (AVP Code 419) is of\
    \ type Unsigned64 and\n   contains the credit-control sub-session identifier.\
    \  The combination\n   of the Session-Id AVP and this AVP MUST be unique per sub-session,\n\
    \   and the value of this AVP MUST be monotonically increased by one for\n   all\
    \ new sub-sessions.  The absence of this AVP implies that no\n   sub-sessions\
    \ are in use.\n"
- title: 8.6.  Check-Balance-Result AVP
  contents:
  - "8.6.  Check-Balance-Result AVP\n   The Check-Balance-Result AVP (AVP Code 422)\
    \ is of type Enumerated and\n   contains the result of the balance check.  This\
    \ AVP is applicable\n   only when the Requested-Action AVP indicates CHECK_BALANCE\
    \ in the\n   Credit-Control-Request command.  The following values are defined\
    \ for\n   the Check-Balance-Result AVP:\n   ENOUGH_CREDIT   0\n   There is enough\
    \ credit in the account to cover the requested service.\n   NO_CREDIT       1\n\
    \   There isn't enough credit in the account to cover the requested\n   service.\n"
- title: 8.7.  Cost-Information AVP
  contents:
  - "8.7.  Cost-Information AVP\n   The Cost-Information AVP (AVP Code 423) is of\
    \ type Grouped, and it is\n   used to return the cost information of a service,\
    \ which the\n   credit-control client can transfer transparently to the end user.\n\
    \   The included Unit-Value AVP contains the cost estimate (always of\n   type\
    \ \"money\") of the service in the case of price inquiries, or the\n   accumulated\
    \ cost estimation in the case of a credit-control session.\n   The Currency-Code\
    \ AVP specifies in which currency the cost was given.\n   The Cost-Unit AVP specifies\
    \ the unit when the service cost is a cost\n   per unit (e.g., cost for the service\
    \ is $1 per minute).\n   When the Requested-Action AVP with the value PRICE_ENQUIRY\
    \ is\n   included in the Credit-Control-Request command, the Cost-Information\n\
    \   AVP sent in the succeeding Credit-Control-Answer command contains the\n  \
    \ cost estimation for the requested service, without any reservations\n   being\
    \ made.\n   The Cost-Information AVP included in the Credit-Control-Answer\n \
    \  command with the CC-Request-Type set to UPDATE_REQUEST contains the\n   accumulated\
    \ cost estimation for the session, without taking any\n   credit reservations\
    \ into account.\n   The Cost-Information AVP included in the Credit-Control-Answer\n\
    \   command with the CC-Request-Type set to EVENT_REQUEST or\n   TERMINATION_REQUEST\
    \ contains the estimated total cost for the\n   requested service.\n   The Cost-Information\
    \ AVP is defined as follows (per grouped-avp-def\n   as defined in [RFC6733]):\n\
    \                   Cost-Information ::= < AVP Header: 423 >\n               \
    \                         { Unit-Value }\n                                   \
    \     { Currency-Code }\n                                        [ Cost-Unit ]\n"
- title: 8.8.  Unit-Value AVP
  contents:
  - "8.8.  Unit-Value AVP\n   The Unit-Value AVP is of type Grouped (AVP Code 445)\
    \ and specifies\n   the cost as a floating-point value.  The Unit-Value is a significand\n\
    \   with an exponent; i.e., Unit-Value = Value-Digits AVP * 10^Exponent.\n   This\
    \ representation avoids unwanted rounding off.  For example, the\n   value of\
    \ 2,3 is represented as Value-Digits = 23 and Exponent = -1.\n   The absence of\
    \ the exponent part MUST be interpreted as an exponent\n   equal to zero.\n  \
    \ The Unit-Value AVP is defined as follows (per grouped-avp-def as\n   defined\
    \ in [RFC6733]):\n                       Unit-Value ::= < AVP Header: 445 >\n\
    \                                      { Value-Digits }\n                    \
    \                  [ Exponent ]\n"
- title: 8.9.  Exponent AVP
  contents:
  - "8.9.  Exponent AVP\n   The Exponent AVP is of type Integer32 (AVP Code 429) and\
    \ contains the\n   exponent value to be applied for the Value-Digits AVP within\
    \ the\n   Unit-Value AVP.\n"
- title: 8.10.  Value-Digits AVP
  contents:
  - "8.10.  Value-Digits AVP\n   The Value-Digits AVP is of type Integer64 (AVP Code\
    \ 447) and contains\n   the significant digits of the number.  If decimal values\
    \ are needed\n   to present the units, the scaling MUST be indicated with the\
    \ related\n   Exponent AVP.  For example, for the monetary amount $0.05, the value\n\
    \   of the Value-Digits AVP MUST be set to 5, and the scaling MUST be\n   indicated\
    \ with the Exponent AVP set to -2.\n"
- title: 8.11.  Currency-Code AVP
  contents:
  - "8.11.  Currency-Code AVP\n   The Currency-Code AVP (AVP Code 425) is of type\
    \ Unsigned32 and\n   contains a currency code that specifies in which currency\
    \ the values\n   of AVPs containing monetary units were given.  It is specified\
    \ by\n   using the numeric values defined in the ISO 4217 standard [ISO4217].\n"
- title: 8.12.  Cost-Unit AVP
  contents:
  - "8.12.  Cost-Unit AVP\n   The Cost-Unit AVP (AVP Code 424) is of type UTF8String,\
    \ and it is\n   used to display a human-readable string to the end user.  It\n\
    \   specifies the applicable unit to the Cost-Information AVP when the\n   service\
    \ cost is a cost per unit (e.g., cost of the service is $1 per\n   minute).  The\
    \ Cost-Unit setting can be minutes, hours, days,\n   kilobytes, megabytes, etc.\n"
- title: 8.13.  Credit-Control AVP
  contents:
  - "8.13.  Credit-Control AVP\n   The Credit-Control AVP (AVP Code 426) is of type\
    \ Enumerated and MUST\n   be included in AA-Request messages when the Service\
    \ Element has\n   credit-control capabilities.  The following values are defined\
    \ for\n   the Credit-Control AVP:\n   CREDIT_AUTHORIZATION   0\n   If the home\
    \ Diameter AAA server determines that the user has a\n   prepaid subscription,\
    \ this value indicates that the credit-control\n   server MUST be contacted to\
    \ perform the first interrogation.  The\n   value of the Credit-Control AVP MUST\
    \ always be set to 0 in an\n   AA-Request sent to perform the first interrogation\
    \ and to initiate a\n   new credit-control session.\n   RE_AUTHORIZATION     \
    \  1\n   This value indicates to the Diameter AAA server that a credit-control\n\
    \   session is ongoing for the subscriber and that the credit-control\n   server\
    \ MUST NOT be contacted.  The Credit-Control AVP set to the\n   value of 1 is\
    \ to be used only when the first interrogation has been\n   successfully performed\
    \ and the credit-control session is ongoing\n   (i.e., re-authorization triggered\
    \ by authorization lifetime).  This\n   value MUST NOT be used in an AA-Request\
    \ sent to perform the first\n   interrogation.\n"
- title: 8.14.  Credit-Control-Failure-Handling AVP (CCFH)
  contents:
  - "8.14.  Credit-Control-Failure-Handling AVP (CCFH)\n   The CCFH (AVP Code 427)\
    \ is of type Enumerated.  The credit-control\n   client uses information in this\
    \ AVP to decide what to do if sending\n   credit-control messages to the credit-control\
    \ server has been, for\n   instance, temporarily prevented due to a network problem.\
    \  Depending\n   on the service logic, the credit-control server can order the\
    \ client\n   to terminate the service immediately when there is a reason to\n\
    \   believe that the service cannot be charged, or to try failover to an\n   alternative\
    \ server, if possible.  The server could then either\n   terminate or grant the\
    \ service, should the alternative connection\n   also fail.\n   The following\
    \ values are defined for the CCFH:\n   TERMINATE             0\n   When the CCFH\
    \ is set to TERMINATE, the service MUST only be granted\n   for as long as there\
    \ is a connection to the credit-control server.\n   If the credit-control client\
    \ does not receive any Credit-Control-\n   Answer messages before the Tx timer\
    \ (as defined in Section 13)\n   expires, the credit-control request is regarded\
    \ as failed, and the\n   end user's service session is terminated.\n   This is\
    \ the default behavior if the AVP isn't included in the reply\n   from the authorization\
    \ or credit-control server.\n   CONTINUE              1\n   When the CCFH is set\
    \ to CONTINUE, the credit-control client SHOULD\n   resend the request to an alternative\
    \ server in the case of transport\n   or temporary failures, provided that (1)\
    \ a failover procedure is\n   supported in the credit-control server and the credit-control\
    \ client\n   and (2) an alternative server is available.  Otherwise, the service\n\
    \   SHOULD be granted, even if credit-control messages can't be\n   delivered.\n\
    \   RETRY_AND_TERMINATE   2\n   When the CCFH is set to RETRY_AND_TERMINATE, the\
    \ credit-control\n   client SHOULD resend the request to an alternative server\
    \ in the case\n   of transport or temporary failures, provided that (1) a failover\n\
    \   procedure is supported in the credit-control server and the\n   credit-control\
    \ client and (2) an alternative server is available.\n   Otherwise, the service\
    \ SHOULD NOT be granted when the credit-control\n   messages can't be delivered.\n"
- title: 8.15.  Direct-Debiting-Failure-Handling AVP (DDFH)
  contents:
  - "8.15.  Direct-Debiting-Failure-Handling AVP (DDFH)\n   The DDFH (AVP Code 428)\
    \ is of type Enumerated.  The credit-control\n   client uses information in this\
    \ AVP to decide what to do if sending\n   credit-control messages (Requested-Action\
    \ AVP set to DIRECT_DEBITING)\n   to the credit-control server has been, for instance,\
    \ temporarily\n   prevented due to a network problem.\n   The following values\
    \ are defined for the DDFH:\n   TERMINATE_OR_BUFFER   0\n   When the DDFH is set\
    \ to TERMINATE_OR_BUFFER, the service MUST be\n   granted for as long as there\
    \ is a connection to the credit-control\n   server.  If the credit-control client\
    \ does not receive any\n   Credit-Control-Answer messages before the Tx timer\
    \ (as defined in\n   Section 13) expires, the credit-control request is regarded\
    \ as\n   failed.  The client SHOULD terminate the service if it can determine\n\
    \   from the failed answer that units have not been debited.  Otherwise,\n   the\
    \ credit-control client SHOULD grant the service, store the request\n   in application-level\
    \ non-volatile storage, and try to resend the\n   request.  These requests MUST\
    \ be marked as possible duplicates by\n   setting the T flag in the command header\
    \ as described in [RFC6733],\n   Section 3.  This is the default behavior if the\
    \ AVP isn't included in\n   the reply from the authorization server.\n   CONTINUE\
    \              1\n   When the DDFH is set to CONTINUE, the service SHOULD be granted,\
    \ even\n   if credit-control messages can't be delivered, and the request should\n\
    \   be deleted.\n"
- title: 8.16.  Multiple-Services-Credit-Control AVP
  contents:
  - "8.16.  Multiple-Services-Credit-Control AVP\n   The Multiple-Services-Credit-Control\
    \ AVP (AVP Code 456) is of type\n   Grouped and contains the AVPs related to the\
    \ independent\n   credit-control of multiple services.  Note that each instance\
    \ of this\n   AVP carries units related to one or more services or related to\
    \ a\n   single rating-group.\n   The Service-Identifier AVP and the Rating-Group\
    \ AVP are used to\n   associate the granted units to a given service or rating-group.\
    \  If\n   both the Service-Identifier AVP and the Rating-Group AVP are\n   included,\
    \ the target of the service units is always the service(s)\n   indicated by the\
    \ value of the Service-Identifier AVP(s).  If only the\n   Rating-Group AVP is\
    \ present, the Multiple-Services-Credit-Control AVP\n   relates to all the services\
    \ that belong to the specified\n   rating-group.\n   The G-S-U-Pool-Reference\
    \ AVP allows the server to specify a\n   G-S-U-Pool-Identifier identifying a credit\
    \ pool within which the\n   units of the specified type are considered pooled.\
    \  If a G-S-U-Pool-\n   Reference AVP is present, then actual service units of\
    \ the specified\n   type MUST also be present.  For example, if the G-S-U-Pool-Reference\n\
    \   AVP specifies a CC-Unit-Type value of TIME (Section 8.32), then the\n   CC-Time\
    \ AVP MUST be present.\n   The Requested-Service-Unit AVP MAY contain the amount\
    \ of requested\n   service units or the requested monetary value.  It MUST be\
    \ present in\n   the initial interrogation and within the intermediate interrogations\n\
    \   in which a new quota is requested.  If the credit-control client does\n  \
    \ not include the Requested-Service-Unit AVP in a request command --\n   because,\
    \ for instance, it has determined that the end user terminated\n   the service\
    \ -- the server MUST debit the used amount from the user's\n   account but MUST\
    \ NOT return a new quota in the corresponding answer.\n   The Validity-Time, Result-Code,\
    \ and Final-Unit-Indication or\n   QoS-Final-Unit-Indication AVPs MAY be present\
    \ in a Credit-Control-\n   Answer command as defined in Sections 5.1.2 and 5.6\
    \ for graceful\n   service termination.\n   When both the Tariff-Time-Change AVP\
    \ and the Tariff-Change-Usage AVP\n   are present, the server MUST include two\
    \ separate instances of the\n   Multiple-Services-Credit-Control AVP with the\
    \ Granted-Service-Unit\n   AVP associated to the same service-identifier and/or\
    \ rating-group.\n   Where the two quotas are associated to the same pool or to\
    \ different\n   pools, the credit-pooling mechanism defined in Section 5.1.2 applies.\n\
    \   When the client is reporting used units before and after the tariff\n   time\
    \ change, it MUST use the Tariff-Change-Usage AVP inside the\n   Used-Service-Unit\
    \ AVP.\n   A server not implementing the independent credit-control of multiple\n\
    \   services MUST treat the Multiple-Services-Credit-Control AVP as an\n   invalid\
    \ AVP.\n   The Multiple-Services-Credit-Control AVP is defined as follows (per\n\
    \   grouped-avp-def as defined in [RFC6733]):\n    Multiple-Services-Credit-Control\
    \ ::= < AVP Header: 456 >\n                                         [ Granted-Service-Unit\
    \ ]\n                                         [ Requested-Service-Unit ]\n   \
    \                                     *[ Used-Service-Unit ]\n               \
    \                          [ Tariff-Change-Usage ]\n                         \
    \               *[ Service-Identifier ]\n                                    \
    \     [ Rating-Group ]\n                                        *[ G-S-U-Pool-Reference\
    \ ]\n                                         [ Validity-Time ]\n            \
    \                             [ Result-Code ]\n                              \
    \           [ Final-Unit-Indication ]\n                                      \
    \   [ QoS-Final-Unit-Indication ]\n                                        *[\
    \ AVP ]\n"
- title: 8.17.  Granted-Service-Unit AVP
  contents:
  - "8.17.  Granted-Service-Unit AVP\n   The Granted-Service-Unit AVP (AVP Code 431)\
    \ is of type Grouped and\n   contains the amount of units that the Diameter Credit-Control\
    \ client\n   can provide to the end user until the service must be released or\
    \ the\n   new Credit-Control-Request must be sent.  A client is not required to\n\
    \   implement all the unit types, and it must treat unknown or\n   unsupported\
    \ unit types in the Answer message as an incorrect CCA.  In\n   this case, the\
    \ client MUST terminate the credit-control session and\n   indicate the reason\
    \ as DIAMETER_BAD_ANSWER in the Termination-Cause\n   AVP.\n   The Granted-Service-Unit\
    \ AVP is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n\
    \         Granted-Service-Unit ::= < AVP Header: 431 >\n                     \
    \             [ Tariff-Time-Change ]\n                                  [ CC-Time\
    \ ]\n                                  [ CC-Money ]\n                        \
    \          [ CC-Total-Octets ]\n                                  [ CC-Input-Octets\
    \ ]\n                                  [ CC-Output-Octets ]\n                \
    \                  [ CC-Service-Specific-Units ]\n                           \
    \      *[ AVP ]\n"
- title: 8.18.  Requested-Service-Unit AVP
  contents:
  - "8.18.  Requested-Service-Unit AVP\n   The Requested-Service-Unit AVP (AVP Code\
    \ 437) is of type Grouped and\n   contains the amount of requested units specified\
    \ by the Diameter\n   Credit-Control client.  A server is not required to implement\
    \ all the\n   unit types, and it must treat unknown or unsupported unit types\
    \ as\n   invalid AVPs.\n   The Requested-Service-Unit AVP is defined as follows\
    \ (per\n   grouped-avp-def as defined in [RFC6733]):\n         Requested-Service-Unit\
    \ ::= < AVP Header: 437 >\n                                    [ CC-Time ]\n \
    \                                   [ CC-Money ]\n                           \
    \         [ CC-Total-Octets ]\n                                    [ CC-Input-Octets\
    \ ]\n                                    [ CC-Output-Octets ]\n              \
    \                      [ CC-Service-Specific-Units ]\n                       \
    \            *[ AVP ]\n"
- title: 8.19.  Used-Service-Unit AVP
  contents:
  - "8.19.  Used-Service-Unit AVP\n   The Used-Service-Unit AVP is of type Grouped\
    \ (AVP Code 446) and\n   contains the amount of used units measured from the point\
    \ when the\n   service became active or, if interim interrogations are used during\n\
    \   the session, from the point when the previous measurement ended.\n   Note:\
    \ The value reported in a Used-Service-Unit AVP is not\n   necessarily related\
    \ to the grant provided in a Granted-Service-Unit\n   AVP, e.g., the value in\
    \ this AVP may exceed the value in the grant.\n   The Used-Service-Unit AVP is\
    \ defined as follows (per grouped-avp-def\n   as defined in [RFC6733]):\n    \
    \     Used-Service-Unit ::= < AVP Header: 446 >\n                            \
    \   [ Tariff-Change-Usage ]\n                               [ CC-Time ]\n    \
    \                           [ CC-Money ]\n                               [ CC-Total-Octets\
    \ ]\n                               [ CC-Input-Octets ]\n                    \
    \           [ CC-Output-Octets ]\n                               [ CC-Service-Specific-Units\
    \ ]\n                              *[ AVP ]\n"
- title: 8.20.  Tariff-Time-Change AVP
  contents:
  - "8.20.  Tariff-Time-Change AVP\n   The Tariff-Time-Change AVP (AVP Code 451) is\
    \ of type Time.  It is\n   sent from the server to the client and includes the\
    \ time in seconds\n   since January 1, 1900, 00:00 UTC, when the tariff of the\
    \ service will\n   be changed.\n   The tariff change mechanism is optional for\
    \ the client and server,\n   and it is not used for time-based services (Section\
    \ 5).  If a client\n   does not support the tariff time change mechanism, it MUST\
    \ treat the\n   Tariff-Time-Change AVP in the Answer message as an incorrect CCA.\
    \  In\n   this case, the client terminates the credit-control session and\n  \
    \ indicates the reason as DIAMETER_BAD_ANSWER in the Termination-Cause\n   AVP.\n\
    \   Omission of this AVP means that no tariff change is to be reported.\n"
- title: 8.21.  CC-Time AVP
  contents:
  - "8.21.  CC-Time AVP\n   The CC-Time AVP (AVP Code 420) is of type Unsigned32 and\
    \ indicates\n   the length of the requested, granted, or used time in seconds.\n"
- title: 8.22.  CC-Money AVP
  contents:
  - "8.22.  CC-Money AVP\n   The CC-Money AVP (AVP Code 413) is of type Grouped and\
    \ specifies the\n   monetary amount in the given currency.  The Currency-Code\
    \ AVP SHOULD\n   be included.  The CC-Money AVP is defined as follows (per\n \
    \  grouped-avp-def as defined in [RFC6733]):\n         CC-Money ::= < AVP Header:\
    \ 413 >\n                      { Unit-Value }\n                      [ Currency-Code\
    \ ]\n"
- title: 8.23.  CC-Total-Octets AVP
  contents:
  - "8.23.  CC-Total-Octets AVP\n   The CC-Total-Octets AVP (AVP Code 421) is of type\
    \ Unsigned64 and\n   contains the total number of requested, granted, or used\
    \ octets\n   regardless of the direction (sent or received).\n"
- title: 8.24.  CC-Input-Octets AVP
  contents:
  - "8.24.  CC-Input-Octets AVP\n   The CC-Input-Octets AVP (AVP Code 412) is of type\
    \ Unsigned64 and\n   contains the number of requested, granted, or used octets\
    \ that\n   can be / have been received from the end user.\n"
- title: 8.25.  CC-Output-Octets AVP
  contents:
  - "8.25.  CC-Output-Octets AVP\n   The CC-Output-Octets AVP (AVP Code 414) is of\
    \ type Unsigned64 and\n   contains the number of requested, granted, or used octets\
    \ that\n   can be / have been sent to the end user.\n"
- title: 8.26.  CC-Service-Specific-Units AVP
  contents:
  - "8.26.  CC-Service-Specific-Units AVP\n   The CC-Service-Specific-Units AVP (AVP\
    \ Code 417) is of type\n   Unsigned64 and specifies the number of service-specific\
    \ units (e.g.,\n   number of events, points) given in a selected service.  The\
    \ service-\n   specific units always refer to the service identified in the Service-\n\
    \   Identifier AVP (or Rating-Group AVP when the Multiple-Services-\n   Credit-Control\
    \ AVP is used).\n"
- title: 8.27.  Tariff-Change-Usage AVP
  contents:
  - "8.27.  Tariff-Change-Usage AVP\n   The Tariff-Change-Usage AVP (AVP Code 452)\
    \ is of type Enumerated and\n   defines whether units are used before or after\
    \ a tariff change, or\n   whether the units straddled a tariff change during the\
    \ reporting\n   period.  Omission of this AVP means that no tariff change has\n\
    \   occurred.\n   In addition, when present in Answer messages as part of the\
    \ Multiple-\n   Services-Credit-Control AVP, this AVP defines whether units are\n\
    \   allocated to be used before or after a tariff change event.\n   When the Tariff-Time-Change\
    \ AVP is present, omission of this AVP in\n   Answer messages means that the single-quota\
    \ mechanism applies.\n   Tariff-Change-Usage can be set to one of the following\
    \ values:\n   UNIT_BEFORE_TARIFF_CHANGE   0\n   When present in the Multiple-Services-Credit-Control\
    \ AVP, this value\n   indicates the amount of units allocated for use before a\
    \ tariff\n   change occurs.\n   When present in the Used-Service-Unit AVP, this\
    \ value indicates the\n   amount of resource units used before a tariff change\
    \ had occurred.\n   UNIT_AFTER_TARIFF_CHANGE    1\n   When present in the Multiple-Services-Credit-Control\
    \ AVP, this value\n   indicates the amount of units allocated for use after a\
    \ tariff change\n   occurs.\n   When present in the Used-Service-Unit AVP, this\
    \ value indicates the\n   amount of resource units used after a tariff change\
    \ had occurred.\n   UNIT_INDETERMINATE          2\n   This value is to be used\
    \ only in the Used-Service-Unit AVP and\n   indicates the amount of resource units\
    \ that straddle the tariff\n   change (e.g., the metering process reports to the\
    \ credit-control\n   client in blocks of n octets, and one block straddled the\
    \ tariff\n   change).\n"
- title: 8.28.  Service-Identifier AVP
  contents:
  - "8.28.  Service-Identifier AVP\n   The Service-Identifier AVP is of type Unsigned32\
    \ (AVP Code 439) and\n   contains the identifier of a service.  The specific service\
    \ the\n   request relates to is uniquely identified by the combination of the\n\
    \   Service-Context-Id AVP and the Service-Identifier AVP.\n   A usage example\
    \ of this AVP is illustrated in Appendix A.9.\n"
- title: 8.29.  Rating-Group AVP
  contents:
  - "8.29.  Rating-Group AVP\n   The Rating-Group AVP is of type Unsigned32 (AVP Code\
    \ 432) and\n   contains the identifier of a rating-group.  All the services subject\n\
    \   to the same rating type are part of the same rating-group.  The\n   specific\
    \ rating-group the request relates to is uniquely identified\n   by the combination\
    \ of the Service-Context-Id AVP and the Rating-Group\n   AVP.\n   A usage example\
    \ of this AVP is illustrated in Appendix A.9.\n"
- title: 8.30.  G-S-U-Pool-Reference AVP
  contents:
  - "8.30.  G-S-U-Pool-Reference AVP\n   The G-S-U-Pool-Reference AVP (AVP Code 457)\
    \ is of type Grouped.  It\n   is used in the Credit-Control-Answer message and\
    \ associates the\n   Granted-Service-Unit AVP within which it appears with a credit\
    \ pool\n   within the session.\n   The G-S-U-Pool-Identifier AVP specifies the\
    \ credit pool from which\n   credit is drawn for this unit type.\n   The CC-Unit-Type\
    \ AVP specifies the type of units for which credit is\n   pooled.\n   The Unit-Value\
    \ AVP specifies the multiplier, which converts between\n   service units of type\
    \ CC-Unit-Type and abstract service units within\n   the credit pool (and thus\
    \ to service units of any other services or\n   rating-groups associated with\
    \ the same pool).\n   The G-S-U-Pool-Reference AVP is defined as follows (per\n\
    \   grouped-avp-def as defined in [RFC6733]):\n           G-S-U-Pool-Reference\
    \ ::= < AVP Header: 457 >\n                                    { G-S-U-Pool-Identifier\
    \ }\n                                    { CC-Unit-Type }\n                  \
    \                  { Unit-Value }\n"
- title: 8.31.  G-S-U-Pool-Identifier AVP
  contents:
  - "8.31.  G-S-U-Pool-Identifier AVP\n   The G-S-U-Pool-Identifier AVP (AVP Code\
    \ 453) is of type Unsigned32\n   and identifies a credit pool within the session.\n"
- title: 8.32.  CC-Unit-Type AVP
  contents:
  - "8.32.  CC-Unit-Type AVP\n   The CC-Unit-Type AVP (AVP Code 454) is of type Enumerated\
    \ and\n   specifies the type of units considered to be pooled into a\n   credit\
    \ pool.\n   The following values are defined for the CC-Unit-Type AVP:\n     \
    \    TIME                         0\n         MONEY                        1\n\
    \         TOTAL-OCTETS                 2\n         INPUT-OCTETS              \
    \   3\n         OUTPUT-OCTETS                4\n         SERVICE-SPECIFIC-UNITS\
    \       5\n"
- title: 8.33.  Validity-Time AVP
  contents:
  - "8.33.  Validity-Time AVP\n   The Validity-Time AVP is of type Unsigned32 (AVP\
    \ Code 448).  It is\n   sent from the credit-control server to the credit-control\
    \ client.\n   The Validity-Time AVP contains the validity time of the granted\n\
    \   service units.  The measurement of the Validity-Time is started upon\n   receipt\
    \ of the Credit-Control-Answer message containing this AVP.  If\n   the granted\
    \ service units have not been consumed within the validity\n   time specified\
    \ in this AVP, the credit-control client MUST send a\n   Credit-Control-Request\
    \ message to the server, with CC-Request-Type\n   set to UPDATE_REQUEST.  The\
    \ value field of the Validity-Time AVP is\n   given in seconds.\n   The Validity-Time\
    \ AVP is also used for graceful service termination\n   (see Section 5.6) to indicate\
    \ to the credit-control client how long\n   the subscriber is allowed to use network\
    \ resources after the\n   specified action (i.e., REDIRECT or RESTRICT_ACCESS)\
    \ started.  When\n   the Validity-Time elapses, a new intermediate interrogation\
    \ is sent\n   to the server.\n"
- title: 8.34.  Final-Unit-Indication AVP
  contents:
  - "8.34.  Final-Unit-Indication AVP\n   The Final-Unit-Indication AVP (AVP Code\
    \ 430) is of type Grouped and\n   indicates that the Granted-Service-Unit AVP\
    \ in the Credit-Control-\n   Answer or in the AA-Answer contains the final units\
    \ for the service.\n   After these units have expired, the Diameter Credit-Control\
    \ client is\n   responsible for executing the action indicated in the Final-Unit-\n\
    \   Action AVP (see Section 5.6).\n   If more than one unit type is received in\
    \ the Credit-Control-Answer,\n   the unit type that first expired SHOULD cause\
    \ the credit-control\n   client to execute the specified action.\n   In the first\
    \ interrogation, the Final-Unit-Indication AVP with\n   Final-Unit-Action set\
    \ to REDIRECT or RESTRICT_ACCESS can also be\n   present with no Granted-Service-Unit\
    \ AVP in the Credit-Control-Answer\n   or in the AA-Answer.  This indicates to\
    \ the Diameter Credit-Control\n   client that the client is to execute the specified\
    \ action\n   immediately.  If the home service provider policy is to terminate\
    \ the\n   service, naturally, the server SHOULD return the appropriate\n   transient\
    \ failure (see Section 9.1) in order to implement the policy-\n   defined action.\n\
    \   The Final-Unit-Action AVP defines the behavior of the Service Element\n  \
    \ when the user's account cannot cover the cost of the service and MUST\n   always\
    \ be present if the Final-Unit-Indication AVP is included in a\n   command.\n\
    \   If the Final-Unit-Action AVP is set to TERMINATE, the Final-Unit-\n   Indication\
    \ group AVP MUST NOT contain any other AVPs.\n   If the Final-Unit-Action AVP\
    \ is set to REDIRECT, the Redirect-Server\n   AVP or the Redirect-Server-Extension\
    \ AVP (at least one) MUST be\n   present.  The Restriction-Filter-Rule AVP or\
    \ the Filter-Id AVP MAY be\n   present in the Credit-Control-Answer message if\
    \ the user is also\n   allowed to access other services that are not accessible\
    \ through the\n   address given in the Redirect-Server AVP.\n   If the Final-Unit-Action\
    \ AVP is set to RESTRICT_ACCESS, either the\n   Restriction-Filter-Rule AVP or\
    \ the Filter-Id AVP SHOULD be present.\n   The Filter-Id AVP is defined in [RFC7155].\
    \  The Filter-Id AVP can be\n   used to reference an IP filter list installed\
    \ in the access device by\n   means other than the Diameter Credit-Control application,\
    \ e.g.,\n   locally configured or configured by another entity.\n   If the Final-Unit-Action\
    \ AVP is set to REDIRECT and the type of\n   server is not one of the enumerations\
    \ in the Redirect-Address-Type\n   AVP, then the QoS-Final-Unit-Indication AVP\
    \ SHOULD be used together\n   with the Redirect-Server-Extension AVP instead of\
    \ the Final-Unit-\n   Indication AVP.\n   If the Final-Unit-Action AVP is set\
    \ to RESTRICT_ACCESS or REDIRECT\n   and the classification of the restricted\
    \ traffic cannot be expressed\n   using an IPFilterRule, or if actions (e.g.,\
    \ QoS) other than just\n   allowing traffic need to be enforced, then the QoS-Final-Unit-\n\
    \   Indication AVP SHOULD be used instead of the Final-Unit-Indication\n   AVP.\
    \  However, if the credit-control server wants to preserve\n   backward compatibility\
    \ with credit-control clients that support only\n   [RFC4006], the Final-Unit-Indication\
    \ AVP SHOULD be used together with\n   the Filter-Id AVP.\n   The Final-Unit-Indication\
    \ AVP is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n\
    \         Final-Unit-Indication ::= < AVP Header: 430 >\n                    \
    \               { Final-Unit-Action }\n                                  *[ Restriction-Filter-Rule\
    \ ]\n                                  *[ Filter-Id ]\n                      \
    \             [ Redirect-Server ]\n"
- title: 8.35.  Final-Unit-Action AVP
  contents:
  - "8.35.  Final-Unit-Action AVP\n   The Final-Unit-Action AVP (AVP Code 449) is\
    \ of type Enumerated and\n   indicates to the credit-control client the action\
    \ to be taken when\n   the user's account cannot cover the service cost.\n   Final-Unit-Action\
    \ can be set to one of the following values:\n   TERMINATE         0\n   The credit-control\
    \ client MUST terminate the service session.  This\n   is the default handling,\
    \ applicable whenever the credit-control\n   client receives an unsupported Final-Unit-Action\
    \ value, and it MUST\n   be supported by all the Diameter Credit-Control client\n\
    \   implementations conforming to this specification.\n   REDIRECT          1\n\
    \   The Service Element MUST redirect the user to the address specified\n   in\
    \ the Redirect-Server-Address AVP or one of the AVPs included in the\n   Redirect-Server-Extension\
    \ AVP.  The redirect action is defined in\n   Section 5.6.2.\n   RESTRICT_ACCESS\
    \   2\n   The access device MUST restrict the user's access according to the\n\
    \   filter AVPs contained in the applied Grouped AVP: according to IP\n   packet\
    \ filters defined in the Restriction-Filter-Rule AVP, according\n   to the packet\
    \ classifier filters defined in the Filter-Rule AVP, or\n   according to the packet\
    \ filters identified by the Filter-Id AVP.  All\n   of the packets not matching\
    \ any restriction filters (see\n   Section 5.6.3) MUST be dropped.\n"
- title: 8.36.  Restriction-Filter-Rule AVP
  contents:
  - "8.36.  Restriction-Filter-Rule AVP\n   The Restriction-Filter-Rule AVP (AVP Code\
    \ 438) is of type\n   IPFilterRule and provides filter rules corresponding to\
    \ services that\n   are to remain accessible even if there are no more service\
    \ units\n   granted.  The access device has to configure the specified filter\n\
    \   rules for the subscriber and MUST drop all the packets not matching\n   these\
    \ filters.  Zero, one, or more such AVPs MAY be present in a\n   Credit-Control-Answer\
    \ message or in an AA-Answer message.\n"
- title: 8.37.  Redirect-Server AVP
  contents:
  - "8.37.  Redirect-Server AVP\n   The Redirect-Server AVP (AVP Code 434) is of type\
    \ Grouped and\n   contains the address information of the redirect server (e.g.,\
    \ HTTP\n   redirect server, SIP Server) with which the end user is to be\n   connected\
    \ when the account cannot cover the service cost.  It MUST be\n   present when\
    \ the Final-Unit-Action AVP is set to REDIRECT.\n   The Redirect-Server AVP is\
    \ defined as follows (per grouped-avp-def as\n   defined in [RFC6733]):\n    \
    \     Redirect-Server ::= < AVP Header: 434 >\n                             {\
    \ Redirect-Address-Type }\n                             { Redirect-Server-Address\
    \ }\n"
- title: 8.38.  Redirect-Address-Type AVP
  contents:
  - "8.38.  Redirect-Address-Type AVP\n   The Redirect-Address-Type AVP (AVP Code\
    \ 433) is of type Enumerated\n   and defines the address type of the address given\
    \ in the Redirect-\n   Server-Address AVP.\n   Redirect-Address-Type can be set\
    \ to one of the following values:\n   IPv4 Address   0\n   The address type is\
    \ in the form of a \"dotted-decimal\" IPv4 address,\n   as defined in [RFC791].\n\
    \   IPv6 Address   1\n   The address type is in the form of an IPv6 address, as\
    \ defined in\n   [RFC4291].  The address MUST conform to the textual representation\
    \ of\n   the address according to [RFC5952].\n   Because [RFC5952] is more restrictive\
    \ than the \"RFC 3513\" format\n   required by [RFC4006], some legacy implementations\
    \ may not be\n   compliant with the new requirements.  Accordingly, implementations\n\
    \   receiving this AVP MAY be liberal in the textual IPv6 representations\n  \
    \ that are accepted, without raising an error.\n   URL            2\n   The address\
    \ type is in the form of a Uniform Resource Locator, as\n   defined in [RFC3986].\n\
    \   SIP URI        3\n   The address type is in the form of a SIP Uniform Resource\
    \ Identifier,\n   as defined in [RFC3261].\n"
- title: 8.39.  Redirect-Server-Address AVP
  contents:
  - "8.39.  Redirect-Server-Address AVP\n   The Redirect-Server-Address AVP (AVP Code\
    \ 435) is of type UTF8String\n   and defines the address of the redirect server\
    \ (e.g., HTTP redirect\n   server, SIP Server) with which the end user is to be\
    \ connected when\n   the account cannot cover the service cost.\n"
- title: 8.40.  Multiple-Services-Indicator AVP
  contents:
  - "8.40.  Multiple-Services-Indicator AVP\n   The Multiple-Services-Indicator AVP\
    \ (AVP Code 455) is of type\n   Enumerated and indicates whether the Diameter\
    \ Credit-Control client\n   is capable of handling multiple services independently\
    \ within a\n   (sub-)session.  The absence of this AVP means that independent\n\
    \   credit-control of multiple services is not supported.\n   A server not implementing\
    \ the independent credit-control of multiple\n   services MUST treat the Multiple-Services-Indicator\
    \ AVP as an\n   invalid AVP.\n   The following values are defined for the Multiple-Services-Indicator\n\
    \   AVP:\n   MULTIPLE_SERVICES_NOT_SUPPORTED   0\n   The client does not support\
    \ independent credit-control of multiple\n   services within a (sub-)session.\n\
    \   MULTIPLE_SERVICES_SUPPORTED       1\n   The client supports independent credit-control\
    \ of multiple services\n   within a (sub-)session.\n"
- title: 8.41.  Requested-Action AVP
  contents:
  - "8.41.  Requested-Action AVP\n   The Requested-Action AVP (AVP Code 436) is of\
    \ type Enumerated and\n   contains the requested action being sent in a Credit-Control-Request\n\
    \   command where the CC-Request-Type is set to EVENT_REQUEST.  The\n   following\
    \ values are defined for the Requested-Action AVP:\n   DIRECT_DEBITING   0\n \
    \  This indicates a request to decrease the end user's account according\n   to\
    \ information specified in the Requested-Service-Unit AVP and/or\n   Service-Identifier\
    \ AVP (additional rating information may be included\n   in service-specific AVPs\
    \ or in the Service-Parameter-Info AVP).  The\n   Granted-Service-Unit AVP in\
    \ the Credit-Control-Answer command\n   contains the debited units.\n   REFUND_ACCOUNT\
    \    1\n   This indicates a request to increase the end user's account according\n\
    \   to information specified in the Requested-Service-Unit AVP and/or\n   Service-Identifier\
    \ AVP (additional rating information may be included\n   in service-specific AVPs\
    \ or in the Service-Parameter-Info AVP).  The\n   Granted-Service-Unit AVP in\
    \ the Credit-Control-Answer command\n   contains the refunded units.\n   CHECK_BALANCE\
    \     2\n   This indicates a balance-check request.  In this case, the checking\n\
    \   of the account balance is done without any credit reservations from\n   the\
    \ account.  The Check-Balance-Result AVP in the Credit-Control-\n   Answer command\
    \ contains the result of the balance check.\n   PRICE_ENQUIRY     3\n   This indicates\
    \ a price-inquiry request.  In this case, neither\n   checking of the account\
    \ balance nor reservation from the account will\n   be done; only the price of\
    \ the service will be returned in the\n   Cost-Information AVP in the Credit-Control-Answer\
    \ command.\n"
- title: 8.42.  Service-Context-Id AVP
  contents:
  - "8.42.  Service-Context-Id AVP\n   The Service-Context-Id AVP is of type UTF8String\
    \ (AVP Code 461) and\n   contains a unique identifier of the Diameter Credit-Control\
    \ service-\n   specific document (as defined in Section 4.1.2) that applies to\
    \ the\n   request.  This is an identifier allocated by the service provider,\n\
    \   the Service Element manufacturer, or a standardization body, and MUST\n  \
    \ uniquely identify a given Diameter Credit-Control service-specific\n   document.\
    \  The format of the Service-Context-Id is:\n   \"service-context\" \"@\" \"domain\"\
    \n   service-context = Token\n   The Token is an arbitrary string of characters\
    \ and digits.\n   \"domain\" represents the entity that allocated the Service-Context-Id.\n\
    \   It can be ietf.org, 3gpp.org, etc. if the identifier is allocated by\n   a\
    \ standardization body, or it can be the Fully Qualified Domain Name\n   (FQDN)\
    \ of the service provider (e.g., provider.example.com) or the\n   vendor (e.g.,\
    \ vendor.example.com) if the identifier is allocated by a\n   private entity.\n\
    \   This AVP SHOULD be placed as close to the Diameter header as\n   possible.\n\
    \   Service-specific documents that are for private use only (i.e., for\n   one\
    \ provider's own use, where no interoperability is deemed useful)\n   may define\
    \ private identifiers without a need for coordination.\n   However, when interoperability\
    \ is desired, coordination of the\n   identifiers via, for example, publication\
    \ of an informational RFC is\n   RECOMMENDED in order to make the Service-Context-Id\
    \ AVP globally\n   available.\n"
- title: 8.43.  Service-Parameter-Info AVP
  contents:
  - "8.43.  Service-Parameter-Info AVP\n   The Service-Parameter-Info AVP (AVP Code\
    \ 440) is of type Grouped and\n   contains service-specific information used for\
    \ price calculation or\n   rating.  The Service-Parameter-Type AVP defines the\
    \ service parameter\n   type, and the Service-Parameter-Value AVP contains the\
    \ parameter\n   value.  The actual contents of these AVPs are not within the scope\
    \ of\n   this document and SHOULD be defined in another Diameter application,\n\
    \   in standards written by other standardization bodies, or in service-\n   specific\
    \ documentation.\n   In the case of an unknown service request (e.g., unknown\
    \ Service-\n   Parameter-Type), the corresponding Answer message MUST contain\
    \ the\n   error code DIAMETER_RATING_FAILED.  A Credit-Control-Answer message\n\
    \   with this error MUST contain one or more Failed-AVP AVPs containing\n   the\
    \ Service-Parameter-Info AVPs that caused the failure.\n   The Service-Parameter-Info\
    \ AVP is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n\
    \         Service-Parameter-Info ::= < AVP Header: 440 >\n                   \
    \                 { Service-Parameter-Type }\n                               \
    \     { Service-Parameter-Value }\n"
- title: 8.44.  Service-Parameter-Type AVP
  contents:
  - "8.44.  Service-Parameter-Type AVP\n   The Service-Parameter-Type AVP is of type\
    \ Unsigned32 (AVP Code 441)\n   and defines the type of the service-event-specific\
    \ parameter (e.g.,\n   it can be the end-user location or service name).  The\
    \ different\n   parameters and their types are service specific, and the meanings\
    \ of\n   these parameters are not defined in this document.  Whoever allocates\n\
    \   the Service-Context-Id (i.e., a unique identifier of a service-\n   specific\
    \ document) is also responsible for assigning Service-\n   Parameter-Type values\
    \ for the service and ensuring their uniqueness\n   within the given service.\
    \  The Service-Parameter-Value AVP contains\n   the value associated with the\
    \ service parameter type.\n"
- title: 8.45.  Service-Parameter-Value AVP
  contents:
  - "8.45.  Service-Parameter-Value AVP\n   The Service-Parameter-Value AVP is of\
    \ type OctetString (AVP Code 442)\n   and contains the value of the service parameter\
    \ type.\n"
- title: 8.46.  Subscription-Id AVP
  contents:
  - "8.46.  Subscription-Id AVP\n   The Subscription-Id AVP (AVP Code 443) is used\
    \ to identify the\n   end user's subscription and is of type Grouped.  The Subscription-Id\n\
    \   AVP includes a Subscription-Id-Data AVP that holds the identifier and\n  \
    \ a Subscription-Id-Type AVP that defines the identifier type.\n   The Subscription-Id\
    \ AVP is defined as follows (per grouped-avp-def as\n   defined in [RFC6733]):\n\
    \         Subscription-Id ::= < AVP Header: 443 >\n                          \
    \   { Subscription-Id-Type }\n                             { Subscription-Id-Data\
    \ }\n"
- title: 8.47.  Subscription-Id-Type AVP
  contents:
  - "8.47.  Subscription-Id-Type AVP\n   The Subscription-Id-Type AVP (AVP Code 450)\
    \ is of type Enumerated,\n   and it is used to determine which type of identifier\
    \ is carried by\n   the Subscription-Id AVP.\n   This specification defines the\
    \ following subscription identifiers.\n   However, new Subscription-Id-Type values\
    \ can be assigned by IANA as\n   defined in Section 12.  A server MUST implement\
    \ all the Subscription-\n   Id-Type values required to perform credit authorization\
    \ for the\n   services it supports, including possible future values.  Unknown\
    \ or\n   unsupported Subscription-Id-Type values MUST be treated according to\n\
    \   the 'M' flag rule, as defined in [RFC6733].\n   END_USER_E164      0\n   The\
    \ identifier is in international E.164 format (e.g., MSISDN),\n   according to\
    \ the ITU-T E.164 numbering plan defined in [E164] and\n   [CE164].\n   END_USER_IMSI\
    \      1\n   The identifier is in IMSI format, according to the ITU-T E.212\n\
    \   identification plan as defined in [E212] and [CE212].\n   END_USER_SIP_URI\
    \   2\n   The identifier is in the form of a SIP URI, as defined in [RFC3261].\n\
    \   END_USER_NAI       3\n   The identifier is in the form of a Network Access\
    \ Identifier, as\n   defined in [RFC7542].\n   END_USER_PRIVATE   4\n   The identifier\
    \ is a credit-control server private identifier.\n"
- title: 8.48.  Subscription-Id-Data AVP
  contents:
  - "8.48.  Subscription-Id-Data AVP\n   The Subscription-Id-Data AVP (AVP Code 444)\
    \ is used to identify the\n   end user and is of type UTF8String.  The Subscription-Id-Type\
    \ AVP\n   defines which type of identifier is used.\n"
- title: 8.49.  User-Equipment-Info AVP
  contents:
  - "8.49.  User-Equipment-Info AVP\n   The User-Equipment-Info AVP (AVP Code 458)\
    \ is of type Grouped and\n   allows the credit-control client to indicate the\
    \ identity and\n   capability of the terminal the subscriber is using for the\
    \ connection\n   to the network.\n   The User-Equipment-Info AVP is defined as\
    \ follows (per\n   grouped-avp-def as defined in [RFC6733]):\n         User-Equipment-Info\
    \ ::= < AVP Header: 458 >\n                                 { User-Equipment-Info-Type\
    \ }\n                                 { User-Equipment-Info-Value }\n"
- title: 8.50.  User-Equipment-Info-Type AVP
  contents:
  - "8.50.  User-Equipment-Info-Type AVP\n   The User-Equipment-Info-Type AVP is of\
    \ type Enumerated (AVP Code 459)\n   and defines the type of user equipment information\
    \ contained in the\n   User-Equipment-Info-Value AVP.\n   This specification defines\
    \ the following user equipment types.\n   However, new User-Equipment-Info-Type\
    \ values can be assigned by IANA\n   as defined in Section 12.\n   IMEISV    \
    \       0\n   The identifier contains the International Mobile Equipment Identifier\n\
    \   and Software Version (IMEISV) in the IMEISV format according to 3GPP\n   TS\
    \ 23.003 [TGPPIMEI].\n   MAC              1\n   The 48-bit Media Access Control\
    \ (MAC) address is formatted as\n   described in Section 3.21 of [RFC3580].\n\
    \   EUI64            2\n   The 64-bit identifier used to identify the hardware\
    \ instance of the\n   product, as defined in [EUI64].\n   MODIFIED_EUI64   3\n\
    \   There are a number of types of terminals that have identifiers other\n   than\
    \ the International Mobile Equipment Identifier (IMEI), IEEE 802\n   MACs, or\
    \ EUI-64.  These identifiers can be converted to modified\n   EUI-64 format as\
    \ described in [RFC4291] or by using some other\n   methods referred to in the\
    \ service-specific documentation.\n"
- title: 8.51.  User-Equipment-Info-Value AVP
  contents:
  - "8.51.  User-Equipment-Info-Value AVP\n   The User-Equipment-Info-Value AVP (AVP\
    \ Code 460) is of type\n   OctetString.  The User-Equipment-Info-Type AVP defines\
    \ which type of\n   identifier is used.\n"
- title: 8.52.  User-Equipment-Info-Extension AVP
  contents:
  - "8.52.  User-Equipment-Info-Extension AVP\n   The User-Equipment-Info-Extension\
    \ AVP (AVP Code 653) is of type\n   Grouped and allows the credit-control client\
    \ to indicate the identity\n   and capability of the terminal the subscriber is\
    \ using for the\n   connection to the network.  If the type of the equipment is\
    \ one of\n   the enumerated User-Equipment-Info-Type AVP values, then the\n  \
    \ credit-control client SHOULD send the information in the\n   User-Equipment-Info\
    \ AVP, in addition to or instead of the\n   User-Equipment-Info-Extension AVP.\
    \  This is done in order to preserve\n   backward compatibility with credit-control\
    \ servers that support only\n   [RFC4006].  Exactly one AVP MUST be included inside\
    \ the\n   User-Equipment-Info-Extension AVP.\n   The User-Equipment-Info-Extension\
    \ AVP is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n\
    \    User-Equipment-Info-Extension ::= < AVP Header: 653 >\n                 \
    \                 [ User-Equipment-Info-IMEISV ]\n                           \
    \       [ User-Equipment-Info-MAC ]\n                                  [ User-Equipment-Info-EUI64\
    \ ]\n                                  [ User-Equipment-Info-ModifiedEUI64 ]\n\
    \                                  [ User-Equipment-Info-IMEI ]\n            \
    \                      [ AVP ]\n"
- title: 8.53.  User-Equipment-Info-IMEISV AVP
  contents:
  - "8.53.  User-Equipment-Info-IMEISV AVP\n   The User-Equipment-Info-IMEISV AVP\
    \ (AVP Code 654) is of type\n   OctetString.  The User-Equipment-Info-IMEISV AVP\
    \ contains the\n   International Mobile Equipment Identifier and Software Version\
    \ in the\n   IMEISV format according to 3GPP TS 23.003 [TGPPIMEI].\n"
- title: 8.54.  User-Equipment-Info-MAC AVP
  contents:
  - "8.54.  User-Equipment-Info-MAC AVP\n   The User-Equipment-Info-MAC AVP (AVP Code\
    \ 655) is of type\n   OctetString.  The User-Equipment-Info-MAC AVP contains the\
    \ 48-bit MAC\n   address; the MAC address is formatted as described in Section\
    \ 4.1.7.8\n   of [RFC5777].\n"
- title: 8.55.  User-Equipment-Info-EUI64 AVP
  contents:
  - "8.55.  User-Equipment-Info-EUI64 AVP\n   The User-Equipment-Info-EUI64 AVP (AVP\
    \ Code 656) is of type\n   OctetString.  The User-Equipment-Info-EUI64 AVP contains\
    \ the 64-bit\n   identifier used to identify the hardware instance of the product,\
    \ as\n   defined in [EUI64].\n"
- title: 8.56.  User-Equipment-Info-ModifiedEUI64 AVP
  contents:
  - "8.56.  User-Equipment-Info-ModifiedEUI64 AVP\n   The User-Equipment-Info-ModifiedEUI64\
    \ AVP (AVP Code 657) is of type\n   OctetString.  There are a number of types\
    \ of terminals that have\n   identifiers other than IMEI, IEEE 802 MACs, or EUI-64.\
    \  These\n   identifiers can be converted to modified EUI-64 format as described\n\
    \   in [RFC4291] or by using some other methods referred to in the\n   service-specific\
    \ documentation.  The User-Equipment-Info-\n   ModifiedEUI64 AVP contains such\
    \ identifiers.\n"
- title: 8.57.  User-Equipment-Info-IMEI AVP
  contents:
  - "8.57.  User-Equipment-Info-IMEI AVP\n   The User-Equipment-Info-IMEI AVP (AVP\
    \ Code 658) is of type\n   OctetString.  The User-Equipment-Info-IMEI AVP contains\
    \ the\n   International Mobile Equipment Identifier in the IMEI format\n   according\
    \ to 3GPP TS 23.003 [TGPPIMEI].\n"
- title: 8.58.  Subscription-Id-Extension AVP
  contents:
  - "8.58.  Subscription-Id-Extension AVP\n   The Subscription-Id-Extension AVP (AVP\
    \ Code 659) is used to identify\n   the end user's subscription and is of type\
    \ Grouped.  The\n   Subscription-Id-Extension group AVP MUST include an AVP holding\
    \ the\n   subscription identifier.  The type of this included AVP indicates the\n\
    \   type of the subscription identifier.  For each of the enumerated\n   values\
    \ of the Subscription-Id-Type AVP, there is a corresponding\n   sub-AVP for use\
    \ within the Subscription-Id-Extension group AVP.  If a\n   new identifier type\
    \ is required, a corresponding new sub-AVP SHOULD\n   be defined for use within\
    \ the Subscription-Id-Extension group AVP.\n   If full backward compatibility\
    \ with [RFC4006] is required, then the\n   Subscription-Id AVP MUST be used to\
    \ indicate identifier types\n   enumerated in the Subscription-Id-Type AVP, whereas\
    \ the Subscription-\n   Id-Extension AVP MUST be used only for newly defined identifier\n\
    \   types.  If full backward compatibility with [RFC4006] is not\n   required,\
    \ then the Subscription-Id-Extension AVP MAY be used to carry\n   the existing\
    \ identifier types.  In this case, the Subscription-Id-\n   Extension AVP MAY\
    \ be sent together with the Subscription-Id AVP.\n   Exactly one sub-AVP MUST\
    \ be included inside the Subscription-Id-\n   Extension AVP.\n   The Subscription-Id-Extension\
    \ AVP is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n\
    \         Subscription-Id-Extension ::= < AVP Header: 659 >\n                \
    \                   [ Subscription-Id-E164 ]\n                               \
    \    [ Subscription-Id-IMSI ]\n                                   [ Subscription-Id-SIP-URI\
    \ ]\n                                   [ Subscription-Id-NAI ]\n            \
    \                       [ Subscription-Id-Private ]\n                        \
    \           [ AVP ]\n"
- title: 8.59.  Subscription-Id-E164 AVP
  contents:
  - "8.59.  Subscription-Id-E164 AVP\n   The Subscription-Id-E164 AVP (AVP Code 660)\
    \ is of type UTF8String.\n   The Subscription-Id-E164 AVP contains the international\
    \ E.164 format\n   (e.g., MSISDN), according to the ITU-T E.164 numbering plan\
    \ defined\n   in [E164] and [CE164].\n"
- title: 8.60.  Subscription-Id-IMSI AVP
  contents:
  - "8.60.  Subscription-Id-IMSI AVP\n   The Subscription-Id-IMSI AVP (AVP Code 661)\
    \ is of type UTF8String.\n   The Subscription-Id-IMSI AVP contains the IMSI format,\
    \ according to\n   the ITU-T E.212 identification plan as defined in [E212] and\
    \ [CE212].\n"
- title: 8.61.  Subscription-Id-SIP-URI AVP
  contents:
  - "8.61.  Subscription-Id-SIP-URI AVP\n   The Subscription-Id-SIP-URI AVP (AVP Code\
    \ 662) is of type UTF8String.\n   The Subscription-Id-SIP-URI AVP contains the\
    \ identifier in the form\n   of a SIP URI, as defined in [RFC3261].\n"
- title: 8.62.  Subscription-Id-NAI AVP
  contents:
  - "8.62.  Subscription-Id-NAI AVP\n   The Subscription-Id-NAI AVP (AVP Code 663)\
    \ is of type UTF8String.\n   The Subscription-Id-NAI AVP contains the identifier\
    \ in the form of a\n   Network Access Identifier, as defined in [RFC7542].\n"
- title: 8.63.  Subscription-Id-Private AVP
  contents:
  - "8.63.  Subscription-Id-Private AVP\n   The Subscription-Id-Private AVP (AVP Code\
    \ 664) is of type UTF8String.\n   The Subscription-Id-Private AVP contains a credit-control\
    \ server\n   private identifier.\n"
- title: 8.64.  Redirect-Server-Extension AVP
  contents:
  - "8.64.  Redirect-Server-Extension AVP\n   The Redirect-Server-Extension AVP (AVP\
    \ Code 665) is of type Grouped\n   and contains the address information of the\
    \ redirect server (e.g.,\n   HTTP redirect server, SIP Server) with which the\
    \ end user is to be\n   connected when the account cannot cover the service cost.\
    \  It MUST be\n   present inside the QoS-Final-Unit-Indication AVP when the Final-Unit-\n\
    \   Action AVP is set to REDIRECT.  If the type of the redirect server is\n  \
    \ one of the enumerated values of the Redirect-Address-Type AVP, then\n   the\
    \ credit-control server SHOULD send the information in the\n   Redirect-Server\
    \ AVP, in addition to or instead of the Redirect-\n   Server-Extension AVP.  This\
    \ is done in order to preserve backward\n   compatibility with credit-control\
    \ clients that support only\n   [RFC4006].  Exactly one AVP MUST be included inside\
    \ the Redirect-\n   Server-Extension AVP.\n   The Redirect-Server-Extension AVP\
    \ is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n \
    \       Redirect-Server-Extension ::= < AVP Header: 665 >\n                  \
    \                [ Redirect-Address-IPAddress ]\n                            \
    \      [ Redirect-Address-URL ]\n                                  [ Redirect-Address-SIP-URI\
    \ ]\n                                  [ AVP ]\n"
- title: 8.65.  Redirect-Address-IPAddress AVP
  contents:
  - "8.65.  Redirect-Address-IPAddress AVP\n   The Redirect-Address-IPAddress AVP\
    \ (AVP Code 666) is of type Address\n   and defines the IPv4 or IPv6 address of\
    \ the redirect server with\n   which the end user is to be connected when the\
    \ account cannot cover\n   the service cost.\n   When encoded as an IPv6 address\
    \ in 16 bytes, the IPv4-mapped IPv6\n   format [RFC4291] MAY be used to indicate\
    \ an IPv4 address.\n   The interpretation of Redirect-Address-IPAddress by the\
    \ Diameter\n   Credit-Control client is a matter of local policy.\n"
- title: 8.66.  Redirect-Address-URL AVP
  contents:
  - "8.66.  Redirect-Address-URL AVP\n   The Redirect-Address-URL AVP (AVP Code 667)\
    \ is of type UTF8String and\n   defines the address of the redirect server with\
    \ which the end user is\n   to be connected when the account cannot cover the\
    \ service cost.  The\n   address type is in the form of a Uniform Resource Locator,\
    \ as defined\n   in [RFC3986].  Note that individual URL schemes may restrict\
    \ the\n   contents of the UTF8String.\n"
- title: 8.67.  Redirect-Address-SIP-URI AVP
  contents:
  - "8.67.  Redirect-Address-SIP-URI AVP\n   The Redirect-Address-SIP-URI AVP (AVP\
    \ Code 668) is of type UTF8String\n   and defines the address of the redirect\
    \ server with which the end\n   user is to be connected when the account cannot\
    \ cover the service\n   cost.  The address type is in the form of a SIP Uniform\
    \ Resource\n   Identifier, as defined in [RFC3261].\n"
- title: 8.68.  QoS-Final-Unit-Indication AVP
  contents:
  - "8.68.  QoS-Final-Unit-Indication AVP\n   The QoS-Final-Unit-Indication AVP (AVP\
    \ Code 669) is of type Grouped\n   and indicates that the Granted-Service-Unit\
    \ AVP in the\n   Credit-Control-Answer or in the AA-Answer contains the final\
    \ units\n   for the service.  After these units have expired, the Diameter\n \
    \  Credit-Control client is responsible for executing the action\n   indicated\
    \ in the Final-Unit-Action AVP (see Section 5.6).\n   If more than one unit type\
    \ is received in the Credit-Control-Answer,\n   the unit type that first expired\
    \ SHOULD cause the credit-control\n   client to execute the specified action.\n\
    \   In the first interrogation, the QoS-Final-Unit-Indication AVP with\n   Final-Unit-Action\
    \ set to REDIRECT or RESTRICT_ACCESS can also be\n   present with no Granted-Service-Unit\
    \ AVP in the Credit-Control-Answer\n   or in the AA-Answer.  This indicates to\
    \ the Diameter Credit-Control\n   client that the client is to execute the specified\
    \ action\n   immediately.  If the home service provider policy is to terminate\
    \ the\n   service, naturally, the server SHOULD return the appropriate\n   transient\
    \ failure (see Section 9.1) in order to implement the\n   policy-defined action.\n\
    \   The Final-Unit-Action AVP defines the behavior of the Service Element\n  \
    \ when the user's account cannot cover the cost of the service and MUST\n   always\
    \ be present if the QoS-Final-Unit-Indication AVP is included in\n   a command.\n\
    \   If the Final-Unit-Action AVP is set to TERMINATE, the QoS-Final-Unit-\n  \
    \ Indication group AVP MUST NOT contain any other AVPs.\n   If the Final-Unit-Action\
    \ AVP is set to REDIRECT, then the Redirect-\n   Server-Extension AVP MUST be\
    \ present.  The Filter-Rule AVP or the\n   Filter-Id AVP MAY be present in the\
    \ Credit-Control-Answer message if\n   the user is also allowed to access other\
    \ services that are not\n   accessible through the address given in the Redirect-Server-Extension\n\
    \   AVP or if access to these services needs to be limited in some way\n   (e.g.,\
    \ QoS).\n   If the Final-Unit-Action AVP is set to RESTRICT_ACCESS, either the\n\
    \   Filter-Rule AVP or the Filter-Id AVP SHOULD be present.\n   The Filter-Rule\
    \ AVP is defined in [RFC5777].  The Filter-Rule AVP can\n   be used to define\
    \ a specific combination of a condition and an\n   action.  If used only with\
    \ traffic conditions, it should define which\n   traffic should be allowed when\
    \ no more service units are granted.\n   However, if QoS or treatment information\
    \ exists in the AVP, these\n   actions should be executed, e.g., limiting the\
    \ allowed traffic with\n   certain QoS information.  When multiple Filter-Rule\
    \ AVPs exist,\n   precedence should be determined as defined in [RFC5777].\n \
    \  The Filter-Id AVP is defined in [RFC7155].  The Filter-Id AVP can be\n   used\
    \ to reference an IP filter list installed in the access device by\n   means other\
    \ than the Diameter Credit-Control application, e.g.,\n   locally configured or\
    \ configured by another entity.\n   If the Final-Unit-Action AVP is (1) set to\
    \ TERMINATE, (2) set to\n   RESTRICT_ACCESS and the action required is to allow\
    \ only traffic that\n   could be classified using an IPFilterRule, or (3) set\
    \ to REDIRECT\n   using a type that is one of the types in the Redirect-Address-Type\n\
    \   AVP, then the credit-control server SHOULD send the information in\n   the\
    \ Final-Unit-Indication AVP, in addition to or instead of the\n   QoS-Final-Unit-Indication\
    \ AVP.  This is done in order to preserve\n   backward compatibility with credit-control\
    \ clients that support only\n   [RFC4006].\n   The QoS-Final-Unit-Indication AVP\
    \ is defined as follows (per\n   grouped-avp-def as defined in [RFC6733]):\n \
    \        QoS-Final-Unit-Indication ::= < AVP Header: 669 >\n                 \
    \                  { Final-Unit-Action }\n                                  *[\
    \ Filter-Rule ]\n                                  *[ Filter-Id ]\n          \
    \                         [ Redirect-Server-Extension ]\n                    \
    \              *[ AVP ]\n"
- title: 9.  Result-Code AVP Values
  contents:
  - "9.  Result-Code AVP Values\n   This section defines new Result-Code AVP [RFC6733]\
    \ values that must\n   be supported by all Diameter implementations that conform\
    \ to this\n   specification.\n   The Credit-Control-Answer message includes the\
    \ Result-Code AVP, which\n   may indicate that an error was present in the Credit-Control-Request\n\
    \   message.  A rejected Credit-Control-Request message SHOULD cause the\n   user's\
    \ session to be terminated.\n"
- title: 9.1.  Transient Failures
  contents:
  - "9.1.  Transient Failures\n   Errors that fall within the category of transient\
    \ failures are used\n   to inform the peer that the request could not be satisfied\
    \ at the\n   time it was received but that the request MAY be able to be satisfied\n\
    \   in the future.\n   DIAMETER_END_USER_SERVICE_DENIED         4010\n   The credit-control\
    \ server denies the service request due to service\n   restrictions.  If the CCR\
    \ contained used service units, they are\n   deducted, if possible.\n   DIAMETER_CREDIT_CONTROL_NOT_APPLICABLE\
    \   4011\n   The credit-control server determines that the service can be granted\n\
    \   to the end user but that no further credit-control is needed for the\n   service\
    \ (e.g., the service is free of charge).\n   DIAMETER_CREDIT_LIMIT_REACHED   \
    \         4012\n   The credit-control server denies the service request because\
    \ the\n   end user's account could not cover the requested service.  If the CCR\n\
    \   contained used service units, they are deducted, if possible.\n"
- title: 9.2.  Permanent Failures
  contents:
  - "9.2.  Permanent Failures\n   Errors that fall within the category of permanent\
    \ failures are used\n   to inform the peer that the request failed and should\
    \ not be\n   attempted again.\n   DIAMETER_USER_UNKNOWN    5030\n   The specified\
    \ end user is unknown in the credit-control server.\n   DIAMETER_RATING_FAILED\
    \   5031\n   This error code is used to inform the credit-control client that\
    \ the\n   credit-control server cannot rate the service request due to\n   insufficient\
    \ rating input, an incorrect AVP combination, or an AVP or\n   AVP value that\
    \ is not recognized or supported in the rating.  The\n   Failed-AVP AVP MUST be\
    \ included and contain (1) a copy of the entire\n   AVP or AVPs that could not\
    \ be processed successfully or (2) an\n   example of the missing AVP, complete\
    \ with the Vendor-Id if\n   applicable.  The value field of the missing AVP should\
    \ be of correct\n   minimum length and contain zeros.\n"
- title: 10.  AVP Occurrence Table
  contents:
  - "10.  AVP Occurrence Table\n   The table in Section 10.1 presents the AVPs defined\
    \ in this document\n   and specifies in which Diameter messages they MAY or MUST\
    \ NOT be\n   present.  Note that AVPs that can only be present within a Grouped\n\
    \   AVP are not represented in the table.\n   The table uses the following symbols:\n\
    \         0     The AVP MUST NOT be present in the message.\n         0+    Zero\
    \ or more instances of the AVP MAY be present in the\n               message.\n\
    \         0-1   Zero or one instance of the AVP MAY be present in the\n      \
    \         message.  It is considered an error if there is more\n             \
    \  than one instance of the AVP.\n         1     One instance of the AVP MUST\
    \ be present in the message.\n"
- title: 10.1.  Credit-Control AVP Table
  contents:
  - "10.1.  Credit-Control AVP Table\n   The table in this section is used to represent\
    \ which credit-control\n   application-specific AVPs defined in this document\
    \ are to be present\n   in the credit-control messages.\n                    \
    \                         +-----------+\n                                    \
    \         |  Command  |\n                                             |   Code\
    \    |\n                                             |-----+-----+\n         \
    \  Attribute Name                    | CCR | CCA |\n           ----------------------------------|-----+-----+\n\
    \           Acct-Multi-Session-Id             | 0-1 | 0-1 |\n           Auth-Application-Id\
    \               | 1   | 1   |\n           CC-Correlation-Id                 |\
    \ 0-1 | 0   |\n           CC-Session-Failover               | 0   | 0-1 |\n  \
    \         CC-Request-Number                 | 1   | 1   |\n           CC-Request-Type\
    \                   | 1   | 1   |\n           CC-Sub-Session-Id              \
    \   | 0-1 | 0-1 |\n           Check-Balance-Result              | 0   | 0-1 |\n\
    \           Cost-Information                  | 0   | 0-1 |\n           Credit-Control-Failure-Handling\
    \   | 0   | 0-1 |\n           Destination-Host                  | 0-1 | 0   |\n\
    \           Destination-Realm                 | 1   | 0   |\n           Direct-Debiting-Failure-Handling\
    \  | 0   | 0-1 |\n           Event-Timestamp                   | 0-1 | 0-1 |\n\
    \           Failed-AVP                        | 0   | 0+  |\n           Final-Unit-Indication\
    \             | 0   | 0-1 |\n           QoS-Final-Unit-Indication         | 0\
    \   | 0-1 |\n           Granted-Service-Unit              | 0   | 0-1 |\n    \
    \       Multiple-Services-Credit-Control  | 0+  | 0+  |\n           Multiple-Services-Indicator\
    \       | 0-1 | 0   |\n           Origin-Host                       | 1   | 1\
    \   |\n           Origin-Realm                      | 1   | 1   |\n          \
    \ Origin-State-Id                   | 0-1 | 0-1 |\n           Proxy-Info     \
    \                   | 0+  | 0+  |\n           Redirect-Host                  \
    \   | 0   | 0+  |\n           Redirect-Host-Usage               | 0   | 0-1 |\n\
    \           Redirect-Max-Cache-Time           | 0   | 0-1 |\n           Requested-Action\
    \                  | 0-1 | 0   |\n           Requested-Service-Unit          \
    \  | 0-1 | 0   |\n           Route-Record                      | 0+  | 0+  |\n\
    \           Result-Code                       | 0   | 1   |\n           Service-Context-Id\
    \                | 1   | 0   |\n           Service-Identifier                |\
    \ 0-1 | 0   |\n           Service-Parameter-Info            | 0+  | 0   |\n  \
    \         Session-Id                        | 1   | 1   |\n           Subscription-Id\
    \                   | 0+  | 0   |\n           Subscription-Id-Extension      \
    \   | 0+  | 0   |\n           Termination-Cause                 | 0-1 | 0   |\n\
    \           User-Equipment-Info               | 0-1 | 0   |\n           User-Equipment-Info-Extension\
    \     | 0-1 | 0   |\n           Used-Service-Unit                 | 0+  | 0  \
    \ |\n           User-Name                         | 0-1 | 0-1 |\n           Validity-Time\
    \                     | 0   | 0-1 |\n           ----------------------------------|-----+-----+\n"
- title: 10.2.  Re-Auth-Request/Re-Auth-Answer AVP Table
  contents:
  - "10.2.  Re-Auth-Request/Re-Auth-Answer AVP Table\n   This section defines AVPs\
    \ that are specific to the Diameter\n   Credit-Control application and that MAY\
    \ be included in the Diameter\n   Re-Auth-Request/Re-Auth-Answer (RAR/RAA) message\
    \ [RFC6733].\n   The RAR/RAA command MAY include the following additional AVPs:\n\
    \                                          +---------------+\n               \
    \                           | Command Code  |\n                              \
    \            |-------+-------+\n            Attribute Name                |  RAR\
    \  |  RAA  |\n            ------------------------------+-------+-------+\n  \
    \          CC-Sub-Session-Id             |  0-1  |  0-1  |\n            G-S-U-Pool-Identifier\
    \         |  0-1  |  0-1  |\n            Service-Identifier            |  0-1\
    \  |  0-1  |\n            Rating-Group                  |  0-1  |  0-1  |\n  \
    \          ------------------------------+-------+-------+\n"
- title: 11.  RADIUS/Diameter Credit-Control Interworking Model
  contents:
  - "11.  RADIUS/Diameter Credit-Control Interworking Model\n   This section defines\
    \ the basic principles for the Diameter\n   Credit-Control / RADIUS prepaid interworking\
    \ model -- that is, a\n   message translation between a RADIUS-based prepaid solution\
    \ and a\n   Diameter Credit-Control application.  A complete description of the\n\
    \   protocol translations between RADIUS and the Diameter Credit-Control\n   application\
    \ is beyond the scope of this specification and SHOULD be\n   addressed in another\
    \ appropriate document.\n   The Diameter Credit-Control architecture may have\
    \ a Translation Agent\n   capable of translation between RADIUS prepaid and Diameter\n\
    \   Credit-Control protocols.  A AAA server (usually the home AAA server)\n  \
    \ may act as a Translation Agent and as a Diameter Credit-Control\n   client for\
    \ Service Elements that use credit-control mechanisms other\n   than Diameter\
    \ Credit-Control -- for instance, RADIUS prepaid.  In\n   this case, the home\
    \ AAA server contacts the Diameter Credit-Control\n   server as part of the authorization\
    \ process.  The interworking\n   architecture is illustrated in Figure 9, and\
    \ an interworking flow is\n   illustrated in Figure 10.  In a roaming situation,\
    \ the Service\n   Element (e.g., the NAS) may be located in the visited network,\
    \ and a\n   visited AAA server is usually contacted.  The visited AAA server then\n\
    \   connects to the home AAA server.\n                                  RADIUS\
    \ Prepaid\n   +--------+       +---------+   Protocol +------------+  +--------+\n\
    \   |  End   |<----->| Service |<---------->| Home AAA   |  |Business|\n   | \
    \ User  |       | Element |            |  Server    |  |Support |\n   +--------+\
    \   +-->|         |            |+----------+|->|System  |\n                | \
    \  +---------+            ||CC Client ||  |        |\n                |      \
    \                    |+----------+|  |        |\n   +--------+   |           \
    \               +------^-----+  +----^---+\n   |  End   |<--+                Credit-Control\
    \   |             |\n   |  User  |                          Protocol   |     \
    \        |\n   +--------+                             +-------V--------+    |\n\
    \                                          |Credit-Control  |----+\n         \
    \                                 |   Server       |\n                       \
    \                   +----------------+\n        Figure 9: Credit-Control Architecture\
    \ with Service Element\n         Containing Translation Agent, Translating RADIUS\
    \ Prepaid\n                    to Diameter Credit-Control Protocol\n   When the\
    \ AAA server acting as a Translation Agent receives an initial\n   RADIUS Access-Request\
    \ message from a Service Element (e.g., NAS\n   access), it performs regular authentication\
    \ and authorization.  If\n   the RADIUS Access-Request message indicates that\
    \ the Service Element\n   is capable of credit-control and if the home AAA server\
    \ finds that\n   the subscriber is a prepaid subscriber, then a Diameter\n   Credit-Control-Request\
    \ SHOULD be sent toward the credit-control\n   server to perform credit authorization\
    \ and to establish a\n   credit-control session.  After the Diameter Credit-Control\
    \ server\n   checks the end user's account balance, rates the service, and\n \
    \  reserves credit from the end user's account, the reserved quota is\n   returned\
    \ to the home AAA server in the Diameter Credit-Control-\n   Answer.  The home\
    \ AAA server then sends the reserved quota to the\n   Service Element in the RADIUS\
    \ Access-Accept.\n   At the expiry of the allocated quota, the Service Element\
    \ sends a new\n   RADIUS Access-Request containing the units used thus far to\
    \ the home\n   AAA server.  The home AAA server shall map a RADIUS Access-Request\n\
    \   containing the reported units to the Diameter Credit-Control server\n   in\
    \ a Diameter Credit-Control-Request (UPDATE_REQUEST).  The Diameter\n   Credit-Control\
    \ server debits the used units from the end user's\n   account and allocates a\
    \ new quota that is returned to the home AAA\n   server in the Diameter Credit-Control-Answer.\
    \  The quota is\n   transferred to the Service Element in the RADIUS Access-Accept.\
    \  When\n   the end user terminates the service or when the entire quota has been\n\
    \   used, the Service Element sends a RADIUS Access-Request.  To debit\n   the\
    \ used units from the end user's account and to stop the\n   credit-control session,\
    \ the home AAA server sends a Diameter\n   Credit-Control-Request (TERMINATION_REQUEST)\
    \ to the credit-control\n   server.  The Diameter Credit-Control server acknowledges\
    \ the session\n   termination by sending a Diameter Credit-Control-Answer to the\
    \ home\n   AAA server.  The RADIUS Access-Accept is sent to the NAS.\n   Figure\
    \ 10 illustrates a Diameter Credit-Control / RADIUS prepaid\n   interworking sequence.\n\
    \   Service Element         Translation Agent\n     (e.g., NAS)              \
    \ (CC Client)             CC Server\n         |     Access-Request     |     \
    \                   |\n         |----------------------->|                   \
    \     |\n         |                        |    CCR (Initial)       |\n      \
    \   |                        |----------------------->|\n         |          \
    \              |    CCA (Granted-Units) |\n         |                        |<-----------------------|\n\
    \         |     Access-Accept      |                        |\n         |    \
    \ (Granted-Units)    |                        |\n         |<-----------------------|\
    \                        |\n         :                        :              \
    \          :\n         |     Access-Request     |                        |\n \
    \        |     (Used-Units)       |                        |\n         |----------------------->|\
    \                        |\n         |                        |    CCR (Update,\
    \        |\n         |                        |         Used-Units)    |\n   \
    \      |                        |----------------------->|\n         |       \
    \                 |    CCA (Granted-Units) |\n         |                     \
    \   |<-----------------------|\n         |     Access-Accept      |          \
    \              |\n         |     (Granted-Units)    |                        |\n\
    \         |<-----------------------|                        |\n         :    \
    \                    :                        :\n         |     Access-Request\
    \     |                        |\n         |----------------------->|        \
    \                |\n         |                        |     CCR (Terminate,  \
    \  |\n         |                        |          Used-Units)   |\n         |\
    \                        |----------------------->|\n         |              \
    \          |     CCA                |\n         |                        |<-----------------------|\n\
    \         |     Access-Accept      |                        |\n         |<-----------------------|\
    \                        |\n         |                        |              \
    \          |\n               Figure 10: Message Flow Example with Diameter\n \
    \              Credit-Control / RADIUS Prepaid Interworking\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   This document uses several registries that were\
    \ originally created in\n   [RFC4006] or the values assigned to existing namespaces\
    \ managed by\n   IANA.  IANA has updated these registries to reference this document.\n\
    \   The registries and their allocation policies are specified below.\n"
- title: 12.1.  Application Identifier
  contents:
  - "12.1.  Application Identifier\n   This specification assigns the value 4, \"\
    Diameter Credit Control\", to\n   the \"Application IDs\" namespace defined in\
    \ [RFC6733].  See\n   Section 1.3 for more information.\n"
- title: 12.2.  Command Codes
  contents:
  - "12.2.  Command Codes\n   This specification uses the value 272 from the \"Command\
    \ Codes\"\n   namespace defined in [RFC6733] for the Credit-Control-Request (CCR)\n\
    \   and Credit-Control-Answer (CCA) commands.\n"
- title: 12.3.  AVP Codes
  contents:
  - "12.3.  AVP Codes\n   See Section 8 for the assignments in this specification.\n\
    \   This document describes new AVP codes beyond those described in\n   [RFC4006].\
    \  IANA has allocated codes for the AVPs listed in Table 7.\n        +-----------------------------------+------+--------------+\n\
    \        | Attribute Name                    | Code | Defined in   |\n       \
    \ +-----------------------------------+------+--------------+\n        | User-Equipment-Info-Extension\
    \     | 653  | Section 8.52 |\n        | User-Equipment-Info-IMEISV        | 654\
    \  | Section 8.53 |\n        | User-Equipment-Info-MAC           | 655  | Section\
    \ 8.54 |\n        | User-Equipment-Info-EUI64         | 656  | Section 8.55 |\n\
    \        | User-Equipment-Info-ModifiedEUI64 | 657  | Section 8.56 |\n       \
    \ | User-Equipment-Info-IMEI          | 658  | Section 8.57 |\n        | Subscription-Id-Extension\
    \         | 659  | Section 8.58 |\n        | Subscription-Id-E164            \
    \  | 660  | Section 8.59 |\n        | Subscription-Id-IMSI              | 661\
    \  | Section 8.60 |\n        | Subscription-Id-SIP-URI           | 662  | Section\
    \ 8.61 |\n        | Subscription-Id-NAI               | 663  | Section 8.62 |\n\
    \        | Subscription-Id-Private           | 664  | Section 8.63 |\n       \
    \ | Redirect-Server-Extension         | 665  | Section 8.64 |\n        | Redirect-Address-IPAddress\
    \        | 666  | Section 8.65 |\n        | Redirect-Address-URL             \
    \ | 667  | Section 8.66 |\n        | Redirect-Address-SIP-URI          | 668 \
    \ | Section 8.67 |\n        | QoS-Final-Unit-Indication         | 669  | Section\
    \ 8.68 |\n        +-----------------------------------+------+--------------+\n\
    \                    Table 7: Requested AVP Assignments\n"
- title: 12.4.  Result-Code AVP Values
  contents:
  - "12.4.  Result-Code AVP Values\n   This specification assigns the values 4010,\
    \ 4011, and 4012 in the\n   \"Result-Code AVP Values (code 268) - Transient Failures\"\
    \ namespace\n   and values 5030 and 5031 in the \"Result-Code AVP Values (code\
    \ 268) -\n   Permanent Failure\" namespace, both of which were defined by\n  \
    \ [RFC6733].  See Section 9 for the assignments in this specification.\n"
- title: 12.5.  CC-Request-Type AVP
  contents:
  - "12.5.  CC-Request-Type AVP\n   As defined in Section 8.3, the CC-Request-Type\
    \ AVP includes\n   Enumerated type values 1-4.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.6.  CC-Session-Failover AVP
  contents:
  - "12.6.  CC-Session-Failover AVP\n   As defined in Section 8.4, the CC-Session-Failover\
    \ AVP includes\n   Enumerated type values 0-1.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.7.  CC-Unit-Type AVP
  contents:
  - "12.7.  CC-Unit-Type AVP\n   As defined in Section 8.32, the CC-Unit-Type AVP\
    \ includes Enumerated\n   type values 0-5.  IANA has created and is maintaining\
    \ a namespace for\n   this AVP.  The definition of new values is subject to the\n\
    \   Specification Required policy [RFC8126] and conditions for enumerated\n  \
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.8.  Check-Balance-Result AVP
  contents:
  - "12.8.  Check-Balance-Result AVP\n   As defined in Section 8.6, the Check-Balance-Result\
    \ AVP includes\n   Enumerated type values 0-1.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.9.  Credit-Control AVP
  contents:
  - "12.9.  Credit-Control AVP\n   As defined in Section 8.13, the Credit-Control\
    \ AVP includes\n   Enumerated type values 0-1.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.10.  Credit-Control-Failure-Handling AVP
  contents:
  - "12.10.  Credit-Control-Failure-Handling AVP\n   As defined in Section 8.14, the\
    \ Credit-Control-Failure-Handling AVP\n   includes Enumerated type values 0-2.\
    \  IANA has created and is\n   maintaining a namespace for this AVP.  The definition\
    \ of new values\n   is subject to the Specification Required policy [RFC8126]\
    \ and\n   conditions for enumerated values described in [RFC7423], Section 5.6.\n"
- title: 12.11.  Direct-Debiting-Failure-Handling AVP
  contents:
  - "12.11.  Direct-Debiting-Failure-Handling AVP\n   As defined in Section 8.15,\
    \ the Direct-Debiting-Failure-Handling AVP\n   includes Enumerated type values\
    \ 0-1.  IANA has created and is\n   maintaining a namespace for this AVP.  The\
    \ definition of new values\n   is subject to the Specification Required policy\
    \ [RFC8126] and\n   conditions for enumerated values described in [RFC7423], Section\
    \ 5.6.\n"
- title: 12.12.  Final-Unit-Action AVP
  contents:
  - "12.12.  Final-Unit-Action AVP\n   As defined in Section 8.35, the Final-Unit-Action\
    \ AVP includes\n   Enumerated type values 0-2.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.13.  Multiple-Services-Indicator AVP
  contents:
  - "12.13.  Multiple-Services-Indicator AVP\n   As defined in Section 8.40, the Multiple-Services-Indicator\
    \ AVP\n   includes Enumerated type values 0-1.  IANA has created and is\n   maintaining\
    \ a namespace for this AVP.  The definition of new values\n   is subject to the\
    \ Specification Required policy [RFC8126] and\n   conditions for enumerated values\
    \ described in [RFC7423], Section 5.6.\n"
- title: 12.14.  Redirect-Address-Type AVP
  contents:
  - "12.14.  Redirect-Address-Type AVP\n   As defined in Section 8.38, the Redirect-Address-Type\
    \ AVP includes\n   Enumerated type values 0-3.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.15.  Requested-Action AVP
  contents:
  - "12.15.  Requested-Action AVP\n   As defined in Section 8.41, the Requested-Action\
    \ AVP includes\n   Enumerated type values 0-3.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.16.  Subscription-Id-Type AVP
  contents:
  - "12.16.  Subscription-Id-Type AVP\n   As defined in Section 8.47, the Subscription-Id-Type\
    \ AVP includes\n   Enumerated type values 0-4.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.17.  Tariff-Change-Usage AVP
  contents:
  - "12.17.  Tariff-Change-Usage AVP\n   As defined in Section 8.27, the Tariff-Change-Usage\
    \ AVP includes\n   Enumerated type values 0-2.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 12.18.  User-Equipment-Info-Type AVP
  contents:
  - "12.18.  User-Equipment-Info-Type AVP\n   As defined in Section 8.50, the User-Equipment-Info-Type\
    \ AVP includes\n   Enumerated type values 0-3.  IANA has created and is maintaining\
    \ a\n   namespace for this AVP.  The definition of new values is subject to\n\
    \   the Specification Required policy [RFC8126] and conditions for\n   enumerated\
    \ values described in [RFC7423], Section 5.6.\n"
- title: 13.  Parameters Related to the Credit-Control Application
  contents:
  - "13.  Parameters Related to the Credit-Control Application\n   Tx timer\n    \
    \  When real-time credit-control is required, the credit-control\n      client\
    \ contacts the credit-control server before and while the\n      service is provided\
    \ to an end user.  Due to the real-time nature\n      of the application, communication\
    \ delays SHOULD be minimized,\n      e.g., to avoid an overly long service setup\
    \ time experienced by\n      the end user.  The Tx timer is introduced to control\
    \ the waiting\n      time in the client in the Pending state.  When the Tx timer\n\
    \      elapses, the credit-control client takes action for the end user\n    \
    \  according to the value of the CCFH or the DDFH.  The recommended\n      value\
    \ is 10 seconds.\n   Tcc timer\n      The Tcc timer supervises an ongoing credit-control\
    \ session in the\n      credit-control server.  It is RECOMMENDED to use the Validity-Time\n\
    \      as input to set the Tcc timer value.  In the case of transient\n      failures\
    \ in the network, the Diameter Credit-Control server might\n      change to Idle\
    \ state.  To avoid this, the Tcc timer MAY be set so\n      that Tcc is equal\
    \ to 2 x Validity-Time.\n   Credit-Control-Failure-Handling and Direct-Debiting-Failure-Handling\n\
    \      Client implementations may offer the possibility of locally\n      configuring\
    \ these AVPs.  In such a case, their values and behavior\n      are defined in\
    \ Sections 5.7 and 6.5, respectively.\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   Security considerations regarding the Diameter\
    \ protocol itself are\n   discussed in [RFC6733].  The use of this application\
    \ of Diameter MUST\n   take into consideration the security issues and requirements\
    \ of the\n   base protocol.\n   This application includes a mechanism for application-layer\
    \ replay\n   protection by means of (1) the Session-Id AVP as specified in\n \
    \  [RFC6733] and (2) the CC-Request-Number AVP, which is specified in\n   this\
    \ document.  The Diameter Credit-Control application is often used\n   within\
    \ one domain, and there may be a single hop between the peers.\n   In these environments,\
    \ the use of TLS/TCP, DTLS/SCTP (Datagram\n   Transport Layer Security / Stream\
    \ Control Transmission Protocol), or\n   IPsec is sufficient.  The details of\
    \ security considerations related\n   to TLS/TCP, DTLS/SCTP, and IPsec are discussed\
    \ in [RFC6733].\n   Because this application handles monetary transactions (directly\
    \ or\n   indirectly), it increases interest in various security attacks.\n   Therefore,\
    \ all parties communicating with each other MUST be\n   authenticated, including,\
    \ for instance, TLS client-side\n   authentication.  In addition, authorization\
    \ of the client SHOULD be\n   emphasized, i.e., that the client is allowed to\
    \ perform\n   credit-control for a certain user.  The specific means of\n   authorization\
    \ are outside the scope of this specification but can be,\n   for instance, manual\
    \ configuration.\n   Another kind of threat is malicious modification, injection,\
    \ or\n   deletion of AVPs or complete credit-control messages.  The\n   credit-control\
    \ messages contain sensitive billing-related information\n   (such as subscription\
    \ identifiers, granted units, used units, or cost\n   information) whose malicious\
    \ modification can have financial\n   consequences.  Sometimes simply delaying\
    \ the credit-control messages\n   can cause disturbances in the credit-control\
    \ client or server.\n   Even without any modifications to the messages, an adversary\
    \ that can\n   eavesdrop on transactions can obtain privacy-sensitive information.\n\
    \   Also, by monitoring the credit-control messages, one can collect\n   information\
    \ about the credit-control server's billing models and\n   business relationships.\n\
    \   When third-party relays or proxies are involved, hop-by-hop security\n   does\
    \ not necessarily provide sufficient protection for Diameter user\n   sessions.\
    \  In some cases, it may be inappropriate to send Diameter\n   messages, such\
    \ as CCR messages and CCA messages, containing sensitive\n   AVPs via untrusted\
    \ Diameter proxy agents, as there are no assurances\n   that third-party proxies\
    \ will not modify the credit-control commands\n   or AVP values.\n"
- title: 14.1.  Direct Connection with Redirects
  contents:
  - "14.1.  Direct Connection with Redirects\n   A Diameter Credit-Control agent cannot\
    \ always know whether agents\n   between it and the end user's Diameter Credit-Control\
    \ server are\n   reliable.  In this case, the Diameter Credit-Control agent doesn't\n\
    \   have a routing entry in its Diameter routing table (defined in\n   [RFC6733],\
    \ Section 2.7) for the realm of the credit-control server in\n   the end user's\
    \ home realm.  The Diameter Credit-Control agent can\n   have a default route\
    \ configured to a local redirect agent, and it\n   redirects the CCR message to\
    \ the redirect agent.  The local redirect\n   agent then returns a redirect notification\
    \ (Result-Code 3006,\n   DIAMETER_REDIRECT_INDICATION) to the credit-control agent,\
    \ as well as\n   information about the Diameter Credit-Control server(s) (Redirect-\n\
    \   Host AVP) and information about how the routing entry resulting from\n   the\
    \ Redirect-Host is to be used (Redirect-Host-Usage AVP).  The\n   Diameter Credit-Control\
    \ agent then forwards the CCR message directly\n   to one of the hosts identified\
    \ by the CCA message from the redirect\n   agent.  If the value of the Redirect-Host-Usage\
    \ AVP does not equal\n   zero, all subsequent messages are sent to the host specified\
    \ in the\n   Redirect-Host AVP until the time specified by the Redirect-Max-Cache-\n\
    \   Time AVP has expired.\n   Even with redirects, there are some authorization\
    \ issues.  There may\n   be attacks toward nodes that have been properly authorized\
    \ but that\n   abuse their authorization or have been compromised.  These issues\
    \ are\n   discussed more widely in [RFC4072], Section 8.\n"
- title: 14.2.  Application-Level Redirects
  contents:
  - "14.2.  Application-Level Redirects\n   This document includes a redirection feature\
    \ (Section 5.6.2) whereby\n   the service provider can redirect (in an application-specific\
    \ way)\n   the end user to an alternate location when their credits have\n   expired.\
    \  This technique is useful in that it allows the user to\n   return to normal\
    \ service quickly, but it also exposes additional\n   risks and attack surface.\
    \  In particular, this redirection can\n   potentially occur at an arbitrary point\
    \ in a user's session,\n   potentially without any additional contextual confirmation\
    \ available\n   to the user that the redirection is driven by the network.  This\
    \ lack\n   of confirmation matters because, in many application protocols, the\n\
    \   communication peer is also capable of inducing redirection.  When the\n  \
    \ peer is an attacker, the redirection can be to an attacker-controlled\n   site.\
    \  In particular, such sites may be \"phishing\" sites designed to\n   appear\
    \ similar to legitimate payment sites in an attempt to obtain\n   users' payment\
    \ information for fraudulent purposes.  When users\n   become accustomed to such\
    \ redirections, they may have difficulty\n   distinguishing such attacks from\
    \ legitimate redirections.\n   Because of the potentially harmful consequences\
    \ of arbitrary\n   redirection by an attacker (such as to phishing sites), it\
    \ is\n   important for service providers to be aware of that risk and ensure\n\
    \   that their users are aware of it as well.  Service providers should\n   follow\
    \ industry best practices for the specific application-layer\n   protocol to reduce\
    \ the chances that such attacks could be mistaken\n   for legitimate redirections.\
    \  The details of such a practice are out\n   of scope for this document.\n"
- title: 15.  Privacy Considerations
  contents:
  - "15.  Privacy Considerations\n   As the Diameter protocol, and especially the\
    \ credit-control\n   application, deal with subscribers and their actions, extra\
    \ care\n   should be taken regarding the privacy of the subscribers.  Per\n  \
    \ terminology used in [RFC6973], both the credit-control client and the\n   credit-control\
    \ server are intermediary entities, wherein the\n   subscribers' privacy may be\
    \ compromised even if no security issues\n   exist, and only authorized entities\
    \ have access to the privacy-\n   sensitive information.\n"
- title: 15.1.  Privacy-Sensitive AVPs
  contents:
  - "15.1.  Privacy-Sensitive AVPs\n   The privacy-sensitive AVPs listed in this section\
    \ MUST NOT be sent\n   across non-trusted networks or Diameter agents without\
    \ end-to-end\n   authentication and confidentiality protection, as described in\n\
    \   [RFC6733], Section 13.3.\n   The following AVPs contain privacy-sensitive\
    \ information at different\n   levels:\n   1.   CC-Correlation-Id AVP: may contain\
    \ privacy-sensitive\n        information, as the service provider may encode personal\n\
    \        information that helps it correlate different subscriptions and\n   \
    \     access technologies.\n   2.   Check-Balance-Result AVP: contains information\
    \ on the balance\n        status of the subscriber.\n   3.   Currency-Code AVP:\
    \ contains information on the subscriber's\n        locale.\n   4.   Cost-Unit\
    \ AVP: contains privacy-sensitive information for the\n        Cost-Information\
    \ AVP, in human-readable format.\n   5.   Service-Identifier AVP: may contain\
    \ privacy-sensitive\n        information about the subscriber's Internet activity.\n\
    \   6.   Rating-Group AVP: may contain privacy-sensitive information\n       \
    \ about the subscriber's Internet activity.\n   7.   Restriction-Filter-Rule AVP:\
    \ the information inside IPFilterRule\n        may be used to infer services used\
    \ by the subscriber.\n   8.   Redirect-Server-Address AVP: the service provider\
    \ might embed\n        personal information on the subscriber in the URL/URI (e.g.,\
    \ to\n        create a personalized message).  However, the service provider\n\
    \        may instead anonymize the subscriber's identity in the URL/URI\n    \
    \    and let the redirect server query the information directly.\n        Such\
    \ anonymized information must not allow personal information\n        or the subscriber's\
    \ identity to be easily guessed.  Furthermore,\n        the service provider should\
    \ treat the URL/URI schema itself as\n        confidential and make sure it cannot\
    \ be inferred (1) from\n        observation of the traffic or (2) due to its trivial\
    \ structure.\n        A trivial structure could allow an adversary to query/modify\n\
    \        personal information even without knowing the subscriber's\n        identity.\
    \  Similar AVPs are Redirect-Address-URL and Redirect-\n        Address-SIP-URI.\n\
    \   9.   Service-Context-Id AVP: depending on how the service provider\n     \
    \   uses it, it may contain privacy-sensitive information about the\n        service\
    \ (e.g., in a 3GPP network Service-Context-Id AVP, it has\n        a different\
    \ value for packet switching, SMS, Multimedia Messages\n        (MMSs), etc.).\n\
    \   10.  Service-Parameter-Info AVP: depending on how the service\n        provider\
    \ uses it, it may contain privacy-sensitive information\n        about the subscriber\
    \ (e.g., location).\n   11.  Subscription-Id-Data AVP: contains the identity of\
    \ the\n        subscriber.  Similar AVPs are Subscription-Id-E164,\n        Subscription-Id-IMSI,\
    \ Subscription-Id-SIP-URI, Subscription-Id-\n        NAI, and Subscription-Id-Private.\n\
    \   12.  User-Equipment-Info-Value AVP: contains the identity of the\n       \
    \ device of the subscriber.  Similar AVPs are User-Equipment-Info-\n        IMEISV,\
    \ User-Equipment-Info-MAC, User-Equipment-Info-EUI64,\n        User-Equipment-Info-ModifiedEUI64,\
    \ and User-Equipment-Info-IMEI.\n   13.  QoS-Final-Unit-Indication AVP: Grouped\
    \ AVP that may contain\n        privacy-sensitive information in its sub-AVPs\
    \ (e.g.,\n        IPFilterRule, redirect address).\n   Note that some AVPs that\
    \ are used in this document are defined in\n   [RFC6733] and may contain privacy-sensitive\
    \ information.  These AVPs\n   are not listed above.\n"
- title: 15.2.  Data Minimization
  contents:
  - "15.2.  Data Minimization\n   Due to the nature of the credit-control application,\
    \ some personal\n   data and identity information must be stored in both the\n\
    \   credit-control client and the credit-control server.  However, this\n   could\
    \ be minimized by following these guidelines:\n   1.  Data stored in the credit-control\
    \ client does not need to persist\n       across sessions.  All data could be\
    \ deleted once the session ends\n       and could be reconstructed once a new\
    \ session is initialized.\n       Note that while the credit-control server is\
    \ usually owned by the\n       service provider with which the subscriber already\
    \ has some\n       direct legal or business relationship (where the privacy level\n\
    \       could be agreed upon), this is not always true for a\n       credit-control\
    \ client that may be owned by a third party.\n   2.  Some information about the\
    \ subscriber has to be stored in\n       persistent storage in the credit-control\
    \ server (e.g., identity,\n       balance); however, per-transaction information\
    \ does not have to\n       be stored in persistent storage, and per-session information\
    \ may\n       be deleted from persistent storage once the session ends.\n   3.\
    \  In some cases, per-transaction information has to be stored on\n       the\
    \ credit-control server, client, or both, for regulatory,\n       auditability,\
    \ or debugging reasons.  However, this could be\n       minimized by following\
    \ these guidelines:\n       A.  Data retention does not need to exceed the required\
    \ duration.\n       B.  Transaction information could be aggregated in some cases\n\
    \           (e.g., prefer information per session over information per\n     \
    \      rating-group; prefer hourly byte summary over per-transaction\n       \
    \    byte counts).\n       C.  If not strictly needed, information that is more\
    \ sensitive\n           (e.g., location, equipment type) could be filtered out\
    \ of\n           such logs.  This information is often used to make rating\n \
    \          decisions, and in this case, the rating decisions should be\n     \
    \      logged instead of the data used to make them.\n       D.  Due to the reasons\
    \ explained in the first guideline, the\n           credit-control server, rather\
    \ than the credit-control client,\n           would be the preferred location\
    \ for storing such transaction\n           information.\n"
- title: 15.3.  Diameter Agents
  contents:
  - "15.3.  Diameter Agents\n   Diameter agents, as described in [RFC6733], may be\
    \ owned by\n   third parties.  If end-to-end security is supported between the\n\
    \   credit-control client and the credit-control server, the operator can\n  \
    \ use it to encrypt privacy-sensitive AVPs (as listed in Section 15.1)\n   and\
    \ prevent such information from leaking into the agent.\n   In some cases, the\
    \ Diameter agent needs access to privacy-sensitive\n   AVPs, in order to make\
    \ correct routing decisions or even to modify\n   the content of these AVPs. \
    \ For example, a proxy agent may need to\n   look at the Subscription-Id-IMSI\
    \ AVP, in order to extract the mobile\n   country and network codes of the user\
    \ and use them to look up the\n   destination to which the request should be routed\
    \ (see Section 2.8.2\n   in [RFC6733]).  In such a case, the credit-control client\
    \ and\n   credit-control server may use a mechanism that anonymizes the\n   identity\
    \ of the subscriber, as well as a mechanism to encrypt other\n   AVPs not used\
    \ by the agent.\n"
- title: 16.  References
  contents:
  - '16.  References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [CE164]    International Telecommunication Union,\
    \ \"COMPLEMENT TO\n              ITU-T RECOMMENDATION E.164 (11/2010): LIST OF\
    \ ITU-T\n              RECOMMENDATION E.164 ASSIGNED COUNTRY CODES\",\n      \
    \        November 2011, <https://www.itu.int/dms_pub/itu-t/opb/sp/\n         \
    \     T-SP-E.164D-11-2011-PDF-E.pdf>.\n   [CE212]    International Telecommunication\
    \ Union, \"COMPLEMENT TO\n              RECOMMENDATION ITU-T E.212 (09/2016):\
    \ LIST OF MOBILE\n              COUNTRY OR GEOGRAPHICAL AREA CODES\", February\
    \ 2017,\n              <https://www.itu.int/dms_pub/itu-t/opb/sp/\n          \
    \    T-SP-E.212A-2017-PDF-E.pdf>.\n   [E164]     International Telecommunication\
    \ Union, \"The international\n              public telecommunication numbering\
    \ plan\", ITU-T\n              Recommendation E.164, November 2010,\n        \
    \      <https://www.itu.int/rec/T-REC-E.164/>.\n   [E212]     International Telecommunication\
    \ Union, \"The international\n              identification plan for public networks\
    \ and\n              subscriptions\", ITU-T Recommendation E.212,\n          \
    \    September 2016, <https://www.itu.int/rec/T-REC-E.212/en>.\n   [EUI64]   \
    \ IEEE, \"Guidelines for Use of Extended Unique Identifier\n              (EUI),\
    \ Organizationally Unique Identifier (OUI), and\n              Company ID (CID)\"\
    , August 2017,\n              <https://standards.ieee.org/content/dam/\n     \
    \         ieee-standards/standards/web/documents/tutorials/eui.pdf>.\n   [ISO4217]\
    \  ISO, \"Codes for the representation of currencies\",\n              ISO 4217:2015,\
    \ 2015, <https://www.iso.org/\n              iso-4217-currency-codes.html>.\n\
    \   [RFC791]   Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n          \
    \    DOI 10.17487/RFC0791, September 1981,\n              <https://www.rfc-editor.org/info/rfc791>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3261]\
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,\
    \ Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:\
    \ Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,\
    \ June 2002,\n              <https://www.rfc-editor.org/info/rfc3261>.\n   [RFC3539]\
    \  Aboba, B. and J. Wood, \"Authentication, Authorization and\n              Accounting\
    \ (AAA) Transport Profile\", RFC 3539,\n              DOI 10.17487/RFC3539, June\
    \ 2003,\n              <https://www.rfc-editor.org/info/rfc3539>.\n   [RFC3986]\
    \  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource\
    \ Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,\
    \ January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n  \
    \ [RFC4006]  Hakala, H., Mattila, L., Koskinen, J-P., Stura, M., and\n       \
    \       J. Loughney, \"Diameter Credit-Control Application\",\n              RFC\
    \ 4006, DOI 10.17487/RFC4006, August 2005,\n              <https://www.rfc-editor.org/info/rfc4006>.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, DOI 10.17487/RFC4291,\n              February\
    \ 2006, <https://www.rfc-editor.org/info/rfc4291>.\n   [RFC5777]  Korhonen, J.,\
    \ Tschofenig, H., Arumaithurai, M., Jones, M.,\n              Ed., and A. Lior,\
    \ \"Traffic Classification and Quality of\n              Service (QoS) Attributes\
    \ for Diameter\", RFC 5777,\n              DOI 10.17487/RFC5777, February 2010,\n\
    \              <https://www.rfc-editor.org/info/rfc5777>.\n   [RFC5952]  Kawamura,\
    \ S. and M. Kawashima, \"A Recommendation for IPv6\n              Address Text\
    \ Representation\", RFC 5952,\n              DOI 10.17487/RFC5952, August 2010,\n\
    \              <https://www.rfc-editor.org/info/rfc5952>.\n   [RFC6733]  Fajardo,\
    \ V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n              Ed., \"Diameter\
    \ Base Protocol\", RFC 6733,\n              DOI 10.17487/RFC6733, October 2012,\n\
    \              <https://www.rfc-editor.org/info/rfc6733>.\n   [RFC7155]  Zorn,\
    \ G., Ed., \"Diameter Network Access Server\n              Application\", RFC\
    \ 7155, DOI 10.17487/RFC7155, April 2014,\n              <https://www.rfc-editor.org/info/rfc7155>.\n\
    \   [RFC7423]  Morand, L., Ed., Fajardo, V., and H. Tschofenig, \"Diameter\n \
    \             Applications Design Guidelines\", BCP 193, RFC 7423,\n         \
    \     DOI 10.17487/RFC7423, November 2014,\n              <https://www.rfc-editor.org/info/rfc7423>.\n\
    \   [RFC7542]  DeKok, A., \"The Network Access Identifier\", RFC 7542,\n     \
    \         DOI 10.17487/RFC7542, May 2015,\n              <https://www.rfc-editor.org/info/rfc7542>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in\n         \
    \     RFC 2119 Key Words\", BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174,\
    \ May 2017,\n              <https://www.rfc-editor.org/info/rfc8174>.\n   [TGPPIMEI]\
    \ 3rd Generation Partnership Project, Technical\n              Specification Group\
    \ Core Network, \"Numbering, addressing\n              and identification (release\
    \ 15)\", 3GPP TS 23.003\n              version 15.6.0, December 2018.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [RFC2866]  Rigney, C., \"RADIUS Accounting\"\
    , RFC 2866,\n              DOI 10.17487/RFC2866, June 2000,\n              <https://www.rfc-editor.org/info/rfc2866>.\n\
    \   [RFC3580]  Congdon, P., Aboba, B., Smith, A., Zorn, G., and J. Roese,\n  \
    \            \"IEEE 802.1X Remote Authentication Dial In User Service\n      \
    \        (RADIUS) Usage Guidelines\", RFC 3580,\n              DOI 10.17487/RFC3580,\
    \ September 2003,\n              <https://www.rfc-editor.org/info/rfc3580>.\n\
    \   [RFC3725]  Rosenberg, J., Peterson, J., Schulzrinne, H., and\n           \
    \   G. Camarillo, \"Best Current Practices for Third Party Call\n            \
    \  Control (3pcc) in the Session Initiation Protocol (SIP)\",\n              BCP\
    \ 85, RFC 3725, DOI 10.17487/RFC3725, April 2004,\n              <https://www.rfc-editor.org/info/rfc3725>.\n\
    \   [RFC4004]  Calhoun, P., Johansson, T., Perkins, C., Hiller, T., Ed.,\n   \
    \           and P. McCann, \"Diameter Mobile IPv4 Application\",\n           \
    \   RFC 4004, DOI 10.17487/RFC4004, August 2005,\n              <https://www.rfc-editor.org/info/rfc4004>.\n\
    \   [RFC4072]  Eronen, P., Ed., Hiller, T., and G. Zorn, \"Diameter\n        \
    \      Extensible Authentication Protocol (EAP) Application\",\n             \
    \ RFC 4072, DOI 10.17487/RFC4072, August 2005,\n              <https://www.rfc-editor.org/info/rfc4072>.\n\
    \   [RFC6973]  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n        \
    \      Morris, J., Hansen, M., and R. Smith, \"Privacy\n              Considerations\
    \ for Internet Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July\
    \ 2013,\n              <https://www.rfc-editor.org/info/rfc6973>.\n   [TGPPCHARG]\n\
    \              3rd Generation Partnership Project, Technical\n              Specification\
    \ Group Services and System Aspects, \"Service\n              aspects; Charging\
    \ and Billing\", 3GPP TS 22.115\n              version 15.5.0, September 2018.\n"
- title: Appendix A.  Credit-Control Sequences
  contents:
  - 'Appendix A.  Credit-Control Sequences

    '
- title: A.1.  Flow I
  contents:
  - "A.1.  Flow I\n   A credit-control flow for Network Access Services prepaid is\
    \ shown in\n   Figure 11.  The Diameter protocol application is implemented in\
    \ the\n   Network Access Server (NAS) per [RFC7155].  The focus of this flow is\n\
    \   on credit authorization.\n                           NAS\n   End User    \
    \      (CC Client)          AAA Server           CC Server\n     |(1)User Logon\
    \      |(2)AA-Request (CC AVPs)                    |\n     |------------------>|-------------------->|\
    \                     |\n     |                   |                     |(3)CCR(Initial,\
    \ CC AVPs)\n     |                   |                     |-------------------->|\n\
    \     |                   |                     |(4)CCA(Granted-Units)|\n    \
    \ |                   |                     |<--------------------|\n     |  \
    \                 |(5)AA-Answer(Granted-Units)                |\n     |(6)Access\
    \ granted  |<--------------------|                     |\n     |<----------------->|\
    \                     |                     |\n     |                   |    \
    \                 |                     |\n     :                   :        \
    \             :                     :\n     |                   |(7)CCR(Update,\
    \ Used-Units)                 |\n     |                   |-------------------->|(8)CCR\
    \               |\n     |                   |                     |   (Update,\
    \ Used-Units)\n     |                   |                     |-------------------->|\n\
    \     |                   |                     |(9)CCA(Granted-Units)|\n    \
    \ |                   |(10)CCA(Granted-Units)<--------------------|\n     |  \
    \                 |<--------------------|                     |\n     :      \
    \             :                     :                     :\n     |         (Auth.\
    \ lifetime expires)        |                     |\n     |                   |(11)AAR\
    \ (CC AVP)     |                     |\n     |                   |-------------------->|\
    \                     |\n     |                   |            (12)AAA  |    \
    \                 |\n     |                   |<--------------------|        \
    \             |\n     :                   :                     :            \
    \         :\n     :                   :                     :                \
    \     :\n     |(13)User logoff    |                     |                    \
    \ |\n     |------------------>|(14)CCR(Term., Used-Units)                 |\n\
    \     |                   |-------------------->|(15)CCR              |\n    \
    \ |                   |                     |   (Term., Used-Units)\n     |  \
    \                 |                     |-------------------->|\n     |      \
    \             |                     |             (16)CCA |\n     |          \
    \         |            (17)CCA  |<--------------------|\n     |              \
    \     |<--------------------|                     |\n     |                  \
    \ |(18)STR              |                     |\n     |                   |-------------------->|\
    \                     |\n     |                   |             (19)STA |    \
    \                 |\n     |                   |<--------------------|        \
    \             |\n                             Figure 11: Flow I\n   The user logs\
    \ on to the network (1).  The Diameter NAS sends a\n   Diameter AA-Request (AAR)\
    \ to the home Diameter AAA server (2).  The\n   credit-control client populates\
    \ the AAR with the Credit-Control AVP\n   set to CREDIT_AUTHORIZATION, and service-specific\
    \ AVPs are included,\n   as usual [RFC7155].  The home Diameter AAA server performs\
    \ service-\n   specific authentication and authorization, as usual.  The home\n\
    \   Diameter AAA server determines that the user is a prepaid user and\n   notices\
    \ from the Credit-Control AVP that the NAS has credit-control\n   capabilities.\
    \  It sends a Diameter Credit-Control-Request with\n   CC-Request-Type set to\
    \ INITIAL_REQUEST to the Diameter Credit-Control\n   server to perform credit\
    \ authorization (3) and to establish a\n   credit-control session.  (The home\
    \ Diameter AAA server may forward\n   service-specific AVPs received from the\
    \ NAS as input for the rating\n   process.)  The Diameter Credit-Control server\
    \ checks the end user's\n   account balance, rates the service, and reserves credit\
    \ from the\n   end user's account.  The reserved quota is returned to the home\n\
    \   Diameter AAA server in the Diameter Credit-Control-Answer (4).  The\n   home\
    \ Diameter AAA server sends the reserved quota to the NAS in the\n   Diameter\
    \ AA-Answer (AAA).  Upon receiving the AA-Answer, the NAS\n   starts the credit-control\
    \ session and starts monitoring the granted\n   units (5).  The NAS grants access\
    \ to the end user (6).  At the expiry\n   of the allocated quota, the NAS sends\
    \ a Diameter Credit-Control-\n   Request with CC-Request-Type set to UPDATE_REQUEST\
    \ to the home\n   Diameter AAA server (7).  This message contains the units used\
    \ thus\n   far.  The home Diameter AAA server forwards the CCR to the Diameter\n\
    \   Credit-Control server (8).  The Diameter Credit-Control server debits\n  \
    \ the used units from the end user's account and allocates a new quota\n   that\
    \ is returned to the home Diameter AAA server in the Diameter\n   Credit-Control-Answer\
    \ (9).  The message is forwarded to the NAS (10).\n   During the ongoing credit-control\
    \ session, the authorization lifetime\n   expires, and the authorization/authentication\
    \ client in the NAS\n   performs service-specific re-authorization to the home\
    \ Diameter AAA\n   server, as usual.  The credit-control client populates the\
    \ AAR with\n   the Credit-Control AVP set to RE_AUTHORIZATION, indicating that\
    \ the\n   credit-control server shall not be contacted, as the credit\n   authorization\
    \ is controlled by the burning rate of the granted units\n   (11).  The home Diameter\
    \ AAA server performs service-specific\n   re-authorization as usual and returns\
    \ the AA-Answer to the NAS (12).\n   The end user logs off from the network (13).\
    \  To debit the used units\n   from the end user's account and to stop the credit-control\
    \ session,\n   the NAS sends a Diameter Credit-Control-Request with CC-Request-Type\n\
    \   set to TERMINATION_REQUEST to the home Diameter AAA server (14).  The\n  \
    \ home Diameter AAA server forwards the CCR to the credit-control\n   server (15).\
    \  The Diameter Credit-Control server acknowledges the\n   session termination\
    \ by sending a Diameter Credit-Control-Answer to\n   the home Diameter AAA server\
    \ (16).  The home Diameter AAA server\n   forwards the answer to the NAS (17).\
    \  The STR/STA takes place between\n   the NAS and home Diameter AAA server, as\
    \ usual (18), (19).\n"
- title: A.2.  Flow II
  contents:
  - "A.2.  Flow II\n   Figure 12 provides an example of Diameter Credit-Control for\
    \ SIP\n   sessions.  Although the flow focuses on illustrating the usage of\n\
    \   credit-control messages, the SIP signaling is inaccurate, and the\n   diagram\
    \ is not by any means an attempt to define a service provider's\n   SIP network.\
    \  However, for the sake of this example, some assumptions\n   are made below.\n\
    \         SIP Proxy/Registrar   AAA\n   A           (CC Client)     Server   \
    \        B        CC Server\n   | (i) REGISTER |              |              |\
    \              |\n   |------------->|(ii)          |              |          \
    \    |\n   |              |------------->|              |              |\n   |\
    \              |authentication &             |              |\n   |          \
    \    |authorization |              |              |\n   |              |<-------------|\
    \              |              |\n   |(iii) 200 OK  |                         \
    \    |              |\n   |<-------------|                             |     \
    \         |\n   :              :                             :              :\n\
    \   |(1)  INVITE   |                                            :\n   |------------->|\n\
    \   |              |(2)  CCR (Initial, SIP-specific AVP)        |\n   |      \
    \        |------------------------------------------->|\n   |              |(3)\
    \  CCA (Granted-Units)                    |\n   |              |<-------------------------------------------|\n\
    \   |              |(4)  INVITE                  |              |\n   |      \
    \        |---------------------------->|              |\n   :              : \
    \                            :              :\n   |              |(5)  CCR (Update,\
    \ Used-Units)               |\n   |              |------------------------------------------->|\n\
    \   |              |(6)  CCA (Granted-Units)                    |\n   |      \
    \        |<-------------------------------------------|\n   :              : \
    \                            :              :\n   |(7)  BYE      |           \
    \                  |              |\n   |------------->|                     \
    \        |              |\n   |              |(8)  BYE                     | \
    \             |\n   |              |---------------------------->|           \
    \   |\n   |              |(9)  CCR (Termination, Used-Units)          |\n   |\
    \              |------------------------------------------->|\n   |          \
    \    |(10) CCA ()                                 |\n   |              |<-------------------------------------------|\n\
    \   |              |                             |              |\n          \
    \                  Figure 12: Flow II\n   Typically, prepaid services based, for\
    \ example, on time usage for SIP\n   sessions require an entity in the service\
    \ provider network to\n   intercept all the requests within the SIP dialog in\
    \ order to detect\n   events, such as session establishment and session release,\
    \ that are\n   essential for performing credit-control operations with the\n \
    \  credit-control server.  Therefore, in this example, it is assumed\n   that\
    \ the SIP Proxy adds a Record-Route header in the initial SIP\n   INVITE to make\
    \ sure that all the future requests in the created\n   dialog traverse through\
    \ it (for the definitions of \"Record-Route\" and\n   \"dialog\", please refer\
    \ to [RFC3261]).  Finally, the degree of\n   credit-control measuring of the media\
    \ by the proxy depends on the\n   business model design used in setting up the\
    \ end system and proxies\n   in the SIP network.\n   The end user (SIP User Agent\
    \ A) sends a REGISTER with credentials\n   (i).  The SIP Proxy sends a request\
    \ to the home AAA server to perform\n   multimedia authentication and authorization\
    \ by using, for instance, a\n   Diameter multimedia application (ii).  The home\
    \ AAA server checks\n   that the credentials are correct and checks the user profile.\n\
    \   Eventually, a 200 OK response (iii) is sent to the User Agent.  Note\n   that\
    \ the authentication and authorization are valid for the\n   registration validity\
    \ period duration (i.e., until re-registration is\n   performed).  Several SIP\
    \ sessions may be established without\n   re-authorization.\n   User Agent A sends\
    \ an INVITE (1).  The SIP Proxy sends a Diameter\n   Credit-Control-Request (INITIAL_REQUEST)\
    \ to the Diameter\n   Credit-Control server (2).  The Credit-Control-Request contains\n\
    \   information obtained from the SIP signaling describing the requested\n   service\
    \ (e.g., calling party, called party, Session Description\n   Protocol (SDP) attributes).\
    \  The Diameter Credit-Control server\n   checks the end user's account balance,\
    \ rates the service, and\n   reserves credit from the end user's account.  The\
    \ reserved quota is\n   returned to the SIP Proxy in the Diameter Credit-Control-Answer\
    \ (3).\n   The SIP Proxy forwards the SIP INVITE to User Agent B (4).  B's phone\n\
    \   rings, and B answers.  The media flows between them, and the SIP\n   Proxy\
    \ starts measuring the quota.  At the expiry of the allocated\n   quota, the SIP\
    \ Proxy sends a Diameter Credit-Control-Request\n   (UPDATE_REQUEST) to the Diameter\
    \ Credit-Control server (5).  This\n   message contains the units used thus far.\
    \  The Diameter\n   Credit-Control server debits the used units from the end user's\n\
    \   account and allocates new credit that is returned to the SIP Proxy in\n  \
    \ the Diameter Credit-Control-Answer (6).  The end user terminates the\n   service\
    \ by sending a BYE message (7).  The SIP Proxy forwards the BYE\n   message to\
    \ User Agent B (8) and sends a Diameter Credit-Control-\n   Request (TERMINATION_REQUEST)\
    \ to the credit-control server (9).  The\n   Diameter Credit-Control server acknowledges\
    \ the session termination\n   by sending a Diameter Credit-Control-Answer to the\
    \ SIP Proxy (10).\n"
- title: A.3.  Flow III
  contents:
  - "A.3.  Flow III\n   A credit-control flow for Multimedia Messaging Service is\
    \ shown in\n   Figure 13.  The sender is charged as soon as the messaging server\n\
    \   successfully stores the message.\n                            MMS Server\n\
    \                A           (CC Client)           B           CC Server\n   \
    \             |(1) Send MMS    |                |                |\n         \
    \       |--------------->|                |                |\n               \
    \ |                |(2) CCR (Event, DIRECT_DEBITING, |\n                |    \
    \            |          MMS-specific AVP)      |\n                |          \
    \      |-------------------------------->|\n                |                |(3)\
    \ CCA (Granted-Units)          |\n                |                |<--------------------------------|\n\
    \                |(4) Send MMS Ack|                |                |\n      \
    \          |<---------------|                |                |\n            \
    \    |                |(5) Notify MMS  |                |\n                | \
    \               |--------------->|                |\n                :       \
    \         :                :                :\n                |             \
    \   |(6) Retrieve MMS|                |\n                |                |<---------------|\
    \                |\n                |                |(7) Retrieve MMS|      \
    \          |\n                |                |    Ack         |            \
    \    |\n                |                |--------------->|                |\n\
    \                |                |                |                |\n      \
    \                      Figure 13: Flow III\n   This is an example of Diameter\
    \ Credit-Control for direct debiting\n   using the Multimedia Messaging Service\
    \ environment.  Although the\n   flow focuses on illustrating the usage of credit-control\
    \ messages,\n   the MMS signaling is inaccurate, and the diagram is not by any\
    \ means\n   an attempt to define a service provider's MMS configuration or\n \
    \  billing model.\n   End user A sends an MMS to the MMS server (1).  The MMS\
    \ server stores\n   the message and sends a Diameter Credit-Control-Request\n\
    \   (EVENT_REQUEST with Requested-Action set to DIRECT_DEBITING) to the\n   Diameter\
    \ Credit-Control server (2).  The Credit-Control-Request\n   contains information\
    \ about the MMS message (e.g., size, recipient\n   address, image coding type).\
    \  The Diameter Credit-Control server\n   checks the end user's account balance,\
    \ rates the service, and debits\n   the service from the end user's account. \
    \ The granted quota is\n   returned to the MMS server in the Diameter Credit-Control-Answer\
    \ (3).\n   The MMS server acknowledges the successful reception of the MMS\n \
    \  message (4).  The MMS server notifies the recipient about the new MMS\n   (5),\
    \ and end user B retrieves the message from the MMS message store\n   (6), (7).\n\
    \   Note that the transfer of the MMS message can take an extended period\n  \
    \ of time and can fail, in which case a recovery action is needed.  The\n   MMS\
    \ server should return the already-debited units to the user's\n   account by\
    \ using the REFUND action described in Section 6.4.\n"
- title: A.4.  Flow IV
  contents:
  - "A.4.  Flow IV\n   Another credit-control flow for Multimedia Messaging Service\
    \ is shown\n   in Figure 14.  The recipient is charged at the time of message\n\
    \   delivery.\n                             MMS Server\n         Content Server\
    \     (CC Client)           B           CC Server\n                |(1) Send MMS\
    \    |                |                |\n                |--------------->| \
    \               |                |\n                |                |(2) CCR\
    \ (Event, CHECK_BALANCE,   |\n                |                |         MMS-specific\
    \ AVP)       |\n                |                |-------------------------------->|\n\
    \                |                |(3) CCA (ENOUGH_CREDIT)          |\n      \
    \          |                |<--------------------------------|\n            \
    \    |(4) Send MMS Ack|                |                |\n                |<---------------|\
    \                |                |\n                |                |(5) Notify\
    \ MMS  |                |\n                |                |--------------->|\
    \                |\n                :                :                :      \
    \          :\n                |                |(6) Retrieve MMS|            \
    \    |\n                |                |<---------------|                |\n\
    \                |                |(7) CCR (Event, DIRECT_DEBITING, |\n      \
    \          |                |          MMS-specific AVP)      |\n            \
    \    |                |-------------------------------->|\n                | \
    \               |(8) CCA (Granted-Units)          |\n                |       \
    \         |<--------------------------------|\n                |             \
    \   |(9) Retrieve MMS|                |\n                |                |  \
    \  Ack         |                |\n                |                |--------------->|\
    \                |\n                |                |                |      \
    \          |\n                            Figure 14: Flow IV\n   This is an example\
    \ of Diameter Credit-Control for direct debiting\n   using the Multimedia Messaging\
    \ Service environment.  Although the\n   flow focuses on illustrating the usage\
    \ of credit-control messages,\n   the MMS signaling is inaccurate, and the diagram\
    \ is not by any means\n   an attempt to define a service provider's MMS configuration\
    \ or\n   billing model.\n   A content server sends an MMS to the MMS server (1),\
    \ which stores the\n   message.  The message recipient will be charged for the\
    \ MMS message\n   in this case.  As there can be a substantially long time between\
    \ the\n   receipt of the message at the MMS server and the actual retrieval of\n\
    \   the message, the MMS server does not establish any credit-control\n   sessions\
    \ to the Diameter Credit-Control server; rather, it first\n   performs only a\
    \ balance check (without any credit reservations) by\n   sending a Diameter Credit-Control-Request\
    \ (EVENT_REQUEST with\n   Requested-Action set to CHECK_BALANCE) to verify that\
    \ end user B can\n   cover the cost for the MMS (2).  The Diameter Credit-Control\
    \ server\n   checks the end user's account balance and returns the answer to the\n\
    \   MMS server in the Diameter Credit-Control-Answer (3).  The MMS server\n  \
    \ acknowledges the successful reception of the MMS message (4).  The\n   MMS server\
    \ notifies the recipient of the new MMS (5), and after some\n   time end user\
    \ B retrieves the message from the MMS message store (6).\n   The MMS server sends\
    \ a Diameter Credit-Control-Request (EVENT_REQUEST\n   with Requested-Action set\
    \ to DIRECT_DEBITING) to the Diameter\n   Credit-Control server (7).  The Credit-Control-Request\
    \ contains\n   information about the MMS message (e.g., size, recipient address,\n\
    \   coding type).  The Diameter Credit-Control server checks the\n   end user's\
    \ account balance, rates the service, and debits the service\n   from the end\
    \ user's account.  The granted quota is returned to the\n   MMS server in the\
    \ Diameter Credit-Control-Answer (8).  The MMS is\n   transferred to end user\
    \ B (9).\n   Note that the transfer of the MMS message can take an extended period\n\
    \   of time and can fail, in which case a recovery action is needed.  The\n  \
    \ MMS server should return the already-debited units to the user's\n   account\
    \ by using the REFUND action described in Section 6.4.\n"
- title: A.5.  Flow V
  contents:
  - "A.5.  Flow V\n   Figure 15 provides an example of an Advice of Charge (AoC) service\n\
    \   for a SIP call.\n                            SIP Controller\n         User\
    \ Agent A        (CC Client)      User Agent B     CC Server\n              |(1)INVITE\
    \          |                |               |\n              |  User Agent B(SDP)|\
    \                |               |\n              |------------------>|      \
    \          |               |\n              |                   |(2)CCR (Event,\
    \ PRICE_ENQUIRY,   |\n              |                   |        SIP-specific\
    \ AVPs)      |\n              |                   |------------------------------->|\n\
    \              |                   |(3)CCA (Cost-Information)       |\n      \
    \        |                   |<-------------------------------|\n            \
    \  |(4)MESSAGE(URL)    |                |               |\n              |<------------------|\
    \                |               |\n              |(5)HTTP GET        |      \
    \          |               |\n              |------------------>|            \
    \    |               |\n              |(6)HTTP POST       |                | \
    \              |\n              |------------------>|(7)INVITE(SDP)  |       \
    \        |\n              |                   |--------------->|             \
    \  |\n              |                   |      (8)200 OK |               |\n \
    \             |         (9)200 OK |<---------------|               |\n       \
    \       |<------------------|                |               |\n             \
    \                Figure 15: Flow V\n   This is an example of Diameter Credit-Control\
    \ for SIP sessions.\n   Although the flow focuses on illustrating the usage of\
    \ credit-control\n   messages, the SIP signaling is inaccurate, and the diagram\
    \ is not by\n   any means an attempt to define a service provider's SIP network.\n\
    \   User Agent A can be either a postpaid or prepaid subscriber using the\n  \
    \ AoC service.  It is assumed that the SIP controller also has HTTP\n   capabilities\
    \ and delivers an interactive AoC web page with, for\n   instance, the cost information,\
    \ the details of the call derived from\n   the SDP, and a button to accept/not\
    \ accept the charges.  (There may\n   be many other ways to deliver AoC information;\
    \ however, this flow\n   focuses on the use of the credit-control messages.) \
    \ The user has\n   been authenticated and authorized prior to initiating the call\
    \ and\n   has been subscribed to the AoC service.\n   User Agent A sends an INVITE\
    \ with the SDP to User Agent B via the SIP\n   controller (1).  The SIP controller\
    \ determines that the user is\n   subscribed to an AoC service and sends a Diameter\
    \ Credit-Control-\n   Request (EVENT_REQUEST with Requested-Action set to PRICE_ENQUIRY)\
    \ to\n   the Diameter Credit-Control server (2).  The Credit-Control-Request\n\
    \   contains SIP-specific AVPs derived from the SIP signaling, describing\n  \
    \ the requested service (e.g., calling party, called party, SDP\n   attributes).\
    \  The Diameter Credit-Control server determines the cost\n   of the service and\
    \ returns the Credit-Control-Answer, including the\n   Cost-Information AVP (3).\
    \  The SIP controller manufactures the AoC\n   web page with information received\
    \ in SIP signaling and with the cost\n   information received from the credit-control\
    \ server.  It then sends a\n   SIP MESSAGE that contains a URL pointing to the\
    \ AoC information web\n   page (4).  Upon receipt of the SIP MESSAGE, User Agent\
    \ A\n   automatically invokes the web browser that retrieves the AoC\n   information\
    \ (5).  The user clicks on the appropriate button to accept\n   the charges (6).\
    \  The SIP controller continues the session and sends\n   the INVITE to User Agent\
    \ B, which accepts the call (7), (8), (9).\n"
- title: A.6.  Flow VI
  contents:
  - "A.6.  Flow VI\n   Figure 16 illustrates a credit-control flow for the REFUND\
    \ case.  It\n   is assumed that there is a trusted relationship and secure connection\n\
    \   between the gaming server and the Diameter Credit-Control server.\n   The\
    \ end user may be a prepaid subscriber or a postpaid subscriber.\n           \
    \               Gaming Server\n   End User                (CC Client)        \
    \      CC Server\n      |  (1)Service Delivery   |                        |\n\
    \      |<---------------------->|                        |\n      :          \
    \              :                        :\n      :                        :  \
    \                      :\n      |                        |(2)CCR(Event, REFUND,Requested-\n\
    \      |                        |Service-Unit, Service-Parameter-Info)\n     \
    \ |                        |----------------------->|\n      |               \
    \         |  (3)CCA(Cost-Information)\n      |                        |<-----------------------|\n\
    \      |        (4)Notification |                        |\n      |<-----------------------|\
    \                        |\n                            Figure 16: Flow VI\n \
    \  While the end user is playing the game (1), they enter a new level\n   that\
    \ entitles them to a bonus.  The gaming server sends a Diameter\n   Credit-Control-Request\
    \ (EVENT_REQUEST with Requested-Action set to\n   REFUND_ACCOUNT) to the Diameter\
    \ Credit-Control server (2).  The\n   Credit-Control-Request contains the Requested-Service-Unit\
    \ AVP with\n   the CC-Service-Specific-Units containing the number of points the\n\
    \   user just won.  The Service-Parameter-Info AVP is also included in\n   the\
    \ request and specifies the service event to be rated (e.g., Tetris\n   Bonus).\
    \  From information received, the Diameter Credit-Control\n   server determines\
    \ the amount to be credited, refunds the user's\n   account, and returns the Credit-Control-Answer,\
    \ including the\n   Cost-Information AVP (3).  The Cost-Information AVP indicates\
    \ the\n   credited amount.  At the first opportunity, the gaming server\n   notifies\
    \ the end user of the credited amount (4).\n"
- title: A.7.  Flow VII
  contents:
  - "A.7.  Flow VII\n   Figure 17 provides an example of graceful service termination\
    \ for a\n   SIP call.  It is assumed that the call is set up so that the\n   controller\
    \ is in the call as a B2BUA (Back-to-Back User Agent)\n   performing third-party\
    \ call control (3PCC).  Note that the SIP\n   signaling is inaccurate, as the\
    \ focus of this flow is on graceful\n   service termination and credit-control\
    \ authorization.  Best practices\n   for 3PCC are defined in [RFC3725].\n    \
    \               SIP Controller    Top-Up\n   User Agent A     (CC Client)    \
    \  Server      User Agent B  CC Server\n        |                |           \
    \   |             |              |\n        |                | (1)CCR(Update,\
    \ Used-Units) |              |\n        |                |------------------------------------------>|\n\
    \        |                |               (2)CCA(Final-Unit, Redirect)|\n    \
    \    |                |<------------------------------------------|\n        :\
    \                :              :             :              :\n        :    \
    \            :              :             :              :\n        |        \
    \        |  (3)CCR(Update, Used-Units)|              |\n        |            \
    \    |------------------------------------------>|\n        |                |\
    \ (3a)INVITE(\"hold\")         |              |\n        |                |--------------------------->|\
    \              |\n        |                |              |       (4)CCA(Validity-Time)|\n\
    \        |                |<------------------------------------------|\n    \
    \    |      (5)INVITE | (6)INVITE    |             |              |\n        |<---------------|------------->|\
    \             |              |\n        |             (7)RTP            |    \
    \         |              |\n        |...............................|        \
    \     |              |\n        |                |       (8)BYE |            \
    \ |              |\n        |                |<-------------|             |  \
    \            |\n        |                | (9)CCR(Update)             |      \
    \        |\n        |                |------------------------------------------>|\n\
    \        |                |                     (10)CCA(Granted-Units)|\n    \
    \    |                |<------------------------------------------|\n        |\
    \     (12)INVITE | (11)INVITE                 |              |\n        |<---------------|--------------------------->|\
    \              |\n                            Figure 17: Flow VII\n   The call\
    \ is ongoing between User Agents A and B; User Agent A has a\n   prepaid subscription.\
    \  At the expiry of the allocated quota, the SIP\n   controller sends a Diameter\
    \ Credit-Control-Request (UPDATE_REQUEST)\n   to the Diameter Credit-Control server\
    \ (1).  This message contains the\n   units used thus far.  The Diameter Credit-Control\
    \ server debits the\n   used units from the end user's account and allocates the\
    \ final quota\n   returned to the SIP controller in the Diameter Credit-Control-Answer\n\
    \   (2).  This message contains the Final-Unit-Indication AVP with\n   Final-Unit-Action\
    \ set to REDIRECT, the Redirect-Address-Type set to\n   SIP URI, and the Redirect-Server-Address\
    \ set to the top-up server\n   name (e.g., sip:sip-topup-server@domain.com). \
    \ At the expiry of the\n   final allocated quota, the SIP controller sends a Diameter\n\
    \   Credit-Control-Request (UPDATE_REQUEST) to the Diameter\n   Credit-Control\
    \ server (3) and places the called party on \"hold\" by\n   sending an INVITE\
    \ with the appropriate connection address in the SDP\n   (3a).  The Credit-Control-Request\
    \ message contains the units used\n   thus far.  The Diameter Credit-Control server\
    \ debits the used units\n   from the end user's account but does not make any\
    \ credit\n   reservations.  The Credit-Control-Answer message, which contains\
    \ the\n   Validity-Time to supervise the graceful service termination process,\n\
    \   is returned to the SIP controller (4).  The SIP controller\n   establishes\
    \ a SIP session between the prepaid user and the top-up\n   server (5), (6). \
    \ The top-up server plays an announcement and prompts\n   the user to enter a\
    \ credit card number and the amount of money to be\n   used to replenish the account\
    \ (7).  The top-up server validates the\n   credit card number, replenishes the\
    \ user's account (using some means\n   outside the scope of this specification),\
    \ and releases the SIP\n   session (8).  The SIP controller can now assume that\
    \ communication\n   between the prepaid user and the top-up server took place.\
    \  It sends\n   a spontaneous Credit-Control-Request (UPDATE_REQUEST) to the Diameter\n\
    \   Credit-Control server to check whether the account has been\n   replenished\
    \ (9).  The Diameter Credit-Control server reserves credit\n   from the end user's\
    \ account and returns the reserved quota to the SIP\n   controller in the Credit-Control-Answer\
    \ (10).  At this point, the SIP\n   controller reconnects the caller and the called\
    \ party (11), (12).\n"
- title: A.8.  Flow VIII
  contents:
  - "A.8.  Flow VIII\n   Figure 18 provides an example of graceful service termination\n\
    \   initiated when the first interrogation takes place because the user's\n  \
    \ account is empty.  In this example, the credit-control server\n   supports the\
    \ server-initiated credit re-authorization.  The Diameter\n   protocol application\
    \ is implemented in the NAS per [RFC7155].\n                          NAS    \
    \                      Top-Up      CC\n   End User         (CC Client)       \
    \   AAA Server    Server    Server\n      |(1)User Logon      |(2)AA-Request (CC\
    \ AVPs)        |         |\n      |------------------>|------------------->| \
    \         |         |\n      |                   |                    |(3)CCR(Initial,\
    \ CC AVPs)\n      |                   |                    |------------------->|\n\
    \      |                   |                    |(4)CCA(Final-Unit,  |\n     \
    \ |                   |                    |      Validity-Time)|\n      |   \
    \                |                    |<-------------------|\n      |        \
    \           |(5)AA-Answer(Final-Unit, Validity-Time)  |\n      |(6)Limited access\
    \  |<-------------------|          |         |\n      |      granted      |  \
    \                  |          |         |\n      |<----------------->|       \
    \             |          |         |\n      |                   |            \
    \        |          |         |\n      |   (7)TCP/HTTP     |        (8)TCP/HTTP\
    \            |         |\n      |<----------------->|<----------------------------->|\
    \         |\n      |                  (9)Replenish account             |     \
    \    |\n      |<------------------------------------------------->|         |\n\
    \      |                   |                    |            (10)RAR |\n     \
    \ |                   |<-------------------|<-------------------|\n      |   \
    \                |(11)RAA             |                    |\n      |        \
    \           |------------------->|------------------->|\n      |             \
    \      |(12)CCR(Update)     |                    |\n      |                  \
    \ |------------------->|(13)CCR(Update)     |\n      |                   |   \
    \                 |------------------->|\n      |                   |        \
    \            |(14)CCA(Granted-Units)\n      |                   |(15)CCA(Granted-Units)<------------------|\n\
    \      |                   |<-------------------|                    |\n     \
    \                      Figure 18: Flow VIII\n   The user logs on to the network\
    \ (1).  The Diameter NAS sends a\n   Diameter AA-Request (AAR) to the home Diameter\
    \ AAA server (2).  The\n   credit-control client populates the AAR with the Credit-Control\
    \ AVP\n   set to CREDIT_AUTHORIZATION, and service-specific AVPs are included,\n\
    \   as usual [RFC7155].  The home Diameter AAA server performs service-\n   specific\
    \ authentication and authorization, as usual.  The home\n   Diameter AAA server\
    \ determines that the user has a prepaid\n   subscription and notices from the\
    \ Credit-Control AVP that the NAS has\n   credit-control capabilities.  It sends\
    \ a Diameter Credit-Control-\n   Request with CC-Request-Type set to INITIAL_REQUEST\
    \ to the Diameter\n   Credit-Control server to perform credit authorization (3)\
    \ and to\n   establish a credit-control session.  (The home Diameter AAA server\n\
    \   may forward service-specific AVPs received from the NAS as input for\n   the\
    \ rating process.)  The Diameter Credit-Control server checks the\n   end user's\
    \ account balance, determines that the account cannot cover\n   the cost of the\
    \ service, and initiates graceful service termination.\n   The Credit-Control-Answer\
    \ is returned to the home Diameter AAA server\n   (4).  This message contains\
    \ the Final-Unit-Indication AVP and the\n   Validity-Time AVP set to a reasonable\
    \ amount of time, to give the\n   user a chance to replenish their account (e.g.,\
    \ 10 minutes).  The\n   Final-Unit-Indication AVP includes the Final-Unit-Action\
    \ set to\n   REDIRECT, the Redirect-Address-Type set to URL, and the Redirect-\n\
    \   Server-Address set to the HTTP top-up server name.  The home Diameter\n  \
    \ AAA server sends the received Credit-Control AVPs to the NAS in the\n   Diameter\
    \ AA-Answer (5).  Upon successful AAA, the NAS starts the\n   credit-control session\
    \ and immediately starts graceful service\n   termination, as instructed by the\
    \ server.  The NAS grants limited\n   access to the user (6).  The HTTP client\
    \ software running in the\n   user's device opens the transport connection redirected\
    \ by the NAS to\n   the top-up server (7), (8).  An appropriate web page is provided\
    \ for\n   the user where the user can enter the credit card number and the\n \
    \  amount of money to be used to replenish the account, along with a\n   notification\
    \ message that they are granted unlimited access if the\n   replenishment operation\
    \ will be successfully executed within, for\n   example, the next 10 minutes.\
    \  The top-up server validates the credit\n   card number and replenishes the\
    \ user's account (using some means\n   outside the scope of this specification)\
    \ (9).  After successful\n   account top-up, the credit-control server sends a\
    \ Re-Auth-Request\n   message to the NAS (10).  The NAS acknowledges the request\
    \ by\n   returning the Re-Auth-Answer message (11) and initiates the credit\n\
    \   re-authorization by sending a Credit-Control-Request (UPDATE_REQUEST)\n  \
    \ to the Diameter Credit-Control server (12), (13).\n   The Diameter Credit-Control\
    \ server reserves credit from the\n   end user's account and returns the reserved\
    \ quota to the NAS via the\n   home Diameter AAA server in the Credit-Control-Answer\
    \ (14), (15).\n   The NAS removes the restriction applied by graceful service\n\
    \   termination and starts monitoring the granted units.\n"
- title: A.9.  Flow IX
  contents:
  - "A.9.  Flow IX\n   The Diameter Credit-Control application defines the Multiple-\n\
    \   Services-Credit-Control AVP, which can be used to support independent\n  \
    \ credit-control of multiple services in a single credit-control\n   (sub-)session\
    \ for Service Elements that have such capabilities.  It\n   is possible to request\
    \ and allocate resources as a credit pool that\n   is shared between services\
    \ or rating-groups.\n   Figure 19 illustrates a usage scenario where the credit-control\n\
    \   client and server support independent credit-control of multiple\n   services,\
    \ as defined in Section 5.1.2.  It is assumed that service-\n   identifiers, rating-groups,\
    \ and their associated parameters (e.g., IP\n   5-tuples) are locally configured\
    \ in the Service Element or\n   provisioned by an entity other than the credit-control\
    \ server.\n   End User         Service Element                            CC Server\n\
    \                      (CC Client)\n     |(1)User logon      |               \
    \                             |\n     |------------------>|(2)CCR(Initial, Service-Id\
    \ access,          |\n     |                   |        Access-specific AVPs,\
    \               |\n     |                   |        Multiple-Services-Indicator)\
    \        |\n     |                   |------------------------------------------->|\n\
    \     |                   |(3)CCA(Multiple-Services-CC (               |\n   \
    \  |                   |        Granted-Units(Total-Octets),        |\n     |\
    \                   |        Service-Id access,                  |\n     |   \
    \                |        Validity-Time,                      |\n     |      \
    \             |        G-S-U-Pool-Reference(Pool-Id 1,     |\n     |         \
    \          |          Multiplier 10)))                  |\n     |            \
    \       |<-------------------------------------------|\n     :               \
    \    :                                            :\n     |(4)Service-Request\
    \ (Service 1)                                  |\n     |------------------>|(5)CCR(Update,\
    \ Multiple-Services-CC (       |\n     |                   |        Requested-Units(),\
    \ Service-Id 1,    |\n     |                   |        Rating-Group 1))     \
    \               |\n     |                   |------------------------------------------->|\n\
    \     |                   |(6)CCA(Multiple-Services-CC (               |\n   \
    \  |                   |        Granted-Units(Time),                |\n     |\
    \                   |        Rating-Group 1,                     |\n     |   \
    \                |        G-S-U-Pool-Reference(Pool-Id 1,     |\n     |      \
    \             |          Multiplier 1)))                   |\n     |         \
    \          |<-------------------------------------------|\n     :            \
    \       :                                            :\n     |(7)Service-Request\
    \ (Service 2)                                  |\n     |------------------>| \
    \                                           |\n     :                   :    \
    \                                        :\n     :                   :       \
    \                                     :\n     |(8)Service-Request (Services 3\
    \ & 4)                             |\n     |------------------>|(9)CCR(Update,\
    \ Multiple-Services-CC (       |\n     |                   |        Requested-Units(),\
    \ Service-Id 3,    |\n     |                   |        Rating-Group 2),     \
    \               |\n     |                   |        Multiple-Services-CC (  \
    \            |\n     |                   |        Requested-Units(), Service-Id\
    \ 4,    |\n     |                   |        Rating-Group 3))                \
    \    |\n     |                   |------------------------------------------->|\n\
    \     |                   |(10)CCA(Multiple-Services-CC (              |\n   \
    \  |                   |         Granted-Units(Total-Octets),       |\n     |\
    \                   |         Service-Id 3, Rating-Group 2,      |\n     |   \
    \                |         Validity-Time,                     |\n     |      \
    \             |         G-S-U-Pool-Reference(Pool-Id 2,    |\n     |         \
    \          |           Multiplier 2)),                  |\n     |            \
    \       |         Multiple-Services-CC (             |\n     |               \
    \    |         Granted-Units(Total-Octets),       |\n     |                  \
    \ |         Service-Id 4, Rating-Group 3       |\n     |                   | \
    \        Validity-Time,                     |\n     |                   |    \
    \     Final-Unit-Ind.(Terminate),        |\n     |                   |       \
    \  G-S-U-Pool-Reference(Pool-Id 2,    |\n     |                   |          \
    \ Multiplier 5)))                  |\n     |                   |<-------------------------------------------|\n\
    \     :                   :                                            :\n   \
    \  :                   :                                            :\n     |\
    \ +--------------+  |                                            |\n     | |Validity\
    \ time |  |(11)CCR(Update,                             |\n     | |expires for\
    \   |  |         Multiple-Services-CC (             |\n     | |Service-Id    |\
    \  |         Requested-Unit(),                  |\n     | | access       |  |\
    \         Used-Units(In-Octets, Out-Octets), |\n     | +--------------+  |   \
    \      Service-Id access))                |\n     |                   |------------------------------------------->|\n\
    \     |                   |(12)CCA(Multiple-Services-CC (              |\n   \
    \  |                   |         Granted-Units(Total-Octets),       |\n     |\
    \                   |         Service-Id access,                 |\n     |   \
    \                |         Validity-Time,                     |\n     |      \
    \             |         G-S-U-Pool-Reference(Pool-Id 1,    |\n     |         \
    \          |           Multiplier 10)))                 |\n     |            \
    \       |<-------------------------------------------|\n     :               \
    \    :                                            :\n     :                  \
    \ :                                            :\n     | +--------------+  | \
    \                                           |\n     | |Total quota   |  |(13)CCR(Update,\
    \                             |\n     | |elapses for   |  |         Multiple-Services-CC\
    \ (             |\n     | |Pool 2:       |  |          Requested-Unit(),     \
    \            |\n     | |Service 4 not |  |          Used-Units(In-Octets, Out-Octets),|\n\
    \     | |allowed,      |  |          Service-Id 3, Rating-Group 2),    |\n   \
    \  | |Service 3     |  |         Multiple-Services-CC (             |\n     |\
    \ |continues     |  |          Used-Units(In-Octets, Out-Octets),|\n     | +--------------+\
    \  |          Service-Id 4, Rating-Group 3))    |\n     |                   |------------------------------------------->|\n\
    \     |                   |(14)CCA(Multiple-Services-CC (              |\n   \
    \  |                   |         Result-Code 4011,                  |\n     |\
    \                   |         Service-Id 3))                     |\n     |   \
    \                |<-------------------------------------------|\n     :      \
    \             :                                            :\n     :         \
    \          :                                            :\n     |(15)User logoff\
    \    |                                            |\n     |------------------>|(16)CCR(Term.,\
    \                              |\n     |                   |         Multiple-Services-CC\
    \ (             |\n     |                   |          Used-Units(In-Octets, Out-Octets),|\n\
    \     |                   |          Service-Id access),               |\n   \
    \  |                   |         Multiple-Services-CC (             |\n     |\
    \                   |          Used-Units(Time),                 |\n     |   \
    \                |          Service-Id 1, Rating-Group 1),    |\n     |      \
    \             |         Multiple-Services-CC (             |\n     |         \
    \          |          Used-Units(Time),                 |\n     |            \
    \       |          Service-Id 2, Rating-Group 1))    |\n     |               \
    \    |------------------------------------------->|\n     |                  \
    \ |(17)CCA(Term.)                              |\n     |                   |<-------------------------------------------|\n\
    \       Figure 19: Flow IX: Example of Independent Credit-Control of\n       \
    \     Multiple Services in a Credit-Control (Sub-)Session\n   The user logs on\
    \ to the network (1).  The Service Element sends a\n   Diameter Credit-Control-Request\
    \ with CC-Request-Type set to\n   INITIAL_REQUEST to the Diameter Credit-Control\
    \ server to perform\n   credit authorization for the bearer service (e.g., Internet\
    \ access\n   service) and to establish a credit-control session (2).  In this\n\
    \   message, the credit-control client indicates support for independent\n   credit-control\
    \ of multiple services within the session by including\n   the Multiple-Services-Indicator\
    \ AVP.  The Diameter Credit-Control\n   server checks the end user's account balance,\
    \ with rating information\n   received from the client (i.e., Service-Id and access-specific\
    \ AVPs);\n   rates the request; and reserves credit from the end user's account.\n\
    \   Suppose that the server reserves $5 and determines that the cost is\n   $1/MB.\
    \  It then returns to the Service Element a Credit-Control-\n   Answer message\
    \ that includes the Multiple-Services-Credit-Control AVP\n   with a quota of 5\
    \ MB associated to the Service-Id (access), to a\n   multiplier value of 10, and\
    \ to Pool-Id 1 (3).\n   The user uses service 1 (4).  The Service Element sends\
    \ a Diameter\n   Credit-Control-Request with CC-Request-Type set to UPDATE_REQUEST\
    \ to\n   the credit-control server to perform credit authorization for\n   service\
    \ 1 (5).  This message includes the Multiple-Services-Credit-\n   Control AVP\
    \ to request service units for service 1 that belong to\n   Rating-Group 1.  The\
    \ Diameter Credit-Control server determines that\n   service 1 draws credit resources\
    \ from the same account as the access\n   service (i.e., pool 1).  It rates the\
    \ request according to\n   Service-Id/rating-group and updates the existing reservation\
    \ by\n   requesting more credit.  Suppose that the server reserves $5 more\n \
    \  (now the reservation is $10) and determines that the cost is\n   $0.1/minute.\
    \  The server authorizes the whole rating-group.  It then\n   returns to the Service\
    \ Element a Credit-Control-Answer message that\n   includes the Multiple-Services-Credit-Control\
    \ AVP with a quota of\n   50 minutes associated to Rating-Group 1, to a multiplier\
    \ value of 1,\n   and to Pool-Id 1 (6).  The client adjusts the total amount of\n\
    \   resources for pool 1 according to the received quota, which gives S\n   for\
    \ pool 1 = 100.\n   The user uses service 2, which belongs to the authorized rating-group\n\
    \   (Rating-Group 1) (7).  Resources are then consumed from pool 1.\n   The user\
    \ now requests services 3 and 4 as well, which are not\n   authorized (8).  The\
    \ Service Element sends a Diameter Credit-Control-\n   Request with CC-Request-Type\
    \ set to UPDATE_REQUEST to the\n   credit-control server in order to perform credit\
    \ authorization for\n   services 3 and 4 (9).  This message includes two instances\
    \ of the\n   Multiple-Services-Credit-Control AVP to request service units for\n\
    \   service 3 that belong to Rating-Group 2 and service units for\n   service\
    \ 4 that belong to Rating-Group 3.  The Diameter Credit-Control\n   server determines\
    \ that services 3 and 4 draw credit resources from\n   another account (i.e.,\
    \ pool 2).  It checks the end user's account\n   balance and, according to Service-Id/rating-group\
    \ information, rates\n   the request.  It then reserves credit from pool 2.\n\
    \   For example, the server reserves $5 and determines that service 3\n   costs\
    \ $0.2/MB and service 4 costs $0.5/MB.  The server authorizes\n   only services\
    \ 3 and 4.  It returns to the Service Element a\n   Credit-Control-Answer message\
    \ that includes two instances of the\n   Multiple-Services-Credit-Control AVP\
    \ (10).  One instance grants a\n   quota of 12.5 MB associated to Service-Id 3\
    \ to a multiplier value\n   of 2 and to Pool-Id 2.  The other instance grants\
    \ a quota of 5 MB\n   associated to Service-Id 4 to a multiplier value of 5 and\
    \ to\n   Pool-Id 2.\n   The server also determines that pool 2 is exhausted and\
    \ service 4 is\n   not allowed to continue after these units will be consumed.\n\
    \   Therefore, the Final-Unit-Indication AVP with action TERMINATE is\n   associated\
    \ to Service-Id 4.  The client calculates the total amount\n   of resources that\
    \ can be used for pool 2 according to the received\n   quotas and multipliers,\
    \ which gives S for pool 2 = 50.\n   The Validity-Time for the access service\
    \ expires.  The Service\n   Element sends a Credit-Control-Request message to\
    \ the server in order\n   to perform credit re-authorization for the Service-Id\
    \ (access) (11).\n   This message carries one instance of the Multiple-Services-Credit-\n\
    \   Control AVP that includes the units used by this service.  Suppose\n   that\
    \ the total amount of used units is 4 MB.  The client adjusts the\n   total amount\
    \ of resources for pool 1 accordingly, which gives S for\n   pool 1 = 60.\n  \
    \ The server deducts $4 from the user's account and updates the\n   reservation\
    \ by requesting more credit.  Suppose that the server\n   reserves $5 more (now\
    \ the reservation is $11) and already knows the\n   cost of the Service-Id (access),\
    \ which is $1/MB.  It then returns to\n   the Service Element a Credit-Control-Answer\
    \ message that includes the\n   Multiple-Services-Credit-Control AVP with a quota\
    \ of 5 MB associated\n   to the Service-Id (access), to a multiplier value of\
    \ 10, and to\n   Pool-Id 1 (12).  The client adjusts the total amount of resources\
    \ for\n   pool 1 according to the received quota, which gives S for\n   pool 1\
    \ = 110.\n   Services 3 and 4 consume the total amount of pool 2's credit\n  \
    \ resources (i.e., C1*2 + C2*5 >= S).  The Service Element immediately\n   starts\
    \ the TERMINATE action for service 4 and sends a Credit-Control-\n   Request message\
    \ with CC-Request-Type set to UPDATE_REQUEST to the\n   credit-control server\
    \ in order to perform credit re-authorization for\n   service 3 (13).  This message\
    \ contains two instances of the Multiple-\n   Services-Credit-Control AVP to report\
    \ the units used by services 3\n   and 4.  The server deducts the last $5 from\
    \ the user's account\n   (pool 2) and returns the answer with Result-Code 4011\
    \ in the\n   Multiple-Services-Credit-Control AVP to indicate that service 3 can\n\
    \   continue without credit-control (14).\n   The end user logs off from the network\
    \ (15).  To debit the used units\n   from the end user's account and to stop the\
    \ credit-control session,\n   the Service Element sends a Diameter Credit-Control-Request\
    \ with\n   CC-Request-Type set to TERMINATION_REQUEST to the credit-control\n\
    \   server (16).  This message contains the units used by each service in\n  \
    \ multiple instances of the Multiple-Services-Credit-Control AVP.  The\n   used\
    \ units are associated with the relevant Service-Identifier and\n   rating-group.\
    \  The Diameter Credit-Control server debits the used\n   units to the user's\
    \ account (pool 1) and acknowledges the session\n   termination by sending a Diameter\
    \ Credit-Control-Answer to the\n   Service Element (17).\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The original authors of RFC 4006 are Harri Hakala, Leena\
    \ Mattila,\n   Juha-Pekka Koskinen, Marco Stura, and John Loughney.\n   The authors\
    \ would like to thank Bernard Aboba, Jari Arkko, Robert\n   Ekblad, Pasi Eronen,\
    \ Benny Gustafsson, Robert Karlsson, Avi Lior,\n   Jussi Maki, Paco Marin, Jeff\
    \ Meyer, Anne Narhi, John Prudhoe,\n   Christopher Richards, Juha Vallinen, and\
    \ Mark Watson for their\n   comments and suggestions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Lyle Bertz (editor)\n   Sprint\n   6220 Sprint Parkway\n\
    \   Overland Park, KS  66251\n   United States of America\n   Email: lyleb551144@gmail.com\n\
    \   David Dolson (editor)\n   Sandvine\n   408 Albert Street\n   Waterloo, ON\
    \  N2L 3V3\n   Canada\n   Email: ddolson@acm.org\n   Yuval Lifshitz (editor)\n\
    \   Sandvine\n   408 Albert Street\n   Waterloo, ON  N2L 3V3\n   Canada\n   Email:\
    \ yuvalif@yahoo.com\n"
