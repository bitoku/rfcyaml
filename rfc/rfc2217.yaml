- title: __initial_text__
  contents:
  - '                     Telnet Com Port Control Option

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  This memo does not specify an Internet standard of any\n   kind.\
    \  Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   This memo proposes a protocol to allow greater use of modems\
    \ attached\n   to a network for outbound dialing purposes.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n       1. Negotiation of the Com Port\n          Control Option\
    \ Protocol          ..................   5\n       2. Com Port Configuration Commands\
    \  ..................   6\n            Version\n            Baud Rate\n      \
    \      Data Bit Size\n            Parity\n            Stop Bit size\n       3.\
    \ Special Com Port Control Commands .................   8\n            XON/XOFF\
    \ Flow Control\n            HARDWARE Flow Control\n            BREAK Signal\n\
    \            DTR Signal\n            RTS Signal\n     4. Notification of Com Port\
    \ and     ..................    12\n        Modem Line Changes\n     5. Flow Control\
    \                     ..................    13\n     6. Security Considerations\
    \          ..................    13\n     7. Author's Address                \
    \ ..................    14\n     8. Reference Section                ..................\
    \    14\n"
- title: Discussion
  contents:
  - "Discussion\n   The Telnet protocol defines an interactive, character-oriented\n\
    \   communications session.  It was originally designed to establish a\n   session\
    \ between a client and a remote login service running on a host\n   [5].\n   Many\
    \ new business functions require a person to connect to remote\n   services to\
    \ retrieve or deposit information.  By in large, these\n   remote services are\
    \ accessed via an async dial up connection.  This\n   new class of functions include:\n\
    \     -  dial up connections to the Internet\n     -  connecting to bulletin boards\n\
    \     -  connecting to internal and external databases\n     -  sending and receiving\
    \ faxes.\n   The general nature of this new class of function requires an\n  \
    \ interactive, character-oriented communications session via an async\n   modem.\
    \  This is typically known as outbound modem dialing.\n   To help defer the cost\
    \ of installing and maintaining additional phone\n   lines which may be used very\
    \ little per person, many equipment\n   manufacturers have added the ability to\
    \ establish a Telnet session\n   directly to the outbound ports on many of the\
    \ most popular access\n   servers and routers, here after referred to as access\
    \ servers.\n   However, the current Telnet protocol definitions are not sufficient\n\
    \   to fully support this new use.  There are three new areas of\n   functionality\
    \ which need to be added to the Telnet protocol to\n   successfully support the\
    \ needs of outbound modem dialing.  These are:\n      -  The ability for the client\
    \ to send com port configuration\n         information to the access server which\
    \ is connected to the\n         outbound modem.  This is needed to ensure the\
    \ data being\n         transmitted and received by the modem is formatted correctly\n\
    \         at the byte level.\n      -  The ability for the access server to inform\
    \ the client of any\n         modem line or signal changes such as RLSD changes\
    \ (carrier\n         detect).  This information is vital, since many client software\n\
    \         packages use this information to determine if a session with the\n \
    \        remote service has been established.  RLSD changes are also\n       \
    \  used for signaling in Class I faxing [6].\n      -  The ability to manage flow\
    \ control between the client and\n         the access server which does not interfere\
    \ with the flow\n         control mechanisms used by the session between the client\
    \ and\n         the remote service.  Unfortunately RFC 1372 \"Telnet Remote\n\
    \         Flow Control Option\" [2] can not be used for this purpose\n       \
    \  because it relies on sending XON/XOFF style characters which\n         maybe\
    \ transmitted or received as a normal course of the\n         client / remote\
    \ service session.\n   Though this discussion has focused on outbound modem dialing\
    \ as the\n   primary use of this protocol, the protocol can also be used for any\n\
    \   serial device attached to an access server.  Such devices could be:\n    \
    \ -  serial printers\n     -  plotters\n     -  monitoring devices such as pipe\
    \ line monitors or medical\n        monitors\n     -  general office equipment\
    \ such as photo-copiers and cash\n        registers\n"
- title: Definition of Terms
  contents:
  - "Definition of Terms\n   Access Server - Any network device which accepts Telnet\
    \ sessions\n                   and passes the data received to a com port, and\n\
    \                   passes data received from the com port to the client\n   \
    \                via the Telnet session.\n   Baud Rate  -  For the purposes of\
    \ this document, baud rate will\n                 mean the communications of data\
    \ in bits per second.\n   Client - Any network device which initiates a Telnet\
    \ session\n            to an access server.\n   Outbound - Transmission of data\
    \ from the modem attached to the\n              access server to a remote service.\n\
    \   Inbound - Transmission of data from the remote service to the\n          \
    \   modem attached to the access server.\n   Remove Service - Any service which\
    \ accepts dial-up connections,\n                    including fax machines.\n"
- title: Illustration
  contents:
  - "Illustration\n  =====================\n  |                   |\n  |      CLIENT\
    \       |\\\n  |                   | \\ < ---- Local Area /\n  =====================\
    \  \\       Enterprise Network\n                          \\\n               \
    \            \\\n                         =============================\n    \
    \                     |      Telnet Interface     |\n                        \
    \ |                  |        |\n                         |                  |\
    \        |\n                         |  ACCESS SERVER   |        |\n         \
    \                |                  |        |\n                         |   \
    \               |        |\n                         |     Com Port Interface\
    \    |\n                         =============================\n             \
    \                         |\n                                      |\n       \
    \                       ==================\n                              |  \
    \              |\n                              |      MODEM     |\n         \
    \                     |                |\n                              ==================\n\
    \                                      |\n  Access to Remote Service         \
    \   |\n  most commonly Public Switched ----->|\n  Network                    \
    \         |\n                                      |\n                       \
    \               |\n                            ======================\n  Could\
    \ be Internet Service |                    |\n  Provider, Bulletin Board  |  \
    \                  |\n  or FAX machine            |    REMOTE SERVICE  |\n   \
    \                         |                    |\n                           \
    \ |                    |\n                            ======================\n\
    \  Command Names and Codes:\n       COM-PORT-OPTION       44\n               \
    \    Client to Access Server   Access Server to Client\n       SIGNATURE     \
    \       text                      text\n       SET-BAUDRATE            1     \
    \                 101\n       SET-DATASIZE            2                      102\n\
    \       SET-PARITY              3                      103\n       SET-STOPSIZE\
    \            4                      104\n       SET-CONTROL             5    \
    \                  105\n       NOTIFY-LINESTATE        6                     \
    \ 106\n       NOTIFY-MODEMSTATE       7                      107\n       FLOWCONTROL-SUSPEND\
    \     8                      108\n       FLOWCONTROL-RESUME      9           \
    \           109\n       SET-LINESTATE-MASK     10                      110\n \
    \      SET-MODEMSTATE-MASK    11                      111\n       PURGE-DATA \
    \            12                      112\n   Discussion: As initially proposed,\
    \ com port configuration\n               commands are only sent from the client\
    \ to the access\n               server.  There is no current vision that the access\n\
    \               server would initiate the use of a com port configuration\n  \
    \             command, only the notify commands. However, to allow for\n     \
    \          access server initiated com port configurations different\n       \
    \        command values have been established.\n"
- title: 1. Negotiation of the Com Port Control Option Protocol
  contents:
  - "1. Negotiation of the Com Port Control Option Protocol\n   The negotiation of\
    \ the com port control option protocol uses the\n   standard Telnet negotiation\
    \ protocol mechanism:\n     IAC WILL COM-PORT-OPTION\n       The sender of this\
    \ command is willing to send com port\n       control option commands.\n     IAC\
    \ WONT COM-PORT-OPTION\n       The sender of this command refuses to send com\
    \ port\n       control option commands.\n     IAC DO COM-PORT-OPTION\n       The\
    \ sender of this command is willing to accept com port\n       control option\
    \ commands.\n     IAC DONT COM-PORT-OPTION\n       The sender of this command\
    \ refuses to accept com port control\n       options commands.\n    Typically\
    \ a client will use WILL and WONT, while an access server\n    will use DO and\
    \ DONT.\n"
- title: 2. Com Port Configuration Commands
  contents:
  - "2. Com Port Configuration Commands\n   Once DO and WILL have been negotiated,\
    \ the client may send any of the\n   following commands. The client can send these\
    \ commands at any time\n   and multiple times throughout the Telnet session. Each\
    \ command\n   transmitted from the client to the access server must be acknowledged\n\
    \   once the command has been processed by the access server.  This\n   confirmation\
    \ informs the client of the value set at the access server\n   after the processing\
    \ of the command. This acknowledgment is not used\n   to acknowledge the receipt\
    \ of the command, which is handled at the\n   TCP protocol layer.  Its purpose\
    \ is to inform the client of the value\n   in use, which may be different than\
    \ the value requested in the\n   client's command.  For example, the client may\
    \ request a baud rate\n   higher than the access service can provide.  If an acknowledgment\
    \ is\n   not received by the client within a reasonable time (such as twice\n\
    \   the delay acknowledgment timer), the client may wish to resend the\n   command\
    \ or terminate the session.\n   Though the commands may be sent from the client\
    \ to the access server\n   in any sequence, there are sequences which may result\
    \ in invalid\n   configurations for the com port (for example: EVEN parity is\
    \ only\n   valid if the data size is set to less than 8 bits). Thus it is\n  \
    \ recommended that commands be issued in the following sequence:\n      1. SET-BAUDRATE\n\
    \      2. SET-DATASIZE\n      3. SET-PARITY\n      4. SET-STOPSIZE\n     IAC SB\
    \ COM-PORT-OPTION SIGNATURE <text> IAC SE\n       This command may be sent by\
    \ either the client or the access\n       server to exchange signature information.\
    \  If the command is\n       sent without <text> it is a request from the sender\
    \ to receive\n       the signature text of the receiver.  The text may be a\n\
    \       combination of any characters.  There is no structure to the\n       <text>\
    \ field.  It may contain manufacturer information, version\n       number information,\
    \ or any other information desired.  If an\n       IAC character appears in the\
    \ text it must be translated to\n       IAC-IAC to avoid conflict with the IAC\
    \ which terminates\n       the command.\n     IAC SB COM-PORT-OPTION SET-BAUD\
    \ <value(4)> IAC SE\n       This command is sent by the client to the access server\
    \ to set\n       the baud rate of the com port. The value is four octets (4 bytes).\n\
    \       The value is represented in network standard format.  The value\n    \
    \   is the baud rate being requested.  A special case is the value 0.\n      \
    \ If the value is zero the client is requesting the current baud\n       rate\
    \ of the com port on the access server.\n       Discussion: Though baud rates\
    \ used today form a very sparse space,\n                   and the initial version\
    \ of the option used an index\n                   based baud rate table, after\
    \ much discussion with a\n                   number of groups it has been determined\
    \ that the\n                   actual baud rate should be used.  There are two\
    \ main\n                   reasons. 1) It limits the number of updates to the\n\
    \                   option as faster baud rates come into use,\n             \
    \      2) It provides the greatest amount of flexibility\n                   in\
    \ the selection of the baud rates.\n     IAC SB COM-PORT-OPTION SET-DATASIZE <value>\
    \ IAC SE\n       This command is sent by the client to the access server to set\n\
    \       the data bit size. The command can also be sent to query the\n       current\
    \ data bit size. The value is one octet (byte). The value\n       is an index\
    \ into the following value table:\n           Value       Data Bit Size\n    \
    \         0           Request Current Data Bit Size\n             1          \
    \ Available for Future Use\n             2           Available for Future Use\n\
    \             3           Available for Future Use\n             4           Available\
    \ for Future Use\n             5           5\n             6           6\n   \
    \          7           7\n             8           8\n             9-127     \
    \  Available for Future Use\n       Discussion: There are only eight possible\
    \ values for the data bit\n                   size, only four have ever been used\
    \ historically and\n                   only two are commonly used today. The use\
    \ of the\n                   command-value format is recommended to preserve\n\
    \                   consistency with other commands. It also reduces the\n   \
    \                number of commands defined in the protocol, and\n           \
    \        allows for future expansion.\n     IAC SB COM-PORT-OPTION SET-PARITY\
    \ <value> IAC SE\n       This command is sent by the client to the access server\
    \ to set\n       the parity.  The command can also be sent to query the current\n\
    \       parity. The value is one octet (byte). The value is an index into\n  \
    \     the following value table:\n            Value      Parity [1]\n        \
    \      0           Request Current Data Size\n              1           NONE\n\
    \              2           ODD\n              3           EVEN\n             \
    \ 4           MARK\n              5           SPACE\n              6-127     \
    \  Available for Future Use\n       Discussion: There are only five possible values\
    \ for parity\n                   commonly used today. The use of the command-value\n\
    \                   format is recommended to preserve consistency with\n     \
    \              other commands.\n     IAC SB COM-PORT-OPTION SET-STOPSIZE <value>\
    \ IAC SE\n       This command is sent by the client to the access server to set\n\
    \       the number of stop bits. The command can also be sent to query\n     \
    \  the current stop bit size. The value is one octet (byte). The\n       value\
    \ is an index into the following value table:\n           Value      Stop Bit\
    \ Size\n             0           Request Current Data Size\n             1   \
    \        1\n             2           2\n             3           1.5\n       \
    \      4-127       Available for Future Use\n       Discussion: Stop bit 1.5 is\
    \ supported by most com port hardware\n                   only if data size is\
    \ set to 5 bits. It is not\n                   commonly used.\n"
- title: 3. Special Com Port Control Commands
  contents:
  - "3. Special Com Port Control Commands\n   The client can send this command to\
    \ the access server at any time\n   and multiple times throughout the Telnet session.\
    \ Each command\n   transmitted from the client to the access server is acknowledged\n\
    \   with a confirmation of the command and the actual value set. The\n   client\
    \ should expect a response within a reasonable time (such as\n   twice the delay\
    \ acknowledgment timer). The client may wish to\n   resend any command which is\
    \ not acknowledged or terminate the\n   session.\n     IAC SB COM-PORT-OPTION\
    \ SET-CONTROL <value> IAC SE\n       This command is sent by the client to the\
    \ access server to set\n       special com port options. The command can also\
    \ be sent to query\n       the current option value. The value is one octet (byte).\
    \ The\n       value is an index into the following value table:\n           Value\
    \      Control Commands\n             0           Request Com Port Flow Control\
    \ Setting\n                           (outbound/both)\n             1        \
    \   Use No Flow Control (outbound/both)\n             2           Use XON/XOFF\
    \ Flow Control (outbound/both)\n             3           Use HARDWARE Flow Control\
    \ (outbound/both)\n             4           Request BREAK State\n            \
    \ 5           Set BREAK State ON\n             6           Set BREAK State OFF\n\
    \             7           Request DTR Signal State\n             8           Set\
    \ DTR Signal State ON\n             9           Set DTR Signal State OFF\n   \
    \         10           Request RTS Signal State\n            11           Set\
    \ RTS Signal State ON\n            12           Set RTS Signal State OFF\n   \
    \         13           Request Com Port Flow Control Setting (inbound)\n     \
    \       14           Use No Flow Control (inbound)\n            15           Use\
    \ XON/XOFF Flow Control (inbound)\n            16           Use HARDWARE Flow\
    \ Control (inbound)\n            17           Use DCD Flow Control (outbound/both)\n\
    \            18           Use DTR Flow Control (inbound)\n            19     \
    \      Use DSR Flow Control (outbound/both)\n            20-127       Available\
    \ for Future Use\n       Discussion: Flow control options were divided into inbound\
    \ and\n                   outbound to take full advantage of existing\n      \
    \             programming interfaces and access server\n                   capabilities.\n\
    \       Discussion: The outbound values should set flow control for both\n   \
    \                outbound and inbound.  If inbound is to be, or can\n        \
    \           be, set separately it should be done after the\n                 \
    \  setting of the outbound value.\n       Discussion: If the access server is\
    \ not able to set inbound flow\n                   control differently from the\
    \ outbound flow control,\n                   it should ignore the inbound flow\
    \ control commands\n                   and set the flow control option based on\
    \ the outbound\n                   flow control commands only.\n     IAC SB COM-PORT-OPTION\
    \ SET-LINESTATE-MASK <value> IAC SE\n       This command is sent by the client\
    \ to the access server to set a\n       bit mask for the sending of the NOTIFY-LINESTATE\
    \ option (see\n       section 4).  When the LINESTATE changes on the access server,\
    \ the\n       access server will \"AND\" the new LINESTATE with the LINESTATE-\n\
    \       MASK.  If the result is not zero, the access server will send the\n  \
    \     result of the \"AND\" as the value in a NOTIFY-LINESTATE com port\n    \
    \   option. If more than one bit satisfies the LINESTATE-MASK, only\n       one\
    \ NOTIFY-LINESTATE, with all the satisfying bits, will be sent\n       to the\
    \ client.  The SET-LINESTATE-MASK may be any combination of\n       bits as listed\
    \ below.  These are the same bit values used in the\n       NOTIFY-LINESTATE option.\
    \  The SET-LINESTATE-MASK values are based\n       on the most popular UART (com\
    \ port control chip) in use [1].\n           Bit Position     Value     Meaning\n\
    \              7              128         Time-out Error\n              6    \
    \           64         Transfer Shift Register Empty\n              5        \
    \       32         Transfer Holding Register Empty\n              4          \
    \     16         Break-detect Error\n              3                8        \
    \ Framing Error\n              2                4         Parity Error\n     \
    \         1                2         Overrun Error\n              0          \
    \      1         Data Ready\n       Discussion: The SET-LINESTATE-MASK value of\
    \ 0 will prevent the\n                   access server from sending NOTIFY-LINESTATE\
    \ options\n                   to the client.\n       Discussion: The SET-LINESTATE-MASK\
    \ value of 255 will allow the\n                   access server to send a NOTIFY-LINESTATE\
    \ option to\n                   the client each time the LINESTATE changes on\
    \ the\n                   access server.\n       Discussion: The initial LINESTATE-MASK\
    \ at the access server is 0.\n       Discussion: The client does not have to send\
    \ a new\n                   SET-LINESTATE-MASK after receiving a NOTIFY-\n   \
    \                LINESTATE.  The LINESTATE-MASK on the access server\n       \
    \            is retained until set by the client or reset at the\n           \
    \        start of a new Telnet session.\n     IAC SB COM-PORT-OPTION SET-MODEMSTATE-MASK\
    \ <value> IAC SE\n       This command is sent by the client to the access server\
    \ to set a\n       bit mask for the sending of the NOTIFY-MODEMSTATE option (see\n\
    \       section 4).  When the MODEMSTATE changes on the access server,\n     \
    \  the access server will \"AND\" the new MODEMSTATE with the\n       MODEMSTATE-MASK.\
    \  If the result is not zero, the access server\n       will send the result of\
    \ the \"AND\" as the value in a NOTIFY-\n       MODEMSTATE com port option. If\
    \ more than one bit satisfies the\n       MODEMSTATE-MASK, only one NOTIFY-MODEMSTATE,\
    \ with all the\n       satisfying bits, will be sent to the client.  The SET-\n\
    \       MODEMSTATE-MASK may be any combination of bits as listed below.\n    \
    \   These are the same bit values used in the NOTIFY-MODEMSTATE\n       option.\
    \  The SET-MODEMSTATE-MASK values are based on the most\n       popular UART (com\
    \ port control chip) in use [1].\n           Bit Position     Value     Meaning\n\
    \              7              128        Receive Line Signal Detect\n        \
    \                                (also known as Carrier Detect)\n            \
    \  6               64        Ring Indicator\n              5               32\
    \        Data-Set-Ready Signal State\n              4               16       \
    \ Clear-To-Send Signal State\n              3                8        Delta Receive\
    \ Line Signal Detect\n              2                4        Trailing-edge Ring\
    \ Detector\n              1                2        Delta Data-Set-Ready\n   \
    \           0                1        Delta Clear-To-Send\n       Discussion:\
    \ The SET-MODEMSTATE-MASK value of 0 will prevent the\n                   access\
    \ server from sending NOTIFY-MODEMSTATE options\n                   to the client.\n\
    \       Discussion: The SET-MODEMSTATE-MASK value of 255 will allow the\n    \
    \               access server to send a NOTIFY-MODEMSTATE option to\n        \
    \           the client each time the MODEMSTATE changes on the\n             \
    \      access server.\n       Discussion: The initial MODEMSTATE-MASK at the access\
    \ server\n                   is 255.\n       Discussion: The client does not have\
    \ to send a new\n                   SET-MODEMSTATE-MASK after receiving a NOTIFY-\n\
    \                   MODEMSTATE.  The MODEMSTATE-MASK on the access server\n  \
    \                 is retained until set by the client or reset at the\n      \
    \             start of a new Telnet session.\n     IAC SB COM-PORT-OPTION PURGE-DATA\
    \ <value> IAC SE\n       This command is sent by the client to the access server\
    \ to\n       instruct the access server to immediately clear all data from the\n\
    \       buffer or buffers referenced by the value.  The value is one\n       octet\
    \ (byte).  The value is an index into the following value\n       table:\n   \
    \        Value      Purge Data Buffer\n             0           Available for\
    \ Future Use\n             1           Purge access server receive data buffer\n\
    \             2           Purge access server transmit data buffer\n         \
    \    3           Purge both the access server receive data\n                 \
    \        buffer and the access server transmit data\n                        \
    \ buffer\n             4-127       Available for Future Use\n"
- title: 4. Notification of Com port and Modem Line Changes
  contents:
  - "4. Notification of Com port and Modem Line Changes\n   The access server can\
    \ send these commands to the client any time\n   and multiple times throughout\
    \ the Telnet session. The access\n   server should send the appropriate command\
    \ to the client as soon\n   as the com port or modem line changes occurs.  The\
    \ client does\n   not issue a response to these commands.\n     IAC SB COM-PORT-OPTION\
    \ NOTIFY-LINESTATE <value> IAC SE\n       The value is one octet (byte). The value\
    \ is a bit level\n       composition made up from the value table below. Multiple\
    \ bit\n       values may be set in a single transmission. The values are based\n\
    \       on the most popular UART (com port control chip) in use [1].\n       \
    \    Bit Position     Value     Meaning\n              7              128    \
    \     Time-out Error\n              6               64         Transfer Shift\
    \ Register Empty\n              5               32         Transfer Holding Register\
    \ Empty\n              4               16         Break-detect Error\n       \
    \       3                8         Framing Error\n              2            \
    \    4         Parity Error\n              1                2         Overrun\
    \ Error\n              0                1         Data Ready\n       Discussion:\
    \ The LINESTATE is the line state of the UART on\n                   the access\
    \ server.\n     IAC SB COM-PORT-OPTION NOTIFY-MODEMSTATE <value> IAC SE\n    \
    \   The value is one octet (byte). The value is a bit level\n       composition\
    \ made up from the value table below. Multiple bit\n       values may be set in\
    \ a single transmission. The values are based\n       on the most popular UART\
    \ (com port control chip) in use [1].\n           Bit Position     Value     Meaning\n\
    \              7              128        Receive Line Signal Detect\n        \
    \                                (also known as Carrier Detect)\n            \
    \  6               64        Ring Indicator\n              5               32\
    \        Data-Set-Ready Signal State\n              4               16       \
    \ Clear-To-Send Signal State\n              3                8        Delta Receive\
    \ Line Signal Detect\n              2                4        Trailing-edge Ring\
    \ Detector\n              1                2        Delta Data-Set-Ready\n   \
    \           0                1        Delta Clear-To-Send\n"
- title: 5. Flow Control
  contents:
  - "5. Flow Control\n   The client and/or access server can send these commands any\
    \ time and\n   multiple times throughout the Telnet session.\n     IAC SB COM-PORT-OPTION\
    \ FLOWCONTROL-SUSPEND IAC SE\n       The sender of this command is requesting\
    \ that the receiver\n       suspend transmission of both data and commands until\
    \ the\n       FLOWCONTROL-RESUME is transmitted by the sender.\n     IAC SB COM-PORT-OPTION\
    \ FLOWCONTROL-RESUME IAC SE\n       The sender of this command is requesting that\
    \ the receiver resume\n       transmission of both data and commands.\n      \
    \ Discussion: Established Telnet sessions are initially in a\n               \
    \    resume state between the client and the access server\n                 \
    \  and the access server and the client.  There is no\n                   need\
    \ to send the resume command during session\n                   initialization.\n\
    \       Discussion: Multiple concurrent suspend commands may be sent.\n      \
    \             Secondary suspend commands can be ignored.\n                   Transmission\
    \ will resume with the sending of a single\n                   resume command.\n\
    \       Discussion: The flow control option is designed to handle client\n   \
    \                to access server flow control for the Telnet session.\n     \
    \              This option has been added in deference to RFC 1372:\n        \
    \           Telnet Remote Flow Control Option [2].  RFC 1372 uses\n          \
    \         a simple character XON/XOFF technology to implement\n              \
    \     flow control.  This can lead to two problems.  First,\n                \
    \   the flow control characters may be valid data values.\n                  \
    \ Second, the flow control characters may be used for\n                   end\
    \ to end flow control (client application to remote\n                   dial up\
    \ service).\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   There are two security issues to discuss; authentication\
    \ and\n   resetting resources.\n   Authentication can follow either the Kerberos\
    \ authentication protocol\n   established in RFC 1411 [3] or the SPX authentication\
    \ protocol\n   established in RFC 1412 [4].\n   Once the Telnet session between\
    \ the client and the access server has\n   been terminated, the access server\
    \ should ensure the connection to\n   the remote service is disconnected and the\
    \ com port geometry (baud\n   rate, data size, stop bits, parity, and flow control)\
    \ is reset to a\n   factory or administrator defined configuration.  This ensures\
    \ the com\n   port is in a known state and ready to receive the next client\n\
    \   session.  This will make operations more predicable and avoid\n   problems\
    \ which might occur from starting a new session with random\n   com port configurations.\n"
- title: 7. Author's Address
  contents:
  - "7. Author's Address\n  Glen Clark, Software Architect\n  Cisco Systems, Inc.\n\
    \  170 West Tasman Drive\n  San Jose, CA  96134\n  USA\n  EMail:      glenc@cisco.com\n\
    \  WEB:        www.cisco.com\n"
- title: 8. Reference Section
  contents:
  - "8. Reference Section\n   [1]  Joe Campbell. C Programmer's Guide to Serial Communications,\n\
    \        Second Edition. Indianapolis: SAMS Publishing, 1993. 213-224.\n   [2]\
    \  Hedrick, C., and D. Borman, \"Telnet Remote Flow Control Option\",\n      \
    \  RFC 1372, Cray Research, Inc., October 1992.\n   [3]  Borman, D., \"Telnet\
    \ Authentication: Kerberos Version 4\",\n        RFC 1411, Cray Research, Inc.,\
    \ January 1993.\n   [4]  Alagappan, K., \"Telnet Authentication: SPX\",\n    \
    \    RFC 1412, Digital Equipment Corporation, January 1993.\n   [5]  D. E. Comer\
    \ and David Stevens.  Internetworking with TCP/IP,\n        Volume III.  Prentice\
    \ Hall, 1993.\n   [6]  Andrew Margolis. The FAX Modem Sourcebook.  John Wiley\
    \ & Sons.\n        1995.\n"
