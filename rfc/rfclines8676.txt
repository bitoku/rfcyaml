Abstract This document defines YANG modules for the configuration and operation of IPv4 in IPv6 softwire Border Relays and Customer Premises Equipment for the Lightweight 4over6, Mapping of Address and Port with Encapsulation (MAP E), and Mapping of Address and Port using Translation (MAP T) softwire mechanisms.
The IETF Softwire Working Group has developed several IPv4 in IPv6 softwire mechanisms to address various deployment contexts and constraints.
As a companion to the architectural specification documents, this document focuses on the provisioning of Address plus Port (A P) softwire functional elements: Border Routers (BRs) and Customer Edge (CE) (called "Customer Premises Equipment (CPE)" in [RFC7596]).
The softwire mechanisms covered in this document are Lightweight 4over6 (lw4o6)
[RFC7596], Mapping of Address and Port with Encapsulation (MAP E)
[RFC7597], and Mapping of Address and Port
This document focuses on A P mechanisms [RFC6346]; the reader can refer to [RFC8513] for a YANG module for Dual Stack Lite (DS Lite)
The reader should be familiar with the concepts and terms defined in [RFC7596], [RFC7597], [RFC7599], and the YANG data modeling language defined in [RFC7950].
The YANG modules in this document adopt the Network Management Datastore Architecture (NMDA) [RFC8342].
The meanings of the symbols used in tree diagrams are defined in [RFC8340].
The document uses the abbreviation 'BR' as a general term for softwire tunnel concentrators, including both MAP Border Routers [RFC7597] and Lightweight 4over6 lwAFTRs [RFC7596].
For brevity, "algorithm" is used to refer to the "mapping algorithm" defined in [RFC7597].
A network element may support one or multiple instances of a softwire mechanism; each of these instances (i.e., binding instances, MAP E instances, or MAP T instances) may have its own configuration and parameters.
The term 'algo instance' is used to denote both MAP E and MAP T instances.
Overview of the Modules 3.1.
The document defines the following two YANG modules for the configuration and monitoring of softwire functional elements: ietf softwire ce Provides configuration and monitoring for softwire CE element.
This module is defined as augments to the interface YANG module [RFC8343].
ietf softwire br Provides configuration and monitoring for softwire BR element.
In addition, the following module is defined: ietf softwire common Contains groups of common functions that are imported into the CE and BR modules.
This approach has been taken so that the various modules can be easily extended to support additional softwire mechanisms, if required.
Within the BR and CE modules, the YANG "feature" statement is used to distinguish which of the different softwire mechanism(s) is relevant for a specific element's configuration.
For each module, a choice statement 'ce type' is included for either 'binding' or 'algorithm'. '
Binding' is used for configuring Lightweight 4over6, whereas 'algorithm' is used for configuring MAP T or MAP E.
In the 'algo instances' container, a choice statement 'data plane' is included to specify MAP E (encapsulation) or MAP T (translation).
: Softwire Mechanism Choice Statement Enumeration NETCONF notifications are also included.
Earlier draft versions of this specification combined the    softwire mechanisms by their associated technologies rather    than their function in the architecture.
As the document was    revised, it became apparent that dividing the modules by their    role in the architecture (CE or BR) was a better approach as    this follows the intended function and existing implementation    approaches more closely.
The softwire modules only aim to provide configuration relevant for softwires.
A YANG module for routing management is described in [RFC8349].
IPv4 routing configuration, to add one or more IPv4 destination prefix(es) reachable via the configured softwire.
A YANG module for routing management is described in [RFC8349].
Stateful NAT44/NAPT management, to optionally specify a port set (Port Set Identifier (PSID)) along with its length.
A YANG module for NAT management is described in [RFC8512].
Stateless NAT46 management, which is required by softwire  translation based mechanisms (i.e., the assignment of a Network  Specific Prefix to use for IPv4/IPv6 translation).
A YANG module for NAT management is described in [RFC8512].
As YANG modules for the above functions are already defined in other documents, their functionality is not duplicated here and they should be referred to, as needed.
Appendix A.3 provides XML examples of how these modules can be used together.
The CE must already have minimal IPv6 configuration in place
so it is reachable by the NETCONF client to obtain softwire configuration.
If additional IPv6 specific configuration is necessary, the YANG modules defined in [RFC8344] and [RFC8349] may be used.
Softwire CE YANG Tree Diagram 4.1.
The CE module provides configuration and monitoring for all of the softwire mechanisms covered in this document (i.e., Lightweight 4over6, MAP E, and MAP T).
This module augments "ietf interfaces", defined in [RFC8343] with an entry for the softwire.
This entry can be referenced to configure IPv4 forwarding features for the element.
This entry is added only if tunnel type (Section 10) is set to 'aplusp'.
Figure 1 shows the tree structure of the softwire CE YANG module:
module: ietf softwire ce augment
:ipv6 address  :(algo) {map e or map t}?
yang:date and time  rw (data plane)?
ipv6 prefix    inet:ipv6 prefix  rw rule
if:statistics:  ro sent ipv4 packets?
zero based counter64  ro sent ipv4 bytes?
zero based counter64  ro sent ipv6 packets?
zero based counter64  ro sent ipv6 bytes?
zero based counter64  ro rcvd
zero based counter64  ro dropped ipv4 bytes?
zero based counter64  ro dropped ipv6 bytes?
ro dropped ipv4 fragment bytes?
zero based counter64  ro ipv6 fragments reassembled?
zero based counter64  ro ipv6 fragments bytes reassembled?
ro out icmpv4 error packets?
ro out icmpv4 error bytes?
zero based counter64  ro out icmpv6 error packets?
zero based counter64  ro out icmpv6 error bytes?
zero based counter64 notifications:  n softwire ce event {binding mode}?
ro ce binding ipv6 addr change    inet:
Softwire CE YANG Tree Diagram 4.2.
Softwire CE Tree Diagram Description Additional information related to the operation of a CE element is provided below:
softwire payload mtu: optionally used to set the IPv4 Maximum Transmission Unit (MTU) for the softwire.
Needed if the softwire implementation is unable to correctly calculate the correct IPv4 MTU size automatically.
softwire path mru: optionally used to set the maximum IPv6 softwire packet size that can be received, including the encapsulation/translation overhead.
Needed if the softwire implementation is unable to correctly calculate the correct IPv4 payload Maximum Receive Unit (MRU) size automatically
(see Section 3.2 of [RFC4213]).
ce type: provides a choice statement allowing the binding or algorithmic softwire mechanisms to be selected.
Further details relevant to binding softwire elements are as follows:
binding ipv6info: used to set the IPv6 binding prefix type to identify which IPv6 address to use as the tunnel source.
It can be 'ipv6 prefix' or 'ipv6 address'.
ipv6 addr: sets the IPv6 address of the remote BR.
Additional details relevant to some of the important algorithmic elements are provided below:
algo versioning: optionally used to associate a version number and/or timestamp to the algorithm.
This can be used for logging/data retention purposes [RFC7422].
The version number is selected to uniquely identify the algorithm configuration and a new value written whenever a change is made to the algorithm or a new algo  instance is created.
forwarding: specifies whether the rule can be used as a Forwarding Mapping Rule (FMR).
If not set, this rule is a Basic Mapping Rule (BMR) only and must not be used for forwarding.
Refer to Section 4.1 of [RFC7598].
ea len: used to set the length of the Embedded Address (EA), which is defined in the mapping rule for a MAP domain.
data plane: provides a choice statement for either encapsulation (MAP E) or translation (MAP T).
ipv6 addr: defines the IPv6 address of the BR.
This information is valid for MAP E. dmr ipv6 prefix: defines the Default Mapping Rule (DMR) IPv6 prefix of the BR.
This information is valid for MAP T. Additional information on the notification node is listed below: ce binding ipv6 addr change: if the CE's binding IPv6 address changes for any reason, the NETCONF client will be notified.
Softwire BR YANG Tree Diagram 5.1.
The BR YANG module provides configuration and monitoring for all of the softwire mechanisms covered in this document (i.e., Lightweight 4over6, MAP E, and MAP T).
Figure 2 provides the tree structure of this module:
:(algo) {map e or map t}?
yang:date and time  rw (data plane)?
ipv6 prefix    inet:ipv6 prefix  rw rule
ro traffic stat  ro discontinuity time
date and time  ro sent ipv4 packets?
zero based counter64  ro sent ipv4 bytes?
zero based counter64  ro sent ipv6 packets?
zero based counter64  ro sent ipv6 bytes?
zero based counter64  ro rcvd
zero based counter64  ro dropped ipv4 bytes?
zero based counter64  ro dropped ipv6 bytes?
ro dropped ipv4 fragment bytes?
zero based counter64  ro ipv6 fragments reassembled?
zero based counter64  ro ipv6 fragments bytes reassembled?
ro out icmpv4 error packets?
ro out icmpv4 error bytes?
zero based counter64  ro out icmpv6 error packets?
zero based counter64  ro out icmpv6 error bytes?
zero based counter64 notifications:  n
softwire binding instance event {binding mode}?
entry    leafref  n softwire algorithm instance event  {map e, map t}?
Softwire BR YANG Tree 5.2.
Softwire BR Tree Diagram Description
The descriptions for leaves that are common with the CE module are provided in Section 4.2.
Descriptions for additional elements are provided below: binding table versioning: optionally used to associate a version number and/or timestamp to the binding table.
This can be used for logging or data retention purposes [RFC7422].
The version number is selected to uniquely identify the binding table configuration and a new timestamp value written whenever a change is made to the contents of the binding table or a new binding table list is created.
binding entry: used to define the binding relationship between 3 tuples {lwB4's IPv6 address/prefix, the allocated IPv4 address, restricted port set}.
For detailed information, please refer to [RFC7596].
softwire num max: used to set the maximum number of softwire binding rules that can be created on the lw4o6 element simultaneously.
This parameter must not be set to zero because this is equivalent to disabling the BR instance.
active softwire num: holds the number of softwires currently provisioned on the BR element.
Additional information on some of the important notification nodes is listed below: invalid entry, added entry, modified entry: used to notify the NETCONF client that a specific binding entry or MAP rule has expired, been invalidated, added, or modified.
This module imports the modules defined in [RFC6991], [RFC8343], and [RFC7224].
It also imports the 'ietf softwire common' and 'iana  tunnel type' modules [RFC8675].
<CODE BEGINS> file "ietf softwire ce@2019 11 16.yang
" module ietf softwire ce { yang version 1.1; namespace "urn:ietf:params:xml:ns:yang:ietf softwire ce"; prefix softwire ce; import ietf inet types { prefix inet; reference "RFC 6991:
> Editor:  Mohamed Boucadair <mailto:mohamed.boucadair@orange.com
; description "This document defines a YANG module for the configuration and management of A P Softwire Customer Premises Equipment (CEs).
It covers Lightweight 4over6, MAP E, and MAP T mechanisms.
2019 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this YANG module is part of RFC 8676; see the RFC itself for full legal notices."; revision 2019 11 16 { description "Initial revision."; reference "RFC 8676: YANG Modules for IPv4 in IPv6 Address plus Port
Binding based softwire mechanisms are IPv4 over IPv6 tunneling transition mechanisms specifically intended for complete independence between the IPv6 subnet prefix (and IPv6 address) and IPv4 address, with or without IPv4 address sharing.
This is accomplished by maintaining state for each softwire (per subscriber state) in the central Border Relay (BR) and using a hub and spoke forwarding architecture.
In order to delegate the NAPT function and achieve IPv4 address sharing, port restricted IPv4 addresses needs to be allocated to CEs.
This feature indicates that the network element can function as one or more binding based softwire instances."
; reference "RFC 7596: Lightweight 4over6: An Extension to the Dual Stack Lite Architecture RFC 7597: Mapping of Address and Port with Encapsulation
MAP E allows for a reduction of the amount of centralized state using rules to express IPv4/IPv6 address mappings.
This introduces an algorithmic relationship between the IPv6 subnet and IPv4 address.
This feature indicates that the network element can function as one or more MAP E softwire instances."
It leverages a double stateless NAT64 based solution as well as the stateless algorithmic address and transport layer port mapping algorithm defined for MAP E.
This feature indicates that the network element can function as one or more MAP T softwire instances."
Binding Entry grouping binding entry { description "The binding BR (Border Relay) maintains an address binding table that contains the binding between the CE's IPv6 address, the allocated IPv4 address, and the restricted port set."; leaf binding ipv6info { type union { type inet:ipv6 address; type inet:
ipv6 prefix; } description "The IPv6 information for a binding entry.
When the IPv6 prefix type is used, the IPv6 source address of the CE is constructed according to the description in RFC 7596.
If the IPv6 address type is used, the CE can use any valid /128 address from a prefix assigned to the CE."
if:interface" { when "derived from(if:type, 'iana tunnel type:aplusp')
; case binding { if feature "binding mode"; description "CE binding configuration"; uses binding entry;
} case algo { if feature "map e or map t"; description "CE algorithm configuration"; container algo instances { description "Collection of MAP E/MAP T parameters"; list algo instance { key "name"; description "MAP forwarding rule instance for MAP E/MAP T"; leaf name { type string; mandatory true
; description "The name is used to uniquely identify an algorithm instance.
"; description "Softwire CE interface statistics."; uses softwire common:
This module imports typedefs from [RFC6991].
It also imports the 'ietf softwire common' module.
" module ietf softwire br { yang version 1.1; namespace "urn:ietf:params:xml:ns:
yang:ietf softwire br"; prefix softwire br; import ietf inet types { prefix inet; reference "RFC 6991:
> Editor:  Mohamed Boucadair <mailto:mohamed.boucadair@orange.com
; description "This document defines a YANG module for the configuration and management of A P Softwire Border Routers.
It covers Lightweight 4over6, MAP E, and MAP T mechanisms.
2019 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this YANG module is part of RFC 8676; see the RFC itself for full legal notices."; revision 2019 11 16 { description "Initial revision."; reference "RFC 8676: YANG Modules for IPv4 in IPv6 Address plus Port
In Lightweight 4over6, the default value is 0 for assigning one contiguous port range.
In MAP E/T, the default value is 6, which means the system ports (0 1023) are excluded by default and the assigned port ranges are distributed across the entire port space, depending on either psid len or the number of contiguous ports."
ipv6 prefix; } description "
The IPv6 information for a CE binding entry.
When the IPv6 prefix type is used, the IPv6 source address of the CE is constructed according to the description in RFC 7596; if the IPv6 address type is used, the CE can use any valid /128 address from a prefix assigned to the CE."
ipv4 address; description "The IPv4 address assigned to the binding CE, which is used as the IPv4 external address for binding CE local NAPT44."
Binding is used for configuring the Lightweight 4over6 mechanism.
Binding based softwire mechanisms are IPv4 over IPv6 tunneling transition mechanisms specifically intended for complete independence between the IPv6 subnet prefix (and IPv6 address) and IPv4 address, with or without IPv4 address sharing.
This is accomplished by maintaining state for each softwire (per subscriber state) in the central Border Relay (BR) and using a hub and spoke forwarding architecture.
In order to delegate the NAPT function and achieve IPv4 address sharing, port restricted IPv4 addresses needs to be allocated to CEs.
This feature indicates that the network element can function as one or more binding based softwire instances."
; reference "RFC 7596: Lightweight 4over6: An Extension to the Dual Stack Lite Architecture RFC 7597: Mapping of Address and Port with Encapsulation
MAP E allows for a reduction of the amount of centralized state using rules to express IPv4/IPv6 address mappings.
This introduces an algorithmic relationship between the IPv6 subnet and IPv4 address.
This feature indicates that the network element can function as one or more MAP E softwire instances."
It leverages a double stateless NAT64 based solution as well as the stateless algorithmic address and transport layer port mapping algorithm defined for MAP E.
This feature indicates that the network element can function as one or more MAP T softwire instances."
; description "The name for the binding BR.
It is used to uniquely distinguish a binding instance by its name."
A binding instance may be provided with binding entries that may change in time (e.g., increase the size of the port set).
When a party who is the victim of abuse presents an external IP address/port, the version of the binding table is important because, depending on the version, a distinct customer may be identified.
The timestamp is used as a key to find the appropriate binding table that was put into effect when an abuse occurred."
hairpinning { type boolean; default "true"; description "Enables/disables support for locally forwarding (hairpinning) traffic between two CEs"
; container icmpv4 errors { description "ICMPv4 error processing configuration"; leaf allow incoming icmpv4 { type boolean; default "true"; description "Enables the processing of incoming ICMPv4 packets."
; description "Enables the generation of ICMPv6 error messages if no matching binding table entry is found for a received packet."
This must be initialized when the BR instance is configured or rebooted.
; leaf dropped icmpv4 packets { type yang:
zero based counter64; description "ICMPv4 packets that are dropped as a result of the ICMP policy.
Typically, this can be any incoming ICMPv4 packets if ICMPv4 processing is disabled or incoming ICMPv4 packets that exceed the ICMPv4 rate limit threshold.
zero based counter64; description "ICMPv4 messages, in bytes, that are dropped as a result of the ICMP policy.
Typically, it can be any incoming ICMPv4 packets if ICMPv4 processing is disabled or incoming ICMPv4 packets that exceed the ICMPv4 rate limit threshold.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of 'discontinuity time'."
; } leaf hairpin ipv4 packets { type yang:zero based counter64; description "IPv4 packets locally routed between two CEs (hairpinned).
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of 'discontinuity time'.";
; description "The name is used to uniquely identify an algorithm instance.
; leaf discontinuity time { type yang:date and time; mandatory true; description "The time of the most recent occasion on which the BR instance suffered a discontinuity.
This must be reset to the current date and time when the BR instance is configured or rebooted."
; } uses softwire common:
The IPv6 address of that entry is the index.
Common Softwire Element Groups YANG Module
This module imports typedefs from [RFC6991].
The following YANG module contains definitions that are used by both the softwire CE and softwire BR YANG modules.
ietf softwire common@2019 11 16.yang"
common { yang version 1.1;
yang:ietf softwire common"; prefix softwire common; import ietf inet types { prefix inet; reference "RFC 6991:
> Editor:  Mohamed Boucadair <mailto:mohamed.boucadair@orange.com
; description "This document defines a YANG module defining types common to all A P modules.
2019 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this YANG module is part of RFC 8676; see the RFC itself for full legal notices."; revision 2019 11 16 { description "Initial revision."; reference "RFC 8676: YANG Modules for IPv4 in IPv6 Address plus Port
; } feature map e { description "MAP E is an IPv6 transition mechanism for transporting IPv4 packets across an IPv6 network using IP encapsulation.
MAP E allows for a reduction of the amount of centralized state using rules to express IPv4/IPv6 address mappings.
This introduces an algorithmic relationship between the IPv6 subnet and IPv4 address.
This feature indicates that the network element can function as one or more MAP E softwire instances."
It leverages a double stateless NAT64 based solution as well as the stateless algorithmic address and transport layer port mapping algorithm defined for MAP E.
This feature indicates that the network element can function as one or more MAP T softwire instances."
An algorithm instance may be provided with mapping rules that may change in time (for example, increase the size of the port set).
When a party who is the victim of abuse presents an external IP address/port, the version of the algorithm is important because depending on the version, a distinct customer may be identified.
The timestamp is used as a key to find the appropriate algorithm that was put into effect when an abuse occurred."
} } leaf ea len { type uint8; mandatory true
; description "Embedded Address (EA) bits are the IPv4 EA bits in the IPv6 address identifying an IPv4 prefix/address (or part thereof) or a shared IPv4 address (or part thereof) and a port set identifier.
zero based counter64; description "Number of decapsulated and forwarded IPv4 packets.
zero based counter64; description "Decapsulated/translated IPv4 traffic sent, in bytes.
zero based counter64; description "Number of encapsulated IPv6 packets sent.
zero based counter64; description "Encapsulated IPv6 traffic sent, in bytes.
zero based counter64; description "Number of IPv4 packets dropped at the Internet facing interface.
zero based counter64; description "IPv4 traffic dropped at the Internet facing interface, in bytes.
zero based counter64; description "Number of IPv4 in IPv6 packets dropped.
zero based counter64; description "IPv4 in IPv6 traffic dropped, in bytes.
zero based counter64; description "Number of fragmented IPv4 packets dropped.
zero based counter64; description "Fragmented IPv4 traffic dropped, in bytes.
zero based counter64; description "Number of IPv6 fragments successfully reassembled.
zero based counter64; description "IPv6 fragments successfully reassembled, in bytes.
zero based counter64; description "Internally generated ICMPv4 error packets.
zero based counter64; description "Internally generated ICMPv4 error messages, in bytes.
zero based counter64; description "Internally generated ICMPv6 error packets.
zero based counter64; description "Internally generated ICMPv6 error messages, in bytes.
The YANG modules defined in this document are designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040].
The lowest NETCONF layer is the secure transport layer, and the mandatory to implement secure transport is Secure Shell (SSH) [RFC6242].
The lowest RESTCONF layer is HTTPS, and the mandatory to implement secure transport is TLS [RFC8446].
The Network Configuration Access Control Model (NACM)
[RFC8341] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.
All data nodes defined in the YANG modules which can be created, modified, and deleted (i.e., config true, which is the default) are considered sensitive.
Write operations (e.g., edit config) to these data nodes without proper protection can have a negative effect on network operations.
Illegitimately intercepting users' traffic is an attack with severe implications on privacy.
Setting the MTU to a low value, which may increase the number of fragments ('softwire payload mtu').
Disabling hairpinning (i.e., setting 'enable hairpinning' to 'false') to prevent communications between CEs.
Setting 'softwire num max' to an arbitrary high value, which may be exploited by a misbehaving user to perform a DoS on the binding BR by mounting a massive number of softwires.
Setting 'icmpv4 rate' or 'icmpv6 rate' to a low value, which may lead to the deactivation of ICMP messages handling.
Instructing the BR to install entries, which, in turn, will induce a DDoS attack by means of the notifications generated by the BR.
This DDoS can be softened by defining a notification interval, but given that this interval parameter can be disabled or set to a low value by the misbehaving entity, the same problem will be observed.
Some of the readable data nodes in this YANG module may be considered sensitive or vulnerable in some network environments.
It is thus important to control
read access (e.g., via get, get config, or notification) to these data nodes.
Security considerations related to lw4o6, MAP T, and MAP E are discussed in [RFC7596],
Security considerations given in [RFC7950] are also applicable here.
IANA Considerations IANA has assigned the following new tunnel type under the tunnelType subregistry of the "ifType Definitions" registry maintained in the SMI Numbers registry [TUNNELTYPE IANA REGISTRY]:
[RFC6346] IANA has registered the following in the "ns" subregistry within the "IETF XML Registry" [RFC3688]:
ce Registrant Contact:  The IESG.
N/A; the requested URI is an XML namespace.
ietf softwire br Registrant Contact:  The IESG.
N/A; the requested URI is an XML namespace.
common Registrant Contact:  The IESG.
N/A; the requested URI is an XML namespace.
IANA has registered the following YANG modules in the "YANG Module Names" subregistry [RFC6020] within the "YANG Parameters" registry.
yang:ietf softwire ce prefix:  softwire ce reference:
RFC 8676 name:  ietf softwire common namespace:
yang:ietf softwire common prefix:  softwire common reference:  RFC 8676
The following sections provide examples of how the softwire YANG modules can be used for configuring softwire elements.
Configuration Example for a lw4o6 BR Binding Table
The entry has two functions: the IPv6 encapsulation of inbound IPv4 packets destined to the lwB4 and the validation of outbound IPv4 in  IPv6 packets received from the lwB4 for decapsulation.
Consider an example for the following lw4o6 binding table entry:
Address:  2001:db8::1 lwB4 Binding IPv4
db8:1::2 <br instances> <binding> <bind instance>
> <binding table> <binding entry> <
> <psid len>8</psid len> </port set> <
num max>1024</softwire num max> <softwire path mru>1540</softwire path mru>
<softwire payload mtu>1500</softwire payload mtu
lw4o6 Binding Table Configuration XML A.2.
Configuration Example for a MAP E BR A MAP E BR is configured with forward mapping rules for the CEs it is serving.
In this example (taken from [RFC7597], Appendix A, Example 2), the following parameters are required:
Rule IPv6 Prefix    Rule IPv4
EA bit bit length    IPv6 Address of MAP BR
The mapping rule has two functions: identifying the destination CE IPv6 address for encapsulating inbound IPv4 packets and the validation of outbound IPv4 in IPv6 packets received from the CE for de capsulation.
The transport type for the data plane also needs to be configured for encapsulation to enable MAP E and forwarding needs to be enabled.
Consider an example for the following MAP E Forwarding Mapping Rule:
Rule IPv4 Prefix:   192.0.2.0/24 Rule EA bit
db8:ffff::1 Figure 4 provides the example MAP E BR configuration xml.
<br instances> <algorithm> <algo instance> <name>myalgo instance</name
> <port set> <psid offset>6</psid offset> <psid len>8</psid len
> </port set> </algo instance> </algorithm
> Figure 4: MAP E FMR Configuration XML A.3.
This section provides XML examples for configuring a lw4o6 CE.
Examples for routing and NAT44 are also provided for convenience.
Consider an example for the following lw4o6 CE configuration:
Address:  2001:db8::1 lwB4 Binding IPv4
<br ipv6 addr xmlns "urn:ietf:params:xml:ns:
> 2001:db8::1 </binding ipv6info> </interface
In the example depicted in Figure 5, the interface name is defined for the softwire tunnel.
This name is then referenced by the routing configuration for the IPv4 route.
Figure 6 provides an example configuration for the CE's IPv4 routing using the YANG module described in [RFC8349].
ietf routing"> <control plane protocols> <control plane protocol>
ietf ipv4 unicas\ t routing"> <route> <destination prefix>0.0.0.0/0</destination prefix> <next hop
> </static routes> </control plane protocol> </control plane protocols> </routing> </config
lw4o6 CE Routing Configuration XML Figure 7 provides an example configuration for the CE's NAPT44 function using the YANG module described in [RFC8512].
> <external ip address pool> <pool id>1</pool
> <external ip pool>192.0.2.1</external ip pool> </external ip address pool> <port set restrict>
<port set algo> <psid offset>6</psid offset> <psid len>8</psid len
> </port set restrict> <notify pool usage> <pool id>1</pool
> <high threshold>80</high threshold> </notify pool usage> </policy>
<mapping limits> <limit per protocol
> <limit>8</limit> </limit per protocol> <limit per protocol> <protocol
> <limit per protocol> <protocol id>17</protocol
> <external src address> 192.0.2.1/32 </external
src address> <internal src address> 192.168.1.0/24 </internal
src address> <transport protocol>6</transport protocol>
<external src address> 192.0.2.1/32 </external
src address> <internal src address> 192.168.1.0/24 </internal
src address> <transport protocol>17</transport protocol
> </mapping entry> <mapping entry
<external src address> 192.0.2.1/32 </external
src address> <internal src address> 192.168.1.0/24 </internal
> </mapping entry> </mapping table
lw4o6 NAT Configuration XML Contributors
The following individuals are co authors:
Yong Cui Tsinghua University China Phone:  86
Qi Sun Tsinghua University China Phone:  86 10
sunqi.ietf@gmail.com Linhui Sun Tsinghua University China Phone:  86 10
Sladjana Zechlin Deutsche Telekom AG Germany Email:
Inc. United States of America Email:
Rajiva@cisco.com Hao Wang Tsinghua University China Phone:  86 10
