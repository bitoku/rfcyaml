- title: __initial_text__
  contents:
  - '   Transparent Interconnection of Lots of Links (TRILL) Use of IS-IS

    '
- title: Abstract
  contents:
  - "Abstract\n   The IETF Transparent Interconnection of Lots of Links (TRILL)\n\
    \   protocol provides optimal pair-wise data frame forwarding without\n   configuration\
    \ in multi-hop networks with arbitrary topology and link\n   technology; it also\
    \ provides support for multipathing of both unicast\n   and multicast traffic.\
    \  This document specifies the data formats and\n   code points for the IS-IS\
    \ extensions to support TRILL.  These data\n   formats and code points may also\
    \ be used by technologies other than\n   TRILL.  This document obsoletes RFC 6326.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7176.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................4\n  \
    \ 2. TLV and Sub-TLV Extensions to IS-IS for TRILL ...................4\n    \
    \  2.1. Group Address TLV ..........................................5\n      \
    \     2.1.1. Group MAC Address Sub-TLV ...........................5\n        \
    \   2.1.2. Group IPv4 Address Sub-TLV ..........................7\n          \
    \ 2.1.3. Group IPv6 Address Sub-TLV ..........................8\n           2.1.4.\
    \ Group Labeled MAC Address Sub-TLV ...................9\n           2.1.5. Group\
    \ Labeled IPv4 Address Sub-TLV .................10\n           2.1.6. Group Labeled\
    \ IPv6 Address Sub-TLV .................11\n      2.2. Multi-Topology-Aware Port\
    \ Capability Sub-TLVs .............12\n           2.2.1. Special VLANs and Flags\
    \ Sub-TLV ....................12\n           2.2.2. Enabled-VLANs Sub-TLV ..............................13\n\
    \           2.2.3. Appointed Forwarders Sub-TLV .......................14\n  \
    \         2.2.4. Port TRILL Version Sub-TLV .........................15\n    \
    \       2.2.5. VLANs Appointed Sub-TLV ............................17\n      2.3.\
    \ Sub-TLVs of the Router Capability and MT-Capability TLVs ..17\n           2.3.1.\
    \ TRILL Version Sub-TLV ..............................18\n           2.3.2. Nickname\
    \ Sub-TLV ...................................19\n           2.3.3. Trees Sub-TLV\
    \ ......................................20\n           2.3.4. Tree Identifiers\
    \ Sub-TLV ...........................20\n           2.3.5. Trees Used Identifiers\
    \ Sub-TLV .....................21\n           2.3.6. Interested VLANs and Spanning\
    \ Tree Roots Sub-TLV ...22\n           2.3.7. VLAN Group Sub-TLV .................................24\n\
    \           2.3.8. Interested Labels and Spanning Tree Roots Sub-TLV ..25\n  \
    \         2.3.9. RBridge Channel Protocols Sub-TLV ..................27\n    \
    \       2.3.10. Affinity Sub-TLV ..................................29\n      \
    \     2.3.11. Label Group Sub-TLV ...............................30\n      2.4.\
    \ MTU Sub-TLV for Extended Reachability and MT-ISN TLVs .....31\n      2.5. TRILL\
    \ Neighbor TLV ........................................31\n   3. MTU PDUs .......................................................33\n\
    \   4. Use of Existing PDUs and TLVs ..................................35\n  \
    \    4.1. TRILL IIH PDUs ............................................35\n    \
    \  4.2. Area Address ..............................................35\n      4.3.\
    \ Protocols Supported .......................................35\n      4.4. Link\
    \ State PDUs (LSPs) ....................................35\n      4.5. Originating\
    \ LSP Buffer Size ...............................36\n   5. IANA Considerations\
    \ ............................................36\n      5.1. TLVs ......................................................36\n\
    \      5.2. Sub-TLVs ..................................................36\n  \
    \    5.3. PDUs ......................................................38\n    \
    \  5.4. Reserved and Capability Bits ..............................38\n      5.5.\
    \ TRILL Neighbor Record Flags ...............................39\n   6. Security\
    \ Considerations ........................................39\n   7. Changes from\
    \ RFC 6326 ..........................................39\n   8. References .....................................................41\n\
    \      8.1. Normative References ......................................41\n  \
    \    8.2. Informative References ....................................43\n   9.\
    \ Acknowledgements ...............................................44\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF Transparent Interconnection of Lots of Links (TRILL)\n\
    \   protocol [RFC6325] [RFC7177] provides transparent forwarding in\n   multi-hop\
    \ networks with arbitrary topology and link technologies\n   using a header with\
    \ a hop count and link-state routing.  TRILL\n   provides optimal pair-wise forwarding\
    \ without configuration, safe\n   forwarding even during periods of temporary\
    \ loops, and support for\n   multipathing of both unicast and multicast traffic.\
    \  Intermediate\n   Systems (ISs) implementing TRILL are called Routing Bridges\n\
    \   (RBridges) or TRILL Switches.\n   This document, in conjunction with [RFC6165],\
    \ specifies the data\n   formats and code points for the IS-IS [ISO-10589] [RFC1195]\n\
    \   extensions to support TRILL.  These data formats and code points may\n   also\
    \ be used by technologies other than TRILL.\n   This document obsoletes [RFC6326],\
    \ which generally corresponded to\n   the base TRILL protocol [RFC6325].  There\
    \ has been substantial\n   development of TRILL since the publication of those\
    \ documents.  The\n   main changes from [RFC6326] are summarized below, and a\
    \ full list is\n   given in Section 7.\n   1.  Added multicast group announcements\
    \ by IPv4 and IPv6 address.\n   2.  Added facilities for announcing capabilities\
    \ supported.\n   3.  Added a tree affinity sub-TLV whereby ISs can request\n \
    \      distribution tree association.\n   4.  Added multi-topology support.\n\
    \   5.  Added control-plane support for TRILL Data frame fine-grained\n      \
    \ labels.  This support is independent of the data-plane\n       representation.\n\
    \   6.  Fixed the verified erratum [Err2869] in [RFC6326].\n   Changes herein\
    \ to TLVs and sub-TLVs specified in [RFC6326] are\n   backward compatible.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The terminology and acronyms defined\
    \ in [RFC6325] are used herein\n   with the same meaning.\n   Additional acronyms\
    \ and phrases used in this document are:\n      BVL - Bit Vector Length\n    \
    \  BVO - Bit Vector Offset\n      IIH - IS-IS Hello\n      IS - Intermediate System.\
    \  For this document, all relevant\n      intermediate systems are RBridges [RFC6325].\n\
    \      MAC - Media Access Control\n      MT - Multi-Topology\n      NLPID - Network\
    \ Layer Protocol Identifier\n      SNPA - Subnetwork Point of Attachment (MAC\
    \ Address)\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",\
    \ \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  TLV and Sub-TLV Extensions to IS-IS for TRILL
  contents:
  - "2.  TLV and Sub-TLV Extensions to IS-IS for TRILL\n   This section, in conjunction\
    \ with [RFC6165], specifies the data\n   formats and code points for the TLVs\
    \ and sub-TLVs for IS-IS to\n   support the IETF TRILL protocol.  Information\
    \ as to the number of\n   occurrences allowed, such as for a TLV in a PDU or set\
    \ of PDUs or for\n   a sub-TLV in a TLV, is summarized in Section 5.\n"
- title: 2.1.  Group Address TLV
  contents:
  - "2.1.  Group Address TLV\n   The Group Address (GADDR) TLV, IS-IS TLV type 142,\
    \ is carried in an\n   LSP PDU and carries sub-TLVs that in turn advertise multicast\
    \ group\n   listeners.  The sub-TLVs that advertise listeners are specified\n\
    \   below.  The sub-TLVs under GADDR constitute a new series of sub-TLV\n   types\
    \ (see Section 5.2).\n   GADDR has the following format:\n   +-+-+-+-+-+-+-+-+\n\
    \   |Type=GADDR-TLV |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |  \
    \ Length      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n\
    \   |      sub-TLVs...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n   o  Type: TLV type,\
    \ set to GADDR-TLV 142.\n   o  Length: variable depending on the sub-TLVs carried.\n\
    \   o  sub-TLVs: The Group Address TLV value consists of sub-TLVs\n      formatted\
    \ as described in [RFC5305].\n"
- title: 2.1.1.  Group MAC Address Sub-TLV
  contents:
  - "2.1.1.  Group MAC Address Sub-TLV\n   The Group MAC Address (GMAC-ADDR) sub-TLV\
    \ is sub-TLV type number 1\n   within the GADDR TLV.  In TRILL, it is used to\
    \ advertise multicast\n   listeners by MAC address as specified in Section 4.5.5\
    \ of [RFC6325].\n   It has the following format:\n   +-+-+-+-+-+-+-+-+\n   |Type=GMAC-ADDR\
    \ |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length      |    \
    \              (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  RESV |  \
    \   Topology-ID       |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \  RESV |     VLAN ID           |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Num Group Recs |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   GROUP RECORDS (1)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   GROUP RECORDS (2)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   .................                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   GROUP RECORDS (N)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   where each group record is of the following form with k=6:\n   +-+-+-+-+-+-+-+-+\n\
    \   | Num of Sources|                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Group Address         (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Source 1 Address      (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Source 2 Address      (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    .....                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Source M Address      (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: GADDR sub-TLV type, set to 1 (GMAC-ADDR).\n   o  Length: 5 + m +\
    \ k*n = 5 + m + 6*n, where m is the number of group\n      records and n is the\
    \ sum of the number of group and source\n      addresses.\n   o  RESV: Reserved.\
    \  4-bit fields that MUST be sent as zero and\n      ignored on receipt.\n   o\
    \  Topology-ID: This field carries a topology ID [RFC5120] or zero if\n      topologies\
    \ are not in use.\n   o  VLAN ID: This carries the 12-bit VLAN identifier for\
    \ all\n      subsequent MAC addresses in this sub-TLV, or the value zero if no\n\
    \      VLAN is specified.\n   o  Num Group Recs: A 1-byte unsigned integer that\
    \ is the number of\n      group records in this sub-TLV.\n   o  GROUP RECORDS:\
    \ Each group record carries the number of sources.\n      If this field is zero,\
    \ it indicates a listener for (*,G), that is,\n      a listener not restricted\
    \ by source.  It then has a 6-byte\n      (48-bit) multicast MAC address followed\
    \ by 6-byte source MAC\n      addresses.  If the sources do not fit in a single\
    \ sub-TLV, the\n      same group address may be repeated with different source\
    \ addresses\n      in another sub-TLV of another instance of the Group Address\
    \ TLV.\n   The GMAC-ADDR sub-TLV is carried only within a GADDR TLV.\n"
- title: 2.1.2.  Group IPv4 Address Sub-TLV
  contents:
  - "2.1.2.  Group IPv4 Address Sub-TLV\n   The Group IPv4 Address (GIP-ADDR) sub-TLV\
    \ is IS-IS sub-TLV type 2\n   within the GADDR TLV.  It has the same format as\
    \ the Group MAC\n   Address sub-TLV described in Section 2.1.1 except that k=4.\
    \  The\n   fields are as follows:\n   o  Type: sub-TLV type, set to 2 (GIP-ADDR).\n\
    \   o  Length: 5 + m + k*n = 5 + m + 4*n, where m is the number of group\n   \
    \   records and n is the sum of the number of group and source\n      addresses.\n\
    \   o  Topology-ID: This field carries a topology ID [RFC5120] or zero if\n  \
    \    topologies are not in use.\n   o  RESV: Must be sent as zero on transmission\
    \ and is ignored on\n      receipt.\n   o  VLAN ID: This carries a 12-bit VLAN\
    \ identifier that is valid for\n      all subsequent addresses in this sub-TLV,\
    \ or the value zero if no\n      VLAN is specified.\n   o  Num Group Recs: A 1-byte\
    \ unsigned integer that is the number of\n      group records in this sub-TLV.\n\
    \   o  GROUP RECORDS: Each group record carries the number of sources.\n     \
    \ If this field is zero, it indicates a listener for (*,G), that is,\n      a\
    \ listener not restricted by source.  It then has a 4-byte\n      (32-bit) IPv4\
    \ Group Address followed by 4-byte source IPv4\n      addresses.  If the number\
    \ of sources do not fit in a single sub-\n      TLV, it is permitted to have the\
    \ same group address repeated with\n      different source addresses in another\
    \ sub-TLV of another instance\n      of the Group Address TLV.\n   The GIP-ADDR\
    \ sub-TLV is carried only within a GADDR TLV.\n"
- title: 2.1.3.  Group IPv6 Address Sub-TLV
  contents:
  - "2.1.3.  Group IPv6 Address Sub-TLV\n   The Group IPv6 Address (GIPV6-ADDR) sub-TLV\
    \ is IS-IS sub-TLV type 3\n   within the GADDR TLV.  It has the same format as\
    \ the Group MAC\n   Address sub-TLV described in Section 2.1.1 except that k=16.\
    \  The\n   fields are as follows:\n   o  Type: sub-TLV type, set to 3 (GIPV6-ADDR).\n\
    \   o  Length: 5 + m + k*n = 5 + m + 16*n, where m is the number of group\n  \
    \    records and n is the sum of the number of group and source\n      addresses.\n\
    \   o  Topology-Id: This field carries a topology ID [RFC5120] or zero if\n  \
    \    topologies are not in use.\n   o  RESV: Must be sent as zero on transmission\
    \ and is ignored on\n      receipt.\n   o  VLAN ID: This carries a 12-bit VLAN\
    \ identifier that is valid for\n      all subsequent addresses in this sub-TLV,\
    \ or the value zero if no\n      VLAN is specified.\n   o  Num Group Recs: A 1-byte\
    \ unsigned integer that is the number of\n      group records in this sub-TLV.\n\
    \   o  GROUP RECORDS: Each group record carries the number of sources.\n     \
    \ If this field is zero, it indicates a listener for (*,G), that is,\n      a\
    \ listener not restricted by source.  It then has a 16-byte\n      (128-bit) IPv6\
    \ Group Address followed by 16-byte source IPv6\n      addresses.  If the number\
    \ of sources do not fit in a single sub-\n      TLV, it is permitted to have the\
    \ same group address repeated with\n      different source addresses in another\
    \ sub-TLV of another instance\n      of the Group Address TLV.\n   The GIPV6-ADDR\
    \ sub-TLV is carried only within a GADDR TLV.\n"
- title: 2.1.4.  Group Labeled MAC Address Sub-TLV
  contents:
  - "2.1.4.  Group Labeled MAC Address Sub-TLV\n   The GMAC-ADDR sub-TLV of the Group\
    \ Address (GADDR) TLV specified in\n   Section 2.1.1 provides for a VLAN ID. \
    \ The Group Labeled MAC Address\n   sub-TLV, below, extends this to a fine-grained\
    \ label.\n   +-+-+-+-+-+-+-+-+\n   |Type=GLMAC-ADDR|                  (1 byte)\n\
    \   +-+-+-+-+-+-+-+-+\n   |   Length      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  RESV |     Topology-ID       |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Fine-Grained Label                     | (3 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Num Group Recs |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   GROUP RECORDS (1)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   GROUP RECORDS (2)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   .................                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   GROUP RECORDS (N)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   where each group record is of the following form with k=6:\n   +-+-+-+-+-+-+-+-+\n\
    \   | Num of Sources|                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Group Address         (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Source 1 Address      (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Source 2 Address      (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    .....                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Source M Address      (k bytes)             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: GADDR sub-TLV type, set to 4 (GLMAC-ADDR).\n   o  Length: 6 + m +\
    \ k*n = 6 + m + 6*n, where m is the number of group\n      records and n is the\
    \ sum of the number of group and source\n      addresses.\n   o  RESV: Reserved.\
    \  4-bit field that MUST be sent as zero and ignored\n      on receipt.\n   o\
    \  Topology-ID: This field carries a topology ID [RFC5120] or zero if\n      topologies\
    \ are not in use.\n   o  Label: This carries the fine-grained label [RFC7172]\
    \ identifier\n      for all subsequent MAC addresses in this sub-TLV, or the value\n\
    \      zero if no label is specified.\n   o  Num Group Recs: A 1-byte unsigned\
    \ integer that is the number of\n      group records in this sub-TLV.\n   o  GROUP\
    \ RECORDS: Each group record carries the number of sources.\n      If this field\
    \ is zero, it indicates a listener for (*,G), that is,\n      a listener not restricted\
    \ by source.  It then has a 6-byte\n      (48-bit) multicast address followed\
    \ by 6-byte source MAC\n      addresses.  If the sources do not fit in a single\
    \ sub-TLV, the\n      same group address may be repeated with different source\
    \ addresses\n      in another sub-TLV of another instance of the Group Address\
    \ TLV.\n   The GLMAC-ADDR sub-TLV is carried only within a GADDR TLV.\n"
- title: 2.1.5.  Group Labeled IPv4 Address Sub-TLV
  contents:
  - "2.1.5.  Group Labeled IPv4 Address Sub-TLV\n   The Group Labeled IPv4 Address\
    \ (GLIP-ADDR) sub-TLV is IS-IS sub-TLV\n   type 5 within the GADDR TLV.  It has\
    \ the same format as the Group\n   Labeled MAC Address sub-TLV described in Section\
    \ 2.1.4 except that\n   k=4.  The fields are as follows:\n   o  Type: sub-TLV\
    \ type, set to 5 (GLIP-ADDR).\n   o  Length: 6 + m + k*n = 6 + m + 4*n, where\
    \ m is the number of group\n      records and n is the sum of the number of group\
    \ and source\n      addresses.\n   o  Topology-ID: This field carries a topology\
    \ ID [RFC5120] or zero if\n      topologies are not in use.\n   o  RESV: Must\
    \ be sent as zero on transmission and is ignored on\n      receipt.\n   o  Label:\
    \ This carries the fine-grained label [RFC7172] identifier\n      for all subsequent\
    \ IPv4 addresses in this sub-TLV, or the value\n      zero if no label is specified.\n\
    \   o  Num Group Recs: A 1-byte unsigned integer that is the number of\n     \
    \ group records in this sub-TLV.\n   o  GROUP RECORDS: Each group record carries\
    \ the number of sources.\n      If this field is zero, it indicates a listener\
    \ for (*,G), that is,\n      a listener not restricted by source.  It then has\
    \ a 4-byte\n      (32-bit) IPv4 Group Address followed by 4-byte source IPv4\n\
    \      addresses.  If the number of sources do not fit in a single sub-\n    \
    \  TLV, it is permitted to have the same group address repeated with\n      different\
    \ source addresses in another sub-TLV of another instance\n      of the Group\
    \ Address TLV.\n   The GLIP-ADDR sub-TLV is carried only within a GADDR TLV.\n"
- title: 2.1.6.  Group Labeled IPv6 Address Sub-TLV
  contents:
  - "2.1.6.  Group Labeled IPv6 Address Sub-TLV\n   The Group Labeled IPv6 Address\
    \ (GLIPV6-ADDR) sub-TLV is IS-IS sub-TLV\n   type 6 within the GADDR TLV.  It\
    \ has the same format as the Group\n   Labeled MAC Address sub-TLV described in\
    \ Section 2.1.4 except that\n   k=16.  The fields are as follows:\n   o  Type:\
    \ sub-TLV type, set to 6 (GLIPV6-ADDR).\n   o  Length: 6 + m + k*n = 6 + m + 16*n,\
    \ where m is the number of group\n      records and n is the sum of the number\
    \ of group and source\n      addresses.\n   o  Topology-Id: This field carries\
    \ a topology ID [RFC5120] or zero if\n      topologies are not in use.\n   o \
    \ RESV: Must be sent as zero on transmission and is ignored on\n      receipt.\n\
    \   o  Label: This carries the fine-grained label [RFC7172] identifier\n     \
    \ for all subsequent IPv6 addresses in this sub-TLV, or the value\n      zero\
    \ if no label is specified.\n   o  Num Group Recs: A 1-byte unsigned integer that\
    \ is the number of\n      group records in this sub-TLV.\n   o  GROUP RECORDS:\
    \ Each group record carries the number of sources.\n      If this field is zero,\
    \ it indicates a listener for (*,G), that is,\n      a listener not restricted\
    \ by source.  It then has a 16-byte\n      (128-bit) IPv6 Group Address followed\
    \ by 16-byte source IPv6\n      addresses.  If the number of sources do not fit\
    \ in a single sub-\n      TLV, it is permitted to have the same group address\
    \ repeated with\n      different source addresses in another sub-TLV of another\
    \ instance\n      of the Group Address TLV.\n   The GLIPV6-ADDR sub-TLV is carried\
    \ only within a GADDR TLV.\n"
- title: 2.2.  Multi-Topology-Aware Port Capability Sub-TLVs
  contents:
  - "2.2.  Multi-Topology-Aware Port Capability Sub-TLVs\n   TRILL makes use of the\
    \ Multi-Topology-Aware Port Capability TLV (MT-\n   Port-Cap-TLV) as specified\
    \ in [RFC6165].  The following subsections\n   specify the sub-TLVs transported\
    \ by the MT-Port-Cap-TLV for TRILL.\n"
- title: 2.2.1.  Special VLANs and Flags Sub-TLV
  contents:
  - "2.2.1.  Special VLANs and Flags Sub-TLV\n   In TRILL, a Special VLANs and Flags\
    \ (VLAN-FLAGS) sub-TLV is carried\n   in every IIH PDU.  It has the following\
    \ format:\n   +--+--+--+--+--+--+--+--+\n   |    Type               |        \
    \                 (1 byte)\n   +--+--+--+--+--+--+--+--+\n   |    Length     \
    \        |                         (1 byte)\n   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   |    Port ID                                    | (2 bytes)\n   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   |    Sender Nickname                            | (2 bytes)\n   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   |AF|AC|VM|BY|     Outer.VLAN                    | (2 bytes)\n   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   |TR|R |R |R |     Designated-VLAN               | (2 bytes)\n   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   o  Type: sub-TLV type, set to MT-Port-Cap-TLV VLAN-FLAGS sub-TLV 1.\n   o\
    \  Length: 8.\n   o  Port ID: An ID for the port on which the enclosing TRILL\
    \ IIH PDU\n      is being sent as specified in [RFC6325], Section 4.4.2.\n   o\
    \  Sender Nickname: If the sending IS is holding any nicknames as\n      discussed\
    \ in [RFC6325], Section 3.7, one MUST be included here.\n      Otherwise, the\
    \ field is set to zero.  This field is to support\n      intelligent end stations\
    \ that determine the egress IS (RBridge)\n      for unicast data through a directory\
    \ service or the like and that\n      need a nickname for their first hop to insert\
    \ as the ingress\n      nickname to correctly format a TRILL Data frame (see [RFC6325],\n\
    \      Section 4.6.2, point 8).  It is also referenced in connection with\n  \
    \    the VLANs Appointed Sub-TLV (see Section 2.2.5) and can be used as\n    \
    \  the egress on one-hop RBridge Channel messages [RFC7178], for\n      example,\
    \ those use for BFD over TRILL [RFC7175].\n   o  Outer.VLAN: A copy of the 12-bit\
    \ outer VLAN ID of the TRILL IIH\n      frame containing this sub-TLV, as specified\
    \ in [RFC6325], Section\n      4.4.5.\n   o  Designated-VLAN: The 12-bit ID of\
    \ the Designated VLAN for the\n      link, as specified in [RFC6325], Section\
    \ 4.2.4.2.\n   o  AF, AC, VM, BY, and TR: These flag bits have the following\n\
    \      meanings when set to one, as specified in the listed section of\n     \
    \ [RFC6325]:\n           RFC 6325\n      Bit  Section   Meaning if bit is one\n\
    \      --------------------------------------\n      AF   4.4.2     Originating\
    \ IS believes it is Appointed\n                     Forwarder for the VLAN and\
    \ port on which the\n                     containing IIH PDU was sent.\n     \
    \ AC   4.9.1     Originating port configured as an access port\n             \
    \        (TRILL traffic disabled).\n      VM   4.4.5     VLAN mapping detected\
    \ on this link.\n      BY   4.4.2     Bypass pseudonode.\n      TR   4.9.1   \
    \  Originating port configured as a trunk port\n                     (end-station\
    \ service disabled).\n   o  R: Reserved bit.  MUST be sent as zero and ignored\
    \ on receipt.\n"
- title: 2.2.2.  Enabled-VLANs Sub-TLV
  contents:
  - "2.2.2.  Enabled-VLANs Sub-TLV\n   The optional Enabled-VLANs sub-TLV specifies\
    \ the VLANs enabled at the\n   port of the originating IS on which the containing\
    \ Hello was sent, as\n   specified in [RFC6325], Section 4.4.2.  It has the following\
    \ format:\n   +-+-+-+-+-+-+-+-+\n   |     Type      |                  (1 byte)\n\
    \   +-+-+-+-+-+-+-+-+\n   |   Length      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | RESV  |  Start VLAN ID        |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | VLAN bit-map....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   o  Type: sub-TLV\
    \ type, set to MT-Port-Cap-TLV Enabled-VLANs sub-TLV\n      2.\n   o  Length:\
    \ Variable, minimum 3.\n   o  RESV: 4 reserved bits that MUST be sent as zero\
    \ and ignored on\n      receipt.\n   o  Start VLAN ID: The 12-bit VLAN ID that\
    \ is represented by the high-\n      order bit of the first byte of the VLAN bit-map.\n\
    \   o  VLAN bit-map: The highest-order bit indicates the VLAN equal to\n     \
    \ the start VLAN ID, the next highest bit indicates the VLAN equal\n      to start\
    \ VLAN ID + 1, continuing to the end of the VLAN bit-map\n      field.\n   If\
    \ this sub-TLV occurs more than once in a Hello, the set of enabled\n   VLANs\
    \ is the union of the sets of VLANs indicated by each of the\n   Enabled-VLAN\
    \ sub-TLVs in the Hello.\n"
- title: 2.2.3.  Appointed Forwarders Sub-TLV
  contents:
  - "2.2.3.  Appointed Forwarders Sub-TLV\n   The Designated RBridge (DRB) on a link\
    \ uses the Appointed Forwarders\n   sub-TLV to inform other ISs on the link that\
    \ they are the designated\n   VLAN-x forwarder for one or more ranges of VLAN\
    \ IDs as specified in\n   [RFC6439].  It has the following format:\n   +-+-+-+-+-+-+-+-+\n\
    \   |     Type      |                          (1 byte)\n   +-+-+-+-+-+-+-+-+\n\
    \   |   Length      |                          (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Appointment Information (1)         |  (6 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Appointment Information (2)         |  (6 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   .................                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Appointment Information (N)         |  (6 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   where each appointment is of the form:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Appointee Nickname              |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | RESV  |        Start.VLAN             |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | RESV  |        End.VLAN               |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: sub-TLV type, set to MT-Port-Cap-TLV AppointedFwrdrs sub-TLV\n  \
    \    3.\n   o  Length: 6*n bytes, where there are n appointments.\n   o  Appointee\
    \ Nickname: The nickname of the IS being appointed a\n      forwarder.\n   o \
    \ RESV: 4 bits that MUST be sent as zero and ignored on receipt.\n   o  Start.VLAN,\
    \ End.VLAN: This VLAN ID range is inclusive.  Setting\n      both Start.VLAN and\
    \ VLAN.end to the same value indicates a range\n      of one VLAN ID.  If Start.VLAN\
    \ is not equal to VLAN.end and\n      Start.VLAN is 0x000, the sub-TLV is interpreted\
    \ as if Start.VLAN\n      was 0x001.  If Start.VLAN is not equal to VLAN.end and\
    \ VLAN.end is\n      0xFFF, the sub-TLV is interpreted as if VLAN.end was 0xFFE.\
    \  If\n      VLAN.end is less than Start.VLAN, the sub-TLV is ignored.  If both\n\
    \      Start.VLAN and VLAN.end are 0x000 or both are 0xFFF, the sub-TLV\n    \
    \  is ignored.  The values 0x000 or 0xFFF are not valid VLAN IDs, and\n      a\
    \ port cannot be enabled for them.\n   An IS's nickname may occur as Appointed\
    \ Forwarder for multiple VLAN\n   ranges by occurrences of this sub-TLV within\
    \ the same or different MT\n   Port Capability TLVs within an IIH PDU.  See [RFC6439].\n"
- title: 2.2.4.  Port TRILL Version Sub-TLV
  contents:
  - "2.2.4.  Port TRILL Version Sub-TLV\n   The Port TRILL Version (PORT-TRILL-VER)\
    \ sub-TLV indicates the maximum\n   version of the TRILL standard supported and\
    \ the support of optional\n   hop-by-hop capabilities.  By implication, lower\
    \ versions are also\n   supported.  If this sub-TLV is missing from an IIH, it\
    \ is assumed\n   that the originating IS only supports the base version (version\
    \ zero)\n   of the protocol [RFC6325] and supports no optional capabilities\n\
    \   indicated by this sub-TLV.\n   +-+-+-+-+-+-+-+-+\n   | Type          |   \
    \           (1 byte)\n   +-+-+-+-+-+-+-+-+\n   | Length        |             \
    \ (1 byte)\n   +-+-+-+-+-+-+-+-+\n   | Max-version   |              (1 byte)\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n   | Capabilities and Header\
    \ Flags Supported |  (4 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+\n\
    \    0                   1                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7   0 1\n   o  Type: MT-Port-Cap-TLV sub-TLV type, set to 7 (PORT-TRILL-VER).\n\
    \   o  Length: 5.\n   o  Max-version: A one-byte unsigned integer set to the maximum\n\
    \      version supported.\n   o  Capabilities and Header Flags Supported: A bit\
    \ vector of 32 bits\n      numbered 0 through 31 in network order.  Bits 3 through\
    \ 13\n      indicate that the corresponding TRILL Header hop-by-hop extended\n\
    \      flags [RFC7179] are supported.  Bits 0 through 2 and 14 to 31 are\n   \
    \   reserved to indicate support of optional capabilities.  A one bit\n      indicates\
    \ that the flag or capability is supported by the sending\n      IS.  Bits in\
    \ this field MUST be set to zero except as permitted\n      for a capability being\
    \ advertised or if a hop-by-hop extended\n      header flag is supported.\n  \
    \ This sub-TLV, if present, MUST occur in an MT-Port-Cap-TLV in a TRILL\n   IIH.\
    \  If there is more than one occurrence, the minimum of the\n   supported versions\
    \ is assumed to be correct and a capability or\n   header flag is assumed to be\
    \ supported only if indicated by all\n   occurrences.  The flags and capabilities\
    \ for which support can be\n   indicated in this sub-TLV are disjoint from those\
    \ in the TRILL-VER\n   sub-TLV (Section 2.3.1) so they cannot conflict.  The flags\
    \ and\n   capabilities indicated in this sub-TLV relate to hop-by-hop\n   processing\
    \ that can differ between the ports of an IS (RBridge) and\n   thus must be advertised\
    \ in IIHs.  For example, a capability requiring\n   cryptographic hardware assist\
    \ might be supported on some ports and\n   not others.  However, the TRILL version\
    \ is the same as that in the\n   PORT-TRILL-VER sub-TLV.  An IS, if it is adjacent\
    \ to the sending IS\n   of TRILL version sub-TLV(s), uses the TRILL version it\
    \ received in\n   PORT-TRILL-VER sub-TLV(s) in preference to that received in\
    \ TRILL-VER\n   sub-TLV(s).\n"
- title: 2.2.5.  VLANs Appointed Sub-TLV
  contents:
  - "2.2.5.  VLANs Appointed Sub-TLV\n   The optional VLANs Appointed sub-TLV specifies,\
    \ for the port of the\n   originating IS on which the containing Hello was sent,\
    \ the VLANs for\n   which it is Appointed Forwarder.  This sub-TLV has the following\n\
    \   format:\n   +-+-+-+-+-+-+-+-+\n   |     Type      |                  (1 byte)\n\
    \   +-+-+-+-+-+-+-+-+\n   |   Length      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | RESV  |  Start VLAN ID        |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | VLAN bit-map....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   o  Type: sub-TLV\
    \ type, set to MT-Port-Cap-TLV VLANS-Appointed sub-TLV\n      8.\n   o  Length:\
    \ Variable, minimum 3.\n   o  RESV: 4 reserved bits that MUST be sent as zero\
    \ and ignored on\n      receipt.\n   o  Start VLAN ID: The 12-bit VLAN ID that\
    \ is represented by the high-\n      order bit of the first byte of the VLAN bit-map.\n\
    \   o  VLAN bit-map: The highest-order bit indicates the VLAN equal to\n     \
    \ the start VLAN ID, the next highest bit indicates the VLAN equal\n      to start\
    \ VLAN ID + 1, continuing to the end of the VLAN bit-map\n      field.\n   If\
    \ this sub-TLV occurs more than once in a Hello, the originating IS\n   is declaring\
    \ that it believes itself to be Appointed Forwarder on the\n   port on which the\
    \ enclosing IIH was sent for the union of the sets of\n   VLANs indicated by each\
    \ of the VLANs-Appointed sub-TLVs in the Hello.\n"
- title: 2.3.  Sub-TLVs of the Router Capability and MT-Capability TLVs
  contents:
  - "2.3.  Sub-TLVs of the Router Capability and MT-Capability TLVs\n   The Router\
    \ Capability TLV is specified in [RFC4971] and the MT-\n   Capability TLV in [RFC6329].\
    \  All of the following sub-sections\n   specify sub-TLVs that can be carried\
    \ in the Router Capability TLV\n   (#242) and the MT-Capability TLV (#144) with\
    \ the same sub-TLV number\n   for both TLVs.  These TLVs are in turn carried only\
    \ by LSPs.\n"
- title: 2.3.1.  TRILL Version Sub-TLV
  contents:
  - "2.3.1.  TRILL Version Sub-TLV\n   The TRILL Version (TRILL-VER) sub-TLV indicates\
    \ the maximum version\n   of the TRILL standard supported and the support of optional\n\
    \   capabilities by the originating IS.  By implication, lower versions\n   are\
    \ also supported.  If this sub-TLV is missing, it is assumed that\n   the originating\
    \ IS only supports the base version (version zero) of\n   the protocol [RFC6325],\
    \ and no optional capabilities indicated by\n   this sub-TLV are supported.\n\
    \   +-+-+-+-+-+-+-+-+\n   | Type          |              (1 byte)\n   +-+-+-+-+-+-+-+-+\n\
    \   | Length        |              (1 byte)\n   +-+-+-+-+-+-+-+-+\n   | Max-version\
    \   |              (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n\
    \   | Capabilities and Header Flags Supported |  (4 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+\n\
    \    0                   1                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7   0 1\n   o  Type: Router Capability sub-TLV type, set to 13 (TRILL-VER).\n\
    \   o  Length: 5.\n   o  Max-version: A one-byte unsigned integer set to the maximum\n\
    \      version supported.\n   o  Capabilities and Header Flags Supported: A bit\
    \ vector of 32 bits\n      numbered 0 through 31 in network order.  Bits 14 through\
    \ 31\n      indicate that the corresponding TRILL Header extended flags\n    \
    \  [RFC7179] are supported.  Bits 0 through 13 are reserved to\n      indicate\
    \ support of optional capabilities.  A one bit indicates\n      that the originating\
    \ IS supports the flag or capability.  For\n      example, support of multi-level\
    \ TRILL IS-IS [MultiLevel].  Bits in\n      this field MUST be set to zero except\
    \ as permitted for a\n      capability being advertised or an extended header\
    \ flag supported.\n   This sub-TLV, if present in a Router Capability TLV, MUST\
    \ occur in\n   the LSP number zero for the originating IS.  If found in a Router\n\
    \   Capability TLV in other fragments, it is ignored.  If there is more\n   than\
    \ one occurrence in LSP number zero, the minimum of the supported\n   versions\
    \ is assumed to be correct, and an extended header flag or\n   capability is assumed\
    \ to be supported only if indicated by all\n   occurrences.  The flags and capabilities\
    \ for which support can be\n   indicated in this sub-TLV are disjoint from those\
    \ in the PORT-TRILL-\n   VER sub-TLV (Section 2.2.4) so they cannot conflict.\
    \  However, the\n   TRILL version is the same as that in the PORT-TRILL-VER sub-TLV,\
    \ and\n   an IS that is adjacent to the originating IS of TRILL-VER sub-TLV(s)\n\
    \   uses the TRILL version it received in PORT-TRILL-VER sub-TLV(s) in\n   preference\
    \ to that received in TRILL-VER sub-TLV(s).\n   For multi-topology-aware TRILL\
    \ Switches, the TRILL version and\n   capabilities announced for the base topology\
    \ are assumed to apply to\n   all topologies for which a separate TRILL version\
    \ announcement does\n   not occur in an MT-Capability TLV.  Such announcements\
    \ for non-zero\n   topologies need not occur in fragment zero.\n"
- title: 2.3.2.  Nickname Sub-TLV
  contents:
  - "2.3.2.  Nickname Sub-TLV\n   The Nickname (NICKNAME) Router Capability sub-TLV\
    \ carries information\n   about the nicknames of the originating IS, along with\
    \ information\n   about its priority to hold those nicknames and the priority\
    \ for each\n   nickname to be a tree root as specified in [RFC6325], Section 3.7.3.\n\
    \   Multiple instances of this sub-TLV may occur.\n   +-+-+-+-+-+-+-+-+\n   |Type\
    \ = NICKNAME|                         (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length\
    \      |                         (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                NICKNAME RECORDS (1)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                NICKNAME RECORDS (2)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   .................                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                NICKNAME RECORDS (N)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   where each nickname record is of the form:\n   +-+-+-+-+-+-+-+-+\n   | Nickname.Pri\
    \  |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   \
    \  Tree Root Priority        |  (2 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Nickname            |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 6\n    \
    \  (NICKNAME).\n   o  Length: 5*n, where n is the number of nickname records present.\n\
    \   o  Nickname.Pri: An 8-bit unsigned integer priority to hold a\n      nickname\
    \ as specified in Section 3.7.3 of [RFC6325].\n   o  Tree Root Priority: This\
    \ is an unsigned 16-bit integer priority to\n      be a tree root as specified\
    \ in Section 4.5 of [RFC6325].\n   o  Nickname: This is an unsigned 16-bit integer\
    \ as specified in\n      Section 3.7 of [RFC6325].\n"
- title: 2.3.3.  Trees Sub-TLV
  contents:
  - "2.3.3.  Trees Sub-TLV\n   Each IS providing TRILL service uses the TREES sub-TLV\
    \ to announce\n   three numbers related to the computation of distribution trees\
    \ as\n   specified in Section 4.5 of [RFC6325].  Its format is as follows:\n \
    \  +-+-+-+-+-+-+-+-+\n   |Type =  TREES  |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n\
    \   |  Length       |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Number of trees to compute    |  (2 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Maximum trees able to compute |  (2 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Number of trees to use        |  (2 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 7\n    \
    \  (TREES).\n   o  Length: 6.\n   o  Number of trees to compute: An unsigned 16-bit\
    \ integer as\n      specified in Section 4.5 of [RFC6325].\n   o  Maximum trees\
    \ able to compute: An unsigned 16-bit integer as\n      specified in Section 4.5\
    \ of [RFC6325].\n   o  Number of trees to use: An unsigned 16-bit integer as specified\
    \ in\n      Section 4.5 of [RFC6325].\n"
- title: 2.3.4.  Tree Identifiers Sub-TLV
  contents:
  - "2.3.4.  Tree Identifiers Sub-TLV\n   The Tree Identifiers (TREE-RT-IDs) sub-TLV\
    \ is an ordered list of\n   nicknames.  When originated by the IS that has the\
    \ highest priority\n   to be a tree root, it lists the distribution trees that\
    \ the other ISs\n   are required to compute as specified in Section 4.5 of [RFC6325].\
    \  If\n   this information is spread across multiple sub-TLVs, the starting\n\
    \   tree number is used to allow the ordered lists to be correctly\n   concatenated.\
    \  The sub-TLV format is as follows:\n   +-+-+-+-+-+-+-+-+\n   |Type=TREE-RT-IDs|\
    \               (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length      |         \
    \       (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |Starting Tree Number\
    \         |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Nickname (K-th\
    \ root)      |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Nickname\
    \ (K+1 - th root)  |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Nickname\
    \ (...)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   o  Type: Router Capability\
    \ and MT-Capability sub-TLV type, set to 8\n      (TREE-RT-IDs).\n   o  Length:\
    \ 2 + 2*n, where n is the number of nicknames listed.\n   o  Starting Tree Number:\
    \ This identifies the starting tree number of\n      the nicknames that are trees\
    \ for the domain.  This is set to 1 for\n      the sub-TLV containing the first\
    \ list.  Other Tree-Identifiers\n      sub-TLVs will have the number of the starting\
    \ list they contain.\n      In the event the same tree identifier can be computed\
    \ from two\n      such sub-TLVs and they are different, then it is assumed that\
    \ this\n      is a transient condition that will get cleared.  During this\n \
    \     transient time, such a tree SHOULD NOT be computed unless such\n      computation\
    \ is indicated by all relevant sub-TLVs present.\n   o  Nickname: The nickname\
    \ at which a distribution tree is rooted.\n"
- title: 2.3.5.  Trees Used Identifiers Sub-TLV
  contents:
  - "2.3.5.  Trees Used Identifiers Sub-TLV\n   This Router Capability sub-TLV has\
    \ the same structure as the Tree\n   Identifiers sub-TLV specified in Section\
    \ 2.3.4.  The only difference\n   is that its sub-TLV type is set to 9 (TREE-USE-IDs),\
    \ and the trees\n   listed are those that the originating IS wishes to use as\
    \ specified\n   in [RFC6325], Section 4.5.\n"
- title: 2.3.6.  Interested VLANs and Spanning Tree Roots Sub-TLV
  contents:
  - "2.3.6.  Interested VLANs and Spanning Tree Roots Sub-TLV\n   The value of this\
    \ sub-TLV consists of a VLAN range and information in\n   common to all of the\
    \ VLANs in the range for the originating IS.  This\n   information consists of\
    \ flags, a variable length list of spanning\n   tree root bridge IDs, and an Appointed\
    \ Forwarder status lost counter,\n   all as specified in the sections of [RFC6325]\
    \ listed with the\n   respective information items below.\n   In the set of LSPs\
    \ originated by an IS, the union of the VLAN ranges\n   in all occurrences of\
    \ this sub-TLV MUST be the set of VLANs for which\n   the originating IS is Appointed\
    \ Forwarder on at least one port, and\n   the VLAN ranges in multiple VLANs sub-TLVs\
    \ for an IS MUST NOT overlap\n   unless the information provided about a VLAN\
    \ is the same in every\n   instance.  However, as a transient state, these conditions\
    \ may be\n   violated.  If a VLAN is not listed in any INT-VLAN sub-TLV for an\
    \ IS,\n   that IS is assumed to be uninterested in receiving traffic for that\n\
    \   VLAN.  If a VLAN appears in more than one INT-VLAN sub-TLV for an IS\n   with\
    \ different information in the different instances, the following\n   apply:\n\
    \   -  If those sub-TLVs provide different nicknames, it is unspecified\n    \
    \  which nickname takes precedence.\n   -  The largest Appointed Forwarder status\
    \ lost counter, using serial\n      number arithmetic [RFC1982], is used.\n  \
    \ -  The originating IS is assumed to be attached to a multicast IPv4\n      router\
    \ for that VLAN if any of the INT-VLAN sub-TLVs assert that\n      it is so connected\
    \ and similarly for IPv6 multicast router\n      attachment.\n   -  The root bridge\
    \ lists from all of the instances of the VLAN for\n      the originating IS are\
    \ merged.\n   To minimize such occurrences, wherever possible, an implementation\n\
    \   SHOULD advertise the update to an interested VLAN and Spanning Tree\n   Roots\
    \ sub-TLV in the same LSP fragment as the advertisement that it\n   replaces.\
    \  Where this is not possible, the two affected LSP fragments\n   should be flooded\
    \ as an atomic action.  An IS that receives an update\n   to an existing interested\
    \ VLAN and Spanning Tree Roots sub-TLV can\n   minimize the potential disruption\
    \ associated with the update by\n   employing a hold-down timer prior to processing\
    \ the update so as to\n   allow for the receipt of multiple LSP fragments associated\
    \ with the\n   same update prior to beginning processing.\n   The sub-TLV layout\
    \ is as follows:\n   +-+-+-+-+-+-+-+-+\n   |Type = INT-VLAN|                 \
    \ (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length      |                  (1 byte)\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   Nickname                    |  (2\
    \ bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+-+\n   |   Interested\
    \ VLANS                            |        (4 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+-+\n\
    \   |   Appointed Forwarder Status Lost Counter     |        (4 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+\n\
    \   |         Root Bridges                                |  (6*n bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 10\n   \
    \   (INT-VLAN).\n   o  Length: 10 + 6*n, where n is the number of root bridge\
    \ IDs.\n   o  Nickname: As specified in [RFC6325], Section 4.2.4.4, this field\n\
    \      may be used to associate a nickname held by the originating IS\n      with\
    \ the VLAN range indicated.  When not used in this way, it is\n      set to zero.\n\
    \   o  Interested VLANS: The Interested VLANs field is formatted as shown\n  \
    \    below.\n        0    1    2    3     4 - 15      16 - 19     20 - 31\n  \
    \    +----+----+----+----+------------+----------+------------+\n      | M4 |\
    \ M6 |  R |  R | VLAN.start |   RESV   |  VLAN.end  |\n      +----+----+----+----+------------+----------+------------+\n\
    \      -  M4, M6: These bits indicate, respectively, that there is an\n      \
    \   IPv4 or IPv6 multicast router on a link for which the\n         originating\
    \ IS is Appointed Forwarder for every VLAN in the\n         indicated range as\
    \ specified in [RFC6325], Section 4.2.4.4,\n         item 5.1.\n      -  R, RESV:\
    \ These reserved bits MUST be sent as zero and are\n         ignored on receipt.\n\
    \      -  VLAN.start and VLAN.end: This VLAN ID range is inclusive.\n        \
    \ Setting both VLAN.start and VLAN.end to the same value\n         indicates a\
    \ range of one VLAN ID.  If VLAN.start is not equal\n         to VLAN.end and\
    \ VLAN.start is 0x000, the sub-TLV is interpreted\n         as if VLAN.start was\
    \ 0x001.  If VLAN.start is not equal to\n         VLAN.end and VLAN.end is 0xFFF,\
    \ the sub-TLV is interpreted as\n         if VLAN.end was 0xFFE.  If VLAN.end\
    \ is less than VLAN.start,\n         the sub-TLV is ignored.  If both VLAN.start\
    \ and VLAN.end are\n         0x000 or both are 0xFFF, the sub-TLV is ignored.\
    \  The values\n         0x000 or 0xFFF are not valid VLAN IDs, and a port cannot\
    \ be\n         enabled for them.\n   o  Appointed Forwarder Status Lost Counter:\
    \ This is a count of how\n      many times a port that was Appointed Forwarder\
    \ for the VLANs in\n      the range given has lost the status of being an Appointed\n\
    \      Forwarder for some port as discussed in Section 4.8.3 of\n      [RFC6325].\
    \  It is initialized to zero at an IS when the zeroth LSP\n      sequence number\
    \ is initialized.  No special action need be taken\n      at rollover; the counter\
    \ just wraps around.\n   o  Root Bridges: The list of zero or more spanning tree\
    \ root bridge\n      IDs is the set of root bridge IDs seen for all ports for\
    \ which the\n      IS is Appointed Forwarder for the VLANs in the specified range\
    \ as\n      discussed in [RFC6325], Section 4.9.3.2.  While, of course, at\n \
    \     most one spanning tree root could be seen on any particular port,\n    \
    \  there may be multiple ports in the same VLANs connected to\n      different\
    \ bridged LANs with different spanning tree roots.\n   An INT-VLAN sub-TLV asserts\
    \ that the information provided (multicast\n   router attachment, Appointed Forwarder\
    \ status lost counter, and root\n   bridges) is the same for all VLANs in the\
    \ range specified.  If this\n   is not the case, the range MUST be split into\
    \ subranges meeting this\n   criteria.  It is always safe to use sub-TLVs with\
    \ a \"range\" of one\n   VLAN ID, but this may be too verbose.\n"
- title: 2.3.7.  VLAN Group Sub-TLV
  contents:
  - "2.3.7.  VLAN Group Sub-TLV\n   The VLAN Group sub-TLV consists of two or more\
    \ VLAN IDs as specified\n   in [RFC6325], Section 4.8.4.  This sub-TLV indicates\
    \ that shared VLAN\n   learning is occurring at the originating IS between the\
    \ listed VLANs.\n   It is structured as follows:\n   +-+-+-+-+-+-+-+-+\n   |Type=VLAN-GROUP|\
    \                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length      |      \
    \            (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | RESV  |  Primary\
    \ VLAN ID      |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | RESV \
    \ |  Secondary VLAN ID    |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  more Secondary VLAN IDs ...     (2 bytes each)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 14\n   \
    \   (VLAN-GROUP).\n   o  Length: 4 + 2*n, where n is the number of secondary VLAN\
    \ ID fields\n      beyond the first.  n MAY be zero.\n   o  RESV: a 4-bit field\
    \ that MUST be sent as zero and ignored on\n      receipt.\n   o  Primary VLAN\
    \ ID: This identifies the primary VLAN ID.\n   o  Secondary VLAN ID: This identifies\
    \ a secondary VLAN in the VLAN\n      Group.\n   o  more Secondary VLAN IDs: zero\
    \ or more byte pairs, each with the\n      top 4 bits as a RESV field and the\
    \ low 12 bits as a VLAN ID.\n"
- title: 2.3.8.  Interested Labels and Spanning Tree Roots Sub-TLV
  contents:
  - "2.3.8.  Interested Labels and Spanning Tree Roots Sub-TLV\n   An IS that can\
    \ handle fine-grained labeling [RFC7172] announces its\n   fine-grained label\
    \ connectivity and related information in the\n   Interested Labels and Spanning\
    \ Tree Roots sub-TLV (INT-LABEL).  It is\n   a variation of the Interested VLANs\
    \ and Spanning Tree Roots sub-TLV\n   (INT-VLAN) and is structured as follows.\n\
    \   +-+-+-+-+-+-+-+-+\n   |Type=INT-LABEL |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n\
    \   |   Length      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Nickname                    |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+-+-+\n\
    \   |   Interested Labels                                 |  (7 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+-+-+\n\
    \   |   Appointed Forwarder Status Lost Counter           |  (4 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+\n\
    \   |         Root Bridges                                |  (6*n bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 15\n   \
    \   (INT-LABEL).\n   o  Length: 11 + 6*n, where n is the number of root bridge\
    \ IDs.\n   o  Nickname: This field may be used to associate a nickname held by\n\
    \      the originating IS with the Interested Labels indicated.  When not\n  \
    \    used in this way, it is set to zero.\n   o  Interested Labels: The Interested\
    \ Labels field is seven bytes long\n      and formatted as shown below.\n    \
    \    0  1  2  3  4  5  6  7\n      +--+--+--+--+--+--+--+--+\n      |M4|M6|BM|\
    \ R| R| R| R| R|               .               .\n      +--+--+--+--+--+--+--+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                Label.start - 24 bits                  |\n      +--+--+--+--+--+--+--+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           Label.end or bit-map - 24 bits              |\n      +--+--+--+--+--+--+--+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        0                          1                   2\n        0  1  2  3\
    \  4  5  6  7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n      -  M4, M6: These bits indicate,\
    \ respectively, that there is an\n         IPv4 or IPv6 multicast router on a\
    \ link to which the\n         originating IS is Appointed Forwarder for the VLAN\n\
    \         corresponding to every label in the indicated range.\n      -  BM: If\
    \ the BM (bit-map) bit is zero, the last three bytes of\n         the Interested\
    \ Labels is a Label.end label number.  If the BM\n         bit is one, those bytes\
    \ are a bit-map as described below.\n      -  R: These reserved bits MUST be sent\
    \ as zero and are ignored on\n         receipt.\n      -  Label.start and Label.end:\
    \ If the BM bit is zero, this fine-\n         grained label [RFC7172] ID range\
    \ is inclusive.  These fields\n         are treated as unsigned integers.  Setting\
    \ them both to the\n         same label ID value indicates a range of one label\
    \ ID.  If\n         Label.end is less than Label.start, the sub-TLV is ignored.\n\
    \      -  Label.start and bit-map: If the BM bit is one, the fine-grained\n  \
    \       labels that the IS is interested in are indicated by a 24-bit\n      \
    \   bit-map.  The interested labels are the Label.start number plus\n        \
    \ the bit number of each one bit in the bit-map.  So, if bit zero\n         of\
    \ the bit-map is a one, the IS is interested in the label with\n         value\
    \ Label.start, and if bit 23 of the bit-map is a one, the\n         IS is interested\
    \ in the label with value Label.start+23.\n   o  Appointed Forwarder Status Lost\
    \ Counter: This is a count of how\n      many times a port that was Appointed\
    \ Forwarder for a VLAN mapping\n      to the fine-grained label in the range or\
    \ bit-map given has lost\n      the status of being an Appointed Forwarder as\
    \ discussed in Section\n      4.8.3 of [RFC6325].  It is initialized to zero at\
    \ an IS when the\n      zeroth LSP sequence number is initialized.  No special\
    \ action need\n      be taken at rollover; the counter just wraps around.\n  \
    \ o  Root Bridges: The list of zero or more spanning tree root bridge\n      IDs\
    \ is the set of root bridge IDs seen for all ports for which the\n      IS is\
    \ Appointed Forwarder for a VLAN mapping to the fine-grained\n      label in the\
    \ specified range or bit-map.  (See [RFC6325], Section\n      4.9.3.2.)  While,\
    \ of course, at most one spanning tree root could\n      be seen on any particular\
    \ port, there may be multiple relevant\n      ports connected to different bridged\
    \ LANs with different spanning\n      tree roots.\n   An INT-LABEL sub-TLV asserts\
    \ that the information provided (multicast\n   router attachment, Appointed Forwarder\
    \ status lost counter, and root\n   bridges) is the same for all labels specified.\
    \  If this is not the\n   case, the sub-TLV MUST be split into subranges and/or\
    \ separate bit\n   maps meeting this criteria.  It is always safe to use sub-TLVs\
    \ with a\n   \"range\" of one VLAN ID, but this may be too verbose.\n"
- title: 2.3.9.  RBridge Channel Protocols Sub-TLV
  contents:
  - "2.3.9.  RBridge Channel Protocols Sub-TLV\n   An IS announces the RBridge Channel\
    \ protocols [RFC7178] it supports\n   through use of this sub-TLV.\n   +-+-+-+-+-+-+-+-+\n\
    \   |Type=RBCHANNELS|                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |  \
    \ Length      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...\n\
    \   |   Zero or more bit vectors                            (variable)\n   +-+-+-+-...\n\
    \   o  Type: Router Capability and MT-Capability RBridge Channel\n      Protocols\
    \ sub-TLV, set to 16 (RBCHANNELS).\n   o  Length: variable.\n   o  Bit Vectors:\
    \ Zero or more byte-aligned bit vectors where a one bit\n      indicates support\
    \ of a particular RBridge Channel protocol.  Each\n      byte-aligned bit vector\
    \ is formatted as follows:\n      | 0  1  2  3  4  5  6  7| 8  9 10 11 12 13 14\
    \ 15|\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n      |  Bit Vector\
    \ Length |     Bit Vector Offset    |\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \      |  bits\n      +--+--+--...\n      The Bit Vector Length (BVL) is a seven-bit\
    \ unsigned integer field\n      giving the number of bytes of bit vector.  The\
    \ Bit Vector Offset\n      (BVO) is a nine-bit unsigned integer field.\n     \
    \ The bits in each bit vector are numbered in network order, the\n      high-order\
    \ bit of the first byte of bits being bit 0 + 8*BVO, the\n      low-order bit\
    \ of that byte being 7 + 8*BVO, the high order bit of\n      the second byte being\
    \ 8 + 8*BVO, and so on for BVL bytes.  A bit\n      vector of RBridge Channel\
    \ protocols supported MUST NOT extend\n      beyond the end of the value in the\
    \ sub-TLV in which it occurs.  If\n      it does, it is ignored.  If multiple\
    \ byte-aligned bit vectors are\n      present in one such sub-TLV, their representations\
    \ are contiguous,\n      the BVL field for the next starting immediately after\
    \ the last\n      byte of bits for the previous bit vector.  The one or more bit\n\
    \      vectors present MUST exactly fill the sub-TLV value.  If there are\n  \
    \    one or two bytes of value left over, they are ignored; if more\n      than\
    \ two, an attempt is made to parse them as one or more bit\n      vectors.\n \
    \     If different bit vectors overlap in the protocol number space they\n   \
    \   refer to and they have inconsistent bit values for a channel\n      protocol,\
    \ support for the protocol is assumed if any of these bit\n      vectors has a\
    \ 1 for that protocol.\n      The absence of any occurrences of this sub-TLV in\
    \ the LSP for an\n      IS implies that the IS does not support the RBridge Channel\n\
    \      facility.  To avoid wasted space, trailing bit vector zero bytes\n    \
    \  SHOULD be eliminated by reducing BVL, any null bit vectors (ones\n      with\
    \ BVL equal to zero) eliminated, and generally the most compact\n      encoding\
    \ used.  For example, support for channel protocols 1 and\n      32 could be encoded\
    \ as\n         BVL = 5\n         BVO = 0\n          0b01000000\n          0b00000000\n\
    \          0b00000000\n          0b00000000\n          0b10000000\n      or as\n\
    \         BVL = 1\n         BVO = 0\n          0b01000000\n         BLV = 1\n\
    \         BVO = 4\n          0b1000000\n      The first takes 7 bytes while the\
    \ second takes only 6; thus, the\n      second would be preferred.\n   In multi-topology-aware\
    \ RBridges, RBridge Channel protocols for which\n   support is announced in the\
    \ base topology are assumed to be supported\n   in all topologies for which there\
    \ is no separate announcement for\n   RBridge Channel protocol support.\n"
- title: 2.3.10.  Affinity Sub-TLV
  contents:
  - "2.3.10.  Affinity Sub-TLV\n   Association of an IS to a multi-destination distribution\
    \ tree through\n   a specific path is accomplished by using the Affinity sub-TLV.\
    \  The\n   announcement of an Affinity sub-TLV by RB1 with the nickname of RB2\n\
    \   as the first part of an Affinity Record in the sub-TLV value is a\n   request\
    \ by RB1 that all ISs in the campus connect RB2 as a child of\n   RB1 when calculating\
    \ any of the trees listed in that Affinity Record.\n   Examples of use include\
    \ [Affinity] and [Resilient].\n   The structure of the Affinity sub-TLV is shown\
    \ below.\n   +-+-+-+-+-+-+-+-+\n   | Type=AFFINITY |                (1 byte)\n\
    \   +-+-+-+-+-+-+-+-+\n   | Length        |                (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   AFFINITY RECORD 1                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   AFFINITY RECORD 2                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   ..........\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   AFFINITY RECORD N                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   where each AFFINITY RECORD is structured as follows:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Nickname                    |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Affinity Flags |                (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |Number\
    \ of trees|                (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \ Tree-num of 1st root        |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Tree-num of 2nd root        |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          ..........         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \ Tree-num of Nth root        |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 17\n   \
    \   (AFFINITY).\n   o  Length: size of all Affinity Records included, where an\
    \ Affinity\n      Record listing n tree roots is 4+2*n bytes long.\n   o  Nickname:\
    \ 16-bit nickname of the IS whose associations to the\n      multi-destination\
    \ trees listed in the Affinity Record are through\n      the originating IS.\n\
    \   o  Affinity Flags: 8 bits reserved for future needs to provide\n      additional\
    \ information about the affinity being announced.  MUST\n      be sent as zero\
    \ and ignored on receipt.\n   o  Number of trees: A one-byte unsigned integer\
    \ giving the number of\n      trees for which affinity is being announced by this\
    \ Affinity\n      Record.\n   o  Tree-num of roots: The tree numbers of the distribution\
    \ trees this\n      Affinity Record is announcing.\n   There is no need for a\
    \ field giving the number of Affinity Records as\n   this can be determined by\
    \ processing those records.\n"
- title: 2.3.11 Label Group Sub-TLV
  contents:
  - "2.3.11 Label Group Sub-TLV\n   The Label Group sub-TLV consists of two or more\
    \ fine-grained label\n   [RFC7172] IDs.  This sub-TLV indicates that shared label\
    \ MAC address\n   learning is occurring at the announcing IS between the listed\
    \ labels.\n   It is structured as follows:\n   +-+-+-+-+-+-+-+-+\n   |Typ=LABEL-GROUP|\
    \                                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length\
    \      |                                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Primary Label ID                             |  (3 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Secondary Label ID                           |  (3 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  more Secondary Label IDs ...                   (3 bytes each)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: Router Capability and MT-Capability sub-TLV type, set to 18\n   \
    \   (LABEL-GROUP).\n   o  Length: 6 + 3*n, where n is the number of secondary\
    \ VLAN ID fields\n      beyond the first.  n MAY be zero.\n   o  Primary Label\
    \ ID: This identifies the primary Label ID.\n   o  Secondary Label ID: This identifies\
    \ a secondary Label ID in the\n      Label Group.\n   o  more Secondary Label\
    \ IDs: zero or more byte triples, each with a\n      Label ID.\n"
- title: 2.4.  MTU Sub-TLV for Extended Reachability and MT-ISN TLVs
  contents:
  - "2.4.  MTU Sub-TLV for Extended Reachability and MT-ISN TLVs\n   The MTU sub-TLV\
    \ is used to optionally announce the MTU of a link as\n   specified in [RFC6325],\
    \ Section 4.2.4.4.  It occurs within the\n   Extended Reachability (#22) and MT-ISN\
    \ (Intermediate System\n   Neighbors) (#222) TLVs.\n   +-+-+-+-+-+-+-+-+\n   |\
    \ Type = MTU    |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length\
    \      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |F|  RESV       |\
    \                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |      \
    \         MTU             |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Type: Extended Reachability and MT-ISN sub-TLV type, set to MTU\n     \
    \ sub-TLV 28.\n   o  Length: 3.\n   o  F: Failed.  This bit is a one if MTU testing\
    \ failed on this link\n      at the required campus-wide MTU.\n   o  RESV: 7 bits\
    \ that MUST be sent as zero and ignored on receipt.\n   o  MTU: This field is\
    \ set to the largest successfully tested MTU size\n      for this link or zero\
    \ if it has not been tested, as specified in\n      Section 4.3.2 of [RFC6325].\n"
- title: 2.5.  TRILL Neighbor TLV
  contents:
  - "2.5.  TRILL Neighbor TLV\n   The TRILL Neighbor TLV is used in TRILL broadcast\
    \ link IIH PDUs (see\n   Section 4.1 below) in place of the IS Neighbor TLV, as\
    \ specified in\n   Section 4.4.2.1 of [RFC6325] and in [RFC7177].  The structure\
    \ of the\n   TRILL Neighbor TLV is as follows:\n   +-+-+-+-+-+-+-+-+\n   |   \
    \  Type      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |   Length\
    \      |                  (1 byte)\n   +-+-+-+-+-+-+-+-+\n   |S|L|R|  SIZE   |\
    \                  (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Neighbor RECORDS (1)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Neighbor RECORDS (2)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   .................                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Neighbor RECORDS (N)                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The information present for each neighbor is as follows:\n   +-+-+-+-+-+-+-+-+\n\
    \   |F|O|  RESV     |                (1 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      MTU                    |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+-+-+-+\n\
    \   |      SNPA (MAC Address)                           | (SIZE bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...+-+-+-+-+-+\n\
    \   o  Type: TLV type, set to TRILL Neighbor TLV 145.\n   o  Length: 1 + (SIZE+3)*n,\
    \ where n is the number of neighbor records,\n      which may be zero.\n   o \
    \ S: Smallest flag.  If this bit is a one, then the list of\n      neighbors includes\
    \ the neighbor with the smallest MAC address\n      considered as an unsigned\
    \ integer.\n   o  L: Largest flag.  If this bit is a one, then the list of neighbors\n\
    \      includes the neighbor with the largest MAC address considered as\n    \
    \  an unsigned integer.\n   o  R, RESV: These bits are reserved and MUST be sent\
    \ as zero and\n      ignored on receipt.\n   o  SIZE: The SNPA size as an unsigned\
    \ integer in bytes except that 6\n      is encoded as zero.  An actual size of\
    \ zero is meaningless and\n      cannot be encoded.  The meaning of the value\
    \ 6 in this field is\n      reserved, and TRILL Neighbor TLVs received with a\
    \ SIZE of 6 are\n      ignored.  The SIZE is inherent to the technology of a link\
    \ and is\n      fixed for all TRILL Neighbor TLVs on that link but may vary\n\
    \      between different links in the campus if those links are different\n  \
    \    technologies, for example, 6 for EUI-48 SNPAs or 8 for EUI-64\n      SNPAs\
    \ [RFC7042].  (The SNPA size on the various links in a TRILL\n      campus is\
    \ independent of the System ID size.)\n   o  F: Failed.  This bit is a one if\
    \ MTU testing to this neighbor\n      failed at the required campus-wide MTU (see\
    \ [RFC6325], Section\n      4.3.1).\n   o  O: OOMF.  This bit is a one if the\
    \ IS sending the enclosing TRILL\n      Neighbor TLV is willing to offer the Overload\
    \ Originated Multi-\n      destination Frame (OOMF) service [RFC7180] to the IS\
    \ whose port\n      has the SNPA in the enclosing Neighbor RECORD.\n   o  MTU:\
    \ This field is set to the largest successfully tested MTU size\n      for this\
    \ neighbor or to zero if it has not been tested.\n   o  SNPA (MAC Address): Subnetwork\
    \ Point of Attachment of the\n      neighbor.\n   As specified in [RFC7177] and\
    \ Section 4.4.2.1 of [RFC6325], all MAC\n   addresses may fit into one TLV, in\
    \ which case both the S and L flags\n   would be set to one in that TLV.  If the\
    \ MAC addresses don't fit into\n   one TLV, the highest MAC address in a TRILL\
    \ Neighbor TLV with the L\n   flag zero MUST also appear as a MAC address in some\
    \ other TRILL\n   Neighbor TLV (possibly in a different TRILL IIH PDU).  Also,\
    \ the\n   lowest MAC address in a TRILL Neighbor TLV with the S flag zero MUST\n\
    \   also appear in some other TRILL Neighbor TLV (possibly in a different\n  \
    \ TRILL IIH PDU).  If an IS believes it has no neighbors, it MUST send\n   a TRILL\
    \ Neighbor TLV with an empty list of neighbor RECORDS, which\n   will have both\
    \ the S and L bits on.\n"
- title: 3.  MTU PDUs
  contents:
  - "3.  MTU PDUs\n   The IS-IS MTU-probe and MTU-ack PDUs are used to optionally\
    \ determine\n   the MTU on a link between ISs as specified in Section 4.3.2 of\n\
    \   [RFC6325] and in [RFC7177].\n   The MTU PDUs have the IS-IS PDU common header\
    \ (up through the Maximum\n   Area Addresses byte) with PDU Type numbers as indicated\
    \ in Section 5.\n   They also have a common fixed MTU PDU header as shown below\
    \ that is 8\n   + 2*(ID Length) bytes long, 20 bytes in the case of the usual\
    \ 6-bytes\n   System IDs.\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |    PDU Length\
    \                 |  (2 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+.....+-+-+\n\
    \   |    Probe ID                      (6 bytes)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+.....+-+-+\n\
    \   |    Probe Source ID               (ID Length bytes)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+.....+-+-+\n\
    \   |    Ack Source ID                 (ID Length bytes)            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+.....+-+-+\n\
    \   As with other IS-IS PDUs, the PDU Length gives the length of the\n   entire\
    \ IS-IS packet starting with and including the IS-IS common\n   header.\n   The\
    \ Probe ID field is an opaque 48-bit quantity set by the IS issuing\n   an MTU-probe\
    \ and copied by the responding IS into the corresponding\n   MTU-ack.  For example,\
    \ an IS creating an MTU-probe could compose this\n   quantity from a port identifier\
    \ and probe sequence number relative to\n   that port.\n   The Probe Source ID\
    \ is set by an IS issuing an MTU-probe to its\n   System ID and copied by the\
    \ responding IS into the corresponding MTU-\n   ack.  The Ack Source ID is set\
    \ to zero in MTU-probe PDUs and ignored\n   on receipt.  An IS issuing an MTU-ack\
    \ sets the Ack Source ID field to\n   its System ID.  The System ID length is\
    \ usually 6 bytes but could be\n   a different value as indicated by the ID Length\
    \ field in the IS-IS\n   PDU Header.\n   The TLV area follows the MTU PDU header\
    \ area.  This area MAY contain\n   an Authentication TLV and MUST be padded with\
    \ the Padding TLV to the\n   exact size being tested.  Since the minimum size\
    \ of the Padding TLV\n   is 2 bytes, it would be impossible to pad to exact size\
    \ if the total\n   length of the required information-bearing fixed fields and\
    \ TLVs\n   added up to 1 byte less than the desired length.  However, the length\n\
    \   of the fixed fields and substantive TLVs for MTU PDUs is expected to\n   be\
    \ quite small compared with their minimum length (minimum 1470-byte\n   MTU on\
    \ an IEEE 802.3 link, for example), so this should not be a\n   problem.\n"
- title: 4.  Use of Existing PDUs and TLVs
  contents:
  - "4.  Use of Existing PDUs and TLVs\n   The sub-sections below provide details\
    \ of TRILL use of existing PDUs\n   and TLVs.\n"
- title: 4.1.  TRILL IIH PDUs
  contents:
  - "4.1.  TRILL IIH PDUs\n   The TRILL IIH PDU is the variation of the IIH PDU used\
    \ by the TRILL\n   protocol.  Section 4.4 of the TRILL standard [RFC6325] and\
    \ [RFC7177]\n   specify the contents of the TRILL IIH and how its use in TRILL\n\
    \   differs from Layer 3 LAN IIH PDU use.  The adjacency state machinery\n   for\
    \ TRILL neighbors is specified in detail in [RFC7177].\n   In a TRILL IIH PDU,\
    \ the IS-IS common header and the fixed PDU Header\n   are the same as a Level\
    \ 1 IIH PDU.\n   The IS-IS Neighbor TLV (6) is not used in a TRILL IIH and is\
    \ ignored\n   if it appears there.  Instead, TRILL LAN IIH PDUs use the TRILL\n\
    \   Neighbor TLV (see Section 2.5).\n"
- title: 4.2.  Area Address
  contents:
  - "4.2.  Area Address\n   TRILL uses a fixed zero Area Address as specified in [RFC6325],\n\
    \   Section 4.2.3.  This is encoded in a 4-byte Area Address TLV (TLV #1)\n  \
    \ as follows:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   0x01, Area Address\
    \ Type     |   (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   0x02, Length\
    \ of Value       |   (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   0x01,\
    \ Length of Address     |   (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  |   0x00, zero Area Address     |   (1 byte)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.3.  Protocols Supported
  contents:
  - "4.3.  Protocols Supported\n   NLPID (Network Layer Protocol ID) 0xC0 has been\
    \ assigned to TRILL\n   [RFC6328].  A Protocols Supported TLV (#129, [RFC1195])\
    \ including\n   that value appears in TRILL IIH PDUs and LSP number zero PDUs.\n"
- title: 4.4.  Link State PDUs (LSPs)
  contents:
  - "4.4.  Link State PDUs (LSPs)\n   An LSP number zero MUST NOT be originated larger\
    \ than 1470 bytes, but\n   a larger LSP number zero successfully received MUST\
    \ be processed and\n   forwarded normally.\n"
- title: 4.5.  Originating LSP Buffer Size
  contents:
  - "4.5.  Originating LSP Buffer Size\n   The originatingLSPBufferSize TLV (#14)\
    \ MUST be in LSP number zero;\n   however, if found in other LSP fragments, it\
    \ is processed normally.\n   Should there be more than one originatingLSPBufferSize\
    \ TLV for an IS,\n   the minimum size, but not less than 1470, is used.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This section gives IANA considerations for the TLVs,\
    \ sub-TLVs, and\n   PDUs specified herein.  A number of new code points are assigned,\
    \ and\n   those that were assigned by [RFC6326] are included here for\n   convenience.\
    \  IANA has replaced all [RFC6326] references in the IANA\n   registries with\
    \ references to this document.\n"
- title: 5.1.  TLVs
  contents:
  - "5.1.  TLVs\n   This document specifies two IS-IS TLV types -- namely, the Group\n\
    \   Address TLV (GADDR-TLV; type 142) and the TRILL Neighbor TLV (type\n   145).\
    \  The PDUs in which these TLVs are permitted for TRILL are shown\n   in the table\
    \ below along with the section of this document where they\n   are discussed.\
    \  The final \"NUMBER\" column indicates the permitted\n   number of occurrences\
    \ of the TLV in their PDU, or set of PDUs in the\n   case of LSPs, which in these\
    \ two cases is \"*\" indicating that the TLV\n   MAY occur 0, 1, or more times.\n\
    \   IANA has registered these two code points in the IANA IS-IS TLV\n   registry\
    \ (ignoring the \"Section\" and \"NUMBER\" columns, which are\n   irrelevant to\
    \ that registry).\n                        Section TLV IIH LSP SNP Purge NUMBER\n\
    \                        ======= === === === === ===== ======\n     GADDR-TLV\
    \            2.1   142  n   y   n    n     *\n     TRILL Neighbor TLV   2.5  \
    \ 145  y   n   n    n     *\n"
- title: 5.2.  Sub-TLVs
  contents:
  - "5.2.  Sub-TLVs\n   This document specifies a number of sub-TLVs.  The TLVs in\
    \ which\n   these sub-TLVs occur are shown in the second table below along with\n\
    \   the section of this document where they are discussed.  The TLVs\n   within\
    \ which these sub-TLVs can occur are determined by the presence\n   of an \"X\"\
    \ in the relevant column; the column headers are described in\n   the first table\
    \ below.  In some cases, the column header corresponds\n   to two different TLVs\
    \ in which the sub-TLV can occur.\n     Column Head    TLV    RFC      TLV Name\n\
    \     ===========   =====  ========  ==============\n      Grp. Adr.     142 \
    \   7176      Group Address\n      MT Port       143    6165      MT-Port-Cap-TLV\n\
    \      MT Cap.       242    4971      Router CAPABILITY\n                    144\
    \    6329      MT-Capability\n      Ext. Reach     22    5305      Extended IS\
    \ Reachability\n                    222    5120      MT-ISN\n   The final \"NUMBER\"\
    \ column below indicates the permitted number of\n   occurrences of the sub-TLV\
    \ cumulatively within all occurrences of\n   their TLV(s) in those TLVs' carrying\
    \ a PDU (or set of PDUs in the\n   case of LSPs), as follows:\n   0-1 = MAY occur\
    \ zero or one times.\n    1  = MUST occur exactly once.  If absent, the PDU is\
    \ ignored.  If it\n         occurs more than once, results are unspecified.\n\
    \    *  = MAY occur 0, 1, or more times.\n   The values in the \"Section\" and\
    \ \"NUMBER\" columns are irrelevant to\n   the IANA sub-registries.\n        \
    \                        sub-   Grp.  MT    MT    Ext.\n     Name            Section\
    \    TLV#   Adr.  Port  Cap.  Reach  NUMBER\n     =================================================================\n\
    \     GMAC-ADDR        2.1.1       1     X     -     -     -      *\n     GIP-ADDR\
    \         2.1.2       2     X     -     -     -      *\n     GIPV6-ADDR      \
    \ 2.1.3       3     X     -     -     -      *\n     GLMAC-ADDR       2.1.4  \
    \     4     X     -     -     -      *\n     GLIP-ADDR        2.1.5       5  \
    \   X     -     -     -      *\n     GLIPV6-ADDR      2.1.6       6     X    \
    \ -     -     -      *\n     VLAN-FLAGS       2.2.1       1     -     X     -\
    \     -      1\n     Enabled-VLANs    2.2.2       2     -     X     -     -  \
    \    *\n     AppointedFwrdrs  2.2.3       3     -     X     -     -      *\n \
    \    PORT-TRILL-VER   2.2.4       7     -     X     -     -     0-1\n     VLANs-Appointed\
    \  2.2.5       8     -     X     -     -      *\n     NICKNAME         2.3.2 \
    \      6     -     -     X     -      *\n     TREES            2.3.3       7 \
    \    -     -     X     -     0-1\n     TREE-RT-IDs      2.3.4       8     -  \
    \   -     X     -      *\n     TREE-USE-IDs     2.3.5       9     -     -    \
    \ X     -      *\n     INT-VLAN         2.3.6      10     -     -     X     -\
    \      *\n     TRILL-VER        2.3.1      13     -     -     X     -     0-1\n\
    \     VLAN-GROUP       2.3.7      14     -     -     X     -      *\n     INT-LABEL\
    \        2.3.8      15     -     -     X     -      *\n     RBCHANNELS       2.3.9\
    \      16     -     -     X     -      *\n     AFFINITY         2.3.10     17\
    \     -     -     X     -      *\n     LABEL-GROUP      2.3.11     18     -  \
    \   -     X     -      *\n     MTU              2.4        28     -     -    \
    \ -     X     0-1\n     =================================================================\n\
    \     Name            Section    sub-   Grp.  MT    MT    Ext.   NUMBER\n    \
    \                            TLV#   Adr.  Port  Cap.  Reach\n   IANA has entered\
    \ the newly assigned sub-TLV numbers in the above\n   table in the relevant existing\
    \ sub-TLV registries, as determined by\n   which column has an X for that sub-TLV.\
    \  For the sub-TLVs from\n   NICKNAME through and including VLAN-GROUP, which\
    \ previously existed\n   only in the registry of sub-TLVs under TLV 242, IANA\
    \ has added each\n   sub-TLV with the same sub-TLV number to the existing registry\
    \ for\n   sub-TLVs under TLV 144.\n"
- title: 5.3.  PDUs
  contents:
  - "5.3.  PDUs\n   The IS-IS PDUs registry remains as established in [RFC6326] except\n\
    \   that the references to [RFC6326] are updated to reference this\n   document.\n"
- title: 5.4.  Reserved and Capability Bits
  contents:
  - "5.4.  Reserved and Capability Bits\n   Any reserved bits (R), bits in reserved\
    \ fields (RESV), or\n   capabilities bits in the PORT-TRILL-VER and TRILL-VER\
    \ sub-TLVs, which\n   are specified herein as \"MUST be sent as zero and ignored\
    \ on receipt\"\n   or the like, are allocated based on IETF Review [RFC5226].\n\
    \   Two sub-registries have been created within the TRILL Parameters\n   Registry\
    \ as follows:\n      Sub-Registry Name: TRILL-VER Sub-TLV Capability Flags\n \
    \     Registration Procedures: IETF Review\n      Reference: (This document)\n\
    \       Bit   Description                       Reference\n      ===== =============\
    \                     ===========\n        0    Affinity sub-TLV support.    \
    \     [Affinity]\n        1    FGL-safe                          [RFC7172]\n \
    \      2-13  Unassigned\n      14-31  Extended header flag support.     [RFC7179]\n\
    \      Sub-Registry Name: PORT-TRILL-VER Sub-TLV Capability Flags\n      Registration\
    \ Procedures: IETF Review\n      Reference: (This document)\n       Bit   Description\
    \                       Reference\n      ===== =============                 \
    \    ===========\n        0    Hello reduction support.          [RFC7180]\n \
    \      1-2   Unassigned\n       3-13  Hop-by-hop extended flag support. [RFC7179]\n\
    \      14-31  Unassigned\n"
- title: 5.5.  TRILL Neighbor Record Flags
  contents:
  - "5.5.  TRILL Neighbor Record Flags\n   A sub-registry has been created within\
    \ the TRILL Parameters Registry\n   as follows:\n      Sub-Registry Name: TRILL\
    \ Neighbor TLV NEIGHBOR RECORD Flags\n      Registration Procedures: Standards\
    \ Action\n      Reference: (This document)\n      Bit Short Name   Description\
    \            Reference\n      ==============  =============          ===========================\n\
    \       0   Fail       Failed MTU test        [RFC6325][RFC7176][RFC7177]\n  \
    \     1   OOMF       Offering OOMF service  [RFC7180]\n      2-7  -          Unassigned\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   For general TRILL protocol security considerations,\
    \ see the TRILL\n   base protocol standard [RFC6325].\n   This document raises\
    \ no new security issues for IS-IS.  IS-IS\n   security may be used to secure\
    \ the IS-IS messages discussed here.\n   See [RFC5304] and [RFC5310].  Even when\
    \ IS-IS authentication is used,\n   replays of Hello packets can create denial-of-service\
    \ conditions; see\n   [RFC6039] for details.  These issues are similar in scope\
    \ to those\n   discussed in Section 6.2 of [RFC6325], and the same mitigations\
    \ may\n   apply.\n"
- title: 7.  Changes from RFC 6326
  contents:
  - "7.  Changes from RFC 6326\n   Non-editorial changes from [RFC6326] are summarized\
    \ in the list\n   below:\n   1.  Added five sub-TLVs under the Group Address (GADDR)\
    \ TLV covering\n       VLAN-labeled IPv4 and IPv6 addresses and fine-grained-labeled\n\
    \       MAC, IPv4, and IPv6 addresses (Sections 2.1.2, 2.1.3, 2.1.4,\n       2.1.5,\
    \ and 2.1.6).\n   2.  Added the PORT-TRILL-VER sub-TLV (Section 2.2.4).\n   3.\
    \  Added the VLANs-Appointed sub-TLV (Section 2.2.5).\n   4.  Changed the TRILL-VER\
    \ sub-TLV as listed below.\n       a.  Added 4 bytes of TRILL Header extended\
    \ flags and capabilities\n           supported information.\n       b.  Required\
    \ that the TRILL-VER sub-TLV appear in LSP number\n           zero.\n       The\
    \ above changes to TRILL-VER are backward compatible because\n       the [RFC6326]-conformant\
    \ implementations of TRILL thus far have\n       only supported version zero and\
    \ not supported any optional\n       capabilities or extended flags, the level\
    \ of support indicated by\n       the absence of the TRILL-VER sub-TLV.  Thus,\
    \ if an\n       [RFC6326]-conformant implementation of TRILL rejects this sub-TLV\n\
    \       due to the changes specified in this document, it will, at worst,\n  \
    \     decide that support of version zero and no extended flags or\n       capabilities\
    \ is indicated, which is the best an\n       [RFC6326]-conformant implementation\
    \ of TRILL can do anyway.\n       Similarly, a TRILL implementation that supports\
    \ TRILL-VER as\n       specified herein and rejects TRILL-VER sub-TLVs in an\n\
    \       [RFC6326]-conformant TRILL implementation because they are not in\n  \
    \     LSP number zero will decide that the implementation supports only\n    \
    \   version zero with no extended flag or capabilities support, which\n      \
    \ will be correct (Section 2.3.1).\n   5.  Clarified the use of invalid VLAN IDs\
    \ (0x000 and 0xFFF) in the\n       Appointed Forwarders sub-TLV and the Interested\
    \ VLANs and\n       Spanning Tree Roots sub-TLV (Sections 2.2.3 and 2.3.6).\n\
    \   6.  Added the Interested Labels and Spanning Tree Roots sub-TLV to\n     \
    \  indicate attachment of an IS to a fine-grained label [RFC7172]\n       analogous\
    \ to the existing Interested VLANs and Spanning Tree\n       Roots sub-TLV for\
    \ VLANs (Section 2.3.8).\n   7.  Added the RBridge Channel Protocols sub-TLV so\
    \ ISs can announce\n       the RBridge Channel protocols they support (Section\
    \ 2.3.9).\n   8.  Permitted specification of the length of the link SNPA field\
    \ in\n       TRILL Neighbor TLVs.  This change is backward compatible because\n\
    \       the size of 6 bytes is specially encoded as zero, the previous\n     \
    \  value of the bits in the new SIZE field (Section 2.5).\n   9.  Made the size\
    \ of the MTU PDU Header Probe Source ID and Ack\n       Source ID fields be the\
    \ ID Length from the IS-IS PDU Header\n       rather than the fixed value 6 (Section\
    \ 3).\n   10. For robustness, required that LSP number zero PDUs be originated\n\
    \       as no larger than 1470 bytes but processed regardless of size\n      \
    \ (Section 4.4).\n   11. Required that the originatingLSPBufferSize TLV, if present,\n\
    \       appear in LSP number zero (Section 4.5).\n   12. Created sub-registries\
    \ for and specified the IANA Considerations\n       policy for reserved and capability\
    \ bits in the TRILL version sub-\n       TLVs (Section 5.4).\n   13. Added the\
    \ distribution tree Affinity sub-TLV so ISs can request\n       distribution tree\
    \ attachments (Section 2.3.10).\n   14. Added the LABEL-GROUP sub-TLV analogous\
    \ to the VLAN-GROUP sub-TLV\n       (Section 2.3.11).\n   15. Added multi-topology\
    \ to permit sub-TLVs previously only in the\n       Router Capability TLV to also\
    \ appear in the MT-Capability TLV and\n       to permit the MTU sub-TLV previously\
    \ limited to the Extended\n       Reachability TLV to also appear in the MT-ISN\
    \ TLV.\n   16. Added a sub-registry for Neighbor TLV Neighbor RECORD flag bits\n\
    \       (Section 5.5).\n   17. Explicitly stated that if the number of sources\
    \ in a GADDR-TLV\n       sub-TLV is zero, it indicates a listener for (*,G), that\
    \ is, a\n       listener not restricted by source (Section 2.1).\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [ISO-10589]\n              International Organization\
    \ for Standardization,\n              \"Intermediate System to Intermediate System\
    \ intra-domain\n              routeing information exchange protocol for use in\n\
    \              conjunction with the protocol for providing the\n             \
    \ connectionless-mode network service (ISO 8473)\", Second\n              Edition,\
    \ November 2002.\n   [RFC1195]  Callon, R., \"Use of OSI IS-IS for routing in\
    \ TCP/IP and\n              dual environments\", RFC 1195, December 1990.\n  \
    \ [RFC1982]  Elz, R. and R. Bush, \"Serial Number Arithmetic\", RFC 1982,\n  \
    \            August 1996.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC4971]  Vasseur, JP., Ed., Shen, N., Ed., and R. Aggarwal, Ed.,\n     \
    \         \"Intermediate System to Intermediate System (IS-IS)\n             \
    \ Extensions for Advertising Router Information\", RFC 4971,\n              July\
    \ 2007.\n   [RFC5120]  Przygienda, T., Shen, N., and N. Sheth, \"M-ISIS: Multi\n\
    \              Topology (MT) Routing in Intermediate System to\n             \
    \ Intermediate Systems (IS-ISs)\", RFC 5120, February 2008.\n   [RFC5226]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5305]\
    \  Li, T. and H. Smit, \"IS-IS Extensions for Traffic\n              Engineering\"\
    , RFC 5305, October 2008.\n   [RFC6165]  Banerjee, A. and D. Ward, \"Extensions\
    \ to IS-IS for Layer-2\n              Systems\", RFC 6165, April 2011.\n   [RFC6325]\
    \  Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani,\
    \ \"Routing Bridges (RBridges): Base Protocol\n              Specification\",\
    \ RFC 6325, July 2011.\n   [RFC6328]  Eastlake 3rd, D., \"IANA Considerations\
    \ for Network Layer\n              Protocol Identifiers\", BCP 164, RFC 6328,\
    \ July 2011.\n   [RFC6329]  Fedyk, D., Ed., Ashwood-Smith, P., Ed., Allan, D.,\
    \ Bragg,\n              A., and P. Unbehagen, \"IS-IS Extensions Supporting IEEE\n\
    \              802.1aq Shortest Path Bridging\", RFC 6329, April 2012.\n   [RFC6439]\
    \  Perlman, R., Eastlake, D., Li, Y., Banerjee, A., and F.\n              Hu,\
    \ \"Routing Bridges (RBridges): Appointed Forwarders\",\n              RFC 6439,\
    \ November 2011.\n   [RFC7172]  Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman,\
    \ R., and\n              D. Dutt, \"Transparent Interconnection of Lots of Links\n\
    \              (TRILL): Fine-Grained Labeling\", RFC 7172, May 2014.\n   [RFC7177]\
    \  Eastlake 3rd, D., Perlman, R., Ghanwani, A., Yang, Y., and\n              V.\
    \ Manral, \"Transparent Interconnection of Lots of Links\n              (TRILL):\
    \ Adjacency\", RFC 7177, May 2014.\n   [RFC7178]  Eastlake 3rd, D., Manral, V.,\
    \ Li, Y., Aldrin, S., and D.\n              Ward, \"Transparent Interconnection\
    \ of Lots of Links\n              (TRILL): RBridge Channel Support\", RFC 7178,\
    \ May 2014.\n   [RFC7179]  Eastlake 3rd, D., Ghanwani, A., Manral, V., Li, Y.,\
    \ and C.\n              Bestler, \"Transparent Interconnection of Lots of Links\n\
    \              (TRILL): Header Extension\", RFC 7179, May 2014.\n   [RFC7180]\
    \  Eastlake 3rd, D., Zhang, M., Ghanwani, A., Manral, V., and\n              A.\
    \  Banerjee, \"Transparent Interconnection of Lots of\n              Links (TRILL):\
    \ Clarifications, Corrections, and Updates\",\n              RFC 7180, May 2014.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [Err2869]  RFC Errata, Errata ID 2869, RFC 6326,\n\
    \              <http://www.rfc-editor.org>.\n   [RFC5304]  Li, T. and R. Atkinson,\
    \ \"IS-IS Cryptographic\n              Authentication\", RFC 5304, October 2008.\n\
    \   [RFC5310]  Bhatia, M., Manral, V., Li, T., Atkinson, R., White, R.,\n    \
    \          and M. Fanto, \"IS-IS Generic Cryptographic\n              Authentication\"\
    , RFC 5310, February 2009.\n   [RFC6039]  Manral, V., Bhatia, M., Jaeggli, J.,\
    \ and R. White, \"Issues\n              with Existing Cryptographic Protection\
    \ Methods for Routing\n              Protocols\", RFC 6039, October 2010.\n  \
    \ [RFC6326]  Eastlake, D., Banerjee, A., Dutt, D., Perlman, R., and A.\n     \
    \         Ghanwani, \"Transparent Interconnection of Lots of Links\n         \
    \     (TRILL) Use of IS-IS\", RFC 6326, July 2011.\n   [RFC7042]  Eastlake 3rd,\
    \ D. and J. Abley, \"IANA Considerations and\n              IETF Protocol and\
    \ Documentation Usage for IEEE 802\n              Parameters\", BCP 141, RFC 7042,\
    \ October 2013.\n   [RFC7175]  Manral, V., Eastlake 3rd, D., Ward, D., and A.\
    \ Banerjee,\n              \"Transparent Interconnection of Lots of Links (TRILL):\n\
    \              Bidirectional Forwarding Detection (BFD) Support\", RFC\n     \
    \         7175, May 2014.\n   [Affinity] Senevirathne, T., Pathangi, J., and J.\
    \ Hudson,\n              \"Coordinated Multicast Trees (CMT) for TRILL\", Work\
    \ in\n              Progress, April 2014.\n   [MultiLevel]\n              Perlman,\
    \ R., Eastlake 3rd, D., Ghanwani, A., and H. Zhai,\n              \"Flexible Multilevel\
    \ TRILL (Transparent Interconnection of\n              Lots of Links)\", Work\
    \ in Progress, January 2014.\n   [Resilient]\n              Zhang, M. Senevirathne,\
    \ T., Pathangi, J., Banerjee, A.,\n              and A. Ghanwani, \"TRILL Resilient\
    \ Distribution Trees\",\n              Work in Progress, December 2013.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors gratefully acknowledge the contributions\
    \ and reviews by\n   the following individuals: Ross Callon, Spencer Dawkins,\
    \ Adrian\n   Farrel, Alexey Melnikov, Radia Perlman, Carlos Pignataro, and Joe\n\
    \   Touch.\n   The authors also acknowledge the contributions to [RFC6326] by\
    \ the\n   following individuals: Mike Shand, Stewart Bryant, Dino Farinacci,\n\
    \   Les Ginsberg, Sam Hartman, Dan Romascanu, Dave Ward, and Russ White.\n   In\
    \ particular, thanks to Mike Shand for his detailed and helpful\n   comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Donald Eastlake 3rd\n   Huawei Technologies\n   155 Beaver\
    \ Street\n   Milford, MA 01757\n   USA\n   Phone: +1-508-333-2270\n   EMail: d3e3e3@gmail.com\n\
    \   Tissa Senevirathne\n   Cisco Systems\n   375 East Tasman Drive,\n   San Jose,\
    \ CA 95134\n   USA\n   Phone: +1-408-853-2291\n   EMail: tsenevir@cisco.com\n\
    \   Anoop Ghanwani\n   Dell\n   5450 Great America Parkway\n   Santa Clara, CA\
    \  95054\n   USA\n   EMail: anoop@alumni.duke.edu\n   Dinesh Dutt\n   Cumulus\
    \ Networks\n   1089 West Evelyn Avenue\n   Sunnyvale, CA 94086\n   USA\n   EMail:\
    \ ddutt.ietf@hobbesdutt.com\n   Ayan Banerjee\n   Insieme Networks\n   210 West\
    \ Tasman Drive\n   San Jose, CA 95134\n   USA\n   EMail: ayabaner@gmail.com\n"
