- contents:
  - '           Overview and Framework for Internationalized Email

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Full use of electronic mail throughout the world requires that\n
    \  (subject to other constraints) people be able to use close variations\n   on
    their own names (written correctly in their own languages and\n   scripts) as
    mailbox names in email addresses.  This document\n   introduces a series of specifications
    that define mechanisms and\n   protocol extensions needed to fully support internationalized
    email\n   addresses.  These changes include an SMTP extension and extension of\n
    \  email header syntax to accommodate UTF-8 data.  The document set also\n   includes
    discussion of key assumptions and issues in deploying fully\n   internationalized
    email.  This document is a replacement for RFC\n   4952; it reflects additional
    issues identified since that document\n   was published.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6530.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  4\n   2.  Role of This Specification . . . . . . . . . . . . . .
    . . . .  4\n   3.  Problem Statement  . . . . . . . . . . . . . . . . . . . .
    . .  5\n   4.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 6\n     4.1.  Mail User and Mail Transfer Agents . . . . . . . . . . . .  6\n
    \    4.2.  Address Character Sets . . . . . . . . . . . . . . . . . .  7\n     4.3.
    \ User Types . . . . . . . . . . . . . . . . . . . . . . . .  7\n     4.4.  Messages
    . . . . . . . . . . . . . . . . . . . . . . . . .  8\n     4.5.  Mailing Lists
    \ . . . . . . . . . . . . . . . . . . . . . .  8\n     4.6.  Conventional Message
    and Internationalized Message . . . .  8\n     4.7.  Undeliverable Messages, Notification,
    and Delivery\n           Receipts . . . . . . . . . . . . . . . . . . . . . .
    . . .  8\n   5.  Overview of the Approach and Document Plan . . . . . . . . .
    .  9\n   6.  Review of Experimental Results . . . . . . . . . . . . . . . .  9\n
    \  7.  Overview of Protocol Extensions and Changes  . . . . . . . . . 10\n     7.1.
    \ SMTP Extension for Internationalized Email Address . . . . 10\n     7.2.  Transmission
    of Email Header Fields in UTF-8 Encoding  . . 11\n     7.3.  SMTP Service Extension
    for DSNs  . . . . . . . . . . . . . 12\n   8.  Downgrading before and after SMTP
    Transactions . . . . . . . . 12\n     8.1.  Downgrading before or during Message
    Submission  . . . . . 13\n     8.2.  Downgrading or Other Processing after Final
    SMTP\n           Delivery . . . . . . . . . . . . . . . . . . . . . . . . . 14\n
    \  9.  Downgrading in Transit . . . . . . . . . . . . . . . . . . . . 15\n   10.
    User Interface and Configuration Issues  . . . . . . . . . . . 15\n     10.1.
    Choices of Mailbox Names and Unicode Normalization . . . . 15\n   11. Additional
    Issues  . . . . . . . . . . . . . . . . . . . . . . 17\n     11.1. Impact on URIs
    and IRIs  . . . . . . . . . . . . . . . . . 17\n     11.2. Use of Email Addresses
    as Identifiers  . . . . . . . . . . 17\n     11.3. Encoded Words, Signed Messages,
    and Downgrading  . . . . . 18\n     11.4. Other Uses of Local Parts  . . . . .
    . . . . . . . . . . . 18\n     11.5. Non-Standard Encapsulation Formats . . .
    . . . . . . . . . 19\n   12. Key Changes from the Experimental Protocols and Framework
    \ . . 19\n   13. Security Considerations  . . . . . . . . . . . . . . . . . .
    . 19\n   14. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 21\n
    \  15. References . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n     15.1.
    Normative References . . . . . . . . . . . . . . . . . . . 21\n     15.2. Informative
    References . . . . . . . . . . . . . . . . . . 22\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In order to use internationalized email addresses, it is
    necessary to\n   internationalize both the domain part and the local part of email\n
    \  addresses.  The domain part of email addresses is already\n   internationalized
    [RFC5890], while the local part is not.  Without\n   the extensions specified
    in this document, the mailbox name is\n   restricted to a subset of 7-bit ASCII
    [RFC5321].  Though MIME\n   [RFC2045] enables the transport of non-ASCII data,
    it does not\n   provide a mechanism for internationalized email addresses.  In
    RFC\n   2047 [RFC2047], MIME defines an encoding mechanism for some specific\n
    \  message header fields to accommodate non-ASCII data.  However, it\n   does
    not permit the use of email addresses that include non-ASCII\n   characters.  Without
    the extensions defined here, or some equivalent\n   set, the only way to incorporate
    non-ASCII characters in any part of\n   email addresses is to use RFC 2047 coding
    to embed them in what RFC\n   5322 [RFC5322] calls the \"display name\" (known
    as a \"name phrase\" or\n   by other terms elsewhere) of the relevant header fields.
    \ Information\n   coded into the display name is invisible in the message envelope
    and,\n   for many purposes, is not part of the address at all.\n   This document
    is a replacement for RFC 4952 [RFC4952]; it reflects\n   additional issues, shared
    terminology, and some architectural changes\n   identified since that document
    was published.  It obsoletes that\n   document.  The experimental descriptions
    of in-transit downgrading\n   [RFC5504] [RFC5825] are now irrelevant and no longer
    needed due to\n   the changes discussed in Section 12.  The RFC Editor is requested
    to\n   move all three of those documents to Historic.\n   The pronouns \"he\"
    and \"she\" are used interchangeably to indicate a\n   human of indeterminate
    gender.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL
    NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in BCP 14, RFC 2119\n
    \  [RFC2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  Role of This Specification\n   This document presents the overview and framework
    for an approach to\n   the next stage of email internationalization.  This new
    stage\n   requires not only internationalization of addresses and header\n   fields,
    but also associated transport and delivery models.  A prior\n   version of this
    specification, RFC 4952 [RFC4952], also provided an\n   introduction to a series
    of experimental protocols [RFC5335]\n   [RFC5336] [RFC5337] [RFC5504] [RFC5721]
    [RFC5738] [RFC5825].  This\n   revised form provides overview and conceptual information
    for the\n   Standards Track successors of a subset of those protocols.  Details\n
    \  of the documents and the relationships among them appear in Section 5\n   and
    a discussion of what was learned from the experimental protocols\n   and their
    implementations appears in Section 6.\n   Taken together, these specifications
    provide the details for a way to\n   implement and support internationalized email.
    \ The document itself\n   describes how the various elements of email internationalization
    fit\n   together and the relationships among the primary specifications\n   associated
    with message transport, header formats, and handling.\n   This document, and others
    that comprise the collection described\n   above, assume a reasonable familiarity
    with the basic Internet\n   electronic mail specifications and terminology [RFC5321]
    [RFC5322]\n   and the MIME [RFC2045] and 8BITMIME [RFC6152] ones as well.  While\n
    \  not strictly required to implement this specification, a general\n   familiarity
    with the terminology and functions of IDNA [RFC5890]\n   [RFC5891] [RFC5892] [RFC5893]
    [RFC5894] are also assumed.\n"
  title: 2.  Role of This Specification
- contents:
  - "3.  Problem Statement\n   Internationalizing Domain Names in Applications (IDNA)
    [RFC5890]\n   permits internationalized domain names, but deployment has not yet\n
    \  reached most users.  One of the reasons for this is that we do not\n   yet
    have fully internationalized naming schemes.  Domain names are\n   just one of
    the various names and identifiers that are required to be\n   internationalized.
    \ In many contexts, until more of those identifiers\n   are internationalized,
    internationalized domain names alone have\n   little value.\n   Email addresses
    are prime examples of why it is not good enough to\n   just internationalize the
    domain name.  As most observers have\n   learned from experience, users strongly
    prefer email addresses that\n   resemble names or initials to those involving
    seemingly meaningless\n   strings of letters or numbers.  Unless the entire email
    address can\n   use familiar characters and formats, users will perceive email
    as\n   being culturally unfriendly.  If the names and initials used in email\n
    \  addresses can be expressed in the native languages and writing\n   systems
    of the users, the Internet will be perceived as more natural,\n   especially by
    those whose native language is not written in a subset\n   of a Roman-derived
    script.\n   Internationalization of email addresses is not merely a matter of\n
    \  changing the SMTP envelope; or of modifying the \"From:\", \"To:\", and\n   \"Cc:\"
    header fields; or of permitting upgraded Mail User Agents\n   (MUAs) to decode
    a special coding and respond by displaying local\n   characters.  To be perceived
    as usable, the addresses must be\n   internationalized and handled consistently
    in all of the contexts in\n   which they occur.  This requirement has far-reaching
    implications:\n   collections of patches and workarounds are not adequate.  Even
    if\n   they were adequate, a workaround-based approach may result in an\n   assortment
    of implementations with different sets of patches and\n   workarounds having been
    applied with consequent user confusion about\n   what is actually usable and supported.
    \ Instead, we need to build a\n   fully internationalized email environment, focusing
    on permitting\n   efficient communication among those who share a language and
    writing\n   system.  That, in turn, implies changes to the mail header\n   environment
    to permit those header fields that are appropriately\n   internationalized to
    utilize the full range of Unicode characters, an\n   SMTP extension to permit
    UTF-8 [RFC3629] [RFC5198] mail addressing\n   and delivery of those extended header
    fields, support for\n   internationalization of delivery and service notifications
    [RFC3461]\n   [RFC3464], and (finally) a requirement for support of the 8BITMIME\n
    \  SMTP extension [RFC6152] so that all of these can be transported\n   through
    the mail system without having to overcome the limitation\n   that header fields
    do not have content-transfer-encodings.\n"
  title: 3.  Problem Statement
- contents:
  - "4.  Terminology\n   This document assumes a reasonable understanding of the protocols
    and\n   terminology of the core email standards as documented in RFC 5321\n   [RFC5321]
    and RFC 5322 [RFC5322].\n"
  - contents:
    - "4.1.  Mail User and Mail Transfer Agents\n   Much of the description in this
      document depends on the abstractions\n   of \"Mail Transfer Agent\" (\"MTA\")
      and \"Mail User Agent\" (\"MUA\").\n   However, it is important to understand
      that those terms and the\n   underlying concepts postdate the design of the
      Internet's email\n   architecture and the application of the \"protocols on
      the wire\"\n   principle to it.  That email architecture, as it has evolved,
      and\n   that \"on the wire\" principle have prevented any strong and\n   standardized
      distinctions about how MTAs and MUAs interact on a given\n   origin or destination
      host (or even whether they are separate).\n   However, the term \"final delivery
      MTA\" is used in this document in a\n   fashion equivalent to the term \"delivery
      system\" or \"final delivery\n   system\" of RFC 5321.  This is the SMTP server
      that controls the\n   format of the local parts of addresses and is permitted
      to inspect\n   and interpret them.  It receives messages from the network for\n
      \  delivery to mailboxes or for other local processing, including any\n   forwarding
      or aliasing that changes envelope addresses, rather than\n   relaying.  From
      the perspective of the network, any local delivery\n   arrangements such as
      saving to a message store, handoff to specific\n   message delivery programs
      or agents, and mechanisms for retrieving\n   messages are all \"behind\" the
      final delivery MTA and hence are not\n   part of the SMTP transport or delivery
      process.\n"
    title: 4.1.  Mail User and Mail Transfer Agents
  - contents:
    - "4.2.  Address Character Sets\n   In this document, an address is \"all-ASCII\",
      or just an \"ASCII\n   address\", if every character in the address is in the
      ASCII character\n   repertoire [ASCII]; an address is \"non-ASCII\", or an \"i18n-address\",\n
      \  if any character is not in the ASCII character repertoire.  Such\n   addresses
      MAY be restricted in other ways, but those restrictions are\n   not relevant
      to this definition.  The term \"all-ASCII\" is also\n   applied to other protocol
      elements when the distinction is important,\n   with \"non-ASCII\" or \"internationalized\"
      as its opposite.\n   The umbrella term to describe the email address internationalization\n
      \  specified by this document and its companion documents is \"SMTPUTF8\".\n
      \  For example, an address permitted by this specification is referred\n   to
      as a \"SMTPUTF8 (compliant) address\".\n   Please note that, according to the
      definitions given here, the set of\n   all \"all-ASCII\" addresses and the set
      of all \"non-ASCII\" addresses\n   are mutually exclusive.  The set of all addresses
      permitted when\n   SMTPUTF8 appears is the union of these two sets.\n"
    title: 4.2.  Address Character Sets
  - contents:
    - "4.3.  User Types\n   An \"ASCII user\" (i) exclusively uses email addresses
      that contain\n   ASCII characters only, and (ii) cannot generate recipient addresses\n
      \  that contain non-ASCII characters.\n   An \"internationalized email user\"
      has one or more non-ASCII email\n   addresses, or is able to generate recipient
      addresses that contain\n   non-ASCII characters.  Such a user may have ASCII
      addresses too; if\n   the user has more than one email account and a corresponding
      address,\n   or more than one alias for the same address, he or she has some\n
      \  method to choose which address to use on outgoing email.  Note that\n   under
      this definition, it is not possible to tell from an ASCII\n   address if the
      owner of that address is an internationalized email\n   user or not.  (A non-ASCII
      address implies a belief that the owner of\n   that address is an internationalized
      email user.)  There is no such\n   thing as an \"internationalized email user
      message\"; the term applies\n   only to users and their agents and capabilities.
      \ In particular, the\n   use of non-ASCII, and hence presumably internationalized,
      message\n   content is an integral part of the MIME specifications [RFC2045]
      and\n   does not require these extensions (although it is compatible with\n
      \  them).\n"
    title: 4.3.  User Types
  - contents:
    - "4.4.  Messages\n   A \"message\" is sent from one user (the sender) using a
      particular\n   email address to one or more other recipient email addresses
      (often\n   referred to just as \"users\" or \"recipient users\").\n"
    title: 4.4.  Messages
  - contents:
    - "4.5.  Mailing Lists\n   A \"mailing list\" is a mechanism whereby a message
      may be distributed\n   to multiple recipients by sending it to one recipient
      address.  An\n   agent (typically not a human being) at that single address
      then\n   causes the message to be redistributed to the target recipients.\n
      \  This agent sets the envelope return address of the redistributed\n   message
      to a different address from that of the original single\n   recipient message.
      \ Using a different envelope return address\n   (reverse-path) causes error
      (and other automatically generated)\n   messages to go to an error-handling
      address.\n   Special provisions for managing mailing lists that might contain
      non-\n   ASCII addresses are discussed in a document that is specific to that\n
      \  topic [RFC5983] and its expected successor [RFC5983bis-MailingList].\n"
    title: 4.5.  Mailing Lists
  - contents:
    - "4.6.  Conventional Message and Internationalized Message\n   o  A conventional
      message is one that does not use any extension\n      defined in the SMTP extension
      document [RFC6531] or in the\n      UTF8header document [RFC6532] in this set
      of specifications, and\n      is strictly conformant to RFC 5322 [RFC5322].\n
      \  o  An internationalized message is a message utilizing one or more of\n      the
      extensions defined in this set of specifications, so that it\n      is no longer
      conformant to the traditional specification of an\n      email message or its
      transport.\n"
    title: 4.6.  Conventional Message and Internationalized Message
  - contents:
    - "4.7.  Undeliverable Messages, Notification, and Delivery Receipts\n   As specified
      in RFC 5321, a message that is undeliverable for some\n   reason is expected
      to result in notification to the sender.  This can\n   occur in either of two
      ways.  One, typically called \"Rejection\",\n   occurs when an SMTP server returns
      a reply code indicating a fatal\n   error (a \"5yz\" code) or persistently returns
      a temporary failure\n   error (a \"4yz\" code).  The other involves accepting
      the message\n   during SMTP processing and then generating a message to the
      sender,\n   typically known as a \"Non-delivery Notification\" or \"NDN\".  Current\n
      \  practice often favors rejection over NDNs because of the reduced\n   likelihood
      that the generation of NDNs will be used as a spamming\n   technique.  The latter,
      NDN, case is unavoidable if an intermediate\n   MTA accepts a message that is
      then rejected by the next-hop server.\n   A sender MAY also explicitly request
      message receipts [RFC3461] that\n   raise the same issues for these internationalization
      extensions as\n   NDNs.\n"
    title: 4.7.  Undeliverable Messages, Notification, and Delivery Receipts
  title: 4.  Terminology
- contents:
  - "5.  Overview of the Approach and Document Plan\n   This set of specifications
    changes both SMTP and the character\n   encoding of email message headers to permit
    non-ASCII characters to\n   be represented directly.  Each important component
    of the work is\n   described in a separate document.  The document set, whose
    members\n   are described below, also contains Informational documents whose\n
    \  purpose is to provide implementation suggestions and guidance for the\n   protocols.\n
    \  In addition to this document, the following documents make up this\n   specification
    and provide advice and context for it.\n   o  SMTP extension.  The SMTP extension
    document [RFC6531] provides an\n      SMTP extension (as provided for in RFC 5321)
    for internationalized\n      addresses.\n   o  Email message headers in UTF-8.
    \ The email message header document\n      [RFC6532] essentially updates RFC 5322
    to permit some information\n      in email message headers to be expressed directly
    by Unicode\n      characters encoded in UTF-8 when the SMTP extension described\n
    \     above is used.  This document, possibly with one or more\n      supplemental
    ones, will also need to address the interactions with\n      MIME, including relationships
    between SMTPUTF8 and internal MIME\n      headers and content types.\n   o  Extensions
    to delivery status and notification handling to adapt\n      to internationalized
    addresses [RFC6533].\n   o  Forthcoming documents will specify extensions to the
    IMAP protocol\n      [RFC3501] to support internationalized message headers\n
    \     [RFC5738bis-IMAP], parallel extensions to the POP protocol\n      [RFC5721]
    [RFC5721bis-POP3], and some common properties of the two\n      [POPIMAP-downgrade].\n"
  title: 5.  Overview of the Approach and Document Plan
- contents:
  - "6.  Review of Experimental Results\n   The key difference between this set of
    protocols and the experimental\n   set that preceded them [RFC5335] [RFC5336]
    [RFC5337] [RFC5504]\n   [RFC5721] [RFC5738] [RFC5825] is that the earlier group
    provided a\n   mechanism for in-transit downgrading of messages (described in
    detail\n   in RFC 5504).  That mechanism permitted, and essentially required,\n
    \  that each non-ASCII address be accompanied by an all-ASCII\n   equivalent.
    \ That, in turn, raised security concerns associated with\n   pairing of addresses
    that could not be authenticated.  It also\n   introduced the first incompatible
    change to Internet mail addressing\n   in many years, raising concerns about interoperability
    issues if the\n   new address forms \"leaked\" into legacy email implementations.
    \ After\n   examining experience with the earlier, experimental, predecessors
    of\n   these specifications, the working group that produced them concluded\n
    \  that the advantages of in-transit downgrading, were it feasible\n   operationally,
    would be significant enough to overcome those\n   concerns.\n   That turned out
    not to be the case, with interoperability problems\n   among initial implementations.
    \ Prior to starting on the work that\n   led to this set of specifications, the
    WG concluded that the\n   combination of requirements and long-term implications
    of that\n   earlier model were too complex to be satisfactory and that work\n
    \  should move ahead without it.\n   The other significant change to the protocols
    themselves is that the\n   SMTPUTF8 keyword is now required as an SMTP client
    announcement if\n   the extension is needed; in the experimental version, only
    the server\n   announcement that an extended envelope and/or content were permitted\n
    \  was necessary.\n"
  title: 6.  Review of Experimental Results
- contents:
  - '7.  Overview of Protocol Extensions and Changes

    '
  - contents:
    - "7.1.  SMTP Extension for Internationalized Email Address\n   An SMTP extension,
      \"SMTPUTF8\", is specified as follows:\n   o  Permits the use of UTF-8 strings
      in email addresses, both local\n      parts and domain names.\n   o  Permits
      the selective use of UTF-8 strings in email message\n      headers (see Section
      7.2).\n   o  Requires that the server advertise the 8BITMIME extension\n      [RFC6152]
      and that the client support 8-bit transmission so that\n      header information
      can be transmitted without using a special\n      content-transfer-encoding.\n
      \  Some general principles affect the development decisions underlying\n   this
      work.\n   1.  Email addresses enter subsystems (such as a user interface) that\n
      \      may perform charset conversions or other encoding changes.  When\n       the
      local part of the address includes characters outside the\n       ASCII character
      repertoire, use of ASCII-compatible encoding\n       (ACE) [RFC3492] [RFC5890]
      in the domain part is discouraged to\n       promote consistent processing of
      characters throughout the\n       address.\n   2.  An SMTP relay MUST\n       *
      \ Either recognize the format explicitly, agreeing to do so via\n          an
      ESMTP option, or\n       *  Reject the message or, if necessary, return a non-delivery\n
      \         notification message, so that the sender can make another\n          plan.\n
      \  3.  If the message cannot be forwarded because the next-hop system\n       cannot
      accept the extension, it MUST be rejected or a non-\n       delivery message
      MUST be generated and sent.\n   4.  In the interest of interoperability, charsets
      other than UTF-8\n       are prohibited in mail addresses and message headers
      being\n       transmitted over the Internet.  There is no practical way to\n
      \      identify multiple charsets properly with an extension similar to\n       this
      without introducing great complexity.\n   Conformance to the group of standards
      specified here for email\n   transport and delivery requires implementation
      of the SMTP extension\n   specification and the UTF-8 header specification.
      \ If the system\n   implements IMAP or POP, it MUST conform to the internationalized
      IMAP\n   [RFC5738bis-IMAP] or POP [RFC5721bis-POP3] specifications\n   respectively.\n"
    title: 7.1.  SMTP Extension for Internationalized Email Address
  - contents:
    - "7.2.  Transmission of Email Header Fields in UTF-8 Encoding\n   There are many
      places in MUAs or in a user presentation in which\n   email addresses or domain
      names appear.  Examples include the\n   conventional \"From:\", \"To:\", or
      \"Cc:\" header fields; \"Message-ID:\"\n   and \"In-Reply-To:\" header fields
      that normally contain domain names\n   (but that may be a special case); and
      in message bodies.  Each of\n   these must be examined from an internationalization
      perspective.  The\n   user will expect to see mailbox and domain names in local
      characters,\n   and to see them consistently.  If non-obvious encodings, such
      as\n   protocol-specific ACE variants, are used, the user will inevitably,\n
      \  if only occasionally, see them rather than \"native\" characters and\n   will
      find that discomfiting or astonishing.  Similarly, if different\n   codings
      are used for mail transport and message bodies, the user is\n   particularly
      likely to be surprised, if only as a consequence of the\n   long-established
      \"things leak\" principle.  The only practical way to\n   avoid these sources
      of discomfort, in both the medium and the longer\n   term, is to have the encodings
      used in transport be as similar to the\n   encodings used in message headers
      and message bodies as possible.\n   When email local parts are internationalized,
      they SHOULD be\n   accompanied by arrangements for the message headers to be
      in the\n   fully internationalized form.  That form SHOULD use UTF-8 rather
      than\n   ASCII as the base character set for the contents of header fields\n
      \  (protocol elements such as the header field names themselves are\n   unchanged
      and remain entirely in ASCII).  For transition purposes and\n   compatibility
      with legacy systems, this can be done by extending the\n   traditional MIME
      encoding models for non-ASCII characters in headers\n   [RFC2045] [RFC2231],
      but even these should be based on UTF-8, rather\n   than other encodings, if
      at all possible [RFC6055].  However, the\n   target is fully internationalized
      message headers, as discussed in\n   [RFC6532] and not an extended and painful
      transition.\n"
    title: 7.2.  Transmission of Email Header Fields in UTF-8 Encoding
  - contents:
    - "7.3.  SMTP Service Extension for DSNs\n   The existing Delivery Status Notifications
      (DSNs) specification\n   [RFC3461], which is a Draft Standard, is limited to
      ASCII text in the\n   machine-readable portions of the protocol.  \"International
      Delivery\n   and Disposition Notifications\" [RFC6533] adds a new address type
      for\n   international email addresses so an original recipient address with\n
      \  non-ASCII characters can be correctly preserved even after\n   downgrading.
      \ If an SMTP server advertises both the SMTPUTF8 and the\n   DSN extension,
      that server MUST implement internationalized DSNs\n   including support for
      the ORCPT parameter specified in RFC 3461\n   [RFC3461].\n"
    title: 7.3.  SMTP Service Extension for DSNs
  title: 7.  Overview of Protocol Extensions and Changes
- contents:
  - "8.  Downgrading before and after SMTP Transactions\n   An important issue with
    these extensions is how to handle\n   interactions between systems that support
    non-ASCII addresses and\n   legacy systems that expect ASCII.  There is, of course,
    no problem\n   with ASCII-only systems sending to those that can handle\n   internationalized
    forms because the ASCII forms are just a proper\n   subset.  But, when systems
    that support these extensions send mail,\n   they MAY include non-ASCII addresses
    for senders, receivers, or both\n   and might also provide non-ASCII header information
    other than\n   addresses.  If the extension is not supported by the first-hop
    system\n   (i.e., the SMTP server accessed by the submission server acting as
    an\n   SMTP client), message-originating systems SHOULD be prepared to\n   either
    send conventional envelopes and message headers or to return\n   the message to
    the originating user so the message may be manually\n   downgraded to the traditional
    form, possibly using encoded words\n   [RFC2047] in the message headers.  Of course,
    such transformations\n   imply that the originating user or system must have ASCII-only\n
    \  addresses available for all senders and recipients.  Mechanisms by\n   which
    such addresses may be found or identified are outside the scope\n   of these specifications
    as are decisions about the design of\n   originating systems such as whether any
    required transformations are\n   made by the user, the originating MUA, or the
    submission server.\n   A somewhat more complex situation arises when the first-hop
    system\n   supports these extensions but some subsequent server in the SMTP\n
    \  transmission chain does not.  It is important to note that most cases\n   of
    that situation with forward-pointing addresses will be the result\n   of configuration
    errors: especially if it hosts non-ASCII addresses,\n   a final delivery MTA that
    accepts these extensions SHOULD NOT be\n   configured with lower-preference MX
    hosts that do not.  When the only\n   non-ASCII address being transmitted is backward-pointing
    (e.g., in an\n   SMTP MAIL command), recipient configuration cannot help in general.\n
    \  On the other hand, alternate, all-ASCII addresses for senders are\n   those
    most likely to be authoritatively known by the submission\n   environment or the
    sender herself.  Consequently, if an intermediate\n   SMTP relay that requires
    these extensions then discovers that the\n   next system in the chain does not
    support them, it will have little\n   choice other than to reject or return the
    message.\n   As discussed above, downgrading to an ASCII-only form may occur\n
    \  before or during the initial message submission.  It might also occur\n   after
    the delivery to the final delivery MTA in order to accommodate\n   message stores,
    IMAP or POP servers, or clients that have different\n   capabilities than the
    delivery MTA.  These cases are discussed in the\n   subsections below.\n"
  - contents:
    - "8.1.  Downgrading before or during Message Submission\n   The IETF has traditionally
      avoided specifying the precise behavior of\n   MUAs to provide maximum flexibility
      in the associated user\n   interfaces.  The SMTP standard [RFC5321], Section
      6.4, gives wide\n   latitude to MUAs and submission servers as to what might
      be supplied\n   by the user as long as the result conforms with \"on the wire\"\n
      \  standards once it is injected into the public Internet.  In that\n   tradition,
      the discussion in the remainder of Section 8 is provided\n   as general guidance
      rather than normative requirements.\n   Messages that require these extensions
      will sometimes be transferred\n   to a system that does not support these extensions;
      it is likely that\n   the most common cases will involve the combination of
      ASCII-only\n   forward-pointing addresses with a non-ASCII backward-pointing
      one.\n   Until the extensions described here have been universally implemented\n
      \  in the Internet email environment, senders who prefer to use non-\n   ASCII
      addresses (or raw UTF-8 characters in header fields), even when\n   their intended
      recipients use and expect all-ASCII ones, will need to\n   be especially careful
      about the error conditions that can arise.  The\n   risks are especially great
      in environments in which non-delivery\n   messages (or other indications from
      submission servers) are routinely\n   dropped or ignored.\n   Perhaps obviously,
      the most convenient time to find an ASCII address\n   corresponding to an internationalized
      address is at the originating\n   MUA or closely associated systems.  This can
      occur either before the\n   message is sent or after the internationalized form
      of the message is\n   rejected.  It is also the most convenient time to convert
      a message\n   from the internationalized form into conventional ASCII form or
      to\n   generate a non-delivery message to the sender if either is necessary.\n
      \  At that point, the user has a full range of choices available,\n   including
      changing backward-pointing addresses, contacting the\n   intended recipient
      out of band for an alternate address, consulting\n   appropriate directories,
      arranging for translation of both addresses\n   and message content into a different
      language, and so on.  While it\n   is natural to think of message downgrading
      as optimally being a fully\n   automated process, we should not underestimate
      the capabilities of a\n   user of at least moderate intelligence who wishes
      to communicate with\n   another such user.\n   In this context, one can easily
      imagine modifications to message\n   submission servers (as described in RFC
      6409 [RFC6409]) so that they\n   would perform downgrading operations or perhaps
      even upgrading ones.\n   Such operations would permit receiving messages with
      one or more of\n   the internationalization extensions discussed here and adapting
      the\n   outgoing message, as needed, to respond to the delivery or next-hop\n
      \  environment the submission server encounters.\n"
    title: 8.1.  Downgrading before or during Message Submission
  - contents:
    - "8.2.  Downgrading or Other Processing after Final SMTP Delivery\n   When an
      email message is received by a final delivery MTA, it is\n   usually stored
      in some form.  Then it is retrieved either by software\n   that reads the stored
      form directly or by client software via some\n   email retrieval mechanisms
      such as POP or IMAP.\n   The SMTP extension described in Section 7.1 provides
      protection only\n   in transport.  It does not prevent MUAs and email retrieval\n
      \  mechanisms that have not been upgraded to understand\n   internationalized
      addresses and UTF-8 message headers from accessing\n   stored internationalized
      emails.\n   Since the final delivery MTA (or, to be more specific, its\n   corresponding
      mail storage agent) cannot safely assume that agents\n   accessing email storage
      will always be capable of handling the\n   extensions proposed here, it MAY
      downgrade internationalized emails,\n   specially identify messages that utilize
      these extensions, or both.\n   If either or both of these actions were to be
      taken, the final\n   delivery MTA SHOULD include a mechanism to preserve or
      recover the\n   original internationalized forms without information loss.\n
      \  Preservation of that information is necessary to support access by\n   SMTPUTF8-aware
      agents.\n"
    title: 8.2.  Downgrading or Other Processing after Final SMTP Delivery
  title: 8.  Downgrading before and after SMTP Transactions
- contents:
  - "9.  Downgrading in Transit\n   The base SMTP specification (Section 2.3.11 of
    RFC 5321 [RFC5321])\n   states that \"due to a long history of problems when intermediate\n
    \  hosts have attempted to optimize transport by modifying them, the\n   local-part
    MUST be interpreted and assigned semantics only by the\n   host specified in the
    domain part of the address\".  This is not a new\n   requirement; equivalent statements
    appeared in specifications in 2001\n   [RFC2821] and even in 1989 [RFC1123].\n
    \  Adherence to this rule means that a downgrade mechanism that\n   transforms
    the local part of an email address cannot be utilized in\n   transit.  It can
    only be applied at the endpoints, specifically by\n   the MUA or submission server
    or by the final delivery MTA.\n   One of the reasons for this rule has to do with
    legacy email systems\n   that embed mail routing information in the local part
    of the address\n   field.  Transforming the email address destroys such routing\n
    \  information.  There is no way a server other than the final delivery\n   server
    can know, for example, whether the local part of\n   user%foo@example.com is a
    route (\"user\" is reached via \"foo\") or\n   simply a local address.\n"
  title: 9.  Downgrading in Transit
- contents:
  - "10.  User Interface and Configuration Issues\n   Internationalization of addresses
    and message headers, especially in\n   combination with variations on character
    coding that are inherent to\n   Unicode, may make careful choices of addresses
    and careful\n   configuration of servers and DNS records even more important than\n
    \  they are for traditional Internet email.  It is likely that, as\n   experience
    develops with the use of these protocols, it will be\n   desirable to produce
    one or more additional documents that offer\n   guidance for configuration and
    interfaces.  A document that discusses\n   issues with MUAs, especially with regard
    to downgrading, is expected\n   to be developed.  The subsections below address
    some other issues.\n"
  - contents:
    - "10.1.  Choices of Mailbox Names and Unicode Normalization\n   It has long been
      the case that the email syntax permits choices about\n   mailbox names that
      are unwise in practice, if one actually intends\n   the mailboxes to be accessible
      to a broad range of senders.  The most\n   often cited examples involve the
      use of case-sensitivity and tricky\n   quoting of embedded characters in mailbox
      local parts.  These\n   deliberately unusual constructions are permitted by
      the protocols,\n   and servers are expected to support them.  Although they
      can provide\n   value in special cases, taking advantage of them is almost always
      bad\n   practice unless the intent is to create some form of security by\n   obscurity.\n
      \  In the absence of these extensions, SMTP clients and servers are\n   constrained
      to using only those addresses permitted by RFC 5321.  The\n   local parts of
      those addresses MAY be made up of any ASCII characters\n   except the control
      characters that RFC 5321 prohibits, although some\n   of them MUST be quoted
      as specified there.  It is notable in an\n   internationalization context that
      there is a long history on some\n   systems of using overstruck ASCII characters
      (a character, a\n   backspace, and another character) within a quoted string
      to\n   approximate non-ASCII characters.  This form of internationalization\n
      \  was permitted by RFC 821 [RFC0821] but is prohibited by RFC 5321\n   because
      it requires a backspace character (a prohibited C0 control).\n   Because RFC
      5321 (and its predecessor, RFC 2821) prohibit the use of\n   this character
      in ASCII mailbox names and it is even more problematic\n   (for canonicalization
      and normalization reasons) in non-ASCII\n   strings, backspace MUST NOT appear
      in SMTPUTF8 mailbox names.\n   For the particular case of mailbox names that
      contain non-ASCII\n   characters in the local part, domain part, or both, special
      attention\n   MUST be paid to Unicode normalization [Unicode-UAX15], in part\n
      \  because Unicode strings may be normalized by other processes\n   independent
      of what a mail protocol specifies (this is exactly\n   analogous to what may
      happen with quoting and dequoting in\n   traditional addresses).  Consequently,
      the following principles are\n   offered as advice to those who are selecting
      names for mailboxes:\n   o  In general, it is wise to support addresses in Normalized
      form,\n      using at least Normalization Form NFC.  Except in circumstances
      in\n      which NFKC would map characters together that the parties\n      responsible
      for the destination mail server would prefer to be\n      kept distinguishable,
      supporting the NFKC-conformant form would\n      yield even more predictable
      behavior for the typical user.\n   o  It will usually be wise to support other
      forms of the same local-\n      part string, either as aliases or by normalization
      of strings\n      reaching the delivery server: the sender should not be depended\n
      \     upon to send the strings in normalized form.\n   o  Stated differently
      and in more specific terms, the rules of the\n      protocol for local-part
      strings essentially provide that:\n      *  Unnormalized strings are valid,
      but sufficiently bad practice\n         that they may not work reliably on a
      global basis.  Servers\n         should not depend on clients to send normalized
      forms but\n         should be aware that procedures on client machines outside
      the\n         control of the MUA may cause normalized strings to be sent\n         regardless
      of user intent.\n      *  C0 (and presumably C1) controls (see The Unicode Standard\n
      \        [Unicode]) are prohibited, the first in RFC 5321 and the second\n         by
      an obvious extension from it [RFC5198].\n      *  Other kinds of punctuation,
      spaces, etc., are risky practice.\n         Perhaps they will work, and SMTP
      receiver code is required to\n         handle them without severe errors (even
      if such strings are not\n         accepted in addresses to be delivered on that
      server), but\n         creating dependencies on them in mailbox names that are
      chosen\n         is usually a bad practice and may lead to interoperability\n
      \        problems.\n"
    title: 10.1.  Choices of Mailbox Names and Unicode Normalization
  title: 10.  User Interface and Configuration Issues
- contents:
  - "11.  Additional Issues\n   This section identifies issues that are not covered,
    or not covered\n   comprehensively, as part of this set of specifications, but
    that will\n   require ongoing review as part of deployment of email address and\n
    \  header internationalization.\n"
  - contents:
    - "11.1.  Impact on URIs and IRIs\n   The mailto: schema [RFC6068], and the discussion
      of it in the\n   Internationalized Resource Identifier (IRI) specification [RFC3987],\n
      \  may need to be modified when this work is completed and standardized.\n"
    title: 11.1.  Impact on URIs and IRIs
  - contents:
    - "11.2.  Use of Email Addresses as Identifiers\n   There are a number of places
      in contemporary Internet usage in which\n   email addresses are used as identifiers
      for individuals, including as\n   identifiers to Web servers supporting some
      electronic commerce sites\n   and in some X.509 certificates [RFC5280].  These
      documents do not\n   address those uses, but it is reasonable to expect that
      some\n   difficulties will be encountered when internationalized addresses are\n
      \  first used in those contexts, many of which cannot even handle the\n   full
      range of addresses permitted today.\n"
    title: 11.2.  Use of Email Addresses as Identifiers
  - contents:
    - "11.3.  Encoded Words, Signed Messages, and Downgrading\n   One particular characteristic
      of the email format is its persistency:\n   MUAs are expected to handle messages
      that were originally sent\n   decades ago and not just those delivered seconds
      ago.  As such, MUAs\n   and mail filtering software, such as that specified
      in Sieve\n   [RFC5228], will need to continue to accept and decode header fields\n
      \  that use the \"encoded word\" mechanism [RFC2047] to accommodate non-\n   ASCII
      characters in some header fields.  While extensions to both\n   POP3 [RFC1939]
      and IMAP [RFC3501] have been defined that include\n   automatic upgrading of
      messages that carry non-ASCII information in\n   encoded form -- including RFC
      2047 decoding -- of messages by the\n   POP3 [RFC5721bis-POP3] or IMAP [RFC5738bis-IMAP]
      server, there are\n   message structures and MIME content-types for which that
      cannot be\n   done or where the change would have unacceptable side effects.\n
      \  For example, message parts that are cryptographically signed, using\n   e.g.,
      S/MIME [RFC5751] or Pretty Good Privacy (PGP) [RFC3156], cannot\n   be upgraded
      from the RFC 2047 form to normal UTF-8 characters without\n   breaking the signature.
      \ Similarly, message parts that are encrypted\n   may contain, when decrypted,
      header fields that use the RFC 2047\n   encoding; such messages cannot be 'fully'
      upgraded without access to\n   cryptographic keys.\n   Similar issues may arise
      if messages are signed and then subsequently\n   downgraded, e.g., as discussed
      in Section 8.1, and then an attempt is\n   made to upgrade them to the original
      form and then verify the\n   signatures.  Even the very subtle changes that
      may result from\n   algorithms to downgrade and then upgrade again may be sufficient
      to\n   invalidate the signatures if they impact either the primary or MIME\n
      \  body part headers.  When signatures are present, downgrading must be\n   performed
      with extreme care if at all.\n"
    title: 11.3.  Encoded Words, Signed Messages, and Downgrading
  - contents:
    - "11.4.  Other Uses of Local Parts\n   Local parts are sometimes used to construct
      domain labels, e.g., the\n   local part \"user\" in the address user@domain.example
      could be\n   converted into a host name user.domain.example with its Web space
      at\n   <http://user.domain.example> and the catch-all addresses\n   any.thing.goes@user.domain.example.\n
      \  Such schemes are obviously limited by, among other things, the SMTP\n   rules
      for domain names, and will not work without further\n   restrictions for other
      local parts.  Whether those limitations are\n   relevant to these specifications
      is an open question.  It may be\n   simply another case of the considerable
      flexibility accorded to\n   delivery MTAs in determining the mailbox names they
      will accept and\n   how they are interpreted.\n"
    title: 11.4.  Other Uses of Local Parts
  - contents:
    - "11.5.  Non-Standard Encapsulation Formats\n   Some applications use formats
      similar to the application/mbox format\n   [RFC4155] instead of the message/digest
      form defined in RFC 2046,\n   Section 5.1.5 [RFC2046] to transfer multiple messages
      as single\n   units.  Insofar as such applications assume that all stored messages\n
      \  use the message/rfc822 format described in RFC 2046, Section 5.2.1\n   [RFC2046]
      with ASCII message headers, they are not ready for the\n   extensions specified
      in this series of documents, and special\n   measures may be needed to properly
      detect and process them.\n"
    title: 11.5.  Non-Standard Encapsulation Formats
  title: 11.  Additional Issues
- contents:
  - "12.  Key Changes from the Experimental Protocols and Framework\n   The original
    framework for internationalized email addresses and\n   headers was described
    in RFC 4952 and a subsequent set of\n   experimental protocol documents.  Those
    relationships are described\n   in Section 3.  The key architectural difference
    between the\n   experimental specifications and this newer set is that the earlier\n
    \  specifications supported in-transit downgrading.  Those mechanisms\n   included
    the definition of syntax and functions to support passing\n   alternate, all-ASCII
    addresses with the non-ASCII ones as well as\n   special headers to indicate the
    downgraded status of messages.  Those\n   features were eliminated after experimentation
    indicated that they\n   were more complex and less necessary than had been assumed
    earlier.\n   Those issues are described in more detail in Sections 6 and 9.\n"
  title: 12.  Key Changes from the Experimental Protocols and Framework
- contents:
  - "13.  Security Considerations\n   Any expansion of permitted characters and encoding
    forms in email\n   addresses raises some risks.  There have been discussions on
    so\n   called \"IDN-spoofing\" or \"IDN homograph attacks\".  These attacks\n
    \  allow an attacker (or \"phisher\") to spoof the domain or URLs of\n   businesses
    or other entities.  The same kind of attack is also\n   possible on the local
    part of internationalized email addresses.  It\n   should be noted that the proposed
    fix involving forcing all displayed\n   elements into normalized lowercase works
    for domain names in URLs,\n   but not for email local parts since those are case
    sensitive.\n   Since email addresses are often transcribed from business cards
    and\n   notes on paper, they are subject to problems arising from confusable\n
    \  characters (see [RFC4690]).  These problems are somewhat reduced if\n   the
    domain associated with the mailbox is unambiguous and supports a\n   relatively
    small number of mailboxes whose names follow local system\n   conventions.  They
    are increased with very large mail systems in\n   which users can freely select
    their own addresses.\n   The internationalization of email addresses and message
    headers must\n   not leave the Internet less secure than it is without the required\n
    \  extensions.  The requirements and mechanisms documented in this set\n   of
    specifications do not, in general, raise any new security issues.\n   They do
    require a review of issues associated with confusable\n   characters -- a topic
    that is being explored thoroughly elsewhere\n   (see, e.g., RFC 4690 [RFC4690])
    -- and, potentially, some issues with\n   UTF-8 normalization, discussed in RFC
    3629 [RFC3629], and other\n   transformations.  Normalization and other issues
    associated with\n   transformations and standard forms are also part of the subject
    of\n   work described elsewhere [RFC5198] [RFC5893] [RFC6055].\n   Some issues
    specifically related to internationalized addresses and\n   message headers are
    discussed in more detail in the other documents\n   in this set.  However, in
    particular, caution should be taken that\n   any \"downgrading\" mechanism, or
    use of downgraded addresses, does not\n   inappropriately assume authenticated
    bindings between the\n   internationalized and ASCII addresses.  This potential
    problem can be\n   mitigated somewhat by enforcing the expectation that most or
    all such\n   transformations will be performed prior to final delivery by systems\n
    \  that are presumed to be under the administrative control of the\n   sending
    user (as opposed to being performed in transit by entities\n   that are not under
    the administrative control of the sending user).\n   The new UTF-8 header and
    message formats might also raise, or\n   aggravate, another known issue.  If the
    model creates new forms of an\n   'invalid' or 'malformed' message, then a new
    email attack is created:\n   in an effort to be robust, some or most agents will
    accept such\n   messages and interpret them as if they were well-formed.  If a
    filter\n   interprets such a message differently than the MUA used by the\n   recipient,
    then it may be possible to create a message that appears\n   acceptable under
    the filter's interpretation but that should be\n   rejected under the interpretation
    given to it by that MUA.  Such\n   attacks already have occurred for existing
    messages and encoding\n   layers, e.g., invalid MIME syntax, invalid HTML markup,
    and invalid\n   coding of particular image types.\n   In addition, email addresses
    are used in many contexts other than\n   sending mail, such as for identifiers
    under various circumstances\n   (see Section 11.2).  Each of those contexts will
    need to be\n   evaluated, in turn, to determine whether the use of non-ASCII forms\n
    \  is appropriate and what particular issues they raise.\n   This work will clearly
    affect any systems or mechanisms that are\n   dependent on digital signatures
    or similar integrity protection for\n   email message headers (see also the discussion
    in Section 11.3).\n   Many conventional uses of PGP and S/MIME are not affected
    since they\n   are used to sign body parts but not message headers.  On the other\n
    \  hand, the developing work on DomainKeys Identified Mail (DKIM)\n   [RFC5863]
    will eventually need to consider this work, and vice versa:\n   while this specification
    does not address or solve the issues raised\n   by DKIM and other signed header
    mechanisms, the issues will have to\n   be coordinated and resolved eventually
    if the two sets of protocols\n   are to coexist.  In addition, to the degree to
    which email addresses\n   appear in PKI (Public Key Infrastructure) certificates
    [RFC5280],\n   standards addressing such certificates will need to be upgraded
    to\n   address these internationalized addresses.  Those upgrades will need\n
    \  to address questions of spoofing by look-alikes of the addresses\n   themselves.\n"
  title: 13.  Security Considerations
- contents:
  - "14.  Acknowledgments\n   This document is an update to, and derived from, RFC
    4952.  This\n   document would have been impossible without the work and\n   contributions
    acknowledged in it.  The present document benefited\n   significantly from discussions
    in the IETF EAI working group and\n   elsewhere after RFC 4952 was published,
    especially discussions about\n   the experimental versions of other documents
    in the internationalized\n   email collection, and from RFC errata on RFC 4952
    itself.\n   Special thanks are due to Ernie Dainow for careful reviews and\n   suggested
    text in this version and to several IESG members for a\n   careful review and
    specific suggestions.\n"
  title: 14.  Acknowledgments
- contents:
  - '15.  References

    '
  - contents:
    - "15.1.  Normative References\n   [ASCII]    American National Standards Institute
      (formerly United\n              States of America Standards Institute), \"USA
      Code for\n              Information Interchange\", ANSI X3.4-1968, 1968.\n              ANSI
      X3.4-1968 has been replaced by newer versions with\n              slight modifications,
      but the 1968 version remains\n              definitive for the Internet.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3629]  Yergeau, F., \"UTF-8,
      a transformation format of ISO\n              10646\", STD 63, RFC 3629, November
      2003.\n   [RFC5321]  Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n
      \             October 2008.\n   [RFC5322]  Resnick, P., Ed., \"Internet Message
      Format\", RFC 5322,\n              October 2008.\n   [RFC5890]  Klensin, J.,
      \"Internationalized Domain Names for\n              Applications (IDNA): Definitions
      and Document Framework\",\n              RFC 5890, August 2010.\n   [RFC6152]
      \ Klensin, J., Freed, N., Rose, M., and D. Crocker, \"SMTP\n              Service
      Extension for 8-bit MIME Transport\", STD 71,\n              RFC 6152, March
      2011.\n   [RFC6531]  Yao, J. and W. Mao, \"SMTP Extension for Internationalized\n
      \             Email Address\", RFC 6531, February 2012.\n   [RFC6532]  Yang,
      A., Steele, S., and N. Freed, \"Internationalized\n              Email Headers\",
      RFC 6532, February 2012.\n   [RFC6533]  Hansen, T., Newman, C., and A. Melnikov,\n
      \             \"Internationalized Delivery Status and Disposition\n              Notifications\",
      RFC 6533, February 2012.\n"
    title: 15.1.  Normative References
  - contents:
    - "15.2.  Informative References\n   [POPIMAP-downgrade]\n              Fujiwara,
      K., \"Post-delivery Message Downgrading for\n              Internationalized
      Email Messages\", Work in Progress,\n              October 2011.\n   [RFC0821]
      \ Postel, J., \"Simple Mail Transfer Protocol\", STD 10,\n              RFC
      821, August 1982.\n   [RFC1123]  Braden, R., \"Requirements for Internet Hosts
      - Application\n              and Support\", STD 3, RFC 1123, October 1989.\n
      \  [RFC1939]  Myers, J. and M. Rose, \"Post Office Protocol - Version 3\",\n
      \             STD 53, RFC 1939, May 1996.\n   [RFC2045]  Freed, N. and N. Borenstein,
      \"Multipurpose Internet Mail\n              Extensions (MIME) Part One: Format
      of Internet Message\n              Bodies\", RFC 2045, November 1996.\n   [RFC2046]
      \ Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n              Extensions
      (MIME) Part Two: Media Types\", RFC 2046,\n              November 1996.\n   [RFC2047]
      \ Moore, K., \"MIME (Multipurpose Internet Mail Extensions)\n              Part
      Three: Message Header Extensions for Non-ASCII Text\",\n              RFC 2047,
      November 1996.\n   [RFC2231]  Freed, N. and K. Moore, \"MIME Parameter Value
      and Encoded\n              Word Extensions: Character Sets, Languages, and\n
      \             Continuations\", RFC 2231, November 1997.\n   [RFC2821]  Klensin,
      J., \"Simple Mail Transfer Protocol\", RFC 2821,\n              April 2001.\n
      \  [RFC3156]  Elkins, M., Del Torto, D., Levien, R., and T. Roessler,\n              \"MIME
      Security with OpenPGP\", RFC 3156, August 2001.\n   [RFC3461]  Moore, K., \"Simple
      Mail Transfer Protocol (SMTP) Service\n              Extension for Delivery
      Status Notifications (DSNs)\",\n              RFC 3461, January 2003.\n   [RFC3464]
      \ Moore, K. and G. Vaudreuil, \"An Extensible Message Format\n              for
      Delivery Status Notifications\", RFC 3464,\n              January 2003.\n   [RFC3492]
      \ Costello, A., \"Punycode: A Bootstring encoding of Unicode\n              for
      Internationalized Domain Names in Applications\n              (IDNA)\", RFC
      3492, March 2003.\n   [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL
      - VERSION\n              4rev1\", RFC 3501, March 2003.\n   [RFC3987]  Duerst,
      M. and M. Suignard, \"Internationalized Resource\n              Identifiers
      (IRIs)\", RFC 3987, January 2005.\n   [RFC4155]  Hall, E., \"The application/mbox
      Media Type\", RFC 4155,\n              September 2005.\n   [RFC4690]  Klensin,
      J., Faltstrom, P., Karp, C., and IAB, \"Review and\n              Recommendations
      for Internationalized Domain Names\n              (IDNs)\", RFC 4690, September
      2006.\n   [RFC4952]  Klensin, J. and Y. Ko, \"Overview and Framework for\n              Internationalized
      Email\", RFC 4952, July 2007.\n   [RFC5198]  Klensin, J. and M. Padlipsky, \"Unicode
      Format for Network\n              Interchange\", RFC 5198, March 2008.\n   [RFC5228]
      \ Guenther, P. and T. Showalter, \"Sieve: An Email Filtering\n              Language\",
      RFC 5228, January 2008.\n   [RFC5280]  Cooper, D., Santesson, S., Farrell, S.,
      Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet X.509 Public
      Key\n              Infrastructure Certificate and Certificate Revocation List\n
      \             (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5335]  Yang, A.,
      \"Internationalized Email Headers\", RFC 5335,\n              September 2008.\n
      \  [RFC5336]  Yao, J. and W. Mao, \"SMTP Extension for Internationalized\n              Email
      Addresses\", RFC 5336, September 2008.\n   [RFC5337]  Newman, C. and A. Melnikov,
      \"Internationalized Delivery\n              Status and Disposition Notifications\",
      RFC 5337,\n              September 2008.\n   [RFC5504]  Fujiwara, K. and Y.
      Yoneya, \"Downgrading Mechanism for\n              Email Address Internationalization\",
      RFC 5504, March 2009.\n   [RFC5721]  Gellens, R. and C. Newman, \"POP3 Support
      for UTF-8\",\n              RFC 5721, February 2010.\n   [RFC5721bis-POP3]\n
      \             Gellens, R., Newman, C., Yao, J., and K. Fujiwara, \"POP3\n              Support
      for UTF-8\", Work in Progress, November 2011.\n   [RFC5738]  Resnick, P. and
      C. Newman, \"IMAP Support for UTF-8\",\n              RFC 5738, March 2010.\n
      \  [RFC5738bis-IMAP]\n              Resnick, P., Ed., Newman, C., Ed., and S.
      Shen, Ed., \"IMAP\n              Support for UTF-8\", Work in Progress, December
      2011.\n   [RFC5751]  Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet\n
      \             Mail Extensions (S/MIME) Version 3.2 Message\n              Specification\",
      RFC 5751, January 2010.\n   [RFC5825]  Fujiwara, K. and B. Leiba, \"Displaying
      Downgraded Messages\n              for Email Address Internationalization\",
      RFC 5825,\n              April 2010.\n   [RFC5863]  Hansen, T., Siegel, E.,
      Hallam-Baker, P., and D. Crocker,\n              \"DomainKeys Identified Mail
      (DKIM) Development,\n              Deployment, and Operations\", RFC 5863, May
      2010.\n   [RFC5891]  Klensin, J., \"Internationalized Domain Names in\n              Applications
      (IDNA): Protocol\", RFC 5891, August 2010.\n   [RFC5892]  Faltstrom, P., \"The
      Unicode Code Points and\n              Internationalized Domain Names for Applications
      (IDNA)\",\n              RFC 5892, August 2010.\n   [RFC5893]  Alvestrand, H.
      and C. Karp, \"Right-to-Left Scripts for\n              Internationalized Domain
      Names for Applications (IDNA)\",\n              RFC 5893, August 2010.\n   [RFC5894]
      \ Klensin, J., \"Internationalized Domain Names for\n              Applications
      (IDNA): Background, Explanation, and\n              Rationale\", RFC 5894, August
      2010.\n   [RFC5983]  Gellens, R., \"Mailing Lists and Internationalized Email\n
      \             Addresses\", RFC 5983, October 2010.\n   [RFC5983bis-MailingList]\n
      \             Levine, J. and R. Gellens, \"Mailing Lists and UTF-8\n              Addresses\",
      Work in Progress, December 2011.\n   [RFC6055]  Thaler, D., Klensin, J., and
      S. Cheshire, \"IAB Thoughts on\n              Encodings for Internationalized
      Domain Names\", RFC 6055,\n              February 2011.\n   [RFC6068]  Duerst,
      M., Masinter, L., and J. Zawinski, \"The 'mailto'\n              URI Scheme\",
      RFC 6068, October 2010.\n   [RFC6409]  Gellens, R. and J. Klensin, \"Message
      Submission for Mail\",\n              STD 72, RFC 6409, November 2011.\n   [Unicode]
      \ The Unicode Consortium.  The Unicode Standard, Version\n              6.0.0,
      defined by:, \"The Unicode Standard, Version 6.0.0\",\n              (Mountain
      View, CA: The Unicode Consortium, 2011.  ISBN\n              978-1-936213-01-6).,\n
      \             <http://www.unicode.org/versions/Unicode6.0.0/>.\n   [Unicode-UAX15]\n
      \             The Unicode Consortium, \"Unicode Standard Annex #15:\n              Unicode
      Normalization Forms\", September 2010,\n              <http://www.unicode.org/reports/tr15/>.\n"
    title: 15.2.  Informative References
  title: 15.  References
- contents:
  - "Authors' Addresses\n   John C KLENSIN\n   1770 Massachusetts Ave, #322\n   Cambridge,
    MA  02140\n   USA\n   Phone: +1 617 491 5735\n   EMail: john-ietf@jck.com\n   YangWoo
    KO\n   112-202 Malgeunachim APT. Nae-dong\n   Seo-gu, Daejeon  302-981\n   Republic
    of Korea\n   EMail: yangwooko@gmail.com\n"
  title: Authors' Addresses
