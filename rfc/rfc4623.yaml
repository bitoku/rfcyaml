- title: __initial_text__
  contents:
  - "               Pseudowire Emulation Edge-to-Edge (PWE3)\n                   \
    \  Fragmentation and Reassembly\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a generalized method of performing\n   fragmentation\
    \ for use by Pseudowire Emulation Edge-to-Edge (PWE3)\n   protocols and services.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................4\n  \
    \ 3. Alternatives to PWE3 Fragmentation/Reassembly ...................5\n   4.\
    \ PWE3 Fragmentation with MPLS ....................................5\n      4.1.\
    \ Fragment Bit Locations for MPLS ............................6\n      4.2. Other\
    \ Considerations .......................................6\n   5. PWE3 Fragmentation\
    \ with L2TP ....................................6\n      5.1. PW-Specific Fragmentation\
    \ vs. IP fragmentation .............7\n      5.2. Advertising Reassembly Support\
    \ in L2TP .....................7\n      5.3. L2TP Maximum Receive Unit (MRU) AVP\
    \ ........................8\n      5.4. L2TP Maximum Reassembled Receive Unit\
    \ (MRRU) AVP ...........8\n      5.5. Fragment Bit Locations for L2TPv3 Encapsulation\
    \ ............9\n      5.6. Fragment Bit Locations for L2TPv2 Encapsulation ............9\n\
    \   6. Security Considerations ........................................10\n  \
    \ 7. IANA Considerations ............................................10\n    \
    \  7.1. Control Message Attribute Value Pairs (AVPs) ..............11\n      7.2.\
    \ Default L2-Specific Sublayer Bits .........................11\n      7.3. Leading\
    \ Bits of the L2TPv2 Message Header .................11\n   8. Acknowledgements\
    \ ...............................................11\n   9. Normative References\
    \ ...........................................12\n   10. Informative References\
    \ ........................................12\n   Appendix A. Relationship Between\
    \ This Document and RFC 1990 .......14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Pseudowire Emulation Edge-to-Edge Architecture Document\n\
    \   [Architecture] defines a network reference model for PWE3:\n         |<--------------\
    \ Emulated Service ---------------->|\n         |                            \
    \                      |\n         |          |<------- Pseudowire ------->| \
    \         |\n         |          |                            |          |\n \
    \        |          |    |<-- PSN Tunnel -->|    |          |\n         | PW End\
    \   V    V                  V    V  PW End  |\n         V Service  +----+    \
    \              +----+  Service V\n   +-----+    |     | PE1|==================|\
    \ PE2|     |    +-----+\n   |     |----------|............PW1.............|----------|\
    \     |\n   | CE1 |    |     |    |                  |    |     |    | CE2 |\n\
    \   |     |----------|............PW2.............|----------|     |\n   +-----+\
    \  ^ |     |    |==================|    |     | ^  +-----+\n         ^  |    \
    \   +----+                  +----+     | |  ^\n         |  |   Provider Edge 1\
    \         Provider Edge 2  |  |\n         |  |                               \
    \             |  |\n   Customer |                                            |\
    \ Customer\n   Edge 1   |                                            | Edge 2\n\
    \            |                                            |\n            |   \
    \                                         |\n      native service            \
    \                   native service\n                  Figure 1: PWE3 Network Reference\
    \ Model\n   A Pseudowire (PW) payload is normally relayed across the PW as a\n\
    \   single IP or MPLS Packet Switched Network (PSN) Protocol Data Unit\n   (PDU).\
    \  However, there are cases where the combined size of the\n   payload and its\
    \ associated PWE3 and PSN headers may exceed the PSN\n   path Maximum Transmission\
    \ Unit (MTU).  When a packet exceeds the MTU\n   of a given network, fragmentation\
    \ and reassembly will allow the\n   packet to traverse the network and reach its\
    \ intended destination.\n   The purpose of this document is to define a generalized\
    \ method of\n   performing fragmentation for use with all PWE3 protocols and\n\
    \   services.  This method should be utilized only in cases where MTU-\n   management\
    \ methods fail.  Due to the increased processing overhead,\n   fragmentation and\
    \ reassembly in core network devices should always be\n   considered something\
    \ to avoid whenever possible.\n   The PWE3 fragmentation and reassembly domain\
    \ is shown in Figure 2:\n         |<-------------- Emulated Service ---------------->|\n\
    \         |          |<---Fragmentation Domain--->|          |\n         |   \
    \       ||<------- Pseudowire ----->||          |\n         |          ||    \
    \                      ||          |\n         |          ||   |<-- PSN Tunnel\
    \ -->|   ||          |\n         | PW End   VV   V                  V   VV  PW\
    \ End  |\n         V Service  +----+                  +----+  Service V\n   +-----+\
    \    |     | PE1|==================| PE2|     |    +-----+\n   |     |----------|............PW1.............|----------|\
    \     |\n   | CE1 |    |     |    |                  |    |     |    | CE2 |\n\
    \   |     |----------|............PW2.............|----------|     |\n   +-----+\
    \  ^ |     |    |==================|    |     | ^  +-----+\n         ^  |    \
    \   +----+                  +----+     | |  ^\n         |  |   Provider Edge 1\
    \         Provider Edge 2  |  |\n         |  |                               \
    \             |  |\n   Customer |                                            |\
    \ Customer\n   Edge 1   |                                            | Edge 2\n\
    \            |                                            |\n            |   \
    \                                         |\n      native service            \
    \                   native service\n              Figure 2: PWE3 Fragmentation/Reassembly\
    \ Domain\n   Fragmentation takes place in the transmitting PE immediately prior\
    \ to\n   PW encapsulation, and reassembly takes place in the receiving PE\n  \
    \ immediately after PW decapsulation.\n   Since a sequence number is necessary\
    \ for the fragmentation and\n   reassembly procedures, using the Sequence Number\
    \ field on fragmented\n   packets is REQUIRED (see Sections 4.1 and 5.5 for the\
    \ location of the\n   Sequence Number fields for MPLS and L2TPv3 encapsulations,\n\
    \   respectively).  The order of operation is that first fragmentation is\n  \
    \ performed, and then the resulting fragments are assigned sequential\n   sequence\
    \ numbers.\n   Depending on the specific PWE3 encapsulation in use, the value\
    \ 0 may\n   not be a part of the sequence number space, in which case its use\
    \ for\n   fragmentation must follow this same rule: as the sequence number is\n\
    \   incremented, it skips zero and wraps from 65535 to 1.  Conversely, if\n  \
    \ the value 0 is part of the sequence space, then the same sequence\n   space\
    \ is also used for fragmentation and reassembly.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [KEYWORDS].\n"
- title: 3.  Alternatives to PWE3 Fragmentation/Reassembly
  contents:
  - "3.  Alternatives to PWE3 Fragmentation/Reassembly\n   Fragmentation and reassembly\
    \ in network equipment generally requires\n   significantly greater resources\
    \ than sending a packet as a single\n   unit.  As such, fragmentation and reassembly\
    \ should be avoided\n   whenever possible.  Ideal solutions for avoiding fragmentation\n\
    \   include proper configuration and management of MTU sizes between the\n   Customer\
    \ Edge (CE) router and Provider Edge (PE) router and across\n   the PSN, as well\
    \ as adaptive measures that operate with the\n   originating host (e.g., [PATHMTU],\
    \ [PATHMTUv6]) to reduce the packet\n   sizes at the source.\n   In some cases,\
    \ a PE may be able to fragment an IP version 4 (IPv4)\n   [RFC791] packet before\
    \ it enters a PW.  For example, if the PE can\n   fragment and forward IPv4 packets\
    \ with the DF bit clear in a manner\n   that is identical to an IPv4 router, it\
    \ may fragment packets arriving\n   from a CE, forwarding the IPv4 fragments with\
    \ associated framing for\n   that attachment circuit (AC) over the PW.  Architecturally,\
    \ the IPv4\n   fragmentation happens before reaching the PW, presenting multiple\n\
    \   frames to the PW to forward in the normal manner for that PWType.\n   Thus,\
    \ this method is entirely transparent to the PW encapsulation and\n   to the remote\
    \ end of the PW itself.  Packet fragments are ultimately\n   reassembled on the\
    \ destination IPv4 host in the normal way.  IPv6\n   packets are not to be fragmented\
    \ in this manner.\n"
- title: 4.  PWE3 Fragmentation with MPLS
  contents:
  - "4.  PWE3 Fragmentation with MPLS\n   When using the signaling procedures in [MPLS-Control],\
    \ there is a\n   Pseudowire Interface Parameter Sub-TLV type used to signal the\
    \ use of\n   fragmentation when advertising a VC label [IANA]:\n      Parameter\
    \      Length    Description\n           0x09           4    Fragmentation indicator\n\
    \   The presence of this parameter in the VC FEC element indicates that\n   the\
    \ receiver is able to reassemble fragments when the control word is\n   in use\
    \ for the VC label being advertised.  It does not obligate the\n   sender to use\
    \ fragmentation; it is simply an indication that the\n   sender MAY use fragmentation.\
    \  The sender MUST NOT use fragmentation\n   if this parameter is not present\
    \ in the VC FEC element.\n   If [MPLS-Control] signaling is not in use, then whether\
    \ or not to use\n   fragmentation MUST be configured in the sender.\n"
- title: 4.1.  Fragment Bit Locations for MPLS
  contents:
  - "4.1.  Fragment Bit Locations for MPLS\n   MPLS-based PWE3 uses the following\
    \ control word format\n   [Control-Word], with the B and E fragmentation bits\
    \ identified in\n   position 8 and 9:\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0 0 0 0| Flags |B|E|   Length  |     Sequence Number           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 3: Preferred PW MPLS Control Word\n   The B and E bits\
    \ are defined as follows:\n   BE\n   --\n   00 indicates that the entire (un-fragmented)\
    \ payload is carried\n      in a single packet\n   01 indicates the packet carrying\
    \ the first fragment\n   10 indicates the packet carrying the last fragment\n\
    \   11 indicates a packet carrying an intermediate fragment\n   See Appendix A\
    \ for a discussion of the derivation of these values for\n   the B and E bits.\n\
    \   See Section 1 for the description of the use of the Sequence Number\n   field.\n"
- title: 4.2.  Other Considerations
  contents:
  - "4.2.  Other Considerations\n   Path MTU [PATHMTU] [PATHMTUv6] may be used to\
    \ dynamically determine\n   the maximum size for fragments.  The application of\
    \ path MTU to MPLS\n   is discussed in [LABELSTACK].  The maximum size of the\
    \ fragments may\n   also be configured.  The signaled Interface MTU parameter\
    \ in\n   [MPLS-Control] SHOULD be used to set the maximum size of the\n   reassembly\
    \ buffer for received packets to make optimal use of\n   reassembly buffer resources.\n"
- title: 5.  PWE3 Fragmentation with L2TP
  contents:
  - "5.  PWE3 Fragmentation with L2TP\n   This section defines the location of the\
    \ B and E bits for L2TPv3\n   [L2TPv3] and L2TPv2 [L2TPv2] headers, as well as\
    \ the signaling\n   mechanism for advertising MRU (Maximum Receive Unit) values\
    \ and\n   support for fragmentation on a given PW.  As IP is the most common\n\
    \   PSN used with L2TP, IP PSN fragmentation and reassembly is discussed\n   as\
    \ well.\n"
- title: 5.1.  PW-Specific Fragmentation vs. IP fragmentation
  contents:
  - "5.1.  PW-Specific Fragmentation vs. IP fragmentation\n   When proper MTU management\
    \ across a network fails, IP PSN\n   fragmentation and reassembly may be used\
    \ to accommodate MTU\n   mismatches between tunnel endpoints.  If the overall\
    \ traffic\n   requiring fragmentation and reassembly is very light, or there are\n\
    \   sufficient optimized mechanisms for IP PSN fragmentation and\n   reassembly\
    \ available, IP PSN fragmentation and reassembly may be\n   sufficient.\n   When\
    \ facing a large number of PW packets requiring fragmentation and\n   reassembly,\
    \ a PW-specific method has properties that potentially\n   allow for more resource-friendly\
    \ implementations.  Specifically, the\n   ability to assign buffer usage on a\
    \ per-PW basis and PW sequencing\n   may be utilized to gain advantage over a\
    \ general mechanism applying\n   to all IP packets across all PWs.  Further, PW\
    \ fragmentation may be\n   more easily enabled in a selective manner for some\
    \ or all PWs, rather\n   than enabling reassembly for all IP traffic arriving\
    \ at a given node.\n   Deployments SHOULD avoid a situation that uses a combination\
    \ of IP\n   PSN and PW fragmentation and reassembly on the same node.  Such\n\
    \   operation clearly defeats the purpose behind the mechanism defined in\n  \
    \ this document.  This is especially important for L2TPv3 pseudowires,\n   since\
    \ potentially fragmentation can take place in three different\n   places (the\
    \ IP PSN, the PW, and the encapsulated payload).  Care must\n   be taken to ensure\
    \ that the MTU/MRU values are set and advertised\n   properly at each tunnel endpoint\
    \ to avoid this.  When fragmentation\n   is enabled within a given PW, the DF\
    \ bit MUST be set on all L2TP over\n   IP packets for that PW.\n   L2TPv3 nodes\
    \ SHOULD participate in Path MTU ([PATHMTU], [PATHMTUv6])\n   for automatic adjustment\
    \ of the PSN MTU.  When the payload is IP,\n   Path MTU should be used at they\
    \ payload level as well.\n"
- title: 5.2.  Advertising Reassembly Support in L2TP
  contents:
  - "5.2.  Advertising Reassembly Support in L2TP\n   The constructs defined in this\
    \ section for advertising fragmentation\n   support in L2TP are applicable to\
    \ [L2TPv3] and [L2TPv2].\n   This document defines two new AVPs to advertise maximum\
    \ receive unit\n   values and reassembly support.  These AVPs MAY be present in\
    \ the\n   Incoming-Call-Request (ICRQ), Incoming-Call-Reply (ICRP), Incoming-\n\
    \   Call-Connected (ICCN), Outgoing-Call-Request (OCRQ), Outgoing-Call-\n   Reply\
    \ (OCRP), Outgoing-Call-Connected (OCCN), or Set-Link-Info (SLI)\n   messages.\
    \  The most recent value received always takes precedence\n   over a previous\
    \ value and MUST be dynamic over the life of the\n   session if received via the\
    \ SLI message.  One of the two new AVPs\n   (MRRU) is used to advertise that PWE3\
    \ reassembly is supported by the\n   sender of the AVP.  Reassembly support MAY\
    \ be unidirectional.\n"
- title: 5.3.  L2TP Maximum Receive Unit (MRU) AVP
  contents:
  - "5.3.  L2TP Maximum Receive Unit (MRU) AVP\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|H|0|0|0|0|    Length         |              0                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              MRU              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 4: L2TP Maximum Receive Unit (MRU) AVP\n   MRU (Maximum\
    \ Receive Unit), attribute number 94, is the maximum size,\n   in octets, of a\
    \ fragmented or complete PW frame, including L2TP\n   encapsulation, receivable\
    \ by the side of the PW advertising this\n   value.  The advertised MRU does NOT\
    \ include the PSN header (i.e., the\n   IP and/or UDP header).  This AVP does\
    \ not imply that PWE3\n   fragmentation or reassembly is supported.  If reassembly\
    \ is not\n   enabled or unavailable, this AVP may be used alone to advertise the\n\
    \   MRU for a complete frame.\n   This AVP MAY be hidden (the H bit MAY be 0 or\
    \ 1).  The mandatory (M)\n   bit for this AVP SHOULD be set to 0.  The Length\
    \ (before hiding) is\n   8.  The Vendor ID is the IETF Vendor ID of 0.\n"
- title: 5.4.  L2TP Maximum Reassembled Receive Unit (MRRU) AVP
  contents:
  - "5.4.  L2TP Maximum Reassembled Receive Unit (MRRU) AVP\n    0               \
    \    1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|H|0|0|0|0|    Length         |              0                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              MRRU             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Figure 5: L2TP Maximum Reassembled Receive Unit (MRRU) AVP\n   MRRU (Maximum\
    \ Reassembled Receive Unit AVP), attribute number 95, is\n   the maximum size,\
    \ in octets, of a reassembled frame, including any PW\n   framing, but not including\
    \ the L2TP encapsulation or L2-specific\n   sublayer.  Presence of this AVP signifies\
    \ the ability to receive PW\n   fragments and reassemble them.  Packet fragments\
    \ MUST NOT be sent by\n   a peer that has not received this AVP in a control message.\
    \  If the\n   MRRU is present in a message, the MRU AVP MUST be present as well.\n\
    \   The MRRU SHOULD be used to set the maximum size of the reassembly\n   buffer\
    \ for received packets to make optimal use of reassembly buffer\n   resources.\n\
    \   This AVP MAY be hidden (the H bit MAY be 0 or 1).  The mandatory (M)\n   bit\
    \ for this AVP SHOULD be set to 0.  The Length (before hiding) is\n   8.  The\
    \ Vendor ID is the IETF Vendor ID of 0.\n"
- title: 5.5.  Fragment Bit Locations for L2TPv3 Encapsulation
  contents:
  - "5.5.  Fragment Bit Locations for L2TPv3 Encapsulation\n   The usage of the B\
    \ and E bits is described in Section 4.1.  For\n   L2TPv3 encapsulation, the B\
    \ and E bits are defined as bits 2 and 3 in\n   the leading bits of the Default\
    \ L2-Specific Sublayer (see Section 7).\n    0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|H|0|0|0|0|    Length         |              0                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |x|S|B|E|x|x|x|x|              Sequence Number                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Figure 6: B and E Bits Location in the Default L2-Specific Sublayer\n   The\
    \ S (Sequence) bit is as defined in [L2TPv3].  Location of the B\n   and E bits\
    \ for PW-Types that use a variant L2 specific sublayer are\n   outside the scope\
    \ of this document.\n   When fragmentation is used, an L2-Specific Sublayer with\
    \ B and E bits\n   defined MUST be present in all data packets for a given session.\
    \  The\n   presence and format of the L2-Specific Sublayer is advertised via the\n\
    \   L2-Specific Sublayer AVP, Attribute Type 69, defined in Section 5.4.4\n  \
    \ of [L2TPv3].\n   See Section 1 for the description of the use of the Sequence\
    \ Number\n   field.\n"
- title: 5.6.  Fragment Bit Locations for L2TPv2 Encapsulation
  contents:
  - "5.6.  Fragment Bit Locations for L2TPv2 Encapsulation\n   The usage of the B\
    \ and E bits is described in Section 4.1.  For\n   L2TPv2 encapsulation, the B\
    \ and E bits are defined as bits 8 and 9 in\n   the leading bits of the L2TPv2\
    \ header as depicted below (see Section\n   7).\n    0                   1   \
    \                2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|H|0|0|0|0|    Length         |              0                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |T|L|x|x|S|x|O|P|B|E|x|x|  Ver  |          Length (opt)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Figure 7: B and E bits location in the L2TPv2 Message Header\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   As with any additional protocol construct, each\
    \ level of complexity\n   adds the potential to exploit protocol and implementation\
    \ errors.\n   Implementers should be especially careful of not tying up an\n \
    \  abundance of resources, even for the most pathological combination of\n   packet\
    \ fragments that could be received.  Beyond these issues of\n   general implementation\
    \ quality, there are no known notable security\n   issues with using the mechanism\
    \ defined in this document.  It should\n   be pointed out that RFC 1990, on which\
    \ this document is based, and\n   its derivatives have been widely implemented\
    \ and extensively used in\n   the Internet and elsewhere.\n   [IPFRAG-SEC] and\
    \ [TINYFRAG] describe potential network attacks\n   associated with IP fragmentation\
    \ and reassembly.  The issues\n   described in these documents attempt to bypass\
    \ IP access controls by\n   sending various carefully formed \"tiny fragments\"\
    , or by exploiting\n   the IP offset field to cause fragments to overlap and rewrite\n\
    \   interesting portions of an IP packet after access checks have been\n   performed.\
    \  The latter is not an issue with the PW-specific\n   fragmentation method described\
    \ in this document, as there is no\n   offset field.  However, implementations\
    \ MUST be sure not to allow\n   more than one whole fragment to overwrite another\
    \ in a reconstructed\n   frame.  The former may be a concern if packet filtering\
    \ and access\n   controls are being placed on tunneled frames within the PW\n\
    \   encapsulation.  To circumvent any possible attacks in either case,\n   all\
    \ filtering and access controls should be applied to the resulting\n   reconstructed\
    \ frame rather than any PW fragments.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document does not define any new registries\
    \ for IANA to\n   maintain.\n   Note that [IANA] has already allocated the Fragmentation\
    \ Indicator\n   interface parameter, so no further IANA action is required.\n\
    \   This document requires IANA to assign new values for registries\n   already\
    \ managed by IANA (see Sections 7.1 and 7.2) and two reserved\n   bits in an existing\
    \ header (see Section 7.3).\n"
- title: 7.1.  Control Message Attribute Value Pairs (AVPs)
  contents:
  - "7.1.  Control Message Attribute Value Pairs (AVPs)\n   Two additional AVP Attributes\
    \ are specified in Sections 5.3 and 5.4.\n   They are required to be defined by\
    \ IANA as described in Section 2.2\n   of [BCP0068].\n   Control Message Attribute\
    \ Value Pairs\n   -------------------------------------\n   94 - Maximum Receive\
    \ Unit (MRU) AVP\n   95 - Maximum Reassembled Receive Unit (MRRU) AVP\n"
- title: 7.2.  Default L2-Specific Sublayer Bits
  contents:
  - "7.2.  Default L2-Specific Sublayer Bits\n   This registry was created as part\
    \ of the publication of [L2TPv3].\n   This document defines two reserved bits\
    \ in the Default L2-Specific\n   Sublayer in Section 5.5, which may be assigned\
    \ by IETF Consensus\n   [RFC2434].  They are required to be assigned by IANA.\n\
    \   Default L2-Specific Sublayer bits - per [L2TPv3]\n   ---------------------------------\n\
    \   Bit 2 - B (Fragmentation) bit\n   Bit 3 - E (Fragmentation) bit\n"
- title: 7.3.  Leading Bits of the L2TPv2 Message Header
  contents:
  - "7.3.  Leading Bits of the L2TPv2 Message Header\n   This document requires definition\
    \ of two reserved bits in the L2TPv2\n   [L2TPv2] header.  Locations are noted\
    \ by the \"B\" and \"E\" bits in\n   Section 5.6.\n   Leading Bits of the L2TPv2\
    \ Message Header - per [L2TPv2, L2TPv3]\n   -----------------------------------------\n\
    \   Bit 8 - B (Fragmentation) bit\n   Bit 9 - E (Fragmentation) bit\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors wish to thank Eric Rosen and Carlos Pignataro,\
    \ both of\n   Cisco Systems, for their review of this document.\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [Control-Word] Bryant, S., Swallow, G., Martini,\
    \ L., and D.\n                  McPherson, \"Pseudowire Emulation Edge-to-Edge\
    \ (PWE3)\n                  Control Word for Use over an MPLS PSN\", RFC 4385,\n\
    \                  February 2006.\n   [IANA]         Martini, L., \"IANA Allocations\
    \ for Pseudowire Edge to\n                  Edge Emulation (PWE3)\", BCP 116,\
    \ RFC 4446, April 2006.\n   [KEYWORDS]     Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [LABELSTACK]   Rosen, E., Tappan, D., Fedorkow, G., Rekhter,\
    \ Y.,\n                  Farinacci, D., Li, T., and A. Conta, \"MPLS Label Stack\n\
    \                  Encoding\", RFC 3032, January 2001.\n   [L2TPv2]       Townsley,\
    \ W., Valencia, A., Rubens, A., Pall, G.,\n                  Zorn, G., and B.\
    \ Palter, \"Layer Two Tunneling Protocol\n                  \"L2TP\"\", RFC 2661,\
    \ August 1999.\n   [L2TPv3]       Lau, J., Townsley, M., and I. Goyret, \"Layer\
    \ Two\n                  Tunneling Protocol - Version 3 (L2TPv3)\", RFC 3931,\n\
    \                  March 2005.\n   [MLPPP]        Sklower, K., Lloyd, B., McGregor,\
    \ G., Carr, D., and T.\n                  Coradetti, \"The PPP Multilink Protocol\
    \ (MP)\", RFC\n                  1990, August 1996.\n   [MPLS-Control] Martini,\
    \ L., Rosen, E., El-Aawar, N., Smith, T., and\n                  G. Heron, \"\
    Pseudowire Setup and Maintenance Using the\n                  Label Distribution\
    \ Protocol (LDP)\", RFC 4447, April\n                  2006.\n   [PATHMTU]   \
    \   Mogul, J. and S. Deering, \"Path MTU discovery\", RFC\n                  1191,\
    \ November 1990.\n   [PATHMTUv6]    McCann, J., Deering, S., and J. Mogul, \"\
    Path MTU\n                  Discovery for IP version 6\", RFC 1981, August 1996.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [Architecture] Bryant, S. and P. Pate, \"Pseudo\
    \ Wire Emulation Edge-\n                  to-Edge (PWE3) Architecture\", RFC 3985,\
    \ March 2005.\n   [BCP0068]      Townsley, W., \"Layer Two Tunneling Protocol\
    \ (L2TP)\n                  Internet Assigned Numbers Authority (IANA)\n     \
    \             Considerations Update\", BCP 68, RFC 3438, December\n          \
    \        2002.\n   [FAST]         ATM Forum, \"Frame Based ATM over SONET/SDH\
    \ Transport\n                  (FAST)\", af-fbatm-0151.000, July 2000.\n   [FRF.12]\
    \       Frame Relay Forum, \"Frame Relay Fragmentation\n                  Implementation\
    \ Agreement\", FRF.12, December 1997.\n   [IPFRAG-SEC]   Ziemba, G., Reed, D.,\
    \ and P. Traina, \"Security\n                  Considerations for IP Fragment\
    \ Filtering\", RFC 1858,\n                  October 1995.\n   [RFC2434]      Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing\n                  an IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC\n                  2434, October 1998.\n   [RFC791]\
    \       Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n                 \
    \ September 1981.\n   [TINYFRAG]     Miller, I., \"Protection Against a Variant\
    \ of the Tiny\n                  Fragment Attack (RFC 1858)\", RFC 3128, June\
    \ 2001.\n"
- title: Appendix A.  Relationship between This Document and RFC 1990
  contents:
  - "Appendix A.  Relationship between This Document and RFC 1990\n   The fragmentation\
    \ of large packets into smaller units for\n   transmission is not new.  One fragmentation\
    \ and reassembly method was\n   defined in RFC 1990, Multi-Link PPP [MLPPP]. \
    \ This method was also\n   adopted for both Frame Relay [FRF.12] and ATM [FAST]\
    \ network\n   technology.  This document adopts the RFC 1990 fragmentation and\n\
    \   reassembly procedures as well, with some distinct modifications\n   described\
    \ in this appendix.  Familiarity with RFC 1990 is assumed.\n   RFC 1990 was designed\
    \ for use in environments where packet fragments\n   may arrive out of order due\
    \ to their transmission on multiple\n   parallel links, specifying that buffering\
    \ be used to place the\n   fragments in correct order.  For PWE3, the ability\
    \ to reorder\n   fragments prior to reassembly is OPTIONAL; receivers MAY choose\
    \ to\n   drop frames when a lost fragment is detected. Thus, when the sequence\n\
    \   number on received fragments shows that a fragment has been skipped,\n   the\
    \ partially reassembled packet MAY be dropped, or the receiver MAY\n   wish to\
    \ wait for the fragment to arrive out of order.  In the latter\n   case, a reassembly\
    \ timer MUST be used to avoid locking up buffer\n   resources for too long a period.\n\
    \   Dropping out-of-order fragments on a given PW can provide a\n   considerable\
    \ scalability advantage for network equipment performing\n   reassembly.  If out-of-order\
    \ fragments are a relatively rare event on\n   a given PW, throughput should not\
    \ be adversely affected by this.\n   Note, however, if there are cases where fragments\
    \ of a given frame\n   are received out-or-order in a consistent manner (e.g.,\
    \ a short\n   fragment is always switched ahead of a larger fragment), then\n\
    \   dropping out-of-order fragments will cause the fragmented frame never\n  \
    \ to be received.  This condition may result in an effective denial of\n   service\
    \ to a higher-lever application.  As such, implementations\n   fragmenting a PW\
    \ frame MUST at the very least ensure that all\n   fragments are sent in order\
    \ from their own egress point.\n   An implementation may also choose to allow\
    \ reassembly of a limited\n   number of fragmented frames on a given PW, or across\
    \ a set of PWs\n   with reassembly enabled.  This allows for a more even distribution\
    \ of\n   reassembly resources, reducing the chance that a single or small set\n\
    \   of PWs will exhaust all reassembly resources for a node.  As with\n   dropping\
    \ out-of-order fragments, there are perceivable cases where\n   this may also\
    \ provide an effective denial of service.  For example,\n   if fragments of multiple\
    \ frames are consistently received before each\n   frame can be reconstructed\
    \ in a set of limited PW reassembly buffers,\n   then a set of these fragmented\
    \ frames will never be delivered.\n   RFC 1990 headers use two bits that indicate\
    \ the first and last\n   fragments in a frame, and a sequence number.  The sequence\
    \ number may\n   be either 12 or 24 bits in length (from [MLPPP]):\n         \
    \       0             7 8            15\n               +-+-+-+-+-------+---------------+\n\
    \               |B|E|0|0|    sequence number    |\n               +-+-+-+-+-------+---------------+\n\
    \               +-+-+-+-+-+-+-+-+---------------+\n               |B|E|0|0|0|0|0|0|sequence\
    \ number|\n               +-+-+-+-+-+-+-+-+---------------+\n               |\
    \      sequence number (L)      |\n               +---------------+---------------+\n\
    \               Figure 6: RFC 1990 Header Formats\n   PWE3 fragmentation takes\
    \ advantage of existing PW sequence numbers\n   and control bit fields wherever\
    \ possible, rather than defining a\n   separate header exclusively for the use\
    \ of fragmentation.  Thus, it\n   uses neither of the RFC 1990 sequence number\
    \ formats described above,\n   relying instead on the sequence number that already\
    \ exists in the\n   PWE3 header.\n   RFC 1990 defines two one-bit fields: a (B)eginning\
    \ fragment bit and\n   an (E)nding fragment bit.  The B bit is set to 1 on the\
    \ first\n   fragment derived from a PPP packet and set to 0 for all other\n  \
    \ fragments from the same PPP packet.  The E bit is set to 1 on the\n   last fragment\
    \ and set to 0 for all other fragments.  A complete\n   unfragmented frame has\
    \ both the B and E bits set to 1.\n   PWE3 fragmentation inverts the value of\
    \ the B and E bits, while\n   retaining the operational concept of marking the\
    \ beginning and ending\n   of a fragmented frame.  Thus, for PW the B bit is set\
    \ to 0 on the\n   first fragment derived from a PW frame and set to 1 for all\
    \ other\n   fragments derived from the same frame.  The E bit is set to 0 on the\n\
    \   last fragment and set to 1 for all other fragments.   A complete\n   unfragmented\
    \ frame has both the B and E bits set to 0.  The\n   motivation behind this value\
    \ inversion for the B and E bits is to\n   allow complete frames (and particularly,\
    \ implementations that only\n   support complete frames) simply to leave the B\
    \ and E bits in the\n   header set to 0.\n   In order to support fragmentation,\
    \ the B and E bits MUST be defined\n   or identified for all PWE3 tunneling protocols.\
    \  Sections 4 and 5\n   define these locations for PWE3 MPLS [Control-Word], L2TPv2\
    \ [L2TPv2],\n   and L2TPv3 [L2TPv3] tunneling protocols.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew G. Malis\n   Tellabs\n   1415 West Diehl Road\n\
    \   Naperville, IL 60563\n   EMail: Andy.Malis@tellabs.com\n   W. Mark Townsley\n\
    \   Cisco Systems\n   7025 Kit Creek Road\n   PO Box 14987\n   Research Triangle\
    \ Park, NC 27709\n   EMail: mark@townsley.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
