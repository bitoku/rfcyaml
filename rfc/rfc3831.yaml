- title: __initial_text__
  contents:
  - '            Transmission of IPv6 Packets over Fibre Channel

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the way of encapsulating IPv6 packets over\n\
    \   Fibre Channel, and the method of forming IPv6 link-local addresses\n   and\
    \ statelessly autoconfigured addresses on Fibre Channel networks.\n"
- title: Table Of Contents
  contents:
  - "Table Of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Summary of Fibre Channel . . . . . . . . . . . . . .\
    \ . . . . .  3\n       2.1.  Overview . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n       2.2.  Identifiers and Login. . . . . . . . . . . . . . .\
    \ . . .  3\n       2.3.  FC Levels and Frame Format . . . . . . . . . . . . .\
    \ . .  4\n       2.4.  Sequences and Exchanges  . . . . . . . . . . . . . . .\
    \ .  5\n   3.  IPv6 Capable Nx_Ports. . . . . . . . . . . . . . . . . . . . .\
    \  6\n   4.  IPv6 Encapsulation . . . . . . . . . . . . . . . . . . . . . .  6\n\
    \       4.1.  FC Sequence Format . . . . . . . . . . . . . . . . . . .  6\n  \
    \     4.2.  FC Classes of Service. . . . . . . . . . . . . . . . . .  8\n    \
    \   4.3.  FC Header Code Points. . . . . . . . . . . . . . . . . .  8\n      \
    \ 4.4.  FC Network_Header. . . . . . . . . . . . . . . . . . . .  9\n       4.5.\
    \  LLC/SNAP Header. . . . . . . . . . . . . . . . . . . . .  9\n       4.6.  Bit\
    \ and Byte Ordering. . . . . . . . . . . . . . . . . .  9\n   5.  Maximum Transfer\
    \ Unit. . . . . . . . . . . . . . . . . . . . . 10\n   6.  Stateless Address Autoconfiguration.\
    \ . . . . . . . . . . . . . 10\n       6.1.  IPv6 Interface Identifier and Address\
    \ Prefix . . . . . . 10\n       6.2.  Generating an Interface ID from a Format\
    \ 1\n             N_Port_Name. . . . . . . . . . . . . . . . . . . . . . . 11\n\
    \       6.3.  Generating an Interface ID from a Format 2\n             N_Port_Name.\
    \ . . . . . . . . . . . . . . . . . . . . . . 12\n       6.4.  Generating an Interface\
    \ ID from a Format 5\n             N_Port_Name. . . . . . . . . . . . . . . .\
    \ . . . . . . . 13\n       6.5.  Generating an Interface ID from an EUI-64\n \
    \            mapped N_Port_Name . . . . . . . . . . . . . . . . . . . 14\n   7.\
    \  Link-Local Addresses . . . . . . . . . . . . . . . . . . . . . 15\n   8.  Address\
    \ Mapping for Unicast. . . . . . . . . . . . . . . . . . 15\n   9.  Address Mapping\
    \ for Multicast. . . . . . . . . . . . . . . . . 16\n   10. Sequence Management.\
    \ . . . . . . . . . . . . . . . . . . . . . 17\n   11. Exchange Management. .\
    \ . . . . . . . . . . . . . . . . . . . . 17\n   12. Security Considerations.\
    \ . . . . . . . . . . . . . . . . . . . 18\n   13. Acknowledgments. . . . . .\
    \ . . . . . . . . . . . . . . . . . . 18\n   14. References . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 18\n       14.1.  Normative References. .\
    \ . . . . . . . . . . . . . . . . 18\n       14.2.  Informative References. .\
    \ . . . . . . . . . . . . . . . 19\n   A.  Transmission of a Broadcast FC Sequence\
    \ over FC Topologies . . 20\n   B.  Validation of the <N_Port_Name, N_Port_ID>\
    \ mapping . . . . . . 21\n   C.  Fibre Channel Bit and Byte Numbering Guidance.\
    \ . . . . . . . . 22\n   Author's Address . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 23\n   Full Copyright Statement . . . . . . . . . . . . . . .\
    \ . . . . . . 24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Fibre Channel (FC) is a high speed serial interface technology\
    \ that\n   supports several Upper Layer Protocols including Small Computer\n \
    \  System Interface (SCSI) and IPv4 as specified in [IPFC].\n   The purpose of\
    \ this document is to specify a way of encapsulating IP\n   version 6 [IPv6] over\
    \ Fibre Channel and to describe a method of\n   forming IPv6 link-local addresses\
    \ [AARCH] and statelessly\n   autoconfigured addresses on Fibre Channel networks.\
    \  This document\n   also describes the content of the Source/Target Link-layer\
    \ Address\n   option used in Neighbor Discovery [DISC] when the messages are\n\
    \   transmitted on a Fibre Channel network.\n   Warning to readers familiar with\
    \ Fibre Channel: both Fibre Channel\n   and IETF standards use the same byte transmission\
    \ order.  However,\n   the bit numbering is different.  See Appendix C for guidance.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [KEYWORDS].\n"
- title: 2.  Summary of Fibre Channel
  contents:
  - '2.  Summary of Fibre Channel

    '
- title: 2.1.  Overview
  contents:
  - "2.1.  Overview\n   Fibre Channel (FC) is a gigabit speed network technology primarily\n\
    \   used for Storage Networking.  Fibre Channel is standardized in the\n   T11\
    \ Technical Committee of the InterNational Committee for\n   Information Technology\
    \ Standards (INCITS), an American National\n   Standard Institute (ANSI) accredited\
    \ standards committee.\n   Fibre Channel devices are called Nodes.  Each Node\
    \ has one or more\n   Ports that connect to Ports of other devices.  Fibre Channel\
    \ may be\n   implemented using any combination of the following three topologies:\n\
    \   -  a point-to-point link between two Ports;\n   -  a set of Ports interconnected\
    \ by a switching network called a\n      Fabric, as defined in [FC-FS];\n   -\
    \  a set of Ports interconnected with a loop topology, as defined in\n      [FC-AL-2].\n\
    \   A Node Port is more precisely called an N_Port.  A Node Port that is\n   capable\
    \ of operating in a loop topology using the loop specific\n   protocols is designated\
    \ as an NL_Port.  The term Nx_Port is used to\n   generically indicate these two\
    \ kinds of Node Port.\n   A Fabric Port is more precisely called an F_Port.  A\
    \ Fabric Port that\n   is capable of operating in a loop topology using the loop\
    \ specific\n   protocols is designated as an FL_Port.  The term Fx_Port is used\
    \ to\n   generically indicate these two kinds of Fabric Port.\n   From an IPv6\
    \ point of view, a Fibre Channel network, built with any\n   combination of the\
    \ FC topologies described above, is an IPv6 Link\n   [IPv6].  IPv6-capable Nx_Ports\
    \ are what [IPv6] calls Interfaces.\n"
- title: 2.2.  Identifiers and Login
  contents:
  - "2.2.  Identifiers and Login\n   Fibre Channel entities are identified by permanent\
    \ 64 bit long\n   Name_Identifiers.  [FC-FS] defines several formats of\n   Name_Identifiers.\
    \  The value of the first four bits defines the\n   format of a Name_Identifier.\
    \  These names are referred to in a more\n   precise manner as follows:\n   -\
    \  an Nx_Port's Name_Identifier is called N_Port_Name;\n   -  an Fx_Port's Name_Identifier\
    \ is called F_Port_Name;\n   -  a Node's Name_Identifier is called Node_Name;\n\
    \   -  a Fabric's Name_Identifier is called Fabric_Name.\n   An Nx_Port connected\
    \ to a Fibre Channel network is associated with\n   two identifiers, its permanent\
    \ N_Port_Name and a volatile 24 bit\n   address called N_Port_ID.  The N_Port_Name\
    \ is used to identify the\n   Nx_Port, while the N_Port_ID is used for communications\
    \ among\n   Nx_Ports.\n   Each Nx_Port acquires an N_Port_ID from the Fabric by\
    \ performing a\n   process called Fabric Login or FLOGI.  The FLOGI process is\
    \ used also\n   to negotiate several communications parameters between the Nx_Port\n\
    \   and the Fabric, such as the receive data field size, which determines\n  \
    \ the maximum size of the Fibre Channel frames that may be transferred\n   between\
    \ the Nx_Port and the Fabric.\n   Before effective communication may take place\
    \ between two Nx_Ports,\n   they must complete a process called Port Login or\
    \ PLOGI.  The PLOGI\n   process provides each Nx_Port with the other Nx_Port's\
    \ N_Port_Name,\n   and negotiates several communication parameters, such as the\
    \ receive\n   data field size, which determines the maximum size of the Fibre\n\
    \   Channel frames that may be transferred between the two Nx_Ports.\n   Both\
    \ Fabric Login and Port Login may be explicit, i.e., performed\n   using specific\
    \ FC control messages (called Extended Link Services or\n   ELS), or implicit,\
    \ in which the parameters are specified by\n   configuration or other methods.\n"
- title: 2.3.  FC Levels and Frame Format
  contents:
  - "2.3.  FC Levels and Frame Format\n   [FC-FS] describes the Fibre Channel protocol\
    \ using 5 different\n   levels.  The FC-2 and FC-4 levels are relevant for this\n\
    \   specification.  The FC-2 level defines the FC frame format, the\n   transport\
    \ services, and control functions necessary for information\n   transfer.  The\
    \ FC-4 level supports Upper Level Protocols, such as\n   IPv4, IPv6 or SCSI. \
    \ The Fibre Channel frame format is depicted in\n   figure 1.\n    +-----+-----------+-----------+--------//-------+-----+-----+\n\
    \    |     |           |         Data Field          |     |     |\n    | SOF\
    \ | FC Header |<--------------------------->| CRC | EOF |\n    |     |       \
    \    | Optional  | Frame           |     |     |\n    |     |           | Header(s)\
    \ | Payload         |     |     |\n    +-----+-----------+-----------+--------//-------+-----+-----+\n\
    \                    Fig. 1: Fibre Channel Frame Format\n   The Start of Frame\
    \ (SOF) and End of Frame (EOF) are special FC\n   transmission words that act\
    \ as frame delimiters.  The CRC is 4 octets\n   long and uses the same 32-bit\
    \ polynomial used in FDDI.\n   The FC Header is 24 octets long and contains several\
    \ fields\n   associated with the identification and control of the Data Field.\n\
    \   The Data Field is of variable size, ranging from 0 to 2112 octets,\n   and\
    \ includes the user data in the Frame Payload field, and Optional\n   Headers.\
    \  The currently defined Optional Headers are:\n   -  ESP_Header;\n   -  Network_Header;\n\
    \   -  Association_Header;\n   -  Device_Header.\n   The value of the SOF field\
    \ determines the FC Class of service\n   associated with the frame.  Five Classes\
    \ of service are specified in\n   [FC-FS].  They are distinguished primarily by\
    \ the method of flow\n   control between the communicating Nx_Ports and by the\
    \ level of data\n   integrity provided.  A given Fabric or Nx_Port may support\
    \ one or\n   more of the following Classes of service:\n   -  Class 1: Dedicated\
    \ physical connection with delivery confirmation;\n   -  Class 2: Frame multiplexed\
    \ service with delivery confirmation;\n   -  Class 3: Datagram service;\n   -\
    \  Class 4: Fractional bandwidth;\n   -  Class 6: Reliable multicast via dedicated\
    \ connections.\n"
- title: 2.4.  Sequences and Exchanges
  contents:
  - "2.4.  Sequences and Exchanges\n   An application level payload such as IPv6 is\
    \ called Information Unit\n   at the FC-4 level of Fibre Channel.  Each FC-4 Information\
    \ Unit is\n   mapped to an FC Sequence by the FC-2 level.  An FC Sequence consists\n\
    \   of one or more FC frames related by the value of the Sequence_ID\n   (SEQ_ID)\
    \ field of the FC Header.\n   The maximum data that may be carried by an FC frame\
    \ is 2112 octets.\n   The maximum usable frame size depends on the Fabric and\
    \ Nx_Port\n   implementations and is negotiated during the Login process.  Whenever\n\
    \   an Information Unit to be transmitted exceeds this value, the FC-2\n   level\
    \ segments it into multiple FC frames, sent as a single Sequence.\n   The receiving\
    \ Nx_Port reassembles the Sequence of frames and delivers\n   a reassembled Information\
    \ Unit to the FC-4 level.  The Sequence Count\n   (SEQ_CNT) field of the FC Header\
    \ may be used to ensure frame\n   ordering.\n   Multiple Sequences may be related\
    \ together as belonging to the same\n   FC Exchange.  The Exchange is a mechanism\
    \ used by two Nx_Ports to\n   identify and manage an operation between them. \
    \ The Exchange is\n   opened when the operation is started between the two Nx_Ports,\
    \ and\n   closed when the operation ends.  FC frames belonging to the same\n \
    \  Exchange are related by the value of the Exchange_ID fields in the FC\n   Header.\
    \  An Originator Exchange_ID (OX_ID) and a Responder\n   Exchange_ID (RX_ID) uniquely\
    \ identify the Exchange.\n"
- title: 3.  IPv6 Capable Nx_Ports
  contents:
  - "3.  IPv6 Capable Nx_Ports\n   This specification requires an IPv6 capable Nx_Port\
    \ to have the\n   following properties:\n   -  The format of its N_Port_Name MUST\
    \ be one of 0x1, 0x2, 0x5, 0xC,\n      0xD, 0xE, 0xF (see section 6.1).  IPv6\
    \ support for other\n      Name_Identifier formats is outside the scope of this\n\
    \      specification;\n   -  It MUST support Class 3;\n   -  It MUST support continuously\
    \ increasing SEQ_CNT [FC-FS];\n   -  It MUST be able to transmit and receive an\
    \ FC-4 Information Unit\n      at least 1304 octets long;\n   -  It SHOULD support\
    \ a receive data field size for Device_Data FC\n      frames of at least 1024\
    \ octets.\n"
- title: 4.  IPv6 Encapsulation
  contents:
  - '4.  IPv6 Encapsulation

    '
- title: 4.1.  FC Sequence Format
  contents:
  - "4.1.  FC Sequence Format\n   An IPv6 packet is mapped to an Information Unit\
    \ at the FC-4 level of\n   Fibre Channel, which in turn is mapped to an FC Sequence\
    \ by the FC-2\n   level.  An FC Information Unit containing an IPv6 packet MUST\
    \ carry\n   the FC Network_Header [FC-FS] and the LLC/SNAP header [IEEE-LLC],\n\
    \   resulting in the FC Information Unit format depicted in figure 2.\n    +---------------+---------------+---------------+---------------+\n\
    \    |                                                               |\n    +-\
    \                                                             -+\n    |      \
    \                  Network_Header                         |\n    +-          \
    \               (16 octets)                         -+\n    |                \
    \                                               |\n    +-                    \
    \                                         -+\n    |                          \
    \                                     |\n    +---------------+---------------+---------------+---------------+\n\
    \    |                        LLC/SNAP header                        |\n    +-\
    \                          (8 octets)                         -+\n    |      \
    \                                                         |\n    +---------------+---------------+---------------+---------------+\n\
    \    |                                                               |\n    +-\
    \                                                             -+\n    /      \
    \                    IPv6 Packet                          /\n    /           \
    \                                                    /\n    +-               \
    \                                              -+\n    |                     \
    \                                          |\n    +---------------+---------------+---------------+---------------+\n\
    \            Fig. 2: FC Information Unit Mapping an IPv6 Packet\n   The FC ESP_Header\
    \ [FC-FS] MAY be used to secure the FC frames\n   composing the FC Sequence. [AH]\
    \ or [ESP] may be used to provide\n   security at the IPv6 layer.  Other types\
    \ of FC Optional Header MUST\n   NOT be used in an IPv6 FC Sequence.\n   Typically,\
    \ a Sequence consists of more than one frame.  Only the\n   first frame of the\
    \ Sequence MUST include the FC Network_Header and\n   the LLC/SNAP header.  The\
    \ other frames MUST NOT include them, as\n   depicted in figure 3.\n         \
    \             First Frame of an IPv6 FC Sequence\n   +-----------+-------------------+-----------------+-------//--------+\n\
    \   | FC Header | FC Network_Header | LLC/SNAP header | First chunk of  |\n  \
    \ |           |                   |                 | the IPv6 Packet |\n   +-----------+-------------------+-----------------+-------//--------+\n\
    \                  Subsequent Frames of an IPv6 FC Sequence\n             +-----------+-----------------//------------------+\n\
    \             | FC Header | Additional chunk of the IPv6 Packet |\n          \
    \   +-----------+----------------//-------------------+\n              Fig. 3:\
    \ Optional Headers in an IPv6 FC Sequence\n"
- title: 4.2.  FC Classes of Service
  contents:
  - "4.2.  FC Classes of Service\n   This specification uses FC Class 3.  IPv6 packets\
    \ carrying Neighbor\n   Discovery [DISC] messages MUST be encapsulated in Class\
    \ 3 FC frames.\n   Other IPv6 packets SHOULD use Class 3 as well.  The use of\
    \ other\n   Classes of service is outside the scope of this specification.\n"
- title: 4.3.  FC Header Code Points
  contents:
  - "4.3.  FC Header Code Points\n   The fields of the Fibre Channel Header are depicted\
    \ in figure 4.  The\n   D_ID and S_ID fields contain respectively the destination\
    \ N_Port_ID\n   and the source N_Port_ID.  To encapsulate IPv6 over Fibre Channel\
    \ the\n   following code points MUST be used:\n   -  R_CTL: 0x04 (Device_Data\
    \ frame with Unsolicited Data Information\n      Category [FC-FS])\n   -  TYPE:\
    \ 0x05 (IP over Fibre Channel)\n   -  CS_CTL/Prio:  0x0\n   -  DF_CTL: 0x20 (Network_Header)\
    \ for the first FC frame of an IPv6\n      Sequence, 0x00 for the following FC\
    \ frames.  If the FC ESP_Header\n      is used, then 0x60 for the first FC frame\
    \ of an IPv6 Sequence,\n      0x40 for the following FC frames.\n   -  F_CTL,\
    \ SEQ_ID, SEQ_CNT, OX_ID, RX_ID, Parameter: see section 10,\n      section 11,\
    \ and [FC-FS] for additional requirements.\n     0                   1       \
    \            2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     R_CTL     |                      D_ID                     |\n    +---------------+---------------+---------------+---------------+\n\
    \    |  CS_CTL/Prio  |                      S_ID                     |\n    +---------------+---------------+---------------+---------------+\n\
    \    |     TYPE      |                     F_CTL                     |\n    +---------------+---------------+---------------+---------------+\n\
    \    |    SEQ_ID     |    DF_CTL     |            SEQ_CNT            |\n    +---------------+---------------+---------------+---------------+\n\
    \    |             OX_ID             |             RX_ID             |\n    +---------------+---------------+---------------+---------------+\n\
    \    |                           Parameter                           |\n    +---------------+---------------+---------------+---------------+\n\
    \                         Fig. 4: FC Header Format\n"
- title: 4.4.  FC Network_Header
  contents:
  - "4.4.  FC Network_Header\n   The fields of the FC Network_Header are depicted\
    \ in figure 5.  For\n   use with IPv6 the N_Port_Names formats MUST be one of\
    \ 0x1, 0x2, 0x5,\n   0xC, 0xD, 0xE, 0xF.  IPv6 support for other Name_Identifier\
    \ formats\n   is outside the scope of this specification.\n     0            \
    \       1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +-\
    \                   Destination N_Port_Name                   -+\n    |      \
    \                                                         |\n    +---------------------------------------------------------------+\n\
    \    |                                                               |\n    +-\
    \                     Source N_Port_Name                      -+\n    |      \
    \                                                         |\n    +---------------------------------------------------------------+\n\
    \                     Fig. 5: FC Network_Header Format\n"
- title: 4.5.  LLC/SNAP Header
  contents:
  - "4.5.  LLC/SNAP Header\n   The fields of the LLC/SNAP Header [IEEE-LLC] are depicted\
    \ in figure\n   6.  To encapsulate IPv6 over Fibre Channel the following code\
    \ points\n   MUST be used:\n   -  DSAP: 0xAA\n   -  SSAP: 0xAA\n   -  CTRL: 0x03\n\
    \   -  OUI:  0x00-00-00\n   -  PID:  0x86-DD\n     0                   1     \
    \              2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     DSAP      |     SSAP      |     CTRL      |      OUI      |\n    +---------------+---------------+---------------+---------------+\n\
    \    |              OUI              |              PID              |\n    +---------------+---------------+---------------+---------------+\n\
    \                      Fig. 6: LLC/SNAP Header Format\n"
- title: 4.6.  Bit and Byte Ordering
  contents:
  - "4.6.  Bit and Byte Ordering\n   IPv6 packets are mapped to the FC-4 level using\
    \ the big-endian byte\n   ordering that corresponds to the standard network byte\
    \ order or\n   canonical form.\n"
- title: 5.  Maximum Transfer Unit
  contents:
  - "5.  Maximum Transfer Unit\n   The default MTU size for IPv6 [IPv6] packets over\
    \ Fibre Channel is\n   65280 octets.  This size may be reduced by a Router Advertisement\n\
    \   [DISC] containing an MTU option that specifies a smaller MTU, or by\n   manual\
    \ configuration of each Nx_Port.  However, as required by\n   [IPv6], the MTU\
    \ MUST NOT be lower than 1280 octets.  If a Router\n   Advertisement received\
    \ on an Nx_Port has an MTU option specifying an\n   MTU larger than 65280, or\
    \ larger than a manually configured value,\n   that MTU option MAY be logged to\
    \ system management but MUST be\n   otherwise ignored.\n   As the default MTU\
    \ size far exceeds the message sizes typically used\n   in the Internet, an IPv6\
    \ over FC implementation SHOULD implement Path\n   MTU Discovery [PMTUD], or at\
    \ least maintain different MTU values for\n   on-link and off-link destinations.\n\
    \   For correct operation in a routed environment, it is critically\n   important\
    \ to configure an appropriate MTU option in Router\n   Advertisements.\n   For\
    \ correct operation when mixed media (e.g., Ethernet and Fibre\n   Channel) are\
    \ bridged together, the smallest MTU of all the media must\n   be advertised by\
    \ routers in an MTU option.  If there are no routers\n   present, this MTU must\
    \ be manually configured in each node which is\n   connected to a medium with\
    \ a default MTU larger than the smallest\n   MTU.\n"
- title: 6.  Stateless Address Autoconfiguration
  contents:
  - '6.  Stateless Address Autoconfiguration

    '
- title: 6.1.  IPv6 Interface Identifier and Address Prefix
  contents:
  - "6.1.  IPv6 Interface Identifier and Address Prefix\n   The IPv6 Interface ID\
    \ [AARCH] for an Nx_Port is based on the EUI-64\n   address [EUI64] derived from\
    \ the Nx_Port's N_Port_Name.  The IPv6\n   Interface Identifier is obtained by\
    \ complementing the Universal/Local\n   bit of the OUI field of the derived EUI-64\
    \ address.\n   [FC-FS] specifies a method to map format 0x1 (IEEE 48 bit address),\n\
    \   or 0x2 (IEEE Extended), or 0x5 (IEEE Registered) FC Name_Identifiers\n   in\
    \ EUI-64 addresses.  This allows the usage of these Name_Identifiers\n   to support\
    \ IPv6. [FC-FS] also defines EUI-64 mapped FC\n   Name_Identifiers (formats 0xC,\
    \ 0xD, 0xE, and 0xF), that are derived\n   from an EUI-64 address.  It is possible\
    \ to reverse this address\n   mapping to obtain the original EUI-64 address in\
    \ order to support\n   IPv6.\n   Stateless address autoconfiguration MUST be performed\
    \ as specified in\n   [ACONF].  An IPv6 Address Prefix used for stateless address\n\
    \   autoconfiguration of an Nx_Port MUST have a length of 64 bits.\n"
- title: 6.2.  Generating an Interface ID from a Format 1 N_Port_Name
  contents:
  - "6.2.  Generating an Interface ID from a Format 1 N_Port_Name\n   The Name_Identifier\
    \ format 0x1 is depicted in figure 7.\n     0                   1            \
    \       2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0 0 0 1|         0x000         |              OUI              |\n    +-------+-------+---------------+---------------+---------------+\n\
    \    |      OUI      |                      VSID                     |\n    +---------------+---------------+---------------+---------------+\n\
    \                    Fig. 7: Format 0x1 Name_Identifier\n   The EUI-64 address\
    \ derived from this Name_Identifier has the format\n   depicted in figure 8 [FC-FS].\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         OUI with complemented U/L bit         |0 0 0 1|  VSID |\n    +---------------+---------------+-------+-------+-------+-------+\n\
    \    |                   VSID                |         0x000         |\n    +---------------+---------------+-------+-------+---------------+\n\
    \         Fig. 8: EUI-64 Address from a Format 0x1 Name_Identifier\n   The IPv6\
    \ Interface Identifier is obtained from this EUI-64 address by\n   complementing\
    \ the U/L bit in the OUI field.  So the OUI in the IPv6\n   Interface ID is exactly\
    \ as in the FC Name_Identifier.  The resulting\n   IPv6 Interface Identifier has\
    \ local scope [AARCH] and the format\n   depicted in figure 9.\n     0       \
    \            1                   2                   3\n     0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      OUI                      |0 0 0 1|  VSID |\n    +---------------+---------------+-------+-------+-------+-------+\n\
    \    |                   VSID                |         0x000         |\n    +---------------+---------------+-------+-------+---------------+\n\
    \        Fig. 9: IPv6 Interface ID from a Format 0x1 Name_Identifier\n   As an\
    \ example, the FC Name_Identifier 0x10-00-34-63-46-AB-CD-EF\n   generates the\
    \ IPv6 Interface Identifier 3463:461A:BCDE:F000.\n"
- title: 6.3.  Generating an Interface ID from a Format 2 N_Port_Name
  contents:
  - "6.3.  Generating an Interface ID from a Format 2 N_Port_Name\n   The Name_Identifier\
    \ format 0x2 is depicted in figure 10.\n     0                   1           \
    \        2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0 0 1 0|    Vendor Specific    |              OUI              |\n    +-------+-------+---------------+---------------+---------------+\n\
    \    |      OUI      |                      VSID                     |\n    +---------------+---------------+---------------+---------------+\n\
    \                    Fig. 10: Format 0x2 Name_Identifier\n   The EUI-64 address\
    \ derived from this Name_Identifier has the format\n   depicted in figure 11 [FC-FS].\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         OUI with complemented U/L bit         |0 0 1 0|  VSID |\n    +---------------+-----------------------+-------+-------+-------+\n\
    \    |                   VSID                |    Vendor Specific    |\n    +---------------+-----------------------+-------+---------------+\n\
    \         Fig. 11: EUI-64 Address from a Format 0x2 Name_Identifier\n   The IPv6\
    \ Interface Identifier is obtained from this EUI-64 address by\n   complementing\
    \ the U/L bit in the OUI field.  So the OUI in the IPv6\n   Interface ID is exactly\
    \ as in the FC Name_Identifier.  The resulting\n   IPv6 Interface Identifier has\
    \ local scope [AARCH] and the format\n   depicted in figure 12.\n     0      \
    \             1                   2                   3\n     0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      OUI                      |0 0 1 0|  VSID |\n    +---------------+-----------------------+-------+-------+-------+\n\
    \    |                   VSID                |    Vendor Specific    |\n    +---------------+-----------------------+-------+---------------+\n\
    \       Fig. 12: IPv6 Interface ID from a Format 0x2 Name_Identifier\n   As an\
    \ example, the FC Name_Identifier 0x27-89-34-63-46-AB-CD-EF\n   generates the\
    \ IPv6 Interface Identifier 3463:462A:BCDE:F789.\n"
- title: 6.4.  Generating an Interface ID from a Format 5 N_Port_Name
  contents:
  - "6.4.  Generating an Interface ID from a Format 5 N_Port_Name\n   The Name_Identifier\
    \ format 0x5 is depicted in figure 13.\n     0                   1           \
    \        2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |0 1 0 1|                      OUI                      |  VSID |\n    +-------+-------+---------------+---------------+-------+-------+\n\
    \    |                             VSID                              |\n    +---------------+---------------+---------------+---------------+\n\
    \                    Fig. 13: Format 0x5 Name_Identifier\n   The EUI-64 address\
    \ derived from this Name_Identifier has the format\n   depicted in figure 14 [FC-FS].\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         OUI with complemented U/L bit         |0 1 0 1|  VSID |\n    +---------------+---------------+---------------+-------+-------+\n\
    \    |                             VSID                              |\n    +---------------+---------------+---------------+---------------+\n\
    \         Fig. 14: EUI-64 Address from a Format 0x5 Name_Identifier\n   The IPv6\
    \ Interface Identifier is obtained from this EUI-64 address\n   complementing\
    \ the U/L bit in the OUI field.  So the OUI in the IPv6\n   Interface ID is exactly\
    \ as in the FC Name_Identifier.  The resulting\n   IPv6 Interface Identifier has\
    \ local scope [AARCH] and the format\n   depicted in figure 15.\n     0      \
    \             1                   2                   3\n     0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      OUI                      |0 1 0 1|  VSID |\n    +---------------+---------------+---------------+-------+-------+\n\
    \    |                             VSID                              |\n    +---------------+---------------+---------------+---------------+\n\
    \       Fig. 15: IPv6 Interface ID from a Format 0x5 Name_Identifier\n   As an\
    \ example, the FC Name_Identifier 0x53-46-34-6A-BC-DE-F7-89\n   generates the\
    \ IPv6 Interface Identifier 3463:465A:BCDE:F789.\n"
- title: 6.5.  Generating an Interface ID from an EUI-64 mapped N_Port_Name
  contents:
  - "6.5.  Generating an Interface ID from an EUI-64 mapped N_Port_Name\n   The EUI-64\
    \ mapped Name_Identifiers formats (formats 0xC through 0xF)\n   are derived from\
    \ an EUI-64 address by compressing the OUI field of\n   such addresses.  The compression\
    \ is performed by removing from the\n   OUI the Universal/Local and Individual/Group\
    \ bits, and by putting\n   bits 0 to 5 of the OUI in the first octet of the Name_Identifier,\
    \ and\n   bits 8 to 23 of the OUI in the second and third octet of the\n   Name_Identifier,\
    \ as shown in figure 16.\n     0                   1                   2     \
    \              3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |1 1| OUI[0..5] |           OUI[8..23]          |      VSID     |\n    +---+-----------+---------------+---------------+---------------+\n\
    \    |                             VSID                              |\n    +---------------+---------------+---------------+---------------+\n\
    \              Fig. 16: EUI-64 Mapped Name_Identifiers Format\n   The EUI-64 address\
    \ used to generate the Name_Identifier shown in\n   figure 16 has the format depicted\
    \ in figure 17.\n     0                   1                   2              \
    \     3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \ OUI[0..5] |0 0|           OUI[8..23]          |      VSID     |\n    +-----------+---+---------------+---------------+---------------+\n\
    \    |                             VSID                              |\n    +---------------+---------------+---------------+---------------+\n\
    \       Fig. 17: EUI-64 Address from an EUI-64 Mapped Name_Identifier\n   The\
    \ IPv6 Interface Identifier is obtained from this EUI-64 address by\n   complementing\
    \ the U/L bit in the OUI field.  The resulting IPv6\n   Interface Identifier has\
    \ global scope [AARCH] and the format depicted\n   in figure 18.\n     0     \
    \              1                   2                   3\n     0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | OUI[0..5] |1 0|           OUI[8..23]          |      VSID     |\n    +-----------+---+---------------+---------------+---------------+\n\
    \    |                             VSID                              |\n    +---------------+---------------+---------------+---------------+\n\
    \     Fig. 18: IPv6 Interface ID from an EUI-64 Mapped Name_Identifier\n   As\
    \ an example, the FC Name_Identifier 0xCD-63-46-AB-01-25-78-9A\n   generates the\
    \ IPv6 Interface Identifier 3663:46AB:0125:789A.\n"
- title: 7.  Link-Local Addresses
  contents:
  - "7.  Link-Local Addresses\n   The IPv6 link-local address [AARCH] for an Nx_Port\
    \ is formed by\n   appending the Interface Identifier, as defined in section 6,\
    \ to the\n   prefix FE80::/64.  The resulting address is depicted in figure 19.\n\
    \      10 bits            54 bits                  64 bits\n    +----------+-----------------------+----------------------------+\n\
    \    |1111111010|         (zeros)       |    Interface Identifier    |\n    +----------+-----------------------+----------------------------+\n\
    \                  Fig. 19: IPv6 link-local Address Format\n"
- title: 8.  Address Mapping for Unicast
  contents:
  - "8.  Address Mapping for Unicast\n   An Nx_Port has two kinds of Fibre Channel\
    \ addresses:\n   -  a non-volatile 64-bit address, called N_Port_Name;\n   - \
    \ a volatile 24-bit address, called N_Port_ID.\n   The N_Port_Name is used to\
    \ uniquely identify the Nx_Port, while the\n   N_Port_ID is used to route frames\
    \ to the Nx_Port.  Both FC addresses\n   are required to resolve an IPv6 unicast\
    \ address.  The fact that the\n   N_Port_ID is volatile implies that an Nx_Port\
    \ MUST validate the\n   mapping between its N_Port_Name and N_Port_ID when certain\
    \ Fibre\n   Channel events occur (see Appendix B).\n   The procedure for mapping\
    \ IPv6 unicast addresses into Fibre Channel\n   link-layer addresses uses the\
    \ Neighbor Discovery Protocol [DISC].\n   The Source/Target Link-layer Address\
    \ option has the format depicted\n   in figure 20 when the link layer is Fibre\
    \ Channel.\n     0                   1                   2                   3\n\
    \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |  Length = 2   |           Reserved            |\n    +---------------+---------------+---------------+---------------+\n\
    \    |                                                               |\n    +-\
    \                         N_Port_Name                         -+\n    |      \
    \                                                         |\n    +---------------+---------------+---------------+---------------+\n\
    \    |   Reserved    |                   N_Port_ID                   |\n    +---------------+---------------+---------------+---------------+\n\
    \    Fig. 20: Source/Target Link-layer Address option for Fibre Channel\n   Type:\
    \            1 for Source Link-layer address.\n                    2 for Target\
    \ Link-layer address.\n   Length:          2 (in units of 8 octets).\n   N_Port_Name:\
    \     This field contains the Nx_Port's N_Port_Name.\n   N_Port_ID:       This\
    \ field contains the Nx_Port's N_Port_ID.\n   Reserved fields MUST be zero when\
    \ transmitting, and MUST be ignored\n   when receiving.\n"
- title: 9.  Address Mapping for Multicast
  contents:
  - "9.  Address Mapping for Multicast\n   By default, all best-effort IPv6 multicast\
    \ packets MUST be mapped to\n   FC Sequences addressed to the broadcast N_Port_ID\
    \ 0xFF-FF-FF.  In\n   particular, datagrams addressed to all-nodes multicast address,\n\
    \   all-routers multicast address, and solicited-node multicast addresses\n  \
    \ [AARCH] MUST be sent as Class 3 FC Sequences addressed to the\n   broadcast\
    \ N_Port_ID 0xFF-FF-FF.  In this case, the Destination\n   N_Port_Name field of\
    \ the FC Network_Header MUST be set to the value\n   0x10-00-FF-FF-FF-FF-FF-FF.\
    \  Appendix A specifies how to transmit a\n   Class 3 broadcast FC Sequence over\
    \ various Fibre Channel topologies.\n   An Nx_Port supporting IPv6 MUST be able\
    \ to map a received broadcast\n   Class 3 Device_Data FC frame to an implicit\
    \ Port Login context in\n   order to handle IPv6 multicast packets.  The receive\
    \ data field size\n   of this implicit Port Login MUST be the same across all\
    \ the Nx_Ports\n   connected to the same Fabric, otherwise FC broadcast transmission\n\
    \   does not work.  In order to reduce the need for FC Sequence\n   segmentation,\
    \ the receive data field size of this implicit Port Login\n   SHOULD be 1024 octets.\
    \  This receive data field size requirement\n   applies to broadcast Device_Data\
    \ FC frames, not to ELSs.\n   Receiving an FC Sequence carrying an IPv6 multicast\
    \ packet MAY\n   trigger some additional processing by the Nx_Port if that IPv6\
    \ packet\n   requires a unicast reply.  In this case, if a valid Port Login to\
    \ the\n   Nx_Port that sent the IPv6 multicast packet does not exist, the\n  \
    \ Nx_Port MUST perform such a Port Login, and then use it for the\n   unicast\
    \ IPv6 reply.  In the case of Neighbor Discovery messages\n   [DISC], the N_Port_ID\
    \ to which the Port Login is directed is taken\n   from the N_Port_ID field of\
    \ the Source/Target Link-layer Address\n   option.\n   As an example, an Nx_Port\
    \ processes a received broadcast FC Sequence\n   carrying an IPv6 multicast unsolicited\
    \ router advertisement [DISC]\n   simply by passing the carried IPv6 packet to\
    \ the IPv6 layer.\n   Instead, if a received broadcast FC Sequence carries an\
    \ IPv6\n   multicast solicitation message [DISC] requiring a unicast reply, and\n\
    \   no valid Port Login exists with the Nx_Port sender of the multicast\n   packet,\
    \ then a Port Login MUST be performed in order to send the\n   unicast reply message.\
    \  If a received broadcast FC Sequence carries\n   an IPv6 multicast solicitation\
    \ message [DISC] requiring a multicast\n   reply, the reply is sent to the broadcast\
    \ N_Port_ID 0xFF-FF-FF.\n   Best-effort IPv6 multicast for other multicast group\
    \ addresses MAY\n   use Fibre Channel Multicast Groups [FC-FS], if supported by\
    \ the\n   particular FC topology and implementation.\n"
- title: 10.  Sequence Management
  contents:
  - "10.  Sequence Management\n   FC Sequences are REQUIRED to be non-streamed.  In\
    \ order to avoid\n   missing FC frame aliasing by Sequence_ID reuse, an Nx_Port\
    \ supporting\n   IPv6 is REQUIRED to use continuously increasing SEQ_CNT [FC-FS].\n\
    \   Each Exchange MUST start with SEQ_CNT = 0 in the first frame, and\n   every\
    \ frame transmitted after that MUST increment the previous\n   SEQ_CNT by one.\
    \  Any frames received from the other N_Port in the\n   Exchange shall have no\
    \ effect on the transmitted SEQ_CNT.\n"
- title: 11.  Exchange Management
  contents:
  - "11.  Exchange Management\n   To transfer IPv6 packets, each Nx_Port MUST have\
    \ a dedicated Exchange\n   for sending data to each Nx_Port in the network and\
    \ a dedicated\n   Exchange for receiving data from each Nx_Port.\n   An Exchange\
    \ Responder is not required to assign RX_IDs.  If an RX_ID\n   of 0xFFFF is assigned,\
    \ the Exchange Responder is identifying\n   Exchanges based on S_ID / D_ID / OX_ID\
    \ only.\n   When an Exchange is created between two Nx_Ports for unicast IPv6\n\
    \   packets, it remains active while the Nx_Ports are logged in with each\n  \
    \ other.  Each FC broadcast and ELS [FC-FS] SHOULD use a separate short\n   lived\
    \ Exchange.\n   For IPv6, Exchanges MUST NOT transfer Sequence Initiative, because\n\
    \   they are used in a unidirectional mode.  The Sequence Initiative bit\n   in\
    \ the F_CTL field of the FC Header [FC-FS] MUST be set to 0.\n   The mechanism\
    \ for aging or expiring exchanges based on activity,\n   timeout, or other methods\
    \ is outside the scope of this document.\n   The Exchange Originator MAY terminate\
    \ Exchanges by setting the F_CTL\n   LS bit [FC-FS].  Exchanges MAY be torn down\
    \ by the Exchange\n   Originator or Exchange Responder by using the ABTS (Abort\
    \ Sequence)\n   protocol [FC-FS].  IPv6 Exchanges SHOULD NOT be terminated by\
    \ Logout,\n   since this may terminate active Exchanges on other FC-4s [FC-FS].\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   IPv6 does not introduce any additional security\
    \ concerns beyond those\n   that already exist within the Fibre Channel protocols.\
    \  Zoning\n   techniques based on FC Name Server masking (soft zoning) do not\
    \ work\n   with IPv6, because IPv6 over Fibre Channel does not use the FC Name\n\
    \   Server.  The FC ESP_Header [FC-FS] may be used to secure the FC\n   frames\
    \ composing FC Sequences carrying IPv6 packets.  All the\n   techniques defined\
    \ to secure IPv6 traffic at the IPv6 layer may be\n   used in a Fibre Channel\
    \ environment.\n"
- title: 13.  Acknowledgments
  contents:
  - "13.  Acknowledgments\n   The author would like to acknowledge the authors of\
    \ [IPFC], [ETHER],\n   and [IPv6-1394], since some part of this document has been\
    \ derived\n   from them, as well as the ANSI INCITS T11.3 Task Group members who\n\
    \   reviewed this document.\n"
- title: 14. References
  contents:
  - '14. References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [FC-FS]     ANSI INCITS 373-2003, \"Fibre Channel\
    \ - Framing and\n               Signaling (FC-FS)\".\n   [FC-AL-2]   ANSI INCITS\
    \ 332-1999, \"Fibre Channel - Arbitrated Loop-2\n               (FC-AL-2)\".\n\
    \   [IPv6]      Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n  \
    \             (IPv6) Specification\", RFC 2460, December 1998.\n   [AARCH]   \
    \  Hinden, R. and S. Deering, \"Internet Protocol Version 6\n               (IPv6)\
    \ Addressing Architecture\", RFC 3513, April 2003.\n   [ACONF]     Thomson, S.\
    \ and T. Narten, \"IPv6 Stateless Address\n               Autoconfiguration\"\
    , RFC 2462, December 1998.\n   [DISC]      Narten, T., Nordmark, E., and W. Simpson,\
    \ \"Neighbor\n               Discovery for IP Version 6 (IPv6)\", RFC 2461, December\n\
    \               1998.\n   [PMTUD]     McCann, J., Deering, S., and J. Mogul, \"\
    Path MTU\n               Discovery for IP version 6\", RFC 1981, August 1996.\n\
    \   [IEEE-LLC]  IEEE Std 802-2001, \"IEEE Standard for Local and\n           \
    \    Metropolitan Area Networks: Overview and Architecture\".\n   [KEYWORDS] \
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [IPFC]      Rajagopal, M., Bhagwat, R., and\
    \ W. Rickard, \"IP and ARP\n               over Fibre Channel\", RFC 2625, June\
    \ 1999.\n   [AH]        Kent, S. and R. Atkinson, \"IP Authentication Header\"\
    , RFC\n               2402, November 1998.\n   [ESP]       Kent, S. and R. Atkinson,\
    \ \"IP Encapsulating Security\n               Payload (ESP)\", RFC 2406, November\
    \ 1998.\n   [EUI64]     \"Guidelines For 64-bit Global Identifier (EUI-64)\",\n\
    \               http://standards.ieee.org/db/oui/tutorials/EUI64.html\n   [ETHER]\
    \     Crawford, M., \"Transmission of IPv6 Packets over Ethernet\n           \
    \    Networks\", RFC 2464, December 1998.\n   [IPv6-1394] Fujisawa, K. and A.\
    \ Onoe, \"Transmission of IPv6 Packets\n               over IEEE 1394 Networks\"\
    , RFC 3146, October 2001.\n"
- title: A.  Transmission of a Broadcast FC Sequence over FC Topologies
  contents:
  - 'A.  Transmission of a Broadcast FC Sequence over FC Topologies

    '
- title: A.1.  Point-to-Point Topology
  contents:
  - "A.1.  Point-to-Point Topology\n   No particular mechanisms are required for this\
    \ case.  The Nx_Port\n   connected at the other side of the cable receives the\
    \ broadcast FC\n   Sequence having D_ID 0xFFFFFF.\n"
- title: A.2.  Private Loop Topology
  contents:
  - "A.2.  Private Loop Topology\n   An NL_Port attached to a private loop MUST transmit\
    \ a Class 3\n   broadcast FC Sequence by using the OPN(fr) primitive signal\n\
    \   [FC-AL-2].\n   a) The source NL_Port first sends an Open Broadcast Replicate\n\
    \      (OPN(fr)) primitive signal, forcing all the NL_Ports in the loop\n    \
    \  (except itself) to replicate the frames that they receive while\n      examining\
    \ the FC Header's D_ID field.\n   b) The source NL_Port then removes the OPN(fr)\
    \ signal when it returns\n      to it.\n   c) The source NL_Port then sends the\
    \ Class 3 broadcast FC Sequence\n      having D_ID 0xFFFFFF.\n"
- title: A.3.  Public Loop Topology
  contents:
  - "A.3.  Public Loop Topology\n   An NL_Port attached to a public loop MUST NOT\
    \ use the OPN(fr)\n   primitive signal.  Rather, it MUST send the Class 3 broadcast\
    \ FC\n   Sequence having D_ID 0xFFFFFF to the FL_Port at AL_PA = 0x00\n   [FC-AL-2].\n\
    \   The Fabric propagates the broadcast to all other FC_Ports [FC-FS],\n   including\
    \ the FL_Port which the broadcast arrives on.  This includes\n   all F_Ports,\
    \ and other FL_Ports.\n   Each FL_Port propagates the broadcast by using the primitive\
    \ signal\n   OPN(fr), in order to prepare the loop to receive the broadcast\n\
    \   sequence.\n"
- title: A.4.  Fabric Topology
  contents:
  - "A.4.  Fabric Topology\n   An N_Port connected to an F_Port MUST transmit the\
    \ Class 3 broadcast\n   FC Sequence having D_ID 0xFFFFFF to the F_Port.  The Fabric\n\
    \   propagates the broadcast to all other FC_Ports [FC-FS].\n"
- title: B.  Validation of the <N_Port_Name, N_Port_ID> mapping
  contents:
  - 'B.  Validation of the <N_Port_Name, N_Port_ID> mapping

    '
- title: B.1.  Overview
  contents:
  - "B.1.  Overview\n   At all times, the <N_Port_Name, N_Port_ID> mapping must be\
    \ valid\n   before use.\n   After an FC link interruption occurs, the N_Port_ID\
    \ of an Nx_Port may\n   change, as well as the N_Port_IDs of all other Nx_Ports\
    \ that have\n   previously performed Port Login with this Nx_Port.  Because of\
    \ this,\n   address validation is required after a LIP in a loop topology\n  \
    \ [FC-AL-2] or after NOS/OLS in a point-to-point topology [FC-FS].\n   N_Port_IDs\
    \ do not change as a result of Link Reset (LR) [FC-FS], thus\n   address validation\
    \ is not required in this case.\n"
- title: B.2.  FC Layer Address Validation in a Point-to-Point Topology
  contents:
  - "B.2.  FC Layer Address Validation in a Point-to-Point Topology\n   No validation\
    \ is required after LR.  In a point-to-point topology,\n   NOS/OLS causes implicit\
    \ Logout of each N_Port and after a NOS/OLS\n   each N_Port must again perform\
    \ a Port Login [FC-FS].\n"
- title: B.3.  FC Layer Address Validation in a Private Loop Topology
  contents:
  - "B.3.  FC Layer Address Validation in a Private Loop Topology\n   After a LIP\
    \ [FC-AL-2], an NL_Port must not transmit any data to\n   another NL_Port until\
    \ the address of the other port has been\n   validated.  The validation consists\
    \ of completing either ADISC or\n   PDISC [FC-FS].\n   For a requester, this specification\
    \ prohibits PDISC and requires\n   ADISC.  As a responder, an implementation may\
    \ need to respond to both\n   ADISC and PDISC for compatibility with other FC\
    \ specifications.\n   If the three FC addresses (N_Port_ID, N_Port_Name, Node_Name)\
    \ of a\n   logged remote NL_Port exactly match the values prior to the LIP, then\n\
    \   any active Exchange with that NL_Port may continue.\n   If any of the three\
    \ FC addresses has changed, then the remote NL_Port\n   must be logged out.\n\
    \   If an NL_Port's N_Port_ID changes after a LIP, then all active logged\n  \
    \ in NL_Ports must be logged out.\n"
- title: B.4.  FC Layer Address Validation in a Public Loop Topology
  contents:
  - "B.4.  FC Layer Address Validation in a Public Loop Topology\n   A FAN ELS may\
    \ be sent by the Fabric to all known previously logged in\n   NL_Ports following\
    \ an initialization event.  Therefore, after a LIP\n   [FC-AL-2], NL_Ports may\
    \ wait for this notification to arrive, or they\n   may perform an FLOGI.\n  \
    \ If the F_Port_Name and Fabric_Name contained in the FAN ELS or FLOGI\n   response\
    \ exactly match the values before the LIP and if the AL_PA\n   [FC-AL-2] obtained\
    \ by the NL_Port is the same as the one before the\n   LIP, then the port may\
    \ resume all Exchanges.  If not, then FLOGI must\n   be performed with the Fabric\
    \ and all logged in Nx_Ports must be\n   logged out.\n   A public loop NL_Port\
    \ must perform the private loop validation as\n   specified in section B.3 to\
    \ any NL_Port on the local loop that has an\n   N_Port_ID of the form 0x00-00-XX.\n"
- title: B.5.  FC Layer Address Validation in a Fabric Topology
  contents:
  - "B.5.  FC Layer Address Validation in a Fabric Topology\n   No validation is required\
    \ after LR (link reset).\n   After NOS/OLS, an N_Port must perform FLOGI.  If,\
    \ after FLOGI, the\n   N_Port's N_Port_ID, the F_Port_Name, and the Fabric_Name\
    \ are the same\n   as before the NOS/OLS, then the N_Port may resume all Exchanges.\
    \  If\n   not, all logged in Nx_Ports must be logged out [FC-FS].\n"
- title: C.  Fibre Channel Bit and Byte Numbering Guidance
  contents:
  - "C.  Fibre Channel Bit and Byte Numbering Guidance\n   Both Fibre Channel and\
    \ IETF standards use the same byte transmission\n   order.  However, the bit numbering\
    \ is different.\n   Fibre Channel bit numbering can be observed if the data structure\n\
    \   heading shown in figure 21 is cut and pasted at the top of the\n   figures\
    \ present in this document.\n       3                   2                   1\
    \                   0\n     1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7\
    \ 6 5 4 3 2 1 0\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                   Fig. 21: Fibre Channel Bit Numbering\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Claudio DeSanti\n   Cisco Systems, Inc.\n   170 W. Tasman\
    \ Dr.\n   San Jose, CA 95134\n   USA\n   Phone: +1 408 853-9172\n   EMail: cds@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
