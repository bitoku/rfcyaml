- title: __initial_text__
  contents:
  - "           Forwarding and Control Element Separation (ForCES)\n          Logical\
    \ Functional Block (LFB) Subsidiary Management\n"
- title: Abstract
  contents:
  - "Abstract\n   Deployment experience has demonstrated the value of using the\n\
    \   Forwarding and Control Element Separation (ForCES) architecture to\n   manage\
    \ resources other than packet forwarding.  In that spirit, the\n   Forwarding\
    \ Element Manager (FEM) is modeled by creating a Logical\n   Functional Block\
    \ (LFB) to represent its functionality.  We refer to\n   this LFB as the Subsidiary\
    \ Mechanism (SM) LFB.  A Control Element\n   (CE) that controls a Forwarding Element's\
    \ (FE) resources can also\n   manage its configuration via the SM LFB.  This document\
    \ introduces\n   the SM LFB class, an LFB class that specifies the configuration\n\
    \   parameters of an FE.  The configuration parameters include new LFB\n   class\
    \ loading and CE associations; they also provide manipulation of\n   debug mechanisms\
    \ along with a general purpose attribute definition to\n   describe configuration\
    \ information.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7729.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   5\n     1.2.  Definitions . . . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n   2.  Use Cases . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   6\n     2.1.  High Availability . . . . . . . . . . . . . . . . . . .\
    \ .   6\n     2.2.  Scalability . . . . . . . . . . . . . . . . . . . . . . .\
    \   6\n     2.3.  Adding New Resources to an NE . . . . . . . . . . . . . .  \
    \ 6\n     2.4.  New LFB Class Installation  . . . . . . . . . . . . . . .   6\n\
    \     2.5.  Logging Mechanism . . . . . . . . . . . . . . . . . . . .   7\n  \
    \   2.6.  General-Purpose Attribute Definition  . . . . . . . . . .   7\n   3.\
    \  Applicability Statement . . . . . . . . . . . . . . . . . . .   8\n     3.1.\
    \  FE Integrated . . . . . . . . . . . . . . . . . . . . . .   8\n     3.2.  Virtual\
    \ FEs . . . . . . . . . . . . . . . . . . . . . . .   8\n   4.  SM Library  .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .   8\n     4.1.  Frame Definitions\
    \ . . . . . . . . . . . . . . . . . . . .   8\n     4.2.  Data Type Definitions\
    \ . . . . . . . . . . . . . . . . . .   9\n     4.3.  Metadata Definitions  .\
    \ . . . . . . . . . . . . . . . . .   9\n     4.4.  SM  . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .   9\n       4.4.1.  Data Handling . . . . .\
    \ . . . . . . . . . . . . . . .  10\n       4.4.2.  Components  . . . . . . .\
    \ . . . . . . . . . . . . . .  10\n       4.4.3.  Capabilities  . . . . . . .\
    \ . . . . . . . . . . . . .  10\n       4.4.4.  Events  . . . . . . . . . . .\
    \ . . . . . . . . . . . .  11\n   5.  XML for SM LFB  . . . . . . . . . . . .\
    \ . . . . . . . . . . .  11\n   6.  Security Considerations . . . . . . . . .\
    \ . . . . . . . . . .  17\n   7.  IANA Considerations . . . . . . . . . . . .\
    \ . . . . . . . . .  18\n     7.1.  LFB Class Names and LFB Class Identifiers\
    \ . . . . . . . .  18\n   8.  References  . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  18\n     8.1.  Normative References  . . . . . . . . . . . .\
    \ . . . . . .  18\n     8.2.  Informative References  . . . . . . . . . . . .\
    \ . . . . .  19\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  20\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Deployment experience has demonstrated the value of using\
    \ the\n   Forwarding and Control Element Separation (ForCES) architecture to\n\
    \   manage resources other than packet forwarding.  In that spirit, the\n   Forwarding\
    \ Element Manager (FEM) is modeled by creating a Logical\n   Functional Block\
    \ (LFB) to represent its functionality.  We refer to\n   this LFB as the Subsidiary\
    \ Mechanism (SM) LFB.  A Control Element\n   (CE) that controls a Forwarding Element's\
    \ (FE) resources can also\n   manage its configuration via the SM LFB.  This document\
    \ introduces\n   the SM LFB class, an LFB that specifies the configuration parameters\n\
    \   of an FE.\n   On a running FE, a CE application may update an FE's runtime\n\
    \   configuration via the SM LFB instance.\n                              ForCES\
    \ Network Element\n                             +-------------------------------------+\n\
    \                             |         +---------------------+     |\n      \
    \                       |         | Control Application |     |\n            \
    \                 |         +--+--------------+---+     |\n                  \
    \           |            |              |         |\n                        \
    \     |            |              |         |\n      --------------   Fc    |\
    \ -----------+--+      +-----+------+ |\n      | CE Manager |---------+-|    \
    \ CE 1    |------|    CE 2    | |\n      --------------         | |          \
    \   |  Fr  |            | |\n            |                | +-+---------+-+  \
    \    +------------+ |\n            | Fl             |   |         | Fp       \
    \ /           |\n            |                |   |         +--------+ /     \
    \       |\n            |                |   | Fp               |/            \
    \ |\n            |                |   |                  |              |\n  \
    \          |                |   |         Fp      /|----+         |\n        \
    \    |                |   |       /--------/      |         |\n      --------------\
    \     Ff  | ---+----------      --------------  |\n      | FE Manager |---------+-|\
    \     FE 1   |  Fi  |     FE 2   |  |\n      --------------         | |      \
    \      |------|            |  |\n                             | --------------\
    \      --------------  |\n                             |   |  |  |  |        \
    \  |  |  |  |    |\n                             ----+--+--+--+----------+--+--+--+-----\n\
    \                                 |  |  |  |          |  |  |  |\n           \
    \                      |  |  |  |          |  |  |  |\n                      \
    \             Fi/f                   Fi/f\n          Fp: CE-FE interface\n   \
    \       Fr: CE-CE interface\n          Fc: Interface between the CE Manager and\
    \ a CE\n          Ff: Interface between the FE Manager and an FE\n          Fl:\
    \ Interface between the CE Manager and the FE Manager\n          Fi/f: FE external\
    \ interface\n                  Figure 1: ForCES Architectural Diagram\n   Figure\
    \ 1 shows a control application manipulating, at runtime, FE\n   configuration\
    \ via the SM LFB control.  It would appear that this\n   control application is\
    \ playing the part of the FE Manager and thus\n   appears as the messaging for\
    \ Ff (FEM to FE interface) going via the\n   standard Fp plane.  However, the\
    \ SM LFB describes a subset of the\n   operations that can be performed over Ff;\
    \ it does not suggest moving\n   away from the Ff interface.\n   The SM LFB class\
    \ describes the configuration parameters of an FE,\n   namely the LFB classes\
    \ it should load, the CEs it should be\n   associated with, as well the respective\
    \ CE IP addresses.\n   Additionally, the SM LFB provides a general purpose attribute\n\
    \   definition to describe configuration information, as well as the\n   ability\
    \ to manipulate the debug logging mechanism.\n   This document assumes that FEs\
    \ are already booted.  The FE's\n   configuration can then be updated at runtime\
    \ via the SM LFB for\n   runtime configuration purposes.  This document does not\
    \ specify or\n   standardize the FEM-FE (Ff) interface as depicted in [RFC3746].\
    \  This\n   document describes a mechanism with which a CE can instruct the SM\n\
    \   for FE management using ForCES.\n   This work item makes no assumption of\
    \ whether FE resources are\n   physical or virtual.  In fact, the LFB library\
    \ provided here is\n   applicable to both.  Thus, it can also be useful in addressing\n\
    \   control of virtual FEs where individual FEMs can be addressed to\n   control\
    \ the creation, configuration, and resource assignment of such\n   virtual FEs\
    \ within a physical FE.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.2.  Definitions
  contents:
  - "1.2.  Definitions\n   This document follows the terminology defined by [RFC3654],\n\
    \   [RFC3746], [RFC5810], and [RFC5812].  In particular, the reader is\n   expected\
    \ to be familiar with the following terms:\n   o  Logical Functional Block (LFB)\n\
    \   o  Forwarding Element (FE)\n   o  Control Element (CE)\n   o  ForCES Network\
    \ Element (NE)\n   o  FE Manager (FEM)\n   o  CE Manager\n   o  ForCES Protocol\n\
    \   o  ForCES Protocol Layer (ForCES PL)\n   o  ForCES Protocol Transport Mapping\
    \ Layer (ForCES TML)\n"
- title: 2.  Use Cases
  contents:
  - "2.  Use Cases\n   In this section, we present sample use cases to illustrate\
    \ the need\n   and usefulness of the SM LFB.\n   All use cases assume that an\
    \ FE is already booted up and tied to at\n   least one CE.  A control application\
    \ can delete a CE from an FE's\n   table of CEs, which instructs the FE to terminate\
    \ the connection with\n   that removed CE.  Likewise, the control application\
    \ via the master CE\n   instructs an FE to establish a ForCES association with\
    \ a new CE by\n   adding a particular CE to the FE's CEs table.\n"
- title: 2.1.  High Availability
  contents:
  - "2.1.  High Availability\n   Assume an FE associated to only one CE.  At runtime,\
    \ a CE management\n   application may request, for redundancy reasons, that an\
    \ FE be\n   associated to another CE as a backup.  To achieve this goal, the CE\n\
    \   management application specifies the Control Element ID (CEID) of the\n  \
    \ new backup CE (to be uniquely identified within the NE) and the CE's\n   IP\
    \ address (IPv4 or IPv6).\n"
- title: 2.2.  Scalability
  contents:
  - "2.2.  Scalability\n   Assume an NE cluster that has FEs connected to multiple\
    \ CEs, possibly\n   in an active backup setup.  Assume that system analytics discover\n\
    \   that the CE is becoming a bottleneck.  A new CE could be booted and\n   some\
    \ FEs moved to it.  To achieve this goal, the CE management\n   application will\
    \ first ask an FE to connect to a new CE and would\n   then instruct that FE to\
    \ change its master to the new CE as described\n   in [RFC7121].\n"
- title: 2.3.  Adding New Resources to an NE
  contents:
  - "2.3.  Adding New Resources to an NE\n   Assume a resource pooling setup with\
    \ multiple FEs belonging to a\n   resource pool all connected to a dormant resource\
    \ pool CE.  An NE\n   system manager by demand could move an FE from the resource\
    \ pool to a\n   working NE by asking it first to connect to a CE on the working\
    \ NE\n   and then asking it to disconnect from the resource pool manager CE.\n"
- title: 2.4.  New LFB Class Installation
  contents:
  - "2.4.  New LFB Class Installation\n   A CE can learn, via the DynamicLFBLoading\
    \ capability of the SM LFB,\n   whether an FE is capable of loading new LFB classes.\
    \  Provided that\n   the FE supports new LFB class loading, the CE can request\
    \ a new LFB\n   to be installed and supported by the FE.\n   To load an LFB class\
    \ on an FE, the CE will have to provide the\n   following parameters:\n   o  LFB\
    \ class - The LFB class ID\n   o  LFB version - The version of the LFB class\n\
    \   o  LFB class name - Optional, the LFB name\n   o  Parameters - Optional parameters.\
    \  These parameters are\n      implementation specific.  For example, in one implementation\
    \ they\n      may contain the path where the LFB class implementation resides.\n\
    \   The parameters are fields that need to be described in documentation,\n  \
    \ depending on the implementation; one example is the location of the\n   LFB\
    \ class to be installed and/or mechanism to download it.  The exact\n   detail\
    \ of the location semantics is implementation specific and out\n   of scope of\
    \ this document.  However, this LFB library provides a\n   placeholder, namely\
    \ the SupportedParameters capability, which will\n   host any standardized parameters.\n\
    \   This document does not standardize these parameters.  It is expected\n   that\
    \ some future document will perform that task.  These parameters\n   are placeholders\
    \ for future use, in order not to redefine the LFB\n   class versions each time.\
    \  They are simple strings that define the\n   parameters supported by the LFB.\
    \  The CE is expected to read this\n   capability in order to understand the parameters\
    \ it can use.\n"
- title: 2.5.  Logging Mechanism
  contents:
  - "2.5.  Logging Mechanism\n   The SM LFB class also provides a useful log-level\
    \ manipulation.\n   Experience has proven that the CE may be required to increase\
    \ or\n   decrease the debug levels of parts of the FE, whether that be LFBs,\n\
    \   portions of LFBs, or generic processing code (all called \"modules\").\n \
    \  The module granularity is implementation specific and is not\n   discussed\
    \ in this document.  The debug levels are derived from the\n   \"syslog Message\
    \ Severities\" registry\n   <http://www.iana.org/assignments/syslog-parameters>\
    \ defined in\n   [RFC3164].\n"
- title: 2.6.  General-Purpose Attribute Definition
  contents:
  - "2.6.  General-Purpose Attribute Definition\n   Experience has shown that a generic\
    \ attribute name-value pair is\n   useful for describing configuration information.\
    \  This LFB class\n   defines such a generic attribute name-value pair defined\
    \ as a table\n   of attribute name-value pair values.  The attribute name-value\
    \ pair\n   is implementation specific and at the moment there is nothing to\n\
    \   standardize.  As an example, consider switches that have exactly the\n   same\
    \ LFB classes and capabilities but need to be used in different\n   roles.  A\
    \ good example would be a switch that could be used either as\n   Spine or Top-of-Rack\
    \ (ToR) in data-center setups.  An attribute that\n   defines the role could be\
    \ retrieved from the FE, which will then\n   dictate how it is controlled and\
    \ configured.  However, as in the case\n   of LFB class loading parameters, this\
    \ LFB class library provides a\n   placeholder, namely the SupportedArguments\
    \ capability, which will\n   host any standardized arguments.  This document does\
    \ not standardize\n   these parameters.  The CE is expected to read the SupportedArguments\n\
    \   capability in order to know what attributes it can use.\n"
- title: 3.  Applicability Statement
  contents:
  - "3.  Applicability Statement\n   Examples of SM usage include, but are not limited\
    \ to, the following\n   two usage scenarios.  These two scenarios are not implementation\n\
    \   details, but rather depict how the SM class can be used to achieve\n   the\
    \ intended SM for manipulating the configuration of FEs.\n"
- title: 3.1.  FE Integrated
  contents:
  - "3.1.  FE Integrated\n   Only one instance of the SM LFB class can exist and is\
    \ directly\n   related to the FE.\n"
- title: 3.2.  Virtual FEs
  contents:
  - "3.2.  Virtual FEs\n   In the case of the FE software that has hierarchical virtual\
    \ FEs,\n   multiple instances of the SM LFB class can exist, one per each\n  \
    \ virtual FE.\n"
- title: 4.  SM Library
  contents:
  - '4.  SM Library

    '
- title: 4.1.  Frame Definitions
  contents:
  - "4.1.  Frame Definitions\n   This LFB class does not define any frames.\n"
- title: 4.2.  Data Type Definitions
  contents:
  - "4.2.  Data Type Definitions\n   This library defines the following data types.\n\
    \   +------------+--------------------------------------+---------------+\n  \
    \ | Data Type  | Type                                 | Synopsis      |\n   |\
    \ Name       |                                      |               |\n   +------------+--------------------------------------+---------------+\n\
    \   | loglevels  | An enumerated char-based atomic data | The possible  |\n  \
    \ |            | type.                                | debug log     |\n   |\
    \            |                                      | levels.       |\n   |  \
    \          |                                      | Derived from  |\n   |    \
    \        |                                      | syslog.       |\n   | LogRowType\
    \ | A struct containing three            | The logging   |\n   |            |\
    \ components: the LogModule (string),  | module row.   |\n   |            | the\
    \ optional ModuleFilename          |               |\n   |            | (string),\
    \ and the optional           |               |\n   |            | DebugLevel,\
    \ which is one of the      |               |\n   |            | enumerated loglevels.\
    \                |               |\n   | CERow      | A struct that contains three\
    \         | A struct that |\n   |            | components: the address family\
    \ of    | defines the   |\n   |            | the CE IP (uchar), the CE's IPs \
    \     | CE table row. |\n   |            | (octetstring[16]), and the CE's ID\
    \   |               |\n   |            | (uint32).                           \
    \ |               |\n   | LCRowtype  | A struct that contains four          |\
    \ The LFB Class |\n   |            | components: the LFB class ID         | Configuration\
    \ |\n   |            | (uint32), the LFB version            | Definition.   |\n\
    \   |            | (string[8]), the optional LFB Name   |               |\n  \
    \ |            | (string), and the optional           |               |\n   |\
    \            | Parameters (string).                 |               |\n   | NameVal\
    \    | A struct that contains two           | Arbitrary     |\n   |          \
    \  | components: an attribute name        | Name Value    |\n   |            |\
    \ (string) and an attribute value      | struct.       |\n   |            | (string).\
    \                            |               |\n   +------------+--------------------------------------+---------------+\n\
    \                              FEM Data Types\n"
- title: 4.3.  Metadata Definitions
  contents:
  - "4.3.  Metadata Definitions\n   This LFB does not define any metadata definitions.\n"
- title: 4.4.  SM
  contents:
  - "4.4.  SM\n   The Subsidiary Mechanism LFB is an LFB that standardizes\n   configuration\
    \ of the FE parameters.\n"
- title: 4.4.1.  Data Handling
  contents:
  - "4.4.1.  Data Handling\n   The SM LFB does not handle any packets.  Its function\
    \ is to provide\n   the configuration parameters to the CE to be updated at runtime.\n"
- title: 4.4.2.  Components
  contents:
  - "4.4.2.  Components\n   This LFB class has four components specified.\n   The\
    \ Debug component (ID 1) is a table to support changing of an FE's\n   module\
    \ debug levels.  Changes in an FE's debug table rows will alter\n   the debug\
    \ level of the corresponding module.\n   The LFBLoad component (ID 2) is a table\
    \ of LFB classes that the FE\n   loads.  Adding new rows in this table instructs\
    \ the FE to load new\n   LFB classes, and removing rows will unload them when\
    \ possible.  These\n   two actions will, in effect, alter the SupportedLFBs capabilities\n\
    \   table of FEObject LFB [RFC5812].  Each such row MUST provide (and is\n   specified\
    \ by this library) the LFB class ID.  Optionally, the LFB\n   class ID version\
    \ may be specified, and the FE MUST assume that\n   version 1.0 is used when the\
    \ version is unspecified.\n   The AttributeValues component (ID 3) is the AttributeValues\
    \ table, a\n   generic attribute-value pair.\n   The CEs (ID 4) is the table of\
    \ runtime CEs we are asking the FE to be\n   able to connect with.  By adding\
    \ a row in this table, the CE\n   instructs the FE to be able to connect with\
    \ the specified CE.  By\n   doing a delete on this table, the CE instructs the\
    \ FE to terminate\n   any connection with that CE.  How the FE interacts with\
    \ the new CEs\n   is dependent on the operations discussed in [RFC7121].\n   It\
    \ is worth noting that the generic attribute-value pairs, the\n   LFBload parameters,\
    \ and the module information are all strings.  To\n   cope with string sizes,\
    \ a CE application can extract that information\n   from the component properties\
    \ as defined in [RFC5812].\n"
- title: 4.4.3.  Capabilities
  contents:
  - "4.4.3.  Capabilities\n   This LFB provides three capabilities.  The first, DynamicLFBLoading,\n\
    \   specifies whether this FE supports dynamic loading of new LFB\n   classes.\
    \  The second, SupportedParameters, is a placeholder and will\n   store all the\
    \ supported parameters for LFB class loading.  The final,\n   SupportedAttributes,\
    \ is also a placeholder and will store all the\n   supported attributes for the\
    \ attribute-value pair table.\n"
- title: 4.4.4.  Events
  contents:
  - "4.4.4.  Events\n   This LFB has four events specified.\n   Two events reflect\
    \ CE additions and report to the CE whether an entry\n   of the CEs information\
    \ has been added or deleted.  In both cases, the\n   event report constitutes\
    \ the added or deleted row contents.\n   The other two events reflect LFB class\
    \ loading and notify whether an\n   entry of the LFBLoad table is added or deleted.\n"
- title: 5.  XML for SM LFB
  contents:
  - "5.  XML for SM LFB\n   <LFBLibrary xmlns=\"urn:ietf:params:xml:ns:forces:lfbmodel:1.1\"\
    \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" provides=\"SM\"\
    >\n     <!-- XXX  -->\n     <dataTypeDefs>\n       <dataTypeDef>\n         <name>loglevels</name>\n\
    \         <synopsis>The possible debug log levels. Derived from syslog.\n    \
    \     </synopsis>\n         <atomic>\n           <baseType>char</baseType>\n \
    \          <specialValues>\n             <specialValue value=\"-1\">\n       \
    \        <name>DEB_OFF</name>\n               <synopsis> The logs are totally\
    \ turned off </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"0\">\n               <name>DEB_EMERG</name>\n               <synopsis>\
    \ Emergency level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"1\">\n               <name>DEB_ALERT</name>\n               <synopsis>\
    \ Alert level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"2\">\n               <name>DEB_CRIT</name>\n               <synopsis>\
    \ Critical level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"3\">\n               <name>DEB_ERR</name>\n               <synopsis>\
    \ error level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"4\">\n               <name>DEB_WARNING</name>\n               <synopsis>\
    \ warning level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"5\">\n               <name>DEB_NOTICE</name>\n               <synopsis>Notice\
    \ level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"6\">\n               <name>DEB_INFO</name>\n               <synopsis>Info\
    \ level </synopsis>\n             </specialValue>\n             <specialValue\
    \ value=\"7\">\n               <name>DEB_DEBUG</name>\n               <synopsis>Debug\
    \ level </synopsis>\n             </specialValue>\n           </specialValues>\n\
    \         </atomic>\n       </dataTypeDef>\n       <dataTypeDef>\n         <name>LogRowtype</name>\n\
    \         <synopsis>The logging module row</synopsis>\n         <struct>\n   \
    \        <component componentID=\"1\">\n             <name>lmodule</name>\n  \
    \           <synopsis>The LOG Module Name</synopsis>\n             <typeRef>string</typeRef>\n\
    \           </component>\n           <component componentID=\"2\">\n         \
    \    <name>filename</name>\n             <synopsis>The Module File Name</synopsis>\n\
    \             <optional/>\n             <typeRef>string</typeRef>\n          \
    \ </component>\n           <component componentID=\"3\">\n             <name>deblvl</name>\n\
    \             <synopsis>debug level</synopsis>\n             <optional/>\n   \
    \          <typeRef>loglevels</typeRef>\n           </component>\n         </struct>\n\
    \       </dataTypeDef>\n       <dataTypeDef>\n         <name>CERow</name>\n  \
    \       <synopsis>The CE Table Row</synopsis>\n         <struct>\n           <component\
    \ componentID=\"1\">\n             <name>AddressFamily</name>\n             <synopsis>The\
    \ address family</synopsis>\n             <atomic>\n               <baseType>uchar</baseType>\n\
    \               <specialValues>\n                 <specialValue value=\"2\">\n\
    \                   <name>IFA_AF_INET</name>\n                   <synopsis>IPv4</synopsis>\n\
    \                 </specialValue>\n                 <specialValue value=\"10\"\
    >\n                   <name>IFA_AF_INET6</name>\n                   <synopsis>IPv6</synopsis>\n\
    \                 </specialValue>\n               </specialValues>\n         \
    \    </atomic>\n           </component>\n           <component componentID=\"\
    2\">\n             <name>CEIP</name>\n             <synopsis>CE ip v4 or v6(selected\
    \ by family)</synopsis>\n             <typeRef>octetstring[16]</typeRef>\n   \
    \        </component>\n           <component componentID=\"3\">\n            \
    \ <name>CEID</name>\n             <synopsis>The CE ID</synopsis>\n           \
    \  <optional/>\n             <typeRef>uint32</typeRef>\n           </component>\n\
    \         </struct>\n       </dataTypeDef>\n       <dataTypeDef>\n         <name>LCRowtype</name>\n\
    \         <synopsis>The LFB Class Configuration Definition</synopsis>\n      \
    \   <struct>\n           <component componentID=\"1\">\n             <name>LFBClassID</name>\n\
    \             <synopsis>The LFB Class ID</synopsis>\n             <typeRef>uint32</typeRef>\n\
    \           </component>\n           <component componentID=\"2\">\n         \
    \    <name>LFBVersion</name>\n             <synopsis>The LFB Class Version</synopsis>\n\
    \             <optional/>\n             <typeRef>string</typeRef>\n          \
    \ </component>\n           <component componentID=\"3\">\n             <name>LFBName</name>\n\
    \             <synopsis>The LFB Class Name</synopsis>\n             <optional/>\n\
    \             <typeRef>string</typeRef>\n           </component>\n           <component\
    \ componentID=\"4\">\n             <name>Parameters</name>\n             <synopsis>Optional\
    \ parameters such as where the LFB is\n             located</synopsis>\n     \
    \        <optional/>\n             <typeRef>string</typeRef>\n           </component>\n\
    \         </struct>\n       </dataTypeDef>\n       <dataTypeDef>\n         <name>NameVal</name>\n\
    \         <synopsis>Arbitrary Name Value struct</synopsis>\n         <struct>\n\
    \           <component componentID=\"1\">\n             <name>AttrName</name>\n\
    \             <synopsis>The Attribute Name</synopsis>\n             <typeRef>string</typeRef>\n\
    \           </component>\n           <component componentID=\"2\">\n         \
    \    <name>AttrVal</name>\n             <synopsis>The Attribute Value</synopsis>\n\
    \             <typeRef>string</typeRef>\n           </component>\n         </struct>\n\
    \       </dataTypeDef>\n     </dataTypeDefs>\n     <LFBClassDefs>\n       <LFBClassDef\
    \ LFBClassID=\"19\">\n         <name>SM</name>\n         <synopsis>\n        \
    \    The Subsidiary Management LFB\n         </synopsis>\n         <version>1.0</version>\n\
    \         <components>\n           <component componentID=\"1\" access=\"read-write\"\
    >\n             <name>Debug</name>\n             <synopsis>A table to support\
    \ changing of all debug levels\n             </synopsis>\n             <array\
    \ type=\"variable-size\">\n               <typeRef>LogRowtype</typeRef>\n    \
    \         </array>\n           </component>\n           <component componentID=\"\
    2\" access=\"write-only\">\n             <name>LFBLoad</name>\n             <synopsis>An\
    \ LFB Class to Load</synopsis>\n             <array type=\"variable-size\">\n\
    \               <typeRef>LCRowtype</typeRef>\n             </array>\n        \
    \   </component>\n           <component componentID=\"3\" access=\"read-write\"\
    >\n             <name>AttributeValues</name>\n             <synopsis>Table of\
    \ general purpose SM attribute Values\n             </synopsis>\n            \
    \ <array type=\"variable-size\">\n               <typeRef>NameVal</typeRef>\n\
    \             </array>\n           </component>\n           <component componentID=\"\
    4\" access=\"write-only\">\n             <name>CEs</name>\n             <synopsis>Table\
    \ of CEs we are asking the FE to associate\n              with</synopsis>\n  \
    \           <array type=\"variable-size\">\n               <typeRef>CERow</typeRef>\n\
    \             </array>\n           </component>\n         </components>\n    \
    \     <!---->\n         <capabilities>\n           <capability componentID=\"\
    10\">\n             <name>DynamicLFBLoading</name>\n            <synopsis>This\
    \ capability specifies whether this FE supports\n              dynamic loading\
    \ of new LFBs</synopsis>\n             <typeRef>boolean</typeRef>\n          \
    \ </capability>\n           <capability componentID=\"11\">\n             <name>SupportedParameters</name>\n\
    \             <synopsis>This capability contains all the supported\n         \
    \     parameters</synopsis>\n             <array type=\"variable-size\">\n   \
    \            <typeRef>string</typeRef>\n             </array>\n           </capability>\n\
    \           <capability componentID=\"12\">\n             <name>SupportedAttributes</name>\n\
    \             <synopsis>This capability contains all the supported\n         \
    \     attributes names</synopsis>\n             <array type=\"variable-size\"\
    >\n               <typeRef>string</typeRef>\n             </array>\n         \
    \  </capability>\n         </capabilities>\n         <events baseID=\"20\">\n\
    \           <event eventID=\"1\">\n             <name>CEAdded</name>\n       \
    \      <synopsis>An CE has been added</synopsis>\n             <eventTarget>\n\
    \               <eventField>CEs</eventField>\n             </eventTarget>\n  \
    \           <eventCreated/>\n             <eventReports>\n               <eventReport>\n\
    \                 <eventField>CEs</eventField>\n                 <eventSubscript>_CEIDsrowid_</eventSubscript>\n\
    \               </eventReport>\n             </eventReports>\n           </event>\n\
    \           <event eventID=\"2\">\n             <name>CEDeleted</name>\n     \
    \        <synopsis>An CE has been deleted</synopsis>\n             <eventTarget>\n\
    \               <eventField>CEs</eventField>\n               <eventSubscript>_CEIDsrowid_</eventSubscript>\n\
    \             </eventTarget>\n             <eventDeleted/>\n             <eventReports>\n\
    \               <eventReport>\n                 <eventField>CEs</eventField>\n\
    \                 <eventSubscript>_CEIDsrowid_</eventSubscript>\n            \
    \   </eventReport>\n             </eventReports>\n           </event>\n      \
    \     <event eventID=\"3\">\n             <name>LFBLoaded</name>\n           \
    \  <synopsis>An LFB has been loaded</synopsis>\n             <eventTarget>\n \
    \              <eventField>LFBLoad</eventField>\n             </eventTarget>\n\
    \             <eventCreated/>\n             <eventReports>\n               <eventReport>\n\
    \                 <eventField>LFBLoad</eventField>\n                 <eventSubscript>_LFBLoadrowid_</eventSubscript>\n\
    \               </eventReport>\n             </eventReports>\n           </event>\n\
    \           <event eventID=\"4\">\n             <name>LFBUnloaded</name>\n   \
    \          <synopsis>An CE has been unloaded</synopsis>\n             <eventTarget>\n\
    \               <eventField>LFBLoad</eventField>\n               <eventSubscript>_LFBLoadrowid_</eventSubscript>\n\
    \             </eventTarget>\n             <eventDeleted/>\n             <eventReports>\n\
    \               <eventReport>\n                 <eventField>LFBLoad</eventField>\n\
    \                 <eventSubscript>_LFBLoadrowid_</eventSubscript>\n          \
    \     </eventReport>\n             </eventReports>\n           </event>\n    \
    \     </events>\n       </LFBClassDef>\n     </LFBClassDefs>\n   </LFBLibrary>\n\
    \                       Figure 2: FEM XML LFB Library\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document does not alter the ForCES model\
    \ [RFC5812] or the ForCES\n   protocol [RFC5810].  As such, it has no impact on\
    \ their security\n   considerations.  This document simply defines the operational\n\
    \   parameters and capabilities of an LFB that manage the SM for loading\n   LFBs\
    \ and create new connections between FEs and CEs.\n   On the issue of trust, a\
    \ designer should take into account that the\n   CE that creates new connections\
    \ to CEs is either:\n   o  The FE manager that is responsible for managing the\
    \ FEs, or\n   o  An already associated CE\n   In both of these cases, the entity\
    \ making the connections should\n   already be trusted to perform such activities.\
    \  If the entity making\n   the connections is faulty, rogue, or hacked, there\
    \ is no way for the\n   FE to know this, and it will perform any action that the\
    \ CE requests.\n   Therefore, this document does not attempt to analyze the security\n\
    \   issues that may arise from misuse of the SM LFB.  Any such issues, if\n  \
    \ they exist, and mitigation strategies are for the designers of the\n   particular\
    \ SM implementation, not the general mechanism.\n   The reader is also referred\
    \ to the ForCES framework [RFC3746]\n   document, particularly Section 8, for\
    \ an analysis of potential\n   threats introduced by ForCES and how the ForCES\
    \ architecture\n   addresses them.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  LFB Class Names and LFB Class Identifiers
  contents:
  - "7.1.  LFB Class Names and LFB Class Identifiers\n   LFB classes defined by this\
    \ document belong to LFBs defined by\n   Standards Track RFCs.  The registration\
    \ procedure is Standards Action\n   for the range 0 to 65535 and First Come First\
    \ Served with any\n   publicly available specification for identifiers over 65535\n\
    \   [RFC5226].  This specification registers the following LFB class name\n  \
    \ and LFB class identifier in the \"Logical Functional Block (LFB) Class\n   Names\
    \ and Class Identifiers\" registry:\n   +------------+--------+---------+-----------------------+-----------+\n\
    \   | LFB Class  |  LFB   |   LFB   |      Description      | Reference |\n  \
    \ | Identifier | Class  | Version |                       |           |\n   |\
    \            |  Name  |         |                       |           |\n   +------------+--------+---------+-----------------------+-----------+\n\
    \   |     19     |   SM   |   1.0   |      An SM LFB to     |  RFC 7729 |\n  \
    \ |            |        |         |      standardize      |   (this   |\n   |\
    \            |        |         | subsidiary management | document) |\n   |  \
    \          |        |         |   for ForCES Network  |           |\n   |    \
    \        |        |         |        Elements       |           |\n   +------------+--------+---------+-----------------------+-----------+\n\
    \      Logical Functional Block (LFB) Class Name and Class Identifier\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5810]  Doria, A., Ed., Hadi Salim, J., Ed., Haas, R., Ed.,\n         \
    \     Khosravi, H., Ed., Wang, W., Ed., Dong, L., Gopal, R., and\n           \
    \   J. Halpern, \"Forwarding and Control Element Separation\n              (ForCES)\
    \ Protocol Specification\", RFC 5810,\n              DOI 10.17487/RFC5810, March\
    \ 2010,\n              <http://www.rfc-editor.org/info/rfc5810>.\n   [RFC5812]\
    \  Halpern, J. and J. Hadi Salim, \"Forwarding and Control\n              Element\
    \ Separation (ForCES) Forwarding Element Model\",\n              RFC 5812, DOI\
    \ 10.17487/RFC5812, March 2010,\n              <http://www.rfc-editor.org/info/rfc5812>.\n\
    \   [RFC7121]  Ogawa, K., Wang, W., Haleplidis, E., and J. Hadi Salim,\n     \
    \         \"High Availability within a Forwarding and Control Element\n      \
    \        Separation (ForCES) Network Element\", RFC 7121,\n              DOI 10.17487/RFC7121,\
    \ February 2014,\n              <http://www.rfc-editor.org/info/rfc7121>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC3164]  Lonvick, C., \"The BSD Syslog Protocol\"\
    , RFC 3164,\n              DOI 10.17487/RFC3164, August 2001,\n              <http://www.rfc-editor.org/info/rfc3164>.\n\
    \   [RFC3654]  Khosravi, H., Ed. and T. Anderson, Ed., \"Requirements for\n  \
    \            Separation of IP Control and Forwarding\", RFC 3654,\n          \
    \    DOI 10.17487/RFC3654, November 2003,\n              <http://www.rfc-editor.org/info/rfc3654>.\n\
    \   [RFC3746]  Yang, L., Dantu, R., Anderson, T., and R. Gopal,\n            \
    \  \"Forwarding and Control Element Separation (ForCES)\n              Framework\"\
    , RFC 3746, DOI 10.17487/RFC3746, April 2004,\n              <http://www.rfc-editor.org/info/rfc3746>.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       DOI 10.17487/RFC5226, May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Damascene Joachimpillai,\
    \ Joel\n   Halpern, Chuanhuang Li, and many others for their discussions and\n\
    \   support.\n   The authors are grateful to Joel Halpern for shepherding this\n\
    \   document.  The authors would also like to thank Alia Atlas for taking\n  \
    \ on the role of sponsoring this document.  Finally, thanks to Juergen\n   Schoenwaelder\
    \ for his operational directorate's review and Alexey\n   Melnikov for his security\
    \ review.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Bhumip Khasnabish\n   ZTE TX, Inc.\n   55 Madison Avenue,\
    \ Suite 160\n   Morristown, New Jersey  07960\n   United States\n   Phone: +001-781-752-8003\n\
    \   Email: vumip1@gmail.com, bhumip.khasnabish@ztetx.com\n   URI:   http://tinyurl.com/bhumip/\n\
    \   Evangelos Haleplidis\n   University of Patras\n   Department of Electrical\
    \ and Computer Engineering\n   Patras  26500\n   Greece\n   Email: ehalep@ece.upatras.gr\n\
    \   Jamal Hadi Salim (editor)\n   Mojatatu Networks\n   Suite 200, 15 Fitzgerald\
    \ Road\n   Ottawa, Ontario  K2H 9G1\n   Canada\n   Email: hadi@mojatatu.com\n"
