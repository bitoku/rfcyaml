- title: __initial_text__
  contents:
  - '    RObust Header Compression (ROHC): A Compression Profile for IP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   The original RObust Header Compression (ROHC) RFC (RFC 3095) defines\n\
    \   a framework for header compression, along with compression protocols\n   (profiles)\
    \ for IP/UDP/RTP, IP/ESP (Encapsulating Security Payload),\n   IP/UDP, and also\
    \ a profile for uncompressed packet streams.  However,\n   no profile was defined\
    \ for compression of IP only, which has been\n   identified as a missing piece\
    \ in RFC 3095.  This document defines a\n   ROHC compression profile for IP, similar\
    \ to the IP/UDP profile\n   defined by RFC 3095, but simplified to exclude UDP,\
    \ and enhanced to\n   compress IP header chains of arbitrary length.\n   Table\
    \ of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  2\n   2.  Terminology. . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  2\n   3.  ROHC IP Compression (Profile 0x0004) . . . . . . . . . . . .\
    \ .  3\n       3.1.  Static Chain Termination . . . . . . . . . . . . . . . .\
    \  3\n       3.2.  Handling Multiple Levels of IP Headers . . . . . . . . .  3\n\
    \       3.3.  Constant IP-ID . . . . . . . . . . . . . . . . . . . . .  4\n  \
    \     3.4.  Additional Mode Transition Logic . . . . . . . . . . . .  6\n    \
    \   3.5.  Initialization . . . . . . . . . . . . . . . . . . . . .  8\n      \
    \ 3.6.  Packet Types . . . . . . . . . . . . . . . . . . . . . .  8\n       3.7.\
    \  The CONTEXT_MEMORY Feedback Option . . . . . . . . . . . 10\n   4.  Security\
    \ Considerations. . . . . . . . . . . . . . . . . . . . 10\n   5.  IANA Considerations.\
    \ . . . . . . . . . . . . . . . . . . . . . 10\n   6.  Acknowledgements . . .\
    \ . . . . . . . . . . . . . . . . . . . . 10\n   7.  Normative References . .\
    \ . . . . . . . . . . . . . . . . . . . 11\n   Appendix A.  Detailed Procedures\
    \ for Canceling Mode Transitions. . 12\n       A.1.  Transition from Optimistic\
    \ to Reliable Mode. . . . . . . 12\n       A.2.  Transition from Unidirectional\
    \ to Reliable Mode. . . . . 13\n       A.3.  Transition from Reliable to Optimistic\
    \ Mode. . . . . . . 13\n       A.4.  Transition Back to Unidirectional Mode .\
    \ . . . . . . . . 14\n   Authors' Addresses . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 15\n   Full Copyright Statement . . . . . . . . . . . . . . .\
    \ . . . . . . 16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The original RObust Header Compression (ROHC) RFC [RFC-3095]\
    \ defines\n   a framework for header compression, along with compression protocols\n\
    \   (profiles) for IP/UDP/RTP, IP/ESP (Encapsulating Security Payload),\n   IP/UDP,\
    \ and also a profile for uncompressed packet streams.  The\n   profile for uncompressed\
    \ data was defined to provide a means to\n   encapsulate all traffic over a link\
    \ within ROHC packets.  Through\n   this profile, the lower layers do not have\
    \ to provide multiplexing\n   for different packet types, but instead ROHC can\
    \ handle any packet\n   stream, even if compression profiles for all kinds of\
    \ packet streams\n   have not yet been defined or implemented over the link.\n\
    \   Although the profile without compression is simple and can tunnel\n   arbitrary\
    \ packets, it has of course a major weakness in that it does\n   not compress\
    \ the headers at all.  When considering that normally all\n   packets are expected\
    \ to be IP [RFC-791, RFC-2460] packets, and that\n   the IP header often represents\
    \ a major part of the total header, a\n   useful alternative to no compression\
    \ would for most packets be\n   compression of the IP header only.  Unfortunately,\
    \ such a profile was\n   not defined in [RFC-3095], and this has thus been identified\
    \ as an\n   important missing piece in the ROHC toolbox.\n   This document addresses\
    \ this missing compression support and defines\n   a ROHC compression profile\
    \ for IP [RFC-791, RFC-2460] only, similar\n   to the IP/UDP profile defined by\
    \ [RFC-3095], but simplified to\n   exclude UDP.  Due to the similarities with\
    \ the IP/UDP profile, the IP\n   compression profile is described based on the\
    \ IP/UDP profile, mainly\n   covering differences.  The most important differences\
    \ are a different\n   way of terminating the static header chain, and the capability\
    \ of\n   compressing IP header chains of arbitrary length.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC-2119].\n\
    \   ROHC UDP\n      \"ROHC UDP\" in this document refers to the IP/UDP profile\
    \ (Profile\n      0x0002) as defined in [RFC-3095].\n"
- title: 3.  ROHC IP Compression (Profile 0x0004)
  contents:
  - "3.  ROHC IP Compression (Profile 0x0004)\n   In general, there are no major differences\
    \ between the ROHC UDP\n   profile and the IP profile (ROHC IP) defined in this\
    \ document, since\n   the removal of UDP has no impact on the compression mechanisms\
    \ in\n   principle.  As for ROHC UDP, the compressor generates a 16-bit\n   sequence\
    \ number which increases by one for each packet compressed in\n   the packet stream,\
    \ simply called SN below.  The most important\n   difference between this profile\
    \ and ROHC UDP is about static chain\n   termination and the handling of multiple\
    \ IP headers.  Unless stated\n   explicitly below, mechanisms and formats are\
    \ the same as for ROHC\n   UDP.\n"
- title: 3.1.  Static Chain Termination
  contents:
  - "3.1.  Static Chain Termination\n   One difference for IP-only compression, compared\
    \ to IP/UDP\n   compression, is related to the termination of the static chain\
    \ in IR\n   headers.  For the UDP profile, the chain always ends with a UDP\n\
    \   header part, which per definition provides the boundaries for the\n   chain.\
    \  The UDP header is also the last header in the uncompressed\n   packet (except\
    \ for a potential application header).  For the IP-only\n   profile, there is\
    \ no single last header that per profile definition\n   terminates the chain.\
    \  Instead, the static chain is terminated if the\n   \"Next Header / Protocol\"\
    \ field of a static IP header part indicates\n   anything but IP (IPinIP or IPv6).\
    \  Alternatively, the compressor can\n   choose to end the static chain at any\
    \ IP header, and indicate this by\n   setting the MSB of the IP version field\
    \ to 1 (0xC for IPv4 or 0xE for\n   IPv6).  The decompressor must store this indication\
    \ in the context\n   for correct decompression of subsequent headers.  Note that\
    \ the IP\n   version field in decompressed headers must be restored to its\n \
    \  original value.\n"
- title: 3.2.  Handling Multiple Levels of IP Headers
  contents:
  - "3.2.  Handling Multiple Levels of IP Headers\n   The ROHC IR and IR-DYN packets\
    \ defined in [RFC-3095] are used to\n   communicate static and/or dynamic parts\
    \ of a context.  For each of\n   the compression profiles defined in [RFC-3095],\
    \ there is a single\n   last header in the header chain that clearly marks the\
    \ termination of\n   the static chain.  The length of the dynamic chain is then\
    \ inferred\n   from the static chain in the IR header itself, or from the static\n\
    \   chain in the context for the IR-DYN header.  The length of both\n   static\
    \ and dynamic chains may thus be of arbitrary length and may, in\n   theory, initialize\
    \ a context with an arbitrary number of IP levels.\n   However, the general compressed\
    \ header formats defined in [RFC-3095,\n   section 5.7.] specifies that at most\
    \ two levels of IP headers (the\n   'Inner' and the 'Outer' level of IP headers)\
    \ may be included in a\n   compressed header.  Specifically, the format defined\
    \ for Extension 3\n   [RFC-3095, section 5.7.5.] can only carry one single 'Outer'\
    \ IP\n   header.  In addition, while list compression may be used to compress\n\
    \   other types of headers, it cannot be used to compress additional IP\n   headers,\
    \ as IP headers may not be part of an extension header chain\n   in compressed\
    \ headers [RFC-3095, section 5.8.].\n   For the compression profiles defined in\
    \ [RFC-3095], the consequence\n   is that at most two levels of IP headers can\
    \ be compressed.  In other\n   words, the presence of additional IP headers at\
    \ best partially\n   disables header compression, as the compressor will only\
    \ be allowed\n   to send IR and IR-DYN packets in such cases.\n   For the compression\
    \ of IP headers only, the additional IP headers\n   would however not have to\
    \ cause header compression to be disabled\n   because there is no single packet\
    \ type that ends the compressed\n   chain.  The excess IP headers could simply\
    \ be left uncompressed by\n   implicitly terminating the static and dynamic chains\
    \ after at most\n   two levels of IP headers.\n   The IP-only profile defined\
    \ in this document goes one step further\n   and supports compression of an arbitrary\
    \ number of IP levels.  This\n   is achieved by adding a dynamic chain to the\
    \ general format of\n   compressed headers, to include the header part of each\
    \ IP level in\n   excess of the first two.\n   As explained above, the static\
    \ chain within IR packets can be of\n   arbitrary length, and the chain is terminated\
    \ by the presence of a\n   non-IP header (not IPinIP nor IPv6).  Alternatively,\
    \ the chain may be\n   explicitly terminated with a special code value in the\
    \ IP version\n   field, as described in section 3.1.  The dynamic chain is structured\n\
    \   analogously.\n   For compressed headers, the information related to the initial\
    \ two IP\n   headers is carried as for the IP/UDP profile, and a chain of dynamic\n\
    \   header information is added to the end of the compressed header for\n   each\
    \ and every additional IP header.  Thus, this additional data\n   structure is\
    \ exactly the same as the one used in IR and IR-DYN\n   packets.  The length of\
    \ the chain is inferred from the chain of\n   static parameters in the context.\
    \  While a dynamic chain carries\n   dynamically changing parameters using an\
    \ uncompressed representation,\n   this ensures that flows with arbitrary levels\
    \ of IP headers will not\n   impair compression efficiency.\n"
- title: 3.3.  Constant IP-ID
  contents:
  - "3.3.  Constant IP-ID\n   Most IPv4 stacks assign an IP-ID according to the value\
    \ of a counter,\n   increasing by one for each outgoing packet.  ROHC UDP compresses\
    \ the\n   IP-ID field using offset IP-ID encoding based on the UDP SN [RFC-\n\
    \   3095].  For stacks generating IP-ID values using a pseudo-random\n   number\
    \ generator, the field is not compressed and is sent as-is in\n   its entirety\
    \ as additional octets after the compressed header.\n   Cases have also been found\
    \ where an IPv4 stack uses a constant value\n   for the IP Identifier.  When the\
    \ IP-ID field is constant, it cannot\n   be compressed using offset IP-ID encoding\
    \ and the field must be sent\n   in its entirety.  This overhead can be avoided\
    \ with the addition of a\n   flag within the dynamic part of the chain used to\
    \ initialize the IPv4\n   header, as follow:\n   Dynamic part:\n      +---+---+---+---+---+---+---+---+\n\
    \      |        Type of Service        |\n      +---+---+---+---+---+---+---+---+\n\
    \      |         Time to Live          |\n      +---+---+---+---+---+---+---+---+\n\
    \      /        Identification         /   2 octets\n      +---+---+---+---+---+---+---+---+\n\
    \      | DF|RND|NBO|SID|       0       |\n      +---+---+---+---+---+---+---+---+\n\
    \      / Generic extension header list /  variable length\n      +---+---+---+---+---+---+---+---+\n\
    \   SID: Static IP Identifier.\n      For IR and IR-DYN packets, the logic is\
    \ the same as for ROHC UDP\n      with the addition that field(SID) must be kept\
    \ in the context.\n      For compressed headers other than IR and IR-DYN:\n  \
    \       If value(RND) = 0 and context(SID) = 0, hdr(IP-ID) is\n         compressed\
    \ using Offset IP-ID encoding (see [RFC-3095 section\n         4.5.5]) using p\
    \ = 0 and default-slope(IP-ID offset) = 0.\n         If value(RND) = 0 and context(SID)\
    \ = 1, hdr(IP-ID) is constant\n         and compressed away; hdr(IP-ID) is the\
    \ value of context(IP-ID).\n         If value(RND) = 1, IP-ID is the uncompressed\
    \ hdr(IP-ID).  IP-ID\n         is then passed as additional octets at the end\
    \ of the\n         compressed header, after any extensions.\n   Note: Only IR\
    \ and IR-DYN packets can update context(SID).\n   Note: All other fields are the\
    \ same as for ROHC UDP [RFC-3095].\n"
- title: 3.4.  Additional Mode Transition Logic
  contents:
  - "3.4.  Additional Mode Transition Logic\n   The profiles defined in [RFC-3095]\
    \ operate using different modes of\n   compression.  A mode transition can be\
    \ requested once a packet has\n   reached the decompressor by sending feedback\
    \ indicating the desired\n   mode.  As per the specifications found in [RFC-3095],\
    \ the compressor\n   is compelled to honor such requests.\n   For the IP profile\
    \ defined in this document, the Mode parameter for\n   the value mode = 0 (packet\
    \ types UOR-2, IR and IR-DYN) is redefined\n   to allow the compressor to decline\
    \ a mode transition requested by the\n   decompressor:\n      Mode: Compression\
    \ mode.  0 = (C)ancel Mode Transition\n   Upon receiving the Mode parameter set\
    \ to '0', the decompressor MUST\n   stay in its current mode of operation and\
    \ SHOULD refrain from sending\n   further mode transition requests for the declined\
    \ mode for a certain\n   amount of time.\n   More specifically, with reference\
    \ to the parameters C_TRANS, C_MODE,\n   D_TRANS, and D_MODE defined in [RFC-3095,\
    \ section 5.6.1.], the\n   following modifications apply when the compressor cancels\
    \ a mode\n   transition:\n      Parameters for the compressor side:\n      - \
    \ C_MODE:\n         This value must not be changed when sending mode information\n\
    \         within packets if the mode parameter is set to '0' (as a\n         response\
    \ to a mode transition request from the decompressor).\n      -  C_TRANS:\n  \
    \       C_TRANS is (P)ending when receiving a mode transition request\n      \
    \   from the decompressor.  C_TRANS is set to (D)one when the\n         compressor\
    \ receives an ACK for a UOR-2, IR-DYN, or IR packet\n         sent with the mode\
    \ parameter set to the mode in use at the time\n         the mode transition request\
    \ was initiated.\n      Parameters for the decompressor side:\n      -  D_MODE:\n\
    \         D_MODE MUST remain unchanged when receiving a UOR-2, an IR-DYN,\n  \
    \       or an IR packet sent with the mode parameter set to '0'.\n      -  D_TRANS:\n\
    \         D_TRANS is (P)ending when a UOR-2, IR-DYN, or IR packet sent\n     \
    \    with the mode parameter set to '0' is received.  It is set to\n         (D)one\
    \ when a packet of type 1 or 0 corresponding to the\n         unchanged mode is\
    \ received.\n   The resulting mode transition procedure is described below:\n\
    \              Compressor                     Decompressor\n             ----------------------------------------------\n\
    \   C_MODE = X      |                               |  D_MODE = X\n          \
    \         |       Mode Request(Y) +-<-<-<-|  D_TRANS = I\n                   |\
    \       +-<-<-<-<-<-<-<-+       |\n   C_TRANS = P     |-<-<-<-+              \
    \         |\n   C_MODE = X      |                               |\n          \
    \         |->->->-+ IR/IR-DYN/UOR-2(SN,C) |\n                   |       +->->->->->->->-+\
    \       |\n                   |->-..                  +->->->-|  D_TRANS = P\n\
    \                   |->-..                          |  D_MODE = X\n          \
    \         |           ACK(SN,X)   +-<-<-<-|\n                   |       +-<-<-<-<-<-<-<-+\
    \       |\n   C_TRANS = D     |-<-<-<-+                       |\n            \
    \       |                               |\n                   |->->->-+   X-0,\
    \ X-1*           |\n                   |       +->->->->->->->-+       |\n   \
    \                |                       +->->->-|  D_TRANS = D\n            \
    \       |                               |\n           where X: mode in use before\
    \ the mode transition was initiated\n                 Y: mode requested by the\
    \ decompressor\n                 C: (C)ancel mode transition\n"
- title: 3.5.  Initialization
  contents:
  - "3.5.  Initialization\n   The static context for ROHC IP compression can be initialized\
    \ in\n   either of two ways:\n   1) By using an IR packet as in ROHC UDP, where\
    \ the profile is 0x0004,\n      and the static chain ends with the static part\
    \ of an IP header,\n      where the Next Header/Protocol field has any value but\
    \ IPinIP (4)\n      or IPv6 (41) [PROTOCOL], or where the IP version field indicates\n\
    \      termination (see section 3.1).  At the compressor, SN is\n      initialized\
    \ to a random value when the first IR packet is sent.\n   2) By reusing an existing\
    \ context.  This is done with an IR-DYN\n      packet, identifying profile 0x0004,\
    \ where the dynamic chain\n      corresponds to the prefix of the existing static\
    \ chain, ending\n      with an IP header where the Next Header/Protocol field\
    \ has any\n      value but IPinIP (4) or IPv6 (41) [PROTOCOL], or where the IP\n\
    \      version field indicates termination (see section 3.1).  At the\n      compressor,\
    \ SN is initialized to a random value when the first\n      IR-DYN packet is sent.\n\
    \   For ROHC IP, the dynamic part of an IR or IR-DYN packet is similar to\n  \
    \ the one for ROHC UDP, with a two-octet field containing the SN\n   present at\
    \ the end of the dynamic chain in IR and IR-DYN packets.  It\n   should be noted\
    \ that the static and dynamic chains have an arbitrary\n   length, and the SN\
    \ is added only once, at the end of the dynamic\n   chain in IR and IR-DYN packets.\n"
- title: 3.6.  Packet Types
  contents:
  - "3.6.  Packet Types\n   Except for one new feedback option (see section 3.7),\
    \ the only packet\n   format that differs from ROHC UDP is the general format\
    \ for\n   compressed packets, which has no UDP checksum in the end.  Instead,\n\
    \   it ends with a list of dynamic header portions, one for each IP\n   header\
    \ above the initial two (if any, as indicated by the presence of\n   corresponding\
    \ header portions in the static chain).\n   The general format for a compressed\
    \ header is thus as follows:\n     0   1   2   3   4   5   6   7\n    --- ---\
    \ --- --- --- --- --- ---\n   :         Add-CID octet         :              \
    \      |\n   +---+---+---+---+---+---+---+---+                    |\n   |   first\
    \ octet of base header  |                    |\n   +---+---+---+---+---+---+---+---+\
    \                    |\n   :                               :                 \
    \   |\n   /   0, 1, or 2 octets of CID    /                    |\n   :       \
    \                        :                    |\n   +---+---+---+---+---+---+---+---+\
    \                    |\n   /   remainder of base header    /                 \
    \   |\n   +---+---+---+---+---+---+---+---+                    |\n   :       \
    \                        :                    |\n   /           Extension    \
    \       /                    |\n   :                               :         \
    \           |\n    --- --- --- --- --- --- --- ---                     |\n   :\
    \                               :                    |\n   +   IP-ID of outer\
    \ IPv4 header  +\n   :                               :     (see section 5.7 of\
    \ [RFC-3095])\n    --- --- --- --- --- --- --- ---\n   /    AH data for outer\
    \ list     /                    |\n    --- --- --- --- --- --- --- ---       \
    \              |\n   :                               :                    |\n\
    \   +         GRE checksum          +                    |\n   :             \
    \                  :                    |\n    --- --- --- --- --- --- --- ---\
    \                     |\n   :                               :                \
    \    |\n   +   IP-ID of inner IPv4 header  +                    |\n   :      \
    \                         :                    |\n    --- --- --- --- --- ---\
    \ --- ---                     |\n   /    AH data for inner list     /        \
    \            |\n    --- --- --- --- --- --- --- ---                     |\n  \
    \ :                               :                    |\n   +         GRE checksum\
    \          +                    |\n   :                               :      \
    \              |\n    --- --- --- --- --- --- --- ---\n   :            List of\
    \            :\n   /        Dynamic chains         /    variable, given by static\
    \ chain\n   :   for additional IP headers   :           (includes no SN)\n   \
    \ --- --- --- --- --- --- --- ---\n   Note that the list of dynamic chains for\
    \ the additional IP headers in\n   compressed packets do not have a sequence number\
    \ at the end of the\n   chain, as SN is present within compressed base headers.\n"
- title: 3.7.  The CONTEXT_MEMORY Feedback Option
  contents:
  - "3.7.  The CONTEXT_MEMORY Feedback Option\n   The CONTEXT_MEMORY option informs\
    \ the compressor that the\n   decompressor does not have sufficient memory resources\
    \ to handle the\n   context of the packet stream, as the stream is currently compressed.\n\
    \     0   1   2   3   4   5   6   7\n   +---+---+---+---+---+---+---+---+\n  \
    \ |  Opt Type = 9 |  Opt Len = 0  |\n   +---+---+---+---+---+---+---+---+\n  \
    \ When receiving a CONTEXT_MEMORY option, the compressor SHOULD take\n   actions\
    \ to compress the packet stream in a way that requires less\n   decompressor memory\
    \ resources, or stop compressing the packet stream.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security considerations of [RFC-3095] apply\
    \ equally to this\n   document, without exceptions or additions.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   ROHC profile identifier 0x0004 has been reserved\
    \ by the IANA for the\n   profile defined in this document.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors would like to thank Carsten Bormann, Fredrik\
    \ Lindstrom,\n   Tommy Lundemo, and especially the committed document reviewers\n\
    \   Kristofer Sandlund and Mark West, for valuable input and review.\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [RFC-791]   Postel, J., \"Internet Protocol\", RFC\
    \ 791, September 1981.\n   [RFC-2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC-2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n  \
    \             (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC-3095]\
    \  Bormann, C., Burmeister, C., Degermark, M., Fukushima,\n               H.,\
    \ Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T.,\n               Le, K.,\
    \ Liu, Z., Martensson, A., Miyazaki, A., Svanbro,\n               K., Wiebke,\
    \ T., Yoshimura, T. and H. Zheng, \"Robust\n               Header Compression\
    \ (ROHC)\", RFC 3095, July 2001.\n   [PROTOCOL]  \"Assigned Internet Protocol\
    \ Numbers\", IANA registry at:\n               http://www.iana.org/assignments/protocol-numbers\n"
- title: Appendix A.  Detailed Procedures for Canceling Mode Transitions
  contents:
  - "Appendix A.  Detailed Procedures for Canceling Mode Transitions\n   The profiles\
    \ defined in [RFC-3095] operate using different modes of\n   compression: Unidirectional\
    \ (U-Mode), Bi-directional Optimistic\n   (O-Mode), and Bi-directional Reliable\
    \ (R-Mode).  Compression always\n   starts in the U-Mode, and mode transitions\
    \ can only be initiated by\n   the decompressor [RFC-3095, section 5.6.].  A mode\
    \ transition can be\n   requested once a packet has reached the decompressor by\
    \ sending\n   feedback indicating the desired mode.\n   With reference to the\
    \ parameters C_TRANS, C_MODE, D_TRANS, and D_MODE\n   defined in [RFC-3095, section\
    \ 5.6.1.], the following sub-sections\n   describe the resulting procedures when\
    \ a compressor declines a mode\n   transition request from the decompressor as\
    \ described in section 3.4.\n"
- title: A.1.  Transition from Optimistic to Reliable Mode
  contents:
  - "A.1.  Transition from Optimistic to Reliable Mode\n   When the decompressor initiates\
    \ a mode transition from Optimistic to\n   Reliable mode, the cancellation of\
    \ the transition procedure is as\n   follows:\n             Compressor       \
    \              Decompressor\n             ----------------------------------------------\n\
    \                   |                               |\n                   |  \
    \      ACK(R)/NACK(R) +-<-<-<-|  D_TRANS = I\n                   |       +-<-<-<-<-<-<-<-+\
    \       |\n   C_TRANS = P     |-<-<-<-+                       |\n   C_MODE = O\
    \      |                               |\n                   |->->->-+ IR/IR-DYN/UOR-2(SN,C)\
    \ |\n                   |       +->->->->->->->-+       |\n                  \
    \ |->-..                  +->->->-|  D_TRANS = P\n                   |->-..  \
    \                        |  D_MODE = O\n                   |           ACK(SN,O)\
    \   +-<-<-<-|\n                   |       +-<-<-<-<-<-<-<-+       |\n   C_TRANS\
    \ = D     |-<-<-<-+                       |\n                   |            \
    \                   |\n                   |->->->-+  UO-0, UO-1*          |\n\
    \                   |       +->->->->->->->-+       |\n                   |  \
    \                     +->->->-|  D_TRANS = D\n   The compressor must not send\
    \ packet types 1 or 0 when C_TRANS is P,\n   i.e., not until it has received an\
    \ ACK for a UOR-2, IR-DYN, or IR\n   packet sent with the mode transition parameter\
    \ set to C.  When the\n   decompressor receives a UOR-2, IR-DYN, or IR packet\
    \ sent with the\n   mode transition parameter set to C, it must keep the value\
    \ D_MODE as\n   O and set D_TRANS to P.  When the decompressor receives packet\
    \ types\n   0 or 1, after having ACKed a UOR-2, IR-DYN, or IR packet, it sets\n\
    \   D_TRANS to D.\n"
- title: A.2.  Transition from Unidirectional to Reliable Mode
  contents:
  - "A.2.  Transition from Unidirectional to Reliable Mode\n   The cancellation of\
    \ a transition from Unidirectional to Reliable mode\n   follows the same procedure\
    \ as defined in section 4.2 above.\n"
- title: A.3.  Transition from Reliable to Optimistic Mode
  contents:
  - "A.3.  Transition from Reliable to Optimistic Mode\n   When the decompressor initiates\
    \ a mode transition from Reliable to\n   Optimistic mode, the cancellation of\
    \ the transition procedure is\n   described as follows:\n               Compressor\
    \                     Decompressor\n             ----------------------------------------------\n\
    \                   |                               |\n                   |  \
    \      ACK(O)/NACK(O) +-<-<-<-|  D_TRANS = I\n                   |       +-<-<-<-<-<-<-<-+\
    \       |\n   C_TRANS = P     |-<-<-<-+                       |\n   C_MODE = R\
    \      |                               |\n                   |->->->-+ IR/IR-DYN/UOR-2(SN,C)\
    \ |\n                   |       +->->->->->->->-+       |\n                  \
    \ |->-..                  +->->->-|  D_MODE = R\n                   |->-..   \
    \                       |\n                   |           ACK(SN,R)   +-<-<-<-|\n\
    \                   |       +-<-<-<-<-<-<-<-+       |\n   C_TRANS = D     |-<-<-<-+\
    \                       |\n                   |                              \
    \ |\n                   |->->->-+   R-0, R-1*           |\n                  \
    \ |       +->->->->->->->-+       |\n                   |                    \
    \   +->->->-|  D_TRANS = D\n                   |                             \
    \  |\n   The compressor must not send packet types 1 or 0 when C_TRANS is P,\n\
    \   i.e.,  not until it has received an ACK for a UOR-2, IR-DYN, or IR\n   packet\
    \ sent with the mode transition parameter set to C.  When the\n   decompressor\
    \ receives a UOR-2, IR-DYN, or IR packet sent with the\n   mode transition parameter\
    \ set to C, it must keep the value D_MODE as\n   R.  When the decompressor receives\
    \ packet types 0 or 1, after having\n   ACKed a UOR-2, IR-DYN, or IR packet, it\
    \ sets D_TRANS to D.\n"
- title: A.4.  Transition Back to Unidirectional Mode
  contents:
  - "A.4.  Transition Back to Unidirectional Mode\n   When the decompressor initiates\
    \ a mode transition from Reliable or\n   Optimistic mode back to Unidirectional\
    \ mode, the cancellation of the\n   transition procedure is as follows:\n    \
    \          Compressor                     Decompressor\n             ----------------------------------------------\n\
    \               |                               |\n               |        ACK(U)/NACK(U)\
    \ +-<-<-<-| D_TRANS = I\n               |       +-<-<-<-<-<-<-<-+       |\n  \
    \ C_TRANS = P |-<-<-<-+                       |\n   C_MODE = O/R|            \
    \                   |\n               |->->->-+ IR/IR-DYN/UOR-2(SN,C) |\n    \
    \           |       +->->->->->->->-+       |\n               |->-..         \
    \         +->->->-|\n               |->-..                          |\n      \
    \         |          ACK(SN,O/R)  +-<-<-<-|\n               |       +-<-<-<-<-<-<-<-+\
    \       |\n   C_TRANS = D |-<-<-<-+                       |\n               |\
    \          R-0, R-1* or         |\n               |->->->-+  UO-0, UO-1*     \
    \     |\n               |       +->->->->->->->-+       |\n               |  \
    \                     +->->->-| D_TRANS = D\n                                \
    \                 D_MODE = O/R\n   When the decompressor receives a UOR-2, IR-DYN,\
    \ or IR packet sent\n   with the mode transition parameter set to C, it must keep\
    \ the value\n   D_MODE to the bi-directional mode already in use (either O- or\
    \ R-\n   mode).  After ACKing the first UOR-2(C), IR-DYN(C), or IR(C), the\n \
    \  decompressor MUST continue to send feedback with the Mode parameter\n   set\
    \ to the bi-directional mode in use (either O- or R-mode) until it\n   receives\
    \ packet types 0 or 1.  When the decompressor receives packet\n   types 0 or 1,\
    \ after having ACKed a UOR-2, IR-DYN, or IR packet, it\n   sets D_TRANS to D.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Lars-Erik Jonsson\n   Ericsson AB\n   Box 920\n   SE-971\
    \ 28 Lulea, Sweden\n   Phone: +46 8 404 29 61\n   Fax:   +46 920 996 21\n   EMail:\
    \ lars-erik.jonsson@ericsson.com\n   Ghyslain Pelletier\n   Ericsson AB\n   Box\
    \ 920\n   SE-971 28 Lulea, Sweden\n   Phone: +46 8 404 29 43\n   Fax:   +46 920\
    \ 996 21\n   EMail: ghyslain.pelletier@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
