- title: __initial_text__
  contents:
  - "        The ARPANET AHIP-E Host Access Protocol (Enhanced AHIP)\n1. Status of\
    \ this Memo\n   This RFC is a proposed specification for the encoding of Class\
    \ A\n   IP addresses for use on ARPANET-style networks such as the Milnet\n  \
    \ and Arpanet, and for enhancements to the ARPANET AHIP Host Access\n   Protocol\
    \ (AHIP; formerly known as 1822).  These enhancements\n   increase the size of\
    \ the PSN field, allow ARPANET hosts to use\n   logical names to address each\
    \ other, allow for the communication\n   of type-of-service information from the\
    \ host to the PSN and\n   enable the PSN to provide congestion feedback to the\
    \ host on a\n   connection basis. Distribution of this memo is unlimited.\n  \
    \ Comments on this RFC should be sent to the netmail address\n   \"ahipe@bbn.com\"\
    .\n                             Table of Contents\n        1   INTRODUCTION..........................................\
    \ 4\n        2   IP ISSUES............................................. 6\n  \
    \      2.1   Current Interpretation of Class A IP Address\n              Fields\n\
    \               ................................................... 6\n      \
    \  2.2   Requirements and Constraints Affecting New\n              Class A Mapping\n\
    \               ................................................... 7\n      \
    \  2.3   New Interpretation of IP Address Fields............. 8\n        2.4 \
    \  Discussion of the New Mapping.......................10\n        2.5   Interoperability\
    \ between Current AHIP and\n              AHIP-E\n               ...................................................11\n\
    \        3   LOGICAL ADDRESSING................................... 13\n      \
    \  3.1   Addresses and Names................................ 13\n        3.2 \
    \  Name Translations.................................. 14\n        3.2.1   Authorization\
    \ and Effectiveness.................. 15\n        3.2.2   Translation Policies.............................\
    \ 16\n        3.2.3   Reporting Destination Host Downs................. 17\n \
    \       3.3   Establishing Host-PSN Communications............... 18\n       \
    \ 3.4   Name Server........................................ 19\n        4   OTHER\
    \ CHANGES........................................ 20\n        4.1   Type-of-Service\
    \ Specification...................... 20\n        4.2   Subnet Congestion Feedback.........................\
    \ 21\n        4.3   Precedence Level Information....................... 21\n \
    \       5   FORMATS FOR NEW AHIP-E MESSAGES...................... 23\n       \
    \ 5.1   Host-to-PSN AHIP-E Leader Format................... 23\n        5.2  \
    \ PSN-to-Host AHIP-E Leader Format................... 27\n        6   AHIP-E VERSIONS......................................\
    \ 33\n        7   REFERENCES........................................... 34\n \
    \                                 FIGURES\n        2.1  IP Class A Mapping...................................\
    \ 6\n        2.2  New Class A IP Address Interpretation................ 8\n  \
    \      2.3  AHIP-E Address and Name.............................. 9\n        3.1\
    \  Current AHIP Address Format......................... 13\n        3.2  AHIP-E\
    \ Address Format............................... 14\n        3.3  Logical Name\
    \ Format................................. 14\n        5.1  Host-to-PSN AHIP-E\
    \ Leader Format.................... 23\n        5.2  NDM Message Format..................................\
    \ 25\n        5.3  PSN-to-Host AHIP-E Leader Format.................... 27\n \
    \       5.4  Name Server Reply Format............................ 30\n1  INTRODUCTION\n\
    This RFC is a proposed specification for the encoding of Class A\nIP addresses\
    \ for use on ARPANET-style networks such as the Milnet\nand Arpanet, and for enhancements\
    \ to the AHIP Protocol (AHIP is the\npreferred term for what has previously been\
    \ known as the 1822\nprotocol).  These enhancements and modifications are partially\n\
    motivated by a need to overcome the current address limitation\nof 256 PSNs per\
    \ network and by a desire to allow hosts to take\nadvantage of logical addressing\
    \ with minimal change to their AHIP\nsoftware. This enhanced AHIP protocol will\
    \ be referred to as\n\"AHIP-E\".  These enhancements will:\n    1.   Increase\
    \ the size of the PSN field to 10 bits.\n    2.   Allow hosts to use logical names\
    \ (i.e., host names that are\n         independent of physical location on the\
    \ network) in addition to\n         physical port addresses to communicate with\
    \ each other.\n    3.   Enable the host to specify a type-of-service to the PSN.\n\
    \    4.   Provide a mechanism for the PSN to communicate subnetwork\n        \
    \ congestion information to the host on a destination host basis.\n         This\
    \ will give the host an opportunity to selectively reduce\n         its congesting\
    \ flows, thus preventing all of its flows from\n         being blocked b y the\
    \ network.  Currently, a host has no way of\n         knowing which of its flows\
    \ is experiencing congestion;\n         consequently, it is possible that one\
    \ congesting flow can\n         result in the blocking of all the host's flows\
    \ .\n    5.   Enable the PSN to inform the host about changes in precedence\n\
    \         cutoff levels and about precedence level violations.\nA host can take\
    \ advantage of the extended and logical addressing\ncapabilities without making\
    \ substantial changes to its AHIP\nimplementation.  In particular, the specification\
    \ provides three\nversions of AHIP-E: version 0 is current AHIP with no changes;\
    \ version 1\nallows use of logical and extended addressing with minimal change\
    \ to\ncode; version 2 constitutes full-fledged AHIP-E.  This is described in\n\
    further detail in chapter 6.\nThis RFC's terminology is consistent with that used\
    \ in BBN Report 1822\n[1], and any new terms are defined when they are first used.\n\
    Familiarity with Report 1822 (section 3 in particular) is assumed.  As\ncould\
    \ be expected, the RFC makes many references to Report 1822.  As a\nresult, it\
    \ uses, as a convenient abbreviation, \"see 1822(x)\" instead of\n\"please refer\
    \ to Report 1822, section x, for further details\".\nThe rest of this RFC is organized\
    \ as follows.  Chapter 2 describes the\nnew mapping between IP class A addresses\
    \ and subnetwork hosts.  Chapter\n3 discusses logical addressing.  Chapter 4 describes\
    \ the enhancements\nrelated to type-of-service and reliability specification and\
    \ to\ncongestion and precedence feedback.  Chapter 5 includes a specification\n\
    of the new message types and their formats.  Finally, chapter 6\ndescribes the\
    \ AHIP-E version numbering scheme.\n2  IP ISSUES\nThis section discusses the changes\
    \ to the mapping between Class A IP\naddresses [5] and subnet addresses.  These\
    \ changes are made necessary\nby:\n      1.  The introduction of logical names.\n\
    \      2.  The expansion of the PSN-number field.\nNote that this RFC does not\
    \ affect Class B and C mappings [5].\n2.1  Current Interpretation of Class A IP\
    \ Address Fields\nClass A IP addresses are 32 bits in length, with 8 bits devoted\
    \ to\nnetwork number and 24 to the local address.  In particular, they are of\n\
    the form n.h.l.i, where n,h,l and i are decimal integers less than 256.\nAHIP\
    \ addresses are 24 bits in length.  The current ARPANET-style class A\nmapping\
    \ is as follows (from RFC 796):\n             0       7 8     15 16   23 24  \
    \   31\n             +--------+--------+-------+---------+\n             | net\
    \ #  |  HOST  |   LH  | PSN     |   IP Address\n             +--------+--------+-------+---------+\n\
    \                 8        8         8      8\n                      8       \
    \   8        8\n              +--------+--------+--------+\n              |  HOST\
    \  |  ZERO  | PSN    |  AHIP Physical Address\n              +--------+--------+--------+\n\
    \              41     48 49    56 57    64\n            (bit positions in the\
    \ AHIP leader)\n                            IP Class A Mapping\n             \
    \                   Figure 2.1\nThe LH (logical host) field is used by the hosts\
    \ only and is not passed\nto the network.\n2.2  Requirements and Constraints Affecting\
    \ New Class A Mapping\nThis section discusses some of the requirements and constraints\
    \ that\nwere considered significant in determining the new address mapping.\n\
    \     1.   Address Mapping Stability Requirement:\n          Any current IP physical\
    \ address with l (logical host) = 0\n          should remain unchanged under the\
    \ new design.  For example,\n          the binary string corresponding to 10.0.0.51\
    \ should continue\n          to refer to sri-nic.arpa (assuming, of course, that\
    \ sri-nic\n          continues to reside on psn 51, port 0).  This requirement\
    \ is\n          motivated by a desire to avoid a network-wide address\n      \
    \    switchover.\n     2.   Existing implementation compatibility:\n         \
    \ Existing compliant implementations of AHIP should continue to\n          function\
    \ for destinations with addresses fitting the\n          restrictions in 1.  In\
    \ other words, such addresses should\n          continue to refer to their original\
    \ destinations, not only\n          with the AHIP-E implementation (which is the\
    \ condition in 1),\n          but also with current ones.\n     3.   Compatibility\
    \ between X.25's IP address to subnet host mapping\n          and AHIP's IP address\
    \ to subnet host mapping:\n          The AHIP-E IP to host mapping should be able\
    \ to co-exist in\n          some sense with the IP to host mapping specified by\
    \ the DDN\n          X.25 Specification [6].  In particular, restricted use of\
    \ the\n          revised IP to DDN host mapping should produce addresses that\n\
    \          are consistent with the current X.25 mapping.  In other words,\n  \
    \        there should be a set that includes \"sufficiently many\"\n         \
    \ logical names and physical addresses, with the property that\n          each\
    \ address/name in the set maps onto the same host under\n          both the AHIP\
    \ and X.25 mappings.\n     4.   Maximum number of PSNs that can be supported:\n\
    \          The new design should support a maximum of more than 256 PSNs\n   \
    \       per network.\n2.3  New Interpretation of IP Address Fields\nThe following\
    \ is the new interpretation of the IP address field, in the\ncontext of ARPANET-style\
    \ networks:\n            Proposed IP Address Interpretation\n              8 \
    \       8     1   5       10\n          +--------+--------+-+-----+----------+\n\
    \          | net #  |  HOST  |0|XXXXX|   PSN    |  Physical Address\n        \
    \  +--------+--------+-+-----+----------+\n          0       7 8     15  17  21\
    \ 22      31\n              8        8      2   6       8\n          +--------+--------+--+------+--------+\n\
    \          | net #  | UPPER  |11|XXXXXX| LOWER  |  Logical Name\n          +--------+--------+--+------+--------+\n\
    \          0       7 8     15   18   23 24    31\n                   16      \
    \   2       14\n          +-----------------+--+---------------+\n          |\
    \                 |10|               |  Reserved Format\n          +-----------------+--+---------------+\n\
    \          0               15    18            31\n                      (X =\
    \ don't care)\n                 New Class A IP Address Interpretation\n      \
    \                         Figure 2.2\nThe fields have the following meanings:\n\
    \          HOST = host-number\n          PSN = 10 bit PSN-number field\n     \
    \     UPPER = upper 8 bits of the 16-bit logical name\n          LOWER = lower\
    \ 8 bits of the 16-bit logical name\nAHIP-E physical addresses and logical names\
    \ have the following formats:\n               8     1   5       10\n         \
    \ +--------+-+-----+----------+\n          |  HOST  |0|XXXXX|   PSN    |  Physical\
    \ Address\n          +--------+-+-----+----------+\n          41     48      \
    \   55      64\n          (bit positions in the AHIP leader)\n               \
    \ (X = don't care)\n              8      2   6       8\n          +--------+--+------+--------+\n\
    \          | UPPER  |11|XXXXXX| LOWER  |  Logical Name\n          +--------+--+------+--------+\n\
    \          41     48           57     64\n               (bit positions in the\
    \ AHIP leader)\n          +--------+--+---------------+\n          |        |10|\
    \               |  Reserved Address Format\n          +--------+--+---------------+\n\
    \          41     48    51            64\n               (bit positions in the\
    \ AHIP leader)\n                        AHIP-E Address and Name\n            \
    \                   Figure 2.3\nThe reserved address format is currently undefined\
    \ and will be rejected\nby the PSN, which will return an error message (message\
    \ type 6, subtype\n3) to the host.\n    -----------------------------------------------------------------\n\
    \   |This design does not require the AHIP-E host to do any processing|\n   |of\
    \ the address -- the host need only copy bits 8-31 of the IP    |\n   |address\
    \ into bits 41-64 of the AHIP leader.  The host no longer  |\n   |needs to zero\
    \ out bits 49-56 of the AHIP leader.  The PSN will   |\n   |take care of the AHIP\
    \ to subnet address conversion.  In other    |\n   |words, bits 8-31 of the IP\
    \ address field should be passed        |\n   |unchanged to the PSN, which interprets\
    \ them exactly as shown in  |\n   |figure 2.3.                               \
    \                       |\n    -----------------------------------------------------------------\n\
    2.4  Discussion of the New Mapping\nThis section presents an evaluation of the\
    \ design in terms of the\nrequirements in section 2.2\n     1.   Address mapping\
    \ stability requirement:\n          Current physical IP addresses will not have\
    \ to be changed, as\n          long as they have been following the convention\
    \ of setting LH\n          = 0.  This ensures that bit 16 is set to 0, indicating\
    \ that\n          the address is physical, and that the PSN number comes out\n\
    \          right.\n     2.   Existing implementation compatibility:\n        \
    \  The design meets this requirement, as the address that gets to\n          the\
    \ PSN has its second octet = 0, which results in its correct\n          interpretation\
    \ as a physical address.\n     3.   Compatibility with the current X.25 IP address\
    \ to DDN host\n          mapping:\n          The current X.25 IP to HOST mapping\
    \ [6] is as follows: If h <\n          64, the address is considered physical,\
    \ i.e., it refers to\n          host h on PSN i.  If h >= 64, the address is considered\n\
    \          logical, i.e., it refers to the host whose logical name is h\n    \
    \      concatenated with i.\n          The design is compatible in a limited sense\
    \ with the current\n          X.25 logical addressing implementation, as long\
    \ as logical\n          names are assigned such that host-number > 63 (also PSN-number\n\
    \          < 256 which is automatic, given the 16-bit size of the logical\n  \
    \        name field) and physical addresses are in the range host-\n         \
    \ number < 64 and PSN- number < 256, with the appropriate\n          setting of\
    \ bits 16 and 17 of the IP address field.  This works\n          because the X.25\
    \ mapping ignores the value of the l field,\n          i.e., the third IP address\
    \ octet.\n          Given the desire to be able to address more than 64 hosts\n\
    \          physically and for PSN numbers > 255, this address assignment\n   \
    \       restriction should not be considered permanent, but rather as\n      \
    \    an interim compromise until the hosts' X.25 implementations\n          are\
    \ revised to incorporate the new mapping between IP and DDN\n          addresses.\n\
    \     4.   Maximum number of PSNs that can be supported:\n          The design\
    \ allows addressing of up to 1024 PSNs per network.\n2.5  Interoperability between\
    \ Current AHIP and AHIP-E\nThis section discusses the interoperability between\
    \ hosts using current\nAHIP and AHIP-E.  It also discusses the general issue of\
    \ current AHIP\nhost operation in the AHIP-E addressing environment.\nThe proposed\
    \ modifications to AHIP have been designed with backward\ncompatibility in mind.\
    \  However, note that bits 41-64 of the PSN-to-host\nleader (see 1822(3.4)) will\
    \ always contain the physical address of the\nsource host.  This means that an\
    \ error could occur when a host on a PSN\nnumbered greater than 255 attempts to\
    \ send a message to a host running a\ncurrent AHIP implementation, which interprets\
    \ the address of the source\nhost as one with PSN-number < 256.\nThere are other\
    \ possibilities for errors, caused by incorrect address\ntranslation between IP\
    \ and current AHIP:\n   1.  A host running current AHIP cannot physically address\n\
    \       any host on a PSN numbered greater than 255 (see Figure\n       3.1).\
    \  Consequently, an error will result if the host\n       attempts to use an address\
    \ from the NIC host table that\n       has PSN-number > 255.\n   2.  If a host\
    \ running current AHIP attempts to use a\n       logical name that it might have\
    \ in its host table, an\n       error will occur.  This is because the logical\
    \ name flag\n       bits 16 and 17 of the IP address, bits 49 and 50 of the\n\
    \       AHIP leader.  Recal that bits 49 - 56 of the AHIP\n       leader get set\
    \ to zero with current AHIP (see figure\n       2.1).\nSince these errors cannot\
    \ be detected by the subnetwork, it is essential\nthat all hosts implement at\
    \ least version 1 AHIP-E (see chapter 6)\nbefore PSN numbers over 255 and logical\
    \ names are assigned.\nAnother aspect of interoperability has to do with the IP\
    \ LH field, which\nis currently used by a handful of Arpanet hosts to demultiplex\
    \ a single\nhost port.  The 5 don't-care bits of the physical IP address (bits\
    \ 17-\n21) and the 6 don't-care bits of the IP logical name (bits 18-23) can be\n\
    used for this purpose -- in particular, the use of these bits is divided\nbetween\
    \ the network and external devices, based on administrative\nagreement.  At the\
    \ very least, the IP addresses of such hosts will have\nto change to reflect the\
    \ changed position of the LH field.  However, the\npreferred way to demultiplex\
    \ a single host port is via the mechanism of\nlogical names.  The only change\
    \ this involves is to get the port\nexpander implementation to look at the entire\
    \ IP address, rather than\njust the LH field.\n3  LOGICAL ADDRESSING\nThe modifications\
    \ to AHIP allow a host to use logical addressing to\ncommunicate with other hosts\
    \ on the network.  Basically, logical\naddressing allows hosts to refer to each\
    \ other using a logical name (see\nsection 3.1) which is independent of a host's\
    \ physical location in the\nnetwork.  IEN 183 (also published as BBN Report 4473)\
    \ [2] gives the use\nof logical addressing considerable justification.  Among\
    \ the advantages\nit cites are:\no The ability to refer to each host on the network\
    \ by a name\n  independent of its location in the network (especially\n  important\
    \ if the host has to move to another physical port).\no Allowing different hosts\
    \ to share the same host port on a\n  time-division basis.\no Allowing a host\
    \ to use multi-homing (where a single host uses\n  more than one port to communicate\
    \ with the network).\no Allowing several hosts that provide the same service to\
    \ share\n  the same name.\no Allowing a host to provide services that have their\
    \ own unique\n  names.\n3.1  Addresses and Names\nThe AHIP-E protocol allows two\
    \ forms of host specification.  The first\nis a slightly modified version of the\
    \ form used by the current AHIP\nprotocol, the physical address.  The second form\
    \ is the logical name\n(the terms \"name\", \"logical name\" and \"logical address\"\
    \ are used\ninterchangeably in this document).\nCurrent AHIP addresses are the\
    \ 24-bit host addresses found in AHIP\nleaders.  They have the following format:\n\
    \                       8          8        8\n               +-------------+--------+------------+\n\
    \               | host-number |00000000| PSN-number |\n               +-------------+--------+------------+\n\
    \                41         48 49    56 57        64\n                (bit positions\
    \ in the AHIP leader)\n                      Current AHIP Address Format\n   \
    \                            Figure 3.1\nAHIP-E addresses have the following format:\n\
    \                  8     1   5       10\n             +--------+-+-----+----------+\n\
    \             |  HOST  |0|XXXXX|   PSN    |  Physical Address\n             +--------+-+-----+----------+\n\
    \             41     48         55      64\n             (bit positions in the\
    \ AHIP leader)\n           (X = don't care)\n                         AHIP-E Address\
    \ Format\n                               Figure 3.2\nLogical names are 16-bit\
    \ unsigned numbers that serve as a logical\nidentifier for one or more hosts.\
    \  A logical name is the concatenation\nof two separate octets in the AHIP leader,\
    \ bits 41-48 (Upper 8) and 57-\n64 (Lower 8) in particular.\n                \
    \         8      2   6       8\n                     +--------+--+------+--------+\n\
    \                     | UPPER  |11|XXXXXX| LOWER  |\n                     +--------+--+------+--------+\n\
    \                     41     48           57     64\n                    (bit\
    \ positions in the AHIP leader)\n                           (X = don't care)\n\
    \                          Logical Name Format\n                             \
    \  Figure 3.3\n3.2  Name Translations\nThere are a number of factors that determine\
    \ how a logical name is\ntranslated by the PSN into a physical address on the\
    \ network.  These\nfactors include which translations are legal; in what order\
    \ different\ntranslations for the same name should be attempted; and which legal\n\
    translations should not be attempted because a particular host port is\ndown.\
    \  These issues are discussed in the following sections.\n3.2.1  Authorization\
    \ and Effectiveness\nEvery host on a PSN, regardless of whether it is using the\
    \ AHIP or\nAHIP-E protocol to access the network, can have one or more logical\n\
    names.  Hosts using AHIP-E can then use these names to address the hosts\nin the\
    \ network independent of their physical locations.\nAt this point, several questions\
    \ arise:  How are these names assigned,\nhow do they become known to the PSNs\
    \ (so that translations to physical\naddresses can be made), and how do the PSNs\
    \ know which host is currently\nusing a shared port?  To answer each question\
    \ in order:\nNames are assigned by a central network administrator.  When each\
    \ name\nis created, it is assigned to a host (or a group of hosts) at one or\n\
    more specific host ports.  The host(s) are allowed to reside at those\nspecific\
    \ host ports, and nowhere else.  If a host moves, it will keep\nthe same name,\
    \ but the administrator has to update the central database\nto reflect the new\
    \ host port.  Changes to this database are distributed\nto the PSNs by the Monitoring\
    \ Center (MC).  For a while, the host may be\nallowed to reside at either of (or\
    \ both) the new and old ports.  Once\nthe correspondence between a name and one\
    \ or more hosts ports where it\nmay be used has been made official by the administrator,\
    \ that name is\nsaid to be authorized.  Physical addresses, which actually refer\
    \ to\nphysical host ports, are always authorized in this sense.\nWhen the PSN\
    \ detects that a host has come up on one of its ports, it\nmakes effective the\
    \ default name(s), if any, for that host.  This\ndefault action is specified in\
    \ the configuration table for that host,\nand can be one of the following: Enable\
    \ All Names, Enable No Names,\nEnable One Particular Name.  In the case of an\
    \ AHIP-E host, the default\nname might not be the one that the host desires to\
    \ be known as (recall\nthat several hosts may share the same port, or one host\
    \ may prefer to be\nknown by different names at different times).  This requires\
    \ that an\nAHIP-E host be able to declare its name to the PSN.  This function\
    \ is\nperformed by a new host-to-PSN message, the Name Declaration Message\n(NDM),\
    \ which lists the names that the host would like to be known by.\nThe PSN checks\
    \ its tables to see if each of the names is authorized, and\nsends an NDM Reply\
    \ to the host saying which names were actually\nauthorized and can now be used\
    \ for sending and receiving messages (i.e.,\nwhich names are effective).  A host\
    \ can also use an NDM message to\nchange its list of effective names (it can add\
    \ to and delete from the\nlist) at any time.  The only constraint on the host\
    \ is that any names it\nwishes to use can become effective only if they are authorized.\n\
    If a host is using the current AHIP protocol, it can still receive\nmessages from\
    \ hosts via its logical name.  Of course, it can also\nreceive messages from a\
    \ current AHIP host via its physical address as\nwell.  (Remember, the distinction\
    \ between logical names and physical\naddresses is that the addresses correspond\
    \ to physical locations on the\nnetwork, while the names are strictly logical\
    \ identifiers).\nThe third question above has by now already been answered. An\
    \ AHIP-E\nhost can use the NDM message to tell the PSN which host it is (which\n\
    names it is known by).  Thus, even if this is a shared port, the PSN\nknows which\
    \ host is currently connected.\nWHENEVER A HOST GOES DOWN, ITS NAMES AUTOMATICALLY\
    \ BECOME NON-\nEFFECTIVE.  When it comes back up, the default action (from the\
    \ host's\nconfiguration) is taken.  If the host wishes to be known by a name other\n\
    than the default, it will have to issue a NDM.  It will also have to do\nthis\
    \ upon receipt of reset NOPS from the PSN.\n3.2.2  Translation Policies\nSeveral\
    \ hosts can share the same logical name.  If more than one of\nthese hosts is\
    \ up at the same time, any messages sent to that logical\nname will be delivered\
    \ to just one of the hosts sharing that name, and a\nRFNM will be returned as\
    \ usual.  However, the sending host will not\nreceive any indication of which\
    \ host received the message, and\nsubsequent messages to that name are not guaranteed\
    \ to be sent to the\nsame host.  Typically, hosts providing exactly the same service\
    \ could\nshare the same logical name in this manner.\nSimilarly, when a host is\
    \ multi-homed, the same logical name may refer\nto more than one host port (all\
    \ connected to the same host).  If the\nhost is up on only one of those ports,\
    \ that port will be used for all\nmessages addressed to the host.  However, if\
    \ the host were up on more\nthan one port, the message would be delivered over\
    \ just one of those\nports, and the subnet would choose which port to use.  This\
    \ port\nselection could change from message to message.  If a host wanted to\n\
    insure that certain messages were delivered to it on specific ports,\nthese messages\
    \ could use either the port's physical address or a\nspecific logical name that\
    \ referred to that port alone.\nThree different address selection policies are\
    \ available for the name\nmapping process.  When translated, each name uses one\
    \ of the three\npolicies (the policy is administratively pre-determined on a per-name\n\
    basis).  The three policies are:\no  Attempt each translation in the order in\
    \ which the physical\n   addresses are listed in the PSN's translation tables,\
    \ to find\n   the first reachable physical host address.  This list is\n   always\
    \ searched from the top whenever a new virtual circuit\n   connection has to be\
    \ created.  This is the most commonly used\n   policy.\no  Selection of the closest\
    \ physical address, which uses the\n   PSN's internal routing tables to find the\
    \ translation to the\n   destination PSN with the least cost path for the particular\n\
    \   type-of-service whenever a new virtual circuit connection has\n   to be created.\n\
    o  Use load leveling.  This is similar to the first policy, but\n   differs in\
    \ that searching the address list for a valid\n   translation starts at the address\
    \ following where the\n   previous translation search ended whenever a new virtual\n\
    \   circuit connection has to be created. This attempts to\n   spread out the\
    \ load from any one PSN's hosts to the various\n   host ports associated with\
    \ a particular name.  Note that\n   this is NOT network-wide load leveling, which\
    \ would require\n   knowledge about flows throughout the network.\n3.2.3  Reporting\
    \ Destination Host Downs\nAs is explained in Report 1822, whenever regular messages\
    \ are sent by a\nhost, the PSN opens a virtual circuit connection to each destination\n\
    host from the source host.  A new connection is opened for each new\nsource-address/destination-name\
    \ (or address, as the case might\nbe)/handling-type/type-of-service combination.\
    \  A connection will stay\nopen at least as long as there are any outstanding\
    \ (un-RFNMed) messages\nusing it and both the source and destination hosts stay\
    \ up.  Connections\nare also closed after a period of inactivity.\nHowever, the\
    \ destination host may go down for some reason during the\nlifetime of a connection.\
    \  If the host goes down while there are no\noutstanding messages to it in the\
    \ network, then the connection is closed\nand no other action is taken until the\
    \ source host submits the next\nmessage for that destination.  At that time, ONE\
    \ of the following events\nwill occur:\nA1.  If a physical address is being used\
    \ to specify the\n     destination host, then the source host will receive a type\n\
    \     7, subtype 0 (Destination Host Dead) message from the PSN.\nA2.  If a logical\
    \ name is being used to specify the\n     destination host, and the name maps\
    \ to only one authorized\n     host port,then a type 7, subtype 0 message will\
    \ be sent to\n     the source host.\nA3.  If a logical name is being used to specify\
    \ the destination\n     host, and the name maps to more than one authorized host\n\
    \     port, then the PSN attempts to open a connection to another\n     authorized\
    \ and effective host port for that name.  If no\n     such connection can be made,\
    \ the host will receive a type\n     15 (AHIP Name or Address Error), subtype\
    \ 5 (no effective\n     translations) message (see section 5.2).  Note that a\
    \ type\n     7 message cannot be returned to the source host, since type\n   \
    \  7 messages refer to a particular destination host port, and\n     the name\
    \ maps to more than one destination port.  However,\n     in the case of a version\
    \ 0 or 1 host, a type 7, subtype 0\n     message will be returned for each outstanding\
    \ message.  See\n     chapter 6 for further details on version numbers.\nThings\
    \ get a bit more complicated if there are any outstanding messages\non the connection\
    \ when the destination host goes down.  The connection\nwill be closed, and one\
    \ of the following will occur:\nB1.  If a physical address is being used to specify\
    \ the\n     destination host, then the source host will receive a type\n     7\
    \ message for each outstanding message.\nB2.  If a logical name is being used\
    \ to specify the\n     destination host, then the source host will receive a type\n\
    \     9 (Incomplete Transmission), subtype 6 (message lost due to\n     logically\
    \ addressed host going down) message for each\n     outstanding  message.  The\
    \ next time the source host\n     submits another message for that same destination\
    \ name,\n     the previous algorithm will be used (either step A2 or\n     step\
    \ A3). However,in the case of a version 0 or 1 host, a\n     type 7,subtype 0\
    \ message will be returned for each\n     outstanding message. See chapter 6 for\
    \ further details\n     on version numbers.\n3.3  Establishing Host-PSN Communications\n\
    When a host comes up on a PSN, or after there has been a break in the\ncommunications\
    \ between the host and its PSN (see 1822 (3.2)),the orderly\nflow of messages\
    \ between the host and the PSN needs to be properly (re-\n)established.  This\
    \ allows the PSN and host to recover from almost any\nfailure in the other or\
    \ in their communications path, including a break\nin mid-message.\nThe first\
    \ messages that a host should send to its PSN are three NOPs.\nThree messages\
    \ are required to ensure that at least one message will be\nproperly read by the\
    \ PSN (the first NOP could be concatenated to a\nprevious message if communications\
    \ had been broken in mid-stream, and\nthe third provides redundancy for the second).\
    \  These NOPs serve to\nsynchronize the PSN with the host, to inform the PSN about\
    \ how much\npadding the host requires between the message leader and its body\
    \ and to\nspecify the host's AHIP-E version number to the PSN (see chapter 6).\n\
    Similarly, the PSN will send three NOPs to the host when it detects that\nthe\
    \ host has come up.  The NOPs will be followed by an Interface Reset\nmessage.\
    \  These NOPs will contain the physical address of the host\ninterface.\nOnce\
    \ the PSN and the host have sent each other the above messages,\nregular communications\
    \ can commence.  See 1822(3.2) for further details\nconcerning the ready line,\
    \ host tardiness, and other issues.\n3.4  Name Server\nThere may be times when\
    \ a host wants to perform its own translations, or\nmight need the full list of\
    \ physical addresses to which a particular\nname maps.  For example, a connection-\
    \ based host-to-host protocol may\nrequire that the same physical host port on\
    \ a multi-homed host be used\nfor all messages using that host-to-host connection,\
    \ and the host does\nnot wish to trust the PSN to always deliver messages using\
    \ a destination\nname to the same host port.\nIn these cases, the host can submit\
    \ a type 11 (Name Server Request)\nmessage to the PSN, which requests the PSN\
    \ to translate the destination\nname and return a list of the addresses to which\
    \ it maps.  The PSN will\nrespond with a type 11 (Name Server Reply) message,\
    \ which contains the\nselection policy in use for that name, the number of addresses\
    \ to which\nthe name maps, the addresses themselves, and for each address, whether\n\
    it is effective and its routing distance (for the particular type-of-\nservice\
    \ specified in the Name Server Request message) from the PSN.  See\nsection 5.2\
    \ for a complete description of these messages' contents.\nUsing this information,\
    \ the source host could make an informed decision\non which of the physical host\
    \ ports corresponding to a logical name to\nuse and then send the messages to\
    \ that port, rather than to the name.\nThe PSN also supports a different type\
    \ of name service.  A host needs to\nissue a Name Declaration Message to the PSN\
    \ in order to change its\neffective names, but it may not wish to keep its names\
    \ in some table or\nfile in the host.  In this case, it can ask the PSN to tell\
    \ it which\nnames it is authorized to use.\nIn this case, the host submits a type\
    \ 12 (Port List Request) message to\nthe PSN, and the PSN replies with a type\
    \ 12 (Port List Reply) message.\nIt contains, for the host port over which the\
    \ PSN received the request\nand sent the reply, the number of names that map to\
    \ the port, the list\nof names, and whether or not each name is effective.  The\
    \ host can then\nuse this information in order to issue the Name Declaration Message.\n\
    Section 5.2 contains a complete description of the reply's contents.\n4  OTHER\
    \ CHANGES\nThis section describes the enhancements to the AHIP protocol involving\n\
    type-of-service specification, subnet congestion feedback and network\nprecedence\
    \ level feedback.  Note that only version 2 hosts will receive\nthe congestion\
    \ and precedence messages described in this section.\n4.1  Type-of-Service Specification\n\
    Bits 9 and 10 of the AHIP leader, currently unused, will be used by the\nhost\
    \ to specify desired delay and throughput characteristics to the PSN.\nBit 11,\
    \ also currently unused, will be used to specify reliability.  The\nbits have\
    \ the following meaning:\nBit 9:    delay bit\n            0 -- normal delay\n\
    \            1 -- low delay\nBit 10:   throughput bit\n            0 -- normal\
    \ throughput\n            1 -- high throughput\nBit 11:   reliability bit\n  \
    \          0 -- normal reliability\n            1 -- high reliability\nThe values\
    \ of these bits are consistent with those of IP, and bits 11,\n12 and 13 of the\
    \ IP header can be copied directly into bits 9, 10 and 11\nof the AHIP leader.\n\
    The type-of-service bits should be considered as extensions of the\n\"Handling\
    \ Type\" field (bits 33-40 of the AHIP leader -- see 1822 (3.3)).\nMessages from\
    \ host A to host B using the same destination name and of\nthe same handling type\
    \ and type-of- service will use the same\nconnection, while those that differ\
    \ in either type-of-service,\ndestination name or handling type will use separate\
    \ connections.  In\nother words, for a given source host and destination name\
    \ pair, a new\nconnection will be established whenever a message with a new handling-\n\
    type/type-of- service combination is received.\n4.2  Subnet Congestion Feedback\n\
    This section describes the new messages that are part of the mechanism\nused by\
    \ the PSN to communicate subnetwork congestion information to the\nhost. Note\
    \ that a host will be blocked by the PSN when its share of\nbuffers in the PSN\
    \ is used up.  Thus, this information, which is\ncommunicated on a connection\
    \ basis, will give the host an opportunity to\nselectively reduce its congesting\
    \ flows, thus preventing all of its\nflows from getting blocked. Currently, a\
    \ host has no way of knowing\nwhich of its flows is experiencing congestion; consequently,\
    \ it is\npossible that one congesting flow can result in the blocking of all the\n\
    host's flows.\nThree new PSN-to-host messages have been created. These messages\
    \ are:\n      1.  STOP: Blocking Imminent -- Stop Sending on this\n          Connection\
    \ (Message type 13)\n      2.  SLOW: Subnet Congestion -- Send at Slow Rate on\
    \ this\n          Connection (Message type 14) -- Maintain Window Size of\n  \
    \        1, i.e., do not send a new message to this destination\n          host\
    \ with this type-of-service and handling type until\n          all previous messages\
    \ have been acknowledged by RFNMs.\n      3.  GO: Congestion Subsided -- Send\
    \ at Regular Rate on this\n          Connection (Message type 16) -- Maintain\
    \ Window Size of\n          8\nThese messages may be sent in any order and correspond\
    \ to states, not\ntransitions.  A participating host should support three states\
    \ with\neffective windows of 8, 1 and 0.  The format of these messages can be\n\
    found in section 5.2.\n4.3  Precedence Level Information\nTwo new messages have\
    \ been created:\n     1.  Network Not Accepting Messages at this Precedence Level\n\
    \         (Message type 9, subtype 7).\n     2.  Network Precedence Level Cutoff\
    \ Change (Message type\n         17).\nThe first message will be generated whenever\
    \ the host attempts to send a\nmessage at a precedence level lower than the cutoff.\
    \  The cutoff\nrepresents a precedence level below which no traffic may be submitted\n\
    into the subnetwork; note that a cutoff set to the lowest possible\nprecedence\
    \ level implies that no precedence restrictions are in effect.\nIf the host has\
    \ chosen not to receive the new AHIP-E messages, then the\nPSN will send a type\
    \ 7, sub-type 3 message (communication with the\ndestination host is administratively\
    \ prohibited) instead.  The second\nmessage will be generated whenever the network\
    \ precedence level cutoff\nchanges.  Both messages contain the network precedence\
    \ cutoff value.\nThe format of these messages can be found in section 5.2.\n5\
    \  FORMATS FOR NEW AHIP-E MESSAGES\nThe following sections describe the formats\
    \ of the leaders that precede\nmessages between an AHIP-E host and its PSN.  The\
    \ formats are almost\nidentical to those of AHIP (see 1822(3.3) and 1822(3.4)).\
    \ New message\ntypes are marked by margin bars (as shown | here).\n5.1  Host-to-PSN\
    \ AHIP-E Leader Format\n 1      4 5      8         13  16 17    20 21 22 24 25\
    \            32\n+---------+--------+-+-+-+-+------+--------+-+------+----------------+\n\
    |         | FORMAT |D|T|R|U|      |        |T|LEADER|                |\n| UNUSED\
    \  |  FLAG  |E|H|E|N| VERS | UNUSED |R|FLAGS |  MESSAGE TYPE  |\n|         | \
    \ (15)  |L|R|L|U|      |        |C|      |                |\n+---------+--------+-+-+-+-+------+--------+-+------+----------------+\n\
    \ 33                  40 41                                          64\n+----------------------+----------------------------------------------+\n\
    |                      |                                              |\n|   \
    \ HANDLING TYPE     |                DESTINATION HOST              |\n|      \
    \                |                                              |\n+----------------------+----------------------------------------------+\n\
    \ 65                     76 77    80 81                              96\n+-------------------------+--------+----------------------------------+\n\
    |                         |        |                                  |\n|   \
    \    MESSAGE ID        |SUB-TYPE|            UNUSED                |\n|      \
    \                   |        |                                  |\n+-------------------------+--------+----------------------------------+\n\
    \                    Host-to-PSN AHIP-E Leader Format\n                      \
    \         Figure 5.1\nBits 1-4: Unused, must be set to zero.\nBits 5-8: Format\
    \ Flag\n     This field is set to decimal 15 (1111 in binary).\nBits 9-11: Type-of-Service\n\
    \     Bit 9: Delay Bit:\n               0 -- normal delay\n               1 --\
    \ low delay\n     Bit 10: Throughput Bit:\n               0 -- normal throughput\n\
    \               1 -- high throughput\n     Bit 11: Reliability Bit:\n        \
    \       0 -- normal reliability\n               1 -- high reliability\nBit 12:\
    \ Unused, must be set to zero.\nBits 13-16: AHIP-E Version number\n     Ignored\
    \ by the PSN except in the case of a NOP -- see\n     chapter 6.\nBits 17-20:\
    \ Unused, must be set to zero.\nBit 21: Trace Bit:\n     If equal to one, this\
    \ message is designated for tracing as\n     it proceeds through the network.\
    \  See 1822(5.5).\nBits 22-24: Leader Flags:\n     Bit 22: A flag available for\
    \ use by the destination host.\n          See AHIP(3.3) for a description of its\
    \ use by the\n          PSN's TTY Fake Host.\n     Bits 23-24: Reserved for future\
    \ use, must be zero.\nBits 25-32: Message Type:\n     Type 0: Regular Message\
    \ - All host-to-host communication\n          occurs via regular messages, which\
    \ have several sub-\n          types, found in bits 77-80.  These sub-types are:\n\
    \          0: Standard - The PSN uses its full message and error\n           \
    \  control facilities, and host blocking may occur.\n          3: Uncontrolled\
    \ Packet - The PSN will perform no\n             message-control functions for\
    \ this type of\n             message, and network flow and congestion control\n\
    \             may cause loss of the packet.  Also see\n             1822(3.6).\
    \ 1-2,4-15: Unassigned.\n     Type 1: Error Without Message ID - See 1822(3.3).\n\
    \     Type 2: Host Going Down - see 1822(3.3).\n     Type 3: Name Declaration\
    \ Message (NDM) - This message is         |\n             used by the host to\
    \ declare which of its logical names   |\n             is or is not effective\
    \ (see section 3.2.1), or to make   |\n             all of its names non-effective.\
    \  The first 16 bits of    |\n             the data portion of the NDM message,\
    \ following the       |\n             leader and any leader padding, contains\
    \ the number of    |\n             logical names contained in the message.  This\
    \ is         |\n             followed by the logical name entries, each 32 bits\
    \       |\n             long, of which the first 16 bits is a logical name and\
    \   |\n             the second 16 bits contains either of the integers       |\n\
    \             zero or one.  Zero indicates that the name should not    |\n   \
    \          be effective, and one indicates that the name should be  |\n      \
    \       effective.  Note that only the names explicitly in the   |\n         \
    \    NDM will remain enabled after the NDM is processed       |\n            \
    \ (assuming that they are authorized).  The PSN will       |\n             reply\
    \ with a NDM Reply message (see section 5.2)         |\n             indicating\
    \ which of the names are now effective and      |\n             which are not.\
    \  Pictorially, a NDM message has the       |\n             following format including\
    \ the leader, which is printed  |\n             in hexadecimal, and without any\
    \ leader padding):         |\n                 1             16 17           \
    \ 32 33            48\n                +----------------+----------------+----------------+\n\
    \                |                |                |                |\n      \
    \          |      0F00      |      0003      |      0000      |\n            \
    \    |                |                |                |\n                +----------------+----------------+----------------+\n\
    \                 49            64 65            80 81            96\n       \
    \         +----------------+----------------+----------------+\n             \
    \   |                |                |                |\n                |  \
    \    0000      |      0000      |      0000      |\n                |        \
    \        |                |                |\n                +----------------+----------------+----------------+\n\
    \                 97           112 113          128 129          144\n       \
    \         +----------------+----------------+----------------+\n             \
    \   |                |                |                |\n                |  #\
    \ of entries  |     name #1    |     0 or 1     |\n                |         \
    \       |                |                |\n                +----------------+----------------+----------------+\n\
    \                145           160 161          176\n                +----------------+----------------+\n\
    \                |                |                |\n                |   name\
    \ #2      |     0 or 1     |       etc.\n                |                |  \
    \              |\n                +----------------+----------------+\n      \
    \                     NDM Message Format\n                               Figure\
    \ 5.2\n               An NDM with zero entries will cause all current\n      \
    \         effective names for the host to become non-effective.\n          Type\
    \ 4: NOP -- see 1822(3.3).  Bits 13-16 of the NOP leader   |\n               are\
    \ used to determine the host's AHIP-E version -- see   |\n               chapter\
    \ 6.                                               |\n          Type 8: Error\
    \ with Message ID - see 1822(3.3).\n          Type 11: Name Server Request - This\
    \ allows the host to use    |\n               the PSN's logical addressing tables\
    \ as a name server.    |\n               The destination name in the AHIP-E leader\
    \ is             |\n               translated, and the PSN replies with a Name\
    \ Server       |\n               Reply message, which lists the physical host\
    \ addresses   |\n               to which the destination name maps.  The type-of-\
    \        |\n               service bits (bits 9-11) should be set correctly by\
    \      |\n               the host, as the Name Server Reply message contains \
    \     |\n               information about characteristics of the subnetwork  \
    \    |\n               route(s) to that destination, which will depend on the\
    \   |\n               type-of-service.                                       \
    \  |\n          Type 12: Port List Request - This allows the physical host   \
    \ |\n               to request the list of names that map to the host port   |\n\
    \               over which this request was received by the PSN.  The    |\n \
    \              PSN replies with a Port List Reply message, which        |\n  \
    \             lists the names that map to the port.                    |\n   \
    \       Types 5-7,9-10,13-255: Unassigned.\n     Bits 33-40: Handling Type:\n\
    \          The top two bits (33 and 34) specify the precedence of the\n      \
    \    connection.  There are 4 precedence levels, level 3 being\n          the\
    \ highest and level 0 the lowest.  Bits 35-40 are used to\n          specify up\
    \ to 64 separate connections at a particular\n          precedence level and type-of-service.\n\
    \     Bits 41-64: Destination Host:\n          This field contains the name or\
    \ address of the destination\n          host, as described in figures 3.3 and\
    \ 3.2 respectively.  If\n          it contains a name, the name will be checked\
    \ for\n          effectiveness, with an error message returned to the source\n\
    \          host if the name is not effective.\n     Bits 65-76: Message ID:\n\
    \          This is a host-specified identification used in all type 0\n      \
    \    and type 8 messages, and is also used in type 2 messages.\n          When\
    \ used in type 0 messages, bits 65-72 are also known as\n          the Link Field,\
    \ and should contain values specified in\n          Assigned Numbers [3] appropriate\
    \ for the host-to-host\n          protocol being used.\n     Bits 77-80: Sub-type:\n\
    \          This field is used as a modifier by message types 0, 2, 4,\n      \
    \    and 8.\n     Bits 81-96: Unused\n5.2  PSN-to-Host AHIP-E Leader Format\n\
    \ 1      4 5      8       12    16 17    20 21 22 24 25            32\n+--------+--------+-+-+-+--------+--------+-+------+----------------+\n\
    |        | FORMAT |D|T|R|        |        |T|LEADER|                |\n| UNUSED\
    \ |  FLAG  |E|H|E| UNUSED | UNUSED |R|FLAGS |  MESSAGE TYPE  |\n|        |  (15)\
    \  |L|R|L|        |        |C|      |                |\n+--------+--------+-+-+-+--------+--------+-+------+----------------+\n\
    \ 33                  40 41                                          64\n+----------------------+----------------------------------------------+\n\
    |                      |                                              |\n|   \
    \ HANDLING TYPE     |                SOURCE HOST                   |\n|      \
    \                |                                              |\n+----------------------+----------------------------------------------+\n\
    \ 65                     76 77    80 81                              96\n+-------------------------+--------+----------------------------------+\n\
    |                         |        |                                  |\n|   \
    \    MESSAGE ID        |SUB-TYPE|        MESSAGE LENGTH            |\n|      \
    \                   |        |                                  |\n+-------------------------+--------+----------------------------------+\n\
    \                    PSN-to-Host AHIP-E Leader Format\n                      \
    \         Figure 5.3\nBits 1-4: Unused and set to zero.\nBits 5-8: Format Flag\n\
    \     This field is set to decimal 15 (1111 in binary).\nBits 9-11: Type-of-Service\n\
    \     Specified by the source host (see section 5.1).\nBits 12-20: Unused, must\
    \ be set to zero.\nBit 21: Trace Bit:\n     If equal to one, the source host has\
    \ designated this\n     message for tracing as it proceeds through the network.\n\
    \     See 1822(5.5).\nBits 22-24: Leader Flags:\n     Bit 22: Available as a destination\
    \ host flag.\n     Bits 23-24: Reserved for future use, set to zero.\nBits 25-32:\
    \ Message Type:\n     Type 0: Regular Message - All host-to-host communication\n\
    \          occurs via regular messages, which have several sub-\n          types.\
    \  The sub-type field (bits 77-80) is the same as\n          that sent in the\
    \ host-to-PSN leader (see section 5.1).\n     Type 1: Error in Leader - See 1822(3.4).\n\
    \     Type 2: PSN Going Down - See 1822(3.4).\n     Type 3: NDM Reply - This is\
    \ a reply to the NDM host-to-PSN    |\n          message (see section 5.1).  It\
    \ has the same number of    |\n          entries as the NDM message to which it\
    \ replies, and      |\n          each listed name is accompanied by a zero or\
    \ a one       |\n          (see figure 5.2).  A zero signifies that the name is\
    \     |\n          not effective, and a one means that the name is now      |\n\
    \          effective.                                               |\n     Type\
    \ 4: NOP - The host should discard this message.  It is\n          used during\
    \ initialization of the PSN/host\n          communication.  The Destination Host\
    \ field will\n          contain the physical address of the host port over\n \
    \         which the NOP is being sent.  All other fields are\n          unused.\n\
    \     Type 5: Ready for Next Message (RFNM) - See 1822(3.4).\n     Type 6: Dead\
    \ Host Status - See 1822(3.4).\n     Type 7: Destination Host or PSN Dead (or\
    \ unknown) - See\n          1822(3.4).\n     Type 8: Error in Data - See 1822(3.4).\n\
    \     Type 9: Incomplete Transmission - See 1822(3.4).  In\n          addition\
    \ to its already defined sub-types, this\n          message has two new sub-types:\n\
    \          6: Logically Addressed Host Went Down - A logically      |\n      \
    \         addressed message was lost in the network because   |\n            \
    \   the destination host to which it was being          |\n               delivered\
    \ went down.  The message should be         |\n               resubmitted by the\
    \ source host, since there may     |\n               be another effective host\
    \ port to which the         |\n               message could be delivered (see\
    \ section 2.2.3).     |\n          7: Network Not Accepting Messages at this Precedence\
    \     |\n               Level - bits 33 and 34 encode the minimum           |\n\
    \               precedence level currently being accepted by the    |\n      \
    \         network.  See section 4.3.\n     Type 10: Interface Reset - See 1822(3.4).\n\
    \     Type 11: Name Server Reply - This reply to the Name Server    |\n      \
    \    Request host-to-PSN message contains, following the      |\n          leader\
    \ and any leader padding, a word with the           |\n          selection policy\
    \ and the number of physical addresses    |\n          to which the destination\
    \ name maps, followed by five     |\n          octets per physical address: the\
    \ first three octets      |\n          contain an AHIP-E address, and the last\
    \ two contain a    |\n          bit signifying whether or not that particular\
    \            |\n          translation is effective and the routing distance  \
    \      |\n          (expected network transmission delay, in 6.4 ms units)   |\n\
    \          to the address's PSN for the type-of-service specified   |\n      \
    \    in the Name Server Request being replied to.  This       |\n          type-of-service\
    \ will be included in the Name Server      |\n          Reply leader.  In figure\
    \ 5.4, which includes the         |\n          leader without any leader padding\
    \ and has type-of        |\n           -service set  to 000, EFF is 1 for effective\
    \ and 0      |\n          for non-effective, the destination name is in the format\
    \ |\n          of figure 3.3, and POL is a two-bit number indicating    |\n  \
    \        the selection policy for the name (see section 3.2.2):   |\n        \
    \  0: First reachable.\n          1: Closest physical address.               \
    \              |\n          2: Load leveling.                                \
    \        |\n          3: Unused.\n                 1             16 17       \
    \     32 33     40\n                +----------------+----------------+--------+\n\
    \                |                |                |        |\n              \
    \  |      0F00      |      000B      |   00   |\n                |           \
    \     |                |        |\n                +----------------+----------------+--------+\n\
    \                 41                    64 65            80\n                +------------------------+-----------------+\n\
    \                |                        |                 |\n              \
    \  |  Destination name      |      0000       |\n                |           \
    \             |                 |\n                +------------------------+-----------------+\n\
    \                     81            96 97            112\n                   \
    \ +----------------+-+--------------+\n                    |                |P|\
    \              |\n                    |      0000      |O|  # of addrs  |\n  \
    \                  |                |L|              |\n                    +----------------+-+--------------+\n\
    \                 113                    136 137          152\n              \
    \  +--------------------------+-+-------------+\n                |           \
    \               |E|             |\n                |    AHIP-E addr #1       \
    \ |F| routing dist|\n                |                          |F|          \
    \   |\n                +--------------------------+-+-------------+\n        \
    \         153                    176 177          192\n                +--------------------------+-+-------------+\n\
    \                |                          |E|             |\n              \
    \  |    AHIP-E addr #2        |F| routing dist|   etc.\n                |    \
    \                      |F|             |\n                +--------------------------+-+-------------+\n\
    \                        Name Server Reply Format\n                          \
    \     Figure 5.4\n          Type 12: Port List Reply - This is the reply to the\
    \ Port      |\n               List Request host-to-PSN message.  It contains the\
    \       |\n               number of names that map to this physical host port,\
    \     |\n               followed by two words per name: the first word       \
    \    |\n               contains a logical name that maps to this port, and   \
    \   |\n               the second contains either a zero or a one,            \
    \  |\n               signifying whether or not that particular translation   \
    \ |\n               is effective.  The format is identical to the type 3     |\n\
    \               NDM Reply message(see figure 5.2).                       |\n \
    \         Type 13: STOP -- Stop Sending on this Connection.  See        |\n  \
    \             section 4.2.                                             |\n   \
    \       Type 14: SLOW -- maintain window size of 1 on this            |\n    \
    \           connection.  See section 4.2.                            |\n     \
    \     Type 15: Name or Address Error - This message is sent in      |\n      \
    \         response to a type 0 message from a host that            |\n       \
    \        contained an erroneous Destination Host field.  Its      |\n        \
    \       sub-types are:                                           |\n         \
    \      2: The Destination Host name is not authorized.          |\n          \
    \     3: The physical host to which this singly-homed          |\n           \
    \         Destination Host name translated is authorized      |\n            \
    \        and up, but not effective.  If the host was         |\n             \
    \       actually down, a type 7 message would be            |\n              \
    \      returned, not a type 15.                            |\n               5:\
    \ The multi-homed Destination Host name is              |\n                  authorized\
    \  but has no available effective            |\n                  translations.\
    \                                         |\n               6: A logically-addressed\
    \ uncontrolled packet was sent    |\n                    to a dead or non-effective\
    \ host port.  However,     |\n                    if it is resubmitted, there\
    \ may be another          |\n                    effective host port to which\
    \ the PSN may be able    |\n                    to attempt to send the packet.\
    \                      |\n               7: Logical addressing is not in use.\
    \                     |\n                    The PSN has no table of mappings\
    \ from logical       |\n                    addresses to physical host ports.\
    \                   |\n               0, 1, 4, 8-15: Unassigned              \
    \                  |\n          Type 16: GO -- maintain window size of 8 on this\
    \              |\n                connection. See section 4.2.               \
    \             |\n          Type 17: Network Precedence Level Cutoff Change --\
    \ bits 33    |\n               and 34 encode the minimum precedence level currently\
    \     |\n               being accepted by the network.  See section 4.3.\n   \
    \       Types 18-255: Unassigned.\nBits 33-40: Handling Type:\n     This has the\
    \ value assigned by the source host (see\n     1822(3.1)).  This field is only\
    \ used in message types 0, 5-\n     9, and 13-16.\nBits 41-64: Source Host:\n\
    \     See 1882(3.4).  For type 0 messages this contains the\n     physical address\
    \ of the source host, in the format detailed\n     in figure 3.2.  For type 4\
    \ messages, this contains the\n     physical address of the local host.  For messages\
    \ of type\n     5-9, 11 and 13-16 which are responses to messages from the\n \
    \    local host, this contains the destination name as specified\n     in the\
    \ message from the local host.\nBits 65-76: Message ID:\n     For message types\
    \ 0, 5, 7-9, and 15, this is the value\n     assigned by the source host to identify\
    \ the message (see\n     section 5.1).  This field is also used by message types\
    \ 2\n     and 6.\nBits 77-80: Sub-type:\n     This field is used as a modifier\
    \ by message types 0-2, 5-7,\n     9, and 15.\nBits 81-96: Message Length:\n \
    \    This field is contained in type 0 messages only, and is the\n     actual\
    \ length in bits of the message (exclusive of leader,\n     leader padding, and\
    \ hardware padding) as computed by the\n     PSN.\n6  AHIP-E VERSIONS\nThis specification\
    \ provides three versions of AHIP-E and allows a host\nto specify its version\
    \ in bits 13-16 of the leader of the NOP.  The PSN\nwill set the version of a\
    \ host based on the value contained in the most\nrecent NOP that it has received\
    \ from the host.  Thus, a host can change\nthe PSN's idea of its version by issuing\
    \ a NOP containing a different\nversion value.  Note that the version field in\
    \ all other host-to-PSN\nmessages will be ignored by the PSN.\nVersion 0:\nA host\
    \ that doesn't change its current AHIP implementation will\npresumably have the\
    \ version bits in the AHIP leader set to zero.\nVersion 0, thus, is nothing but\
    \ current AHIP.\nA version 0 host will not receive any of the new AHIP-E messages\
    \ from\nthe PSN, nor will the PSN expect any of the new host-to-PSN message\n\
    types from the host.  The type-of-service bits will always be set to\nzero in\
    \ the PSN-to-host leader.\nVersion 1:\nA version 1 host will be able to use logical\
    \ names to address other\nhosts, will be able to use the 10-bit PSN field, will\
    \ be able to specify\ndesired type-of-service to the PSN, but will not receive\
    \ any of the new\nAHIP-E messages from the PSN.  The PSN will not expect any of\
    \ the new\nhost-to-PSN message types from the host either.\nTo implement version\
    \ 1, a host need only make the following changes to\nits AHIP implementation:\n\
    \     1. Set the version number field to 1 when sending type 4\n        messages\
    \ (NOPs).\n     2. When sending type 0 messages, copy IP address bits 8-31\n \
    \       into bits 41-64 of the AHIP leader.\n     3. When sending type 0 messages,\
    \ copy IP header bits 11-13\n        to AHIP leader bits 9-11.\nVersion 2:\nA\
    \ version 2 host is one that is fully compliant with the AHIP-E protocol\nas described\
    \ in this document.  In addition to being able to take\nadvantage of the features\
    \ described under version 1 above, it should be\nable to send and receive all\
    \ the new AHIP-E messages described in this\ndocument.\n7  REFERENCES\n   [1]\
    \  \"Specifications for the Interconnection of a Host and an\n        PSN\", BBN\
    \ Report 1822, as found in \"DDN Protocol Handbook\",\n        December 1985,\
    \ vol. 3, section 3.10.\n   [2]  E. C. Rosen et. al., \"ARPANET Routing Algorithm\n\
    \        Improvements\", Internet Experimenter's Note 183 (also\n        published\
    \ as BBN Report 4473, Vol. 1), August 1980, pp. 55-\n        107.\n   [3]  J.\
    \ Reynolds and J. Postel, \"Assigned Numbers\", Request For\n        Comments\
    \ 990, November 1986.\n   [4]  J. Postel, ed., \"Internet Protocol -- DARPA Internet\n\
    \        Program Protocol Specification\", Request for Comments 791,\n       \
    \ September 1981.\n   [5]  J. Postel, \"Address Mappings\", Request for Comments\
    \ 796,\n        September 1981, as found in \"DDN Protocol Handbook\", vol.\n\
    \        3, section 3.4.\n   [6]  \"Defense Data Network X.25 Host Interface Specification\"\
    ,\n        pp. 497-498, DDN protocol handbook, vol. 1, December 1985.\n"
