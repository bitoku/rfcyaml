- title: __initial_text__
  contents:
  - '                   Diameter Mobile IPv4 Application

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a Diameter application that allows a Diameter\n\
    \   server to authenticate, authorize and collect accounting information\n   for\
    \ Mobile IPv4 services rendered to a mobile node.  Combined with\n   the Inter-Realm\
    \ capability of the base protocol, this application\n   allows mobile nodes to\
    \ receive service from foreign service\n   providers.  Diameter Accounting messages\
    \ will be used by the foreign\n   and home agents to transfer usage information\
    \ to the Diameter\n   servers.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 3\n       1.1.  Entities and Relationships. . . . . . . . . . .\
    \ . . . . . 4\n       1.2.  Mobility Security Associations. . . . . . . . . .\
    \ . . . . 4\n       1.3.  Handoff . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 6\n       1.4.  Structure of the Document . . . . . . . . . . . . . .\
    \ . . 7\n   2.  Acronyms. . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 7\n   3.  Scenarios and Message Flows . . . . . . . . . . . . . . . . . .\
    \ 7\n       3.1.  Inter-Realm Mobile IPv4 . . . . . . . . . . . . . . . . . 8\n\
    \       3.2.  Allocation of Home Agent in Foreign Network . . . . . . .13\n  \
    \     3.3.  Co-located Mobile Node. . . . . . . . . . . . . . . . . .16\n    \
    \   3.4.  Key Distribution. . . . . . . . . . . . . . . . . . . . .18\n   4. \
    \ Diameter Protocol Considerations. . . . . . . . . . . . . . . .20\n       4.1.\
    \  Diameter Session Management . . . . . . . . . . . . . . .20\n   5.  Command-Code\
    \ Values . . . . . . . . . . . . . . . . . . . . . .23\n       5.1.  AA-Mobile-Node-Request.\
    \ . . . . . . . . . . . . . . . . .23\n       5.2.  AA-Mobile-Node-Answer . .\
    \ . . . . . . . . . . . . . . . .25\n       5.3.  Home-Agent-MIP-Request. . .\
    \ . . . . . . . . . . . . . . .26\n       5.4.  Home-Agent-MIP-Answer . . . .\
    \ . . . . . . . . . . . . . .27\n   6.  Result-Code AVP Values. . . . . . . .\
    \ . . . . . . . . . . . . .27\n       6.1.  Transient Failures. . . . . . . .\
    \ . . . . . . . . . . . .28\n       6.2.  Permanent Failures. . . . . . . . .\
    \ . . . . . . . . . . .28\n   7.  Mandatory AVPs. . . . . . . . . . . . . . .\
    \ . . . . . . . . . .28\n       7.1.  MIP-Reg-Request AVP . . . . . . . . . .\
    \ . . . . . . . . .29\n       7.2.  MIP-Reg-Reply AVP . . . . . . . . . . . .\
    \ . . . . . . . .29\n       7.3.  MIP-Mobile-Node-Address AVP . . . . . . . .\
    \ . . . . . . .30\n       7.4.  MIP-Home-Agent-Address AVP. . . . . . . . . .\
    \ . . . . . .30\n       7.5.  MIP-Feature-Vector AVP. . . . . . . . . . . . .\
    \ . . . . .30\n       7.6.  MIP-MN-AAA-Auth AVP . . . . . . . . . . . . . . .\
    \ . . . .32\n       7.7.  MIP-FA-Challenge AVP. . . . . . . . . . . . . . . .\
    \ . . .33\n       7.8.  MIP-Filter-Rule AVP . . . . . . . . . . . . . . . . .\
    \ . .33\n       7.9.  MIP-Candidate-Home-Agent-Host . . . . . . . . . . . . .\
    \ .33\n       7.10. MIP-Originating-Foreign-AAA AVP . . . . . . . . . . . . .33\n\
    \       7.11. MIP-Home-Agent-Host AVP . . . . . . . . . . . . . . . . .33\n  \
    \ 8.  Key Distribution . .  . . . . . . . . . . . . . . . . . . . . .34\n    \
    \   8.1. Authorization Lifetime vs. MIP Key Lifetime. . . . . . . .34\n      \
    \ 8.2. Nonce vs. Session Key. . . . . . . . . . . . . . . . . . .35\n       8.3.\
    \ Distributing the Mobile-Home Session Key . . . . . . . . .35\n       8.4. Distributing\
    \ the Mobile-Foreign Session Key. . . . . . . .36\n       8.5. Distributing the\
    \ Foreign-Home Session Key. . . . . . . . .37\n   9.  Key Distribution AVPs .\
    \ . . . . . . . . . . . . . . . . . . . .38\n       9.1.  MIP-FA-to-MN-MSA AVP.\
    \ . . . . . . . . . . . . . . . . . .39\n       9.2.  MIP-FA-to-HA-MSA AVP. .\
    \ . . . . . . . . . . . . . . . . .39\n       9.3.  MIP-HA-to-FA-MSA AVP. . .\
    \ . . . . . . . . . . . . . . . .40\n       9.4.  MIP-HA-to-MN-MSA AVP. . . .\
    \ . . . . . . . . . . . . . . .40\n       9.5.  MIP-MN-to-FA-MSA AVP. . . . .\
    \ . . . . . . . . . . . . . .40\n       9.6.  MIP-MN-to-HA-MSA AVP. . . . . .\
    \ . . . . . . . . . . . . .41\n       9.7.  MIP-Session-Key AVP . . . . . . .\
    \ . . . . . . . . . . . .41\n       9.8.  MIP-Algorithm-Type AVP. . . . . . .\
    \ . . . . . . . . . . .41\n       9.9.  MIP-Replay-Mode AVP . . . . . . . . .\
    \ . . . . . . . . . .42\n       9.10. MIP-FA-to-MN-SPI AVP. . . . . . . . . .\
    \ . . . . . . . . .42\n       9.11. MIP-FA-to-HA-SPI AVP. . . . . . . . . . .\
    \ . . . . . . . .42\n       9.12. MIP-Nonce AVP. . . . . . . . . . . . . . . .\
    \ . . .. . . .42\n       9.13. MIP-MSA-Lifetime AVP . . . . . . . . . . . . .\
    \ . .. . . .42\n       9.14. MIP-HA-to-FA-SPI AVP . . . . . . . . . . . . . .\
    \ .. . . .43\n   10. Accounting AVPs . . . . . . . . . . . . . . . . . . . . .\
    \ . . .43\n       10.1. Accounting-Input-Octets AVP . . . . . . . . . . . . .\
    \ . .43\n       10.2. Accounting-Output-Octets AVP. . . . . . . . . . . . . .\
    \ .43\n       10.3. Acct-Session-Time AVP . . . . . . . . . . . . . . . . . .43\n\
    \       10.4. Accounting-Input-Packets AVP. . . . . . . . . . . . . . .43\n  \
    \     10.5. Accounting-Output-Packets AVP . . . . . . . . . . . . . .43\n    \
    \   10.6. Event-Timestamp AVP . . . . . . . . . . . . . . . . . . .44\n   11.\
    \ AVP Occurrence Tables . . . . . . . . . . . . . . . . . . . . .44\n       11.1.\
    \ Mobile IP Command AVP Table . . . . . . . . . . . . . . .44\n       11.2. Accounting\
    \ AVP Table. . . . . . . . . . . . . . . . . . .46\n   12. IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . . .46\n       12.1. Command Codes .\
    \ . . . . . . . . . . . . . . . . . . . . .46\n       12.2. AVP Codes . . . .\
    \ . . . . . . . . . . . . . . . . . . . .46\n       12.3. Result-Code AVP Values.\
    \ . . . . . . . . . . . . . . . . .46\n       12.4. MIP-Feature-Vector AVP Values\
    \ . . . . . . . . . . . . . .47\n       12.5. MIP-Algorithm-Type AVP Values .\
    \ . . . . . . . . . . . . .47\n       12.6. MIP-Replay-Mode AVP Values. . . .\
    \ . . . . . . . . . . . .47\n       12.7. Application Identifier  . . . . . .\
    \ . . . . . . . . . . .47\n   13. Security Considerations . . . . . . . . . .\
    \ . . . . . . . . . .47\n   14. References. . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .49\n       14.1. Normative References. . . . . . . . . . .\
    \ . . . . . . . .49\n       14.2. Informative References. . . . . . . . . . .\
    \ . . . . . . .50\n   15. Acknowledgements. . . . . . . . . . . . . . . . . .\
    \ . . . . . .51\n   Authors' Addresses. . . . . . . . . . . . . . . . . . . .\
    \ . . . . .51\n   Full Copyright Statement. . . . . . . . . . . . . . . . . .\
    \ . . . .53\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Mobile IPv4 [MOBILEIP] allows a Mobile Node (MN) to change\
    \ its point\n   of attachment to the Internet while maintaining its fixed home\n\
    \   address.  Packets directed to the home address are intercepted by a\n   Home\
    \ Agent (HA), encapsulated in a tunnel, and forwarded to the MN at\n   its current\
    \ point of attachment.  Optionally, a Foreign Agent (FA)\n   may be deployed at\
    \ this point of attachment, which can serve as the\n   tunnel endpoint and may\
    \ also provide access control for the visited\n   network link.  In this role,\
    \ the FA has to authenticate each MN that\n   may attach to it, whether the MN\
    \ is from the same or a different\n   administrative domain.  The FA has to verify\
    \ that the MN is\n   authorized to attach and use resources in the foreign domain.\
    \  Also,\n   the FA must provide information to the home administrative domain\n\
    \   about the resources used by the MN while it is attached in the\n   foreign\
    \ domain.\n   The Authentication, Authorization, and Accounting (AAA) requirements\n\
    \   for Mobile IPv4 are described in detail in other documents [MIPREQ,\n   CDMA2000].\
    \  This document specifies a Diameter application to meet\n   these requirements.\
    \  This application is not applicable to the Mobile\n   IPv6 protocol.\n   Message\
    \ formats (e.g., as in section 5.1) are specified as lists of\n   Attribute-Value\
    \ Pairs (AVPs) using the syntax as described in RFC\n   2234 [ABNF].  This includes\
    \ the use of the \"*\" symbol to denote zero\n   or more occurrences of an AVP.\n"
- title: Conventions Used in This Document
  contents:
  - "Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [KEYWORDS].\n"
- title: 1.1.  Entities and Relationships
  contents:
  - "1.1.  Entities and Relationships\n   The Diameter Mobile IPv4 Application supports\
    \ the HA and FA in\n   providing Mobile IPv4 service to MNs.  Both the HA and\
    \ FA act as\n   Diameter clients.  The MNs interact with the HA and FA by using\
    \ only\n   Mobile IPv4 and therefore do not implement Diameter.\n   The FA, when\
    \ present, is always assumed to exist in the visited\n   administrative domain.\
    \  The HA may be statically or dynamically\n   allocated to the MN in the home\
    \ administrative domain or may be\n   dynamically allocated to the MN in a visited\
    \ administrative domain.\n   The home domain contains a home AAA server (AAAH),\
    \ and the visited\n   domain contains a foreign AAA server (AAAF).  When the MN\
    \ is \"at\n   home\" (present on its home network), the AAAH and AAAF may be the\n\
    \   same.\n"
- title: 1.2.  Mobility Security Associations
  contents:
  - "1.2.  Mobility Security Associations\n   The base Mobile IPv4 protocol [MOBILEIP]\
    \ assumes the existence of a\n   Mobility Security Association (MSA) between the\
    \ MN and HA (MN-HA\n   MSA).  The MN-HA MSA is used to authenticate, by using\
    \ a keyed hash-\n   style algorithm, the Mobile IP Registration Request that is\
    \ sent from\n   the MN to the HA.  It is important to authenticate Registration\n\
    \   Requests, as they inform the HA about the MN's current Care-of-\n   Address,\
    \ which is the destination for tunneled packets from the home\n   network.  Without\
    \ authentication, malicious attackers would be able\n   to redirect packets to\
    \ anywhere on the Internet.  The MSA comprises\n   an agreement on a Security\
    \ Parameters Index (SPI, a 32-bit number)\n   that will be used to refer to the\
    \ MSA, an algorithm that will be used\n   to compute keyed hashes over messages,\
    \ and a shared secret key.  To\n   enable authentication of a message, the sender\
    \ appends a Mobile IP\n   Authentication Extension that contains the SPI and the\
    \ result of\n   running the keyed hash over the entire previous contents of the\n\
    \   message.  The recipient checks the Authentication Extension by\n   looking\
    \ up the MSA based on the SPI, re-computing the keyed hash, and\n   verifying\
    \ that the result is equal to the contents of the received\n   Authentication\
    \ Extension.\n   The base Mobile IPv4 protocol also supports an optional MSA between\n\
    \   the MN and FA (MN-FA MSA).  If available, the MN-FA MSA is used by\n   the\
    \ FA to authenticate each Registration Request passing through it\n   on the way\
    \ to the HA.  Although not critical to the operation of the\n   base protocol,\
    \ the MN-FA MSA is useful when the FA has to know the\n   authenticity of a Registration\
    \ Request; e.g., when it will be\n   generating accounting records for a session.\
    \  The MN-FA MSA may also\n   be useful in future work related to handoff optimization.\n\
    \   Similarly, Mobile IPv4 supports an optional MSA between the FA and HA\n  \
    \ (FA-HA MSA).  The FA-HA MSA is useful for authenticating messages\n   between\
    \ the FA and HA, such as when the HA seeks to inform the FA\n   that it has revoked\
    \ a Mobile IP registration.\n   Note that configuration of MSAs that involve FAs\
    \ is substantially\n   more difficult than configuring the one between the MN\
    \ and HA,\n   because the MN and HA are often in the same administrative domain\
    \ and\n   the MN will retain the same HA for long periods of time.  In\n   contrast,\
    \ the MN is likely to encounter many FAs over time and may\n   often find itself\
    \ in foreign administrative domains.\n   The base Mobile IPv4 protocol assumes\
    \ that MNs are identified by\n   their static home IP addresses and that all MSAs\
    \ are statically\n   preconfigured.  The Diameter Mobile IPv4 application, together\
    \ with\n   extensions [MIPNAI, MIPCHAL, MIPKEYS, AAANAI] to the base Mobile IPv4\n\
    \   protocol, allows an MN to be dynamically assigned a home address\n   and/or\
    \ home agent when it attaches to the Internet.  This set of\n   specifications\
    \ also supports the dynamic configuration of the MN-HA,\n   MN-FA, and FA-HA MSAs.\
    \  The dynamic configuration of these\n   relationships is important to support\
    \ deployments in which the MN can\n   attach to a visited network without having\
    \ a pre-established\n   relationship with it.\n   Initially, the MN is assumed\
    \ to have a long-term AAA security\n   association only with the AAAH.  This security\
    \ association is indexed\n   by the MN's NAI, and, like the MSAs, comprises an\
    \ agreement on a SPI,\n   an algorithm, and a shared secret key.  The MN enters\
    \ a visited\n   network and requests service from some FA by sending a Mobile\
    \ IPv4\n   Registration Request.  The FA contacts an AAAF in its own\n   administrative\
    \ domain to authenticate and authorize the request for\n   service.  The AAAF\
    \ and AAAH may establish a Diameter session directly\n   with each other, such\
    \ as via a Diameter Redirect, or may pass\n   messages via a network of Diameter\
    \ proxies.  Where the AAAF and AAAH\n   route messages to each other through proxies,\
    \ rather than a direct\n   connection, transitive trust is assumed.  MNs can include\
    \ their\n   Network Access Identifier (NAI) in a Mobile IPv4 Registration Request\n\
    \   [MIPNAI], which serves in place of the home address to identify the\n   MN.\
    \  The NAI is used to route Diameter messages toward the correct\n   AAAH.  This\
    \ use of the NAI is consistent with the roaming model\n   defined by the ROAMOPS\
    \ Working Group [EVALROAM, RFC2607].\n   The AAAH can authenticate the Registration\
    \ Request with the use of\n   the MN-AAA security association [MIPCHAL].  If authentication\
    \ is\n   successful, the AAAH then generates and distributes MSAs to the MN,\n\
    \   HA, and FA.  For each of the MSA pairs that involve the MN (i.e.,\n   MN-HA/HA-MN\
    \ MSAs and MN-FA/FA-MN MSAs), the AAAH generates a nonce\n   and then hashes it\
    \ together with the MN-AAA shared key to derive the\n   session key for the MSA\
    \ pair.  The nonces are sent to the HA that\n   includes them in the Registration\
    \ Reply, which enables the MN to\n   derive the same keys [MIPKEYS].  At the same\
    \ time, the AAAH must\n   distribute the MN-HA/HA-MN MSAs and the FA-HA/HA-FA\
    \ MSAs to the HA\n   and must distribute the MN-FA/FA-MN MSAs and the FA-HA/HA-FA\
    \ MSAs to\n   the FA.  These are sent in Diameter AVPs and must be independently\n\
    \   secured by using IPSec or TLS between the AAAH and the FA and between\n  \
    \ the AAAH and the HA.  See section 8 for more information on key\n   derivation\
    \ and distribution.\n   Note that MSAs in Mobile IP are unidirectional in that,\
    \ for example,\n   the MN-HA MSA (used to protect traffic from the MN to the HA)\
    \ and the\n   HA-MN MSA (used to protect traffic from the HA to the MN) can use\n\
    \   different SPIs, algorithms, and shared secrets.  This is true of the\n   base\
    \ Mobile IP protocol despite common existing practice during\n   manual configuration\
    \ of MSAs in which all parameters are set to the\n   same value in both directions.\
    \  This document supports the use of\n   different SPIs in each direction; however,\
    \ it only supports the\n   distribution of a single session key for each pair\
    \ of MSAs between\n   two nodes.  The security implications of this are discussed\
    \ in\n   section 13.  This document sometimes names only one of the two\n   unidirectional\
    \ MSAs when referring to the distribution of the single\n   shared secret and\
    \ the pair of SPIs for the pair of MSAs between two\n   entities.\n"
- title: 1.3.  Handoff
  contents:
  - "1.3.  Handoff\n   In addition to supporting the derivation and transport of the\
    \ MN-HA,\n   MN-FA, and FA-HA MSAs, this application also supports MIPv4 handoff.\n\
    \   When an MN moves from one point of attachment to another, the MN can\n   continue\
    \ the same Mobile IPv4 session by using its existing HA and\n   home address.\n\
    \   The MN accomplishes this by sending a Mobile IPv4 Registration\n   Request\
    \ from its new point of attachment.  To enable a single set of\n   accounting\
    \ records to be maintained for the entire session, including\n   handoffs, it\
    \ is necessary to allow the AAAH to bind the new\n   registration to the pre-existing\
    \ session.  To enable the Mobile IPv4\n   Registration Request to be routed to\
    \ the same AAAH, the MN SHOULD\n   include the AAAH NAI [AAANAI] in such re-registrations.\
    \  Also, to\n   assist the AAAH in routing the messages to the MN's existing HA\
    \ the\n   mobile node SHOULD include the HA NAI [AAANAI] in such re-\n   registrations.\
    \  If the mobile node does not support the Mobile IPv4\n   AAA NAI extension [AAANAI],\
    \ this functionality is not available.\n"
- title: 1.4.  Structure of the Document
  contents:
  - "1.4.  Structure of the Document\n   The remainder of this document is structured\
    \ as follows.  Section 2\n   provides acronym definitions.  Section 3 provides\
    \ some examples and\n   message flows illustrating both the Mobile IPv4 and Diameter\
    \ messages\n   that occur when a mobile node attaches to the Internet.  Section\
    \ 4\n   defines the relationship of this application to the Diameter Base\n  \
    \ Protocol.  Section 5 defines the new command codes.  Section 6\n   defines the\
    \ new result codes used by this application.  Section 7\n   defines the set of\
    \ mandatory Attribute-Value-Pairs (AVPs).  Section 8\n   gives an overview of\
    \ the key distribution capability, and Section 9\n   defines the key distribution\
    \ AVPs.  Section 10 defines the accounting\n   AVPs, and section 11 contains a\
    \ listing of all AVPs and their\n   occurrence in Diameter commands.  Finally,\
    \ sections 12 and 13 give\n   IANA and security considerations, respectively.\n"
- title: 2.  Acronyms
  contents:
  - "2.  Acronyms\n   AAAH         Authentication, Authorization, and Accounting Home\n\
    \   AAAF         Authentication, Authorization, and Accounting Foreign\n   AMA\
    \          AA-Mobile-Node-Answer\n   AMR          AA-Mobile-Node-Request\n   ASR\
    \          Abort-Session-Request\n   AVP          Attribute Value Pair\n   CoA\
    \          Care-of-Address\n   FA           Foreign Agent\n   FQDN         Fully\
    \ Qualified Domain Name\n   HA           Home Agent\n   HAA          Home-Agent-MIP-Answer\n\
    \   HAR          Home-Agent-MIP-Request\n   MN           Mobile Node\n   MSA \
    \         Mobility Security Association\n   NAI          Network Access Identifier\n\
    \   RRQ          Registration Request\n   SPI          Security Parameters Index\n\
    \   STR          Session-Termination-Request\n"
- title: 3.  Scenarios and Message Flows
  contents:
  - "3.  Scenarios and Message Flows\n   This section presents four scenarios illustrating\
    \ Diameter Mobile\n   IPv4 application and describes the operation of key distribution.\n\
    \   In this document, the role of the \"attendant\" [MIPREQ] is performed\n  \
    \ by either the FA (when it is present in a visited network) or the HA\n   (for\
    \ co-located mobile nodes not registering via an FA), and these\n   terms will\
    \ be used interchangeably in the following scenarios.\n"
- title: 3.1.  Inter-Realm Mobile IPv4
  contents:
  - "3.1.  Inter-Realm Mobile IPv4\n   When a mobile node requests service by issuing\
    \ a Registration Request\n   to the foreign agent, the foreign agent creates the\
    \ AA-Mobile-Node-\n   Request (AMR) message, which includes the AVPs defined in\
    \ section 7.\n   The Home Address, Home Agent, Mobile Node NAI, and other important\n\
    \   fields are extracted from the registration messages for possible\n   inclusion\
    \ as Diameter AVPs.  The AMR message is then forwarded to the\n   local Diameter\
    \ server, known as the AAA-Foreign, or AAAF.\n                 Visited Realm \
    \                  Home Realm\n            +-----------+                     +-----------+\n\
    \            |example.net|       AMR/AMA       |example.org|\n            |  \
    \ AAAF    |<------------------->|    AAAH   |\n         +->|  server   |    server-server\
    \    |   server  |\n         |  +-----------+    communication    +-----------+\n\
    \         |           ^                           ^\n         | AMR/AMA   |  \
    \  client-server          | HAR/HAA\n         |           |    communication \
    \         |\n         v           v                           v\n   +---------+\
    \    +---------+                +---------+\n   | Foreign |    | Foreign |   \
    \             |  Home   |\n   |  Agent  |    |  Agent  |                |  Agent\
    \  |\n   +---------+    +---------+                +---------+\n             \
    \        ^\n                     | Mobile IP\n                     |\n       \
    \              v\n                  +--------+\n                  | Mobile |\n\
    \                  | Node   | mn@example.org\n                  +--------+\n \
    \                    Figure 1.  Inter-realm Mobility\n   Upon receiving the AMR,\
    \ the AAAF follows the procedures outlined in\n   [DIAMBASE] to determine whether\
    \ the AMR should be processed locally\n   or forwarded to another Diameter server\
    \ known as the AAA-Home, or\n   AAAH.  Figure 1 shows an example in which a mobile\
    \ node\n   (mn@example.org) requests service from a foreign provider\n   (example.net).\
    \  The request received by the AAAF is forwarded to\n   example.org's AAAH server.\n\
    \   Figure 2 shows the message flows involved when the foreign agent\n   invokes\
    \ the AAA infrastructure to request that a mobile node be\n   authenticated and\
    \ authorized.  Note that it is not required that the\n   foreign agent invoke\
    \ AAA services every time a Registration Request\n   is received from the mobile,\
    \ but rather only when the prior\n   authorization from the AAAH expires.  The\
    \ expiration time of the\n   authorization is communicated through the Authorization-Lifetime\
    \ AVP\n   in the AA-Mobile-Node-Answer (AMA; see section 5.2) from the AAAH.\n\
    \   Mobile Node   Foreign Agent       AAAF          AAAH      Home\n         \
    \                                                    Agent\n   -----------   -------------\
    \   ------------   ----------  -------\n                 Advertisement &\n   \
    \     <--------- Challenge\n   Reg-Req&MN-AAA  ---->\n                      AMR------------>\n\
    \                      Session-Id = foo\n                                    \
    \ AMR------------>\n                                     Session-Id = foo\n  \
    \                                                 HAR----------->\n          \
    \                                         Session-Id = bar\n                 \
    \                                    <----------HAA\n                        \
    \                           Session-Id = bar\n                               \
    \        <-----------AMA\n                                       Session-Id =\
    \ foo\n                        <------------AMA\n                        Session-Id\
    \ = foo\n        <-------Reg-Reply\n             Figure 2.  Mobile IPv4/Diameter\
    \ Message Exchange\n   The foreign agent (as shown in Figure 2) MAY provide a\
    \ challenge,\n   which would give it direct control over the replay protection\
    \ in the\n   Mobile IPv4 registration process, as described in [MIPCHAL].  The\n\
    \   mobile node includes the Challenge and MN-AAA authentication\n   extension\
    \ to enable authorization by the AAAH.  If the authentication\n   data supplied\
    \ in the MN-AAA extension is invalid, the AAAH returns\n   the response (AMA)\
    \ with the Result-Code AVP set to\n   DIAMETER_AUTHENTICATION_REJECTED.\n   The\
    \ above scenario causes the MN-FA and MN-HA keys to be exposed to\n   Diameter\
    \ agents all along the Diameter route.  If this is a concern,\n   a more secure\
    \ approach is to eliminate the AAAF and other Diameter\n   agents, as shown in\
    \ Figure 3.\n                                    Redirect\n   FA             \
    \   AAAF             Agent             AAAH\n          AMR\n     ---------------->\n\
    \                             AMR\n                       ---------------->\n\
    \                         AMA (Redirect)\n                       <----------------\n\
    \       AMA (Redirect)\n     <----------------\n                    Setup Security\
    \ Association\n     <-------------------------------------------------->\n   \
    \                          AMR\n      -------------------------------------------------->\n\
    \                        AMA (MN-FA key)\n     <---------------------------------------------------\n\
    \             Figure 3.  Use of a Redirect Server with AMR/AMA\n   In Figure 3,\
    \ the FA sets up a TLS [TLS] or IPSec [IPSEC]-based\n   security association with\
    \ the AAAH directly and runs the AMR/AMA\n   exchange over it.  This provides\
    \ end-to-end security for secret keys\n   that may have to be distributed.\n \
    \  Figure 4 shows the interaction between the AAAH and HA with the help\n   of\
    \ a redirect agent.  When the AAAH and HA are in the same network,\n   it is likely\
    \ that the AAAH knows the IP address of the HA, so the\n   redirect server would\
    \ therefore not be needed; however, it is shown\n   anyway for completeness. \
    \ The redirect server will most likely be\n   used in the case where the HA is\
    \ allocated in a foreign network (see\n   section 3.2 for more details of HA allocation\
    \ in foreign networks).\n                                  Redirect\n        \
    \       HA                  Agent               AAAH\n                       \
    \                       HAR\n                                     <--------------------\n\
    \                                          HAA (Redirect)\n                  \
    \                   -------------------->\n                          Setup Security\
    \ Association\n                <---------------------------------------->\n  \
    \                             HAR (MN-HA key)\n                <-----------------------------------------\n\
    \                                     HAA\n                ----------------------------------------->\n\
    \             Figure 4.  Use of a Redirect Server with HAR/HAA\n   As in Figure\
    \ 2, the FA of Figure 3 would still provide the challenge\n   and the mobile sends\
    \ the RRQ, etc.; however, these steps were\n   eliminated from Figure 3 to reduce\
    \ clutter.  The redirect server\n   eliminates the AAAF and any other Diameter\
    \ agents from seeing the\n   keys as they are transported to the FA and HA.  Note\
    \ that the message\n   flows in Figures 3 and 4 apply only to the initial authentication\
    \ and\n   key exchange.  Accounting messages would still be sent via Diameter\n\
    \   agents, not via the direct connection, unless network policies\n   dictate\
    \ otherwise.\n   A mobile node that supports the AAA NAI extension [AAANAI], which\
    \ has\n   been previously authenticated and authorized, MUST always include the\n\
    \   assigned home agent in the HA Identity subtype of the AAA NAI\n   extension,\
    \ and the authorizing Home AAA server in the AAAH Identity\n   subtype of the\
    \ AAA NAI extension, when re-authenticating.  Therefore,\n   in the event that\
    \ the AMR generated by the FA is for a session that\n   was previously authorized,\
    \ it MUST include the Destination-Host AVP,\n   with the identity of the AAAH\
    \ found in the AAAH-NAI, and the MIP-\n   Home-Agent-Host AVP with the identity\
    \ and realm of the assigned HA\n   found in the HA-NAI.  If, on the other hand,\
    \ the mobile node does not\n   support the AAA NAI extension, the FA may not have\
    \ the identity of\n   the AAAH and the identity and realm of the assigned HA.\
    \  This means\n   that without support of the AAA NAI extension, the FA may not\
    \ be able\n   to guarantee that the AMR will be destined to the same AAAH, which\n\
    \   previously authenticated and authorized the mobile node, as the FA\n   may\
    \ not know the identity of the AAAH.\n   If the mobile node was successfully authenticated,\
    \ the AAAH then\n   determines which Home Agent to use for the session.  First,\
    \ the AAAH\n   checks whether an HA has been requested by the MN by checking the\n\
    \   MIP-Home-Agent-Address AVP and the MIP-Home-Agent-Host AVP.  The\n   administrative\
    \ domain owning the HA may be determined from the realm\n   portion of the MIP-Home-Agent-Host\
    \ AVP, or by checking the\n   Home-Agent-In-Foreign-Network flag of the MIP-Feature-Vector\
    \ AVP and\n   the value of the MIP-Originating-Foreign-AAA AVP.  If the requested\n\
    \   HA belongs to a permitted administrative domain, the AAAH SHOULD use\n   the\
    \ given HA for the session.  Otherwise, the AAAH returns the\n   response (AMA)\
    \ with the Result-Code AVP set to either\n   DIAMETER_ERROR_NO_FOREIGN_HA_SERVICE\
    \ or\n   DIAMETER_ERROR_HA_NOT_AVAILABLE.\n   If the MN has not requested any\
    \ particular HA, then an HA MUST be\n   dynamically allocated.  In this case the\
    \ MIP-Feature-Vector will have\n   the Home-Agent-Requested flag set.  If the\
    \ Home-Address-Allocatable-\n   Only-in-Home-Realm flag is not set, and if the\
    \ Foreign-Home-Agent-\n   Available flag is set, then the AAAH SHOULD allow the\
    \ foreign realm\n   to allocate the HA (see section 3.2) but MAY allocate one\
    \ itself in\n   the home realm if dictated by local policy.  If the Home-Address-\n\
    \   Allocatable-Only-in-Home-Realm flag is set, then the AAAH MUST\n   allocate\
    \ an HA in the home realm on behalf of the MN.  Allocation of\n   the HA can be\
    \ done in a variety of ways, including by using a load-\n   balancing algorithm\
    \ to keep the load on all home agents equal.  The\n   actual algorithm used and\
    \ the method of discovering the home agents\n   are outside the scope of this\
    \ specification.\n   The AAAH then sends a Home-Agent-MIP-Request (HAR), which\
    \ contains\n   the Mobile IPv4 Registration Request message data encapsulated\
    \ in the\n   MIP-Reg-Request AVP, to the assigned or requested Home Agent.  Refer\n\
    \   to Figure 4 if the AAAH does not have a direct path to the HA.  The\n   AAAH\
    \ MAY allocate a home address for the mobile node, and the Home\n   Agent MUST\
    \ support home address allocation.  In the event that the\n   AAAH handles address\
    \ allocation, it includes the home address in a\n   MIP-Mobile-Node-Address AVP\
    \ within the HAR.  The absence of this AVP\n   informs the Home Agent that it\
    \ must perform the home address\n   allocation.\n   Upon receipt of the HAR, the\
    \ home agent first processes the Diameter\n   message.  The home agent processes\
    \ the MIP-Reg-Request AVP and\n   creates the Registration Reply, encapsulating\
    \ it within the MIP-Reg-\n   Reply AVP.  In the creation of the Registration Reply,\
    \ the Home Agent\n   MUST include the HA NAI and the AAAH NAI, which will be created\
    \ from\n   the Origin-Host AVP and Origin-Realm AVP of the HAR.  If a home\n \
    \  address is needed, the home agent MUST also assign one and include\n   the\
    \ address in both the Registration Reply and the MIP-Mobile-Node-\n   Address\
    \ AVP.\n   Upon receipt of the HAA, the AAAH creates the AA-Mobile-Node-Answer\n\
    \   (AMA) message, which includes the same Acct-Multi-Session-Id\n   contained\
    \ in the HAA and the MIP-Home-Agent-Address and MIP-Mobile-\n   Node-Address AVPs\
    \ in the AMA message.  See Figures 3 and 4 for the\n   use of the redirect agent\
    \ for the secure transport of the HAA and AMA\n   messages.\n   See section 4.1\
    \ for information on the management of sessions and\n   session identifiers by\
    \ the Diameter Mobile IPv4 entities.\n"
- title: 3.2.  Allocation of Home Agent in Foreign Network
  contents:
  - "3.2.  Allocation of Home Agent in Foreign Network\n   The Diameter Mobile IPv4\
    \ application allows a home agent to be\n   allocated in a foreign network, as\
    \ required in [MIPREQ, CDMA2000].\n   When a foreign agent detects that the mobile\
    \ node has a home agent\n   address equal to 0.0.0.0 or 255.255.255.255 in the\
    \ Registration\n   Request message, it MUST add a MIP-Feature-Vector AVP with\
    \ the Home-\n   Agent-Requested flag set to one.  If the home agent address is\
    \ set to\n   255.255.255.255, the foreign agent MUST set the Home-Address-\n \
    \  Allocatable-Only-in-Home-Realm flag equal to one.  If the home agent\n   address\
    \ is set to 0.0.0.0, the foreign agent MUST set the Home-\n   Address-Allocatable-Only-in-Home-Realm\
    \ flag equal to zero.\n   When the AAAF receives an AMR message with the Home-Agent-Requested\n\
    \   flag set to one and with the Home-Address-Allocatable-Only-in-Home-\n   Realm\
    \ flag equal to zero, the AAAF MAY set the Foreign-Home-Agent-\n   Available flag\
    \ in the MIP-Feature-Vector AVP in order to inform the\n   AAAH that it is willing\
    \ and able to assign a Home Agent for the\n   mobile node.  When doing so, the\
    \ AAAF MUST include the MIP-\n   Candidate-Home-Agent-Host AVP and the MIP-Originating-Foreign-AAA-\n\
    \   AVP.  The MIP-Candidate-Home-Agent-Host AVP contains the identity\n   (i.e.,\
    \ a DiameterIdentity, which is an FQDN) of the home agent that\n   would be assigned\
    \ to the mobile node, and the MIP-Originating-\n   Foreign-AAA AVP contains the\
    \ identity of the AAAF.  The AAAF now\n   sends the AMR to the AAAH.  However,\
    \ as discussed above, the use of\n   Diameter agents between the FA and AAAH would\
    \ expose the MN-FA key.\n   If this is deemed undesirable, a redirect server approach\
    \ SHOULD be\n   utilized to communicate the AMR to the AAAH.  This causes the\
    \ FA to\n   communicate the AMR directly to the AAAH via a security association.\n\
    \   If the mobile node with AAA NAI extension support [AAANAI] has been\n   previously\
    \ authorized by the AAAH, now has to be re-authenticated,\n   and requests to\
    \ keep the assigned home agent in the foreign network,\n   the mobile node MUST\
    \ include the HA NAI and the AAAH NAI in the\n   registration request to the FA.\
    \  Upon receipt, the FA will create the\n   AMR, including the MIP-Home-Agent-Address\
    \ AVP and the Destination-\n   Host AVP based on the AAAH NAI, and include the\
    \ MIP-Home-Agent-Host\n   AVP based on the home agent NAI.  If the AAAF authorizes\
    \ the use of\n   the requested home agent, the AAAF MUST set the Home-Agent-In-\n\
    \   Foreign-Network bit in the MIP-Feature-Vector AVP.\n   If the mobile node\
    \ has to be re-authenticated but does not support\n   the AAA NAI extension, it\
    \ sends a registration request without the\n   AAA NAI and the HA NAI, even though\
    \ it has previously been authorized\n   by the AAAH and requests to keep the assigned\
    \ home agent in the\n   foreign network.  Upon receipt, the FA will create the\
    \ AMR, including\n   the MIP-Home-Agent-Address AVP.  If the AAAF authorizes the\
    \ use of\n   the requested home agent, and if it knows that the agent is in its\n\
    \   own domain, the AAAF MUST set the Home-Agent-In-Foreign-Network bit\n   in\
    \ the MIP-Feature-Vector AVP.\n   When the AAAH receives an AMR message, it first\
    \ checks the\n   authentication data supplied by the mobile node, according to\
    \ the\n   MIP-Reg-Request AVP and MIP-MN-AAA-Auth AVP, and determines whether\n\
    \   to authorize the mobile node.  If the AMR indicates that the AAAF has\n  \
    \ offered to allocate a Home Agent for the mobile node (i.e., the\n   Foreign-Home-Agent-Available\
    \ is set in the MIP-Feature-Vector AVP),\n   or if the AMR indicates that the\
    \ AAAF has offered a previously\n   allocated Home Agent for the mobile node (i.e.,\
    \ the Home-Agent-In-\n   Foreign-Network is set in the MIP-Feature-Vector AVP),\
    \ then the AAAH\n   must decide whether its local policy would allow the user\
    \ to have or\n   keep a home agent in the foreign network.  Assuming that the\
    \ mobile\n   node is permitted to do so, the AAAH determines the IP address of\
    \ the\n   HA based upon the FQDN of the HA by using DNS or learns it via an\n\
    \   MIP-Home-Agent-Address AVP in a redirect response to an HAR (i.e., if\n  \
    \ the redirect server adds this AVP to the HAA).  Then it sends an HAR\n   message\
    \ to Home Agent by including the Destination-Host AVP set to\n   the value found\
    \ in the AMR's MIP-Candidate-Home-Agent-Host AVP or\n   MIP-Home-Agent-Host AVP.\
    \  If DNS is used to determine the HA IP\n   address, it is assumed that the HA\
    \ has a public address and that it\n   can be resolved by DNS.\n   Security considerations\
    \ may require that the HAR be sent directly\n   from the AAAH to the HA without\
    \ the use of intermediary Diameter\n   agents.  This requires that a security\
    \ association between the AAAH\n   and HA be established, as in Figure 4.  If\
    \ no security association\n   can be established, the AAAH MUST return an AMA\
    \ with the Result-Code\n   AVP set to DIAMETER_ERROR_END_TO_END_MIP_KEY_ENCRYPTION.\n\
    \   If Diameter agents are being used (e.g., if there is no redirect\n   server)\
    \ the AAAH sends the HAR to the originating AAAF.  In this HAR\n   the Destination-Host\
    \ AVP is set to the value found in the AMR's MIP-\n   Originating-Foreign-AAA\
    \ AVP, and the MIP-Home-Agent-Host AVP or the\n   MIP-Candidate-Home-Agent-Host\
    \ AVP found in the AMR is copied into the\n   HAR.\n   Therefore, the AAAH MUST\
    \ always copy the MIP-Originating-Foreign-AAA\n   AVP from the AMR message to\
    \ the HAR message.  In cases when another\n   AAAF receives the HAR, this new\
    \ AAAF will send the HAR to the HA.\n                              Visited   \
    \                        Home\n                               Realm          \
    \                 Realm\n                             +--------+ ------- AMR ------->\
    \ +--------+\n                             |  AAAF  | <------ HAR -------- | \
    \ AAAH  |\n                             |        |                      |    \
    \    |\n                        +--->| server | ------- HAA -------> | server\
    \ |\n                        |    +--------+ <------ AMA -------- +--------+\n\
    \                        |         ^  |\n                        |         | \
    \ |\n                HAR/HAA |     AMR |  | AMA\n                        v   \
    \      |  v\n                +---------+       +---------+\n                |\
    \   Home  |       | Foreign |\n                |  Agent  |       |  Agent  |\n\
    \                +---------+       +---------+\n                             \
    \             ^\n                     +--------+           |\n               \
    \      | Mobile |<----------+\n                     | Node   |  Mobile IP\n  \
    \                   +--------+\n                   Figure 5.  Home Agent Allocated\
    \ in Visited Realm\n   Upon receipt of an HAA from the Home Agent in the visited\
    \ realm, the\n   AAAF forwards the HAA to the AAAH in the home realm.  The AMA\
    \ is then\n   constructed and issued to the AAAF and, finally, to the FA.  If\
    \ the\n   Result-Code indicates success, the HAA and AMA MUST include the MIP-\n\
    \   Home-Agent-Address and the MIP-Mobile-Node-Address AVPs.\n   If exposing keys\
    \ to the Diameter Agents along the way represents an\n   unacceptable security\
    \ risk, then the redirect approach depicted in\n   Figures 3 and 4 MUST be used\
    \ instead.\n   Mobile Node   Foreign Agent    Home Agent      AAAF        AAAH\n\
    \   -----------   -------------  -------------  ----------  ----------\n     \
    \  <---Challenge----\n    Reg-Req (Response)->\n                         -------------AMR----------->\n\
    \                                                     ------AMR---->\n       \
    \                                              <-----HAR-----\n              \
    \                        <-----HAR------\n                                   \
    \   ------HAA----->\n                                                     ------HAA---->\n\
    \                                                     <-----AMA-----\n       \
    \                  <------------AMA------------\n       <---Reg-Reply----\n  \
    \       Figure 6.  MIP/Diameter Exchange for HA Is Allocated in\n            \
    \                  Visited Realm\n   If the mobile node moves to another foreign\
    \ Network, it MAY either\n   request to keep the same Home Agent within the old\
    \ foreign network or\n   request to get a new one in the new foreign network.\
    \  If the AAAH is\n   willing to provide the requested service, the AAAH will\
    \ have to\n   provide services for both visited networks; e.g., key refresh.\n"
- title: 3.3.  Co-located Mobile Node
  contents:
  - "3.3.  Co-located Mobile Node\n   If a mobile node registers with the Home Agent\
    \ as a co-located mobile\n   node, no foreign agent is involved.  Therefore, when\
    \ the Home Agent\n   receives the Registration Request, an AMR message is sent\
    \ to the\n   local AAAH server, with the Co-Located-Mobile-Node bit set in the\n\
    \   MIP-Feature-Vector AVP.  The Home Agent also includes the Acct-\n   Multi-Session-Id\
    \ AVP (see sections 4.1.1 and 4.1.2) in the AMR sent\n   to the AAAH, as the AAAH\
    \ may find this piece of session-state or log\n   entry information useful.\n\
    \                                             Home\n                         \
    \                   Realm\n                                          +--------+\n\
    \                                          |  AAAH  |\n                      \
    \                    |        |\n                                          | server\
    \ |\n                                          +--------+\n                  \
    \                          ^  |\n                                            |\
    \  |\n                                        AMR |  | AMA\n                 \
    \                           |  v\n                +--------+               +---------+\n\
    \                | Mobile | Registration  |  Home   |\n                | Node\
    \   |-------------->|  Agent  |\n                +--------+    Request    +---------+\n\
    \                  Figure 7.  Co-located Mobile Node\n   If the MN-HA-Key-Requested\
    \ bit was set in the AMR message from the\n   Home Agent, the home agent and mobile\
    \ node's session keys would be\n   present in the AMA message.\n   Figure 8 shows\
    \ a signaling diagram that indicates a secure way to set\n   up the necessary\
    \ security associations when using redirect servers.\n   The Proxy AAA represents\
    \ any AAA server or servers that the HA may\n   use.  This applies to the visited\
    \ or home network.\n                                       Local redirect\n  \
    \     HA           Proxy AAA              Agent              AAAH\n         AMR\n\
    \         --------------->\n                             AMR (Redirect)\n    \
    \                     -------------------->\n                             AMA\
    \ (Redirect)\n                        <---------------------\n         AMA (Redirect)\n\
    \         <----------------\n                       Setup Security Association\n\
    \         <------------------------------------------------------>\n         \
    \                             AMR\n         ------------------------------------------------------->\n\
    \                              AMA (MN-HA key)\n         <-------------------------------------------------------\n\
    \       Figure 8.  Use of Redirect Server for Co-located CoA and AMR/AMA\n"
- title: 3.4.  Key Distribution
  contents:
  - "3.4.  Key Distribution\n   To allow the scaling of wireless data access across\
    \ administrative\n   domains, it is necessary to minimize the number of pre-existing\n\
    \   Mobility Security Associations (MSAs) required.  This means that each\n  \
    \ Foreign Agent should not be required to have a pre-configured MSA\n   with each\
    \ Home Agent on the Internet, nor should the mobile node be\n   required to have\
    \ a pre-configured MSA (as defined in [MOBILEIP]) with\n   any specific foreign\
    \ agent.  Furthermore, when the mobile node\n   requests a dynamically allocated\
    \ home agent, it is likely to receive\n   the address of a home agent for which\
    \ it has no available mobility\n   security association.\n   The Diameter Mobile\
    \ IPv4 application solves this by including key\n   distribution functionality,\
    \ which means that after a Mobile Node is\n   authenticated the authorization\
    \ phase includes the generation of\n   session keys and nonces.  Specifically,\
    \ three session keys and two\n   nonces are generated:\n     - K1:  The MN-HA\
    \ Session Key, which will be part of the MSA between\n            the Mobile Node\
    \ and the Home Agent.  The MN-HA Session Key\n            is derived from a nonce\
    \ generated by AAA.  The mobile node\n            obtains that nonce in the Registration\
    \ Reply and generates\n            this key using the same formula that AAA uses.\n\
    \     - K2:  The MN-FA Key, which will be part of the MSA between the\n      \
    \      Mobile Node and the Foreign Agent.  The MN-FA Key is derived\n        \
    \    from a nonce generated by AAA.  The mobile node obtains that\n          \
    \  nonce in the Registration Reply and generates the MN-FA key\n            using\
    \ the same formula that AAA uses.\n     - K3:  The FA-HA Key, which will be part\
    \ of the MSA between the\n            Foreign Agent and the Home Agent.\n   The\
    \ same session key is used in both directions between two entities;\n   e.g.,\
    \ the Mobile Node and the Foreign Agent use the same session key\n   for the MN-FA\
    \ and the FA-MN authentication extensions.  The security\n   implications of this\
    \ are examined in section 13.  However, the SPIs\n   may be different for the\
    \ MN-FA and the FA-MN authentication\n   extensions.  The SPI for the MN-FA MSA\
    \ is used on messages sent from\n   the MN to the FA, and the SPI for the FA-MN\
    \ MSA is used on messages\n   sent from the FA to the MN.\n   All keys and nonces\
    \ are generated by the AAAH, even if a Home Agent\n   is dynamically allocated\
    \ in the foreign network.\n   Figure 9 depicts the MSAs used for Mobile-IPv4 message\
    \ integrity\n   using the keys created by the DIAMETER server.\n            +--------+\
    \                      +--------+\n            |Foreign |          K3        \
    \  | Home   |\n            |Agent   |<-------------------->| Agent  |\n      \
    \      |        |                      |        |\n            +--------+    \
    \                  +--------+\n                    ^                        ^\n\
    \                    | K2                  K1 |\n                    |       +--------+\
    \       |\n                    |       | Mobile |       |\n                  \
    \  +------>| Node   |<------+\n                            |        |\n      \
    \                      +--------+\n              Figure 9.  Mobility Security\
    \ Associations after Session\n                            Key and Nonce Distribution\n\
    \   The keys destined for the foreign and home agent are propagated to\n   the\
    \ mobility agents via the Diameter protocol.  If exposing keys to\n   the Diameter\
    \ Agents along the way represents an unacceptable security\n   risk, then the\
    \ keys MUST be protected either by IPSec or TLS security\n   associations that\
    \ exist directly between the HA and AAAH or the FA\n   and AAAF, as explained\
    \ above.\n   The keys destined for the mobile node MUST also be propagated via\
    \ the\n   Mobile IPv4 protocol and therefore MUST follow the mechanisms\n   described\
    \ in [MIPKEYS] instead.  In [MIPKEYS], the mobile node\n   receives a nonce for\
    \ each key it needs, and the mobile node will use\n   the nonce and the long-term\
    \ shared secret to create the keys (see\n   section 8).\n   Once the session keys\
    \ have been established and propagated, the\n   mobility devices can exchange\
    \ registration information directly, as\n   defined in [MOBILEIP], without the\
    \ need of the Diameter\n   infrastructure.  However, the session keys have a lifetime,\
    \ after\n   which the Diameter infrastructure MUST be invoked again if new\n \
    \  session keys and nonces are to be acquired.\n"
- title: 4.  Diameter Protocol Considerations
  contents:
  - "4.  Diameter Protocol Considerations\n   This section details the relationship\
    \ of the Diameter Mobile IPv4\n   application to the Diameter base protocol.\n\
    \   This document specifies Diameter Application-ID 2.  Diameter nodes\n   conforming\
    \ to this specification MAY advertise support by including\n   the value of two\
    \ (2) in the Auth-Application-Id or the Acct-\n   Application-Id AVP of the Capabilities-Exchange-Request\
    \ and\n   Capabilities-Exchange-Answer commands [DIAMBASE].  The value of two\n\
    \   (2) MUST be used as the Application-Id in all AMR/AMA and HAR/HAA\n   commands.\
    \  The value of two (2) MUST be used as the Application-Id in\n   all ACR/ACA\
    \ commands, as this application defines new, mandatory AVPs\n   for accounting.\
    \  The value of zero (0) SHOULD be used as the\n   Application-Id in all STR/STA\
    \ and ASR/ASA commands, as these are\n   defined in the Diameter base protocol\
    \ and no additional mandatory\n   AVPs for those commands are defined in this\
    \ document.\n   Given the nature of Mobile IPv4, re-authentication can only be\n\
    \   initiated by a mobile node, which does not participate in the\n   Diameter\
    \ message exchanges.  Therefore, Diameter server initiated\n   re-auth does not\
    \ apply to this application, and RAR/RAA commands MUST\n   NOT be sent for Diameter\
    \ Mobile IPv4 sessions.\n"
- title: 4.1.  Diameter Session Management
  contents:
  - "4.1.  Diameter Session Management\n   The AAAH and AAAF MAY maintain session-state\
    \ or MAY be session-\n   stateless.  AAA redirect agents and AAA relay agents\
    \ MUST NOT\n   maintain session-state.  The AAAH, AAAF, proxies and relays agents\n\
    \   MUST maintain transaction state.\n   A mobile node's session is identified\
    \ via its identity in the User-\n   Name AVP and the MIP-Mobile-Node-Address,\
    \ and the MIP-Home-Agent-\n   Address AVPs.  This is necessary in order to allow\
    \ the session state\n   machine, defined in the base protocol [DIAMBASE], to be\
    \ used without\n   modification for this application.  However, as the MN may\
    \ interact\n   with more than one FA during the life of its session, it is important\n\
    \   for the Diameter Mobile IPv4 application to distinguish the two\n   pieces\
    \ of the session (some state at the FA, some state at the HA)\n   and to manage\
    \ them independently.  The following sub-sections give\n   further details.\n"
- title: 4.1.1.  Session Identifiers
  contents:
  - "4.1.1.  Session Identifiers\n   During creation of the AMR, the FA will choose\
    \ a session identifier.\n   During the creation of the HAR, the AAAH MUST use\
    \ a different session\n   identifier than that used in the AMR/AMA.  If the AAAH\
    \ is session-\n   stateful, it MUST send the same session identifier for all HARs\n\
    \   initiated on behalf of a given mobile node's session.  Otherwise, if\n   the\
    \ AAAH is session-stateless, it will manufacture a unique session-\n   id for\
    \ every HAR.\n   When the HA is first allocated, it MUST create and include an\
    \ Acct-\n   Multi-Session-Id AVP in the HAA returned to the AAAH.  This\n   identifier\
    \ will be kept constant for the life of the Mobile IPv4\n   session, as detailed\
    \ in the next subsection.\n"
- title: 4.1.2.  Managing Sessions during Mobile IPv4 Handoffs
  contents:
  - "4.1.2.  Managing Sessions during Mobile IPv4 Handoffs\n   Given the nature of\
    \ Mobile IPv4, a mobile node MAY receive service\n   from many foreign agents\
    \ during a period of time.  However, the home\n   realm should not view these\
    \ handoffs as different sessions, as this\n   could affect billing systems.  Furthermore,\
    \ foreign agents usually do\n   not communicate between each other, which implies\
    \ that AAA\n   information cannot be exchanged between these entities.\n   A handoff\
    \ registration request from a mobile node will cause the FA\n   to send an AMR\
    \ to its AAAF.  The AMR will include a new session\n   identifier and MAY be sent\
    \ to a new AAAF (i.e., a AAAF different from\n   that used by the previous FA).\
    \  However, the AMR shall be received by\n   the AAAH to which the user is currently\
    \ registered (possibly via the\n   redirect mechanism depicted in Figure 3).\n\
    \   As the AAAH may be session-stateless, it is necessary for the\n   resulting\
    \ HAR received by the HA to be identified as a continuation\n   of an existing\
    \ session.  If the HA receives an HAR for a mobile node\n   with a new session\
    \ identifier and the HA can guarantee that this\n   request is to extend an existing\
    \ service, then the HA MUST be able to\n   modify its internal session state information\
    \ to reflect the new\n   session identifier.\n   For correlation to occur, accounting\
    \ records must have some\n   commonality across handoffs.  Therefore, the home\
    \ agent MUST send the\n   same Acct-Multi-Session-Id AVP value in all HAAs for\
    \ the mobile's\n   session.  That is, the HA generates a unique Acct-Multi-Session-Id\n\
    \   when receiving an HAR for a new session and returns this same value\n   in\
    \ every HAA for the session.  This Acct-Multi-Session-Id AVP will be\n   returned\
    \ to the foreign agent by the AAAH in the AMA.  Both the\n   foreign and home\
    \ agents MUST include the Acct-Multi-Session-Id in the\n   accounting messages,\
    \ as depicted in Figure 10.\n"
- title: 4.1.3.  Diameter Session Termination
  contents:
  - "4.1.3.  Diameter Session Termination\n   A foreign and home agent following this\
    \ specification MAY expect\n   their respective Diameter servers to maintain session\
    \ state\n   information for each mobile node in their networks.  For a Diameter\n\
    \   Server to release any resources allocated to a specific mobile node,\n   that\
    \ server has to receive a Session-Termination-Request (STR) from a\n   mobility\
    \ agent.  The mobility agents MUST issue the Session-\n   Termination-Request\
    \ (STR) if the Authorization Lifetime has expired\n   and no subsequent MIP registration\
    \ request has been received.\n   The AAAH SHOULD only deallocate all resources\
    \ after the STR is\n   received from the home agent.  This ensures that a mobile\
    \ node that\n   moves from one foreign agent to another (for example, as a result\
    \ of\n   a handover) does not cause the Home Diameter Server to free all\n   resources\
    \ for the mobile node.  Therefore, an STR from a foreign\n   agent would free\
    \ the session from the foreign agent, but not the\n   session state associated\
    \ with the home agent (see Figure 10).\n              STR, Session-Id = foo  \
    \     STR, Session-Id = bar\n              --------------------->      <--------------------\n\
    \         +----+      +------+      +------+                    +----+\n     \
    \    | FA |      | AAAF |      | AAAH |                    | HA |\n         +----+\
    \      +------+      +------+                    +----+\n              <---------------------\
    \      --------------------->\n              STA, Session-Id = foo       STA,\
    \ Session-Id = bar\n            Figure 10.  Session Termination and Session Identifiers\n\
    \   When deallocating all of the mobile node's resources, the home\n   Diameter\
    \ server (and the foreign Diameter server in the case of an HA\n   allocated in\
    \ foreign network) MUST destroy all session keys that may\n   still be valid.\n\
    \   In the event that the AAAF wishes to terminate a session, its Abort-\n   Session-Request\
    \ (ASR) [DIAMBASE] message SHOULD be sent to the FA.\n   Similarly, the AAAH SHOULD\
    \ send its message to the Home Agent.\n"
- title: 5.  Command-Code Values
  contents:
  - "5.  Command-Code Values\n   This section defines Command-Code [DIAMBASE] values\
    \ that MUST be\n   supported by all Diameter implementations conforming to this\n\
    \   specification.  The following Command Codes are defined in this\n   specification:\n\
    \         Command-Name             Abbreviation    Code       Section\n      \
    \   -----------------------------------------------------------\n         AA-Mobile-Node-Request\
    \       AMR         260          5.1\n         AA-Mobile-Node-Answer        AMA\
    \         260          5.2\n         Home-Agent-MIP-Request       HAR        \
    \ 262          5.3\n         Home-Agent-MIP-Answer        HAA         262    \
    \      5.4\n"
- title: 5.1.  AA-Mobile-Node-Request
  contents:
  - "5.1.  AA-Mobile-Node-Request\n   The AA-Mobile-Node-Request (AMR), indicated\
    \ by the Command-Code field\n   set to 260 and the 'R' bit set in the Command\
    \ Flags field, is sent by\n   an attendant (i.e., the Foreign Agent), acting as\
    \ a Diameter client,\n   to an AAAF in order to request the authentication and\
    \ authorization\n   of a mobile node.  The foreign agent (or home agent in the\
    \ case of a\n   co-located Mobile Node) uses information found in the Registration\n\
    \   Request to construct the following AVPs, to be included as part of\n   the\
    \ AMR:\n             Home Address (MIP-Mobile-Node-Address AVP)\n            \
    \ Home Agent Address (MIP-Home-Agent-Address AVP)\n             Mobile Node NAI\
    \ (User-Name AVP [DIAMBASE])\n             MN-HA Key Request (MIP-Feature-Vector\
    \ AVP)\n             MN-FA Key Request (MIP-Feature-Vector AVP)\n            \
    \ MN-AAA Authentication Extension (MIP-MN-AAA-Auth AVP)\n             Foreign\
    \ Agent Challenge Extension (MIP-FA-Challenge AVP)\n             Home Agent NAI\
    \ (MIP-Home-Agent-Host AVP)\n             Home AAA server NAI (Destination-Host\
    \ AVP [DIAMBASE])\n             Home Agent to Foreign Agent SPI (MIP-HA-to-FA-SPI\
    \ AVP)\n   If the mobile node's home address is zero, the foreign or home agent\n\
    \   MUST NOT include a MIP-Mobile-Node-Address AVP in the AMR.  If the\n   home\
    \ agent address is zero or all ones, the MIP-Home-Agent-Address\n   AVP MUST NOT\
    \ be present in the AMR.\n   If a home agent is used in a visited network, the\
    \ AAAF MAY set the\n   Foreign-Home-Agent-Available flag in the MIP-Feature-Vector\
    \ AVP in\n   the AMR message to indicate that it is willing to assign a Home Agent\n\
    \   in the visited realm.\n   If the mobile node's home address is all ones, the\
    \ foreign or home\n   agent MUST include a MIP-Mobile-Node-Address AVP, set to\
    \ all ones.\n   If the mobile node includes the home agent NAI and the home AAA\n\
    \   server NAI [AAANAI], the foreign agent MUST include the MIP-Home-\n   Agent-Host\
    \ AVP and the Destination-Host AVP in the AMR.\n      Message Format\n       \
    \  <AA-Mobile-Node-Request> ::= < Diameter Header: 260, REQ, PXY >\n         \
    \                             < Session-ID >\n                               \
    \       { Auth-Application-Id }\n                                      { User-Name\
    \ }\n                                      { Destination-Realm }\n           \
    \                           { Origin-Host }\n                                \
    \      { Origin-Realm }\n                                      { MIP-Reg-Request\
    \ }\n                                      { MIP-MN-AAA-Auth }\n             \
    \                         [ Acct-Multi-Session-Id ]\n                        \
    \              [ Destination-Host ]\n                                      [ Origin-State-Id\
    \ ]\n                                      [ MIP-Mobile-Node-Address ]\n     \
    \                                 [ MIP-Home-Agent-Address ]\n               \
    \                       [ MIP-Feature-Vector ]\n                             \
    \         [ MIP-Originating-Foreign-AAA ]\n                                  \
    \    [ Authorization-Lifetime ]\n                                      [ Auth-Session-State\
    \ ]\n                                      [ MIP-FA-Challenge ]\n            \
    \                          [ MIP-Candidate-Home-Agent-Host ]\n               \
    \                       [ MIP-Home-Agent-Host ]\n                            \
    \          [ MIP-HA-to-FA-SPI ]\n                                    * [ Proxy-Info\
    \ ]\n                                    * [ Route-Record ]\n                \
    \                    * [ AVP ]\n"
- title: 5.2.  AA-Mobile-Node-Answer
  contents:
  - "5.2.  AA-Mobile-Node-Answer\n   The AA-Mobile-Node-Answer (AMA), indicated by\
    \ the Command-Code field\n   set to 260 and the 'R' bit cleared in the Command\
    \ Flags field, is\n   sent by the AAAH in response to the AA-Mobile-Node-Request\
    \ message.\n   The User-Name MAY be included in the AMA if it is present in the\
    \ AMR.\n   The Result-Code AVP MAY contain one of the values defined in section\n\
    \   6, in addition to the values defined in [DIAMBASE].\n   An AMA message with\
    \ the Result-Code AVP set to DIAMETER_SUCCESS MUST\n   include the MIP-Home-Agent-Address\
    \ AVP, MUST include the MIP-Mobile-\n   Node-Address AVP, and includes the MIP-Reg-Reply\
    \ AVP if and only if\n   the Co-Located-Mobile-Node bit was not set in the MIP-Feature-Vector\n\
    \   AVP.  The MIP-Home-Agent-Address AVP contains the Home Agent assigned\n  \
    \ to the mobile node, while the MIP-Mobile-Node-Address AVP contains\n   the home\
    \ address that was assigned.  The AMA message MUST contain the\n   MIP-FA-to-HA-MSA\
    \ and MIP-FA-to-MN-MSA if they were requested in the\n   AMR and were present\
    \ in the HAR.  The MIP-MN-to-HA-MSA and MIP-HA-\n   to-MN-MSA AVPs MUST be present\
    \ if the session keys were requested in\n   the AMR and the Co-Located-Mobile-Node\
    \ bit was set in the MIP-\n   Feature-Vector AVP.\n      Message Format\n    \
    \     <AA-Mobile-Node-Answer> ::= < Diameter Header: 260, PXY >\n            \
    \                         < Session-Id >\n                                   \
    \  { Auth-Application-Id }\n                                     { Result-Code\
    \ }\n                                     { Origin-Host }\n                  \
    \                   { Origin-Realm }\n                                     [ Acct-Multi-Session-Id\
    \ ]\n                                     [ User-Name ]\n                    \
    \                 [ Authorization-Lifetime ]\n                               \
    \      [ Auth-Session-State ]\n                                     [ Error-Message\
    \ ]\n                                     [ Error-Reporting-Host ]\n         \
    \                            [ Re-Auth-Request-Type ]\n                      \
    \               [ MIP-Feature-Vector ]\n                                     [\
    \ MIP-Reg-Reply ]\n                                     [ MIP-MN-to-FA-MSA ]\n\
    \                                     [ MIP-MN-to-HA-MSA ]\n                 \
    \                    [ MIP-FA-to-MN-MSA ]\n                                  \
    \   [ MIP-FA-to-HA-MSA ]\n                                     [ MIP-HA-to-MN-MSA\
    \ ]\n                                     [ MIP-MSA-Lifetime ]\n             \
    \                        [ MIP-Home-Agent-Address ]\n                        \
    \             [ MIP-Mobile-Node-Address ]\n                                  \
    \ * [ MIP-Filter-Rule ]\n                                     [ Origin-State-Id\
    \ ]\n                                   * [ Proxy-Info ]\n                   \
    \                * [ AVP ]\n"
- title: 5.3.  Home-Agent-MIP-Request
  contents:
  - "5.3.  Home-Agent-MIP-Request\n   The AAA sends the Home-Agent-MIP-Request (HAR),\
    \ indicated by the\n   Command-Code field set to 262 and the 'R' bit set in the\
    \ Command\n   Flags field, to the Home Agent.  If the Home Agent is to be assigned\n\
    \   in a foreign network, the HAR is issued by the AAAH and forwarded by\n   the\
    \ AAAF to the HA if no redirect servers are involved.  If any are,\n   the HAR\
    \ is sent directly to the HA via a security association.  If\n   the HAR message\
    \ does not include a MIP-Mobile-Node-Address AVP, the\n   Registration Request\
    \ has 0.0.0.0 for the home address, and the HAR is\n   successfully processed,\
    \ the Home Agent MUST allocate the mobile nodes\n   address.  If, on the other\
    \ hand, the home agent's local AAA server\n   allocates the mobile node's home\
    \ address, the local AAA server MUST\n   include the assigned address in a MIP-Mobile-Node-Address\
    \ AVP.\n   When session keys are requested for use by the mobile node, the AAAH\n\
    \   MUST create them and include them in the HAR message.  When a FA-HA\n   session\
    \ key is requested, it will be created and distributed by the\n   AAAH server.\n\
    \      Message Format\n         <Home-Agent-MIP-Request> ::= < Diameter Header:\
    \ 262, REQ, PXY >\n                                      < Session-Id >\n    \
    \                                  { Auth-Application-Id }\n                 \
    \                     { Authorization-Lifetime }\n                           \
    \           { Auth-Session-State }\n                                      { MIP-Reg-Request\
    \ }\n                                      { Origin-Host }\n                 \
    \                     { Origin-Realm }\n                                     \
    \ { User-Name }\n                                      { Destination-Realm }\n\
    \                                      { MIP-Feature-Vector }\n              \
    \                        [ Destination-Host ]\n                              \
    \        [ MIP-MN-to-HA-MSA ]\n                                      [ MIP-MN-to-FA-MSA\
    \ ]\n                                      [ MIP-HA-to-MN-MSA ]\n            \
    \                          [ MIP-HA-to-FA-MSA ]\n                            \
    \          [ MIP-MSA-Lifetime ]\n                                      [ MIP-Originating-Foreign-AAA\
    \ ]\n                                      [ MIP-Mobile-Node-Address ]\n     \
    \                                 [ MIP-Home-Agent-Address ]\n               \
    \                     * [ MIP-Filter-Rule ]\n                                \
    \      [ Origin-State-Id ]\n                                    * [ Proxy-Info\
    \ ]\n                                    * [ Route-Record ]\n                \
    \                    * [ AVP ]\n"
- title: 5.4.  Home-Agent-MIP-Answer
  contents:
  - "5.4.  Home-Agent-MIP-Answer\n   In response to a Home-Agent-MIP-Request, the\
    \ Home Agent sends the\n   Home-Agent-MIP-Answer (HAA), indicated by the Command-Code\
    \ field set\n   to 262 and the 'R' bit cleared in the Command Flags field, to\
    \ its\n   local AAA server.  The User-Name MAY be included in the HAA if it is\n\
    \   present in the HAR.  If the home agent allocated a home address for\n   the\
    \ mobile node, the address MUST be included in the MIP-Mobile-\n   Node-Address\
    \ AVP.  The Result-Code AVP MAY contain one of the values\n   defined in section\
    \ 6 instead of the values defined in [DIAMBASE].\n      Message Format\n     \
    \    <Home-Agent-MIP-Answer> ::= < Diameter Header: 262, PXY >\n             \
    \                        < Session-Id >\n                                    \
    \ { Auth-Application-Id }\n                                     { Result-Code\
    \ }\n                                     { Origin-Host }\n                  \
    \                   { Origin-Realm }\n                                     [ Acct-Multi-Session-Id\
    \ ]\n                                     [ User-Name ]\n                    \
    \                 [ Error-Reporting-Host ]\n                                 \
    \    [ Error-Message ]\n                                     [ MIP-Reg-Reply ]\n\
    \                                     [ MIP-Home-Agent-Address ]\n           \
    \                          [ MIP-Mobile-Node-Address ]\n                     \
    \                [ MIP-FA-to-HA-SPI ]\n                                     [\
    \ MIP-FA-to-MN-SPI ]\n                                     [ Origin-State-Id ]\n\
    \                                   * [ Proxy-Info ]\n                       \
    \            * [ AVP ]\n"
- title: 6.  Result-Code AVP Values
  contents:
  - "6.  Result-Code AVP Values\n   This section defines new Result-Code [DIAMBASE]\
    \ values that MUST be\n   supported by all Diameter implementations that conform\
    \ to this\n   specification.\n"
- title: 6.1.  Transient Failures
  contents:
  - "6.1.  Transient Failures\n   Errors in the transient failures category are used\
    \ to inform a peer\n   that the request could not be satisfied at the time it\
    \ was received,\n   but that it may be able to satisfy the request in the future.\n\
    \         DIAMETER_ERROR_MIP_REPLY_FAILURE    4005\n            This error code\
    \ is used by the home agent when processing of\n            the Registration Request\
    \ has failed.\n         DIAMETER_ERROR_HA_NOT_AVAILABLE     4006\n           \
    \ This error code is used to inform the foreign agent that the\n            requested\
    \ Home Agent cannot be assigned to the mobile node\n            at this time.\
    \  The foreign agent MUST return a Mobile IPv4\n            Registration Reply\
    \ to the mobile node with an appropriate\n            error code.\n         DIAMETER_ERROR_BAD_KEY\
    \              4007\n            This error code is used by the home agent to\
    \ indicate to the\n            local Diameter server that the key generated is\
    \ invalid.\n         DIAMETER_ERROR_MIP_FILTER_NOT_SUPPORTED   4008\n        \
    \    This error code is used by a mobility agent to indicate to\n            the\
    \ home Diameter server that the requested packet filter\n            Rules cannot\
    \ be supported.\n"
- title: 6.2.  Permanent Failures
  contents:
  - "6.2.  Permanent Failures\n   Errors that fall within the permanent failures category\
    \ are used to\n   inform the peer that the request failed and SHOULD NOT be attempted\n\
    \   again.\n         DIAMETER_ERROR_NO_FOREIGN_HA_SERVICE 5024\n            This\
    \ error is used by the AAAF to inform the AAAH that\n            allocation of\
    \ a home agent in the foreign domain is not\n            permitted at this time.\n\
    \         DIAMETER_ERROR_END_TO_END_MIP_KEY_ENCRYPTION 5025\n            This\
    \ error is used by the AAAF/AAAH to inform the peer that\n            the requested\
    \ Mobile IPv4 session keys could not be\n            delivered via a security\
    \ association.\n"
- title: 7.  Mandatory AVPs
  contents:
  - "7.  Mandatory AVPs\n   The following table describes the Diameter AVPs defined\
    \ in the Mobile\n   IPv4 application; their AVP Code values, types, and possible\
    \ flag\n   values; and whether the AVP MAY be encrypted.\n   Due to space constraints,\
    \ the short form IPFiltrRule is used to\n   represent IPFilterRule, and DiamIdent\
    \ is used to represent\n   DiameterIdentity.\n                               \
    \             +--------------------------+\n                                 \
    \           |    AVP Flag rules        |\n                                   \
    \         |----+-----+----+-----|----+\n                   AVP  Section      \
    \       |    |     |SHLD| MUST|MAY |\n   Attribute Name  Code Defined  Value Type\
    \ |MUST| MAY | NOT|  NOT|Encr|\n   -----------------------------------------|----+-----+----+-----|----|\n\
    \   MIP-Reg-Request  320  7.1     OctetString| M  |  P  |    |  V  | Y  |\n  \
    \ MIP-Reg-Reply    321  7.2     OctetString| M  |  P  |    |  V  | Y  |\n   MIP-MN-AAA-Auth\
    \  322  7.6     Grouped    | M  |  P  |    |  V  | Y  |\n   MIP-Mobile-Node- 333\
    \  7.3     Address    | M  |  P  |    |  V  | Y  |\n     Address\n   MIP-Home-Agent-\
    \  334  7.4     Address    | M  |  P  |    |  V  | Y  |\n     Address\n   MIP-Candidate-\
    \   336  7.9     DiamIdent  | M  |  P  |    |  V  | N  |\n     Home-Agent-Host\n\
    \   MIP-Feature-     337  7.5     Unsigned32 | M  |  P  |    |  V  | Y  |\n  \
    \   Vector\n   MIP-Auth-Input-  338  7.6.2   Unsigned32 | M  |  P  |    |  V \
    \ | Y  |\n     Data-Length\n   MIP-             339  7.6.3   Unsigned32 | M  |\
    \  P  |    |  V  | Y  |\n     Authenticator-Length\n   MIP-             340  7.6.4\
    \   Unsigned32 | M  |  P  |    |  V  | Y  |\n     Authenticator-Offset\n   MIP-MN-AAA-SPI\
    \   341  7.6.1   Unsigned32 | M  |  P  |    |  V  | Y  |\n   MIP-Filter-Rule \
    \ 342  7.8     IPFiltrRule| M  |  P  |    |  V  | Y  |\n   MIP-FA-Challenge 344\
    \  7.7     OctetString| M  |  P  |    |  V  | Y  |\n   MIP-Originating- 347  7.10\
    \    Grouped    | M  |  P  |    |  V  | Y  |\n   Foreign-AAA\n   MIP-Home-Agent-\
    \  348  7.11    DiamIdent  | M  |  P  |    |  V  | N  |\n     Host\n"
- title: 7.1.  MIP-Reg-Request AVP
  contents:
  - "7.1.  MIP-Reg-Request AVP\n   The MIP-Reg-Request AVP (AVP Code 320) is of type\
    \ OctetString and\n   contains the Mobile IPv4 Registration Request [MOBILEIP]\
    \ sent by the\n   mobile node to the foreign agent.\n"
- title: 7.2.  MIP-Reg-Reply AVP
  contents:
  - "7.2.  MIP-Reg-Reply AVP\n   The MIP-Reg-Reply AVP (AVP Code 321) is of type OctetString\
    \ and\n   contains the Mobile IPv4 Registration Reply [MOBILEIP] sent by the\n\
    \   home agent to the foreign agent.\n"
- title: 7.3.  MIP-Mobile-Node-Address AVP
  contents:
  - "7.3.  MIP-Mobile-Node-Address AVP\n   The MIP-Mobile-Node-Address AVP (AVP Code\
    \ 333) is of type Address and\n   contains the mobile node's home IP address.\n"
- title: 7.4.  MIP-Home-Agent-Address AVP
  contents:
  - "7.4.  MIP-Home-Agent-Address AVP\n   The MIP-Home-Agent-Address AVP (AVP Code\
    \ 334) is of type Address and\n   contains the mobile node's home agent IP address.\n"
- title: 7.5.  MIP-Feature-Vector AVP
  contents:
  - "7.5.  MIP-Feature-Vector AVP\n   The MIP-Feature-Vector AVP (AVP Code 337) is\
    \ of type Unsigned32 and\n   is added with flag values set by the foreign agent\
    \ or by the AAAF\n   owned by the same administrative domain as the foreign agent.\
    \  The\n   foreign agent SHOULD include MIP-Feature-Vector AVP within the AMR\n\
    \   message it sends to the AAAF.\n      Flag values currently defined include\
    \ the following:\n            1   Mobile-Node-Home-Address-Requested\n       \
    \     2   Home-Address-Allocatable-Only-in-Home-Realm\n            4   Home-Agent-Requested\n\
    \            8   Foreign-Home-Agent-Available\n            16  MN-HA-Key-Request\n\
    \            32  MN-FA-Key-Request\n            64  FA-HA-Key-Request\n      \
    \      128 Home-Agent-In-Foreign-Network\n            256 Co-Located-Mobile-Node\n\
    \   The flags are set according to the following rules.\n   If the mobile node\
    \ includes a valid home address (i.e., one not equal\n   to 0.0.0.0 or 255.255.255.255)\
    \ in its Registration Request, the\n   foreign agent sets the Mobile-Node-Home-Address-Requested\
    \ flag in the\n   MIP-Feature-Vector AVP to zero.\n   If the mobile node sets\
    \ the home agent field equal to 255.255.255.255\n   in its Registration Request,\
    \ the foreign agent sets both the Home-\n   Agent-Requested flag and the Home-Address-Allocatable-Only-in-Home-\n\
    \   Realm flag to one in the MIP-Feature-Vector AVP.\n   If the mobile node sets\
    \ the home agent field equal to 0.0.0.0 in its\n   Registration Request, the foreign\
    \ agent sets the Home-Agent-Requested\n   flag to one and zeroes the Home-Address-Allocatable-Only-in-Home-\n\
    \   Realm flag in the MIP-Feature-Vector AVP.\n   Whenever the foreign agent sets\
    \ either the\n   Mobile-Node-Home-Address-Requested flag or the Home-Agent-Requested\n\
    \   flag to one, it MUST set the MN-HA-Key-Request flag to one.  The MN-\n   HA-Key-Request\
    \ flag is also set to one if the mobile node includes a\n   \"Generalized MN-HA\
    \ Key Generation Nonce Request\" [MIPKEYS] extension,\n   with the subtype set\
    \ to AAA.\n   If the mobile node includes a \"Generalized MN-FA Key Generation\
    \ Nonce\n   Request\" [MIPKEYS] extension with the AAA subtype (1) in its\n  \
    \ Registration Request, the foreign agent sets the MN-FA-Key-Request\n   flag\
    \ to one in the MIP-Feature-Vector AVP.\n   If the mobile node requests a home\
    \ agent in the foreign network\n   either by setting the home address field to\
    \ all ones, or by\n   specifying a home agent in the foreign network, and the\
    \ AAAF\n   authorizes the request, the AAAF MUST set the Home-Agent-In-Foreign-\n\
    \   Network bit to one.\n   If the AAAF is willing and able to assign a home agent\
    \ in the foreign\n   network, the AAAF sets the Foreign-Home-Agent-Available flag\
    \ to one.\n   If the Home Agent receives a Registration Request from the mobile\n\
    \   node indicating that the MN is acting as a co-located mobile node,\n   the\
    \ home agent sets the Co-Located-Mobile-Node bit to one.\n   If the foreign agent's\
    \ local policy allows it to receive AAA session\n   keys and it does not have\
    \ any existing FA-HA key with the home agent,\n   the foreign agent MAY set the\
    \ FA-HA-Key-Request flag.\n   The foreign agent MUST NOT set the Foreign-Home-Agent-Available\
    \ and\n   Home-Agent-In-Foreign-Network flag both to one.\n   When the AAAF receives\
    \ the AMR message, it MUST first verify that the\n   sender was an authorized\
    \ foreign agent.  The AAAF then takes any\n   actions indicated by the settings\
    \ of the MIP-Feature-Vector AVP\n   flags.  The AAAF then MAY set additional flags.\
    \  Only the AAAF may\n   set the Foreign-Home-Agent-Available and Home-Agent-In-Foreign-\n\
    \   Network flags to one.  This is done according to local administrative\n  \
    \ policy.  When the AAAF has finished setting additional flags\n   according to\
    \ its local policy, then the AAAF transmits the AMR with\n   the possibly modified\
    \ MIP-Feature-Vector AVP to the AAAH.\n"
- title: 7.6.  MIP-MN-AAA-Auth AVP
  contents:
  - "7.6.  MIP-MN-AAA-Auth AVP\n   The MN-AAA-Auth AVP (AVP Code 322) is of type Grouped\
    \ and contains\n   some ancillary data to simplify processing of the authentication\
    \ data\n   in the Mobile IPv4 Registration Request [MOBILEIP, MIPCHAL] by the\n\
    \   target AAA server.  Its value has the following ABNF grammar:\n         MIP-MN-AAA-Auth\
    \ ::= < AVP Header: 322 >\n                             { MIP-MN-AAA-SPI }\n \
    \                            { MIP-Auth-Input-Data-Length }\n                \
    \             { MIP-Authenticator-Length }\n                             { MIP-Authenticator-Offset\
    \ }\n                           * [ AVP ]\n"
- title: 7.6.1.  MIP-MN-AAA-SPI AVP
  contents:
  - "7.6.1.  MIP-MN-AAA-SPI AVP\n   The MIP-MN-AAA-SPI AVP (AVP Code 341) is of type\
    \ Unsigned32 and\n   indicates the MSA by which the targeted AAA server (AAAH)\
    \ should\n   attempt to validate the Authenticator computed by the mobile node\n\
    \   over the Registration Request data.\n"
- title: 7.6.2.  MIP-Auth-Input-Data-Length AVP
  contents:
  - "7.6.2.  MIP-Auth-Input-Data-Length AVP\n   The MIP-Auth-Input-Data-Length AVP\
    \ (AVP Code 338) is of type\n   Unsigned32 and contains the length, in bytes,\
    \ of the Registration\n   Request data (data portion of MIP-Reg-Request AVP) that\
    \ should be\n   used as input to the algorithm, as indicated by the MN-AAA-SPI\
    \ AVP,\n   used to determine whether the Authenticator Data supplied by the\n\
    \   mobile node is valid.\n"
- title: 7.6.3.  MIP-Authenticator-Length AVP
  contents:
  - "7.6.3.  MIP-Authenticator-Length AVP\n   The MIP-Authenticator-Length AVP (AVP\
    \ Code 339) is of type Unsigned32\n   and contains the length of the authenticator\
    \ to be validated by the\n   targeted AAA server (i.e., AAAH).\n"
- title: 7.6.4.  MIP-Authenticator-Offset AVP
  contents:
  - "7.6.4.  MIP-Authenticator-Offset AVP\n   The MIP-Authenticator-Offset AVP (AVP\
    \ Code 340) is of type Unsigned32\n   and contains the offset into the Registration\
    \ Request Data, of the\n   authenticator to be validated by the targeted AAA server\
    \ (i.e.,\n   AAAH).\n"
- title: 7.7.  MIP-FA-Challenge AVP
  contents:
  - "7.7.  MIP-FA-Challenge AVP\n   The MIP-FA-Challenge AVP (AVP Code 344) is of\
    \ type OctetString and\n   contains the challenge advertised by the foreign agent\
    \ to the mobile\n   node.  This AVP MUST be present in the AMR if the mobile node\
    \ used\n   the RADIUS-style MN-AAA computation algorithm [MIPCHAL].\n"
- title: 7.8.  MIP-Filter-Rule AVP
  contents:
  - "7.8.  MIP-Filter-Rule AVP\n   The MIP-Filter-Rule AVP (AVP Code 342) is of type\
    \ IPFilterRule and\n   provides filter rules that have to be configured on the\
    \ foreign or\n   home agent for the user.  The packet filtering rules are set\
    \ by the\n   AAAH by adding one or more MIP-Filter-Rule AVPs in the HAR if\n \
    \  destined for the home agent and/or in the AMA if destined for the\n   foreign\
    \ agent.\n"
- title: 7.9.  MIP-Candidate-Home-Agent-Host
  contents:
  - "7.9.  MIP-Candidate-Home-Agent-Host\n   The MIP-Candidate-Home-Agent-Host AVP\
    \ (AVP Code 336) is of type\n   DiameterIdentity and contains the identity of\
    \ a home agent in the\n   foreign network that the AAAF proposes to be dynamically\
    \ assigned to\n   the mobile node.\n"
- title: 7.10.  MIP-Originating-Foreign-AAA AVP
  contents:
  - "7.10.  MIP-Originating-Foreign-AAA AVP\n   The MIP-Originating-Foreign-AAA AVP\
    \ (AVP Code 347) is of type Grouped\n   and contains the identity of the AAAF,\
    \ which issues the AMR to the\n   AAAH.  The MIP-Originating-Foreign-AAA AVP MUST\
    \ only be used in cases\n   when the home agent is or may be allocated in a foreign\
    \ domain.  If\n   the MIP-Originating-Foreign-AAA AVP is present in the AMR, the\
    \ AAAH\n   MUST copy it into the HAR.\n         MIP-Originating-Foreign-AAA ::=\
    \ < AVP Header: 347 >\n                                          { Origin-Realm\
    \ }\n                                          { Origin-Host }\n             \
    \                           * [ AVP ]\n"
- title: 7.11.  MIP-Home-Agent-Host AVP
  contents:
  - "7.11.  MIP-Home-Agent-Host AVP\n   The MIP-Home-Agent-Host AVP (AVP Code 348)\
    \ is of type Grouped and\n   contains the identity of the assigned Home Agent.\
    \  If the MIP-Home-\n   Agent-Host AVP is present in the AMR, the AAAH MUST copy\
    \ it into the\n   HAR.\n         MIP-Home-Agent-Host ::= < AVP Header: 348 >\n\
    \                                  { Destination-Realm }\n                   \
    \               { Destination-Host }\n                                * [ AVP\
    \ ]\n"
- title: 8.  Key Distribution
  contents:
  - "8.  Key Distribution\n   The mobile node and mobility agents use session keys\
    \ (i.e.,\n   the MN-FA, FA-HA, and MN-HA session keys) to compute authentication\n\
    \   extensions applied to MIP registration messages, as defined in\n   [MOBILEIP].\
    \  If session keys are requested, the AAAH MUST return the\n   keys and nonces\
    \ after the mobile node is successfully authenticated\n   and authorized.\n  \
    \ The SPI values are used as key identifiers, and each session key has\n   its\
    \ own SPI value; nodes that share a key can have multiple different\n   SPIs all\
    \ referring to the same key.  In all cases, the entity that\n   receives an authentication\
    \ extension (i.e., that verifies the\n   authentication extension) is providing\
    \ the entity that sends the\n   authentication extension (i.e., that computes\
    \ the authentication\n   extension) the value of the SPI to use for that computation.\
    \  Note\n   that the keys in this model are symmetric in that they are used in\n\
    \   both directions, even though the SPIs do not have to be symmetric.\n   The\
    \ mobile node allocates SPIs for use in the FA-MN and HA-MN\n   mobility security\
    \ associations, via the Mobile IPv4 AAA Key Request\n   extensions [MIPKEYS].\
    \  The home agent allocates SPIs for the MN-HA\n   and FA-HA mobility security\
    \ association.  The foreign agent chooses\n   SPIs for the MN-FA and HA-FA mobility\
    \ security associations.\n   Once the session keys and nonces have been distributed,\
    \ subsequent\n   Mobile IPv4 registrations need not invoke the AAA infrastructure\n\
    \   until the keys expire.  As mandated by Mobile IPv4, these\n   registrations\
    \ MUST include the MN-HA authentication extension.\n   Likewise, subsequent registrations\
    \ MUST also include MN-FA\n   authentication extension if the MN-FA session key\
    \ was generated and\n   distributed by AAA.  The same hold true for subsequent\
    \ use of the\n   FA-HA authentication extensions.\n"
- title: 8.1.  Authorization Lifetime vs. MIP Key Lifetime
  contents:
  - "8.1.  Authorization Lifetime vs. MIP Key Lifetime\n   The Diameter Mobile IPv4\
    \ application makes use of two timers: the\n   Authorization-Lifetime AVP [DIAMBASE]\
    \ and the MIP-MSA-Lifetime AVP.\n   The Authorization-Lifetime contains the number\
    \ of seconds before the\n   mobile node must issue a subsequent MIP registration\
    \ request.  The\n   content of the Authorization-Lifetime AVP corresponds to the\
    \ Lifetime\n   field in the MIP header [MOBILEIP].\n   The MIP-MSA-Lifetime AVP\
    \ contains the number of seconds before\n   session keys destined for the mobility\
    \ agents and the mobile node\n   expire.  A value of zero indicates infinity (no\
    \ timeout).  If not\n   zero, the value of the MIP-MSA-Lifetime AVP MUST be at\
    \ least equal to\n   the value in the Authorization Lifetime AVP.\n"
- title: 8.2.  Nonce vs. Session Key
  contents:
  - "8.2.  Nonce vs. Session Key\n   As described in section 3.4, the AAAH generates\
    \ session keys and\n   transmits them to the home agent and foreign agent.  The\
    \ AAAH\n   generates nonces that correspond to the same keys and transmits them\n\
    \   to the mobile node.  When it is necessary to protect the session keys\n  \
    \ and SPIs from un-trusted Diameter agents, end-to-end security\n   mechanisms\
    \ such as TLS or IPSec are required to eliminate all\n   Diameter Agents between\
    \ the FA or HA and the AAAH, as outlined above.\n   In [MIPKEYS], the mobility\
    \ security associations are established via\n   nonces transmitted to the mobile\
    \ node via Mobile IPv4.  To provide\n   the nonces, the AAAH must generate a random\
    \ [RANDOM] value of at\n   least 128 bits [MIPKEYS].  The mobile node then uses\
    \ the nonce to\n   derive the MN-HA and MN-FA session keys.\n   More details of\
    \ the MN-HA and the MN-FA session key creation\n   procedures are found in [MIPKEYS].\n\
    \   The hashing algorithm used by the mobile node to construct the\n   session\
    \ key has to be the same as that used by the AAAH in the\n   session key generation\
    \ procedure.  The AAAH therefore indicates the\n   algorithm used along with the\
    \ nonce.\n   The FA-HA and HA-FA session key is shared between the FA and HA.\
    \  The\n   AAAH generates a random [RANDOM] value of at least 128 bits for use\n\
    \   as this session key.\n   See sections 9 for details about the format of the\
    \ AVPs used to\n   transport the session keys.\n"
- title: 8.3.  Distributing the Mobile-Home Session Key
  contents:
  - "8.3.  Distributing the Mobile-Home Session Key\n   If the mobile node does not\
    \ have an MN-HA session key, then the AAAH\n   is likely to be the only trusted\
    \ entity that is available to the\n   mobile node.  Thus, the AAAH has to generate\
    \ the MN-HA session key.\n   The distribution of the HA-MN (session) key to the\
    \ HA is specified in\n   sections 1.2 and 3.4.  The HA and AAAH establish a security\n\
    \   association (IPSec or TLS) and transport the key over it.  If no\n   security\
    \ association exists between the AAAH and the home agent and a\n   security association\
    \ cannot be established, the AAAH MUST return a\n   Result-Code AVP with DIAMETER_ERROR_END_TO_END_MIP_KEY_ENCRYPTION.\n\
    \   The AAAH also has to arrange for the key to be delivered to the\n   mobile\
    \ node.  Unfortunately, the AAAH only knows about Diameter\n   messages and AVPs,\
    \ and the mobile node only knows about Mobile IPv4\n   messages and extensions\
    \ [MOBILEIP].  For this purpose, AAAH includes\n   the MN-HA MIP-nonce AVP into\
    \ a MIP-MN-to-HA-MSA AVP, which is added\n   to the HAR (for FA COA style Mobile\
    \ IPv4) or to the AMA (for\n   collocated COA-style Mobile IPv4 messages) and\
    \ delivered either to a\n   local home agent or a home agent in the visited network.\
    \  Note that\n   the mobile node will use the nonce to create the MN-HA session\
    \ key by\n   using the MN-AAA key it shares with the AAAH [MIPKEYS].  The AAAH\
    \ has\n   to rely on the home agent (which also understands Diameter) to\n   transfer\
    \ the nonce into a Mobile IPv4 \"Generalized MN-HA Key\n   Generation Nonce Reply\"\
    \ extension [MIPKEYS] in the Registration Reply\n   message.  The HA includes\
    \ the SPIs proposed by the mobile node and\n   the home agent in the \"Generalized\
    \ MN-HA Key Generation Nonce\n   Request\" extension.  The home agent can format\
    \ the Reply message and\n   extensions correctly for eventual delivery to the\
    \ mobile node.  The\n   resulting Registration Reply is added to the HAA's MIP-Reg-Reply\
    \ AVP.\n   The AAAH parses the HAA message, transforms it into an AMA message\n\
    \   containing an MIP-Reg-Reply AVP, and sends the AMA message to the\n   foreign\
    \ agent.  The foreign agent then uses that AVP to recreate a\n   Registration\
    \ Reply message containing the \"Generalized MN-HA Key\n   Generation Nonce Reply\"\
    \ extension for delivery to the mobile node.\n   In summary, the AAAH generates\
    \ the MN-HA nonce, which is added to the\n   MIP-MN-to-HA-MSA AVP, and a session\
    \ key, which is added to the\n   MIP-HA-to-MN-MSA AVP.  These AVPs are delivered\
    \ to the home agent in\n   HAR or AMA messages.  The home agent retains the session\
    \ key for its\n   own use and copies the nonce from the MIP-MN-to-HA-MSA AVP into\
    \ a\n   \"Generalized MN-HA Key Generation Nonce Reply\" extension, which is\n\
    \   appended to the Mobile IPv4 Registration Reply message.  This\n   Registration\
    \ Reply message MUST also include the HA-MN authentication\n   extension, which\
    \ is created by using the newly allocated HA-MN\n   session key.  The home agent\
    \ then includes the Registration Reply\n   message and extensions into a MIP-Reg-Reply\
    \ AVP as part of the HAA\n   message to be sent back to the AAA server.\n   The\
    \ key derived by the MN from the MN-HA session nonce is identical\n   to the HA-MN\
    \ session key provided to the HA.\n"
- title: 8.4.  Distributing the Mobile-Foreign Session Key
  contents:
  - "8.4.  Distributing the Mobile-Foreign Session Key\n   The MN-FA session nonce\
    \ is also generated by AAAH (upon request) and\n   added to the MIP-MN-to-FA-MSA\
    \ AVP, which is added to the HAR and\n   copied by the home agent into a \"Generalized\
    \ MN-FA Key Generation\n   Nonce Reply\" extension [MIPKEYS] of the Mobile IPv4\
    \ Registration\n   Reply message.  The HA also includes the SPIs proposed by the\
    \ mobile\n   node and foreign agent in the \"Generalized MN-FA Key Generation\
    \ Nonce\n   Request\" extension.  The AAAH includes the FA-MN session key in the\n\
    \   MIP-FA-to-MN-MSA AVP in the AMA, to be used by the foreign agent in\n   the\
    \ computation of the FA-MN authentication extension.\n   The key derived by the\
    \ MN from the MN-FA session nonce is identical\n   to the FA-MN session key provided\
    \ to the FA.\n"
- title: 8.5.  Distributing the Foreign-Home Session Key
  contents:
  - "8.5.  Distributing the Foreign-Home Session Key\n   If the foreign agent requests\
    \ an FA-HA session key, it also includes\n   a MIP-HA-to-FA-SPI AVP in the AMR\
    \ to convey the SPI to be used by the\n   home agent for this purpose.  The AAAH\
    \ generates the FA-HA session\n   key, which is identical to the HA-FA session\
    \ key, and distributes\n   that to both the HA and the FA over respective security\
    \ associations\n   by using the MIP-HA-to-FA-MSA and MIP-FA-to-HA-MSA AVPs.  The\
    \ HA\n   conveys the SPI that the FA MUST use in the HAA; this is similar to\n\
    \   the way in which the FA conveys that the SPI that the HA MUST use in\n   the\
    \ AMR.  The AAAH later includes these SPIs in the MIP-FA-HA-MSA and\n   MIP-HA-FA-MSA\
    \ AVPs, respectively, along with the session key.\n   Refer to Figures 2, 3, 4,\
    \ and 6 for the messages involved.\n   Note that if multiple MNs are registered\
    \ on the same FA and HA pair,\n   then multiple mobility security associations\
    \ would be distributed.\n   However, only one is required to protect the Mobile\
    \ IP control\n   traffic between FA and HA.  This creates an unacceptable level\
    \ of\n   state (i.e., to store the two SPIs and shared key for each FA-HA\n  \
    \ mobility security association).  To improve scalability, the FA and\n   HA may\
    \ discard FA-HA mobility security associations prior to the time\n   when they\
    \ actually expire.  However, if a proper discard policy is\n   not chosen, this\
    \ could cause Mobile IP messages in transit or waiting\n   in queues for transmission\
    \ to fail authentication.\n   The FA MUST always use the FA-HA security association\
    \ with the latest\n   expiry time when computing authentication extensions on\
    \ outgoing\n   messages.  The FA MAY discard HA-FA mobility security associations\
    \ 10\n   seconds after a new HA-FA mobility security association arrives with\n\
    \   a later expiry time.\n   The HA SHOULD use the HA-FA mobility security association\
    \ that has\n   the latest expiry time when computing authentication extensions\
    \ in\n   outgoing messages.  However, when the HA receives a new HA-FA\n   mobility\
    \ security association with a later expiry time, the HA SHOULD\n   wait 4 seconds\
    \ for the AMA to propagate to the FA before using the\n   new association.  Note\
    \ that the HA always uses the mobility security\n   association from the HAR when\
    \ constructing the Mobile IP Registration\n   Reply in the corresponding HAA.\
    \  The HA MAY discard an FA-HA mobility\n   security association once it receives\
    \ a message authenticated by a\n   FA-HA mobility security association with a\
    \ later expiry time.\n"
- title: 9.  Key Distribution AVPs
  contents:
  - "9.  Key Distribution AVPs\n   The Mobile-IP protocol defines a set of mobility\
    \ security\n   associations shared between the mobile node, foreign agent, and\
    \ home\n   agent.  These three mobility security associations (MN-HA, MN-FA, and\n\
    \   FA-HA) are dynamically created by the AAAH and have previously been\n   described\
    \ in sections 3.4 and 8.  AAA servers supporting the Diameter\n   Mobile IP Application\
    \ MUST implement the key distribution AVPs\n   defined in this document.\n   The\
    \ names of the key distribution AVPs indicate the two entities\n   sharing the\
    \ mobility security association.  The first named entity in\n   the AVP name will\
    \ use the mobility security association to create\n   authentication extensions\
    \ using the given SPI and key.  The second\n   named entity in the AVP name will\
    \ use the mobility security\n   association to verify the authentication extensions\
    \ of received\n   Mobile IP messages.\n   For instance, the MIP-MN-to-HA-MSA AVP\
    \ contains the MN-HA nonce,\n   which the mobile node will use to derive the MN-HA\
    \ Key, and the\n   MIP-HA-to-MN-MSA AVP contains the MN-HA key for the home agent.\
    \  Note\n   that mobility security associations are unidirectional; however, this\n\
    \   application delivers only one key that is shared between both\n   unidirectional\
    \ security associations that exist between two peers.\n   The security considerations\
    \ of using the same key in each direction\n   are given in section 13.  The SPIs\
    \ are, however, unique to each\n   unidirectional security association and are\
    \ chosen by the peer that\n   will receive the Mobile IP messages authenticated\
    \ with that security\n   association.\n   The following table describes the Diameter\
    \ AVPs defined in the Mobile\n   IP application and their AVP Code values, types,\
    \ and possible flag\n   values.\n                                            +--------------------------+\n\
    \                                            |       AVP Flag Rules     |\n  \
    \                                          |----+-----+----+-----|----+\n    \
    \               AVP  Section             |    |     |SHLD| MUST|MAY |\n   Attribute\
    \ Name  Code Defined  Value Type |MUST| MAY | NOT|  NOT|Encr|\n   -----------------------------------------|----+-----+----+-----|----|\n\
    \   MIP-FA-to-HA-SPI 318  9.11    Unsigned32 | M  |  P  |    |  V  | Y  |\n  \
    \ MIP-FA-to-MN-SPI 319  9.10    Unsigned32 | M  |  P  |    |  V  | Y  |\n   MIP-HA-to-FA-SPI\
    \ 323  9.14    Unsigned32 | M  |  P  |    |  V  | Y  |\n   MIP-MN-to-FA-MSA 325\
    \  9.5     Grouped    | M  |  P  |    |  V  | Y  |\n   MIP-FA-to-MN-MSA 326  9.1\
    \     Grouped    | M  |  P  |    |  V  | Y  |\n   MIP-FA-to-HA-MSA 328  9.2  \
    \   Grouped    | M  |  P  |    |  V  | Y  |\n   MIP-HA-to-FA-MSA 329  9.3    \
    \ Grouped    | M  |  P  |    |  V  | Y  |\n   MIP-MN-to-HA-MSA 331  9.6     Grouped\
    \    | M  |  P  |    |  V  | Y  |\n   MIP-HA-to-MN-MSA 332  9.4     Grouped  \
    \  | M  |  P  |    |  V  | Y  |\n   MIP-Nonce        335  9.12    OctetString|\
    \ M  |  P  |    |  V  | Y  |\n   MIP-Session-Key  343  9.7     OctetString| M\
    \  |  P  |    |  V  | Y  |\n   MIP-Algorithm-   345  9.8     Enumerated | M  |\
    \  P  |    |  V  | Y  |\n     Type\n   MIP-Replay-Mode  346  9.9     Enumerated\
    \ | M  |  P  |    |  V  | Y  |\n   MIP-MSA-Lifetime 367  9.13    Unsigned32 |\
    \ M  |  P  |    |  V  | Y  |\n"
- title: 9.1.  MIP-FA-to-MN-MSA AVP
  contents:
  - "9.1.  MIP-FA-to-MN-MSA AVP\n   The MIP-FA-to-MN-MSA AVP (AVP Code 326) is of\
    \ type Grouped and\n   contains the FA-MN session key.  This AVP is conveyed to\
    \ the FA in an\n   AMA message.  The MN allocates the MIP-FA-to-MN-SPI.  The FA\
    \ creates\n   an FA-MN authentication extension by using the session key and\n\
    \   algorithm, and the MN verifies that extension by using the same\n   session\
    \ key and algorithm.  The data field of this AVP has the\n   following ABNF grammar:\n\
    \         MIP-FA-to-MN-MSA ::= < AVP Header: 326 >\n                         \
    \     { MIP-FA-to-MN-SPI }\n                              { MIP-Algorithm-Type\
    \ }\n                              { MIP-Session-Key }\n                     \
    \       * [ AVP ]\n"
- title: 9.2.  MIP-FA-to-HA-MSA AVP
  contents:
  - "9.2.  MIP-FA-to-HA-MSA AVP\n   The MIP-FA-to-HA-MSA AVP (AVP Code 328) is of\
    \ type Grouped and\n   contains the FA-HA session key.  This AVP is conveyed to\
    \ the FA in an\n   AMA message.  The HA allocates the MIP-FA-to-HA-SPI.  The FA\
    \ creates\n   the FA-HA authentication extension by using the session key and\n\
    \   algorithm, and the HA verifies that extension by using the same key\n   and\
    \ algorithm.  The AVP's data field has the following ABNF grammar:\n         MIP-FA-to-HA-MSA\
    \ ::= < AVP Header: 328 >\n                              { MIP-FA-to-HA-SPI }\n\
    \                              { MIP-Algorithm-Type }\n                      \
    \        { MIP-Session-Key }\n                            * [ AVP ]\n"
- title: 9.3.  MIP-HA-to-FA-MSA AVP
  contents:
  - "9.3.  MIP-HA-to-FA-MSA AVP\n   The MIP-HA-to-FA-MSA AVP (AVP Code 329) is of\
    \ type Grouped and\n   contains the Home Agent's session key, which it shares\
    \ with the\n   foreign agent.  This AVP is conveyed to the HA in an HAR message.\n\
    \   The FA allocates the MIP-HA-to-FA-SPI.  The HA creates the HA-FA\n   authentication\
    \ extension by using the session key and algorithm, and\n   the FA verifies that\
    \ extension by using the same session key and\n   algorithm.  The AVP's data field\
    \ has the following ABNF grammar:\n         MIP-HA-to-FA-MSA ::= < AVP Header:\
    \ 329 >\n                              { MIP-HA-to-FA-SPI   }\n              \
    \                { MIP-Algorithm-Type }\n                              { MIP-Session-Key\
    \ }\n                            * [ AVP ]\n"
- title: 9.4.  MIP-HA-to-MN-MSA AVP
  contents:
  - "9.4.  MIP-HA-to-MN-MSA AVP\n   The MIP-HA-to-MN-MSA AVP (AVP Code 332) is of\
    \ type Grouped, and\n   contains the HA-MN session key.  This AVP is conveyed\
    \ to the HA in an\n   HAR for FA COA Mobile IPv4 and in an AMA for collocated\
    \ COA Mobile\n   IPv4.  The MN allocates the MIP-HA-to-MN-SPI.  The HA creates\
    \ the\n   HA-MN authentication extension by using the session key and\n   algorithm,\
    \ and the MN verifies that extension by using the same key\n   and algorithm.\
    \  The AVP's field has the following ABNF grammar:\n         MIP-HA-to-MN-MSA\
    \ ::= < AVP Header: 332 >\n                              { MIP-HA-to-MN-SPI  \
    \ }\n                              { MIP-Algorithm-Type }\n                  \
    \            { MIP-Replay-Mode }\n                              { MIP-Session-Key\
    \ }\n                            * [ AVP ]\n"
- title: 9.5.  MIP-MN-to-FA-MSA AVP
  contents:
  - "9.5.  MIP-MN-to-FA-MSA AVP\n   The MIP-MN-to-FA-MSA AVP (AVP Code 325) is of\
    \ type Grouped, and\n   contains the MN-FA session nonce, which the mobile node\
    \ uses to\n   derive the MN-FA session key.  This AVP is conveyed to the HA in\
    \ an\n   HAR message.  The FA allocates the MIP-MN-to-FA-SPI.  The MN creates\n\
    \   the MN-FA authentication extension by using the session key and\n   algorithm,\
    \ and the FA verifies that extension using the same key and\n   algorithm.\n \
    \  The home agent uses this AVP in the construction of the Mobile IP\n   \"Generalized\
    \ MN-FA Key Generation Nonce Reply\" extension [MIPKEYS].\n         MIP-MN-to-FA-MSA\
    \ ::= < AVP Header: 325 >\n                              { MIP-MN-FA-SPI }\n \
    \                             { MIP-Algorithm-Type }\n                       \
    \       { MIP-nonce }\n                            * [ AVP ]\n"
- title: 9.6.  MIP-MN-to-HA-MSA AVP
  contents:
  - "9.6.  MIP-MN-to-HA-MSA AVP\n   The MIP-MN-to-HA-MSA AVP (AVP Code 331) is of\
    \ type Grouped and\n   contains the MN-HA session nonce, which the mobile node\
    \ uses to\n   derive the MN-HA session key.  This AVP is conveyed to the HA in\
    \ an\n   HAR message for FA COA Mobile IPv4 and in an AMR for collocated\n   Mobile\
    \ IPv4.  The HA allocates the MIP-MN-to-HA-SPI.  The MN creates\n   the MN-FA\
    \ authentication extension using the session key and\n   algorithm, and the HA\
    \ verifies that extension using the same session\n   key and algorithm.\n   The\
    \ Home Agent uses this AVP in the construction of the Mobile IP\n   \"Generalized\
    \ MN-HA Key Generation Nonce Reply\" extension [MIPKEYS].\n         MIP-MN-to-HA-MSA\
    \ ::= < AVP Header: 331 >\n                              { MIP-MN-HA-SPI }\n \
    \                             { MIP-Algorithm-Type }\n                       \
    \       { MIP-Replay-Mode }\n                              { MIP-nonce }\n   \
    \                         * [ AVP ]\n"
- title: 9.7.  MIP-Session-Key AVP
  contents:
  - "9.7.  MIP-Session-Key AVP\n   The MIP-Session-Key AVP (AVP Code 343) is of type\
    \ OctetString and\n   contains the Session Key for the associated Mobile IPv4\n\
    \   authentication extension.  The HAAA selects the session key.\n"
- title: 9.8.  MIP-Algorithm-Type AVP
  contents:
  - "9.8.  MIP-Algorithm-Type AVP\n   The MIP-Algorithm-Type AVP (AVP Code 345) is\
    \ of type Enumerated and\n   contains the Algorithm identifier for the associated\
    \ Mobile IPv4\n   authentication extension.  The HAAA selects the algorithm type.\
    \  The\n   following values are currently defined:\n         2   HMAC-SHA-1 [HMAC]\n"
- title: 9.9.  MIP-Replay-Mode AVP
  contents:
  - "9.9.  MIP-Replay-Mode AVP\n   The MIP-Replay-Mode AVP (AVP Code 346) is of type\
    \ Enumerated and\n   contains the replay mode the Home Agent for authenticating\
    \ the mobile\n   node.  The HAAA selects the replay mode.\n   The following values\
    \ are supported (see [MOBILEIP] for more\n   information):\n         1   None\n\
    \         2   Timestamps\n         3   Nonces\n"
- title: 9.10.  MIP-FA-to-MN-SPI AVP
  contents:
  - "9.10.  MIP-FA-to-MN-SPI AVP\n   The MIP-FA-to-MN-SPI AVP (AVP Code 319) is of\
    \ type Unsigned32, and it\n   contains the Security Parameter Index the FA that\
    \ and MN use to refer\n   to the FA-MN mobility security association.  The MN\
    \ allocates the\n   SPI, and it MUST NOT have a value between zero (0) and 255,\
    \ which is\n   the reserved namespace defined in [MOBILEIP].\n"
- title: 9.11.  MIP-FA-to-HA-SPI AVP
  contents:
  - "9.11.  MIP-FA-to-HA-SPI AVP\n   The MIP-FA-to-HA-SPI AVP (AVP Code 318) is of\
    \ type Unsigned32 and\n   contains the Security Parameter Index the FA and HA\
    \ use to refer to\n   the FA-HA mobility security association.  The HA allocates\
    \ the SPI,\n   and it MUST NOT have a value between zero (0) and 255, which is\
    \ the\n   reserved namespace defined in [MOBILEIP].\n"
- title: 9.12.  MIP-Nonce AVP
  contents:
  - "9.12.  MIP-Nonce AVP\n   The MIP-Nonce AVP (AVP Code 335) is of type OctetString\
    \ and contains\n   the nonce sent to the mobile node for the associated authentication\n\
    \   extension.  The mobile node follows the procedures in [MIPKEYS] to\n   generate\
    \ the session key used to authenticate Mobile IPv4\n   registration messages.\
    \  The HAAA selects the nonce.\n"
- title: 9.13.  MIP-MSA-Lifetime AVP
  contents:
  - "9.13.  MIP-MSA-Lifetime AVP\n   The MIP-MSA-Lifetime AVP (AVP Code 367) is of\
    \ type Unsigned32 and\n   represents the period of time (in seconds) for which\
    \ the session key\n   or nonce is valid.  The associated session key or nonce,\
    \ as the case\n   may be, MUST NOT be used if the lifetime has expired; if the\
    \ session\n   key or nonce lifetime expires while the session to which it applies\n\
    \   is still active, either the session key or nonce MUST be changed or\n   the\
    \ association Mobile IPv4 session MUST be terminated.\n"
- title: 9.14.  MIP-HA-to-FA-SPI AVP
  contents:
  - "9.14.  MIP-HA-to-FA-SPI AVP\n   The MIP-HA-to-FA-SPI AVP (AVP Code 323) is of\
    \ type Unsigned32 and\n   contains the Security Parameter Index the HA and FA\
    \ use to refer to\n   the HA-FA mobility security association.  The FA allocates\
    \ the SPI,\n   and it MUST NOT have a value between zero (0) and 255, which is\
    \ the\n   reserved namespace defined in [MOBILEIP].\n"
- title: 10.  Accounting AVPs
  contents:
  - '10.  Accounting AVPs

    '
- title: 10.1.  Accounting-Input-Octets AVP
  contents:
  - "10.1.  Accounting-Input-Octets AVP\n   The Accounting-Input-Octets AVP (AVP Code\
    \ 363) is of type Unsigned64,\n   and contains the number of octets in IP packets\
    \ received from the\n   user.  This AVP MUST be included in all Accounting-Request\
    \ messages\n   and MAY be present in the corresponding Accounting-Answer messages\
    \ as\n   well.\n"
- title: 10.2.  Accounting-Output-Octets AVP
  contents:
  - "10.2.  Accounting-Output-Octets AVP\n   The Accounting-Output-Octets AVP (AVP\
    \ Code 364) is of type Unsigned64\n   and contains the number of octets in IP\
    \ packets sent to the user.\n   This AVP MUST be included in all Accounting-Request\
    \ messages and MAY\n   be present in the corresponding Accounting-Answer messages\
    \ as well.\n"
- title: 10.3.  Acct-Session-Time AVP
  contents:
  - "10.3.  Acct-Session-Time AVP\n   The Acct-Time AVP (AVP Code 46) is of type Unsigned32\
    \ and indicates\n   the length of the current session in seconds.  This AVP MUST\
    \ be\n   included in all Accounting-Request messages and MAY be present in the\n\
    \   corresponding Accounting-Answer messages as well.\n"
- title: 10.4.  Accounting-Input-Packets AVP
  contents:
  - "10.4.  Accounting-Input-Packets AVP\n   The Accounting-Input-Packets (AVP Code\
    \ 365) is of type Unsigned64 and\n   contains the number of IP packets received\
    \ from the user.  This AVP\n   MUST be included in all Accounting-Request messages\
    \ and MAY be\n   present in the corresponding Accounting-Answer messages as well.\n"
- title: 10.5.  Accounting-Output-Packets AVP
  contents:
  - "10.5.  Accounting-Output-Packets AVP\n   The Accounting-Output-Packets (AVP Code\
    \ 366) is of type Unsigned64\n   and contains the number of IP packets sent to\
    \ the user.  This AVP\n   MUST be included in all Accounting-Request messages\
    \ and MAY be\n   present in the corresponding Accounting-Answer messages as well.\n"
- title: 10.6.  Event-Timestamp AVP
  contents:
  - "10.6.  Event-Timestamp AVP\n   The Event-Timestamp (AVP Code 55) is of type Time\
    \ and MAY be included\n   in an Accounting-Request message to record the time\
    \ at which this\n   event occurred on the mobility agent, in seconds since January\
    \ 1,\n   1970, 00:00 UTC.\n"
- title: 11.  AVP Occurrence Tables
  contents:
  - "11.  AVP Occurrence Tables\n   The following tables present the AVPs defined\
    \ in this document and\n   their occurrences in Diameter messages.  Note that\
    \ AVPs that can only\n   be present within a Grouped AVP are not represented in\
    \ this table.\n   The table uses the following symbols:\n         0      The AVP\
    \ MUST NOT be present in the message.\n         0+     Zero or more instances\
    \ of the AVP MAY be present in the\n                message.\n         0 - 1 \
    \ Zero or one instance of the AVP MAY be present in the\n                message.\n\
    \         1      One instance of the AVP MUST be present in the message.\n"
- title: 11.1.  Mobile IP Command AVP Table
  contents:
  - "11.1.  Mobile IP Command AVP Table\n   The table in this section is limited to\
    \ the Command Codes defined in\n   this specification.\n                     \
    \               +-----------------------+\n                                  \
    \  |      Command-Code     |\n                                    |-----+-----+-----+-----+\n\
    \      Attribute Name                | AMR | AMA | HAR | HAA |\n      ------------------------------|-----+-----+-----+-----+\n\
    \      Authorization-Lifetime        | 0-1 | 0-1 | 1   | 0   |\n      Auth-Application-Id\
    \           | 1   | 1   | 1   | 1   |\n      Auth-Session-State            | 0-1\
    \ | 0-1 | 1   | 0   |\n      Acct-Multi-Session-Id         | 0-1 | 0-1 | 0   |\
    \ 0-1 |\n      Destination-Host              | 0-1 | 0   | 0-1 | 0   |\n     \
    \ Destination-Realm             | 1   | 0   | 1   | 0   |\n      Error-Message\
    \                 | 0   | 0-1 | 0   | 0-1 |\n      Error-Reporting-Host      \
    \    | 0   | 0-1 | 0   | 0-1 |\n      MIP-Candidate-Home-Agent-Host | 0-1 | 0\
    \   | 0-1 | 0   |\n      MIP-Home-Agent-Host           | 0-1 | 0   | 0-1 | 0 \
    \  |\n      MIP-Originating-Foreign-AAA   | 0-1 | 0   | 0-1 | 0   |\n      MIP-FA-Challenge\
    \              | 0-1 | 0   | 0   | 0   |\n      MIP-FA-to-MN-MSA             \
    \ | 0   | 0-1 | 0   | 0   |\n      MIP-FA-to-HA-MSA              | 0   | 0-1 |\
    \ 0   | 0   |\n      MIP-HA-to-FA-MSA              | 0   | 0   | 0-1 | 0   |\n\
    \      MIP-HA-to-MN-MSA              | 0   | 0-1 | 0-1 | 0   |\n      MIP-MN-to-FA-MSA\
    \              | 0   | 0   | 0-1 | 0   |\n      MIP-MN-to-HA-MSA             \
    \ | 0   | 0-1 | 0-1 | 0   |\n      MIP-FA-to-HA-SPI              | 0   | 0   |\
    \ 0   | 0-1 |\n      MIP-HA-to-FA-SPI              | 0   | 0   | 0   | 0-1 |\n\
    \      MIP-FA-to-MN-SPI              | 0   | 0   | 0   | 0-1 |\n      MIP-MN-to-FA-SPI\
    \              | 0   | 0   | 0   | 0-1 |\n      MIP-HA-to-MN-SPI             \
    \ | 0   | 0   | 0   | 0-1 |\n      MIP-MN-to-HA-SPI              | 0   | 0   |\
    \ 0   | 0-1 |\n      MIP-Feature-Vector            | 0-1 | 0-1 | 1   | 0   |\n\
    \      MIP-Filter-Rule               | 0   | 0+  | 0+  | 0   |\n      MIP-Home-Agent-Address\
    \        | 0-1 | 0-1 | 0-1 | 0-1 |\n      MIP-MSA-Lifetime              | 0  \
    \ | 0-1 | 0-1 | 0   |\n      MIP-MN-AAA-Auth               | 1   | 0   | 0   |\
    \ 0   |\n      MIP-Mobile-Node-Address       | 0-1 | 0-1 | 0-1 | 0-1 |\n     \
    \ MIP-Reg-Reply                 | 0   | 0-1 | 0   | 0-1 |\n      MIP-Reg-Request\
    \               | 1   | 0   | 1   | 0   |\n      Origin-Host                 \
    \  | 1   | 1   | 1   | 1   |\n      Origin-Realm                  | 1   | 1  \
    \ | 1   | 1   |\n      Origin-State-Id               | 0-1 | 0-1 | 0-1 | 0-1 |\n\
    \      Proxy-Info                    | 0+  | 0+  | 0+  | 0+  |\n      Redirect-Host\
    \                 | 0   | 0+  | 0   | 0+  |\n      Redirect-Host-Usage       \
    \    | 0   | 0-1 | 0   | 0-1 |\n      Redirect-Max-Cache-Time       | 0   | 0-1\
    \ | 0   | 0-1 |\n      Result-Code                   | 0   | 1   | 0   | 1   |\n\
    \      Re-Auth-Request-Type          | 0   | 0-1 | 0   | 0   |\n      Route-Record\
    \                  | 0+  | 0   | 0+  | 0   |\n      Session-Id               \
    \     | 1   | 1   | 1   | 1   |\n      User-Name                     | 1   | 0-1\
    \ | 1   | 0-1 |\n      ------------------------------|-----+-----+-----+-----|\n"
- title: 11.2.  Accounting AVP Table
  contents:
  - "11.2.  Accounting AVP Table\n   The table in this section is used to represent\
    \ which AVPs defined in\n   this document are to be present in the Accounting\
    \ messages, as\n   defined in [DIAMBASE].\n                                  \
    \         +-------------+\n                                           | Command-Code|\n\
    \                                           |------+------+\n      Attribute Name\
    \                       |  ACR |  ACA |\n      -------------------------------------|------+------+\n\
    \      Accounting-Input-Octets              |  1   |  0-1 |\n      Accounting-Input-Packets\
    \             |  1   |  0-1 |\n      Accounting-Output-Octets             |  1\
    \   |  0-1 |\n      Accounting-Output-Packets            |  1   |  0-1 |\n   \
    \   Acct-Multi-Session-Id                |  1   |  0-1 |\n      Acct-Session-Time\
    \                    |  1   |  0-1 |\n      MIP-Feature-Vector               \
    \    |  1   |  0-1 |\n      MIP-Home-Agent-Address               |  1   |  0-1\
    \ |\n      MIP-Mobile-Node-Address              |  1   |  0-1 |\n      Event-Timestamp\
    \                      | 0-1  |   0  |\n      -------------------------------------|------+------+\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   This section contains the namespaces that have either\
    \ been created in\n   this specification or had their values assigned to existing\n\
    \   namespaces managed by IANA.\n"
- title: 12.1.  Command Codes
  contents:
  - "12.1.  Command Codes\n   This specification assigns the values 260 and 262 from\
    \ the Command\n   Code namespace defined in [DIAMBASE].  See section 5 for the\n\
    \   assignment of the namespace in this specification.\n"
- title: 12.2.  AVP Codes
  contents:
  - "12.2.  AVP Codes\n   This specification assigns the values 318 - 348 and 363\
    \ - 367 from\n   the AVP Code namespace defined in [DIAMBASE].  See sections 7,\
    \ 9, and\n   10 for the assignment of the namespace in this specification.\n"
- title: 12.3.  Result-Code AVP Values
  contents:
  - "12.3.  Result-Code AVP Values\n   This specification assigns the values 4005\
    \ - 4008 and 5024 - 5025\n   from the Result-Code AVP (AVP Code 268) value namespace\
    \ defined in\n   [DIAMBASE].  See section 6 for the assignment of the namespace\
    \ in\n   this specification.\n"
- title: 12.4.  MIP-Feature-Vector AVP Values
  contents:
  - "12.4.  MIP-Feature-Vector AVP Values\n   There are 32 bits in the MIP-Feature-Vector\
    \ AVP (AVP Code 337) that\n   are available for assignment.  This document assigns\
    \ bits 1 - 9, as\n   listed in section 7.5.  The remaining bits should only be\
    \ assigned\n   via Standards Action [IANA].\n"
- title: 12.5.  MIP-Algorithm-Type AVP Values
  contents:
  - "12.5.  MIP-Algorithm-Type AVP Values\n   As defined in section 9.8, the MIP-Algorithm-Type\
    \ AVP (AVP Code 345)\n   defines the value 2.  All remaining values, except zero,\
    \ are\n   available for assignment via Designated Expert [IANA].\n"
- title: 12.6.  MIP-Replay-Mode AVP Values
  contents:
  - "12.6.  MIP-Replay-Mode AVP Values\n   As defined in section 9.9, the MIP-Replay-Mode\
    \ AVP (AVP Code 346)\n   defines the values 1 - 3.  All remaining values, except\
    \ zero, are\n   available for assignment via Designated Expert [IANA].\n"
- title: 12.7.  Application Identifier
  contents:
  - "12.7.  Application Identifier\n   This specification uses the value two (2) to\
    \ the Application\n   Identifier namespace defined in [DIAMBASE].  See section\
    \ 4 for more\n   information.\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   This specification describes a Mobile IPv4 Diameter\
    \ Application for\n   authenticating and authorizing a Mobile IPv4 mobile node.\
    \  The\n   authentication algorithm used is dependent on the transforms used\n\
    \   within the Mobile IPv4 protocol, and [MIPCHAL].  This specification,\n   in\
    \ conjunction with [MIPKEYS], also defines a method by which the\n   home Diameter\
    \ server can create and distribute session keys and\n   nonces for use in authenticating\
    \ and integrity-protecting Mobile IPv4\n   registration messages [MOBILEIP]. \
    \ The key distribution is\n   asymmetric, as communication with the mobile node\
    \ occurs via the\n   Mobile IPv4 protocol [MIPKEYS, MOBILEIP], where as communication\
    \ to\n   the Home Agent and Foreign Agent occurs via the Diameter protocol.\n\
    \   Where untrusted Diameter agents are present, end-to-end security MUST\n  \
    \ be used.  The end-to-end security takes the form of TLS or IPSec\n   security\
    \ associations between the AAAH and the FA and between the\n   AAAH and the HA.\
    \  These connections will be authenticated with the\n   use of public keys and\
    \ certificates; however, the identities that\n   appear in the certificates must\
    \ be authorized and bound to a\n   particular Mobile IPv4 Diameter session before\
    \ the AAAH can safely\n   begin distribution of keys.\n   Note that the direct\
    \ connections are established as a result of\n   Diameter redirect messages. \
    \ For example, in Figure 3, the FA gets a\n   redirect response containing the\
    \ Redirect-Host AVP of the AAAH.  This\n   is the identity that should be matched\
    \ against the certificate\n   presented by the AAAH when the secure connection\
    \ is established.  In\n   this case, the network of Diameter proxies and redirect\
    \ agents is\n   trusted with the task of returning the correct AAAH identity to\
    \ the\n   FA.\n   The AAAH must also make an authorization decision when the FA\n\
    \   establishes the connection.  If the AAAH and the redirect server are\n   one\
    \ and the same, then the AAAH may have observed and noted the\n   original AMR\
    \ message that contained the identity of the FA and so may\n   authorize the establishment\
    \ of a TLS or IPSec connection from the\n   same entity.  Otherwise, the AAAH\
    \ would need to maintain a list of\n   all authorized visited domains (roaming\
    \ partners) and authorize TLS\n   or IPSec connections based on this list.  Note\
    \ that establishment of\n   the connection is only the first step, and the AAAH\
    \ has another\n   opportunity to deny service upon receipt of the AMR message\
    \ itself.\n   At this step, the AAAH can check the internal AVPs of the AMR to\n\
    \   ensure that the FA is valid; for example, it can check that the\n   Mobile\
    \ IP COA is equal to the IP address used as the endpoint of the\n   TLS or IPSec\
    \ connection.  However, such a policy would prevent the FA\n   from using different\
    \ interfaces for AAA and Mobile IP tunnel packets\n   and may not be desirable\
    \ in every deployment situation.\n   A similar set of considerations applies to\
    \ the connection between\n   AAAH and HA when those entities are in different\
    \ administrative\n   domains.  However, here the roles are reversed because it\
    \ is the AAAH\n   that contacts the HA via the HAR.  The identity of the candidate\
    \ HA\n   is given to the AAAH in the AMR, and the AAAH should expect to\n   receive\
    \ the same identity in the public key certificates during TLS\n   or IPSec negotiation.\
    \  The HA may authorize individual connections by\n   acting as its own redirect\
    \ server, or it may maintain a list of\n   trusted roaming partners.\n   This\
    \ application creates and distributes a single session key for\n   each pair of\
    \ MSAs between two entities; e.g., the same session key is\n   used for the MN-HA\
    \ MSA and the HA-MN MSA.  This is safe to do from a\n   security perspective,\
    \ as the session keys are only used with keyed\n   hash functions to generate\
    \ authenticator values that protect the\n   integrity of each Mobile IP control\
    \ message.  Mobile IP messages have\n   built-in replay protection with the use\
    \ of timestamps or nonces\n   [MOBILEIP], and, due to the nature of the protocol,\
    \ requests are\n   always different bitwise from responses, at least in the message\
    \ type\n   code.  This avoids problems that might arise in other situations\n\
    \   where an attacker could mount a replay or reflection attack if the\n   same\
    \ key were used (for example) to encrypt otherwise unprotected\n   traffic on\
    \ more than one connection leg in the network.\n   Nonces are sent to the mobile\
    \ node, which are used to generate the\n   session keys via the HMAC-SHA-1 one-way\
    \ function.  Because the nonces\n   and authentication extensions may be observed\
    \ by anyone with access\n   to a clear-text copy of the Registration Reply, the\
    \ pre-shared key\n   between the mobile node and the home Diameter server would\
    \ be\n   vulnerable to an offline dictionary attack if it did not contain\n  \
    \ enough entropy.  To prevent this, the pre-shared key between the\n   mobile\
    \ node and the home Diameter server SHOULD be a randomly chosen\n   quantity of\
    \ at least 96 bits.\n   Because the session key is determined by the long-term\
    \ secret and the\n   nonce, the nonce SHOULD be temporally and globally unique;\
    \ if the\n   nonce were to repeat, then so would the session key.  To prevent\n\
    \   this, a nonce is strongly recommended to be a random [RANDOM] value\n   of\
    \ at least 128 bits.  The long-term secret between the MN and AAAH\n   MUST be\
    \ refreshed periodically, to guard against recovery of the\n   long-term secret\
    \ due to nonce reuse or other factors.  This is\n   accomplished by using out-of-band\
    \ mechanisms, which are not specified\n   in this document.\n   Note that it is\
    \ not recommended to set the MIP-MSA-Lifetime AVP value\n   to zero, as keeping\
    \ session keys for a long time (no refresh)\n   increases the level of vulnerability.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [ABNF]         Crocker, D. and P. Overell, \"\
    Augmented BNF for Syntax\n                  Specifications: ABNF\", RFC 2234,\
    \ November 1997.\n   [DIAMBASE]     Calhoun, P., Loughney, J., Guttman, E., Zorn,\
    \ G., and\n                  J. Arkko, \"Diameter Base Protocol\", RFC 3588,\n\
    \                  September 2003.\n   [IANA]         Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing\n                  an IANA Considerations Section in\
    \ RFCs\", BCP 26, RFC\n                  2434, October 1998.\n   [MOBILEIP]  \
    \   Perkins, C., \"IP Mobility Support for IPv4\", RFC 3344,\n               \
    \   August 2002.\n   [MIPCHAL]      Perkins, C. and P. Calhoun, \"Mobile IPv4\n\
    \                  Challenge/Response Extensions\", RFC 3012, November\n     \
    \             2000.\n   [NAI]          Aboba, B. and M. Beadles, \"The Network\
    \ Access\n                  Identifier\", RFC 2486, January 1999.\n   [HMAC] \
    \        Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC:\n                \
    \  Keyed-Hashing for Message Authentication\", RFC 2104,\n                  February\
    \ 1997.\n   [MIPKEYS]      Perkins, C. and P. Calhoun, \"Authentication,\n   \
    \               Authorization, and Accounting (AAA) Registration Keys\n      \
    \            for Mobile IP\", RFC 3957, March 2005.\n   [AAANAI]       Johansson,\
    \ F. and T. Johansson, \"Mobile IPv4 Extension\n                  for Carrying\
    \ Network Access Identifiers\", RFC 3846,\n                  June 2004.\n   [IPSEC]\
    \        Kent, S. and R. Atkinson, \"Security Architecture for\n             \
    \     the Internet Protocol\", RFC 2401, November 1998.\n   [TLS]          Blake-Wilson,\
    \ S., Nystrom, M., Hopwood, D., Mikkelsen,\n                  J., and T. Wright,\
    \ \"Transport Layer Security (TLS)\n                  Extensions\", RFC 3546,\
    \ June 2003.\n   [KEYWORDS]     Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \                  Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [MIPREQ]       Glass, S., Hiller, T., Jacobs,\
    \ S., and C. Perkins,\n                  \"Mobile IP Authentication, Authorization,\
    \ and\n                  Accounting Requirements\", RFC 2977, October 2000.\n\
    \   [CDMA2000]     Hiller, T., Walsh, P., Chen, X., Munson, M., Dommety,\n   \
    \               G., Sivalingham, S., Lim, B., McCann, P., Shiino, H.,\n      \
    \            Hirschman, B., Manning, S., Hsu, R., Koo, H., Lipford,\n        \
    \          M., Calhoun, P., Lo, C., Jaques, E., Campbell, E., Xu,\n          \
    \        Y., Baba, S., Ayaki, T., Seki, T., and A. Hameed,\n                 \
    \ \"CDMA2000 Wireless Data Requirements for AAA\", RFC\n                  3141,\
    \ June 2001.\n   [EVALROAM]     Aboba, B. and G. Zorn, \"Criteria for Evaluating\n\
    \                  Roaming Protocols\", RFC 2477, January 1999.\n   [MIPNAI] \
    \      Calhoun, P. and C. Perkins, \"Mobile IP Network Access\n              \
    \    Identifier Extension for IPv4\", RFC 2794, March 2000.\n   [RANDOM]     \
    \  Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n                  \"Randomness\
    \ Requirements for Security\", BCP 106, RFC\n                  4086, June 2005.\n"
- title: 15.  Acknowledgements
  contents:
  - "15.  Acknowledgements\n   The authors would like to thank Nenad Trifunovic, Haseeb\
    \ Akhtar, and\n   Pankaj Patel for their participation in the pre-IETF Document\
    \ Reading\n   Party; Erik Guttman for his very useful proposed text; and to Fredrik\n\
    \   Johansson, Martin Julien, and Bob Kopacz for their very useful\n   contributed\
    \ text.\n   The authors would also like to thank the participants of 3GPP2's\n\
    \   TSG-X working group for their valuable feedback, and the following\n   people\
    \ for their contribution in the development of the protocol:\n   Kevin Purser,\
    \ Thomas Panagiotis, Mark Eklund, Paul Funk, Michael\n   Chen, Henry Haverinen,\
    \ and Johan Johansson.  General redirect server\n   text due to Pasi Eronen was\
    \ borrowed from Diameter-EAP.\n   Pat Calhoun would like to thank Sun Microsystems,\
    \ as most of the\n   effort put into this document was done while he was in their\
    \ employ.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Questions about this memo can be directed to:\n   Pat\
    \ Calhoun\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA 95134\n\
    \   USA\n   Phone: +1 408-853-5269\n   EMail: pcalhoun@cisco.com\n   Tony Johansson\n\
    \   Bytemobile, Inc.\n   2029 Stierlin Court\n   Mountain View, CA 94043\n   Phone:\
    \ +1 650-641-7817\n   Fax:   +1 650-641-7701\n   EMail: tony.johansson@bytemobile.com\n\
    \   Charles E. Perkins\n   Nokia Research Center\n   313 Fairchild Drive\n   Mountain\
    \ View, CA 94043\n   USA\n   Phone: +1 650-625-2986\n   Fax:   +1 650-625-2502\n\
    \   EMail: Charles.Perkins@nokia.com\n   Tom Hiller\n   Lucent Technologies\n\
    \   1960 Lucent Lane\n   Naperville, IL 60566\n   USA\n   Phone: +1 630-979-7673\n\
    \   EMail: tomhiller@lucent.com\n   Peter J. McCann\n   Lucent Technologies\n\
    \   1960 Lucent Lane\n   Naperville, IL 60563\n   USA\n   Phone: +1 630-713-9359\n\
    \   Fax:   +1 630-713-1921\n   EMail: mccap@lucent.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
