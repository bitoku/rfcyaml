- title: __initial_text__
  contents:
  - '                     Multicast in MPLS/BGP IP VPNs

    '
- title: Abstract
  contents:
  - "Abstract\n   In order for IP multicast traffic within a BGP/MPLS IP VPN (Virtual\n\
    \   Private Network) to travel from one VPN site to another, special\n   protocols\
    \ and procedures must be implemented by the VPN Service\n   Provider.  These protocols\
    \ and procedures are specified in this\n   document.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6513.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................5\n\
    \   2.  Overview .......................................................5\n  \
    \    2.1. Optimality vs. Scalability .................................5\n    \
    \       2.1.1. Multicast Distribution Trees ........................7\n      \
    \     2.1.2. Ingress Replication through Unicast Tunnels .........8\n      2.2.\
    \ Multicast Routing Adjacencies ..............................8\n      2.3. MVPN\
    \ Definition ............................................9\n      2.4. Auto-Discovery\
    \ ............................................10\n      2.5. PE-PE Multicast Routing\
    \ Information .......................11\n      2.6. PE-PE Multicast Data Transmission\
    \ .........................11\n      2.7. Inter-AS MVPNs ............................................12\n\
    \      2.8. Optionally Eliminating Shared Tree State ..................13\n  \
    \ 3. Concepts and Framework .........................................13\n    \
    \  3.1. PE-CE Multicast Routing ...................................13\n      3.2.\
    \ P-Multicast Service Interfaces (PMSIs) ....................14\n           3.2.1.\
    \ Inclusive and Selective PMSIs ......................15\n           3.2.2. P-Tunnels\
    \ Instantiating PMSIs ......................16\n      3.3. Use of PMSIs for Carrying\
    \ Multicast Data ..................18\n      3.4. PE-PE Transmission of C-Multicast\
    \ Routing .................20\n           3.4.1. PIM Peering ........................................20\n\
    \                  3.4.1.1. Full per-MVPN PIM Peering across\n               \
    \            an MI-PMSI ................................20\n                 \
    \ 3.4.1.2. Lightweight PIM Peering across an MI-PMSI .20\n                  3.4.1.3.\
    \ Unicasting of PIM C-Join/Prune Messages ...21\n           3.4.2. Using BGP to\
    \ Carry C-Multicast Routing .............22\n   4. BGP-Based Auto-Discovery of\
    \ MVPN Membership ....................22\n   5. PE-PE Transmission of C-Multicast\
    \ Routing ......................25\n      5.1. Selecting the Upstream Multicast\
    \ Hop (UMH) ................25\n           5.1.1. Eligible Routes for UMH Selection\
    \ ..................26\n           5.1.2. Information Carried by Eligible UMH\
    \ Routes .........26\n           5.1.3. Selecting the Upstream PE ..........................27\n\
    \           5.1.4. Selecting the Upstream Multicast Hop ...............29\n  \
    \    5.2. Details of Per-MVPN Full PIM Peering over MI-PMSI .........29\n    \
    \       5.2.1. PIM C-Instance Control Packets .....................29\n      \
    \     5.2.2. PIM C-Instance Reverse Path Forwarding\n                  (RPF) Determination\
    \ ................................30\n      5.3. Use of BGP for Carrying C-Multicast\
    \ Routing ...............31\n           5.3.1. Sending BGP Updates ................................31\n\
    \           5.3.2. Explicit Tracking ..................................32\n  \
    \         5.3.3. Withdrawing BGP Updates ............................32\n    \
    \       5.3.4. BSR ................................................33\n   6. PMSI\
    \ Instantiation .............................................33\n      6.1. Use\
    \ of the Intra-AS I-PMSI A-D Route ......................34\n           6.1.1.\
    \ Sending Intra-AS I-PMSI A-D Routes .................34\n           6.1.2. Receiving\
    \ Intra-AS I-PMSI A-D Routes ...............35\n      6.2. When C-flows Are Specifically\
    \ Bound to P-Tunnels ..........35\n      6.3. Aggregating Multiple MVPNs on a\
    \ Single P-Tunnel ...........35\n           6.3.1. Aggregate Tree Leaf Discovery\
    \ ......................36\n           6.3.2. Aggregation Methodology ............................36\n\
    \           6.3.3. Demultiplexing C-Multicast Traffic .................37\n  \
    \    6.4. Considerations for Specific Tunnel Technologies ...........38\n    \
    \       6.4.1. RSVP-TE P2MP LSPs ..................................39\n      \
    \     6.4.2. PIM Trees ..........................................41\n        \
    \   6.4.3. mLDP P2MP LSPs .....................................42\n          \
    \ 6.4.4. mLDP MP2MP LSPs ....................................42\n           6.4.5.\
    \ Ingress Replication ................................42\n   7. Binding Specific\
    \ C-Flows to Specific P-Tunnels .................44\n      7.1. General Considerations\
    \ ....................................45\n           7.1.1. At the PE Transmitting\
    \ the C-Flow on the P-Tunnel ..45\n           7.1.2. At the PE Receiving the C-flow\
    \ from the P-Tunnel ...46\n      7.2. Optimizing Multicast Distribution via S-PMSIs\
    \ .............48\n      7.3. Announcing the Presence of Unsolicited Flooded Data\
    \ .......49\n      7.4. Protocols for Binding C-Flows to P-Tunnels ................50\n\
    \           7.4.1. Using BGP S-PMSI A-D Routes ........................50\n  \
    \                7.4.1.1. Advertising C-Flow Binding to P-Tunnel ....50\n    \
    \              7.4.1.2. Explicit Tracking .........................51\n      \
    \     7.4.2. UDP-Based Protocol .................................52\n        \
    \          7.4.2.1. Advertising C-Flow Binding to P-Tunnel ....52\n          \
    \        7.4.2.2. Packet Formats and Constants ..............53\n           7.4.3.\
    \ Aggregation ........................................55\n   8. Inter-AS Procedures\
    \ ............................................55\n      8.1. Non-Segmented Inter-AS\
    \ P-Tunnels ..........................56\n           8.1.1. Inter-AS MVPN Auto-Discovery\
    \ .......................56\n           8.1.2. Inter-AS MVPN Routing Information\
    \ Exchange .........56\n           8.1.3. Inter-AS P-Tunnels .................................57\n\
    \                  8.1.3.1. PIM-Based Inter-AS P-Multicast Trees ......57\n  \
    \                8.1.3.2. The PIM MVPN Join Attribute ...............58\n    \
    \                       8.1.3.2.1. Definition .....................58\n      \
    \                     8.1.3.2.2. Usage ..........................59\n      8.2.\
    \ Segmented Inter-AS P-Tunnels ..............................60\n   9. Preventing\
    \ Duplication of Multicast Data Packets ...............60\n      9.1. Methods\
    \ for Ensuring Non-Duplication ......................61\n           9.1.1. Discarding\
    \ Packets from Wrong PE ...................62\n           9.1.2. Single Forwarder\
    \ Selection .........................63\n           9.1.3. Native PIM Methods\
    \ .................................63\n      9.2. Multihomed C-S or C-RP ....................................63\n\
    \      9.3. Switching from the C-RP Tree to the C-S Tree ..............63\n  \
    \         9.3.1. How Duplicates Can Occur ...........................63\n    \
    \       9.3.2. Solution Using Source Active A-D Routes ............65\n   10.\
    \ Eliminating PE-PE Distribution of (C-*,C-G) State .............67\n      10.1.\
    \ Co-Locating C-RPs on a PE ................................68\n           10.1.1.\
    \ Initial Configuration .............................68\n           10.1.2. Anycast\
    \ RP Based on Propagating Active Sources ....68\n                  10.1.2.1. Receiver(s)\
    \ within a Site ................69\n                  10.1.2.2. Source within\
    \ a Site .....................69\n                  10.1.2.3. Receiver Switching\
    \ from Shared to\n                            Source Tree ..............................69\n\
    \      10.2. Using MSDP between a PE and a Local C-RP .................69\n  \
    \ 11. Support for PIM-BIDIR C-Groups ................................71\n    \
    \  11.1. The VPN Backbone Becomes the RPL .........................72\n      \
    \     11.1.1. Control Plane .....................................72\n        \
    \   11.1.2. Data Plane ........................................73\n      11.2.\
    \ Partitioned Sets of PEs ..................................73\n           11.2.1.\
    \ Partitions ........................................73\n           11.2.2. Using\
    \ PE Distinguisher Labels .....................74\n           11.2.3. Partial\
    \ Mesh of MP2MP P-Tunnels ...................75\n   12. Encapsulations ................................................75\n\
    \      12.1. Encapsulations for Single PMSI per P-Tunnel ..............75\n  \
    \         12.1.1. Encapsulation in GRE ..............................75\n    \
    \       12.1.2. Encapsulation in IP ...............................76\n      \
    \     12.1.3. Encapsulation in MPLS .............................77\n      12.2.\
    \ Encapsulations for Multiple PMSIs per P-Tunnel ...........78\n           12.2.1.\
    \ Encapsulation in GRE ..............................78\n           12.2.2. Encapsulation\
    \ in IP ...............................78\n      12.3. Encapsulations Identifying\
    \ a Distinguished PE ............78\n           12.3.1. For MP2MP LSP P-Tunnels\
    \ ...........................78\n           12.3.2. For Support of PIM-BIDIR C-Groups\
    \ .................79\n      12.4. General Considerations for IP and GRE Encapsulations\
    \ .....79\n           12.4.1. MTU (Maximum Transmission Unit) ...................79\n\
    \           12.4.2. TTL (Time to Live) ................................80\n  \
    \         12.4.3. Avoiding Conflict with Internet Multicast .........80\n    \
    \  12.5. Differentiated Services ..................................81\n   13.\
    \ Security Considerations .......................................81\n   14. IANA\
    \ Considerations ...........................................83\n   15. Acknowledgments\
    \ ...............................................83\n   16. References ....................................................84\n\
    \      16.1. Normative References .....................................84\n  \
    \    16.2. Informative References ...................................85\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC4364] specifies the set of procedures that a Service\
    \ Provider\n   (SP) must implement in order to provide a particular kind of VPN\n\
    \   service (\"BGP/MPLS IP VPN\") for its customers.  The service described\n\
    \   therein allows IP unicast packets to travel from one customer site to\n  \
    \ another, but it does not provide a way for IP multicast traffic to\n   travel\
    \ from one customer site to another.\n   This document extends the service defined\
    \ in [RFC4364] so that it\n   also includes the capability of handling IP multicast\
    \ traffic.  This\n   requires a number of different protocols to work together.\
    \  The\n   document provides a framework describing how the various protocols\n\
    \   fit together, and it also provides a detailed specification of some\n   of\
    \ the protocols.  The detailed specification of some of the other\n   protocols\
    \ is found in preexisting documents or in companion\n   documents.\n   A BGP/MPLS\
    \ IP VPN service that supports multicast is known as a\n   \"Multicast VPN\" or\
    \ \"MVPN\".\n   Both this document and its companion document [MVPN-BGP] discuss\
    \ the\n   use of various BGP messages and procedures to provide MVPN support.\n\
    \   While every effort has been made to ensure that the two documents are\n  \
    \ consistent with each other, it is possible that discrepancies have\n   crept\
    \ in.  In the event of any conflict or other discrepancy with\n   respect to the\
    \ use of BGP in support of MVPN service, [MVPN-BGP] is\n   to be considered to\
    \ be the authoritative document.\n   Throughout this document, we will use the\
    \ term \"VPN-IP route\" to mean\n   a route that is either in the VPN-IPv4 address\
    \ family [RFC4364] or in\n   the VPN-IPv6 address family [RFC4659].\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Overview
  contents:
  - '2.  Overview

    '
- title: 2.1.  Optimality vs. Scalability
  contents:
  - "2.1.  Optimality vs. Scalability\n   In a \"BGP/MPLS IP VPN\" [RFC4364], unicast\
    \ routing of VPN packets is\n   achieved without the need to keep any per-VPN\
    \ state in the core of\n   the SP's network (the \"P routers\").  Routing information\
    \ from a\n   particular VPN is maintained only by the Provider Edge routers (the\n\
    \   \"PE routers\", or \"PEs\") that attach directly to sites of that VPN.\n \
    \  Customer data travels through the P routers in tunnels from one PE to\n   another\
    \ (usually MPLS Label Switched Paths, LSPs), so to support the\n   VPN service\
    \ the P routers only need to have routes to the PE routers.\n   The PE-to-PE routing\
    \ is optimal, but the amount of associated state\n   in the P routers depends\
    \ only on the number of PEs, not on the number\n   of VPNs.\n   However, in order\
    \ to provide optimal multicast routing for a\n   particular multicast flow, the\
    \ P routers through which that flow\n   travels have to hold state that is specific\
    \ to that flow.  A\n   multicast flow is identified by the (source, group) tuple\
    \ where the\n   source is the IP address of the sender and the group is the IP\n\
    \   multicast group address of the destination.  Scalability would be\n   poor\
    \ if the amount of state in the P routers were proportional to the\n   number\
    \ of multicast flows in the VPNs.  Therefore, when supporting\n   multicast service\
    \ for a BGP/MPLS IP VPN, the optimality of the\n   multicast routing must be traded\
    \ off against the scalability of the P\n   routers.  We explain this below in\
    \ more detail.\n   If a particular VPN is transmitting \"native\" multicast traffic\
    \ over\n   the backbone, we refer to it as an \"MVPN\".  By \"native\" multicast\n\
    \   traffic, we mean packets that a Customer Edge router (a \"CE router\"\n  \
    \ or \"CE\") sends to a PE, such that the IP destination address of the\n   packets\
    \ is a multicast group address, the packets are multicast\n   control packets\
    \ addressed to the PE router itself, or the packets are\n   IP multicast data\
    \ packets encapsulated in MPLS.\n   We say that the backbone multicast routing\
    \ for a particular multicast\n   group in a particular VPN is \"optimal\" if and\
    \ only if all of the\n   following conditions hold:\n     - When a PE router receives\
    \ a multicast data packet of that group\n       from a CE router, it transmits\
    \ the packet in such a way that the\n       packet is received by every other\
    \ PE router that is on the path\n       to a receiver of that group;\n     - The\
    \ packet is not received by any other PEs;\n     - While in the backbone, no more\
    \ than one copy of the packet ever\n       traverses any link.\n     - While in\
    \ the backbone, if bandwidth usage is to be optimized, the\n       packet traverses\
    \ minimum cost trees rather than shortest path\n       trees.\n   Optimal routing\
    \ for a particular multicast group requires that the\n   backbone maintain one\
    \ or more source trees that are specific to that\n   flow.  Each such tree requires\
    \ that state be maintained in all the P\n   routers that are in the tree.\n  \
    \ Potentially, this would require an unbounded amount of state in the P\n   routers,\
    \ since the SP has no control of the number of multicast\n   groups in the VPNs\
    \ that it supports.  The SP also doesn't have any\n   control over the number\
    \ of transmitters in each group, nor over the\n   distribution of the receivers.\n\
    \   The procedures defined in this document allow an SP to provide\n   multicast\
    \ VPN service, without requiring the amount of state\n   maintained by the P routers\
    \ to be proportional to the number of\n   multicast data flows in the VPNs.  The\
    \ amount of state is traded off\n   against the optimality of the multicast routing.\
    \  Enough flexibility\n   is provided so that a given SP can make his own trade-offs\
    \ between\n   scalability and optimality.  An SP can even allow some multicast\n\
    \   groups in some VPNs to receive optimal routing, while others do not.\n   Of\
    \ course, the cost of this flexibility is an increase in the number\n   of options\
    \ provided by the protocols.\n   The basic technique for providing scalability\
    \ is to aggregate a\n   number of customer multicast flows onto a single multicast\n\
    \   distribution tree through the P routers.  A number of aggregation\n   methods\
    \ are supported.\n   The procedures defined in this document also accommodate\
    \ the SP that\n   does not want to build multicast distribution trees in his backbone\n\
    \   at all; the ingress PE can replicate each multicast data packet and\n   then\
    \ unicast each replica through a tunnel to each egress PE that\n   needs to receive\
    \ the data.\n"
- title: 2.1.1.  Multicast Distribution Trees
  contents:
  - "2.1.1.  Multicast Distribution Trees\n   This document supports the use of a\
    \ single multicast distribution\n   tree in the backbone to carry all the multicast\
    \ traffic from a\n   specified set of one or more MVPNs.  Such a tree is referred\
    \ to as an\n   \"Inclusive Tree\".  An Inclusive Tree that carries the traffic\
    \ of more\n   than one MVPN is an \"Aggregate Inclusive Tree\".  An Inclusive\
    \ Tree\n   contains, as its members, all the PEs that attach to any of the MVPNs\n\
    \   using the tree.\n   With this option, even if each tree supports only one\
    \ MVPN, the upper\n   bound on the amount of state maintained by the P routers\
    \ is\n   proportional to the number of VPNs supported rather than to the\n   number\
    \ of multicast flows in those VPNs.  If the trees are\n   unidirectional, it would\
    \ be more accurate to say that the state is\n   proportional to the product of\
    \ the number of VPNs and the average\n   number of PEs per VPN.  The amount of\
    \ state maintained by the P\n   routers can be further reduced by aggregating\
    \ more MVPNs onto a\n   single tree.  If each such tree supports a set of MVPNs,\
    \ (call it an\n   \"MVPN aggregation set\"), the state maintained by the P routers\
    \ is\n   proportional to the product of the number of MVPN aggregation sets\n\
    \   and the average number of PEs per MVPN.  Thus, the state does not\n   grow\
    \ linearly with the number of MVPNs.\n   However, as data from many multicast\
    \ groups is aggregated together\n   onto a single Inclusive Tree, it is likely\
    \ that some PEs will receive\n   multicast data for which they have no need, i.e.,\
    \ some degree of\n   optimality has been sacrificed.\n   This document also provides\
    \ procedures that enable a single multicast\n   distribution tree in the backbone\
    \ to be used to carry traffic\n   belonging only to a specified set of one or\
    \ more multicast groups,\n   from one or more MVPNs.  Such a tree is referred\
    \ to as a \"Selective\n   Tree\" and more specifically as an \"Aggregate Selective\
    \ Tree\" when the\n   multicast groups belong to different MVPNs.  By default,\
    \ traffic from\n   most multicast groups could be carried by an Inclusive Tree,\
    \ while\n   traffic from, e.g., high bandwidth groups could be carried in one\
    \ of\n   the Selective Trees.  When setting up the Selective Trees, one should\n\
    \   include only those PEs that need to receive multicast data from one\n   or\
    \ more of the groups assigned to the tree.  This provides more\n   optimal routing\
    \ than can be obtained by using only Inclusive Trees,\n   though it requires additional\
    \ state in the P routers.\n"
- title: 2.1.2.  Ingress Replication through Unicast Tunnels
  contents:
  - "2.1.2.  Ingress Replication through Unicast Tunnels\n   This document also provides\
    \ procedures for carrying MVPN data traffic\n   through unicast tunnels from the\
    \ ingress PE to each of the egress\n   PEs.  The ingress PE replicates the multicast\
    \ data packet received\n   from a CE and sends it to each of the egress PEs using\
    \ the unicast\n   tunnels.  This requires no multicast routing state in the P\
    \ routers\n   at all, but it puts the entire replication load on the ingress PE\n\
    \   router and makes no attempt to optimize the multicast routing.\n"
- title: 2.2.  Multicast Routing Adjacencies
  contents:
  - "2.2.  Multicast Routing Adjacencies\n   In BGP/MPLS IP VPNs [RFC4364], each CE\
    \ (Customer Edge) router is a\n   unicast routing adjacency of a PE router, but\
    \ CE routers at different\n   sites do not become unicast routing adjacencies\
    \ of each other.  This\n   important characteristic is retained for multicast\
    \ routing -- a CE\n   router becomes a multicast routing adjacency of a PE router,\
    \ but CE\n   routers at different sites do not become multicast routing\n   adjacencies\
    \ of each other.\n   We will use the term \"C-tree\" to refer to a multicast distribution\n\
    \   tree whose nodes include CE routers.  (See Section 3.1 for further\n   explication\
    \ of this terminology.)\n   The multicast routing protocol on the PE-CE link is\
    \ presumed to be\n   PIM (Protocol Independent Multicast) [PIM-SM].  Both the\
    \ ASM (Any-\n   Source Multicast) and the SSM (Source-Specific Multicast) service\n\
    \   models are supported.  Thus, both shared C-trees and source-specific\n   C-trees\
    \ are supported.  Shared C-trees may be unidirectional or\n   bidirectional; in\
    \ the latter case, the multicast routing protocol is\n   presumed to be the BIDIR-PIM\
    \ [BIDIR-PIM] \"variant\" of PIM-SM.  A CE\n   router exchanges \"ordinary\" PIM\
    \ control messages with the PE router\n   to which it is attached.\n   Support\
    \ for PIM-DM (Dense Mode) is outside the scope of this\n   document.\n   The PEs\
    \ attaching to a particular MVPN then have to exchange the\n   multicast routing\
    \ information with each other.  Two basic methods for\n   doing this are defined:\
    \ (1) PE-PE PIM and (2) BGP.  In the former\n   case, the PEs need to be multicast\
    \ routing adjacencies of each other.\n   In the latter case, they do not.  For\
    \ example, each PE may be a BGP\n   adjacency of a route reflector (RR) and not\
    \ of any other PEs.\n   In order to support the \"Carrier's Carrier\" model of\
    \ [RFC4364], mLDP\n   (Label Distribution Protocol Extensions for Multipoint Label\
    \ Switched\n   Paths) [MLDP] may also be supported on the PE-CE interface.  The\
    \ use\n   of mLDP on the PE-CE interface is described in [MVPN-BGP].  The use\n\
    \   of BGP on the PE-CE interface is not within the scope of this\n   document.\n"
- title: 2.3.  MVPN Definition
  contents:
  - "2.3.  MVPN Definition\n   An MVPN is defined by two sets of sites: the Sender\
    \ Sites set and the\n   Receiver Sites set, with the following properties:\n \
    \    - Hosts within the Sender Sites set could originate multicast\n       traffic\
    \ for receivers in the Receiver Sites set.\n     - Receivers not in the Receiver\
    \ Sites set should not be able to\n       receive this traffic.\n     - Hosts\
    \ within the Receiver Sites set could receive multicast\n       traffic originated\
    \ by any host in the Sender Sites set.\n     - Hosts within the Receiver Sites\
    \ set should not be able to receive\n       multicast traffic originated by any\
    \ host that is not in the\n       Sender Sites set.\n   A site could be both in\
    \ the Sender Sites set and Receiver Sites set,\n   which implies that hosts within\
    \ such a site could both originate and\n   receive multicast traffic.  An extreme\
    \ case is when the Sender Sites\n   set is the same as the Receiver Sites set,\
    \ in which case all sites\n   could originate and receive multicast traffic from\
    \ each other.\n   Sites within a given MVPN may be either within the same organization\n\
    \   or in different organizations, which implies that an MVPN can be\n   either\
    \ an Intranet or an Extranet.\n   A given site may be in more than one MVPN, which\
    \ implies that MVPNs\n   may overlap.\n   Not all sites of a given MVPN have to\
    \ be connected to the same\n   service provider, which implies that an MVPN can\
    \ span multiple\n   service providers.\n   Another way to look at MVPN is to say\
    \ that an MVPN is defined by a\n   set of administrative policies.  Such policies\
    \ determine both the\n   Sender Sites set and Receiver Sites set.  Such policies\
    \ are\n   established by MVPN customers, but implemented/realized by MVPN\n  \
    \ Service Providers using the existing BGP/MPLS VPN mechanisms, such as\n   Route\
    \ Targets (RTs), with extensions, as necessary.\n"
- title: 2.4.  Auto-Discovery
  contents:
  - "2.4.  Auto-Discovery\n   In order for the PE routers attaching to a given MVPN\
    \ to exchange\n   MVPN control information with each other, each one needs to\
    \ discover\n   all the other PEs that attach to the same MVPN.  (Strictly speaking,\n\
    \   a PE in the Receiver Sites set need only discover the other PEs in\n   the\
    \ Sender Sites set, and a PE in the Sender Sites set need only\n   discover the\
    \ other PEs in the Receiver Sites set.) This is referred\n   to as \"MVPN Auto-Discovery\"\
    .\n   This document discusses two ways of providing MVPN auto-discovery:\n   \
    \  - BGP can be used for discovering and maintaining MVPN membership.\n      \
    \ The PE routers advertise their MVPN membership to other PE\n       routers using\
    \ BGP.  A PE is considered to be a \"member\" of a\n       particular MVPN if\
    \ it contains a VRF (Virtual Routing and\n       Forwarding table, see [RFC4364])\
    \ that is configured to contain\n       the multicast routing information of that\
    \ MVPN.  This auto-\n       discovery option does not make any assumptions about\
    \ the methods\n       used for transmitting MVPN multicast data packets through\
    \ the\n       backbone.\n     - If it is known that the PE-PE multicast control\
    \ packets (i.e.,\n       PIM packets) of a particular MVPN are to be transmitted\
    \ through a\n       non-aggregated Inclusive Tree supporting the ASM service model\n\
    \       (e.g., through a tree that is created by non-SSM PIM-SM or by\n      \
    \ BIDIR-PIM), and if the PEs attaching to that MVPN are configured\n       with\
    \ the group address corresponding to that tree, then the PEs\n       can auto-discover\
    \ each other simply by joining the tree and then\n       multicasting PIM Hellos\
    \ over the tree.\n"
- title: 2.5.  PE-PE Multicast Routing Information
  contents:
  - "2.5.  PE-PE Multicast Routing Information\n   The BGP/MPLS IP VPN [RFC4364] specification\
    \ requires a PE to\n   maintain, at most, one BGP peering with every other PE\
    \ in the\n   network.  This peering is used to exchange VPN routing information.\n\
    \   The use of route reflectors further reduces the number of BGP\n   adjacencies\
    \ maintained by a PE to exchange VPN routing information\n   with other PEs. \
    \ This document describes various options for\n   exchanging MVPN control information\
    \ between PE routers based on the\n   use of PIM or BGP.  These options have different\
    \ overheads with\n   respect to the number of routing adjacencies that a PE router\
    \ needs\n   to maintain to exchange MVPN control information with other PE\n \
    \  routers.  Some of these options allow the retention of the unicast\n   BGP/MPLS\
    \ VPN model letting a PE maintain, at most, one BGP routing\n   adjacency with\
    \ other PE routers to exchange MVPN control information.\n   BGP also provides\
    \ reliable transport and uses incremental updates.\n   Another option is the use\
    \ of the currently existing \"soft state\" PIM\n   standard [PIM-SM] that uses\
    \ periodic complete updates.\n"
- title: 2.6.  PE-PE Multicast Data Transmission
  contents:
  - "2.6.  PE-PE Multicast Data Transmission\n   Like [RFC4364], this document decouples\
    \ the procedures for exchanging\n   routing information from the procedures for\
    \ transmitting data\n   traffic.  Hence, a variety of transport technologies may\
    \ be used in\n   the backbone.  For Inclusive Trees, these transport technologies\n\
    \   include unicast PE-PE tunnels, using encapsulation in MPLS, IP, or\n   GRE\
    \ (Generic Routing Encapsulation), multicast distribution trees\n   created by\
    \ PIM (either unidirectional in the SSM or ASM service\n   models or bidirectional)\
    \ using IP/GRE encapsulation, point-to-\n   multipoint LSPs created by RSVP -\
    \ Traffic Engineering (RSVP-TE) or\n   mLDP, and multipoint-to-multipoint LSPs\
    \ created by mLDP.\n   In order to aggregate traffic from multiple MVPNs onto\
    \ a single\n   multicast distribution tree, it is necessary to have a mechanism\
    \ to\n   enable the egresses of the tree to demultiplex the multicast traffic\n\
    \   received over the tree and to associate each received packet with a\n   particular\
    \ MVPN.  This document specifies a mechanism whereby\n   upstream label assignment\
    \ [MPLS-UPSTREAM-LABEL] is used by the root\n   of the tree to assign a label\
    \ to each flow.  This label is used by\n   the receivers to perform the demultiplexing.\
    \  This document also\n   describes procedures based on BGP that are used by the\
    \ root of an\n   Aggregate Tree to advertise the Inclusive and/or Selective binding\n\
    \   and the demultiplexing information to the leaves of the tree.\n   This document\
    \ also describes the data plane encapsulations for\n   supporting the various\
    \ SP multicast transport options.\n   The specification for aggregating traffic\
    \ of multiple MVPNs onto a\n   single multipoint-to-multipoint LSP or onto a single\
    \ bidirectional\n   multicast distribution tree is outside the scope of this document.\n\
    \   The specifications for using, as Selective Trees, multicast\n   distribution\
    \ trees that support the ASM service model are outside the\n   scope of this document.\
    \  The specification for using multipoint-to-\n   multipoint LSPs as Selective\
    \ Trees is outside the scope of this\n   document.\n   This document assumes that\
    \ when SP multicast trees are used, traffic\n   for a particular multicast group\
    \ is transmitted by a particular PE on\n   only one SP multicast tree.  The use\
    \ of multiple SP multicast trees\n   for transmitting traffic belonging to a particular\
    \ multicast group is\n   outside the scope of this document.\n"
- title: 2.7.  Inter-AS MVPNs
  contents:
  - "2.7.  Inter-AS MVPNs\n   [RFC4364] describes different options for supporting\
    \ BGP/MPLS IP\n   unicast VPNs whose provider backbones contain more than one\n\
    \   Autonomous System (AS).  These are known as \"inter-AS VPNs\".  In an\n  \
    \ inter-AS VPN, the ASes may belong to the same provider or to\n   different providers.\
    \  This document describes how inter-AS MVPNs can\n   be supported for each of\
    \ the unicast BGP/MPLS VPN inter-AS options.\n   This document also specifies\
    \ a model where inter-AS MVPN service can\n   be offered without requiring a single\
    \ SP multicast tree to span\n   multiple ASes.  In this model, an inter-AS multicast\
    \ tree consists of\n   a number of \"segments\", one per AS, that are stitched\
    \ together at AS\n   boundary points.  These are known as \"segmented inter-AS\
    \ trees\".\n   Each segment of a segmented inter-AS tree may use a different\n\
    \   multicast transport technology.\n   It is also possible to support inter-AS\
    \ MVPNs with non-segmented\n   source trees that extend across AS boundaries.\n"
- title: 2.8.  Optionally Eliminating Shared Tree State
  contents:
  - "2.8.  Optionally Eliminating Shared Tree State\n   This document also discusses\
    \ some options and protocol extensions\n   that can be used to eliminate the need\
    \ for the PE routers to\n   distribute to each other the (*,G) and (*,G,rpt) states\
    \ that occur\n   when the VPNs are creating unidirectional C-trees to support\
    \ the ASM\n   service model.\n"
- title: 3.  Concepts and Framework
  contents:
  - '3.  Concepts and Framework

    '
- title: 3.1.  PE-CE Multicast Routing
  contents:
  - "3.1.  PE-CE Multicast Routing\n   Support of multicast in BGP/MPLS IP VPNs is\
    \ modeled closely after the\n   support of unicast in BGP/MPLS IP VPNs.  That\
    \ is, a multicast routing\n   protocol will be run on the PE-CE interfaces, such\
    \ that PE and CE are\n   multicast routing adjacencies on that interface.  CEs\
    \ at different\n   sites do not become multicast routing adjacencies of each other.\n\
    \   If a PE attaches to n VPNs for which multicast support is provided\n   (i.e.,\
    \ to n \"MVPNs\"), the PE will run n independent instances of a\n   multicast\
    \ routing protocol.  We will refer to these multicast routing\n   instances as\
    \ \"VPN-specific multicast routing instances\", or more\n   briefly as \"multicast\
    \ C-instances\".  The notion of a \"VRF\" (VPN\n   Routing and Forwarding Table),\
    \ defined in [RFC4364], is extended to\n   include multicast routing entries as\
    \ well as unicast routing entries.\n   Each multicast routing entry is thus associated\
    \ with a particular\n   VRF.\n   Whether a particular VRF belongs to an MVPN or\
    \ not is determined by\n   configuration.\n   In this document, we do not attempt\
    \ to provide support for every\n   possible multicast routing protocol that could\
    \ possibly run on the\n   PE-CE link.  Rather, we consider multicast C-instances\
    \ only for the\n   following multicast routing protocols:\n     - PIM Sparse Mode\
    \ (PIM-SM), supporting the ASM service model\n     - PIM Sparse Mode, supporting\
    \ the SSM service model\n     - PIM Bidirectional Mode (BIDIR-PIM), which uses\
    \ bidirectional\n       C-trees to support the ASM service model.\n   In order\
    \ to support the \"Carrier's Carrier\" model of [RFC4364], mLDP\n   may also be\
    \ supported on the PE-CE interface.  The use of mLDP on the\n   PE-CE interface\
    \ is described in [MVPN-BGP].\n   The use of BGP on the PE-CE interface is not\
    \ within the scope of this\n   document.\n   As the only multicast C-instances\
    \ discussed by this document are PIM-\n   based C-instances, we will generally\
    \ use the term \"PIM C-instances\"\n   to refer to the multicast C-instances.\n\
    \   A PE router may also be running a \"provider-wide\" instance of PIM, (a\n\
    \   \"PIM P-instance\"), in which it has a PIM adjacency with, e.g., each\n  \
    \ of its IGP neighbors (i.e., with P routers), but NOT with any CE\n   routers,\
    \ and not with other PE routers (unless another PE router\n   happens to be an\
    \ IGP adjacency).  In this case, P routers would also\n   run the P-instance of\
    \ PIM but NOT a C-instance.  If there is a PIM\n   P-instance, it may or may not\
    \ have a role to play in the support of\n   VPN multicast; this is discussed in\
    \ later sections.  However, in no\n   case will the PIM P-instance contain VPN-specific\
    \ multicast routing\n   information.\n   In order to help clarify when we are\
    \ speaking of the PIM P-instance\n   and when we are speaking of a PIM C-instance,\
    \ we will also apply the\n   prefixes \"P-\" and \"C-\", respectively, to control\
    \ messages, addresses,\n   etc.  Thus, a P-Join would be a PIM Join that is processed\
    \ by the PIM\n   P-instance, and a C-Join would be a PIM Join that is processed\
    \ by a\n   C-instance.  A P-group address would be a group address in the SP's\n\
    \   address space, and a C-group address would be a group address in a\n   VPN's\
    \ address space.  A C-tree is a multicast distribution tree\n   constructed and\
    \ maintained by the PIM C-instances.  A C-flow is a\n   stream of multicast packets\
    \ with a common C-source address and a\n   common C-group address.  We will use\
    \ the notation \"(C-S,C-G)\" to\n   identify specific C-flows.  If a particular\
    \ C-tree is a shared tree\n   (whether unidirectional or bidirectional) rather\
    \ than a source-\n   specific tree, we will sometimes speak of the entire set\
    \ of flows\n   traveling that tree, identifying the set as \"(C-*,C-G)\".\n"
- title: 3.2.  P-Multicast Service Interfaces (PMSIs)
  contents:
  - "3.2.  P-Multicast Service Interfaces (PMSIs)\n   A PE must have the ability to\
    \ forward multicast data packets received\n   from a CE to one or more of the\
    \ other PEs in the same MVPN for\n   delivery to one or more other CEs.\n   We\
    \ define the notion of a \"P-Multicast Service Interface\" (PMSI).  If\n   a particular\
    \ MVPN is supported by a particular set of PE routers,\n   then there will be\
    \ one or more PMSIs connecting those PE routers\n   and/or subsets thereof.  A\
    \ PMSI is a conceptual \"overlay\" on the\n   P-network with the following property:\
    \ a PE in a given MVPN can give\n   a packet to the PMSI, and the packet will\
    \ be delivered to some or all\n   of the other PEs in the MVPN, such that any\
    \ PE receiving the packet\n   will be able to determine the MVPN to which the\
    \ packet belongs.\n   As we discuss below, a PMSI may be instantiated by a number\
    \ of\n   different transport mechanisms, depending on the particular\n   requirements\
    \ of the MVPN and of the SP.  We will refer to these\n   transport mechanisms\
    \ as \"P-tunnels\".\n   For each MVPN, there are one or more PMSIs that are used\
    \ for\n   transmitting the MVPN's multicast data from one PE to others.  We\n\
    \   will use the term \"PMSI\" such that a single PMSI belongs to a single\n \
    \  MVPN.  However, the transport mechanism that is used to instantiate a\n   PMSI\
    \ may allow a single P-tunnel to carry the data of multiple PMSIs.\n   In this\
    \ document, we make a clear distinction between the multicast\n   service (the\
    \ PMSI) and its instantiation.  This allows us to separate\n   the discussion\
    \ of different services from the discussion of different\n   instantiations of\
    \ each service.  The term \"P-tunnel\" is used to refer\n   to the transport mechanism\
    \ that instantiates a service.\n   PMSIs are used to carry C-multicast data traffic.\
    \  The C-multicast\n   data traffic travels along a C-tree, but in the SP backbone\
    \ all\n   C-trees are tunneled through P-tunnels.  Thus, we will sometimes talk\n\
    \   of a P-tunnel carrying one or more C-trees.\n   Some of the options for passing\
    \ multicast control traffic among the\n   PEs do so by sending the control traffic\
    \ through a PMSI; other\n   options do not send control traffic through a PMSI.\n"
- title: 3.2.1.  Inclusive and Selective PMSIs
  contents:
  - "3.2.1.  Inclusive and Selective PMSIs\n   We will distinguish between three different\
    \ kinds of PMSIs:\n     - \"Multidirectional Inclusive\" PMSI (MI-PMSI)\n    \
    \   A Multidirectional Inclusive PMSI is one that enables ANY PE\n       attaching\
    \ to a particular MVPN to transmit a message such that it\n       will be received\
    \ by EVERY other PE attaching to that MVPN.\n       There is, at most, one MI-PMSI\
    \ per MVPN.  (Though the P-tunnel or\n       P-tunnels that instantiate an MI-PMSI\
    \ may actually carry the data\n       of more than one PMSI.)\n       An MI-PMSI\
    \ can be thought of as an overlay broadcast network\n       connecting the set\
    \ of PEs supporting a particular MVPN.\n     - \"Unidirectional Inclusive\" PMSI\
    \ (UI-PMSI)\n       A Unidirectional Inclusive PMSI is one that enables a particular\n\
    \       PE, attached to a particular MVPN, to transmit a message such\n      \
    \ that it will be received by all the other PEs attaching to that\n       MVPN.\
    \  There is, at most, one UI-PMSI per PE per MVPN, though the\n       P-tunnel\
    \ that instantiates a UI-PMSI may, in fact, carry the data\n       of more than\
    \ one PMSI.\n     - \"Selective\" PMSI (S-PMSI).\n       A Selective PMSI is one\
    \ that provides a mechanism wherein a\n       particular PE in an MVPN can multicast\
    \ messages so that they will\n       be received by a subset of the other PEs\
    \ of that MVPN.  There may\n       be an arbitrary number of S-PMSIs per PE per\
    \ MVPN.  The P-tunnel\n       that instantiates a given S-PMSI may carry data\
    \ from multiple\n       S-PMSIs.\n   In later sections, we describe the role played\
    \ by these different\n   kinds of PMSIs.  We will use the term \"I-PMSI\" when\
    \ we are not\n   distinguishing between \"MI-PMSIs\" and \"UI-PMSIs\".\n"
- title: 3.2.2.  P-Tunnels Instantiating PMSIs
  contents:
  - "3.2.2.  P-Tunnels Instantiating PMSIs\n   The P-tunnels that are used to instantiate\
    \ PMSIs will be referred to\n   as \"P-tunnels\".  A number of different tunnel\
    \ setup techniques can be\n   used to create the P-tunnels that instantiate the\
    \ PMSIs.  Among these\n   are the following:\n     - PIM\n       A PMSI can be\
    \ instantiated as (a set of) Multicast Distribution\n       trees created by the\
    \ PIM P-instance (\"P-trees\").\n       The multicast distribution trees that\
    \ instantiate I-PMSIs may be\n       either shared trees or source-specific trees.\n\
    \       This document (along with [MVPN-BGP]) specifies procedures for\n     \
    \  identifying a particular (C-S,C-G) flow and assigning it to a\n       particular\
    \ S-PMSI.  Such an S-PMSI is most naturally instantiated\n       as a source-specific\
    \ tree.\n       The use of shared trees (including bidirectional trees) to\n \
    \      instantiate S-PMSIs is outside the scope of this document.\n       The\
    \ use of PIM-DM to create P-tunnels is not supported.\n       P-tunnels may be\
    \ shared by multiple MVPNs (i.e., a given P-tunnel\n       may be the instantiation\
    \ of multiple PMSIs), as long as the\n       tunnel encapsulation provides some\
    \ means of demultiplexing the\n       data traffic by MVPN.\n     - mLDP\n   \
    \    mLDP Point-to-Multipoint (P2MP) LSPs or Multipoint-to-Multipoint\n      \
    \ (MP2MP) LSPs can be used to instantiate I-PMSIs.\n       An S-PMSI or a UI-PMSI\
    \ could be instantiated as a single mLDP\n       P2MP LSP, whereas an MI-PMSI\
    \ would have to be instantiated as a\n       set of such LSPs (each PE in the\
    \ MVPN being the root of one such\n       LSP) or as a single MP2MP LSP.\n   \
    \    Procedures for sharing MP2MP LSPs across multiple MVPNs are\n       outside\
    \ the scope of this document.\n       The use of MP2MP LSPs to instantiate S-PMSIs\
    \ is outside the scope\n       of this document.\n       Section 11.2.3 discusses\
    \ a way of using a partial mesh of MP2MP\n       LSPs to instantiate a PMSI. \
    \ However, a full specification of the\n       necessary procedures is outside\
    \ the scope of this document.\n     - RSVP-TE\n       A PMSI may be instantiated\
    \ as one or more RSVP-TE Point-to-\n       Multipoint (P2MP) LSPs.  An S-PMSI\
    \ or a UI-PMSI would be\n       instantiated as a single RSVP-TE P2MP LSP, whereas\
    \ a\n       Multidirectional Inclusive PMSI would be instantiated as a set of\n\
    \       such LSPs, one for each PE in the MVPN.  RSVP-TE P2MP LSPs can be\n  \
    \     shared across multiple MVPNs.\n     - A Mesh of Unicast P-Tunnels.\n   \
    \    If a PMSI is implemented as a mesh of unicast P-tunnels, a PE\n       wishing\
    \ to transmit a packet through the PMSI would replicate the\n       packet and\
    \ send a copy to each of the other PEs.\n       An MI-PMSI for a given MVPN can\
    \ be instantiated as a full mesh of\n       unicast P-tunnels among that MVPN's\
    \ PEs.  A UI-PMSI or an S-PMSI\n       can be instantiated as a partial mesh.\n\
    \   It can be seen that each method of implementing PMSIs has its own\n   area\
    \ of applicability.  Therefore, this specification allows for the\n   use of any\
    \ of these methods.  At first glance, this may seem like an\n   overabundance\
    \ of options.  However, the history of multicast\n   development and deployment\
    \ should make it clear that there is no one\n   option that is always acceptable.\
    \  The use of segmented inter-AS\n   trees does allow each SP to select the option\
    \ that it finds most\n   applicable in its own environment, without causing any\
    \ other SP to\n   choose that same option.\n   SPECIFYING THE CONDITIONS UNDER\
    \ WHICH A PARTICULAR TREE-BUILDING\n   METHOD IS APPLICABLE IS OUTSIDE THE SCOPE\
    \ OF THIS DOCUMENT.\n   The choice of the tunnel technique belongs to the sender\
    \ router and\n   is a local policy decision of that router.  The procedures defined\n\
    \   throughout this document do not mandate that the same tunnel\n   technique\
    \ be used for all P-tunnels going through a given provider\n   backbone.  However,\
    \ it is expected that any tunnel technique that can\n   be used by a PE for a\
    \ particular MVPN is also supported by all the\n   other PEs having VRFs for the\
    \ MVPN.  Moreover, the use of ingress\n   replication by any PE for an MVPN implies\
    \ that all other PEs MUST use\n   ingress replication for this MVPN.\n"
- title: 3.3.  Use of PMSIs for Carrying Multicast Data
  contents:
  - "3.3.  Use of PMSIs for Carrying Multicast Data\n   Each PE supporting a particular\
    \ MVPN must have a way of discovering\n   the following information:\n     - The\
    \ set of other PEs in its AS that are attached to sites of that\n       MVPN,\
    \ and the set of other ASes that have PEs attached to sites\n       of that MVPN.\
    \  However, if non-segmented inter-AS trees are used\n       (see Section 8.1),\
    \ then each PE needs to know the entire set of\n       PEs attached to sites of\
    \ that MVPN.\n     - If segmented inter-AS trees are to be used, the set of border\n\
    \       routers in its AS that support inter-AS connectivity for that\n      \
    \ MVPN.\n     - If the MVPN is configured to use an MI-PMSI, the information\n\
    \       needed to set up and to use the P-tunnels instantiating the\n       MI-PMSI.\n\
    \     - For each other PE, whether the PE supports Aggregate Trees for\n     \
    \  the MVPN, and if so, the demultiplexing information that must be\n       provided\
    \ so that the other PE can determine whether a packet that\n       it received\
    \ on an Aggregate Tree belongs to this MVPN.\n   In some cases, the information\
    \ above is provided by means of the BGP-\n   based auto-discovery procedures discussed\
    \ in Section 4 of this\n   document and in Section 9 of [MVPN-BGP].  In other\
    \ cases, this\n   information is provided after discovery is complete, by means\
    \ of\n   procedures discussed in Section 7.4.  In either case, the information\n\
    \   that is provided must be sufficient to enable the PMSI to be bound to\n  \
    \ the identified P-tunnel, to enable the P-tunnel to be created if it\n   does\
    \ not already exist, and to enable the different PMSIs that may\n   travel on\
    \ the same P-tunnel to be properly demultiplexed.\n   If an MVPN uses an MI-PMSI,\
    \ then the information needed to identify\n   the P-tunnels that instantiate the\
    \ MI-PMSI has to be known to the PEs\n   attached to the MVPN before any data\
    \ can be transmitted on the\n   MI-PMSI.  This information is either statically\
    \ configured or auto-\n   discovered (see Section 4).  The actual process of constructing\
    \ the\n   P-tunnels (e.g., via PIM, RSVP-TE, or mLDP) SHOULD occur as soon as\n\
    \   this information is known.\n   When MI-PMSIs are used, they may serve as the\
    \ default method of\n   carrying C-multicast data traffic.  When we say that an\
    \ MI-PMSI is\n   the \"default\" method of carrying C-multicast data traffic for\
    \ a\n   particular MVPN, we mean that it is not necessary to use any special\n\
    \   control procedures to bind a particular C-flow to the MI-PMSI; any\n   C-flows\
    \ that have not been bound to other PMSIs will be assumed to\n   travel through\
    \ the MI-PMSI.\n   There is no requirement to use MI-PMSIs as the default method\
    \ of\n   carrying C-flows.  It is possible to adopt a policy in which all\n  \
    \ C-flows are carried on UI-PMSIs or S-PMSIs.  In this case, if an\n   MI-PMSI\
    \ is not used for carrying routing information, it is not\n   needed at all.\n\
    \   Even when an MI-PMSI is used as the default method of carrying an\n   MVPN's\
    \ C-flows, if a particular C-flow has certain characteristics,\n   it may be desirable\
    \ to migrate it from the MI-PMSI to an S-PMSI.\n   These characteristics, as well\
    \ as the procedures for migrating a\n   C-flow from an MI-PMSI to an S-PMSI, are\
    \ discussed in Section 7.\n   Sometimes a set of C-flows are traveling the same,\
    \ shared, C-tree\n   (e.g., either unidirectional or bidirectional), and it may\
    \ be\n   desirable to move the whole set of C-flows as a unit to an S-PMSI.\n\
    \   Procedures for doing this are outside the scope of this\n   specification.\n\
    \   Some of the procedures for transmitting C-multicast routing\n   information\
    \ among the PEs require that the routing information be\n   sent over an MI-PMSI.\
    \  Other procedures do not use an MI-PMSI to\n   transmit the C-multicast routing\
    \ information.\n   For a given MVPN, whether an MI-PMSI is used to carry C-multicast\n\
    \   routing information is independent from whether an MI-PMSI is used as\n  \
    \ the default method of carrying the C-multicast data traffic.\n   As previously\
    \ stated, it is possible to send all C-flows on a set of\n   S-PMSIs, omitting\
    \ any usage of I-PMSIs.  This prevents PEs from\n   receiving data that they don't\
    \ need, at the cost of requiring\n   additional P-tunnels, and additional signaling\
    \ to bind the C-flows to\n   P-tunnels.  Cost-effective instantiation of S-PMSIs\
    \ is likely to\n   require Aggregate P-trees, which, in turn, makes it necessary\
    \ for the\n   transmitting PE to know which PEs need to receive which multicast\n\
    \   streams.  This is known as \"explicit tracking\", and the procedures to\n\
    \   enable explicit tracking may themselves impose a cost.  This is\n   further\
    \ discussed in Section 7.4.1.2.\n"
- title: 3.4.  PE-PE Transmission of C-Multicast Routing
  contents:
  - "3.4.  PE-PE Transmission of C-Multicast Routing\n   As a PE attached to a given\
    \ MVPN receives C-Join/Prune messages from\n   its CEs in that MVPN, it must convey\
    \ the information contained in\n   those messages to other PEs that are attached\
    \ to the same MVPN.\n   There are several different methods for doing this.  As\
    \ these methods\n   are not interoperable, the method to be used for a particular\
    \ MVPN\n   must be either configured or discovered as part of the auto-discovery\n\
    \   process.\n"
- title: 3.4.1.  PIM Peering
  contents:
  - '3.4.1.  PIM Peering

    '
- title: 3.4.1.1.  Full per-MVPN PIM Peering across an MI-PMSI
  contents:
  - "3.4.1.1.  Full per-MVPN PIM Peering across an MI-PMSI\n   If the set of PEs attached\
    \ to a given MVPN are connected via an\n   MI-PMSI, the PEs can form \"normal\"\
    \ PIM adjacencies with each other.\n   Since the MI-PMSI functions as a broadcast\
    \ network, the standard PIM\n   procedures for forming and maintaining adjacencies\
    \ over a LAN can be\n   applied.\n   As a result, the C-Join/Prune messages that\
    \ a PE receives from a CE\n   can be multicast to all the other PEs of the MVPN.\
    \  PIM \"Join\n   suppression\" can be enabled and the PEs can send Asserts as\
    \ needed.\n   This procedure is fully specified in Section 5.2.\n"
- title: 3.4.1.2.  Lightweight PIM Peering across an MI-PMSI
  contents:
  - "3.4.1.2.  Lightweight PIM Peering across an MI-PMSI\n   The procedure of the\
    \ previous Section has the following\n   disadvantages:\n     - Periodic Hello\
    \ messages must be sent by all PEs.\n       Standard PIM procedures require that\
    \ each PE in a particular MVPN\n       periodically multicast a Hello to all the\
    \ other PEs in that MVPN.\n       If the number of MVPNs becomes very large, sending\
    \ and receiving\n       these Hellos can become a substantial overhead for the\
    \ PE\n       routers.\n     - Periodic retransmission of C-Join/Prune messages.\n\
    \       PIM is a \"soft-state\" protocol, in which reliability is assured\n  \
    \     through frequent retransmissions (refresh) of control messages.\n      \
    \ This too can begin to impose a large overhead on the PE routers\n       as the\
    \ number of MVPNs grows.\n   The first of these disadvantages is easily remedied.\
    \  The reason for\n   the periodic PIM Hellos is to ensure that each PIM speaker\
    \ on a LAN\n   knows who all the other PIM speakers on the LAN are.  However,\
    \ in the\n   context of MVPN, PEs in a given MVPN can learn the identities of\
    \ all\n   the other PEs in the MVPN by means of the BGP-based auto-discovery\n\
    \   procedure of Section 4.  In that case, the periodic Hellos would\n   serve\
    \ no function and could simply be eliminated.  (Of course, this\n   does imply\
    \ a change to the standard PIM procedures.)\n   When Hellos are suppressed, we\
    \ may speak of \"lightweight PIM\n   peering\".\n   The periodic refresh of the\
    \ C-Join/Prune messages is not as simple to\n   eliminate.  If and when \"refresh\
    \ reduction\" procedures are specified\n   for PIM, it may be useful to incorporate\
    \ them, so as to make the\n   lightweight PIM peering procedures even more lightweight.\n\
    \   Lightweight PIM peering is not specified in this document.\n"
- title: 3.4.1.3.  Unicasting of PIM C-Join/Prune Messages
  contents:
  - "3.4.1.3.  Unicasting of PIM C-Join/Prune Messages\n   PIM does not require that\
    \ the C-Join/Prune messages that a PE\n   receives from a CE to be multicast to\
    \ all the other PEs; it allows\n   them to be unicast to a single PE, the one\
    \ that is upstream on the\n   path to the root of the multicast tree mentioned\
    \ in the Join/Prune\n   message.  Note that when the C-Join/Prune messages are\
    \ unicast, there\n   is no such thing as \"Join suppression\".  Therefore, PIM\
    \ Refresh\n   Reduction may be considered to be a prerequisite for the procedure\
    \ of\n   unicasting the C-Join/Prune messages.\n   When the C-Join/Prune messages\
    \ are unicast, they are not transmitted\n   on a PMSI at all.  Note that the procedure\
    \ of unicasting the\n   C-Join/Prune messages is different than the procedure\
    \ of transmitting\n   the C-Join/Prune messages on an MI-PMSI that is instantiated\
    \ as a\n   mesh of unicast P-tunnels.\n   If there are multiple PEs that can be\
    \ used to reach a given C-source,\n   procedures described in Sections 5.1 and\
    \ 9 MUST be used to ensure\n   that duplicate packets do not get delivered.\n\
    \   Procedures for unicasting the PIM control messages are not further\n   specified\
    \ in this document.\n"
- title: 3.4.2.  Using BGP to Carry C-Multicast Routing
  contents:
  - "3.4.2.  Using BGP to Carry C-Multicast Routing\n   It is possible to use BGP\
    \ to carry C-multicast routing information\n   from PE to PE, dispensing entirely\
    \ with the transmission of\n   C-Join/Prune messages from PE to PE.  This is discussed\
    \ in Section\n   5.3 and fully specified in [MVPN-BGP].\n"
- title: 4.  BGP-Based Auto-Discovery of MVPN Membership
  contents:
  - "4.  BGP-Based Auto-Discovery of MVPN Membership\n   BGP-based auto-discovery\
    \ is done by means of a new address family,\n   the MCAST-VPN address family.\
    \  (This address family also has other\n   uses, as will be seen later.)  Any\
    \ PE that attaches to an MVPN must\n   issue a BGP Update message containing an\
    \ NLRI (\"Network Layer\n   Reachability Information\" element) in this address\
    \ family, along with\n   a specific set of attributes.  In this document, we specify\
    \ the\n   information that must be contained in these BGP Updates in order to\n\
    \   provide auto-discovery.  The encoding details, along with the\n   complete\
    \ set of detailed procedures, are specified in a separate\n   document [MVPN-BGP].\n\
    \   This section specifies the intra-AS BGP-based auto-discovery\n   procedures.\
    \  When segmented inter-AS trees are used, additional\n   procedures are needed,\
    \ as specified in [MVPN-BGP].  (When segmented\n   inter-AS trees are not used,\
    \ the inter-AS procedures are almost\n   identical to the intra-AS procedures.)\n\
    \   BGP-based auto-discovery uses a particular kind of MCAST-VPN route\n   known\
    \ as an \"auto-discovery route\", or \"A-D route\".  In particular,\n   it uses\
    \ two kinds of \"A-D routes\": the \"Intra-AS I-PMSI A-D route\"\n   and the \"\
    Inter-AS I-PMSI A-D route\".  (There are also additional\n   kinds of A-D routes,\
    \ such as the Source Active A-D routes, which are\n   used for purposes that go\
    \ beyond auto-discovery.  These are discussed\n   in subsequent sections.)\n \
    \  The Inter-AS I-PMSI A-D route is used only when segmented inter-AS\n   P-tunnels\
    \ are used, as specified in [MVPN-BGP].\n   The \"Intra-AS I-PMSI A-D route\"\
    \ is originated by the PEs that are\n   (directly) connected to the site(s) of\
    \ an MVPN.  It is distributed to\n   other PEs that attach to sites of the MVPN.\
    \  If segmented inter-AS\n   P-tunnels are used, then the Intra-AS I-PMSI A-D\
    \ routes are not\n   distributed outside the AS where they originate; if segmented\
    \ inter-\n   AS P-tunnels are not used, then the Intra-AS I-PMSI A-D routes are,\n\
    \   despite their name, distributed to all PEs attached to the VPN, no\n   matter\
    \ what AS the PEs are in.\n   The NLRI of an Intra-AS I-PMSI A-D route must contain\
    \ the following\n   information:\n     - The route type (i.e., Intra-AS I-PMSI\
    \ A-D route).\n     - The IP address of the originating PE.\n     - An RD (\"\
    Route Distinguisher\", [RFC4364]) configured locally for\n       the MVPN.  This\
    \ is an RD that can be prepended to that IP address\n       to form a globally\
    \ unique VPN-IP address of the PE.\n   Intra-AS I-PMSI A-D routes carry the following\
    \ attributes:\n     - Route Target Extended Communities attribute.\n       One\
    \ or more of these MUST be carried by each Intra-AS I-PMSI A-D\n       route.\
    \  If any other PE has one of these Route Targets configured\n       for import\
    \ into a VRF, it treats the advertising PE as a member\n       in the MVPN to\
    \ which the VRF belongs.  This allows each PE to\n       discover the PEs that\
    \ belong to a given MVPN.  More specifically,\n       it allows a PE in the Receiver\
    \ Sites set to discover the PEs in\n       the Sender Sites set of the MVPN, and\
    \ the PEs in the Sender Sites\n       set of the MVPN to discover the PEs in the\
    \ Receiver Sites set of\n       the MVPN.  The PEs in the Receiver Sites set would\
    \ be configured\n       to import the Route Targets advertised in the BGP A-D\
    \ routes by\n       PEs in the Sender Sites set.  The PEs in the Sender Sites\
    \ set\n       would be configured to import the Route Targets advertised in the\n\
    \       BGP A-D routes by PEs in the Receiver Sites set.\n     - PMSI Tunnel attribute.\n\
    \       This attribute is present whenever the MVPN uses an MI-PMSI or\n     \
    \  when it uses a UI-PMSI rooted at the originating router.  It\n       contains\
    \ the following information:\n         * tunnel technology, which may be one of\
    \ the following:\n             + Bidirectional multicast tree created by BIDIR-PIM,\n\
    \             + Source-specific multicast tree created by PIM-SM,\n          \
    \     supporting the SSM service model,\n             + Set of trees (one shared\
    \ tree and a set of source trees)\n               created by PIM-SM using the\
    \ ASM service model,\n             + Point-to-multipoint LSP created by RSVP-TE,\n\
    \             + Point-to-multipoint LSP created by mLDP,\n             + multipoint-to-multipoint\
    \ LSP created by mLDP\n             + unicast tunnel\n         * P-tunnel identifier\n\
    \           Before a P-tunnel can be constructed to instantiate the\n        \
    \   I-PMSI, the PE must be able to create a unique identifier for\n          \
    \ the tunnel.  The syntax of this identifier depends on the\n           tunnel\
    \ technology used.\n           Each PE attaching to a given MVPN must be configured\
    \ with\n           information specifying the allowable encapsulations to use\n\
    \           for that MVPN, as well as the particular one of those\n          \
    \ encapsulations that the PE is to identify in the PMSI Tunnel\n           attribute\
    \ of the Intra-AS I-PMSI A-D routes that it\n           originates.\n        \
    \ * Multi-VPN aggregation capability and demultiplexor value.\n           This\
    \ specifies whether the P-tunnel is capable of aggregating\n           I-PMSIs\
    \ from multiple MVPNs.  This will affect the\n           encapsulation used. \
    \ If aggregation is to be used, a\n           demultiplexor value to be carried\
    \ by packets for this\n           particular MVPN must also be specified.  The\
    \ demultiplexing\n           mechanism and signaling procedures are described\
    \ in Section\n           6.\n     - PE Distinguisher Labels Attribute\n      \
    \ Sometimes it is necessary for one PE to advertise an upstream-\n       assigned\
    \ MPLS label that identifies another PE.  Under certain\n       circumstances\
    \ to be discussed later, a PE that is the root of a\n       multicast P-tunnel\
    \ will bind an MPLS label value to one or more\n       of the PEs that belong\
    \ to the P-tunnel, and it will distribute\n       these label bindings using Intra-AS\
    \ I-PMSI A-D routes.\n       Specification of when this must be done is provided\
    \ in Sections\n       6.4.4 and 11.2.2.  We refer to these as \"PE Distinguisher\n\
    \       Labels\".\n       Note that, as specified in [MPLS-UPSTREAM-LABEL], PE\n\
    \       Distinguisher Label values are unique only in the context of the\n   \
    \    IP address identifying the root of the P-tunnel; they are not\n       necessarily\
    \ unique per tunnel.\n"
- title: 5.  PE-PE Transmission of C-Multicast Routing
  contents:
  - "5.  PE-PE Transmission of C-Multicast Routing\n   As a PE attached to a given\
    \ MVPN receives C-Join/Prune messages from\n   its CEs in that MVPN, it must convey\
    \ the information contained in\n   those messages to other PEs that are attached\
    \ to the same MVPN.  This\n   is known as the \"PE-PE transmission of C-multicast\
    \ routing\n   information\".\n   This section specifies the procedures used for\
    \ PE-PE transmission of\n   C-multicast routing information.  Not every procedure\
    \ mentioned in\n   Section 3.4 is specified here.  Rather, this section focuses\
    \ on two\n   particular procedures:\n     - Full PIM Peering.\n       This procedure\
    \ is fully specified herein.\n     - Use of BGP to distribute C-multicast routing\n\
    \       This procedure is described herein, but the full specification\n     \
    \  appears in [MVPN-BGP].\n   Those aspects of the procedures that apply to both\
    \ of the above are\n   also specified fully herein.\n   Specification of other\
    \ procedures is outside the scope of this\n   document.\n"
- title: 5.1.  Selecting the Upstream Multicast Hop (UMH)
  contents:
  - "5.1.  Selecting the Upstream Multicast Hop (UMH)\n   When a PE receives a C-Join/Prune\
    \ message from a CE, the message\n   identifies a particular multicast flow as\
    \ belonging either to a\n   source-specific tree (S,G) or to a shared tree (*,G).\
    \  Throughout\n   this section, we use the term \"C-root\" to refer to S, in the\
    \ case of\n   a source-specific tree, or to the Rendezvous Point (RP) for G, in\
    \ the\n   case of (*,G).  If the route to the C-root is across the VPN\n   backbone,\
    \ then the PE needs to find the \"Upstream Multicast Hop\"\n   (UMH) for the (S,G)\
    \ or (*,G) flow.  The UMH is either the PE at which\n   (S,G) or (*,G) data packets\
    \ enter the VPN backbone or the Autonomous\n   System Border Router (ASBR) at\
    \ which those data packets enter the\n   local AS when traveling through the VPN\
    \ backbone.  The process of\n   finding the upstream multicast hop for a given\
    \ C-root is known as\n   \"upstream multicast hop selection\".\n"
- title: 5.1.1.  Eligible Routes for UMH Selection
  contents:
  - "5.1.1.  Eligible Routes for UMH Selection\n   In the simplest case, the PE does\
    \ the upstream hop selection by\n   looking up the C-root in the unicast VRF associated\
    \ with the PE-CE\n   interface over which the C-Join/Prune message was received.\
    \  The\n   route that matches the C-root will contain the information needed to\n\
    \   select the UMH.\n   However, in some cases, the CEs may be distributing to\
    \ the PEs a\n   special set of routes that are to be used exclusively for the\
    \ purpose\n   of upstream multicast hop selection, and not used for unicast routing\n\
    \   at all.  For example, when BGP is the CE-PE unicast routing protocol,\n  \
    \ the CEs may be using Subsequent Address Family Identifier 2 (SAFI 2)\n   to\
    \ distribute a special set of routes that are to be used for, and\n   only for,\
    \ upstream multicast hop selection.  When OSPF [OSPF] is the\n   CE-PE routing\
    \ protocol, the CE may use an MT-ID (Multi-Topology\n   Identifier) [OSPF-MT]\
    \ of 1 to distribute a special set of routes that\n   are to be used for, and\
    \ only for, upstream multicast hop selection.\n   When a CE uses one of these\
    \ mechanisms to distribute to a PE a\n   special set of routes to be used exclusively\
    \ for upstream multicast\n   hop selection, these routes are distributed among\
    \ the PEs using SAFI\n   129, as described in [MVPN-BGP].  Whether the routes\
    \ used for\n   upstream multicast hop selection are (a) the \"ordinary\" unicast\n\
    \   routes or (b) a special set of routes that are used exclusively for\n   upstream\
    \ multicast hop selection is a matter of policy.  How that\n   policy is chosen,\
    \ deployed, or implemented is outside the scope of\n   this document.  In the\
    \ following, we will simply refer to the set of\n   routes that are used for upstream\
    \ multicast hop selection, the\n   \"Eligible UMH routes\", with no presumptions\
    \ about the policy by which\n   this set of routes was chosen.\n"
- title: 5.1.2.  Information Carried by Eligible UMH Routes
  contents:
  - "5.1.2.  Information Carried by Eligible UMH Routes\n   Every route that is eligible\
    \ for UMH selection SHOULD carry a VRF\n   Route Import Extended Community [MVPN-BGP].\
    \  However, if BGP is used\n   to distribute C-multicast routing information,\
    \ or if the route is\n   from a VRF that belongs to a multi-AS VPN as described\
    \ in option b of\n   Section 10 of [RFC4364], then the route MUST carry a VRF\
    \ Route Import\n   Extended Community.  This attribute identifies the PE that\
    \ originated\n   the route.\n   If BGP is used for carrying C-multicast routes,\
    \ OR if \"Segmented\n   inter-AS Tunnels\" are used, then every UMH route MUST\
    \ also carry a\n   Source AS Extended Community [MVPN-BGP].\n   These two attributes\
    \ are used in the upstream multicast hop selection\n   procedures described below.\n"
- title: 5.1.3.  Selecting the Upstream PE
  contents:
  - "5.1.3.  Selecting the Upstream PE\n   The first step in selecting the upstream\
    \ multicast hop for a given\n   C-root is to select the Upstream PE router for\
    \ that C-root.\n   The PE that received the C-Join message from a CE looks in\
    \ the VRF\n   corresponding to the interfaces over which the C-Join was received.\n\
    \   It finds the Eligible UMH route that is the best match for the C-root\n  \
    \ specified in that C-Join.  Call this the \"Installed UMH Route\".\n   Note that\
    \ the outgoing interface of the Installed UMH Route may be\n   one of the interfaces\
    \ associated with the VRF, in which case the\n   upstream multicast hop is a CE\
    \ and the route to the C-root is not\n   across the VPN backbone.\n   Consider\
    \ the set of all VPN-IP routes that (a) are eligible to be\n   imported into the\
    \ VRF (as determined by their Route Targets), (b) are\n   eligible to be used\
    \ for upstream multicast hop selection, and (c)\n   have exactly the same IP prefix\
    \ (not necessarily the same RD) as the\n   installed UMH route.\n   For each route\
    \ in this set, determine the corresponding Upstream PE\n   and Upstream RD.  If\
    \ a route has a VRF Route Import Extended\n   Community, the route's Upstream\
    \ PE is determined from it.  If a route\n   does not have a VRF Route Import Extended\
    \ Community, the route's\n   Upstream PE is determined from the route's BGP Next\
    \ Hop.  In either\n   case, the Upstream RD is taken from the route's NLRI.\n\
    \   This results in a set of triples of <route, Upstream PE, Upstream\n   RD>.\n\
    \   Call this the \"UMH Route Candidate Set\".  Then, the PE MUST select a\n \
    \  single route from the set to be the \"Selected UMH Route\".  The\n   corresponding\
    \ Upstream PE is known as the \"Selected Upstream PE\", and\n   the corresponding\
    \ Upstream RD is known as the \"Selected Upstream RD\".\n   There are several\
    \ possible procedures that can be used by a PE to\n   select a single route from\
    \ the candidate set.\n   The default procedure, which MUST be implemented, is\
    \ to select the\n   route whose corresponding Upstream PE address is numerically\
    \ highest,\n   where a 32-bit IP address is treated as a 32-bit unsigned integer.\n\
    \   Call this the \"default Upstream PE selection\".  For a given C-root,\n  \
    \ provided that the routing information used to create the candidate\n   set is\
    \ stable, all PEs will have the same default Upstream PE\n   selection.  (Though\
    \ different default Upstream PE selections may be\n   chosen during a routing\
    \ transient.)\n   An alternative procedure that MUST be implemented, but which\
    \ is\n   disabled by default, is the following.  This procedure ensures that,\n\
    \   except during a routing transient, each PE chooses the same Upstream\n   PE\
    \ for a given combination of C-root and C-G.\n      1. The PEs in the candidate\
    \ set are numbered from lowest to\n         highest IP address, starting from\
    \ 0.\n      2. The following hash is performed:\n           - A bytewise exclusive-or\
    \ of all the bytes in the C-root\n             address and the C-G address is\
    \ performed.\n           - The result is taken modulo n, where n is the number\
    \ of PEs\n             in the candidate set.  Call this result N.\n   The Selected\
    \ Upstream PE is then the one that appears in position N\n   in the list of step\
    \ 1.\n   Other hashing algorithms are allowed as well, but not required.\n   The\
    \ alternative procedure allows a form of \"equal cost load\n   balancing\".  Suppose,\
    \ for example, that from egress PEs PE3 and PE4,\n   source C-S can be reached,\
    \ at equal cost, via ingress PE PE1 or\n   ingress PE PE2.  The load balancing\
    \ procedure makes it possible for\n   PE1 to be the ingress PE for (C-S,C-G1)\
    \ data traffic while PE2 is the\n   ingress PE for (C-S,C-G2) data traffic.\n\
    \   Another procedure, which SHOULD be implemented, is to use the\n   Installed\
    \ UMH Route as the Selected UMH Route.  If this procedure is\n   used, the result\
    \ is likely to be that a given PE will choose the\n   Upstream PE that is closest\
    \ to it, according to the routing in the SP\n   backbone.  As a result, for a\
    \ given C-root, different PEs may choose\n   different Upstream PEs.  This is\
    \ useful if the C-root is an anycast\n   address, and can also be useful if the\
    \ C-root is in a multihomed site\n   (i.e., a site that is attached to multiple\
    \ PEs).  However, this\n   procedure is more likely to lead to steady state duplication\
    \ of\n   traffic unless (a) PEs discard data traffic that arrives from the\n \
    \  \"wrong\" Upstream PE or (b) data traffic is carried only in non-\n   aggregated\
    \ S-PMSIs.  This issue is discussed at length in Section 9.\n   General policy-based\
    \ procedures for selecting the UMH route are\n   allowed but not required, and\
    \ they are not further discussed in this\n   specification.\n"
- title: 5.1.4.  Selecting the Upstream Multicast Hop
  contents:
  - "5.1.4.  Selecting the Upstream Multicast Hop\n   In certain cases, the Selected\
    \ Upstream Multicast Hop is the same as\n   the Selected Upstream PE.  In other\
    \ cases, the Selected Upstream\n   Multicast Hop is the ASBR that is the BGP Next\
    \ Hop of the Selected\n   UMH Route.\n   If the Selected Upstream PE is in the\
    \ local AS, then the Selected\n   Upstream PE is also the Selected Upstream Multicast\
    \ Hop.  This is the\n   case if any of the following conditions holds:\n     -\
    \ The Selected UMH Route has a Source AS Extended Community, and\n       the Source\
    \ AS is the same as the local AS,\n     - The Selected UMH Route does not have\
    \ a Source AS Extended\n       Community, but the route's BGP Next Hop is the\
    \ same as the\n       Upstream PE.\n   Otherwise, the Selected Upstream Multicast\
    \ Hop is an ASBR.  The\n   method of determining just which ASBR it is depends\
    \ on the particular\n   inter-AS signaling method being used (PIM or BGP) and\
    \ on whether\n   segmented or non-segmented inter-AS tunnels are used.  These\
    \ details\n   are presented in later sections.\n"
- title: 5.2.  Details of Per-MVPN Full PIM Peering over MI-PMSI
  contents:
  - "5.2.  Details of Per-MVPN Full PIM Peering over MI-PMSI\n   When an MVPN uses\
    \ an MI-PMSI, the C-instances of that MVPN can treat\n   the MI-PMSI as a LAN\
    \ interface and form full PIM adjacencies with\n   each other over that LAN interface.\n\
    \   The use of PIM when an MI-PMSI is not in use is outside the scope of\n   this\
    \ document.\n   To form full PIM adjacencies, the PEs execute the standard PIM\n\
    \   procedures on the LAN interface, including the generation and\n   processing\
    \ of PIM Hello, Join/Prune, Assert, DF (Designated\n   Forwarder) election, and\
    \ other PIM control messages.  These are\n   executed independently for each C-instance.\
    \  PIM \"Join suppression\"\n   SHOULD be enabled.\n"
- title: 5.2.1.  PIM C-Instance Control Packets
  contents:
  - "5.2.1.  PIM C-Instance Control Packets\n   All IPv4 PIM C-instance control packets\
    \ of a particular MVPN are\n   addressed to the ALL-PIM-ROUTERS (224.0.0.13) IP\
    \ destination address\n   and transmitted over the MI-PMSI of that MVPN.  While\
    \ in transit in\n   the P-network, the packets are encapsulated as required for\
    \ the\n   particular kind of P-tunnel that is being used to instantiate the\n\
    \   MI-PMSI.  Thus, the C-instance control packets are not processed by\n   the\
    \ P routers, and MVPN-specific PIM routes can be extended from site\n   to site\
    \ without appearing in the P routers.\n   The handling of IPv6 PIM C-instance\
    \ control packets will be specified\n   in a follow-on document.\n   As specified\
    \ in Section 5.1.2, when PIM is being used to distribute\n   C-multicast routing\
    \ information, any PE distributing VPN-IP routes\n   that are eligible for use\
    \ as UMH routes SHOULD include a VRF Route\n   Import Extended Community with\
    \ each route.  For a given VRF, the\n   Global Administrator field of the VRF\
    \ Route Import Extended Community\n   MUST be set to the same IP address that\
    \ the PE places in the IP\n   source address field of the PE-PE PIM control messages\
    \ it originates\n   from that VRF.\n   Note that BSR (Bootstrap Router Mechanism\
    \ for PIM) [BSR] messages are\n   treated the same as PIM C-instance control packets,\
    \ and BSR\n   processing is regarded as an integral part of the PIM C-instance\n\
    \   processing.\n"
- title: 5.2.2.  PIM C-Instance Reverse Path Forwarding (RPF) Determination
  contents:
  - "5.2.2.  PIM C-Instance Reverse Path Forwarding (RPF) Determination\n   Although\
    \ the MI-PMSI is treated by PIM as a LAN interface, unicast\n   routing is NOT\
    \ run over it, and there are no unicast routing\n   adjacencies over it.  Therefore,\
    \ it is necessary to specify special\n   procedures for determining when the MI-PMSI\
    \ is to be regarded as the\n   \"RPF Interface\" for a particular C-address.\n\
    \   The PE follows the procedures of Section 5.1 to determine the\n   Selected\
    \ UMH Route.  If that route is NOT a VPN-IP route learned from\n   BGP as described\
    \ in [RFC4364], or if that route's outgoing interface\n   is one of the interfaces\
    \ associated with the VRF, then ordinary PIM\n   procedures for determining the\
    \ RPF interface apply.\n   However, if the Selected UMH Route is a VPN-IP route\
    \ whose outgoing\n   interface is not one of the interfaces associated with the\
    \ VRF, then\n   PIM will consider the RPF interface to be the MI-PMSI associated\
    \ with\n   the VPN-specific PIM instance.\n   Once PIM has determined that the\
    \ RPF interface for a particular\n   C-root is the MI-PMSI, it is necessary for\
    \ PIM to determine the \"RPF\n   neighbor\" for that C-root.  This will be one\
    \ of the other PEs that is\n   a PIM adjacency over the MI-PMSI.  In particular,\
    \ it will be the\n   \"Selected Upstream PE\", as defined in Section 5.1.\n"
- title: 5.3.  Use of BGP for Carrying C-Multicast Routing
  contents:
  - "5.3.  Use of BGP for Carrying C-Multicast Routing\n   It is possible to use BGP\
    \ to carry C-multicast routing information\n   from PE to PE, dispensing entirely\
    \ with the transmission of\n   C-Join/Prune messages from PE to PE.  This section\
    \ describes the\n   procedures for carrying intra-AS multicast routing information.\n\
    \   Inter-AS procedures are described in Section 8.  The complete\n   specification\
    \ of both sets of procedures and of the encodings can be\n   found in [MVPN-BGP].\n"
- title: 5.3.1.  Sending BGP Updates
  contents:
  - "5.3.1.  Sending BGP Updates\n   The MCAST-VPN address family is used for this\
    \ purpose.  MCAST-VPN\n   routes used for the purpose of carrying C-multicast\
    \ routing\n   information are distinguished from those used for the purpose of\n\
    \   carrying auto-discovery information by means of a \"route type\" field\n \
    \  that is encoded into the NLRI.  The following information is required\n   in\
    \ BGP to advertise the MVPN routing information.  The NLRI contains\n   the following:\n\
    \     - The type of C-multicast route\n       There are two types:\n         *\
    \ source tree join\n         * shared tree join\n     - The C-group address\n\
    \     - The C-source address (In the case of a shared tree join, this is\n   \
    \    the address of the C-RP.)\n     - The Selected Upstream RD corresponding\
    \ to the C-root address\n       (determined by the procedures of Section 5.1).\n\
    \   Whenever a C-multicast route is sent, it must also carry the Selected\n  \
    \ Upstream Multicast Hop corresponding to the C-root address\n   (determined by\
    \ the procedures of Section 5.1).  The Selected Upstream\n   Multicast Hop must\
    \ be encoded as part of a Route Target Extended\n   Community to facilitate the\
    \ optional use of filters that can prevent\n   the distribution of the update\
    \ to BGP speakers other than the\n   Upstream Multicast Hop.  See Section 10.1.3\
    \ of [MVPN-BGP] for the\n   details.\n   There is no C-multicast route corresponding\
    \ to the PIM function of\n   pruning a source off the shared tree when a PE switches\
    \ from a\n   (C-*,C-G) tree to a (C-S,C-G) tree.  Section 9 of this document\n\
    \   specifies a mandatory procedure that ensures that if any PE joins a\n   (C-S,C-G)\
    \ source tree, all other PEs that have joined or will join\n   the (C-*,C-G) shared\
    \ tree will also join the (C-S,C-G) source tree.\n   This eliminates the need\
    \ for a C-multicast route that prunes C-S off\n   the (C-*,C-G) shared tree when\
    \ switching from (C-*,C-G) to (C-S,C-G)\n   tree.\n"
- title: 5.3.2.  Explicit Tracking
  contents:
  - "5.3.2.  Explicit Tracking\n   Note that the upstream multicast hop is NOT part\
    \ of the NLRI in the\n   C-multicast BGP routes.  This means that if several PEs\
    \ join the same\n   C-tree, the BGP routes they distribute to do so are regarded\
    \ by BGP\n   as comparable routes, and only one will be installed.  If a route\n\
    \   reflector is being used, this further means that the PE that is used\n   to\
    \ reach the C-source will know only that one or more of the other\n   PEs have\
    \ joined the tree, but it won't know which one.  That is, this\n   BGP update\
    \ mechanism does not provide \"explicit tracking\".  Explicit\n   tracking is\
    \ not provided by default because it increases the amount\n   of state needed\
    \ and thus decreases scalability.  Also, as\n   constructing the C-PIM messages\
    \ to send \"upstream\" for a given tree\n   does not depend on knowing all the\
    \ PEs that are downstream on that\n   tree, there is no reason for the C-multicast\
    \ route type updates to\n   provide explicit tracking.\n   There are some cases\
    \ in which explicit tracking is necessary in order\n   for the PEs to set up certain\
    \ kinds of P-trees.  There are other\n   cases in which explicit tracking is desirable\
    \ in order to determine\n   how to optimally aggregate multicast flows onto a\
    \ given aggregate\n   tree.  As these functions have to do with the setting up\
    \ of\n   infrastructure in the P-network, rather than with the dissemination\n\
    \   of C-multicast routing information, any explicit tracking that is\n   necessary\
    \ is handled by sending a particular type of A-D route known\n   as \"Leaf A-D\
    \ routes\".\n   Whenever a PE sends an A-D route with a PMSI Tunnel attribute,\
    \ it can\n   set a bit in the PMSI Tunnel attribute indicating \"Leaf Information\n\
    \   Required\".  A PE that installs such an A-D route MUST respond by\n   generating\
    \ a Leaf A-D route, indicating that it needs to join (or be\n   joined to) the\
    \ specified PMSI Tunnel.  Details can be found in\n   [MVPN-BGP].\n"
- title: 5.3.3.  Withdrawing BGP Updates
  contents:
  - "5.3.3.  Withdrawing BGP Updates\n   A PE removes itself from a C-multicast tree\
    \ (shared or source) by\n   withdrawing the corresponding BGP Update.\n   If a\
    \ PE has pruned a C-source from a shared C-multicast tree, and it\n   needs to\
    \ \"unprune\" that source from that tree, it does so by\n   withdrawing the route\
    \ that pruned the source from the tree.\n"
- title: 5.3.4.  BSR
  contents:
  - "5.3.4.  BSR\n   BGP does not provide a method for carrying the control information\
    \ of\n   BSR packets received by a PE from a CE.  BSR is supported by\n   transmitting\
    \ the BSR control messages from one PE in an MVPN to all\n   the other PEs in\
    \ that MVPN.\n   When a PE needs to transmit a BSR message for a particular MVPN\
    \ to\n   other PEs, it must put its own IP address into the BSR message as the\n\
    \   IP source address.  As specified in Section 5.1.2, when a PE\n   distributes\
    \ VPN-IP routes that are eligible for use as UMH routes,\n   the PE MUST include\
    \ a VRF Route Import Extended Community with each\n   route.  For a given MVPN,\
    \ a single such IP address MUST be used, and\n   that same IP address MUST be\
    \ used as the source address in all BSR\n   packets that the PE transmits to other\
    \ PEs.\n   The BSR message may be transmitted over any PMSI that will deliver\n\
    \   the message to all the other PEs in the MVPN.  If no such PMSI has\n   been\
    \ instantiated yet, then an appropriate P-tunnel must be\n   advertised, and the\
    \ C-flow whose C-source address is the address of\n   the PE itself, and whose\
    \ multicast group is ALL-PIM-ROUTERS\n   (224.0.0.13), must be bound to it.  This\
    \ can be done using the\n   procedures described in Sections 7.3 and 7.4.  Note\
    \ that this is NOT\n   meant to imply that the other PIM control packets from\
    \ the PIM\n   C-instance are to be transmitted to the other PEs.\n   When a PE\
    \ receives a BSR message for a particular MVPN from some\n   other PE, the PE\
    \ accepts the message only if the IP source address in\n   that message is the\
    \ Selected Upstream PE (see Section 5.1.3) for the\n   IP address of the Bootstrap\
    \ router.  Otherwise, the PE simply\n   discards the packet.  If the PE accepts\
    \ the packet, it does normal\n   BSR processing on it, and it may forward a BSR\
    \ message to one or more\n   CEs as a result.\n"
- title: 6.  PMSI Instantiation
  contents:
  - "6.  PMSI Instantiation\n   This section provides the procedures for using P-tunnels\
    \ to\n   instantiate a PMSI.  It describes the procedures for setting up and\n\
    \   maintaining the P-tunnels as well as for sending and receiving C-data\n  \
    \ and/or C-control messages on the P-tunnels.  However, procedures for\n   binding\
    \ particular C-flows to particular P-tunnels are discussed in\n   Section 7.\n\
    \   PMSIs can be instantiated either by P-multicast trees or by PE-PE\n   unicast\
    \ tunnels.  In the latter case, the PMSI is said to be\n   instantiated by \"\
    ingress replication\".\n   This specification supports a number of different methods\
    \ for setting\n   up P-multicast trees: these are detailed below.  A P-tunnel\
    \ may\n   support a single VPN (a non-aggregated P-multicast tree) or multiple\n\
    \   VPNs (an aggregated P-multicast tree).\n"
- title: 6.1.  Use of the Intra-AS I-PMSI A-D Route
  contents:
  - '6.1.  Use of the Intra-AS I-PMSI A-D Route

    '
- title: 6.1.1.  Sending Intra-AS I-PMSI A-D Routes
  contents:
  - "6.1.1.  Sending Intra-AS I-PMSI A-D Routes\n   When a PE is provisioned to have\
    \ one or more VRFs that provide MVPN\n   support, the PE announces its MVPN membership\
    \ information using\n   Intra-AS I-PMSI A-D routes, as discussed in Section 4\
    \ and detailed in\n   Section 9.1.1 of [MVPN-BGP].  (Under certain conditions,\
    \ detailed in\n   [MVPN-BGP], the Intra-AS I-PMSI A-D route may be omitted.)\n\
    \   Generally, the Intra-AS I-PMSI A-D route will have a PMSI Tunnel\n   attribute\
    \ that identifies a P-tunnel that is being used to\n   instantiate the I-PMSI.\
    \  Section 9.1.1 of [MVPN-BGP] details certain\n   conditions under which the\
    \ PMSI Tunnel attribute may be omitted (or\n   in which a PMSI Tunnel attribute\
    \ with the \"no tunnel information\n   present\" bit may be sent).\n   As a special\
    \ case, when (a) C-PIM control messages are to be sent\n   through an MI-PMSI\
    \ and (b) the MI-PMSI is instantiated by a P-tunnel\n   technique for which each\
    \ PE needs to know only a single P-tunnel\n   identifier per VPN, then the use\
    \ of the Intra-AS I-PMSI A-D routes\n   MAY be omitted, and static configuration\
    \ of the tunnel identifier\n   used instead.  However, this is not recommended\
    \ for long-term use,\n   and in all other cases, the Intra-AS I-PMSI A-D routes\
    \ MUST be used.\n   The PMSI Tunnel attribute MAY contain an upstream-assigned\
    \ MPLS\n   label, assigned by the PE originating the Intra-AS I-PMSI A-D route.\n\
    \   If this label is present, the P-tunnel can be carrying data from\n   several\
    \ MVPNs.  The label is used on the data packets traveling\n   through the tunnel\
    \ to identify the MVPN to which those data packets\n   belong.  (The specified\
    \ label identifies the packet as belonging to\n   the MVPN that is identified\
    \ by the RTs of the Intra-AS I-PMSI A-D\n   route.)\n   See Section 12.2 for details\
    \ on how to place the label in the\n   packet's label stack.\n   The Intra-AS\
    \ I-PMSI A-D route may contain a \"PE Distinguisher Labels\"\n   attribute.  This\
    \ contains a set of bindings between upstream-assigned\n   labels and PE addresses.\
    \  The PE that originated the route may use\n   this to bind an upstream-assigned\
    \ label to one or more of the other\n   PEs that belong to the same MVPN.  The\
    \ way in which PE Distinguisher\n   Labels are used is discussed in Sections 6.4.1,\
    \ 6.4.3, 11.2.2, and\n   12.3.  Other uses of the PE Distinguisher Labels attribute\
    \ are\n   outside the scope of this document.\n"
- title: 6.1.2.  Receiving Intra-AS I-PMSI A-D Routes
  contents:
  - "6.1.2.  Receiving Intra-AS I-PMSI A-D Routes\n   The action to be taken when\
    \ a PE receives an Intra-AS I-PMSI A-D\n   route for a particular MVPN depends\
    \ on the particular P-tunnel\n   technology that is being used by that MVPN. \
    \ If the P-tunnel\n   technology requires tunnels to be built by means of receiver-\n\
    \   initiated joins, the PE SHOULD join the tunnel immediately.\n"
- title: 6.2.  When C-flows Are Specifically Bound to P-Tunnels
  contents:
  - "6.2.  When C-flows Are Specifically Bound to P-Tunnels\n   This situation is\
    \ discussed in Section 7.\n"
- title: 6.3.  Aggregating Multiple MVPNs on a Single P-Tunnel
  contents:
  - "6.3.  Aggregating Multiple MVPNs on a Single P-Tunnel\n   When a P-multicast\
    \ tree is shared across multiple MVPNs, it is termed\n   an \"Aggregate Tree\"\
    .  The procedures described in this document allow\n   a single SP multicast tree\
    \ to be shared across multiple MVPNs.\n   Unless otherwise specified, P-multicast\
    \ tree technology supports\n   aggregation.\n   All procedures that are specific\
    \ to multi-MVPN aggregation are\n   OPTIONAL and are explicitly pointed out.\n\
    \   Aggregate Trees allow a single P-multicast tree to be used across\n   multiple\
    \ MVPNs so that state in the SP core grows per set of MVPNs\n   and not per MVPN.\
    \  Depending on the congruence of the aggregated\n   MVPNs, this may result in\
    \ trading off optimality of multicast\n   routing.\n   An Aggregate Tree can be\
    \ used by a PE to provide a UI-PMSI or MI-PMSI\n   service for more than one MVPN.\
    \  When this is the case, the Aggregate\n   Tree is said to have an inclusive\
    \ mapping.\n"
- title: 6.3.1.  Aggregate Tree Leaf Discovery
  contents:
  - "6.3.1.  Aggregate Tree Leaf Discovery\n   BGP MVPN membership discovery (Section\
    \ 4) allows a PE to determine\n   the different Aggregate Trees that it should\
    \ create and the MVPNs\n   that should be mapped onto each such tree.  The leaves\
    \ of an\n   Aggregate Tree are determined by the PEs, supporting aggregation,\n\
    \   that belong to all the MVPNs that are mapped onto the tree.\n   If an Aggregate\
    \ Tree is used to instantiate one or more S-PMSIs, then\n   it may be desirable\
    \ for the PE at the root of the tree to know which\n   PEs (in its MVPN) are receivers\
    \ on that tree.  This enables the PE to\n   decide when to aggregate two S-PMSIs,\
    \ based on congruence (as\n   discussed in the next section).  Thus, explicit\
    \ tracking may be\n   required.  Since the procedures for disseminating C-multicast\
    \ routes\n   do not provide explicit tracking, a type of A-D route known as a\n\
    \   \"Leaf A-D route\" is used.  The PE that wants to assign a particular\n  \
    \ C-multicast flow to a particular Aggregate Tree can send an A-D\n   route, which\
    \ elicits Leaf A-D routes from the PEs that need to\n   receive that C-multicast\
    \ flow.  This provides the explicit tracking\n   information needed to support\
    \ the aggregation methodology discussed\n   in the next section.  For more details\
    \ on Leaf A-D routes, please\n   refer to [MVPN-BGP].\n"
- title: 6.3.2.  Aggregation Methodology
  contents:
  - "6.3.2.  Aggregation Methodology\n   This document does not specify the mandatory\
    \ implementation of any\n   particular set of rules for determining whether or\
    \ not the PMSIs of\n   two particular MVPNs are to be instantiated by the same\
    \ Aggregate\n   Tree.  This determination can be made by implementation-specific\n\
    \   heuristics, by configuration, or even perhaps by the use of offline\n   tools.\n\
    \   It is the intention of this document that the control procedures will\n  \
    \ always result in all the PEs of an MVPN agreeing on the PMSIs that\n   are to\
    \ be used and on the tunnels used to instantiate those PMSIs.\n   This section\
    \ discusses potential methodologies with respect to\n   aggregation.\n   The \"\
    congruence\" of aggregation is defined by the amount of overlap\n   in the leaves\
    \ of the customer trees that are aggregated on an SP\n   tree.  For Aggregate\
    \ Trees with an inclusive mapping, the congruence\n   depends on the overlap in\
    \ the membership of the MVPNs that are\n   aggregated on the tree.  If there is\
    \ complete overlap, i.e., all\n   MVPNs have exactly the same sites, aggregation\
    \ is perfectly\n   congruent.  As the overlap between the MVPNs that are aggregated\n\
    \   reduces, i.e., the number of sites that are common across all the\n   MVPNs\
    \ reduces, the congruence reduces.\n   If aggregation is done such that it is\
    \ not perfectly congruent, a PE\n   may receive traffic for MVPNs to which it\
    \ doesn't belong.  As the\n   amount of multicast traffic in these unwanted MVPNs\
    \ increases,\n   aggregation becomes less optimal with respect to delivered traffic.\n\
    \   Hence, there is a trade-off between reducing state and delivering\n   unwanted\
    \ traffic.\n   An implementation should provide knobs to control the congruence\
    \ of\n   aggregation.  These knobs are implementation dependent.  Configuring\n\
    \   the percentage of sites that MVPNs must have in common to be\n   aggregated\
    \ is an example of such a knob.  This will allow an SP to\n   deploy aggregation\
    \ depending on the MVPN membership and traffic\n   profiles in its network.  If\
    \ different PEs or servers are setting up\n   Aggregate Trees, this will also\
    \ allow a service provider to engineer\n   the maximum amount of unwanted MVPNs\
    \ for which a particular PE may\n   receive traffic.\n"
- title: 6.3.3.  Demultiplexing C-Multicast Traffic
  contents:
  - "6.3.3.  Demultiplexing C-Multicast Traffic\n   If a P-multicast tree is associated\
    \ with only one MVPN, determining\n   the P-multicast tree on which a packet was\
    \ received is sufficient to\n   determine the packet's MVPN.  All that the egress\
    \ PE needs to know is\n   the MVPN with which the P-multicast tree is associated.\n\
    \   When multiple MVPNs are aggregated onto one P-multicast tree,\n   determining\
    \ the tree over which the packet is received is not\n   sufficient to determine\
    \ the MVPN to which the packet belongs.  The\n   packet must also carry some demultiplexing\
    \ information to allow the\n   egress PEs to determine the MVPN to which the packet\
    \ belongs.  Since\n   the packet has been multicast through the P-network, any\
    \ given\n   demultiplexing value must have the same meaning to all the egress\n\
    \   PEs.  The demultiplexing value is a MPLS label that corresponds to\n   the\
    \ multicast VRF to which the packet belongs.  This label is placed\n   by the\
    \ ingress PE immediately beneath the P-multicast tree header.\n   Each of the\
    \ egress PEs must be able to associate this MPLS label with\n   the same MVPN.\
    \  If downstream-assigned labels were used, this would\n   require all the egress\
    \ PEs in the MVPN to agree on a common label for\n   the MVPN.  Instead, the MPLS\
    \ label is upstream-assigned\n   [MPLS-UPSTREAM-LABEL].  The label bindings are\
    \ advertised via BGP\n   Updates originated by the ingress PEs.\n   This procedure\
    \ requires each egress PE to support a separate label\n   space for every other\
    \ PE.  The egress PEs create a forwarding entry\n   for the upstream-assigned\
    \ MPLS label, allocated by the ingress PE, in\n   this label space.  Hence, when\
    \ the egress PE receives a packet over\n   an Aggregate Tree, it first determines\
    \ the tree over which the packet\n   was received.  The tree identifier determines\
    \ the label space in\n   which the upstream-assigned MPLS label lookup has to\
    \ be performed.\n   The same label space may be used for all P-multicast trees\
    \ rooted at\n   the same ingress PE or an implementation may decide to use a separate\n\
    \   label space for every P-multicast tree.\n   A full specification of the procedures\
    \ to support aggregation on\n   shared trees or on MP2MP LSPs is outside the scope\
    \ of this document.\n   The encapsulation format is either MPLS or MPLS-in-something\
    \ (e.g.,\n   MPLS-in-GRE [MPLS-IP]).  When MPLS is used, this label will appear\n\
    \   immediately below the label that identifies the P-multicast tree.\n   When\
    \ MPLS-in-GRE is used, this label will be the top MPLS label that\n   appears\
    \ when the GRE header is stripped off.\n   When IP encapsulation is used for the\
    \ P-multicast tree, whatever\n   information that particular encapsulation format\
    \ uses for identifying\n   a particular tunnel is used to determine the label\
    \ space in which the\n   MPLS label is looked up.\n   If the P-multicast tree\
    \ uses MPLS encapsulation, the P-multicast tree\n   is itself identified by an\
    \ MPLS label.  The egress PE MUST NOT\n   advertise IMPLICIT NULL or EXPLICIT\
    \ NULL for that tree.  Once the\n   label representing the tree is popped off\
    \ the MPLS label stack, the\n   next label is the demultiplexing information that\
    \ allows the proper\n   MVPN to be determined.\n   This specification requires\
    \ that, to support this sort of\n   aggregation, there be at least one upstream-assigned\
    \ label per MVPN.\n   It does not require that there be only one.  For example,\
    \ an ingress\n   PE could assign a unique label to each (C-S,C-G).  (This could\
    \ be\n   done using the same technique that is used to assign a particular\n \
    \  (C-S,C-G) to an S-PMSI, see Section 7.4.)\n   When an egress PE receives a\
    \ C-multicast data packet over a\n   P-multicast tree, it needs to forward the\
    \ packet to the CEs that have\n   receivers in the packet's C-multicast group.\
    \  In order to do this,\n   the egress PE needs to determine the P-tunnel on which\
    \ the packet was\n   received.  The PE can then determine the MVPN that the packet\
    \ belongs\n   to and, if needed, do any further lookups that are needed to forward\n\
    \   the packet.\n"
- title: 6.4.  Considerations for Specific Tunnel Technologies
  contents:
  - "6.4.  Considerations for Specific Tunnel Technologies\n   While it is believed\
    \ that the architecture specified in this document\n   places no limitations on\
    \ the protocols used for setting up and\n   maintaining P-tunnels, the only protocols\
    \ that have been explicitly\n   considered are PIM-SM (both the SSM and ASM service\
    \ models are\n   considered, as are bidirectional trees), RSVP-TE, mLDP, and BGP.\n\
    \   (BGP's role in the setup and maintenance of P-tunnels is to \"stitch\"\n \
    \  together the intra-AS segments of a segmented inter-AS P-tunnel.)\n"
- title: 6.4.1.  RSVP-TE P2MP LSPs
  contents:
  - "6.4.1.  RSVP-TE P2MP LSPs\n   If an I-PMSI is to be instantiated as one or more\
    \ non-segmented\n   P-tunnels, where the P-tunnels are RSVP-TE P2MP LSPs, then\
    \ only the\n   PEs that are at the head ends of those LSPs will ever include the\n\
    \   PMSI Tunnel attribute in their Intra-AS I-PMSI A-D routes.  (These\n   will\
    \ be the PEs in the \"Sender Sites set\".)\n   If an I-PMSI is to be instantiated\
    \ as one or more segmented\n   P-tunnels, where some of the intra-AS segments\
    \ of these tunnels are\n   RSVP-TE P2MP LSPs, then only a PE or ASBR that is at\
    \ the head end of\n   one of these LSPs will ever include the PMSI Tunnel attribute\
    \ in its\n   Inter-AS I-PMSI A-D route.\n   Other PEs send Intra-AS I-PMSI A-D\
    \ routes without PMSI Tunnel\n   attributes.  (These will be the PEs that are\
    \ in the \"Receiver Sites\n   set\" but not in the \"Sender Sites set\".)  As\
    \ each \"Sender Site\" PE\n   receives an Intra-AS I-PMSI A-D route from a PE\
    \ in the Receiver Sites\n   set, it adds the PE originating that Intra-AS I-PMSI\
    \ A-D route to the\n   set of receiving PEs for the P2MP LSP.  The PE at the head\
    \ end MUST\n   then use RSVP-TE [RSVP-P2MP] signaling to add the receiver PEs\
    \ to the\n   P-tunnel.\n   When RSVP-TE P2MP LSPs are used to instantiate S-PMSIs,\
    \ and a\n   particular C-flow is to be bound to the LSP, it is necessary to use\n\
    \   explicit tracking so that the head end of the LSP knows which PEs\n   need\
    \ to receive data from the specified C-flow.  If the binding is\n   done using\
    \ S-PMSI A-D routes (see Section 7.4.1), the \"Leaf\n   Information Required\"\
    \ bit MUST be set in the PMSI Tunnel attribute.\n   RSVP-TE P2MP LSPs can optionally\
    \ support aggregation of multiple\n   MVPNs.\n   If an RSVP-TE P2MP LSP Tunnel\
    \ is used for only a single MVPN, the\n   mapping between the LSP and the MVPN\
    \ can either be configured or be\n   deduced from the procedures used to announce\
    \ the LSP (e.g., from the\n   RTs in the A-D route that announced the LSP).  If\
    \ the LSP is used for\n   multiple MVPNs, the set of MVPNs using it (and the corresponding\
    \ MPLS\n   labels) is inferred from the PMSI Tunnel attributes that specify the\n\
    \   LSP.\n   If an RSVP-TE P2MP LSP is being used to carry a set of C-flows\n\
    \   traveling along a bidirectional C-tree, using the procedures of\n   Section\
    \ 11.2, the head end MUST include the PE Distinguisher Labels\n   attribute in\
    \ its Intra-AS I-PMSI A-D route or S-PMSI A-D route, and\n   it MUST provide an\
    \ upstream-assigned label for each PE that it has\n   selected as the Upstream\
    \ PE for the C-tree's RPA (Rendezvous Point\n   Address).  See Section 11.2 for\
    \ details.\n   A PMSI Tunnel attribute specifying an RSVP-TE P2MP LSP contains\
    \ the\n   following information:\n     - The type of the tunnel is set to RSVP-TE\
    \ P2MP Tunnel\n     - The RSVP-TE P2MP Tunnel's SESSION Object.\n     - Optionally,\
    \ the RSVP-TE P2MP LSP's SENDER_TEMPLATE Object.  This\n       object is included\
    \ when it is desired to identify a particular\n       P2MP TE LSP.\n   Demultiplexing\
    \ the C-multicast data packets at the egress PE follows\n   procedures described\
    \ in Section 6.3.3.  As specified in Section\n   6.3.3, an egress PE MUST NOT\
    \ advertise IMPLICIT NULL or EXPLICIT NULL\n   for an RSVP-TE P2MP LSP that is\
    \ carrying traffic for one or more\n   MVPNs.\n   If (and only if) a particular\
    \ RSVP-TE P2MP LSP is possibly carrying\n   data from multiple MVPNs, the following\
    \ special procedures apply:\n     - A packet in a particular MVPN, when transmitted\
    \ into the LSP,\n       must carry the MPLS label specified in the PMSI Tunnel\
    \ attribute\n       that announced that LSP as a P-tunnel for that for that MVPN.\n\
    \     - Demultiplexing the C-multicast data packets at the egress PE is\n    \
    \   done by means of the MPLS label that rises to the top of the\n       stack\
    \ after the label corresponding to the P2MP LSP is popped\n       off.\n   It\
    \ is possible that at the time a PE learns, via an A-D route with a\n   PMSI Tunnel\
    \ attribute, that it needs to receive traffic on a\n   particular RSVP-TE P2MP\
    \ LSP, the signaling to set up the LSP will not\n   have been completed.  In this\
    \ case, the PE needs to wait for the\n   RSVP-TE signaling to take place before\
    \ it can modify its forwarding\n   tables as directed by the A-D route.\n   It\
    \ is also possible that the signaling to set up an RSVP-TE P2MP LSP\n   will be\
    \ completed before a given PE learns, via a PMSI Tunnel\n   attribute, of the\
    \ use to which that LSP will be put.  The PE MUST\n   discard any traffic received\
    \ on that LSP until that time.\n   In order for the egress PE to be able to discard\
    \ such traffic, it\n   needs to know that the LSP is associated with an MVPN and\
    \ that the\n   A-D route that binds the LSP to an MVPN or to a particular a C-flow\n\
    \   has not yet been received.  This is provided by extending [RSVP-P2MP]\n  \
    \ with [RSVP-OOB].\n"
- title: 6.4.2.  PIM Trees
  contents:
  - "6.4.2.  PIM Trees\n   When the P-tunnels are PIM trees, the PMSI Tunnel attribute\
    \ contains\n   enough information to allow each other PE in the same MVPN to use\n\
    \   P-PIM signaling to join the P-tunnel.\n   If an I-PMSI is to be instantiated\
    \ as one or more PIM trees, then the\n   PE that is at the root of a given PIM\
    \ tree sends an Intra-AS I-PMSI\n   A-D route containing a PMSI Tunnel attribute\
    \ that contains all the\n   information needed for other PEs to join the tree.\n\
    \   If PIM trees are to be used to instantiate an MI-PMSI, each PE in the\n  \
    \ MVPN must send an Intra-AS I-PMSI A-D route containing such a PMSI\n   Tunnel\
    \ attribute.\n   If a PMSI is to be instantiated via a shared tree, the PMSI Tunnel\n\
    \   attribute identifies the P-group address.  The RP or RPA\n   corresponding\
    \ to the P-group address is not specified.  It must, of\n   course, be known to\
    \ all the PEs.  It is presupposed that the PEs use\n   one of the methods for\
    \ automatically learning the RP-to-group\n   correspondences (e.g., Bootstrap\
    \ Router Protocol [BSR]), or else that\n   the correspondence is configured.\n\
    \   If a PMSI is to be instantiated via a source-specific tree, the PMSI\n   Tunnel\
    \ attribute identifies the PE router that is the root of the\n   tree, as well\
    \ as a P-group address.  The PMSI Tunnel attribute always\n   specifies whether\
    \ the PIM tree is to be a unidirectional shared tree,\n   a bidirectional shared\
    \ tree, or a source-specific tree.\n   If PIM trees are being used to instantiate\
    \ S-PMSIs, the above\n   procedures assume that each PE router has a set of group\
    \ P-addresses\n   that it can use for setting up the PIM-trees.  Each PE must\
    \ be\n   configured with this set of P-addresses.  If the P-tunnels are\n   source-specific\
    \ trees, then the PEs may be configured with\n   overlapping sets of group P-addresses.\
    \  If the trees are not source-\n   specific, then each PE must be configured\
    \ with a unique set of group\n   P-addresses (i.e., having no overlap with the\
    \ set configured at any\n   other PE router).  The management of this set of addresses\
    \ is thus\n   greatly simplified when source-specific trees are used, so the use\
    \ of\n   source-specific trees is strongly recommended whenever unidirectional\n\
    \   trees are desired.\n   Specification of the full set of procedures for using\
    \ bidirectional\n   PIM trees to instantiate S-PMSIs is outside the scope of this\n\
    \   document.\n   Details for constructing the PMSI Tunnel attribute identifying\
    \ a PIM\n   tree can be found in [MVPN-BGP].\n"
- title: 6.4.3.  mLDP P2MP LSPs
  contents:
  - "6.4.3.  mLDP P2MP LSPs\n   When the P-tunnels are mLDP P2MP trees, each Intra-AS\
    \ I-PMSI A-D\n   route has a PMSI Tunnel attribute containing enough information\
    \ to\n   allow each other PE in the same MVPN to use mLDP signaling to join\n\
    \   the P-tunnel.  The tunnel identifier consists of a P2MP Forwarding\n   Equivalence\
    \ Class (FEC) Element [mLDP].\n   An mLDP P2MP LSP may be used to carry the traffic\
    \ of multiple VPNs,\n   if the PMSI Tunnel attribute specifying it contains a\
    \ non-zero MPLS\n   label.\n   If an mLDP P2MP LSP is being used to carry the\
    \ set of flows traveling\n   along a particular bidirectional C-tree, using the\
    \ procedures of\n   Section 11.2, the root of the LSP MUST include the PE Distinguisher\n\
    \   Labels attribute in its Intra-AS I-PMSI A-D route or S-PMSI A-D\n   route,\
    \ and it MUST provide an upstream-assigned label for the PE that\n   it has selected\
    \ to be the Upstream PE for the C-tree's RPA.  See\n   Section 11.2 for details.\n"
- title: 6.4.4.  mLDP MP2MP LSPs
  contents:
  - "6.4.4.  mLDP MP2MP LSPs\n   The specification of the procedures for assigning\
    \ C-flows to mLDP\n   MP2MP LSPs that serve as P-tunnels is outside the scope\
    \ of this\n   document.\n"
- title: 6.4.5.  Ingress Replication
  contents:
  - "6.4.5.  Ingress Replication\n   As described in Section 3, a PMSI can be instantiated\
    \ using Unicast\n   Tunnels between the PEs that are participating in the MVPN.\
    \  In this\n   mechanism, the ingress PE replicates a C-multicast data packet\n\
    \   belonging to a particular MVPN and sends a copy to all or a subset of\n  \
    \ the PEs that belong to the MVPN.  A copy of the packet is tunneled to\n   a\
    \ remote PE over a Unicast Tunnel to the remote PE.  IP/GRE Tunnels\n   or MPLS\
    \ LSPs are examples of unicast tunnels that may be used.  The\n   same Unicast\
    \ Tunnel can be used to transport packets belonging to\n   different MVPNs\n \
    \  In order for a PE to use Unicast P-tunnels to send a C-multicast data\n   packet\
    \ for a particular MVPN to a set of remote PEs, the remote PEs\n   must be able\
    \ to correctly decapsulate such packets and to assign each\n   one to the proper\
    \ MVPN.  This requires that the encapsulation used\n   for sending packets through\
    \ the P-tunnel have demultiplexing\n   information that the receiver can associate\
    \ with a particular MVPN.\n   If ingress replication is being used to instantiate\
    \ the PMSIs for an\n   MVPN, the PEs announce this as part of the BGP-based MVPN\
    \ membership\n   auto-discovery process, described in Section 4.  The PMSI Tunnel\n\
    \   attribute specifies ingress replication; it also specifies a\n   downstream-assigned\
    \ MPLS label.  This label will be used to identify\n   that a particular packet\
    \ belongs to the MVPN that the Intra-AS I-PMSI\n   A-D route belongs to (as inferred\
    \ from its RTs).  If PE1 specifies a\n   particular label value for a particular\
    \ MVPN, then any other PE\n   sending PE1 a packet for that MVPN through a unicast\
    \ P-tunnel must\n   put that label on the packet's label stack.  PE1 then treats\
    \ that\n   label as the demultiplexor value identifying the MVPN in question.\n\
    \   Ingress replication may be used to instantiate any kind of PMSI.\n   When\
    \ ingress replication is done, it is RECOMMENDED, except in the\n   one particular\
    \ case mentioned in the next paragraph, that explicit\n   tracking be done and\
    \ that the data packets of a particular C-flow\n   only get sent to those PEs\
    \ that need to see the packets of that\n   C-flow.  There is never any need to\
    \ use the procedures of Section 7.4\n   for binding particular C-flows to particular\
    \ P-tunnels.\n   The particular case in which there is no need for explicit tracking\n\
    \   is the case where ingress replication is being used to create a\n   one-hop\
    \ ASBR-ASBR inter-AS segment of an segmented inter-AS P-tunnel.\n   Section 9.1\
    \ specifies three different methods that can be used to\n   prevent duplication\
    \ of multicast data packets.  Any given deployment\n   must use at least one of\
    \ those methods.  Note that the method\n   described in Section 9.1.1 (\"Discarding\
    \ Packets from Wrong PE\")\n   presupposes that the egress PE of a P-tunnel can,\
    \ upon receiving a\n   packet from the P-tunnel, determine the identity of the\
    \ PE that\n   transmitted the packet into the P-tunnel.  SPs that use ingress\n\
    \   replication to instantiate their PMSIs are cautioned against this use\n  \
    \ for this purpose of unicast P-tunnel technologies that do not allow\n   the\
    \ egress PE to identify the ingress PE (e.g., MP2P LSPs for which\n   penultimate-hop-popping\
    \ is done).  Deployment of ingress replication\n   with such P-tunnel technology\
    \ MUST NOT be done unless it is known\n   that the deployment relies entirely\
    \ on the procedures of Sections\n   9.1.2 or 9.1.3 for duplicate prevention.\n"
- title: 7.  Binding Specific C-Flows to Specific P-Tunnels
  contents:
  - "7.  Binding Specific C-Flows to Specific P-Tunnels\n   As discussed previously,\
    \ Intra-AS I-PMSI A-D routes may (or may not)\n   have PMSI Tunnel attributes,\
    \ identifying P-tunnels that can be used\n   as the default P-tunnels for carrying\
    \ C-multicast traffic, i.e., for\n   carrying C-multicast traffic that has not\
    \ been specifically bound to\n   another P-tunnel.\n   If none of the Intra-AS\
    \ I-PMSI A-D routes originated by a particular\n   PE for a particular MVPN carry\
    \ PMSI Tunnel attributes at all (or if\n   the only PMSI Tunnel attributes they\
    \ carry have type \"No tunnel\n   information present\"), then there are no default\
    \ P-tunnels for that\n   PE to use when transmitting C-multicast traffic in that\
    \ MVPN to other\n   PEs.  In that case, all such C-flows must be assigned to specific\n\
    \   P-tunnels using one of the mechanisms specified in Section 7.4.  That\n  \
    \ is, all such C-flows are carried on P-tunnels that instantiate\n   S-PMSIs.\n\
    \   There are other cases where it may be either necessary or desirable\n   to\
    \ use the mechanisms of Section 7.4 to identify specific C-flows and\n   bind\
    \ them to or unbind them from specific P-tunnels.  Some possible\n   cases are\
    \ as follows:\n     - The policy for a particular MVPN is to send all C-data on\n\
    \       S-PMSIs, even if the Intra-AS I-PMSI A-D routes carry PMSI Tunnel\n  \
    \     attributes.  (This is another case where all C-data is carried on\n    \
    \   S-PMSIs; presumably, the I-PMSIs are used for control\n       information.)\n\
    \     - It is desired to optimize the routing of the particular C-flow,\n    \
    \   which may already be traveling on an I-PMSI, by sending it\n       instead\
    \ on an S-PMSI.\n     - If a particular C-flow is traveling on an S-PMSI, it may\
    \ be\n       considered desirable to move it to an I-PMSI (i.e., optimization\n\
    \       of the routing for that flow may no longer be considered\n       desirable).\n\
    \     - It is desired to change the encapsulation used to carry the\n       C-flow,\
    \ e.g., because one now wants to aggregate it on a P-tunnel\n       with flows\
    \ from other MVPNs.\n   Note that if Full PIM Peering over an MI-PMSI (Section\
    \ 5.2) is being\n   used, then from the perspective of the PIM state machine,\
    \ the\n   \"interface\" connecting the PEs to each other is the MI-PMSI, even\
    \ if\n   some or all of the C-flows are being sent on S-PMSIs.  That is, from\n\
    \   the perspective of the C-PIM state machine, when a C-flow is being\n   sent\
    \ or received on an S-PMSI, the output or input interface\n   (respectively) is\
    \ considered to be the MI-PMSI.\n   Section 7.1 discusses certain general considerations\
    \ that apply\n   whenever a specified C-flow is bound to a specified P-tunnel\
    \ using\n   the mechanisms of Section 7.4.  This includes the case where the\n\
    \   C-flow is moved from one P-tunnel to another as well as the case\n   where\
    \ the C-flow is initially bound to an S-PMSI P-tunnel.\n   Section 7.2 discusses\
    \ the specific case of using the mechanisms of\n   Section 7.4 as a way of optimizing\
    \ multicast routing by switching\n   specific flows from one P-tunnel to another.\n\
    \   Section 7.3 discusses the case where the mechanisms of Section 7.4\n   are\
    \ used to announce the presence of \"unsolicited flooded data\" and\n   to assign\
    \ such data to a particular P-tunnel.\n   Section 7.4 specifies the protocols\
    \ for assigning specific C-flows to\n   specific P-tunnels.  These protocols may\
    \ be used to assign a C-flow\n   to a P-tunnel initially or to switch a flow from\
    \ one P-tunnel to\n   another.\n   Procedures for binding to a specified P-tunnel\
    \ the set of C-flows\n   traveling along a specified C-tree (or for so binding\
    \ a set of\n   C-flows that share some relevant characteristic), without identifying\n\
    \   each flow individually, are outside the scope of this document.\n"
- title: 7.1.  General Considerations
  contents:
  - '7.1.  General Considerations

    '
- title: 7.1.1.  At the PE Transmitting the C-Flow on the P-Tunnel
  contents:
  - "7.1.1.  At the PE Transmitting the C-Flow on the P-Tunnel\n   The decision to\
    \ bind a particular C-flow (designated as (C-S,C-G)) to\n   a particular P-tunnel,\
    \ or to switch a particular C-flow to a\n   particular P-tunnel, is always made\
    \ by the PE that is to transmit the\n   C-flow onto the P-tunnel.\n   Whenever\
    \ a PE moves a particular C-flow from one P-tunnel, say P1, to\n   another, say\
    \ P2, care must be taken to ensure that there is no steady\n   state duplication\
    \ of traffic.  At any given time, the PE transmits\n   the C-flow either on P1\
    \ or on P2, but not on both.\n   When a particular PE, say PE1, decides to bind\
    \ a particular C-flow to\n   a particular P-tunnel, say P2, the following procedures\
    \ MUST be\n   applied:\n     - PE1 must issue the required control plane information\
    \ to signal\n       that the specified C-flow is now bound to P-tunnel P2 (see\n\
    \       Section 7.4).\n     - If P-tunnel P2 needs to be constructed from the\
    \ root downwards,\n       PE1 must initiate the signaling to construct P2.  This\
    \ is only\n       required if P2 is an RSVP-TE P2MP LSP.\n     - If the specified\
    \ C-flow is currently bound to a different\n       P-tunnel, say P1, then:\n \
    \        * PE1 MUST wait for a \"switch-over\" delay before sending\n        \
    \   traffic of the C-flow on P-tunnel P2.  It is RECOMMENDED to\n           allow\
    \ this delay to be configurable.\n         * Once the \"switch-over\" delay has\
    \ elapsed, PE1 MUST send\n           traffic for the C-flow on P2 and MUST NOT\
    \ send it on P1.  In\n           no case is any C-flow packet sent on both P-tunnels.\n\
    \   When a C-flow is switched from one P-tunnel to another, the purpose\n   of\
    \ running a switch-over timer is to minimize packet loss without\n   introducing\
    \ packet duplication.  However, jitter may be introduced\n   due to the difference\
    \ in transit delays between the old and new\n   P-tunnels.\n   For best effect,\
    \ the switch-over timer should be configured to a\n   value that is \"just long\
    \ enough\" (a) to allow all the PEs to learn\n   about the new binding of C-flow\
    \ to P-tunnel and (b) to allow the PEs\n   to construct the P-tunnel, if it doesn't\
    \ already exist.\n   If, after such a switch, the \"old\" P-tunnel P1 is no longer\
    \ needed,\n   it SHOULD be torn down and the resources supporting it freed.  The\n\
    \   procedures for \"tearing down\" a P-tunnel are specific to the P-tunnel\n\
    \   technology.\n   Procedures for binding sets of C-flows traveling along specified\n\
    \   C-trees (or sets of C-flows sharing any other characteristic) to a\n   specified\
    \ P-tunnel (or for moving them from one P-tunnel to another)\n   are outside the\
    \ scope of this document.\n"
- title: 7.1.2.  At the PE Receiving the C-flow from the P-Tunnel
  contents:
  - "7.1.2.  At the PE Receiving the C-flow from the P-Tunnel\n   Suppose that a particular\
    \ PE, say PE1, learns, via the procedures of\n   Section 7.4, that some other\
    \ PE, say PE2, has bound a particular\n   C-flow, designated as (C-S,C-G), to\
    \ a particular P-tunnel, say P2.\n   Then, PE1 must determine whether it needs\
    \ to receive (C-S,C-G)\n   traffic from PE2.\n   If BGP is being used to distribute\
    \ C-multicast routing information\n   from PE to PE, the conditions under which\
    \ PE1 needs to receive\n   (C-S,C-G) traffic from PE2 are specified in Section\
    \ 12.3 of\n   [MVPN-BGP].\n   If PIM over an MI-PMSI is being used to distribute\
    \ C-multicast\n   routing from PE to PE, PE1 needs to receive (C-S,C-G) traffic\
    \ from\n   PE2 if one or more of the following conditions holds:\n     - PE1 has\
    \ (C-S,C-G) state such that PE2 is PE1's Upstream PE for\n       (C-S,C-G), and\
    \ PE1 has downstream neighbors (\"non-null olist\")\n       for the (C-S,C-G)\
    \ state.\n     - PE1 has (C-*,C-G) state with an Upstream PE (not necessarily\
    \ PE2)\n       and with downstream neighbors ( \"non-null olist\"), but PE1 does\n\
    \       not have (C-S,C-G) state.\n     - Native PIM methods are being used to\
    \ prevent steady-state packet\n       duplication, and PE1 has either (C-*,C-G)\
    \ or (C-S,C-G) state such\n       that the MI-PMSI is one of the downstream interfaces.\
    \  Note that\n       this includes the case where PE1 is itself sending (C-S,C-G)\n\
    \       traffic on an S-PMSI.  (In this case, PE1 needs to receive the\n     \
    \  (C-S,C-G) traffic from PE2 in order to allow the PIM Assert\n       mechanism\
    \ to function properly.)\n   Irrespective of whether BGP or PIM is being used\
    \ to distribute\n   C-multicast routing information, once PE1 determines that\
    \ it needs to\n   receive (C-S,C-G) traffic from PE2, the following procedures\
    \ MUST be\n   applied:\n     - PE1 MUST take all necessary steps to be able to\
    \ receive the\n       (C-S,C-G) traffic on P2.\n         * If P2 is a PIM tunnel\
    \ or an mLDP LSP, PE1 will need to use\n           PIM or mLDP (respectively)\
    \ to join P2 (unless it is already\n           joined to P2).\n         * PE1\
    \ may need to modify the forwarding state for (C-S,C-G) to\n           indicate\
    \ that (C-S,C-G) traffic is to be accepted on P2.  If\n           P2 is an Aggregate\
    \ Tree, this also implies setting up the\n           demultiplexing forwarding\
    \ entries based on the inner label as\n           described in Section 6.3.3\n\
    \     - If PE1 was previously receiving the (C-S,C-G) C-flow on another\n    \
    \   P-tunnel, say P1, then:\n         * PE1 MAY run a switch-over timer, and until\
    \ it expires, SHOULD\n           accept traffic for the given C-flow on both P1\
    \ and P2;\n         * If, after such a switch, the \"old\" P-tunnel P1 is no longer\n\
    \           needed, it SHOULD be torn down and the resources supporting\n    \
    \       it freed.  The procedures for \"tearing down\" a P-tunnel are\n      \
    \     specific to the P-tunnel technology.\n     - If PE1 later determines that\
    \ it no longer needs to receive any of\n       the C-multicast data that is being\
    \ sent on a particular P-tunnel,\n       it may initiate signaling (specific to\
    \ the P-tunnel technology)\n       to remove itself from that tunnel.\n"
- title: 7.2.  Optimizing Multicast Distribution via S-PMSIs
  contents:
  - "7.2.  Optimizing Multicast Distribution via S-PMSIs\n   Whenever a particular\
    \ multicast stream is being sent on an I-PMSI, it\n   is likely that the data\
    \ of that stream is being sent to PEs that do\n   not require it.  If a particular\
    \ stream has a significant amount of\n   traffic, it may be beneficial to move\
    \ it to an S-PMSI that includes\n   only those PEs that are transmitters and/or\
    \ receivers (or at least\n   includes fewer PEs that are neither).\n   If explicit\
    \ tracking is being done, S-PMSI creation can also be\n   triggered on other criteria.\
    \  For instance, there could be a \"pseudo-\n   wasted bandwidth\" criterion:\
    \ switching to an S-PMSI would be done if\n   the bandwidth multiplied by the\
    \ number of uninterested PEs (PE that\n   are receiving the stream but have no\
    \ receivers) is above a specified\n   threshold.  The motivation is that (a) the\
    \ total bandwidth wasted by\n   many sparsely subscribed low-bandwidth groups\
    \ may be large and (b)\n   there's no point to moving a high-bandwidth group to\
    \ an S-PMSI if all\n   the PEs have receivers for it.\n   Switching a (C-S,C-G)\
    \ stream to an S-PMSI may require the root of the\n   S-PMSI to determine the\
    \ egress PEs that need to receive the (C-S,C-G)\n   traffic.  This is true in\
    \ the following cases:\n     - If the P-tunnel is a source-initiated tree, such\
    \ as an RSVP-TE\n       P2MP Tunnel, the PE needs to know the leaves of the tree\
    \ before\n       it can instantiate the S-PMSI.\n     - If a PE instantiates multiple\
    \ S-PMSIs, belonging to different\n       MVPNs, using one P-multicast tree, such\
    \ a tree is termed an\n       Aggregate Tree with a selective mapping.  The setting\
    \ up of such\n       an Aggregate Tree requires the ingress PE to know all the\
    \ other\n       PEs that have receivers for multicast groups that are mapped onto\n\
    \       the tree.\n   The above two cases require that explicit tracking be done\
    \ for the\n   (C-S,C-G) stream.  The root of the S-PMSI MAY decide to do explicit\n\
    \   tracking of this stream only after it has determined to move the\n   stream\
    \ to an S-PMSI, or it MAY have been doing explicit tracking all\n   along.\n \
    \  If the S-PMSI is instantiated by a P-multicast tree, the PE at the\n   root\
    \ of the tree must signal the leaves of the tree that the\n   (C-S,C-G) stream\
    \ is now bound to the S-PMSI.  Note that the PE could\n   create the identity\
    \ of the P-multicast tree prior to the actual\n   instantiation of the P-tunnel.\n\
    \   If the S-PMSI is instantiated by a source-initiated P-multicast tree\n   (e.g.,\
    \ an RSVP-TE P2MP tunnel), the PE at the root of the tree must\n   establish the\
    \ source-initiated P-multicast tree to the leaves.  This\n   tree MAY have been\
    \ established before the leaves receive the S-PMSI\n   binding, or it MAY be established\
    \ after the leaves receive the\n   binding.  The leaves MUST NOT switch to the\
    \ S-PMSI until they receive\n   both the binding and the tree signaling message.\n"
- title: 7.3.  Announcing the Presence of Unsolicited Flooded Data
  contents:
  - "7.3.  Announcing the Presence of Unsolicited Flooded Data\n   A PE may receive\
    \ \"unsolicited\" data from a CE, where the data is\n   intended to be flooded\
    \ to the other PEs of the same MVPN and then on\n   to other CEs.  By \"unsolicited\"\
    , we mean that the data is to be\n   delivered to all the other PEs of the MVPN,\
    \ even though those PEs may\n   not have sent any control information indicating\
    \ that they need to\n   receive that data.\n   For example, if the BSR [BSR] is\
    \ being used within the MVPN, BSR\n   control messages may be received by a PE\
    \ from a CE.  These need to be\n   forwarded to other PEs, even though no PE ever\
    \ issues any kind of\n   explicit signal saying that it wants to receive BSR messages.\n\
    \   If a PE receives a BSR message from a CE, and if the CE's MVPN has an\n  \
    \ MI-PMSI, then the PE can just send BSR messages on the appropriate\n   P-tunnel.\
    \  Otherwise, the PE MUST announce the binding of a\n   particular C-flow to a\
    \ particular P-tunnel, using the procedures of\n   Section 7.4.  The particular\
    \ C-flow in this case would be\n   (C-IPaddress_of_PE, ALL-PIM-ROUTERS).  The\
    \ P-tunnel identified by the\n   procedures of Section 7.4 may or may not be one\
    \ that was previously\n   identified in the PMSI Tunnel attribute of an I-PMSI\
    \ A-D route.\n   Further procedures for handling BSR may be found in Sections\
    \ 5.2.1\n   and 5.3.4.\n   Analogous procedures may be used for announcing the\
    \ presence of other\n   sorts of unsolicited flooded data, e.g., dense mode data\
    \ or data from\n   proprietary protocols that presume messages can be flooded.\
    \  However,\n   a full specification of the procedures for traffic other than\
    \ BSR\n   traffic is outside the scope of this document.\n"
- title: 7.4.  Protocols for Binding C-Flows to P-Tunnels
  contents:
  - "7.4.  Protocols for Binding C-Flows to P-Tunnels\n   We describe two protocols\
    \ for binding C-flows to P-tunnels.\n   These protocols can be used for moving\
    \ C-flows from I-PMSIs to\n   S-PMSIs, as long as the S-PMSI is instantiated by\
    \ a P-multicast tree.\n   (If the S-PMSI is instantiated by means of ingress replication,\
    \ the\n   procedures of Section 6.4.5 suffice.)\n   These protocols can also be\
    \ used for other cases in which it is\n   necessary to bind specific C-flows to\
    \ specific P-tunnels.\n"
- title: 7.4.1.  Using BGP S-PMSI A-D Routes
  contents:
  - "7.4.1.  Using BGP S-PMSI A-D Routes\n   Not withstanding the name of the mechanism\
    \ \"S-PMSI A-D routes\", the\n   mechanism to be specified in this section may\
    \ be used any time it is\n   necessary to advertise a binding of a C-flow to a\
    \ particular\n   P-tunnel.\n"
- title: 7.4.1.1.  Advertising C-Flow Binding to P-Tunnel
  contents:
  - "7.4.1.1.  Advertising C-Flow Binding to P-Tunnel\n   The ingress PE informs all\
    \ the PEs that are on the path to receivers\n   of the (C-S,C-G) of the binding\
    \ of the P-tunnel to the (C-S,C-G).\n   The BGP announcement is done by sending\
    \ an update for the MCAST-VPN\n   address family.  An S-PMSI A-D route is used,\
    \ containing the\n   following information:\n      1. The IP address of the originating\
    \ PE.\n      2. The RD configured locally for the MVPN.  This is required to\n\
    \         uniquely identify the (C-S,C-G) as the addresses could overlap\n   \
    \      between different MVPNs.  This is the same RD value used in the\n     \
    \    auto-discovery process.\n      3. The C-S address.\n      4. The C-G address.\n\
    \      5. A PE MAY use a single P-tunnel to aggregate two or more\n         S-PMSIs.\
    \  If the PE already advertised unaggregated S-PMSI A-D\n         routes for these\
    \ S-PMSIs, then a decision to aggregate them\n         requires the PE to re-advertise\
    \ these routes.  The re-\n         advertised routes MUST be the same as the original\
    \ ones, except\n         for the PMSI Tunnel attribute.  If the PE has not previously\n\
    \         advertised S-PMSI A-D routes for these S-PMSIs, then the\n         aggregation\
    \ requires the PE to advertise (new) S-PMSI A-D\n         routes for these S-PMSIs.\
    \  The PMSI Tunnel attribute in the\n         newly advertised/re-advertised routes\
    \ MUST carry the identity\n         of the P-tunnel that aggregates the S-PMSIs.\n\
    \         If all these aggregated S-PMSIs belong to the same MVPN, and\n     \
    \    this MVPN uses PIM as its C-multicast routing protocol, then\n         the\
    \ corresponding S-PMSI A-D routes MAY carry an MPLS upstream-\n         assigned\
    \ label [MPLS-UPSTREAM-LABEL].  Moreover, in this case,\n         the labels MUST\
    \ be distinct on a per-MVPN basis, and MAY be\n         distinct on a per-route\
    \ basis.\n         If all these aggregated S-PMSIs belong to the MVPN(s) that\
    \ use\n         mLDP as its C-multicast routing protocol, then the\n         corresponding\
    \ S-PMSI A-D routes MUST carry an MPLS upstream-\n         assigned label [MPLS-UPSTREAM-LABEL],\
    \ and these labels MUST be\n         distinct on a per-route (per-mLDP-FEC) basis,\
    \ irrespective of\n         whether the aggregated S-PMSIs belong to the same\
    \ or different\n         MVPNs.\n   When a PE distributes this information via\
    \ BGP, it must include the\n   following:\n      1. An identifier for the particular\
    \ P-tunnel to which the stream\n         is to be bound.  This identifier is a\
    \ structured field that\n         includes the following information:\n      \
    \     * The type of tunnel\n           * An identifier for the tunnel.  The form\
    \ of the identifier\n             will depend upon the tunnel type.  The combination\
    \ of\n             tunnel identifier and tunnel type should contain enough\n \
    \            information to enable all the PEs to \"join\" the tunnel and\n  \
    \           receive messages from it.\n      2. Route Target Extended Communities\
    \ attribute.  This is used as\n         described in Section 4.\n"
- title: 7.4.1.2.  Explicit Tracking
  contents:
  - "7.4.1.2.  Explicit Tracking\n   If the PE wants to enable explicit tracking for\
    \ the specified flow,\n   it also indicates this in the A-D route it uses to bind\
    \ the flow to a\n   particular P-tunnel.  Then, any PE that receives the A-D route\
    \ will\n   respond with a \"Leaf A-D route\" in which it identifies itself as\
    \ a\n   receiver of the specified flow.  The Leaf A-D route will be withdrawn\n\
    \   when the PE is no longer a receiver for the flow.\n   If the PE needs to enable\
    \ explicit tracking for a flow without at the\n   same time binding the flow to\
    \ a specific P-tunnel, it can do so by\n   sending an S-PMSI A-D route whose NLRI\
    \ identifies the flow and whose\n   PMSI Tunnel attribute has its tunnel type\
    \ value set to \"no tunnel\n   information present\" and its \"leaf information\
    \ required\" bit set to\n   1.  This will elicit the Leaf A-D routes.  This is\
    \ useful when the PE\n   needs to know the receivers before selecting a P-tunnel.\n"
- title: 7.4.2.  UDP-Based Protocol
  contents:
  - "7.4.2.  UDP-Based Protocol\n   This procedure carries its control messages in\
    \ UDP and requires that\n   the MVPN have an MI-PMSI that can be used to carry\
    \ the control\n   messages.\n"
- title: 7.4.2.1.  Advertising C-Flow Binding to P-Tunnel
  contents:
  - "7.4.2.1.  Advertising C-Flow Binding to P-Tunnel\n   In order for a given PE\
    \ to move a particular C-flow to a particular\n   P-tunnel, an \"S-PMSI Join message\"\
    \ is sent periodically on the\n   MI-PMSI.  (Notwithstanding the name of the mechanism,\
    \ the mechanism\n   may be used to bind a flow to any P-tunnel.)  The S-PMSI Join\
    \ message\n   is a UDP-encapsulated message whose destination address is ALL-PIM-\n\
    \   ROUTERS (224.0.0.13) and whose destination port is 3232.\n   The S-PMSI Join\
    \ message contains the following information:\n     - An identifier for the particular\
    \ multicast stream that is to be\n       bound to the P-tunnel.  This can be represented\
    \ as an (S,G) pair.\n     - An identifier for the particular P-tunnel to which\
    \ the stream is\n       to be bound.  This identifier is a structured field that\
    \ includes\n       the following information:\n         * The type of tunnel used\
    \ to instantiate the S-PMSI.\n         * An identifier for the tunnel.  The form\
    \ of the identifier\n           will depend upon the tunnel type.  The combination\
    \ of tunnel\n           identifier and tunnel type should contain enough information\n\
    \           to enable all the PEs to \"join\" the tunnel and receive\n       \
    \    messages from it.\n         * If (and only if) the identified P-tunnel is\
    \ aggregating\n           several S-PMSIs, any demultiplexing information needed\
    \ by the\n           tunnel encapsulation protocol to identify a particular\n\
    \           S-PMSI.\n   If the policy for the MVPN is that traffic is sent/received\
    \ by\n   default over an MI-PMSI, then traffic for a particular C-flow can be\n\
    \   switched back to the MI-PMSI simply by ceasing to send S-PMSI Joins\n   for\
    \ that C-flow.\n   Note that an S-PMSI Join that is not received over a PMSI (e.g.,\
    \ one\n   that is received directly from a CE) is an illegal packet that MUST\n\
    \   be discarded.\n"
- title: 7.4.2.2.  Packet Formats and Constants
  contents:
  - "7.4.2.2.  Packet Formats and Constants\n   The S-PMSI Join message is encapsulated\
    \ within UDP and has the\n   following type/length/value (TLV) encoding:\n   \
    \     0                   1                   2                   3\n        0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |     Type      |            Length           |     Value       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                               .                               |\n      \
    \ |                               .                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type (8 bits)\n   Length (16 bits): the total number of octets in the Type,\
    \ Length, and\n   Value fields combined\n   Value (variable length)\n   In this\
    \ specification, only one type of S-PMSI Join is defined.  A\n   Type 1 S-PMSI\
    \ Join is used when the S-PMSI tunnel is a PIM tunnel\n   that is used to carry\
    \ a single multicast stream, where the packets of\n   that stream have IPv4 source\
    \ and destination IP addresses.\n   The S-PMSI Join format to use when the C-source\
    \ and C-group are IPv6\n   addresses will be defined in a follow-on document.\n\
    \        0                   1                   2                   3\n     \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |     Type      |           Length            |    Reserved     |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                           C-source                            |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                           C-group                             |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                           P-group                             |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type\
    \ (8 bits): 1\n   Length (16 bits): 16\n   Reserved (8 bits): This field SHOULD\
    \ be zero when transmitted, and\n   MUST be ignored when received.\n   C-source\
    \ (32 bits): the IPv4 address of the traffic source in the\n   VPN.\n   C-group\
    \ (32 bits): the IPv4 address of the multicast traffic\n   destination address\
    \ in the VPN.\n   P-group (32 bits): the IPv4 group address that the PE router\
    \ is going\n   to use to encapsulate the flow (C-source, C-group).\n   The P-group\
    \ identifies the S-PMSI P-tunnel, and the (C-S,C-G)\n   identifies the multicast\
    \ flow that is carried in the P-tunnel.\n   The protocol uses the following constants.\n\
    \   [S-PMSI_DELAY]:\n       Once an S-PMSI Join message has been sent, the PE\
    \ router that is\n       to transmit onto the S-PMSI will delay this amount of\
    \ time before\n       it begins using the S-PMSI.  The default value is 3 seconds.\n\
    \   [S-PMSI_TIMEOUT]:\n       If a PE (other than the transmitter) does not receive\
    \ any packets\n       over the S-PMSI P-tunnel for this amount of time, the PE\
    \ will\n       prune itself from the S-PMSI P-tunnel, and will expect (C-S,C-G)\n\
    \       packets to arrive on an I-PMSI.  The default value is 3 minutes.\n   \
    \    This value must be consistent among PE routers.\n   [S-PMSI_HOLDOWN]:\n \
    \      If the PE that transmits onto the S-PMSI does not see any\n       (C-S,C-G)\
    \ packets for this amount of time, it will resume sending\n       (C-S,C-G) packets\
    \ on an I-PMSI.\n       This is used to avoid oscillation when traffic is bursty.\
    \  The\n       default value is 1 minute.\n   [S-PMSI_INTERVAL]:\n       The interval\
    \ the transmitting PE router uses to periodically send\n       the S-PMSI Join\
    \ message.  The default value is 60 seconds.\n"
- title: 7.4.3.  Aggregation
  contents:
  - "7.4.3.  Aggregation\n   S-PMSIs can be aggregated on a P-multicast tree.  The\
    \ S-PMSI to\n   (C-S,C-G) binding advertisement supports aggregation.  Furthermore,\n\
    \   the aggregation procedures of Section 6.3 apply.  It is also possible\n  \
    \ to aggregate both S-PMSIs and I-PMSIs on the same P-multicast tree.\n"
- title: 8.  Inter-AS Procedures
  contents:
  - "8.  Inter-AS Procedures\n   If an MVPN has sites in more than one AS, it requires\
    \ one or more\n   PMSIs to be instantiated by inter-AS P-tunnels.  This document\n\
    \   describes two different types of inter-AS P-tunnel:\n      1. \"Segmented\
    \ inter-AS P-tunnels\"\n         A segmented inter-AS P-tunnel consists of a number\
    \ of\n         independent segments that are stitched together at the ASBRs.\n\
    \         There are two types of segment: inter-AS segments and intra-AS\n   \
    \      segments.  The segmented inter-AS P-tunnel consists of\n         alternating\
    \ intra-AS and inter-AS segments.\n         Inter-AS segments connect adjacent\
    \ ASBRs of different ASes;\n         these \"one-hop\" segments are instantiated\
    \ as unicast P-tunnels.\n         Intra-AS segments connect ASBRs and PEs that\
    \ are in the same\n         AS.  An intra-AS segment may be of whatever technology\
    \ is\n         desired by the SP that administers the that AS.  Different\n  \
    \       intra-AS segments may be of different technologies.\n         Note that\
    \ the intra-AS segments of inter-AS P-tunnels form a\n         category of P-tunnels\
    \ that is distinct from simple intra-AS\n         P-tunnels; we will rely on this\
    \ distinction later (see Section\n         9).\n         A segmented inter-AS\
    \ P-tunnel can be thought of as a tree that\n         is rooted at a particular\
    \ AS, and that has, as its leaves, the\n         other ASes that need to receive\
    \ multicast data from the root\n         AS.\n      2. \"Non-segmented Inter-AS\
    \ P-tunnels\"\n         A non-segmented inter-AS P-tunnel is a single P-tunnel\
    \ that\n         spans AS boundaries.  The tunnel technology cannot change from\n\
    \         one point in the tunnel to the next, so all ASes through which\n   \
    \      the P-tunnel passes must support that technology.  In essence,\n      \
    \   AS boundaries are of no significance to a non-segmented inter-\n         AS\
    \ P-tunnel.\n   Section 10 of [RFC4364] describes three different options for\n\
    \   supporting unicast inter-AS BGP/MPLS IP VPNs, known as options A, B,\n   and\
    \ C.  We describe below how both segmented and non-segmented inter-\n   AS trees\
    \ can be supported when options B or C are used.  (Option A\n   does not pass\
    \ any routing information through an ASBR at all, so no\n   special inter-AS procedures\
    \ are needed.)\n"
- title: 8.1.  Non-Segmented Inter-AS P-Tunnels
  contents:
  - "8.1.  Non-Segmented Inter-AS P-Tunnels\n   In this model, the previously described\
    \ discovery and tunnel setup\n   mechanisms are used, even though the PEs belonging\
    \ to a given MVPN\n   may be in different ASes.\n"
- title: 8.1.1.  Inter-AS MVPN Auto-Discovery
  contents:
  - "8.1.1.  Inter-AS MVPN Auto-Discovery\n   The previously described BGP-based auto-discovery\
    \ mechanisms work \"as\n   is\" when an MVPN contains PEs that are in different\
    \ Autonomous\n   Systems.  However, please note that, if non-segmented inter-AS\n\
    \   P-tunnels are to be used, then the Intra-AS I-PMSI A-D routes MUST be\n  \
    \ distributed across AS boundaries!\n"
- title: 8.1.2.  Inter-AS MVPN Routing Information Exchange
  contents:
  - "8.1.2.  Inter-AS MVPN Routing Information Exchange\n   When non-segmented inter-AS\
    \ P-tunnels are used, MVPN C-multicast\n   routing information may be exchanged\
    \ by means of PIM peering across\n   an MI-PMSI or by means of BGP carrying C-multicast\
    \ routes.\n   When PIM peering is used to distribute the C-multicast routing\n\
    \   information, a PE that sends C-PIM Join/Prune messages for a\n   particular\
    \ (C-S,C-G) must be able to identify the PE that is its PIM\n   adjacency on the\
    \ path to S.  This is the \"Selected Upstream PE\"\n   described in Section 5.1.3.\n\
    \   If BGP (rather than PIM) is used to distribute the C-multicast\n   routing\
    \ information, and if option b of Section 10 of [RFC4364] is in\n   use, then\
    \ the C-multicast routes will be installed in the ASBRs along\n   the path from\
    \ each multicast source in the MVPN to each multicast\n   receiver in the MVPN.\
    \  If option b is not in use, the C-multicast\n   routes are not installed in\
    \ the ASBRs.  The handling of the\n   C-multicast routes in either case is thus\
    \ exactly analogous to the\n   handling of unicast VPN-IP routes in the corresponding\
    \ case.\n"
- title: 8.1.3.  Inter-AS P-Tunnels
  contents:
  - "8.1.3.  Inter-AS P-Tunnels\n   The procedures described earlier in this document\
    \ can be used to\n   instantiate either an I-PMSI or an S-PMSI with inter-AS P-tunnels.\n\
    \   Specific tunneling techniques require some explanation.\n   If ingress replication\
    \ is used, the inter-AS PE-PE P-tunnels will use\n   the inter-AS tunneling procedures\
    \ for the tunneling technology used.\n   Procedures in [RSVP-P2MP] are used for\
    \ inter-AS RSVP-TE P2MP\n   P-tunnels.\n   Procedures for using PIM to set up\
    \ the P-tunnels are discussed in the\n   next section.\n"
- title: 8.1.3.1.  PIM-Based Inter-AS P-Multicast Trees
  contents:
  - "8.1.3.1.  PIM-Based Inter-AS P-Multicast Trees\n   When PIM is used to set up\
    \ a non-segmented inter-AS P-multicast tree,\n   the PIM Join/Prune messages used\
    \ to join the tree contain the IP\n   address of the Upstream PE.  However, there\
    \ are two special\n   considerations that must be taken into account:\n     -\
    \ It is possible that the P routers within one or more of the ASes\n       will\
    \ not have routes to the Upstream PE.  For example, if an AS\n       has a \"\
    BGP-free core\", the P routers in an AS will not have\n       routes to addresses\
    \ outside the AS.\n     - If the PIM Join/Prune message must travel through several\
    \ ASes,\n       it is possible that the ASBRs will not have routes to he PE\n\
    \       routers.  For example, in an inter-AS VPN constructed according\n    \
    \   to \"option b\" of Section 10 of [RFC4364], the ASBRs do not\n       necessarily\
    \ have routes to the PE routers.\n   In either case, \"ordinary\" PIM Join/Prune\
    \ messages cannot be routed\n   to the Upstream PE.  Therefore, in that case,\
    \ the PIM Join/Prune\n   messages MUST contain the \"PIM MVPN Join attribute\"\
    .  This allows the\n   multicast distribution tree to be properly constructed,\
    \ even if\n   routes to PEs in other ASes do not exist in the given AS's IGP and\n\
    \   even if the routes to those PEs do not exist in BGP.  The use of a\n   PIM\
    \ MVPN Join attribute in the PIM messages allows the inter-AS trees\n   to be\
    \ built.\n   The PIM MVPN Join attribute adds the following information to the\
    \ PIM\n   Join/Prune messages: a \"proxy address\", which contains the address\
    \ of\n   the next ASBR on the path to the Upstream PE.  When the PIM\n   Join/Prune\
    \ arrives at the ASBR that is identified by the \"proxy\n   address\", that ASBR\
    \ must change the proxy address to identify the\n   next hop ASBR.\n   This information\
    \ allows the PIM Join/Prune to be routed through an\n   AS, even if the P routers\
    \ of that AS do not have routes to the\n   Upstream PE.  However, this information\
    \ is not sufficient to enable\n   the ASBRs to route the Join/Prune if the ASBRs\
    \ themselves do not have\n   routes to the Upstream PE.\n   However, even if the\
    \ ASBRs do not have routes to the Upstream PE, the\n   procedures of this document\
    \ ensure that they will have Intra-AS\n   I-PMSI A-D routes that lead to the Upstream\
    \ PE.  (Recall that if non-\n   segmented inter-AS P-tunnels are being used, the\
    \ ASBRs and PEs will\n   have Intra-AS I-PMSI A-D routes that have been distributed\
    \ inter-AS.)\n   So, rather than having the PIM Join/Prune messages routed by\
    \ the\n   ASBRs along a route to the Upstream PE, the PIM Join/Prune messages\n\
    \   MUST be routed along the path determined by the Intra-AS I-PMSI A-D\n   routes.\n\
    \   The basic format of a PIM Join attribute is specified in\n   [PIM-ATTRIB].\
    \  The details of the PIM MVPN Join attribute are\n   specified in the next section.\n"
- title: 8.1.3.2.  The PIM MVPN Join Attribute
  contents:
  - '8.1.3.2.  The PIM MVPN Join Attribute

    '
- title: 8.1.3.2.1.  Definition
  contents:
  - "8.1.3.2.1.  Definition\n   In [PIM-ATTRIB], the notion of a \"join attribute\"\
    \ is defined, and a\n   format for included join attributes in PIM Join/Prune\
    \ messages is\n   specified.  We now define a new join attribute, which we call\
    \ the\n   \"MVPN Join attribute\".\n     0                   1               \
    \    2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |F|E| Attr_Type | Length        |     Proxy IP address\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                    |      RD\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-.......\n\
    \   The Attr_Type field of the MVPN Join attribute is set to 1.\n   The F bit\
    \ is set to 0.\n   Two information fields are carried in the MVPN Join attribute:\n\
    \      - Proxy IP address: The IP address of the node towards which the\n    \
    \    PIM Join/Prune message is to be forwarded.  This will be either\n       \
    \ an IPv4 or an IPv6 address, depending on whether the PIM\n        Join/Prune\
    \ message itself is IPv4 or IPv6.\n      - RD: An eight-byte RD.  This immediately\
    \ follows the proxy IP\n        address.\n   The PIM message also carries the\
    \ address of the Upstream PE.\n   In the case of an intra-AS MVPN, the proxy and\
    \ the Upstream PE are\n   the same.  In the case of an inter-AS MVPN, the proxy\
    \ will be the\n   ASBR that is the exit point from the local AS on the path to\
    \ the\n   Upstream PE.\n"
- title: 8.1.3.2.2.  Usage
  contents:
  - "8.1.3.2.2.  Usage\n   When a PE router originates a PIM Join/Prune message in\
    \ order to set\n   up an inter-AS PMSI, it does so as a result of having received\
    \ a\n   particular Intra-AS I-PMSI A-D route or S-PMSI A-D route.  It\n   includes\
    \ an MVPN Join attribute whose fields are set as follows:\n     - If the Upstream\
    \ PE is in the same AS as the local PE, then the\n       proxy field contains\
    \ the address of the Upstream PE.  Otherwise,\n       it contains the address\
    \ of the BGP Next Hop of the route to the\n       Upstream PE.\n     - The RD\
    \ field contains the RD from the NLRI of the Intra-AS A-D\n       route.\n   \
    \  - The Upstream PE field contains the address of the PE that\n       originated\
    \ the Intra-AS I-PMSI A-D route or S-PMSI A-D route\n       (obtained from the\
    \ NLRI of that route).\n   When a PIM router processes a PIM Join/Prune message\
    \ with an MVPN\n   Join attribute, it first checks to see if the proxy field contains\n\
    \   one of its own addresses.\n   If not, the router uses the proxy IP address\
    \ in order to determine\n   the RPF interface and neighbor.  The MVPN Join attribute\
    \ must be\n   passed upstream unchanged.\n   If the proxy address is one of the\
    \ router's own IP addresses, then\n   the router looks in its BGP routing table\
    \ for an Intra-AS A-D route\n   whose NLRI consists of the Upstream PE address\
    \ prepended with the RD\n   from the Join attribute.  If there is no match, the\
    \ PIM message is\n   discarded.  If there is a match, the IP address from the\
    \ BGP next hop\n   field of the matching route is used in order to determine the\
    \ RPF\n   interface and neighbor.  When the PIM Join/Prune is forwarded\n   upstream,\
    \ the proxy field is replaced with the address of the BGP\n   next hop, and the\
    \ RD and Upstream PE fields are left unchanged.\n   The use of non-segmented inter-AS\
    \ trees constructed via BIDIR-PIM is\n   outside the scope of this document.\n"
- title: 8.2.  Segmented Inter-AS P-Tunnels
  contents:
  - "8.2.  Segmented Inter-AS P-Tunnels\n   The procedures for setting up and maintaining\
    \ segmented inter-AS\n   Inclusive and Selective P-tunnels may be found in [MVPN-BGP].\n"
- title: 9.  Preventing Duplication of Multicast Data Packets
  contents:
  - "9.  Preventing Duplication of Multicast Data Packets\n   Consider the case of\
    \ an egress PE that receives packets of a\n   particular C-flow, (C-S,C-G), over\
    \ a non-aggregated S-PMSI.  The\n   procedures described so far will never cause\
    \ the PE to receive\n   duplicate copies of any packet in that stream.  It is\
    \ possible that\n   the (C-S,C-G) stream is carried in more than one S-PMSI; this\
    \ may\n   happen when the site that contains C-S is multihomed to more than one\n\
    \   PE.  However, a PE that needs to receive (C-S,C-G) packets only joins\n  \
    \ one of these S-PMSIs, and so it only receives one copy of each\n   packet. \
    \ However, if the data packets of stream (C-S,C-G) are carried\n   in either an\
    \ I-PMSI or an aggregated S-PMSI, then the procedures\n   specified so far make\
    \ it possible for an egress PE to receive more\n   than one copy of each data\
    \ packet.  Additional procedures are needed\n   to either make this impossible\
    \ or ensure that the egress PE does not\n   forward duplicates to the CE routers.\n\
    \   This section covers only the situation where the C-trees are\n   unidirectional,\
    \ in either the ASM or SSM service models.  The case\n   where the C-trees are\
    \ bidirectional is considered separately in\n   Section 11.\n   There are two\
    \ cases where the procedures specified so far make it\n   possible for an egress\
    \ PE to receive duplicate copies of a multicast\n   data packet.  These are as\
    \ follows:\n      1. The first case occurs when both of the following conditions\n\
    \         hold:\n            a. an MVPN site that contains C-S or C-RP is multihomed\
    \ to\n               more than one PE, and\n            b. either an I-PMSI or\
    \ an aggregated S-PMSI is used for\n               carrying the packets originated\
    \ by C-S.\n         In this case, an egress PE may receive one copy of the packet\n\
    \         from each PE to which the site is homed.  This case is\n         discussed\
    \ further in Section 9.2.\n      2. The second case occurs when all of the following\
    \ conditions\n         hold:\n            a. the IP destination address of the\
    \ customer packet, C-G,\n               identifies a multicast group that is operating\
    \ in ASM\n               mode and whose C-multicast tree is set up using PIM-SM,\n\
    \            b. an MI-PMSI is used for carrying the data packets, and\n      \
    \      c. a router or a CE in a site connected to the egress PE\n            \
    \   switches from the C-RP tree to the C-S tree.\n         In this case, it is\
    \ possible to get one copy of a given packet\n         from the ingress PE attached\
    \ to the C-RP's site and one from\n         the ingress PE attached to the C-S's\
    \ site.  This case is\n         discussed further in Section 9.3.\n   Additional\
    \ procedures are therefore needed to ensure that no MVPN\n   customer sees steady\
    \ state multicast data packet duplication.  There\n   are three procedures that\
    \ may be used:\n      1. Discarding data packets received from the \"wrong\" PE\n\
    \      2. Single Forwarder Selection\n      3. Native PIM methods\n   These methods\
    \ are described in Section 9.1.  Their applicability to\n   the two scenarios\
    \ where duplication is possible is discussed in\n   Sections 9.2 and 9.3.\n"
- title: 9.1.  Methods for Ensuring Non-Duplication
  contents:
  - "9.1.  Methods for Ensuring Non-Duplication\n   Every MVPN MUST use at least one\
    \ of the three methods for ensuring\n   non-duplication.\n"
- title: 9.1.1.  Discarding Packets from Wrong PE
  contents:
  - "9.1.1.  Discarding Packets from Wrong PE\n   Per Section 5.1.3, an egress PE,\
    \ say PE1, chooses a specific Upstream\n   PE, for given (C-S,C-G).  When PE1\
    \ receives a (C-S,C-G) packet from a\n   PMSI, it may be able to identify the\
    \ PE that transmitted the packet\n   onto the PMSI.  If that transmitter is other\
    \ than the PE selected by\n   PE1 as the Upstream PE, then PE1 can drop the packet.\
    \  This means\n   that the PE will see a duplicate, but the duplicate will not\
    \ get\n   forwarded.\n   The method used by an egress PE to determine the ingress\
    \ PE for a\n   particular packet, received over a particular PMSI, depends on\
    \ the\n   P-tunnel technology that is used to instantiate the PMSI.  If the\n\
    \   P-tunnel is a P2MP LSP, a PIM-SM or PIM-SSM tree, or a unicast\n   P-tunnel\
    \ that uses IP encapsulation, then the tunnel encapsulation\n   contains information\
    \ that can be used (possibly along with other\n   state information in the PE)\
    \ to determine the ingress PE, as long as\n   the P-tunnel is instantiating an\
    \ intra-AS PMSI or an inter-AS PMSI\n   which is supported by a non-segmented\
    \ inter-AS tunnel.\n   Even when inter-AS segmented P-tunnels are used, if an\
    \ aggregated\n   S-PMSI is used for carrying the packets, the tunnel encapsulation\n\
    \   must have some information that can be used to identify the PMSI; in\n   turn,\
    \ that implicitly identifies the ingress PE.\n   Consider the case of an I-PMSI\
    \ that spans multiple ASes and that is\n   instantiated by segmented inter-AS\
    \ P-tunnels.  Suppose it is carrying\n   data that is traveling along a particular\
    \ C-tree.  Suppose also that\n   the C-root of that C-tree is multihomed to two\
    \ or more PEs, and that\n   each such PE is in a different AS than the others.\
    \  Then, if there is\n   any duplicate traffic, the duplicates will arrive on\
    \ a different\n   P-tunnel.  Specifically, if the PE was expecting the traffic\
    \ on a\n   particular inter-AS P-tunnel, duplicate traffic will arrive either\
    \ on\n   an intra-AS P-tunnel (not an intra-AS segment of an inter-AS\n   P-tunnel)\
    \ or on some other inter-AS P-tunnel.  To detect duplicates,\n   the PE has to\
    \ keep track of which inter-AS A-D route the PE uses for\n   sending MVPN multicast\
    \ routing information towards the C-S/C-RP.  The\n   PE MUST process received\
    \ (multicast) traffic originated by C-S/C-RP\n   only from the inter-AS P-tunnel\
    \ that was carried in the best Inter-AS\n   A-D route for the MVPN and that was\
    \ originated by the AS that\n   contains C-S/C-RP (where \"the best\" is determined\
    \ by the PE).  The PE\n   MUST discard, as duplicates, all other multicast traffic\
    \ originated\n   by the C-S/C-RP, but received on any other P-tunnel.\n   If,\
    \ for a given MVPN, (a) an MI-PMSI is used for carrying multicast\n   data packets,\
    \ (b) the MI-PMSI is instantiated by a segmented inter-AS\n   P-tunnel, (c) the\
    \ C-S or C-RP is multihomed to different PEs, and (d)\n   at least two such PEs\
    \ are in the same AS, then, depending on the\n   tunneling technology used to\
    \ instantiate the MI-PMSI, it may not\n   always be possible for the egress PE\
    \ to determine the Upstream PE.\n   In that case, the procedure of Sections 9.1.2\
    \ or 9.1.3 must be used.\n   NB: Section 10 describes an exception case where\
    \ PE1 has to accept a\n   packet even if it is not from the Selected Upstream\
    \ PE.\n"
- title: 9.1.2.  Single Forwarder Selection
  contents:
  - "9.1.2.  Single Forwarder Selection\n   Section 5.1 specifies a procedure for\
    \ choosing a \"default Upstream PE\n   selection\", such that (except during routing\
    \ transients) all PEs will\n   choose the same default Upstream PE.  To ensure\
    \ that duplicate\n   packets are not sent through the backbone (except during\
    \ routing\n   transients), an ingress PE does not forward to the backbone any\n\
    \   (C-S,C-G) multicast data packet it receives from a CE, unless the PE\n   is\
    \ the default Upstream PE selection.\n   One difference in effect between this\
    \ procedure and the procedure of\n   Section 9.1.1 is that this procedure sends\
    \ only one copy of each\n   packet to each egress PE, rather than sending multiple\
    \ copies and\n   forcing the egress PE to discard all but one.\n"
- title: 9.1.3.  Native PIM Methods
  contents:
  - "9.1.3.  Native PIM Methods\n   If PE-PE multicast routing information for a given\
    \ MVPN is being\n   disseminated by running PIM over an MI-PMSI, then native PIM\
    \ methods\n   will prevent steady state data packet duplication.  The PIM Assert\n\
    \   mechanism prevents steady state duplication in the scenario of\n   Section\
    \ 9.2, even if Single Forwarder Selection is not done.  The PIM\n   Prune(S,G,rpt)\
    \ mechanism addresses the scenario of Section 9.3.\n"
- title: 9.2.  Multihomed C-S or C-RP
  contents:
  - "9.2.  Multihomed C-S or C-RP\n   Any of the three methods of Section 9.1 will\
    \ prevent steady state\n   duplicates in the case of a multihomed C-S or C-RP.\n"
- title: 9.3.  Switching from the C-RP Tree to the C-S Tree
  contents:
  - '9.3.  Switching from the C-RP Tree to the C-S Tree

    '
- title: 9.3.1.  How Duplicates Can Occur
  contents:
  - "9.3.1.  How Duplicates Can Occur\n   If some PEs are on the C-S tree and some\
    \ are on the C-RP tree, then a\n   PE may also receive duplicate data traffic\
    \ after a (C-*,C-G) to\n   (C-S,C-G) switch.\n   If PIM is being used on an MI-PMSI\
    \ to disseminate multicast routing\n   information, native PIM methods (in particular,\
    \ the use of the\n   Prune(S,G,rpt) message) prevent steady state data duplication\
    \ in this\n   case.\n   If BGP C-multicast routing is being used, then the procedure\
    \ of\n   Section 9.1.1, if applicable, can be used to prevent duplication.\n \
    \  However, if that procedure is not applicable, then the procedure of\n   Section\
    \ 9.1.2 is not sufficient to prevent steady state data\n   duplication in all\
    \ scenarios.\n   In the scenario in which (a) BGP C-multicast routing is being\
    \ used,\n   (b) there are inter-site shared C-trees, and (c) there are inter-site\n\
    \   source C-trees, additional procedures are needed.  To see this,\n   consider\
    \ the following topology:\n                        CE1---C-RP\n              \
    \           |\n                         |\n                  CE2---PE1-- ... --PE2---CE5---C-S\n\
    \                              ...\n           C-R1---CE3---PE3-- ... --PE4---CE4---C-R2\n\
    \   Suppose that C-R1 and C-R2 use PIM to join the (C-*,C-G) tree, where\n   C-RP\
    \ is the RP corresponding to C-G.  As a result, CE3 and CE4 will\n   send PIM\
    \ Join(*,G) messages to PE3 and PE4, respectively.  This will\n   cause PE3 and\
    \ PE4 to originate C-multicast Shared Tree Join Routes,\n   specifying (C-*,C-G).\
    \  These routes will identify PE1 as the Upstream\n   PE.\n   Now suppose that\
    \ C-S is a transmitter for multicast group C-G, and\n   that C-S sends its multicast\
    \ data packets to C-RP in PIM Register\n   messages.  Then, PE1 will receive (C-S,C-G)\
    \ data packets from CE1,\n   and will forward them over an I-PMSI to PE3 and PE4,\
    \ who will forward\n   them, in turn, to CE3 and CE4, respectively.\n   When C-R1\
    \ receives (C-S,C-G) data packets, it may decide to join the\n   (C-S,C-G) source\
    \ tree, by sending a PIM Join(S,G) to CE3.  This will,\n   in turn, cause CE3\
    \ to send a PIM Join(S,G) to PE3, which will, in\n   turn, cause PE3 to originate\
    \ a C-multicast Source Tree Join Route,\n   specifying (C-S,C-G) and identifying\
    \ PE2 as the Upstream PE.  As a\n   result, when PE2 receives (C-S,C-G) data packets\
    \ from CE5, it will\n   forward them on a PMSI to PE3.\n   At this point, the\
    \ following situation exists:\n     - If PE1 receives (C-S,C-G) packets from CE1,\
    \ PE1 must forward them\n       on the I-PMSI, because PE4 is still expecting\
    \ to receive the\n       (C-S,C-G) packets from PE1.\n     - PE3 must continue\
    \ to receive packets from the I-PMSI, since there\n       may be other sources\
    \ transmitting C-G traffic and PE3 currently\n       has no other way to receive\
    \ that traffic.\n     - PE3 must also receive (C-S,C-G) traffic from PE2.\n  \
    \ As a result, PE3 may receive two copies of each (C-S,C-G) packet.\n   The procedure\
    \ of Section 9.1.2 (Single Forwarder Selection) does not\n   prevent PE3 from\
    \ receiving two copies, because it does not prevent\n   one PE from forwarding\
    \ (C-S,C-G) traffic along the shared C-tree\n   while another forwards (C-S,C-G)\
    \ traffic along a source-specific\n   C-tree.\n   So if PE3 cannot apply the method\
    \ of Section 9.1.1 (Discarding\n   Packets from Wrong PE), perhaps because the\
    \ tunneling technology does\n   not allow the egress PE to identify the ingress\
    \ PE, then additional\n   procedures are needed.\n"
- title: 9.3.2.  Solution Using Source Active A-D Routes
  contents:
  - "9.3.2.  Solution Using Source Active A-D Routes\n   The issue described in Section\
    \ 9.3.1 is resolved through the use of\n   Source Active A-D routes.  In the remainder\
    \ this section, we provide\n   an example of how this works, along with an informal\
    \ description of\n   the procedures.\n   A full and precise specification of the\
    \ relevant procedures can be\n   found in Section 13 of [MVPN-BGP].  In the event\
    \ of any conflicts or\n   other discrepancies between the description below and\
    \ the description\n   in [MVPN-BGP], [MVPN-BGP] is to be considered to be the\
    \ authoritative\n   document.\n   Please note that the material in this section\
    \ only applies when\n   inter-site shared trees are being used.\n   Whenever a\
    \ PE creates an (C-S,C-G) state as a result of receiving a\n   C-multicast route\
    \ for (C-S,C-G) from some other PE, and the C-G group\n   is an ASM group, the\
    \ PE that creates the state MUST originate a\n   Source Active A-D route (see\
    \ [MVPN-BGP], Section 4.5).  The NLRI of\n   the route includes C-S and C-G. \
    \ By default, the route carries the\n   same set of Route Targets as the Intra-AS\
    \ I-PMSI A-D route of the\n   MVPN originated by the PE.  Using the normal BGP\
    \ procedures, the\n   route is propagated to all the PEs of the MVPN.  For more\
    \ details,\n   see Section 13.1 (\"Source within a Site - Source Active\n   Advertisement\"\
    ) of [MVPN-BGP].\n   When, as a result of receiving a new Source Active A-D route,\
    \ a PE\n   updates its VRF with the route, the PE MUST check if the newly\n  \
    \ received route matches any (C-*,C-G) entries.  If (a) there is a\n   matching\
    \ entry, (b) the PE does not have (C-S,C-G) state in its MVPN\n   Tree Information\
    \ Base (MVPN-TIB) for (C-S,C-G) carried in the route,\n   and (c) the received\
    \ route is selected as the best (using the BGP\n   route selection procedures),\
    \ then the PE takes the following action:\n     - If the PE's (C-*,C-G) state\
    \ has a PMSI as a downstream interface,\n       the PE acts as if all the other\
    \ PEs had pruned C-S off the\n       (C-*,C-G) tree.  That is:\n         * If\
    \ the PE receives (C-S,C-G) traffic from a CE, it does not\n           transmit\
    \ it to other PEs.\n         * Depending on the PIM state of the PE's PE-CE interfaces,\
    \ the\n           PE may or may not need to invoke PIM procedures to prune C-S\n\
    \           off the (C-*,C-G) tree by sending a PIM Prune(S,G,rpt) to one\n  \
    \         or more of the CEs.  This is determined by ordinary PIM\n          \
    \ procedures.  If this does need to be done, the PE SHOULD\n           delay sending\
    \ the Prune until it first runs a timer; this\n           helps ensure that the\
    \ source is not pruned from the shared\n           tree until all PEs have had\
    \ time to receive the Source Active\n           A-D route.\n     - If the PE's\
    \ (C-*,C-G) state does not have a PMSI as a downstream\n       interface, the\
    \ PE sets up its forwarding path to receive\n       (C-S,C-G) traffic from the\
    \ originator of the selected Source\n       Active A-D route.\n   Whenever a PE\
    \ deletes the (C-S,C-G) state that was previously created\n   as a result of receiving\
    \ a C-multicast route for (C-S,C-G) from some\n   other PE, the PE that deletes\
    \ the state also withdraws the Source\n   Active A-D route (if there is one) that\
    \ was advertised when the state\n   was created.\n   In the example topology of\
    \ Section 9.3.1, this procedure will cause\n   PE2 to generate a Source Active\
    \ A-D route for (C-S,C-G).  When this\n   route is received, PE4 will set up its\
    \ forwarding state to expect\n   (C-S,C-G) packets from PE2.  PE1 will change\
    \ its forwarding state so\n   that (C-S,C-G) packets that it receives from CE1\
    \ are not forwarded to\n   any other PEs.  (Note that PE1 may still forward (C-S,C-G)\
    \ packets\n   received from CE1 to CE2, if CE2 has receivers for C-G and those\n\
    \   receivers did not switch from the (C-*,C-G) tree to the (C-S,C-G)\n   tree.)\
    \  As a result, PE3 and PE4 do not receive duplicate packets of\n   the (C-S,C-G)\
    \ C-flow.\n   With this procedure in place, there is no need to have any kind\
    \ of\n   C-multicast route that has the semantics of a PIM Prune(S,G,rpt)\n  \
    \ message.\n   It is worth noting that if, as a result of this procedure, a PE\
    \ sets\n   up its forwarding state to receive (C-S,C-G) traffic from the source\n\
    \   tree, the UMH is not necessarily the same as it would be if the PE\n   had\
    \ joined the source tree as a result of receiving a PIM Join for\n   the same\
    \ source tree from a directly attached CE.\n   Note that the mechanism described\
    \ in Section 7.4.1 can be leveraged\n   to advertise an S-PMSI binding along with\
    \ the source active messages.\n   This is accomplished by using the same BGP Update\
    \ message to carry\n   both the NLRI of the S-PMSI A-D route and the NLRI of the\
    \ Source\n   Active A-D route.  (Though an implementation processing the received\n\
    \   routes cannot assume that this will always be the case.)\n"
- title: 10.  Eliminating PE-PE Distribution of (C-*,C-G) State
  contents:
  - "10.  Eliminating PE-PE Distribution of (C-*,C-G) State\n   In the ASM service\
    \ model, a node that wants to become a receiver for\n   a particular multicast\
    \ group G first joins a shared tree, rooted at a\n   rendezvous point.  When the\
    \ receiver detects traffic from a\n   particular source, it has the option of\
    \ joining a source tree, rooted\n   at that source.  If it does so, it has to\
    \ prune that source from the\n   shared tree, to ensure that it receives packets\
    \ from that source on\n   only one tree.\n   Maintaining the shared tree can require\
    \ considerable state, as it is\n   necessary not only to know who the upstream\
    \ and downstream nodes are,\n   but to know which sources have been pruned off\
    \ which branches of the\n   share tree.\n   The BGP-based signaling procedures\
    \ defined in this document and in\n   [MVPN-BGP] eliminate the need for PEs to\
    \ distribute to each other any\n   state having to do with which sources have\
    \ been pruned off a shared\n   C-tree.  Those procedures do still allow multicast\
    \ data traffic to\n   travel on a shared C-tree, but they do not allow a situation\
    \ in which\n   some CEs receive (S,G) traffic on a shared tree and some on a source\n\
    \   tree.  This results in a considerable simplification of the PE-PE\n   procedures\
    \ with minimal change to the multicast service seen within\n   the VPN.  However,\
    \ shared C-trees are still supported across the VPN\n   backbone.  That is, (C-*,C-G)\
    \ state is distributed PE-PE, but\n   (C-*,C-G,rpt) state is not.\n   In this\
    \ section, we specify a number of optional procedures that go\n   further and\
    \ that completely eliminate the support for shared C-trees\n   across the VPN\
    \ backbone.  In these procedures, the PEs keep track of\n   the active sources\
    \ for each C-G.  As soon as a CE tries to join the\n   (*,G) tree, the PEs instead\
    \ join the (S,G) trees for all the active\n   sources.  Thus, all distribution\
    \ of (C-*,C-G) state is eliminated.\n   These procedures are optional because\
    \ they require some additional\n   support on the part of the VPN customer and\
    \ because they are not\n   always appropriate.  (For example, a VPN customer may\
    \ have his own\n   policy of always using shared trees for certain multicast groups.)\n\
    \   There are several different options, described in the following sub-\n   sections.\n"
- title: 10.1.  Co-Locating C-RPs on a PE
  contents:
  - "10.1.  Co-Locating C-RPs on a PE\n   [MVPN-REQ] describes C-RP engineering as\
    \ an issue when PIM-SM (or\n   BIDIR-PIM) is used in Any-Source Multicast (ASM)\
    \ mode [RFC4607] on\n   the VPN customer site.  To quote from [MVPN-REQ]:\n  \
    \    In the case of PIM-SM, when a source starts to emit traffic toward\n    \
    \  a group (in ASM mode), if sources and receivers are located in VPN\n      sites\
    \ that are different than that of the RP, then traffic may\n      transiently\
    \ flow twice through the SP network and the CE-PE link\n      of the RP (from\
    \ source to RP, and then from RP to receivers).\n      This traffic peak, even\
    \ short, may not be convenient depending on\n      the traffic and link bandwidth.\n\
    \      Thus, a VPN solution MAY provide features that solve or help\n      mitigate\
    \ this potential issue.\n   One of the C-RP deployment models is for the customer\
    \ to outsource\n   the RP to the provider.  In this case, the provider may co-locate\
    \ the\n   RP on the PE that is connected to the customer site [MVPN-REQ].  This\n\
    \   section describes how \"anycast-RP\" can be used to achieve this.  This\n\
    \   is described below.\n"
- title: 10.1.1.  Initial Configuration
  contents:
  - "10.1.1.  Initial Configuration\n   For a particular MVPN, at least one or more\
    \ PEs that have sites in\n   that MVPN, act as an RP for the sites of that MVPN\
    \ connected to these\n   PEs.  Within each MVPN, all of these RPs use the same\
    \ (anycast)\n   address.  All of these RPs use the Anycast RP technique.\n"
- title: 10.1.2.  Anycast RP Based on Propagating Active Sources
  contents:
  - "10.1.2.  Anycast RP Based on Propagating Active Sources\n   This mechanism is\
    \ based on propagating active sources between RPs.\n"
- title: 10.1.2.1.  Receiver(s) within a Site
  contents:
  - "10.1.2.1.  Receiver(s) within a Site\n   The PE that receives a C-Join message\
    \ for (*,G) does not send the\n   information that it has receiver(s) for G until\
    \ it receives\n   information about active sources for G from an Upstream PE.\n\
    \   On receiving this (described in the next section), the downstream PE\n   will\
    \ respond with a Join message for (C-S,C-G).  Sending this\n   information could\
    \ be done using any of the procedures described in\n   Section 5.  Only the Upstream\
    \ PE will process this information.\n"
- title: 10.1.2.2.  Source within a Site
  contents:
  - "10.1.2.2.  Source within a Site\n   When a PE receives a PIM Register message\
    \ from a site that belongs to\n   a given VPN, PE follows the normal PIM anycast\
    \ RP procedures.  It\n   then advertises the source and group of the multicast\
    \ data packet\n   carried in the PIM Register message to other PEs in BGP using\
    \ the\n   following information elements:\n     - Active source address\n    \
    \ - Active group address\n     - Route target of the MVPN.\n   This advertisement\
    \ goes to all the PEs that belong to that MVPN.\n   When a PE receives this advertisement,\
    \ it checks whether there are\n   any receivers in the sites attached to the PE\
    \ for the group carried\n   in the source active advertisement.  If there are,\
    \ then it generates\n   an advertisement for (C-S,C-G) as specified in the previous\
    \ section.\n"
- title: 10.1.2.3.  Receiver Switching from Shared to Source Tree
  contents:
  - "10.1.2.3.  Receiver Switching from Shared to Source Tree\n   No additional procedures\
    \ are required when multicast receivers in\n   customer's site shift from shared\
    \ tree to source tree.\n"
- title: 10.2.  Using MSDP between a PE and a Local C-RP
  contents:
  - "10.2.  Using MSDP between a PE and a Local C-RP\n   Section 10.1 describes the\
    \ case where each PE is a C-RP.  This\n   enables the PEs to know the active multicast\
    \ sources for each MVPN,\n   and they can then use BGP to distribute this information\
    \ to each\n   other.  As a result, the PEs do not have to join any shared C-trees,\n\
    \   and this results in a simplification of the PE operation.\n   In another deployment\
    \ scenario, the PEs are not themselves C-RPs, but\n   use Multicast Source Discovery\
    \ Protocol (MSDP) [RFC3618] to talk to\n   the C-RPs.  In particular, a PE that\
    \ attaches to a site that contains\n   a C-RP becomes an MSDP peer of that C-RP.\
    \  That PE then uses BGP to\n   distribute the information about the active sources\
    \ to the other PEs.\n   When the PE determines, by MSDP, that a particular source\
    \ is no\n   longer active, then it withdraws the corresponding BGP Update.  Then,\n\
    \   the PEs do not have to join any shared C-trees, and they do not have\n   to\
    \ be C-RPs either.\n   MSDP provides the capability for a Source Active (SA) message\
    \ to\n   carry an encapsulated data packet.  This capability can be used to\n\
    \   allow an MSDP speaker to receive the first (or first several)\n   packet(s)\
    \ of an (S,G) flow, even though the MSDP speaker hasn't yet\n   joined the (S,G)\
    \ tree.  (Presumably, it will join that tree as a\n   result of receiving the\
    \ SA message that carries the encapsulated data\n   packet.)  If this capability\
    \ is not used, the first several data\n   packets of an (S,G) stream may be lost.\n\
    \   A PE that is talking MSDP to an RP may receive such an encapsulated\n   data\
    \ packet from the RP.  The data packet should be decapsulated and\n   transmitted\
    \ to the other PEs in the MVPN.  If the packet belongs to a\n   particular (S,G)\
    \ flow, and if the PE is a transmitter for some S-PMSI\n   to which (S,G) has\
    \ already been bound, the decapsulated data packet\n   should be transmitted on\
    \ that S-PMSI.  Otherwise, if an I-PMSI exists\n   for that MVPN, the decapsulated\
    \ data packet should be transmitted on\n   it.  (If a MI-PMSI exists, this would\
    \ typically be used.)  If neither\n   of these conditions hold, the decapsulated\
    \ data packet is not\n   transmitted to the other PEs in the MVPN.  The decision\
    \ as to whether\n   and how to transmit the decapsulated data packet does not\
    \ affect the\n   processing of the SA control message itself.\n   Suppose that\
    \ PE1 transmits a multicast data packet on a PMSI, where\n   that data packet\
    \ is part of an (S,G) flow, and PE2 receives that\n   packet from that PMSI. \
    \ According to Section 9, if PE1 is not the PE\n   that PE2 expects to be transmitting\
    \ (S,G) packets, then PE2 must\n   discard the packet.  If an MSDP-encapsulated\
    \ data packet is\n   transmitted on a PMSI, as specified above, this rule from\
    \ Section 9\n   would likely result in the packet being discarded.  Therefore,\
    \ if\n   MSDP-encapsulated data packets being decapsulated and transmitted on\n\
    \   a PMSI, we need to modify the rules of Section 9 as follows:\n      1. If\
    \ the receiving PE, PE2, has already joined the (S,G) tree,\n         and has\
    \ chosen PE1 as the Upstream PE for the (S,G) tree, but\n         this packet\
    \ does not come from PE1, PE2 must discard the\n         packet.\n      2. If\
    \ the receiving PE, PE2, has not already joined the (S,G)\n         tree, but\
    \ is a PIM adjacency to a CE that is downstream on the\n         (*,G) tree, the\
    \ packet should be forwarded to the CE.\n"
- title: 11.  Support for PIM-BIDIR C-Groups
  contents:
  - "11.  Support for PIM-BIDIR C-Groups\n   In BIDIR-PIM, each multicast group is\
    \ associated with a Rendezvous\n   Point Address (RPA).  The Rendezvous Point\
    \ Link (RPL) is the link\n   that attaches to the RPA.  Usually, it's a LAN where\
    \ the RPA is in\n   the IP subnet assigned to the LAN.  The root node of a BIDIR-PIM\
    \ tree\n   is a node that has an interface on the RPL.\n   On any LAN (other than\
    \ the RPL) that is a link in a BIDIR-PIM tree,\n   there must be a single node\
    \ that has been chosen to be the DF.  (More\n   precisely, for each RPA there\
    \ is a single node that is the DF for\n   that RPA.)  A node that receives traffic\
    \ from an upstream interface\n   may forward it on a particular downstream interface\
    \ only if the node\n   is the DF for that downstream interface.  A node that receives\n\
    \   traffic from a downstream interface may forward it on an upstream\n   interface\
    \ only if that node is the DF for the downstream interface.\n   If, for any period\
    \ of time, there is a link on which each of two\n   different nodes believes itself\
    \ to be the DF, data forwarding loops\n   can form.  Loops in a bidirectional\
    \ multicast tree can be very\n   harmful.  However, any election procedure will\
    \ have a convergence\n   period.  The BIDIR-PIM DF election procedure is very\
    \ complicated,\n   because it goes to great pains to ensure that if convergence\
    \ is not\n   extremely fast, then there is no forwarding at all until convergence\n\
    \   has taken place.\n   Other variants of PIM also have a DF election procedure\
    \ for LANs.\n   However, as long as the multicast tree is unidirectional,\n  \
    \ disagreement about who the DF is can result only in duplication of\n   packets,\
    \ not in loops.  Therefore, the time taken to converge on a\n   single DF is of\
    \ much less concern for unidirectional trees and it is\n   for bidirectional trees.\n\
    \   In the MVPN environment, if PIM signaling is used among the PEs, then\n  \
    \ the standard LAN-based DF election procedure can be used.  However,\n   election\
    \ procedures that are optimized for a LAN may not work as well\n   in the MVPN\
    \ environment.  So, an alternative to DF election would be\n   desirable.\n  \
    \ If BGP signaling is used among the PEs, an alternative to DF election\n   is\
    \ necessary.  One might think that the \"Single Forwarder Selection\"\n   procedures\
    \ described in Sections 5 and 9 could be used to choose a\n   single PE \"DF\"\
    \ for the backbone (for a given RPA in a given MVPN).\n   However, that is still\
    \ likely to leave a convergence period of at\n   least several seconds during\
    \ which loops could form, and there could\n   be a much longer convergence period\
    \ if there is anything disrupting\n   the smooth flow of BGP Updates.  So, a simple\
    \ procedure like that is\n   not sufficient.\n   The remainder of this section\
    \ describes two different methods that\n   can be used to support BIDIR-PIM while\
    \ eliminating the DF election.\n"
- title: 11.1.  The VPN Backbone Becomes the RPL
  contents:
  - "11.1.  The VPN Backbone Becomes the RPL\n   On a per-MVPN basis, this method\
    \ treats the whole service provider(s)\n   infrastructure as a single RPL.  We\
    \ refer to such an RPL as an \"MVPN-\n   RPL\".  This eliminates the need for\
    \ the PEs to engage in any \"DF\n   election\" procedure because BIDIR-PIM does\
    \ not have a DF on the RPL.\n   However, this method can only be used if the customer\
    \ is\n   \"outsourcing\" the RPL/RPA functionality to the SP.\n   An MVPN-RPL\
    \ could be realized either via an I-PMSI (this I-PMSI is on\n   a per-MVPN basis\
    \ and spans all the PEs that have sites of a given\n   MVPN), via a collection\
    \ of S-PMSIs, or even via a combination of an\n   I-PMSI and one or more S-PMSIs.\n"
- title: 11.1.1.  Control Plane
  contents:
  - "11.1.1.  Control Plane\n   Associated with each MVPN-RPL is an address prefix\
    \ that is\n   unambiguous within the context of the MVPN associated with the MVPN-\n\
    \   RPL.\n   For a given MVPN, each VRF connected to an MVPN-RPL of that MVPN\
    \ is\n   configured to advertise to all of its connected CEs the address\n   prefix\
    \ of the MVPN-RPL.\n   Since, in BIDIR-PIM, there is no Designated Forwarder on\
    \ an RPL, in\n   the context of MVPN-RPL, there is no need to perform the Designated\n\
    \   Forwarder election among the PEs (note it is still necessary to\n   perform\
    \ the Designated Forwarder election between a PE and its\n   directly attached\
    \ CEs, but that is done using plain BIDIR-PIM\n   procedures).\n   For a given\
    \ MVPN, a PE connected to an MVPN-RPL of that MVPN should\n   send multicast data\
    \ (C-S,C-G) on the MVPN-RPL only if at least one\n   other PE connected to the\
    \ MVPN-RPL has a downstream multicast state\n   for C-G.  In the context of MVPN,\
    \ this is accomplished by requiring a\n   PE that has a downstream state for a\
    \ particular C-G of a particular\n   VRF present on the PE to originate a C-multicast\
    \ route for (C-*,C-G).\n   The RD of this route should be the same as the RD associated\
    \ with the\n   VRF.  The RTs carried by the route should be such as to ensure\
    \ that\n   the route gets distributed to all the PEs of the MVPN.\n"
- title: 11.1.2.  Data Plane
  contents:
  - "11.1.2.  Data Plane\n   A PE that receives (C-S,C-G) multicast data from a CE\
    \ should forward\n   this data on the MVPN-RPL of the MVPN the CE belongs to only\
    \ if the\n   PE receives at least one C-multicast route for (C-*, C-G).\n   Otherwise,\
    \ the PE should not forward the data on the RPL/I-PMSI.\n   When a PE receives\
    \ a multicast packet with (C-S,C-G) on an MVPN-RPL\n   associated with a given\
    \ MVPN, the PE forwards this packet to every\n   directly connected CE of that\
    \ MVPN, provided that the CE sends Join\n   (C-*,C-G) to the PE (provided that\
    \ the PE has the downstream\n   (C-*,C-G) state).  The PE does not forward this\
    \ packet back on the\n   MVPN-RPL.  If a PE has no downstream (C-*,C-G) state,\
    \ the PE does not\n   forward the packet.\n"
- title: 11.2.  Partitioned Sets of PEs
  contents:
  - "11.2.  Partitioned Sets of PEs\n   This method does not require the use of the\
    \ MVPN-RPL, and it does not\n   require the customer to outsource the RPA/RPL\
    \ functionality to the\n   SP.\n"
- title: 11.2.1.  Partitions
  contents:
  - "11.2.1.  Partitions\n   Consider a particular C-RPA, call it C-R, in a particular\
    \ MVPN.\n   Consider the set of PEs that attach to sites that have senders or\n\
    \   receivers for a BIDIR-PIM group C-G, where C-R is the RPA for C-G.\n   (As\
    \ always, we use the \"C-\" prefix to indicate that we are referring\n   to an\
    \ address in the VPN's address space rather than in the\n   provider's address\
    \ space.)\n   Following the procedures of Section 5.1, each PE in the set\n  \
    \ independently chooses some other PE in the set to be its \"Upstream\n   PE\"\
    \ for those BIDIR-PIM groups with RPA C-R.  Optionally, they can\n   all choose\
    \ the \"default selection\" (described in Section 5.1) to\n   ensure that each\
    \ PE to choose the same Upstream PE.  Note that if a\n   PE has a route to C-R\
    \ via a VRF interface, then the PE may choose\n   itself as the Upstream PE.\n\
    \   The set of PEs can now be partitioned into a number of subsets.\n   We'll\
    \ say that PE1 and PE2 are in the same partition if and only if\n   there is some\
    \ PE3 such that PE1 and PE2 have each chosen PE3 as the\n   Upstream PE for C-R.\
    \  Note that each partition has exactly one\n   Upstream PE.  So it is possible\
    \ to identify the partition by\n   identifying its Upstream PE.\n   Consider packet\
    \ P, and let PE1 be its ingress PE.  PE1 will send the\n   packet on a PMSI so\
    \ that it reaches the other PEs that need to\n   receive it.  This is done by\
    \ encapsulating the packet and sending it\n   on a P-tunnel.  If the original\
    \ packet is part of a PIM-BIDIR group\n   (its ingress PE determines this from\
    \ the packet's destination address\n   C-G), and if the VPN backbone is not the\
    \ RPL, then the encapsulation\n   MUST carry information that can be used to identify\
    \ the partition to\n   which the ingress PE belongs.\n   When PE2 receives a packet\
    \ from the PMSI, PE2 must determine, by\n   examining the encapsulation, whether\
    \ the packet's ingress PE belongs\n   to the same partition (relative to the C-RPA\
    \ of the packet's C-G) to\n   which the PE2 itself belongs.  If not, PE2 discards\
    \ the packet.\n   Otherwise, PE2 performs the normal BIDIR-PIM data packet processing.\n\
    \   With this rule in place, harmful loops cannot be introduced by the\n   PEs\
    \ into the customer's bidirectional tree.\n   Note that if there is more than\
    \ one partition, the VPN backbone will\n   not carry a packet from one partition\
    \ to another.  The only way for a\n   packet to get from one partition to another\
    \ is for it to go up\n   towards the RPA and then down another path to the backbone.\
    \  If this\n   is not considered desirable, then all PEs should choose the same\n\
    \   Upstream PE for a given C-RPA.  Then, multiple partitions will only\n   exist\
    \ during routing transients.\n"
- title: 11.2.2.  Using PE Distinguisher Labels
  contents:
  - "11.2.2.  Using PE Distinguisher Labels\n   If a given P-tunnel is to be used\
    \ to carry packets traveling along a\n   bidirectional C-tree, then, EXCEPT for\
    \ the case described in Sections\n   11.1 and 11.2.3, the packets that travel\
    \ on that P-tunnel MUST carry\n   a PE Distinguisher Label (defined in Section\
    \ 4), using the\n   encapsulation discussed in Section 12.3.\n   When a given\
    \ PE transmits a given packet of a bidirectional C-group\n   to the P-tunnel,\
    \ the packet will carry the PE Distinguisher Label\n   corresponding to the partition,\
    \ for the C-group's C-RPA, that\n   contains the transmitting PE.  This is the\
    \ PE Distinguisher Label\n   that has been bound to the Upstream PE of that partition;\
    \ it is not\n   necessarily the label that has been bound to the transmitting\
    \ PE.\n   Recall that the PE Distinguisher Labels are upstream-assigned labels\n\
    \   that are assigned and advertised by the node that is at the root of\n   the\
    \ P-tunnel.  The information about PE Distinguisher Labels is\n   distributed\
    \ with Intra-AS I-PMSI A-D routes and/or S-PMSI A-D routes\n   by encoding it\
    \ into the PE Distinguisher Labels attribute carried by\n   these routes.\n  \
    \ When a PE receives a packet with a PE label that does not identify\n   the partition\
    \ of the receiving PE, then the receiving PE discards the\n   packet.\n   Note\
    \ that this procedure does not necessarily require the root of a\n   P-tunnel\
    \ to assign a PE Distinguisher Label for every PE that belongs\n   to the tunnel.\
    \  If the root of the P-tunnel is the only PE that can\n   transmit packets to\
    \ the P-tunnel, then the root needs to assign PE\n   Distinguisher Labels only\
    \ for those PEs that the root has selected to\n   be the UMHs for the particular\
    \ C-RPAs known to the root.\n"
- title: 11.2.3.  Partial Mesh of MP2MP P-Tunnels
  contents:
  - "11.2.3.  Partial Mesh of MP2MP P-Tunnels\n   There is one case in which support\
    \ for BIDIR-PIM C-groups does not\n   require the use of a PE Distinguisher Label.\
    \  For each C-RPA, suppose\n   a distinct MP2MP LSP is used as the P-tunnel serving\
    \ that C-RPA's\n   partition.  Then, for a given packet, a PE receiving the packet\
    \ from\n   a P-tunnel can infer the partition from the tunnel.  So, PE\n   Distinguisher\
    \ Labels are not needed in this case.\n"
- title: 12.  Encapsulations
  contents:
  - "12.  Encapsulations\n   The BGP-based auto-discovery procedures will ensure that\
    \ the PEs in a\n   single MVPN only use tunnels that they can all support, and\
    \ for a\n   given kind of tunnel, that they only use encapsulations that they\
    \ can\n   all support.\n"
- title: 12.1.  Encapsulations for Single PMSI per P-Tunnel
  contents:
  - '12.1.  Encapsulations for Single PMSI per P-Tunnel

    '
- title: 12.1.1.  Encapsulation in GRE
  contents:
  - "12.1.1.  Encapsulation in GRE\n   GRE encapsulation can be used for any PMSI\
    \ that is instantiated by a\n   mesh of unicast P-tunnels, as well as for any\
    \ PMSI that is\n   instantiated by one or more PIM P-tunnels of any sort.\n  \
    \    Packets received        Packets in transit      Packets forwarded\n     \
    \ at the ingress PE       in the service          by the egress PEs\n        \
    \                      provider network\n                           +---------------+\n\
    \                           |  P-IP Header  |\n                           +---------------+\n\
    \                           |      GRE      |\n   ++=============++       ++=============++\
    \       ++=============++\n   || C-IP Header ||       || C-IP Header ||      \
    \ || C-IP Header ||\n   ++=============++ >>>>> ++=============++ >>>>> ++=============++\n\
    \   || C-Payload   ||       || C-Payload   ||       || C-Payload   ||\n   ++=============++\
    \       ++=============++       ++=============++\n   The IP Protocol Number field\
    \ in the P-IP header MUST be set to 47.\n   The Protocol Type field of the GRE\
    \ header is set to either 0x800 or\n   0x86dd, depending on whether the C-IP header\
    \ is IPv4 or IPv6,\n   respectively.\n   When an encapsulated packet is transmitted\
    \ by a particular PE, the\n   source IP address in the P-IP header must be the\
    \ same address that\n   the PE uses to identify itself in the VRF Route Import\
    \ Extended\n   Communities that it attaches to any of VPN-IP routes eligible for\
    \ UMH\n   determination that it advertises via BGP (see Section 5.1).\n   If the\
    \ PMSI is instantiated by a PIM tree, the destination IP address\n   in the P-IP\
    \ header is the group P-address associated with that tree.\n   The GRE key field\
    \ value is omitted.\n   If the PMSI is instantiated by unicast P-tunnels, the\
    \ destination IP\n   address is the address of the destination PE, and the optional\
    \ GRE\n   key field is used to identify a particular MVPN.  In this case, each\n\
    \   PE would have to advertise a key field value for each MVPN; each PE\n   would\
    \ assign the key field value that it expects to receive.\n   [RFC2784] specifies\
    \ an optional GRE checksum and [RFC2890] specifies\n   an optional GRE sequence\
    \ number fields.\n   The GRE sequence number field is not needed because the transport\n\
    \   layer services for the original application will be provided by the\n   C-IP\
    \ header.\n   The use of the GRE checksum field must follow [RFC2784].\n   To\
    \ facilitate high speed implementation, this document recommends\n   that the\
    \ ingress PE routers encapsulate VPN packets without setting\n   the checksum\
    \ or sequence fields.\n"
- title: 12.1.2.  Encapsulation in IP
  contents:
  - "12.1.2.  Encapsulation in IP\n   IP-in-IP [RFC2003] is also a viable option.\
    \  The following diagram\n   shows the progression of the packet as it enters\
    \ and leaves the\n   service provider network.\n   Packets received        Packets\
    \ in transit      Packets forwarded\n   at the ingress PE       in the service\
    \          by the egress PEs\n                           provider network\n  \
    \                         +---------------+\n                           |  P-IP\
    \ Header  |\n   ++=============++       ++=============++       ++=============++\n\
    \   || C-IP Header ||       || C-IP Header ||       || C-IP Header ||\n   ++=============++\
    \ >>>>> ++=============++ >>>>> ++=============++\n   || C-Payload   ||      \
    \ || C-Payload   ||       || C-Payload   ||\n   ++=============++       ++=============++\
    \       ++=============++\n   When the P-IP header is an IPv4 header, its Protocol\
    \ Number field is\n   set to either 4 or 41, depending on whether the C-IP header\
    \ is an\n   IPv4 header or an IPv6 header, respectively.\n   When the P-IP header\
    \ is an IPv6 header, its Next Header field is set\n   to either 4 or 41, depending\
    \ on whether the C-IP header is an IPv4\n   header or an IPv6 header, respectively.\n\
    \   When an encapsulated packet is transmitted by a particular PE, the\n   source\
    \ IP address in the P-IP header must be the same address that\n   the PE uses\
    \ to identify itself in the VRF Route Import Extended\n   Communities that it\
    \ attaches to any of VPN-IP routes eligible for UMH\n   determination that it\
    \ advertises via BGP (see Section 5.1).\n"
- title: 12.1.3.  Encapsulation in MPLS
  contents:
  - "12.1.3.  Encapsulation in MPLS\n   If the PMSI is instantiated as a P2MP MPLS\
    \ LSP or a MP2MP LSP, MPLS\n   encapsulation is used.  Penultimate-hop-popping\
    \ MUST be disabled for\n   the LSP.\n   If other methods of assigning MPLS labels\
    \ to multicast distribution\n   trees are in use, these multicast distribution\
    \ trees may be used as\n   appropriate to instantiate PMSIs, and appropriate additional\
    \ MPLS\n   encapsulation procedures may be used.\n   Packets received        Packets\
    \ in transit      Packets forwarded\n   at the ingress PE       in the service\
    \          by the egress PEs\n                           provider network\n  \
    \                         +---------------+\n                           | P-MPLS\
    \ Header |\n   ++=============++       ++=============++       ++=============++\n\
    \   || C-IP Header ||       || C-IP Header ||       || C-IP Header ||\n   ++=============++\
    \ >>>>> ++=============++ >>>>> ++=============++\n   || C-Payload   ||      \
    \ || C-Payload   ||       || C-Payload   ||\n   ++=============++       ++=============++\
    \       ++=============++\n"
- title: 12.2.  Encapsulations for Multiple PMSIs per P-Tunnel
  contents:
  - "12.2.  Encapsulations for Multiple PMSIs per P-Tunnel\n   The encapsulations\
    \ for transmitting multicast data messages when\n   there are multiple PMSIs per\
    \ P-tunnel are based on the encapsulation\n   for a single PMSI per P-tunnel,\
    \ but with an MPLS label used for\n   demultiplexing.\n   The label is upstream-assigned\
    \ and distributed via BGP as specified\n   in Section 4.  The label must enable\
    \ the receiver to select the\n   proper VRF and may enable the receiver to select\
    \ a particular\n   multicast routing entry within that VRF.\n"
- title: 12.2.1.  Encapsulation in GRE
  contents:
  - "12.2.1.  Encapsulation in GRE\n   Rather than the IP-in-GRE encapsulation discussed\
    \ in Section 12.1.1,\n   we use the MPLS-in-GRE encapsulation.  This is specified\
    \ in\n   [MPLS-IP].  The GRE protocol type MUST be set to 0x8847.  (The reason\n\
    \   for using the unicast rather than the multicast value is specified in\n  \
    \ [MPLS-MCAST-ENCAPS]).\n"
- title: 12.2.2.  Encapsulation in IP
  contents:
  - "12.2.2.  Encapsulation in IP\n   Rather than the IP-in-IP encapsulation discussed\
    \ in Section 12.1.2,\n   we use the MPLS-in-IP encapsulation.  This is specified\
    \ in [MPLS-IP].\n   The IP protocol number field MUST be set to the value identifying\
    \ the\n   payload as an MPLS unicast packet.  (There is no \"MPLS multicast\n\
    \   packet\" protocol number.)\n"
- title: 12.3.  Encapsulations Identifying a Distinguished PE
  contents:
  - '12.3.  Encapsulations Identifying a Distinguished PE

    '
- title: 12.3.1.  For MP2MP LSP P-Tunnels
  contents:
  - "12.3.1.  For MP2MP LSP P-Tunnels\n   As discussed in Section 9, if a multicast\
    \ data packet is traveling on\n   a unidirectional C-tree, it is highly desirable\
    \ for the PE that\n   receives the packet from a PMSI to be able to determine\
    \ the identity\n   of the PE that transmitted the data packet onto the PMSI. \
    \ The\n   encapsulations of the previous sections all provide this information,\n\
    \   except in one case.  If a PMSI is being instantiated by an MP2MP LSP,\n  \
    \ then the encapsulations discussed so far do not allow one to\n   determine the\
    \ identity of the PE that transmitted the packet onto the\n   PMSI.\n   Therefore,\
    \ when a packet traveling on a unidirectional C-tree is\n   traveling on a MP2MP\
    \ LSP P-tunnel, it MUST carry, as its second\n   label, a label that has been\
    \ bound to the packet's ingress PE.  This\n   label is an upstream-assigned label\
    \ that the LSP's root node has\n   bound to the ingress PE and has distributed\
    \ via the PE Distinguisher\n   Labels attribute of a PMSI A-D route (see Section\
    \ 4).  This label\n   will appear immediately beneath the labels that are discussed\
    \ in\n   Sections 12.1.3 and 12.2.\n   A full specification of the procedures\
    \ for advertising and for using\n   the PE Distinguisher Labels attribute in this\
    \ case is outside the\n   scope of this document.\n"
- title: 12.3.2.  For Support of PIM-BIDIR C-Groups
  contents:
  - "12.3.2.  For Support of PIM-BIDIR C-Groups\n   As was discussed in Section 11,\
    \ when a packet belongs to a PIM-BIDIR\n   multicast group, the set of PEs of\
    \ that packet's VPN can be\n   partitioned into a number of subsets, where exactly\
    \ one PE in each\n   partition is the Upstream PE for that partition.  When such\
    \ packets\n   are transmitted on a PMSI, unless the procedures of Section 11.2.3\n\
    \   are being used, it is necessary for the packet to carry information\n   identifying\
    \ a particular partition.  This is done by having the\n   packet carry the PE\
    \ Distinguisher Label corresponding to the Upstream\n   PE of one partition. \
    \ For a particular P-tunnel, this label will have\n   been advertised by the node\
    \ that is the root of that P-tunnel.  (A\n   full specification of the procedures\
    \ for advertising PE Distinguisher\n   Labels is out of the scope of this document.)\n\
    \   This label needs to be used whenever a packet belongs to a PIM-BIDIR\n   C-group,\
    \ no matter what encapsulation is used by the P-tunnel.\n   Hence, the encapsulations\
    \ of Section 12.2 MUST be used.  If the\n   P-tunnel contains only one PMSI, the\
    \ PE label replaces the label\n   discussed in Section 12.2.  If the P-tunnel\
    \ contains multiple PMSIs,\n   the PE label follows the label discussed in Section\
    \ 12.2.\n   In general, PE Distinguisher Labels can be carried if the\n   encapsulation\
    \ is MPLS, MPLS-in-IP, or MPLS-in-GRE.  However,\n   procedures for advertising\
    \ and using PE Distinguisher Labels when the\n   encapsulation is LDP-based MP2P\
    \ MPLS is outside the scope of this\n   specification.\n"
- title: 12.4.  General Considerations for IP and GRE Encapsulations
  contents:
  - "12.4.  General Considerations for IP and GRE Encapsulations\n   These apply also\
    \ to the MPLS-in-IP and MPLS-in-GRE encapsulations.\n"
- title: 12.4.1.  MTU (Maximum Transmission Unit)
  contents:
  - "12.4.1.  MTU (Maximum Transmission Unit)\n   It is the responsibility of the\
    \ originator of a C-packet to ensure\n   that the packet is small enough to reach\
    \ all of its destinations,\n   even when it is encapsulated within IP or GRE.\n\
    \   When a packet is encapsulated in IP or GRE, the router that does the\n   encapsulation\
    \ MUST set the DF bit in the outer header.  This ensures\n   that the decapsulating\
    \ router will not need to reassemble the\n   encapsulating packets before performing\
    \ decapsulation.\n   In some cases, the encapsulating router may know that a particular\n\
    \   C-packet is too large to reach its destinations.  Procedures by which\n  \
    \ it may know this are outside the scope of the current document.\n   However,\
    \ if this is known, then:\n     - If the DF bit is set in the IP header of a C-packet\
    \ that is known\n       to be too large, the router will discard the C-packet\
    \ as being\n       \"too large\" and follow normal IP procedures (which may require\n\
    \       the return of an ICMP message to the source).\n     - If the DF bit is\
    \ not set in the IP header of a C-packet that is\n       known to be too large,\
    \ the router MAY fragment the packet before\n       encapsulating it and then\
    \ encapsulate each fragment separately.\n       Alternatively, the router MAY\
    \ discard the packet.\n   If the router discards a packet as too large, it should\
    \ maintain\n   Operations, Administration, and Maintenance (OAM) information related\n\
    \   to this behavior, allowing the operator to properly troubleshoot the\n   issue.\n\
    \   Note that if the entire path of the P-tunnel does not support an MTU\n   that\
    \ is large enough to carry the a particular encapsulated C-packet,\n   and if\
    \ the encapsulating router does not do fragmentation, then the\n   customer will\
    \ not receive the expected connectivity.\n"
- title: 12.4.2.  TTL (Time to Live)
  contents:
  - "12.4.2.  TTL (Time to Live)\n   The ingress PE should not copy the TTL field\
    \ from the payload IP\n   header received from a CE router to the delivery IP\
    \ or MPLS header.\n   The setting of the TTL of the delivery header is determined\
    \ by the\n   local policy of the ingress PE router.\n"
- title: 12.4.3.  Avoiding Conflict with Internet Multicast
  contents:
  - "12.4.3.  Avoiding Conflict with Internet Multicast\n   If the SP is providing\
    \ Internet multicast, distinct from its VPN\n   multicast services, and using\
    \ PIM based P-multicast trees, it must\n   ensure that the group P-addresses that\
    \ it used in support of MVPN\n   services are distinct from any of the group addresses\
    \ of the Internet\n   multicasts it supports.  This is best done by using administratively\n\
    \   scoped addresses [ADMIN-ADDR].\n   The group C-addresses need not be distinct\
    \ from either the group\n   P-addresses or the Internet multicast addresses.\n"
- title: 12.5.  Differentiated Services
  contents:
  - "12.5.  Differentiated Services\n   The setting of the DS (Differentiated Services)\
    \ field in the delivery\n   IP header should follow the guidelines outlined in\
    \ [RFC2983].\n   Setting the Traffic Class field [RFC5462] in the delivery MPLS\
    \ header\n   should follow the guidelines in [RFC3270].  An SP may also choose\
    \ to\n   deploy any of additional Differentiated Services mechanisms that the\n\
    \   PE routers support for the encapsulation in use.  Note that the type\n   of\
    \ encapsulation determines the set of Differentiated Services\n   mechanisms that\
    \ may be deployed.\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   This document describes an extension to the\
    \ procedures of [RFC4364],\n   and hence shares the security considerations described\
    \ in [RFC4364]\n   and [RFC4365].\n   When GRE encapsulation is used, the security\
    \ considerations of\n   [MPLS-IP] are also relevant.  Additionally, the security\n\
    \   considerations of [RFC4797] are relevant as it discusses implications\n  \
    \ on packet spoofing in the context of BGP/MPLS IP VPNs.\n   The security considerations\
    \ of [MPLS-HDR] apply when MPLS\n   encapsulation is used.\n   This document makes\
    \ use of a number of control protocols: PIM\n   [PIM-SM], BGP [MVPN-BGP], mLDP\
    \ [MLDP], and RSVP-TE [RSVP-P2MP].\n   Security considerations relevant to each\
    \ protocol are discussed in\n   the respective protocol specifications.\n   If\
    \ one uses the UDP-based protocol for switching to S-PMSI (as\n   specified in\
    \ Section 7.4.2), then an S-PMSI Join message (i.e., a UDP\n   packet with destination\
    \ port 3232 and destination address ALL-PIM-\n   ROUTERS) that is not received\
    \ over a PMSI (e.g., one received\n   directly from a CE router) is an illegal\
    \ packet and MUST be dropped.\n   The various procedures for P-tunnel construction\
    \ have security issues\n   that are specific to the way that the P-tunnels are\
    \ used in this\n   document.  When P-tunnels are constructed via such techniques\
    \ as PIM,\n   mLDP, or RSVP-TE, each P or PE router receiving a control message\n\
    \   MUST ensure that the control message comes from another P or PE\n   router,\
    \ not from a CE router.  (Interpreting an mLDP or PIM or RSVP-\n   TE control\
    \ message from a CE router as referring to a P-tunnel would\n   be a bug.)\n \
    \  A PE MUST NOT accept BGP routes of the MCAST-VPN address family from\n   a\
    \ CE.\n   If BGP is used as a CE-PE routing protocol, then when a PE receives\n\
    \   an IP route from a CE, if this route carries the VRF Route Import\n   Extended\
    \ Community, the PE MUST remove this Community from the route\n   before turning\
    \ it into a VPN-IP route.  Routes that a PE advertises\n   to a CE MUST NOT carry\
    \ the VRF Route Import Extended Community.\n   An ASBR may receive, from one SP's\
    \ domain, an mLDP, PIM, or RSVP-TE\n   control message that attempts to extend\
    \ a P-tunnel from one SP's\n   domain into another SP's domain.  This is perfectly\
    \ valid if there is\n   an agreement between the SPs to jointly provide an MVPN\
    \ service.  In\n   the absence of such an agreement, however, this could be an\n\
    \   illegitimate attempt to intercept data packets.  By default, an ASBR\n   MUST\
    \ NOT allow P-tunnels to extend beyond AS boundaries.  However, it\n   MUST be\
    \ possible to configure an ASBR to allow this on a specified\n   set of interfaces.\n\
    \   Many of the procedures in this document cause the SP network to\n   create\
    \ and maintain an amount of state that is proportional to\n   customer multicast\
    \ activity.  If the amount of customer multicast\n   activity exceeds expectations,\
    \ this can potentially cause P and PE\n   routers to maintain an unexpectedly\
    \ large amount of state, which may\n   cause control and/or data plane overload.\
    \  To protect against this\n   situation, an implementation should provide ways\
    \ for the SP to bound\n   the amount of state it devotes to the handling of customer\
    \ multicast\n   activity.\n   In particular, an implementation SHOULD provide\
    \ mechanisms that allow\n   an SP to place limitations on the following:\n   \
    \  - total number of (C-*,C-G) and/or (C-S,C-G) states per VRF\n     - total number\
    \ of P-tunnels per VRF used for S-PMSIs\n     - total number of P-tunnels traversing\
    \ a given P router\n   A PE implementation MAY also provide mechanisms that allow\
    \ an SP to\n   limit the rate of change of various MVPN-related states on PEs,\
    \ as\n   well as the rate at which MVPN-related control messages may be\n   received\
    \ by a PE from the CEs and/or sent from the PE to other PEs.\n   An implementation\
    \ that provides the procedures specified in Sections\n   10.1 or 10.2 MUST provide\
    \ the capability to impose an upper bound on\n   the number of Source Active A-D\
    \ routes generated and on how\n   frequently they may be originated.  This MUST\
    \ be provided on a per-\n   PE, per-MVPN granularity.\n   Lack of the mechanisms\
    \ that allow an SP to limit the rate of change\n   of various MVPN-related states\
    \ on PEs, as well as the rate at which\n   MVPN-related control messages may be\
    \ received by a PE from the CEs\n   and/or sent from the PE to other PEs may result\
    \ in the control plane\n   overload on the PE, which in turn would adversely impact\
    \ all the\n   customers connected to that PE, as well as to other PEs.\n   See\
    \ also the Security Considerations section of [MVPN-BGP].\n"
- title: 14.  IANA Considerations
  contents:
  - "14.  IANA Considerations\n   Section 7.4.2 defines the \"S-PMSI Join message\"\
    , which is carried in\n   a UDP datagram whose port number is 3232.  This port\
    \ number had\n   already been assigned by IANA to \"MDT port\".  The reference\
    \ has been\n   updated to this document.\n   IANA has created a registry for the\
    \ \"S-PMSI Join message Type Field\".\n   Assignments are to be made according\
    \ to the policy \"IETF Review\" as\n   defined in [RFC5226].  The value 1 has\
    \ been registered with a\n   reference to this document.  The description reads\
    \ \"PIM IPv4 S-PMSI\n   (unaggregated)\".\n   [PIM-ATTRIB] establishes a registry\
    \ for \"PIM Join attribute Types\".\n   IANA has assigned the value 1 to the \"\
    MVPN Join Attribute\" with a\n   reference to this document.\n   IANA has assigned\
    \ SAFI 129 to \"Multicast for BGP/MPLS IP Virtual\n   Private Networks (VPNs)\"\
    \ with a reference to this document and\n   [MVPN-BGP].\n"
- title: 15.  Acknowledgments
  contents:
  - "15.  Acknowledgments\n   Significant contributions were made Arjen Boers, Toerless\
    \ Eckert,\n   Adrian Farrel, Luyuan Fang, Dino Farinacci, Lenny Giuliano, Shankar\n\
    \   Karuna, Anil Lohiya, Tom Pusateri, Ted Qian, Robert Raszuk, Tony\n   Speakman,\
    \ Dan Tappan.\n"
- title: 16. References
  contents:
  - '16. References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [MLDP]        Wijnands, IJ., Ed., Minei, I.,\
    \ Ed., Kompella, K., and\n                 B. Thomas, \"Label Distribution Protocol\
    \ Extensions for\n                 Point-to-Multipoint and Multipoint-to-Multipoint\
    \ Label\n                 Switched Paths\", RFC 6388, November 2011.\n   [MPLS-HDR]\
    \    Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n                 Farinacci,\
    \ D., Li, T., and A. Conta, \"MPLS Label Stack\n                 Encoding\", RFC\
    \ 3032, January 2001.\n   [MPLS-IP]     Worster, T., Rekhter, Y., and E. Rosen,\
    \ Ed.,\n                 \"Encapsulating MPLS in IP or Generic Routing\n     \
    \            Encapsulation (GRE)\", RFC 4023, March 2005.\n   [MPLS-MCAST-ENCAPS]\n\
    \                 Eckert, T., Rosen, E., Ed., Aggarwal, R., and Y.\n         \
    \        Rekhter, \"MPLS Multicast Encapsulations\", RFC 5332,\n             \
    \    August 2008.\n   [MPLS-UPSTREAM-LABEL]\n                 Aggarwal, R., Rekhter,\
    \ Y., and E. Rosen, \"MPLS Upstream\n                 Label Assignment and Context-Specific\
    \ Label Space\", RFC\n                 5331, August 2008.\n   [MVPN-BGP]    Aggarwal,\
    \ R., Rosen, E., Morin, T., and Y. Rekhter,\n                 \"BGP Encodings\
    \ and Procedures for Multicast in MPLS/BGP\n                 IP VPNs\", RFC 6514,\
    \ February 2012.\n   [OSPF]        Moy, J., \"OSPF Version 2\", STD 54, RFC 2328,\
    \ April\n                 1998.\n   [OSPF-MT]     Psenak, P., Mirtorabi, S., Roy,\
    \ A., Nguyen, L., and P.\n                 Pillay-Esnault, \"Multi-Topology (MT)\
    \ Routing in OSPF\",\n                 RFC 4915, June 2007.\n   [PIM-ATTRIB] \
    \ Boers, A., Wijnands, I., and E. Rosen, \"The Protocol\n                 Independent\
    \ Multicast (PIM) Join Attribute Format\", RFC\n                 5384, November\
    \ 2008.\n   [PIM-SM]      Fenner, B., Handley, M., Holbrook, H., and I. Kouvelas,\n\
    \                 \"Protocol Independent Multicast - Sparse Mode (PIM-SM):\n \
    \                Protocol Specification (Revised)\", RFC 4601, August\n      \
    \           2006.\n   [RFC2119]     Bradner, S., \"Key words for use in RFCs to\
    \ Indicate\n                 Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC4364]     Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n  \
    \               Networks (VPNs)\", RFC 4364, February 2006.\n   [RFC4659]    \
    \ De Clercq, J., Ooms, D., Carugi, M., and F. Le\n                 Faucheur, \"\
    BGP-MPLS IP Virtual Private Network (VPN)\n                 Extension for IPv6\
    \ VPN\", RFC 4659, September 2006.\n   [RFC5462]     Andersson, L. and R. Asati,\
    \ \"Multiprotocol Label\n                 Switching (MPLS) Label Stack Entry:\
    \ \"EXP\" Field Renamed\n                 to \"Traffic Class\" Field\", RFC 5462,\
    \ February 2009.\n   [RSVP-OOB]    Ali, Z., Swallow, G., and R. Aggarwal, \"Non-Penultimate\n\
    \                 Hop Popping Behavior and Out-of-Band Mapping for RSVP-\n   \
    \              TE Label Switched Paths\", RFC 6511, February 2012.\n   [RSVP-P2MP]\
    \   Aggarwal, R., Ed., Papadimitriou, D., Ed., and S.\n                 Yasukawa,\
    \ Ed., \"Extensions to Resource Reservation\n                 Protocol - Traffic\
    \ Engineering (RSVP-TE) for Point-to-\n                 Multipoint TE Label Switched\
    \ Paths (LSPs)\", RFC 4875,\n                 May 2007.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [ADMIN-ADDR]  Meyer, D., \"Administratively\
    \ Scoped IP Multicast\", BCP\n                 23, RFC 2365, July 1998.\n   [BIDIR-PIM]\
    \   Handley, M., Kouvelas, I., Speakman, T., and L.\n                 Vicisano,\
    \ \"Bidirectional Protocol Independent Multicast\n                 (BIDIR-PIM)\"\
    , RFC 5015, October 2007.\n   [BSR]         Bhaskar, N., Gall, A., Lingard, J.,\
    \ and S. Venaas,\n                 \"Bootstrap Router (BSR) Mechanism for Protocol\n\
    \                 Independent Multicast (PIM)\", RFC 5059, January 2008.\n   [MVPN-REQ]\
    \    Morin, T., Ed., \"Requirements for Multicast in Layer 3\n               \
    \  Provider-Provisioned Virtual Private Networks\n                 (PPVPNs)\"\
    , RFC 4834, April 2007.\n   [RFC2003]     Perkins, C., \"IP Encapsulation within\
    \ IP\", RFC 2003,\n                 October 1996.\n   [RFC2784]     Farinacci,\
    \ D., Li, T., Hanks, S., Meyer, D., and P.\n                 Traina, \"Generic\
    \ Routing Encapsulation (GRE)\", RFC\n                 2784, March 2000.\n   [RFC2890]\
    \     Dommety, G., \"Key and Sequence Number Extensions to\n                 GRE\"\
    , RFC 2890, September 2000.\n   [RFC2983]     Black, D., \"Differentiated Services\
    \ and Tunnels\", RFC\n                 2983, October 2000.\n   [RFC3270]     Le\
    \ Faucheur, F., Wu, L., Davie, B., Davari, S.,\n                 Vaananen, P.,\
    \ Krishnan, R., Cheval, P., and J.\n                 Heinanen, \"Multi-Protocol\
    \ Label Switching (MPLS)\n                 Support of Differentiated Services\"\
    , RFC 3270, May\n                 2002.\n   [RFC3618]     Fenner, B., Ed., and\
    \ D. Meyer, Ed., \"Multicast Source\n                 Discovery Protocol (MSDP)\"\
    , RFC 3618, October 2003.\n   [RFC4365]     Rosen, E., \"Applicability Statement\
    \ for BGP/MPLS IP\n                 Virtual Private Networks (VPNs)\", RFC 4365,\
    \ February\n                 2006.\n   [RFC4607]     Holbrook, H. and B. Cain,\
    \ \"Source-Specific Multicast\n                 for IP\", RFC 4607, August 2006.\n\
    \   [RFC4797]     Rekhter, Y., Bonica, R., and E. Rosen, \"Use of Provider\n \
    \                Edge to Provider Edge (PE-PE) Generic Routing\n             \
    \    Encapsulation (GRE) or IP in BGP/MPLS IP Virtual\n                 Private\
    \ Networks\", RFC 4797, January 2007.\n   [RFC5226]     Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing\n                 an IANA Considerations Section in\
    \ RFCs\", BCP 26, RFC\n                 5226, May 2008.\n"
- title: Contributing Authors
  contents:
  - "Contributing Authors\n   Sarveshwar Bandi\n   Motorola\n   Vanenburg IT park,\
    \ Madhapur,\n   Hyderabad, India\n   EMail: sarvesh@motorola.com\n   Yiqun Cai\n\
    \   Cisco Systems, Inc.\n   170 Tasman Drive\n   San Jose, CA, 95134\n   EMail:\
    \ ycai@cisco.com\n   Thomas Morin\n   France Telecom R & D\n   2, avenue Pierre-Marzin\n\
    \   22307 Lannion Cedex\n   France\n   EMail: thomas.morin@francetelecom.com\n\
    \   Yakov Rekhter\n   Juniper Networks\n   1194 North Mathilda Ave.\n   Sunnyvale,\
    \ CA 94089\n   EMail: yakov@juniper.net\n   IJsbrand Wijnands\n   Cisco Systems,\
    \ Inc.\n   170 Tasman Drive\n   San Jose, CA, 95134\n   EMail: ice@cisco.com\n\
    \   Seisho Yasukawa\n   NTT Corporation\n   9-11, Midori-Cho 3-Chome\n   Musashino-Shi,\
    \ Tokyo 180-8585,\n   Japan\n   Phone: +81 422 59 4769\n   EMail: yasukawa.seisho@lab.ntt.co.jp\n"
- title: Editors' Addresses
  contents:
  - "Editors' Addresses\n   Eric C. Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Avenue\n   Boxborough, MA, 01719\n   EMail: erosen@cisco.com\n   Rahul Aggarwal\n\
    \   Juniper Networks\n   1194 North Mathilda Ave.\n   Sunnyvale, CA 94089\n  \
    \ EMail: raggarwa_1@yahoo.com\n"
