- title: __initial_text__
  contents:
  - '          Seamless Bidirectional Forwarding Detection (S-BFD)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines Seamless Bidirectional Forwarding Detection\n\
    \   (S-BFD), a simplified mechanism for using BFD with a large proportion\n  \
    \ of negotiation aspects eliminated, thus providing benefits such as\n   quick\
    \ provisioning, as well as improved control and flexibility for\n   network nodes\
    \ initiating path monitoring.\n   This document updates RFC 5880.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7880.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Seamless BFD Overview ...........................................6\n   4.\
    \ S-BFD Discriminators ............................................7\n      4.1.\
    \ S-BFD Discriminator Uniqueness .............................7\n      4.2. Discriminator\
    \ Pools ........................................7\n   5. Reflector BFD Session\
    \ ...........................................8\n   6. State Variables .................................................9\n\
    \      6.1. New State Variables ........................................9\n  \
    \    6.2. State Variable Initialization and Maintenance ..............9\n   7.\
    \ S-BFD Procedures ...............................................10\n      7.1.\
    \ Demultiplexing of S-BFD Control Packet ....................10\n      7.2. Responder\
    \ Procedures ......................................11\n           7.2.1. Responder\
    \ Demultiplexing ...........................11\n           7.2.2. Transmission\
    \ of S-BFD Control Packet by\n                  SBFDReflector ......................................11\n\
    \           7.2.3. Additional SBFDReflector Behaviors .................12\n  \
    \    7.3. Initiator Procedures ......................................13\n    \
    \       7.3.1. SBFDInitiator State Machine ........................14\n      \
    \     7.3.2. Transmission of S-BFD Control Packet by\n                  SBFDInitiator\
    \ ......................................15\n           7.3.3. Additional SBFDInitiator\
    \ Behaviors .................15\n      7.4. Diagnostic Values .........................................16\n\
    \      7.5. The Poll Sequence .........................................16\n  \
    \ 8. Operational Considerations .....................................16\n    \
    \  8.1. Scaling Aspect ............................................17\n      8.2.\
    \ Congestion Considerations .................................17\n   9. Co-existence\
    \ with Classical BFD Sessions .......................17\n   10. S-BFD Echo Function\
    \ ...........................................18\n   11. Security Considerations\
    \ .......................................19\n   12. References ....................................................20\n\
    \      12.1. Normative References .....................................20\n  \
    \    12.2. Informative References ...................................20\n   Appendix\
    \ A. Loop Problem and Solution .............................22\n   Acknowledgements\
    \ ..................................................23\n   Contributors ......................................................23\n\
    \   Authors' Addresses ................................................24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Bidirectional Forwarding Detection (BFD), as described in\
    \ [RFC5880]\n   and related documents, has efficiently generalized the failure\n\
    \   detection mechanism for multiple protocols and applications.  There\n   are\
    \ some improvements that can be made to better fit existing\n   technologies.\
    \  There is a possibility of evolving BFD to better fit\n   new technologies.\
    \  This document focuses on several aspects of BFD in\n   order to further improve\
    \ efficiency, expand failure detection\n   coverage, and allow BFD usage for wider\
    \ scenarios.  Additional use\n   cases are listed in [RFC7882].\n   Specifically,\
    \ this document defines Seamless Bidirectional Forwarding\n   Detection (S-BFD),\
    \ a simplified mechanism for using BFD with a large\n   proportion of negotiation\
    \ aspects eliminated, thus providing benefits\n   such as quick provisioning,\
    \ as well as improved control and\n   flexibility for network nodes initiating\
    \ path monitoring.  S-BFD\n   enables cases benefiting from the use of core BFD\
    \ technologies in a\n   fashion that leverages existing implementations and protocol\n\
    \   machinery while providing a rather simplified and largely stateless\n   infrastructure\
    \ for continuity testing.\n   One key aspect of the mechanism described in this\
    \ document eliminates\n   the time between a network node wanting to perform a\
    \ continuity test\n   and completing the continuity test.  In traditional BFD\
    \ terms, the\n   initial state changes from DOWN to UP are virtually nonexistent.\n\
    \   Removal of this \"seam\" (i.e., time delay) in BFD provides a smooth\n   and\
    \ continuous operational experience for applications.  Therefore,\n   \"Seamless\
    \ BFD\" (S-BFD) has been chosen as the name for this\n   mechanism.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   The reader is expected to be familiar with the BFD [RFC5880],\
    \ IP\n   [RFC791] [RFC2460], and MPLS [RFC3031] terms and protocol constructs.\n\
    \   The remainder of this section describes several new terms introduced\n   by\
    \ S-BFD.\n   o  Classical BFD - BFD session types based on [RFC5880].\n   o  S-BFD\
    \ - Seamless BFD.\n   o  S-BFD Control packet - a BFD Control packet for the S-BFD\n\
    \      mechanism.\n   o  S-BFD Echo packet - a BFD Echo packet for the S-BFD mechanism.\n\
    \   o  S-BFD packet - a BFD Control packet or a BFD Echo packet.\n   o  Entity\
    \ - a function on a network node to which the S-BFD mechanism\n      allows remote\
    \ network nodes to perform continuity tests.  An\n      entity can be abstract\
    \ (e.g., reachability) or specific (e.g., IP\n      addresses, Router-IDs, functions).\n\
    \   o  SBFDInitiator - an S-BFD session on a network node that performs a\n  \
    \    continuity test to a remote entity by sending S-BFD packets.\n   o  SBFDReflector\
    \ - an S-BFD session on a network node that listens\n      for incoming S-BFD\
    \ Control packets to local entities and generates\n      response S-BFD Control\
    \ packets.\n   o  Reflector BFD session - synonymous with SBFDReflector.\n   o\
    \  S-BFD Discriminator - a BFD Discriminator allocated for a local\n      entity.\
    \  An SBFDReflector listens for S-BFD Discriminators.\n   o  BFD Discriminator\
    \ - a BFD Discriminator allocated for an\n      SBFDInitiator.\n   o  Initiator\
    \ - a network node hosting an SBFDInitiator.\n   o  Responder - a network node\
    \ hosting an SBFDReflector.\n   Figure 1 describes the relationship between S-BFD\
    \ terms.\n    +---------------------+                +------------------------+\n\
    \    |      Initiator      |                |         Responder      |\n    |\
    \ +-----------------+ |                |    +-----------------+ |\n    | |  SBFDInitiator\
    \  |---S-BFD Ctrl pkt----->|  SBFDReflector  | |\n    | | +-------------+ |<--S-BFD\
    \ Ctrl pkt------| +-------------+ | |\n    | | | BFD Discrim | | |           \
    \     |    | |S-BFD Discrim| | |\n    | | |             | |---S-BFD Echo pkt---+\
    \  | |             | | |\n    | | +-------------+ | |                | |  | +----------^--+\
    \ | |\n    | +-----------------+<-------------------+  +------------|----+ |\n\
    \    |                     |                |                 |      |\n    |\
    \                     |                |             +---v----+ |\n    |     \
    \                |                |             | Entity | |\n    |          \
    \           |                |             +--------+ |\n    +---------------------+\
    \                +------------------------+\n                 Figure 1: S-BFD\
    \ Terminology Relationship\n"
- title: 3.  Seamless BFD Overview
  contents:
  - "3.  Seamless BFD Overview\n   An S-BFD module on each network node allocates\
    \ one or more S-BFD\n   Discriminators for local entities and creates a Reflector\
    \ BFD\n   session.  Allocated S-BFD Discriminators may be advertised by\n   applications\
    \ (e.g., OSPF/IS-IS).  The required result is that\n   applications on other network\
    \ nodes will know about the S-BFD\n   Discriminators allocated by a remote node\
    \ to remote entities.  The\n   Reflector BFD session, upon receiving an S-BFD\
    \ Control packet\n   targeted to one of the local S-BFD Discriminator values,\
    \ is to\n   transmit a response S-BFD Control packet back to the initiator.\n\
    \   Once the above setup is complete, any network node that knows about\n   the\
    \ S-BFD Discriminator allocated by a remote node to a remote entity\n   or entities\
    \ can quickly perform a continuity test to the remote\n   entity by simply sending\
    \ S-BFD Control packets with a corresponding\n   S-BFD Discriminator value in\
    \ the Your Discriminator field.\n   This is exemplified in Figure 2.\n       \
    \              <------- IS-IS Network ------->\n                             \
    \  +---------+\n                               |         |\n                 \
    \    A---------B---------C---------D\n                     ^                 \
    \            ^\n                     |                             |\n       \
    \          System-ID                      System-ID\n                    xxx \
    \                           yyy\n                BFD Discrim                 \
    \   BFD Discrim\n                    123                            456\n    \
    \                 Figure 2: S-BFD for IS-IS Network\n   An S-BFD module in a system\
    \ with IS-IS System-ID xxx (Node A)\n   allocates an S-BFD Discriminator 123,\
    \ and IS-IS advertises the S-BFD\n   Discriminator 123 in an IS-IS TLV.  An S-BFD\
    \ module in a system with\n   IS-IS System-ID yyy (Node D) allocates an S-BFD\
    \ Discriminator 456,\n   and IS-IS advertises the S-BFD Discriminator 456 in an\
    \ IS-IS TLV.  A\n   Reflector BFD session is created on both network nodes (Node\
    \ A and\n   Node D).  When Node A wants to check the reachability of Node D,\n\
    \   Node A can send an S-BFD Control packet destined to Node D with the\n   Your\
    \ Discriminator field set to 456.  When the Reflector BFD session\n   on Node\
    \ D receives this S-BFD Control packet, then a response S-BFD\n   Control packet\
    \ is sent back to Node A, which allows Node A to\n   complete the continuity test.\n\
    \   When a node allocates multiple S-BFD Discriminators, how remote nodes\n  \
    \ determine which of the discriminators is associated with a specific\n   entity\
    \ is currently unspecified.  The use of multiple S-BFD\n   Discriminators by a\
    \ single network node is therefore discouraged\n   until a means of learning the\
    \ mapping is defined.\n"
- title: 4.  S-BFD Discriminators
  contents:
  - '4.  S-BFD Discriminators

    '
- title: 4.1.  S-BFD Discriminator Uniqueness
  contents:
  - "4.1.  S-BFD Discriminator Uniqueness\n   One important characteristic of an S-BFD\
    \ Discriminator is that it\n   MUST be unique within an administrative domain.\
    \  If multiple network\n   nodes allocate the same S-BFD Discriminator value,\
    \ then S-BFD Control\n   packets falsely terminating on a wrong network node can\
    \ result in a\n   Reflector BFD session generating a response back because of\
    \ a\n   matching Your Discriminator value.  This is clearly not desirable.\n"
- title: 4.2.  Discriminator Pools
  contents:
  - "4.2.  Discriminator Pools\n   This subsection describes a discriminator pool\
    \ implementation\n   technique to minimize S-BFD Discriminator collisions.  This\
    \ technique\n   will allow an implementation to better satisfy the S-BFD\n   Discriminator\
    \ uniqueness requirement defined in Section 4.1.\n   o  An SBFDInitiator is to\
    \ allocate a discriminator from the BFD\n      Discriminator pool.  If the system\
    \ also supports classical BFD\n      (i.e., implements [RFC5880]), then the BFD\
    \ Discriminator pool\n      SHOULD be shared by SBFDInitiator sessions and classical\
    \ BFD\n      sessions.\n   o  An SBFDReflector is to allocate a discriminator\
    \ from the S-BFD\n      Discriminator pool.  The S-BFD Discriminator pool SHOULD\
    \ be a\n      separate pool from the BFD Discriminator pool.\n   The remainder\
    \ of this subsection describes the reasons for the\n   suggestions above.\n  \
    \ Locally allocated S-BFD Discriminator values for entities that\n   SBFDReflector\
    \ sessions are listening for may be arbitrarily allocated\n   or derived from\
    \ values provided by applications.  These values may be\n   protocol IDs (e.g.,\
    \ System-ID, Router-ID) or network targets (e.g.,\n   IP address).  To avoid derived\
    \ S-BFD Discriminator values already\n   being assigned to other BFD sessions\
    \ (i.e., SBFDInitiator sessions\n   and classical BFD sessions), it is RECOMMENDED\
    \ that the discriminator\n   pool for SBFDReflector sessions be separate from\
    \ other BFD sessions.\n   Even when following the \"separate discriminator pool\"\
    \ approach, a\n   collision is still possible between different S-BFD applications\
    \ that\n   may be using different values and algorithms to derive S-BFD\n   Discriminator\
    \ values.  If two applications are using S-BFD for the\n   same purpose (e.g.,\
    \ network reachability), then the colliding S-BFD\n   Discriminator value can\
    \ be shared.  If the two applications are using\n   S-BFD for a different purpose,\
    \ then the collision must be addressed.\n   The use of multiple S-BFD Discriminators\
    \ by a single network node,\n   however, is discouraged (see Section 3).\n"
- title: 5.  Reflector BFD Session
  contents:
  - "5.  Reflector BFD Session\n   Each network node creates one or more Reflector\
    \ BFD sessions.  This\n   Reflector BFD session is a session that transmits S-BFD\
    \ Control\n   packets in response to received S-BFD Control packets with the\n\
    \   Your Discriminator field having S-BFD Discriminators allocated for\n   local\
    \ entities.  Specifically, this Reflector BFD session has the\n   following characteristics:\n\
    \   o  MUST NOT transmit any S-BFD packets based on local timer expiry.\n   o\
    \  MUST transmit an S-BFD Control packet in response to a received\n      S-BFD\
    \ Control packet having a valid S-BFD Discriminator in the\n      Your Discriminator\
    \ field, unless prohibited by local policies\n      (e.g., administrative, security,\
    \ rate-limiter).\n   o  MUST be capable of sending only two states: UP and AdminDown.\n\
    \   One Reflector BFD session may be responsible for handling received\n   S-BFD\
    \ Control packets targeted to all locally allocated S-BFD\n   Discriminators,\
    \ or a few Reflector BFD sessions may each be\n   responsible for a subset of\
    \ locally allocated S-BFD Discriminators.\n   This policy is a local matter and\
    \ is outside the scope of this\n   document.\n   Note that incoming S-BFD Control\
    \ packets may be based on IPv4, IPv6,\n   or MPLS [RFC7881].  Note also that other\
    \ options are possible and may\n   be defined in future documents.  How such S-BFD\
    \ Control packets reach\n   an appropriate Reflector BFD session is also a local\
    \ matter and is\n   outside the scope of this document.\n"
- title: 6.  State Variables
  contents:
  - "6.  State Variables\n   S-BFD introduces new state variables and modifies the\
    \ usage of\n   existing ones.\n"
- title: 6.1.  New State Variables
  contents:
  - "6.1.  New State Variables\n   A new state variable is added to the base specification\
    \ in support\n   of S-BFD.\n   o  bfd.SessionType: This is a new state variable\
    \ that describes\n      the type of a particular session.  Allowable values for\
    \ S-BFD\n      sessions are:\n      *  SBFDInitiator - an S-BFD session on a network\
    \ node that\n         performs a continuity test to a target entity by sending\
    \ S-BFD\n         packets.\n      *  SBFDReflector - an S-BFD session on a network\
    \ node that listens\n         for incoming S-BFD Control packets to local entities\
    \ and\n         generates response S-BFD Control packets.\n   The bfd.SessionType\
    \ variable MUST be initialized to the appropriate\n   type when an S-BFD session\
    \ is created.\n"
- title: 6.2.  State Variable Initialization and Maintenance
  contents:
  - "6.2.  State Variable Initialization and Maintenance\n   State variables (defined\
    \ in Section 6.8.1 of [RFC5880]) need to\n   be initialized or manipulated differently,\
    \ depending on the\n   session type.\n   o  bfd.DemandMode: This variable MUST\
    \ be initialized to 1 for session\n      type SBFDInitiator and MUST be initialized\
    \ to 0 for session type\n      SBFDReflector.  This is done to prevent loops (see\
    \ Appendix A).\n"
- title: 7.  S-BFD Procedures
  contents:
  - '7.  S-BFD Procedures

    '
- title: 7.1.  Demultiplexing of S-BFD Control Packet
  contents:
  - "7.1.  Demultiplexing of S-BFD Control Packet\n   An S-BFD packet MUST be demultiplexed\
    \ with lower-layer information\n   (e.g., dedicated destination UDP port [RFC7881],\
    \ associated Channel\n   Type [RFC7885]).  The following procedure SHOULD be executed\
    \ on both\n   initiator and reflector:\n      If the packet is an S-BFD packet\n\
    \         If the S-BFD packet is for an SBFDReflector\n            The packet\
    \ MUST be looked up to locate a corresponding\n            SBFDReflector session\
    \ based on the value from the\n            Your Discriminator field in the table\
    \ describing S-BFD\n            Discriminators.\n         Else\n            The\
    \ packet MUST be looked up to locate a corresponding\n            SBFDInitiator\
    \ session or classical BFD session based on the\n            value from the Your\
    \ Discriminator field in the table\n            describing BFD Discriminators.\
    \  If no match, then the\n            received packet MUST be discarded.\n   \
    \         If the session is an SBFDInitiator session\n               The destination\
    \ of the packet (i.e., the destination IP\n               address) SHOULD be verified\
    \ as being for itself.\n            Else\n               The packet MUST be discarded.\n\
    \      Else\n         The procedure described in Section 6.8.6 of [RFC5880] MUST\
    \ be\n         applied.\n   More details on S-BFD Control packet demultiplexing\
    \ are provided in\n   relevant S-BFD data-plane documents.\n"
- title: 7.2.  Responder Procedures
  contents:
  - "7.2.  Responder Procedures\n   A network node that receives S-BFD Control packets\
    \ transmitted by an\n   initiator is referred to as the responder.  The responder,\
    \ upon\n   reception of S-BFD Control packets, is to verify the validity of the\n\
    \   packets, as described in [RFC5880].\n"
- title: 7.2.1.  Responder Demultiplexing
  contents:
  - "7.2.1.  Responder Demultiplexing\n   An S-BFD packet MUST be demultiplexed with\
    \ lower-layer information.\n   The following procedure SHOULD be executed by the\
    \ responder:\n      If the Your Discriminator field is not one of the entries\n\
    \      allocated for local entities\n         The packet MUST be discarded.\n\
    \      Else\n         The packet is determined to be handled by a Reflector BFD\n\
    \         session responsible for that S-BFD Discriminator.\n         If allowable\
    \ per local policy (e.g., administrative, security,\n         rate-limiter)\n\
    \            The chosen Reflector BFD session SHOULD transmit a response\n   \
    \         BFD Control packet using the procedures described in\n            Section\
    \ 7.2.2.\n"
- title: 7.2.2.  Transmission of S-BFD Control Packet by SBFDReflector
  contents:
  - "7.2.2.  Transmission of S-BFD Control Packet by SBFDReflector\n   The contents\
    \ of S-BFD Control packets sent by an SBFDReflector MUST\n   be set as per Section\
    \ 6.8.7 of [RFC5880].  There are a few fields\n   that need to be set differently\
    \ from [RFC5880], as follows:\n      State (Sta)\n         Set to bfd.SessionState\
    \ (either UP or AdminDown only).\n         Clarification of Reflector BFD session\
    \ state is described in\n         Section 7.2.3.\n      Demand (D)\n         Set\
    \ to 0, to indicate that the S-BFD packet is sent by the\n         SBFDReflector.\n\
    \      Detect Mult\n         Value to be copied from the Detection Multiplier\
    \ field of the\n         received BFD packet.\n      My Discriminator\n      \
    \   Value to be copied from the Your Discriminator field of the\n         received\
    \ BFD packet.\n      Your Discriminator\n         Value to be copied from the\
    \ My Discriminator field of the\n         received BFD packet.\n      Desired\
    \ Min TX Interval\n         Value to be copied from the Desired Min TX Interval\
    \ field of\n         the received BFD packet.\n      Required Min RX Interval\n\
    \         Set to bfd.RequiredMinRxInterval.  Value indicating the minimum\n  \
    \       interval, in microseconds, between received S-BFD Control\n         packets.\
    \  Further details are provided in Section 7.2.3.\n      Required Min Echo RX\
    \ Interval\n         If the device supports looping back S-BFD Echo packets\n\
    \            Set to the minimum required S-BFD Echo packet receive\n         \
    \   interval for this session.\n         Else\n            Set to 0.\n"
- title: 7.2.3.  Additional SBFDReflector Behaviors
  contents:
  - "7.2.3.  Additional SBFDReflector Behaviors\n   o  S-BFD Control packets transmitted\
    \ by the SBFDReflector MUST have\n      Required Min RX Interval set to a value\
    \ that expresses, in\n      microseconds, the minimum interval between incoming\
    \ S-BFD Control\n      packets that this SBFDReflector can handle.  The SBFDReflector\
    \ can\n      control how fast SBFDInitiators will be sending S-BFD Control\n \
    \     packets to themselves by ensuring that Required Min RX Interval\n      indicates\
    \ a value based on the current load.\n   o  When the SBFDReflector receives an\
    \ S-BFD Control packet from an\n      SBFDInitiator, then the SBFDReflector needs\
    \ to determine what\n      \"state\" to send in the response S-BFD Control packet.\
    \  If the\n      monitored local entity is in service, then the state MUST be\
    \ set\n      to UP.  If the monitored local entity is \"temporarily out of\n \
    \     service\", then the state SHOULD be set to AdminDown.\n   o  If an SBFDReflector\
    \ receives an S-BFD Control packet with the\n      Demand (D) bit cleared, the\
    \ packet MUST be discarded (see\n      Appendix A).\n"
- title: 7.3.  Initiator Procedures
  contents:
  - "7.3.  Initiator Procedures\n   S-BFD Control packets transmitted by an SBFDInitiator\
    \ MUST set the\n   Your Discriminator field to an S-BFD Discriminator corresponding\
    \ to\n   the remote entity.\n   Every SBFDInitiator MUST have a locally unique\
    \ My Discriminator value\n   allocated from the BFD Discriminator pool.\n   Figure\
    \ 3 describes the high-level concept of continuity testing using\n   S-BFD.  R2\
    \ allocates XX as the S-BFD Discriminator for network\n   reachability purposes\
    \ and advertises XX to neighbors.  Figure 3 shows\n   R1 and R4 performing a continuity\
    \ test to R2.\n          +--- md=50/yd=XX (ping) ----+\n          |          \
    \                 |\n          |+-- md=XX/yd=50 (pong) --+ |\n          ||   \
    \                     | |\n          |v                        | v\n         \
    \ R1 ==================== R2[*] ========= R3 ========= R4\n                  \
    \                  | ^                        |^\n                           \
    \         | |                        ||\n                                    |\
    \ +-- md=60/yd=XX (ping) --+|\n                                    |         \
    \                  |\n                                    +---- md=XX/yd=60 (pong)\
    \ ---+\n         [*] Reflector BFD session on R2.\n         === Links connecting\
    \ network nodes.\n         --- S-BFD Control packet traversal.\n             \
    \         Figure 3: S-BFD Continuity Test\n"
- title: 7.3.1.  SBFDInitiator State Machine
  contents:
  - "7.3.1.  SBFDInitiator State Machine\n   An SBFDInitiator may be a \"persistent\"\
    \ session on the initiator with\n   a timer for S-BFD Control packet transmissions\
    \ (stateful\n   SBFDInitiator).  An SBFDInitiator may also be a module, a script,\
    \ or\n   a tool on the initiator that transmits one or more S-BFD Control\n  \
    \ packets \"when needed\" (stateless SBFDInitiator).  For stateless\n   SBFDInitiators,\
    \ a complete BFD state machine may not be applicable.\n   For stateful SBFDInitiators,\
    \ the states and the state machine\n   described in [RFC5880] will not function\
    \ due to the SBFDReflector\n   session only sending the UP and AdminDown states\
    \ (i.e., the\n   SBFDReflector session does not send the INIT state).  The following\n\
    \   diagram provides the RECOMMENDED state machine for stateful\n   SBFDInitiators.\
    \  The notation on each arc represents the state of the\n   SBFDInitiator (as\
    \ received in the State field in the S-BFD Control\n   packet) or indicates the\
    \ expiration of the Detection Timer.  See\n   Figure 4.\n                    \
    \   +--+\n          ADMIN DOWN,  |  |\n          TIMER        |  V\n         \
    \            +------+   UP                +------+\n                     |   \
    \   |-------------------->|      |----+\n                     | DOWN |       \
    \              |  UP  |    | UP\n                     |      |<--------------------|\
    \      |<---+\n                     +------+   ADMIN DOWN,       +------+\n  \
    \                              TIMER\n               Figure 4: SBFDInitiator Finite\
    \ State Machine\n   Note that the above state machine is different from the base\
    \ BFD\n   specification [RFC5880].  This is because the INIT state is no longer\n\
    \   applicable for the SBFDInitiator.  Another important difference is\n   the\
    \ transition of the state machine from the DOWN state to the UP\n   state when\
    \ a packet with an UP state setting is received by the\n   SBFDInitiator.  The\
    \ definitions of the states and events have the\n   same meanings as those defined\
    \ in the base BFD specification\n   [RFC5880].\n"
- title: 7.3.2.  Transmission of S-BFD Control Packet by SBFDInitiator
  contents:
  - "7.3.2.  Transmission of S-BFD Control Packet by SBFDInitiator\n   The contents\
    \ of S-BFD Control packets sent by an SBFDInitiator MUST\n   be set as per Section\
    \ 6.8.7 of [RFC5880].  There are a few fields\n   that need to be set differently\
    \ from [RFC5880], as follows:\n      Demand (D)\n         Used to indicate that\
    \ the S-BFD packet originated from the\n         SBFDInitiator.  Always set to\
    \ 1.\n      Your Discriminator\n         Set to bfd.RemoteDiscr.  bfd.RemoteDiscr\
    \ is set to the\n         Discriminator value of the remote entity.  It MAY be\
    \ learnt\n         from routing protocols or configured locally.\n      Required\
    \ Min RX Interval\n         Set to 0.\n      Required Min Echo RX Interval\n \
    \        Set to 0.\n"
- title: 7.3.3.  Additional SBFDInitiator Behaviors
  contents:
  - "7.3.3.  Additional SBFDInitiator Behaviors\n   o  If the SBFDInitiator receives\
    \ a valid S-BFD Control packet in\n      response to a transmitted S-BFD Control\
    \ packet to a remote entity,\n      then the SBFDInitiator SHOULD conclude that\
    \ the S-BFD Control\n      packet reached the intended remote entity.\n   o  When\
    \ an SBFDInitiator receives a response S-BFD Control packet, if\n      the state\
    \ specified is AdminDown, the SBFDInitiator MUST NOT\n      conclude that the\
    \ reachability of the corresponding remote entity\n      is lost and MUST back\
    \ off the packet transmission interval for the\n      remote entity to an interval\
    \ no faster than 1 second.\n   o  When a sufficient number of S-BFD packets have\
    \ not arrived as they\n      should, the SBFDInitiator SHOULD declare loss of\
    \ reachability to\n      the remote entity.  The criteria for declaring loss of\n\
    \      reachability and the action that would be triggered as a result\n     \
    \ are outside the scope of this document; the action MAY include\n      logging\
    \ an error.\n   o  Regarding the third bullet item, it is critical for an\n  \
    \    implementation to understand the latency to/from the Reflector BFD\n    \
    \  session on the responder.  In other words, for the very first\n      S-BFD\
    \ packet transmitted by the SBFDInitiator, an implementation\n      MUST NOT expect\
    \ a response S-BFD packet to be received for a time\n      equivalent to the sum\
    \ of the latencies: initiator to responder and\n      responder back to initiator.\n\
    \   o  If the SBFDInitiator receives an S-BFD Control packet with the\n      Demand\
    \ (D) bit set, the packet MUST be discarded (see Appendix A).\n"
- title: 7.4.  Diagnostic Values
  contents:
  - "7.4.  Diagnostic Values\n   The diagnostic value in both directions MAY be set\
    \ to a certain\n   value, to attempt to communicate further information to both\
    \ ends.\n   Implementations MAY use the already-existing diagnostic values\n \
    \  defined in Section 4.1 of [RFC5880].  However, details regarding this\n   topic\
    \ are outside the scope of this specification.\n"
- title: 7.5.  The Poll Sequence
  contents:
  - "7.5.  The Poll Sequence\n   The Poll Sequence MAY be used in both directions.\
    \  The Poll Sequence\n   MUST operate in accordance with [RFC5880].  An SBFDReflector\
    \ MAY use\n   the Poll Sequence to slow down the rate at which S-BFD Control\n\
    \   packets are generated from an SBFDInitiator.  This is done by the\n   SBFDReflector,\
    \ using the procedures described in Section 7.2.3 and\n   setting the Poll (P)\
    \ bit in the reflected S-BFD Control packet.  The\n   SBFDInitiator is to then\
    \ send the next S-BFD Control packet with the\n   Final (F) bit set.  If an SBFDReflector\
    \ receives an S-BFD Control\n   packet with the P bit set, then the SBFDReflector\
    \ MUST respond with\n   an S-BFD Control packet with the P bit cleared and the\
    \ F bit set.\n"
- title: 8.  Operational Considerations
  contents:
  - "8.  Operational Considerations\n   S-BFD provides a smooth and continuous (i.e.,\
    \ seamless) operational\n   experience as an Operations, Administration, and Maintenance\
    \ (OAM)\n   mechanism for connectivity checking and connection verification.\n\
    \   This is achieved by providing a simplified mechanism with a large\n   proportion\
    \ of negotiation aspects eliminated, resulting in faster and\n   simpler provisioning.\n\
    \   Because of this simplified mechanism, due to a misconfiguration an\n   SBFDInitiator\
    \ could send S-BFD Control packets to a target that does\n   not exist or that\
    \ is outside the S-BFD administrative domain.  As\n   explained in Section 7.3.1,\
    \ an SBFDInitiator can be a persistent\n   initiator or a \"when needed\" one.\
    \  When an S-BFD persistent\n   SBFDInitiator is used, a deployment SHOULD ensure\
    \ that S-BFD Control\n   packets do not propagate for an extended period of time\
    \ outside of\n   the administrative domain that uses it.  Further, operational\n\
    \   measures SHOULD be taken to determine if responses to S-BFD packets\n   are\
    \ not sent for an extended period of time and then remediate the\n   situation.\
    \  These potential concerns are largely mitigated by dynamic\n   advertisement\
    \ mechanisms for S-BFD and with automation checks before\n   applying configurations.\n"
- title: 8.1.  Scaling Aspect
  contents:
  - "8.1.  Scaling Aspect\n   This mechanism brings forth one noticeable difference\
    \ in terms of the\n   scaling aspect: the number of SBFDReflectors.  This specification\n\
    \   eliminates the need for egress nodes to have fully active BFD\n   sessions\
    \ when only one side desires to perform continuity tests.\n   With the introduction\
    \ of the Reflector BFD concept, egress is no\n   longer required to create any\
    \ active BFD sessions on a per-path/LSP/\n   function basis.  Because of this,\
    \ the total number of BFD sessions in\n   a network is reduced.\n"
- title: 8.2.  Congestion Considerations
  contents:
  - "8.2.  Congestion Considerations\n   When S-BFD performs failure detection, it\
    \ consumes resources,\n   including bandwidth and CPU processing.  To avoid congestion,\
    \ it is\n   therefore imperative that operators correctly provision the rates\
    \ at\n   which S-BFD packets are transmitted.  When BFD is used across\n   multiple\
    \ hops, a congestion control mechanism MUST be implemented,\n   and when congestion\
    \ is detected, the BFD implementation MUST reduce\n   the amount of traffic it\
    \ generates.  The exact mechanism used to\n   detect congestion is outside the\
    \ scope of this specification but may\n   include the detection of lost BFD Control\
    \ packets or other means.\n   The SBFDReflector can limit the rate at which SBFDInitiators\
    \ will be\n   sending S-BFD Control packets by utilizing Required Min RX Interval,\n\
    \   but at the expense of detection time (i.e., detection time will\n   increase).\n"
- title: 9.  Co-existence with Classical BFD Sessions
  contents:
  - "9.  Co-existence with Classical BFD Sessions\n   Demultiplexing requirements\
    \ for the initial packet are described in\n   Section 7.1.  Because of this, the\
    \ S-BFD mechanism can co-exist with\n   classical BFD sessions.\n"
- title: 10.  S-BFD Echo Function
  contents:
  - "10.  S-BFD Echo Function\n   The concept of the S-BFD Echo function is similar\
    \ to the BFD Echo\n   function described in [RFC5880].  S-BFD Echo packets have\
    \ the\n   destination of \"self\"; thus, S-BFD Echo packets are self-generated\n\
    \   and self-terminated after traversing a link/path.  S-BFD Echo packets\n  \
    \ are expected to U-turn on the target node in the data plane and\n   MUST NOT\
    \ be processed by any Reflector BFD sessions on the\n   target node.\n   When\
    \ using the S-BFD Echo function, it is RECOMMENDED that:\n   o  Both S-BFD Control\
    \ packets and S-BFD Echo packets be sent.\n   o  Both S-BFD Control packets and\
    \ S-BFD Echo packets have the same\n      semantics in the forward direction to\
    \ reach the target node.\n   In other words, it is not preferable to send just\
    \ S-BFD Echo packets\n   without also sending S-BFD Control packets.  There are\
    \ two reasons\n   behind this suggestion:\n   o  S-BFD Control packets can verify\
    \ the reachability of the intended\n      target node; this allows one to have\
    \ confidence that S-BFD Echo\n      packets are U-turning on the expected target\
    \ node.\n   o  S-BFD Control packets can detect when the target node is going\
    \ out\n      of service (i.e., by receiving AdminDown state).\n   S-BFD Echo packets\
    \ can be spoofed and can U-turn in a transit node\n   before reaching the expected\
    \ target node.  When the S-BFD Echo\n   function is used, it is RECOMMENDED in\
    \ this specification that both\n   S-BFD Control packets and S-BFD Echo packets\
    \ be sent.  While the\n   additional use of S-BFD Control packets alleviates these\
    \ two\n   concerns, some form of authentication MAY still be included.\n   The\
    \ usage of the Required Min Echo RX Interval field is described in\n   Sections\
    \ 7.2.2 and 7.3.2.  Because of the stateless nature of\n   SBFDReflector sessions,\
    \ a value specified in the Required Min Echo RX\n   Interval field is not very\
    \ meaningful to the SBFDReflector.  Thus, it\n   is RECOMMENDED that the Required\
    \ Min Echo RX Interval field simply be\n   set to zero by the SBFDInitiator. \
    \ The SBFDReflector MAY set the\n   Required Min Echo RX Interval field to an\
    \ appropriate value to\n   control the rate at which it wants to receive S-BFD\
    \ Echo packets.\n   The following aspects of S-BFD Echo functions are left as\n\
    \   implementation details and are outside the scope of this document:\n   o \
    \ Format of the S-BFD Echo packet (e.g., data beyond UDP header).\n   o  Procedures\
    \ on when and how to use the S-BFD Echo function.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The same security considerations as those described\
    \ in [RFC5880]\n   apply to this document.  Additionally, implementing the following\n\
    \   measures will strengthen security aspects of the mechanism described\n   by\
    \ this document:\n   o  The SBFDInitiator MAY pick a sequence number to be set\
    \ in\n      \"sequence number\" in the Authentication Section, based on the\n\
    \      configured authentication mode.\n   o  The SBFDReflector MUST NOT use the\
    \ crypto sequence number to make\n      a decision about accepting the packet.\
    \  This is because the\n      SBFDReflector does not maintain S-BFD peer state\
    \ and because the\n      SBFDReflector can receive S-BFD packets from multiple\n\
    \      SBFDInitiators.  Consequently, BFD authentication can be used, but\n  \
    \    not the sequence number.\n   o  The SBFDReflector MAY use the Auth Key ID\
    \ in the incoming packet\n      to verify the Authentication Data.\n   o  The\
    \ SBFDReflector MUST accept the packet if authentication is\n      successful.\n\
    \   o  The SBFDReflector MUST compute the Authentication Data and MUST\n     \
    \ use the same sequence number that it received in the S-BFD Control\n      packet\
    \ to which it is responding.\n   o  The SBFDInitiator SHOULD accept an S-BFD Control\
    \ packet with a\n      sequence number within the permissible range.  One potential\n\
    \      approach is the procedure explained in [BFD-GEN-AUTH].\n   Using the above\
    \ method,\n   o  SBFDReflectors continue to remain stateless, despite using\n\
    \      security.\n   o  SBFDReflectors are not susceptible to replay attacks,\
    \ as they\n      always respond to S-BFD Control packets irrespective of the\n\
    \      sequence number carried.\n   o  An attacker cannot impersonate the responder,\
    \ since the\n      SBFDInitiator will only accept S-BFD Control packets that come\n\
    \      with the sequence number that it had originally used when sending\n   \
    \   the S-BFD Control packet.\n   Additionally, the use of strong forms of authentication\
    \ is strongly\n   encouraged for S-BFD.  The use of Simple Password authentication\n\
    \   [RFC5880] potentially puts other services at risk if S-BFD packets\n   can\
    \ be intercepted and those password values are reused for other\n   services.\n\
    \   Considerations related to loop problems are covered in Appendix A.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5880]  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n  \
    \            (BFD)\", RFC 5880, DOI 10.17487/RFC5880, June 2010,\n           \
    \   <http://www.rfc-editor.org/info/rfc5880>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [BFD-GEN-AUTH]\n              Bhatia, M., Manral,\
    \ V., Zhang, D., and M. Jethanandani,\n              \"BFD Generic Cryptographic\
    \ Authentication\", Work in\n              Progress, draft-ietf-bfd-generic-crypto-auth-06,\n\
    \              April 2014.\n   [RFC791]   Postel, J., \"Internet Protocol\", STD\
    \ 5, RFC 791,\n              DOI 10.17487/RFC791, September 1981,\n          \
    \    <http://www.rfc-editor.org/info/rfc791>.\n   [RFC2460]  Deering, S. and R.\
    \ Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , RFC 2460, DOI 10.17487/RFC2460,\n              December 1998, <http://www.rfc-editor.org/info/rfc2460>.\n\
    \   [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n  \
    \            Label Switching Architecture\", RFC 3031,\n              DOI 10.17487/RFC3031,\
    \ January 2001,\n              <http://www.rfc-editor.org/info/rfc3031>.\n   [RFC7881]\
    \  Pignataro, C., Ward, D., and N. Akiya, \"Seamless\n              Bidirectional\
    \ Forwarding Detection (S-BFD) for IPv4, IPv6,\n              and MPLS\", RFC\
    \ 7881, DOI 10.17487/RFC7881, July 2016,\n              <http://www.rfc-editor.org/info/rfc7881>.\n\
    \   [RFC7882]  Aldrin, S., Pignataro, C., Mirsky, G., and N. Kumar,\n        \
    \      \"Seamless Bidirectional Forwarding Detection (S-BFD) Use\n           \
    \   Cases\", RFC 7882, DOI 10.17487/RFC7882, July 2016,\n              <http://www.rfc-editor.org/info/rfc7882>.\n\
    \   [RFC7885]  Govindan, V. and C. Pignataro, \"Seamless Bidirectional\n     \
    \         Forwarding Detection (S-BFD) for Virtual Circuit\n              Connectivity\
    \ Verification (VCCV)\", RFC 7885,\n              DOI 10.17487/RFC7885, July 2016,\n\
    \              <http://www.rfc-editor.org/info/rfc7885>.\n"
- title: Appendix A.  Loop Problem and Solution
  contents:
  - "Appendix A.  Loop Problem and Solution\n   Consider a scenario where we have\
    \ two nodes and both are S-BFD\n   capable.\n    Node A (IP 2001:db8::1) -----------------\
    \ Node B (IP 2001:db8::2)\n                                    |\n           \
    \                         |\n                         Man in the Middle (MITM)\n\
    \   Assume that Node A reserved a discriminator 0x01010101 for target\n   identifier\
    \ 2001:db8::1 and has a reflector session in listening mode.\n   Similarly, Node\
    \ B reserved a discriminator 0x02020202 for its target\n   identifier 2001:db8::2\
    \ and also has a reflector session in\n   listening mode.\n   Suppose that a MITM\
    \ sends a spoofed packet with My Discriminator =\n   0x01010101, Your Discriminator\
    \ = 0x02020202, source IP as\n   2001:db8::1, and destination IP as 2001:db8::2.\
    \  When this packet\n   reaches Node B, the reflector session on Node B will swap\
    \ the\n   discriminators and IP addresses of the received packet and reflect it\n\
    \   back, since the Your Discriminator value of the received packet\n   matches\
    \ the reserved discriminator of Node B.  The reflected packet\n   that reached\
    \ Node A will have My Discriminator = 0x02020202 and\n   Your Discriminator =\
    \ 0x01010101.  Since the Your Discriminator value\n   of the received packet matches\
    \ the reserved discriminator of Node A,\n   Node A will swap the discriminators\
    \ and reflect the packet back to\n   Node B.  Since the reflectors must set the\
    \ TTL of the reflected\n   packets to 255, the above scenario will result in an\
    \ infinite loop\n   because of just one malicious packet injected from the MITM.\n\
    \   The solution is to avoid the loop problem by using the D bit (Demand\n   mode\
    \ bit).  The initiator always sets the D bit, and the reflector\n   always clears\
    \ it.  This way, we can determine if a received packet\n   was a reflected packet\
    \ and avoid reflecting it back.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Jeffrey Haas, Greg Mirsky,\
    \ Marc\n   Binderberger, and Alvaro Retana for performing thorough reviews and\n\
    \   providing a number of suggestions.  The authors would also like to\n   thank\
    \ Girija Raghavendra Rao, Les Ginsberg, Srihari Raghavan, Vanitha\n   Neelamegam,\
    \ and Vengada Prasad Govindan from Cisco Systems for\n   providing valuable comments.\
    \  Finally, the authors would also like to\n   thank John E. Drake and Pablo Frank\
    \ for providing comments and\n   suggestions.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following are key contributors to this document:\n     \
    \ Tarek Saad, Cisco Systems, Inc.\n      Siva Sivabalan, Cisco Systems, Inc.\n\
    \      Nagendra Kumar, Cisco Systems, Inc.\n      Mallik Mudigonda, Cisco Systems,\
    \ Inc.\n      Sam Aldrin, Google\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Carlos Pignataro\n   Cisco Systems, Inc.\n   Email: cpignata@cisco.com\n\
    \   Dave Ward\n   Cisco Systems, Inc.\n   Email: wardd@cisco.com\n   Nobo Akiya\n\
    \   Big Switch Networks\n   Email: nobo.akiya.dev@gmail.com\n   Manav Bhatia\n\
    \   Ionos Networks\n   Email: manav@ionosnetworks.com\n   Santosh Pallagatti\n\
    \   Email: santosh.pallagatti@gmail.com\n"
