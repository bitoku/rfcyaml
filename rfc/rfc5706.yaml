- title: __initial_text__
  contents:
  - "        Guidelines for Considering Operations and Management of\n           \
    \      New Protocols and Protocol Extensions\n"
- title: Abstract
  contents:
  - "Abstract\n   New protocols or protocol extensions are best designed with due\n\
    \   consideration of the functionality needed to operate and manage the\n   protocols.\
    \  Retrofitting operations and management is sub-optimal.\n   The purpose of this\
    \ document is to provide guidance to authors and\n   reviewers of documents that\
    \ define new protocols or protocol\n   extensions regarding aspects of operations\
    \ and management that should\n   be considered.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the BSD License.\n   This document may\
    \ contain material from IETF Documents or IETF\n   Contributions published or\
    \ made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Designing for Operations and Management ....................4\n  \
    \    1.2. This Document ..............................................5\n    \
    \  1.3. Motivation .................................................5\n      1.4.\
    \ Background .................................................6\n      1.5. Available\
    \ Management Technologies ..........................7\n      1.6. Terminology\
    \ ................................................8\n   2. Operational Considerations\
    \ - How Will the New Protocol\n      Fit into the Current Environment? ...............................8\n\
    \      2.1. Operations .................................................9\n  \
    \    2.2. Installation and Initial Setup .............................9\n    \
    \  2.3. Migration Path ............................................10\n      2.4.\
    \ Requirements on Other Protocols and Functional\n           Components ................................................11\n\
    \      2.5. Impact on Network Operation ...............................11\n  \
    \    2.6. Verifying Correct Operation ...............................12\n   3.\
    \ Management Considerations - How Will the Protocol Be Managed? ..12\n      3.1.\
    \ Interoperability ..........................................14\n      3.2. Management\
    \ Information ....................................17\n           3.2.1. Information\
    \ Model Design ...........................18\n      3.3. Fault Management ..........................................18\n\
    \           3.3.1. Liveness Detection and Monitoring ..................19\n  \
    \         3.3.2. Fault Determination ................................19\n    \
    \       3.3.3. Root Cause Analysis ................................20\n      \
    \     3.3.4. Fault Isolation ....................................20\n      3.4.\
    \ Configuration Management ..................................20\n           3.4.1.\
    \ Verifying Correct Operation ........................22\n      3.5. Accounting\
    \ Management .....................................22\n      3.6. Performance Management\
    \ ....................................22\n           3.6.1. Monitoring the Protocol\
    \ ............................23\n           3.6.2. Monitoring the Device ..............................24\n\
    \           3.6.3. Monitoring the Network .............................24\n  \
    \         3.6.4. Monitoring the Service .............................25\n    \
    \  3.7. Security Management .......................................25\n   4. Documentation\
    \ Guidelines .......................................26\n      4.1. Recommended\
    \ Discussions ...................................27\n      4.2. Null Manageability\
    \ Considerations Sections ................27\n      4.3. Placement of Operations\
    \ and Manageability\n           Considerations Sections ...................................28\n\
    \   5. Security Considerations ........................................28\n  \
    \ 6. Acknowledgements ...............................................28\n   7.\
    \ Informative References .........................................29\n   Appendix\
    \ A.  Operations and Management Review Checklist  ..........32\n     A.1.  Operational\
    \ Considerations ................................32\n     A.2.  Management Considerations\
    \  ................................34\n     A.3.  Documentation .............................................35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Often when new protocols or protocol extensions are developed,\
    \ not\n   enough consideration is given to how the protocol will be deployed,\n\
    \   operated, and managed.  Retrofitting operations and management\n   mechanisms\
    \ is often hard and architecturally unpleasant, and certain\n   protocol design\
    \ choices may make deployment, operations, and\n   management particularly hard.\
    \  This document provides guidelines to\n   help protocol designers and working\
    \ groups consider the operations\n   and management functionality for their new\
    \ IETF protocol or protocol\n   extension at an earlier phase.\n"
- title: 1.1.  Designing for Operations and Management
  contents:
  - "1.1.  Designing for Operations and Management\n   The operational environment\
    \ and manageability of the protocol should\n   be considered from the start when\
    \ new protocols are designed.\n   Most of the existing IETF management standards\
    \ are focused on using\n   Structure of Management Information (SMI)-based data\
    \ models (MIB\n   modules) to monitor and manage networking devices.  As the Internet\n\
    \   has grown, IETF protocols have addressed a constantly growing set of\n   needs,\
    \ such as web servers, collaboration services, and applications.\n   The number\
    \ of IETF management technologies has been expanding and the\n   IETF management\
    \ strategy has been changing to address the emerging\n   management requirements.\
    \  The discussion of emerging sets of\n   management requirements has a long history\
    \ in the IETF.  The set of\n   management protocols you should use depends on\
    \ what you are managing.\n   Protocol designers should consider which operations\
    \ and management\n   needs are relevant to their protocol, document how those\
    \ needs could\n   be addressed, and suggest (preferably standard) management protocols\n\
    \   and data models that could be used to address those needs.  This is\n   similar\
    \ to a working group (WG) that considers which security threats\n   are relevant\
    \ to their protocol, documents how threats should be\n   mitigated, and then suggests\
    \ appropriate standard protocols that\n   could mitigate the threats.\n   When\
    \ a WG considers operation and management functionality for a\n   protocol, the\
    \ document should contain enough information for readers\n   to understand how\
    \ the protocol will be deployed and managed.  The WG\n   should expect that considerations\
    \ for operations and management may\n   need to be updated in the future, after\
    \ further operational\n   experience has been gained.\n"
- title: 1.2.  This Document
  contents:
  - "1.2.  This Document\n   This document makes a distinction between \"Operational\n\
    \   Considerations\" and \"Management Considerations\", although the two are\n\
    \   closely related.  The section on manageability is focused on\n   management\
    \ technology, such as how to utilize management protocols\n   and how to design\
    \ management data models.  The operational\n   considerations apply to operating\
    \ the protocol within a network, even\n   if there were no management protocol\
    \ actively being used.\n   The purpose of this document is to provide guidance\
    \ about what to\n   consider when thinking about the management and deployment\
    \ of a new\n   protocol, and to provide guidance about documenting the\n   considerations.\
    \  The following guidelines are designed to help\n   writers provide a reasonably\
    \ consistent format for such\n   documentation.  Separate manageability and operational\
    \ considerations\n   sections are desirable in many cases, but their structure\
    \ and\n   location is a decision that can be made from case to case.\n   This\
    \ document does not impose a solution, imply that a formal data\n   model is needed,\
    \ or imply that using a specific management protocol\n   is mandatory.  If protocol\
    \ designers conclude that the technology can\n   be managed solely by using proprietary\
    \ command line interfaces (CLIs)\n   and that no structured or standardized data\
    \ model needs to be in\n   place, this might be fine, but it is a decision that\
    \ should be\n   explicit in a manageability discussion -- that this is how the\n\
    \   protocol will need to be operated and managed.  Protocol designers\n   should\
    \ avoid having manageability pushed for a later phase of the\n   development of\
    \ the standard.\n   In discussing the importance of considering operations and\n\
    \   management, this document sets forth a list of guidelines and a\n   checklist\
    \ of questions to consider (see Appendix A), which a protocol\n   designer or\
    \ reviewer can use to evaluate whether the protocol and\n   documentation address\
    \ common operations and management needs.\n   Operations and management are highly\
    \ dependent on their environment,\n   so most guidelines are subjective rather\
    \ than objective.\n"
- title: 1.3.  Motivation
  contents:
  - "1.3.  Motivation\n   For years the IETF community has used the IETF Standard\
    \ Management\n   Framework, including the Simple Network Management Protocol\n\
    \   [RFC3410], the Structure of Management Information [RFC2578], and MIB\n  \
    \ data models for managing new protocols.  As the Internet has evolved,\n   operators\
    \ have found the reliance on one protocol and one schema\n   language for managing\
    \ all aspects of the Internet inadequate.  The\n   IESG policy to require working\
    \ groups to write a MIB module to\n   provide manageability for new protocols\
    \ is being replaced by a policy\n   that is more open to using a variety of management\
    \ protocols and data\n   models designed to achieve different goals.\n   This\
    \ document provides some initial guidelines for considering\n   operations and\
    \ management in an IETF Management Framework that\n   consists of multiple protocols\
    \ and multiple data-modeling languages,\n   with an eye toward being flexible\
    \ while also striving for\n   interoperability.\n   Fully new protocols may require\
    \ significant consideration of expected\n   operations and management, while extensions\
    \ to existing, widely\n   deployed protocols may have established de facto operations\
    \ and\n   management practices that are already well understood.\n   Suitable\
    \ management approaches may vary for different areas, working\n   groups, and\
    \ protocols in the IETF.  This document does not prescribe\n   a fixed solution\
    \ or format in dealing with operational and management\n   aspects of IETF protocols.\
    \  However, these aspects should be\n   considered for any IETF protocol because\
    \ we develop technologies and\n   protocols to be deployed and operated in the\
    \ real-world Internet.  It\n   is fine if a WG decides that its protocol does\
    \ not need interoperable\n   management or no standardized data model, but this\
    \ should be a\n   deliberate decision, not the result of omission.  This document\n\
    \   provides some guidelines for those considerations.\n"
- title: 1.4.  Background
  contents:
  - "1.4.  Background\n   There have been a significant number of efforts, meetings,\
    \ and\n   documents that are related to Internet operations and management.\n\
    \   Some of them are mentioned here to help protocol designers find\n   documentation\
    \ of previous efforts.  Hopefully, providing these\n   references will help the\
    \ IETF avoid rehashing old discussions and\n   reinventing old solutions.\n  \
    \ In 1988, the IAB published \"IAB Recommendations for the Development\n   of\
    \ Internet Network Management Standards\" [RFC1052], which\n   recommended a solution\
    \ that, where possible, deliberately separates\n   modeling languages, data models,\
    \ and the protocols that carry data.\n   The goal is to allow standardized information\
    \ and data models to be\n   used by different protocols.\n   In 2001, Operations\
    \ and Management Area design teams were created to\n   document requirements related\
    \ to the configuration of IP-based\n   networks.  One output was \"Requirements\
    \ for Configuration Management\n   of IP-based Networks\" [RFC3139].\n   In 2003,\
    \ the Internet Architecture Board (IAB) held a workshop on\n   Network Management\
    \ [RFC3535] that discussed the strengths and\n   weaknesses of some IETF network\
    \ management protocols and compared\n   them to operational needs, especially\
    \ configuration.\n   One issue discussed was the user-unfriendliness of the binary\
    \ format\n   of SNMP [RFC3410] and Common Open Policy Service (COPS) Usage for\n\
    \   Policy Provisioning (COPS-PR) [RFC3084], and it was recommended that\n   the\
    \ IETF explore an XML-based Structure of Management Information and\n   an XML-based\
    \ protocol for configuration.\n   Another conclusion was that the tools for event/alarm\
    \ correlation and\n   for root cause analysis and logging are not sufficient and\
    \ that there\n   is a need to support a human interface and a programmatic interface.\n\
    \   The IETF decided to standardize aspects of the de facto standard for\n   system-logging\
    \ security and programmatic support.\n   In 2006, the IETF discussed whether the\
    \ Management Framework should\n   be updated to accommodate multiple IETF schema\
    \ languages for\n   describing the structure of management information and multiple\
    \ IETF\n   standard protocols for performing management tasks.  The IESG asked\n\
    \   that a document be written to discuss how protocol designers and\n   working\
    \ groups should address management in this emerging multi-\n   protocol environment.\
    \  This document and some planned companion\n   documents attempt to provide some\
    \ guidelines for navigating the\n   rapidly shifting operating and management\
    \ environments.\n"
- title: 1.5.  Available Management Technologies
  contents:
  - "1.5.  Available Management Technologies\n   The IETF has a number of standard\
    \ management protocols available that\n   are suitable for different purposes.\
    \  These include:\n      Simple Network Management Protocol - SNMP [RFC3410]\n\
    \      Syslog [RFC5424]\n      Remote Authentication Dial-In User Service - RADIUS\
    \ [RFC2865]\n      DIAMETER [RFC3588]\n      Network Configuration Protocol -\
    \ NETCONF [RFC4741]\n      IP Flow Information Export - IPFIX [RFC5101]\n   A\
    \ planned supplement to this document will discuss these protocol\n   standards,\
    \ discuss some standard information and data models for\n   specific functionality,\
    \ and provide pointers to the documents that\n   define them.\n"
- title: 1.6.  Terminology
  contents:
  - "1.6.  Terminology\n   This document deliberately does not use the (capitalized)\
    \ keywords\n   described in RFC 2119 [RFC2119].  RFC 2119 states the keywords\
    \ must\n   only be used where it is actually required for interoperation or to\n\
    \   limit behavior which has potential for causing harm (e.g., limiting\n   retransmissions).\
    \  For example, they must not be used to try to\n   impose a particular method\
    \ on implementers where the method is not\n   required for interoperability. \
    \ This informational document is a set\n   of guidelines based on current practices\
    \ of **some** protocol\n   designers and operators.  This document is biased toward\
    \ router\n   operations and management and some advice may not be directly\n \
    \  applicable to protocols with a different purpose, such as application\n   server\
    \ protocols.  This document **does not** describe\n   interoperability requirements,\
    \ so the capitalized keywords from RFC\n   2119 do not apply here.\n   o  CLI:\
    \ Command Line Interface\n   o  Data model: a mapping of the contents of an information\
    \ model into\n      a form that is specific to a particular type of data store\
    \ or\n      repository [RFC3444].\n   o  Information model: an abstraction and\
    \ representation of the\n      entities in a managed environment, their properties,\
    \ attributes\n      and operations, and the way that they relate to each other.\
    \  It is\n      independent of any specific repository, software usage, protocol,\n\
    \      or platform [RFC3444].\n   o  New protocol: includes new protocols, protocol\
    \ extensions, data\n      models, or other functionality being designed.\n   o\
    \  Protocol designer: represents individuals and working groups\n      involved\
    \ in the development of new protocols or extensions.\n"
- title: 2.  Operational Considerations - How Will the New Protocol Fit into the
  contents:
  - "2.  Operational Considerations - How Will the New Protocol Fit into the\n   \
    \ Current Environment?\n   Designers of a new protocol should carefully consider\
    \ the operational\n   aspects.  To ensure that a protocol will be practical to\
    \ deploy in\n   the real world, it is not enough to merely define it very precisely\n\
    \   in a well-written document.  Operational aspects will have a serious\n   impact\
    \ on the actual success of a protocol.  Such aspects include bad\n   interactions\
    \ with existing solutions, a difficult upgrade path,\n   difficulty of debugging\
    \ problems, difficulty configuring from a\n   central database, or a complicated\
    \ state diagram that operations\n   staff will find difficult to understand.\n\
    \   BGP flap damping [RFC2439] is an example.  It was designed to block\n   high-frequency\
    \ route flaps; however, the design did not consider the\n   existence of BGP path\
    \ exploration / slow convergence.  In real\n   operations, path exploration caused\
    \ false flap damping, resulting in\n   loss of reachability.  As a result, many\
    \ networks turned flap damping\n   off.\n"
- title: 2.1.  Operations
  contents:
  - "2.1.  Operations\n   Protocol designers can analyze the operational environment\
    \ and mode\n   of work in which the new protocol or extension will work.  Such\
    \ an\n   exercise need not be reflected directly by text in their document,\n\
    \   but could help in visualizing how to apply the protocol in the\n   Internet\
    \ environments where it will be deployed.\n   A key question is how the protocol\
    \ can operate \"out of the box\".  If\n   implementers are free to select their\
    \ own defaults, the protocol\n   needs to operate well with any choice of values.\
    \  If there are\n   sensible defaults, these need to be stated.\n   There may\
    \ be a need to support a human interface, e.g., for\n   troubleshooting, and a\
    \ programmatic interface, e.g., for automated\n   monitoring and root cause analysis.\
    \  The application programming\n   interfaces and the human interfaces might benefit\
    \ from being similar\n   to ensure that the information exposed by these two interfaces\
    \ is\n   consistent when presented to an operator.  Identifying consistent\n \
    \  methods of determining information, such as what gets counted in a\n   specific\
    \ counter, is relevant.\n   Protocol designers should consider what management\
    \ operations are\n   expected to be performed as a result of the deployment of\
    \ the\n   protocol -- such as whether write operations will be allowed on\n  \
    \ routers and on hosts, or whether notifications for alarms or other\n   events\
    \ will be expected.\n"
- title: 2.2.  Installation and Initial Setup
  contents:
  - "2.2.  Installation and Initial Setup\n   Anything that can be configured can\
    \ be misconfigured.  \"Architectural\n   Principles of the Internet\" [RFC1958],\
    \ Section 3.8, states: \"Avoid\n   options and parameters whenever possible. \
    \ Any options and parameters\n   should be configured or negotiated dynamically\
    \ rather than manually.\"\n   To simplify configuration, protocol designers should\
    \ consider\n   specifying reasonable defaults, including default modes and\n \
    \  parameters.  For example, it could be helpful or necessary to specify\n   default\
    \ values for modes, timers, default state of logical control\n   variables, default\
    \ transports, and so on.  Even if default values are\n   used, it must be possible\
    \ to retrieve all the actual values or at\n   least an indication that known default\
    \ values are being used.\n   Protocol designers should consider how to enable\
    \ operators to\n   concentrate on the configuration of the network as a whole\
    \ rather\n   than on individual devices.  Of course, how one accomplishes this\
    \ is\n   the hard part.\n   It is desirable to discuss the background of chosen\
    \ default values,\n   or perhaps why a range of values makes sense.  In many cases,\
    \ as\n   technology changes, the values in an RFC might make less and less\n \
    \  sense.  It is very useful to understand whether defaults are based on\n   best\
    \ current practice and are expected to change as technologies\n   advance or whether\
    \ they have a more universal value that should not\n   be changed lightly.  For\
    \ example, the default interface speed might\n   be expected to change over time\
    \ due to increased speeds in the\n   network, and cryptographical algorithms might\
    \ be expected to change\n   over time as older algorithms are \"broken\".\n  \
    \ It is extremely important to set a sensible default value for all\n   parameters.\n\
    \   The default value should stay on the conservative side rather than on\n  \
    \ the \"optimizing performance\" side (example: the initial RTT and\n   RTTvar\
    \ values of a TCP connection).\n   For those parameters that are speed-dependent,\
    \ instead of using a\n   constant, try to set the default value as a function\
    \ of the link\n   speed or some other relevant factors.  This would help reduce\
    \ the\n   chance of problems caused by technology advancement.\n"
- title: 2.3.  Migration Path
  contents:
  - "2.3.  Migration Path\n   If the new protocol is a new version of an existing\
    \ one, or if it is\n   replacing another technology, the protocol designer should\
    \ consider\n   how deployments should transition to the new protocol.  This should\n\
    \   include coexistence with previously deployed protocols and/or\n   previous\
    \ versions of the same protocol, incompatibilities between\n   versions, translation\
    \ between versions, and side effects that might\n   occur.  Are older protocols\
    \ or versions disabled or do they coexist\n   in the network with the new protocol?\n\
    \   Many protocols benefit from being incrementally deployable --\n   operators\
    \ may deploy aspects of a protocol before deploying the\n   protocol fully.\n"
- title: 2.4.  Requirements on Other Protocols and Functional Components
  contents:
  - "2.4.  Requirements on Other Protocols and Functional Components\n   Protocol\
    \ designers should consider the requirements that the new\n   protocol might put\
    \ on other protocols and functional components and\n   should also document the\
    \ requirements from other protocols and\n   functional elements that have been\
    \ considered in designing the new\n   protocol.\n   These considerations should\
    \ generally remain illustrative to avoid\n   creating restrictions or dependencies,\
    \ or potentially impacting the\n   behavior of existing protocols, or restricting\
    \ the extensibility of\n   other protocols, or assuming other protocols will not\
    \ be extended in\n   certain ways.  If restrictions or dependencies exist, they\
    \ should be\n   stated.\n   For example, the design of the Resource ReSerVation\
    \ Protocol (RSVP)\n   [RFC2205] required each router to look at the RSVP PATH\
    \ message and,\n   if the router understood RSVP, add its own address to the message\
    \ to\n   enable automatic tunneling through non-RSVP routers.  But in reality,\n\
    \   routers cannot look at an otherwise normal IP packet and potentially\n   take\
    \ it off the fast path!  The initial designers overlooked that a\n   new \"deep\
    \ packet inspection\" requirement was being put on the\n   functional components\
    \ of a router.  The \"router alert\" option\n   ([RFC2113], [RFC2711]) was finally\
    \ developed to solve this problem\n   for RSVP and other protocols that require\
    \ the router to take some\n   packets off the fast-forwarding path.  Yet, router\
    \ alert has its own\n   problems in impacting router performance.\n"
- title: 2.5.  Impact on Network Operation
  contents:
  - "2.5.  Impact on Network Operation\n   The introduction of a new protocol or extensions\
    \ to an existing\n   protocol may have an impact on the operation of existing\
    \ networks.\n   Protocol designers should outline such impacts (which may be\n\
    \   positive), including scaling concerns and interactions with other\n   protocols.\
    \  For example, a new protocol that doubles the number of\n   active, reachable\
    \ addresses in use within a network might need to be\n   considered in the light\
    \ of the impact on the scalability of the\n   interior gateway protocols operating\
    \ within the network.\n   A protocol could send active monitoring packets on the\
    \ wire.  If we\n   don't pay attention, we might get very good accuracy, but could\
    \ send\n   too many active monitoring packets.\n   The protocol designer should\
    \ consider the potential impact on the\n   behavior of other protocols in the\
    \ network and on the traffic levels\n   and traffic patterns that might change,\
    \ including specific types of\n   traffic, such as multicast.  Also, consider\
    \ the need to install new\n   components that are added to the network as a result\
    \ of changes in\n   the configuration, such as servers performing auto-configuration\n\
    \   operations.\n   The protocol designer should consider also the impact on\n\
    \   infrastructure applications like DNS [RFC1034], the registries, or\n   the\
    \ size of routing tables.  For example, Simple Mail Transfer\n   Protocol (SMTP)\
    \ [RFC5321] servers use a reverse DNS lookup to filter\n   out incoming connection\
    \ requests.  When Berkeley installed a new spam\n   filter, their mail server\
    \ stopped functioning because of overload of\n   the DNS cache resolver.\n   The\
    \ impact on performance may also be noted -- increased delay or\n   jitter in\
    \ real-time traffic applications, or increased response time\n   in client-server\
    \ applications when encryption or filtering are\n   applied.\n   It is important\
    \ to minimize the impact caused by configuration\n   changes.  Given configuration\
    \ A and configuration B, it should be\n   possible to generate the operations\
    \ necessary to get from A to B with\n   minimal state changes and effects on network\
    \ and systems.\n"
- title: 2.6.  Verifying Correct Operation
  contents:
  - "2.6.  Verifying Correct Operation\n   The protocol designer should consider techniques\
    \ for testing the\n   effect that the protocol has had on the network by sending\
    \ data\n   through the network and observing its behavior (aka active\n   monitoring).\
    \  Protocol designers should consider how the correct end-\n   to-end operation\
    \ of the new protocol in the network can be tested\n   actively and passively,\
    \ and how the correct data or forwarding plane\n   function of each network element\
    \ can be verified to be working\n   properly with the new protocol.  Which metrics\
    \ are of interest?\n   Having simple protocol status and health indicators on\
    \ network\n   devices is a recommended means to check correct operation.\n"
- title: 3.  Management Considerations - How Will the Protocol Be Managed?
  contents:
  - "3.  Management Considerations - How Will the Protocol Be Managed?\n   The considerations\
    \ of manageability should start from identifying the\n   entities to be managed,\
    \ as well as how the managed protocol is\n   supposed to be installed, configured,\
    \ and monitored.\n   Considerations for management should include a discussion\
    \ of what\n   needs to be managed, and how to achieve various management tasks.\n\
    \   Where are the managers and what type of management interfaces and\n   protocols\
    \ will they need?  The \"write a MIB module\" approach to\n   considering management\
    \ often focuses on monitoring a protocol\n   endpoint on a single device.  A MIB\
    \ module document typically only\n   considers monitoring properties observable\
    \ at one end, while the\n   document does not really cover managing the *protocol*\
    \ (the\n   coordination of multiple ends), and does not even come near managing\n\
    \   the *service* (which includes a lot of stuff that is very far away\n   from\
    \ the box).  This is exactly what operators hate -- you need to be\n   able to\
    \ manage both ends.  As [RFC3535] says, \"MIB modules can often\n   be characterized\
    \ as a list of ingredients without a recipe\".\n   The management model should\
    \ take into account factors such as:\n   o  What type of management entities will\
    \ be involved (agents, network\n      management systems)?\n   o  What is the\
    \ possible architecture (client-server, manager-agent,\n      poll-driven or event-driven,\
    \ auto-configuration, two levels or\n      hierarchical)?\n   o  What are the\
    \ management operations (initial configuration, dynamic\n      configuration,\
    \ alarm and exception reporting, logging, performance\n      monitoring, performance\
    \ reporting, debugging)?\n   o  How are these operations performed (locally, remotely,\
    \ atomic\n      operation, scripts)?  Are they performed immediately or are they\n\
    \      time scheduled or event triggered?\n   Protocol designers should consider\
    \ how the new protocol will be\n   managed in different deployment scales.  It\
    \ might be sensible to use\n   a local management interface to manage the new\
    \ protocol on a single\n   device, but in a large network, remote management using\
    \ a centralized\n   server and/or using distributed management functionality might\
    \ make\n   more sense.  Auto-configuration and default parameters might be\n \
    \  possible for some new protocols.\n   Management needs to be considered not\
    \ only from the perspective of a\n   device, but also from the perspective of\
    \ network and service\n   management.  A service might be network and operational\
    \ functionality\n   derived from the implementation and deployment of a new protocol.\n\
    \   Often an individual network element is not aware of the service being\n  \
    \ delivered.\n   WGs should consider how to configure multiple related/co-operating\n\
    \   devices and how to back off if one of those configurations fails or\n   causes\
    \ trouble.  NETCONF [RFC4741] addresses this in a generic manner\n   by allowing\
    \ an operator to lock the configuration on multiple\n   devices, perform the configuration\
    \ settings/changes, check that they\n   are OK (undo if not), and then unlock\
    \ the devices.\n   Techniques for debugging protocol interactions in a network\
    \ must be\n   part of the network-management discussion.  Implementation source\n\
    \   code should be debugged before ever being added to a network, so\n   asserts\
    \ and memory dumps do not normally belong in management data\n   models.  However,\
    \ debugging on-the-wire interactions is a protocol\n   issue: while the messages\
    \ can be seen by sniffing, it is enormously\n   helpful if a protocol specification\
    \ supports features that make\n   debugging of network interactions and behaviors\
    \ easier.  There could\n   be alerts issued when messages are received or when\
    \ there are state\n   transitions in the protocol state machine.  However, the\
    \ state\n   machine is often not part of the on-the-wire protocol; the state\n\
    \   machine explains how the protocol works so that an implementer can\n   decide,\
    \ in an implementation-specific manner, how to react to a\n   received event.\n\
    \   In a client/server protocol, it may be more important to instrument\n   the\
    \ server end of a protocol than the client end, since the\n   performance of the\
    \ server might impact more nodes than the\n   performance of a specific client.\n"
- title: 3.1.  Interoperability
  contents:
  - "3.1.  Interoperability\n   Just as when deploying protocols that will inter-connect\
    \ devices,\n   management interoperability should be considered -- whether across\n\
    \   devices from different vendors, across models from the same vendor,\n   or\
    \ across different releases of the same product.  Management\n   interoperability\
    \ refers to allowing information sharing and\n   operations between multiple devices\
    \ and multiple management\n   applications, often from different vendors.  Interoperability\
    \ allows\n   for the use of third-party applications and the outsourcing of\n\
    \   management services.\n   Some product designers and protocol designers assume\
    \ that if a device\n   can be managed individually using a command line interface\
    \ or a web\n   page interface, that such a solution is enough.  But when equipment\n\
    \   from multiple vendors is combined into a large network, scalability\n   of\
    \ management may become a problem.  It may be important to have\n   consistency\
    \ in the management interfaces so network-wide operational\n   processes can be\
    \ automated.  For example, a single switch might be\n   easily managed using an\
    \ interactive web interface when installed in a\n   single-office small business,\
    \ but when, say, a fast-food company\n   installs similar switches from multiple\
    \ vendors in hundreds or\n   thousands of individual branches and wants to automate\
    \ monitoring\n   them from a central location, monitoring vendor- and model-specific\n\
    \   web pages would be difficult to automate.\n   The primary goal is the ability\
    \ to roll out new useful functions and\n   services in a way in which they can\
    \ be managed in a scalable manner,\n   where one understands the network impact\
    \ (as part of the total cost\n   of operations) of that service.\n   Getting everybody\
    \ to agree on a single syntax and an associated\n   protocol to do all management\
    \ has proven to be difficult.  So\n   management systems tend to speak whatever\
    \ the boxes support, whether\n   or not the IETF likes this.  The IETF is moving\
    \ from support for one\n   schema language for modeling the structure of management\
    \ information\n   (Structure of Management Information Version 2 (SMIv2) [RFC2578])\
    \ and\n   one simple network management protocol (Simple Network Management\n\
    \   Protocol (SNMP) [RFC3410]) towards support for additional schema\n   languages\
    \ and additional management protocols suited to different\n   purposes.  Other\
    \ Standard Development Organizations (e.g., the\n   Distributed Management Task\
    \ Force - DMTF, the Tele-Management Forum -\n   TMF) also define schemas and protocols\
    \ for management and these may\n   be more suitable than IETF schemas and protocols\
    \ in some cases.  Some\n   of the alternatives being considered include:\n   o\
    \  XML Schema Definition [W3C.REC-xmlschema-0-20010502]\n   and\n   o  NETCONF\
    \ Configuration Protocol [RFC4741]\n   o  the IP Flow Information Export (IPFIX)\
    \ Protocol [RFC5101]) for\n      usage accounting\n   o  the syslog protocol [RFC5424]\
    \ for logging\n   Interoperability needs to be considered on the syntactic level\
    \ and\n   the semantic level.  While it can be irritating and time-consuming,\n\
    \   application designers, including operators who write their own\n   scripts,\
    \ can make their processing conditional to accommodate\n   syntactic differences\
    \ across vendors, models, or releases of product.\n   Semantic differences are\
    \ much harder to deal with on the manager side\n   -- once you have the data,\
    \ its meaning is a function of the managed\n   entity.\n   Information models\
    \ are helpful to try to focus interoperability on\n   the semantic level -- they\
    \ establish standards for what information\n   should be gathered and how gathered\
    \ information might be used,\n   regardless of which management interface carries\
    \ the data or which\n   vendor produces the product.  The use of an information\
    \ model might\n   help improve the ability of operators to correlate messages\
    \ in\n   different protocols where the data overlaps, such as a syslog message\n\
    \   and an SNMP notification about the same event.  An information model\n   might\
    \ identify which error conditions should be counted separately\n   and which error\
    \ conditions can be counted together in a single\n   counter.  Then, whether the\
    \ counter is gathered via SNMP, a CLI\n   command, or a syslog message, the counter\
    \ will have the same meaning.\n   Protocol designers should consider which information\
    \ might be useful\n   for managing the new protocol or protocol extensions.\n\
    \                IM                --> conceptual/abstract model\n           \
    \      |                    for designers and operators\n      +----------+---------+\n\
    \      |          |         |\n      DM        DM         DM     --> concrete/detailed\
    \ model\n                                      for implementers\n   Information\
    \ Models and Data Models\n                                 Figure 1\n   Protocol\
    \ designers may decide an information model or data model\n   would be appropriate\
    \ for managing the new protocol or protocol\n   extensions.\n   \"On the Difference\
    \ between Information Models and Data Models\"\n   [RFC3444] can be helpful in\
    \ determining what information to consider\n   regarding information models (IMs),\
    \ as compared to data models (DMs).\n   Information models should come from the\
    \ protocol WGs and include\n   lists of events, counters, and configuration parameters\
    \ that are\n   relevant.  There are a number of information models contained in\n\
    \   protocol WG RFCs.  Some examples:\n   o  [RFC3060] - Policy Core Information\
    \ Model version 1\n   o  [RFC3290] - An Informal Management Model for Diffserv\
    \ Routers\n   o  [RFC3460] - Policy Core Information Model Extensions\n   o  [RFC3585]\
    \ - IPsec Configuration Policy Information Model\n   o  [RFC3644] - Policy Quality\
    \ of Service Information Model\n   o  [RFC3670] - Information Model for Describing\
    \ Network Device QoS\n      Datapath Mechanisms\n   o  [RFC3805] - Printer MIB\
    \ v2 (contains both an IM and a DM)\n   Management protocol standards and management\
    \ data model standards\n   often contain compliance clauses to ensure interoperability.\n\
    \   Manageability considerations should include discussion of which level\n  \
    \ of compliance is expected to be supported for interoperability.\n"
- title: 3.2.  Management Information
  contents:
  - "3.2.  Management Information\n   Languages used to describe an information model\
    \ can influence the\n   nature of the model.  Using a particular data-modeling\
    \ language, such\n   as the SMIv2, influences the model to use certain types of\n\
    \   structures, such as two-dimensional tables.  This document recommends\n  \
    \ using English text (the official language for IETF specifications) to\n   describe\
    \ an information model.  A sample data model could be\n   developed to demonstrate\
    \ the information model.\n   A management information model should include a discussion\
    \ of what is\n   manageable, which aspects of the protocol need to be configured,\
    \ what\n   types of operations are allowed, what protocol-specific events might\n\
    \   occur, which events can be counted, and for which events an operator\n   should\
    \ be notified.\n   Operators find it important to be able to make a clear distinction\n\
    \   between configuration data, operational state, and statistics.  They\n   need\
    \ to determine which parameters were administratively configured\n   and which\
    \ parameters have changed since configuration as the result\n   of mechanisms\
    \ such as routing protocols or network management\n   protocols.  It is important\
    \ to be able to separately fetch current\n   configuration information, initial\
    \ configuration information,\n   operational state information, and statistics\
    \ from devices; to be\n   able to compare current state to initial state; and\
    \ to compare\n   information between devices.  So when deciding what information\n\
    \   should exist, do not conflate multiple information elements into a\n   single\
    \ element.\n   What is typically difficult to work through are relationships between\n\
    \   abstract objects.  Ideally, an information model would describe the\n   relationships\
    \ between the objects and concepts in the information\n   model.\n   Is there\
    \ always just one instance of this object or can there be\n   multiple instances?\
    \  Does this object relate to exactly one other\n   object or may it relate to\
    \ multiple?  When is it possible to change a\n   relationship?\n   Do objects\
    \ (such as rows in tables) share fate?  For example, if a\n   row in table A must\
    \ exist before a related row in table B can be\n   created, what happens to the\
    \ row in table B if the related row in\n   table A is deleted?  Does the existence\
    \ of relationships between\n   objects have an impact on fate sharing?\n"
- title: 3.2.1.  Information Model Design
  contents:
  - "3.2.1.  Information Model Design\n   This document recommends keeping the information\
    \ model as simple as\n   possible by applying the following criteria:\n   1. \
    \ Start with a small set of essential objects and add only as\n       further\
    \ objects are needed.\n   2.  Require that objects be essential for management.\n\
    \   3.  Consider evidence of current use and/or utility.\n   4.  Limit the total\
    \ number of objects.\n   5.  Exclude objects that are simply derivable from others\
    \ in this or\n       other information models.\n   6.  Avoid causing critical\
    \ sections to be heavily instrumented.  A\n       guideline is one counter per\
    \ critical section per layer.\n"
- title: 3.3.  Fault Management
  contents:
  - "3.3.  Fault Management\n   The protocol designer should document the basic faults\
    \ and health\n   indicators that need to be instrumented for the new protocol,\
    \ as well\n   as the alarms and events that must be propagated to management\n\
    \   applications or exposed through a data model.\n   The protocol designer should\
    \ consider how fault information will be\n   propagated.  Will it be done using\
    \ asynchronous notifications or\n   polling of health indicators?\n   If notifications\
    \ are used to alert operators to certain conditions,\n   then the protocol designer\
    \ should discuss mechanisms to throttle\n   notifications to prevent congestion\
    \ and duplications of event\n   notifications.  Will there be a hierarchy of faults,\
    \ and will the\n   fault reporting be done by each fault in the hierarchy, or\
    \ will only\n   the lowest fault be reported and the higher levels be suppressed?\n\
    \   Should there be aggregated status indicators based on concatenation\n   of\
    \ propagated faults from a given domain or device?\n   SNMP notifications and\
    \ syslog messages can alert an operator when an\n   aspect of the new protocol\
    \ fails or encounters an error or failure\n   condition, and SNMP is frequently\
    \ used as a heartbeat monitor.\n   Should the event reporting provide guaranteed\
    \ accurate delivery of\n   the event information within a given (high) margin\
    \ of confidence?\n   Can we poll the latest events in the box?\n"
- title: 3.3.1.  Liveness Detection and Monitoring
  contents:
  - "3.3.1.  Liveness Detection and Monitoring\n   Protocol designers should always\
    \ build in basic testing features\n   (e.g., ICMP echo, UDP/TCP echo service,\
    \ NULL RPCs (remote procedure\n   calls)) that can be used to test for liveness,\
    \ with an option to\n   enable and disable them.\n   Mechanisms for monitoring\
    \ the liveness of the protocol and for\n   detecting faults in protocol connectivity\
    \ are usually built into\n   protocols.  In some cases, mechanisms already exist\
    \ within other\n   protocols responsible for maintaining lower-layer connectivity\
    \ (e.g.,\n   ICMP echo), but often new procedures are required to detect failures\n\
    \   and to report rapidly, allowing remedial action to be taken.\n   These liveness\
    \ monitoring mechanisms do not typically require\n   additional management capabilities.\
    \  However, when a system detects a\n   fault, there is often a requirement to\
    \ coordinate recovery action\n   through management applications or at least to\
    \ record the fact in an\n   event log.\n"
- title: 3.3.2.  Fault Determination
  contents:
  - "3.3.2.  Fault Determination\n   It can be helpful to describe how faults can\
    \ be pinpointed using\n   management information.  For example, counters might\
    \ record instances\n   of error conditions.  Some faults might be able to be pinpointed\
    \ by\n   comparing the outputs of one device and the inputs of another device,\n\
    \   looking for anomalies.  Protocol designers should consider what\n   counters\
    \ should count.  If a single counter provided by vendor A\n   counts three types\
    \ of error conditions, while the corresponding\n   counter provided by vendor\
    \ B counts seven types of error conditions,\n   these counters cannot be compared\
    \ effectively -- they are not\n   interoperable counters.\n   How do you distinguish\
    \ between faulty messages and good messages?\n   Would some threshold-based mechanisms,\
    \ such as Remote Monitoring\n   (RMON) events/alarms or the EVENT-MIB, be usable\
    \ to help determine\n   error conditions?  Are SNMP notifications for all events\
    \ needed, or\n   are there some \"standard\" notifications that could be used?\
    \  Or can\n   relevant counters be polled as needed?\n"
- title: 3.3.3.  Root Cause Analysis
  contents:
  - "3.3.3.  Root Cause Analysis\n   Root cause analysis is about working out where\
    \ in the network the\n   fault is.  For example, if end-to-end data delivery is\
    \ failing\n   (reported by a notification), root cause analysis can help find\
    \ the\n   failed link or node in the end-to-end path.\n"
- title: 3.3.4.  Fault Isolation
  contents:
  - "3.3.4.  Fault Isolation\n   It might be useful to isolate or quarantine faults,\
    \ such as isolating\n   a device that emits malformed messages that are necessary\
    \ to\n   coordinate connections properly.  This might be able to be done by\n\
    \   configuring next-hop devices to drop the faulty messages to prevent\n   them\
    \ from entering the rest of the network.\n"
- title: 3.4.  Configuration Management
  contents:
  - "3.4.  Configuration Management\n   A protocol designer should document the basic\
    \ configuration\n   parameters that need to be instrumented for a new protocol,\
    \ as well\n   as default values and modes of operation.\n   What information should\
    \ be maintained across reboots of the device,\n   or restarts of the management\
    \ system?\n   \"Requirements for Configuration Management of IP-based Networks\"\
    \n   [RFC3139] discusses requirements for configuration management,\n   including\
    \ discussion of different levels of management, high-level\n   policies, network-wide\
    \ configuration data, and device-local\n   configuration.  Network configuration\
    \ is not just multi-device push\n   or pull.  It is knowing that the configurations\
    \ being pushed are\n   semantically compatible.  Is the circuit between them configured\n\
    \   compatibly on both ends?  Is the IS-IS metric the same? ...  Now\n   answer\
    \ those questions for 1,000 devices.\n   A number of efforts have existed in the\
    \ IETF to develop policy-based\n   configuration management.  \"Terminology for\
    \ Policy-Based Management\"\n   [RFC3198] was written to standardize the terminology\
    \ across these\n   efforts.\n   Implementations should not arbitrarily modify\
    \ configuration data.  In\n   some cases (such as access control lists (ACLs)),\
    \ the order of data\n   items is significant and comprises part of the configured\
    \ data.  If a\n   protocol designer defines mechanisms for configuration, it would\
    \ be\n   desirable to standardize the order of elements for consistency of\n \
    \  configuration and of reporting across vendors and across releases\n   from\
    \ vendors.\n   There are two parts to this:\n   1.  A Network Management System\
    \ (NMS) could optimize ACLs for\n       performance reasons.\n   2.  Unless the\
    \ device/NMS systems has correct rules / a lot of\n       experience, reordering\
    \ ACLs can lead to a huge security issue.\n   Network-wide configurations may\
    \ be stored in central master databases\n   and transformed into formats that\
    \ can be pushed to devices, either by\n   generating sequences of CLI commands\
    \ or complete configuration files\n   that are pushed to devices.  There is no\
    \ common database schema for\n   network configuration, although the models used\
    \ by various operators\n   are probably very similar.  Many operators consider\
    \ it desirable to\n   extract, document, and standardize the common parts of these\
    \ network-\n   wide configuration database schemas.  A protocol designer should\n\
    \   consider how to standardize the common parts of configuring the new\n   protocol,\
    \ while recognizing that vendors may also have proprietary\n   aspects of their\
    \ configurations.\n   It is important to enable operators to concentrate on the\n\
    \   configuration of the network as a whole, rather than individual\n   devices.\
    \  Support for configuration transactions across a number of\n   devices could\
    \ significantly simplify network configuration\n   management.  The ability to\
    \ distribute configurations to multiple\n   devices, or to modify candidate configurations\
    \ on multiple devices,\n   and then activate them in a near-simultaneous manner\
    \ might help.\n   Protocol designers can consider how it would make sense for\
    \ their\n   protocol to be configured across multiple devices.  Configuration\n\
    \   templates might also be helpful.\n   Consensus of the 2002 IAB Workshop [RFC3535]\
    \ was that textual\n   configuration files should be able to contain international\n\
    \   characters.  Human-readable strings should utilize UTF-8, and\n   protocol\
    \ elements should be in case-insensitive ASCII.\n   A mechanism to dump and restore\
    \ configurations is a primitive\n   operation needed by operators.  Standards\
    \ for pulling and pushing\n   configurations from/to devices are desirable.\n\
    \   Given configuration A and configuration B, it should be possible to\n   generate\
    \ the operations necessary to get from A to B with minimal\n   state changes and\
    \ effects on network and systems.  It is important to\n   minimize the impact\
    \ caused by configuration changes.\n   A protocol designer should consider the\
    \ configurable items that exist\n   for the control of function via the protocol\
    \ elements described in\n   the protocol specification.  For example, sometimes\
    \ the protocol\n   requires that timers can be configured by the operator to ensure\n\
    \   specific policy-based behavior by the implementation.  These timers\n   should\
    \ have default values suggested in the protocol specification\n   and may not\
    \ need to be otherwise configurable.\n"
- title: 3.4.1.  Verifying Correct Operation
  contents:
  - "3.4.1.  Verifying Correct Operation\n   An important function that should be\
    \ provided is guidance on how to\n   verify the correct operation of a protocol.\
    \  A protocol designer\n   could suggest techniques for testing the impact of\
    \ the protocol on\n   the network before it is deployed as well as techniques\
    \ for testing\n   the effect that the protocol has had on the network after being\n\
    \   deployed.\n   Protocol designers should consider how to test the correct end-to-end\n\
    \   operation of the service or network, how to verify the correct\n   functioning\
    \ of the protocol, and whether that is verified by testing\n   the service function\
    \ and/or by testing the forwarding function of\n   each network element.  This\
    \ may be achieved through status and\n   statistical information gathered from\
    \ devices.\n"
- title: 3.5.  Accounting Management
  contents:
  - "3.5.  Accounting Management\n   A protocol designer should consider whether it\
    \ would be appropriate\n   to collect usage information related to this protocol\
    \ and, if so,\n   what usage information would be appropriate to collect.\n  \
    \ \"Introduction to Accounting Management\" [RFC2975] discusses a number\n   of\
    \ factors relevant to monitoring usage of protocols for purposes of\n   capacity\
    \ and trend analysis, cost allocation, auditing, and billing.\n   The document\
    \ also discusses how some existing protocols can be used\n   for these purposes.\
    \  These factors should be considered when\n   designing a protocol whose usage\
    \ might need to be monitored or when\n   recommending a protocol to do usage accounting.\n"
- title: 3.6.  Performance Management
  contents:
  - "3.6.  Performance Management\n   From a manageability point of view, it is important\
    \ to determine how\n   well a network deploying the protocol or technology defined\
    \ in the\n   document is doing.  In order to do this, the network operators need\n\
    \   to consider information that would be useful to determine the\n   performance\
    \ characteristics of a deployed system using the target\n   protocol.\n   The\
    \ IETF, via the Benchmarking Methodology WG (BMWG), has defined\n   recommendations\
    \ for the measurement of the performance\n   characteristics of various internetworking\
    \ technologies in a\n   laboratory environment, including the systems or services\
    \ that are\n   built from these technologies.  Each benchmarking recommendation\n\
    \   describes the class of equipment, system, or service being addressed;\n  \
    \ discusses the performance characteristics that are pertinent to that\n   class;\
    \ clearly identifies a set of metrics that aid in the\n   description of those\
    \ characteristics; specifies the methodologies\n   required to collect said metrics;\
    \ and lastly, presents the\n   requirements for the common, unambiguous reporting\
    \ of benchmarking\n   results.  Search for \"benchmark\" in the RFC search tool.\n\
    \   Performance metrics may be useful in multiple environments and for\n   different\
    \ protocols.  The IETF, via the IP Performance Monitoring\n   (IPPM) WG, has developed\
    \ a set of standard metrics that can be\n   applied to the quality, performance,\
    \ and reliability of Internet data\n   delivery services.  These metrics are designed\
    \ such that they can be\n   performed by network operators, end users, or independent\
    \ testing\n   groups.  The existing metrics might be applicable to the new\n \
    \  protocol.  Search for \"metric\" in the RFC search tool.  In some\n   cases,\
    \ new metrics need to be defined.  It would be useful if the\n   protocol documentation\
    \ identified the need for such new metrics.  For\n   performance monitoring, it\
    \ is often important to report the time\n   spent in a state, rather than reporting\
    \ the current state.  Snapshots\n   are of less value for performance monitoring.\n\
    \   There are several parts to performance management to be considered:\n   protocol\
    \ monitoring, device monitoring (the impact of the new\n   protocol / service\
    \ activation on the device), network monitoring, and\n   service monitoring (the\
    \ impact of service activation on the network).\n"
- title: 3.6.1.  Monitoring the Protocol
  contents:
  - "3.6.1.  Monitoring the Protocol\n   Certain properties of protocols are useful\
    \ to monitor.  The number of\n   protocol packets received, the number of packets\
    \ sent, and the number\n   of packets dropped are usually very helpful to operators.\n\
    \   Packet drops should be reflected in counter variable(s) somewhere\n   that\
    \ can be inspected -- both from the security point of view and\n   from the troubleshooting\
    \ point of view.\n   Counter definitions should be unambiguous about what is included\
    \ in\n   the count and what is not included in the count.\n   Consider the expected\
    \ behaviors for counters -- what is a reasonable\n   maximum value for expected\
    \ usage?  Should they stop counting at the\n   maximum value and retain the maximum\
    \ value, or should they rollover?\n   How can users determine if a rollover has\
    \ occurred, and how can users\n   determine if more than one rollover has occurred?\n\
    \   Consider whether multiple management applications will share a\n   counter;\
    \ if so, then no one management application should be allowed\n   to reset the\
    \ value to zero since this will impact other applications.\n   Could events, such\
    \ as hot-swapping a blade in a chassis, cause\n   discontinuities in counter?\
    \  Does this make any difference in\n   evaluating the performance of a protocol?\n\
    \   The protocol document should make clear the limitations implicit\n   within\
    \ the protocol and the behavior when limits are exceeded.  This\n   should be\
    \ considered in a data-modeling-independent manner -- what\n   makes managed-protocol\
    \ sense, not what makes management-protocol-\n   sense.  If constraints are not\
    \ managed-protocol-dependent, then it\n   should be left for the management-protocol\
    \ data modelers to decide.\n   For example, VLAN identifiers have a range of 1..4095\
    \ because of the\n   VLAN standards.  A MIB implementing a VLAN table should be\
    \ able to\n   support 4096 entries because the content being modeled requires\
    \ it.\n"
- title: 3.6.2.  Monitoring the Device
  contents:
  - "3.6.2.  Monitoring the Device\n   Consider whether device performance will be\
    \ affected by the number of\n   protocol entities being instantiated on the device.\
    \  Designers of an\n   information model should include information, accessible\
    \ at runtime,\n   about the maximum number of instances an implementation can\
    \ support,\n   the current number of instances, and the expected behavior when\
    \ the\n   current instances exceed the capacity of the implementation or the\n\
    \   capacity of the device.\n   Designers of an information model should model\
    \ information,\n   accessible at runtime, about the maximum number of protocol\
    \ entity\n   instances an implementation can support on a device, the current\n\
    \   number of instances, and the expected behavior when the current\n   instances\
    \ exceed the capacity of the device.\n"
- title: 3.6.3.  Monitoring the Network
  contents:
  - "3.6.3.  Monitoring the Network\n   Consider whether network performance will\
    \ be affected by the number\n   of protocol entities being deployed.\n   Consider\
    \ the capability of determining the operational activity, such\n   as the number\
    \ of messages in and the messages out, the number of\n   received messages rejected\
    \ due to format problems, and the expected\n   behaviors when a malformed message\
    \ is received.\n   What are the principal performance factors that need to be\
    \ looked at\n   when measuring the operational performance of the network built\
    \ using\n   the protocol?  Is it important to measure setup times?  End-to-end\n\
    \   connectivity?  Hop-to-hop connectivity?  Network throughput?\n"
- title: 3.6.4.  Monitoring the Service
  contents:
  - "3.6.4.  Monitoring the Service\n   What are the principal performance factors\
    \ that need to be looked at\n   when measuring the performance of a service using\
    \ the protocol?  Is\n   it important to measure application-specific throughput?\
    \  Client-\n   server associations?  End-to-end application quality?  Service\n\
    \   interruptions?  User experience?\n"
- title: 3.7.  Security Management
  contents:
  - "3.7.  Security Management\n   Protocol designers should consider how to monitor\
    \ and manage security\n   aspects and vulnerabilities of the new protocol.\n \
    \  There will be security considerations related to the new protocol.\n   To make\
    \ it possible for operators to be aware of security-related\n   events, it is\
    \ recommended that system logs should record events, such\n   as failed logins,\
    \ but the logs must be secured.\n   Should a system automatically notify operators\
    \ of every event\n   occurrence, or should an operator-defined threshold control\
    \ when a\n   notification is sent to an operator?\n   Should certain statistics\
    \ be collected about the operation of the new\n   protocol that might be useful\
    \ for detecting attacks, such as the\n   receipt of malformed messages, messages\
    \ out of order, or messages\n   with invalid timestamps?  If such statistics are\
    \ collected, is it\n   important to count them separately for each sender to help\
    \ identify\n   the source of attacks?\n   Manageability considerations that are\
    \ security-oriented might include\n   discussion of the security implications\
    \ when no monitoring is in\n   place, the regulatory implications of absence of\
    \ audit-trail or logs\n   in enterprises, exceeding the capacity of logs, and\
    \ security\n   exposures present in chosen/recommended management mechanisms.\n\
    \   Consider security threats that may be introduced by management\n   operations.\
    \  For example, Control and Provisioning of Wireless Access\n   Points (CAPWAP)\
    \ breaks the structure of monolithic Access Points\n   (APs) into Access Controllers\
    \ and Wireless Termination Points (WTPs).\n   By using a management interface,\
    \ internal information that was\n   previously not accessible is now exposed over\
    \ the network and to\n   management applications and may become a source of potential\
    \ security\n   threats.\n   The granularity of access control needed on management\
    \ interfaces\n   needs to match operational needs.  Typical requirements are a\
    \ role-\n   based access control model and the principle of least privilege,\n\
    \   where a user can be given only the minimum access necessary to\n   perform\
    \ a required task.\n   Some operators wish to do consistency checks of access\
    \ control lists\n   across devices.  Protocol designers should consider information\n\
    \   models to promote comparisons across devices and across vendors to\n   permit\
    \ checking the consistency of security configurations.\n   Protocol designers\
    \ should consider how to provide a secure transport,\n   authentication, identity,\
    \ and access control that integrates well\n   with existing key and credential\
    \ management infrastructure.  It is a\n   good idea to start with defining the\
    \ threat model for the protocol,\n   and from that deducing what is required.\n\
    \   Protocol designers should consider how access control lists are\n   maintained\
    \ and updated.\n   Standard SNMP notifications or syslog messages [RFC5424] might\n\
    \   already exist, or can be defined, to alert operators to the\n   conditions\
    \ identified in the security considerations for the new\n   protocol.  For example,\
    \ you can log all the commands entered by the\n   operator using syslog (giving\
    \ you some degree of audit trail), or you\n   can see who has logged on/off using\
    \ the Secure SHell Protocol (SSH)\n   and from where; failed SSH logins can be\
    \ logged using syslog, etc.\n   An analysis of existing counters might help operators\
    \ recognize the\n   conditions identified in the security considerations for the\
    \ new\n   protocol before they can impact the network.\n   Different management\
    \ protocols use different assumptions about\n   message security and data-access\
    \ controls.  A protocol designer that\n   recommends using different protocols\
    \ should consider how security\n   will be applied in a balanced manner across\
    \ multiple management\n   interfaces.  SNMP authority levels and policy are data-oriented,\n\
    \   while CLI authority levels and policy are usually command-oriented\n   (i.e.,\
    \ task-oriented).  Depending on the management function,\n   sometimes data-oriented\
    \ or task-oriented approaches make more sense.\n   Protocol designers should consider\
    \ both data-oriented and task-\n   oriented authority levels and policy.\n"
- title: 4.  Documentation Guidelines
  contents:
  - "4.  Documentation Guidelines\n   This document is focused on what a protocol\
    \ designer should think\n   about and how those considerations might be documented.\n\
    \   This document does not describe interoperability requirements but\n   rather\
    \ describes practices that are useful to follow when dealing\n   with manageability\
    \ aspects in IETF documents, so the capitalized\n   keywords from [RFC2119] do\
    \ not apply here.  Any occurrence of words\n   like 'must' or 'should' needs to\
    \ be interpreted only in the context\n   of their natural, English-language meaning.\n"
- title: 4.1.  Recommended Discussions
  contents:
  - "4.1.  Recommended Discussions\n   A Manageability Considerations section should\
    \ include discussion of\n   the management and operations topics raised in this\
    \ document, and\n   when one or more of these topics is not relevant, it would\
    \ be useful\n   to contain a simple statement explaining why the topic is not\n\
    \   relevant for the new protocol.  Of course, additional relevant topics\n  \
    \ should be included as well.\n   Existing protocols and data models can provide\
    \ the management\n   functions identified in the previous section.  Protocol designers\n\
    \   should consider how using existing protocols and data models might\n   impact\
    \ network operations.\n"
- title: 4.2.  Null Manageability Considerations Sections
  contents:
  - "4.2.  Null Manageability Considerations Sections\n   A protocol designer may\
    \ seriously consider the manageability\n   requirements of a new protocol and\
    \ determine that no management\n   functionality is needed by the new protocol.\
    \  It would be helpful to\n   those who may update or write extensions to the\
    \ protocol in the\n   future or to those deploying the new protocol to know the\
    \ thinking of\n   the working group regarding the manageability of the protocol\
    \ at the\n   time of its design.\n   If there are no new manageability or deployment\
    \ considerations, it is\n   recommended that a Manageability Considerations section\
    \ contain a\n   simple statement such as, \"There are no new manageability\n \
    \  requirements introduced by this document,\" and a brief explanation of\n  \
    \ why that is the case.  The presence of such a Manageability\n   Considerations\
    \ section would indicate to the reader that due\n   consideration has been given\
    \ to manageability and operations.\n   In the case where the new protocol is an\
    \ extension and the base\n   protocol discusses all the relevant operational and\
    \ manageability\n   considerations, it would be helpful to point out the considerations\n\
    \   section in the base document.\n"
- title: 4.3.  Placement of Operations and Manageability Considerations Sections
  contents:
  - "4.3.  Placement of Operations and Manageability Considerations Sections\n   If\
    \ a protocol designer develops a Manageability Considerations\n   section for\
    \ a new protocol, it is recommended that the section be\n   placed immediately\
    \ before the Security Considerations section.\n   Reviewers interested in such\
    \ sections could find it easily, and this\n   placement could simplify the development\
    \ of tools to detect the\n   presence of such a section.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document is informational and provides guidelines\
    \ for\n   considering manageability and operations.  It introduces no new\n  \
    \ security concerns.\n   The provision of a management portal to a network device\
    \ provides a\n   doorway through which an attack on the device may be launched.\n\
    \   Making the protocol under development be manageable through a\n   management\
    \ protocol creates a vulnerability to a new source of\n   attacks.  Only management\
    \ protocols with adequate security apparatus,\n   such as authentication, message\
    \ integrity checking, and\n   authorization, should be used.\n   A standard description\
    \ of the manageable knobs and whistles on a\n   protocol makes it easier for an\
    \ attacker to understand what they may\n   try to control and how to tweak it.\n\
    \   A well-designed protocol is usually more stable and secure.  A\n   protocol\
    \ that can be managed and inspected offers the operator a\n   better chance of\
    \ spotting and quarantining any attacks.  Conversely,\n   making a protocol easy\
    \ to inspect is a risk if the wrong person\n   inspects it.\n   If security events\
    \ cause logs and/or notifications/alerts, a\n   concerted attack might be able\
    \ to be mounted by causing an excess of\n   these events.  In other words, the\
    \ security-management mechanisms\n   could constitute a security vulnerability.\
    \  The management of\n   security aspects is important (see Section 3.7).\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document started from an earlier document edited\
    \ by Adrian\n   Farrel, which itself was based on work exploring the need for\n\
    \   Manageability Considerations sections in all Internet-Drafts produced\n  \
    \ within the Routing Area of the IETF.  That earlier work was produced\n   by\
    \ Avri Doria, Loa Andersson, and Adrian Farrel, with valuable\n   feedback provided\
    \ by Pekka Savola and Bert Wijnen.\n   Some of the discussion about designing\
    \ for manageability came from\n   private discussions between Dan Romascanu, Bert\
    \ Wijnen, Juergen\n   Schoenwaelder, Andy Bierman, and David Harrington.\n   Thanks\
    \ to reviewers who helped fashion this document, including\n   Harald Alvestrand,\
    \ Ron Bonica, Brian Carpenter, Benoit Claise, Adrian\n   Farrel, David Kessens,\
    \ Dan Romascanu, Pekka Savola, Juergen\n   Schoenwaelder, Bert Wijnen, Ralf Wolter,\
    \ and Lixia Zhang.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [RFC1034]  Mockapetris, P., \"Domain names - concepts\
    \ and facilities\",\n              STD 13, RFC 1034, November 1987.\n   [RFC1052]\
    \  Cerf, V., \"IAB recommendations for the development of\n              Internet\
    \ network management standards\", RFC 1052,\n              April 1988.\n   [RFC1958]\
    \  Carpenter, B., \"Architectural Principles of the Internet\",\n            \
    \  RFC 1958, June 1996.\n   [RFC2113]  Katz, D., \"IP Router Alert Option\", RFC\
    \ 2113,\n              February 1997.\n   [RFC2119]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC2205]  Braden, B., Zhang, L., Berson, S., Herzog,\
    \ S., and S.\n              Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version\
    \ 1\n              Functional Specification\", RFC 2205, September 1997.\n   [RFC2439]\
    \  Villamizar, C., Chandra, R., and R. Govindan, \"BGP Route\n              Flap\
    \ Damping\", RFC 2439, November 1998.\n   [RFC2578]  McCloghrie, K., Ed., Perkins,\
    \ D., Ed., and J.\n              Schoenwaelder, Ed., \"Structure of Management\
    \ Information\n              Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n\
    \   [RFC2711]  Partridge, C. and A. Jackson, \"IPv6 Router Alert Option\",\n \
    \             RFC 2711, October 1999.\n   [RFC2865]  Rigney, C., Willens, S.,\
    \ Rubens, A., and W. Simpson,\n              \"Remote Authentication Dial In User\
    \ Service (RADIUS)\",\n              RFC 2865, June 2000.\n   [RFC2975]  Aboba,\
    \ B., Arkko, J., and D. Harrington, \"Introduction to\n              Accounting\
    \ Management\", RFC 2975, October 2000.\n   [RFC3060]  Moore, B., Ellesson, E.,\
    \ Strassner, J., and A. Westerinen,\n              \"Policy Core Information Model\
    \ -- Version 1\n              Specification\", RFC 3060, February 2001.\n   [RFC3084]\
    \  Chan, K., Seligson, J., Durham, D., Gai, S., McCloghrie,\n              K.,\
    \ Herzog, S., Reichmeyer, F., Yavatkar, R., and A.\n              Smith, \"COPS\
    \ Usage for Policy Provisioning (COPS-PR)\",\n              RFC 3084, March 2001.\n\
    \   [RFC3139]  Sanchez, L., McCloghrie, K., and J. Saperia, \"Requirements\n \
    \             for Configuration Management of IP-based Networks\",\n         \
    \     RFC 3139, June 2001.\n   [RFC3198]  Westerinen, A., Schnizlein, J., Strassner,\
    \ J., Scherling,\n              M., Quinn, B., Herzog, S., Huynh, A., Carlson,\
    \ M., Perry,\n              J., and S. Waldbusser, \"Terminology for Policy-Based\n\
    \              Management\", RFC 3198, November 2001.\n   [RFC3290]  Bernet, Y.,\
    \ Blake, S., Grossman, D., and A. Smith, \"An\n              Informal Management\
    \ Model for Diffserv Routers\", RFC 3290,\n              May 2002.\n   [RFC3410]\
    \  Case, J., Mundy, R., Partain, D., and B. Stewart,\n              \"Introduction\
    \ and Applicability Statements for Internet-\n              Standard Management\
    \ Framework\", RFC 3410, December 2002.\n   [RFC3444]  Pras, A. and J. Schoenwaelder,\
    \ \"On the Difference between\n              Information Models and Data Models\"\
    , RFC 3444,\n              January 2003.\n   [RFC3460]  Moore, B., \"Policy Core\
    \ Information Model (PCIM)\n              Extensions\", RFC 3460, January 2003.\n\
    \   [RFC3535]  Schoenwaelder, J., \"Overview of the 2002 IAB Network\n       \
    \       Management Workshop\", RFC 3535, May 2003.\n   [RFC3585]  Jason, J., Rafalow,\
    \ L., and E. Vyncke, \"IPsec\n              Configuration Policy Information Model\"\
    , RFC 3585,\n              August 2003.\n   [RFC3588]  Calhoun, P., Loughney,\
    \ J., Guttman, E., Zorn, G., and J.\n              Arkko, \"Diameter Base Protocol\"\
    , RFC 3588, September 2003.\n   [RFC3644]  Snir, Y., Ramberg, Y., Strassner, J.,\
    \ Cohen, R., and B.\n              Moore, \"Policy Quality of Service (QoS) Information\n\
    \              Model\", RFC 3644, November 2003.\n   [RFC3670]  Moore, B., Durham,\
    \ D., Strassner, J., Westerinen, A., and\n              W. Weiss, \"Information\
    \ Model for Describing Network Device\n              QoS Datapath Mechanisms\"\
    , RFC 3670, January 2004.\n   [RFC3805]  Bergman, R., Lewis, H., and I. McDonald,\
    \ \"Printer MIB v2\",\n              RFC 3805, June 2004.\n   [RFC4741]  Enns,\
    \ R., \"NETCONF Configuration Protocol\", RFC 4741,\n              December 2006.\n\
    \   [RFC5101]  Claise, B., \"Specification of the IP Flow Information\n      \
    \        Export (IPFIX) Protocol for the Exchange of IP Traffic\n            \
    \  Flow Information\", RFC 5101, January 2008.\n   [RFC5321]  Klensin, J., \"\
    Simple Mail Transfer Protocol\", RFC 5321,\n              October 2008.\n   [RFC5424]\
    \  Gerhards, R., \"The Syslog Protocol\", RFC 5424, March 2009.\n   [W3C.REC-xmlschema-0-20010502]\n\
    \              Fallside, D., \"XML Schema Part 0: Primer\", World Wide Web\n \
    \             Consortium FirstEdition REC-xmlschema-0-20010502,\n            \
    \  May 2001,\n              <http://www.w3.org/TR/2001/REC-xmlschema-0-20010502>.\n"
- title: Appendix A.  Operations and Management Review Checklist
  contents:
  - "Appendix A.  Operations and Management Review Checklist\n   This appendix provides\
    \ a quick checklist of issues that protocol\n   designers should expect operations\
    \ and management expert reviewers to\n   look for when reviewing a document being\
    \ proposed for consideration\n   as a protocol standard.\n"
- title: A.1.  Operational Considerations
  contents:
  - "A.1.  Operational Considerations\n   1.  Has deployment been discussed?  See\
    \ Section 2.1.\n       *  Does the document include a description of how this\
    \ protocol\n          or technology is going to be deployed and managed?\n   \
    \    *  Is the proposed specification deployable?  If not, how could\n       \
    \   it be improved?\n       *  Does the solution scale well from the operational\
    \ and\n          management perspective?  Does the proposed approach have any\n\
    \          scaling issues that could affect usability for large-scale\n      \
    \    operation?\n       *  Are there any coexistence issues?\n   2.  Has installation\
    \ and initial setup been discussed?  See\n       Section 2.2.\n       *  Is the\
    \ solution sufficiently configurable?\n       *  Are configuration parameters\
    \ clearly identified?\n       *  Are configuration parameters normalized?\n  \
    \     *  Does each configuration parameter have a reasonable default\n       \
    \   value?\n       *  Will configuration be pushed to a device by a configuration\n\
    \          manager, or pulled by a device from a configuration server?\n     \
    \  *  How will the devices and managers find and authenticate each\n         \
    \ other?\n   3.  Has the migration path been discussed?  See Section 2.3.\n  \
    \     *  Are there any backward compatibility issues?\n   4.  Have the Requirements\
    \ on other protocols and functional\n       components been discussed?  See Section\
    \ 2.4.\n       *  What protocol operations are expected to be performed relative\n\
    \          to the new protocol or technology, and what protocols and data\n  \
    \        models are expected to be in place or recommended to ensure\n       \
    \   for interoperable management?\n   5.  Has the impact on network operation\
    \ been discussed?  See\n       Section 2.5.\n       *  Will the new protocol significantly\
    \ increase traffic load on\n          existing networks?\n       *  Will the proposed\
    \ management for the new protocol\n          significantly increase traffic load\
    \ on existing networks?\n       *  How will the new protocol impact the behavior\
    \ of other\n          protocols in the network?  Will it impact performance (e.g.,\n\
    \          jitter) of certain types of applications running in the same\n    \
    \      network?\n       *  Does the new protocol need supporting services (e.g.,\
    \ DNS or\n          Authentication, Authorization, and Accounting - AAA) added\
    \ to\n          an existing network?\n   6.  Have suggestions for verifying correct\
    \ operation been discussed?\n       See Section 2.6.\n       *  How can one test\
    \ end-to-end connectivity and throughput?\n       *  Which metrics are of interest?\n\
    \       *  Will testing have an impact on the protocol or the network?\n   7.\
    \  Has management interoperability been discussed?  See Section 3.1.\n       *\
    \  Is a standard protocol needed for interoperable management?\n       *  Is a\
    \ standard information or data model needed to make\n          properties comparable\
    \ across devices from different vendors?\n   8.  Are there fault or threshold\
    \ conditions that should be reported?\n       See Section 3.3.\n       *  Does\
    \ specific management information have time utility?\n       *  Should the information\
    \ be reported by notifications?  Polling?\n          Event-driven polling?\n \
    \      *  Is notification throttling discussed?\n       *  Is there support for\
    \ saving state that could be used for root\n          cause analysis?\n   9. \
    \ Is configuration discussed?  See Section 3.4.\n       *  Are configuration defaults\
    \ and default modes of operation\n          considered?\n       *  Is there discussion\
    \ of what information should be preserved\n          across reboots of the device\
    \ or the management system?  Can\n          devices realistically preserve this\
    \ information through hard\n          reboots where physical configuration might\
    \ change (e.g., cards\n          might be swapped while a chassis is powered down)?\n"
- title: A.2.  Management Considerations
  contents:
  - "A.2.  Management Considerations\n   Do you anticipate any manageability issues\
    \ with the specification?\n   1.  Is management interoperability discussed?  See\
    \ Section 3.1.\n       *  Will it use centralized or distributed management?\n\
    \       *  Will it require remote and/or local management applications?\n    \
    \   *  Are textual or graphical user interfaces required?\n       *  Is textual\
    \ or binary format for management information\n          preferred?\n   2.  Is\
    \ management information discussed?  See Section 3.2.\n       *  What is the minimal\
    \ set of management (configuration, faults,\n          performance monitoring)\
    \ objects that need to be instrumented\n          in order to manage the new protocol?\n\
    \   3.  Is fault management discussed?  See Section 3.3.\n       *  Is Liveness\
    \ Detection and Monitoring discussed?\n       *  Does the solution have failure\
    \ modes that are difficult to\n          diagnose or correct?  Are faults and\
    \ alarms reported and\n          logged?\n   4.  Is configuration management discussed?\
    \  See Section 3.4.\n       *  Is protocol state information exposed to the user?\
    \  How?  Are\n          significant state transitions logged?\n   5.  Is accounting\
    \ management discussed?  See Section 3.5.\n   6.  Is performance management discussed?\
    \  See Section 3.6.\n       *  Does the protocol have an impact on network traffic\
    \ and\n          network devices?  Can performance be measured?\n       *  Is\
    \ protocol performance information exposed to the user?\n   7.  Is security management\
    \ discussed?  See Section 3.7.\n       *  Does the specification discuss how to\
    \ manage aspects of\n          security, such as access controls, managing key\
    \ distribution,\n          etc.\n"
- title: A.3.  Documentation
  contents:
  - "A.3.  Documentation\n   Is an operational considerations and/or manageability\
    \ section part of\n   the document?\n   Does the proposed protocol have a significant\
    \ operational impact on\n   the Internet?\n   Is there proof of implementation\
    \ and/or operational experience?\n"
- title: Author's Address
  contents:
  - "Author's Address\n   David Harrington\n   HuaweiSymantec USA\n   20245 Stevens\
    \ Creek Blvd\n   Cupertino, CA  95014\n   USA\n   Phone: +1 603 436 8634\n   EMail:\
    \ ietfdbh@comcast.net\n"
