- title: __initial_text__
  contents:
  - '                       Telnet Authentication: SPX

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  Discussion and suggestions for improvement are requested.\n  \
    \ Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: 1. Command Names and Codes
  contents:
  - "1. Command Names and Codes\n   Authentication Types\n      SPX          3\n \
    \  Suboption Commands\n      AUTH         0\n      REJECT       1\n      ACCEPT\
    \       2\n"
- title: 2.  Command Meanings
  contents:
  - "2.  Command Meanings\n   IAC SB AUTHENTICATION IS <authentication-type-pair>\
    \ AUTH\n   <SPX authentication token> IAC SE\n      This is used to pass the SPX\
    \ authentication token to the remote\n      side of the connection.  (A document\
    \ which describes the\n      authentication token syntax is forthcoming.)  The\
    \ first octet of\n      the <authentication-type-pair> value is SPX.  The second\
    \ octet is\n      a modifier to the SPX authentication type.\n   IAC SB AUTHENTICATION\
    \ REPLY <authentication-type-pair> ACCEPT\n   <mutual response> IAC SE\n     \
    \ This command indicates that the authentication was successful.\n      After\
    \ an SPX authentication exchange, both sides have securely\n      established\
    \ a random 8-byte key to be used as the default key for\n      the ENCRYPTION\
    \ option.  If the AUTH_HOW_MUTUAL bit is set in the\n      second octet of the\
    \ authentication-type-pair, the sender includes\n      the mutual response bytes.\
    \  The receiver of the ACCEPT command\n      compares the \"mutual response\"\
    \ with its expected mutual response.\n      (A document which describes the mutual\
    \ response syntax is forth\n      coming.)  If the AUTH_HOW_ONE_WAY bit is set\
    \ in the second octet\n      of the authentication-type-pair, the sender includes\
    \ zero bytes of\n      mutual response.\n   IAC SB AUTHENTICATION REPLY <authentication-type-pair>\
    \ REJECT\n   <optional reason for rejection> IAC SE\n      This command indicates\
    \ that the authentication was not successful,\n      and if there is any more\
    \ data in the sub-option, it is an ASCII\n      text message of the reason for\
    \ the rejection.\n"
- title: 3.  Implementation Rules
  contents:
  - "3.  Implementation Rules\n   Every command after the first AUTHENTICATION IS\
    \ must carry the same\n   set of modifiers (e.g., CLIENT|MUTUAL) for subsequent\
    \ AUTHENTICATION\n   IS and AUTHENTICATION REPLY commands.\n   If the second octet\
    \ of the authentication-type-pair has the AUTH_WHO\n   bit set to AUTH_WHO_CLIENT,\
    \ then the client sends the initial AUTH\n   command, and the server responds\
    \ with either ACCEPT or REJECT.\n   If the second octet of the authentication-type-pair\
    \ has the AUTH_WHO\n   bit set to AUTH_WHO_SERVER, then the server sends the initial\
    \ AUTH\n   command, and the client responds with either ACCEPT or REJECT.\n"
- title: 4.  Examples
  contents:
  - "4.  Examples\n   User \"joe\" may wish to log in as user \"pete\" on machine\
    \ \"foo\".  If\n   \"pete\" has set things up on \"foo\" to allow \"joe\" access\
    \ to his\n   account, then the client would send IAC SB AUTHENTICATION NAME \"\
    pete\"\n   IAC SE IAC SB AUTHENTICATION IS SPX AUTH <joe's spx authentication\n\
    \   token> IAC SE.  The server would then authenticate the user as \"joe\"\n \
    \  from the token information, and the server would send back either\n   ACCEPT\
    \ or REJECT.  If mutual authentication is being used, the server\n   would include\
    \ in the ACCEPT message, a mutual response.  The\n   authorization check to see\
    \ if \"pete\" is allowing \"joe\" to use his\n   account is made after the authentication\
    \ exchange is complete.\n   Therefore, it is possible for the client to receive\
    \ an ACCEPT\n   response (based on the authentication token), but for joe to be\n\
    \   denied access to log in to pete's account.\n       Client                \
    \           Server\n                                        IAC DO AUTHENTICATION\n\
    \       IAC WILL AUTHENTICATION\n       [ The server is now free to request authentication\
    \ information.\n         ]\n                                        IAC SB AUTHENTICATION\
    \ SEND SPX\n                                        CLIENT|MUTUAL SPX CLIENT|ONE_WAY\n\
    \                                        IAC SE\n       [ The server has requested\
    \ mutual SPX authentication.  If mutual\n         authentication is not supported,\
    \ then the server is willing to\n         do one-way SPX authentication.  ]\n\
    \       [ The client will now respond with the name of the user that it\n    \
    \     wants to log in as, and the SPX authentication token.  ]\n       IAC SB\
    \ AUTHENTICATION NAME\n       \"pete\" IAC SE\n       IAC SB AUTHENTICATION IS\
    \ SPX\n       CLIENT|MUTUAL AUTH <spx\n       authentication token\n       information>\
    \ IAC SE\n       [ The server responds with an ACCEPT command to state that the\n\
    \         authentication was successful.  ]\n       [ If AUTH_HOW_MUTUAL, the\
    \ server responds with the mutual\n         response so the client can verify\
    \ that it is really talking to\n         the right server.  ]\n       [ If AUTH_HOW_ONE_WAY,\
    \ the server responds with a NULL mutual\n         response, since the client\
    \ is willing to trust the server\n         already.  ]\n                     \
    \                   IAC SB AUTHENTICATION REPLY SPX\n                        \
    \                CLIENT|MUTUAL ACCEPT <mutual\n                              \
    \          response> IAC SE\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   The ability to negotiate a common authentication\
    \ mechanism between\n   client and server is a feature of the authentication option\
    \ that\n   should be used with caution.  When the negotiation is performed, no\n\
    \   authentication has yet occurred.  Therefore, each system has no way\n   of\
    \ knowing whether or not it is talking to the system it intends.  An\n   intruder\
    \ could attempt to negotiate the use of an authentication\n   system which is\
    \ either weak, or already compromised by the intruder.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Kannan Alagappan\n   Digital Equipment Corporation\n   550\
    \ King Street, LKG1-2/A19\n   Littleton, MA 01460\n   EMail: kannan@sejour.lkg.dec.com\n\
    \   Mailing List: telnet-ietf@CRAY.COM\n   The working group can be contacted\
    \ via the current chair:\n   Steve Alexander\n   INTERACTIVE Systems Corporation\n\
    \   1901 North Naper Boulevard\n   Naperville, IL 60563-8895\n   Phone: (708)\
    \ 505-9100 x256\n   EMail: stevea@isc.com\n"
