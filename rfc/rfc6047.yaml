- contents:
  - '        iCalendar Message-Based Interoperability Protocol (iMIP)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document, \"iCalendar Message-Based Interoperability Protocol\n
    \  (iMIP)\", specifies a binding from the iCalendar Transport-independent\n   Interoperability
    Protocol (iTIP) to Internet email-based transports.\n   Calendaring entries defined
    by the iCalendar Object Model (iCalendar)\n   are wrapped using constructs from
    RFC 5322 and MIME (RFC 2045, RFC\n   2046, RFC 2047, and RFC 2049), and then transported
    over SMTP.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6047.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Related Memos ..............................................3\n      1.2.
    Formatting Conventions .....................................3\n      1.3. Terminology
    ................................................4\n   2. MIME Message Format Binding
    .....................................4\n      2.1. MIME Media Type ............................................4\n
    \     2.2. Security ...................................................5\n           2.2.1.
    Authorization .......................................5\n           2.2.2. Authentication
    ......................................5\n           2.2.3. Confidentiality .....................................5\n
    \     2.3. Email Addresses ............................................6\n      2.4.
    Content-Type Header Field ..................................6\n      2.5. Content-Transfer-Encoding
    Header Field .....................7\n      2.6. Content-Disposition Header Field
    ...........................8\n   3. Security Considerations .........................................8\n
    \  4. Examples .......................................................11\n      4.1.
    Single Component with an ATTACH Property ..................11\n      4.2. Using
    multipart/alternative for Low-Fidelity Clients ......11\n      4.3. Single Component
    with an ATTACH Property and\n           Inline Attachment .........................................12\n
    \     4.4. Multiple Similar Components ...............................14\n      4.5.
    Multiple Mixed Components .................................15\n      4.6. Detailed
    Components with an ATTACH Property ...............16\n   5. Recommended Practices
    ..........................................18\n      5.1. Use of Content and Message
    IDs ............................18\n   6. IANA Considerations ............................................18\n
    \  7. References .....................................................19\n      7.1.
    Normative References ......................................19\n      7.2. Informative
    References ....................................20\n   Appendix A. Changes since
    RFC 2447 ................................21\n   Appendix B. Acknowledgements ......................................22\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document provides the transport-specific information
    (\"binding\")\n   necessary to convey iCalendar Transport-independent Interoperability\n
    \  Protocol (iTIP) [iTIP] over Internet email (using MIME) as defined in\n   [RFC5322]
    and [RFC2045].  Therefore, this document defines the\n   iCalendar Message-Based
    Interoperability Protocol (iMIP).\n"
  - contents:
    - "1.1.  Related Memos\n   Implementers will need to be familiar with several
      other memos that,\n   along with this memo, form a framework for Internet calendaring
      and\n   scheduling standards.\n   This document specifies an Internet email
      binding for iTIP.\n   [iCAL] specifies a core specification of objects, data
      types,\n   properties, and property parameters.\n   [iTIP] specifies an interoperability
      protocol for scheduling between\n   different implementations.\n   This memo
      does not attempt to repeat the specification of concepts or\n   definitions
      from these other memos.  Where possible, references are\n   made to the memo
      that provides for the specification of these\n   concepts or definitions.\n"
    title: 1.1.  Related Memos
  - contents:
    - "1.2.  Formatting Conventions\n   The mechanisms defined in this memo are defined
      in prose.  In order\n   to refer to elements of the calendaring and scheduling
      model, core\n   object, or interoperability protocol defined in [iCAL] and [iTIP],\n
      \  some formatting conventions have been used.\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in RFC 2119 [RFC2119].\n   Calendaring and scheduling roles are
      referred to in quoted strings of\n   text with the first character of each word
      in uppercase.  For\n   example, \"Organizer\" refers to a role of a \"Calendar
      User\" within the\n   scheduling protocol defined by [iTIP].\n   Calendar components
      defined by [iCAL] are referred to with\n   capitalized, quoted strings of text.
      \ All calendar components start\n   with the letter \"V\".  For example, \"VEVENT\"
      refers to the event\n   calendar component, \"VTODO\" refers to the to-do calendar
      component,\n   and \"VJOURNAL\" refers to the daily journal calendar component.\n
      \  Scheduling methods defined by [iTIP] are referred to with\n   capitalized,
      quoted strings of text.  For example, \"REQUEST\" refers\n   to the method for
      requesting a scheduling calendar component be\n   created or modified; \"REPLY\"
      refers to the method a recipient of a\n   request uses to update their status
      with the \"Organizer\" of the\n   calendar component.\n   Properties defined
      by [iCAL] are referred to with capitalized, quoted\n   strings of text, followed
      by the word \"property\".  For example,\n   \"ATTENDEE\" property refers to
      the iCalendar property used to convey\n   the calendar address of a \"Calendar
      User\".\n   Property parameters defined by [iCAL] are referred to with lowercase,\n
      \  quoted strings of text, followed by the word \"parameter\".  For\n   example,
      \"value\" parameter refers to the iCalendar property parameter\n   used to override
      the default data type for a property value.\n"
    title: 1.2.  Formatting Conventions
  - contents:
    - "1.3.  Terminology\n   The email terms used in this memo are defined in [RFC5322]
      and\n   [RFC2045].  The calendaring and scheduling terms used in this memo\n
      \  are defined in [iCAL] and [iTIP].\n"
    title: 1.3.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  MIME Message Format Binding\n   This section defines the message binding
    to the MIME electronic mail\n   transport.\n   The sections below refer to the
    \"originator\" and the \"recipient\" of\n   an iMIP message.  In the case of a
    \"request\" method, the originator\n   is the \"Organizer\" and the recipient
    is an \"Attendee\" of the event.\n   In the case of a \"response\" method, the
    originator is an \"Attendee\"\n   and the recipient is the \"Organizer\" of the
    event.\n   The [RFC5322] \"Reply-To\" header field typically contains the email\n
    \  address of the originator of the scheduling message.  However, this\n   cannot
    be guaranteed because the sender of the iMIP message might not\n   be the originator
    of the scheduling message and the sender's \"Mail\n   User Agent\" (MUA) might
    not enforce iMIP semantics by translating the\n   originator's address into the
    \"Reply-To\" email header field.\n"
  - contents:
    - "2.1.  MIME Media Type\n   A MIME entity containing content information formatted
      according to\n   this document will be referenced as a \"text/calendar\" content
      type\n   [iCAL].  It is assumed that this content type will be transported\n
      \  through a MIME electronic mail transport.\n"
    title: 2.1.  MIME Media Type
  - contents:
    - "2.2.  Security\n   This section addresses several aspects of security including\n
      \  authentication, authorization, and confidentiality.  Authentication\n   and
      confidentiality can be achieved using Secure/MIME (S/MIME)\n   [RFC5750] [RFC5751],
      which uses the Security Multiparts framework for\n   MIME [RFC1847].\n"
    - contents:
      - "2.2.1.  Authorization\n   In iTIP messages [iTIP], only the \"Organizer\"
        is authorized to modify\n   or cancel calendar entries she organizes.  That
        is,\n   spoof@xyz.example.net is not allowed to modify or cancel a meeting\n
        \  that was organized by a@example.com.  Furthermore, only the\n   respondent
        has the authorization to indicate their status to the\n   \"Organizer\".  That
        is, the \"Organizer\" MUST ignore an iTIP message\n   from spoof@xyz.example.net
        that declines a meeting invitation for\n   b@example.com.\n   Implementations
        of iMIP SHOULD verify the authenticity of the creator\n   of an iCalendar
        object before taking any action.  Methods for doing\n   this are presented
        later in this document.\n   [RFC1847] message flow in iTIP supports someone
        working on behalf of\n   a \"Calendar User\" through use of the \"sent-by\"
        parameter that is\n   associated with the \"ATTENDEE\" and \"ORGANIZER\" properties.
        \ However,\n   there is no mechanism to verify whether or not a \"Calendar
        User\" has\n   authorized someone to work on their behalf.  It is left to\n
        \  implementations to provide mechanisms for the \"Calendar Users\" to\n   make
        that decision.\n"
      title: 2.2.1.  Authorization
    - contents:
      - "2.2.2.  Authentication\n   Authentication MUST be performed using S/MIME
        [RFC5750] [RFC5751].\n   Authentication is possible only on messages that
        have been signed.\n   Unauthenticated messages (i.e., unsigned messages) may
        not be\n   trusted.\n"
      title: 2.2.2.  Authentication
    - contents:
      - "2.2.3.  Confidentiality\n   To ensure confidentiality using iMIP, implementations
        SHOULD utilize\n   encryption specified in S/MIME [RFC5750] [RFC5751].  iMIP
        does not\n   restrict a \"Calendar User Agent\" (CUA) from forwarding iCalendar\n
        \  objects to other users or agents.\n"
      title: 2.2.3.  Confidentiality
    title: 2.2.  Security
  - contents:
    - "2.3.  Email Addresses\n   The calendar address specified within the \"ORGANIZER\"
      and \"ATTENDEE\"\n   properties in an iCalendar object sent using iMIP MUST
      be a proper\n   \"mailto:\" [MAILTO] URI specification for the corresponding\n
      \  \"Organizer\" or \"Attendee\" of the \"VEVENT\" or \"VTODO\".\n   Because
      [iTIP] does not preclude \"Attendees\" from forwarding\n   \"VEVENT\"s or \"VTODO\"s
      to others, the [RFC5322] \"Sender\" value may not\n   equal that of the \"Organizer\".
      \ Additionally, the \"Organizer\" or\n   \"Attendee\" cannot be reliably inferred
      by the [RFC5322] \"Sender\" or\n   \"Reply-To\" header field values of an iMIP
      message.  The relevant\n   address MUST be ascertained by opening the \"text/calendar\"
      MIME body\n   part and examining the \"ATTENDEE\" and \"ORGANIZER\" properties.\n"
    title: 2.3.  Email Addresses
  - contents:
    - "2.4.  Content-Type Header Field\n   A MIME body part containing content information
      that conforms to this\n   document MUST have an [RFC2045] \"Content-Type\" value
      of\n   \"text/calendar\".  The [RFC2045] \"Content-Type\" header field MUST
      also\n   include the MIME parameter \"method\".  The value MUST be the same\n
      \  (ignoring case) as the value of the \"METHOD\" property within the\n   iCalendar
      object.\n      Note 1: A MIME message containing multiple iCalendar objects
      with\n      different \"method\" values MUST be further encapsulated with a\n
      \     \"multipart/mixed\" MIME entity [RFC2046].  This will allow each of\n
      \     the iCalendar objects to be encapsulated within their own\n      \"text/calendar\"
      MIME entity.\n      Note 2: A MIME body part with a \"Content-Type\" value of\n
      \     \"text/calendar\" that lacks the \"method\" parameter is not\n      considered
      to be an iMIP body part and thus is not subject to the\n      requirements specified
      in this document.\n   Note that according to [iCAL] the default character set
      for iCalendar\n   objects is UTF-8 [UTF-8].  However, the default character
      set for a\n   \"text/*\" MIME entity according to [RFC2046] is US-ASCII.  Thus,
      a\n   \"charset\" MIME parameter MUST be present if the iCalendar object\n   contains
      characters that can't be represented in the US-ASCII\n   character set and,
      as specified in [iCAL], it MUST have the value\n   \"UTF-8\".\n   The optional
      \"component\" MIME parameter defines the iCalendar\n   component type contained
      within the iCalendar object.\n   The following is an example of this header
      field with a value that\n   indicates an event message.\n        Content-Type:
      text/calendar; method=REQUEST; charset=UTF-8;\n              component=vevent\n
      \  The \"text/calendar\" content type allows for the scheduling message\n   type
      to be included in a MIME message with other content information\n   (i.e., \"multipart/mixed\")
      or included in a MIME message with a clear-\n   text, human-readable form of
      the scheduling message (i.e.,\n   \"multipart/alternative\" [RFC2046]).\n   In
      order to permit the information in the scheduling message to be\n   understood
      by MIME User Agents (UAs) that do not support the\n   \"text/calendar\" content
      type, scheduling messages SHOULD be sent with\n   an alternative, human-readable
      form of the information.\n   Note that \"multipart/alternative\" MUST NOT be
      used to represent two\n   slightly different iCalendar objects, for example,
      two \"VEVENT\"s with\n   alternative starting times.\n   CUAs can use other
      MIME parameters of the \"Content-Type\" header\n   field, as well as a language
      specified in the Content-Language header\n   field [RFC3282], to pick a \"text/calendar\"
      part for processing if a\n   \"multipart/alternative\" MIME message contains
      more than one\n   \"text/calendar\" part.\n   Any receiving UA compliant with
      this specification MUST be able to\n   process \"text/calendar\" body parts
      enclosed within \"multipart/*\".\n   Note that a \"multipart/mixed\" MIME message
      can include multiple\n   \"text/calendar\" components.  The receiving UA MUST
      be able to process\n   all of them.\n"
    title: 2.4.  Content-Type Header Field
  - contents:
    - "2.5.  Content-Transfer-Encoding Header Field\n   Unless an iMIP message is
      transported over 8-bit clean transport\n   (such as SMTP [8BITMIME]), a transfer
      encoding such as quoted-\n   printable or base64 [RFC2045] MUST be used for
      iCalendar objects\n   containing any characters that can't be represented in
      the US-ASCII\n   character set.  For example:\n   From: user1@example.com\n
      \  To: user2@example.com\n   Subject: Phone Conference\n   Mime-Version: 1.0\n
      \  Date: Wed, 07 May 2008 21:30:25 +0400\n   Message-ID: <4821E731.5040506@laptop1.example.com>\n
      \  Content-Type: text/calendar; method=REQUEST; charset=UTF-8\n   Content-Transfer-Encoding:
      quoted-printable\n   BEGIN:VCALENDAR\n   PRODID:-//Example/ExampleCalendarClient//EN\n
      \  METHOD:REQUEST\n   VERSION:2.0\n   BEGIN:VEVENT\n   ORGANIZER:mailto:user1@example.com\n
      \  ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:user1@example.com\n   ATTENDEE;RSVP=YES;CUTYPE=INDIVIDUAL:mailto:user2@example.com\n
      \  DTSTAMP:20080507T170000Z\n   DTSTART:20080701T160000Z\n   DTEND:20080701T163000Z\n
      \  SUMMARY:Phone call to discuss your last visit\n   DESCRIPTION:=D1=82=D1=8B
      =D0=BA=D0=B0=D0=BA - =D0=B4=D0=BE=D0=\n    =B2=D0=BE=D0=BB=D0=B5=D0=BD =D0=BF=D0=BE=D0=B5=D0=B7=D0=B4=D0=BA=D0\n
      \   =BE=D0=B9?\n   UID:calsvr.example.com-8739701987387998\n   SEQUENCE:0\n
      \  STATUS:TENTATIVE\n   END:VEVENT\n   END:VCALENDAR\n"
    title: 2.5.  Content-Transfer-Encoding Header Field
  - contents:
    - "2.6.  Content-Disposition Header Field\n   Implementations MAY include a \"Content-Disposition\"
      header field to\n   define a file name for an iCalendar object.  However, the
      handling of\n   a MIME part MUST be based on its [RFC2045] \"Content-Type\"
      and not on\n   the extension specified in the \"Content-Disposition\", as different\n
      \  email malware is known to trick User Agents into misinterpreting\n   content
      of messages by specifying a file extension in the Content-\n   Disposition header
      field that doesn't correspond to the value of the\n   \"Content-Type\" header
      field.\n"
    title: 2.6.  Content-Disposition Header Field
  title: 2.  MIME Message Format Binding
- contents:
  - "3.  Security Considerations\n   The security threats that applications must address
    when implementing\n   iTIP are detailed in [iTIP].  In particular, two spoofing
    threats are\n   identified in Section 6.1 of [iTIP]: spoofing the \"Organizer\",
    and\n   spoofing an \"Attendee\".  To address these threats, the originator of\n
    \  an iCalendar object must be authenticated by a recipient.  Once\n   authenticated,
    a determination can be made as to whether or not the\n   originator is authorized
    to perform the requested operation.\n   Compliant applications MUST support signing
    and encrypting\n   \"text/calendar\" body parts using a mechanism based on S/MIME\n
    \  [RFC5750] [RFC5751] in order to facilitate the authentication of the\n   originator
    of the iCalendar object (see Sections 2.2.2 and 2.2.3).\n   The steps for processing
    a signed iMIP message are described below:\n   1. Using S/MIME, determine who
    signed the \"text/calendar\" body part\n      containing the iCalendar object.
    \ This is the \"signer\".  (Note\n      that the email address of the signer MUST
    be specified in the\n      rfc822Name field of the \"subject alternative name\"
    extension of\n      the signer certificate, as specified in [RFC5280],\n      Section
    4.1.2.6.)  Note that the signer is not necessarily the\n      person sending an
    e-mail message, since an e-mail message can be\n      forwarded.\n   2. Correlate
    the signer to either an \"ATTENDEE\" property or to the\n      \"ORGANIZER\" property
    in the iCalendar object, based on the method\n      and the calendar component
    specified in the iCalendar object, as\n      defined in Section 1.4 of [iTIP].
    \ If the signer cannot be\n      correlated to an \"ATTENDEE\"/\"ORGANIZER\" property,
    then actively\n      warn the user controlling the \"Calendar User Agent\" that
    the\n      iCalendar object is untrusted, and encourage the user to ignore\n      the
    message, but give advanced users the option to (a) view the\n      certificate
    of the signer and the entire certificate chain (if\n      any) in order to help
    decide if the signer should be trusted to\n      send the message, and then (b)
    allow the CUA to accept and process\n      the iCalendar object.\n   3. Determine
    whether or not the \"ATTENDEE\"/\"ORGANIZER\" is authorized\n      to perform
    the operation as defined by [iTIP].  If the conditions\n      are not met, ignore
    the message.\n   4. If all the above conditions are met, the message can be processed.\n
    \  S/MIME signing also protects against malicious changes to messages in\n   transit.\n
    \  If calendar confidentiality is required by the sender, signed iMIP\n   messages
    SHOULD be encrypted by a mechanism based on S/MIME [RFC5750]\n   [RFC5751].  If
    iMIP is used within a single ADministrative Management\n   Domain (ADMD) [RFC5598],
    SMTP STARTTLS [SMTP-TLS] (together with\n   STARTTLS in IMAP/POP [IMAP-POP-TLS])
    MAY alternatively be used to\n   provide calendar confidentiality.\n   Once a
    signed and/or encrypted iMIP message is received and\n   successfully verified
    (as detailed above) by a CUA, the CUA SHOULD\n   remember whether the sender of
    the message is using signing and/or\n   encrypting.  If an unsigned iMIP message
    is received from the same\n   sender later on, the receiving CUA SHOULD warn the
    receiving user\n   about a possible man-in-the-middle attack and SHOULD ignore
    the\n   message, unless explicitly overridden by the user.\n   Implementations
    MAY provide means for users to disable signing and\n   encrypting.\n   It is possible
    to receive iMIP messages sent by someone working on\n   behalf of another \"Calendar
    User\".  This is determined by examining\n   the \"sent-by\" parameter in the
    relevant \"ORGANIZER\" or \"ATTENDEE\"\n   property.  [iCAL] and [iTIP] provide
    no mechanism to verify that a\n   \"Calendar User\" has authorized someone else
    to work on their behalf.\n   To address this security issue, implementations MUST
    provide\n   mechanisms for the \"Calendar Users\" to make that decision before\n
    \  applying changes from someone working on behalf of a \"Calendar User\".\n   One
    way to achieve this is to reject iMIP messages sent by users\n   other than the
    \"ORGANIZER\" or the \"ATTENDEE\"s.  Alternatively, the\n   receiver could have
    a list of trusted <sent-by, organizer> proxies in\n   its local security policy.
    \ And yet another way is to prompt the user\n   for confirmation.\n   iMIP-based
    calendaring is frequently deployed within a single ADMD,\n   with boundary filtering
    employed to restrict email calendaring flows\n   to be inside the ADMD.  This
    can help in minimizing malicious changes\n   to calendaring messages in transit,
    as well as in making\n   authorization decisions less risky.\n   A security consideration
    associated with the use of the Content-\n   Disposition header field is described
    in Section 2.6.\n   Use of S/MIME makes the security considerations discussed
    in\n   [RFC5750] [RFC5751] relevant to this document.  For additional\n   security
    considerations regarding certificate and Certificate\n   Revocation List (CRL)
    verification, please see [RFC5280].\n"
  title: 3.  Security Considerations
- contents:
  - '4.  Examples

    '
  - contents:
    - "4.1.  Single Component with an ATTACH Property\n   This minimal message shows
      how an iCalendar object references an\n   attachment.  The attachment is accessible
      via its URL.\n   From: sman@netscape.example.com\n   To: stevesil@microsoft.example.com\n
      \  Subject: Phone Conference\n   Mime-Version: 1.0\n   Content-Type: text/calendar;
      method=REQUEST; charset=US-ASCII\n   Content-Transfer-Encoding: 7bit\n   BEGIN:VCALENDAR\n
      \  PRODID:-//Example/ExampleCalendarClient//EN\n   METHOD:REQUEST\n   VERSION:2.0\n
      \  BEGIN:VEVENT\n   ORGANIZER:mailto:man@netscape.example.com\n   ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:man@netscape.example.com\n
      \  ATTENDEE;RSVP=YES:mailto:stevesil@microsoft.example.com\n   DTSTAMP:19970611T190000Z\n
      \  DTSTART:19970701T210000Z\n   DTEND:19970701T230000Z\n   SUMMARY:Phone Conference\n
      \  DESCRIPTION:Please review the attached document.\n   UID:calsvr.example.com-873970198738777\n
      \  ATTACH:ftp://ftp.bar.example.com/pub/docs/foo.doc\n   STATUS:CONFIRMED\n
      \  END:VEVENT\n   END:VCALENDAR\n"
    title: 4.1.  Single Component with an ATTACH Property
  - contents:
    - "4.2.  Using multipart/alternative for Low-Fidelity Clients\n   This example
      shows how a client can emit a multipart message that\n   includes both a plain
      text version and the full iCalendar object.\n   Clients that do not support
      \"text/calendar\" will still be capable of\n   rendering the plain text representation.\n
      \  From: foo1@example.com\n   To: foo2@example.com\n   Subject: Phone Conference\n
      \  Mime-Version: 1.0\n   Content-Type: multipart/alternative; boundary=\"01BD3665.3AF0D360\"\n
      \  --01BD3665.3AF0D360\n   Content-Type: text/plain; charset=us-ascii\n   Content-Transfer-Encoding:
      7bit\n   This is an alternative representation of a \"text/calendar\"\n   MIME
      object.\n   When: 7/1/1997 10:00AM PDT - 7/1/97 10:30AM PDT\n   Where:\n   Organizer:
      foo1@example.com\n   Summary: Phone Conference\n   --01BD3665.3AF0D360\n   Content-Type:
      text/calendar; method=REQUEST; charset=US-ASCII\n   Content-Transfer-Encoding:
      7bit\n   BEGIN:VCALENDAR\n   PRODID:-//Example/ExampleCalendarClient//EN\n   METHOD:REQUEST\n
      \  VERSION:2.0\n   BEGIN:VEVENT\n   ORGANIZER:mailto:foo1@example.com\n   ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:foo1@example.com\n
      \  ATTENDEE;RSVP=YES;CUTYPE=INDIVIDUAL:mailto:foo2@example.com\n   DTSTAMP:19970611T190000Z\n
      \  DTSTART:19970701T170000Z\n   DTEND:19970701T173000Z\n   SUMMARY:Phone Conference\n
      \  UID:calsvr.example.com-8739701987387771\n   SEQUENCE:0\n   STATUS:CONFIRMED\n
      \  END:VEVENT\n   END:VCALENDAR\n   --01BD3665.3AF0D360\n"
    title: 4.2.  Using multipart/alternative for Low-Fidelity Clients
  - contents:
    - "4.3.  Single Component with an ATTACH Property and Inline Attachment\n   This
      example shows how a message containing an iCalendar object\n   references an
      attached document.  The reference is made using a\n   Content-ID (CID).  Thus,
      the iCalendar object and the document are\n   packaged in a \"multipart/related\"
      encapsulation.\n   From: foo1@example.com\n   To: foo2@example.com\n   Subject:
      Phone Conference\n   Mime-Version: 1.0\n   Content-Type: multipart/related;
      boundary=\"boundary-example-1\"\n   --boundary-example-1\n   Content-Type: text/calendar;
      method=REQUEST; charset=US-ASCII\n   Content-Transfer-Encoding: 7bit\n   Content-Disposition:
      attachment; filename=\"event.ics\"\n   BEGIN:VCALENDAR\n   PRODID:-//Example/ExampleCalendarClient//EN\n
      \  METHOD:REQUEST\n   VERSION:2.0\n   BEGIN:VEVENT\n   ORGANIZER:mailto:foo1@example.com\n
      \  ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:foo1@example.com\n   ATTENDEE;RSVP=YES;CUTYPE=INDIVIDUAL:mailto:foo2@example.com\n
      \  DTSTAMP:19970611T190000Z\n   DTSTART:19970701T180000Z\n   DTEND:19970701T183000Z\n
      \  SUMMARY:Phone Conference\n   UID:calsvr.example.com-8739701987387771\n   ATTACH:cid:123456789@example.com\n
      \  SEQUENCE:0\n   STATUS:CONFIRMED\n   END:VEVENT\n   END:VCALENDAR\n   --boundary-example-1\n
      \  Content-Type: application/msword; name=\"FieldReport.doc\"\n   Content-Transfer-Encoding:
      base64\n   Content-Disposition: inline; filename=\"FieldReport.doc\"\n   Content-ID:
      <123456789@example.com>\n   0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAABAAAARAAAAAAA\n
      \  AAAAEAAAQAAAAAEAAAD+////AAAAAEUAAAD/////////////////////////////////\n    ...\n
      \  --boundary-example-1--\n"
    title: 4.3.  Single Component with an ATTACH Property and Inline Attachment
  - contents:
    - "4.4.  Multiple Similar Components\n   Multiple iCalendar components of the
      same type can be included in the\n   iCalendar object when the \"METHOD\" is
      the same for each component.\n   From: foo1@example.com\n   To: foo2@example.com\n
      \  Subject: Summer Company Holidays\n   Mime-Version: 1.0\n   Content-Type:
      text/calendar; method=PUBLISH; charset=US-ASCII\n   Content-Transfer-Encoding:
      7bit\n   Content-Disposition: attachment; filename=\"event.ics\"\n   BEGIN:VCALENDAR\n
      \  PRODID:-//Example/ExampleCalendarClient//EN\n   METHOD:PUBLISH\n   VERSION:2.0\n
      \  BEGIN:VEVENT\n   ORGANIZER:mailto:foo1@example.com\n   DTSTAMP:19970611T150000Z\n
      \  DTSTART:19970701T150000Z\n   DTEND:19970701T230000Z\n   SUMMARY:Company Picnic\n
      \  DESCRIPTION:Food and drink will be provided\n   UID:calsvr.example.com-873970198738777-1\n
      \  SEQUENCE:0\n   STATUS:CONFIRMED\n   END:VEVENT\n   BEGIN:VEVENT\n   ORGANIZER:mailto:foo1@example.com\n
      \  DTSTAMP:19970611T190000Z\n   DTSTART:19970715T150000Z\n   DTEND:19970715T230000Z\n
      \  SUMMARY:Company Bowling Tournament\n   DESCRIPTION:We have 10 lanes reserved\n
      \  UID:calsvr.example.com-873970198738777-2\n   SEQUENCE:0\n   STATUS:CONFIRMED\n
      \  END:VEVENT\n   END:VCALENDAR\n"
    title: 4.4.  Multiple Similar Components
  - contents:
    - "4.5.  Multiple Mixed Components\n   Different component types must be encapsulated
      in separate iCalendar\n   objects.\n   From: foo1@example.com\n   To: foo2@example.com\n
      \  Subject: Phone Conference\n   Mime-Version: 1.0\n   Content-Type: multipart/mixed;\n
      \                boundary=\"--FEE3790DC7E35189CA67CE2C\"\n   This is a multi-part
      message in MIME format.\n   ----FEE3790DC7E35189CA67CE2C\n   Content-Type: text/calendar;
      method=REQUEST; charset=US-ASCII\n   Content-Transfer-Encoding: 7bit\n   Content-Disposition:
      attachment; filename=\"event1.ics\"\n   BEGIN:VCALENDAR\n   PRODID:-//Example/ExampleCalendarClient//EN\n
      \  METHOD:REQUEST\n   VERSION:2.0\n   BEGIN:VEVENT\n   ORGANIZER:mailto:foo1@example.com\n
      \  ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:foo1@example.com\n   ATTENDEE;RSVP=YES;CUTYPE=INDIVIDUAL:mailto:foo2@example.com\n
      \  DTSTAMP:19970611T190000Z\n   DTSTART:19970701T210000Z\n   DTEND:19970701T230000Z\n
      \  SUMMARY:Phone Conference\n   DESCRIPTION:Discuss what happened at the last
      meeting\n   UID:calsvr.example.com-8739701987387772\n   SEQUENCE:0\n   STATUS:CONFIRMED\n
      \  END:VEVENT\n   END:VCALENDAR\n   ----FEE3790DC7E35189CA67CE2C\n   Content-Type:
      text/calendar; method=REQUEST; charset=US-ASCII\n   Content-Transfer-Encoding:
      7bit\n   Content-Disposition: attachment; filename=\"todo1.ics\"\n   BEGIN:VCALENDAR\n
      \  PRODID:-//Example/ExampleCalendarClient//EN\n   METHOD:REQUEST\n   VERSION:2.0\n
      \  BEGIN:VTODO\n   DUE:19970701T160000Z\n   ORGANIZER:mailto:foo1@example.com\n
      \  ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:foo1@example.com\n   ATTENDEE;RSVP=YES:mailto:foo2@example.com\n
      \  SUMMARY:Phone Conference\n   DESCRIPTION:Discuss a new location for the company
      picnic\n   UID:calsvr.example.com-td-8739701987387773\n   SEQUENCE:0\n   STATUS:NEEDS-ACTION\n
      \  END:VEVENT\n   END:VCALENDAR\n   ----FEE3790DC7E35189CA67CE2C\n"
    title: 4.5.  Multiple Mixed Components
  - contents:
    - "4.6.  Detailed Components with an ATTACH Property\n   This example shows the
      format of a message containing a group meeting\n   between three individuals.
      \ The \"multipart/related\" encapsulation is\n   used because the iCalendar
      object contains an ATTACH property that\n   uses a CID to reference the attachment.\n
      \  From: foo1@example.com\n   MIME-Version: 1.0\n   To: foo2@example.com,foo3@example.com\n
      \  Subject: REQUEST - Phone Conference\n   Content-Type: multipart/related;\n
      \                boundary=\"--FEE3790DC7E35189CA67CE2C\"\n   ----FEE3790DC7E35189CA67CE2C\n
      \  Content-Type: multipart/alternative;\n                 boundary=\"--00FEE3790DC7E35189CA67CE2C00\"\n
      \  ----00FEE3790DC7E35189CA67CE2C00\n   Content-Type: text/plain; charset=us-ascii\n
      \  Content-Transfer-Encoding: 7bit\n   When: 7/1/1997 10:00PM PDT - 7/1/97 10:30
      PM PDT\n   Where:\n   Organizer: foo1@example.com\n   Summary: Let's discuss
      the attached document\n   ----00FEE3790DC7E35189CA67CE2C00\n   Content-Type:
      text/calendar; method=REQUEST; charset=US-ASCII;\n                    Component=vevent\n
      \  Content-Transfer-Encoding: 7bit\n   Content-Disposition: attachment; filename=\"event.ics\"\n
      \  BEGIN:VCALENDAR\n   PRODID:-//Example/ExampleCalendarClient//EN\n   METHOD:REQUEST\n
      \  VERSION:2.0\n   BEGIN:VEVENT\n   ORGANIZER:foo1@example.com\n   ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:foo1@example.com\n
      \  ATTENDEE;RSVP=YES;CUTYPE=INDIVIDUAL:mailto:foo2@example.com\n   ATTENDEE;RSVP=YES;CUTYPE=INDIVIDUAL:mailto:foo3@example.com\n
      \  DTSTAMP:19970611T190000Z\n   DTSTART:19970621T170000Z\n   DTEND:199706211T173000Z\n
      \  SUMMARY:Let's discuss the attached document\n   UID:calsvr.example.com-873970198738777-8aa\n
      \  ATTACH:cid:calsvr.example.com-12345aaa\n   SEQUENCE:0\n   STATUS:CONFIRMED\n
      \  END:VEVENT\n   END:VCALENDAR\n   ----00FEE3790DC7E35189CA67CE2C00\n   ----FEE3790DC7E35189CA67CE2C\n
      \  Content-Type: application/msword; name=\"FieldReport.doc\"\n   Content-Transfer-Encoding:
      base64\n   Content-Disposition: inline; filename=\"FieldReport.doc\"\n   Content-ID:
      <calsvr.example.com-12345aaa>\n   R0lGODdhTAQZAJEAAFVVVd3d3e4AAP///ywAAAAATAQZAAAC/5yPOSLhD6OctNqLs94Xq\n
      \  AG4kiW5omm6sq27gvH8kzX9o1y+s73/g8MCofEovGITCoxKMbyCR16cNSq9YrNarfcrvd\n   riIH5LL5jE6rxc3G+v2cguf0uv2Oz+v38L7/DxgoOKjURnjIIbe3yNjo+AgZWYVIWWl5i\n
      \  ZnJY6J\n    ...\n   ----FEE3790DC7E35189CA67CE2C\n"
    title: 4.6.  Detailed Components with an ATTACH Property
  title: 4.  Examples
- contents:
  - "5.  Recommended Practices\n   This section outlines a series of recommended practices
    when using a\n   messaging transport to exchange iCalendar objects.\n"
  - contents:
    - "5.1.  Use of Content and Message IDs\n   The [iCAL] specification makes frequent
      use of the URI for data types\n   in properties such as \"DESCRIPTION\", \"ATTACH\",
      \"CONTACT\", and others.\n   Two forms of URIs are the Message ID (MID) and
      the Content-ID (CID).\n   These are defined in [RFC2392].  Although [RFC2392]
      allows\n   referencing messages or MIME body parts in other MIME entities or\n
      \  stores, it is strongly RECOMMENDED that iMIP implementations include\n   all
      referenced messages and body parts in a single MIME entity.\n   Simply put,
      if an iCalendar object contains CID or MID references to\n   other messages
      or body parts, implementations should ensure that\n   these messages and/or
      body parts are transmitted with the iCalendar\n   object.  If they are not,
      there is no guarantee that the receiving\n   CUA will have the access or the
      authorization to view those objects.\n"
    title: 5.1.  Use of Content and Message IDs
  title: 5.  Recommended Practices
- contents:
  - "6.  IANA Considerations\n   The \"text/calendar\" MIME media type was registered
    in [iCAL].\n"
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [iCAL]      Desruisseaux, B., Ed., \"Internet
      Calendaring and\n               Scheduling Core Object Specification (iCalendar)\",\n
      \              RFC 5545, September 2009.\n   [iTIP]      Daboo, C., Ed., \"iCalendar
      Transport-Independent\n               Interoperability Protocol (iTIP)\", RFC
      5546, December\n               2009.\n   [RFC5322]   Resnick, P., Ed., \"Internet
      Message Format\", RFC 5322,\n               October 2008.\n   [MAILTO]    Duerst,
      M., Masinter, L., and J. Zawinski, \"The 'mailto'\n               URI Scheme\",
      RFC 6068, October 2010.\n   [RFC1847]   Galvin, J., Murphy, S., Crocker, S.,
      and N. Freed,\n               \"Security Multiparts for MIME: Multipart/Signed
      and\n               Multipart/Encrypted\", RFC 1847, October 1995.\n   [RFC2045]
      \  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n               Extensions
      (MIME) Part One: Format of Internet Message\n               Bodies\", RFC 2045,
      November 1996.\n   [RFC2046]   Freed, N. and N. Borenstein, \"Multipurpose Internet
      Mail\n               Extensions (MIME) Part Two: Media Types\", RFC 2046,\n
      \              November 1996.\n   [RFC2392]   Levinson, E., \"Content-ID and
      Message-ID Uniform Resource\n               Locators\", RFC 2392, August 1998.\n
      \  [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [UTF-8]     Yergeau, F., \"UTF-8,
      a transformation format of ISO\n               10646\", STD 63, RFC 3629, November
      2003.\n   [SMTP-TLS]  Hoffman, P., \"SMTP Service Extension for Secure SMTP
      over\n               Transport Layer Security\", RFC 3207, February 2002.\n
      \  [IMAP-POP-TLS]\n               Newman, C., \"Using TLS with IMAP, POP3 and
      ACAP\",\n               RFC 2595, June 1999.\n   [RFC5750]   Ramsdell, B. and
      S. Turner, \"Secure/Multipurpose Internet\n               Mail Extensions (S/MIME)
      Version 3.2 Certificate\n               Handling\", RFC 5750, January 2010.\n
      \  [RFC5751]   Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet\n
      \              Mail Extensions (S/MIME) Version 3.2 Message\n               Specification\",
      RFC 5751, January 2010.\n   [RFC5280]   Cooper, D., Santesson, S., Farrell,
      S., Boeyen, S.,\n               Housley, R., and W. Polk, \"Internet X.509 Public
      Key\n               Infrastructure Certificate and Certificate Revocation\n
      \              List (CRL) Profile\", RFC 5280, May 2008.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [8BITMIME]  Klensin, J., Freed, N., Rose,
      M., Stefferud, E., and D.\n               Crocker, \"SMTP Service Extension
      for 8bit-MIMEtransport\",\n               RFC 1652, July 1994.\n   [RFC5598]
      \  Crocker, D., \"Internet Mail Architecture\", RFC 5598, July\n               2009.\n
      \  [RFC3282]   Alvestrand, H., \"Content Language Headers\", RFC 3282, May\n
      \              2002.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  Changes since RFC 2447\n   Updated references.  Split them into
    Normative and Informative.\n   Updated examples to use example.com/example.net
    domains.\n   Corrected usage of RFC 2119 language.\n   Clarified that charset=UTF-8
    is required, unless the calendar can be\n   entirely represented in US-ASCII.\n
    \  Clarified that 7-bit content transfer encodings should be used unless\n   the
    calendar object is known to be transferred over 8-bit clean\n   transport.\n   Clarified
    that file extension specified in the Content-Disposition\n   header field is not
    to be used to override the \"Content-Type\" MIME\n   type.\n   Disallowed use
    of \"multipart/alternative\" for slightly different\n   representations of the
    same calendar.\n   Clarified handling of the \"method\" MIME parameter of the
    \"Content-\n   Type\" header field.\n   Clarified that in an iMIP message an ORGANIZER/ATTENDEE
    property\n   contains a mailto: URI.\n   Fixed examples with ATTENDEE property
    to use \"CUTYPE=\" instead of\n   \"TYPE=\".\n   Clarified that message integrity/confidentiality
    should be achieved\n   using S/MIME.\n   Provided additional examples.\n   Improved
    the Security Considerations section.\n   Made multiple editorial changes to different
    sections of the\n   document.\n"
  title: Appendix A.  Changes since RFC 2447
- contents:
  - "Appendix B.  Acknowledgements\n   The editor of this document wishes to thank
    Frank Dawson, Steve\n   Mansour, and Steve Silverberg, the original authors of
    RFC 2447, as\n   well as the following individuals who have participated in the\n
    \  drafting, review, and discussion of this memo:\n   Reinhold Kainhofer, Cyrus
    Daboo, Bernard Desruisseaux, Eliot Lear,\n   and Peter Saint-Andre.\n"
  title: Appendix B.  Acknowledgements
- contents:
  - "Author's Address\n   Alexey Melnikov (editor)\n   Isode Ltd\n   5 Castle Business
    Village\n   36 Station Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n   EMail:
    Alexey.Melnikov@isode.com\n"
  title: Author's Address
