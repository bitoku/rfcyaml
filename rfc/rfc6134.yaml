- title: __initial_text__
  contents:
  - '                Sieve Extension: Externally Stored Lists

    '
- title: Abstract
  contents:
  - "Abstract\n   The Sieve email filtering language can be used to implement email\n\
    \   whitelisting, blacklisting, personal distribution lists, and other\n   sorts\
    \ of list matching.  Currently, this requires that all members of\n   such lists\
    \ be hard-coded in the script itself.  Whenever a member of\n   a list is added\
    \ or deleted, the script needs to be updated and\n   possibly uploaded to a mail\
    \ server.\n   This document defines a Sieve extension for accessing externally\n\
    \   stored lists -- lists whose members are stored externally to the\n   script,\
    \ such as using the Lightweight Directory Access Protocol\n   (LDAP), the Application\
    \ Configuration Access Protocol (ACAP), vCard\n   Extensions to WebDAV (CardDAV),\
    \ or relational databases.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6134.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Conventions Used in This Document  . . . . . . .\
    \ . . . . .  3\n   2.  Extlists Extension . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n     2.1.  Capability Identifier  . . . . . . . . . . . . . . .\
    \ . . .  3\n     2.2.  :list Match Type for Supported Tests . . . . . . . . .\
    \ . .  3\n     2.3.  :list Tagged Argument to the \"redirect\" Action . . . .\
    \ . .  5\n     2.4.  Other Uses for External Lists  . . . . . . . . . . . . .\
    \ .  5\n     2.5.  Syntax of an Externally Stored List Name . . . . . . . . .\
    \  5\n     2.6.  Definition of \"addrbook\" URN Parameter . . . . . . . . . .\
    \  7\n     2.7.  Test valid_ext_list  . . . . . . . . . . . . . . . . . . .  9\n\
    \     2.8.  Interaction with ManageSieve . . . . . . . . . . . . . . .  9\n  \
    \   2.9.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . 10\n    \
    \   2.9.1.  Example 1  . . . . . . . . . . . . . . . . . . . . . . 10\n      \
    \ 2.9.2.  Example 2  . . . . . . . . . . . . . . . . . . . . . . 10\n       2.9.3.\
    \  Example 3  . . . . . . . . . . . . . . . . . . . . . . 11\n       2.9.4.  Example\
    \ 4  . . . . . . . . . . . . . . . . . . . . . . 11\n       2.9.5.  Example 5\
    \  . . . . . . . . . . . . . . . . . . . . . . 11\n   3.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 12\n   4.  IANA Considerations  . . .\
    \ . . . . . . . . . . . . . . . . . . 14\n     4.1.  Registration of Sieve Extension\
    \  . . . . . . . . . . . . . 14\n     4.2.  Registration of ManageSieve Capability\
    \ . . . . . . . . . . 14\n     4.3.  Creation of Sieve URN Parameters Registry\
    \  . . . . . . . . 15\n     4.4.  Registration of the \"addrbook\" URN parameter\
    \ . . . . . . . 16\n     4.5.  Registration of \"sieve\" URN sub-namespace  .\
    \ . . . . . . . 16\n   5.  Acknowledgements . . . . . . . . . . . . . . . . .\
    \ . . . . . . 16\n   6.  References . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 16\n     6.1.  Normative References . . . . . . . . . . . . . . .\
    \ . . . . 16\n     6.2.  Informative References . . . . . . . . . . . . . . .\
    \ . . . 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies an extension to the Sieve language\
    \ [RFC5228]\n   for checking membership in an external list or for redirecting\n\
    \   messages to an external list of recipients.  An \"external list\" is a\n \
    \  list whose members are stored externally to the Sieve script, such as\n   using\
    \ LDAP [RFC4510], ACAP [RFC2244], CardDAV [CardDAV], or\n   relational databases.\n\
    \   This extension adds a new match type to apply to supported tests and\n   a\
    \ new tagged argument to the \"redirect\" action.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   Conventions for notations are as\
    \ in [RFC5228], Section 1.1, including\n   the use of ABNF [RFC5234].\n   The\
    \ key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\
    \   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Extlists Extension
  contents:
  - '2.  Extlists Extension

    '
- title: 2.1.  Capability Identifier
  contents:
  - "2.1.  Capability Identifier\n   The capability string associated with the extension\
    \ defined in this\n   document is \"extlists\".\n"
- title: 2.2.  :list Match Type for Supported Tests
  contents:
  - "2.2.  :list Match Type for Supported Tests\n   ABNF:\n         MATCH-TYPE  =/\
    \ \":list\"\n              ; only valid for supported tests\n   The new \":list\"\
    \ match type changes the interpretation of the \"key-\n   list\" parameter (the\
    \ second parameter) in supported tests.  When the\n   match type is \":list\"\
    , the key-list becomes a list of names of\n   externally stored lists.  The external\
    \ lists are queried, perhaps\n   through a list-specific mechanism, and the test\
    \ evaluates to \"true\"\n   if any of the specified values matches any member\
    \ of one or more of\n   the lists.\n   Comparators are not allowed together with\
    \ the \":list\" match type, so\n   if both are specified in a test, that MUST\
    \ result in an error.\n   Queries done through list-specific mechanisms might\
    \ have the effect\n   of built-in comparators; for example, queries to certain\
    \ lists might\n   be case-sensitive, while queries to other lists might be done\
    \ without\n   regard to case.\n   Implementations MUST support the use of \":list\"\
    \ in \"address\",\n   \"envelope\", and \"header\" tests.  Implementations that\
    \ include the\n   Variables extension [RFC5229] MUST also support its use in \"\
    string\"\n   tests.\n   Implementations MAY support other tests than the ones\
    \ in this\n   document.  Implementations MUST report an error when a script uses\n\
    \   \":list\" with a test that does not support \":list\".  This error SHOULD\n\
    \   be reported at compile-time but MAY be reported at run-time.  To\n   maintain\
    \ interoperability, other tests that can be used with \":list\"\n   SHOULD be\
    \ documented in a specification that defines a capability\n   string that can\
    \ be tested (in a \"require\" statement or using \"ihave\"\n   [RFC5463]).\n \
    \  For example, testing 'header [\"to\", \"cc\"]' against a list would cause\n\
    \   each \"to\" and \"cc\" value, ignoring leading and trailing whitespace,\n\
    \   to be queried.  If any value is found to belong to the list, the test\n  \
    \ returns \"true\".  If no value belongs to the list, the test returns\n   \"\
    false\".  Once a value is found in the list, there is no need for the\n   query\
    \ mechanism to look further.\n   For some lists, the Sieve engine might directly\
    \ retrieve the list and\n   make its own comparison.  Other lists might not work\
    \ that way -- they\n   might provide a way to ask if a value is in the list, but\
    \ not permit\n   retrieval of the list itself.  It is up to the Sieve implementation\n\
    \   to understand how to interact with any supported list.  If the Sieve\n   engine\
    \ is permanently unable to query the list (perhaps because the\n   list doesn't\
    \ support the required operation), the test MUST result in\n   a runtime error\
    \ in the Sieve script.\n   See Section 2.5 for the detailed description of syntax\
    \ used for\n   naming externally stored lists.\n   The \":list\" match type uses\
    \ the concept of \"match variables\" as\n   defined in Section 3.2 of the Variables\
    \ extension [RFC5229].\n   Implementations that also support that extension MUST\
    \ set the ${0}\n   match variable to the value in the list that matched the query.\n\
    \   Other numbered match variables (${1}, ${2}, and so on) MAY be set\n   with\
    \ list-specific information that might be of use to the script.\n"
- title: 2.3.  :list Tagged Argument to the "redirect" Action
  contents:
  - "2.3.  :list Tagged Argument to the \"redirect\" Action\n   Usage:  redirect :list\
    \ <ext-list-name: string>\n   The \"redirect\" action with the \":list\" argument\
    \ is used to send the\n   message to the set of email addresses in the externally\
    \ stored list\n   named by the ext-list-name string.  This variant of the redirect\n\
    \   command can be used to implement a personal distribution list.\n   For this\
    \ feature to work, one of the following conditions has to be\n   true:\n   1.\
    \  The list resolves to a list of email addresses, and the Sieve\n       engine\
    \ is able to enumerate those addresses.\n   2.  The list handler is able to take\
    \ care of the redirection on\n       behalf of the Sieve engine.\n   In cases\
    \ where, for example, a list contains hashed email address\n   values or an email\
    \ address pattern (\"sz*@example.com\",\n   \"*+ietf@example.net\"), the Sieve\
    \ engine will not be able to redirect\n   to that list, and responsibility must\
    \ pass to the list handler.\n   If neither the Sieve engine nor the list handler\
    \ can enumerate (or\n   iterate) the list, or the list does not resolve to email\
    \ addresses,\n   the situation MUST result in a runtime error in the Sieve script.\n\
    \   See Section 2.5 for the detailed description of syntax used for\n   naming\
    \ externally stored lists.\n"
- title: 2.4.  Other Uses for External Lists
  contents:
  - "2.4.  Other Uses for External Lists\n   The uses for external lists specified\
    \ here represent known cases and\n   situations at the time of this writing. \
    \ Other uses for external\n   lists, employing other Sieve features, might be\
    \ devised in the\n   future, and such uses can be described in extensions to this\n\
    \   document.\n"
- title: 2.5.  Syntax of an Externally Stored List Name
  contents:
  - "2.5.  Syntax of an Externally Stored List Name\n   A name of an externally stored\
    \ list is always an absolute URI\n   [RFC3986].  Implementations might find URIs\
    \ such as LDAP [RFC4510],\n   CardDAV [CardDAV], or \"tag\" [RFC4151] to be useful\
    \ for naming\n   external lists.\n   The \"tag\" URI scheme [RFC4151] can be used\
    \ to represent opaque, but\n   more user-friendly identifiers.  Resolution of\
    \ such identifiers is\n   going to be implementation specific and it can help\
    \ in hiding the\n   complexity of an implementation from end users.  For example,\
    \ an\n   implementation can provide a web interface for managing lists of\n  \
    \ users stored in LDAP.  Requiring users to know generic LDAP URI\n   syntax might\
    \ not be very practical, due to its complexity.  An\n   implementation can instead\
    \ use a fixed tag URI prefix such as \"tag:\n   example.com,<date>:\" (where <date>\
    \ can be, for example, a date\n   generated once on installation of the web interface\
    \ and left\n   untouched upon upgrades), and the prefix doesn't even need to be\n\
    \   shown to end users.\n   The \"addrbook\" URNs defined in Section 2.6 (in particular,\
    \ the\n   reserved URI \"urn:ietf:params:sieve:addrbook:default\") MUST be\n \
    \  supported.  To make it easier to use registered Sieve URN parameters,\n   we\
    \ define a shorthand way to specify them in a Sieve script: a list\n   name that\
    \ begins with \":\" is taken as referencing a Sieve URN\n   parameter, with the\
    \ initial \":\" expanding to\n   \"urn:ietf:params:sieve:\".  So we have the following\
    \ equivalences:\n      :addrbook:default == urn:ietf:params:sieve:addrbook:default\n\
    \      :addrbook:personal == urn:ietf:params:sieve:addrbook:personal\n   and so\
    \ on.\n   The mandatory-to-implement URI\n      urn:ietf:params:sieve:addrbook:default\n\
    \   gives access to the user's default address book (usually the user's\n   personal\
    \ address book).  Note that these are URIs, subject to normal\n   URI encoding\
    \ rules, including percent-encoding.  The reserved name\n   \"default\" MUST be\
    \ considered case-insensitive after decoding.  That\n   means that the following\
    \ URIs are all equivalent:\n      :addrbook:default\n      :ADDRBOOK:DEFAULT\n\
    \      :aDdRbOOk:DeFauLt\n      :AddrBook:%44%65%66ault\n   Address book names\
    \ other than \"default\" MAY be case-sensitive,\n   depending upon the implementation,\
    \ so their case (after URI decoding)\n   MUST be maintained.\n   It's possible\
    \ that a server will have no access to anything\n   resembling an address book\
    \ (perhaps in an implementation where\n   address books are only client-side things),\
    \ but the server can still\n   provide access to other sorts of lists -- consider\
    \ the list of dates\n   in Example 2 (Section 2.9.2), or lists of important keywords\
    \ and the\n   like.  It might sometimes make sense to map \":addrbook:default\"\
    \ into\n   some available list, but that might not always be reasonable.  If\n\
    \   there really is no concept of an address book in a particular server\n   implementation,\
    \ the server MAY support \":addrbook:default\" by having\n   all matches to it\
    \ fail.  Such an implementation SHOULD NOT be done\n   except as a last resort.\n\
    \   Queries against address books SHOULD be done without regard to case.\n"
- title: 2.6.  Definition of "addrbook" URN Parameter
  contents:
  - "2.6.  Definition of \"addrbook\" URN Parameter\n   This section gives the details\
    \ of the \"addrbook\" Sieve URN parameter\n   that's registered in Section 4.4.\
    \  URIs that use this parameter begin\n   with \"urn:ietf:params:sieve:addrbook:\"\
    .\n   URN parameter name:  addrbook\n   URN parameter syntax:  The \"addrbook\"\
    \ parameter is defined by the\n       <addrbook-urn> rule, defined using ABNF\
    \ [RFC5234]:\n          addrbook-urn = \"addrbook:\" addrbook [ \"?\" extensions\
    \ ]\n          addrbook = segment\n               ; <segment> defined in [RFC3986]\n\
    \          extensions = query\n               ; <query> defined in [RFC3986]\n\
    \   Intended usage:  \"addrbook\" URNs are used for designating references\n \
    \  to address books.  An address book is a concept used by different\n   applications\
    \ (such as Sieve interpreters) for describing a list of\n   named entries, and\
    \ may be translated into other types of address\n   books, such as LDAP groups.\
    \  Address books may be private or shared;\n   they may be personal, organizational,\
    \ or perhaps even \"crowdsourced\".\n   The address book name (the \"addrbook\"\
    \ element in the ABNF above)\n   refers to a specifically named address book,\
    \ as defined by the\n   implementation.  A user might, for example, have access\
    \ to a number\n   of different address books, such as a personal one, a family\
    \ one, a\n   company one, and one for the town where the user lives.\n   The extension\
    \ information (the \"extensions\" element in the ABNF\n   above) is available\
    \ for use in future extensions.  It might allow for\n   things such as dynamic\
    \ subsets of an address book -- for example,\n   something such as this might\
    \ be defined in the future:\n       urn:ietf:params:sieve:addrbook:personal?name.contains=fred\n\
    \       There are no extensions defined at this time.\n       An \"addrbook\"\
    \ URN is designed to be used by applications for\n       referencing address books.\
    \  Each URN is intended to represent a\n       grouping of addresses that can\
    \ be logically thought of as one\n       \"book\".  Any given address can belong\
    \ to more than one book --\n       that is, can be referred to by more than one\
    \ URN.\n       The URI \"urn:ietf:params:sieve:addrbook\" has no meaning in\n\
    \       itself.  It MUST be used with sub-parameters representing the\n      \
    \ address book name and extension information, as shown in the ABNF\n       above.\n\
    \       The sub-parameter \"default\" (creating the URN\n       \"urn:ietf:params:sieve:addrbook:default\"\
    ) is a reserved (case-\n       insensitive) name that MUST be implemented, representing\
    \ a\n       default grouping (book) of addresses.  Other names, representing\n\
    \       the same or other groupings MAY be implemented.  For example, an\n   \
    \    implementation might use the following sub-parameters:\n       *   personal\
    \ -- a book representing the user's personal address\n           book.\n     \
    \  *   friends -- a subset of\n           urn:ietf:params:sieve:addrbook:personal,\
    \ defined by the user.\n       *   family -- a subset of\n           urn:ietf:params:sieve:addrbook:personal,\
    \ defined by the user.\n       *   company -- a book representing the user's company's\
    \ address\n           book.\n       *   department -- a subset of\n          \
    \ urn:ietf:params:sieve:addrbook:company, defined by the\n           company.\n\
    \       *   co-workers -- a subset of\n           urn:ietf:params:sieve:addrbook:company,\
    \ defined by the user.\n       *   default -- the default address book, a reference\
    \ to\n           urn:ietf:params:sieve:addrbook:personal.\n   Interoperability\
    \ considerations:  Applications are only REQUIRED to\n       support \"addrbook:default\"\
    , where all cases and encodings of\n       \"default\" are considered equivalent.\
    \  Address book names other\n       than \"default\" MAY be case-sensitive, depending\
    \ upon the\n       implementation, so their case (after URI decoding) MUST be\n\
    \       maintained.\n   Security considerations:  Applications SHOULD ensure appropriate\n\
    \       restrictions are in place to protect sensitive information that\n    \
    \   might be revealed by \"addrbook\" URNs from access or modification\n     \
    \  by untrusted sources.\n   Contact:  Sieve mailing list <sieve@ietf.org>\n"
- title: 2.7.  Test valid_ext_list
  contents:
  - "2.7.  Test valid_ext_list\n   Usage: valid_ext_list <ext-list-names: string-list>\n\
    \   The \"valid_ext_list\" test is true if all of the external list names\n  \
    \ in the ext-list-names argument are supported, and they are valid both\n   syntactically\
    \ (including URI parameters) and semantically (including\n   implementation-specific\
    \ semantic restrictions).  Otherwise, the test\n   returns false.\n   This test\
    \ MUST perform exactly the same validation of an external\n   list name as would\
    \ be performed by the \"header :list\" test.\n"
- title: 2.8.  Interaction with ManageSieve
  contents:
  - "2.8.  Interaction with ManageSieve\n   This extension defines the following new\
    \ capability for ManageSieve\n   (see [RFC5804], Section 1.7):\n   EXTLISTS -\
    \ A space-separated list of URI schema parts [RFC3986] for\n   supported externally\
    \ stored list types.  This capability MUST be\n   returned if the corresponding\
    \ Sieve implementation supports the\n   \"extlists\" extension defined in this\
    \ document.\n   This also extends the ManageSieve ABNF as follows:\n   single-capability\
    \  =/ DQUOTE \"EXTLISTS\" DQUOTE SP ext-list-types CRLF\n           ; single-capability\
    \ is defined in [RFC5804]\n   ext-list-types  = string\n           ; space separated\
    \ list of URI schema parts\n           ; for supported externally stored list\
    \ types.\n           ; MUST NOT be empty.\n"
- title: 2.9.  Examples
  contents:
  - '2.9.  Examples

    '
- title: 2.9.1.  Example 1
  contents:
  - "2.9.1.  Example 1\n   This example uses a personal address book, along with the\
    \ Spamtest\n   [RFC5235] and Relational [RFC5231] extensions to give a different\n\
    \   level of spam tolerance to known senders.\n       require [\"envelope\", \"\
    extlists\", \"fileinto\", \"spamtest\",\n                \"relational\", \"comparator-i;ascii-numeric\"\
    ];\n       if envelope :list \"from\" \":addrbook:default\"\n         { /* Known:\
    \ allow high spam score */\n           if spamtest :value \"ge\" :comparator \"\
    i;ascii-numeric\" \"8\"\n             {\n               fileinto \"spam\";\n \
    \            }\n         }\n       elsif spamtest :value \"ge\" :comparator \"\
    i;ascii-numeric\" \"3\"\n         { /* Unknown: less tolerance in spam score */\n\
    \           fileinto \"spam\";\n         }\n   The same example can also be written\
    \ another way, if the Variables\n   extension [RFC5229] is also supported:\n \
    \      require [\"envelope\", \"extlists\", \"fileinto\", \"spamtest\",\n    \
    \       \"variables\", \"relational\", \"comparator-i;ascii-numeric\"];\n    \
    \   if envelope :list \"from\" \":addrbook:default\" {\n         set \"lim\" \"\
    8\";  /* Known: allow high spam score */\n       } else {\n         set \"lim\"\
    \ \"3\";  /* Unknown: less tolerance in spam score */\n       }\n       if spamtest\
    \ :value \"ge\" :comparator \"i;ascii-numeric\" \"${lim}\" {\n         fileinto\
    \ \"spam\";\n       }\n"
- title: 2.9.2.  Example 2
  contents:
  - "2.9.2.  Example 2\n   This example uses the \"currentdate\" test [RFC5260] and\
    \ a list\n   containing the dates of local holidays.  If today is a holiday, the\n\
    \   script will notify (as described in [RFC5435]) the user via the\n   Extensible\
    \ Messaging and Presence Protocol (XMPP) [RFC5437] about the\n   message.\n  \
    \     require [\"extlists\", \"date\", \"enotify\"];\n       if currentdate :list\
    \ \"date\"\n          \"tag:example.com,2011-01-01:localHolidays\" {\n       \
    \   notify \"xmpp:romeo@im.example.com\";\n       }\n"
- title: 2.9.3.  Example 3
  contents:
  - "2.9.3.  Example 3\n   This example also uses the \"envelope\" option [RFC5228]\
    \ and the\n   Subaddress extension [RFC5233].  If mail is sent with the list name\n\
    \   as a subaddress of the recipient (to, say, \"alexey+mylist\"), and the\n \
    \  message comes from a member of the list, it will be redirected to all\n   members\
    \ of the list.  Variants of this technique might be useful for\n   creating private\
    \ mailing lists.\n       require [\"extlists\", \"envelope\", \"subaddress\"];\n\
    \       # Submission from list members is sent to all members\n       if allof\
    \ (envelope :detail \"to\" \"mylist\",\n                 header :list \"from\"\
    \n                        \"tag:example.com,2010-05-28:mylist\") {\n         \
    \  redirect :list \"tag:example.com,2010-05-28:mylist\";\n       }\n"
- title: 2.9.4.  Example 4
  contents:
  - "2.9.4.  Example 4\n   This example uses variable matching [RFC5229] to extract\
    \ the IP\n   address from the last \"Received\" header field.  It then checks\
    \ that\n   against a \"block list\" of undesirable IP addresses, and rejects the\n\
    \   message if there's a match.\n       require [\"variables\", \"extlists\",\
    \ \"index\", \"reject\"];\n       if header :index 1 :matches \"received\" \"\
    *(* [*.*.*.*])*\" {\n         set \"ip\" \"${3}.${4}.${5}.${6}\";\n         if\
    \ string :list \"${ip}\"\n             \"tag:example.com,2011-04-10:DisallowedIPs\"\
    \ {\n           reject \"Message not allowed from this IP address\";\n       \
    \  }\n       }\n"
- title: 2.9.5.  Example 5
  contents:
  - "2.9.5.  Example 5\n   This example uses several features of the MIME parts extension\n\
    \   [RFC5703] to scan for unsafe attachment types.  To make it easily\n   extensible,\
    \ the unsafe types are kept in an external list, which\n   would be shared among\
    \ all users and all scripts, avoiding the need to\n   change scripts when the\
    \ list changes.\n   [Note that this is an illustrative example, and more rigorous\
    \ malware\n   filtering is advisable.  It is insufficient to base email security\
    \ on\n   checks of filenames alone.]\n       require [ \"extlists\", \"foreverypart\"\
    , \"mime\", \"enclose\" ];\n       foreverypart\n       {\n         if header\
    \ :mime :param \"filename\"\n            :list [\"Content-Type\", \"Content-Disposition\"\
    ]\n              \"tag:example.com,2011-04-10:BadFileNameExts\"\n         {\n\
    \           # these attachment types are executable\n           enclose :subject\
    \ \"Warning\" :text\n    WARNING! The enclosed message has attachments that might\
    \ be unsafe.\n    These attachment types may contain a computer virus program\n\
    \    that can infect your computer and potentially damage your data.\n    Before\
    \ clicking on these message attachments, you should verify\n    with the sender\
    \ that this message was sent intentionally, and\n    that the attachments are\
    \ safe to open.\n    .\n    ;\n           break;\n         }\n       }\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   Security considerations related to the \"address\"\
    /\"envelope\"/\"header\"\n   tests and \"redirect\" action discussed in Sieve\
    \ [RFC5228] also apply\n   to this document.\n   External list memberships ought\
    \ to be treated as if they are an\n   integral part of the script, so a temporary\
    \ failure to access an\n   external list SHOULD be handled in the same way as\
    \ a temporary\n   failure to retrieve the Sieve script itself.\n   For example,\
    \ if the Sieve script is stored in the Lightweight\n   Directory Access Protocol\
    \ [RFC4510] and the script can't be retrieved\n   when a message is processed\
    \ (perhaps the LDAP server is unavailable),\n   then the Sieve engine might delay\
    \ message delivery until the script\n   can be retrieved successfully.  Similarly,\
    \ if an external list is\n   stored in LDAP and that LDAP server is unavailable,\
    \ the Sieve engine\n   would take the same action -- delay message delivery and\
    \ try again\n   later.\n   Protocols/APIs used to retrieve/verify external list\
    \ membership MUST\n   provide an appropriate level of confidentiality and authentication.\n\
    \   Usually, that will be at least the same level of confidentiality as\n   protocols/APIs\
    \ used to retrieve Sieve scripts, but only the\n   implementation (or deployment)\
    \ will know what is appropriate.\n   There's a difference, for example, between\
    \ making an LDAP request on\n   a closed LAN that's only used for trusted servers\
    \ (it may be that\n   neither encryption nor authentication is needed), on a firewalled\
    \ LAN\n   internal to a company (it might be OK to skip encryption, depending\n\
    \   upon policy), and on the open Internet (encryption and authentication\n  \
    \ are probably both required).  It also matters whether the list being\n   accessed\
    \ is private or public (no encryption or authentication may be\n   needed for\
    \ public data, even on the Internet).\n   Having the processing and outcome of\
    \ a Sieve script depend on the\n   contents of external data can allow someone\
    \ with control of the\n   external data to have unusual, and perhaps unauthorized,\
    \ control of\n   the script -- and, consequently, of the disposition of the user's\n\
    \   email.  A user using such a list for spam control, for example, might\n  \
    \ find important mail being discarded because of tampering with the\n   list.\
    \  Someone using redirect to an external list could have her\n   email redirected\
    \ to the wrong eyes because of such tampering.\n   Security and integrity protection\
    \ of external lists is as important\n   as protection of the Sieve script itself.\n\
    \   Implementations of this extension should keep in mind that matching\n   values\
    \ against an externally stored list can be I/O and/or CPU\n   intensive.  This\
    \ can be used to deny service to the mail server\n   and/or to servers providing\
    \ access to externally stored mailing\n   lists.  A naive implementation, such\
    \ as the one that tries to\n   retrieve content of the whole list to perform matching,\
    \ can make this\n   worse.\n   But note that many protocols that can be used for\
    \ accessing\n   externally stored lists support flexible searching features that\
    \ can\n   be used to minimize network traffic and load on the directory\n   service.\
    \  For example, LDAP allows for search filters.\n   Implementations SHOULD use\
    \ such features whenever they can.\n   Many organizations support external lists\
    \ with thousands of\n   recipients.  In order to avoid mailbombs when redirecting\
    \ a message\n   to an externally stored list, implementations SHOULD enforce limits\n\
    \   on the number of recipients and/or on domains to which such\n   recipients\
    \ belong.\n   Note, in particular, that it can be too easy for a script to use\n\
    \        redirect :list \":addrbook:default\";\n   to send messages to \"everyone\
    \ in your address book\", and one can\n   easily imagine both intentional and\
    \ accidental abuse.  The situation\n   can be even worse for, say, \":addrbook:corporate\"\
    .  Warnings, as well\n   as enforced limits, are appropriate here.\n   Applications\
    \ SHOULD ensure appropriate restrictions are in place to\n   protect sensitive\
    \ information that might be revealed by \"addrbook\"\n   URNs from access or modification\
    \ by untrusted sources.\n"
- title: 4.  IANA Considerations
  contents:
  - '4.  IANA Considerations

    '
- title: 4.1.  Registration of Sieve Extension
  contents:
  - "4.1.  Registration of Sieve Extension\n   The following template specifies the\
    \ IANA registration of the Sieve\n   extension specified in this document.  This\
    \ information has been\n   added to the Sieve Extensions registry on http://www.iana.org.\n\
    \   To: iana@iana.org\n   Subject:  Registration of new Sieve extension\n   Capability\
    \ name:  extlists\n   Description:  Adds the \":list\" match type to certain Sieve\
    \ tests, and\n       the \":list\" argument to the \"redirect\" action.  The \"\
    :list\" match\n       type changes tests to match values against values stored\
    \ in one\n       or more externally stored lists.  The \":list\" argument to the\n\
    \       redirect action changes the redirect action to forward the\n       message\
    \ to email addresses stored in the externally stored list.\n   RFC number:  RFC\
    \ 6134\n   Contact address:  Sieve mailing list <sieve@ietf.org>\n"
- title: 4.2.  Registration of ManageSieve Capability
  contents:
  - "4.2.  Registration of ManageSieve Capability\n   IANA has registered a new ManageSieve\
    \ Capability according to the\n   IANA registration template specified in [RFC5804]:\n\
    \   To: iana@iana.org\n   Subject:  ManageSieve Capability Registration\n   Capability\
    \ name:  extlists\n   Description:  This capability is returned if the server\
    \ supports the\n       \"extlists\" RFC 6134 Sieve extension.\n   Relevant publications:\
    \  RFC 6134, Section 2.8\n   Person & email address to contact for further information:\n\
    \       Sieve mailing list <sieve@ietf.org>\n   Author/Change controller:  IESG\n"
- title: 4.3.  Creation of Sieve URN Parameters Registry
  contents:
  - "4.3.  Creation of Sieve URN Parameters Registry\n   IANA has created a new registry\
    \ under \"Sieve Extensions\" for Sieve\n   URN Parameters.  Registration into\
    \ this registry is according to the\n   \"Specification Required\" policy [RFC5226].\n\
    \   The registry contains the following two items:\n   URN parameter name:  The\
    \ name of the URN parameter.  If the name is\n       \"paramname\", the resulting\
    \ top-level URN will be\n       \"urn:ietf:params:sieve:paramname\".\n   Reference:\
    \  The document and section where the definition of the\n       parameter can\
    \ be found.  Be sure to include the section number as\n       well as the document\
    \ reference, so the documentation is easy to\n       find.\n   The documentation\
    \ -- which will be in the referenced document and\n   section, and will not be\
    \ included in the registry -- MUST include the\n   following information (see\
    \ Section 2.6 for an example):\n      URN parameter name:  The name of the URN\
    \ parameter.\n      URN parameter syntax:  The syntax of the parameter and any\
    \ sub-\n          parameters, which SHOULD be specified using ABNF [RFC5234].\n\
    \      Intended usage:  A detailed description of how the parameter and\n    \
    \      any sub-parameters are expected to be used.  This is the place\n      \
    \    to define static sub-parameters, registries for sub-\n          parameters,\
    \ options, registries for options, and so on.\n      Interoperability considerations:\
    \  Any notes specific to\n          interoperability issues.  This is where to\
    \ put mandatory-to-\n          implement sub-parameters and the like.\n      Security\
    \ considerations:  Any notes specific to security and\n          privacy issues.\n\
    \      Contact:  Contact information, in case there are questions.\n"
- title: 4.4.  Registration of the "addrbook" URN parameter
  contents:
  - "4.4.  Registration of the \"addrbook\" URN parameter\n   IANA has registered\
    \ a new Sieve URN parameter in the registry defined\n   in Section 4.3.\n   URN\
    \ parameter name:  addrbook\n   Reference:  RFC 6134, Section 2.6\n"
- title: 4.5.  Registration of "sieve" URN sub-namespace
  contents:
  - "4.5.  Registration of \"sieve\" URN sub-namespace\n   IANA has registered a new\
    \ URN sub-namespace within the IETF URN Sub-\n   namespace for Registered Protocol\
    \ Parameter Identifiers defined in\n   [RFC3553].\n   Registry name:  sieve\n\
    \   Specification:  RFC 6134\n   Repository:  Sieve URN Parameters registry (Section\
    \ 4.3)\n   Index value:  Sub-parameters MUST be specified in UTF-8, using\n  \
    \     standard URI encoding where necessary.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   Thanks to Alexandros Vellis, Nigel Swinson, Ned Freed,\
    \ Kjetil Torgrim\n   Homme, Dave Cridland, Cyrus Daboo, Pete Resnick, and Robert\
    \ Burrell\n   Donkin for ideas, comments, and suggestions.  Kristin Hubner also\n\
    \   helped greatly with the examples.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n\
    \              Resource Identifier (URI): Generic Syntax\", STD 66,\n        \
    \      RFC 3986, January 2005.\n   [RFC4151]  Kindberg, T. and S. Hawke, \"The\
    \ 'tag' URI Scheme\",\n              RFC 4151, October 2005.\n   [RFC5226]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5228]\
    \  Guenther, P. and T. Showalter, \"Sieve: An Email Filtering\n              Language\"\
    , RFC 5228, January 2008.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented\
    \ BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234, January\
    \ 2008.\n   [RFC5804]  Melnikov, A. and T. Martin, \"A Protocol for Remotely\n\
    \              Managing Sieve Scripts\", RFC 5804, July 2010.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [CardDAV]  Daboo, C., \"vCard Extensions to\
    \ WebDAV (CardDAV)\", Work\n              in Progress, November 2009.\n   [RFC2244]\
    \  Newman, C. and J. Myers, \"ACAP -- Application\n              Configuration\
    \ Access Protocol\", RFC 2244, November 1997.\n   [RFC3553]  Mealling, M., Masinter,\
    \ L., Hardie, T., and G. Klyne, \"An\n              IETF URN Sub-namespace for\
    \ Registered Protocol\n              Parameters\", BCP 73, RFC 3553, June 2003.\n\
    \   [RFC4510]  Zeilenga, K., \"Lightweight Directory Access Protocol\n       \
    \       (LDAP): Technical Specification Road Map\", RFC 4510,\n              June\
    \ 2006.\n   [RFC5229]  Homme, K., \"Sieve Email Filtering: Variables Extension\"\
    ,\n              RFC 5229, January 2008.\n   [RFC5231]  Segmuller, W. and B. Leiba,\
    \ \"Sieve Email Filtering:\n              Relational Extension\", RFC 5231, January\
    \ 2008.\n   [RFC5233]  Murchison, K., \"Sieve Email Filtering: Subaddress\n  \
    \            Extension\", RFC 5233, January 2008.\n   [RFC5235]  Daboo, C., \"\
    Sieve Email Filtering: Spamtest and Virustest\n              Extensions\", RFC\
    \ 5235, January 2008.\n   [RFC5260]  Freed, N., \"Sieve Email Filtering: Date\
    \ and Index\n              Extensions\", RFC 5260, July 2008.\n   [RFC5435]  Melnikov,\
    \ A., Leiba, B., Segmuller, W., and T. Martin,\n              \"Sieve Email Filtering:\
    \ Extension for Notifications\",\n              RFC 5435, January 2009.\n   [RFC5437]\
    \  Saint-Andre, P. and A. Melnikov, \"Sieve Notification\n              Mechanism:\
    \ Extensible Messaging and Presence Protocol\n              (XMPP)\", RFC 5437,\
    \ January 2009.\n   [RFC5463]  Freed, N., \"Sieve Email Filtering: Ihave Extension\"\
    ,\n              RFC 5463, March 2009.\n   [RFC5703]  Hansen, T. and C. Daboo,\
    \ \"Sieve Email Filtering: MIME Part\n              Tests, Iteration, Extraction,\
    \ Replacement, and Enclosure\",\n              RFC 5703, October 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alexey Melnikov\n   Isode Limited\n   5 Castle Business\
    \ Village\n   36 Station Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n   EMail:\
    \ Alexey.Melnikov@isode.com\n   Barry Leiba\n   Huawei Technologies\n   Phone:\
    \ +1 646 827 0648\n   EMail: barryleiba@computer.org\n   URI:   http://internetmessagingtechnology.org/\n"
