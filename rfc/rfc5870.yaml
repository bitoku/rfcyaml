- contents:
  - '   A Uniform Resource Identifier for Geographic Locations (''geo'' URI)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies a Uniform Resource Identifier (URI) for\n
    \  geographic locations using the 'geo' scheme name.  A 'geo' URI\n   identifies
    a physical location in a two- or three-dimensional\n   coordinate reference system
    in a compact, simple, human-readable, and\n   protocol-independent way.  The default
    coordinate reference system\n   used is the World Geodetic System 1984 (WGS-84).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5870.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  4\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .
    . . . .  5\n   3.  IANA Registration of the 'geo' URI Scheme  . . . . . . . .
    . .  6\n     3.1.  URI Scheme Name  . . . . . . . . . . . . . . . . . . . . .
    \ 6\n     3.2.  Status . . . . . . . . . . . . . . . . . . . . . . . . . .  6\n
    \    3.3.  URI Scheme Syntax  . . . . . . . . . . . . . . . . . . . .  6\n     3.4.
    \ URI Scheme Semantics . . . . . . . . . . . . . . . . . . .  7\n       3.4.1.
    \ Coordinate Reference System Identification . . . . . .  7\n       3.4.2.  Component
    Description for WGS-84 . . . . . . . . . . .  8\n       3.4.3.  Location Uncertainty
    . . . . . . . . . . . . . . . . .  8\n       3.4.4.  URI Comparison . . . . .
    . . . . . . . . . . . . . . .  9\n       3.4.5.  Interpretation of Undefined Altitude
    . . . . . . . . . 10\n     3.5.  Encoding Considerations  . . . . . . . . . .
    . . . . . . . 10\n     3.6.  Applications/Protocols That Use This URI Scheme  .
    . . . . 11\n     3.7.  Interoperability Considerations  . . . . . . . . . . .
    . . 11\n     3.8.  Security Considerations  . . . . . . . . . . . . . . . . .
    11\n     3.9.  Contact  . . . . . . . . . . . . . . . . . . . . . . . . . 11\n
    \    3.10. Author/Change Controller . . . . . . . . . . . . . . . . . 12\n     3.11.
    References . . . . . . . . . . . . . . . . . . . . . . . . 12\n   4.  'geo' URI
    Parameters Registry  . . . . . . . . . . . . . . . . 12\n   5.  URI Operations
    . . . . . . . . . . . . . . . . . . . . . . . . 13\n   6.  Use Cases and Examples
    . . . . . . . . . . . . . . . . . . . . 13\n     6.1.  Plain 'geo' URI Example
    \ . . . . . . . . . . . . . . . . . 13\n     6.2.  Hyperlink  . . . . . . . .
    . . . . . . . . . . . . . . . . 14\n     6.3.  'geo' URI in 2-Dimensional Barcode
    . . . . . . . . . . . . 15\n     6.4.  Comparison Examples  . . . . . . . . .
    . . . . . . . . . . 15\n   7.  GML Mappings . . . . . . . . . . . . . . . . .
    . . . . . . . . 16\n     7.1.  2D GML 'Point' . . . . . . . . . . . . . . . .
    . . . . . . 17\n     7.2.  3D GML 'Point' . . . . . . . . . . . . . . . . . .
    . . . . 17\n     7.3.  GML 'Circle' . . . . . . . . . . . . . . . . . . . . .
    . . 17\n     7.4.  GML 'Sphere' . . . . . . . . . . . . . . . . . . . . . . .
    18\n   8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 18\n
    \    8.1.  'geo' URI Scheme . . . . . . . . . . . . . . . . . . . . . 18\n     8.2.
    \ URI Parameter Registry . . . . . . . . . . . . . . . . . . 19\n       8.2.1.
    \ Registry Contents  . . . . . . . . . . . . . . . . . . 19\n       8.2.2.  Registration
    Policy  . . . . . . . . . . . . . . . . . 19\n     8.3.  Sub-Registry for 'crs'
    Parameter . . . . . . . . . . . . . 20\n       8.3.1.  Registry Contents  . .
    . . . . . . . . . . . . . . . . 20\n       8.3.2.  Registration Policy  . . .
    . . . . . . . . . . . . . . 20\n   9.  Security Considerations  . . . . . . .
    . . . . . . . . . . . . 20\n     9.1.  Invalid Locations  . . . . . . . . . .
    . . . . . . . . . . 21\n     9.2.  Location Privacy . . . . . . . . . . . . .
    . . . . . . . . 21\n   10. Acknowledgements . . . . . . . . . . . . . . . . .
    . . . . . . 21\n   11. References . . . . . . . . . . . . . . . . . . . . . .
    . . . . 22\n     11.1. Normative References . . . . . . . . . . . . . . . . .
    . . 22\n     11.2. Informative References . . . . . . . . . . . . . . . . . .
    22\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   An increasing number of Internet protocols and data formats
    are\n   extended by specifications for adding spatial (geographic) location.\n
    \  In most cases, latitude as well as longitude of simple points are\n   added
    as new attributes to existing data structures.  However, all\n   those methods
    are very specific to a certain data format or protocol,\n   and don't provide
    a protocol-independent, compact, and generic way to\n   refer to a physical geographic
    location.\n   Location-aware applications and location-based services are fast\n
    \  emerging on the Internet.  Most web search engines use geographic\n   information,
    and a vivid open source mapping community has brought an\n   enormous momentum
    into location aware technology.  A wide range of\n   tools and data sets that
    formerly were accessible to professionals\n   only recently have become available
    to a wider audience.\n   The 'geo' URI scheme is another step in that direction
    and aims to\n   facilitate, support, and standardize the problem of location\n
    \  identification in geospatial services and applications.  Accessing\n   information
    about a particular location or triggering further\n   services shouldn't be any
    harder than clicking on a 'mailto:' link\n   and writing an email straight away.\n
    \  According to [RFC3986], a Uniform Resource Identifier (URI) is \"a\n   compact
    sequence of characters that identifies an abstract or\n   physical resource\".
    \ The 'geo' URI scheme defined in this document\n   identifies geographic locations
    (physical resources) in a coordinate\n   reference system (CRS), which is, by
    default, the World Geodetic\n   System 1984 (WGS-84) [WGS84].  The scheme provides
    the textual\n   representation of the location's spatial coordinates in either
    two or\n   three dimensions (latitude, longitude, and optionally altitude for\n
    \  the default CRS of WGS-84).  An example of such a 'geo' URI follows:\n      geo:13.4125,103.8667\n
    \  Such URIs are independent from a specific protocol, application, or\n   data
    format, and can be used in any other protocol or data format\n   that supports
    inclusion of arbitrary URIs.\n   For the sake of usability, the definition of
    the URI scheme is\n   strictly focused on the simplest, but also most common representation\n
    \  of a spatial location -- a single point in a well known CRS.  The\n   provision
    of more complex geometries or locations described by civic\n   addresses is out
    of scope of this document.\n   The optional 'crs' URI parameter described below
    may be used by\n   future specifications to define the use of CRSes other than
    WGS-84.\n   This is primarily intended to cope with the case of another CRS\n
    \  replacing WGS-84 as the predominantly used one, rather than allowing\n   the
    arbitrary use of thousands of CRSes for the URI (which would\n   clearly affect
    interoperability).  The definition of 'crs' values\n   beyond the default of \"wgs84\"
    is therefore out of scope of this\n   document.\n   This specification discourages
    use of alternate CRSes in use cases\n   where comparison is an important function.\n
    \  Note: The choice of WGS-84 as the default CRS is based on the\n   widespread
    availability of Global Positioning System (GPS) devices,\n   which use the WGS-84
    reference system.  It is anticipated that such\n   devices will serve as one of
    the primary data sources for authoring\n   'geo' URIs, hence the adoption of the
    native GPS reference system for\n   the URI scheme.  Also, many other data formats
    for representing\n   geographic locations use the WGS-84 reference system, which
    makes\n   transposing from and to such data formats less error prone (no re-\n
    \  projection involved).  It is also believed that the burden of\n   potentially
    required spatial transformations should be put on the\n   author rather then the
    consumer of 'geo' URI instances.\n   Because of their similar structure, 'geo'
    URI instances can also be\n   mapped from and to certain ISO 6709 [ISO.6709.2008]
    string\n   representations of geographic point locations.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   Geographic locations in this document are defined using WGS-84
    (World\n   Geodetic System 1984), which is equivalent to the International\n   Association
    of Oil & Gas Producers (OGP) Surveying and Positioning\n   Committee EPSG (European
    Petroleum Survey Group) codes 4326 (2\n   dimensions) and 4979 (3 dimensions).
    \ This document does not assign\n   responsibilities for coordinate transformations
    from and to other\n   Spatial Reference Systems.\n   A 2-dimensional WGS-84 coordinate
    value is represented here as a\n   comma-delimited latitude/longitude pair, measured
    in decimal degrees\n   (un-projected).  A 3-dimensional WGS-84 coordinate value
    is\n   represented here by appending a comma-delimited altitude value in\n   meters
    to such pairs.\n   Latitudes range from -90 to 90 and longitudes range from -180
    to 180.\n   Coordinates in the Southern and Western hemispheres as well as\n   altitudes
    below the WGS-84 reference geoid (depths) are signed\n   negative with a leading
    dash.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL
    NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 2.  Terminology
- contents:
  - "3.  IANA Registration of the 'geo' URI Scheme\n   This section contains the fields
    required for the URI scheme\n   registration, following the guidelines in Section
    5.4 of [RFC4395].\n"
  - contents:
    - "3.1.  URI Scheme Name\n   geo\n"
    title: 3.1.  URI Scheme Name
  - contents:
    - "3.2.  Status\n   permanent\n"
    title: 3.2.  Status
  - contents:
    - "3.3.  URI Scheme Syntax\n   The syntax of the 'geo' URI scheme is specified
      below in Augmented\n   Backus-Naur Form (ABNF) [RFC5234]:\n             geo-URI
      \      = geo-scheme \":\" geo-path\n             geo-scheme    = \"geo\"\n             geo-path
      \     = coordinates p\n             coordinates   = coord-a \",\" coord-b [
      \",\" coord-c ]\n             coord-a       = num\n             coord-b       =
      num\n             coord-c       = num\n             p             = [ crsp ]
      [ uncp ] *parameter\n             crsp          = \";crs=\" crslabel\n             crslabel
      \     = \"wgs84\" / labeltext\n             uncp          = \";u=\" uval\n             uval
      \         = pnum\n             parameter     = \";\" pname [ \"=\" pvalue ]\n
      \            pname         = labeltext\n             pvalue        = 1*paramchar\n
      \            paramchar     = p-unreserved / unreserved / pct-encoded\n             labeltext
      \    = 1*( alphanum / \"-\" )\n             pnum          = 1*DIGIT [ \".\"
      1*DIGIT ]\n             num           = [ \"-\" ] pnum\n             unreserved
      \   = alphanum / mark\n             mark          = \"-\" / \"_\" / \".\" /
      \"!\" / \"~\" / \"*\" /\n                             \"'\" / \"(\" / \")\"\n
      \            pct-encoded   = \"%\" HEXDIG HEXDIG\n             p-unreserved
      \ = \"[\" / \"]\" / \":\" / \"&\" / \"+\" / \"$\"\n             alphanum      =
      ALPHA / DIGIT\n   Parameter names are case insensitive, but use of the lowercase\n
      \  representation is preferred.  Case sensitivity of non-numeric\n   parameter
      values MUST be described in the specification of the\n   respective parameter.
      \ For the 'crs' parameter, values are case\n   insensitive, and lowercase is
      preferred.\n   Both 'crs' and 'u' parameters MUST NOT appear more than once
      each.\n   The 'crs' and 'u' parameters MUST be given before any other\n   parameters
      that may be defined in future extensions.  The 'crs'\n   parameter MUST be given
      first if both 'crs' and 'u' are used.  The\n   definition of other parameters,
      and <crslabel> values beyond the\n   default value of \"wgs84\" is out of the
      scope of this document.\n   Section 8.2 discusses the IANA registration of such
      additional\n   parameters and values.\n   The value of \"-0\" for <num> is allowed
      and is identical to \"0\".\n   In case the URI identifies a location in the
      default CRS of WGS-84,\n   the <coordinates> sub-components are further restricted
      as follows:\n             coord-a        = latitude\n             coord-b        =
      longitude\n             coord-c        = altitude\n             latitude       =
      [ \"-\" ] 1*2DIGIT [ \".\" 1*DIGIT ]\n             longitude      = [ \"-\"
      ] 1*3DIGIT [ \".\" 1*DIGIT ]\n             altitude       = [ \"-\" ] 1*DIGIT
      [ \".\" 1*DIGIT ]\n"
    title: 3.3.  URI Scheme Syntax
  - contents:
    - "3.4.  URI Scheme Semantics\n   Data contained in a 'geo' URI identifies a physical
      resource: a\n   spatial location identified by the geographic coordinates and
      the CRS\n   encoded in the URI.\n"
    - contents:
      - "3.4.1.  Coordinate Reference System Identification\n   The semantics of <coordinates>
        depends on the CRS of the URI.  The\n   CRS itself is identified by the optional
        'crs' parameter.  A URI\n   instance uses the default WGS-84 CRS if the 'crs'
        parameter is either\n   missing or contains the value of 'wgs84'.  Other <crslabel>
        values\n   are currently not defined, but may be specified by future documents.\n
        \  Interpretation of coordinates in the wrong CRS produces invalid\n   location
        information.  Consumers of 'geo' URIs therefore MUST NOT\n   ignore the 'crs'
        parameter if given, and MUST NOT interpret the\n   <coordinates> sub-components
        without considering and understanding\n   the 'crs' parameter value.\n   The
        following component description refers to the use of the default\n   CRS (WGS-84)
        only.  Future documents specifying other 'crs' parameter\n   values MUST provide
        similar descriptions for the <coordinates> sub-\n   components in the described
        CRS.\n"
      title: 3.4.1.  Coordinate Reference System Identification
    - contents:
      - "3.4.2.  Component Description for WGS-84\n   The <latitude>, <longitude>,
        and <altitude> components as specified\n   in the URI scheme syntax (Section
        3.3) are to be used as follows:\n   o  <latitude> MUST contain the latitude
        of the identified location in\n      decimal degrees in the reference system
        WGS-84.\n   o  <longitude> MUST contain the longitude of the identified location\n
        \     in decimal degrees in the reference system WGS-84.\n   o  If present,
        the OPTIONAL <altitude> MUST contain the altitude of\n      the identified
        location in meters in the reference system WGS-84.\n   If the altitude of
        the location is unknown, <altitude> (and the comma\n   before) MUST NOT be
        present in the URI.  Specifically, unknown\n   altitude MUST NOT be represented
        by setting <altitude> to \"0\" (or any\n   other arbitrary value).\n   The
        <longitude> of coordinate values reflecting the poles (<latitude>\n   set
        to -90 or 90 degrees) SHOULD be set to \"0\", although consumers of\n   'geo'
        URIs MUST accept such URIs with any longitude value from -180\n   to 180.\n
        \  'geo' URIs with longitude values outside the range of -180 to 180\n   decimal
        degrees or with latitude values outside the range of -90 to\n   90 degrees
        MUST be considered invalid.\n"
      title: 3.4.2.  Component Description for WGS-84
    - contents:
      - "3.4.3.  Location Uncertainty\n   The 'u' (\"uncertainty\") parameter indicates
        the amount of uncertainty\n   in the location as a value in meters.  Where
        a 'geo' URI is used to\n   identify the location of a particular object, <uval>
        indicates the\n   uncertainty with which the identified location of the subject
        is\n   known.\n   The 'u' parameter is optional and it can appear only once.
        \ If it is\n   not specified, this indicates that uncertainty is unknown or\n
        \  unspecified.  If the intent is to indicate a specific point in space,\n
        \  <uval> MAY be set to zero.  Zero uncertainty and absent uncertainty\n   are
        never the same thing.\n   The single uncertainty value is applied to all dimensions
        given in\n   the URI.\n   Note: The number of digits of the values in <coordinates>
        MUST NOT be\n   interpreted as an indication to the level of uncertainty.\n"
      title: 3.4.3.  Location Uncertainty
    - contents:
      - "3.4.4.  URI Comparison\n   Comparison of URIs intends to determine whether
        two URI strings are\n   equivalent and identify the same resource (rather
        than comparing the\n   resources themselves).  Therefore, a comparison of
        two 'geo' URIs\n   does not compare spatial objects, but only the strings
        (URIs)\n   identifying those objects.\n   The term \"mathematically identical\"
        used below specifies that some\n   components of the URI MUST be compared
        as normalized numbers rather\n   than strings to account for the variety in
        string representations of\n   identical numbers (for example, the strings
        \"43.10\" and \"43.1\" are\n   different, but represent the same number).\n
        \  Two 'geo' URIs are equal only if they fulfill all of the following\n   general
        comparison rules:\n   o  Both URIs use the same CRS, which means that either
        both have the\n      'crs' parameter omitted, or both have the same <crslabel>
        value,\n      or one has the 'crs' parameter omitted while the other URI\n
        \     specifies the default CRS explicitly with a <crslabel> value of\n      \"wgs84\".\n
        \  o  Their <coord-a>, <coord-b>, <coord-c> and 'u' values are\n      mathematically
        identical (including absent <uval> meaning\n      undefined 'u' value).\n
        \  o  Their sets of other parameters are equal, with comparison\n      operations
        applied on each parameter as described in its\n      respective specification.\n
        \  Parameter order is not significant for URI comparison.\n   Since new parameters
        may be registered over time, legacy\n   implementations of the 'geo' URI might
        encounter unknown parameters.\n   In such cases, the following rules apply:\n
        \  o  Two 'geo' URIs with unknown parameters are equivalent only if the\n
        \     same set of unknown parameter names appears in each URI, and their\n
        \     values are bitwise identical after percent-decoding.\n   o  Otherwise,
        the comparison operation for the respective URIs is\n      undefined (since
        the legacy implementation cannot be aware of the\n      comparison rules for
        those parameters).\n   Designers of future extension parameters should take
        this into\n   account when choosing the comparison rules for new parameters.\n
        \  A URI with an undefined (missing) <coord-c> (altitude) value MUST NOT\n
        \  be considered equal to a URI containing a <coord-c>, even if the\n   remaining
        <coord-a>, <coord-b>, and 'u' values are equivalent.\n   For the default CRS
        of WGS-84, the following comparison rules apply\n   additionally:\n   o  Where
        <latitude> of a 'geo' URI is set to either 90 or -90\n      degrees, <longitude>
        MUST be ignored in comparison operations\n      (\"poles case\").\n   o  A
        <longitude> of 180 degrees MUST be considered equal to\n      <longitude>
        of -180 degrees for the purpose of URI comparison\n      (\"date line\" case).\n"
      title: 3.4.4.  URI Comparison
    - contents:
      - "3.4.5.  Interpretation of Undefined Altitude\n   A consumer of a 'geo' URI
        in the WGS-84 CRS with undefined <altitude>\n   MAY assume that the URI refers
        to the respective location on Earth's\n   physical surface at the given latitude
        and longitude.\n   However, as defined above, altitudes are relative to the
        WGS-84\n   reference geoid rather than Earth's surface.  Hence, an <altitude>\n
        \  value of 0 MUST NOT be mistaken to refer to \"ground elevation\".\n"
      title: 3.4.5.  Interpretation of Undefined Altitude
    title: 3.4.  URI Scheme Semantics
  - contents:
    - "3.5.  Encoding Considerations\n   The <coordinates> path component of the 'geo'
      URI (see Section 3.3)\n   uses a comma (\",\") as the delimiter for subcomponents.
      \ This\n   delimiter MUST NOT be percent-encoded.\n   It is RECOMMENDED that
      for readability the contents of <coord-a>,\n   <coord-b>, and <coord-c> as well
      as <crslabel> and <uval> are never\n   percent-encoded.\n   Regarding internationalization,
      the currently specified components do\n   allow for ASCII characters exclusively,
      and therefore don't require\n   internationalization.  Future specifications
      of additional parameters\n   might allow the introduction of non-ASCII values.
      \ Such\n   specifications MUST describe internationalization considerations
      for\n   those parameters and their values, and MUST require percent-encoding\n
      \  of non-ASCII values.\n"
    title: 3.5.  Encoding Considerations
  - contents:
    - "3.6.  Applications/Protocols That Use This URI Scheme\n   As many other URI
      scheme definitions, the 'geo' URI provides resource\n   identification independent
      of a specific application or protocol.\n   Examples of potential protocol mappings
      and use cases can be found in\n   Section 6.\n"
    title: 3.6.  Applications/Protocols That Use This URI Scheme
  - contents:
    - "3.7.  Interoperability Considerations\n   Like other new URI schemes, the 'geo'
      URI requires support in client\n   applications.  Users of applications that
      are not aware of the 'geo'\n   scheme are likely not able to make direct use
      of the information in\n   the URI.  However, a client can make indirect use
      by passing around\n   'geo' URIs, even without understanding the format and
      semantics of\n   the scheme.  Additionally, the simple structure of 'geo' URIs
      would\n   allow even manual dereference by humans.\n   Clients MUST NOT attempt
      to dereference 'geo' URIs given in a CRS\n   that is unknown to the client,
      because doing so would produce\n   entirely bogus results.\n   Authors of 'geo'
      URIs should carefully check that coordinate\n   components are set in the right
      CRS and in the specified order, since\n   the wrong order of those components
      (or use of coordinates in a\n   different CRS without transformation) are commonly
      observed mistakes\n   producing completely bogus locations.\n   The number of
      digits in the <coordinates> values MUST NOT be\n   interpreted as an indication
      of a certain level of accuracy or\n   uncertainty.\n"
    title: 3.7.  Interoperability Considerations
  - contents:
    - "3.8.  Security Considerations\n   See Section 9 of RFC 5870.\n"
    title: 3.8.  Security Considerations
  - contents:
    - "3.9.  Contact\n      Alexander Mayrhofer <axelm@ipcom.at>, <http://geouri.org/>\n
      \     Christian Spanring <christian@spanring.eu>\n"
    title: 3.9.  Contact
  - contents:
    - "3.10.  Author/Change Controller\n   The 'geo' URI scheme is registered under
      the IETF part of the URI\n   tree.  As such, change control is up to the IETF.\n"
    title: 3.10.  Author/Change Controller
  - contents:
    - "3.11.  References\n   RFC 5870\n"
    title: 3.11.  References
  title: 3.  IANA Registration of the 'geo' URI Scheme
- contents:
  - "4.  'geo' URI Parameters Registry\n   This specification creates a new IANA Registry
    named \"'geo' URI\n   Parameters\" registry for the <parameter> component of the
    URI.\n   Parameters for the 'geo' URI and values for these parameters MUST be\n
    \  registered with IANA to prevent namespace collisions and provide\n   interoperability.\n
    \  Some parameters accept values that are constrained by a syntax\n   definition
    only, while others accept values from a predefined set\n   only.  Some parameters
    might not accept any values at all (\"flag\"\n   type parameters).\n   The registration
    of values is REQUIRED for parameters that accept\n   values from a predefined
    set.\n   The specification of a parameter MUST fully explain the syntax,\n   intended
    usage, and semantics of the parameter.  This ensures\n   interoperability between
    independent implementations.\n   For parameters that are neither restricted to
    a set of predefined\n   values nor the \"flag\" type described above, the syntax
    of allowed\n   values MUST be described in the specification, for example by using\n
    \  ABNF.\n   Documents defining new parameters (or new values for existing\n   parameters)
    MUST register them with IANA, as explained in\n   Section 8.2.\n   The 'geo' URI
    Parameter Registry contains a column named \"Value\n   Restriction\" that describes
    whether or not a parameter accepts a\n   value, and whether values are restricted
    to a predefined set.  That\n   column accepts the following values:\n   o  \"No
    value\": The parameter does not accept any values and is to be\n      used as
    a \"flag\" only.\n   o  \"Predefined\": The parameter does accept values from
    a predefined\n      set only, as specified in an RFC or other permanent and readily\n
    \     available public specification.\n   o  \"Constrained\": The parameter accepts
    arbitrary values that are\n      only constrained by a syntax as specified in
    an RFC or other\n      permanent and readily available public specification.\n
    \  Section 8.2.1 contains the initial contents of the Registry.\n"
  title: 4.  'geo' URI Parameters Registry
- contents:
  - "5.  URI Operations\n   Currently, just one operation on a 'geo' URI is defined
    - location\n   dereference: in that operation, a client dereferences the URI by\n
    \  extracting the geographical coordinates from the URI path component\n   <geo-path>.
    \ Further use of those coordinates (and the uncertainty\n   value from <uval>)
    is then up to the application processing the URI,\n   and might depend on the
    context of the URI.\n   An application may then use this location information
    for various\n   purposes, for example:\n   o  A web browser could use that information
    to open a mapping service\n      of the user's choice, and display a map of the
    location.\n   o  A navigational device such as a Global Positioning System (GPS)\n
    \     receiver could offer the user the ability to start navigation to\n      the
    location.\n   Note that the examples and use cases above as well as in the next\n
    \  section are non-normative, and are provided for information only.\n"
  title: 5.  URI Operations
- contents:
  - '6.  Use Cases and Examples

    '
  - contents:
    - "6.1.  Plain 'geo' URI Example\n   The following 3-dimensional 'geo' URI example
      references to the\n   office location of one of the authors in Vienna, Austria:\n
      \  geo:48.2010,16.3695,183\n   Resolution of the URI returns the following information:\n
      \  o  The 'crs' parameter is not given in the URI, which means that the\n      URI
      uses the default CRS of WGS-84.\n   o  The URI includes <coord-c>, is hence
      3-dimensional, and therefore\n      uses 'urn:ogc:def:crs:EPSG::4979' as the
      WGS-84 CRS identifier.\n   o  The <coord-a> value (latitude in WGS-84) is set
      to '48.2010'\n      decimal degrees.\n   o  The <coord-b> value (longitude in
      WGS-84) is set to '16.3695'\n      decimal degrees.\n   o  The <coord-c> value
      (altitude in WGS-84) is set to 183 meters.\n   o  Uncertainty is undefined.\n
      \  A user could type the data extracted from this URI into an electronic\n   navigation
      device, or even use it to locate the identified location\n   on a paper map.\n"
    title: 6.1.  Plain 'geo' URI Example
  - contents:
    - "6.2.  Hyperlink\n   'geo' URIs (like any other URI scheme) could also be embedded
      as\n   hyperlinks in web pages.  A Hyper Text Markup Language (HTML) snippet\n
      \  with such a hyperlink could look like:\n      <p>one of Vienna's popular
      sights is the\n      <a href='geo:48.198634,16.371648;crs=wgs84;u=40'>Karlskirche</a>.\n
      \  Resolution of the URI returns the following information:\n   o  The 'crs'
      is given in the URI and sets the CRS used in the URI to\n      WGS-84 explicitly.\n
      \  o  The URI does omit <coord-c>, is hence 2-dimensional, and therefore\n      uses
      'urn:ogc:def:crs:EPSG::4326' as the WGS-84 CRS identifier.\n   o  The <coord-a>
      value (latitude in WGS-84) is set to '48.198634'\n      decimal degrees.\n   o
      \ The <coord-b> value (longitude in WGS-84) is set to '16.371648'\n      decimal
      degrees.\n   o  The <coord-c> (altitude) value is undefined; therefore, the
      client\n      MAY assume the identified location to be on Earth's physical\n
      \     surface.\n   o  The 'u' parameter is included in the URI, setting uncertainty
      to\n      40 meters.\n   A web browser could use this information from the HTML
      snippet, and\n   offer the user various options (based on configuration, context),
      for\n   example:\n   o  Display a small map thumbnail when the mouse pointer
      hovers over\n      the link.\n   o  Switch to a mapping service of the user's
      choice once the link is\n      selected.\n   o  Locate nearby resources, for
      example by comparing the 'geo' URI\n      with locations extracted from GeoRSS
      feeds to which the user has\n      subscribed.\n   o  Convert the coordinates
      to a format suitable for uploading to a\n      navigation device.\n   Note that
      the URI in this example also makes use of the explicit\n   specification of
      the CRS by using the 'crs' parameter.\n"
    title: 6.2.  Hyperlink
  - contents:
    - "6.3.  'geo' URI in 2-Dimensional Barcode\n   Due to it's short length, a 'geo'
      URI could easily be encoded in\n   2-dimensional barcodes.  Such barcodes could
      be printed on business\n   cards, flyers, and paper maps, and subsequently used
      by mobile\n   devices, for example as follows:\n   1.  User identifies such
      a barcode on a flyer and uses the camera on\n       his mobile phone to photograph
      and decode the barcode.\n   2.  The mobile phone dereferences the 'geo' URI,
      and offers the user\n       the ability to calculate a navigation route to the
      identified\n       location.\n   3.  Using the builtin GPS receiver, the user
      follows the navigation\n       instructions to reach the location.\n"
    title: 6.3.  'geo' URI in 2-Dimensional Barcode
  - contents:
    - "6.4.  Comparison Examples\n   This section provides examples of URI comparison.
      \ Note that the\n   unknown parameters 'foo' and 'bar' and unregistered 'crs'
      values in\n   this section are used for illustrative purposes only, and their\n
      \  inclusion in the examples below does not constitute any formal\n   parameter
      definition or registration request.\n   o  The two URIs <geo:90,-22.43;crs=WGS84>
      and <geo:90,46> are equal,\n      because both use the same CRS, and even though
      the longitude\n      values are different, both reflect a location on the north
      pole\n      (special \"poles\" rule for WGS-84 applies - longitude is to be\n
      \     ignored).  Note that the 'crs' parameter values are case\n      insensitive.\n
      \  o  The URIs <geo:22.300;-118.44> and <geo:22.3;-118.4400> are equal,\n      because
      their coordinate components are mathematically identical.\n   o  The set of
      <geo:66,30;u=6.500;FOo=this%2dthat> and <geo:\n      66.0,30;u=6.5;foo=this-that>
      are identical, because the value of\n      the unknown parameter 'foo' is bitwise
      identical after percent-\n      decoding; parameter names are case insensitive,
      and coordinates\n      and uncertainty are mathematically identical.\n   o  The
      comparison operation on <geo:70,20;foo=1.00;bar=white> and\n      <geo:70,20;foo=1;bar=white>
      in a legacy implementation is\n      undefined, because the normalization rules
      for 'foo' are not\n      known, and hence the implementation cannot identify
      whether or not\n      '1.00' is identical to '1' for the 'foo' parameter.\n
      \  o  Comparing <geo:47,11;foo=blue;bar=white> and <geo:\n      47,11;bar=white;foo=blue>
      returns true, because parameter order is\n      insignificant in comparison
      operations.\n   o  The comparison operation on <geo:22,0;bar=Blue> and <geo:\n
      \     22,0;BAR=blue> is undefined, because even though parameter names\n      are
      case insensitive, this is not necessarily the case for the\n      values of
      the unknown 'bar' parameter.\n"
    title: 6.4.  Comparison Examples
  title: 6.  Use Cases and Examples
- contents:
  - "7.  GML Mappings\n   The Geographic Markup Language (GML) by the Open Geospatial\n
    \  Consortium (OGC) is a set of XML schemas that represent geographical\n   features.
    \ Since GML is widely accepted, this document includes\n   instructions on how
    to transform 'geo' URIs from and to GML\n   fragments.  The instructions in this
    section are not normative.\n   For the following sections, \"%lat%\", \"%lon%\",
    \"%alt%\", and \"%unc%\"\n   are placeholders for latitude, longitude, altitude,
    and uncertainty\n   values, respectively.  The mappings use WGS-84 and are defined
    in the\n   following sections.\n   Note: GML fragments in other reference systems
    could be used as well\n   if a transformation into \"urn:ogc:def:crs:EPSG::4979\"
    or\n   \"urn:ogc:def:crs:EPSG::4326\" is defined and applied before the\n   mapping
    step.  Such transformations are typically not lossless.\n   GML uses the 'double'
    type from XML schema, and the mapping examples\n   assume that numbers in the
    form of \"3.32435e2\" in GML are properly\n   converted to fixed point when placed
    into the 'geo' URI.\n"
  - contents:
    - "7.1.  2D GML 'Point'\n   A 2D GML 'Point' [RFC5491] is constructed from a 'geo'
      URI that has\n   two coordinates and an uncertainty ('u') parameter that is
      absent or\n   zero.  A GML point is always converted to a 'geo' URI that has
      no\n   uncertainty parameter.\n   'geo' URI:\n      geo:%lat%,%lon%\n   GML
      fragment:\n     <Point srsName=\"urn:ogc:def:crs:EPSG::4326\"\n            xmlns=\"http://www.opengis.net/gml\">\n
      \      <pos>%lat% %lon%</pos>\n     </Point>\n   Note that a 'geo' URI with
      an uncertainty value of zero is converted\n   to a GML 'Point', but a GML 'Point'
      cannot be translated to a 'geo'\n   URI with zero uncertainty.\n"
    title: 7.1.  2D GML 'Point'
  - contents:
    - "7.2.  3D GML 'Point'\n   A 3D GML 'Point' [RFC5491] is constructed from a 'geo'
      URI that has\n   three coordinates and an uncertainty parameter that is absent
      or\n   zero.  A GML point is always converted to a 'geo' URI that has no\n   uncertainty
      parameter.\n   'geo' URI:\n      geo:%lat%,%lon%,%alt%\n   GML fragment:\n     <Point
      srsName=\"urn:ogc:def:crs:EPSG::4979\"\n            xmlns=\"http://www.opengis.net/gml\">\n
      \      <pos>%lat% %lon% %alt%</pos>\n     </Point>\n"
    title: 7.2.  3D GML 'Point'
  - contents:
    - "7.3.  GML 'Circle'\n   A GML 'Circle' [RFC5491] is constructed from a 'geo'
      URI that has two\n   coordinates and an uncertainty parameter that is present
      and non-\n   zero.\n   'geo' URI:\n      geo:%lat%,%lon%;u=%unc%\n   GML fragment:\n
      \     <gs:Circle srsName=\"urn:ogc:def:crs:EPSG::4326\"\n                 xmlns:gml=\"http://www.opengis.net/gml\"\n
      \                xmlns:gs=\"http://www.opengis.net/pidflo/1.0\">\n        <gml:pos>%lat%
      %lon%</gml:pos>\n        <gs:radius uom=\"urn:ogc:def:uom:EPSG::9001\">\n          %unc%\n
      \       </gs:radius>\n      </gs:Circle>\n"
    title: 7.3.  GML 'Circle'
  - contents:
    - "7.4.  GML 'Sphere'\n   A GML 'sphere' [RFC5491] is constructed from a 'geo'
      URI that has\n   three coordinates and an uncertainty parameter that is present
      and\n   non-zero.\n   'geo' URI:\n      geo:%lat%,%lon%,%alt%;u=%unc%\n   GML
      fragment:\n      <gs:Sphere srsName=\"urn:ogc:def:crs:EPSG::4979\"\n                 xmlns:gml=\"http://www.opengis.net/gml\"\n
      \                xmlns:gs=\"http://www.opengis.net/pidflo/1.0\">\n        <gml:pos>%lat%
      %lon% %alt%</gml:pos>\n        <gs:radius uom=\"urn:ogc:def:uom:EPSG::9001\">\n
      \         %unc%\n        </gs:radius>\n      </gs:Sphere>\n"
    title: 7.4.  GML 'Sphere'
  title: 7.  GML Mappings
- contents:
  - '8.  IANA Considerations

    '
  - contents:
    - "8.1.  'geo' URI Scheme\n   This document creates the 'geo' URI scheme in the
      IETF part of the\n   URI scheme tree, according to the guidelines in BCP 115
      (RFC 4395)\n   [RFC4395].  The definitions required for the assignment are contained\n
      \  in Section 3.\n"
    title: 8.1.  'geo' URI Scheme
  - contents:
    - "8.2.  URI Parameter Registry\n   This document creates a new IANA Registry
      named \"'geo' URI\n   Parameters\", according to the information in Section
      4 and the\n   definition in this section.\n"
    - contents:
      - "8.2.1.  Registry Contents\n   When registering a new 'geo' URI Parameter,
        the following information\n   MUST be provided:\n   o  Name of the Parameter.\n
        \  o  Whether the Parameter accepts no value (\"No value\"), values from a\n
        \     predefined set (\"Predefined\"), or values constrained by a syntax\n
        \     only (\"Constrained\").\n   o  Reference to the RFC or other permanent
        and readily available\n      public specification defining the parameters
        and the new values.\n   Unless specific instructions exist for a Parameter
        (like the\n   definition of a Sub-registry), the following information MUST
        be\n   provided when registering new values for existing \"Predefined\" 'geo'\n
        \  URI Parameters:\n   o  Name of the Parameter.\n   o  Reference to the RFC
        or other permanent and readily available\n      public specification defining
        the new values.\n   The following table provides the initial values for this
        registry:\n       Parameter Name          Value Restriction     Reference(s)\n
        \      ----------------------------------------------------------\n       crs
        \                    Predefined            [RFC5870]\n       u                       Constrained
        \          [RFC5870]\n"
      title: 8.2.1.  Registry Contents
    - contents:
      - "8.2.2.  Registration Policy\n   The Registration Policy for 'geo' URI Parameters
        and their value\n   definitions is \"Specification Required\" (which implies
        \"Designated\n   Expert\"), as defined in [RFC5226].\n"
      title: 8.2.2.  Registration Policy
    title: 8.2.  URI Parameter Registry
  - contents:
    - "8.3.  Sub-Registry for 'crs' Parameter\n   This document creates a new IANA
      Sub-registry named \"'geo' URI 'crs'\n   Parameter Values\", based on the Registry
      specified in Section 8.2 and\n   the information in this section and Section
      4.  The syntax of the\n   'crs' parameter is constrained by the ABNF given in
      Section 3.3.\n"
    - contents:
      - "8.3.1.  Registry Contents\n   When registering a new value for the 'crs'
        parameter, the following\n   information MUST be provided:\n   o  Value of
        the parameter.\n   o  Reference to the RFC or other permanent and readily
        available\n      public specification defining the use of the CRS in the scope
        of\n      the 'geo' URI.  The specification should contain information that\n
        \     is similar to the WGS-84-specific text given in this document.\n   o
        \ Reference to the definition document of the CRS.  If a URN is\n      assigned
        to the CRS, the use of such URN as reference is\n      preferred.  Note that
        different URNs may exist for the\n      2-dimensional and 3-dimensional case.\n
        \  The following table provides the initial values for this registry:\n         crs
        Value     CRS definition(s)               Reference(s)\n         -----------------------------------------------------------\n
        \        wgs84         urn:ogc:def:crs:EPSG::4326      [RFC5870]\n                       urn:ogc:def:crs:EPSG::4979
        \     [RFC5870]\n"
      title: 8.3.1.  Registry Contents
    - contents:
      - "8.3.2.  Registration Policy\n   The registration policy for the \"'geo' URI
        'crs' Parameter Values\"\n   Registry shall require both \"Specification Required\"
        and \"IESG\n   Approval\", as defined in [RFC5226].\n   Section 1 contains
        some text about the motivation for when to\n   introduce new 'crs' values.\n"
      title: 8.3.2.  Registration Policy
    title: 8.3.  Sub-Registry for 'crs' Parameter
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   Because the 'geo' URI is not tied to any specific
    protocol and\n   identifies a physical location rather than a network resource,
    most\n   of the general security considerations on URIs (Section 7 of RFC\n   3986)
    do not apply.  However, the following (additional) issues\n   apply:\n"
  - contents:
    - "9.1.  Invalid Locations\n   The URI syntax (Section 3.3) makes it possible
      to construct 'geo'\n   URIs that don't identify a valid location.  Applications
      MUST NOT use\n   URIs with such values and SHOULD warn the user when such URIs
      are\n   encountered.\n   An example of such a URI referring to an invalid location
      would be\n   <geo:94,0> (latitude \"beyond\" north pole).\n"
    title: 9.1.  Invalid Locations
  - contents:
    - "9.2.  Location Privacy\n   A 'geo' URI by itself is just an opaque reference
      to a physical\n   location, expressed by a set of spatial coordinates.  This
      does not\n   fit the \"Location Information\" definition according to Section
      5.2 of\n   GEOPRIV Requirements [RFC3693], because there is not necessarily
      a\n   \"Device\" involved.\n   Because there is also no way to specify the identity
      of a \"Target\"\n   within the confines of a 'geo' URI, it also does not fit
      the\n   specification of a \"Location Object\" (Section 5.2 of RFC 3693).\n
      \  However, if a 'geo' URI is used in a context where it identifies the\n   location
      of a Target, it becomes part of a Location Object and is\n   therefore subject
      to GEOPRIV rules.\n   Therefore, when 'geo' URIs are put into such contexts,
      the privacy\n   requirements of RFC 3693 MUST be met.\n"
    title: 9.2.  Location Privacy
  title: 9.  Security Considerations
- contents:
  - "10.  Acknowledgements\n   Martin Thomson has provided significant text around
    the definition of\n   the \"uncertainty\" parameter and the GML mappings.\n   The
    authors further wish to acknowledge the helpful contributions\n   from Carl Reed,
    Bill McQuillan, Martin Kofal, Andrew Turner, Kim\n   Sanders, Ted Hardie, Cullen
    Jennings, Klaus Darilion, Bjoern\n   Hoehrmann, Alissa Cooper, and Ivan Shmakov.\n
    \  Alfred Hoenes has provided an extremely helpful in-depth review of\n   the
    document.\n"
  title: 10.  Acknowledgements
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC3986]  Berners-Lee, T., Fielding, R., and
      L. Masinter, \"Uniform\n              Resource Identifier (URI): Generic Syntax\",
      STD 66,\n              RFC 3986, January 2005.\n   [RFC2119]  Bradner, S., \"Key
      words for use in RFCs to Indicate\n              Requirement Levels\", BCP 14,
      RFC 2119, March 1997.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented
      BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234, January
      2008.\n   [RFC5491]  Winterbottom, J., Thomson, M., and H. Tschofenig, \"GEOPRIV\n
      \             Presence Information Data Format Location Object (PIDF-LO)\n              Usage
      Clarification, Considerations, and Recommendations\",\n              RFC 5491,
      March 2009.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC4395]  Hansen, T., Hardie, T., and L.
      Masinter, \"Guidelines and\n              Registration Procedures for New URI
      Schemes\", BCP 35,\n              RFC 4395, February 2006.\n   [RFC5226]  Narten,
      T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations
      Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC3693]
      \ Cuellar, J., Morris, J., Mulligan, D., Peterson, J., and\n              J.
      Polk, \"Geopriv Requirements\", RFC 3693, February 2004.\n   [WGS84]    National
      Imagery and Mapping Agency, \"Department of\n              Defense World Geodetic
      System 1984, Third Edition\",\n              NIMA TR8350.2, January 2000.\n
      \  [ISO.6709.2008]\n              International Organization for Standardization,
      \"Standard\n              representation of geographic point location by\n              coordinates\",
      ISO Standard 6709, 2008.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   Alexander Mayrhofer\n   IPCom GmbH\n   Karlsplatz 1/2/9\n
    \  Wien  A-1010\n   Austria\n   Phone: +43 1 5056416 34\n   Email: alexander.mayrhofer@ipcom.at\n
    \  URI:   http://www.ipcom.at/\n   Christian   Spanring\n   73 Josephine Ave\n
    \  Somerville  02144\n   Email: christian@spanring.eu\n   URI:   http://www.spanring.eu/\n"
  title: Authors' Addresses
