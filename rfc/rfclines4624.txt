Abstract This memo defines an experimental portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects used for managing Multicast Source Discovery Protocol (MSDP) (RFC 3618) speakers.
This memo defines an experimental portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects used for managing Multicast Source Discovery Protocol (MSDP) [1] speakers.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [7].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [4], STD 58, RFC 2579 [5] and STD 58, RFC 2580 [6].
This MIB module contains four scalars and four tables, one deprecated.
The tables are:  The deprecated Requests Table, containing the longest match table used to determine the peer to send SA Requests to for a given group.
This table is deprecated because Requests were removed from MSDP before it became an RFC.
The Peer Table, containing information on the system's peers.
The Source Active (SA) Cache Table, containing the SA cache entries.
The Mesh Group Table, containing the list of MSDP mesh groups to which this system belongs.
This MIB module uses the IpAddress SYNTAX, making it only suitable for IPv4 systems.
Although the desired direction for MIBs is to use InetAddressType/InetAddress pairs to allow both IPv4 and IPv6 (and future formats as well), the MSDP protocol itself is IPv4 only, and the MSDP working group made an explicit decision not to create an IPv6 version of the protocol.
This MIB module is somewhat disorganized, with scalars before and after tables, holes in the OID space, tables with the RowStatus in the middle, and so on.
This is because objects were added and removed as necessary as the MSDP protocol evolved, and the plan was to renumber the whole MIB when moving to the standard mib 2 tree.
The MSDP Working Group then changed direction, publishing the MSDP protocol as Experimental.
Since there were existing implementations using the strange object order under the experimental OID, the WG decided not to renumber the MIB and to publish it as experimental, keeping the experimental OID.
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE, experimental, Counter32, Gauge32, TimeTicks, Integer32, IpAddress FROM SNMPv2 SMI RowStatus, TruthValue, TimeStamp, DisplayString FROM SNMPv2
TC MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2 CONF;
msdpMIB MODULE IDENTITY LAST UPDATED
"200608010000Z" ORGANIZATION "IETF MBONED Working Group" CONTACT INFO "Bill Fenner 75 Willow Road Menlo Park, CA  94025
One Microsoft Way Redmond, WA  98052 Phone:
1 425 703 8835 Email:
: mboned@lists.uoregon.edu" DESCRIPTION "An experimental MIB module for MSDP Management and Monitoring.
This version of this MIB module is part of RFC 4624; see the RFC itself for full legal notices."
REVISION "200608010000Z" DESCRIPTION "Initial version, published as RFC 4624."
{ msdpMIBobjects 1 } msdpEnabled OBJECT TYPE SYNTAX
TruthValue MAX ACCESS read write
"The state of MSDP on this MSDP speaker globally enabled or disabled.
Changes to this object should be stored to non volatile memory."
"The lifetime given to SA cache entries when created or refreshed.
This is the [SG State Period] in the MSDP spec.
A value of 0 means no SA caching is done by this MSDP speaker.
Changes to this object should be stored to non volatile memory.
This object does not measure time per se; instead, it is the delta from the time at which an SA message is received at which it should be expired if not refreshed.
(i.e., it is the value of msdpSACacheExpiryTime immediately after receiving an SA message applying to that row.)
As such, TimeInterval would be a more appropriate SYNTAX; it remains TimeTicks for backwards compatibility."
{ msdp 10 } msdpRPAddress OBJECT TYPE SYNTAX
IpAddress MAX ACCESS read write
The Rendezvous Point (RP) address used when sourcing MSDP SA messages.
May be 0.0.0.0 on non RPs.
Changes to this object should be stored to non volatile memory."
SEQUENCE OF MsdpRequestsEntry MAX ACCESS
deprecated DESCRIPTION "The (conceptual) table listing group ranges and MSDP peers used when deciding where to send an SA Request message, when required.
If SA Requests are not enabled, this table may be empty.
In order to choose a peer to whom to send an SA Request for a given group, G, the subset of entries in this table
whose (msdpRequestsPeerType, msdpRequestsPeer) tuple represents a peer whose msdpPeerState is established are examined.
The set is further reduced by examining only those entries for which msdpPeerRequestsGroupAddressType equals the address type of G.
The entries with the highest value of msdpRequestsGroupPrefix are considered, where the group G falls within the range described by the combination of msdpRequestsGroup and msdpRequestsGroupPrefix.
(This sequence is commonly known as a 'longest match' lookup.)
Finally, if multiple entries remain, the entry with the lowest value of msdpRequestsPriority is chosen.
The SA Request message is sent to the peer described by this row."
An entry (conceptual row) representing a group range used when deciding where to send an SA Request message.
IpAddress MAX ACCESS not accessible
deprecated DESCRIPTION "The group address that, when combined with the mask in this entry, represents the group range to which this row applies."
The mask that, when combined with the group address in this entry, represents the group range to which this row applies."
"The peer to which MSDP SA Requests for groups matching this entry's group range will be sent.
This object, combined with msdpRequestsPeerType, must match the INDEX of a row in the msdpPeerTable, and to be considered, this peer's msdpPeerState must be established."
The status of this row, by which new rows may be added to the table or old rows may be deleted."
current DESCRIPTION "The (conceptual) table listing the MSDP speaker's peers."
An entry (conceptual row) representing an MSDP peer.
If row creation is supported, dynamically added rows are added to the system's stable configuration (corresponding to a StorageType value of nonVolatile).
IpAddress MAX ACCESS not accessible STATUS
"The number of SA messages received from this peer that failed the Peer RPF check.
"The number of MSDP SA messages received on this connection.
"The number of MSDP SA messages transmitted on this connection.
"The number of MSDP SA Request messages received on this connection.
"The number of MSDP SA Request messages transmitted on this connection.
The number of MSDP SA Response messages received on this connection.
The number of MSDP SA Response messages transmitted on this TCP connection.
"The total number of MSDP messages, excluding encapsulated data packets, received on this TCP connection.
"The total number of MSDP messages, excluding encapsulated data packets, transmitted on this TCP connection.
"The total number of encapsulated data packets received from this peer.
"The total number of encapsulated data packets sent to this peer.
"The total number of times the MSDP FSM transitioned into the ESTABLISHED state."
"This timestamp is set to the value of sysUpTime when a peer transitions into or out of the ESTABLISHED state.
It is set to zero when the MSDP speaker is booted.
"The sysUpTime value when the last MSDP message was received from the peer.
It is set to zero when the MSDP speaker is booted."
The local IP address used for this entry's MSDP TCP connection."
If the value of this object is zero (0), the MSDP connection is never torn down due to the absence of messages from the peer.
If the value of this object is zero (0), no periodic KEEPALIVE messages are sent to the peer after the MSDP connection has been established."
"The minimum TTL a packet is required to have before it may be forwarded using SA encapsulation to this peer.
"This object indicates whether to process MSDP SA Request messages from this peer.
If True(1), MSDP SA Request messages from this peer are processed and replied to (if appropriate) with SA Response messages.
If False(2), MSDP SA Request messages from this peer are silently ignored.
It defaults to False when msdpCacheLifetime is 0 and to True when msdpCacheLifetime is non 0.
This object is deprecated because MSDP SA Requests were removed from the MSDP specification."
"The RowStatus object by which peers can be added and deleted.
A transition to 'active' will cause the MSDP 'Enable MSDP peering with P' Event to be generated.
A transition out of the 'active' state will cause the MSDP 'Disable MSDP peering with P' Event to be generated.
Care should be used in providing write access to this object without adequate authentication.
msdpPeerRemoteAddress is the only variable that must be set to a valid value before the row can be activated.
Since this is the table's INDEX, a row can be activated by simply setting the msdpPeerStatus variable.
It is possible to modify other columns in the same conceptual row when the status value is active(1).
25 } msdpPeerRemotePort OBJECT TYPE SYNTAX
The remote port for the TCP connection between the MSDP peers.
The local port for the TCP connection between the MSDP peers."
msdpPeerEncapsulationState has been removed   because there is no longer an encapsulation   state machine.
"The encapsulation in use when encapsulating data in SA messages to this peer."
"The number of times the state machine has transitioned from INACTIVE to CONNECTING."
The number of MSDP Notification messages received from this peer.
This object is deprecated because MSDP Notifications have been removed from the spec."
The number of MSDP Notification messages transmitted to this peer.
This object is deprecated because MSDP Notifications have been removed from the spec."
{ msdpPeerEntry 32 } msdpPeerLastError OBJECT TYPE SYNTAX
The last error code and subcode received via Notification from this peer.
If no error has occurred, this field is zero.
Otherwise, the first byte of this two byte OCTET STRING contains the O bit and error code, and the second byte contains the subcode.
This object is deprecated because MSDP Notifications have been removed from the spec."
"The value of sysUpTime on the most recent occasion at which one or more of this entry's counters suffered a discontinuity.
See the DESCRIPTION of each object to see if it is expected to have discontinuities.
These discontinuities may occur at peer connection establishment.
If no such discontinuities have occurred since the last reinitialization of the local management subsystem, then this object contains a zero value."
current DESCRIPTION "The (conceptual) table listing the MSDP SA advertisements currently in the MSDP speaker's cache."
MsdpSACacheEntry MAX ACCESS not accessible
An entry (conceptual row) representing an MSDP SA advertisement.
The INDEX to this table includes msdpSACacheOriginRP for diagnosing incorrect MSDP advertisements; normally, a Group and Source pair would be unique.
Row creation is not permitted; msdpSACacheStatus may only be used to delete rows from this table.
IpAddress MAX ACCESS not accessible STATUS
IpAddress MAX ACCESS not accessible STATUS
IpAddress MAX ACCESS not accessible STATUS
The RP of the SA Cache entry.
This field is in the INDEX in order to catch multiple RP's advertising the same source and group."
The peer from which this SA Cache entry was last accepted.
This address must correspond to the msdpPeerRemoteAddress value for a row in the MSDP Peer Table.
This should be 0.0.0.0 on the router that originated the entry."
This may be different than msdpSACachePeerLearnedFrom if this entry was created by an MSDP SA Response.
"The number of MSDP SA messages received relevant to this cache entry.
This object must be initialized to zero when creating a cache entry."
"The number of MSDP encapsulated data packets received relevant to this cache entry.
This object must be initialized to zero when creating a cache entry."
The time since this entry was first placed in the SA cache.
The first epoch is the time that the entry was first placed in the SA cache, and the second epoch is the current time."
"The time remaining before this entry will expire from the SA cache.
The first epoch is now, and the second epoch is the time that the entry will expire."
} MAX ACCESS read write
The status of this row in the table.
The only allowable actions are to retrieve the status, which will be 'active', or to set the status to 'destroy' in order to remove this entry from the cache.
Row creation is not permitted.
No columnar objects are writable, so there are none that may be changed while the status value is active(1)."
current DESCRIPTION "The (conceptual) table listing MSDP Mesh Group configuration."
MsdpMeshGroupEntry MAX ACCESS not accessible
An entry (conceptual row) representing a peer in an MSDP Mesh Group.
If row creation is supported, dynamically added rows are added to the system's stable configuration (corresponding to a StorageType value of nonVolatile).
MAX ACCESS not accessible STATUS
The msdpMeshGroupPeerAddress must match a row in the msdpPeerTable."
"This entry's status, by which new entries may be added to the table and old entries deleted.
msdpMeshGroupName and msdpMeshGroupPeerAddress must be set to valid values before the row can be activated.
Since these are the table's INDEX, a row can be activated by simply setting the msdpMeshGroupStatus variable.
It is not possible to modify other columns in the same conceptual row when the status value is active(1), because the only other objects in the row are part of the INDEX.
Changing one of these changes the row, so an old row must be deleted and a new one created."
"The MSDP Established event is generated when the MSDP FSM enters the ESTABLISHED state."
"The MSDPBackwardTransition Event is generated when the MSDP FSM moves from a higher numbered state to a lower numbered state."
The compliance statement for entities that implement a pre  RFC version of MSDP.
This statement is deprecated because it includes objects used for managing/monitoring aspects of MSDP that were removed before it was published as an RFC.
" MODULE    this module MANDATORY GROUPS { msdpMIBGlobalsGroup, msdpMIBPeerGroup, msdpMIBNotificationGroup } GROUP  msdpMIBEncapsulationGroup DESCRIPTION "This group is mandatory if MSDP encapsulation interfaces are not given their own interface index numbers."
"This group is mandatory if the MSDP speaker has the ability to cache SA messages."
This group is mandatory if the MSDP speaker has the ability to send SA Request messages and to parse SA Response messages."
This group is mandatory if the MSDP speaker sources (as opposed to forwards) MSDP messages."
GROUP  msdpMIBMeshGroupGroup DESCRIPTION "This group is mandatory if the MSDP speaker can participate in MSDP Mesh Groups."
The compliance statement for entities that implement MSDP (RFC3618).
MODULE    this module MANDATORY GROUPS { msdpMIBGlobalsGroup, msdpMIBPeerGroup2, msdpMIBSACacheGroup, msdpMIBEncapsulationGroup } GROUP  msdpMIBRPGroup DESCRIPTION
"This group is mandatory if the MSDP speaker sources (as opposed to forwards) MSDP messages."
GROUP  msdpMIBMeshGroupGroup DESCRIPTION "This group is mandatory if the MSDP speaker can participate in MSDP Mesh Groups."
"The compliance statement for entities that implement MSDP (RFC3618), but do not permit configuration (or only permit partial configuration) via SNMP."
MODULE    this module MANDATORY GROUPS { msdpMIBGlobalsGroup, msdpMIBPeerGroup2, msdpMIBSACacheGroup, msdpMIBEncapsulationGroup } GROUP  msdpMIBRPGroup DESCRIPTION
"This group is mandatory if the MSDP speaker sources (as opposed to forwards) MSDP messages."
GROUP  msdpMIBMeshGroupGroup DESCRIPTION "This group is mandatory if the MSDP speaker can participate in MSDP Mesh Groups."
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
A collection of objects for managing MSDP peers.
This group is deprecated in favor of msdpMIBPeerGroup2 because it contains objects for managing aspects of MSDP that were removed before it was published as an RFC."
"A collection of objects for managing encapsulations if the MSDP encapsulation interfaces are not given interface indices."
A collection of objects for managing MSDP SA cache entries."
A collection of objects for managing MSDP Request transmission.
This group is deprecated because Requests were removed from MSDP before its publication as an RFC."
Security Considerations There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
msdpEnabled Obviously, by modifying msdpEnabled, an attacker could simply disable MSDP processing on the router.
msdpCacheLifetime If allowed to modify msdpCacheLifetime, an attacker could set the value to a value lower than a peer's refresh interval, causing all state to time out and be refreshed.
msdpRequestsPeer, msdpRequestsStatus If allowed to modify entries in the msdpRequestsTable, an attacker could cause this system to send MSDP Requests to an unknown system, or could simply remove the proper configuration.
Note that the msdpRequestsTable is deprecated, and the MSDP Request functionality is not in the published MSDP spec.
The writable objects in the msdpPeerTable are: msdpPeerLocalAddress, msdpPeerConnectRetryInterval, msdpPeerHoldTimeConfigured, msdpPeerKeepAliveConfigured, msdpPeerDataTtl, msdpPeerProcessRequestsFrom, msdpPeerStatus, and
Of these, modifying msdpPeerIpAddress and msdpPeerStatus could cause a changed or deleted peer configuration.
Modifying any of the other values could cause subtle protocol misbehavior.
This writable object can be used to remove valid values from the router's SA cache.
msdpRPAddress Changing this object can cause a failure of the Peer RPF rules for SA messages sourced by this router.
msdpMeshGroupStatus This object can be used to change this router's idea of its mesh group membership and those of its peers.
Misconfiguration of mesh groups can cause subtle protocol misbehavior.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:  The entire msdpPeerTable.
Peer information can result in discovering internal topology, which many want to keep secret.
The size of the SA Cache could reveal whether this system has MSDP entries for public and/or private groups.
The active sources and groups in a network could be private.
This information can also lead to internal topology information.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [6], Section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
Since this MIB is for an experimental protocol, it uses an experimental OID.
