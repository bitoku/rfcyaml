- title: __initial_text__
  contents:
  - '                     MIB for the UDP-Lite Protocol

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a Management Information Base (MIB) module\n\
    \   for the Lightweight User Datagram Protocol (UDP-Lite).  It defines a\n   set\
    \ of new MIB objects to characterise the behaviour and performance\n   of transport\
    \ layer endpoints deploying UDP-Lite.  UDP-Lite resembles\n   UDP, but differs\
    \ from the semantics of UDP by the addition of a\n   single option.  This adds\
    \ the capability for variable-length data\n   checksum coverage, which can benefit\
    \ a class of applications that\n   prefer delivery of (partially) corrupted datagram\
    \ payload data in\n   preference to discarding the datagram.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Relationship to the UDP-MIB ................................2\n  \
    \    1.2. Relationship to HOST-RESOURCES-MIB and SYSAPPL-MIB .........4\n    \
    \  1.3. Interpretation of the MIB Variables ........................5\n      1.4.\
    \ Conventions ................................................8\n   2. The Internet-Standard\
    \ Management Framework ......................8\n   3. Definitions .....................................................8\n\
    \   4. Security Considerations ........................................19\n  \
    \ 5. IANA Considerations ............................................20\n   6.\
    \ Acknowledgments ................................................20\n   7. References\
    \ .....................................................20\n      7.1. Normative\
    \ References ......................................20\n      7.2. Informative\
    \ References ....................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lightweight User Datagram Protocol (UDP-Lite) [RFC3828]\
    \ (also\n   known as UDPLite) is an IETF standards-track transport protocol. \
    \ The\n   operation of UDP-Lite is similar to the User Datagram Protocol (UDP)\n\
    \   [RFC768], but can also serve applications in error-prone network\n   environments\
    \ that prefer to have partially damaged payloads delivered\n   rather than discarded.\
    \  This is achieved by changing the semantics of\n   the UDP Length field to that\
    \ of a Checksum Coverage field.  If this\n   feature is not used, UDP-Lite is\
    \ semantically identical to UDP.\n   The interface of UDP-Lite differs from that\
    \ of UDP by the addition of\n   a single option, which communicates a length value.\
    \  At the sender\n   this specifies the intended datagram checksum coverage; at\
    \ the\n   receiver it signifies a minimum coverage threshold for incoming\n  \
    \ datagrams.  This length value may also be modified during the\n   lifetime of\
    \ a connection.  UDP-Lite does not provide mechanisms to\n   negotiate the checksum\
    \ coverage between the sender and receiver.\n   Where required, this needs to\
    \ be communicated by another protocol.\n   The Datagram Congestion Control Protocol\
    \ (DCCP) [RFC4340] for\n   instance includes a capability to negotiate checksum\
    \ coverage values.\n   This document defines a set of runtime statistics (variables)\
    \ that\n   facilitate network management/monitoring as well as unified\n   comparisons\
    \ between different protocol implementations and operating\n   environments. \
    \ To provide a common interface for users and\n   implementors of UDP-Lite modules,\
    \ the definitions of these runtime\n   statistics are provided as a MIB module\
    \ using the SMIv2 format\n   [RFC2578].\n"
- title: 1.1.  Relationship to the UDP-MIB
  contents:
  - "1.1.  Relationship to the UDP-MIB\n   The similarities between UDP and UDP-Lite\
    \ suggest that the MIB module\n   for UDP-Lite should resemble that of UDP [RFC4113],\
    \ with extensions\n   corresponding to the additional capabilities of UDP-Lite.\
    \  The UDP-\n   Lite MIB module is placed beneath the mib-2 subtree, adhering\
    \ to the\n   familiar structure of the UDP-MIB module to ease integration.\n \
    \  In particular, these well-known basic counters are supported:\n      o  InDatagrams\n\
    \      o  NoPorts\n      o  InErrors\n      o  OutDatagrams\n   The following\
    \ read-only variables have been added to the basic\n   structure used in the UDP-MIB\
    \ module:\n      InPartialCov: The number of received datagrams, with a valid\n\
    \      format and checksum, whose checksum coverage is strictly less than\n  \
    \    the datagram length.\n      InBadChecksum: The number of received datagrams\
    \ with an invalid\n      checksum (i.e., where the receiver-recalculated UDP-Lite\
    \ checksum\n      does not match that in the Checksum field).  Unlike NoPorts,\
    \ this\n      error type also counts as InErrors.\n      OutPartialCov: The number\
    \ of sent datagrams with a valid format\n      and checksum whose checksum coverage\
    \ is strictly less than the\n      datagram length.\n   All non-error counters\
    \ used in this document are 64-bit counters.\n   This is a departure from UDP,\
    \ which traditionally used 32-bit\n   counters and mandates 64-bit counters only\
    \ on fast networks\n   [RFC4113].  This choice is justified by the fact that UDP-Lite\
    \ is a\n   more recent protocol, and that network speeds continue to grow.\n \
    \  Another difference from the UDP MIB module is that the UDP-Lite MIB\n   module\
    \ does not support an IPv4-only listener table.  This feature\n   was present\
    \ only for compatibility reasons and is superseded by the\n   more informative\
    \ endpoint table.  Two columnar objects have been\n   added to this table:\n \
    \     udpliteEndpointMinCoverage: The minimum acceptable receiver\n      checksum\
    \ coverage length [RFC3828].  This value may be manipulated\n      by the application\
    \ attached to the receiving endpoint.\n      udpliteEndpointViolCoverage: This\
    \ object is optional and counts\n      the number of valid datagrams with a checksum\
    \ coverage value less\n      than the corresponding value of udpliteEndpointMinCoverage.\n\
    \      Although being otherwise valid, such datagrams are discarded\n      rather\
    \ than passed to the application.  This object thus serves to\n      separate\
    \ cases of violated coverage from other InErrors.\n   The second entry is not\
    \ required to manage the transport protocol and\n   hence is not mandatory.  It\
    \ may be implemented to assist in debugging\n   application design and configuration.\n\
    \   The UDP-Lite MIB module also provides a discontinuity object to help\n   determine\
    \ whether one or more of its counters experienced a\n   discontinuity event. \
    \ This is an event, other than re-initialising\n   the management system, that\
    \ invalidates the management entity's\n   understanding of the counter values.\n\
    \   For example, if UDP-Lite is implemented as a loadable operating\n   system\
    \ module, a module load or unload would produce a discontinuity.\n   By querying\
    \ the value of udpliteStatsDiscontinuityTime, a management\n   entity can determine\
    \ whether or not a discontinuity event has\n   occurred.\n"
- title: 1.2.  Relationship to HOST-RESOURCES-MIB and SYSAPPL-MIB
  contents:
  - "1.2.  Relationship to HOST-RESOURCES-MIB and SYSAPPL-MIB\n   The UDP-Lite endpoint\
    \ table contains one columnar object,\n   udpliteEndpointProcess, reporting a\
    \ unique value that identifies a\n   distinct piece of software associated with\
    \ this endpoint.  (When more\n   than one piece of software is associated with\
    \ this endpoint, a\n   representative is chosen, so that consecutive queries consistently\n\
    \   refer to the same identifier.  The reported value is then consistent,\n  \
    \ as long as the representative piece of software is running and still\n   associated\
    \ with the endpoint.)\n   The value of udpliteEndpointProcess is reported as an\
    \ Unsigned32, and\n   it shares with the hrSWRunIndex of the HOST-RESOURCES-MIB\
    \ [RFC2790]\n   and the sysApplElmtRunIndex of the SYSAPPL-MIB [RFC2287] the\n\
    \   requirement that, wherever possible, this should be the native and\n   unique\
    \ identification number employed by the system.\n   If the SYSAPPL-MIB module\
    \ is available, the value of\n   udpliteEndpointProcess should correspond to the\
    \ appropriate value of\n   sysApplElmtRunIndex.  If not available, an alternative\
    \ should be used\n   (e.g., the hrSWRunIndex of the HOST-RESOURCES-MIB module).\n"
- title: 1.3.  Interpretation of the MIB Variables
  contents:
  - "1.3.  Interpretation of the MIB Variables\n   Figure 1 shows an informal survey\
    \ of the packet processing path, with\n   reference to counter names in parentheses.\n\
    \   Received UDP-Lite Datagrams\n     |\n     |                +- Full Coverage\
    \ ---------------------+-> Deliver\n     |                |                  \
    \                   |\n     +- Valid Header--+               +- >= Rec. Coverage\
    \ --+\n     | (InDatagrams)  |               |\n     |                +- Partial\
    \ -----+\n     |                (InPartialCov)  |\n     |                    \
    \            +-  < Rec. Coverage --+\n     |                               (EndpointViolCoverage)\
    \ |\n     |                                                      |\n     |   \
    \                                                   |\n     +- Header Error ---+\
    \                                   |\n     |                  |             \
    \                      |\n     +- Checksum Error -+-----------------------------------+->\
    \ Discard\n     |  (InBadChecksum)                                       (InErrors)\n\
    \     |\n     +- Port Error -------------------------------------------> Discard\n\
    \        (NoPorts)\n                 Figure 1: UDP-Lite Input Processing Path\n\
    \   A platform-independent test of the UDP-Lite implementations in two\n   connected\
    \ end hosts may be performed as follows.\n   On the sending side, OutDatagrams\
    \ and OutPartialCov are observed.\n   The ratio OutPartialCov/OutDatagrams describes\
    \ the fraction (between\n   0 and 1) of datagrams using partial checksum coverage.\n\
    \   On the receiving side, InDatagrams, InPartialCov, and InErrors are\n   monitored.\
    \  If datagrams are received from the given sender, InErrors\n   is close to zero,\
    \ and InPartialCov is zero, no partial coverage is\n   employed.  If no datagrams\
    \ are received and InErrors increases\n   proportionally with the sending rate,\
    \ a configuration error is likely\n   (a wrong value of receiver minimum checksum\
    \ coverage).\n   The InBadChecksum counter reflects errors that may persist following\n\
    \   end-host processing, router processing, or link processing (this\n   includes\
    \ illegal coverage values as defined in [RFC3828], since\n   checksum and checksum\
    \ coverage are mutually interdependent).  In\n   particular, InBadChecksum can\
    \ serve as an indicator of the residual\n   link bit error rate: on links with\
    \ higher bit error rates, a lower\n   value of the checksum coverage may help\
    \ to reduce the values of both\n   InErrors and InBadChecksum.  By observing these\
    \ values and adapting\n   the configuration, a setting may then be found that\
    \ is more adapted\n   to the specific type of link, and the type of payload. \
    \ In\n   particular, a reduction in the number of discarded datagrams\n   (InErrors),\
    \ may indicate an improved performance.\n   The above statistics are elementary\
    \ and can be used to derive the\n   following information:\n   o  The total number\
    \ of incoming datagrams is InDatagrams + InErrors +\n      NoPorts.\n   o  The\
    \ number of InErrors that were discarded due to problems other\n      than a bad\
    \ checksum is InErrors - InBadChecksum.\n   o  The number of InDatagrams that\
    \ have full coverage is InDatagrams -\n      InPartialCov.\n   o  The number of\
    \ OutDatagrams that have full coverage is OutDatagrams\n      - OutPartialCov.\n\
    \   The following Case diagram [CASE] summarises the relationships\n   between\
    \ the counters on the input processing path.\n          Transport Layer Interface\n\
    \   -------------------------------------------------------------\n          \
    \           /\\\n                     ||\n                  -----------------------------\
    \ InDatagrams\n                     ||                             ^\n       \
    \              ||                             |\n                     ||     \
    \                        |\n                     ||----------------------> InPartialCov\n\
    \                     ||                             |\n                     ||\
    \                             |\n                     ||                     \
    \        v\n                     ||                     EndpointViolCoverage\n\
    \                     ||                             |\n    NoPorts <--------||\
    \                             |\n                     ||                     \
    \        |\n                     ||------> InBadChecksum ------>|\n          \
    \           ||                             |\n                     ||        \
    \                     |\n                     ||                             v\n\
    \                     ||------------------------> InErrors\n                 \
    \    ||\n                     ||\n   -------------------------------------------------------------\n\
    \           Network Layer Interface\n            Figure 2: Counters for Received\
    \ UDP-Lite Datagrams\n   A configuration error may occur when a sender chooses\
    \ a coverage\n   value for the datagrams that it sends that is less than the minimum\n\
    \   coverage configured by the intended recipient.  The minimum coverage\n   is\
    \ set on a per-session basis by the application associated with the\n   listening\
    \ endpoint, and its current value is recorded in the\n   udpliteEndpointTable.\
    \  Reception of valid datagrams with a checksum\n   coverage value less than this\
    \ threshold results in dropping the\n   datagram [RFC3828] and incrementing InErrors.\
    \  To improve debugging\n   of such (misconfigured) cases, an implementer may\
    \ choose to support\n   the optional udpliteEndpointViolCoverage entry in the\
    \ endpoint table\n   (Section 1.1) that specifically counts datagrams falling\
    \ in this\n   category.  Without this feature, failure due to misconfiguration\
    \ can\n   not be distinguished from datagram processing failure.\n"
- title: 1.4.  Conventions
  contents:
  - "1.4.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14 [RFC2119].\n"
- title: 2.  The Internet-Standard Management Framework
  contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   UDPLITE-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\n\
    \       OBJECT-TYPE,\n       mib-2, Unsigned32,\n       Counter32, Counter64 \
    \  FROM SNMPv2-SMI           -- [RFC2578]\n       TimeStamp              FROM\
    \ SNMPv2-TC            -- [RFC2579]\n       MODULE-COMPLIANCE,\n       OBJECT-GROUP\
    \           FROM SNMPv2-CONF          -- [RFC2580]\n       InetAddress,\n    \
    \   InetAddressType,\n       InetPortNumber         FROM INET-ADDRESS-MIB;   \
    \ -- [RFC4001]\n   udpliteMIB MODULE-IDENTITY\n       LAST-UPDATED \"200712180000Z\"\
    \       -- 18 December 2007\n       ORGANIZATION \"IETF TSV Working Group (TSVWG)\"\
    \n       CONTACT-INFO\n              \"IETF TSV Working Group\n              \
    \ http://www.ietf.org/html.charters/tsvwg-charter.html\n               Mailing\
    \ List: tsvwg@ietf.org\n               Gerrit Renker, Godred Fairhurst\n     \
    \          Electronics Research Group\n               School of Engineering, University\
    \ of Aberdeen\n               Fraser Noble Building, Aberdeen AB24 3UE, UK\"\n\
    \       DESCRIPTION\n              \"The MIB module for managing UDP-Lite implementations.\n\
    \               Copyright (C) The IETF Trust (2008).  This version of\n      \
    \         this MIB module is part of RFC 5097; see the RFC\n               itself\
    \ for full legal notices.\"\n       REVISION \"200712180000Z\"           -- 18\
    \ December 2007\n       DESCRIPTION\n              \"Initial SMIv2 revision, based\
    \ on the format of the UDP\n               MIB module (RFC 4113) and published\
    \ as RFC 5097.\"\n       ::= { mib-2 170 }\n   udplite      OBJECT IDENTIFIER\
    \ ::= { udpliteMIB 1 }\n   udpliteInDatagrams OBJECT-TYPE         -- as in UDP-MIB\n\
    \       SYNTAX     Counter64\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The total number of UDP-Lite datagrams that\
    \ were\n               delivered to UDP-Lite users.\n               Discontinuities\
    \ in the value of this counter can occur\n               at re-initialisation\
    \ of the management system, and at\n               other times as indicated by\
    \ the value of\n               udpliteStatsDiscontinuityTime.\"\n       ::= {\
    \ udplite 1 }\n   udpliteInPartialCov OBJECT-TYPE        -- new in UDP-Lite\n\
    \       SYNTAX     Counter64\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The total number of UDP-Lite datagrams that\
    \ were\n               delivered to UDP-Lite users (applications) and whose\n\
    \               checksum coverage was strictly less than the datagram\n      \
    \         length.\n               Discontinuities in the value of this counter\
    \ can occur\n               at re-initialisation of the management system, and\
    \ at\n               other times as indicated by the value of\n              \
    \ udpliteStatsDiscontinuityTime.\"\n       ::= { udplite 2 }\n   udpliteNoPorts\
    \ OBJECT-TYPE             -- as in UDP-MIB\n       SYNTAX     Counter32\n    \
    \   MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n    \
    \          \"The total number of received UDP-Lite datagrams for\n           \
    \    which there was no listener at the destination port.\n               Discontinuities\
    \ in the value of this counter can occur\n               at re-initialisation\
    \ of the management system, and at\n               other times as indicated by\
    \ the value of\n               udpliteStatsDiscontinuityTime.\"\n       ::= {\
    \ udplite 3 }\n   udpliteInErrors OBJECT-TYPE            -- as in UDP-MIB\n  \
    \     SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The number of received UDP-Lite datagrams\
    \ that could not\n               be delivered for reasons other than the lack\
    \ of an\n               application at the destination port.\n               Discontinuities\
    \ in the value of this counter can occur\n               at re-initialisation\
    \ of the management system, and at\n               other times as indicated by\
    \ the value of\n               udpliteStatsDiscontinuityTime.\"\n       ::= {\
    \ udplite 4 }\n   udpliteInBadChecksum OBJECT-TYPE       -- new in UDP-Lite\n\
    \       SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The number of received UDP-Lite datagrams\
    \ whose checksum\n               could not be validated.  This includes illegal\
    \ checksum\n               coverage values, as their use would lead to incorrect\n\
    \               checksums.\n               Discontinuities in the value of this\
    \ counter can occur\n               at re-initialisation of the management system,\
    \ and at\n               other times as indicated by the value of\n          \
    \     udpliteStatsDiscontinuityTime.\"\n       REFERENCE \"RFC 3828, section 3.1\"\
    \n       ::= { udplite 5 }\n   udpliteOutDatagrams OBJECT-TYPE        -- as in\
    \ UDP-MIB\n       SYNTAX     Counter64\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n              \"The total number of UDP-Lite\
    \ datagrams sent from this\n               entity.\n               Discontinuities\
    \ in the value of this counter can occur\n               at re-initialisation\
    \ of the management system, and at\n               other times as indicated by\
    \ the value of\n               udpliteStatsDiscontinuityTime.\"\n       ::= {\
    \ udplite 6 }\n   udpliteOutPartialCov OBJECT-TYPE       -- new in UDP-Lite\n\
    \       SYNTAX     Counter64\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The total number of udpliteOutDatagrams whose\n\
    \               checksum coverage was strictly less than the\n               datagram\
    \ length.\n               Discontinuities in the value of this counter can occur\n\
    \               at re-initialisation of the management system, and at\n      \
    \         other times as indicated by the value of\n               udpliteStatsDiscontinuityTime.\"\
    \n       ::= { udplite 7 }\n   udpliteEndpointTable OBJECT-TYPE\n       SYNTAX\
    \     SEQUENCE OF UdpLiteEndpointEntry\n       MAX-ACCESS not-accessible\n   \
    \    STATUS     current\n       DESCRIPTION\n              \"A table containing\
    \ information about this entity's\n               UDP-Lite endpoints on which\
    \ a local application is\n               currently accepting or sending datagrams.\n\
    \               The address type in this table represents the address\n      \
    \         type used for the communication, irrespective of the\n             \
    \  higher-layer abstraction.  For example, an application\n               using\
    \ IPv6 'sockets' to communicate via IPv4 between\n               ::ffff:10.0.0.1\
    \ and ::ffff:10.0.0.2 would use\n               InetAddressType ipv4(1).\n   \
    \            Like the udpTable in RFC 4113, this table also allows\n         \
    \      the representation of an application that completely\n               specifies\
    \ both local and remote addresses and ports.  A\n               listening application\
    \ is represented in three possible\n               ways:\n               1) An\
    \ application that is willing to accept both IPv4\n                  and IPv6\
    \ datagrams is represented by a\n                  udpliteEndpointLocalAddressType\
    \ of unknown(0) and a\n                  udpliteEndpointLocalAddress of ''h (a\
    \ zero-length\n                  octet-string).\n               2) An application\
    \ that is willing to accept only IPv4\n                  or only IPv6 datagrams\
    \ is represented by a\n                  udpliteEndpointLocalAddressType of the\
    \ appropriate\n                  address type and a udpliteEndpointLocalAddress\
    \ of\n                  '0.0.0.0' or '::' respectively.\n               3) An\
    \ application that is listening for datagrams only\n                  for a specific\
    \ IP address but from any remote\n                  system is represented by a\n\
    \                  udpliteEndpointLocalAddressType of the appropriate\n      \
    \            address type, with udpliteEndpointLocalAddress\n                \
    \  specifying the local address.\n               In all cases where the remote\
    \ address is a wildcard,\n               the udpliteEndpointRemoteAddressType\
    \ is unknown(0),\n               the udpliteEndpointRemoteAddress is ''h (a zero-length\n\
    \               octet-string), and the udpliteEndpointRemotePort is 0.\n     \
    \          If the operating system is demultiplexing UDP-Lite\n              \
    \ packets by remote address/port, or if the application\n               has 'connected'\
    \ the socket specifying a default remote\n               address/port, the udpliteEndpointRemote*\
    \ values should\n               be used to reflect this.\"\n       ::= { udplite\
    \ 8 }\n   udpliteEndpointEntry OBJECT-TYPE\n       SYNTAX     UdpLiteEndpointEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \              \"Information about a particular current UDP-Lite endpoint.\n \
    \              Implementers need to pay attention to the sizes of\n          \
    \     udpliteEndpointLocalAddress/RemoteAddress, as Object\n               Identifiers\
    \ (OIDs) of column instances in this table must\n               have no more than\
    \ 128 sub-identifiers in order to remain\n                accessible with SNMPv1,\
    \ SNMPv2c, and SNMPv3.\"\n       INDEX   { udpliteEndpointLocalAddressType,\n\
    \                 udpliteEndpointLocalAddress,\n                 udpliteEndpointLocalPort,\n\
    \                 udpliteEndpointRemoteAddressType,\n                 udpliteEndpointRemoteAddress,\n\
    \                 udpliteEndpointRemotePort,\n                 udpliteEndpointInstance\
    \ }\n       ::= { udpliteEndpointTable 1 }\n   UdpLiteEndpointEntry ::= SEQUENCE\
    \ {\n           udpliteEndpointLocalAddressType   InetAddressType,\n         \
    \  udpliteEndpointLocalAddress       InetAddress,\n           udpliteEndpointLocalPort\
    \          InetPortNumber,\n           udpliteEndpointRemoteAddressType  InetAddressType,\n\
    \           udpliteEndpointRemoteAddress      InetAddress,\n           udpliteEndpointRemotePort\
    \         InetPortNumber,\n           udpliteEndpointInstance           Unsigned32,\n\
    \           udpliteEndpointProcess            Unsigned32,\n           udpliteEndpointMinCoverage\
    \        Unsigned32,\n           udpliteEndpointViolCoverage       Counter32\n\
    \   }\n   udpliteEndpointLocalAddressType OBJECT-TYPE\n       SYNTAX     InetAddressType\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \              \"The address type of udpliteEndpointLocalAddress.  Only\n    \
    \           IPv4, IPv4z, IPv6, and IPv6z addresses are expected, or\n        \
    \       unknown(0) if datagrams for all local IP addresses are\n             \
    \  accepted.\"\n       ::= { udpliteEndpointEntry 1 }\n   udpliteEndpointLocalAddress\
    \ OBJECT-TYPE\n       SYNTAX     InetAddress\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n              \"The local IP address\
    \ for this UDP-Lite endpoint.\n               The value of this object can be\
    \ represented in three\n               possible ways, depending on the characteristics\
    \ of the\n               listening application:\n               1. For an application\
    \ that is willing to accept both\n                  IPv4 and IPv6 datagrams, the\
    \ value of this object\n                  must be ''h (a zero-length octet-string),\
    \ with\n                  the value of the corresponding instance of the\n   \
    \               EndpointLocalAddressType object being unknown(0).\n          \
    \     2. For an application that is willing to accept only\n                 \
    \ IPv4 or only IPv6 datagrams, the value of this\n                  object must\
    \ be '0.0.0.0' or '::', respectively,\n                  while the corresponding\
    \ instance of the\n                  EndpointLocalAddressType object represents\
    \ the\n                  appropriate address type.\n               3. For an application\
    \ that is listening for data\n                  destined only to a specific IP\
    \ address, the value\n                  of this object is the specific IP address\
    \ for\n                  which this node is receiving packets, with the\n    \
    \              corresponding instance of the\n                  EndpointLocalAddressType\
    \ object representing the\n                  appropriate address type.\n     \
    \          As this object is used in the index for the\n               udpliteEndpointTable,\
    \ implementors should be careful\n               not to create entries that would\
    \ result in OIDs with\n               more than 128 sub-identifiers; this is because\
    \ of SNMP\n               and SMI limitations.\"\n       ::= { udpliteEndpointEntry\
    \ 2 }\n   udpliteEndpointLocalPort OBJECT-TYPE\n       SYNTAX     InetPortNumber\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \              \"The local port number for this UDP-Lite endpoint.\"\n       ::=\
    \ { udpliteEndpointEntry 3 }\n   udpliteEndpointRemoteAddressType OBJECT-TYPE\n\
    \       SYNTAX     InetAddressType\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n              \"The address type of udpliteEndpointRemoteAddress.\
    \  Only\n               IPv4, IPv4z, IPv6, and IPv6z addresses are expected, or\n\
    \               unknown(0) if datagrams for all remote IP addresses are\n    \
    \           accepted.  Also, note that some combinations of\n               udpliteEndpointLocalAdressType\
    \ and\n               udpliteEndpointRemoteAddressType are not supported.  In\n\
    \               particular, if the value of this object is not\n             \
    \  unknown(0), it is expected to always refer to the\n               same IP version\
    \ as udpliteEndpointLocalAddressType.\"\n       ::= { udpliteEndpointEntry 4 }\n\
    \   udpliteEndpointRemoteAddress OBJECT-TYPE\n       SYNTAX     InetAddress\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \              \"The remote IP address for this UDP-Lite endpoint.  If\n     \
    \          datagrams from any remote system are to be accepted,\n            \
    \   this value is ''h (a zero-length octet-string).\n               Otherwise,\
    \ it has the type described by\n               udpliteEndpointRemoteAddressType\
    \ and is the address of\n               the remote system from which datagrams\
    \ are to be\n               accepted (or to which all datagrams will be sent).\n\
    \               As this object is used in the index for the\n               udpliteEndpointTable,\
    \ implementors should be careful\n               not to create entries that would\
    \ result in OIDs with\n               more than 128 sub-identifiers; this is because\
    \ of SNMP\n               and SMI limitations.\"\n       ::= { udpliteEndpointEntry\
    \ 5 }\n   udpliteEndpointRemotePort OBJECT-TYPE\n       SYNTAX     InetPortNumber\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \              \"The remote port number for this UDP-Lite endpoint.  If\n    \
    \           datagrams from any remote system are to be accepted,\n           \
    \    this value is zero.\"\n       ::= { udpliteEndpointEntry 6 }\n   udpliteEndpointInstance\
    \ OBJECT-TYPE\n       SYNTAX     Unsigned32 (1..'ffffffff'h)\n       MAX-ACCESS\
    \ not-accessible\n       STATUS     current\n       DESCRIPTION\n            \
    \  \"The instance of this tuple.  This object is used to\n               distinguish\
    \ among multiple processes 'connected' to\n               the same UDP-Lite endpoint.\
    \  For example, on a system\n               implementing the BSD sockets interface,\
    \ this would be\n               used to support the SO_REUSEADDR and SO_REUSEPORT\n\
    \               socket options.\"\n       ::= { udpliteEndpointEntry 7 }\n   udpliteEndpointProcess\
    \ OBJECT-TYPE\n       SYNTAX     Unsigned32\n       MAX-ACCESS read-only\n   \
    \    STATUS     current\n       DESCRIPTION\n              \"A unique value corresponding\
    \ to a piece of software\n               running on this endpoint.\n         \
    \      If this endpoint is associated with more than one piece\n             \
    \  of software, the agent should choose one of these.  As\n               long\
    \ as the representative piece of software\n               is running and still\
    \ associated with the endpoint,\n               subsequent reads will consistently\
    \ return the same\n               value.  The implementation may use any algorithm\n\
    \               satisfying these constraints (e.g., choosing the entity\n    \
    \           with the oldest start time).\n               This identifier is platform-specific.\
    \  Wherever possible,\n               it should use the system's native, unique\
    \ identification\n               number as the value.\n               If the SYSAPPL-MIB\
    \ module is available, the value should\n               be the same as sysApplElmtRunIndex.\
    \  If not available, an\n               alternative should be used (e.g., the\
    \ hrSWRunIndex of the\n               HOST-RESOURCES-MIB module).\n          \
    \     If it is not possible to uniquely identify the pieces of\n             \
    \  software associated with this endpoint, then the value\n               zero\
    \ should be used.  (Note that zero is otherwise a\n               valid value\
    \ for sysApplElmtRunIndex.)\"\n       ::= { udpliteEndpointEntry 8 }\n   udpliteEndpointMinCoverage\
    \ OBJECT-TYPE -- new in UDP-Lite\n       SYNTAX     Unsigned32\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n              \"The\
    \ minimum checksum coverage expected by this endpoint.\n               A value\
    \ of 0 indicates that only fully covered datagrams\n               are accepted.\"\
    \n       REFERENCE \"RFC 3828, section 3.1\"\n       ::= { udpliteEndpointEntry\
    \ 9 }\n   udpliteEndpointViolCoverage OBJECT-TYPE -- new / optional in UDP-Lite\n\
    \       SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The number of datagrams received by this\
    \ endpoint whose\n               checksum coverage violated the minimum coverage\
    \ threshold\n               set for this connection (i.e., all valid datagrams\
    \ whose\n               checksum coverage was strictly smaller than the minimum,\n\
    \               as defined in RFC 3828).\n               Discontinuities in the\
    \ value of this counter can occur\n               at re-initialisation of the\
    \ management system, and at\n               other times as indicated by the value\
    \ of\n               udpliteStatsDiscontinuityTime.\"\n       ::= { udpliteEndpointEntry\
    \ 10 }\n   udpliteStatsDiscontinuityTime OBJECT-TYPE\n       SYNTAX     TimeStamp\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \              \"The value of sysUpTime at the most recent occasion at\n     \
    \          which one or more of the UDP-Lite counters suffered a\n           \
    \    discontinuity.\n               A value of zero indicates no such discontinuity\
    \ has\n               occurred since the last re-initialisation of the local\n\
    \               management subsystem.\"\n       ::= { udplite 9 }\n   -- Conformance\
    \ Information\n   udpliteMIBConformance OBJECT IDENTIFIER ::= { udpliteMIB 2 }\n\
    \   udpliteMIBCompliance MODULE-COMPLIANCE\n          STATUS     current\n   \
    \       DESCRIPTION\n              \"The compliance statement for systems that\
    \ implement\n               UDP-Lite.\n               There are a number of INDEX\
    \ objects that cannot be\n               represented in the form of OBJECT clauses\
    \ in SMIv2,\n               but for which we have the following compliance\n \
    \              requirements, expressed in OBJECT clause form in this\n       \
    \        description clause:\n               -- OBJECT      udpliteEndpointLocalAddressType\n\
    \               -- SYNTAX      InetAddressType { unknown(0), ipv4(1),\n      \
    \         --                               ipv6(2), ipv4z(3),\n              \
    \ --                               ipv6z(4) }\n               -- DESCRIPTION\n\
    \               --     Support for dns(16) is not required.\n               --\
    \ OBJECT      udpliteEndpointLocalAddress\n               -- SYNTAX      InetAddress\
    \ (SIZE(0|4|8|16|20))\n               -- DESCRIPTION\n               --     Support\
    \ is only required for zero-length\n               --     octet-strings, and for\
    \ scoped and unscoped\n               --     IPv4 and IPv6 addresses.\n      \
    \         -- OBJECT      udpliteEndpointRemoteAddressType\n               -- SYNTAX\
    \      InetAddressType { unknown(0), ipv4(1),\n               --             \
    \                  ipv6(2), ipv4z(3),\n               --                     \
    \          ipv6z(4) }\n               -- DESCRIPTION\n               --     Support\
    \ for dns(16) is not required.\n               -- OBJECT      udpliteEndpointRemoteAddress\n\
    \               -- SYNTAX      InetAddress (SIZE(0|4|8|16|20))\n             \
    \  -- DESCRIPTION\n               --     Support is only required for zero-length\n\
    \               --     octet-strings, and for scoped and unscoped\n          \
    \     --     IPv4 and IPv6 addresses.\n              \"\n       MODULE  -- this\
    \ module\n            MANDATORY-GROUPS { udpliteBaseGroup,\n                 \
    \              udplitePartialCsumGroup,\n                               udpliteEndpointGroup\
    \    }\n        GROUP               udpliteAppGroup\n        DESCRIPTION\n   \
    \            \"This group is optional and provides supplementary\n           \
    \     information about the effectiveness of using minimum\n                checksum\
    \ coverage thresholds on endpoints.\"\n       ::= { udpliteMIBConformance 1 }\n\
    \   udpliteMIBGroups OBJECT IDENTIFIER ::= { udpliteMIBConformance 2 }\n   udpliteBaseGroup\
    \ OBJECT-GROUP          -- as in UDP\n       OBJECTS   { udpliteInDatagrams, udpliteNoPorts,\
    \ udpliteInErrors,\n                   udpliteOutDatagrams, udpliteStatsDiscontinuityTime\
    \ }\n       STATUS     current\n       DESCRIPTION\n              \"The group\
    \ of objects providing for counters of\n               basic UDP-like statistics.\"\
    \n       ::= { udpliteMIBGroups 1 }\n   udplitePartialCsumGroup OBJECT-GROUP \
    \ -- specific to UDP-Lite\n       OBJECTS   { udpliteInPartialCov,\n         \
    \          udpliteInBadChecksum,\n                   udpliteOutPartialCov  }\n\
    \       STATUS     current\n       DESCRIPTION\n              \"The group of objects\
    \ providing for counters of\n               transport layer statistics exclusive\
    \ to UDP-Lite.\"\n       ::= { udpliteMIBGroups 2 }\n   udpliteEndpointGroup OBJECT-GROUP\n\
    \       OBJECTS    { udpliteEndpointProcess, udpliteEndpointMinCoverage }\n  \
    \     STATUS     current\n       DESCRIPTION\n              \"The group of objects\
    \ providing for the IP version\n               independent management of UDP-Lite\
    \ 'endpoints'.\"\n       ::= { udpliteMIBGroups 3 }\n   udpliteAppGroup OBJECT-GROUP\n\
    \       OBJECTS    { udpliteEndpointViolCoverage }\n       STATUS     current\n\
    \       DESCRIPTION\n              \"The group of objects that provide application-level\n\
    \               information for the configuration management of\n            \
    \   UDP-Lite 'endpoints'.\"\n       ::= { udpliteMIBGroups 4 }\n   END\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   There are no management objects defined in this\
    \ MIB module that have\n   a MAX-ACCESS clause of read-write and/or read-create.\
    \  So, if this\n   MIB module is implemented correctly, then there is no risk\
    \ that an\n   intruder can alter or create any management objects of this MIB\n\
    \   module via direct SNMP SET operations.\n   Some of the readable objects in\
    \ this MIB module (i.e., objects with a\n   MAX-ACCESS other than not-accessible)\
    \ may be considered sensitive or\n   vulnerable in some network environments.\
    \  It is thus important to\n   control even GET and/or NOTIFY access to these\
    \ objects and possibly\n   to even encrypt the values of these objects when sending\
    \ them over\n   the network via SNMP.  These are the tables and objects and their\n\
    \   sensitivity/vulnerability:\n   The indices of the udpliteEndpointTable contain\
    \ information about the\n   listeners on an entity.  In particular, the udpliteEndpointLocalPort\n\
    \   index objects can be used to identify ports that are open on the\n   machine\
    \ and which attacks are likely to succeed, without the attacker\n   having to\
    \ run a port scanner.  The table also identifies the\n   currently listening UDP-Lite\
    \ ports.\n   The udpliteEndpointMinCoverage provides information about the\n \
    \  requirements of the transport service associated with a specific\n   UDP-Lite\
    \ port.  This provides additional detail concerning the type\n   of application\
    \ associated with the port at the receiver.\n   Since UDP-Lite permits the delivery\
    \ of (partially) corrupted data to\n   an end host, the counters defined in this\
    \ MIB module may be used to\n   infer information about the characteristics of\
    \ the end-to-end path\n   over which the datagrams are communicated.  This information\
    \ could be\n   used to infer the type of application associated with the port\
    \ at the\n   receiver.\n   SNMP versions prior to SNMPv3 did not include adequate\
    \ security.\n   Even if the network itself is secure (for example by using IPsec),\n\
    \   even then, there is no control as to who on the secure network is\n   allowed\
    \ to access and GET/SET (read/change/create/delete) the objects\n   in this MIB\
    \ module.\n   It is RECOMMENDED that implementers consider the security features\
    \ as\n   provided by the SNMPv3 framework (see RFC 3410 [RFC3410], section 8),\n\
    \   including full support for the SNMPv3 cryptographic mechanisms (for\n   authentication\
    \ and privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n\
    \   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable\
    \ cryptographic security.  It is then a customer/operator\n   responsibility to\
    \ ensure that the SNMP entity giving access to an\n   instance of this MIB module\
    \ is properly configured to give access to\n   the objects only to those principals\
    \ (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)\
    \ them.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   The MIB module in this document uses the following\
    \ IANA-assigned\n   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:\n\
    \                 +------------+-------------------------+\n                 |\
    \ Descriptor | OBJECT IDENTIFIER value |\n                 +------------+-------------------------+\n\
    \                 | udpliteMIB |      { mib-2 170 }      |\n                 +------------+-------------------------+\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The design of the MIB module presented in this document\
    \ owes much to\n   the format of the module presented in [RFC4113].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2578]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n\
    \              Rose, M., and S. Waldbusser, \"Structure of Management\n      \
    \        Information Version 2 (SMIv2)\", STD 58, RFC 2578, April\n          \
    \    1999.\n   [RFC2579]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,\
    \ J.,\n              Rose, M., and S. Waldbusser, \"Textual Conventions for\n\
    \              SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n              Rose, M., and S.\
    \ Waldbusser, \"Conformance Statements for\n              SMIv2\", STD 58, RFC\
    \ 2580, April 1999.\n   [RFC3828]  Larzon, L-A., Degermark, M., Pink, S., Jonsson,\
    \ L-E., and\n              G. Fairhurst, \"The Lightweight User Datagram Protocol\n\
    \              (UDP-Lite)\", RFC 3828, July 2004.\n   [RFC4001]  Daniele, M.,\
    \ Haberman, B., Routhier, S., and J.\n              Schoenwaelder, \"Textual Conventions\
    \ for Internet Network\n              Addresses\", RFC 4001, February 2005.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [CASE]     Case, J. and C. Partridge, \"Case\
    \ Diagrams: A First Step to\n              Diagrammed Management Information Bases\"\
    , ACM Computer\n              Communications Review, 19(1):13-16, January 1989.\n\
    \   [RFC768]   Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n     \
    \         August 1980.\n   [RFC2287]  Krupczak, C. and J. Saperia, \"Definitions\
    \ of System-Level\n              Managed Objects for Applications\", RFC 2287,\
    \ February\n              1998.\n   [RFC2790]  Waldbusser, S. and P. Grillo, \"\
    Host Resources MIB\", RFC\n              2790, March 2000.\n   [RFC3410]  Case,\
    \ J., Mundy, R., Partain, D., and B. Stewart,\n              \"Introduction and\
    \ Applicability Statements for Internet-\n              Standard Management Framework\"\
    , RFC 3410, December 2002.\n   [RFC4113]  Fenner, B. and J. Flick, \"Management\
    \ Information Base for\n              the User Datagram Protocol (UDP)\", RFC\
    \ 4113, June 2005.\n   [RFC4340]  Kohler, E., Handley, M., and S. Floyd, \"Datagram\n\
    \              Congestion Control Protocol (DCCP)\", RFC 4340, March 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gerrit Renker\n   University of Aberdeen\n   School of\
    \ Engineering\n   Fraser Noble Building\n   Aberdeen  AB24 3UE\n   Scotland\n\
    \   EMail: gerrit@erg.abdn.ac.uk\n   URI:   http://www.erg.abdn.ac.uk\n   Godred\
    \ Fairhurst\n   University of Aberdeen\n   School of Engineering\n   Fraser Noble\
    \ Building\n   Aberdeen  AB24 3UE\n   Scotland\n   EMail: gorry@erg.abdn.ac.uk\n\
    \   URI:   http://www.erg.abdn.ac.uk\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
