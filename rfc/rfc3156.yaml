- title: __initial_text__
  contents:
  - '                       MIME Security with OpenPGP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how the OpenPGP Message Format can be used\
    \ to\n   provide privacy and authentication using the Multipurpose Internet\n\
    \   Mail Extensions (MIME) security content types described in RFC 1847.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Work on integrating PGP (Pretty Good Privacy) with MIME\
    \ [3]\n   (including the since withdrawn \"application/pgp\" content type) prior\n\
    \   to RFC 2015 suffered from a number of problems, the most significant\n   of\
    \ which is the inability to recover signed message bodies without\n   parsing\
    \ data structures specific to PGP.  RFC 2015 makes use of the\n   elegant solution\
    \ proposed in RFC 1847, which defines security\n   multipart formats for MIME.\
    \  The security multiparts clearly separate\n   the signed message body from the\
    \ signature, and have a number of\n   other desirable properties.  This document\
    \ revises RFC 2015 to adopt\n   the integration of PGP and MIME to the needs which\
    \ emerged during the\n   work on the OpenPGP specification.\n   This document\
    \ defines three content types for implementing security\n   and privacy with OpenPGP:\
    \ \"application/pgp-encrypted\",\n   \"application/pgp-signature\" and \"application/pgp-keys\"\
    .\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in RFC 2119.\n"
- title: 2.  OpenPGP data formats
  contents:
  - "2.  OpenPGP data formats\n   OpenPGP implementations can generate either ASCII\
    \ armor (described in\n   [1]) or 8-bit binary output when encrypting data, generating\
    \ a\n   digital signature, or extracting public key data.  The ASCII armor\n \
    \  output is the REQUIRED method for data transfer.  This allows those\n   users\
    \ who do not have the means to interpret the formats described in\n   this document\
    \ to be able to extract and use the OpenPGP information\n   in the message.\n\
    \   When the amount of data to be transmitted requires that it be sent in\n  \
    \ many parts, the MIME message/partial mechanism SHOULD be used rather\n   than\
    \ the multi-part ASCII armor OpenPGP format.\n"
- title: 3.  Content-Transfer-Encoding restrictions
  contents:
  - "3.  Content-Transfer-Encoding restrictions\n   Multipart/signed and multipart/encrypted\
    \ are to be treated by agents\n   as opaque, meaning that the data is not to be\
    \ altered in any way [2],\n   [7].  However, many existing mail gateways will\
    \ detect if the next\n   hop does not support MIME or 8-bit data and perform conversion\
    \ to\n   either Quoted-Printable or Base64.  This presents serious problems\n\
    \   for multipart/signed, in particular, where the signature is\n   invalidated\
    \ when such an operation occurs.  For this reason all data\n   signed according\
    \ to this protocol MUST be constrained to 7 bits (8-\n   bit data MUST be encoded\
    \ using either Quoted-Printable or Base64).\n   Note that this also includes the\
    \ case where a signed object is also\n   encrypted (see section 6).  This restriction\
    \ will increase the\n   likelihood that the signature will be valid upon receipt.\n\
    \   Additionally, implementations MUST make sure that no trailing\n   whitespace\
    \ is present after the MIME encoding has been applied.\n      Note: In most cases,\
    \ trailing whitespace can either be removed, or\n      protected by applying an\
    \ appropriate content-transfer-encoding.\n      However, special care must be\
    \ taken when any header lines - either\n      in MIME entity headers, or in embedded\
    \ RFC 822 headers - are\n      present which only consist of whitespace: Such\
    \ lines must be\n      removed entirely, since replacing them by empty lines would\
    \ turn\n      them into header delimiters, and change the semantics of the\n \
    \     message.  The restrictions on whitespace are necessary in order to\n   \
    \   make the hash calculated invariant under the text and binary mode\n      signature\
    \ mechanisms provided by OpenPGP [1].  Also, they help to\n      avoid compatibility\
    \ problems with PGP implementations which\n      predate the OpenPGP specification.\n\
    \      Note: If any line begins with the string \"From \", it is strongly\n  \
    \    suggested that either the Quoted-Printable or Base64 MIME encoding\n    \
    \  be applied.  If Quoted-Printable is used, at least one of the\n      characters\
    \ in the string should be encoded using the hexadecimal\n      coding rule.  This\
    \ is because many mail transfer and delivery\n      agents treat \"From \" (the\
    \ word \"from\" followed immediately by a\n      space character) as the start\
    \ of a new message and thus insert a\n      right angle-bracket (>) in front of\
    \ any line beginning with\n      \"From \" to distinguish this case, invalidating\
    \ the signature.\n   Data that is ONLY to be encrypted is allowed to contain 8-bit\n\
    \   characters and trailing whitespace and therefore need not undergo the\n  \
    \ conversion to a 7bit format, and the stripping of whitespace.\n      Implementor's\
    \ note: It cannot be stressed enough that applications\n      using this standard\
    \ follow MIME's suggestion that you \"be\n      conservative in what you generate,\
    \ and liberal in what you\n      accept.\"  In this particular case it means it\
    \ would be wise for an\n      implementation to accept messages with any content-transfer-\n\
    \      encoding, but restrict generation to the 7-bit format required by\n   \
    \   this memo.  This will allow future compatibility in the event the\n      Internet\
    \ SMTP framework becomes 8-bit friendly.\n"
- title: 4.  OpenPGP encrypted data
  contents:
  - "4.  OpenPGP encrypted data\n   Before OpenPGP encryption, the data is written\
    \ in MIME canonical\n   format (body and headers).\n   OpenPGP encrypted data\
    \ is denoted by the \"multipart/encrypted\"\n   content type, described in [2],\
    \ and MUST have a \"protocol\" parameter\n   value of \"application/pgp-encrypted\"\
    .  Note that the value of the\n   parameter MUST be enclosed in quotes.\n   The\
    \ multipart/encrypted MIME body MUST consist of exactly two body\n   parts, the\
    \ first with content type \"application/pgp-encrypted\".  This\n   body contains\
    \ the control information.  A message complying with this\n   standard MUST contain\
    \ a \"Version: 1\" field in this body.  Since the\n   OpenPGP packet format contains\
    \ all other information necessary for\n   decrypting, no other information is\
    \ required here.\n   The second MIME body part MUST contain the actual encrypted\
    \ data.  It\n   MUST be labeled with a content type of \"application/octet-stream\"\
    .\n   Example message:\n      From: Michael Elkins <elkins@aero.org>\n      To:\
    \ Michael Elkins <elkins@aero.org>\n      Mime-Version: 1.0\n      Content-Type:\
    \ multipart/encrypted; boundary=foo;\n         protocol=\"application/pgp-encrypted\"\
    \n      --foo\n      Content-Type: application/pgp-encrypted\n      Version: 1\n\
    \      --foo\n      Content-Type: application/octet-stream\n      -----BEGIN PGP\
    \ MESSAGE-----\n      Version: 2.6.2\n      hIwDY32hYGCE8MkBA/wOu7d45aUxF4Q0RKJprD3v5Z9K1YcRJ2fve87lMlDlx4Oj\n\
    \      eW4GDdBfLbJE7VUpp13N19GL8e/AqbyyjHH4aS0YoTk10QQ9nnRvjY8nZL3MPXSZ\n    \
    \  g9VGQxFeGqzykzmykU6A26MSMexR4ApeeON6xzZWfo+0yOqAq6lb46wsvldZ96YA\n      AABH78hyX7YX4uT1tNCWEIIBoqqvCeIMpp7UQ2IzBrXg6GtukS8NxbukLeamqVW3\n\
    \      1yt21DYOjuLzcMNe/JNsD9vDVCvOOG3OCi8=\n      =zzaA\n      -----END PGP MESSAGE-----\n\
    \      --foo--\n"
- title: 5.  OpenPGP signed data
  contents:
  - "5.  OpenPGP signed data\n   OpenPGP signed messages are denoted by the \"multipart/signed\"\
    \ content\n   type, described in [2], with a \"protocol\" parameter which MUST\
    \ have a\n   value of \"application/pgp-signature\" (MUST be quoted).\n   The\
    \ \"micalg\" parameter for the \"application/pgp-signature\" protocol\n   MUST\
    \ contain exactly one hash-symbol of the format \"pgp-<hash-\n   identifier>\"\
    , where <hash-identifier> identifies the Message\n   Integrity Check (MIC) algorithm\
    \ used to generate the signature.\n   Hash-symbols are constructed from the text\
    \ names registered in [1] or\n   according to the mechanism defined in that document\
    \ by converting the\n   text name to lower case and prefixing it with the four\
    \ characters\n   \"pgp-\".\n   Currently defined values are \"pgp-md5\", \"pgp-sha1\"\
    , \"pgp-ripemd160\",\n   \"pgp-md2\", \"pgp-tiger192\", and \"pgp-haval-5-160\"\
    .\n   The multipart/signed body MUST consist of exactly two parts.  The\n   first\
    \ part contains the signed data in MIME canonical format,\n   including a set\
    \ of appropriate content headers describing the data.\n   The second body MUST\
    \ contain the OpenPGP digital signature.  It MUST\n   be labeled with a content\
    \ type of \"application/pgp-signature\".\n      Note: Implementations can either\
    \ generate \"signatures of a\n      canonical text document\" or \"signatures\
    \ of a binary document\", as\n      defined in [1].  The restrictions on the signed\
    \ material put forth\n      in section 3 and in this section will make sure that\
    \ the various\n      MIC algorithm variants specified in [1] and [5] will all\
    \ produce\n      the same result.\n   When the OpenPGP digital signature is generated:\n\
    \   (1)   The data to be signed MUST first be converted to its content-\n    \
    \     type specific canonical form.  For text/plain, this means\n         conversion\
    \ to an appropriate character set and conversion of\n         line endings to\
    \ the canonical <CR><LF> sequence.\n   (2)   An appropriate Content-Transfer-Encoding\
    \ is then applied; see\n         section 3.  In particular, line endings in the\
    \ encoded data\n         MUST use the canonical <CR><LF> sequence where appropriate\n\
    \         (note that the canonical line ending may or may not be present\n   \
    \      on the last line of encoded data and MUST NOT be included in\n        \
    \ the signature if absent).\n   (3)   MIME content headers are then added to the\
    \ body, each ending\n         with the canonical <CR><LF> sequence.\n   (4)  \
    \ As described in section 3 of this document, any trailing\n         whitespace\
    \ MUST then be removed from the signed material.\n   (5)   As described in [2],\
    \ the digital signature MUST be calculated\n         over both the data to be\
    \ signed and its set of content headers.\n   (6)   The signature MUST be generated\
    \ detached from the signed data\n         so that the process does not alter the\
    \ signed data in any way.\n      Note: The accepted OpenPGP convention is for\
    \ signed data to end\n      with a <CR><LF> sequence.  Note that the <CR><LF>\
    \ sequence\n      immediately preceding a MIME boundary delimiter line is considered\n\
    \      to be part of the delimiter in [3], 5.1.  Thus, it is not part of\n   \
    \   the signed data preceding the delimiter line.  An implementation\n      which\
    \ elects to adhere to the OpenPGP convention has to make sure\n      it inserts\
    \ a <CR><LF> pair on the last line of the data to be\n      signed and transmitted\
    \ (signed message and transmitted message\n      MUST be identical).\n   Example\
    \ message:\n         From: Michael Elkins <elkins@aero.org>\n         To: Michael\
    \ Elkins <elkins@aero.org>\n         Mime-Version: 1.0\n         Content-Type:\
    \ multipart/signed; boundary=bar; micalg=pgp-md5;\n           protocol=\"application/pgp-signature\"\
    \n         --bar\n      & Content-Type: text/plain; charset=iso-8859-1\n     \
    \ & Content-Transfer-Encoding: quoted-printable\n      &\n      & =A1Hola!\n \
    \     &\n      & Did you know that talking to yourself is a sign of senility?\n\
    \      &\n      & It's generally a good idea to encode lines that begin with\n\
    \      & From=20because some mail transport agents will insert a greater-\n  \
    \    & than (>) sign, thus invalidating the signature.\n      &\n      & Also,\
    \ in some cases it might be desirable to encode any   =20\n      & trailing whitespace\
    \ that occurs on lines in order to ensure  =20\n      & that the message signature\
    \ is not invalidated when passing =20\n      & a gateway that modifies such whitespace\
    \ (like BITNET). =20\n      &\n      & me\n      --bar\n      Content-Type: application/pgp-signature\n\
    \      -----BEGIN PGP MESSAGE-----\n      Version: 2.6.2\n      iQCVAwUBMJrRF2N9oWBghPDJAQE9UQQAtl7LuRVndBjrk4EqYBIb3h5QXIX/LC//\n\
    \      jJV5bNvkZIGPIcEmI5iFd9boEgvpirHtIREEqLQRkYNoBActFBZmh9GC3C041WGq\n    \
    \  uMbrbxc+nIs1TIKlA08rVi9ig/2Yh7LFrK5Ein57U/W72vgSxLhe/zhdfolT9Brn\n      HOxEa44b+EI=\n\
    \      =ndaj\n      -----END PGP MESSAGE-----\n      --bar--\n   The \"&\"s in\
    \ the previous example indicate the portion of the data\n   over which the signature\
    \ was calculated.\n   Upon receipt of a signed message, an application MUST:\n\
    \   (1)   Convert line endings to the canonical <CR><LF> sequence before\n   \
    \      the signature can be verified.  This is necessary since the\n         local\
    \ MTA may have converted to a local end of line convention.\n   (2)   Pass both\
    \ the signed data and its associated content headers\n         along with the\
    \ OpenPGP signature to the signature verification\n         service.\n"
- title: 6.  Encrypted and Signed Data
  contents:
  - "6.  Encrypted and Signed Data\n   Sometimes it is desirable to both digitally\
    \ sign and then encrypt a\n   message to be sent.  This protocol allows for two\
    \ methods of\n   accomplishing this task.\n"
- title: 6.1.  RFC 1847 Encapsulation
  contents:
  - "6.1.  RFC 1847 Encapsulation\n   In [2], it is stated that the data is first\
    \ signed as a\n   multipart/signature body, and then encrypted to form the final\n\
    \   multipart/encrypted body.  This is most useful for standard MIME-\n   compliant\
    \ message forwarding.\n   Example:\n         Content-Type: multipart/encrypted;\n\
    \            protocol=\"application/pgp-encrypted\"; boundary=foo\n         --foo\n\
    \         Content-Type: application/pgp-encrypted\n         Version: 1\n     \
    \    --foo\n         Content-Type: application/octet-stream\n         -----BEGIN\
    \ PGP MESSAGE-----\n      & Content-Type: multipart/signed; micalg=pgp-md5\n \
    \     &     protocol=\"application/pgp-signature\"; boundary=bar\n      &\n  \
    \    & --bar\n      & Content-Type: text/plain; charset=us-ascii\n      &\n  \
    \    & This message was first signed, and then encrypted.\n      &\n      & --bar\n\
    \      & Content-Type: application/pgp-signature\n      &\n      & -----BEGIN\
    \ PGP MESSAGE-----\n      & Version: 2.6.2\n      &\n      & iQCVAwUBMJrRF2N9oWBghPDJAQE9UQQAtl7LuRVndBjrk4EqYBIb3h5QXIX/LC//\n\
    \      & jJV5bNvkZIGPIcEmI5iFd9boEgvpirHtIREEqLQRkYNoBActFBZmh9GC3C041WGq\n  \
    \    & uMbrbxc+nIs1TIKlA08rVi9ig/2Yh7LFrK5Ein57U/W72vgSxLhe/zhdfolT9Brn\n    \
    \  & HOxEa44b+EI=\n      & =ndaj\n      & -----END PGP MESSAGE-----\n      &\n\
    \      & --bar--\n        -----END PGP MESSAGE-----\n        --foo--\n   (The\
    \ text preceded by '&' indicates that it is really encrypted, but\n   presented\
    \ as text for clarity.)\n"
- title: 6.2.  Combined method
  contents:
  - "6.2.  Combined method\n   The OpenPGP packet format [1] describes a method for\
    \ signing and\n   encrypting data in a single OpenPGP message.  This method is\
    \ allowed\n   in order to reduce processing overhead and increase compatibility\n\
    \   with non-MIME implementations of OpenPGP.  The resulting data is\n   formatted\
    \ as a \"multipart/encrypted\" object as described in Section\n   4.\n   Messages\
    \ which are encrypted and signed in this combined fashion are\n   REQUIRED to\
    \ follow the same canonicalization rules as\n   multipart/signed objects.\n  \
    \ It is explicitly allowed for an agent to decrypt a combined message\n   and\
    \ rewrite it as a multipart/signed object using the signature data\n   embedded\
    \ in the encrypted version.\n"
- title: 7.  Distribution of OpenPGP public keys
  contents:
  - "7.  Distribution of OpenPGP public keys\n   Content-Type: application/pgp-keys\n\
    \   Required parameters: none\n   Optional parameters: none\n   A MIME body part\
    \ of the content type \"application/pgp-keys\" contains\n   ASCII-armored transferable\
    \ Public Key Packets as defined in [1],\n   section 10.1.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Signatures of a canonical text document as defined\
    \ in [1] ignore\n   trailing white space in signed material.  Implementations\
    \ which\n   choose to use signatures of canonical text documents will not be able\n\
    \   to detect the addition of whitespace in transit.\n   See [3], [4] for more\
    \ information on the security considerations\n   concerning the underlying protocols.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document defines three media types: \"application/pgp-encrypted\"\
    ,\n   \"application/pgp-signature\" and \"application/pgp-keys\".  The\n   following\
    \ sections specify the IANA registrations for these types.\n"
- title: 9.1.  Registration of the application/pgp-encrypted media type
  contents:
  - "9.1.  Registration of the application/pgp-encrypted media type\n   MIME media\
    \ type name: application\n   MIME subtype name: pgp-encrypted\n   Required parameters:\
    \ none\n   Optional parameters: none\n   Encoding considerations:\n      Currently\
    \ this media type always consists of a single 7bit text\n      string.\n   Security\
    \ considerations:\n      See Section 8 and RFC 2440 Section 13.\n   Interoperability\
    \ considerations: none\n   Published specification:\n      This document.\n  \
    \ Additional information:\n      Magic number(s): none\n      File extension(s):\
    \ none\n      Macintosh File Type Code(s): none\n   Person & email address to\
    \ contact for further information:\n      Michael Elkins\n      Email: me@cs.hmc.edu\n\
    \   Intended usage: common\n   Author/Change controller:\n      Michael Elkins\n\
    \      Email: me@cs.hmc.edu\n"
- title: 9.2.  Registration of the application/pgp-signature media type
  contents:
  - "9.2.  Registration of the application/pgp-signature media type\n   MIME media\
    \ type name: application\n   MIME subtype name: pgp-signature\n   Required parameters:\
    \ none\n   Optional parameters: none\n   Encoding considerations:\n      The content\
    \ of this media type always consists of 7bit text.\n   Security considerations:\n\
    \      See Section 8 and RFC 2440 Section 13.\n   Interoperability considerations:\
    \ none\n   Published specification:\n      RFC 2440 and this document.\n   Additional\
    \ information:\n      Magic number(s): none\n      File extension(s): asc, sig\n\
    \      Macintosh File Type Code(s): pgDS\n   Person & email address to contact\
    \ for further information:\n      Michael Elkins\n      Email: me@cs.hmc.edu\n\
    \   Intended usage: common\n   Author/Change controller:\n      Michael Elkins\n\
    \      Email: me@cs.hmc.edu\n"
- title: 9.3.  Registration of the application/pgp-keys media type
  contents:
  - "9.3.  Registration of the application/pgp-keys media type\n   MIME media type\
    \ name: application\n   MIME subtype name: pgp-keys\n   Required parameters: none\n\
    \   Optional parameters: none\n   Encoding considerations:\n      The content\
    \ of this media type always consists of 7bit text.\n   Security considerations:\n\
    \      See Section 8 and RFC 2440 Section 13.\n   Interoperability considerations:\
    \ none\n   Published specification:\n      RFC 2440 and this document.\n   Additional\
    \ information:\n      Magic number(s): none\n      File extension(s): asc\n  \
    \    Macintosh File Type Code(s): none\n   Person & email address to contact for\
    \ further information:\n      Michael Elkins\n      Email: me@cs.hmc.edu\n   Intended\
    \ usage: common\n   Author/Change controller:\n      Michael Elkins\n      Email:\
    \ me@cs.hmc.edu\n"
- title: 10.  Notes
  contents:
  - "10.  Notes\n   \"PGP\" and \"Pretty Good Privacy\" are registered trademarks\
    \ of Network\n   Associates, Inc.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   This document relies on the work of the IETF's OpenPGP\
    \ Working\n   Group's definitions of the OpenPGP Message Format.  The OpenPGP\n\
    \   message format is currently described in RFC 2440 [1].\n   Special thanks\
    \ are due: to Philip Zimmermann for his original and\n   ongoing work on PGP;\
    \ to Charles Breed, Jon Callas and Dave Del Torto\n   for originally proposing\
    \ the formation of the OpenPGP Working Group;\n   and to Steve Schoenfeld for\
    \ helpful feedback during the draft\n   process.  The authors would also like\
    \ to thank the engineers at\n   Pretty Good Privacy, Inc (now Network Associates,\
    \ Inc), including\n   Colin Plumb, Hal Finney, Jon Callas, Mark Elrod, Mark Weaver\
    \ and\n   Lloyd Chambers, for their technical commentary.\n   Additional thanks\
    \ are due to Jeff Schiller and Derek Atkins for their\n   continuing support of\
    \ strong cryptography and PGP freeware at MIT; to\n   Rodney Thayer of Sable Technology;\
    \ to John Noerenberg, Steve Dorner\n   and Laurence Lundblade of the Eudora team\
    \ at QUALCOMM, Inc; to Bodo\n   Moeller for proposing the approach followed with\
    \ respect to trailing\n   whitespace; to John Gilmore, Hugh Daniel and Fred Ringel\
    \ (at\n   Rivertown) and Ian Bell (at Turnpike) for their timely critical\n  \
    \ commentary; and to the international members of the IETF's OpenPGP\n   mailing\
    \ list, including William Geiger, Lutz Donnerhacke and Kazu\n   Yamamoto.  The\
    \ idea to use multipart/mixed with multipart/signed has\n   been attributed to\
    \ James Galvin.  Finally, our gratitude is due to\n   the many members of the\
    \ \"Cypherpunks,\" \"Coderpunks\" and \"pgp-users\"\n   <http://cryptorights.org/pgp-users>\
    \ mailing lists and the many users\n   of PGP worldwide for helping keep the path\
    \ to privacy open.\n"
- title: 12.  Addresses of the Authors and OpenPGP Working Group Chair
  contents:
  - "12.  Addresses of the Authors and OpenPGP Working Group Chair\n   The OpenPGP\
    \ working group can be contacted via the current chair:\n   John W. Noerenberg\
    \ II\n   Qualcomm, Inc.\n   5775 Morehouse Dr.\n   San Diego, CA 92121 USA\n \
    \  Phone: +1 619 658 3510\n   EMail: jwn2@qualcomm.com\n   The principal authors\
    \ of this document are:\n   Dave Del Torto\n   CryptoRights Foundation\n   80\
    \ Alviso Street, Mailstop: CRF\n   San Francisco, CA 94127 USA\n   Phone: +1.415.334.5533,\
    \ vm: #2\n   EMail: ddt@cryptorights.org, ddt@openpgp.net\n   Michael Elkins\n\
    \   Network Associates, Inc.\n   3415 S. Sepulveda Blvd Suite 700\n   Los Angeles,\
    \ CA 90034 USA\n   Phone: +1.310.737.1663\n   Fax:   +1.310.737.1755\n   Email:\
    \ me@cs.hmc.edu, Michael_Elkins@NAI.com\n   Raph Levien\n   University of California\
    \ at Berkeley\n   579 Soda Hall\n   Berkeley, CA 94720 USA\n   Phone: +1.510.642.6509\n\
    \   EMail: raph@acm.org\n   Thomas Roessler\n   Nordstrasse 99\n   D-53111 Bonn,\
    \ Germany\n   Phone: +49-228-638007\n   EMail: roessler@does-not-exist.org\n"
- title: References
  contents:
  - "References\n   [1]   Callas, J., Donnerhacke, L., Finney, H. and R. Thayer, \"\
    OpenPGP\n         Message Format\", RFC 2440, November 1998.\n   [2]   Galvin,\
    \ J., Murphy, G., Crocker, S. and N. Freed, \"Security\n         Multiparts for\
    \ MIME: Multipart/Signed and Multipart/Encrypted\",\n         RFC 1847, October\
    \ 1995.\n   [3]   Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n\
    \         Extensions (MIME) Part Two: Media Types\", RFC 2046, November\n    \
    \     1996.\n   [4]   Galvin, J., Murphy, G., Crocker, S. and N. Freed, \"MIME\
    \ Object\n         Security Services\", RFC 1848, October 1995.\n   [5]   Atkins,\
    \ D., Stallings, W. and P. Zimmermann, \"PGP Message\n         Exchange Formats\"\
    , RFC 1991, August 1996.\n   [6]   Elkins, M., \"MIME Security with Pretty Good\
    \ Privacy (PGP)\", RFC\n         2015, October 1996.\n   [7]   Freed, N., \"Gateways\
    \ and MIME Security Multiparts\", RFC 2480,\n         January 1999.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
