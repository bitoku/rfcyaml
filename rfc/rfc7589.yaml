- title: __initial_text__
  contents:
  - "     Using the NETCONF Protocol over Transport Layer Security (TLS)\n       \
    \             with Mutual X.509 Authentication\n"
- title: Abstract
  contents:
  - "Abstract\n   The Network Configuration Protocol (NETCONF) provides mechanisms\
    \ to\n   install, manipulate, and delete the configuration of network devices.\n\
    \   This document describes how to use the Transport Layer Security (TLS)\n  \
    \ protocol with mutual X.509 authentication to secure the exchange of\n   NETCONF\
    \ messages.  This revision of RFC 5539 documents the new\n   message framing used\
    \ by NETCONF 1.1 and it obsoletes RFC 5539.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7589.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Connection Initiation . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Message Framing . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   4.  Connection Closure  . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  Certificate Validation  . . . . . . . . . . . . . . . . . .\
    \ .   4\n   6.  Server Identity . . . . . . . . . . . . . . . . . . . . . . .\
    \   4\n   7.  Client Identity . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 4\n   8.  Cipher Suites . . . . . . . . . . . . . . . . . . . . . . . .   6\n\
    \   9.  Security Considerations . . . . . . . . . . . . . . . . . . .   7\n  \
    \ 10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8\n   11.\
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     11.1.\
    \  Normative References . . . . . . . . . . . . . . . . . .   8\n     11.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .   9\n   Appendix A.  Changes from\
    \ RFC 5539  . . . . . . . . . . . . . . .  10\n   Acknowledgements  . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  10\n   Authors' Addresses  . . . . .\
    \ . . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The NETCONF protocol [RFC6241] defines a mechanism through\
    \ which a\n   network device can be managed.  NETCONF is connection-oriented,\n\
    \   requiring a persistent connection between peers.  This connection\n   must\
    \ provide integrity, confidentiality, peer authentication, and\n   reliable, sequenced\
    \ data delivery.\n   This document defines how NETCONF messages can be exchanged\
    \ over\n   Transport Layer Security (TLS) [RFC5246].  Implementations MUST\n \
    \  support mutual TLS certificate-based authentication [RFC5246].  This\n   assures\
    \ the NETCONF server of the identity of the principal who\n   wishes to manipulate\
    \ the management information.  It also assures the\n   NETCONF client of the identity\
    \ of the server for which it wishes to\n   manipulate the management information.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Connection Initiation
  contents:
  - "2.  Connection Initiation\n   The peer acting as the NETCONF client MUST act\
    \ as the TLS client.\n   The TLS client actively opens the TLS connection and\
    \ the TLS server\n   passively listens for the incoming TLS connections.  The\
    \ well-known\n   TCP port number 6513 is used by NETCONF servers to listen for\
    \ TCP\n   connections established by NETCONF over TLS clients.  The TLS client\n\
    \   MUST send the TLS ClientHello message to begin the TLS handshake.\n   The\
    \ TLS server MUST send a CertificateRequest in order to request a\n   certificate\
    \ from the TLS client.  Once the TLS handshake has\n   finished, the client and\
    \ the server MAY begin to exchange NETCONF\n   messages.  Client and server identity\
    \ verification is done before the\n   NETCONF <hello> message is sent.  This means\
    \ that the identity\n   verification is completed before the NETCONF session is\
    \ started.\n"
- title: 3.  Message Framing
  contents:
  - "3.  Message Framing\n   All NETCONF messages MUST be sent as TLS \"application\
    \ data\".  It is\n   possible for multiple NETCONF messages to be contained in\
    \ one TLS\n   record, or for a NETCONF message to be transferred in multiple TLS\n\
    \   records.\n   The previous version of this specification [RFC5539] used the\
    \ framing\n   sequence defined in [RFC4742].  This version aligns with [RFC6242]\n\
    \   and adopts the framing protocol defined in [RFC6242] as follows:\n   The NETCONF\
    \ <hello> message MUST be followed by the character\n   sequence ]]>]]>.  Upon\
    \ reception of the <hello> message, the peers\n   inspect the announced capabilities.\
    \  If the :base:1.1 capability is\n   advertised by both peers, the chunked framing\
    \ mechanism defined in\n   Section 4.2 of [RFC6242] is used for the remainder\
    \ of the NETCONF\n   session.  Otherwise, the old end-of-message-based mechanism\
    \ (see\n   Section 4.3 of [RFC6242]) is used.\n"
- title: 4.  Connection Closure
  contents:
  - "4.  Connection Closure\n   A NETCONF server will process NETCONF messages from\
    \ the NETCONF\n   client in the order in which they are received.  A NETCONF session\
    \ is\n   closed using the <close-session> operation.  When the NETCONF server\n\
    \   processes a <close-session> operation, the NETCONF server SHALL\n   respond\
    \ and close the TLS session as described in Section 7.2.1 of\n   [RFC5246].\n"
- title: 5.  Certificate Validation
  contents:
  - "5.  Certificate Validation\n   Both peers MUST use X.509 certificate path validation\
    \ [RFC5280] to\n   verify the integrity of the certificate presented by the peer.\
    \  The\n   presented X.509 certificate may also be considered valid if it\n  \
    \ matches one obtained by another trusted mechanism, such as using a\n   locally\
    \ configured certificate fingerprint.  If X.509 certificate\n   path validation\
    \ fails and the presented X.509 certificate does not\n   match a certificate obtained\
    \ by a trusted mechanism, the connection\n   MUST be terminated as defined in\
    \ [RFC5246].\n"
- title: 6.  Server Identity
  contents:
  - "6.  Server Identity\n   The NETCONF client MUST check the identity of the server\
    \ according to\n   Section 6 of [RFC6125].\n"
- title: 7.  Client Identity
  contents:
  - "7.  Client Identity\n   The NETCONF server MUST verify the identity of the NETCONF\
    \ client to\n   ensure that the incoming request to establish a NETCONF session\
    \ is\n   legitimate before the NETCONF session is started.\n   The NETCONF protocol\
    \ [RFC6241] requires that the transport protocol's\n   authentication process\
    \ results in an authenticated NETCONF client\n   identity whose permissions are\
    \ known to the server.  The\n   authenticated identity of a client is commonly\
    \ referred to as the\n   NETCONF username.  The following algorithm is used by\
    \ the NETCONF\n   server to derive a NETCONF username from a certificate.  (Note\
    \ that\n   the algorithm below is the same as the one described in the\n   SNMP-TLS-TM-MIB\
    \ MIB module defined in [RFC6353] and in the\n   ietf-x509-cert-to-name YANG module\
    \ defined in [RFC7407].)\n   (a)  The server maintains an ordered list of mappings\
    \ of certificates\n        to NETCONF usernames.  Each list entry contains\n \
    \       *  a certificate fingerprint (used for matching the presented\n      \
    \     certificate),\n        *  a map type (indicates how the NETCONF username\
    \ is derived\n           from the certificate), and\n        *  optional auxiliary\
    \ data (used to carry a NETCONF username if\n           the map type indicates\
    \ the username is explicitly\n           configured).\n   (b)  The NETCONF username\
    \ is derived by considering each list entry\n        in order.  The fingerprint\
    \ member of the current list entry\n        determines whether the current list\
    \ entry is a match:\n        1.  If the list entry's fingerprint value matches\
    \ the\n            fingerprint of the presented certificate, then consider the\n\
    \            list entry as a successful match.\n        2.  If the list entry's\
    \ fingerprint value matches that of a\n            locally held copy of a trusted\
    \ certification authority (CA)\n            certificate, and that CA certificate\
    \ was part of the CA\n            certificate chain to the presented certificate,\
    \ then\n            consider the list entry as a successful match.\n   (c)  Once\
    \ a matching list entry has been found, the map type of the\n        current list\
    \ entry is used to determine how the username\n        associated with the certificate\
    \ should be determined.  Possible\n        mapping options are:\n        A.  The\
    \ username is taken from the auxiliary data of the current\n            list entry.\
    \  This means the username is explicitly\n            configured (map type 'specified').\n\
    \        B.  The subjectAltName's rfc822Name field is mapped to the\n        \
    \    username (map type 'san-rfc822-name').  The local part of\n            the\
    \ rfc822Name is used unaltered, but the host-part of the\n            name must\
    \ be converted to lowercase.\n        C.  The subjectAltName's dNSName is mapped\
    \ to the username (map\n            type 'san-dns-name').  The characters of the\
    \ dNSName are\n            converted to lowercase.\n        D.  The subjectAltName's\
    \ iPAddress is mapped to the username\n            (map type 'san-ip-address').\
    \  IPv4 addresses are converted\n            into decimal-dotted quad notation\
    \ (e.g., '192.0.2.1').  IPv6\n            addresses are converted into a 32-character\
    \ all lowercase\n            hexadecimal string without any colon separators.\n\
    \        E.  The rfc822Name, dNSName, or iPAddress of the subjectAltName\n   \
    \         is mapped to the username (map type 'san-any').  The first\n       \
    \     matching subjectAltName value found in the certificate of\n            the\
    \ above types MUST be used when deriving the name.\n        F.  The certificate's\
    \ CommonName is mapped to the username (map\n            type 'common-name').\
    \  The CommonName is converted to UTF-8\n            encoding.  The usage of CommonNames\
    \ is deprecated and users\n            are encouraged to use subjectAltName mapping\
    \ methods\n            instead.\n   (d)  If it is impossible to determine a username\
    \ from the list\n        entry's data combined with the data presented in the\n\
    \        certificate, then additional list entries MUST be searched to\n     \
    \   look for another potential match.  Similarly, if the username\n        does\
    \ not comply to the NETCONF requirements on usernames\n        [RFC6241], then\
    \ additional list entries MUST be searched to look\n        for another potential\
    \ match.  If there are no further list\n        entries, the TLS session MUST\
    \ be terminated.\n   The username provided by the NETCONF over TLS implementation\
    \ will be\n   made available to the NETCONF message layer as the NETCONF username\n\
    \   without modification.\n   The NETCONF server configuration data model [NETCONF-RESTCONF]\
    \ covers\n   NETCONF over TLS and provides further details such as certificate\n\
    \   fingerprint formats exposed to network configuration systems.\n"
- title: 8.  Cipher Suites
  contents:
  - "8.  Cipher Suites\n   Implementations MUST support TLS 1.2 [RFC5246] and are\
    \ REQUIRED to\n   support the mandatory-to-implement cipher suite.  Implementations\
    \ MAY\n   implement additional TLS cipher suites that provide mutual\n   authentication\
    \ [RFC5246] and confidentiality as required by NETCONF\n   [RFC6241].  Implementations\
    \ SHOULD follow the recommendations given\n   in [RFC7525].\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   NETCONF is used to access configuration and state\
    \ information and to\n   modify configuration information, so the ability to access\
    \ this\n   protocol should be limited to users and systems that are authorized\n\
    \   to view the NETCONF server's configuration and state or to modify the\n  \
    \ NETCONF server's configuration.\n   Configuration or state data may include\
    \ sensitive information, such\n   as usernames or security keys.  So, NETCONF\
    \ requires communications\n   channels that provide strong encryption for data\
    \ privacy.  This\n   document defines a NETCONF over TLS mapping that provides\
    \ for support\n   of strong encryption and authentication.  The security considerations\n\
    \   for TLS [RFC5246] and NETCONF [RFC6241] apply here as well.\n   NETCONF over\
    \ TLS requires mutual authentication.  Neither side should\n   establish a NETCONF\
    \ over TLS connection with an unknown, unexpected,\n   or incorrect identity on\
    \ the opposite side.  Note that the decision\n   whether a certificate presented\
    \ by the client is accepted can depend\n   on whether a trusted CA certificate\
    \ is white listed (see Section 7).\n   If deployments make use of this option,\
    \ it is recommended that the\n   white-listed CA certificate is used only to issue\
    \ certificates that\n   are used for accessing NETCONF servers.  Should the CA\
    \ certificate be\n   used to issue certificates for other purposes, then all certificates\n\
    \   created for other purposes will be accepted by a NETCONF server as\n   well,\
    \ which is likely not suitable.\n   This document does not support third-party\
    \ authentication (e.g.,\n   backend Authentication, Authorization, and Accounting\
    \ (AAA) servers)\n   due to the fact that TLS does not specify this way of authentication\n\
    \   and that NETCONF depends on the transport protocol for the\n   authentication\
    \ service.  If third-party authentication is needed, the\n   Secure Shell (SSH)\
    \ transport [RFC6242] can be used.\n   RFC 5539 assumes that the end-of-message\
    \ (EOM) sequence, ]]>]]>,\n   cannot appear in any well-formed XML document, which\
    \ turned out to be\n   mistaken.  The EOM sequence can cause operational problems\
    \ and open\n   space for attacks if sent deliberately in NETCONF messages.  It\
    \ is\n   however believed that the associated threat is not very high.  This\n\
    \   document still uses the EOM sequence for the initial <hello> message\n   to\
    \ avoid incompatibility with existing implementations.  When both\n   peers implement\
    \ the :base:1.1 capability, a proper framing protocol\n   (chunked framing mechanism;\
    \ see Section 3) is used for the rest of\n   the NETCONF session, to avoid injection\
    \ attacks.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   Per RFC 5539, IANA assigned TCP port number (6513)\
    \ in the \"Registered\n   Port Numbers\" range with the service name \"netconf-tls\"\
    .  This port\n   is the default port for NETCONF over TLS, as defined in Section\
    \ 2.\n   Below is the registration template following the rules in [RFC6335].\n\
    \      Service Name:           netconf-tls\n      Transport Protocol(s):  TCP\n\
    \      Assignee:               IESG <iesg@ietf.org>\n      Contact:          \
    \      IETF Chair <chair@ietf.org>\n      Description:            NETCONF over\
    \ TLS\n      Reference:              RFC 7589\n      Port Number:            6513\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]\
    \  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,\
    \ R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI\
    \ 10.17487/RFC5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC6125]  Saint-Andre, P. and J. Hodges, \"Representation and\n         \
    \     Verification of Domain-Based Application Service Identity\n            \
    \  within Internet Public Key Infrastructure Using X.509\n              (PKIX)\
    \ Certificates in the Context of Transport Layer\n              Security (TLS)\"\
    , RFC 6125, DOI 10.17487/RFC6125, March\n              2011, <http://www.rfc-editor.org/info/rfc6125>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <http://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <http://www.rfc-editor.org/info/rfc6242>.\n   [RFC6335]  Cotton, M., Eggert,\
    \ L., Touch, J., Westerlund, M., and S.\n              Cheshire, \"Internet Assigned\
    \ Numbers Authority (IANA)\n              Procedures for the Management of the\
    \ Service Name and\n              Transport Protocol Port Number Registry\", BCP\
    \ 165,\n              RFC 6335, DOI 10.17487/RFC6335, August 2011,\n         \
    \     <http://www.rfc-editor.org/info/rfc6335>.\n   [RFC7525]  Sheffer, Y., Holz,\
    \ R., and P. Saint-Andre,\n              \"Recommendations for Secure Use of Transport\
    \ Layer\n              Security (TLS) and Datagram Transport Layer Security\n\
    \              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May\n      \
    \        2015, <http://www.rfc-editor.org/info/rfc7525>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [NETCONF-RESTCONF]\n              Watsen, K.\
    \ and J. Schoenwaelder, \"NETCONF Server and\n              RESTCONF Server Configuration\
    \ Models\", Work in Progress,\n              draft-ietf-netconf-server-model-06,\
    \ February 2015.\n   [RFC4742]  Wasserman, M. and T. Goddard, \"Using the NETCONF\n\
    \              Configuration Protocol over Secure SHell (SSH)\", RFC 4742,\n \
    \             DOI 10.17487/RFC4742, December 2006,\n              <http://www.rfc-editor.org/info/rfc4742>.\n\
    \   [RFC5539]  Badra, M., \"NETCONF over Transport Layer Security (TLS)\",\n \
    \             RFC 5539, DOI 10.17487/RFC5539, May 2009,\n              <http://www.rfc-editor.org/info/rfc5539>.\n\
    \   [RFC6353]  Hardaker, W., \"Transport Layer Security (TLS) Transport\n    \
    \          Model for the Simple Network Management Protocol (SNMP)\",\n      \
    \        STD 78, RFC 6353, DOI 10.17487/RFC6353, July 2011,\n              <http://www.rfc-editor.org/info/rfc6353>.\n\
    \   [RFC7407]  Bjorklund, M. and J. Schoenwaelder, \"A YANG Data Model for\n \
    \             SNMP Configuration\", RFC 7407, DOI 10.17487/RFC7407,\n        \
    \      December 2014, <http://www.rfc-editor.org/info/rfc7407>.\n"
- title: Appendix A.  Changes from RFC 5539
  contents:
  - "Appendix A.  Changes from RFC 5539\n   This section summarizes major changes\
    \ between this document and RFC\n   5539.\n   o  Documented that NETCONF over\
    \ TLS uses the new message framing if\n      both peers support the :base:1.1\
    \ capability.\n   o  Removed redundant text that can be found in the TLS and NETCONF\n\
    \      specifications and restructured the text.  Alignment with\n      [RFC6125].\n\
    \   o  Added a high-level description on how NETCONF usernames are\n      derived\
    \ from certificates.\n   o  Removed the reference to BEEP.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors like to acknowledge Martin Bjorklund, Olivier\
    \ Coupelon,\n   Pasi Eronen, Mehmet Ersue, Stephen Farrell, Miao Fuyou, Ibrahim\n\
    \   Hajjeh, David Harrington, Sam Hartman, Alfred Hoenes, Simon\n   Josefsson,\
    \ Charlie Kaufman, Barry Leiba, Tom Petch, Tim Polk, Eric\n   Rescorla, Dan Romascanu,\
    \ Kent Watsen, Bert Wijnen, Stefan Winter, and\n   the NETCONF mailing list members\
    \ for their comments on this document.\n   Juergen Schoenwaelder was partly funded\
    \ by Flamingo, a Network of\n   Excellence project (ICT-318488) supported by the\
    \ European Commission\n   under its Seventh Framework Programme.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mohamad Badra\n   Zayed University\n   P.O. Box 19282\n\
    \   Dubai, United Arab Emirates\n   Phone: +971 4 4021879\n   EMail: mohamad.badra@zu.ac.ae\n\
    \   URI:   http://www.zu.ac.ae\n   Alan Luchuk\n   SNMP Research, Inc.\n   3001\
    \ Kimberlin Heights Road\n   Knoxville, TN  37920\n   United States\n   Phone:\
    \ +1 865 573 1434\n   EMail: luchuk@snmp.com\n   URI:   http://www.snmp.com/\n\
    \   Juergen Schoenwaelder\n   Jacobs University Bremen\n   Campus Ring 1\n   28759\
    \ Bremen\n   Germany\n   Phone: +49 421 200 3587\n   EMail: j.schoenwaelder@jacobs-university.de\n\
    \   URI:   http://www.jacobs-university.de/\n"
