Abstract This document proposes the addition of new cipher suites to the Transport Layer Security (TLS) protocol to support the Camellia encryption algorithm as a bulk cipher algorithm.
This document proposes the addition of new cipher suites to the TLS protocol [TLS] to support the Camellia encryption algorithm as a bulk cipher algorithm.
This proposal provides a new option for fast and efficient bulk cipher algorithms.
Note: This work was done when the first author worked for NTT.
Camellia Camellia was selected as a recommended cryptographic primitive by the EU NESSIE (
New European Schemes for Signatures, Integrity and Encryption) project [NESSIE] and included in the list of cryptographic techniques for Japanese e Government systems, which were selected by the Japan CRYPTREC (Cryptography Research and Evaluation Committees)
Camellia is also included in specification of the TV Anytime Forum [TV ANYTIME].
Anytime Forum is an association of organizations that seeks to develop specifications to enable audio visual and other services based on mass market high volume digital storage in consumer platforms.
Camellia is specified as Cipher Suite in TLS used by Phase 1 S 7 (Bi directional Metadata Delivery Protection) specification and S 5 (TV Anytime Rights Management and Protection Information for Broadcast Applications) specification.
Camellia has been submitted to other several standardization bodies such as ISO (ISO/IEC 18033) and IETF S/MIME Mail Security Working Group [Camellia CMS].
Camellia supports 128 bit block size and 128 , 192 , and 256 bit key sizes; i.e., the same interface specifications as the Advanced Encryption Standard (AES) [AES].
Camellia was jointly developed by NTT and Mitsubishi Electric Corporation in 2000 [CamelliaTech].
It was carefully designed to withstand all known cryptanalytic attacks and even to have a sufficiently large security leeway.
It has been scrutinized by worldwide cryptographic experts.
Camellia was also designed to be suitable for both software and hardware implementations and to cover all possible encryption applications, from low cost smart cards to high speed network systems.
Compared to the AES, Camellia offers at least comparable encryption speed in software and hardware.
In addition, a distinguishing feature is its small hardware design.
Camellia perfectly meets one of the current TLS market requirements, for which low power consumption is mandatory.
The algorithm specification and object identifiers are described in [Camellia Desc].
The Camellia homepage, http://info.isl.ntt.co.jp/camellia/, contains a wealth of information about camellia, including detailed specification, security analysis, performance figures, reference implementation, and test vectors.
The key words "MUST", "MUST NOT", "REQUIRED", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document (in uppercase, as shown) are to be interpreted as described in [RFC2119].
The new cipher suites proposed here have the following definitions: CipherSuite TLS RSA WITH CAMELLIA 128
All the cipher suites described here use Camellia in cipher block chaining (CBC) mode as a bulk cipher algorithm.
Camellia is a 128  bit block cipher with 128 , 192 , and 256 bit key sizes; i.e., it supports the same block and key sizes as the Advanced Encryption Standard (AES).
However, this document only defines cipher suites for 128  and 256 bit keys as well as AES cipher suites for TLS [AES TLS].
These cipher suites are efficient and practical enough for most uses, including high security applications.
16 CAMELLIA 256 CBC Block   32
All the cipher suites described here use SHA 1
[SHA 1] in a Hashed Message Authentication Code (HMAC) construction, as described in section 5 of [TLS].
The cipher suites defined here differ in the type of certificate and key exchange method.
They use the following options:
It is not believed that the new cipher suites are ever less secure than the corresponding older ones.
Camellia is considered secure, and it has withstood extensive cryptanalytic efforts in several open, worldwide cryptographic evaluation projects [CRYPTREC][NESSIE].
At the time of writing this document, there are no known weak keys for Camellia.
For other security considerations, please refer to the security considerations of the corresponding older cipher suites described in [TLS] and [AES TLS].
