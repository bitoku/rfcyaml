- title: __initial_text__
  contents:
  - "     Multimedia Terminal Adapter (MTA) Management Information Base\n        \
    \   for PacketCable- and IPCablecom-Compliant Devices\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   In\
    \ particular, it defines a basic set of managed objects for Simple\n   Network\
    \ Management Protocol (SNMP)-based management of PacketCable-\n   and IPCablecom-compliant\
    \ Multimedia Terminal Adapter devices.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. The Internet-Standard Management Framework ......................2\n\
    \   2. Terminology .....................................................2\n  \
    \ 3. Introduction ....................................................4\n    \
    \  3.1. Structure of the MTA MIB ...................................5\n      3.2.\
    \ pktcMtaDevBase .............................................5\n      3.3. pktcMtaDevServer\
    \ ...........................................6\n      3.4. pktcMtaDevSecurity\
    \ .........................................6\n      3.5. Relationship between\
    \ MIB Objects in the MTA MIB ............7\n      3.6. Secure Software Download\
    \ ...................................8\n      3.7. X.509 Certificates Dependencies\
    \ ............................8\n   4. Definitions .....................................................9\n\
    \   5. Acknowledgements ...............................................52\n  \
    \ 6. Security Considerations ........................................52\n   7.\
    \ IANA Considerations ............................................55\n   8. Normative\
    \ References ...........................................55\n   9. Informative\
    \ References .........................................57\n"
- title: 1.  The Internet-Standard Management Framework
  contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\", when used in the guidelines in this memo, are\
    \ to be\n   interpreted as described in RFC 2119 [RFC2119].\n   The terms \"MIB\
    \ module\" and \"information module\" are used\n   interchangeably in this memo.\
    \  As used here, both terms refer to any\n   of the three types of information\
    \ modules defined in Section 3 of RFC\n   2578 [RFC2578].\n   Some of the terms\
    \ used in this memo are defined below.  Some\n   additional terms are also defined\
    \ in the PacketCable MTA Device\n   Provisioning Specification [PKT-SP-PROV] and\
    \ the PacketCable Security\n   Specification [PKT-SP-SEC].\n   DOCSIS\n   The\
    \ CableLabs(R) Certified(TM) Cable Modem project, also known as\n   DOCSIS(R)\
    \ (Data over Cable Service Interface Specification), defines\n   interface requirements\
    \ for cable modems involved in high-speed data\n   distribution over cable television\
    \ system networks.  DOCSIS also\n   refers to the ITU-T J.112 recommendation,\
    \ Annex B, for cable modem\n   systems [ITU-T-J112].\n   Cable Modem\n   A Cable\
    \ Modem (CM) acts as a data transport agent used to transfer\n   call management\
    \ and voice data packets over a DOCSIS-compliant cable\n   system.\n   Multimedia\
    \ Terminal Adapter\n   A Multimedia Terminal Adapter (MTA) is a PacketCable- or\
    \ IPCablecom-\n   compliant device providing telephony services over a cable or\
    \ hybrid\n   system used to deliver video signals to a community.  It contains\
    \ an\n   interface to endpoints, a network interface, CODECs, and all\n   signaling\
    \ and encapsulation functions required for Voice over IP\n   transport, call signaling,\
    \ and Quality of Service signaling.  An MTA\n   can be an embedded or a standalone\
    \ device.  An Embedded MTA (E-MTA)\n   is an MTA device containing an embedded\
    \ DOCSIS Cable Modem.  A\n   Standalone MTA (S-MTA) is an MTA device separated\
    \ from the DOCSIS\n   cable modem by non-DOCSIS Message Access Control (MAC) interface\n\
    \   (e.g., Ethernet, USB).\n   Endpoint\n   An endpoint or MTA endpoint is a standard\
    \ RJ-11 telephony physical\n   port located on the MTA and used for attaching\
    \ the telephone device\n   to the MTA.\n   X.509 Certificate\n   A X.509 certificate\
    \ is an Internet X.509 Public Key Infrastructure\n   certificate developed as\
    \ part of the ITU-T X.500 Directory\n   recommendations.  It is defined in RFC\
    \ 3280 [RFC3280] and RFC 4630\n   [RFC4630].\n   Voice over IP\n   Voice over\
    \ IP (VoIP) is a technology providing the means to transfer\n   digitized packets\
    \ with voice information over IP networks.\n   Public Key Certificate\n   A Public\
    \ Key Certificate (also known as a Digital Certificate) is a\n   binding between\
    \ an entity's public key and one or more attributes\n   relating to its identity.\n\
    \   DHCP\n   The Dynamic Host Configuration Protocol (DHCP) is defined by RFC\
    \ 2131\n   [RFC2131].  In addition, commonly used DHCP options are defined in\n\
    \   RFC 2132 [RFC2132].  Additional DHCP options used by PacketCable and\n   IPCablecom\
    \ MTAs can be found in the CableLabs Client Configuration\n   DHCP specifications,\
    \ RFC 3495 [RFC3495] and RFC 3594 [RFC3594].\n   TFTP\n   The Trivial File Transfer\
    \ Protocol (TFTP) is defined by RFC 1350\n   [RFC1350].\n   HTTP\n   The Hypertext\
    \ Transfer Protocol (HTTP/1.1) is defined by RFC 2616\n   [RFC2616].\n   Call\
    \ Management Server\n   A Call Management Server (CMS) is an element of the PacketCable\n\
    \   network infrastructure that controls audio connections between MTAs.\n   CODEC,\
    \ COder-DECoder\n   A Coder-DECoder is a hardware or software component used in\n\
    \   audio/video systems to convert an analog signal to digital, and then\n   (possibly)\
    \ to compress it so that lower bandwidth telecommunications\n   channels can be\
    \ used.  The signal is decompressed and converted\n   (decoded) back to analog\
    \ output by a compatible CODEC at the\n   receiving end.\n   Operations Systems\
    \ Support\n   An Operations Systems Support system (OSS) is a system of back office\n\
    \   software components used for fault, configuration, accounting,\n   performance,\
    \ and security management working in interaction with each\n   other and providing\
    \ the operations support in deployed PacketCable\n   systems.\n   Key Distribution\
    \ Center\n   A Key Distribution Center (KDC) is an element of the OSS systems\n\
    \   functioning as a Kerberos Security Server, providing mutual\n   authentication\
    \ of the various components of the PacketCable system\n   (e.g., mutual authentication\
    \ between an MTA and a CMS, or between an\n   MTA and the Provisioning Server).\n\
    \   Security Association\n   A Security Association (SA) is a one-way relationship\
    \ between a\n   sender and a receiver offering security services on the communication\n\
    \   flow.\n"
- title: 3.  Introduction
  contents:
  - "3.  Introduction\n   This MIB module provides a set of objects required for the\
    \ management\n   of PacketCable, ETSI, and ITU-T IPCablecom compliant MTA devices.\n\
    \   The MTA MIB module is intended to supersede various MTA MIB modules\n   from\
    \ which it is partly derived:\n   -  The PacketCable 1.0 MTA MIB Specification\
    \ [PKT-SP-MIB-MTA].\n   -  The ITU-T IPCablecom MTA MIB requirements [ITU-T-J168].\n\
    \   -  The ETSI MTA MIB [ETSITS101909-8].  The ETSI MTA MIB requirements\n   \
    \   also refer to various signal characteristics defined in\n      [EN300001],\
    \ Chapter 3, titled 'Ringing Signal Characteristics',\n      and [EN300659-1].\n\
    \   Several normative and informative references are used to help define\n   MTA\
    \ MIB objects.  As a convention, wherever PacketCable and\n   IPCablecom requirements\
    \ are equivalent, the PacketCable reference is\n   used in the object REFERENCE\
    \ clause.  IPCablecom-compliant MTA\n   devices MUST use the equivalent IPCablecom\
    \ references.\n"
- title: 3.1.  Structure of the MTA MIB
  contents:
  - "3.1.  Structure of the MTA MIB\n   The MTA MIB module is identified by pktcIetfMtaMib\
    \ and is structured\n   in three object groups:\n   -  pktcMtaDevBase defines\
    \ the management information pertinent to the\n      MTA device itself.\n   -\
    \  pktcMtaDevServer defines the management information pertinent to\n      the\
    \ provisioning back office servers.\n   -  pktcMtaDevSecurity defines the management\
    \ information pertinent to\n      the PacketCable and IPCablecom security mechanisms.\n\
    \   The first two object groups, pktcMtaDevBase and pktcMtaDevServer,\n   contain\
    \ only scalar information objects describing the corresponding\n   characteristics\
    \ of the MTA device and back office servers.\n   The third group, pktcMtaDevSecurity,\
    \ contains two tables controlling\n   the logical associations between KDC realms\
    \ and Application Servers\n   (CMS and Provisioning Server).  The rows in the\
    \ various tables of the\n   MTA MIB module can be created automatically (e.g.,\
    \ by the device\n   according to the current state information), or they can be\
    \ created\n   by the management station, depending on the operational situation.\n\
    \   The tables defined in the MTA MIB module may have a mixture of both\n   types\
    \ of rows.\n"
- title: 3.2.  pktcMtaDevBase
  contents:
  - "3.2.  pktcMtaDevBase\n   This object group contains the management information\
    \ related to the\n   MTA device itself.  It also contains some objects used to\
    \ control the\n   MTA state.  Some highlights are as follows:\n   -  pktcMtaDevSerialNumber.\
    \  This object contains the MTA Serial\n      Number.\n   -  pktcMtaDevEndPntCount.\
    \  This object contains the number of\n      endpoints present in the managed\
    \ MTA.\n   -  pktcMtaDevProvisioningState.  This object contains the information\n\
    \      describing the completion state of the MTA initialization process.\n  \
    \ -  pktcMtaDevEnabled.  This object controls the administrative state\n     \
    \ of the MTA endpoints and allows operators to enable or disable\n      telephony\
    \ services on the device.\n   -  pktcMtaDevResetNow.  This object is used to instruct\
    \ the MTA to\n      reset.\n"
- title: 3.3.  pktcMtaDevServer
  contents:
  - "3.3.  pktcMtaDevServer\n   This object group contains the management information\
    \ describing the\n   back office servers and the parameters related to the communication\n\
    \   timers.  It also includes some objects controlling the initial MTA\n   interaction\
    \ with the Provisioning Server.\n   Some highlights are as follows:\n   -  pktcMtaDevServerDhcp1.\
    \  This object contains the IP address of the\n      primary DHCP server designated\
    \ for the MTA provisioning.\n   -  pktcMtaDevServerDhcp2.  This object contains\
    \ the IP address of the\n      secondary DHCP server designated for the MTA provisioning.\n\
    \   -  pktcMtaDevServerDns1.  This object contains the IP address of the\n   \
    \   primary DNS used by the managed MTA to resolve the Fully Qualified\n     \
    \ Domain Name (FQDN) and IP addresses.\n   -  pktcMtaDevServerDns2.  This object\
    \ contains the IP address of the\n      secondary DNS used by the managed MTA\
    \ to resolve the FQDN and IP\n      addresses.\n   -  pktcMtaDevConfigFile.  This\
    \ object contains the name of the\n      provisioning configuration file the managed\
    \ MTA must download from\n      the Provisioning Server.\n   -  pktcMtaDevProvConfigHash.\
    \  This object contains the hash value of\n      the MTA configuration file calculated\
    \ over its content.  When the\n      managed MTA downloads the file, it authenticates\
    \ the configuration\n      file using the hash value provided in this object.\n"
- title: 3.4.  pktcMtaDevSecurity
  contents:
  - "3.4.  pktcMtaDevSecurity\n   This object group contains the management information\
    \ describing the\n   security-related characteristics of the managed MTA.  It\
    \ contains two\n   tables describing logical dependencies and parameters necessary\
    \ to\n   establish Security Associations between the MTA and other Application\n\
    \   Servers (back office components and CMSes).  The CMS table\n   (pktcMtaDevCmsTable)\
    \ and the realm table (pktcMtaDevRealmTable) are\n   used for managing the MTA\
    \ signaling security.  The realm table\n   defines the CMS domains.  The CMS table\
    \ defines the CMS within the\n   domains.  Each MTA endpoint is associated with\
    \ one CMS at any given\n   time.\n   The two tables in this object group are as\
    \ follows:\n   -  pktcMtaDevRealmTable.  This table is used in conjunction with\
    \ any\n      Application Server that communicates securely with the managed MTA\n\
    \      (CMS or Provisioning Server).\n   -  pktcMtaDevCmsTable.  This table contains\
    \ the parameters describing\n      the SA establishment between the MTA and CMSes.\n"
- title: 3.5.  Relationship between MIB Objects in the MTA MIB
  contents:
  - "3.5.  Relationship between MIB Objects in the MTA MIB\n   This section clarifies\
    \ the relationship between various MTA MIB\n   objects with respect to the role\
    \ they play in the process of\n   establishing Security Associations.\n   The\
    \ process of Security Association establishment between an MTA and\n   Application\
    \ Servers is described in the PacketCable Security\n   Specification [PKT-SP-SEC].\
    \  In particular, an MTA communicates with\n   2 types of back office Application\
    \ Servers: Call Management Servers\n   and Provisioning Servers.\n   The SA establishment\
    \ process consists of two steps:\n   a. Authentication Server Exchange (AS-exchange).\
    \  This step provides\n      mutual authentication between the parties; i.e.,\
    \ between an MTA\n      and an Authentication Server.  The process of AS-exchange\
    \ is\n      defined by a number of parameters grouped per each realm.  These\n\
    \      parameters are gathered in the Realm Table (pktcMtaDevRealmTable).\n  \
    \    The Realm Table is indexed by the Index Counter and contains\n      conceptual\
    \ column with the Kerberos realm name.\n   b. Application server exchange (AP-exchange).\
    \  This step allows for\n      the establishment of Security Associations between\
    \ authenticated\n      parties.  The CMS table (pktcMtaDevCmsTable) contains the\n\
    \      parameters for the AP-exchange process between an MTA and a CMS.\n    \
    \  The CMS table is indexed by the Index Counter and contains the CMS\n      FQDN\
    \ (the conceptual column pktcMtaDevCmsFqdn).  Each row contains\n      the Kerberos\
    \ realm name associated with each CMS FQDN.  This\n      allows for each CMS to\
    \ exist in a different Kerberos realm.\n   The MTA MIB module also contains a\
    \ group of scalar MIB objects in the\n   server group (pktcMtaDevServer).  These\
    \ objects define various\n   parameters for the AP-exchange process between an\
    \ MTA and the\n   Provisioning Server.  These objects are:\n      -  pktcMtaDevProvUnsolicitedKeyMaxTimeout,\n\
    \      -  pktcMtaDevProvUnsolicitedKeyNomTimeout,\n      -  pktcMtaDevProvUnsolicitedKeyMaxRetries,\
    \ and\n      -  pktcMtaDevProvSolicitedKeyTimeout.\n"
- title: 3.6.  Secure Software Download
  contents:
  - "3.6.  Secure Software Download\n   E-MTAs are embedded with DOCSIS 1.1 cable\
    \ modems.  E-MTAs have their\n   software upgraded by the Cable Modem according\
    \ to the DOCSIS\n   requirements.\n   Although E-MTAs have their software upgraded\
    \ by the Cable Modem\n   according to the DOCSIS requirements, S-MTAs implement\
    \ a specific\n   mechanism for Secure Software Download.  This provides a means\
    \ to\n   verify the code upgrade using Code Verification Certificates and is\n\
    \   modeled after the DOCSIS mechanism implemented in Cable Modems.  This\n  \
    \ is the reason why the MTA MIB and the S-MTA compliance modules also\n   rely\
    \ on two MIB object groups:\n   -  docsBpi2CodeDownloadGroup, defined in the IETF\
    \ BPI Plus MIB module\n      (DOCS-IETF-BPI2-MIB [RFC4131]).\n   -  docsDevSoftwareGroupV2,\
    \ defined in the IETF Cable Devicev2 MIB\n      module (DOCS-CABLE-DEVICE-MIB\
    \ [RFC4639]).\n"
- title: 3.7.  X.509 Certificates Dependencies
  contents:
  - "3.7.  X.509 Certificates Dependencies\n   As specified in the PacketCable Security\
    \ Specification [PKT-SP-SEC],\n   E-MTAs must use the authentication mechanism\
    \ based on the X.509\n   Public Key Infrastructure Certificates, as defined in\
    \ RFC 3280\n   [RFC3280] and RFC 4630 [RFC4630].\n   The value of the pktcMtaDevRealmOrgName\
    \ MIB object should contain the\n   X.509 organization name attribute of the Telephony\
    \ Service Provider\n   certificate (OrganizationName).  X.509 attributes are defined\
    \ using\n   UTF-8 string encoding [RFC3629, RFC3280, and RFC4630].\n   Note that\
    \ UTF-8 encoded characters can be encoded as sequences of 1\n   to 6 octets, assuming\
    \ that code points as high as 0x7ffffffff might\n   be used ([RFC3629]).  Subsequent\
    \ versions of Unicode and ISO 10646\n   have limited the upper bound to 0x10ffff\
    \ ([RFC3629]).  Consequently,\n   the current version of UTF-8, defined in RFC\
    \ 3629, does not require\n   more than four octets to encode a valid code point.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   The MIB module below makes references and citations to [RFC868],\n\
    \   [RFC3280], [RFC4630], and [RFC3617].\n   PKTC-IETF-MTA-MIB DEFINITIONS ::=\
    \ BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\n       OBJECT-TYPE,\n       OBJECT-IDENTITY,\n\
    \       Unsigned32,\n       Counter32,\n       NOTIFICATION-TYPE,\n       mib-2\n\
    \             FROM SNMPv2-SMI                    -- [RFC2578]\n       TEXTUAL-CONVENTION,\n\
    \       RowStatus,\n       TruthValue\n             FROM SNMPv2-TC           \
    \          -- [RFC2579]\n       OBJECT-GROUP,\n       MODULE-COMPLIANCE,\n   \
    \    NOTIFICATION-GROUP\n             FROM SNMPv2-CONF                   -- [RFC2580]\n\
    \       InetAddressType,\n       InetAddress\n             FROM INET-ADDRESS-MIB\
    \              -- [RFC4001]\n       sysDescr\n             FROM SNMPv2-MIB   \
    \                 -- [RFC3418]\n       SnmpAdminString\n             FROM SNMP-FRAMEWORK-MIB\
    \            -- [RFC3411]\n       docsDevSoftwareGroupV2\n             FROM DOCS-CABLE-DEVICE-MIB\
    \         -- [RFC4639]\n       DocsX509ASN1DEREncodedCertificate,\n       docsBpi2CodeDownloadGroup\n\
    \             FROM DOCS-IETF-BPI2-MIB            -- [RFC4131]\n       LongUtf8String\n\
    \             FROM SYSAPPL-MIB                   -- [RFC2287]\n       ifPhysAddress\n\
    \             FROM IF-MIB;                       -- [RFC2863]\n       pktcIetfMtaMib\
    \ MODULE-IDENTITY\n       LAST-UPDATED \"200609180000Z\" -- September 18, 2006\n\
    \       ORGANIZATION \"IETF IP over Cable Data Network Working Group\"\n     \
    \  CONTACT-INFO\n           \"Eugene Nechamkin\n            Broadcom Corporation,\n\
    \            200-13711 International Place,\n            Richmond, BC, V6V 2Z8\n\
    \            CANADA\n            Phone: +1 604 233 8500\n            Email: enechamkin@broadcom.com\n\
    \            Jean-Francois Mule\n            Cable Television Laboratories, Inc.\n\
    \            858 Coal Creek Circle\n            Louisville, CO 80027-9750\n  \
    \          U.S.A.\n            Phone: +1 303 661 9100\n            Email: jf.mule@cablelabs.com\n\
    \       IETF IPCDN Working Group\n            General Discussion: ipcdn@ietf.org\n\
    \            Subscribe: http://www.ietf.org/mailman/listinfo/ipcdn\n         \
    \   Archive: ftp://ftp.ietf.org/ietf-mail-archive/ipcdn\n            Co-Chair:\
    \ Jean-Francois Mule, jf.mule@cablelabs.com\n            Co-Chair: Richard Woundy,\
    \ Richard_Woundy@cable.comcast.com\"\n       DESCRIPTION\n          \"This MIB\
    \ module defines the basic management object\n           for the Multimedia Terminal\
    \ Adapter devices compliant\n           with PacketCable and IPCablecom requirements.\n\
    \           Copyright (C) The IETF Trust (2006).  This version of\n          \
    \ this MIB module is part of RFC 4682; see the RFC itself for\n           full\
    \ legal notices.\"\n       REVISION    \"200609180000Z\"   -- September 18, 2006\n\
    \       DESCRIPTION\n          \"Initial version, published as RFC 4682.\"\n \
    \  ::=  { mib-2 140 }\n      -- Textual Conventions\n   PktcMtaDevProvEncryptAlg\
    \  ::= TEXTUAL-CONVENTION\n       STATUS      current\n       DESCRIPTION\n  \
    \         \" This textual convention defines various types of the\n          \
    \   encryption algorithms used for the encryption of the MTA\n             configuration\
    \ file.  The description of the encryption\n             algorithm for each enumerated\
    \ value is as follows:\n             'none(0)'            no encryption is used,\n\
    \             'des64CbcMode(1)'    DES 64-bit key in CBC mode,\n             't3Des192CbcMode(2)'\
    \ 3DES 192-bit key in CBC mode,\n             'aes128CbcMode(3)'   AES 128-bit\
    \ key in CBC mode,\n             'aes256CbcMode(4)'   AES 256-bit key in CBC mode.\"\
    \n       SYNTAX      INTEGER  {\n                   none             (0),\n  \
    \                 des64CbcMode     (1),\n                   t3Des192CbcMode  (2),\n\
    \                   aes128CbcMode    (3),\n                   aes256CbcMode  \
    \  (4)\n       }\n   --=================================================================\n\
    \   -- The MTA MIB module only supports a single Provisioning Server.\n   --=================================================================\n\
    \   pktcMtaNotification OBJECT IDENTIFIER ::= { pktcIetfMtaMib 0 }\n   pktcMtaMibObjects\
    \  OBJECT IDENTIFIER ::= { pktcIetfMtaMib 1 }\n   pktcMtaDevBase     OBJECT IDENTIFIER\
    \ ::= { pktcMtaMibObjects 1 }\n   pktcMtaDevServer   OBJECT IDENTIFIER ::= { pktcMtaMibObjects\
    \ 2 }\n   pktcMtaDevSecurity OBJECT IDENTIFIER ::= { pktcMtaMibObjects 3 }\n \
    \  pktcMtaDevErrors   OBJECT IDENTIFIER ::= { pktcMtaMibObjects 4 }\n   pktcMtaConformance\
    \  OBJECT IDENTIFIER ::= { pktcIetfMtaMib 2 }\n   --\n   -- The following pktcMtaDevBase\
    \ group describes the base MTA objects\n   --\n   pktcMtaDevResetNow  OBJECT-TYPE\n\
    \       SYNTAX      TruthValue\n       MAX-ACCESS  read-write\n       STATUS \
    \     current\n       DESCRIPTION\n           \" This object controls the MTA\
    \ software reset.\n             Reading this object always returns 'false'.  Setting\
    \ this\n             object to 'true' causes the device to reset immediately\n\
    \             and the following actions to occur:\n                1.  All connections\
    \ (if present) are flushed locally.\n                2.  All current actions such\
    \ as ringing immediately\n                    terminate.\n                3. \
    \ Requests for signaling notifications, such as\n                    notification\
    \ based on digit map recognition, are\n                    flushed.\n        \
    \        4.  All endpoints are disabled.\n                5.  The provisioning\
    \ flow is started at step MTA-1.\n             If a value is written into an instance\
    \ of\n             pktcMtaDevResetNow, the agent MUST NOT retain the supplied\n\
    \             value across MTA re-initializations or reboots.\"\n       REFERENCE\n\
    \           \" PacketCable MTA Device Provisioning Specification.\"\n       ::=\
    \ { pktcMtaDevBase 1 }\n   pktcMtaDevSerialNumber OBJECT-TYPE\n       SYNTAX \
    \     SnmpAdminString\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object specifies the manufacturer's serial\n\
    \             number of this MTA.  The value of this object MUST be\n        \
    \     identical to the value specified in DHCP option 43,\n             sub-option\
    \ 4.  The list of sub-options for DHCP option\n             43 are defined in\
    \ the PacketCable MTA Device\n             Provisioning Specification.\"\n   \
    \    REFERENCE\n           \" PacketCable MTA Device Provisioning Specification.\"\
    \n       ::= { pktcMtaDevBase 2 }\n   pktcMtaDevSwCurrentVers OBJECT-TYPE\n  \
    \     SYNTAX      SnmpAdminString\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \" This object identifies the software\
    \ version currently\n             operating in the MTA.\n             The MTA\
    \ MUST return a string descriptive of the current\n             software load.\
    \  This object should use the syntax\n             defined by the individual vendor\
    \ to identify the software\n             version.  The data presented in this\
    \ object MUST be\n             identical to the software version information contained\n\
    \             in the 'sysDescr' MIB object of the MTA.  The value of\n       \
    \      this object MUST be identical to the value specified in\n             DHCP\
    \ option 43, sub-option 6.  The list of sub-options for\n             DHCP option\
    \ 43 are defined in the PacketCable MTA Device\n             Provisioning Specification.\"\
    \n       REFERENCE\n           \" PacketCable MTA Device Provisioning Specification.\"\
    \n   ::= { pktcMtaDevBase 3 }\n   pktcMtaDevFQDN      OBJECT-TYPE\n       SYNTAX\
    \      SnmpAdminString\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object contains the Fully Qualified Domain\
    \ Name for\n             this MTA.  The MTA FQDN is used to uniquely identify\
    \ the\n             device to the PacketCable back office elements.\"\n      \
    \ ::= { pktcMtaDevBase 4 }\n   pktcMtaDevEndPntCount     OBJECT-TYPE\n       SYNTAX\
    \      Unsigned32 (1..255)\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object contains the number of physical\
    \ endpoints for\n             this MTA.\"\n       ::= { pktcMtaDevBase 5 }\n \
    \  pktcMtaDevEnabled     OBJECT-TYPE\n       SYNTAX      TruthValue\n       MAX-ACCESS\
    \  read-write\n       STATUS      current\n       DESCRIPTION\n            \"\
    \ This object contains the MTA Admin Status of this device.\n              If\
    \ this object is set to 'true', the MTA is\n              administratively enabled,\
    \ and the MTA MUST be able to\n              interact with the PacketCable entities,\
    \ such as CMS,\n              Provisioning Server, KDC, and other MTAs and MGs\
    \ on all\n              PacketCable interfaces.\n              If this object\
    \ is set to 'false', the MTA is\n              administratively disabled, and\
    \ the MTA MUST perform the\n              following actions for all endpoints:\n\
    \                  - Shut down all media sessions, if present.\n             \
    \     - Shut down Network Control Signaling (NCS)\n                  signaling\
    \ by following the Restart in\n                  Progress procedures in the PacketCable\
    \ NCS\n                  specification.\n              The MTA must execute all\
    \ actions required to\n              enable or disable the telephony services\
    \ for all\n              endpoints immediately upon receipt of an SNMP SET\n \
    \             operation.\n              Additionally, the MTA MUST maintain the\
    \ SNMP Interface\n              for management and also the SNMP Key management\
    \ interface.\n              Also, the MTA MUST NOT continue Kerberized key management\n\
    \              with CMSes until this object is set to 'true'.\n              Note:\
    \ MTAs MUST renew the CMS Kerberos tickets according\n              to the PacketCable\
    \ Security or IPCablecom Specification.\n              If a value is written into\
    \ an instance of\n              pktcMtaDevEnabled, the agent MUST NOT retain the\
    \ supplied\n              value across MTA re-initializations or reboots.\"\n\
    \       REFERENCE\n           \" PacketCable MTA Device Provisioning Specification;\n\
    \             PacketCable Security Specification;\n             PacketCable Network-Based\
    \ Call Signaling Protocol\n             Specification.\"\n       ::= { pktcMtaDevBase\
    \ 6 }\n   pktcMtaDevTypeIdentifier     OBJECT-TYPE\n       SYNTAX      SnmpAdminString\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object provides the MTA device type identifier.  The\n   \
    \          value of this object must be a copy of the DHCP option 60\n       \
    \      value exchanged between the MTA and the DHCP server.  The\n           \
    \  DHCP option 60 value contains an ASCII-encoded string\n             identifying\
    \ capabilities of the MTA as defined in the\n             PacketCable MTA Device\
    \ Provisioning Specification.\"\n       REFERENCE\n           \" RFC 2132, DHCP\
    \ Options and BOOTP Vendor Extensions;\n             PacketCable MTA Device Provisioning\
    \ Specification.\"\n       ::= { pktcMtaDevBase 7 }\n   pktcMtaDevProvisioningState\
    \     OBJECT-TYPE\n       SYNTAX      INTEGER {\n                   pass     \
    \                 (1),\n                   inProgress                (2),\n  \
    \                 failConfigFileError       (3),\n                   passWithWarnings\
    \          (4),\n                   passWithIncompleteParsing (5),\n         \
    \          failureInternalError      (6),\n                   failureOtherReason\
    \        (7)\n       }\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object indicates the completion state\
    \ of the MTA\n             device provisioning process.\n             pass:\n\
    \             If the configuration file could be parsed successfully\n       \
    \      and the MTA is able to reflect the same in its\n             MIB, the MTA\
    \ MUST return the value 'pass'.\n             inProgress:\n             If the\
    \ MTA is in the process of being provisioned,\n             the MTA MUST return\
    \ the value 'inProgress'.\n             failConfigFileError:\n             If\
    \ the configuration file was in error due to incorrect\n             values in\
    \ the mandatory parameters, the MTA MUST reject\n             the configuration\
    \ file, and the MTA MUST return the value\n             'failConfigFileError'.\n\
    \             passWithWarnings:\n             If the configuration file had proper\
    \ values for all the\n             mandatory parameters but has errors in any\
    \ of the optional\n             parameters (this includes any vendor-specific\
    \ Object\n             Identifiers (OIDs) that are incorrect or not known\n  \
    \           to the MTA), the MTA MUST return the value\n             'passWithWarnings'.\n\
    \             passWithIncompleteParsing:\n             If the configuration file\
    \ is valid but the MTA cannot\n             reflect the same in its configuration\
    \ (for example, too\n             many entries caused memory exhaustion), it must\
    \ accept\n             the CMS configuration entries related, and the MTA MUST\n\
    \             return the value 'passWithIncompleteParsing'.\n             failureInternalError:\n\
    \             If the configuration file cannot be parsed due to an\n         \
    \    Internal error, the MTA MUST return the value\n             'failureInternalError'.\n\
    \             failureOtherReason:\n             If the MTA cannot accept the configuration\
    \ file for any\n             other reason than the ones stated above, the MTA\
    \ MUST\n             return the value 'failureOtherReason'.\n             When\
    \ a final SNMP INFORM is sent as part of Step 25 of the\n             MTA Provisioning\
    \ process, this parameter is also included\n             in the final INFORM message.\"\
    \n          REFERENCE\n           \" PacketCable MTA Device Provisioning Specification.\"\
    \n       ::= { pktcMtaDevBase 8 }\n   pktcMtaDevHttpAccess  OBJECT-TYPE\n    \
    \   SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object indicates whether the HTTP protocol\
    \ is\n             supported for the MTA configuration file transfer.\"\n    \
    \   ::= { pktcMtaDevBase 9 }\n   pktcMtaDevProvisioningTimer  OBJECT-TYPE\n  \
    \     SYNTAX      Unsigned32 (0..30)\n       UNITS       \"minutes\"\n       MAX-ACCESS\
    \  read-write\n       STATUS      current\n       DESCRIPTION\n           \" This\
    \ object defines the time interval for the provisioning\n             flow to\
    \ complete.  The MTA MUST finish all provisioning\n             operations starting\
    \ from the moment when an MTA receives\n             its DHCP ACK and ending at\
    \ the moment when the MTA\n             downloads its configuration file (e.g.,\
    \ MTA5 to MTA23)\n             within the period of time set by this object.\n\
    \             Failure to comply with this condition constitutes\n            \
    \ a provisioning flow failure.  If the object is set to 0,\n             the MTA\
    \ MUST ignore the provisioning timer condition.\n             If a value is written\
    \ into an instance of\n             pktcMtaDevProvisioningTimer, the agent MUST\
    \ NOT retain the\n             supplied value across MTA re-initializations or\
    \ reboots.\"\n       REFERENCE\n           \" PacketCable MTA Device Provisioning\
    \ Specification.\"\n       DEFVAL {10}\n       ::=  {pktcMtaDevBase 10}\n   pktcMtaDevProvisioningCounter\
    \  OBJECT-TYPE\n         SYNTAX      Counter32\n         MAX-ACCESS  read-only\n\
    \         STATUS      current\n         DESCRIPTION\n               \"This object\
    \ counts the number of times the\n               provisioning cycle has looped\
    \ through step MTA-1.\"\n         ::= {pktcMtaDevBase 11}\n    pktcMtaDevErrorOidsTable\
    \  OBJECT-TYPE\n       SYNTAX SEQUENCE OF PktcMtaDevErrorOidsEntry\n       MAX-ACCESS\
    \ not-accessible\n       STATUS current\n       DESCRIPTION\n           \" This\
    \ table contains the list of configuration errors or\n             warnings the\
    \ MTA encountered when parsing the\n             configuration file it received\
    \ from the Provisioning\n             Server.\n             For each error, an\
    \ entry is created in this table,\n             containing the configuration parameters\
    \ the MTA rejected\n             and the associated reason (e.g., wrong or unknown\
    \ OID,\n             inappropriate object values).  If the MTA\n             did\
    \ not report a provisioning state of 'pass(1)' in\n             the pktcMtaDevProvisioningState\
    \ object, this table MUST be\n             populated for each error or warning\
    \ instance.  Even if\n             different parameters share the same error type\
    \ (e.g., all\n             realm name configuration parameters are invalid), all\n\
    \             observed errors or warnings must be reported as\n             different\
    \ instances.  Errors are placed into the table in\n             no particular\
    \ order.  The table MUST be cleared each time\n             the MTA reboots.\"\
    \n       REFERENCE\n           \" PacketCable MTA Device Provisioning Specification.\"\
    \n       ::= {pktcMtaDevBase 12 }\n   pktcMtaDevErrorOidsEntry  OBJECT-TYPE\n\
    \       SYNTAX PktcMtaDevErrorOidsEntry\n       MAX-ACCESS not-accessible\n  \
    \     STATUS current\n       DESCRIPTION\n           \" This entry contains the\
    \ necessary information the MTA MUST\n             attempt to provide in case\
    \ of configuration file errors or\n             warnings.\"\n       INDEX { pktcMtaDevErrorOidIndex\
    \ }\n                ::= {pktcMtaDevErrorOidsTable 1}\n   PktcMtaDevErrorOidsEntry\
    \ ::= SEQUENCE {\n       pktcMtaDevErrorOidIndex Unsigned32,\n       pktcMtaDevErrorOid\
    \      SnmpAdminString,\n       pktcMtaDevErrorValue    SnmpAdminString,\n   \
    \    pktcMtaDevErrorReason   SnmpAdminString\n       }\n   pktcMtaDevErrorOidIndex\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (1..1024)\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object is\
    \ the index of the MTA configuration error\n             table.  It is an integer\
    \ value that starts at value '1'\n             and is incremented for each encountered\
    \ configuration\n             file error or warning.\n             The maximum\
    \ number of errors or warnings that can be\n             recorded in the pktcMtaDevErrorOidsTable\
    \ is set to 1024 as\n             a configuration file is usually validated by\
    \ operators\n             before deployment.  Given the possible number of\n \
    \            configuration parameter assignments in the MTA\n             configuration\
    \ file, 1024 is perceived as a sufficient\n             limit even with future\
    \ extensions.\n             If the number of the errors in the configuration file\n\
    \             exceeds 1024, all errors beyond the 1024th one MUST\n          \
    \   be ignored and not be reflected in the\n             pktcMtaDevErrorOidsTable.\"\
    \n       ::= {pktcMtaDevErrorOidsEntry 1}\n   pktcMtaDevErrorOid  OBJECT-TYPE\n\
    \       SYNTAX      SnmpAdminString\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \" This object contains a human\
    \ readable representation\n             (character string) of the OID corresponding\
    \ to the\n             configuration file parameter that caused the particular\n\
    \             error.\n             For example, if the value of the pktcMtaDevEnabled\
    \ object\n             in the configuration file caused an error, then this\n\
    \             object instance will contain the human-readable string of\n    \
    \         '1.3.6.1.2.1.140.1.1.6.0'.\n             If the MTA generated an error\
    \ because it was not able\n             to recognize a particular OID, then this\
    \ object\n             instance would contain an empty value (zero-length\n  \
    \           string).\n             For example, if the value of an OID in the\
    \ configuration\n             file was interpreted by the MTA as being 1.2.3.4.5,\
    \ and if\n             the MTA was not able to recognize this OID as a valid one,\n\
    \             this object instance will contain a zero-length string.\n      \
    \       If the number of errors in the configuration file exceeds\n          \
    \   1024, then for all subsequent errors, the\n             pktcMtaDevErrorOid\
    \ of the table's 1024th entry MUST\n             contain a human-readable representation\
    \ of the\n             pktcMtaDevErrorsTooManyErrors object; i.e., the string\n\
    \             '1.3.6.1.2.1.140.1.1.4.1.0'.\n             Note that the syntax\
    \ of this object is SnmpAdminString\n             instead of OBJECT IDENTIFIER\
    \ because the object value may\n             not be a valid OID due to human or\
    \ configuration tool\n             encoding errors.\"\n       ::= {pktcMtaDevErrorOidsEntry\
    \ 2}\n   pktcMtaDevErrorValue  OBJECT-TYPE\n       SYNTAX      SnmpAdminString\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the value of the OID corresponding to\n  \
    \           the configuration file parameter that caused the error.\n        \
    \     If the MTA cannot recognize the OID of the\n             configuration parameter\
    \ causing the error, then this\n             object instance contains the OID\
    \ itself as interpreted\n             by the MTA in human-readable representation.\n\
    \             If the MTA can recognize the OID but generate an error due\n   \
    \          to a wrong value of the parameter, then the object\n             instance\
    \ contains the erroneous value of the parameter as\n             read from the\
    \ configuration file.\n             In both cases, the value of this object must\
    \ be\n             represented in human-readable form as a character string.\n\
    \             For example, if the value of the pktcMtaDevEnabled object\n    \
    \         in the configuration file was 3 (invalid value), then the\n        \
    \     pktcMtaDevErrorValue object instance will contain the\n             human-readable\
    \ (string) representation of value '3'.\n             Similarly, if the OID in\
    \ the configuration file has been\n             interpreted by the MTA as being\
    \ 1.2.3.4.5 and the MTA\n             cannot recognize this OID as a valid one,\
    \ then this\n             pktcMtaDevErrorValue object instance will contain human\n\
    \             readable (string) representation of value '1.2.3.4.5'.\n       \
    \      If the number of errors in the configuration file exceeds\n           \
    \  1024, then for all subsequent errors, the\n             pktcMtaDevErrorValue\
    \ of the table's 1024th entry MUST\n             contain a human-readable representation\
    \ of the\n             pktcMtaDevErrorsTooManyErrors object; i.e., the string\n\
    \             '1.3.6.1.2.1.140.1.1.4.1.0'.\"\n       ::= {pktcMtaDevErrorOidsEntry\
    \ 3}\n   pktcMtaDevErrorReason  OBJECT-TYPE\n       SYNTAX      SnmpAdminString\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object indicates the reason for the error or warning,\n  \
    \           as per the MTA's interpretation, in human-readable form.\n       \
    \      For example:\n             'VALUE NOT IN RANGE', 'VALUE DOES NOT MATCH\
    \ TYPE',\n             'UNSUPPORTED VALUE', 'LAST 4 BITS MUST BE SET TO ZERO',\n\
    \             'OUT OF MEMORY - CANNOT STORE'.\n             This object may also\
    \ contain vendor specific errors for\n             private vendor OIDs and any\
    \ proprietary error codes or\n             messages that can help diagnose configuration\
    \ errors.\n             If the number of errors in the configuration file exceeds\n\
    \             1024, then for all subsequent errors, the\n             pktcMtaDevErrorReason\
    \ of the table's 1024th entry MUST\n             contain a human-readable string\
    \ indicating the reason\n             for an error; for example,\n           \
    \  'Too many errors in the configuration file'.\"\n       ::= {pktcMtaDevErrorOidsEntry\
    \ 4}\n   --\n   -- The following group describes server access and parameters\
    \ used\n   -- for the initial MTA provisioning and bootstrapping phases.\n   --\n\
    \   pktcMtaDevDhcpServerAddressType  OBJECT-TYPE\n       SYNTAX      InetAddressType\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the Internet address type for the\n      \
    \       PacketCable DHCP servers specified in MTA MIB.\"\n       DEFVAL { ipv4\
    \ }\n       ::= { pktcMtaDevServer 1}\n   pktcMtaDevServerDhcp1   OBJECT-TYPE\n\
    \       SYNTAX      InetAddress\n       MAX-ACCESS  read-only\n       STATUS \
    \     current\n       DESCRIPTION\n           \" This object contains the Internet\
    \ Address of the primary\n             DHCP server the MTA uses during provisioning.\n\
    \             The type of this address is determined by the value of\n       \
    \      the pktcMtaDevDhcpServerAddressType object.\n             When the latter\
    \ has the value 'ipv4(1)', this object\n             contains the IP address of\
    \ the primary DHCP\n             server.  It is provided by the CM to the MTA\
    \ via the DHCP\n             option code 122, sub-option 1, as defined in RFC\
    \ 3495.\n             The behavior of this object when the value of\n        \
    \     pktcMtaDevDhcpServerAddressType is other than 'ipv4(1)'\n             is\
    \ not presently specified, but it may be specified\n             in future versions\
    \ of this MIB module.\n             If this object is of value\n             0.0.0.0,\
    \ the MTA MUST stop all provisioning\n             attempts, as well as all other\
    \ activities.\n             If this object is of value 255.255.255.255, it means\n\
    \             that there was no preference given for the primary\n           \
    \  DHCP server, and, the MTA must follow the logic of\n             RFC2131, and\
    \ the value of DHCP option 122,\n             sub-option 2, must be ignored.\"\
    \n       REFERENCE\n           \" PacketCable MTA Device Provisioning Specification;\n\
    \             RFC 2131, Dynamic Host Configuration Protocol;\n             RFC\
    \ 3495, DHCP Option for CableLabs Client Configuration.\"\n       ::= { pktcMtaDevServer\
    \ 2 }\n   pktcMtaDevServerDhcp2  OBJECT-TYPE\n       SYNTAX      InetAddress\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the Internet Address of the secondary\n  \
    \           DHCP server the MTA uses during provisioning.\n             The type\
    \ of this address is determined by the value of\n             the pktcMtaDevDhcpServerAddressType\
    \ object.\n             When the latter has the value 'ipv4(1)', this object\n\
    \             contains the IP address of the secondary DHCP\n             server.\
    \  It is provided by the CM to the MTA via the DHCP\n             option code\
    \ 122, sub-option 2, as defined in RFC 3495.\n             The behavior of this\
    \ object when the value of\n             pktcMtaDevDhcpServerAddressType is other\
    \ than 'ipv4(1)'\n             is not presently specified, but it may be specified\n\
    \             in future versions of this MIB module.\n             If there was\
    \ no secondary DHCP server provided in DHCP\n             Option 122, sub-option\
    \ 2, this object must return the value\n             0.0.0.0.\"\n       REFERENCE\n\
    \           \" PacketCable MTA Device Provisioning Specification;\n          \
    \   RFC 3495, DHCP Option for CableLabs Client Configuration.\"\n            \
    \ ::= { pktcMtaDevServer 3 }\n   pktcMtaDevDnsServerAddressType  OBJECT-TYPE\n\
    \       SYNTAX      InetAddressType\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \" This object contains the Internet\
    \ address type for the\n             PacketCable DNS servers specified in MTA\
    \ MIB.\"\n       DEFVAL { ipv4 }\n       ::= { pktcMtaDevServer 4}\n   pktcMtaDevServerDns1\
    \  OBJECT-TYPE\n       SYNTAX      InetAddress\n       MAX-ACCESS  read-write\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the IP Address of the primary\n             DNS server to be used by the MTA.\
    \  The type of this address\n             is determined by the value of the\n\
    \             pktcMtaDevDnsServerAddressType object.\n             When the latter\
    \ has the value 'ipv4(1)', this object\n             contains the IP address of\
    \ the primary DNS server.\n             As defined in RFC 2132, PacketCable-compliant\
    \ MTAs receive\n             the IP addresses of the DNS Servers in DHCP option\
    \ 6.\n             The behavior of this object when the value of\n           \
    \  pktcMtaDevDnsServerAddressType is other than 'ipv4(1)'\n             is not\
    \ presently specified, but it may be specified\n             in future versions\
    \ of this MIB module.\n             If a value is written into an instance of\n\
    \             pktcMtaDevServerDns1, the agent MUST NOT retain the\n          \
    \   supplied value across MTA re-initializations or reboots.\"\n       REFERENCE\n\
    \           \" PacketCable MTA Device Provisioning Specification;\n          \
    \   RFC 2132, DHCP Options and BOOTP Vendor Extensions.\"\n       ::= { pktcMtaDevServer\
    \ 5 }\n   pktcMtaDevServerDns2  OBJECT-TYPE\n       SYNTAX      InetAddress\n\
    \       MAX-ACCESS  read-write\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the IP Address of the secondary\n        \
    \     DNS server to be used by the MTA.  The type of this address\n          \
    \   is determined by the value of the\n             pktcMtaDevDnsServerAddressType\
    \ object.\n             When the latter has the value 'ipv4(1)', this object\n\
    \             contains the IP address of the secondary DNS\n             server.\
    \  As defined in RFC 2132, PacketCable-compliant MTAs\n             receive the\
    \ IP addresses of the DNS Servers in DHCP\n             option 6.\n          \
    \   The behavior of this object when the value of\n             pktcMtaDevDnsServerAddressType\
    \ is other than 'ipv4(1)'\n             is not presently specified, but it may\
    \ be specified\n             in future versions of this MIB module.\n        \
    \     If a value is written into an instance of\n             pktcMtaDevServerDns2,\
    \ the agent MUST NOT retain the\n             supplied value across MTA re-initializations\
    \ or reboots.\"\n       REFERENCE\n           \" PacketCable MTA Device Provisioning\
    \ Specification;\n             RFC 2132, DHCP Options and BOOTP Vendor Extensions.\"\
    \n       ::= { pktcMtaDevServer 6 }\n   pktcMtaDevTimeServerAddressType  OBJECT-TYPE\n\
    \       SYNTAX      InetAddressType\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \" This object contains the Internet\
    \ address type for the\n             PacketCable Time servers specified in MTA\
    \ MIB.\"\n       DEFVAL { ipv4 }\n       ::= { pktcMtaDevServer 7}\n   pktcMtaDevTimeServer\
    \   OBJECT-TYPE\n       SYNTAX      InetAddress\n       MAX-ACCESS  read-write\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the Internet Address of the Time\n             Server used by an S-MTA for Time\
    \ Synchronization.  The type\n             of this address is determined by the\
    \ value of the\n             pktcMtaDevTimeServerAddressType object.\n       \
    \      When the latter has the value 'ipv4(1)', this object\n             contains\
    \ the IP address of the Time Server used for Time\n             Synchronization.\n\
    \             In the case of an S-MTA, this object must be\n             populated\
    \ with a value other than 0.0.0.0 as obtained\n             from DHCP option 4.\
    \  The protocol by which the time of day\n             MUST be retrieved is defined\
    \ in RFC 868.\n             In the case of an E-MTA, this object must contain\
    \ a\n             value of 0.0.0.0 if the address type is 'ipv4(1)' since\n  \
    \           an E-MTA does not use the Time Protocol for time\n             synchronization\
    \ (an E-MTA uses the time retrieved by the\n             DOCSIS cable modem).\n\
    \             The behavior of this object when the value of\n             pktcMtaDevTimeServerAddressType\
    \ is other than 'ipv4(1)'\n             is not presently specified, but it may\
    \ be specified in\n             future versions of this MIB module.\n        \
    \     If a value is written into an instance of\n             pktcMtaDevTimeServer,\
    \ the agent MUST NOT retain the\n             supplied value across MTA re-initializations\
    \ or reboots.\"\n       REFERENCE\n           \" RFC 868, Time Protocol;\n   \
    \          RFC 2131, Dynamic Host Configuration Protocol;\n             RFC 2132,\
    \ DHCP Options and BOOTP Vendor Extensions.\"\n       ::= { pktcMtaDevServer 8}\n\
    \   pktcMtaDevConfigFile  OBJECT-TYPE\n       SYNTAX      SnmpAdminString\n  \
    \     MAX-ACCESS  read-write\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object specifies the MTA device configuration file\n     \
    \        information, including the access method, the server name,\n        \
    \     and the configuration file name.  The value of this object\n           \
    \  is the Uniform Resource Locator (URL) of the configuration\n             file\
    \ for TFTP or HTTP download.\n             If this object value is a TFTP URL,\
    \ it must be formatted\n             as defined in RFC 3617.\n             If\
    \ this object value is an HTTP URL, it must be formatted\n             as defined\
    \ in RFC 2616.\n             If the MTA SNMP Enrollment mechanism is used, then\
    \ the MTA\n             must download the file provided by the Provisioning Server\n\
    \             during provisioning via an SNMP SET on this object.\n          \
    \   If the MTA SNMP Enrollment mechanism is not used, this\n             object\
    \ MUST contain the URL value corresponding to the\n             'siaddr' and 'file'\
    \ fields received in the DHCP ACK to\n             locate the configuration file:\
    \ the 'siaddr' and 'file'\n             fields represent the host and file of\
    \ the TFTP URL,\n             respectively.  In this case, the MTA MUST return\
    \ an\n             'inconsistentValue' error in response to SNMP SET\n       \
    \      operations.\n             The MTA MUST return a zero-length string if the\
    \ server\n             address (host part of the URL) is unknown.\n          \
    \   If a value is written into an instance of\n             pktcMtaDevConfigFile,\
    \ the agent MUST NOT retain the\n             supplied value across MTA re-initializations\
    \ or reboots.\"\n       REFERENCE\n           \" PacketCable MTA Device Provisioning\
    \ Specification;\n             RFC 3617, URI Scheme for TFTP; RFC 2616, HTTP 1.1\"\
    \n       ::= { pktcMtaDevServer 9 }\n   pktcMtaDevSnmpEntity  OBJECT-TYPE\n  \
    \     SYNTAX      SnmpAdminString\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \" This object contains the FQDN\
    \ of the SNMP entity of the\n             Provisioning Server.  When the MTA SNMP\
    \ Enrollment\n             Mechanism is used, this object represents the server\
    \ that\n             the MTA communicates with, that it receives the\n       \
    \      configuration file URL from, and that it sends the\n             enrollment\
    \ notification to.  The SNMP entity is also the\n             destination entity\
    \ for all the provisioning\n             notifications.  It may be used for post-provisioning\n\
    \             SNMP operations.  During the provisioning phase, this\n        \
    \     SNMP entity FQDN is supplied to the MTA via DHCP option\n             122,\
    \ sub-option 3, as defined in RFC 3495.  The MTA must\n             resolve the\
    \ FQDN value before its very first network\n             interaction with the\
    \ SNMP entity during the provisioning\n             phase.\"\n       REFERENCE\n\
    \           \" PacketCable MTA Device Provisioning Specification;\n          \
    \   RFC 3495, DHCP Option for CableLabs Client Configuration.\"\n       ::= {\
    \ pktcMtaDevServer 10 }\n   pktcMtaDevProvConfigHash  OBJECT-TYPE\n       SYNTAX\
    \      OCTET STRING (SIZE(20))\n       MAX-ACCESS  read-write\n       STATUS \
    \     current\n       DESCRIPTION\n           \" This object contains the hash\
    \ value of the contents of the\n             configuration file.\n           \
    \  The authentication algorithm is Secure Hashing Algorithm\n             1 (SHA-1),\
    \ and the length is 160 bits.  The hash\n             calculation MUST follow\
    \ the requirements defined in the\n             PacketCable Security Specification.\
    \  When the MTA SNMP\n             Enrollment mechanism is used, this hash value\
    \ is\n             calculated and sent to the MTA prior to sending the\n     \
    \        config file.  This object value is then provided by the\n           \
    \  Provisioning server via an SNMP SET operation.\n             When the MTA SNMP\
    \ Enrollment mechanism is not in use, the\n             hash value is provided\
    \ in the configuration file itself,\n             and it is also calculated by\
    \ the MTA.  This object value\n             MUST represent the hash value calculated\
    \ by the MTA.\n             When the MTA SNMP Enrollment mechanism is not in use,\
    \ the\n             MTA must reject all SNMP SET operations on this object and\n\
    \             return an 'inconsistentValue' error.\n             If a value is\
    \ written into an instance of\n             pktcMtaDevProvConfigHash, the agent\
    \ MUST NOT retain the\n             supplied value across MTA re-initializations\
    \ or reboots.\"\n       REFERENCE\n           \" PacketCable MTA Device Provisioning\
    \ Specification;\n             PacketCable Security Specification.\"\n       ::=\
    \ { pktcMtaDevServer 11 }\n   pktcMtaDevProvConfigKey  OBJECT-TYPE\n       SYNTAX\
    \      OCTET STRING (SIZE(32))\n       MAX-ACCESS  read-write\n       STATUS \
    \     current\n       DESCRIPTION\n           \" This object contains the key\
    \ used to encrypt/decrypt\n             the configuration file when secure SNMPv3\
    \ provisioning\n             is used.\n             The value of this object is\
    \ provided along with the\n             configuration file information (pktcMtaDevConfigFile)\n\
    \             and hash (pktcMtaDevProvConfigHash) by the Provisioning\n      \
    \       Server via SNMP SET once the configuration file has been\n           \
    \  created, as defined by the PacketCable Security\n             specification.\n\
    \             The privacy algorithm is defined by the\n             pktcMtaDevProvConfigEncryptAlg\
    \ MIB object.  The\n             MTA requirements related to the privacy algorithm\
    \ are\n             defined in the PacketCable Security Specification.\n     \
    \        If this object is set at any other provisioning step than\n         \
    \    that allowed by the PacketCable MTA Device\n             Provisioning Specification,\
    \ the MTA SHOULD return\n             an 'inconsistentValue' error.\n        \
    \     This object must not be used in non secure provisioning\n             mode.\
    \  In non-secure provisioning modes, the MTA SHOULD\n             return an 'inconsistentValue'\
    \ in response to SNMP SET\n             operations, and the MTA SHOULD return\
    \ a zero-length\n             string in response to SNMP GET operations.\n   \
    \          If a value is written into an instance of\n             pktcMtaDevProvConfigKey,\
    \ the agent MUST NOT retain the\n             supplied value across MTA re-initializations\
    \ or reboots.\"\n       REFERENCE\n           \" PacketCable MTA Device Provisioning\
    \ Specification;\n             PacketCable Security Specification.\"\n       ::=\
    \ { pktcMtaDevServer 12 }\n   pktcMtaDevProvConfigEncryptAlg   OBJECT-TYPE\n \
    \      SYNTAX      PktcMtaDevProvEncryptAlg\n       MAX-ACCESS  read-write\n \
    \      STATUS      current\n       DESCRIPTION\n           \" This object defines\
    \ the encryption algorithm used for\n             privacy protection of the MTA\
    \ Configuration File content.\"\n       DEFVAL { des64CbcMode }\n       ::= {\
    \ pktcMtaDevServer 13 }\n   pktcMtaDevProvSolicitedKeyTimeout  OBJECT-TYPE\n \
    \      SYNTAX      Unsigned32 (0..180)\n       UNITS       \"seconds\"\n     \
    \  MAX-ACCESS  read-write\n       STATUS      current\n       DESCRIPTION\n  \
    \         \" This object defines a Kerberos Key Management timer on the\n    \
    \         MTA.  It is the time period during which the MTA saves the\n       \
    \      nonce and Server Kerberos Principal Identifier to match an\n          \
    \   AP Request and its associated AP Reply response from the\n             Provisioning\
    \ Server.\n             After the timeout has been exceeded, the client discards\n\
    \             this (nonce, Server Kerberos Principal Identifier) pair,\n     \
    \        after which it will no longer accept a matching AP Reply.\n         \
    \    This timer only applies when the Provisioning Server\n             initiated\
    \ key management for SNMPv3 (with a\n             Wake Up message).\n        \
    \     If this object is set to a zero value, the MTA MUST return\n           \
    \  an 'inconsistentValue' in response to SNMP SET operations.\n             This\
    \ object should not be used in non-secure provisioning\n             modes.  In\
    \ non-secure provisioning modes, the MTA MUST\n             return an 'inconsistentValue'\
    \ in response to SNMP SET\n             operations, and the MTA MUST return a\
    \ zero value in\n             response to SNMP GET operations.\n             If\
    \ a value is written into an instance of\n             pktcMtaDevProvSolicitedKeyTimeout,\
    \ the agent MUST NOT\n             retain the supplied value across MTA re-initializations\n\
    \             or reboots.\"\n       DEFVAL { 3 }\n       ::= { pktcMtaDevServer\
    \ 14 }\n   --=================================================================\n\
    \   --\n   --  Unsolicited key updates are retransmitted according to an\n   --\
    \  exponential back-off mechanism using two timers and a maximum\n   --  retry\
    \ counter for AS replies.\n   --  The initial retransmission timer value is the\
    \ nominal timer\n   --  value (pktcMtaDevProvUnsolicitedKeyNomTimeout).  The\n\
    \   --  retransmissions occur with an exponentially increasing interval\n   --\
    \  that caps at the maximum timeout value\n   --  (pktcMtaDevProvUnsolicitedKeyMaxTimeout).\n\
    \   --  Retransmissions stop when the maximum retry counter is reached\n   --\
    \  (pktcMtaDevProvUnsolicitedKeyMaxRetries).\n   --  For example, with values\
    \ of 3 seconds for the nominal\n   --  timer, 100 seconds for the maximum timeout,\
    \ and 8 retries max,\n   --  and with an exponential value of 2, this results\
    \ in\n   --  retransmission intervals will be 3 s, 6 s, 12 s, 24 s, 48 s,\n  \
    \ --  96 s, 100 s, and 100 s;\n   --  retransmissions then stop because the maximum\
    \ number of\n   --  retries (8) has been reached.\n   --\n   --=================================================================\n\
    \   --\n   --  Timeouts for unsolicited key management updates are only\n   --\
    \  pertinent before the first SNMPv3 message is sent between the\n   --  MTA and\
    \ the Provisioning Server and before the configuration\n   --  file is loaded.\n\
    \   --\n   --=================================================================\n\
    \   pktcMtaDevProvUnsolicitedKeyMaxTimeout  OBJECT-TYPE\n       SYNTAX      Unsigned32\
    \ (0..600)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n   \
    \    STATUS      current\n       DESCRIPTION\n           \" This object defines\
    \ the timeout value that applies to\n             an MTA-initiated AP-REQ/REP\
    \ key management exchange with\n             the Provisioning Server in SNMPv3\
    \ provisioning.\n             It is the maximum timeout value, and it may not\
    \ be exceeded\n             in the exponential back-off algorithm.  If the DHCP\
    \ option\n             code 122, sub-option 5, is provided to the MTA, it\n  \
    \           overwrites this value.\n             In non-secure provisioning modes,\
    \ the MTA MUST\n             return a zero value in response to SNMP GET\n   \
    \          operations.\"\n       REFERENCE\n           \" PacketCable Security\
    \ Specification.\"\n       DEFVAL {600}\n       ::= { pktcMtaDevServer 15 }\n\
    \   pktcMtaDevProvUnsolicitedKeyNomTimeout  OBJECT-TYPE\n       SYNTAX      Unsigned32\
    \ (0..600)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n   \
    \    STATUS      current\n       DESCRIPTION\n           \" This object defines\
    \ the starting value of the timeout\n             for the AP-REQ/REP Backoff and\
    \ Retry mechanism\n             with exponential timeout in SNMPv3 provisioning.\n\
    \             If the DHCP option code 122, sub-option 5, is provided\n       \
    \      the MTA, it overwrites this value.\n             In non-secure provisioning\
    \ modes, the MTA MUST\n             return a zero value in response to SNMP GET\n\
    \             operations.\"\n       REFERENCE\n           \" PacketCable Security\
    \ Specification.\"\n       DEFVAL {3}\n       ::= { pktcMtaDevServer 16}\n   pktcMtaDevProvUnsolicitedKeyMaxRetries\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..32)\n       MAX-ACCESS  read-only\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ a retry counter that applies to\n             an MTA-initiated AP-REQ/REP key\
    \ management exchange with\n             the Provisioning Server in secure SNMPv3\
    \ provisioning.\n             It is the maximum number of retries before the MTA\
    \ stops\n             attempting to establish a Security Association with\n  \
    \           Provisioning Server.\n             If the DHCP option code 122, sub-option\
    \ 5, is provided to\n             the MTA, it overwrites this value.\n       \
    \      If this object is set to a zero value, the MTA MUST return\n          \
    \   an 'inconsistentValue' in response to SNMP SET operations.\n             In\
    \ non-secure provisioning modes, the MTA MUST\n             return a zero value\
    \ in response to SNMP GET\n             operations.\"\n       REFERENCE\n    \
    \       \" PacketCable Security Specification.\"\n       DEFVAL {8}\n       ::=\
    \ { pktcMtaDevServer 17 }\n   pktcMtaDevProvKerbRealmName  OBJECT-TYPE\n     \
    \  SYNTAX      SnmpAdminString (SIZE(1..255))\n       MAX-ACCESS  read-only\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the name of the associated\n             provisioning Kerberos realm acquired\
    \ during the MTA4\n             provisioning step (DHCP Ack) for SNMPv3 provisioning.\n\
    \             The uppercase ASCII representation of the associated\n         \
    \    Kerberos realm name MUST be used by both the Manager (SNMP\n            \
    \ entity) and the MTA.\n             The Kerberos realm name for the Provisioning\
    \ Server is\n             supplied to the MTA via DHCP option code 122, sub-option\
    \ 6,\n             as defined in RFC 3495.  In secure SNMP provisioning mode,\n\
    \             the value of the Kerberos realm name for the Provisioning\n    \
    \         Server supplied in the MTA configuration file must match\n         \
    \    the value supplied in the DHCP option code 122,\n             sub-option\
    \ 6.  Otherwise, the value of this object must\n             contain the value\
    \ supplied in DHCP Option 122,\n             sub-option 6.\"\n       REFERENCE\n\
    \           \" PacketCable MTA Device Provisioning Specification;\n          \
    \   RFC 3495, DHCP Option for CableLabs Client Configuration.\"\n       ::= {\
    \ pktcMtaDevServer 18 }\n   pktcMtaDevProvState  OBJECT-TYPE\n       SYNTAX  \
    \    INTEGER  {\n                   operational                (1),\n        \
    \           waitingForSnmpSetInfo      (2),\n                   waitingForTftpAddrResponse\
    \ (3),\n                   waitingForConfigFile       (4)\n       }\n       MAX-ACCESS\
    \  read-only\n       STATUS      current\n       DESCRIPTION\n           \" This\
    \ object defines the MTA provisioning state.\n             If the state is:\n\
    \               'operational(1)', the device has completed the loading\n     \
    \           and processing of the initialization parameters.\n               'waitingForSnmpSetInfo(2)',\
    \ the device is waiting on\n                its configuration file download access\
    \ information.\n                Note that this state is only reported when the\
    \ MTA\n                SNMP enrollment mechanism is used.\n               'waitingForTftpAddrResponse(3)',\
    \ the device has sent a\n                DNS request to resolve the server providing\
    \ the\n                configuration file, and it is awaiting for a response.\n\
    \                Note that this state is only reported when the MTA\n        \
    \        SNMP enrollment mechanism is used.\n               'waitingForConfigFile(4)',\
    \ the device has sent a\n               request via TFTP or HTTP for the download\
    \ of its\n               configuration file, and it is awaiting for a response\
    \ or\n               the file download is in progress.\"\n       REFERENCE\n \
    \          \" PacketCable MTA Device Provisioning Specification,\n           \
    \  PacketCable Security Specification.\"\n       ::= { pktcMtaDevServer 19 }\n\
    \       --\n       -- The following object group describes the security objects.\n\
    \       --\n   pktcMtaDevManufacturerCertificate  OBJECT-TYPE\n       SYNTAX \
    \     DocsX509ASN1DEREncodedCertificate\n       MAX-ACCESS  read-only\n      \
    \ STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the MTA Manufacturer Certificate.\n             The object value must be the\
    \ ASN.1 DER encoding of the MTA\n             manufacturer's X.509 public key\
    \ certificate.  The MTA\n             Manufacturer Certificate is issued to each\
    \ MTA\n             manufacturer and is installed into each MTA at the time of\n\
    \             manufacture or with a secure code download.  The specific\n    \
    \         requirements related to this certificate are defined in\n          \
    \   the PacketCable or IPCablecom Security specifications.\"\n       REFERENCE\n\
    \           \" PacketCable Security Specification.\"\n       ::= {pktcMtaDevSecurity\
    \ 1}\n   pktcMtaDevCertificate  OBJECT-TYPE\n       SYNTAX      DocsX509ASN1DEREncodedCertificate\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the MTA Device Certificate.\n            \
    \ The object value must be the ASN.1 DER encoding of the\n             MTA's X.509\
    \ public-key certificate issued by the\n             manufacturer and installed\
    \ into the MTA at the time of\n             manufacture or with a secure code\
    \ download.\n             This certificate contains the MTA MAC address.  The\n\
    \             specific requirements related to this certificate are\n        \
    \     defined in the PacketCable or IPCablecom Security\n             specifications.\"\
    \n       REFERENCE\n           \" PacketCable Security Specification.\"\n    \
    \   ::= { pktcMtaDevSecurity 2 }\n   pktcMtaDevCorrelationId  OBJECT-TYPE\n  \
    \     SYNTAX      Unsigned32\n       MAX-ACCESS  read-only\n       STATUS    \
    \  current\n       DESCRIPTION\n           \" This object contains a correlation\
    \ ID, an arbitrary value\n             generated by the MTA that will be exchanged\
    \ as part of the\n             device capability data to the Provisioning Application.\n\
    \             This random value is used as an identifier to correlate\n      \
    \       related events in the MTA provisioning sequence.\n             This value\
    \ is intended for use only during the MTA\n             initialization and configuration\
    \ file download.\"\n       REFERENCE\n           \" PacketCable MTA Device Provisioning\
    \ Specification.\"\n       ::= { pktcMtaDevSecurity 3 }\n   pktcMtaDevTelephonyRootCertificate\
    \  OBJECT-TYPE\n       SYNTAX      DocsX509ASN1DEREncodedCertificate\n       MAX-ACCESS\
    \  read-only\n       STATUS      current\n       DESCRIPTION\n           \" This\
    \ object contains the telephony Service Provider Root\n             certificate.\
    \  The object value is the ASN.1 DER encoding of\n             the IP Telephony\
    \ Service Provider Root X.509 public key\n             certificate.  This certification\
    \ is stored in the MTA\n             non-volatile memory and can be updated with\
    \ a secure code\n             download.  This certificate is used to validate\
    \ the initial\n             AS Reply received by the MTA from the Key Distribution\n\
    \             Center (KDC) during the MTA initialization.  The specific\n    \
    \         requirements related to this certificate are defined in\n          \
    \   the PacketCable or IPCablecom Security specifications.\"\n       REFERENCE\n\
    \           \" PacketCable Security Specification.\"\n       ::= { pktcMtaDevSecurity\
    \ 4 }\n   --=================================================================\n\
    \   --\n   --   Informative Procedures for Setting up Security Associations\n\
    \   --\n   --   A Security Association may be set up either via configuration\
    \ or\n   --   via NCS signaling.\n   --\n   --   I.   Security association setup\
    \ via configuration.\n   --\n   --   The realm must be configured first.  Associated\
    \ with the realm\n   --   is a KDC.  The realm table (pktcMtaDevRealmTable) indicates\n\
    \   --   information about the realm (e.g., name, organization name) and\n   --\
    \   parameters associated with KDC communications (e.g., grace\n   --   periods,\
    \ AS Request/AS Reply adaptive back-off parameters).\n   --\n   --   Once the\
    \ realm is established, one or more CMS(es) may be\n   --   defined in the realm.\
    \  Associated with each CMS\n   --   entry in the pktcMtaDevCmsTable is an explicit\
    \ reference\n   --   to a Realm via the realm name (pktcMtaDevCmsKerbRealmName),\n\
    \   --   the FQDN of the CMS, and parameters associated with IPSec\n   --   key\
    \ management with the CMS (e.g., clock skew, AP Request/\n   --   AP Reply adaptive\
    \ back-off parameters).\n   --\n   --   II.  Security association setup via NCS\
    \ signaling.\n   --\n   --   The procedure of establishing the Security Associations\n\
    \   --   for NCS signaling is described in the PacketCable Security\n   --   specification.\n\
    \   --   It involves the analysis of the pktcNcsEndPntConfigTable row\n   -- \
    \  for the corresponding endpoint number and the correlation of\n   --   the CMS\
    \ FQDN from this row with the CMS Table and\n   --   consequently, with the Realm\
    \ Table.  Both of these tables\n   --   are defined below.  The pktcNcsEndPntConfigTable\
    \ is defined in\n   --   the IP over Cable Data Network (IPCDN)\n   --   NCS Signaling\
    \ MIB [NCSSIGMIB].\n   --\n   --   III.  When the MTA receives wake-up or re-key\
    \ messages from a\n   --   CMS, it performs key management based on the corresponding\n\
    \   --   entry in the CMS table.  If the matching CMS entry does not\n   --  \
    \ exist, it must ignore the wake-up or re-key messages.\n   --\n   --=================================================================\n\
    \   --=================================================================\n   --\n\
    \   --   pktcMtaDevRealmTable\n   --\n   --   The pktcMtaDevRealmTable shows the\
    \ KDC realms.  The table is\n   --   indexed with pktcMtaDevRealmIndex.  The Realm\
    \ Table contains the\n   --   pktcMtaDevRealmName in conjunction with any server\
    \ that needs\n   --   a Security Association with the MTA.  Uppercase must be\
    \ used\n   --   to compare the pktcMtaDevRealmName content.\n   --\n   --=================================================================\n\
    \   pktcMtaDevRealmAvailSlot   OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..64)\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the index number of the first\n          \
    \   available entry in the realm table (pktcMtaDevRealmTable).\n             If\
    \ all the entries in the realm table have been assigned,\n             this object\
    \ contains the value of zero.\n             A management station should create\
    \ new entries in the\n             realm table, using the following procedure:\n\
    \             First, issue a management protocol retrieval operation\n       \
    \      to determine the value of the first available index in the\n          \
    \   realm table (pktcMtaDevRealmAvailSlot).\n             Second, issue a management\
    \ protocol SET operation\n             to create an instance of the pktcMtaDevRealmStatus\n\
    \             object by setting its value to 'createAndWait(5)'.\n           \
    \  Third, if the SET operation succeeded, continue\n             modifying the\
    \ object instances corresponding to the newly\n             created conceptual\
    \ row, without fear of collision with\n             other management stations.\
    \  When all necessary conceptual\n             columns of the row are properly\
    \ populated (via SET\n             operations or default values), the management\
    \ station may\n             SET the pktcMtaDevRealmStatus object to 'active(1)'.\"\
    \n       ::= {  pktcMtaDevSecurity 5 }\n   pktcMtaDevRealmTable  OBJECT-TYPE\n\
    \       SYNTAX      SEQUENCE OF PktcMtaDevRealmEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the realm table.\n             The CMS table (pktcMtaDevCmsTable) and the realm\
    \ table\n             (pktcMtaDevRealmTable) are used for managing the MTA-CMS\n\
    \             Security Associations.  The realm table defines the\n          \
    \   Kerberos realms for the Application Servers (CMSes and the\n             Provisioning\
    \ Server).\"\n       ::= {  pktcMtaDevSecurity 6 }\n   pktcMtaDevRealmEntry  OBJECT-TYPE\n\
    \       SYNTAX      PktcMtaDevRealmEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This table entry\
    \ object lists the MTA security parameters\n             for a single Kerberos\
    \ realm.  The conceptual rows MUST NOT\n             persist across MTA reboots.\"\
    \n       INDEX { pktcMtaDevRealmIndex }\n   ::= { pktcMtaDevRealmTable 1 }\n \
    \  PktcMtaDevRealmEntry ::= SEQUENCE {\n       pktcMtaDevRealmIndex          \
    \          Unsigned32,\n       pktcMtaDevRealmName                     SnmpAdminString,\n\
    \       pktcMtaDevRealmPkinitGracePeriod        Unsigned32,\n       pktcMtaDevRealmTgsGracePeriod\
    \           Unsigned32,\n       pktcMtaDevRealmOrgName                  LongUtf8String,\n\
    \       pktcMtaDevRealmUnsolicitedKeyMaxTimeout Unsigned32,\n       pktcMtaDevRealmUnsolicitedKeyNomTimeout\
    \ Unsigned32,\n       pktcMtaDevRealmUnsolicitedKeyMaxRetries Unsigned32,\n  \
    \     pktcMtaDevRealmStatus                   RowStatus\n       }\n   pktcMtaDevRealmIndex\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (1..64)\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object defines\
    \ the realm table index.\"\n       ::= { pktcMtaDevRealmEntry 1}\n   pktcMtaDevRealmName\
    \  OBJECT-TYPE\n       SYNTAX      SnmpAdminString (SIZE(1..255))\n       MAX-ACCESS\
    \  read-create\n       STATUS      current\n       DESCRIPTION\n           \"\
    \ This object identifies the Kerberos realm name in all\n             capitals.\
    \  The MTA MUST prohibit the instantiation of any\n             two rows with\
    \ identical Kerberos realm names.  The MTA MUST\n             also verify that\
    \ any search operation involving Kerberos\n             realm names is done using\
    \ the uppercase ASCII\n             representation of the characters.\"\n    \
    \   ::= { pktcMtaDevRealmEntry 2 }\n   pktcMtaDevRealmPkinitGracePeriod  OBJECT-TYPE\n\
    \       SYNTAX      Unsigned32 (15..600)\n       UNITS       \"minutes\"\n   \
    \    MAX-ACCESS  read-create\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the PKINIT Grace Period.  For the\n      \
    \      purpose of key management with Application Servers (CMSes\n           \
    \ or the Provisioning Server), the MTA must utilize the\n            PKINIT exchange\
    \ to obtain Application Server tickets.  The\n            MTA may utilize the\
    \ PKINIT exchange to obtain Ticket\n            Granting Tickets (TGTs), which\
    \ are then used to obtain\n            Application Server tickets in a TGS exchange.\n\
    \            The PKINIT exchange occurs according to the current Ticket\n    \
    \        Expiration Time (TicketEXP) and on the PKINIT Grace Period\n        \
    \    (PKINITGP).  The MTA MUST initiate the PKINIT exchange at\n            the\
    \ time: TicketEXP - PKINITGP.\"\n       REFERENCE\n           \" PacketCable Security\
    \ Specification.\"\n       DEFVAL { 15 }\n       ::= { pktcMtaDevRealmEntry 3\
    \ }\n   pktcMtaDevRealmTgsGracePeriod  OBJECT-TYPE\n       SYNTAX      Unsigned32\
    \ (1..600)\n       UNITS       \"minutes\"\n       MAX-ACCESS  read-create\n \
    \      STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the Ticket Granting Server Grace\n             Period (TGSGP).  The Ticket Granting\
    \ Server (TGS)\n             Request/Reply exchange may be performed by the MTA\n\
    \             on demand whenever an Application Server ticket is\n           \
    \  needed to establish security parameters.  If the MTA\n             possesses\
    \ a ticket that corresponds to the Provisioning\n             Server or a CMS\
    \ that currently exists in the CMS table,\n             the MTA MUST initiate\
    \ the TGS Request/Reply exchange\n             at the time: TicketEXP - TGSGP.\"\
    \n       REFERENCE\n           \" PacketCable Security Specification.\"\n    \
    \   DEFVAL { 10 }\n       ::= { pktcMtaDevRealmEntry 4 }\n   pktcMtaDevRealmOrgName\
    \  OBJECT-TYPE\n       SYNTAX      LongUtf8String\n       MAX-ACCESS  read-create\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the X.500 organization name attribute\n             as defined in the subject\
    \ name of the service provider\n             certificate.\"\n       REFERENCE\n\
    \           \" PacketCable Security Specification;\n             RFCs 3280 and\
    \ 4630, Internet X.509 Public Key\n             Infrastructure Certificate and\
    \ Certificate Revocation List\n             (CRL) Profile\"\n       ::= { pktcMtaDevRealmEntry\
    \ 5 }\n   pktcMtaDevRealmUnsolicitedKeyMaxTimeout  OBJECT-TYPE\n       SYNTAX\
    \      Unsigned32 (1..600)\n       UNITS       \"seconds\"\n       MAX-ACCESS\
    \  read-create\n       STATUS      current\n       DESCRIPTION\n           \"\
    \ This object specifies the maximum time the MTA will\n             attempt to\
    \ perform the exponential back-off algorithm.\n             This timer only applies\
    \ when the MTA initiated key\n             management.  If the DHCP option code\
    \ 122, sub-option 4, is\n             provided to the MTA, it overwrites this\
    \ value.\n             Unsolicited key updates are retransmitted according to\
    \ an\n             exponential back-off mechanism using two timers and a\n   \
    \          maximum retry counter for AS replies.\n             The initial retransmission\
    \ timer value is the nominal\n             timer value (pktcMtaDevRealmUnsolicitedKeyNomTimeout).\
    \  The\n             retransmissions occur with an exponentially increasing\n\
    \             interval that caps at the maximum timeout value\n             (pktcMtaDevRealmUnsolicitedKeyMaxTimeout).\n\
    \             Retransmissions stop when the maximum retry counter is\n       \
    \      reached (pktcMatDevRealmUnsolicitedMaxRetries).\n             For example,\
    \ with values of 3 seconds for the nominal\n             timer, 20 seconds for\
    \ the maximum timeout, and 5 retries\n             max, retransmission intervals\
    \ will be 3 s, 6 s,\n             12 s, 20 s, and 20 s, and retransmissions then\
    \ stop because\n             the maximum number of retries has been reached.\"\
    \n       REFERENCE\n           \" PacketCable Security Specification.\"\n    \
    \   DEFVAL { 100 }\n       ::= { pktcMtaDevRealmEntry 6 }\n   pktcMtaDevRealmUnsolicitedKeyNomTimeout\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (100..600000)\n       UNITS    \
    \   \"milliseconds\"\n       MAX-ACCESS  read-create\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object specifies the initial timeout value\n\
    \             for the AS-REQ/AS-REP exponential back-off and retry\n         \
    \    mechanism.  If the DHCP option code 122, sub-option 4, is\n             provided\
    \ to the MTA, it overwrites this value.\n             This value should account\
    \ for the average roundtrip\n             time between the MTA and the KDC, as\
    \ well as the\n             processing delay on the KDC.\n             Unsolicited\
    \ key updates are retransmitted according to an\n             exponential back-off\
    \ mechanism using two timers and a\n             maximum retry counter for AS\
    \ replies.\n             The initial retransmission timer value is the nominal\n\
    \             timer value (pktcMtaDevRealmUnsolicitedKeyNomTimeout).  The\n  \
    \           retransmissions occur with an exponentially increasing\n         \
    \    interval that caps at the maximum timeout value\n             (pktcMtaDevRealmUnsolicitedKeyMaxTimeout).\n\
    \             Retransmissions stop when the maximum retry counter is\n       \
    \      reached (pktcMatDevRealmUnsolicitedMaxRetries).\n             For example,\
    \ with values of 3 seconds for the nominal\n             timer, 20 seconds for\
    \ the maximum timeout, and 5 retries\n             max, in retransmission intervals\
    \ will be 3 s, 6 s,\n             12 s, 20 s, and 20 s; retransmissions then stop\
    \ because\n             the maximum number of retries has been reached.\"\n  \
    \     REFERENCE\n           \" PacketCable Security Specification.\"\n       DEFVAL\
    \ { 3000 }\n       ::= { pktcMtaDevRealmEntry 7 }\n   pktcMtaDevRealmUnsolicitedKeyMaxRetries\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..1024)\n       MAX-ACCESS  read-create\n\
    \       STATUS      current\n       DESCRIPTION\n           \" This object specifies\
    \ the maximum number of retries the\n             MTA attempts to obtain a ticket\
    \ from the KDC.\n             Unsolicited key updates are retransmitted according\
    \ to an\n             exponential back-off mechanism using two timers and a\n\
    \             maximum retry counter for AS replies.\n             The initial\
    \ retransmission timer value is the nominal\n             timer value (pktcMtaDevRealmUnsolicitedKeyNomTimeout).\
    \  The\n             retransmissions occur with an exponentially increasing\n\
    \             interval that caps at the maximum timeout value\n             (pktcMtaDevRealmUnsolicitedKeyMaxTimeout).\n\
    \             Retransmissions stop when the maximum retry counter is\n       \
    \      reached (pktcMatDevRealmUnsolicitedMaxRetries).\n             For example,\
    \ with values of 3 seconds for the nominal\n             timer, 20 seconds for\
    \ the maximum timeout, and 5 retries\n             max, retransmission intervals\
    \ will be 3 s, 6 s,\n             12 s, 20 s, and 20 s; retransmissions then stop\
    \ because\n             the maximum number of retries has been reached.\"\n  \
    \     REFERENCE\n           \" PacketCable Security Specification.\"\n       DEFVAL\
    \ { 5 }\n       ::= { pktcMtaDevRealmEntry 8 }\n   pktcMtaDevRealmStatus     OBJECT-TYPE\n\
    \       SYNTAX      RowStatus\n       MAX-ACCESS  read-create\n       STATUS \
    \     current\n       DESCRIPTION\n           \" This object defines the row status\
    \ of this realm in the\n             realm table (pktcMtaDevRealmTable).\n   \
    \          An entry in this table is not qualified for activation\n          \
    \   until the object instances of all corresponding columns\n             have\
    \ been initialized, either by default values, or via\n             explicit SET\
    \ operations.  Until all object instances in\n             this row are initialized,\
    \ the status value for this realm\n             must be 'notReady(3)'.\n     \
    \        In particular, two columnar objects must be explicitly\n            \
    \ SET: the realm name (pktcMtaDevRealmName) and the\n             organization\
    \ name (pktcMtaDevRealmOrgName).  Once these 2\n             objects have been\
    \ set and the row status is SET to\n             'active(1)', the MTA MUST NOT\
    \ allow any modification of\n             these 2 object values.\n           \
    \  The value of this object has no effect on whether other\n             columnar\
    \ objects in this row can be modified.\"\n       ::= { pktcMtaDevRealmEntry 9\
    \ }\n   --=================================================================\n\
    \   --\n   --  The CMS table, pktcMtaDevCmsTable\n   --\n   -- The CMS table and\
    \ the realm table (pktcMtaDevRealmTable) are used\n   -- for managing the MTA\
    \ signaling security.  The CMS table defines\n   -- the CMSes the MTA is allowed\
    \ to communicate with and contains\n   -- the parameters describing the SA establishment\
    \ between the MTA\n   -- and a CMS.\n   -- The CMS table is indexed by pktcMtaDevCmsIndex.\
    \  The table\n   -- contains the CMS FQDN (pktcMtaDevCmsFQDN) and the associated\n\
    \   -- Kerberos realm name (pktcMtaDevCmsKerbRealmName) so that the MTA\n   --\
    \ can find the corresponding Kerberos realm name in the\n   -- pktcMtaDevRealmTable.\n\
    \   --\n   --=================================================================\n\
    \   pktcMtaDevCmsAvailSlot   OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..128)\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object contains the index number of the first\n          \
    \   available entry in the CMS table (pktcMtaDevCmsTable).\n             If all\
    \ the entries in the CMS table have been assigned,\n             this object contains\
    \ the value of zero.\n             A management station should create new entries\
    \ in the\n             CMS table, using the following procedure:\n           \
    \  First, issue a management protocol retrieval operation\n             to determine\
    \ the value of the first available index in the\n             CMS table (pktcMtaDevCmsAvailSlot).\n\
    \             Second, issue a management protocol SET operation\n            \
    \ to create an instance of the pktcMtaDevCmsStatus\n             object by setting\
    \ its value to 'createAndWait(5)'.\n             Third, if the SET operation succeeded,\
    \ continue\n             modifying the object instances corresponding to the newly\n\
    \             created conceptual row, without fear of collision with\n       \
    \      other management stations.  When all necessary conceptual\n           \
    \  columns of the row are properly populated (via SET\n             operations\
    \ or default values), the management station may\n             SET the pktcMtaDevCmsStatus\
    \ object to 'active(1)'.\"\n       ::= {  pktcMtaDevSecurity 7 }\n   pktcMtaDevCmsTable\
    \  OBJECT-TYPE\n       SYNTAX      SEQUENCE OF PktcMtaDevCmsEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \" This object defines the CMS table.\n             The CMS table (pktcMtaDevCmsTable)\
    \ and the realm table\n             (pktcMtaDevRealmTable) are used for managing\
    \ security\n             between the MTA and CMSes.  Each CMS table entry defines\n\
    \             a CMS the managed MTA is allowed to communicate with\n         \
    \    and contains security parameters for key management with\n             that\
    \ CMS.\"\n       ::= {  pktcMtaDevSecurity 8 }\n   pktcMtaDevCmsEntry  OBJECT-TYPE\n\
    \       SYNTAX      PktcMtaDevCmsEntry\n       MAX-ACCESS  not-accessible\n  \
    \     STATUS      current\n       DESCRIPTION\n           \" This table entry\
    \ object lists the MTA key management\n             parameters used when establishing\
    \ Security Associations\n             with a CMS.  The conceptual rows MUST NOT\
    \ persist across\n             MTA reboots.\"\n       INDEX { pktcMtaDevCmsIndex\
    \ }\n       ::= { pktcMtaDevCmsTable 1 }\n   PktcMtaDevCmsEntry ::= SEQUENCE {\n\
    \       pktcMtaDevCmsIndex                        Unsigned32,\n       pktcMtaDevCmsFqdn\
    \                         SnmpAdminString,\n       pktcMtaDevCmsKerbRealmName\
    \                SnmpAdminString,\n       pktcMtaDevCmsMaxClockSkew          \
    \       Unsigned32,\n       pktcMtaDevCmsSolicitedKeyTimeout          Unsigned32,\n\
    \       pktcMtaDevCmsUnsolicitedKeyMaxTimeout     Unsigned32,\n       pktcMtaDevCmsUnsolicitedKeyNomTimeout\
    \     Unsigned32,\n       pktcMtaDevCmsUnsolicitedKeyMaxRetries     Unsigned32,\n\
    \       pktcMtaDevCmsIpsecCtrl                    TruthValue,\n       pktcMtaDevCmsStatus\
    \                       RowStatus\n       }\n   pktcMtaDevCmsIndex  OBJECT-TYPE\n\
    \       SYNTAX      Unsigned32 (1..128)\n       MAX-ACCESS  not-accessible\n \
    \      STATUS      current\n       DESCRIPTION\n           \" This object defines\
    \ the CMS table index.\"\n       ::= { pktcMtaDevCmsEntry 1 }\n   pktcMtaDevCmsFqdn\
    \  OBJECT-TYPE\n       SYNTAX      SnmpAdminString (SIZE(1..255))\n       MAX-ACCESS\
    \  read-create\n       STATUS      current\n       DESCRIPTION\n           \"\
    \ This object specifies the CMS FQDN.  The MTA must\n             prohibit the\
    \ instantiation of any two rows with identical\n             FQDNs.  The MTA must\
    \ also verify that any search and/or\n             comparison operation involving\
    \ a CMS FQDN is case\n             insensitive.  The MTA must resolve the CMS\
    \ FQDN as required\n              by the corresponding PacketCable Specifications.\"\
    \n       REFERENCE\n           \" PacketCable MTA Device Provisioning Specification;\n\
    \             PacketCable Security Specification;\n             PacketCable Network-Based\
    \ Call Signaling Protocol\n             Specification.\"\n       ::= { pktcMtaDevCmsEntry\
    \ 2 }\n   pktcMtaDevCmsKerbRealmName  OBJECT-TYPE\n       SYNTAX      SnmpAdminString\
    \ (SIZE(1..255))\n       MAX-ACCESS  read-create\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object identifies the Kerberos realm name\
    \ in uppercase\n             characters associated with the CMS defined in this\n\
    \             conceptual row.  The object value is a reference\n             point\
    \ to the corresponding Kerberos realm name in the\n             realm table (pktcMtaDevRealmTable).\"\
    \n       ::= { pktcMtaDevCmsEntry 3 }\n   pktcMtaDevCmsMaxClockSkew    OBJECT-TYPE\n\
    \       SYNTAX      Unsigned32 (1..1800)\n       UNITS       \"seconds\"\n   \
    \    MAX-ACCESS  read-create\n       STATUS      current\n       DESCRIPTION\n\
    \           \" This object specifies the maximum allowable clock skew\n      \
    \       between the MTA and the CMS defined in this row.\"\n       DEFVAL { 300\
    \ }\n       ::= { pktcMtaDevCmsEntry 4 }\n   pktcMtaDevCmsSolicitedKeyTimeout\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (100..30000)\n       UNITS     \
    \  \"milliseconds\"\n       MAX-ACCESS  read-create\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object defines a Kerberos Key Management\
    \ timer on the\n             MTA.  It is the time period during which the MTA\
    \ saves the\n             nonce and Server Kerberos Principal Identifier to match\
    \ an\n             AP Request and its associated AP Reply response from the\n\
    \             CMS.  This timer only applies when the CMS initiated key\n     \
    \        management (with a Wake Up message or a Rekey message).\"\n       REFERENCE\n\
    \           \" PacketCable Security Specification.\"\n       DEFVAL { 1000 }\n\
    \       ::= { pktcMtaDevCmsEntry 5 }\n   --=================================================================\n\
    \   --\n   --  Unsolicited key updates are retransmitted according to an\n   --\
    \  exponential back-off mechanism using two timers and a maximum\n   --  retry\
    \ counter for AS replies.\n   --  The initial retransmission timer value is the\
    \ nominal timer\n   --  value (pktcMtaDevCmsUnsolicitedKeyNomTimeout).  The\n\
    \   --  retransmissions occur with an exponentially increasing interval\n   --\
    \  that caps at the maximum timeout value\n   --  (pktcMtaDevCmsUnsolicitedKeyMaxTimeout).\n\
    \   --  Retransmissions stop when the maximum retry counter is reached\n   --\
    \  (pktcMatDevCmsUnsolicitedMaxRetries).\n   --  For example, with values of 3\
    \ seconds for the nominal\n   --  timer, 20 seconds for the maximum timeout, and\
    \ 5 retries max,\n   --  retransmission intervals will be 3 s, 6 s, 12 s,\n  \
    \ --  20 s, and 20 s; retransmissions then stop due to the\n   --  maximum number\
    \ of retries reached.\n   --\n   --=================================================================\n\
    \   pktcMtaDevCmsUnsolicitedKeyMaxTimeout  OBJECT-TYPE\n       SYNTAX      Unsigned32\
    \ (1..600)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-create\n \
    \      STATUS      current\n       DESCRIPTION\n           \" This object defines\
    \ the timeout value that only applies\n             to an MTA-initiated key management\
    \ exchange.  It is the\n             maximum timeout, and it may not be exceeded\
    \ in the\n             exponential back-off algorithm.\"\n       REFERENCE\n \
    \          \" PacketCable Security Specification.\"\n       DEFVAL { 600 }\n \
    \      ::= { pktcMtaDevCmsEntry 6 }\n   pktcMtaDevCmsUnsolicitedKeyNomTimeout\
    \  OBJECT-TYPE\n       SYNTAX      Unsigned32 (100..30000)\n       UNITS     \
    \  \"milliseconds\"\n       MAX-ACCESS  read-create\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This object defines the starting value of the\
    \ timeout\n             for an MTA-initiated key management.  It should account\
    \ for\n             the average roundtrip time between the MTA and the CMS and\n\
    \             the processing time on the CMS.\"\n       REFERENCE\n          \
    \ \" PacketCable Security Specification.\"\n       DEFVAL { 500 }\n       ::=\
    \ { pktcMtaDevCmsEntry 7 }\n   pktcMtaDevCmsUnsolicitedKeyMaxRetries  OBJECT-TYPE\n\
    \       SYNTAX      Unsigned32 (0..1024)\n       MAX-ACCESS  read-create\n   \
    \    STATUS      current\n       DESCRIPTION\n           \" This object contains\
    \ the maximum number of retries before\n             the MTA stops attempting\
    \ to establish a Security\n             Association with the CMS.\"\n       REFERENCE\n\
    \           \" PacketCable Security Specification.\"\n       DEFVAL { 5 }\n  \
    \     ::= { pktcMtaDevCmsEntry 8 }\n   pktcMtaDevCmsIpsecCtrl     OBJECT-TYPE\n\
    \       SYNTAX        TruthValue\n       MAX-ACCESS    read-only\n       STATUS\
    \        current\n       DESCRIPTION\n           \" This object specifies the\
    \ MTA IPSec control flag.\n             If the object value is 'true', the MTA\
    \ must use Kerberos\n             Key Management and IPsec to communicate with\
    \ this CMS.  If\n             it is 'false', IPSec Signaling Security and Kerberos\
    \ key\n             management are disabled for this specific CMS.\"\n       DEFVAL\
    \ { true }\n       ::= { pktcMtaDevCmsEntry 9 }\n   pktcMtaDevCmsStatus     OBJECT-TYPE\n\
    \       SYNTAX      RowStatus\n       MAX-ACCESS  read-create\n       STATUS \
    \     current\n       DESCRIPTION\n           \" This object defines the row status\
    \ associated with this\n             particular CMS in the CMS table (pktcMtaDevCmsTable).\n\
    \             An entry in this table is not qualified for activation\n       \
    \      until the object instances of all corresponding columns\n             have\
    \ been initialized, either by default values or via\n             explicit SET\
    \ operations.  Until all object instances in\n             this row are initialized,\
    \ the status value for this realm\n             must be 'notReady(3)'.\n     \
    \        In particular, two columnar objects must be SET: the\n             CMS\
    \ FQDN (pktcMtaDevCmsFqdn) and the Kerberos realm name\n             (pktcMtaDevCmsKerbRealmName).\
    \  Once these 2 objects have\n             been set and the row status is SET\
    \ to 'active(1)', the MTA\n             MUST NOT allow any modification of these\
    \ 2 object values.\n             The value of this object has no effect on\n \
    \            whether other columnar objects in this row can be\n             modified.\"\
    \n       ::= { pktcMtaDevCmsEntry 10 }\n   pktcMtaDevResetKrbTickets   OBJECT-TYPE\n\
    \       SYNTAX      BITS {\n                            invalidateProvOnReboot\
    \   (0),\n                            invalidateAllCmsOnReboot (1)\n         \
    \          }\n       MAX-ACCESS   read-write\n       STATUS    current\n     \
    \  DESCRIPTION\n           \" This object defines a Kerberos Ticket Control Mask\
    \ that\n             instructs the MTA to invalidate the specific Application\n\
    \             Server Kerberos ticket(s) that are stored locally in the\n     \
    \        MTA NVRAM (non-volatile or persistent memory).\n             If the MTA\
    \ does not store Kerberos tickets in NVRAM, it\n             MUST ignore setting\
    \ of this object and MUST report a BITS\n             value of zero when the object\
    \ is read.\n             If the MTA supports Kerberos tickets storage in NVRAM,\
    \ the\n             object value is encoded as follows:\n             - Setting\
    \ the invalidateProvOnReboot bit (bit 0) to 1\n               means that the MTA\
    \ MUST invalidate the Kerberos\n               Application Ticket(s) for the Provisioning\
    \ Application\n               at the next MTA reboot if secure SNMP provisioning\
    \ mode\n               is used.  In non-secure provisioning modes, the MTA MUST\n\
    \               return an 'inconsistentValue' in response to SNMP SET\n      \
    \         operations with a bit 0 set to 1.\n             - Setting the invalidateAllCmsOnReboot\
    \ bit (bit 1) to 1\n               means that the MTA MUST invalidate the Kerberos\n\
    \               Application Ticket(s) for all CMSes currently assigned\n     \
    \          to the MTA endpoints.\n             If a value is written into an instance\
    \ of\n             pktcMtaDevResetKrbTickets, the agent MUST retain the\n    \
    \         supplied value across an MTA re-initialization or\n             reboot.\"\
    \n       REFERENCE\n           \"PacketCable Security Specification.\"\n     \
    \  DEFVAL { {   } }\n       ::= {  pktcMtaDevSecurity 9 }\n   --\n   -- The following\
    \ group, pktcMtaDevErrors, defines an OID\n   -- corresponding to error conditions\
    \ encountered during the MTA\n   -- provisioning.\n   --\n   pktcMtaDevErrorsTooManyErrors\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \"\
    This object defines the OID corresponding to the error\n            condition\
    \ when too many errors are encountered in the\n            MTA configuration file\
    \ during provisioning.\"\n          ::= { pktcMtaDevErrors  1 }\n   pktcMtaDevProvisioningEnrollment\
    \  NOTIFICATION-TYPE\n       OBJECTS {\n               sysDescr,\n           \
    \    pktcMtaDevSwCurrentVers,\n               pktcMtaDevTypeIdentifier,\n    \
    \           ifPhysAddress,\n               pktcMtaDevCorrelationId\n       }\n\
    \       STATUS   current\n       DESCRIPTION\n           \" This INFORM notification\
    \ is issued by the MTA to initiate\n             the PacketCable provisioning\
    \ process when the MTA SNMP\n             enrollment mechanism is used.\n    \
    \         It contains the system description, the current software\n         \
    \    version, the MTA device type identifier, the MTA MAC\n             address\
    \ (obtained in the MTA ifTable in the ifPhysAddress\n             object that\
    \ corresponds to the ifIndex 1), and a\n             correlation ID.\"\n     \
    \  ::= { pktcMtaNotification 1 }\n   pktcMtaDevProvisioningStatus  NOTIFICATION-TYPE\n\
    \       OBJECTS {\n               ifPhysAddress,\n               pktcMtaDevCorrelationId,\n\
    \               pktcMtaDevProvisioningState\n       }\n       STATUS      current\n\
    \       DESCRIPTION\n           \" This INFORM notification may be issued by the\
    \ MTA to\n             confirm the completion of the PacketCable provisioning\n\
    \             process, and to report its provisioning completion\n           \
    \  status.\n             It contains the MTA MAC address (obtained in the MTA\n\
    \             ifTable in the ifPhysAddress object that corresponds\n         \
    \    to the ifIndex 1), a correlation ID and the MTA\n             provisioning\
    \ state as defined in\n             pktcMtaDevProvisioningState.\"\n       ::=\
    \ { pktcMtaNotification 2 }\n   --\n   -- Compliance Statements\n   --\n   pktcMtaCompliances\
    \  OBJECT IDENTIFIER ::= { pktcMtaConformance 1 }\n   pktcMtaGroups       OBJECT\
    \ IDENTIFIER ::= { pktcMtaConformance 2 }\n   pktcMtaBasicCompliance MODULE-COMPLIANCE\n\
    \       STATUS      current\n       DESCRIPTION\n           \" The compliance\
    \ statement for MTA devices that implement\n             PacketCable or IPCablecom\
    \ requirements.\n             This compliance statement applies to MTA implementations\n\
    \             that support PacketCable 1.0 or IPCablecom requirements,\n     \
    \        which are not IPv6-capable at the time of this\n             RFC publication.\"\
    \n       MODULE  -- Unconditionally mandatory groups for MTAs\n           MANDATORY-GROUPS\
    \ {\n               pktcMtaGroup,\n               pktcMtaNotificationGroup\n \
    \          }\n           OBJECT  pktcMtaDevDhcpServerAddressType\n           \
    \    SYNTAX      InetAddressType { ipv4(1) }\n               DESCRIPTION\n   \
    \                \" Support for address types other than 'ipv4(1)'\n         \
    \      is not presently specified and therefore is not\n               required.\
    \  It may be defined in future versions of\n               this MIB module.\"\n\
    \           OBJECT  pktcMtaDevDnsServerAddressType\n               SYNTAX    \
    \  InetAddressType { ipv4(1) }\n               DESCRIPTION\n                 \
    \  \" Support for address types other than 'ipv4(1)'\n               is not presently\
    \ specified and therefore is not\n               required.  It may be defined\
    \ in future versions of\n               this MIB module.\"\n           OBJECT\
    \  pktcMtaDevTimeServerAddressType\n               SYNTAX      InetAddressType\
    \ { ipv4(1) }\n               DESCRIPTION\n                   \" Support for address\
    \ types other than 'ipv4(1)'\n               is not presently specified and therefore\
    \ is not\n               required.  It may be defined in future versions of\n\
    \               this MIB module.\"\n           OBJECT    pktcMtaDevServerDhcp1\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevServerDhcp2\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevServerDns1\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevServerDns2\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevTimeServer\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevProvConfigEncryptAlg\n\
    \               SYNTAX  PktcMtaDevProvEncryptAlg\n               DESCRIPTION\n\
    \                    \"An implementation is only required to support\n       \
    \        values of none(0) and des64Cbcmode(1).\n               An IV of zero\
    \ is used to encrypt in des64Cbcmode, and\n               the length of pktcMtaDevProvConfigKey\
    \ is 64 bits, as\n               defined in the PacketCable Security specification.\n\
    \               Other encryption types may be defined in future\n            \
    \   versions of this MIB module.\"\n           OBJECT pktcMtaDevRealmOrgName\n\
    \               SYNTAX LongUtf8String (SIZE (1..384))\n               DESCRIPTION\n\
    \                    \"The Organization Name field in X.509 certificates\n   \
    \            can contain up to 64 UTF-8 encoded characters,\n               as\
    \ defined in RFCs 3280 and 4630.  Therefore, compliant\n               devices\
    \ are only required to support Organization\n               Name values of up\
    \ to 64 UTF-8 encoded characters.\n               Given that RFCs 3280 and 4630\
    \ define the UTF-8 encoding,\n               compliant devices must support a\
    \ maximum size of 384\n               octets for pktcMtaDevRealmOrgName.  The\
    \ calculation of\n               384 octets comes from the RFC 3629 UTF-8 encoding\n\
    \               definition whereby the UTF-8 encoded characters\n            \
    \   are encoded as sequences of 1 to 6 octets,\n               assuming that code\
    \ points as high as 0x7ffffffff\n               might be used.  Subsequent versions\
    \ of Unicode and ISO\n               10646 have limited the upper bound to 0x10ffff.\n\
    \               Consequently, the current version of UTF-8, defined in\n     \
    \          RFC 3629, does not require more than four octets to\n             \
    \  encode a valid code point.\"\n       ::= { pktcMtaCompliances 1 }\n   pktcMtaGroup\
    \ OBJECT-GROUP\n       OBJECTS {\n               pktcMtaDevResetNow,\n       \
    \        pktcMtaDevSerialNumber,\n               pktcMtaDevSwCurrentVers,\n  \
    \             pktcMtaDevFQDN,\n               pktcMtaDevEndPntCount,\n       \
    \        pktcMtaDevEnabled,\n               pktcMtaDevProvisioningCounter,\n \
    \              pktcMtaDevErrorOid,\n               pktcMtaDevErrorValue,\n   \
    \            pktcMtaDevErrorReason,\n               pktcMtaDevTypeIdentifier,\n\
    \               pktcMtaDevProvisioningState,\n               pktcMtaDevHttpAccess,\n\
    \               pktcMtaDevCertificate,\n               pktcMtaDevCorrelationId,\n\
    \               pktcMtaDevManufacturerCertificate,\n               pktcMtaDevDhcpServerAddressType,\n\
    \               pktcMtaDevDnsServerAddressType,\n               pktcMtaDevTimeServerAddressType,\n\
    \               pktcMtaDevProvConfigEncryptAlg,\n               pktcMtaDevServerDhcp1,\n\
    \               pktcMtaDevServerDhcp2,\n               pktcMtaDevServerDns1,\n\
    \               pktcMtaDevServerDns2,\n               pktcMtaDevTimeServer,\n\
    \               pktcMtaDevConfigFile,\n               pktcMtaDevSnmpEntity,\n\
    \               pktcMtaDevRealmPkinitGracePeriod,\n               pktcMtaDevRealmTgsGracePeriod,\n\
    \               pktcMtaDevRealmAvailSlot,\n               pktcMtaDevRealmName,\n\
    \               pktcMtaDevRealmOrgName,\n               pktcMtaDevRealmUnsolicitedKeyMaxTimeout,\n\
    \               pktcMtaDevRealmUnsolicitedKeyNomTimeout,\n               pktcMtaDevRealmUnsolicitedKeyMaxRetries,\n\
    \               pktcMtaDevRealmStatus,\n               pktcMtaDevCmsAvailSlot,\n\
    \               pktcMtaDevCmsFqdn,\n               pktcMtaDevCmsKerbRealmName,\n\
    \               pktcMtaDevCmsUnsolicitedKeyMaxTimeout,\n               pktcMtaDevCmsUnsolicitedKeyNomTimeout,\n\
    \               pktcMtaDevCmsUnsolicitedKeyMaxRetries,\n               pktcMtaDevCmsSolicitedKeyTimeout,\n\
    \               pktcMtaDevCmsMaxClockSkew,\n               pktcMtaDevCmsIpsecCtrl,\n\
    \               pktcMtaDevCmsStatus,\n               pktcMtaDevResetKrbTickets,\n\
    \               pktcMtaDevProvUnsolicitedKeyMaxTimeout,\n               pktcMtaDevProvUnsolicitedKeyNomTimeout,\n\
    \               pktcMtaDevProvUnsolicitedKeyMaxRetries,\n               pktcMtaDevProvKerbRealmName,\n\
    \               pktcMtaDevProvSolicitedKeyTimeout,\n               pktcMtaDevProvConfigHash,\n\
    \               pktcMtaDevProvConfigKey,\n               pktcMtaDevProvState,\n\
    \               pktcMtaDevProvisioningTimer,\n               pktcMtaDevTelephonyRootCertificate\n\
    \       }\n       STATUS      current\n       DESCRIPTION\n           \" A collection\
    \ of objects for managing PacketCable or\n             IPCablecom MTA implementations.\"\
    \n       ::= { pktcMtaGroups 1 }\n   pktcMtaNotificationGroup          NOTIFICATION-GROUP\n\
    \       NOTIFICATIONS {\n                     pktcMtaDevProvisioningStatus,\n\
    \                     pktcMtaDevProvisioningEnrollment\n       }\n       STATUS\
    \      current\n       DESCRIPTION\n           \" A collection of notifications\
    \ dealing with the change of\n             MTA provisioning status.\"\n      \
    \ ::= { pktcMtaGroups 2 }\n   pktcMtaBasicSmtaCompliance MODULE-COMPLIANCE\n \
    \      STATUS      current\n       DESCRIPTION\n           \" The compliance statement\
    \ for S-MTA devices\n             that implement PacketCable or IPCablecom requirements.\n\
    \             This compliance statement applies to S-MTA implementations\n   \
    \          that support PacketCable or IPCablecom requirements,\n            \
    \ which are not IPv6-capable at the time of this\n             RFC publication.\"\
    \n      MODULE -- Unconditionally Mandatory Groups for S-MTA devices\n       \
    \    MANDATORY-GROUPS {\n               pktcMtaGroup,\n               pktcMtaNotificationGroup\n\
    \           }\n           OBJECT  pktcMtaDevDhcpServerAddressType\n          \
    \     SYNTAX      InetAddressType { ipv4(1) }\n               DESCRIPTION\n  \
    \                 \" Support for address types other than 'ipv4(1)'\n        \
    \       is not presently specified and therefore is not\n               required.\
    \  It may be defined in future versions of\n               this MIB module.\"\n\
    \           OBJECT  pktcMtaDevDnsServerAddressType\n               SYNTAX    \
    \  InetAddressType { ipv4(1) }\n               DESCRIPTION\n                 \
    \  \" Support for address types other than 'ipv4(1)'\n               is not presently\
    \ specified and therefore is not\n               required.  It may be defined\
    \ in future versions of\n               this MIB module.\"\n           OBJECT\
    \  pktcMtaDevTimeServerAddressType\n               SYNTAX      InetAddressType\
    \ { ipv4(1) }\n               DESCRIPTION\n                   \" Support for address\
    \ types other than 'ipv4(1)'\n               is not presently specified and therefore\
    \ is not\n               required.  It may be defined in future versions of\n\
    \               this MIB module.\"\n           OBJECT    pktcMtaDevServerDhcp1\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevServerDhcp2\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevServerDns1\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevServerDns2\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevTimeServer\n\
    \               SYNTAX  InetAddress (SIZE(4))\n               DESCRIPTION\n  \
    \                  \"An implementation is only required to support IPv4\n    \
    \           addresses.  Other address types support may be defined in\n      \
    \         future versions of this MIB module.\"\n           OBJECT    pktcMtaDevProvConfigEncryptAlg\n\
    \               SYNTAX  PktcMtaDevProvEncryptAlg\n               DESCRIPTION\n\
    \                    \"An implementation is only required to support\n       \
    \        values of none(0) and des64Cbcmode(1).\n               An IV of zero\
    \ is used to encrypt in des64Cbcmode, and\n               the length of pktcMtaDevProvConfigKey\
    \ is 64 bits, as\n               defined in the PacketCable Security specification.\n\
    \               Other encryption types may be defined in future\n            \
    \   versions of this MIB module.\"\n           OBJECT pktcMtaDevRealmOrgName\n\
    \               SYNTAX LongUtf8String (SIZE (1..384))\n               DESCRIPTION\n\
    \                    \"The Organization Name field in X.509 certificates\n   \
    \            can contain up to 64 UTF-8 encoded characters, as\n             \
    \  defined in RFCs 3280 and 4630.  Therefore, compliant\n               devices\
    \ are only required to support Organization\n               Name values of up\
    \ to 64 UTF-8 encoded characters.\n               Given that RFCs 3280 and 4630\
    \ define the UTF-8 encoding,\n               compliant devices must support a\
    \ maximum size of 384\n               octets for pktcMtaDevRealmOrgName.  The\
    \ calculation of\n               384 octets comes from the RFC 3629 UTF-8 encoding\n\
    \               definition whereby the UTF-8 encoded characters\n            \
    \   are encoded as sequences of 1 to 6 octets,\n               assuming that code\
    \ points as high as 0x7ffffffff\n               might be used.  Subsequent versions\
    \ of Unicode and ISO\n               10646 have limited the upper bound to 0x10ffff.\n\
    \               Consequently, the current version of UTF-8, defined in\n     \
    \          RFC 3629 does not require more than four octets to\n              \
    \ encode a valid code point.\"\n       MODULE DOCS-CABLE-DEVICE-MIB\n        \
    \   MANDATORY-GROUPS {\n               docsDevSoftwareGroupV2\n           }\n\
    \       MODULE DOCS-IETF-BPI2-MIB\n           MANDATORY-GROUPS {\n           \
    \    docsBpi2CodeDownloadGroup\n           }\n        ::= { pktcMtaCompliances\
    \ 2 }\n   END\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The current editors would like to thank the members\
    \ of the IETF IPCDN\n   working group and the CableLabs PacketCable Provisioning\
    \ and OSS\n   focus team for their comments and suggestions.  In particular, we\n\
    \   wish to express our gratitude for the contributions made by the\n   following\
    \ individuals (in no particular order): Angela Lyda,Sumanth\n   Channabasappa,\
    \ Matt A. Osman, Klaus Hermanns, Paul Duffy, Rick\n   Vetter, Sasha Medvinsky,\
    \ Roy Spitzer, Itay Sherman, Satish Kumar and\n   Eric Rosenfeld.  Finally, special\
    \ thanks to our area director Bert\n   Wijnen, Rich Woundy, Randy Presuhn, Mike\
    \ Heard, and Dave Thaler.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects may be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\
    \  Improper manipulation of the objects defined in\n   this MIB may result in\
    \ random behavior of MTA devices and may result\n   in service disruption.  These\
    \ are the tables and objects and their\n   sensitivity/vulnerability:\n   -  The\
    \ following objects, if SET maliciously, would cause the MTA\n      device to\
    \ reset and/or stop its service:\n         pktcMtaDevResetNow.\n         pktcMtaDevEnabled.\n\
    \   -  All writable objects in the pktcMtaDevServer group and some in the\n  \
    \    pktcMtaDevRealmTable share the potential, if SET maliciously, to\n      prevent\
    \ the MTA from provisioning properly.  Thus, they are\n      considered very sensitive\
    \ for service delivery.  The objects in\n      question are:\n         pktcMtaDevProvisioningTimer,\n\
    \         pktcMtaDevDhcpServerAddressType,\n         pktcMtaDevDnsServerAddressType,\n\
    \         pktcMtaDevTimeServerAddressType,\n         pktcMtaDevProvConfigEncryptAlg,\n\
    \         pktcMtaDevServerDns1,\n         pktcMtaDevServerDns2,\n         pktcMtaDevTimeServer,\n\
    \         pktcMtaDevConfigFile,\n         pktcMtaDevProvConfigHash,\n        \
    \ pktcMtaDevProvConfigKey,\n         pktcMtaDevProvSolicitedKeyTimeout,\n    \
    \     pktcMtaDevRealmName,\n         pktcMtaDevRealmOrgName,\n         pktcMtaDevRealmUnsolicitedKeyMaxTimeout,\n\
    \         pktcMtaDevRealmUnsolicitedKeyNomTimeout,\n         pktcMtaDevRealmUnsolicitedKeyMaxRetries,\
    \ and\n         pktcMtaDevRealmStatus.\n   Certain of the above objects have additional\
    \ specific\n   vulnerabilities:\n      o  pktcMtaDevServerDns1 and pktcMtaDevServerDns2,\
    \ if SET\n         maliciously, could prevent the MTA from being authenticated\
    \ and\n         consequently from getting telephony services.\n      o  pktcMtaDevRealmStatus,\
    \ if SET maliciously, could cause the\n         whole row of the table to be deleted,\
    \ which may prevent MTA\n         from getting telephony services.\n   -  All\
    \ writable objects in the pktcMtaDevCmsTable table share the\n      potential,\
    \ if SET maliciously, to disrupt the telephony service by\n      altering which\
    \ Call Management Server the MTA must send signaling\n      registration to; in\
    \ particular:\n         pktcMtaDevCmsFqdn,\n         pktcMtaDevCmsKerbRealmName,\n\
    \         pktcMtaDevCmsMaxClockSkew,\n         pktcMtaDevCmsSolicitedKeyTimeout,\n\
    \         pktcMtaDevCmsUnsolicitedKeyMaxTimeout,\n         pktcMtaDevCmsUnsolicitedKeyNomTimeout,\n\
    \         pktcMtaDevCmsUnsolicitedKeyMaxRetries (this object, if set to a\n  \
    \       zero value '0', may prevent the MTA from retrying its attempt\n      \
    \   to establish a Security Association with the CMS), and\n         pktcMtaDevCmsStatus.\n\
    \   -  Some writable objects in the pktcMtaDevRealmTable table will not\n    \
    \  have an immediate effect on service, if SET maliciously.  However,\n      they\
    \ may impact the service performance and cause avalanche\n      attacks on provisioning\
    \ and Kerberos KDC servers, especially after\n      massive device reboots occur.\
    \  The objects in question are as\n      follows:\n      pktcMtaDevResetKrbTickets:\
    \  This object, if set to 'true', will\n      cause the MTA to request a new Kerberos\
    \ ticket at reboot.\n      pktcMtaDevRealmPkinitGracePeriod, pktcMtaDevRealmTgsGracePeriod:\n\
    \      These 2 objects, if set to short time periods, will cause the MTA\n   \
    \   to renew its tickets more frequently.\n   Some of the readable objects in\
    \ this MIB module (i.e., objects with a\n   MAX-ACCESS other than not-accessible)\
    \ may be considered sensitive or\n   vulnerable in some network environments.\
    \  Some of these objects may\n   contain information that may be sensitive from\
    \ a business or customer\n   perspective.  It is thus important to control even\
    \ GET and/or NOTIFY\n   access to these objects and possibly to even encrypt the\
    \ values of\n   these objects when sending them over the network via SNMP.\n \
    \  These are the tables and objects and their sensitivity and\n   vulnerability:\n\
    \   -  Some readable objects in the pktcMtaDevBase, pktcMtaDevServer, and\n  \
    \    pktcMtaDevSecurity groups share the potential, if read\n      maliciously,\
    \ to facilitate Denial-of-Service (DoS) attacks against\n      provisioning or\
    \ Kerberos servers.  The object in question are as\n      follows:\n      pktcMtaDevServerDhcp1,\
    \ pktcMtaDevServerDhcp2, and\n      pktcMtaDevSnmpEntity.  The values of these\
    \ objects may be used to\n      launch DoS attacks on the Telephony Service Provider\
    \ DHCP or\n      Provisioning servers.\n      pktcMtaDevProvKerbRealmName, pktcMtaDevManufacturerCertificate,\n\
    \      pktcMtaDevCertificate and pktcMtaDevTelephonyRootCertificate.  The\n  \
    \    values of these objects may be used by attackers to launch DoS\n      attacks\
    \ against Kerberos servers.\n   -  One additional readable object may expose some\
    \ security threats:\n      pktcMtaDevFQDN.  This object may include sensitive\
    \ information\n      about the domain name, and potentially, the domain topology.\n\
    \   SNMP versions prior to SNMPv3 did not include adequate security.\n   Even\
    \ if the network itself is secure (for example by using IPSec),\n   even then,\
    \ there is no control as to who on the secure network is\n   allowed to access\
    \ and GET/SET (read/change/create/delete) the objects\n   in this MIB module.\n\
    \   It is RECOMMENDED that implementers consider the security features as\n  \
    \ provided by the SNMPv3 framework (see Section 8 in [RFC3410]),\n   including\
    \ full support for the SNMPv3 cryptographic mechanisms (for\n   authentication\
    \ and privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n\
    \   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable\
    \ cryptographic security.  It is then a customer/operator\n   responsibility to\
    \ ensure that the SNMP entity giving access to an\n   instance of this MIB module\
    \ is properly configured to give access to\n   the objects only to those principals\
    \ (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)\
    \ them.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The MIB module defined in this document uses the\
    \ following IANA-\n   assigned OBJECT IDENTIFIER values, recorded in the SMI Numbers\n\
    \   registry:\n   Descriptor        OBJECT IDENTIFIER value\n   ----------   \
    \     -----------------------\n   pktcIetfMtaMib        { mib-2 140 }\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [RFC868]         Postel, J. and K. Harrenstien,\
    \ \"Time Protocol\", STD\n                    26, RFC 868, May 1983.\n   [RFC1350]\
    \        Sollins, K., \"The TFTP Protocol (Revision 2)\", STD\n              \
    \      33, RFC 1350, July 1992.\n   [RFC2119]        Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n                    Requirement Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [RFC2131]        Droms, R., \"Dynamic Host Configuration\
    \ Protocol\",\n                    RFC 2131, March 1997.\n   [RFC2132]       \
    \ Alexander, S. and R. Droms, \"DHCP Options and BOOTP\n                    Vendor\
    \ Extensions\", RFC 2132, March 1997.\n   [RFC2287]        Krupczak, C. and J.\
    \ Saperia, \"Definitions of\n                    System-Level Managed Objects\
    \ for Applications\", RFC\n                    2287, February 1998.\n   [RFC2578]\
    \        McCloghrie, K., Perkins, D., Schoenwaelder J., Case,\n              \
    \      J. Rose, M. and S. Waldbusser, \"Structure of\n                    Management\
    \ Information Version 2 (SMIv2)\", STD 58,\n                    RFC 2578, April\
    \ 1999.\n   [RFC2579]        McCloghrie, K., Perkins, D., Schoenwaelder, J. Case,\n\
    \                    J. Rose, M. and S. Waldbusser, \"Textual Conventions\n  \
    \                  for SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580]  \
    \      McCloghrie, K., Perkins, D., Schoenwaelder J., Case,\n                \
    \    J., Rose, M. and S. Waldbusser, \"Conformance\n                    Statements\
    \ for SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC2616]        Fielding, R.,\
    \ Gettys, J., Mogul, J., Frystyk, H.,\n                    Masinter, L., Leach,\
    \ P., and T. Berners-Lee,\n                    \"Hypertext Transfer Protocol --\
    \ HTTP/1.1\", RFC 2616,\n                    June 1999.\n   [RFC2863]        McCloghrie,\
    \ K. and F. Kastenholz, \"The Interfaces\n                    Group MIB\", RFC\
    \ 2863, June 2000.\n   [RFC3280]        Housley, R., Polk, W., Ford, W., and D.\
    \ Solo,\n                    \"Internet X.509 Public Key Infrastructure\n    \
    \                Certificate and Certificate Revocation List (CRL)\n         \
    \           Profile\", RFC 3280, April 2002.\n   [RFC3411]        Harrington,\
    \ D., Presuhn, R., and B. Wijnen, \"An\n                    Architecture for Describing\
    \ Simple Network\n                    Management Protocol (SNMP) Management Frameworks\"\
    ,\n                    STD 62, RFC 3411, December 2002.\n   [RFC3418]        Presuhn,\
    \ R., \"Management Information Base (MIB) for\n                    the Simple\
    \ Network Management Protocol (SNMP)\", STD\n                    62, RFC 3418,\
    \ December 2002.\n   [RFC3495]        Beser, B. and P. Duffy, \"Dynamic Host Configuration\n\
    \                    Protocol (DHCP) Option for CableLabs Client\n           \
    \         Configuration\", RFC 3495, March 2003.\n   [RFC3594]        Duffy, P.,\
    \ \"PacketCable Security Ticket Control\n                    Sub-Option for the\
    \ DHCP CableLabs Client\n                    Configuration (CCC) Option\", RFC\
    \ 3594, September\n                    2003.\n   [RFC4001]        Daniele, M.,\
    \ Haberman, B., Routhier, S., and J.\n                    Schoenwaelder, \"Textual\
    \ Conventions for Internet\n                    Network Addresses\", RFC 4001,\
    \ February 2005.\n   [RFC4131]        Green, S., Ozawa, K., Cardona, E., and A.\n\
    \                    Katsnelson, \"Management Information Base for Data\n    \
    \                Over Cable Service Interface Specification (DOCSIS)\n       \
    \             Cable Modems and Cable Modem Termination Systems for\n         \
    \           Baseline Privacy Plus\", RFC 4131, September 2005.\n   [RFC4630] \
    \       Housley, R. and S. Santesson, \"Update to\n                    DirectoryString\
    \ Processing in the Internet X.509\n                    Public Key Infrastructure\
    \ Certificate and\n                    Certificate Revocation List (CRL) Profile\"\
    , RFC\n                    4630, August 2006.\n   [RFC4639]        Woundy, R.\
    \ and K. Marez, \"Cable Device Management\n                    Information Base\
    \ for Data-Over-Cable Service\n                    Interface Specification (DOCSIS)\
    \ Compliant Cable\n                    Modems and Cable Modem Termination Systems\"\
    , RFC\n                    4639, December 2006.\n   [PKT-SP-PROV]    Packetcable\
    \ MTA Device Provisioning Specification,\n                    Issued, PKT-SP-PROV-I11-050812,\
    \ August 2005.\n                    http://www.packetcable.com/specifications/\n\
    \                    http://www.cablelabs.com/specifications/archives/\n   [PKT-SP-SEC]\
    \     PacketCable Security Specification, Issued, PKT-SP-\n                  \
    \  SEC-I12-050812, August 2005.\n                    http://www.packetcable.com/specifications/\n\
    \                    http://www.cablelabs.com/specifications/archives/\n   [ITU-T-J112]\
    \     Transmission Systems for Interactive Cable\n                    Television\
    \ Services, Annex B, J.112, ITU-T, March,\n                    1998.\n   [ITU-T-J168]\
    \     IPCablecom Multimedia Terminal Adapter (MTA) MIB\n                    requirements,\
    \ J.168, ITU-T, March, 2001.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [RFC3410]        Case, J., Mundy, R., Partain,\
    \ D., and B. Stewart,\n                    \"Introduction and Applicability Statements\
    \ for\n                    Internet-Standard Management Framework\", RFC 3410,\n\
    \                    December 2002.\n   [RFC3617]        Lear, E., \"Uniform Resource\
    \ Identifier (URI) Scheme\n                    and Applicability Statement for\
    \ the Trivial File\n                    Transfer Protocol (TFTP)\", RFC 3617,\
    \ October 2003.\n   [RFC3629]        Yergeau, F., \"UTF-8, a transformation format\
    \ of ISO\n                    10646\", STD 63, RFC 3629, November 2003.\n   [PKT-SP-MIB-MTA]\
    \ Packetcable MTA MIB Specification, Issued, PKT-SP-\n                    MIB-MTA-I10-050812,\
    \ August 2005.\n                    http://www.packetcable.com/specifications/\n\
    \                    http://www.cablelabs.com/specifications/archives/\n   [ETSITS101909-8]\
    \ ETSI TS 101 909-8: \"Access and Terminals (AT);\n                    Digital\
    \ Broadband Cable Access to the Public\n                    Telecommunications\
    \ Network; IP Multimedia Time\n                    Critical Services; Part 8:\
    \ Media Terminal Adaptor\n                    (MTA) Management Information Base\
    \ (MIB)\".\n   [EN300001]       EN 300 001 V1.5.1 (1998-10):\"European Standard\n\
    \                    (Telecommunications series) Attachments to Public\n     \
    \               Switched Telephone Network (PSTN); General technical\n       \
    \             requirements for equipment connected to an analogue\n          \
    \          subscriber interface in the PSTN\".\n   [EN300659-1]     EN 300 659-1:\
    \ \"Public Switched Telephone Network\n                    (PSTN); Subscriber\
    \ line protocol over the local loop\n                    for display (and related)\
    \ services; Part 1: On hook\n                    data transmission\".\n   [NCSSIGMIB]\
    \      Beacham G., Kumar S., Channabasappa S., \"Network\n                   \
    \ Control Signaling (NCS) Signaling MIB for\n                    PacketCable and\
    \ IPCablecom Multimedia Terminal\n                    Adapters (MTAs)\", Work\
    \ in Progress, June 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Eugene Nechamkin\n   Broadcom Corporation,\n   200 - 13711\
    \ International Place\n   Richmond, BC, V6V 2Z8\n   CANADA\n   Phone: +1 604 233\
    \ 8500\n   EMail: enechamkin@broadcom.com\n   Jean-Francois Mule\n   Cable Television\
    \ Laboratories, Inc.\n   858 Coal Creek Circle\n   Louisville, Colorado 80027-9750\n\
    \   U.S.A.\n   Phone: +1 303 661 9100\n   EMail: jf.mule@cablelabs.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
