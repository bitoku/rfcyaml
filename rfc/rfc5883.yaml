- title: __initial_text__
  contents:
  - '      Bidirectional Forwarding Detection (BFD) for Multihop Paths

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes the use of the Bidirectional Forwarding\n\
    \   Detection (BFD) protocol over multihop paths, including\n   unidirectional\
    \ links.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5883.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Bidirectional Forwarding Detection (BFD) protocol [BFD]\
    \ defines a\n   method for liveness detection of arbitrary paths between systems.\n\
    \   The BFD one-hop specification [BFD-1HOP] describes how to use BFD\n   across\
    \ single hops of IPv4 and IPv6.\n   BFD can also be useful on arbitrary paths\
    \ between systems, which may\n   span multiple network hops and follow unpredictable\
    \ paths.\n   Furthermore, a pair of systems may have multiple paths between them\n\
    \   that may overlap.  This document describes methods for using BFD in\n   such\
    \ scenarios.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [KEYWORDS].\n"
- title: 2.  Applicability
  contents:
  - "2.  Applicability\n   Please note that BFD is intended as an Operations, Administration,\n\
    \   and Maintenance (OAM) mechanism for connectivity check and connection\n  \
    \ verification.  It is applicable for network-based services (e.g.\n   router-to-router,\
    \ subscriber-to-gateway, LSP/circuit endpoints, and\n   service appliance failure\
    \ detection).  In these scenarios it is\n   required that the operator correctly\
    \ provision the rates at which BFD\n   is transmitted to avoid congestion (e.g\
    \ link, I/O, CPU) and false\n   failure detection.  It is not applicable for application-to-\n\
    \   application failure detection across the Internet because it does not\n  \
    \ have sufficient capability to do necessary congestion detection and\n   avoidance\
    \ and therefore cannot prevent congestion collapse.  Host-to-\n   host or application-to-application\
    \ deployment across the Internet\n   will require the encapsulation of BFD within\
    \ a transport that\n   provides \"TCP-friendly\" [TFRC] behavior.\n"
- title: 3.  Issues
  contents:
  - "3.  Issues\n   There are three primary issues in the use of BFD for multihop\
    \ paths.\n   The first is security and spoofing; [BFD-1HOP] describes a\n   lightweight\
    \ method of avoiding spoofing by requiring a Time to Live\n   (TTL)/Hop Limit\
    \ of 255 on both transmit and receive, but this\n   obviously does not work across\
    \ multiple hops.  The utilization of BFD\n   authentication addresses this issue.\n\
    \   The second, more subtle, issue is that of demultiplexing multiple BFD\n  \
    \ sessions between the same pair of systems to the proper BFD session.\n   In\
    \ particular, the first BFD packet received for a session may carry\n   a Your\
    \ Discriminator value of zero, resulting in ambiguity as to\n   which session\
    \ the packet should be associated.  Once the\n   discriminator values have been\
    \ exchanged, all further packets are\n   demultiplexed to the proper BFD session\
    \ solely by the contents of the\n   Your Discriminator field.\n   [BFD-1HOP] addresses\
    \ this by requiring that multiple sessions\n   traverse independent physical or\
    \ logical links -- the first packet is\n   demultiplexed based on the link over\
    \ which it was received.  In the\n   more general case, this scheme cannot work,\
    \ as two paths over which\n   BFD is running may overlap to an arbitrary degree\
    \ (including the\n   first and/or last hop).\n   Finally, the Echo function MUST\
    \ NOT be used over multiple hops.\n   Intermediate hops would route the packets\
    \ back to the sender, and\n   connectivity through the entire path would not be\
    \ possible to verify.\n"
- title: 4.  Demultiplexing Packets
  contents:
  - "4.  Demultiplexing Packets\n   There are a number of possibilities for addressing\
    \ the demultiplexing\n   issue that may be used, depending on the application.\n"
- title: 4.1.  Totally Arbitrary Paths
  contents:
  - "4.1.  Totally Arbitrary Paths\n   It may be desired to use BFD for liveness detection\
    \ over paths for\n   which no part of the route is known (or if known, may not\
    \ be stable).\n   A straightforward approach to this problem is to limit BFD deployment\n\
    \   to a single session between a source/destination address pair.\n   Multiple\
    \ sessions between the same pair of systems must have at least\n   one endpoint\
    \ address distinct from one another.\n   In this scenario, the initial packet\
    \ is demultiplexed to the\n   appropriate BFD session based on the source/destination\
    \ address pair\n   when Your Discriminator is set to zero.\n   This approach is\
    \ appropriate for general connectivity detection\n   between systems over routed\
    \ paths and is also useful for OSPF Virtual\n   Links [OSPFv2] [OSPFv3].\n"
- title: 4.2.  Out-of-Band Discriminator Signaling
  contents:
  - "4.2.  Out-of-Band Discriminator Signaling\n   Another approach to the demultiplexing\
    \ problem is to signal the\n   discriminator values in each direction through\
    \ an out-of-band\n   mechanism prior to establishing the BFD session.  Once learned,\
    \ the\n   discriminators are sent as usual in the BFD Control packets;  no\n \
    \  packets with Your Discriminator set to zero are ever sent.  This\n   method\
    \ is used by the BFD MPLS specification [BFD-MPLS].\n   This approach is advantageous\
    \ because it allows BFD to be directed by\n   other system components that have\
    \ knowledge of the paths in use, and\n   from the perspective of BFD implementation\
    \ it is very simple.\n   The disadvantage is that it requires at least some level\
    \ of BFD-\n   specific knowledge in parts of the system outside of BFD.\n"
- title: 4.3.  Unidirectional Links
  contents:
  - "4.3.  Unidirectional Links\n   Unidirectional links are classified as multihop\
    \ paths because the\n   return path (which should exist at some level in order\
    \ to make the\n   link useful) may be arbitrary, and the return paths for BFD\
    \ sessions\n   protecting parallel unidirectional links may overlap or even be\n\
    \   identical.  (If two unidirectional links, one in each direction, are\n   to\
    \ carry a single BFD session, this can be done using the single-hop\n   approach.)\n\
    \   Either of the two methods outlined earlier may be used in the\n   unidirectional\
    \ link case, but a more general solution can be found\n   strictly within BFD\
    \ and without addressing limitations.\n   The approach is similar to the one-hop\
    \ specification, since the\n   unidirectional link is a single hop.  Let's define\
    \ the two systems as\n   the Unidirectional Sender and the Unidirectional Receiver.\
    \  In this\n   approach, the Unidirectional Sender MUST operate in the Active\
    \ role\n   (as defined in the base BFD specification), and the Unidirectional\n\
    \   Receiver MUST operate in the Passive role.\n   In the Passive role, by definition,\
    \ the Unidirectional Receiver does\n   not transmit any BFD Control packets until\
    \ it learns the\n   discriminator value in use by the other system (upon receipt\
    \ of the\n   first BFD Control packet).  The Unidirectional Receiver demultiplexes\n\
    \   the first packet to the proper BFD session based on the physical or\n   logical\
    \ link over which it was received.  This allows the receiver to\n   learn the\
    \ remote discriminator value, which it then echoes back to\n   the sender in its\
    \ own (arbitrarily routed) BFD Control packet, after\n   which time all packets\
    \ are demultiplexed solely by discriminator.\n"
- title: 5.  Encapsulation
  contents:
  - "5.  Encapsulation\n   The encapsulation of BFD Control packets for multihop application\
    \ in\n   IPv4 and IPv6 is identical to that defined in [BFD-1HOP], except that\n\
    \   the UDP destination port MUST have a value of 4784.  This can aid in\n   the\
    \ demultiplexing and internal routing of incoming BFD packets.\n"
- title: 6.  Authentication
  contents:
  - "6.  Authentication\n   By their nature, multihop paths expose BFD to spoofing.\
    \  As the\n   number of hops increases, the exposure to attack grows.  As such,\n\
    \   implementations of BFD SHOULD utilize cryptographic authentication\n   over\
    \ multihop paths to help mitigate denial-of-service attacks.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   Port 4784 has been assigned by IANA for use with\
    \ BFD Multihop\n   Control.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   As the number of hops increases, BFD becomes\
    \ further exposed to\n   attack.  The use of strong forms of authentication is\
    \ strongly\n   encouraged.\n   No additional security issues are raised in this\
    \ document beyond\n   those that exist in the referenced BFD documents.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [BFD]      Katz, D. and D. Ward, \"Bidirectional\
    \ Forwarding\n              Detection\", RFC 5880, June 2010.\n   [BFD-1HOP] Katz,\
    \ D. and D. Ward, \"Bidirectional Forwarding Detection\n              (BFD) for\
    \ IPv4 and IPv6 (Single Hop)\", RFC 5881, June\n              2010.\n   [KEYWORDS]\
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [BFD-MPLS] Aggarwal, R., Kompella, K., Nadeau,\
    \ T., and G. Swallow,\n              \"Bidirectional Forwarding Detection (BFD)\
    \ for MPLS Label\n              Switched Paths (LSPs)\", RFC 5884, June 2010.\n\
    \   [OSPFv2]   Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n  \
    \ [OSPFv3]   Coltun, R., Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n      \
    \        for IPv6\", RFC 5340, July 2008.\n   [TFRC]     Floyd, S., Handley, M.,\
    \ Padhye, J., and J. Widmer, \"TCP\n              Friendly Rate Control (TFRC):\
    \ Protocol Specification\", RFC\n              5348, September 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dave Katz\n   Juniper Networks\n   1194 N. Mathilda Ave.\n\
    \   Sunnyvale, CA  94089-1206\n   USA\n   Phone: +1-408-745-2000\n   EMail: dkatz@juniper.net\n\
    \   Dave Ward\n   Juniper Networks\n   1194 N. Mathilda Ave.\n   Sunnyvale, CA\
    \  94089-1206\n   USA\n   Phone: +1-408-745-2000\n   EMail: dward@juniper.net\n"
