- contents:
  - '         The Secure Shell (SSH) Session Channel Break Extension

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The Session Channel Break Extension provides a means to send a BREAK\n
    \  signal over a Secure Shell (SSH) terminal session.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions Used in This Document ...............................2\n   3.
    The Break Request ...............................................3\n   4. Security
    Considerations .........................................4\n   5. IANA Considerations
    .............................................4\n   6. References ......................................................4\n
    \     6.1. Normative References .......................................4\n      6.2.
    Informative References .....................................5\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Secure Shell (SSH) [5] session channel provides a mechanism
    for\n   the client-user to interactively enter commands and receive output\n   from
    a remote host while taking advantage of the SSH transport's\n   privacy and integrity
    features.  SSH is increasingly being used to\n   replace Telnet for terminal access
    applications.\n   A common application of the Telnet protocol is the \"Console
    Server\"\n   [7] whereby a Telnet Network Virtual Terminal (NVT) can be connected\n
    \  to a physical RS-232/V.24 asynchronous port, making the Telnet NVT\n   appear
    as a locally attached terminal to that port, and making that\n   physical port
    appear as a network-addressable device.  A number of\n   major computer equipment
    vendors provide high-level administrative\n   functions through an asynchronous
    serial port and generally expect\n   the attached terminal to be capable of sending
    a BREAK signal.\n   A BREAK signal is defined as the TxD signal being held in
    a SPACE\n   (\"0\") state for a time greater than a whole character time.  In\n
    \  practice, a BREAK signal is typically 250 to 500 ms in length.\n   The Telnet
    protocol furnishes a means to send a \"BREAK\" signal, which\n   RFC 854 [1] defines
    as \"a signal outside the USASCII set which is\n   currently given local meaning
    within many systems\".  Console Server\n   vendors interpret the TELNET BREAK
    signal as a physical BREAK signal,\n   which can then allow access to the full
    range of administrative\n   functions available on an asynchronous serial console
    port.\n   The lack of a similar facility in the SSH session channel has forced\n
    \  users to continue the use of Telnet for the \"Console Server\"\n   function.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [2].\n   The \"byte\", \"boolean\", \"uint32\", and \"string\" data types are
    defined\n   in [3].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  The Break Request\n   The following channel-specific request can be sent
    over a session\n   channel (as described in [4]) to request that the remote host
    perform\n   a BREAK operation.\n        byte      SSH_MSG_CHANNEL_REQUEST\n        uint32
    \   recipient channel\n        string    \"break\"\n        boolean   want_reply\n
    \       uint32    break-length in milliseconds\n   If the BREAK length cannot
    be controlled by the application receiving\n   this request, the BREAK length
    parameter SHOULD be ignored and the\n   default BREAK signal length of the chipset
    or underlying chipset\n   driver SHOULD be sent.\n   If the application receiving
    this request can control the BREAK\n   length, the following suggestions are made
    regarding BREAK duration.\n   If a BREAK duration request of greater than 3000
    ms is received, it\n   SHOULD be interpreted as a request for a 3000 ms BREAK.
    \ This\n   safeguard prevents an unreasonably long BREAK request from causing
    a\n   port to become unavailable for as long as 49.7 days while executing\n   the
    BREAK.  Applications that require a longer BREAK may choose to\n   ignore this
    suggestion.  If BREAK duration request of less than 500\n   ms is received, it
    SHOULD be interpreted as a 500 ms BREAK since most\n   devices will recognize
    a BREAK of that length.  Applications that\n   require a shorter BREAK may choose
    to ignore this suggestion.  If the\n   BREAK length parameter is 0, the BREAK
    SHOULD be interpreted as the\n   default BREAK signal length of the chipset or
    underlying chipset\n   driver.  If no default exists, 500 ms can be used as the
    BREAK\n   length.\n   If the SSH connection does not terminate on a physical serial
    port,\n   the BREAK indication SHOULD be handled in a manner consistent with\n
    \  the general use of BREAK as an attention/interrupt signal; for\n   instance,
    a service processor that requires an out-of-band facility\n   to get the attention
    of a system it manages.\n   In a case where an SSH connection cascades to another
    connection, the\n   BREAK SHOULD be passed along the cascaded connection.  For
    example, a\n   Telnet session from an SSH shell should carry along an SSH-initiated\n
    \  BREAK, and an SSH client initiated from a Telnet connection SHOULD\n   pass
    a BREAK indication from the Telnet connection.\n   If the 'want_reply' boolean
    is set, the server MUST reply using an\n   SSH_MSG_CHANNEL_SUCCESS or SSH_MSG_CHANNEL_FAILURE
    [5] message.  If a\n   BREAK of any kind was preformed, SSH_MSG_CHANNEL_SUCCESS
    MUST be\n   sent.  If no BREAK was preformed, SSH_MSG_CHANNEL_FAILURE MUST be\n
    \  sent.\n   This operation SHOULD be supported by any general purpose SSH client.\n"
  title: 3.  The Break Request
- contents:
  - "4.  Security Considerations\n   Many computer systems treat serial consoles as
    local and secured, and\n   interpret a BREAK signal as an instruction to halt
    execution of the\n   operating system or to enter privileged configuration modes.
    \ Because\n   of this, extra care should be taken to ensure that SSH access to\n
    \  BREAK-enabled ports are limited to users with appropriate privileges\n   to
    execute such functions.  Alternatively, support for the BREAK\n   facility MAY
    be implemented as configurable on a per-port or\n   per-server basis.\n   Implementations
    that literally interpret the BREAK length parameter\n   without imposing the suggested
    BREAK time limit may cause a denial of\n   service to or unexpected results from
    attached devices receiving the\n   very long BREAK signal.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   IANA has assigned the Connection Protocol Channel
    Request Name\n   \"break\" in accordance with [6].\n"
  title: 5.  IANA Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [1]  Postel, J. and J. Reynolds, \"Telnet Protocol
      Specification\",\n        STD 8, RFC 854, May 1983.\n   [2]  Bradner, S., \"Key
      words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC
      2119, March 1997.\n   [3]  Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell
      (SSH) Protocol\n        Architecture\", RFC 4251, January 2006.\n   [4]  Ylonen,
      T. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n        Transport Layer Protocol\",
      RFC 4253, January 2006.\n   [5]  Ylonen, T. and C. Lonvick, Ed., \"The Secure
      Shell (SSH)\n        Connection Protocol\", RFC 4254, January 2006.\n   [6]
      \ Lehtinen, S. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n        Protocol
      Assigned Numbers\", RFC 4250, January 2006.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [7]  Harris, D., \"Greater Scroll of Console
      Knowledge\", March 2004,\n        <http://www.conserver.com/consoles/>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Authors' Addresses\n   Joseph Galbraith\n   VanDyke Software\n   4848 Tramway
    Ridge Blvd\n   Suite 101\n   Albuquerque, NM  87111\n   US\n   Phone: +1 505 332
    5700\n   EMail: galb-list@vandyke.com\n   Phillip Remaker\n   Cisco Systems, Inc\n
    \  170 West Tasman Drive\n   San Jose, CA  95120\n   US\n   Phone: +1 408 526
    8614\n   EMail: remaker@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
