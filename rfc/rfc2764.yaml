- title: __initial_text__
  contents:
  - '           A Framework for IP Based Virtual Private Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document is not the product of an IETF Working Group.  The\
    \ IETF\n   currently has no effort underway to standardize a specific VPN\n  \
    \ framework.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a framework for Virtual Private Networks\n\
    \   (VPNs) running across IP backbones.  It discusses the various\n   different\
    \ types of VPNs, their respective requirements, and proposes\n   specific mechanisms\
    \ that could be used to implement each type of VPN\n   using existing or proposed\
    \ specifications.  The objective of this\n   document is to serve as a framework\
    \ for related protocol development\n   in order to develop the full set of specifications\
    \ required for\n   widespread deployment of interoperable VPN solutions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.0 Introduction ................................................\
    \  4\n   2.0 VPN Application and Implementation Requirements .............  5\n\
    \   2.1 General VPN Requirements ....................................  5\n   2.1.1\
    \ Opaque Packet Transport:  .................................  6\n   2.1.2 Data\
    \ Security .............................................  7\n   2.1.3 Quality\
    \ of Service Guarantees .............................  7\n   2.1.4 Tunneling Mechanism\
    \ .......................................  8\n   2.2 CPE and Network Based VPNs\
    \ ..................................  8\n   2.3 VPNs and Extranets ..........................................\
    \  9\n   3.0 VPN Tunneling ............................................... 10\n\
    \   3.1 Tunneling Protocol Requirements for VPNs .................... 11\n   3.1.1\
    \ Multiplexing .............................................. 11\n   3.1.2 Signalling\
    \ Protocol ....................................... 12\n   3.1.3 Data Security\
    \ ............................................. 13\n   3.1.4 Multiprotocol Transport\
    \ ................................... 14\n   3.1.5 Frame Sequencing ..........................................\
    \ 14\n   3.1.6 Tunnel Maintenance ........................................ 15\n\
    \   3.1.7 Large MTUs ................................................ 16\n   3.1.8\
    \ Minimization of Tunnel Overhead ........................... 16\n   3.1.9 Flow\
    \ and congestion control ............................... 17\n   3.1.10 QoS / Traffic\
    \ Management ................................. 17\n   3.2 Recommendations .............................................\
    \ 18\n   4.0 VPN Types:  Virtual Leased Lines ............................ 18\n\
    \   5.0 VPN Types:  Virtual Private Routed Networks ................. 20\n   5.1\
    \ VPRN Characteristics ........................................ 20\n   5.1.1 Topology\
    \ .................................................. 23\n   5.1.2 Addressing ................................................\
    \ 24\n   5.1.3 Forwarding ................................................ 24\n\
    \   5.1.4 Multiple concurrent VPRN connectivity ..................... 24\n   5.2\
    \ VPRN Related Work ........................................... 24\n   5.3 VPRN\
    \ Generic Requirements ................................... 25\n   5.3.1 VPN Identifier\
    \ ............................................ 26\n   5.3.2 VPN Membership Information\
    \ Configuration .................. 27\n   5.3.2.1 Directory Lookup ........................................\
    \ 27\n   5.3.2.2 Explicit Management Configuration ....................... 28\n\
    \   5.3.2.3 Piggybacking in Routing Protocols ....................... 28\n   5.3.3\
    \ Stub Link Reachability Information ........................ 30\n   5.3.3.1 Stub\
    \ Link Connectivity Scenarios ........................ 30\n   5.3.3.1.1 Dual VPRN\
    \ and Internet Connectivity ................... 30\n   5.3.3.1.2 VPRN Connectivity\
    \ Only ................................ 30\n   5.3.3.1.3 Multihomed Connectivity\
    \ ............................... 31\n   5.3.3.1.4 Backdoor Links ........................................\
    \ 31\n   5.3.3.1 Routing Protocol Instance ............................... 31\n\
    \   5.3.3.2 Configuration ........................................... 33\n   5.3.3.3\
    \ ISP Administered Addresses .............................. 33\n   5.3.3.4 MPLS\
    \ Label Distribution Protocol ........................ 33\n   5.3.4 Intra-VPN\
    \ Reachability Information ........................ 34\n   5.3.4.1 Directory Lookup\
    \ ........................................ 34\n   5.3.4.2 Explicit Configuration\
    \ .................................. 34\n   5.3.4.3 Local Intra-VPRN Routing Instantiations\
    \ ................. 34\n   5.3.4.4 Link Reachability Protocol ..............................\
    \ 35\n   5.3.4.5 Piggybacking in IP Backbone Routing Protocols ........... 36\n\
    \   5.3.5 Tunneling Mechanisms ...................................... 36\n   5.4\
    \ Multihomed Stub Routers ..................................... 37\n   5.5 Multicast\
    \ Support ........................................... 38\n   5.5.1 Edge Replication\
    \ .......................................... 38\n   5.5.2 Native Multicast Support\
    \ .................................. 39\n   5.6 Recommendations .............................................\
    \ 40\n   6.0 VPN Types:  Virtual Private Dial Networks ................... 41\n\
    \   6.1 L2TP protocol characteristics ............................... 41\n   6.1.1\
    \ Multiplexing .............................................. 41\n   6.1.2 Signalling\
    \ ................................................ 42\n   6.1.3 Data Security\
    \ ............................................. 42\n   6.1.4 Multiprotocol Transport\
    \ ................................... 42\n   6.1.5 Sequencing ................................................\
    \ 42\n   6.1.6 Tunnel Maintenance ........................................ 43\n\
    \   6.1.7 Large MTUs ................................................ 43\n   6.1.8\
    \ Tunnel Overhead ........................................... 43\n   6.1.9 Flow\
    \ and Congestion Control ............................... 43\n   6.1.10 QoS / Traffic\
    \ Management ................................. 43\n   6.1.11 Miscellaneous ............................................\
    \ 44\n   6.2 Compulsory Tunneling ........................................ 44\n\
    \   6.3 Voluntary Tunnels ........................................... 46\n   6.3.1\
    \ Issues with Use of L2TP for Voluntary Tunnels ............. 46\n   6.3.2 Issues\
    \ with Use of IPSec for Voluntary Tunnels ............ 48\n   6.4 Networked Host\
    \ Support ...................................... 49\n   6.4.1 Extension of PPP\
    \ to Hosts Through L2TP .................... 49\n   6.4.2 Extension of PPP Directly\
    \ to Hosts:  ...................... 49\n   6.4.3 Use of IPSec ..............................................\
    \ 50\n   6.5 Recommendations ............................................. 50\n\
    \   7.0 VPN Types:  Virtual Private LAN Segment ..................... 50\n   7.1\
    \ VPLS Requirements ........................................... 51\n   7.1.1 Tunneling\
    \ Protocols ....................................... 51\n   7.1.2 Multicast and\
    \ Broadcast Support ........................... 52\n   7.1.3 VPLS Membership Configuration\
    \ and Topology ................ 52\n   7.1.4 CPE Stub Node Types .......................................\
    \ 52\n   7.1.5 Stub Link Packet Encapsulation ............................ 53\n\
    \   7.1.5.1 Bridge CPE .............................................. 53\n   7.1.5.2\
    \ Router CPE .............................................. 53\n   7.1.6 CPE Addressing\
    \ and Address Resolution ..................... 53\n   7.1.6.1 Bridge CPE ..............................................\
    \ 53\n   7.1.6.2 Router CPE .............................................. 54\n\
    \   7.1.7 VPLS Edge Node Forwarding and Reachability Mechanisms ..... 54\n   7.1.7.1\
    \ Bridge CPE .............................................. 54\n   7.1.7.2 Router\
    \ CPE .............................................. 54\n   7.2 Recommendations\
    \ ............................................. 55\n   8.0 Summary of Recommendations\
    \ .................................. 55\n   9.0 Security Considerations .....................................\
    \ 56\n   10.0 Acknowledgements ........................................... 56\n\
    \   11.0 References ................................................. 56\n   12.0\
    \ Author Information ......................................... 61\n   13.0 Full\
    \ Copyright Statement ................................... 62\n"
- title: 1.0  Introduction
  contents:
  - "1.0  Introduction\n   This document describes a framework for Virtual Private\
    \ Networks\n   (VPNs) running across IP backbones.  It discusses the various\n\
    \   different types of VPNs, their respective requirements, and proposes\n   specific\
    \ mechanisms that could be used to implement each type of VPN\n   using existing\
    \ or proposed specifications.  The objective of this\n   document is to serve\
    \ as a framework for related protocol development\n   in order to develop the\
    \ full set of specifications required for\n   widespread deployment of interoperable\
    \ VPN solutions.\n   There is currently significant interest in the deployment\
    \ of virtual\n   private networks across IP backbone facilities.  The widespread\n\
    \   deployment of VPNs has been hampered, however, by the lack of\n   interoperable\
    \ implementations, which, in turn, derives from the lack\n   of general agreement\
    \ on the definition and scope of VPNs and\n   confusion over the wide variety\
    \ of solutions that are all described\n   by the term VPN.  In the context of\
    \ this document, a VPN is simply\n   defined as the 'emulation of a private Wide\
    \ Area Network (WAN)\n   facility using IP facilities' (including the public Internet,\
    \ or\n   private IP backbones).  As such, there are as many types of VPNs as\n\
    \   there are types of WANs, hence the confusion over what exactly\n   constitutes\
    \ a VPN.\n   In this document a VPN is modeled as a connectivity object.  Hosts\n\
    \   may be attached to a VPN, and VPNs may be interconnected together, in\n  \
    \ the same manner as hosts today attach to physical networks, and\n   physical\
    \ networks are interconnected together (e.g., via bridges or\n   routers).  Many\
    \ aspects of networking, such as addressing, forwarding\n   mechanism, learning\
    \ and advertising reachability, quality of service\n   (QoS), security, and firewalling,\
    \ have common solutions across both\n   physical and virtual networks, and many\
    \ issues that arise in the\n   discussion of VPNs have direct analogues with those\
    \ issues as\n   implemented in physical networks.  The introduction of VPNs does\
    \ not\n   create the need to reinvent networking, or to introduce entirely new\n\
    \   paradigms that have no direct analogue with existing physical\n   networks.\
    \  Instead it is often useful to first examine how a\n   particular issue is handled\
    \ in a physical network environment, and\n   then apply the same principle to\
    \ an environment which contains\n   virtual as well as physical networks, and\
    \ to develop appropriate\n   extensions and enhancements when necessary.  Clearly\
    \ having\n   mechanisms that are common across both physical and virtual networks\n\
    \   facilitates the introduction of VPNs into existing networks, and also\n  \
    \ reduces the effort needed for both standards and product development,\n   since\
    \ existing solutions can be leveraged.\n   This framework document proposes a\
    \ taxonomy of a specific set of VPN\n   types, showing the specific applications\
    \ of each, their specific\n   requirements, and the specific types of mechanisms\
    \ that may be most\n   appropriate for their implementation.  The intent of this\
    \ document is\n   to serve as a framework to guide a coherent discussion of the\n\
    \   specific modifications that may be needed to existing IP mechanisms\n   in\
    \ order to develop a full range of interoperable VPN solutions.\n   The document\
    \ first discusses the likely expectations customers have\n   of any type of VPN,\
    \ and the implications of these for the ways in\n   which VPNs can be implemented.\
    \  It also discusses the distinctions\n   between Customer Premises Equipment\
    \ (CPE) based solutions, and\n   network based solutions.  Thereafter it presents\
    \ a taxonomy of the\n   various VPN types and their respective requirements. \
    \ It also\n   outlines suggested approaches to their implementation, hence also\n\
    \   pointing to areas for future standardization.\n   Note also that this document\
    \ only discusses implementations of VPNs\n   across IP backbones, be they private\
    \ IP networks, or the public\n   Internet.  The models and mechanisms described\
    \ here are intended to\n   apply to both IPV4 and IPV6 backbones.  This document\
    \ specifically\n   does not discuss means of constructing VPNs using native mappings\n\
    \   onto switched backbones - e.g., VPNs constructed using the LAN\n   Emulation\
    \ over ATM (LANE) [1] or Multiprotocol over ATM (MPOA) [2]\n   protocols operating\
    \ over ATM backbones.  Where IP backbones are\n   constructed using such protocols,\
    \ by interconnecting routers over the\n   switched backbone, the VPNs discussed\
    \ operate on top of this IP\n   network, and hence do not directly utilize the\
    \ native mechanisms of\n   the underlying backbone.  Native VPNs are restricted\
    \ to the scope of\n   the underlying backbone, whereas IP based VPNs can extend\
    \ to the\n   extent of IP reachability.  Native VPN protocols are clearly outside\n\
    \   the scope of the IETF, and may be tackled by such bodies as the ATM\n   Forum.\n"
- title: 2.0  VPN Application and Implementation Requirements
  contents:
  - '2.0  VPN Application and Implementation Requirements

    '
- title: 2.1  General VPN Requirements
  contents:
  - "2.1  General VPN Requirements\n   There is growing interest in the use of IP\
    \ VPNs as a more cost\n   effective means of building and deploying private communication\n\
    \   networks for multi-site communication than with existing approaches.\n   Existing\
    \ private networks can be generally categorized into two types\n   - dedicated\
    \ WANs that permanently connect together multiple sites,\n   and dial networks,\
    \ that allow on-demand connections through the\n   Public Switched Telephone Network\
    \ (PSTN) to one or more sites in the\n   private network.\n   WANs are typically\
    \ implemented using leased lines or dedicated\n   circuits - for instance, Frame\
    \ Relay or ATM connections - between the\n   multiple sites.  CPE routers or switches\
    \ at the various sites connect\n   these dedicated facilities together and allow\
    \ for connectivity across\n   the network.  Given the cost and complexity of such\
    \ dedicated\n   facilities and the complexity of CPE device configuration, such\n\
    \   networks are generally not fully meshed, but instead have some form\n   of\
    \ hierarchical topology.  For example remote offices could be\n   connected directly\
    \ to the nearest regional office, with the regional\n   offices connected together\
    \ in some form of full or partial mesh.\n   Private dial networks are used to\
    \ allow remote users to connect into\n   an enterprise network using PSTN or Integrated\
    \ Services Digital\n   Network (ISDN) links.  Typically, this is done through\
    \ the deployment\n   of Network Access Servers (NASs) at one or more central sites.\
    \  Users\n   dial into such NASs, which interact with Authentication,\n   Authorization,\
    \ and Accounting (AAA) servers to verify the identity of\n   the user, and the\
    \ set of services that the user is authorized to\n   receive.\n   In recent times,\
    \ as more businesses have found the need for high\n   speed Internet connections\
    \ to their private corporate networks, there\n   has been significant interest\
    \ in the deployment of CPE based VPNs\n   running across the Internet.  This has\
    \ been driven typically by the\n   ubiquity and distance insensitive pricing of\
    \ current Internet\n   services, that can result in significantly lower costs\
    \ than typical\n   dedicated or leased line services.\n   The notion of using\
    \ the Internet for private communications is not\n   new, and many techniques,\
    \ such as controlled route leaking, have been\n   used for this purpose [3]. \
    \ Only in recent times, however, have the\n   appropriate IP mechanisms needed\
    \ to meet customer requirements for\n   VPNs all come together.  These requirements\
    \ include the following:\n"
- title: '2.1.1 Opaque Packet Transport:'
  contents:
  - "2.1.1 Opaque Packet Transport:\n   The traffic carried within a VPN may have\
    \ no relation to the traffic\n   on the IP backbone, either because the traffic\
    \ is multiprotocol, or\n   because the customer's IP network may use IP addressing\
    \ unrelated to\n   that of the IP backbone on which the traffic is transported.\
    \  In\n   particular, the customer's IP network may use non-unique, private IP\n\
    \   addressing [4].\n"
- title: 2.1.2 Data Security
  contents:
  - "2.1.2 Data Security\n   In general customers using VPNs require some form of\
    \ data security.\n   There are different trust models applicable to the use of\
    \ VPNs.  One\n   such model is where the customer does not trust the service provider\n\
    \   to provide any form of security, and instead implements a VPN using\n   CPE\
    \ devices that implement firewall functionality and that are\n   connected together\
    \ using secure tunnels.  In this case the service\n   provider is used solely\
    \ for IP packet transport.\n   An alternative model is where the customer trusts\
    \ the service\n   provider to provide a secure managed VPN service.  This is similar\
    \ to\n   the trust involved when a customer utilizes a public switched Frame\n\
    \   Relay or ATM service, in that the customer trusts that packets will\n   not\
    \ be misdirected, injected into the network in an unauthorized\n   manner, snooped\
    \ on, modified in transit, or subjected to traffic\n   analysis by unauthorized\
    \ parties.\n   With this model providing firewall functionality and secure packet\n\
    \   transport services is the responsibility of the service provider.\n   Different\
    \ levels of security may be needed within the provider\n   backbone, depending\
    \ on the deployment scenario used.  If the VPN\n   traffic is contained within\
    \ a single provider's IP backbone then\n   strong security mechanisms, such as\
    \ those provided by the IP Security\n   protocol suite (IPSec) [5], may not be\
    \ necessary for tunnels between\n   backbone nodes.  If the VPN traffic traverses\
    \ networks or equipment\n   owned by multiple administrations then strong security\
    \ mechanisms may\n   be appropriate.  Also a strong level of security may be applied\
    \ by a\n   provider to customer traffic to address a customer perception that\
    \ IP\n   networks, and particularly the Internet, are insecure.  Whether or\n\
    \   not this perception is correct it is one that must be addressed by\n   the\
    \ VPN implementation.\n"
- title: 2.1.3 Quality of Service Guarantees
  contents:
  - "2.1.3 Quality of Service Guarantees\n   In addition to ensuring communication\
    \ privacy, existing private\n   networking techniques, building upon physical\
    \ or link layer\n   mechanisms, also offer various types of quality of service\n\
    \   guarantees.  In particular, leased and dial up lines offer both\n   bandwidth\
    \ and latency guarantees, while dedicated connection\n   technologies like ATM\
    \ and Frame Relay have extensive mechanisms for\n   similar guarantees.  As IP\
    \ based VPNs become more widely deployed,\n   there will be market demand for\
    \ similar guarantees, in order to\n   ensure end to end application transparency.\
    \  While the ability of IP\n   based VPNs to offer such guarantees will depend\
    \ greatly upon the\n   commensurate capabilities of the underlying IP backbones,\
    \ a VPN\n   framework must also address the means by which VPN systems can\n \
    \  utilize such capabilities, as they evolve.\n"
- title: 2.1.4 Tunneling Mechanism
  contents:
  - "2.1.4 Tunneling Mechanism\n   Together, the first two of the requirements listed\
    \ above imply that\n   VPNs must be implemented through some form of IP tunneling\
    \ mechanism,\n   where the packet formats and/or the addressing used within the\
    \ VPN\n   can be unrelated to that used to route the tunneled packets across\n\
    \   the IP backbone.  Such tunnels, depending upon their form, can\n   provide\
    \ some level of intrinsic data security, or this can also be\n   enhanced using\
    \ other mechanisms (e.g., IPSec).\n   Furthermore, as discussed later, such tunneling\
    \ mechanisms can also\n   be mapped into evolving IP traffic management mechanisms.\
    \  There are\n   already defined a large number of IP tunneling mechanisms.  Some\
    \ of\n   these are well suited to VPN applications, as discussed in section\n\
    \   3.0.\n"
- title: 2.2  CPE and Network Based VPNs
  contents:
  - "2.2  CPE and Network Based VPNs\n   Most current VPN implementations are based\
    \ on CPE equipment.  VPN\n   capabilities are being integrated into a wide variety\
    \ of CPE devices,\n   ranging from firewalls to WAN edge routers and specialized\
    \ VPN\n   termination devices.  Such equipment may be bought and deployed by\n\
    \   customers, or may be deployed (and often remotely managed) by service\n  \
    \ providers in an outsourcing service.\n   There is also significant interest\
    \ in 'network based VPNs', where the\n   operation of the VPN is outsourced to\
    \ an Internet Service Provider\n   (ISP), and is implemented on network as opposed\
    \ to CPE equipment.\n   There is significant interest in such solutions both by\
    \ customers\n   seeking to reduce support costs and by ISPs seeking new revenue\n\
    \   sources.  Supporting VPNs in the network allows the use of particular\n  \
    \ mechanisms which may lead to highly efficient and cost effective VPN\n   solutions,\
    \ with common equipment and operations support amortized\n   across large numbers\
    \ of customers.\n   Most of the mechanisms discussed below can apply to either\
    \ CPE based\n   or network based VPNs.  However particular mechanisms are likely\
    \ to\n   prove applicable only to the latter, since they leverage tools (e.g.,\n\
    \   piggybacking on routing protocols) which are accessible only to ISPs\n   and\
    \ which are unlikely to be made available to any customer, or even\n   hosted\
    \ on ISP owned and operated CPE, due to the problems of\n   coordinating joint\
    \ management of the CPE gear by both the ISP and the\n   customer.  This document\
    \ will indicate which techniques are likely to\n   apply only to network based\
    \ VPNs.\n"
- title: 2.3  VPNs and Extranets
  contents:
  - "2.3  VPNs and Extranets\n   The term 'extranet' is commonly used to refer to\
    \ a scenario whereby\n   two or more companies have networked access to a limited\
    \ amount of\n   each other's corporate data.  For example a manufacturing company\n\
    \   might use an extranet for its suppliers to allow it to query\n   databases\
    \ for the pricing and availability of components, and then to\n   order and track\
    \ the status of outstanding orders.  Another example is\n   joint software development,\
    \ for instance, company A allows one\n   development group within company B to\
    \ access its operating system\n   source code, and company B allows one development\
    \ group in company A\n   to access its security software.  Note that the access\
    \ policies can\n   get arbitrarily complex.  For example company B may internally\n\
    \   restrict access to its security software to groups in certain\n   geographic\
    \ locations to comply with export control laws, for example.\n   A key feature\
    \ of an extranet is thus the control of who can access\n   what data, and this\
    \ is essentially a policy decision.  Policy\n   decisions are typically enforced\
    \ today at the interconnection points\n   between different domains, for example\
    \ between a private network and\n   the Internet, or between a software test lab\
    \ and the rest of the\n   company network.  The enforcement may be done via a\
    \ firewall, router\n   with access list functionality, application gateway, or\
    \ any similar\n   device capable of applying policy to transit traffic.  Policy\n\
    \   controls may be implemented within a corporate network, in addition\n   to\
    \ between corporate networks.  Also the interconnections between\n   networks\
    \ could be a set of bilateral links, or could be a separate\n   network, perhaps\
    \ maintained by an industry consortium.  This separate\n   network could itself\
    \ be a VPN or a physical network.\n   Introducing VPNs into a network does not\
    \ require any change to this\n   model.  Policy can be enforced between two VPNs,\
    \ or between a VPN and\n   the Internet, in exactly the same manner as is done\
    \ today without\n   VPNs.  For example two VPNs could be interconnected, which\
    \ each\n   administration locally imposing its own policy controls, via a\n  \
    \ firewall, on all traffic that enters its VPN from the outside,\n   whether from\
    \ another VPN or from the Internet.\n   This model of a VPN provides for a separation\
    \ of policy from the\n   underlying mode of packet transport used.  For example,\
    \ a router may\n   direct voice traffic to ATM Virtual Channel Connections (VCCs)\
    \ for\n   guaranteed QoS, non-local internal company traffic to secure tunnels,\n\
    \   and other traffic to a link to the Internet.  In the past the secure\n   tunnels\
    \ may have been frame relay circuits, now they may also be\n   secure IP tunnels\
    \ or MPLS Label Switched Paths (LSPs)\n   Other models of a VPN are also possible.\
    \  For example there is a\n   model whereby a set of application flows is mapped\
    \ into a VPN.  As\n   the policy rules imposed by a network administrator can\
    \ get quite\n   complex, the number of distinct sets of application flows that\
    \ are\n   used in the policy rulebase, and hence the number of VPNs, can thus\n\
    \   grow quite large, and there can be multiple overlapping VPNs.\n   However\
    \ there is little to be gained by introducing such new\n   complexity into a network.\
    \  Instead a VPN should be viewed as a\n   direct analogue to a physical network,\
    \ as this allows the leveraging\n   of existing protocols and procedures, and\
    \ the current expertise and\n   skill sets of network administrators and customers.\n"
- title: 3.0  VPN Tunneling
  contents:
  - "3.0  VPN Tunneling\n   As noted above in section 2.1, VPNs must be implemented\
    \ using some\n   form of tunneling mechanism.  This section looks at the generic\n\
    \   requirements for such VPN tunneling mechanisms.  A number of\n   characteristics\
    \ and aspects common to any link layer protocol are\n   taken and compared with\
    \ the features offered by existing tunneling\n   protocols.  This provides a basis\
    \ for comparing different protocols\n   and is also useful to highlight areas\
    \ where existing tunneling\n   protocols could benefit from extensions to better\
    \ support their\n   operation in a VPN environment.\n   An IP tunnel connecting\
    \ two VPN endpoints is a basic building block\n   from which a variety of different\
    \ VPN services can be constructed.\n   An IP tunnel operates as an overlay across\
    \ the IP backbone, and the\n   traffic sent through the tunnel is opaque to the\
    \ underlying IP\n   backbone.  In effect the IP backbone is being used as a link\
    \ layer\n   technology, and the tunnel forms a point-to-point link.\n   A VPN\
    \ device may terminate multiple IP tunnels and forward packets\n   between these\
    \ tunnels and other network interfaces in different ways.\n   In the discussion\
    \ of different types of VPNs, in later sections of\n   this document, the primary\
    \ distinguishing characteristic of these\n   different types is the manner in\
    \ which packets are forwarded between\n   interfaces (e.g., bridged or routed).\
    \  There is a direct analogy with\n   how existing networking devices are characterized\
    \ today.  A two-port\n   repeater just forwards packets between its ports, and\
    \ does not\n   examine the contents of the packet.  A bridge forwards packets\
    \ using\n   Media Access Control (MAC) layer information contained in the packet,\n\
    \   while a router forwards packets using layer 3 addressing information\n   contained\
    \ in the packet.  Each of these three scenarios has a direct\n   VPN analogue,\
    \ as discussed later.  Note that an IP tunnel is viewed\n   as just another sort\
    \ of link, which can be concatenated with another\n   link, bound to a bridge\
    \ forwarding table, or bound to an IP\n   forwarding table, depending on the type\
    \ of VPN.\n   The following sections look at the requirements for a generic IP\n\
    \   tunneling protocol that can be used as a basic building block to\n   construct\
    \ different types of VPNs.\n"
- title: 3.1  Tunneling Protocol Requirements for VPNs
  contents:
  - "3.1  Tunneling Protocol Requirements for VPNs\n   There are numerous IP tunneling\
    \ mechanisms, including IP/IP [6],\n   Generic Routing Encapsulation (GRE) tunnels\
    \ [7], Layer 2 Tunneling\n   Protocol (L2TP) [8], IPSec [5], and Multiprotocol\
    \ Label Switching\n   (MPLS) [9].  Note that while some of these protocols are\
    \ not often\n   thought of as tunneling protocols, they do each allow for opaque\n\
    \   transport of frames as packet payload across an IP network, with\n   forwarding\
    \ disjoint from the address fields of the encapsulated\n   packets.\n   Note,\
    \ however, that there is one significant distinction between each\n   of the IP\
    \ tunneling protocols mentioned above, and MPLS.  MPLS can be\n   viewed as a\
    \ specific link layer for IP, insofar as MPLS specific\n   mechanisms apply only\
    \ within the scope of an MPLS network, whereas IP\n   based mechanisms extend\
    \ to the extent of IP reachability.  As such,\n   VPN mechanisms built directly\
    \ upon MPLS tunneling mechanisms cannot,\n   by definition, extend outside the\
    \ scope of MPLS networks, any more so\n   than, for instance, ATM based mechanisms\
    \ such as LANE can extend\n   outside of ATM networks.  Note however, that an\
    \ MPLS network can span\n   many different link layer technologies, and so, like\
    \ an IP network,\n   its scope is not limited by the specific link layers used.\
    \  A number\n   of proposals for defining a set of mechanisms to allow for\n \
    \  interoperable VPNs specifically over MPLS networks have also been\n   produced\
    \ ([10] [11] [12] [13], [14] and [15]).\n   There are a number of desirable requirements\
    \ for a VPN tunneling\n   mechanism, however, that are not all met by the existing\
    \ tunneling\n   mechanisms.  These requirements include:\n"
- title: 3.1.1  Multiplexing
  contents:
  - "3.1.1  Multiplexing\n   There are cases where multiple VPN tunnels may be needed\
    \ between the\n   same two IP endpoints.  This may be needed, for instance, in\
    \ cases\n   where the VPNs are network based, and each end point supports\n  \
    \ multiple customers.  Traffic for different customers travels over\n   separate\
    \ tunnels between the same two physical devices.  A\n   multiplexing field is\
    \ needed to distinguish which packets belong to\n   which tunnel.  Sharing a tunnel\
    \ in this manner may also reduce the\n   latency and processing burden of tunnel\
    \ set up.  Of the existing IP\n   tunneling mechanisms, L2TP (via the tunnel-id\
    \ and session-id fields),\n   MPLS (via the label) and IPSec (via the Security\
    \ Parameter Index\n   (SPI) field) have a multiplexing mechanism.  Strictly speaking\
    \ GRE\n   does not have a multiplexing field.  However the key field, which was\n\
    \   intended to be used for authenticating the source of a packet, has\n   sometimes\
    \ been used as a multiplexing field.  IP/IP does not have a\n   multiplexing field.\n\
    \   The IETF [16] and the ATM Forum [17] have standardized on a single\n   format\
    \ for a globally unique identifier used to identify a VPN (a\n   VPN-ID).  A VPN-ID\
    \ can be used in the control plane, to bind a tunnel\n   to a VPN at tunnel establishment\
    \ time, or in the data plane, to\n   identify the VPN associated with a packet,\
    \ on a per-packet basis.  In\n   the data plane a VPN encapsulation header can\
    \ be used by MPLS, MPOA\n   and other tunneling mechanisms to aggregate packets\
    \ for different\n   VPNs over a single tunnel.  In this case an explicit indication\
    \ of\n   VPN-ID is included with every packet, and no use is made of any\n   tunnel\
    \ specific multiplexing field.  In the control plane a VPN-ID\n   field can be\
    \ included in any tunnel establishment signalling protocol\n   to allow for the\
    \ association of a tunnel (e.g., as identified by the\n   SPI field) with a VPN.\
    \  In this case there is no need for a VPN-ID to\n   be included with every data\
    \ packet.  This is discussed further in\n   section 5.3.1.\n"
- title: 3.1.2  Signalling Protocol
  contents:
  - "3.1.2  Signalling Protocol\n   There is some configuration information that must\
    \ be known by an end\n   point in advance of tunnel establishment, such as the\
    \ IP address of\n   the remote end point, and any relevant tunnel attributes required,\n\
    \   such as the level of security needed.  Once this information is\n   available,\
    \ the actual tunnel establishment can be completed in one of\n   two ways - via\
    \ a management operation, or via a signalling protocol\n   that allows tunnels\
    \ to be established dynamically.\n   An example of a management operation would\
    \ be to use an SNMP\n   Management Information Base (MIB) to configure various\
    \ tunneling\n   parameters, e.g., MPLS labels, source addresses to use for IP/IP\
    \ or\n   GRE tunnels, L2TP tunnel-ids and session-ids, or security association\n\
    \   parameters for IPSec.\n   Using a signalling protocol can significantly reduce\
    \ the management\n   burden however, and as such, is essential in many deployment\n\
    \   scenarios.  It reduces the amount of configuration needed, and also\n   reduces\
    \ the management co-ordination needed if a VPN spans multiple\n   administrative\
    \ domains.  For example, the value of the multiplexing\n   field, described above,\
    \ is local to the node assigning the value, and\n   can be kept local if distributed\
    \ via a signalling protocol, rather\n   than being first configured into a management\
    \ station and then\n   distributed to the relevant nodes.  A signalling protocol\
    \ also allows\n   nodes that are mobile or are only intermittently connected to\n\
    \   establish tunnels on demand.\n   When used in a VPN environment a signalling\
    \ protocol should allow for\n   the transport of a VPN-ID to allow the resulting\
    \ tunnel to be\n   associated with a particular VPN.  It should also allow tunnel\n\
    \   attributes to be exchanged or negotiated, for example the use of\n   frame\
    \ sequencing or the use of multiprotocol transport.  Note that\n   the role of\
    \ the signalling protocol need only be to negotiate tunnel\n   attributes, not\
    \ to carry information about how the tunnel is used,\n   for example whether the\
    \ frames carried in the tunnel are to be\n   forwarded at layer 2 or layer 3.\
    \ (This is similar to Q.2931 ATM\n   signalling - the same signalling protocol\
    \ is used to set up Classical\n   IP logical subnetworks as well as for LANE emulated\
    \ LANs.\n   Of the various IP tunneling protocols, the following ones support\
    \ a\n   signalling protocol that could be adapted for this purpose: L2TP (the\n\
    \   L2TP control protocol), IPSec (the Internet Key Exchange (IKE)\n   protocol\
    \ [18]), and GRE (as used with mobile-ip tunneling [19]). Also\n   there are two\
    \ MPLS signalling protocols that can be used to establish\n   LSP tunnels. One\
    \ uses extensions to the MPLS Label Distribution\n   Protocol (LDP) protocol [20],\
    \ called Constraint-Based Routing LDP\n   (CR-LDP) [21], and the other uses extensions\
    \ to the Resource\n   Reservation Protocol (RSVP) for LSP tunnels [22].\n"
- title: 3.1.3  Data Security
  contents:
  - "3.1.3  Data Security\n   A VPN tunneling protocol must support mechanisms to\
    \ allow for\n   whatever level of security may be desired by customers, including\n\
    \   authentication and/or encryption of various strengths.  None of the\n   tunneling\
    \ mechanisms discussed, other than IPSec, have intrinsic\n   security mechanisms,\
    \ but rely upon the security characteristics of\n   the underlying IP backbone.\
    \  In particular, MPLS relies upon the\n   explicit labeling of label switched\
    \ paths to ensure that packets\n   cannot be misdirected, while the other tunneling\
    \ mechanisms can all\n   be secured through the use of IPSec.  For VPNs implemented\
    \ over non-\n   IP backbones (e.g., MPOA, Frame Relay or ATM virtual circuits),\
    \ data\n   security is implicitly provided by the layer two switch\n   infrastructure.\n\
    \   Overall VPN security is not just a capability of the tunnels alone,\n   but\
    \ has to be viewed in the broader context of how packets are\n   forwarded onto\
    \ those tunnels.  For example with VPRNs implemented\n   with virtual routers,\
    \ the use of separate routing and forwarding\n   table instances ensures the isolation\
    \ of traffic between VPNs.\n   Packets on one VPN cannot be misrouted to a tunnel\
    \ on a second VPN\n   since those tunnels are not visible to the forwarding table\
    \ of the\n   first VPN.\n   If some form of signalling mechanism is used by one\
    \ VPN end point to\n   dynamically establish a tunnel with another endpoint, then\
    \ there is a\n   requirement to be able to authenticate the party attempting the\n\
    \   tunnel establishment.  IPSec has an array of schemes for this\n   purpose,\
    \ allowing, for example, authentication to be based on pre-\n   shared keys, or\
    \ to use digital signatures and certificates.  Other\n   tunneling schemes have\
    \ weaker forms of authentication.  In some cases\n   no authentication may be\
    \ needed, for example if the tunnels are\n   provisioned, rather than dynamically\
    \ established, or if the trust\n   model in use does not require it.\n   Currently\
    \ the IPSec Encapsulating Security Payload (ESP) protocol\n   [23] can be used\
    \ to establish SAs that support either encryption or\n   authentication or both.\
    \  However the protocol specification precludes\n   the use of an SA where neither\
    \ encryption or authentication is used.\n   In a VPN environment this \"null/null\"\
    \ option is useful, since other\n   aspects of the protocol (e.g., that it supports\
    \ tunneling and\n   multiplexing) may be all that is required.  In effect the\
    \ \"null/null\"\n   option can be viewed as just another level of data security.\n"
- title: 3.1.4  Multiprotocol Transport
  contents:
  - "3.1.4  Multiprotocol Transport\n   In many applications of VPNs, the VPN may\
    \ carry opaque, multiprotocol\n   traffic.  As such, the tunneling protocol used\
    \ must also support\n   multiprotocol transport.  L2TP is designed to transport\
    \ Point-to-\n   Point Protocol (PPP) [24] packets, and thus can be used to carry\n\
    \   multiprotocol traffic since PPP itself is multiprotocol.  GRE also\n   provides\
    \ for the identification of the protocol being tunneled.\n   IP/IP and IPSec tunnels\
    \ have no such protocol identification field,\n   since the traffic being tunneled\
    \ is assumed to be IP.\n   It is possible to extend the IPSec protocol suite to\
    \ allow for the\n   transport of multiprotocol packets.  This can be achieved,\
    \ for\n   example, by extending the signalling component of IPSec - IKE, to\n\
    \   indicate the protocol type of the traffic being tunneled, or to carry\n  \
    \ a packet multiplexing header (e.g., an LLC/SNAP header or GRE header)\n   with\
    \ each tunneled packet.  This approach is similar to that used for\n   the same\
    \ purpose in ATM networks, where signalling is used to\n   indicate the encapsulation\
    \ used on the VCC, and where packets sent on\n   the VCC can use either an LLC/SNAP\
    \ header or be placed directly into\n   the AAL5 payload, the latter being known\
    \ as VC-multiplexing (see\n   [25]).\n"
- title: 3.1.5  Frame Sequencing
  contents:
  - "3.1.5  Frame Sequencing\n   One quality of service attribute required by customers\
    \ of a VPN may\n   be frame sequencing, matching the equivalent characteristic\
    \ of\n   physical leased lines or dedicated connections.  Sequencing may be\n\
    \   required for the efficient operation of particular end to end\n   protocols\
    \ or applications.  In order to implement frame sequencing,\n   the tunneling\
    \ mechanism must support a sequencing field.  Both L2TP\n   and GRE have such\
    \ a field.  IPSec has a sequence number field, but it\n   is used by a receiver\
    \ to perform an anti-replay check, not to\n   guarantee in-order delivery of packets.\n\
    \   It is possible to extend IPSec to allow the use of the existing\n   sequence\
    \ field to guarantee in-order delivery of packets.  This can\n   be achieved,\
    \ for example, by using IKE to negotiate whether or not\n   sequencing is to be\
    \ used, and to define an end point behaviour which\n   preserves packet sequencing.\n"
- title: 3.1.6  Tunnel Maintenance
  contents:
  - "3.1.6  Tunnel Maintenance\n   The VPN end points must monitor the operation of\
    \ the VPN tunnels to\n   ensure that connectivity has not been lost, and to take\
    \ appropriate\n   action (such as route recalculation) if there has been a failure.\n\
    \   There are two approaches possible.  One is for the tunneling protocol\n  \
    \ itself to periodically check in-band for loss of connectivity, and to\n   provide\
    \ an explicit indication of failure.  For example L2TP has an\n   optional keep-alive\
    \ mechanism to detect non-operational tunnels.\n   The other approach does not\
    \ require the tunneling protocol itself to\n   perform this function, but relies\
    \ on the operation of some out-of-\n   band mechanism to determine loss of connectivity.\
    \  For example if a\n   routing protocol such as Routing Information Protocol\
    \ (RIP) [26] or\n   Open Shortest Path First (OSPF) [27] is run over a tunnel\
    \ mesh, a\n   failure to hear from a neighbor within a certain period of time\
    \ will\n   result in the routing protocol declaring the tunnel to be down.\n \
    \  Another out-of-band approach is to perform regular ICMP pings with a\n   peer.\
    \  This is generally sufficient assurance that the tunnel is\n   operational,\
    \ due to the fact the tunnel also runs across the same IP\n   backbone.\n   When\
    \ tunnels are established dynamically a distinction needs to be\n   drawn between\
    \ the static and dynamic tunnel information needed.\n   Before a tunnel can be\
    \ established some static information is needed\n   by a node, such as the identify\
    \ of the remote end point and the\n   attributes of the tunnel to propose and\
    \ accept.  This is typically\n   put in place as a result of a configuration operation.\
    \  As a result\n   of the signalling exchange to establish a tunnel, some dynamic\
    \ state\n   is established in each end point, such as the value of the\n   multiplexing\
    \ field or keys to be used.  For example with IPSec, the\n   establishment of\
    \ a Security Association (SA) puts in place the keys\n   to be used for the lifetime\
    \ of that SA.\n   Different policies may be used as to when to trigger the\n \
    \  establishment of a dynamic tunnel.  One approach is to use a data-\n   driven\
    \ approach and to trigger tunnel establishment whenever there is\n   data to be\
    \ transferred, and to timeout the tunnel due to inactivity.\n   This approach\
    \ is particularly useful if resources for the tunnel are\n   being allocated in\
    \ the network for QoS purposes.  Another approach is\n   to trigger tunnel establishment\
    \ whenever the static tunnel\n   configuration information is installed, and to\
    \ attempt to keep the\n   tunnel up all the time.\n"
- title: 3.1.7  Large MTUs
  contents:
  - "3.1.7  Large MTUs\n   An IP tunnel has an associated Maximum Transmission Unit\
    \ (MTU), just\n   like a regular link. It is conceivable that this MTU may be\
    \ larger\n   than the MTU of one or more individual hops along the path between\n\
    \   tunnel endpoints. If so, some form of frame fragmentation will be\n   required\
    \ within the tunnel.\n   If the frame to be transferred is mapped into one IP\
    \ datagram, normal\n   IP fragmentation will occur when the IP datagram reaches\
    \ a hop with\n   an MTU smaller than the IP tunnel's MTU. This can have undesirable\n\
    \   performance implications at the router performing such mid-tunnel\n   fragmentation.\n\
    \   An alternative approach is for the tunneling protocol itself to\n   incorporate\
    \ a segmentation and reassembly capability that operates at\n   the tunnel level,\
    \ perhaps using the tunnel sequence number and an\n   end-of-message marker of\
    \ some sort.  (Note that multilink PPP uses a\n   mechanism similar to this to\
    \ fragment packets).  This avoids IP level\n   fragmentation within the tunnel\
    \ itself. None of the existing\n   tunneling protocols support such a mechanism.\n"
- title: 3.1.8  Minimization of Tunnel Overhead
  contents:
  - "3.1.8  Minimization of Tunnel Overhead\n   There is clearly benefit in minimizing\
    \ the overhead of any tunneling\n   mechanisms.  This is particularly important\
    \ for the transport of\n   jitter and latency sensitive traffic such as packetized\
    \ voice and\n   video.  On the other hand, the use of security mechanisms, such\
    \ as\n   IPSec, do impose their own overhead, hence the objective should be to\n\
    \   minimize overhead over and above that needed for security, and to not\n  \
    \ burden those tunnels in which security is not mandatory with\n   unnecessary\
    \ overhead.\n   One area where the amount of overhead may be significant is when\n\
    \   voluntary tunneling is used for dial-up remote clients connecting to\n   a\
    \ VPN, due to the typically low bandwidth of dial-up links.  This is\n   discussed\
    \ further in section 6.3.\n"
- title: 3.1.9  Flow and congestion control
  contents:
  - "3.1.9  Flow and congestion control\n   During the development of the L2TP protocol\
    \ procedures were developed\n   for flow and congestion control.  These were necessitated\
    \ primarily\n   because of the need to provide adequate performance over lossy\n\
    \   networks when PPP compression is used, which, unlike IP Payload\n   Compression\
    \ Protocol (IPComp) [28], is stateful across packets.\n   Another motivation was\
    \ to accommodate devices with very little\n   buffering, used for example to terminate\
    \ low speed dial-up lines.\n   However the flow and congestion control mechanisms\
    \ defined in the\n   final version of the L2TP specification are used only for\
    \ the control\n   channels, and not for data traffic.\n   In general the interactions\
    \ between multiple layers of flow and\n   congestion control schemes can be very\
    \ complex.  Given the\n   predominance of TCP traffic in today's networks and\
    \ the fact that TCP\n   has its own end-to-end flow and congestion control mechanisms,\
    \ it is\n   not clear that there is much benefit to implementing similar\n   mechanisms\
    \ within tunneling protocols.  Good flow and congestion\n   control schemes, that\
    \ can adapt to a wide variety of network\n   conditions and deployment scenarios\
    \ are complex to develop and test,\n   both in themselves and in understanding\
    \ the interaction with other\n   schemes that may be running in parallel.  There\
    \ may be some benefit,\n   however, in having the capability whereby a sender\
    \ can shape traffic\n   to the capacity of a receiver in some manner, and in providing\
    \ the\n   protocol mechanisms to allow a receiver to signal its capabilities to\n\
    \   a sender.  This is an area that may benefit from further study.\n   Note also\
    \ the work of the Performance Implications of Link\n   Characteristics (PILC)\
    \ working group of the IETF, which is examining\n   how the properties of different\
    \ network links can have an impact on\n   the performance of Internet protocols\
    \ operating over those links.\n"
- title: 3.1.10  QoS / Traffic Management
  contents:
  - "3.1.10  QoS / Traffic Management\n   As noted above, customers may require that\
    \ VPNs yield similar\n   behaviour to physical leased lines or dedicated connections\
    \ with\n   respect to such QoS parameters as loss rates, jitter, latency and\n\
    \   bandwidth guarantees.  How such guarantees could be delivered will,\n   in\
    \ general, be a function of the traffic management characteristics\n   of the\
    \ VPN nodes themselves, and the access and backbone networks\n   across which\
    \ they are connected.\n   A full discussion of QoS and VPNs is outside the scope\
    \ of this\n   document, however by modeling a VPN tunnel as just another type\
    \ of\n   link layer, many of the existing mechanisms developed for ensuring\n\
    \   QoS over physical links can also be applied.  For example at a VPN\n   node,\
    \ the mechanisms of policing, marking, queuing, shaping and\n   scheduling can\
    \ all be applied to VPN traffic with VPN-specific\n   parameters, queues and interfaces,\
    \ just as for non-VPN traffic.  The\n   techniques developed for Diffserv, Intserv\
    \ and for traffic\n   engineering in MPLS are also applicable.  See also [29]\
    \ for a\n   discussion of QoS and VPNs.\n   It should be noted, however, that\
    \ this model of tunnel operation is\n   not necessarily consistent with the way\
    \ in which specific tunneling\n   protocols are currently modeled.  While a model\
    \ is an aid to\n   comprehension, and not part of a protocol specification, having\n\
    \   differing models can complicate discussions, particularly if a model\n   is\
    \ misinterpreted as being part of a protocol specification or as\n   constraining\
    \ choice of implementation method.  For example, IPSec\n   tunnel processing can\
    \ be modeled both as an interface and as an\n   attribute of a particular packet\
    \ flow.\n"
- title: 3.2  Recommendations
  contents:
  - "3.2  Recommendations\n   IPSec is needed whenever there is a requirement for\
    \ strong encryption\n   or strong authentication.  It also supports multiplexing\
    \ and a\n   signalling protocol - IKE.  However extending the IPSec protocol\n\
    \   suite to also cover the following areas would be beneficial, in order\n  \
    \ to better support the tunneling requirements of a VPN environment.\n   -  the\
    \ transport of a VPN-ID when establishing an SA (3.1.2)\n   -  a null encryption\
    \ and null authentication option (3.1.3)\n   -  multiprotocol operation (3.1.4)\n\
    \   -  frame sequencing (3.1.5)\n   L2TP provides no data security by itself,\
    \ and any PPP security\n   mechanisms used do not apply to the L2TP protocol itself,\
    \ so that in\n   order for strong security to be provided L2TP must run over IPSec.\n\
    \   Defining specific modes of operation for IPSec when it is used to\n   support\
    \ L2TP traffic will aid interoperability.  This is currently a\n   work item for\
    \ the proposed L2TP working group.\n"
- title: '4.0  VPN Types:  Virtual Leased Lines'
  contents:
  - "4.0  VPN Types:  Virtual Leased Lines\n   The simplest form of a VPN is a 'Virtual\
    \ Leased Line' (VLL) service.\n   In this case a point-to-point link is provided\
    \ to a customer,\n   connecting two CPE devices, as illustrated below.  The link\
    \ layer\n   type used to connect the CPE devices to the ISP nodes can be any link\n\
    \   layer type, for example an ATM VCC or a Frame Relay circuit.  The CPE\n  \
    \ devices can be either routers bridges or hosts.\n   The two ISP nodes are both\
    \ connected to an IP network, and an IP\n   tunnel is set up between them.  Each\
    \ ISP node is configured to bind\n   the stub link and the IP tunnel together\
    \ at layer 2 (e.g., an ATM VCC\n   and the IP tunnel).  Frames are relayed between\
    \ the two links.  For\n   example the ATM Adaptation Layer 5 (AAL5) payload is\
    \ taken and\n   encapsulated in an IPSec tunnel, and vice versa.  The contents\
    \ of the\n   AAL5 payload are opaque to the ISP node, and are not examined there.\n\
    \               +--------+      -----------       +--------+\n   +---+       |\
    \ ISP    |     ( IP        )      | ISP    |      +---+\n   |CPE|-------| edge\
    \   |-----( backbone  ) -----| edge   |------|CPE|\n   +---+ ATM   | node   |\
    \     (           )      | node   |  ATM +---+\n         VCC   +--------+    \
    \  -----------       +--------+  VCC\n                      <--------- IP Tunnel\
    \ -------->\n   10.1.1.5                subnet = 10.1.1.4/30              10.1.1.6\n\
    \          Addressing used by customer (transparent to provider)\n           \
    \               Figure 4.1: VLL Example\n   To a customer it looks the same as\
    \ if a single ATM VCC or Frame Relay\n   circuit were used to interconnect the\
    \ CPE devices, and the customer\n   could be unaware that part of the circuit\
    \ was in fact implemented\n   over an IP backbone.  This may be useful, for example,\
    \ if a provider\n   wishes to provide a LAN interconnect service using ATM as\
    \ the network\n   interface, but does not have an ATM network that directly\n\
    \   interconnects all possible customer sites.\n   It is not necessary that the\
    \ two links used to connect the CPE\n   devices to the ISP nodes be of the same\
    \ media type, but in this case\n   the ISP nodes cannot treat the traffic in an\
    \ opaque manner, as\n   described above.  Instead the ISP nodes must perform the\
    \ functions of\n   an interworking device between the two media types (e.g., ATM\
    \ and\n   Frame Relay), and perform functions such as LLC/SNAP to NLPID\n   conversion,\
    \ mapping between ARP protocol variants and performing any\n   media specific\
    \ processing that may be expected by the CPE devices\n   (e.g., ATM OAM cell handling\
    \ or Frame Relay XID exchanges).\n   The IP tunneling protocol used must support\
    \ multiprotocol operation\n   and may need to support sequencing, if that characteristic\
    \ is\n   important to the customer traffic.  If the tunnels are established\n\
    \   using a signalling protocol, they may be set up in a data driven\n   manner,\
    \ when a frame is received from a customer link and no tunnel\n   exists, or the\
    \ tunnels may be established at provisioning time and\n   kept up permanently.\n\
    \   Note that the use of the term 'VLL' in this document is different to\n   that\
    \ used in the definition of the Diffserv Expedited Forwarding Per\n   Hop Behaviour\
    \ (EF-PHB) [30].  In that document a VLL is used to mean\n   a low latency, low\
    \ jitter, assured bandwidth path, which can be\n   provided using the described\
    \ PHB. Thus the focus there is primarily\n   on link characteristics that are\
    \ temporal in nature. In this document\n   the term VLL does not imply the use\
    \ of any specific QoS mechanism,\n   Diffserv or otherwise.  Instead the focus\
    \ is primarily on link\n   characteristics that are more topological in nature,\
    \ (e.g., such as\n   constructing a link which includes an IP tunnel as one segment\
    \ of the\n   link). For a truly complete emulation of a link layer both the\n\
    \   temporal and topological aspects need to be taken into account.\n"
- title: '5.0  VPN Types:  Virtual Private Routed Networks'
  contents:
  - '5.0  VPN Types:  Virtual Private Routed Networks

    '
- title: 5.1  VPRN Characteristics
  contents:
  - "5.1  VPRN Characteristics\n   A Virtual Private Routed Network (VPRN) is defined\
    \ to be the\n   emulation of a multi-site wide area routed network using IP\n\
    \   facilities.  This section looks at how a network-based VPRN service\n   can\
    \ be provided.  CPE-based VPRNs are also possible, but are not\n   specifically\
    \ discussed here.  With network-based VPRNs many of the\n   issues that need to\
    \ be addressed are concerned with configuration and\n   operational issues, which\
    \ must take into account the split in\n   administrative responsibility between\
    \ the service provider and the\n   service user.\n   The distinguishing characteristic\
    \ of a VPRN, in comparison to other\n   types of VPNs, is that packet forwarding\
    \ is carried out at the\n   network layer.  A VPRN consists of a mesh of IP tunnels\
    \ between ISP\n   routers, together with the routing capabilities needed to forward\n\
    \   traffic received at each VPRN node to the appropriate destination\n   site.\
    \  Attached to the ISP routers are CPE routers connected via one\n   or more links,\
    \ termed 'stub' links.  There is a VPRN specific\n   forwarding table at each\
    \ ISP router to which members of the VPRN are\n   connected.  Traffic is forwarded\
    \ between ISP routers, and between ISP\n   routers and customer sites, using these\
    \ forwarding tables, which\n   contain network layer reachability information\
    \ (in contrast to a\n   Virtual Private LAN Segment type of VPN (VPLS) where the\
    \ forwarding\n   tables contain MAC layer reachability information - see section\
    \ 7.0).\n   An example VPRN is illustrated in the following diagram, which shows\n\
    \   3 ISP edge routers connected via a full mesh of IP tunnels, used to\n   interconnect\
    \ 4 CPE routers.  One of the CPE routers is multihomed to\n   the ISP network.\
    \  In the multihomed case, all stub links may be\n   active, or, as shown, there\
    \ may be one primary and one or more backup\n   links to be used in case of failure\
    \ of the primary.  The term '\n   backdoor' link is used to refer to a link between\
    \ two customer sites\n   that does not traverse the ISP network.\n   10.1.1.0/30\
    \ +--------+                       +--------+ 10.2.2.0/30\n   +---+       | ISP\
    \    |     IP tunnel         | ISP    |       +---+\n   |CPE|-------| edge   |<--------------------->|\
    \ edge   |-------|CPE|\n   +---+ stub  | router |     10.9.9.4/30       | router\
    \ |  stub +---+\n         link  +--------+                       +--------+  link\
    \   :\n                |   ^  |                         |   ^             :\n\
    \                |   |  |     ---------------     |   |             :\n      \
    \          |   |  +----(               )----+   |             :\n            \
    \    |   |       ( IP BACKBONE   )        |             :\n                | \
    \  |       (               )        |             :\n                |   |   \
    \     ---------------         |             :\n                |   |         \
    \      |                |             :\n                |   |IP tunnel  +--------+\
    \  IP tunnel|             :\n                |   |           | ISP    |      \
    \     |             :\n                |   +---------->| edge   |<----------+\
    \             :\n                |   10.9.9.8/30 | router | 10.9.9.12/30     \
    \       :\n          backup|               +--------+                 backdoor:\n\
    \           link |                |      |                    link  :\n      \
    \          |      stub link |      |  stub link               :\n            \
    \    |                |      |                          :\n                | \
    \            +---+    +---+                       :\n                +-------------|CPE|\
    \    |CPE|.......................:\n                10.3.3.0/30   +---+    +---+\
    \      10.4.4.0/30\n                         Figure 5.1: VPRN Example\n   The\
    \ principal benefit of a VPRN is that the complexity and the\n   configuration\
    \ of the CPE routers is minimized.  To a CPE router, the\n   ISP edge router appears\
    \ as a neighbor router in the customer's\n   network, to which it sends all traffic,\
    \ using a default route.  The\n   tunnel mesh that is set up to transfer traffic\
    \ extends between the\n   ISP edge routers, not the CPE routers.  In effect the\
    \ burden of\n   tunnel establishment and maintenance and routing configuration\
    \ is\n   outsourced to the ISP.  In addition other services needed for the\n \
    \  operation of a VPN such as the provision of a firewall and QoS\n   processing\
    \ can be handled by a small number of ISP edge routers,\n   rather than a large\
    \ number of potentially heterogeneous CPE devices.\n   The introduction and management\
    \ of new services can also be more\n   easily handled, as this can be achieved\
    \ without the need to upgrade\n   any CPE equipment.  This latter benefit is particularly\
    \ important\n   when there may be large numbers of residential subscribers using\
    \ VPN\n   services to access private corporate networks.  In this respect the\n\
    \   model is somewhat akin to that used for telephony services, whereby\n   new\
    \ services (e.g., call waiting) can be introduced with no change in\n   subscriber\
    \ equipment.\n   The VPRN type of VPN is in contrast to one where the tunnel mesh\n\
    \   extends to the CPE routers, and where the ISP network provides layer\n   2\
    \ connectivity alone.  The latter case can be implemented either as a\n   set\
    \ of VLLs between CPE routers (see section 4.0), in which case the\n   ISP network\
    \ provides a set of layer 2 point-to-point links, or as a\n   VPLS (see section\
    \ 7.0), in which case the ISP network is used to\n   emulate a multiaccess LAN\
    \ segment.  With these scenarios a customer\n   may have more flexibility (e.g.,\
    \ any IGP or any protocol can be run\n   across all customer sites) but this usually\
    \ comes at the expense of a\n   more complex configuration for the customer. \
    \ Thus, depending on\n   customer requirements, a VPRN or a VPLS may be the more\
    \ appropriate\n   solution.\n   Because a VPRN carries out forwarding at the network\
    \ layer, a single\n   VPRN only directly supports a single network layer protocol.\
    \  For\n   multiprotocol support, a separate VPRN for each network layer\n   protocol\
    \ could be used, or one protocol could be tunneled over\n   another (e.g., non-IP\
    \ protocols tunneled over an IP VPRN) or\n   alternatively the ISP network could\
    \ be used to provide layer 2\n   connectivity only, such as with a VPLS as mentioned\
    \ above.\n   The issues to be addressed for VPRNs include initial configuration,\n\
    \   determination by an ISP edge router of the set of links that are in\n   each\
    \ VPRN, the set of other routers that have members in the VPRN,\n   and the set\
    \ of IP address prefixes reachable via each stub link,\n   determination by a\
    \ CPE router of the set of IP address prefixes to be\n   forwarded to an ISP edge\
    \ router, the mechanism used to disseminate\n   stub reachability information\
    \ to the correct set of ISP routers, and\n   the establishment and use of the\
    \ tunnels used to carry the data\n   traffic.  Note also that, although discussed\
    \ first for VPRNs, many of\n   these issues also apply to the VPLS scenario described\
    \ later, with\n   the network layer addresses being replaced by link layer addresses.\n\
    \   Note that VPRN operation is decoupled from the mechanisms used by the\n  \
    \ customer sites to access the Internet.  A typical scenario would be\n   for\
    \ the ISP edge router to be used to provide both VPRN and Internet\n   connectivity\
    \ to a customer site.  In this case the CPE router just\n   has a default route\
    \ pointing to the ISP edge router, with the latter\n   being responsible for steering\
    \ private traffic to the VPRN and other\n   traffic to the Internet, and providing\
    \ firewall functionality between\n   the two domains.  Alternatively a customer\
    \ site could have Internet\n   connectivity via an ISP router not involved in\
    \ the VPRN, or even via\n   a different ISP.  In this case the CPE device is responsible\
    \ for\n   splitting the traffic into the two domains and providing firewall\n\
    \   functionality.\n"
- title: 5.1.1  Topology
  contents:
  - "5.1.1  Topology\n   The topology of a VPRN may consist of a full mesh of tunnels\
    \ between\n   each VPRN node, or may be an arbitrary topology, such as a set of\n\
    \   remote offices connected to the nearest regional site, with these\n   regional\
    \ sites connected together via a full or partial mesh.  With\n   VPRNs using IP\
    \ tunnels there is much less cost assumed with full\n   meshing than in cases\
    \ where physical resources (e.g., a leased line)\n   must be allocated for each\
    \ connected pair of sites, or where the\n   tunneling method requires resources\
    \ to be allocated in the devices\n   used to interconnect the edge routers (e.g.,\
    \ Frame Relay DLCIs).  A\n   full mesh topology yields optimal routing, since\
    \ it precludes the\n   need for traffic between two sites to traverse a third.\
    \  Another\n   attraction of a full mesh is that there is no need to configure\n\
    \   topology information for the VPRN.  Instead, given the member routers\n  \
    \ of a VPRN, the topology is implicit.  If the number of ISP edge\n   routers\
    \ in a VPRN is very large, however, a full mesh topology may\n   not be appropriate,\
    \ due to the scaling issues involved, for example,\n   the growth in the number\
    \ of tunnels needed between sites, (which for\n   n sites is n(n-1)/2), or the\
    \ number of routing peers per router.\n   Network policy may also lead to non\
    \ full mesh topologies, for example\n   an administrator may wish to set up the\
    \ topology so that traffic\n   between two remote sites passes through a central\
    \ site, rather than\n   go directly between the remote sites.  It is also necessary\
    \ to deal\n   with the scenario where there is only partial connectivity across\
    \ the\n   IP backbone under certain error conditions (e.g. A can reach B, and\
    \ B\n   can reach C, but A cannot reach C directly), which can occur if\n   policy\
    \ routing is being used.\n   For a network-based VPRN, it is assumed that each\
    \ customer site CPE\n   router connects to an ISP edge router through one or more\
    \ point-to-\n   point stub links (e.g. leased lines, ATM or Frame Relay connections).\n\
    \   The ISP routers are responsible for learning and disseminating\n   reachability\
    \ information amongst themselves.  The CPE routers must\n   learn the set of destinations\
    \ reachable via each stub link, though\n   this may be as simple as a default\
    \ route.\n   The stub links may either be dedicated links, set up via\n   provisioning,\
    \ or may be dynamic links set up on demand, for example\n   using PPP, voluntary\
    \ tunneling (see section 6.3), or ATM signalling.\n   With dynamic links it is\
    \ necessary to authenticate the subscriber,\n   and determine the authorized resources\
    \ that the subscriber can access\n   (e.g. which VPRNs the subscriber may join).\
    \  Other than the way the\n   subscriber is initially bound to the VPRN, (and\
    \ this process may\n   involve extra considerations such as dynamic IP address\
    \ assignment),\n   the subsequent VPRN mechanisms and services can be used for\
    \ both\n   types of subscribers in the same way.\n"
- title: 5.1.2  Addressing
  contents:
  - "5.1.2  Addressing\n   The addressing used within a VPRN may have no relation\
    \ to the\n   addressing used on the IP backbone over which the VPRN is\n   instantiated.\
    \  In particular non-unique private IP addressing may be\n   used [4].  Multiple\
    \ VPRNs may be instantiated over the same set of\n   physical devices, and they\
    \ may use the same or overlapping address\n   spaces.\n"
- title: 5.1.3  Forwarding
  contents:
  - "5.1.3  Forwarding\n   For a VPRN the tunnel mesh forms an overlay network operating\
    \ over an\n   IP backbone.  Within each of the ISP edge routers there must be\
    \ VPN\n   specific forwarding state to forward packets received from stub links\n\
    \   ('ingress traffic') to the appropriate next hop router, and to\n   forward\
    \ packets received from the core ('egress traffic') to the\n   appropriate stub\
    \ link.  For cases where an ISP edge router supports\n   multiple stub links belonging\
    \ to the same VPRN, the tunnels can, as a\n   local matter, either terminate on\
    \ the edge router, or on a stub link.\n   In the former case a VPN specific forwarding\
    \ table is needed for\n   egress traffic, in the latter case it is not.  A VPN\
    \ specific\n   forwarding table is generally needed in the ingress direction,\
    \ in\n   order to direct traffic received on a stub link onto the correct IP\n\
    \   tunnel towards the core.\n   Also since a VPRN operates at the internetwork\
    \ layer, the IP packets\n   sent over a tunnel will have their Time to Live (TTL)\
    \ field\n   decremented in the normal manner, preventing packets circulating\n\
    \   indefinitely in the event of a routing loop within the VPRN.\n"
- title: 5.1.4  Multiple concurrent VPRN connectivity
  contents:
  - "5.1.4  Multiple concurrent VPRN connectivity\n   Note also that a single customer\
    \ site may belong concurrently to\n   multiple VPRNs and may want to transmit\
    \ traffic both onto one or more\n   VPRNs and to the default Internet, over the\
    \ same stub link.  There\n   are a number of possible approaches to this problem,\
    \ but these are\n   outside the scope of this document.\n"
- title: 5.2  VPRN Related Work
  contents:
  - "5.2  VPRN Related Work\n   VPRN requirements and mechanisms have been discussed\
    \ previously in a\n   number of different documents.  One of the first was [10],\
    \ which\n   showed how the same VPN functionality can be implemented over both\n\
    \   MPLS and non-MPLS networks.  Some others are briefly discussed below.\n  \
    \ There are two main variants as regards the mechanisms used to provide\n   VPRN\
    \ membership and reachability functionality, - overlay and\n   piggybacking. \
    \ These are discussed in greater detail in sections\n   5.3.2, 5.3.3 and 5.3.4\
    \ below.  An example of the overlay model is\n   described in [14], which discusses\
    \ the provision of VPRN\n   functionality by means of a separate per-VPN routing\
    \ protocol\n   instance and route and forwarding table instantiation, otherwise\n\
    \   known as virtual routing.  Each VPN routing instance is isolated from\n  \
    \ any other VPN routing instance, and from the routing used across the\n   backbone.\
    \  As a result any routing protocol (e.g. OSPF, RIP2, IS-IS)\n   can be run with\
    \ any VPRN, independently of the routing protocols used\n   in other VPRNs, or\
    \ in the backbone itself.  The VPN model described\n   in [12] is also an overlay\
    \ VPRN model using virtual routing.  That\n   document is specifically geared\
    \ towards the provision of VPRN\n   functionality over MPLS backbones, and it\
    \ describes how VPRN\n   membership dissemination can be automated over an MPLS\
    \ backbone, by\n   performing VPN neighbor discovery over the base MPLS tunnel\
    \ mesh.\n   [31] extends the virtual routing model to include VPN areas, and VPN\n\
    \   border routers which route between VPN areas.  VPN areas may be\n   defined\
    \ for administrative or technical reasons, such as different\n   underlying network\
    \ infrastructures (e.g. ATM, MPLS, IP).\n   In contrast [15] describes the provision\
    \ of VPN functionality using a\n   piggybacking approach for membership and reachability\
    \ dissemination,\n   with this information being piggybacked in Border Gateway\
    \ Protocol 4\n   (BGP) [32] packets.  VPNs are constructed using BGP policies,\
    \ which\n   are used to control which sites can communicate with each other. [13]\n\
    \   also uses BGP for piggybacking membership information, and piggybacks\n  \
    \ reachability information on the protocol used to establish MPLS LSPs\n   (CR-LDP\
    \ or extended RSVP).  Unlike the other proposals, however, this\n   proposal requires\
    \ the participation on the CPE router to implement\n   the VPN functionality.\n"
- title: 5.3  VPRN Generic Requirements
  contents:
  - "5.3  VPRN Generic Requirements\n   There are a number of common requirements\
    \ which any network-based\n   VPRN solution must address, and there are a number\
    \ of different\n   mechanisms that can be used to meet these requirements.  These\n\
    \   generic issues are\n   1) The use of a globally unique VPN identifier in order\
    \ to be able to\n      refer to a particular VPN.\n   2) VPRN membership determination.\
    \  An edge router must learn of the\n      local stub links that are in each VPRN,\
    \ and must learn of the set\n      of other routers that have members in that\
    \ VPRN.\n   3) Stub link reachability information.  An edge router must learn\
    \ the\n      set of addresses and address prefixes reachable via each stub\n \
    \     link.\n   4) Intra-VPRN reachability information.  Once an edge router has\n\
    \      determined the set of address prefixes associated with each of its\n  \
    \    stub links, then this information must be disseminated to each\n      other\
    \ edge router in the VPRN.\n   5) Tunneling mechanism.  An edge router must construct\
    \ the necessary\n      tunnels to other routers that have members in the VPRN,\
    \ and must\n      perform the encapsulation and decapsulation necessary to send\
    \ and\n      receive packets over the tunnels.\n"
- title: 5.3.1  VPN Identifier
  contents:
  - "5.3.1  VPN Identifier\n   The IETF [16] and the ATM Forum [17] have standardized\
    \ on a single\n   format for a globally unique identifier used to identify a VPN\
    \ - a\n   VPN-ID.  Only the format of the VPN-ID has been defined, not its\n \
    \  semantics or usage.  The aim is to allow its use for a wide variety\n   of\
    \ purposes, and to allow the same identifier to used with different\n   technologies\
    \ and mechanisms.  For example a VPN-ID can be included in\n   a MIB to identify\
    \ a VPN for management purposes.  A VPN-ID can be\n   used in a control plane\
    \ protocol, for example to bind a tunnel to a\n   VPN at tunnel establishment\
    \ time.  All packets that traverse the\n   tunnel are then implicitly associated\
    \ with the identified VPN.  A\n   VPN-ID can be used in a data plane encapsulation,\
    \ to allow for an\n   explicit per-packet identification of the VPN associated\
    \ with the\n   packet.  If a VPN is implemented using different technologies (e.g.,\n\
    \   IP and ATM) in a network, the same identifier can be used to identify\n  \
    \ the VPN across the different technologies.  Also if a VPN spans\n   multiple\
    \ administrative domains the same identifier can be used\n   everywhere.\n   Most\
    \ of the VPN schemes developed (e.g. [11], [12], [13], [14])\n   require the use\
    \ of a VPN-ID that is carried in control and/or data\n   packets, which is used\
    \ to associate the packet with a particular VPN.\n   Although the use of a VPN-ID\
    \ in this manner is very common, it is not\n   universal. [15] describes a scheme\
    \ where there is no protocol field\n   used to identify a VPN in this manner.\
    \  In this scheme the VPNs as\n   understood by a user, are administrative constructs,\
    \ built using BGP\n   policies.  There are a number of attributes associated with\
    \ VPN\n   routes, such as a route distinguisher, and origin and target \"VPN\"\
    ,\n   that are used by the underlying protocol mechanisms for\n   disambiguation\
    \ and scoping, and these are also used by the BGP policy\n   mechanism in the\
    \ construction of VPNs, but there is nothing\n   corresponding with the VPN-ID\
    \ as used in the other documents.\n   Note also that [33] defines a multiprotocol\
    \ encapsulation for use\n   over ATM AAL5 that uses the standard VPN-ID format.\n"
- title: 5.3.2  VPN Membership Information Configuration and Dissemination
  contents:
  - "5.3.2  VPN Membership Information Configuration and Dissemination\n   In order\
    \ to establish a VPRN, or to insert new customer sites into an\n   established\
    \ VPRN, an ISP edge router must determine which stub links\n   are associated\
    \ with which VPRN.  For static links (e.g. an ATM VCC)\n   this information must\
    \ be configured into the edge router, since the\n   edge router cannot infer such\
    \ bindings by itself.  An SNMP MIB\n   allowing for bindings between local stub\
    \ links and VPN identities is\n   one solution.\n   For subscribers that attach\
    \ to the network dynamically (e.g. using\n   PPP or voluntary tunneling) it is\
    \ possible to make the association\n   between stub link and VPRN as part of the\
    \ end user authentication\n   processing that must occur with such dynamic links.\
    \  For example the\n   VPRN to which a user is to be bound may be derived from\
    \ the domain\n   name the used as part of PPP authentication.  If the user is\n\
    \   successfully authenticated (e.g. using a Radius server), then the\n   newly\
    \ created dynamic link can be bound to the correct VPRN.  Note\n   that static\
    \ configuration information is still needed, for example to\n   maintain the list\
    \ of authorized subscribers for each VPRN, but the\n   location of this static\
    \ information could be an external\n   authentication server rather than on an\
    \ ISP edge router.  Whether the\n   link was statically or dynamically created,\
    \ a VPN-ID can be\n   associated with that link to signify to which VPRN it is\
    \ bound.\n   After learning which stub links are bound to which VPRN, each edge\n\
    \   router must learn either the identity of, or, at least, the route to,\n  \
    \ each other edge router supporting other stub links in that particular\n   VPRN.\
    \  Implicit in the latter is the notion that there exists some\n   mechanism by\
    \ which the configured edge routers can then use this edge\n   router and/or stub\
    \ link identity information to subsequently set up\n   the appropriate tunnels\
    \ between them.  The problem of VPRN member\n   dissemination between participating\
    \ edge routers, can be solved in a\n   variety of ways, discussed below.\n"
- title: 5.3.2.1  Directory Lookup
  contents:
  - "5.3.2.1  Directory Lookup\n   The members of a particular VPRN, that is, the\
    \ identity of the edge\n   routers supporting stub links in the VPRN, and the\
    \ set of static stub\n   links bound to the VPRN per edge router, could be configured\
    \ into a\n   directory, which edge routers could query, using some defined\n \
    \  mechanism (e.g. Lightweight Directory Access Protocol (LDAP) [34]),\n   upon\
    \ startup.\n   Using a directory allows either a full mesh topology or an arbitrary\n\
    \   topology to be configured.  For a full mesh, the full list of member\n   routers\
    \ in a VPRN is distributed everywhere.  For an arbitrary\n   topology, different\
    \ routers may receive different member lists.\n   Using a directory allows for\
    \ authorization checking prior to\n   disseminating VPRN membership information,\
    \ which may be desirable\n   where VPRNs span multiple administrative domains.\
    \  In such a case,\n   directory to directory protocol mechanisms could also be\
    \ used to\n   propagate authorized VPRN membership information between the\n \
    \  directory systems of the multiple administrative domains.\n   There also needs\
    \ to be some form of database synchronization\n   mechanism (e.g. triggered or\
    \ regular polling of the directory by edge\n   routers, or active pushing of update\
    \ information to the edge routers\n   by the directory) in order for all edge\
    \ routers to learn the identity\n   of newly configured sites inserted into an\
    \ active VPRN, and also to\n   learn of sites removed from a VPRN.\n"
- title: 5.3.2.2  Explicit Management Configuration
  contents:
  - "5.3.2.2  Explicit Management Configuration\n   A VPRN MIB could be defined which\
    \ would allow a central management\n   system to configure each edge router with\
    \ the identities of each\n   other participating edge router and the identity\
    \ of each of the\n   static stub links bound to the VPRN.  Like the use of a directory,\n\
    \   this mechanism allows both full mesh and arbitrary topologies to be\n   configured.\
    \  Another mechanism using a centralized management system\n   is to use a policy\
    \ server and use the Common Open Policy Service\n   (COPS) protocol [35] to distribute\
    \ VPRN membership and policy\n   information, such as the tunnel attributes to\
    \ use when establishing a\n   tunnel, as described in [36].\n   Note that this\
    \ mechanism allows the management station to impose\n   strict authorization control;\
    \ on the other hand, it may be more\n   difficult to configure edge routers outside\
    \ the scope of the\n   management system.  The management configuration model\
    \ can also be\n   considered a subset of the directory method, in that the management\n\
    \   directories could use MIBs to push VPRN membership information to the\n  \
    \ participating edge routers, either subsequent to, or as part of, the\n   local\
    \ stub link configuration process.\n"
- title: 5.3.2.3  Piggybacking in Routing Protocols
  contents:
  - "5.3.2.3  Piggybacking in Routing Protocols\n   VPRN membership information could\
    \ be piggybacked into the routing\n   protocols run by each edge router across\
    \ the IP backbone, since this\n   is an efficient means of automatically propagating\
    \ information\n   throughout the network to other participating edge routers.\n\
    \   Specifically, each route advertisement by each edge router could\n   include,\
    \ at a minimum, the set of VPN identifiers associated with\n   each edge router,\
    \ and adequate information to allow other edge\n   routers to determine the identity\
    \ of, and/or, the route to, the\n   particular edge router.  Other edge routers\
    \ would examine received\n   route advertisements to determine if any contained\
    \ information was\n   relevant to a supported (i.e., configured) VPRN; this determination\n\
    \   could be done by looking for a VPN identifier matching a locally\n   configured\
    \ VPN.  The nature of the piggybacked information, and\n   related issues, such\
    \ as scoping, and the means by which the nodes\n   advertising particular VPN\
    \ memberships will be identified, will\n   generally be a function both of the\
    \ routing protocol and of the\n   nature of the underlying transport.\n   Using\
    \ this method all the routers in the network will have the same\n   view of the\
    \ VPRN membership information, and so a full mesh topology\n   is easily supported.\
    \  Supporting an arbitrary topology is more\n   difficult, however, since some\
    \ form of pruning would seem to be\n   needed.\n   The advantage of the piggybacking\
    \ scheme is that it allows for\n   efficient information dissemination, but it\
    \ does require that all\n   nodes in the path, and not just the participating\
    \ edge routers, be\n   able to accept such modified route advertisements.  A disadvantage\
    \ is\n   that significant administrative complexity may be required to\n   configure\
    \ scoping mechanisms so as to both permit and constrain the\n   dissemination\
    \ of the piggybacked advertisements, and in itself this\n   may be quite a configuration\
    \ burden, particularly if the VPRN spans\n   multiple routing domains (e.g. different\
    \ autonomous systems / ISPs).\n   Furthermore, unless some security mechanism\
    \ is used for routing\n   updates so as to permit only all relevant edge routers\
    \ to read the\n   piggybacked advertisements, this scheme generally implies a\
    \ trust\n   model where all routers in the path must perforce be authorized to\n\
    \   know this information.  Depending upon the nature of the routing\n   protocol,\
    \ piggybacking may also require intermediate routers,\n   particularly autonomous\
    \ system (AS) border routers, to cache such\n   advertisements and potentially\
    \ also re-distribute them between\n   multiple routing protocols.\n   Each of\
    \ the schemes described above have merit in particular\n   situations.  Note that,\
    \ in practice, there will almost always be some\n   centralized directory or management\
    \ system which will maintain VPRN\n   membership information, such as the set\
    \ of edge routers that are\n   allowed to support a certain VPRN, the bindings\
    \ of static stub links\n   to VPRNs, or authentication and authorization information\
    \ for users\n   that access the network via dynamics links.  This information\
    \ needs\n   to be configured and stored in some form of database, so that the\n\
    \   additional steps needed to facilitate the configuration of such\n   information\
    \ into edge routers, and/or, facilitate edge router access\n   to such information,\
    \ may not be excessively onerous.\n"
- title: 5.3.3  Stub Link Reachability Information
  contents:
  - "5.3.3  Stub Link Reachability Information\n   There are two aspects to stub site\
    \ reachability - the means by which\n   VPRN edge routers determine the set of\
    \ VPRN addresses and address\n   prefixes reachable at each stub site, and the\
    \ means by which the CPE\n   routers learn the destinations reachable via each\
    \ stub link.  A\n   number of common scenarios are outlined below.  In each case\
    \ the\n   information needed by the ISP edge router is the same - the set of\n\
    \   VPRN addresses reachable at the customer site, but the information\n   needed\
    \ by the CPE router differs.\n"
- title: 5.3.3.1  Stub Link Connectivity Scenarios
  contents:
  - '5.3.3.1  Stub Link Connectivity Scenarios

    '
- title: 5.3.3.1.1  Dual VPRN and Internet Connectivity
  contents:
  - "5.3.3.1.1  Dual VPRN and Internet Connectivity\n   The CPE router is connected\
    \ via one link to an ISP edge router, which\n   provides both VPRN and Internet\
    \ connectivity.\n   This is the simplest case for the CPE router, as it just needs\
    \ a\n   default route pointing to the ISP edge router.\n"
- title: 5.3.3.1.2  VPRN Connectivity Only
  contents:
  - "5.3.3.1.2  VPRN Connectivity Only\n   The CPE router is connected via one link\
    \ to an ISP edge router, which\n   provides VPRN, but not Internet, connectivity.\n\
    \   The CPE router must know the set of non-local VPRN destinations\n   reachable\
    \ via that link.  This may be a single prefix, or may be a\n   number of disjoint\
    \ prefixes.  The CPE router may be either statically\n   configured with this\
    \ information, or may learn it dynamically by\n   running an instance of an Interior\
    \ Gateway Protocol (IGP).  For\n   simplicity it is assumed that the IGP used\
    \ for this purpose is RIP,\n   though it could be any IGP.  The ISP edge router\
    \ will inject into\n   this instance of RIP the VRPN routes which it learns by\
    \ means of one\n   of the intra-VPRN reachability mechanisms described in section\
    \ 5.3.4.\n   Note that the instance of RIP run to the CPE, and any instance of\
    \ a\n   routing protocol used to learn intra-VPRN reachability (even if also\n\
    \   RIP) are separate, with the ISP edge router redistributing the routes\n  \
    \ from one instance to another.\n"
- title: 5.3.3.1.3  Multihomed Connectivity
  contents:
  - "5.3.3.1.3  Multihomed Connectivity\n   The CPE router is multihomed to the ISP\
    \ network, which provides VPRN\n   connectivity.\n   In this case all the ISP\
    \ edge routers could advertise the same VPRN\n   routes to the CPE router, which\
    \ then sees all VPRN prefixes equally\n   reachable via all links.  More specific\
    \ route redistribution is also\n   possible, whereby each ISP edge router advertises\
    \ a different set of\n   prefixes to the CPE router.\n"
- title: 5.3.3.1.4  Backdoor Links
  contents:
  - "5.3.3.1.4  Backdoor Links\n   The CPE router is connected to the ISP network,\
    \ which provides VPRN\n   connectivity, but also has a backdoor link to another\
    \ customer site\n   In this case the ISP edge router will advertise VPRN routes\
    \ as in\n   case 2 to the CPE device.  However now the same destination is\n \
    \  reachable via both the ISP edge router and via the backdoor link.  If\n   the\
    \ CPE routers connected to the backdoor link are running the\n   customer's IGP,\
    \ then the backdoor link may always be the favored link\n   as it will appear\
    \ an an 'internal' path, whereas the destination as\n   injected via the ISP edge\
    \ router will appear as an 'external' path\n   (to the customer's IGP).  To avoid\
    \ this problem, assuming that the\n   customer wants the traffic to traverse the\
    \ ISP network, then a\n   separate instance of  RIP should be run between the\
    \ CPE routers at\n   both ends of the backdoor link, in the same manner as an\
    \ instance of\n   RIP is run on a stub or backup link between a CPE router and\
    \ an ISP\n   edge router.  This will then also make the backdoor link appear as\
    \ an\n   external path, and by adjusting the link costs appropriately, the ISP\n\
    \   path can always be favored, unless it goes down, when the backdoor\n   link\
    \ is then used.\n   The description of the above scenarios covers what reachability\n\
    \   information is needed by the ISP edge routers and the CPE routers,\n   and\
    \ discusses some of the mechanisms used to convey this information.\n   The sections\
    \ below look at these mechanisms in more detail.\n"
- title: 5.3.3.1  Routing Protocol Instance
  contents:
  - "5.3.3.1  Routing Protocol Instance\n   A routing protocol can be run between\
    \ the CPE edge router and the ISP\n   edge router to exchange reachability information.\
    \  This allows an ISP\n   edge router to learn the VPRN prefixes reachable at\
    \ a customer site,\n   and also allows a CPE router to learn the destinations\
    \ reachable via\n   the provider network.\n   The extent of the routing domain\
    \ for this protocol instance is\n   generally just the ISP edge router and the\
    \ CPE router although if the\n   customer site is also running the same protocol\
    \ as its IGP, then the\n   domain may extend into customer site.  If the customer\
    \ site is\n   running a different routing protocol then the CPE router\n   redistributes\
    \ the routes between the instance running to the ISP edge\n   router, and the\
    \ instance running into the customer site.\n   Given the typically restricted\
    \ scope of this routing instance, a\n   simple protocol will generally suffice.\
    \  RIP is likely to be the most\n   common protocol used, though any routing protocol,\
    \ such as OSPF, or\n   BGP run in internal mode (IBGP), could also be used.\n\
    \   Note that the instance of the stub link routing protocol is different\n  \
    \ from any instance of a routing protocol used for intra-VPRN\n   reachability.\
    \  For example, if the ISP edge router uses routing\n   protocol piggybacking\
    \ to disseminate VPRN membership and reachability\n   information across the core,\
    \ then it may redistribute suitably\n   labeled routes from the CPE routing instance\
    \ to the core routing\n   instance.  The routing protocols used for each instance\
    \ are\n   decoupled, and any suitable protocol can be used in each case.  There\n\
    \   is no requirement that the same protocol, or even the same stub link\n   reachability\
    \ information gathering mechanism, be run between each CPE\n   router and associated\
    \ ISP edge router in a particular VPRN, since\n   this is a purely local matter.\n\
    \   This decoupling allows ISPs to deploy a common (across all VPRNs)\n   intra-VPRN\
    \ reachability mechanism, and a common stub link\n   reachability mechanism, with\
    \ these mechanisms isolated both from each\n   other, and from the particular\
    \ IGP used in a customer network.  In\n   the first case, due to the IGP-IGP boundary\
    \ implemented on the ISP\n   edge router, the ISP can insulate the intra-VPRN\
    \ reachability\n   mechanism from misbehaving stub link protocol instances.  In\
    \ the\n   second case the ISP is not required to be aware of the particular IGP\n\
    \   running in a customer site.  Other scenarios are possible, where the\n   ISP\
    \ edge routers are running a routing protocol in the same instance\n   as the\
    \ customer's IGP, but are unlikely to be practical, since it\n   defeats the purpose\
    \ of a VPRN simplifying CPE router configuration.\n   In cases where a customer\
    \ wishes to run an IGP across multiple sites,\n   a VPLS solution is more suitable.\n\
    \   Note that if a particular customer site concurrently belongs to\n   multiple\
    \ VPRNs (or wishes to concurrently communicate with both a\n   VPRN and the Internet),\
    \ then the ISP edge router must have some means\n   of unambiguously mapping stub\
    \ link address prefixes to particular\n   VPRNs.  A simple way is to have multiple\
    \ stub links, one per VPRN.\n   It is also possible to run multiple VPRNs over\
    \ one stub link.  This\n   could be done either by ensuring (and appropriately\
    \ configuring the\n   ISP edge router to know) that particular disjoint address\
    \ prefixes\n   are mapped into separate VPRNs, or by tagging the routing\n   advertisements\
    \ from the CPE router with the appropriate VPN\n   identifier.  For example if\
    \ MPLS was being used to convey stub link\n   reachability information, different\
    \ MPLS labels would be used to\n   differentiate the disjoint prefixes assigned\
    \ to particular VPRNs.  In\n   any case, some administrative procedure would be\
    \ required for this\n   coordination.\n"
- title: 5.3.3.2  Configuration
  contents:
  - "5.3.3.2  Configuration\n   The reachability information across each stub link\
    \ could be manually\n   configured, which may be appropriate if the set of addresses\
    \ or\n   prefixes is small and static.\n"
- title: 5.3.3.3  ISP Administered Addresses
  contents:
  - "5.3.3.3  ISP Administered Addresses\n   The set of addresses used by each stub\
    \ site could be administered and\n   allocated via the VPRN edge router, which\
    \ may be appropriate for\n   small customer sites, typically containing either\
    \ a single host, or a\n   single subnet.  Address allocation can be carried out\
    \ using protocols\n   such as PPP or DHCP [37], with, for example, the edge router\
    \ acting\n   as a Radius client and retrieving the customer's IP address to use\n\
    \   from a Radius server, or acting as a DHCP relay and examining the\n   DHCP\
    \ reply message as it is relayed to the customer site.  In this\n   manner the\
    \ edge router can build up a table of stub link reachability\n   information.\
    \  Although these address assignment mechanisms are\n   typically used to assign\
    \ an address to a single host, some vendors\n   have added extensions whereby\
    \ an address prefix can be assigned,\n   with, in some cases, the CPE device acting\
    \ as a \"mini-DHCP\" server\n   and assigning addresses for the hosts in the customer\
    \ site.\n   Note that with these schemes it is the responsibility of the address\n\
    \   allocation server to ensure that each site in the VPN received a\n   disjoint\
    \ address space.  Note also that an ISP would typically only\n   use this mechanism\
    \ for small stub sites, which are unlikely to have\n   backdoor links.\n"
- title: 5.3.3.4  MPLS Label Distribution Protocol
  contents:
  - "5.3.3.4  MPLS Label Distribution Protocol\n   In cases where the CPE router runs\
    \ MPLS, LDP can be used to convey\n   the set of prefixes at a stub site to a\
    \ VPRN edge router.  Using the\n   downstream unsolicited mode of label distribution\
    \ the CPE router can\n   distribute a label for each route in the stub site. \
    \ Note however\n   that the processing carried out by the edge router in this\
    \ case is\n   more than just the normal LDP processing, since it is learning new\n\
    \   routes via LDP, rather than the usual case of learning labels for\n   existing\
    \ routes that it has learned via standard routing mechanisms.\n"
- title: 5.3.4  Intra-VPN Reachability Information
  contents:
  - "5.3.4  Intra-VPN Reachability Information\n   Once an edge router has determined\
    \ the set of prefixes associated\n   with each of its stub links, then this information\
    \ must be\n   disseminated to each other edge router in the VPRN.  Note also that\n\
    \   there is an implicit requirement that the set of reachable addresses\n   within\
    \ the VPRN be locally unique that is, each VPRN stub link (not\n   performing\
    \ load sharing) maintain an address space disjoint from any\n   other, so as to\
    \ permit unambiguous routing.  In practical terms, it\n   is also generally desirable,\
    \ though not required, that this address\n   space be well partitioned i.e., specific,\
    \ disjoint address prefixes\n   per edge router, so as to preclude the need to\
    \ maintain and\n   disseminate large numbers of host routes.\n   The problem of\
    \ intra-VPN reachability information dissemination can\n   be solved in a number\
    \ of ways, some of which include the following:\n"
- title: 5.3.4.1  Directory Lookup
  contents:
  - "5.3.4.1  Directory Lookup\n   Along with VPRN membership information, a central\
    \ directory could\n   maintain a listing of the address prefixes associated with\
    \ each\n   customer site.  Such information could be obtained by the server\n\
    \   through protocol interactions with each edge router.  Note that the\n   same\
    \ directory synchronization issues discussed above in section\n   5.3.2 also apply\
    \ in this case.\n"
- title: 5.3.4.2  Explicit Configuration
  contents:
  - "5.3.4.2  Explicit Configuration\n   The address spaces associated with each edge\
    \ router could be\n   explicitly configured into each other router.  This is clearly\
    \ a\n   non-scalable solution, particularly when arbitrary topologies are\n  \
    \ used, and also raises the question of how the management system\n   learns such\
    \ information in the first place.\n"
- title: 5.3.4.3  Local Intra-VPRN Routing Instantiations
  contents:
  - "5.3.4.3  Local Intra-VPRN Routing Instantiations\n   In this approach, each edge\
    \ router runs an instance of a routing\n   protocol (a 'virtual router') per VPRN,\
    \ running across the VPRN\n   tunnels to each peer edge router, to disseminate\
    \ intra-VPRN\n   reachability information.  Both full-mesh and arbitrary VPRN\n\
    \   topologies can be easily supported, since the routing protocol itself\n  \
    \ can run over any topology.  The intra-VPRN routing advertisements\n   could\
    \ be distinguished from normal tunnel data packets either by\n   being addressed\
    \ directly to the peer edge router, or by a tunnel\n   specific mechanism.\n \
    \  Note that this intra-VPRN routing protocol need have no relationship\n   either\
    \ with the IGP of any customer site or with the routing\n   protocols operated\
    \ by the ISPs in the IP backbone.  Depending on the\n   size and scale of the\
    \ VPRNs to be supported either a simple protocol\n   like RIP or a more sophisticated\
    \ protocol like OSPF could be used.\n   Because the intra-VPRN routing protocol\
    \ operates as an overlay over\n   the IP backbone it is wholly transparent to\
    \ any intermediate routers,\n   and to any edge routers not within the VPRN. \
    \ This also implies that\n   such routing information can remain opaque to such\
    \ routers, which may\n   be a necessary security requirements in some cases. \
    \ Also note that\n   if the routing protocol runs directly over the same tunnels\
    \ as the\n   data traffic, then it will inherit the same level of security as\
    \ that\n   afforded the data traffic, for example strong encryption and\n   authentication.\n\
    \   If the tunnels over which an intra-VPRN routing protocol runs are\n   dedicated\
    \ to a specific VPN (e.g. a different multiplexing field is\n   used for each\
    \ VPN) then no changes are needed to the routing protocol\n   itself.  On the\
    \ other hand if shared tunnels are used, then it is\n   necessary to extend the\
    \ routing protocol to allow a VPN-ID field to\n   be included in routing update\
    \ packets, to allow sets of prefixes to\n   be associated with a particular VPN.\n"
- title: 5.3.4.4  Link Reachability Protocol
  contents:
  - "5.3.4.4  Link Reachability Protocol\n   By link reachability protocol is meant\
    \ a protocol that allows two\n   nodes, connected via a point-to-point link, to\
    \ exchange reachability\n   information.  Given a full mesh topology, each edge\
    \ router could run\n   a link reachability protocol, for instance some variation\
    \ of MPLS\n   CR-LDP, across the tunnel to each peer edge router in the VPRN,\n\
    \   carrying the VPN-ID and the reachability information of each VPRN\n   running\
    \ across the tunnel between the two edge routers.  If VPRN\n   membership information\
    \ has already been distributed to an edge\n   router, then the neighbor discovery\
    \ aspects of a traditional routing\n   protocol are not needed, as the set of\
    \ neighbors is already known.\n   TCP connections can be used to interconnect\
    \ the neighbors, to provide\n   reliability.  This approach may reduce the processing\
    \ burden of\n   running routing protocol instances per VPRN, and may be of particular\n\
    \   benefit where a shared tunnel mechanism is used to connect a set of\n   edge\
    \ routers supporting multiple VPRNs.\n   Another approach to developing a link\
    \ reachability protocol would be\n   to base it on IBGP.  The problem that needs\
    \ to be solved by a link\n   reachability protocol is very similar to that solved\
    \ by IBGP -\n   conveying address prefixes reliably between edge routers.\n  \
    \ Using a link reachability protocol it is straightforward to support a\n   full\
    \ mesh topology - each edge router conveys its own local\n   reachability information\
    \ to all other routers, but does not\n   redistribute information received from\
    \ any other router.  However\n   once an arbitrary topology needs to be supported,\
    \ the link\n   reachability protocol needs to develop into a full routing protocol,\n\
    \   due to the need to implement mechanisms to avoid loops, and there\n   would\
    \ seem little benefit in reinventing another routing protocol to\n   deal with\
    \ this.  Some reasons why partially connected meshes may be\n   needed even in\
    \ a tunneled environment are discussed in section 5.1.1.\n"
- title: 5.3.4.5  Piggybacking in IP Backbone Routing Protocols
  contents:
  - "5.3.4.5  Piggybacking in IP Backbone Routing Protocols\n   As with VPRN membership,\
    \ the set of address prefixes associated with\n   each stub interface could also\
    \ be piggybacked into the routing\n   advertisements from each edge router and\
    \ propagated through the\n   network.  Other edge routers extract this information\
    \ from received\n   route advertisements in the same way as they obtain the VPRN\n\
    \   membership information (which, in this case, is implicit in the\n   identification\
    \ of the source of each route advertisement).  Note that\n   this scheme may require,\
    \ depending upon the nature of the routing\n   protocols involved, that intermediate\
    \ routers, e.g. border routers,\n   cache intra-VPRN routing information in order\
    \ to propagate it\n   further.  This also has implications for the trust model,\
    \ and for the\n   level of security possible for intra-VPRN routing information.\n\
    \   Note that in any of the cases discussed above, an edge router has the\n  \
    \ option of disseminating its stub link prefixes in a manner so as to\n   permit\
    \ tunneling from remote edge routers directly to the egress stub\n   links.  Alternatively,\
    \ it could disseminate the information so as to\n   associate all such prefixes\
    \ with the edge router, rather than with\n   specific stub links.  In this case,\
    \ the edge router would need to\n   implement a VPN specific forwarding mechanism\
    \ for egress traffic, to\n   determine the correct egress stub link.  The advantage\
    \ of this is\n   that it may significantly reduce the number of distinct tunnels\
    \ or\n   tunnel label information which need to be constructed and maintained.\n\
    \   Note that this choice is purely a local manner and is not visible to\n   remote\
    \ edge routers.\n"
- title: 5.3.5  Tunneling Mechanisms
  contents:
  - "5.3.5  Tunneling Mechanisms\n   Once VPRN membership information has been disseminated,\
    \ the tunnels\n   comprising the VPRN core can be constructed.\n   One approach\
    \ to setting up the tunnel mesh is to use point-to-point\n   IP tunnels, and the\
    \ requirements and issues for such tunnels have\n   been discussed in section\
    \ 3.0.  For example while tunnel\n   establishment can be done through manual\
    \ configuration, this is\n   clearly not likely to be a scalable solution, given\
    \ the O(n^2)\n   problem of meshed links.  As such, tunnel set up should use some\
    \ form\n   of signalling protocol to allow two nodes to construct a tunnel to\n\
    \   each other knowing only each other's identity.\n   Another approach is to\
    \ use the multipoint to point 'tunnels' provided\n   by MPLS.  As noted in [38],\
    \ MPLS can be considered to be a form of IP\n   tunneling, since the labels of\
    \ MPLS packets allow for routing\n   decisions to be decoupled from the addressing\
    \ information of the\n   packets themselves.  MPLS label distribution mechanisms\
    \ can be used\n   to associate specific sets of MPLS labels with particular VPRN\n\
    \   address prefixes supported on particular egress points (i.e., stub\n   links\
    \ of edge routers) and hence allow other edge routers to\n   explicitly label\
    \ and route traffic to particular VPRN stub links.\n   One attraction of MPLS\
    \ as a tunneling mechanism is that it may\n   require less processing within each\
    \ edge router than alternative\n   tunneling mechanisms.  This is a function of\
    \ the fact that data\n   security within a MPLS network is implicit in the explicit\
    \ label\n   binding, much as with a connection oriented network, such as Frame\n\
    \   Relay.  This may hence lessen customer concerns about data security\n   and\
    \ hence require less processor intensive security mechanisms (e.g.,\n   IPSec).\
    \  However there are other potential security concerns with\n   MPLS.  There is\
    \ no direct support for security features such as\n   authentication, confidentiality,\
    \ and non-repudiation and the trust\n   model for MPLS means that intermediate\
    \ routers, (which may belong to\n   different administrative domains), through\
    \ which membership and\n   prefix reachability information is conveyed, must be\
    \ trusted, not\n   just the edge routers themselves.\n"
- title: 5.4  Multihomed Stub Routers
  contents:
  - "5.4  Multihomed Stub Routers\n   The discussion thus far has implicitly assumed\
    \ that stub routers are\n   connected to one and only one VPRN edge router.  In\
    \ general, this\n   restriction should be capable of being relaxed without any\
    \ change to\n   VPRN operation, given general market interest in multihoming for\n\
    \   reliability and other reasons.  In particular, in cases where the\n   stub\
    \ router supports multiple redundant links, with only one\n   operational at any\
    \ given time, with the links connected either to the\n   same VPRN edge router,\
    \ or to two or more different VPRN edge routers,\n   then the stub link reachability\
    \ mechanisms will both discover the\n   loss of an active link, and the activation\
    \ of a backup link.  In the\n   former situation, the previously connected VPRN\
    \ edge router will\n   cease advertising reachability to the stub node, while\
    \ the VPRN edge\n   router with the now active link will begin advertising reachability,\n\
    \   hence restoring connectivity.\n   An alternative scenario is where the stub\
    \ node supports multiple\n   active links, using some form of load sharing algorithm.\
    \  In such a\n   case, multiple VPRN edge routers may have active paths to the\
    \ stub\n   node, and may so advertise across the VPRN.  This scenario should not\n\
    \   cause any problem with reachability across the VPRN providing that\n   the\
    \ intra-VPRN reachability mechanism can accommodate multiple paths\n   to the\
    \ same prefix, and has the appropriate mechanisms to preclude\n   looping - for\
    \ instance, distance vector metrics associated with each\n   advertised prefix.\n"
- title: 5.5  Multicast Support
  contents:
  - "5.5  Multicast Support\n   Multicast and broadcast traffic can be supported across\
    \ VPRNs either\n   by edge replication or by native multicast support in the backbone.\n\
    \   These two cases are discussed below.\n"
- title: 5.5.1  Edge Replication
  contents:
  - "5.5.1  Edge Replication\n   This is where each VPRN edge router replicates multicast\
    \ traffic for\n   transmission across each link in the VPRN.  Note that this is\
    \ the\n   same operation that would be performed by CPE routers terminating\n\
    \   actual physical links or dedicated connections.  As with CPE routers,\n  \
    \ multicast routing protocols could also be run on each VPRN edge\n   router to\
    \ determine the distribution tree for multicast traffic and\n   hence reduce unnecessary\
    \ flood traffic.  This could be done by\n   running instances of standard multicast\
    \ routing protocols, e.g.\n   Protocol Independent Multicast (PIM) [39] or Distance\
    \ Vector\n   Multicast Routing Protocol (DVMRP) [40], on and between each VPRN\n\
    \   edge router, through the VPRN tunnels, in the same way that unicast\n   routing\
    \ protocols might be run at each VPRN edge router to determine\n   intra-VPN unicast\
    \ reachability, as discussed in section 5.3.4.\n   Alternatively, if a link reachability\
    \ protocol was run across the\n   VPRN tunnels for intra-VPRN reachability, then\
    \ this could also be\n   augmented to allow VPRN edge routers to indicate both\
    \ the particular\n   multicast groups requested for reception at each edge node,\
    \ and also\n   the multicast sources at each edge site.\n   In either case, there\
    \ would need to be some mechanism to allow for\n   the VPRN edge routers to determine\
    \ which particular multicast groups\n   were requested at each site and which\
    \ sources were present at each\n   site.  How this could be done would, in general,\
    \ be a function of the\n   capabilities of the CPE stub routers at each site.\
    \  If these run\n   multicast routing protocols, then they can interact directly\
    \ with the\n   equivalent protocols at each VPRN edge router.  If the CPE device\n\
    \   does not run a multicast routing protocol, then in the absence of\n   Internet\
    \ Group Management Protocol (IGMP) proxying [41] the customer\n   site would be\
    \ limited to a single subnet connected to the VPRN edge\n   router via a bridging\
    \ device, as the scope of an IGMP message is\n   limited to a single subnet. \
    \ However using IGMP-proxying the CPE\n   router can engage in multicast forwarding\
    \ without running a multicast\n   routing protocol, in constrained topologies.\
    \  On its interfaces into\n   the customer site the CPE router performs the router\
    \ functions of\n   IGMP, and on its interface to the VPRN edge router it performs\
    \ the\n   host functions of IGMP.\n"
- title: 5.5.2  Native Multicast Support
  contents:
  - "5.5.2  Native Multicast Support\n   This is where VPRN edge routers map intra-VPRN\
    \ multicast traffic onto\n   a native IP multicast distribution mechanism across\
    \ the backbone.\n   Note that intra-VPRN multicast has the same requirements for\n\
    \   isolation from general backbone traffic as intra-VPRN unicast\n   traffic.\
    \  Currently the only IP tunneling mechanism that has native\n   support for multicast\
    \ is MPLS.  On the other hand, while MPLS\n   supports native transport of IP\
    \ multicast packets, additional\n   mechanisms would be needed to leverage these\
    \ mechanisms for the\n   support of intra-VPRN multicast.\n   For instance, each\
    \ VPRN router could prefix multicast group addresses\n   within each VPRN with\
    \ the VPN-ID of that VPRN and then redistribute\n   these, essentially treating\
    \ this VPN-ID/intra-VPRN multicast address\n   tuple as a normal multicast address,\
    \ within the backbone multicast\n   routing protocols, as with the case of unicast\
    \ reachability, as\n   discussed previously.  The MPLS multicast label distribution\n\
    \   mechanisms could then be used to set up the appropriate multicast\n   LSPs\
    \ to interconnect those sites within each VPRN supporting\n   particular multicast\
    \ group addresses.  Note, however, that this would\n   require each of the intermediate\
    \ LSRs to not only be aware of each\n   intra-VPRN multicast group, but also to\
    \ have the capability of\n   interpreting these modified advertisements.  Alternatively,\n\
    \   mechanisms could be defined to map intra-VPRN multicast groups into\n   backbone\
    \ multicast groups.\n   Other IP tunneling mechanisms do not have native multicast\
    \ support.\n   It may prove feasible to extend such tunneling mechanisms by\n\
    \   allocating IP multicast group addresses to the VPRN as a whole and\n   hence\
    \ distributing intra-VPRN multicast traffic encapsulated within\n   backbone multicast\
    \ packets.  Edge VPRN routers could filter out\n   unwanted multicast groups.\
    \  Alternatively, mechanisms could also be\n   defined to allow for allocation\
    \ of backbone multicast group addresses\n   for particular intra-VPRN multicast\
    \ groups, and to then utilize\n   these, through backbone multicast protocols,\
    \ as discussed above, to\n   limit forwarding of intra-VPRN multicast traffic\
    \ only to those nodes\n   within the group.\n   A particular issue with the use\
    \ of native multicast support is the\n   provision of security for such multicast\
    \ traffic.  Unlike the case of\n   edge replication, which inherits the security\
    \ characteristics of the\n   underlying tunnel, native multicast mechanisms will\
    \ need to use some\n   form of secure multicast mechanism.  The development of\
    \ architectures\n   and solutions for secure multicast is an active research area,\
    \ for\n   example see [42] and [43].  The Secure Multicast Group (SMuG) of the\n\
    \   IRTF has been set up to develop prototype solutions, which would then\n  \
    \ be passed to the IETF IPSec working group for standardization.\n   However considerably\
    \ more development is needed before scalable\n   secure native multicast mechanisms\
    \ can be generally deployed.\n"
- title: 5.6  Recommendations
  contents:
  - "5.6  Recommendations\n   The various proposals that have been developed to support\
    \ some form\n   of VPRN functionality can be broadly classified into two groups\
    \ -\n   those that utilize the router piggybacking approach for distributing\n\
    \   VPN membership and/or reachability information ([13],[15]) and those\n   that\
    \ use the virtual routing approach ([12],[14]).  In some cases the\n   mechanisms\
    \ described rely on the characteristics of a particular\n   infrastructure (e.g.\
    \ MPLS) rather than just IP.\n   Within the context of the virtual routing approach\
    \ it may be useful\n   to develop a membership distribution protocol based on\
    \ a directory or\n   MIB.  When combined with the protocol extensions for IP tunneling\n\
    \   protocols outlined in section 3.2, this would then provide the basis\n   for\
    \ a complete set of protocols and mechanisms that support\n   interoperable VPRNs\
    \ that span multiple administrations over an IP\n   backbone.  Note that the other\
    \ major pieces of functionality needed -\n   the learning and distribution of\
    \ customer reachability information,\n   can be performed by instances of standard\
    \ routing protocols, without\n   the need for any protocol extensions.\n   Also\
    \ for the constrained case of a full mesh topology, the usefulness\n   of developing\
    \ a link reachability protocol could be examined, however\n   the limitations\
    \ and scalability issues associated with this topology\n   may not make it worthwhile\
    \ to develop something specific for this\n   case, as standard routing will just\
    \ work.\n   Extending routing protocols to allow a VPN-ID to carried in routing\n\
    \   update packets could also be examined, but is not necessary if VPN\n   specific\
    \ tunnels are used.\n"
- title: '6.0  VPN Types:  Virtual Private Dial Networks'
  contents:
  - "6.0  VPN Types:  Virtual Private Dial Networks\n   A Virtual Private Dial Network\
    \ (VPDN) allows for a remote user to\n   connect on demand through an ad hoc tunnel\
    \ into another site.  The\n   user is connected to a public IP network via a dial-up\
    \ PSTN or ISDN\n   link, and user packets are tunneled across the public network\
    \ to the\n   desired site, giving the impression to the user of being 'directly'\n\
    \   connected into that site.  A key characteristic of such ad hoc\n   connections\
    \ is the need for user authentication as a prime\n   requirement, since anyone\
    \ could potentially attempt to gain access to\n   such a site using a switched\
    \ dial network.\n   Today many corporate networks allow access to remote users\
    \ through\n   dial connections made through the PSTN, with users setting up PPP\n\
    \   connections across an access network to a network access server, at\n   which\
    \ point the PPP sessions are authenticated using AAA systems\n   running such\
    \ standard protocols as Radius [44].  Given the pervasive\n   deployment of such\
    \ systems, any VPDN system must in practice allow\n   for the near transparent\
    \ re-use of such existing systems.\n   The IETF have developed the Layer 2 Tunneling\
    \ Protocol (L2TP) [8]\n   which allows for the extension of of user PPP sessions\
    \ from an L2TP\n   Access Concentrator (LAC) to a remote L2TP Network Server (LNS).\
    \  The\n   L2TP protocol itself was based on two earlier protocols, the Layer\
    \ 2\n   Forwarding protocol (L2F) [45], and the Point-to-Point Tunneling\n   Protocol\
    \ (PPTP) [46], and this is reflected in the two quite\n   different scenarios\
    \ for which L2TP can be used - compulsory tunneling\n   and voluntary tunneling,\
    \ discussed further below in sections 6.2 and\n   6.3.\n   This document focuses\
    \ on the use of L2TP over an IP network (using\n   UDP), but L2TP may also be\
    \ run directly over other protocols such as\n   ATM or Frame Relay.  Issues specifically\
    \ related to running L2TP over\n   non-IP networks, such as how to secure such\
    \ tunnels, are not\n   addressed here.\n"
- title: 6.1  L2TP protocol characteristics
  contents:
  - "6.1  L2TP protocol characteristics\n   This section looks at the characteristics\
    \ of the L2TP tunneling\n   protocol using the categories outlined in section\
    \ 3.0.\n"
- title: 6.1.1 Multiplexing
  contents:
  - "6.1.1 Multiplexing\n   L2TP has inherent support for the multiplexing of multiple\
    \ calls from\n   different users over a single link.  Between the same two IP\n\
    \   endpoints, there can be multiple L2TP tunnels, as identified by a\n   tunnel-id,\
    \ and multiple sessions within a tunnel, as identified by a\n   session-id.\n"
- title: 6.1.2 Signalling
  contents:
  - "6.1.2 Signalling\n   This is supported via the inbuilt control connection protocol,\n\
    \   allowing both tunnels and sessions to be established dynamically.\n"
- title: 6.1.3 Data Security
  contents:
  - "6.1.3 Data Security\n   By allowing for the transparent extension of PPP from\
    \ the user,\n   through the LAC to the LNS, L2TP allows for the use of whatever\n\
    \   security mechanisms, with respect to both connection set up, and data\n  \
    \ transfer, may be used with normal PPP connections.  However this does\n   not\
    \ provide security for the L2TP control protocol itself.  In this\n   case L2TP\
    \ could be further secured by running it in combination with\n   IPSec through\
    \ IP backbones [47], [48], or related mechanisms on non-\n   IP backbones [49].\n\
    \   The interaction of L2TP with AAA systems for user authentication and\n   authorization\
    \ is a function of the specific means by which L2TP is\n   used, and the nature\
    \ of the devices supporting the LAC and the LNS.\n   These issues are discussed\
    \ in depth in [50].\n   The means by which the host determines the correct LAC\
    \ to connect to,\n   and the means by which the LAC determines which users to\
    \ further\n   tunnel, and the LNS parameters associated with each user, are outside\n\
    \   the scope of the operation of a VPDN, but may be addressed, for\n   instance,\
    \ by evolving Internet roaming specifications [51].\n"
- title: 6.1.4 Multiprotocol Transport
  contents:
  - "6.1.4 Multiprotocol Transport\n   L2TP transports PPP packets (and only PPP packets)\
    \ and thus can be\n   used to carry multiprotocol traffic since PPP itself is\n\
    \   multiprotocol.\n"
- title: 6.1.5 Sequencing
  contents:
  - "6.1.5 Sequencing\n   L2TP supports sequenced delivery of packets.  This is a\
    \ capability\n   that can be negotiated at session establishment, and that can\
    \ be\n   turned on and off by an LNS during a session.  The sequence number\n\
    \   field in L2TP can also be used to provide an indication of dropped\n   packets,\
    \ which is needed by various PPP compression algorithms to\n   operate correctly.\
    \  If no compression is in use, and the LNS\n   determines that the protocols\
    \ in use (as evidenced by the PPP NCP\n   negotiations) can deal with out of sequence\
    \ packets (e.g. IP), then\n   it may disable the use of sequencing.\n"
- title: 6.1.6 Tunnel Maintenance
  contents:
  - "6.1.6 Tunnel Maintenance\n   A keepalive protocol is used by L2TP in order to\
    \ allow it to\n   distinguish between a tunnel outage and prolonged periods of\
    \ tunnel\n   inactivity.\n"
- title: 6.1.7 Large MTUs
  contents:
  - "6.1.7 Large MTUs\n   L2TP itself has no inbuilt support for a segmentation and\
    \ reassembly\n   capability, but when run over UDP/IP IP fragmentation will take\
    \ place\n   if necessary.  Note that a LAC or LNS may adjust the Maximum Receive\n\
    \   Unit (MRU) negotiated via PPP in order to preclude fragmentation, if\n   it\
    \ has knowledge of the MTU used on the path between LAC and LNS.  To\n   this\
    \ end, there is a proposal to allow the use of MTU discovery for\n   cases where\
    \ the L2TP tunnel transports IP frames [52].\n"
- title: 6.1.8 Tunnel Overhead
  contents:
  - "6.1.8 Tunnel Overhead\n   L2TP as used over IP networks runs over UDP and must\
    \ be used to carry\n   PPP traffic.  This results in a significant amount of overhead,\
    \ both\n   in the data plane with UDP, L2TP and PPP headers, and also in the\n\
    \   control plane, with the L2TP and PPP control protocols.  This is\n   discussed\
    \ further in section 6.3\n"
- title: 6.1.9 Flow and Congestion Control
  contents:
  - "6.1.9 Flow and Congestion Control\n   L2TP supports flow and congestion control\
    \ mechanisms for the control\n   protocol, but not for data traffic.  See section\
    \ 3.1.9 for more\n   details.\n"
- title: 6.1.10 QoS / Traffic Management
  contents:
  - "6.1.10 QoS / Traffic Management\n   An L2TP header contains a 1-bit priority\
    \ field, which can be set for\n   packets that may need preferential treatment\
    \ (e.g. keepalives) during\n   local queuing and transmission.  Also by transparently\
    \ extending PPP,\n   L2TP has inherent support for such PPP mechanisms as multi-link\
    \ PPP\n   [53] and its associated control protocols [54], which allow for\n  \
    \ bandwidth on demand to meet user requirements.\n   In addition L2TP calls can\
    \ be mapped into whatever underlying traffic\n   management mechanisms may exist\
    \ in the network, and there are\n   proposals to allow for requests through L2TP\
    \ signalling for specific\n   differentiated services behaviors [55].\n"
- title: 6.1.11 Miscellaneous
  contents:
  - "6.1.11 Miscellaneous\n   Since L2TP is designed to transparently extend PPP,\
    \ it does not\n   attempt to supplant the normal address assignment mechanisms\n\
    \   associated with PPP.  Hence, in general terms the host initiating the\n  \
    \ PPP session will be assigned an address by the LNS using PPP\n   procedures.\
    \  This addressing may have no relation to the addressing\n   used for communication\
    \ between the LAC and LNS.  The LNS will also\n   need to support whatever forwarding\
    \ mechanisms are needed to route\n   traffic to and from the remote host.\n"
- title: 6.2  Compulsory Tunneling
  contents:
  - "6.2  Compulsory Tunneling\n   Compulsory tunneling refers to the scenario in\
    \ which a network node -\n   a dial or network access server, for instance - acting\
    \ as a LAC,\n   extends a PPP session across a backbone using L2TP to a remote\
    \ LNS,\n   as illustrated below.  This operation is transparent to the user\n\
    \   initiating the PPP session to the LAC.  This allows for the\n   decoupling\
    \ of the location and/or ownership of the modem pools used\n   to terminate dial\
    \ calls, from the site to which users are provided\n   access.  Support for this\
    \ scenario was the original intent of the L2F\n   specification, upon which the\
    \ L2TP specification was based.\n   There are a number of different deployment\
    \ scenarios possible. One\n   example, shown in the diagram below, is where a\
    \ subscriber host dials\n   into a NAS acting as a LAC, and is tunneled across\
    \ an IP network\n   (e.g. the Internet) to a gateway acting as an LNS. The gateway\n\
    \   provides access to a corporate network, and could either be a device\n   in\
    \ the corporate network itself, or could be an ISP edge router, in\n   the case\
    \ where a customer has outsourced the maintenance of LNS\n   functionality to\
    \ an ISP.  Another scenario is where an ISP uses L2TP\n   to provide a subscriber\
    \ with access to the Internet. The subscriber\n   host dials into a NAS acting\
    \ as a LAC, and is tunneled across an\n   access network to an ISP edge router\
    \ acting as an LNS. This ISP edge\n   router then feeds the subscriber traffic\
    \ into the Internet.  Yet\n   other scenarios are where an ISP uses L2TP to provide\
    \ a subscriber\n   with access to a VPRN, or with concurrent access to both a\
    \ VPRN and\n   the Internet.\n   A VPDN, whether using compulsory or voluntary\
    \ tunneling, can be\n   viewed as just another type of access method for subscriber\
    \ traffic,\n   and as such can be used to provide connectivity to different types\
    \ of\n   networks, e.g. a corporate network, the Internet, or a VPRN. The last\n\
    \   scenario is also an example of how a VPN service as provided to a\n   customer\
    \ may be implemented using a combination of different types of\n   VPN.\n   10.0.0.1\n\
    \   +----+\n   |Host|-----    LAC      -------------     LNS        10.0.0.0/8\n\
    \   +----+   /   +-----+   (             )   +-----+     ---------\n         \
    \  /----| NAS |---( IP Backbone )---| GW  |----( Corp.   )\n        dial    +-----+\
    \   (             )   +-----+    ( Network )\n        connection         -------------\
    \                ---------\n                   <------- L2TP Tunnel ------->\n\
    \     <--------------------- PPP Session ------->\n                 Figure 6.1:\
    \ Compulsory Tunneling Example\n   Compulsory tunneling was originally intended\
    \ for deployment on\n   network access servers supporting wholesale dial services,\
    \ allowing\n   for remote dial access through common facilities to an enterprise\n\
    \   site, while precluding the need for the enterprise to deploy its own\n   dial\
    \ servers.  Another example of this is where an ISP outsources its\n   own dial\
    \ connectivity to an access network provider (such as a Local\n   Exchange Carrier\
    \ (LEC) in the USA) removing the need for an ISP to\n   maintain its own dial\
    \ servers and allowing the LEC to serve multiple\n   ISPs.  More recently, compulsory\
    \ tunneling mechanisms have also been\n   proposed for evolving Digital Subscriber\
    \ Line (DSL) services [56],\n   [57], which also seek to leverage the existing\
    \ AAA infrastructure.\n   Call routing for compulsory tunnels requires that some\
    \ aspect of the\n   initial PPP call set up can be used to allow the LAC to determine\
    \ the\n   identity of the LNS.  As noted in [50], these aspects can include the\n\
    \   user identity, as determined through some aspect of the access\n   network,\
    \ including calling party number, or some attribute of the\n   called party, such\
    \ as the Fully Qualified Domain Name (FQDN) of the\n   identity claimed during\
    \ PPP authentication.\n   It is also possible to chain two L2TP tunnels together,\
    \ whereby a LAC\n   initiates a tunnel to an intermediate relay device, which\
    \ acts as an\n   LNS to this first LAC, and acts as a LAC to the final LNS.  This\
    \ may\n   be needed in some cases due to administrative, organizational or\n \
    \  regulatory issues pertaining to the split between access network\n   provider,\
    \ IP backbone provider and enterprise customer.\n"
- title: 6.3  Voluntary Tunnels
  contents:
  - "6.3  Voluntary Tunnels\n   Voluntary tunneling refers to the case where an individual\
    \ host\n   connects to a remote site using a tunnel originating on the host,\n\
    \   with no involvement from intermediate network nodes, as illustrated\n   below.\
    \  The PPTP specification, parts of which have been incorporated\n   into L2TP,\
    \ was based upon a voluntary tunneling model.\n   As with compulsory tunneling\
    \ there are different deployment scenarios\n   possible. The diagram below shows\
    \ a subscriber host accessing a\n   corporate network with either L2TP or IPSec\
    \ being used as the\n   voluntary tunneling mechanism. Another scenario is where\
    \ voluntary\n   tunneling is used to provide a subscriber with access to a VPRN.\n"
- title: 6.3.1  Issues with Use of L2TP for Voluntary Tunnels
  contents:
  - "6.3.1  Issues with Use of L2TP for Voluntary Tunnels\n   The L2TP specification\
    \ has support for voluntary tunneling, insofar\n   as the LAC can be located on\
    \ a host, not only on a network node.\n   Note that such a host has two IP addresses\
    \ - one for the LAC-LNS IP\n   tunnel, and another, typically allocated via PPP,\
    \ for the network to\n   which the host is connecting.  The benefits of using\
    \ L2TP for\n   voluntary tunneling are that the existing authentication and address\n\
    \   assignment mechanisms used by PPP can be reused without modification.\n  \
    \ For example an LNS could also include a Radius client, and\n   communicate with\
    \ a Radius server to authenticate a PPP PAP or CHAP\n   exchange, and to retrieve\
    \ configuration information for the host such\n   as its IP address and a list\
    \ of DNS servers to use.  This information\n   can then be passed to the host\
    \ via the PPP IPCP protocol.\n   10.0.0.1\n   +----+\n   |Host|-----         \
    \    -------------                10.0.0.0/8\n   +----+   /   +-----+   (    \
    \         )   +-----+     ---------\n           /----| NAS |---( IP Backbone )---|\
    \ GW  |----( Corp.   )\n        dial    +-----+   (             )   +-----+  \
    \  ( Network )\n        connection         -------------                ---------\n\
    \     <-------------- L2TP Tunnel -------------->\n                        with\
    \                      LAC on host\n     <-------------- PPP Session -------------->\
    \  LNS on gateway\n                        or\n     <-------------- IPSEC Tunnel\
    \ -------------->\n                  Figure 6.2: Voluntary Tunneling Example\n\
    \   The above procedure is not without its costs, however.  There is\n   considerable\
    \ overhead with such a protocol stack, particularly when\n   IPSec is also needed\
    \ for security purposes, and given that the host\n   may be connected via a low-bandwidth\
    \ dial up link.  The overhead\n   consists of both extra headers in the data plane\
    \ and extra control\n   protocols needed in the control plane.  Using L2TP for\
    \ voluntary\n   tunneling, secured with IPSec, means a web application, for example,\n\
    \   would run over the following stack\n     HTTP/TCP/IP/PPP/L2TP/UDP/ESP/IP/PPP/AHDLC\n\
    \   It is proposed in [58] that IPSec alone be used for voluntary tunnels\n  \
    \ reducing overhead, using the following stack.\n     HTTP/TCP/IP/ESP/IP/PPP/AHDLC\n\
    \   In this case IPSec is used in tunnel mode, with the tunnel\n   terminating\
    \ either on an IPSec edge device at the enterprise site, or\n   on the provider\
    \ edge router connected to the enterprise site.  There\n   are two possibilities\
    \ for the IP addressing of the host.  Two IP\n   addresses could be used, in a\
    \ similar manner to the L2TP case.\n   Alternatively the host can use a single\
    \ public IP address as the\n   source IP address in both inner and outer IP headers,\
    \ with the\n   gateway performing Network Address Translation (NAT) before\n \
    \  forwarding the traffic to the enterprise network.  To other hosts in\n   the\
    \ enterprise network the host appears to have an 'internal' IP\n   address.  Using\
    \ NAT has some limitations and restrictions, also\n   pointed out in [58].\n \
    \  Another area of potential problems with PPP is due to the fact that\n   the\
    \ characteristics of a link layer implemented via an L2TP tunnel\n   over an IP\
    \ backbone are quite different to a link layer run over a\n   serial line, as\
    \ discussed in the L2TP specification itself.  For\n   example, poorly chosen\
    \ PPP parameters may lead to frequent resets and\n   timeouts, particularly if\
    \ compression is in use.  This is because an\n   L2TP tunnel may misorder packets,\
    \ and may silently drop packets,\n   neither of which normally occurs on serial\
    \ lines.  The general packet\n   loss rate could also be significantly higher\
    \ due to network\n   congestion.  Using the sequence number field in an L2TP header\n\
    \   addresses the misordering issue, and for cases where the LAC and LNS\n   are\
    \ coincident with the PPP endpoints, as in voluntary tunneling, the\n   sequence\
    \ number field can also be used to detect a dropped packet,\n   and to pass a\
    \ suitable indication to any compression entity in use,\n   which typically requires\
    \ such knowledge in order to keep the\n   compression histories in synchronization\
    \ at both ends. (In fact this\n   is more of an issue with compulsory tunneling\
    \ since the LAC may have\n   to deliberately issue a corrupted frame to the PPP\
    \ host, to give an\n   indication of packet loss, and some hardware may not allow\
    \ this).\n"
- title: 6.3.2  Issues with Use of IPSec for Voluntary Tunnels
  contents:
  - "6.3.2  Issues with Use of IPSec for Voluntary Tunnels\n   If IPSec is used for\
    \ voluntary tunneling, the functions of user\n   authentication and host configuration,\
    \ achieved by means of PPP when\n   using L2TP, still need to be carried out.\
    \  A distinction needs to be\n   drawn here between machine authentication and\
    \ user authentication.  '\n   Two factor' authentication is carried out on the\
    \ basis of both\n   something the user has, such as a machine or smartcard with\
    \ a digital\n   certificate, and something the user knows, such as a password.\n\
    \   (Another example is getting money from an bank ATM machine - you need\n  \
    \ a card and a PIN number).  Many of the existing legacy schemes\n   currently\
    \ in use to perform user authentication are asymmetric in\n   nature, and are\
    \ not supported by IKE. For remote access the most\n   common existing user authentication\
    \ mechanism is to use PPP between\n   the user and access server, and Radius between\
    \ the access server and\n   authentication server.  The authentication exchanges\
    \ that occur in\n   this case, e.g. a PAP or CHAP exchange, are asymmetric.  Also\
    \ CHAP\n   supports the ability for the network to reauthenticate the user at\n\
    \   any time after the initial session has been established, to ensure\n   that\
    \ the current user is the same person that initiated the session.\n   While IKE\
    \ provides strong support for machine authentication, it has\n   only limited\
    \ support for any form of user authentication and has no\n   support for asymmetric\
    \ user authentication.  While a user password\n   can be used to derive a key\
    \ used as a preshared key, this cannot be\n   used with IKE Main Mode in a remote\
    \ access environment, as the user\n   will not have a fixed IP address, and while\
    \ Aggressive Mode can be\n   used instead, this affords no identity protection.\
    \  To this end there\n   have been a number of proposals to allow for support\
    \ of legacy\n   asymmetric user level authentication schemes with IPSec.  [59]\n\
    \   defines a new IKE message exchange - the transaction exchange - which\n  \
    \ allows for both Request/Reply and Set/Acknowledge message sequences,\n   and\
    \ it also defines attributes that can be used for client IP stack\n   configuration.\
    \ [60] and [61] describe mechanisms that use the\n   transaction message exchange,\
    \ or a series of such exchanges, carried\n   out between the IKE Phase 1 and Phase\
    \ 2 exchanges, to perform user\n   authentication. A different approach, that\
    \ does not extend the IKE\n   protocol itself, is described in [62]. With this\
    \ approach a user\n   establishes a Phase 1 SA with a security gateway and then\
    \ sets up a\n   Phase 2 SA to the gateway, over which an existing authentication\n\
    \   protocol is run. The gateway acts as a proxy and relays the protocol\n   messages\
    \ to an authentication server.\n   In addition there have also been proposals\
    \ to allow the remote host\n   to be configured with an IP address and other configuration\n\
    \   information over IPSec.  For example [63] describes a method whereby\n   a\
    \ remote host first establishes a Phase 1 SA with a security gateway\n   and then\
    \ sets up a Phase 2 SA to the gateway, over which the DHCP\n   protocol is run.\
    \ The gateway acts as a proxy and relays the protocol\n   messages to the DHCP\
    \ server.  Again, like [62], this proposal does\n   not involve extensions to\
    \ the IKE protocol itself.\n   Another aspect of PPP functionality that may need\
    \ to supported is\n   multiprotocol operation, as there may be a need to carry\
    \ network\n   layer protocols other than IP, and even to carry link layer protocols\n\
    \   (e.g.  ethernet) as would be needed to support bridging over IPSec.\n   This\
    \ is discussed in section 3.1.4.\n   The methods of supporting legacy user authentication\
    \ and host\n   configuration capabilities in a remote access environment are\n\
    \   currently being discussed in the IPSec working group.\n"
- title: 6.4  Networked Host Support
  contents:
  - "6.4  Networked Host Support\n   The current PPP based dial model assumes a host\
    \ directly connected to\n   a connection oriented dial access network.  Recent\
    \ work on new access\n   technologies such as DSL have attempted to replicate\
    \ this model [57],\n   so as to allow for the re-use of existing AAA systems.\
    \  The\n   proliferation of personal computers, printers and other network\n \
    \  appliances in homes and small businesses, and the ever lowering costs\n   of\
    \ networks, however, are increasingly challenging the directly\n   connected host\
    \ model.  Increasingly, most hosts will access the\n   Internet through small,\
    \ typically Ethernet, local area networks.\n   There is hence interest in means\
    \ of accommodating the existing AAA\n   infrastructure within service providers,\
    \ whilst also supporting\n   multiple networked hosts at each customer site. \
    \ The principal\n   complication with this scenario is the need to support the\
    \ login\n   dialogue, through which the appropriate AAA information is exchanged.\n\
    \   A number of proposals have been made to address this scenario:\n"
- title: 6.4.1  Extension of PPP to Hosts Through L2TP
  contents:
  - "6.4.1  Extension of PPP to Hosts Through L2TP\n   A number of proposals (e.g.\
    \ [56]) have been made to extend L2TP over\n   Ethernet so that PPP sessions can\
    \ run from networked hosts out to the\n   network, in much the same manner as\
    \ a directly attached host.\n"
- title: '6.4.2  Extension of PPP Directly to Hosts:'
  contents:
  - "6.4.2  Extension of PPP Directly to Hosts:\n   There is also a specification\
    \ for mapping PPP directly onto Ethernet\n   (PPPOE) [64] which uses a broadcast\
    \ mechanism to allow hosts to find\n   appropriate access servers with which to\
    \ connect. Such servers could\n   then further tunnel, if needed, the PPP sessions\
    \ using L2TP or a\n   similar mechanism.\n"
- title: 6.4.3  Use of IPSec
  contents:
  - "6.4.3  Use of IPSec\n   The IPSec based voluntary tunneling mechanisms discussed\
    \ above can be\n   used either with networked or directly connected hosts.\n \
    \  Note that all of these methods require additional host software to be\n   used,\
    \ which implements either LAC, PPPOE client or IPSec client\n   functionality.\n"
- title: 6.5  Recommendations
  contents:
  - "6.5  Recommendations\n   The L2TP specification has been finalized and will be\
    \ widely used for\n   compulsory tunneling.  As discussed in section 3.2, defining\
    \ specific\n   modes of operation for IPSec when used to secure L2TP would be\n\
    \   beneficial.\n   Also, for voluntary tunneling using IPSec, completing the\
    \ work needed\n   to provide support for the following areas would be useful\n\
    \   -  asymmetric / legacy user authentication (6.3)\n   -  host address assignment\
    \ and configuration (6.3)\n   along with any other issues specifically related\
    \ to the support of\n   remote hosts. Currently as there are many different non-interoperable\n\
    \   proprietary solutions in this area.\n"
- title: '7.0  VPN Types:  Virtual Private LAN Segment'
  contents:
  - "7.0  VPN Types:  Virtual Private LAN Segment\n   A Virtual Private LAN Segment\
    \ (VPLS) is the emulation of a LAN\n   segment using Internet facilities.  A VPLS\
    \ can be used to provide\n   what is sometimes known also as a Transparent LAN\
    \ Service (TLS),\n   which can be used to interconnect multiple stub CPE nodes,\
    \ either\n   bridges or routers, in a protocol transparent manner.  A VPLS\n \
    \  emulates a LAN segment over IP, in the same way as protocols such as\n   LANE\
    \ emulate a LAN segment over ATM.  The primary benefits of a VPLS\n   are complete\
    \ protocol transparency, which may be important both for\n   multiprotocol transport\
    \ and for regulatory reasons in particular\n   service provider contexts.\n  \
    \ 10.1.1.1    +--------+                       +--------+    10.1.1.2\n   +---+\
    \       | ISP    |     IP tunnel         | ISP    |       +---+\n   |CPE|-------|\
    \ edge   |-----------------------| edge   |-------|CPE|\n   +---+ stub  | node\
    \   |                       | node   |  stub +---+\n         link  +--------+\
    \                       +--------+  link\n                    ^  |           \
    \              |   ^\n                    |  |     ---------------     |   |\n\
    \                    |  |    (               )    |   |\n                    |\
    \  +----( IP BACKBONE   )----+   |\n                    |       (            \
    \   )        |\n                    |        ---------------         |\n     \
    \               |               |                |\n                    |IP tunnel\
    \  +--------+  IP tunnel|\n                    |           | ISP    |        \
    \   |\n                    +-----------| edge   |-----------+\n              \
    \                  | node   |\n                                +--------+    subnet\
    \ = 10.1.1.0/24\n                                    |\n                     \
    \     stub link |\n                                    |\n                   \
    \               +---+\n                                  |CPE| 10.1.1.3\n    \
    \                              +---+\n                         Figure 7.1: VPLS\
    \ Example\n"
- title: 7.1  VPLS Requirements
  contents:
  - "7.1  VPLS Requirements\n   Topologically and operationally a VPLS can be most\
    \ easily modeled as\n   being essentially equivalent to a VPRN, except that each\
    \ VPLS edge\n   node implements link layer bridging rather than network layer\n\
    \   forwarding.  As such, most of the VPRN tunneling and configuration\n   mechanisms\
    \ discussed previously can also be used for a VPLS, with the\n   appropriate changes\
    \ to accommodate link layer, rather than network\n   layer, packets and addressing\
    \ information.  The following sections\n   discuss the primary changes needed\
    \ in VPRN operation to support\n   VPLSs.\n"
- title: 7.1.1  Tunneling Protocols
  contents:
  - "7.1.1  Tunneling Protocols\n   The tunneling protocols employed within a VPLS\
    \ can be exactly the\n   same as those used within a VPRN, if the tunneling protocol\
    \ permits\n   the transport of multiprotocol traffic, and this is assumed below.\n"
- title: 7.1.2  Multicast and Broadcast Support
  contents:
  - "7.1.2  Multicast and Broadcast Support\n   A VPLS needs to have a broadcast capability.\
    \  This is needed both for\n   broadcast frames, and for link layer packet flooding,\
    \ where a unicast\n   frame is flooded because the path to the destination link\
    \ layer\n   address is unknown.  The address resolution protocols that run over\
    \ a\n   bridged network typically use broadcast frames (e.g. ARP).  The same\n\
    \   set of possible multicast tunneling mechanisms discussed earlier for\n   VPRNs\
    \ apply also to a VPLS, though the generally more frequent use of\n   broadcast\
    \ in VPLSs may increase the pressure for native multicast\n   support that reduces,\
    \ for instance, the burden of replication on VPLS\n   edge nodes.\n"
- title: 7.1.3  VPLS Membership Configuration and Topology
  contents:
  - "7.1.3  VPLS Membership Configuration and Topology\n   The configuration of VPLS\
    \ membership is analogous to that of VPRNs\n   since this generally requires only\
    \ knowledge of the local VPN link\n   assignments at any given VPLS edge node,\
    \ and the identity of, or\n   route to, the other edge nodes in the VPLS; in particular,\
    \ such\n   configuration is independent of the nature of the forwarding at each\n\
    \   VPN edge node.  As such, any of the mechanisms for VPN member\n   configuration\
    \ and dissemination discussed for VPRN configuration can\n   also be applied to\
    \ VPLS configuration.  Also as with VPRNs, the\n   topology of the VPLS could\
    \ be easily manipulated by controlling the\n   configuration of peer nodes at\
    \ each VPLS edge node, assuming that the\n   membership dissemination mechanism\
    \ was such as to permit this.  It is\n   likely that typical VPLSs will be fully\
    \ meshed, however, in order to\n   preclude the need for traffic between two VPLS\
    \ nodes to transit\n   through another VPLS node, which would then require the\
    \ use of the\n   Spanning Tree protocol [65] for loop prevention.\n"
- title: 7.1.4  CPE Stub Node Types
  contents:
  - "7.1.4  CPE Stub Node Types\n   A VPLS can support either bridges or routers as\
    \ a CPE device.\n   CPE routers would peer transparently across a VPLS with each\
    \ other\n   without requiring any router peering with any nodes within the VPLS.\n\
    \   The same scalability issues that apply to a full mesh topology for\n   VPRNs,\
    \ apply also in this case, only that now the number of peering\n   routers is\
    \ potentially greater, since the ISP edge device is no\n   longer acting as an\
    \ aggregation point.\n   With CPE bridge devices the broadcast domain encompasses\
    \ all the CPE\n   sites as well as the VPLS itself.  There are significant scalability\n\
    \   constraints in this case, due to the need for packet flooding, and\n   the\
    \ fact that any topology change in the bridged domain is not\n   localized, but\
    \ is visible throughout the domain.  As such this\n   scenario is generally only\
    \ suited for support of non-routable\n   protocols.\n   The nature of the CPE\
    \ impacts the nature of the encapsulation,\n   addressing, forwarding and reachability\
    \ protocols within the VPLS,\n   and are discussed separately below.\n"
- title: 7.1.5  Stub Link Packet Encapsulation
  contents:
  - '7.1.5  Stub Link Packet Encapsulation

    '
- title: 7.1.5.1  Bridge CPE
  contents:
  - "7.1.5.1  Bridge CPE\n   In this case, packets sent to and from the VPLS across\
    \ stub links are\n   link layer frames, with a suitable access link encapsulation.\
    \  The\n   most common case is likely to be ethernet frames, using an\n   encapsulation\
    \ appropriate to the particular access technology, such\n   as ATM, connecting\
    \ the CPE bridges to the VPLS edge nodes.  Such\n   frames are then forwarded\
    \ at layer 2 onto a tunnel used in the VPLS.\n   As noted previously, this does\
    \ mandate the use of an IP tunneling\n   protocol which can transport such link\
    \ layer frames.  Note that this\n   does not necessarily mandate, however, the\
    \ use of a protocol\n   identification field in each tunnel packet, since the\
    \ nature of the\n   encapsulated traffic (e.g. ethernet frames) could be indicated\
    \ at\n   tunnel setup.\n"
- title: 7.1.5.2  Router CPE
  contents:
  - "7.1.5.2  Router CPE\n   In this case, typically, CPE routers send link layer\
    \ packets to and\n   from the VPLS across stub links, destined to the link layer\
    \ addresses\n   of their peer CPE routers.  Other types of encapsulations may\
    \ also\n   prove feasible in such a case, however, since the relatively\n   constrained\
    \ addressing space needed for a VPLS to which only router\n   CPE are connected,\
    \ could allow for alternative encapsulations, as\n   discussed further below.\n"
- title: 7.1.6  CPE Addressing and Address Resolution
  contents:
  - '7.1.6  CPE Addressing and Address Resolution

    '
- title: 7.1.6.1  Bridge CPE
  contents:
  - "7.1.6.1  Bridge CPE\n   Since a VPLS operates at the link layer, all hosts within\
    \ all stub\n   sites, in the case of bridge CPE, will typically be in the same\n\
    \   network layer subnet.  (Multinetting, whereby multiple subnets\n   operate\
    \ over the same LAN segment, is possible, but much less\n   common).  Frames are\
    \ forwarded across and within the VPLS based upon\n   the link layer addresses\
    \ - e.g. IEEE MAC addresses - associated with\n   the individual hosts.  The VPLS\
    \ needs to support broadcast traffic,\n   such as that typically used for the\
    \ address resolution mechanism used\n   to map the host network addresses to their\
    \ respective link addresses.\n   The VPLS forwarding and reachability algorithms\
    \ also need to be able\n   to accommodate flooded traffic.\n"
- title: 7.1.6.2  Router CPE
  contents:
  - "7.1.6.2  Router CPE\n   A single network layer subnet is generally used to interconnect\n\
    \   router CPE devices, across a VPLS.  Behind each CPE router are hosts\n   in\
    \ different network layer subnets.  CPE routers transfer packets\n   across the\
    \ VPLS by mapping next hop network layer addresses to the\n   link layer addresses\
    \ of a router peer.  A link layer encapsulation is\n   used, most commonly ethernet,\
    \ as for the bridge case.\n   As noted above, however, in cases where all of the\
    \ CPE nodes\n   connected to the VPLS are routers, then it may be possible, due\
    \ to\n   the constrained addressing space of the VPLS, to use encapsulations\n\
    \   that use a different address space than normal MAC addressing.  See,\n   for\
    \ instance, [11], for a proposed mechanism for VPLSs over MPLS\n   networks, leveraging\
    \ earlier work on VPRN support over MPLS [38],\n   which proposes MPLS as the\
    \ tunneling mechanism, and locally assigned\n   MPLS labels as the link layer\
    \ addressing scheme to identify the CPE\n   LSR routers connected to the VPLS.\n"
- title: 7.1.7  VPLS Edge Node Forwarding and Reachability Mechanisms
  contents:
  - '7.1.7  VPLS Edge Node Forwarding and Reachability Mechanisms

    '
- title: 7.1.7.1  Bridge CPE
  contents:
  - "7.1.7.1  Bridge CPE\n   The only practical VPLS edge node forwarding mechanism\
    \ in this case\n   is likely to be standard link layer packet flooding and MAC\
    \ address\n   learning, as per [65].  As such, no explicit intra-VPLS reachability\n\
    \   protocol will be needed, though there will be a need for broadcast\n   mechanisms\
    \ to flood traffic, as discussed above.  In general, it may\n   not prove necessary\
    \ to also implement the Spanning Tree protocol\n   between VPLS edge nodes, if\
    \ the VPLS topology is such that no VPLS\n   edge node is used for transit traffic\
    \ between any other VPLS edge\n   nodes - in other words, where there is both\
    \ full mesh connectivity\n   and transit is explicitly precluded.  On the other\
    \ hand, the CPE\n   bridges may well implement the spanning tree protocol in order\
    \ to\n   safeguard against 'backdoor' paths that bypass connectivity through\n\
    \   the VPLS.\n"
- title: 7.1.7.2  Router CPE
  contents:
  - "7.1.7.2  Router CPE\n   Standard bridging techniques can also be used in this\
    \ case.  In\n   addition, the smaller link layer address space of such a VPLS\
    \ may\n   also permit other techniques, with explicit link layer routes between\n\
    \   CPE routers.  [11], for instance, proposes that MPLS LSPs be set up,\n   at\
    \ the insertion of any new CPE router into the VPLS, between all CPE\n   LSRs.\
    \  This then precludes the need for packet flooding.  In the more\n   general\
    \ case, if stub link reachability mechanisms were used to\n   configure VPLS edge\
    \ nodes with the link layer addresses of the CPE\n   routers connected to them,\
    \ then modifications of any of the intra-VPN\n   reachability mechanisms discussed\
    \ for VPRNs could be used to\n   propagate this information to each other VPLS\
    \ edge node.  This would\n   then allow for packet forwarding across the VPLS\
    \ without flooding.\n   Mechanisms could also be developed to further propagate\
    \ the link\n   layer addresses of peer CPE routers and their corresponding network\n\
    \   layer addresses across the stub links to the CPE routers, where such\n   information\
    \ could be inserted into the CPE router's address\n   resolution tables.  This\
    \ would then also preclude the need for\n   broadcast address resolution protocols\
    \ across the VPLS.\n   Clearly there would be no need for the support of spanning\
    \ tree\n   protocols if explicit link layer routes were determined across the\n\
    \   VPLS.  If normal flooding mechanisms were used then spanning tree\n   would\
    \ only be required if full mesh connectivity was not available\n   and hence VPLS\
    \ nodes had to carry transit traffic.\n"
- title: 7.2  Recommendations
  contents:
  - "7.2  Recommendations\n   There is significant commonality between VPRNs and VPLSs,\
    \ and, where\n   possible, this similarity should be exploited in order to reduce\n\
    \   development and configuration complexity.  In particular, VPLSs\n   should\
    \ utilize the same tunneling and membership configuration\n   mechanisms, with\
    \ changes only to reflect the specific characteristics\n   of VPLSs.\n"
- title: 8.0  Summary of Recommendations
  contents:
  - "8.0  Summary of Recommendations\n   In this document different types of VPNs\
    \ have been discussed\n   individually, but there are many common requirements\
    \ and mechanisms\n   that apply to all types of VPNs, and many networks will contain\
    \ a mix\n   of different types of VPNs.  It is useful to have as much commonality\n\
    \   as possible across these different VPN types.  In particular, by\n   standardizing\
    \ a relatively small number of mechanisms, it is possible\n   to allow a wide\
    \ variety of VPNs to be implemented.\n   The benefits of adding support for the\
    \ following mechanisms should be\n   carefully examined.\n   For IKE/IPSec:\n\
    \   -  the transport of a VPN-ID when establishing an SA (3.1.2)\n   -  a null\
    \ encryption and null authentication option (3.1.3)\n   -  multiprotocol operation\
    \ (3.1.4)\n   -  frame sequencing (3.1.5)\n   -  asymmetric / legacy user authentication\
    \ (6.3)\n   -  host address assignment and configuration (6.3)\n   For L2TP:\n\
    \   -  defining modes of operation of IPSec when used to support L2TP\n      (3.2)\n\
    \   For VPNs generally:\n   -  defining a VPN membership information configuration\
    \ and\n      dissemination mechanism, that uses some form of directory or MIB\n\
    \      (5.3.2)\n   -  ensure that solutions developed, as far as possible, are\n\
    \      applicable to different types of VPNs, rather than being specific\n   \
    \   to a single type of VPN.\n"
- title: 9.0  Security Considerations
  contents:
  - "9.0  Security Considerations\n   Security considerations are an integral part\
    \ of any VPN mechanisms,\n   and these are discussed in the sections describing\
    \ those mechanisms.\n"
- title: 10.0  Acknowledgements
  contents:
  - "10.0  Acknowledgements\n   Thanks to Anthony Alles, of Nortel Networks, for his\
    \ invaluable\n   assistance with the generation of this document, and who developed\n\
    \   much of the material on which early versions of this document were\n   based.\
    \  Thanks also to Joel Halpern for his helpful review comments.\n"
- title: 11.0  References
  contents:
  - "11.0  References\n   [1]  ATM Forum. \"LAN Emulation over ATM 1.0\", af-lane-0021.000,\n\
    \        January 1995.\n   [2]  ATM Forum. \"Multi-Protocol Over ATM Specification\
    \ v1.0\", af-\n        mpoa-0087.000, June 1997.\n   [3]  Ferguson, P. and Huston,\
    \ G. \"What is a VPN?\", Revision 1, April\n        1 1998; http://www.employees.org/~ferguson/vpn.pdf.\n\
    \   [4]  Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot, G. and E.\n   \
    \     Lear, \"Address Allocation for Private Internets\", BCP 5, RFC\n       \
    \ 1918, February 1996.\n   [5]  Kent, S. and R. Atkinson, \"Security Architecture\
    \ for the\n        Internet Protocol\", RFC 2401, November 1998.\n   [6]  Perkins,\
    \ C., \"IP Encapsulation within IP\", RFC 2003, October\n        1996.\n   [7]\
    \  Hanks, S., Li, T., Farinacci, D. and P. Traina, \"Generic Routing\n       \
    \ Encapsulation (GRE)\", RFC 1701, October 1994.\n   [8]  Townsley, W., Valencia,\
    \ A., Rubens, A., Pall, G., Zorn, G. and\n        B. Palter, \"Layer Two Tunneling\
    \ Protocol \"L2TP\"\", RFC 2661,\n        August 1999.\n   [9]  Rosen, E., et\
    \ al., \"Multiprotocol Label Switching Architecture\",\n        Work in Progress.\n\
    \   [10] Heinanen, J., et al., \"MPLS Mappings of Generic VPN Mechanisms\",\n\
    \        Work in Progress.\n   [11] Jamieson, D., et al., \"MPLS VPN Architecture\"\
    , Work in Progress.\n   [12] Casey, L., et al., \"IP VPN Realization using MPLS\
    \ Tunnels\", Work\n        in Progress.\n   [13] Li, T. \"CPE based VPNs using\
    \ MPLS\", Work in Progress.\n   [14] Muthukrishnan, K. and A. Malis, \"Core MPLS\
    \ IP VPN Architecture\",\n        Work in Progress.\n   [15] Rosen, E. and Y.\
    \ Rekhter, \"BGP/MPLS VPNs\", RFC 2547, March 1999.\n   [16] Fox, B. and B. Gleeson,\
    \ \"Virtual Private Networks Identifier\",\n        RFC 2685, September 1999.\n\
    \   [17] Petri, B. (editor) \"MPOA v1.1 Addendum on VPN support\", ATM\n     \
    \   Forum, af-mpoa-0129.000.\n   [18] Harkins, D. and C. Carrel, \"The Internet\
    \ Key Exchange (IKE)\",\n        RFC 2409, November 1998.\n   [19] Calhoun, P.,\
    \ et al., \"Tunnel Establishment Protocol\", Work in\n        Progress.\n   [20]\
    \ Andersson, L., et al., \"LDP Specification\", Work in Progress.\n   [21] Jamoussi,\
    \ B., et al., \"Constraint-Based LSP Setup using LDP\"\n        Work in Progress.\n\
    \   [22] Awduche, D., et al., \"Extensions to RSVP for LSP Tunnels\", Work\n \
    \       in Progress.\n   [23] Kent, S. and R. Atkinson, \"IP Encapsulating Security\
    \ Protocol\n        (ESP)\", RFC 2406, November 1998.\n   [24] Simpson, W., Editor,\
    \ \"The Point-to-Point Protocol (PPP)\", STD\n        51, RFC 1661, July 1994.\n\
    \   [25] Perez, M., Liaw, F., Mankin, A., Hoffman, E., Grossman, D. and\n    \
    \    A. Malis, \"ATM Signalling Support for IP over ATM\", RFC 1755,\n       \
    \ February 1995.\n   [26] Malkin, G.  \"RIP Version 2  Carrying Additional Information\"\
    ,\n        RFC 1723, November 1994.\n   [27] Moy, J., \"OSPF Version 2\", STD\
    \ 54, RFC 2328, April 1998.\n   [28] Shacham, A., Monsour, R., Pereira, R. and\
    \ M. Thomas, \"IP Payload\n        Compression Protocol (IPComp)\", RFC 2393,\
    \ December 1998.\n   [29] Duffield N., et al., \"A Performance Oriented Service\
    \ Interface\n        for Virtual Private Networks\", Work in Progress.\n   [30]\
    \ Jacobson, V., Nichols, K. and B. Poduri, \"An Expedited\n        Forwarding\
    \ PHB\", RFC 2598, June 1999.\n   [31] Casey, L., \"An extended IP VPN Architecture\"\
    , Work in Progress.\n   [32] Rekhter, Y., and T. Li, \"A Border Gateway Protocol\
    \ 4 (BGP-4),\"\n        RFC 1771, March 1995.\n   [33] Grossman, D. and J. Heinanen,\
    \ \"Multiprotocol Encapsulation over\n        ATM Adaptation Layer 5\", RFC 2684,\
    \ September 1999.\n   [34] Wahl, M., Howes, T. and S. Kille, \"Lightweight Directory\
    \ Access\n        Protocol (v3)\", RFC 2251, December 1997.\n   [35] Boyle, J.,\
    \ et al., \"The COPS (Common Open Policy Service)\n        Protocol\", RFC 2748,\
    \ January 2000.\n   [36] MacRae, M. and S. Ayandeh, \"Using COPS for VPN Connectivity\"\
    \n        Work in Progress.\n   [37] Droms, R., \"Dynamic Host Configuration Protocol\"\
    , RFC 2131,\n        March 1997.\n   [38] Heinanen, J. and E. Rosen, \"VPN Support\
    \ with MPLS\", Work in\n        Progress.\n   [39] Estrin, D., Farinacci, D.,\
    \ Helmy, A., Thaler, D., Deering, S.,\n        Handley, M., Jacobson, V., Liu,\
    \ C., Sharma, P. and L. Wei,\n        \"Protocol Independent Multicast-Sparse\
    \ Mode (PIM-SM): Protocol\n        Specification\", RFC 2362, June 1998.\n   [40]\
    \ Waitzman, D., Partridge, C., and S. Deering, \"Distance Vector\n        Multicast\
    \ Routing Protocol\", RFC 1075, November 1988.\n   [41] Fenner, W., \"IGMP-based\
    \ Multicast Forwarding (IGMP Proxying)\",\n        Work in Progress.\n   [42]\
    \ Wallner, D., Harder, E. and R. Agee, \"Key Management for\n        Multicast:\
    \ Issues and Architectures\", RFC 2627, June 1999.\n   [43] Hardjono, T., et al.,\
    \ \"Secure IP Multicast: Problem areas,\n        Framework, and Building Blocks\"\
    , Work in Progress.\n   [44] Rigney, C., Rubens, A., Simpson, W. and S. Willens,\
    \ \"Remote\n        Authentication Dial In User Service (RADIUS)\", RFC 2138,\
    \ April\n        1997.\n   [45] Valencia, A., Littlewood, M. and T. Kolar, \"\
    Cisco Layer Two\n        Forwarding (Protocol) \"L2F\"\", RFC 2341, May 1998.\n\
    \   [46] Hamzeh, K., Pall, G., Verthein, W., Taarud, J., Little, W. and\n    \
    \    G. Zorn, \"Point-to-Point Tunneling Protocol (PPTP)\", RFC 2637,\n      \
    \  July 1999.\n   [47] Patel, B., et al., \"Securing L2TP using IPSEC\", Work\
    \ in\n        Progress.\n   [48] Srisuresh, P., \"Secure Remote Access with L2TP\"\
    , Work in\n        Progress.\n   [49] Calhoun, P., et al., \"Layer Two Tunneling\
    \ Protocol \"L2TP\"\n        Security Extensions for Non-IP networks\", Work in\
    \ Progress.\n   [50] Aboba, B. and Zorn, G. \"Implementation of PPTP/L2TP Compulsory\n\
    \        Tunneling via RADIUS\", Work in progress.\n   [51] Aboba, B. and G. Zorn,\
    \ \"Criteria for Evaluating Roaming\n        Protocols\", RFC 2477, January 1999.\n\
    \   [52] Shea, R., \"L2TP-over-IP Path MTU Discovery (L2TPMTU)\", Work in\n  \
    \      Progress.\n   [53] Sklower, K., Lloyd, B., McGregor, G., Carr, D. and T.\n\
    \        Coradetti, \"The PPP Multilink Protocol (MP)\", RFC 1990, August\n  \
    \      1996.\n   [54] Richards, C. and K. Smith, \"The PPP Bandwidth Allocation\n\
    \        Protocol (BAP) The PPP Bandwidth Allocation Control Protocol\n      \
    \  (BACP)\", RFC 2125, March 1997.\n   [55] Calhoun, P. and K. Peirce, \"Layer\
    \ Two Tunneling Protocol \"L2TP\"\n        IP Differential Services Extension\"\
    , Work in Progress.\n   [56] ADSL Forum. \"An Interoperable End-to-end Broadband\
    \ Service\n        Architecture over ADSL Systems (Version 3.0)\", ADSL Forum\
    \ 97-\n        215.\n   [57] ADSL Forum. \"Core Network Architectures for ADSL\
    \ Access Systems\n        (Version 1.01)\", ADSL Forum 98-017.\n   [58] Gupta,\
    \ V., \"Secure, Remote Access over the Internet using\n        IPSec\", Work in\
    \ Progress.\n   [59] Pereira, R., et al., \"The ISAKMP Configuration Method\"\
    , Work in\n        Progress.\n   [60] Pereira, R. and S. Beaulieu, \"Extended\
    \ Authentication Within\n        ISAKMP/Oakley\", Work in Progress.\n   [61] Litvin,\
    \ M., et al., \"A Hybrid Authentication Mode for IKE\", Work\n        in Progress.\n\
    \   [62] Kelly, S., et al., \"User-level Authentication Mechanisms for\n     \
    \   IPsec\", Work in Progress.\n   [63] Patel, B., et al., \"DHCP Configuration\
    \ of IPSEC Tunnel Mode\",\n        Work in Progress.\n   [64] Mamakos, L., Lidl,\
    \ K., Evarts, J., Carrel, D., Simone, D. and R.\n        Wheeler, \"A Method for\
    \ Transmitting PPP Over Ethernet (PPPoE)\",\n        RFC 2516, February 1999.\n\
    \   [65] ANSI/IEEE - 10038: 1993 (ISO/IEC) Information technology -\n        Telecommunications\
    \ and information exchange between systems -\n        Local area networks - Media\
    \ access control (MAC) bridges,\n        ANSI/IEEE Std 802.1D, 1993 Edition.\n"
- title: 12.0  Author Information
  contents:
  - "12.0  Author Information\n   Bryan Gleeson\n   Nortel Networks\n   4500 Great\
    \ America Parkway\n   Santa Clara CA 95054\n   USA\n   Phone: +1 (408) 548 3711\n\
    \   EMail: bgleeson@shastanets.com\n   Juha Heinanen\n   Telia Finland, Inc.\n\
    \   Myyrmaentie 2\n   01600 VANTAA\n   Finland\n   Phone: +358 303 944 808\n \
    \  EMail: jh@telia.fi\n   Arthur Lin\n   Nortel Networks\n   4500 Great America\
    \ Parkway\n   Santa Clara CA 95054\n   USA\n   Phone: +1 (408) 548 3788\n   EMail:\
    \ alin@shastanets.com\n   Grenville Armitage\n   Bell Labs Research Silicon Valley\n\
    \   Lucent Technologies\n   3180 Porter Drive,\n   Palo Alto, CA 94304\n   USA\n\
    \   EMail: gja@lucent.com\n   Andrew G. Malis\n   Lucent Technologies\n   1 Robbins\
    \ Road\n   Westford, MA 01886\n   USA\n   Phone: +1 978 952 7414\n   EMail: amalis@lucent.com\n"
- title: 13.0  Full Copyright Statement
  contents:
  - "13.0  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
