- contents:
  - "       MPLS Transport Profile (MPLS-TP) Traffic Engineering (TE)\n                   Management
    Information Base (MIB)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes additional managed objects and textual\n   conventions
    for tunnels, identifiers, and Label Switching Routers to\n   support Multiprotocol
    Label Switching (MPLS) MIB modules for\n   transport networks.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7453.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. The Internet-Standard Management Framework ......................5\n   3.
    Overview ........................................................5\n      3.1.
    Conventions Used in This Document ..........................5\n      3.2. Terminology
    ................................................6\n      3.3. Acronyms ...................................................6\n
    \  4. Motivations .....................................................6\n   5.
    Feature List ....................................................7\n   6. Outline
    .........................................................7\n      6.1. MIB Module
    Extensions ......................................8\n           6.1.1. Summary
    of MIB Module Changes .......................8\n      6.2. MPLS-TE-EXT-STD-MIB
    ........................................9\n           6.2.1. mplsTunnelExtNodeConfigTable
    ........................9\n           6.2.2. mplsTunnelExtNodeIpMapTable .........................9\n
    \          6.2.3. mplsTunnelExtNodeIccMapTable .......................10\n           6.2.4.
    mplsTunnelExtTable .................................10\n      6.3. MPLS-TC-EXT-STD-MIB
    .......................................10\n      6.4. MPLS-ID-STD-MIB ...........................................10\n
    \     6.5. MPLS-LSR-EXT-STD-MIB ......................................11\n      6.6.
    The Use of RowPointer .....................................11\n   7. MIB Modules'
    Interdependencies .................................11\n   8. Dependencies between
    MIB Module Tables .........................13\n   9. Example of MPLS-TP Tunnel
    Setup ................................13\n      9.1. Example of MPLS-TP Static
    Co-routed Bidirectional\n           Tunnel Setup ..............................................15\n
    \          9.1.1. mplsTunnelEntry ....................................15\n           9.1.2.
    mplsTunnelExtEntry .................................16\n           9.1.3. Forward-Direction
    mplsOutSegmentEntry ..............16\n           9.1.4. Reverse-Direction mplsInSegmentEntry
    ...............16\n           9.1.5. Forward-Direction mplsXCEntry ......................17\n
    \          9.1.6. Reverse-Direction mplsXCEntry ......................17\n           9.1.7.
    Forward-Direction mplsXCExtEntry ...................18\n           9.1.8. Reverse-Direction
    mplsXCExtEntry ...................18\n      9.2. Example of MPLS-TP Static Associated
    Bidirectional\n           Tunnel Setup ..............................................18\n
    \          9.2.1. Forward-Direction mplsTunnelEntry ..................18\n           9.2.2.
    Forward-Direction mplsTunnelExtEntry ...............19\n           9.2.3. Forward-Direction
    mplsOutSegmentTable ..............20\n           9.2.4. Forward-Direction mplsXCEntry
    ......................20\n           9.2.5. Forward-Direction mplsXCExtEntry ...................20\n
    \          9.2.6. Reverse-Direction mplsTunnelEntry ..................21\n           9.2.7.
    Reverse-Direction mplsTunnelExtEntry ...............22\n           9.2.8. Reverse-Direction
    mplsInSegmentEntry ...............22\n           9.2.9. Reverse-Direction mplsXCEntry
    ......................22\n           9.2.10. Reverse-Direction mplsXCExtEntry
    ..................23\n      9.3. Example of MPLS-TP Signaled Co-routed\n           Bidirectional
    Tunnel Setup ................................23\n           9.3.1. mplsTunnelEntry
    ....................................23\n           9.3.2. mplsTunnelExtEntry .................................24\n
    \          9.3.3. Forward-Direction mplsOutSegmentEntry ..............24\n           9.3.4.
    Reverse-Direction mplsInSegmentEntry ...............25\n           9.3.5. Forward-Direction
    mplsXCEntry ......................25\n           9.3.6. Reverse-Direction mplsXCEntry
    ......................25\n           9.3.7. Forward-Direction mplsXCExtEntry ...................25\n
    \          9.3.8. Reverse-Direction mplsXCExtEntry ...................25\n   10.
    MPLS Textual Convention Extension MIB Definitions .............26\n   11. MPLS
    Identifier MIB Definitions ...............................29\n   12. MPLS LSR
    Extension MIB Definitions ............................34\n   13. MPLS Tunnel Extension
    MIB Definitions .........................39\n   14. Security Considerations .......................................57\n
    \  15. IANA Considerations ...........................................58\n      15.1.
    IANA Considerations for MPLS-TC-EXT-STD-MIB ..............58\n      15.2. IANA
    Considerations for MPLS-ID-STD-MIB ..................58\n      15.3. IANA Considerations
    for MPLS-LSR-EXT-STD-MIB .............58\n      15.4. IANA Considerations for
    MPLS-TE-EXT-STD-MIB ..............59\n   16. References ....................................................59\n
    \     16.1. Normative References .....................................59\n      16.2.
    Informative References ...................................60\n   Acknowledgments
    ...................................................62\n   Authors' Addresses ................................................62\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information
    Base (MIB)\n   for use with network management protocols in the Internet community.\n
    \  In particular, it describes additional textual conventions and\n   managed
    objects for tunnels, identifiers, and Label Switching Routers\n   to support Multiprotocol
    Label Switching (MPLS) MIB modules for\n   transport networks.  MIB modules defined
    in this document extend the\n   existing MPLS MIB objects in such a way that they
    support the MPLS\n   Transport Profile (MPLS-TP) but also other MPLS networks.
    \ Hence,\n   \"MPLS-TP\" is not included in the MIB module names.\n   As described
    in the MPLS Traffic Engineering (TE) MIB definition\n   [RFC3812], MPLS traffic
    engineering is concerned with the creation\n   and management of MPLS tunnels.
    \ This term is a shorthand for a\n   combination of one or more LSPs linking an
    ingress and an egress LSR.\n   Several types of point-to-point MPLS tunnels may
    be constructed\n   between a pair of LSRs A and B:\n      - Unidirectional with
    a single LSP (say, from A to B).\n      - Associated bidirectional consisting
    of two separately routed\n        LSPs, one linking A to B and the other linking
    B to A.\n        Together, the pair provides a single logical bidirectional\n
    \       transport path.\n      - Co-routed bidirectional consisting of an associated\n
    \       bidirectional tunnel but with the second LSP from B to A\n        following
    the reverse of the path of the LSP from A to B, in\n        terms of both nodes
    and links.\n   Tunnels may be either statically configured by management action
    or\n   dynamically created using an LSP management protocol.\n   The existing
    MPLS TE MIB [RFC3812] and the GMPLS TE MIB [RFC4802]\n   address only a subset
    of the combinations of statically and\n   dynamically configured tunnel types,
    catering to statically\n   configured unidirectional tunnels together with dynamically\n
    \  configured unidirectional and co-routed bidirectional tunnels.  They\n   are
    also restricted to two endpoint LSRs identified by IP addresses.\n   The MPLS-TP
    TE MIB defined in this document extends the MIB modules\n   defined in [RFC3812]
    to cover all six combinations (that is, adding\n   support for statically configured
    associated and co-routed\n   bidirectional plus dynamically configured associated
    bidirectional\n   tunnels).  It also extends support to endpoints that have identifiers\n
    \  other than IP addresses.\n   This support is provided by a suite of four MIB
    modules that are to\n   be used in conjunction with the MIB modules defined in
    [RFC3812] and\n   the companion document [RFC3813] for MPLS-TP tunnel management.\n
    \  At the time of writing, SNMP SET is no longer recommended as a way to\n   configure
    MPLS networks as described in [RFC3812].  However, since\n   the MIB modules specified
    in this document extend and are intended to\n   work in parallel with the MIB
    modules for MPLS specified in\n   [RFC3812], certain objects defined here are
    specified with MAX-ACCESS\n   of read-write or read-create so that specifications
    of the base\n   tables in [RFC3812] and the extensions in this document are\n
    \  consistent.  Although the examples described in Section 9 specify\n   means
    to configure MPLS-TP Tunnels in a similar way to the examples\n   in [RFC3812],
    this should be seen as indicating how the MIB values\n   would be returned if
    the specified circumstances were configured by\n   alternative means.\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - '3.  Overview

    '
  - contents:
    - "3.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this
      document are to be interpreted as described in\n   [RFC2119].\n"
    title: 3.1.  Conventions Used in This Document
  - contents:
    - "3.2.  Terminology\n   This document uses terminology from the \"Multiprotocol
      Label\n   Switching Architecture\" [RFC3031], \"Multiprotocol Label Switching\n
      \  (MPLS) Traffic Engineering (TE) Management Information Base (MIB)\"\n   [RFC3812],
      \"Multiprotocol Label Switching (MPLS) Label Switching\n   Router (LSR) Management
      Information Base (MIB)\" [RFC3813], and\"MPLS\n   Transport Profile (MPLS-TP)
      Identifiers\" [RFC6370].\n"
    title: 3.2.  Terminology
  - contents:
    - "3.3.  Acronyms\n   CC: Country Code\n   ICC: ITU Carrier Code\n   LSP: Label
      Switched Path\n   LSR: Label Switching Router\n   MPLS-TP: MPLS Transport Profile\n
      \  TE: Traffic Engineering\n   TP: Transport Profile\n"
    title: 3.3.  Acronyms
  title: 3.  Overview
- contents:
  - "4.  Motivations\n   \"Multiprotocol Label Switching (MPLS) Traffic Engineering
    (TE)\n   Management Information Base (MIB)\" [RFC3812] provides support for\n
    \  Traffic Engineering tunnels.  In MPLS, the actual transport of\n   packets
    is provided by Label Switched Paths (LSPs).  A transport\n   service may be composed
    of multiple LSPs.  In order to clearly\n   identify the MPLS-TP service, as defined
    in [RFC6370], we use the\n   term \"MPLS-TP Tunnel\" or simply \"tunnel\".  However,
    with MPLS-TP, the\n   characteristics of the tunnels were enhanced.  For example,
    MPLS-TP\n   Tunnels are bidirectional in nature and could be used with non-IP\n
    \  identifiers for the tunnel endpoints.  As the existing\n   MPLS-TE-STD-MIB
    and GMPLS-TE-STD-MIB were defined mainly to support\n   unidirectional tunnels
    and signaled co-routed bidirectional tunnel\n   definitions, respectively, these
    existing MIB modules are not\n   sufficient to capture all the characteristics
    of the tunnels.  Hence,\n   enhancing the MIB modules to support MPLS-TP Tunnels
    is required.  As\n   most of the attributes of MPLS Traffic Engineering tunnels
    are also\n   applicable to MPLS-TP Tunnels, it is optimal to reuse and extend
    the\n   existing MIB module definition instead of defining a new MIB module.\n
    \  This document defines four additional MIB modules, namely,\n   MPLS-TE-EXT-STD-MIB,
    MPLS-TC-EXT-STD-MIB, MPLS-ID-STD-MIB, and\n   MPLS-LSR-EXT-STD-MIB.  As these
    additional MIB modules are required\n   for MPLS-TP functionality, these are all
    defined in this document,\n   instead of being documented separately.\n"
  title: 4.  Motivations
- contents:
  - "5.  Feature List\n   The MIBs in this document satisfy the following requirements
    and\n   constraints:\n   The MIB modules, taken together, support statically configured
    and\n   dynamically signaled point-to-point, co-routed bidirectional and\n   associated
    bidirectional tunnels.\n      - The MPLS tunnels need not be interfaces, but it
    is possible to\n        configure an MPLS-TP Tunnel as an interface.  The same
    ifType\n        150, as defined in Section 8 of [RFC3812], will be used for\n
    \       MPLS-TP Tunnels as well.\n      - The mplsTunnelTable [RFC3812] is also
    to be used for MPLS-TP\n        Tunnels.\n      - New MPLS-TP-specific textual
    conventions and identifiers are\n        required.\n      - The mplsTunnelTable
    is sparsely extended to support objects\n        specific to MPLS-TP Tunnels.\n
    \     - A node configuration table (mplsTunnelExtNodeConfigTable), as\n        detailed
    in Section 6.2.1, below, is used to translate the\n        Global_ID::Node_ID
    or ICC_Operator_ID::Node_ID to the local\n        identifier in order to index
    the mplsTunnelTable.\n      - The mplsXCTable is sparsely extended to support
    objects specific\n        to MPLS-TP XC (Cross Connect).\n      - The MIB module
    supports persistent, as well as non-persistent,\n        tunnels.\n"
  title: 5.  Feature List
- contents:
  - "6.  Outline\n   Traffic Engineering support for the MPLS-TP Tunnels requires
    the\n   setup of the co-routed or associated bidirectional tunnel.  The\n   tables
    and MIB modules that are mentioned in the below subsections\n   support the functionality
    described in [RFC5654] and [RFC6370].\n   These tables support both IP-compatible
    and ICC-based tunnel\n   configurations.\n   Figure 1, below, depicts how the
    table references are followed in\n   this MIB.\n            Tunnel1-->XC1<--------------\n
    \            ^ ^      | |               |\n             | |      | |-->InSeg1
    \     |\n             | |      | |-->OutSeg1     |\n             | |      v                 |\n
    \            |  ------XCext1            |\n             |         |                |\n
    \            V         v                |\n            Tunnel2-->XC1               |\n
    \              ^      | |               |\n               |      | |-->InSeg2
    \     |\n               |      | |-->OutSeg2     |\n               |      v                 |\n
    \               ------XCext2------------\n                 Figure 1: Table References
    of MIB Modules\n"
  - contents:
    - "6.1.  MIB Module Extensions\n   Four MIB modules are extended to support MPLS-TP
      Tunnels, namely,\n   MPLS-TE-EXT-STD-MIB, MPLS-TC-EXT-STD-MIB, MPLS-ID-STD-MIB,
      and\n   MPLS-LSR-EXT-STD-MIB.  The following section provides the summary of\n
      \  changes.\n"
    - contents:
      - "6.1.1.  Summary of MIB Module Changes\n   - Node configuration table (mplsTunnelExtNodeConfigTable)
        for setting\n     the local identifier for Tunnel Ingress and Egress identifiers.\n
        \  - Node IP map table (mplsTunnelExtNodeIpMapTable) for querying the\n     local
        identifier for a given Global_ID and Node_ID.\n   - Node ICC map table (mplsTunnelExtNodeIccMapTable)
        for querying the\n     local identifier for a given ICC_Operator_ID and Node_ID.\n
        \  - Tunnel extension table (mplsTunnelExtTable) for setting up MPLS-TP\n
        \    Tunnels with sparse extension of mplsTunnelTable.\n   - Textual conventions
        and object definitions for MPLS-TP Tunnels.\n   - Cross-connect extension
        table (mplsXCExtTable) for setting up the\n     MPLS-TP LSPs.\n     These
        tables are described in the subsequent sections.\n"
      title: 6.1.1.  Summary of MIB Module Changes
    title: 6.1.  MIB Module Extensions
  - contents:
    - "6.2.  MPLS-TE-EXT-STD-MIB\n     The TE MIB module extensions and details of
      the tables are\n     described in the following sections.\n"
    - contents:
      - "6.2.1.  mplsTunnelExtNodeConfigTable\n   The mplsTunnelExtNodeConfigTable
        is used to assign a local identifier\n   for a given ICC_Operator_ID::Node_ID
        or Global_ID::Node_ID\n   combination as defined in [RFC6923] and [RFC6370],
        respectively.  The\n   CC is a string of two characters, each being an uppercase
        Basic Latin\n   alphabetic (i.e., A-Z).  The ICC is a string of one to six\n
        \  characters, each an uppercase Basic Latin alphabetic (i.e., A-Z) or\n   numeric
        (i.e., 0-9).  All of the characters are encoded using [T.50]\n   as described
        in [RFC6370].\n   In the IP-compatible mode, Global_ID::Node_ID, is used to
        uniquely\n   identify a node.  For each ICC_Operator_ID::Node_ID or\n   Global_ID::Node_ID,
        there is a unique entry in the table representing\n   a node.  As the regular
        TE tunnels use the IP address as the LSR ID,\n   the local identifier should
        be below the first valid IP address,\n   which is 16777216[1.0.0.0].  Every
        node is assigned a local\n   identifier within a range of 0 to 16777215.  This
        local identifier is\n   used for indexing into mplsTunnelTable as mplsTunnelIngressLSRId
        and\n   mplsTunnelEgressLSRId.\n   For IP-compatible environments, an MPLS-TP
        Tunnel is indexed by\n   Tunnel Index, Tunnel Instance, Source Global_ID,
        Source Node_ID,\n   Destination Global_ID, and Destination Node_ID.\n   For
        ICC-based environments, an MPLS-TP Tunnel is indexed by Tunnel\n   Index,
        Tunnel Instance, Source CC, Source ICC, Source Node_ID,\n   Destination CC,
        Destination ICC, and Destination Node_ID.\n   As mplsTunnelTable is indexed
        by mplsTunnelIndex, mplsTunnelInstance,\n   mplsTunnelIngressLSRId, and mplsTunnelEgressLSRId,
        the MPLS-TP tunnel\n   identifiers cannot be used directly.\n   The mplsTunnelExtNodeConfigTable
        will be used to store an entry for\n   ICC_Operator_ID::Node_ID or Global_ID::Node_ID
        with a local\n   identifier to be used as the LSR ID in mplsTunnelTable.\n"
      title: 6.2.1.  mplsTunnelExtNodeConfigTable
    - contents:
      - "6.2.2.  mplsTunnelExtNodeIpMapTable\n   The read-only mplsTunnelExtNodeIpMapTable
        is used to query the local\n   identifier assigned and stored in mplsTunnelExtNodeConfigTable
        for a\n   given Global_ID::Node_ID.  In order to query the local identifier,
        in\n   the IP-compatible mode, this table is indexed with\n   Global_ID::Node_ID.
        \ In the IP-compatible mode for a TP tunnel,\n   Global_ID::Node_ID is used.\n
        \  A separate query is made to get the local identifier of both Ingress\n
        \  and Egress Global_ID::Node_ID identifiers.  These local identifiers\n   are
        used as mplsTunnelIngressLSRId and mplsTunnelEgressLSRId when\n   indexing
        mplsTunnelTable.\n"
      title: 6.2.2.  mplsTunnelExtNodeIpMapTable
    - contents:
      - "6.2.3.  mplsTunnelExtNodeIccMapTable\n   The read-only mplsTunnelExtNodeIccMapTable
        is used to query the local\n   identifier assigned and stored in the mplsTunnelExtNodeConfigTable\n
        \  for a given ICC_Operator_ID::Node_ID.\n   A separate query is made to get
        the local identifier of both Ingress\n   and Egress ICC_Operator_ID::Node_ID.
        \ These local identifiers are\n   used as mplsTunnelIngressLSRId and mplsTunnelEgressLSRId
        when\n   indexing mplsTunnelTable.\n"
      title: 6.2.3.  mplsTunnelExtNodeIccMapTable
    - contents:
      - "6.2.4.  mplsTunnelExtTable\n   This table sparsely extends the mplsTunnelTable
        in order to support\n   MPLS-TP Tunnels with additional objects.  All the
        additional\n   attributes specific to supporting a TP tunnel are contained
        in this\n   extended table and could be accessed with the mplsTunnelTable\n
        \  indices.\n   The gmplsTunnelReversePerfTable [RFC4802] should be used to
        provide\n   per-tunnel packet performance information for the reverse direction\n
        \  of a bidirectional tunnel.  It can be seen as supplementing the\n   mplsTunnelPerfTable,
        which augments the mplsTunnelTable.\n"
      title: 6.2.4.  mplsTunnelExtTable
    title: 6.2.  MPLS-TE-EXT-STD-MIB
  - contents:
    - "6.3.  MPLS-TC-EXT-STD-MIB\n   This MIB module contains textual conventions
      for LSPs of MPLS-based\n   transport networks.\n"
    title: 6.3.  MPLS-TC-EXT-STD-MIB
  - contents:
    - "6.4.  MPLS-ID-STD-MIB\n   This MIB module contains identifier object definitions
      for MPLS\n   Traffic Engineering in transport networks.\n"
    title: 6.4.  MPLS-ID-STD-MIB
  - contents:
    - "6.5.  MPLS-LSR-EXT-STD-MIB\n   This MIB module contains generic object definitions
      (including the\n   mplsXCExtTable -- cross-connect extension table -- for setting
      up the\n   MPLS-TP LSPs with sparse extension of mplsXCTable) for MPLS LSRs
      in\n   transport networks.\n"
    title: 6.5.  MPLS-LSR-EXT-STD-MIB
  - contents:
    - "6.6.  The Use of RowPointer\n   This document follows the RowPointer usage
      as described in Section 10\n   of [RFC3812].\n   A new RowPointer object, mplsTunnelExtOppositeDirPtr,
      is added to\n   mplsTunnelExtTable of MPLS-TE-EXT-STD-MIB module.  This RowPointer\n
      \  object points to the tunnel entry in the opposite direction.\n   Two additional
      RowPointers objects, mplsXCExtTunnelPointer and\n   mplsXCExtOppositeDirXCPtr,
      are added to the mplsXCExtTable of\n   MPLS-LSR-EXT-STD-MIB.  The RowPointer
      mplsXCExtTunnelPointer is a\n   read-only object used to indicate the back pointer
      to the tunnel\n   entry.  The RowPointer mplsXCExtOppositeDirXCPtr object points
      to the\n   opposite-direction XC entry.\n   If either of these RowPointers return
      zeroDotZero, it implies that\n   there is no entry associated with the RowPointer
      object.\n"
    title: 6.6.  The Use of RowPointer
  title: 6.  Outline
- contents:
  - "7.  MIB Modules' Interdependencies\n   This section provides an overview of the
    relationships between the\n   MPLS-TP TE MIB module and other MPLS MIB modules.\n
    \  The arrows in the following diagram show a \"depends on\" relationship.\n   A
    relationship of \"MIB module A depends on MIB module B\" means that\n   MIB module
    A uses an object, object identifier, or textual convention\n   defined in MIB
    module B, or that MIB module A contains a pointer\n   (index or RowPointer) to
    an object in MIB module B.\n       MPLS-TC-EXT-STD-MIB\n          ^\n          |\n
    \         |\n          +<---- MPLS-ID-STD-MIB\n                        ^\n          |
    \            |\n          +<---- MPLS-TE-EXT-STD-MIB\n          |             |\n
    \         |             V\n          |      MPLS-TE-STD-MIB\n          |             |\n
    \         |             |\n          |             V\n          |      MPLS-LSR-STD-MIB\n
    \         |             ^\n          |             |\n          |             |\n
    \         +------MPLS-LSR-EXT-STD-MIB\n       Figure 2: MIB Modules' Interdependencies\n
    \      Thus:\n      - All the new MPLS extension MIB modules depend on\n        MPLS-TC-EXT-STD-MIB.\n
    \     - MPLS-ID-STD-MIB contains references to objects in\n        MPLS-TE-STD-MIB
    [RFC3812].\n      - MPLS-TE-EXT-STD-MIB contains references to objects in\n        MPLS-TE-STD-MIB
    [RFC3812].\n      - MPLS-LSR-EXT-STD-MIB contains references to objects in\n        MPLS-LSR-STD-MIB
    [RFC3813].\n   The mplsTunnelExtTable sparsely extends the mplsTunnelTable of\n
    \  MPLS-TE-STD-MIB [RFC3812].  This helps in associating the reverse-\n   direction
    tunnel information.\n   The mplsXCExtTable sparsely extends the mplsXCTable of\n
    \  MPLS-LSR-STD-MIB [RFC3813].  This helps in pointing back to the\n   tunnel
    entry for easy tunnel access from the XC entry.\n   Note that all of the MIB modules
    shown above in the figure also have\n   a dependency on MPLS-TC-STD-MIB.\n"
  title: 7.  MIB Modules' Interdependencies
- contents:
  - "8.  Dependencies between MIB Module Tables\n   The tables in MPLS-TE-EXT-STD-MIB
    are related as shown on the diagram\n   below.  The arrows indicate a reference
    from one table to another.\n         mplsTunnelExtNodeConfigTable\n              ^
    \         ^       ^\n              |          |       |\n              |          |
    \      |\n              |          |       |\n              |          |       +----------------------+\n
    \             |          |                              |\n              | mplsTunnelExtNodeIpMapTable
    mplsTunnelExtNodeIccMapTable\n              |\n              |              mplsXCExtTable\n
    \             |               |      ^\n              |     +---------+      |\n
    \             |     |                |\n              |     |                |\n
    \             |     V                V\n         mplsTunnelTable ---->mplsXCTable\n
    \             ^\n              |\n              |\n              |\n        mplsTunnelExtTable\n
    \    Figure 3: Dependencies between MIB Module Tables\n   An existing mplsTunnelTable
    uses the mplsTunnelExtNodeConfigTable\n   table to map the Global_ID::Node_ID
    and/or ICC_Operator_ID::Node_ID\n   with the local number in order to accommodate
    in the existing tunnel\n   table's ingress/egress LSR ID.\n   The new mplsTunnelExtTable
    provides the reverse-direction LSP\n   information for the existing tunnel table
    so that bidirectional LSPs\n   can be created.\n   The mplsXCExtTable sparsely
    extends the mplsLsrXCTable to provide\n   backward reference to tunnel entry.\n"
  title: 8.  Dependencies between MIB Module Tables
- contents:
  - "9.  Example of MPLS-TP Tunnel Setup\n   In this section, we provide an example
    of configuring MPLS-TP\n   bidirectional tunnels with IP tunnel identifiers.  This
    example\n   provides the usage of the MPLS-TP Tunnel MIB along with the extended\n
    \  MIB modules introduced in this document.\n   Do note that a MPLS-TP Tunnel
    could be set up statically as well as\n   signaled via the control plane.  This
    example considers accessing MIB\n   objects on a head-end for static and signaled
    MPLS-TP Tunnels.  This\n   section shows the configuration of the forward- and
    reverse-direction\n   MPLS-TP LSPs that run between East and West, and vice versa.
    \ Only\n   objects relevant to MPLS-TP Tunnels are illustrated here.\n   In mplsTunnelExtNodeConfigTable:\n
    \  {\n   -- Non-IP Ingress LSR_ID (Index to the table)\n     mplsTunnelExtNodeConfigLocalId
    \             = 1,\n     mplsTunnelExtNodeConfigGlobalId             = 1234,\n
    \    mplsTunnelExtNodeConfigNodeId               = 10,\n   -- Mandatory parameters
    needed to activate the row go here\n     mplsTunnelExtNodeConfigRowStatus         =
    createAndGo (4)\n   -- Non-IP Egress LSR ID (Index to the table)\n     mplsTunnelExtNodeConfigLocalId
    \             = 2,\n     mplsTunnelExtNodeConfigGlobalId             = 1234,\n
    \    mplsTunnelExtNodeConfigNodeId               = 20,\n   -- Mandatory parameters
    needed to activate the row go here\n     mplsTunnelExtNodeConfigRowStatus         =
    createAndGo (4)\n   }\n   This will create an entry in the mplsTunnelExtNodeConfigTable
    for a\n   Global_ID::Node_ID.  The Ingress and Egress LSR are represented by\n
    \  separate entries.\n   The following read-only mplsTunnelExtNodeIpMapTable table
    is\n   populated automatically upon creating an entry in\n   mplsTunnelExtNodeConfigTable,
    and this table is used to retrieve the\n   local identifier for the given Global_ID::Node_ID.\n
    \  In mplsTunnelExtNodeIpMapTable:\n   {\n   -- Global_ID (Index to the table)\n
    \    mplsTunnelExtNodeIpMapGlobalId             = 1234,\n   -- Node Identifier
    (Index to the table)\n     mplsTunnelExtNodeIpMapNodeId               = 10,\n
    \    mplsTunnelExtNodeIpMapLocalId              = 1\n   -- Global_ID (Index to
    the table)\n     mplsTunnelExtNodeIpMapGlobalId             = 1234,\n   -- Node
    Identifier (Index to the table)\n     mplsTunnelExtNodeIpMapNodeId               =
    20,\n     mplsTunnelExtNodeIpMapLocalId              = 2\n   }\n"
  - contents:
    - "9.1.  Example of MPLS-TP Static Co-routed Bidirectional Tunnel Setup\n   The
      following denotes the co-routed bidirectional tunnel \"head\"\n   entry.\n"
    - contents:
      - "9.1.1.  mplsTunnelEntry\n     In mplsTunnelTable:\n   {\n     mplsTunnelIndex
        \             = 1,\n     mplsTunnelInstance           = 1,\n   -- Local map
        number created in mplsTunnelExtNodeConfigTable for\n   -- Ingress LSR ID\n
        \    mplsTunnelIngressLSRId       = 1,\n   -- Local map number created in
        mplsTunnelExtNodeConfigTable for\n   -- Egress LSR ID\n     mplsTunnelEgressLSRId
        \       = 2,\n     mplsTunnelName               = \"TP co-routed bidirectional
        LSP\",\n     mplsTunnelDescr              = \"East to West\",\n     mplsTunnelIsIf
        \              = true (1),\n   --  RowPointer MUST point to the first accessible
        column\n     mplsTunnelXCPointer          =\n                                mplsXCLspId.4.0.0.0.1.1.0.4.0.0.0.1,\n
        \    mplsTunnelSignallingProto    = none (1),\n     mplsTunnelSetupPrio          =
        0,\n     mplsTunnelHoldingPrio        = 0,\n     mplsTunnelSessionAttributes
        \ = 0,\n     mplsTunnelLocalProtectInUse  = false (0),\n   --  RowPointer
        MUST point to the first accessible column\n     mplsTunnelResourcePointer
        \   = mplsTunnelResourceMaxRate.5,\n     mplsTunnelInstancePriority   = 1,\n
        \    mplsTunnelHopTableIndex      = 1,\n     mplsTunnelIncludeAnyAffinity
        = 0,\n     mplsTunnelIncludeAllAffinity = 0,\n     mplsTunnelExcludeAnyAffinity
        = 0,\n     mplsTunnelRole               = head (1),\n   -- Mandatory parameters
        needed to activate the row go here\n     mplsTunnelRowStatus          = createAndGo
        (4)\n   }\n"
      title: 9.1.1.  mplsTunnelEntry
    - contents:
      - "9.1.2.  mplsTunnelExtEntry\n   -- An MPLS extension table\n   In mplsTunnelExtTable:\n
        \  {\n     -- This opposite-direction tunnel pointer may point to 0.0\n     --
        if co-routed bidirectional tunnel is managed by single tunnel\n     -- entry\n
        \    mplsTunnelExtOppositeDirTnlPtr       = 0.0\n     -- Set both the Ingress
        and Egress LocalId objects to TRUE, as\n     -- this tunnel entry uses the
        local identifiers.\n     mplsTunnelExtIngressLSRLocalIdValid  = true,\n     mplsTunnelExtEgressLSRLocalIdValid
        = true\n   }\n   Next, we must create the appropriate in-segment and out-segment\n
        \  entries.  These are done in [RFC3813] using the mplsInSegmentTable\n   and
        mplsOutSegmentTable.\n"
      title: 9.1.2.  mplsTunnelExtEntry
    - contents:
      - "9.1.3.  Forward-Direction mplsOutSegmentEntry\n   For the forward direction:\n
        \  In mplsOutSegmentTable:\n   {\n      mplsOutSegmentIndex          = 0x0000001,\n
        \     mplsOutSegmentInterface      = 13, -- outgoing interface\n      mplsOutSegmentPushTopLabel
        \  = true(1),\n      mplsOutSegmentTopLabel       = 22, -- outgoing label\n
        \     -- RowPointer MUST point to the first accessible column.\n      mplsOutSegmentTrafficParamPtr
        \  = 0.0,\n      mplsOutSegmentRowStatus         = createAndGo (4)\n   }\n"
      title: 9.1.3.  Forward-Direction mplsOutSegmentEntry
    - contents:
      - "9.1.4.  Reverse-Direction mplsInSegmentEntry\n     For the reverse direction:\n
        \  In mplsInSegmentTable:\n   {\n      mplsInSegmentIndex           = 0x0000001\n
        \     mplsInSegmentLabel           = 21, -- incoming label\n      mplsInSegmentNPop
        \           = 1,\n      mplsInSegmentInterface       = 13, -- incoming interface\n
        \     -- RowPointer MUST point to the first accessible column.\n      mplsInSegmentTrafficParamPtr
        \   = 0.0,\n      mplsInSegmentRowStatus          = createAndGo (4)\n   }\n
        \  Next, two cross-connect entries are created in the mplsXCTable of the\n
        \  MPLS-LSR-STD-MIB [RFC3813], thereby associating the newly created\n   segments
        together.\n"
      title: 9.1.4.  Reverse-Direction mplsInSegmentEntry
    - contents:
      - "9.1.5.  Forward-Direction mplsXCEntry\n   In mplsXCTable:\n   {\n      mplsXCIndex
        \               = 0x01,\n      mplsXCInSegmentIndex       = 0x00000000,\n
        \     mplsXCOutSegmentIndex      = 0x00000001,\n      mplsXCLspId                =
        0x0102 -- unique ID\n      -- only a single outgoing label\n      mplsXCLabelStackIndex
        \     = 0x00,\n      mplsXCRowStatus            = createAndGo(4)\n   }\n"
      title: 9.1.5.  Forward-Direction mplsXCEntry
    - contents:
      - "9.1.6.  Reverse-Direction mplsXCEntry\n   In mplsXCTable:\n   {\n      mplsXCIndex
        \               = 0x01,\n      mplsXCInSegmentIndex       = 0x00000001,\n
        \     mplsXCOutSegmentIndex      = 0x00000000,\n      mplsXCLspId                =
        0x0102 -- unique ID\n      -- only a single outgoing label\n      mplsXCLabelStackIndex
        \     = 0x00,\n      mplsXCRowStatus            = createAndGo(4)\n   }\n   This
        table entry is extended by an entry in the mplsXCExtTable.  Note\n   that
        the nature of the 'extends' relationship is a sparse\n   augmentation so that
        the entry in the mplsXCExtTable has the same\n   index values as the entry
        in the mplsXCTable.\n"
      title: 9.1.6.  Reverse-Direction mplsXCEntry
    - contents:
      - "9.1.7.  Forward-Direction mplsXCExtEntry\n   In mplsXCExtTable (0x01, 0x00000000,
        0x00000001)\n   {\n     -- Back pointer from XC table to Tunnel table\n     mplsXCExtTunnelPointer
        \        = mplsTunnelName.1.1.1.2\n     mplsXCExtOppositeDirXCPtr         =\n
        \                                mplsXCLspId.4.0.0.0.1.4.0.0.0.1.1.0\n   }\n"
      title: 9.1.7.  Forward-Direction mplsXCExtEntry
    - contents:
      - "9.1.8.  Reverse-Direction mplsXCExtEntry\n   Next, for the reverse direction:\n
        \  In mplsXCExtTable (0x01, 0x00000001, 0x00000000)\n   {\n     -- Back pointer
        from XC table to Tunnel table\n     mplsXCExtTunnelPointer         = mplsTunnelName.1.1.1.2\n
        \    mplsXCExtOppositeDirXCPtr         =\n                                 mplsXCLspId.4.0.0.0.1.1.0.4.0.0.0.1\n
        \  }\n"
      title: 9.1.8.  Reverse-Direction mplsXCExtEntry
    title: 9.1.  Example of MPLS-TP Static Co-routed Bidirectional Tunnel Setup
  - contents:
    - "9.2.  Example of MPLS-TP Static Associated Bidirectional Tunnel Setup\n   The
      MPLS-TP associated bidirectional tunnel is implemented by two\n   different
      unidirectional tunnels (Forward and Reverse LSPs), and\n   these are associated
      together using mplsTunnelExtTable.  Two\n   different tunnel entries to provide
      the forward and reverse\n   directions MAY be used for co-routed bidirectional
      tunnels as well.\n   The following denotes the associated bidirectional forward
      tunnel\n   \"head\" entry:\n"
    - contents:
      - "9.2.1.  Forward-Direction mplsTunnelEntry\n     In mplsTunnelTable:\n   {\n
        \    mplsTunnelIndex              = 1,\n     mplsTunnelInstance           =
        1,\n   -- Local map number created in mplsTunnelExtNodeConfigTable for\n   --
        Ingress LSR ID\n     mplsTunnelIngressLSRId       = 1,\n   -- Local map number
        created in mplsTunnelExtNodeConfigTable for\n   -- Egress LSR ID\n     mplsTunnelEgressLSRId
        \       = 2,\n     mplsTunnelName               = \"TP associated bidirectional\n
        \                                    forward LSP\",\n     mplsTunnelDescr
        \             = \"East to West\",\n     mplsTunnelIsIf               = true
        (1),\n   --  RowPointer MUST point to the first accessible column\n     mplsTunnelXCPointer
        \         =\n                                mplsXCLspId.4.0.0.0.1.1.0.4.0.0.0.1,\n
        \    mplsTunnelSignallingProto    = none (1),\n     mplsTunnelSetupPrio          =
        0,\n     mplsTunnelHoldingPrio        = 0,\n     mplsTunnelSessionAttributes
        \ = 0,\n     mplsTunnelLocalProtectInUse  = false (0),\n   --  RowPointer
        MUST point to the first accessible column\n     mplsTunnelResourcePointer
        \   = mplsTunnelResourceMaxRate.5,\n     mplsTunnelInstancePriority   = 1,\n
        \    mplsTunnelHopTableIndex      = 1,\n     mplsTunnelIncludeAnyAffinity
        = 0,\n     mplsTunnelIncludeAllAffinity = 0,\n     mplsTunnelExcludeAnyAffinity
        = 0,\n     mplsTunnelRole               = head (1),\n   -- Mandatory parameters
        needed to activate the row go here\n     mplsTunnelRowStatus          = createAndGo
        (4)\n   }\n"
      title: 9.2.1.  Forward-Direction mplsTunnelEntry
    - contents:
      - "9.2.2.  Forward-Direction mplsTunnelExtEntry\n   For the associated bidirectional
        forward LSP,\n   in mplsTunnelExtTable:\n   {\n     mplsTunnelExtOppositeDirPtr
        \      = mplsTunnelName.2.1.2.1\n    -- Set both the Ingress and Egress LocalId
        objects to TRUE, as\n    -- this tunnel entry uses the local identifiers.\n
        \    mplsTunnelExtIngressLSRLocalIdValid  = true,\n     mplsTunnelExtEgressLSRLocalIdValid
        = true\n   }\n"
      title: 9.2.2.  Forward-Direction mplsTunnelExtEntry
    - contents:
      - "9.2.3.  Forward-Direction mplsOutSegmentTable\n   For the forward direction:\n
        \  In mplsOutSegmentTable:\n   {\n      mplsOutSegmentIndex          = 0x0000001,\n
        \     mplsOutSegmentInterface      = 13, -- outgoing interface\n      mplsOutSegmentPushTopLabel
        \  = true(1),\n      mplsOutSegmentTopLabel       = 22, -- outgoing label\n
        \     -- RowPointer MUST point to the first accessible column.\n      mplsOutSegmentTrafficParamPtr
        \  = 0.0,\n      mplsOutSegmentRowStatus         = createAndGo (4)\n   }\n"
      title: 9.2.3.  Forward-Direction mplsOutSegmentTable
    - contents:
      - "9.2.4.  Forward-Direction mplsXCEntry\n   In mplsXCTable:\n   {\n      mplsXCIndex
        \               = 0x01,\n      mplsXCInSegmentIndex       = 0x00000000,\n
        \     mplsXCOutSegmentIndex      = 0x00000001,\n      mplsXCLspId                =
        0x0102 -- unique ID\n      -- only a single outgoing label\n      mplsXCLabelStackIndex
        \     = 0x00,\n      mplsXCRowStatus            = createAndGo(4)\n   }\n"
      title: 9.2.4.  Forward-Direction mplsXCEntry
    - contents:
      - "9.2.5.  Forward-Direction mplsXCExtEntry\n   In mplsXCExtTable (0x01, 0x00000000,
        0x00000001)\n   {\n     -- Back pointer from XC table to Tunnel table\n     mplsXCExtTunnelPointer
        \        = mplsTunnelName.1.1.1.2\n     mplsXCExtOppositeDirXCPtr         =\n
        \                               mplsXCLspId.4.0.0.0.1.4.0.0.0.1.1.0\n   }\n"
      title: 9.2.5.  Forward-Direction mplsXCExtEntry
    - contents:
      - "9.2.6.  Reverse-Direction mplsTunnelEntry\n   The following denotes the configured
        associated bidirectional reverse\n   tunnel \"tail\" entry:\n       In mplsTunnelTable:\n
        \  {\n     mplsTunnelIndex              = 2,\n     mplsTunnelInstance           =
        1,\n   -- Local map number created in mplsTunnelExtNodeConfigTable for\n   --
        Ingress LSR ID\n     mplsTunnelIngressLSRId       = 2,\n   -- Local map number
        created in mplsTunnelExtNodeConfigTable for\n   -- Egress LSR ID\n     mplsTunnelEgressLSRId
        \       = 1,\n     mplsTunnelName               = \"TP associated bidirectional\n
        \                                    reverse LSP\",\n     mplsTunnelDescr
        \             = \"West to East\",\n     mplsTunnelIsIf               = true
        (1),\n   --  RowPointer MUST point to the first accessible column\n     mplsTunnelXCPointer
        \         =\n                                mplsXCLspId.4.0.0.0.1.4.0.0.0.1.1.0,\n
        \    mplsTunnelSignallingProto    = none (1),\n     mplsTunnelSetupPrio          =
        0,\n     mplsTunnelHoldingPrio        = 0,\n     mplsTunnelSessionAttributes
        \ = 0,\n     mplsTunnelLocalProtectInUse  = false (0),\n   --  RowPointer
        MUST point to the first accessible column\n     mplsTunnelResourcePointer
        \   = mplsTunnelResourceMaxRate.5,\n     mplsTunnelInstancePriority   = 1,\n
        \    mplsTunnelHopTableIndex      = 1,\n     mplsTunnelIncludeAnyAffinity
        = 0,\n     mplsTunnelIncludeAllAffinity = 0,\n     mplsTunnelExcludeAnyAffinity
        = 0,\n     mplsTunnelRole               = head (1),\n   -- Mandatory parameters
        needed to activate the row go here\n     mplsTunnelRowStatus          = createAndGo
        (4)\n   }\n"
      title: 9.2.6.  Reverse-Direction mplsTunnelEntry
    - contents:
      - "9.2.7.  Reverse-Direction mplsTunnelExtEntry\n   For the associated bidirectional
        reverse LSP,\n   in mplsTunnelExtTable:\n   {\n     mplsTunnelExtOppositeDirPtr
        \      = mplsTunnelName.1.1.1.2\n     -- Set both the Ingress and Egress LocalId
        objects to TRUE, as\n     -- this tunnel entry uses the local identifiers.\n
        \    mplsTunnelExtIngressLSRLocalIdValid  = true,\n     mplsTunnelExtEgressLSRLocalIdValid
        = true\n   }\n"
      title: 9.2.7.  Reverse-Direction mplsTunnelExtEntry
    - contents:
      - "9.2.8.  Reverse-Direction mplsInSegmentEntry\n   Next, we must create the
        appropriate in-segment and out-segment\n   entries.  These are done in [RFC3813]
        using the mplsInSegmentTable\n   and mplsOutSegmentTable.\n   In mplsInSegmentTable:\n
        \  {\n      mplsInSegmentIndex           = 0x0000001\n      mplsInSegmentLabel
        \          = 21, -- incoming label\n      mplsInSegmentNPop            = 1,\n
        \     mplsInSegmentInterface       = 13, -- incoming interface\n      -- RowPointer
        MUST point to the first accessible column.\n      mplsInSegmentTrafficParamPtr
        \   = 0.0,\n      mplsInSegmentRowStatus          = createAndGo (4)\n   }\n
        \  Next, two cross-connect entries are created in the mplsXCTable of the\n
        \  MPLS-LSR-STD-MIB [RFC3813], thereby associating the newly created\n   segments
        together.\n"
      title: 9.2.8.  Reverse-Direction mplsInSegmentEntry
    - contents:
      - "9.2.9.  Reverse-Direction mplsXCEntry\n   In mplsXCTable:\n   {\n      mplsXCIndex
        \               = 0x01,\n      mplsXCInSegmentIndex       = 0x00000001,\n
        \     mplsXCOutSegmentIndex      = 0x00000000,\n      mplsXCLspId                =
        0x0102 -- unique ID\n      -- only a single outgoing label\n      mplsXCLabelStackIndex
        \     = 0x00,\n      mplsXCRowStatus            = createAndGo(4)\n   }\n   This
        table entry is extended by an entry in the mplsXCExtTable.  Note\n   that
        the nature of the 'extends' relationship is a sparse\n   augmentation so that
        the entry in the mplsXCExtTable has the same\n   index values as the entry
        in the mplsXCTable.\n"
      title: 9.2.9.  Reverse-Direction mplsXCEntry
    - contents:
      - "9.2.10.  Reverse-Direction mplsXCExtEntry\n   Next, for the reverse direction:\n
        \  In mplsXCExtTable (0x01, 0x00000001, 0x00000000)\n   {\n     -- Back pointer
        from XC table to Tunnel table\n     mplsXCExtTunnelPointer         = mplsTunnelName.2.1.2.1\n
        \    mplsXCExtOppositeDirXCPtr         =\n                              mplsXCLspId.4.0.0.0.1.1.0.4.0.0.0.1\n
        \  }\n"
      title: 9.2.10.  Reverse-Direction mplsXCExtEntry
    title: 9.2.  Example of MPLS-TP Static Associated Bidirectional Tunnel Setup
  - contents:
    - "9.3.  Example of MPLS-TP Signaled Co-routed Bidirectional Tunnel Setup\n   The
      following denotes the co-routed bidirectional tunnel \"head\"\n   entry.  In
      intermediate and tail-end nodes, the tunnel table and its\n   associated tables
      are created by the local management subsystem\n   (e.g., agent) when the MPLS-TP
      Tunnel is signaled successfully.\n   Refer to [RFC3812] and [RFC4802] for examples
      of signaled tunnel\n   table configuration.\n"
    - contents:
      - "9.3.1.  mplsTunnelEntry\n     In mplsTunnelTable:\n   {\n     mplsTunnelIndex
        \             = 1,\n     mplsTunnelInstance           = 0,\n   -- Local map
        number created in mplsTunnelExtNodeConfigTable for\n   -- Ingress LSR-Id.
        \ For the intermediate and tail-end nodes,\n   -- the local management entity
        is expected to pick the first\n   -- available local identifier that is not
        used in mplsTunnelTable.\n     mplsTunnelIngressLSRId       = 1,\n   -- Local
        map number created in mplsTunnelExtNodeConfigTable for\n   -- Egress LSR ID\n
        \    mplsTunnelEgressLSRId        = 2,\n     mplsTunnelName               =
        \"TP co-routed bidirectional LSP\",\n     mplsTunnelDescr              = \"East
        to West\",\n     mplsTunnelIsIf               = true (1),\n   --  RowPointer
        MUST point to the first accessible column\n     mplsTunnelXCPointer          =\n
        \                               mplsXCLspId.4.0.0.0.1.1.0.4.0.0.0.1,\n     mplsTunnelSignallingProto
        \   = none (1),\n     mplsTunnelSetupPrio          = 0,\n     mplsTunnelHoldingPrio
        \       = 0,\n     mplsTunnelSessionAttributes  = 0,\n     mplsTunnelLocalProtectInUse
        \ = false (0),\n   --  RowPointer MUST point to the first accessible column\n
        \    mplsTunnelResourcePointer    = mplsTunnelResourceMaxRate.5,\n     mplsTunnelInstancePriority
        \  = 1,\n     mplsTunnelHopTableIndex      = 1,\n     mplsTunnelIncludeAnyAffinity
        = 0,\n     mplsTunnelIncludeAllAffinity = 0,\n     mplsTunnelExcludeAnyAffinity
        = 0,\n     mplsTunnelRole               = head (1),\n   -- Mandatory parameters
        needed to activate the row go here\n     mplsTunnelRowStatus          = createAndGo
        (4)\n   }\n"
      title: 9.3.1.  mplsTunnelEntry
    - contents:
      - "9.3.2.  mplsTunnelExtEntry\n   -- An MPLS extension table\n   In mplsTunnelExtTable:\n
        \  {\n     -- This opposite-direction tunnel pointer may point to 0.0\n     --
        if co-routed bidirectional tunnel is managed by a single\n     -- tunnel entry\n
        \    mplsTunnelExtOppositeDirTnlPtr       = 0.0\n     -- Set both the Ingress
        and Egress LocalId objects to TRUE, as\n     -- this tunnel entry uses the
        local identifiers.\n     mplsTunnelExtIngressLSRLocalIdValid  = true,\n     mplsTunnelExtEgressLSRLocalIdValid
        = true\n   }\n   Next, we must create the appropriate in-segment and out-segment\n
        \  entries.  These are done in [RFC3813] using the mplsInSegmentTable\n   and
        mplsOutSegmentTable.\n"
      title: 9.3.2.  mplsTunnelExtEntry
    - contents:
      - "9.3.3.  Forward-Direction mplsOutSegmentEntry\n   The forward-direction mplsOutSegmentTable
        will be populated\n   automatically based on the information received from
        the signaling\n   protocol.\n"
      title: 9.3.3.  Forward-Direction mplsOutSegmentEntry
    - contents:
      - "9.3.4.  Reverse-Direction mplsInSegmentEntry\n   The reverse-direction mplsOutSegmentTable
        will be populated\n   automatically based on the information received from
        the signaling\n   protocol.\n   Next, two cross-connect entries are created
        in the mplsXCTable of the\n   MPLS-LSR-STD-MIB [RFC3813], thereby associating
        the newly created\n   segments together.\n"
      title: 9.3.4.  Reverse-Direction mplsInSegmentEntry
    - contents:
      - "9.3.5.  Forward-Direction mplsXCEntry\n   The forward-direction mplsXCEntry
        will be populated as soon as the\n   forward-path label information is available.\n"
      title: 9.3.5.  Forward-Direction mplsXCEntry
    - contents:
      - "9.3.6.  Reverse-Direction mplsXCEntry\n   The reverse-direction mplsXCEntry
        will be populated as soon as the\n   reverse-path label information is available.\n
        \  This table entry is extended by an entry in the mplsXCExtTable.  Note\n
        \  that the nature of the 'extends' relationship is a sparse\n   augmentation
        so that the entry in the mplsXCExtTable has the same\n   index values as the
        entry in the mplsXCTable.\n"
      title: 9.3.6.  Reverse-Direction mplsXCEntry
    - contents:
      - "9.3.7.  Forward-Direction mplsXCExtEntry\n   Once the forward path information
        is negotiated using the signaling\n   protocol, the forward-direction mplsXCExtEntry
        will be created for\n   associating the opposite-direction XC entry and tunnel
        table entry.\n"
      title: 9.3.7.  Forward-Direction mplsXCExtEntry
    - contents:
      - "9.3.8.  Reverse-Direction mplsXCExtEntry\n   Once the reverse path information
        is negotiated using the signaling\n   protocol, the reverse-direction mplsXCExtEntry
        will be created for\n   associating the opposite-direction XC entry and tunnel
        table entry.\n"
      title: 9.3.8.  Reverse-Direction mplsXCExtEntry
    title: 9.3.  Example of MPLS-TP Signaled Co-routed Bidirectional Tunnel Setup
  title: 9.  Example of MPLS-TP Tunnel Setup
- contents:
  - "10.  MPLS Textual Convention Extension MIB Definitions\n   MPLS-TC-EXT-STD-MIB
    DEFINITIONS ::= BEGIN\n   IMPORTS\n      MODULE-IDENTITY, Unsigned32\n         FROM
    SNMPv2-SMI               -- RFC 2578\n      TEXTUAL-CONVENTION\n         FROM
    SNMPv2-TC                -- RFC 2579\n      mplsStdMIB\n         FROM MPLS-TC-STD-MIB
    \         -- RFC 3811\n      ;\n   mplsTcExtStdMIB MODULE-IDENTITY\n      LAST-UPDATED\n
    \        \"201502020000Z\" -- February 2, 2015\n      ORGANIZATION\n         \"Multiprotocol
    Label Switching (MPLS) Working Group\"\n      CONTACT-INFO\n         \"\n                Venkatesan
    Mahalingam\n                Dell Inc,\n                5450 Great America Parkway,\n
    \               Santa Clara, CA 95054, USA\n          Email: venkat.mahalingams@gmail.com\n
    \               Kannan KV Sampath\n                Redeem,\n                India\n
    \         Email: kannankvs@gmail.com\n                Sam Aldrin\n                Huawei
    Technologies\n                2330 Central Express Way,\n                Santa
    Clara, CA 95051, USA\n          Email:  aldrin.ietf@gmail.com\n                Thomas
    D. Nadeau\n          Email: tnadeau@lucidvision.com\n         \"\n      DESCRIPTION\n
    \        \"This MIB module contains Textual Conventions for LSPs of MPLS-\n          based
    transport networks.\n          Copyright (c) 2015 IETF Trust and the persons identified
    as\n          authors of the code.  All rights reserved.\n          Redistribution
    and use in source and binary forms, with or\n          without modification, is
    permitted pursuant to, and subject to\n          the license terms contained in,
    the Simplified BSD License set\n          forth in Section 4.c of the IETF Trust's
    Legal Provisions\n          Relating to IETF Documents\n          (http://trustee.ietf.org/license-info).\"\n
    \     -- Revision history.\n      REVISION\n         \"201502020000Z\" -- February
    2, 2015\n      DESCRIPTION\n           \"MPLS Textual Convention Extensions\"\n
    \     ::= { mplsStdMIB 17 }\n   MplsGlobalId ::= TEXTUAL-CONVENTION\n      STATUS
    \     current\n      DESCRIPTION\n           \"This object contains the Textual
    Convention for an IP-based\n            operator-unique identifier (Global_ID).
    \ The Global_ID can\n            contain the 2-octet or 4-octet value of the operator's\n
    \           Autonomous System Number (ASN).\n            When the Global_ID is
    derived from a 2-octet ASN,\n            the two high-order octets of this 4-octet
    identifier\n            MUST be set to zero (0x00).  Further, ASN 0 is reserved.\n
    \           The size of the Global_ID string MUST be zero if\n            the
    Global_ID is invalid.\n            Note that a Global_ID of zero is limited to
    entities\n            contained within a single operator and MUST NOT be used\n
    \           across a Network-to-Network Interface (NNI).  A non-zero\n            Global_ID
    MUST be derived from an ASN owned by\n            the operator.\"\n      REFERENCE\n
    \          \"MPLS Transport Profile (MPLS-TP) Identifiers, RFC 6370,\n            Section
    3\"\n      SYNTAX  OCTET STRING (SIZE (4))\n   MplsCcId ::= TEXTUAL-CONVENTION\n
    \  STATUS      current\n   DESCRIPTION\n        \"The CC (Country Code) is a string
    of two characters, each\n         being an uppercase Basic Latin alphabetic (i.e.,
    A-Z).\n         The characters are encoded using ITU-T Recommendation T.50.\n
    \        The size of the CC string MUST be zero if the CC identifier\n         is
    invalid.\"\n   REFERENCE\n        \"MPLS-TP Identifiers Following ITU-T Conventions,\n
    \        RFC 6923, Section 3.\n         International Reference Alphabet (IRA)
    (Formerly\n         International Alphabet No. 5 or IA5) - Information\n         technology
    - 7-bit coded character set for information\n         exchange, ITU-T Recommendation
    T.50, September 1992.\"\n   SYNTAX  OCTET STRING (SIZE (0|2))\n   MplsIccId ::=
    TEXTUAL-CONVENTION\n   STATUS      current\n   DESCRIPTION\n        \"The ICC
    is a string of one to six characters, each\n         an uppercase Basic Latin
    alphabetic (i.e., A-Z) or\n         numeric (i.e., 0-9).  The characters are encoded\n
    \        using ITU-T Recommendation T.50.  The size of\n         the ICC string
    MUST be zero if the ICC identifier\n         is invalid.\"\n   REFERENCE\n        \"MPLS-TP
    Identifiers Following ITU-T Conventions,\n         RFC 6923, Section 3.\n         International
    Reference Alphabet (IRA) (Formerly\n         International Alphabet No. 5 or IA5)
    - Information\n         technology - 7-bit coded character set for information\n
    \        exchange, ITU-T Recommendation T.50, September 1992.\"\n   SYNTAX  OCTET
    STRING (SIZE (0|1..6))\n   MplsNodeId ::= TEXTUAL-CONVENTION\n      DISPLAY-HINT
    \"d\"\n      STATUS      current\n      DESCRIPTION\n          \"The Node_ID is
    assigned within the scope of\n           the Global_ID/ICC_Operator_ID.\n           When
    IPv4 addresses are in use, the value of this object\n           can be derived
    from the LSR's IPv4 loopback address.\n           When IPv6 addresses are in use,
    the value of this object\n           can be a 32-bit value unique within the scope
    of\n           a Global_ID.\n           Note that, when IP reachability is not
    needed, the 32-bit\n           Node_ID is not required to have any association\n
    \          with the IPv4 address space.  The value of 0 indicates\n           an
    invalid Node_ID.\"\n      REFERENCE\n           \"MPLS Transport Profile (MPLS-TP)
    Identifiers, RFC 6370,\n            Section 4\"\n      SYNTAX  Unsigned32 (0|1..4294967295)\n
    \    -- MPLS-TC-EXT-STD-MIB module ends\n     END\n"
  title: 10.  MPLS Textual Convention Extension MIB Definitions
- contents:
  - "11.  MPLS Identifier MIB Definitions\n   MPLS-ID-STD-MIB DEFINITIONS ::= BEGIN\n
    \  IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE\n       FROM SNMPv2-SMI                                 --
    RFC 2578\n    MODULE-COMPLIANCE, OBJECT-GROUP\n       FROM SNMPv2-CONF                                --
    RFC 2580\n    mplsStdMIB\n       FROM MPLS-TC-STD-MIB                            --
    RFC 3811\n    MplsGlobalId, MplsCcId, MplsIccId, MplsNodeId\n       FROM MPLS-TC-EXT-STD-MIB\n
    \   ;\n  mplsIdStdMIB MODULE-IDENTITY\n    LAST-UPDATED\n        \"201502020000Z\"
    -- February 2, 2015\n    ORGANIZATION\n       \"Multiprotocol Label Switching
    (MPLS) Working Group\"\n    CONTACT-INFO\n       \"\n              Venkatesan
    Mahalingam\n              Dell Inc,\n              5450 Great America Parkway,\n
    \             Santa Clara, CA 95054, USA\n        Email: venkat.mahalingams@gmail.com\n
    \             Kannan KV Sampath\n              Redeem,\n              India\n
    \       Email: kannankvs@gmail.com\n              Sam Aldrin\n              Huawei
    Technologies\n              2330 Central Express Way,\n              Santa Clara,
    CA 95051, USA\n        Email:  aldrin.ietf@gmail.com\n              Thomas D.
    Nadeau\n        Email: tnadeau@lucidvision.com\n      \"\n    DESCRIPTION\n        \"This
    MIB module contains identifier object definitions for\n         MPLS Traffic Engineering
    in transport networks.\n         Copyright (c) 2015 IETF Trust and the persons
    identified as\n         authors of the code.  All rights reserved.\n         Redistribution
    and use in source and binary forms, with or\n         without modification, is
    permitted pursuant to, and subject to\n         the license terms contained in,
    the Simplified BSD License set\n         forth in Section 4.c of the IETF Trust's
    Legal Provisions\n         Relating to IETF Documents\n         (http://trustee.ietf.org/license-info).\"\n
    \   -- Revision history.\n    REVISION\n        \"201502020000Z\" -- February
    2, 2015\n    DESCRIPTION\n         \"This MIB modules defines the MIB objects
    for MPLS-TP\n          identifiers\"\n    ::= { mplsStdMIB 18 }\n    -- notifications\n
    \   mplsIdNotifications OBJECT IDENTIFIER ::= { mplsIdStdMIB 0 }\n    -- tables,
    scalars\n    mplsIdObjects       OBJECT IDENTIFIER ::= { mplsIdStdMIB 1 }\n    --
    conformance\n    mplsIdConformance   OBJECT IDENTIFIER ::= { mplsIdStdMIB 2 }\n
    \   -- MPLS common objects\n  mplsIdGlobalId OBJECT-TYPE\n       SYNTAX      MplsGlobalId\n
    \      MAX-ACCESS  read-write\n       STATUS      current\n       DESCRIPTION\n
    \          \"This object allows the operator or service provider to\n            assign
    a unique operator identifier, also called the MPLS-TP\n            Global_ID.\n
    \           If this value is used in mplsTunnelExtNodeConfigGlobalId\n            for
    mapping Global_ID::Node_ID with the local identifier,\n            then this object
    value MUST NOT be changed.\"\n      ::= { mplsIdObjects 1 }\n  mplsIdNodeId OBJECT-TYPE\n
    \      SYNTAX      MplsNodeId\n       MAX-ACCESS  read-write\n       STATUS      current\n
    \      DESCRIPTION\n          \"This object allows the operator or service provider
    to\n           assign a unique MPLS-TP Node_ID.  The Node_ID is assigned\n           within
    the scope of the Global_ID/ICC_Operator_ID.\n           If this value is used
    in mplsTunnelExtNodeConfigNodeId\n           for mapping Global_ID::Node_ID with
    the local identifier,\n           then this object value SHOULD NOT be changed.\n
    \          If this value is used in mplsTunnelExtNodeConfigNodeId\n           for
    mapping ICC_Operator_ID::Node_ID with the local\n           identifier, then this
    object value MUST NOT be changed.\"\n      ::= { mplsIdObjects 2 }\n  mplsIdCc
    OBJECT-TYPE\n       SYNTAX      MplsCcId\n       MAX-ACCESS  read-write\n       STATUS
    \     current\n       DESCRIPTION\n          \"This object allows the operator
    or service provider to\n           assign a Country Code (CC) to the node.  Global\n
    \          uniqueness of ICC is assured by concatenating the ICC\n           with
    a Country Code (CC).\n           If this value is used in mplsTunnelExtNodeConfigCcId\n
    \          for mapping ICC_Operator_ID::Node_ID with the local\n           identifier,
    then this object value MUST NOT be changed.\"\n      REFERENCE\n           \"MPLS-TP
    Identifiers Following ITU-T Conventions,\n            RFC 6923, Section 3\"\n
    \         ::= { mplsIdObjects 3 }\n  mplsIdIcc OBJECT-TYPE\n       SYNTAX      MplsIccId\n
    \      MAX-ACCESS  read-write\n       STATUS      current\n       DESCRIPTION\n
    \         \"This object allows the operator or service provider to\n           assign
    a unique MPLS-TP ITU-T Carrier Code (ICC) to\n           the node.  Together,
    the CC and the ICC form\n           the ICC_Operator_ID as CC::ICC.\n           If
    this value is used in mplsTunnelExtNodeConfigIccId\n           for mapping ICC_Operator_ID::Node_ID
    with the local\n           identifier, then this object value MUST NOT be changed.\"\n
    \     REFERENCE\n           \"MPLS-TP Identifiers Following ITU-T Conventions,\n
    \           RFC 6923, Section 3\"\n          ::= { mplsIdObjects 4 }\n   -- Module
    compliance.\n  mplsIdCompliances\n     OBJECT IDENTIFIER ::= { mplsIdConformance
    1 }\n  mplsIdGroups\n     OBJECT IDENTIFIER ::= { mplsIdConformance 2 }\n  --
    Compliance requirement for fully compliant implementations.\n  mplsIdModuleFullCompliance
    MODULE-COMPLIANCE\n     STATUS current\n     DESCRIPTION\n          \"Compliance
    statement for agents that provide full\n            support of the MPLS-ID-STD-MIB
    module.\"\n     MODULE -- this module\n        -- The mandatory group has to be
    implemented by all LSRs that\n        -- originate, terminate, or act as transit
    for MPLS-TP Tunnels.\n        GROUP mplsIdIpOperatorGroup\n        DESCRIPTION\n
    \           \"This group is mandatory for devices that support\n             IP-based
    identifier configuration.\"\n        GROUP mplsIdIccOperatorGroup\n        DESCRIPTION\n
    \           \"This group is mandatory for devices that support\n             ICC-based
    identifier configuration.\"\n         ::= { mplsIdCompliances 1 }\n         --
    Compliance requirement for read-only implementations.\n        mplsIdModuleReadOnlyCompliance
    MODULE-COMPLIANCE\n           STATUS current\n           DESCRIPTION\n                \"Compliance
    statement for agents that only provide\n                 read-only support for
    the MPLS-ID-STD-MIB module.\"\n        MODULE -- this module\n        GROUP mplsIdIpOperatorGroup\n
    \       DESCRIPTION\n            \"This group is mandatory for devices that support\n
    \            IP-based identifier configuration.\"\n        GROUP mplsIdIccOperatorGroup\n
    \       DESCRIPTION\n            \"This group is mandatory for devices that support\n
    \            ICC-based identifier configuration.\"\n        OBJECT   mplsIdGlobalId\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n          \"Write access is
    not required.\"\n        OBJECT   mplsIdNodeId\n        MIN-ACCESS  read-only\n
    \       DESCRIPTION\n          \"Write access is not required.\"\n        OBJECT
    \  mplsIdCc\n        MIN-ACCESS  read-only\n        DESCRIPTION\n          \"Write
    access is not required.\"\n        OBJECT   mplsIdIcc\n        MIN-ACCESS  read-only\n
    \       DESCRIPTION\n          \"Write access is not required.\"\n        ::=
    { mplsIdCompliances 2 }\n    -- Units of conformance.\n        mplsIdIpOperatorGroup
    OBJECT-GROUP\n              OBJECTS { mplsIdGlobalId,\n                        mplsIdNodeId\n
    \             }\n              STATUS  current\n              DESCRIPTION\n                  \"The
    objects in this group are optional for an\n                   ICC-based node.\"\n
    \             ::= { mplsIdGroups 1 }\n        mplsIdIccOperatorGroup OBJECT-GROUP\n
    \             OBJECTS { mplsIdNodeId,\n                        mplsIdCc,\n                        mplsIdIcc\n
    \             }\n              STATUS  current\n              DESCRIPTION\n                 \"The
    objects in this group are optional for an\n                  IP-based node.\"\n
    \             ::= { mplsIdGroups 2 }\n   -- MPLS-ID-STD-MIB module ends\n   END\n"
  title: 11.  MPLS Identifier MIB Definitions
- contents:
  - "12.  MPLS LSR Extension MIB Definitions\n   MPLS-LSR-EXT-STD-MIB DEFINITIONS
    ::= BEGIN\n   IMPORTS\n      MODULE-IDENTITY, OBJECT-TYPE\n         FROM SNMPv2-SMI
    \                                -- RFC 2578\n      MODULE-COMPLIANCE, OBJECT-GROUP\n
    \        FROM SNMPv2-CONF                                -- RFC 2580\n      mplsStdMIB\n
    \        FROM MPLS-TC-STD-MIB                            -- RFC 3811\n      RowPointer\n
    \        FROM SNMPv2-TC                                  -- RFC 2579\n      mplsXCIndex,
    mplsXCInSegmentIndex, mplsXCOutSegmentIndex,\n      mplsInterfaceGroup, mplsInSegmentGroup,
    mplsOutSegmentGroup,\n      mplsXCGroup, mplsLsrNotificationGroup\n         FROM
    MPLS-LSR-STD-MIB;                          -- RFC 3813\n   mplsLsrExtStdMIB MODULE-IDENTITY\n
    \     LAST-UPDATED\n         \"201502020000Z\" -- February 2, 2015\n      ORGANIZATION\n
    \        \"Multiprotocol Label Switching (MPLS) Working Group\"\n      CONTACT-INFO\n
    \        \"\n                Venkatesan Mahalingam\n                Dell Inc,\n
    \               5450 Great America Parkway,\n                Santa Clara, CA 95054,
    USA\n          Email: venkat.mahalingams@gmail.com\n                Kannan KV
    Sampath\n                Redeem,\n                India\n          Email: kannankvs@gmail.com\n
    \               Sam Aldrin\n                Huawei Technologies\n                2330
    Central Express Way,\n                Santa Clara, CA 95051, USA\n          Email:
    \ aldrin.ietf@gmail.com\n                Thomas D. Nadeau\n          Email: tnadeau@lucidvision.com\n
    \       \"\n      DESCRIPTION\n        \"This MIB module contains generic object
    definitions for\n         MPLS LSRs in transport networks.\n         Copyright
    (c) 2015 IETF Trust and the persons identified as\n         authors of the code.
    \ All rights reserved.\n         Redistribution and use in source and binary forms,
    with or\n         without modification, is permitted pursuant to, and subject
    to\n         the license terms contained in, the Simplified BSD License set\n
    \        forth in Section 4.c of the IETF Trust's Legal Provisions\n         Relating
    to IETF Documents\n         (http://trustee.ietf.org/license-info).\"\n      --
    Revision history.\n      REVISION\n         \"201502020000Z\" -- February 2, 2015\n
    \     DESCRIPTION\n           \"MPLS LSR-specific MIB objects extension\"\n      ::=
    { mplsStdMIB 19 }\n   -- notifications\n   mplsLsrExtNotifications OBJECT IDENTIFIER
    ::= { mplsLsrExtStdMIB 0 }\n   -- tables, scalars\n   mplsLsrExtObjects       OBJECT
    IDENTIFIER\n                            ::= { mplsLsrExtStdMIB 1 }\n   -- conformance\n
    \  mplsLsrExtConformance   OBJECT IDENTIFIER\n                            ::=
    { mplsLsrExtStdMIB 2 }\n   -- MPLS LSR common objects\n   mplsXCExtTable  OBJECT-TYPE\n
    \      SYNTAX        SEQUENCE OF MplsXCExtEntry\n       MAX-ACCESS    not-accessible\n
    \      STATUS        current\n       DESCRIPTION\n          \"This table sparse
    augments the mplsXCTable of\n           MPLS-LSR-STD-MIB (RFC 3813) to provide
    MPLS-TP-specific\n           information about associated tunnel information\"\n
    \      REFERENCE\n          \"Multiprotocol Label Switching (MPLS) Label Switching\n
    \          Router (LSR) Management Information Base (MIB), RFC 3813.\"\n   ::=
    { mplsLsrExtObjects 1 }\n   mplsXCExtEntry  OBJECT-TYPE\n       SYNTAX        MplsXCExtEntry\n
    \      MAX-ACCESS    not-accessible\n       STATUS        current\n       DESCRIPTION\n
    \         \"An entry in this table sparsely extends the cross-connect\n           information
    represented by an entry in\n           the mplsXCTable in MPLS-LSR-STD-MIB (RFC
    3813) through\n           a sparse augmentation.  An entry can be created by\n
    \          a network operator via SNMP SET commands or in\n           response
    to signaling protocol events.\"\n       REFERENCE\n          \"Multiprotocol Label
    Switching (MPLS) Label Switching\n           Router (LSR) Management Information
    Base (MIB), RFC 3813.\"\n     INDEX { mplsXCIndex, mplsXCInSegmentIndex,\n           mplsXCOutSegmentIndex
    }\n    ::= { mplsXCExtTable 1 }\n   MplsXCExtEntry ::= SEQUENCE {\n      mplsXCExtTunnelPointer
    \       RowPointer,\n      mplsXCExtOppositeDirXCPtr     RowPointer\n   }\n   mplsXCExtTunnelPointer
    OBJECT-TYPE\n       SYNTAX        RowPointer\n       MAX-ACCESS    read-only\n
    \      STATUS        current\n       DESCRIPTION\n          \"This read-only object
    indicates the back pointer to\n           the tunnel entry segment.\n           The
    only valid value for Tunnel Pointer is\n           mplsTunnelTable entry.\"\n
    \      REFERENCE\n          \"Multiprotocol Label Switching (MPLS) Label Switching\n
    \          Router (LSR) Management Information Base (MIB), RFC 3813.\"\n    ::=
    { mplsXCExtEntry 1 }\n   mplsXCExtOppositeDirXCPtr OBJECT-TYPE\n       SYNTAX
    \       RowPointer\n       MAX-ACCESS    read-create\n       STATUS        current\n
    \      DESCRIPTION\n          \"This object indicates the pointer to the opposite-\n
    \          direction XC entry.  This object cannot be modified if\n           mplsXCRowStatus
    for the corresponding entry in the\n           mplsXCTable is active(1).  If this
    pointer is not set or\n           removed, mplsXCOperStatus should be set to down(2).\"\n
    \      REFERENCE\n          \"Multiprotocol Label Switching (MPLS) Label Switching\n
    \          Router (LSR) Management Information Base (MIB), RFC 3813.\"\n    ::=
    { mplsXCExtEntry 2 }\n    mplsLsrExtCompliances\n       OBJECT IDENTIFIER ::=
    { mplsLsrExtConformance 1 }\n    mplsLsrExtGroups\n       OBJECT IDENTIFIER ::=
    { mplsLsrExtConformance 2 }\n    -- Compliance requirement for fully compliant
    implementations.\n    mplsLsrExtModuleFullCompliance MODULE-COMPLIANCE\n        STATUS
    current\n        DESCRIPTION\n           \"Compliance statement for agents that
    provide full support\n            for MPLS-LSR-EXT-STD-MIB.\n            The mandatory
    group has to be implemented by all LSRs\n            that originate, terminate,
    or act as transit for\n            TE-LSPs/tunnels.\n            In addition,
    depending on the type of tunnels supported,\n            other groups become mandatory
    as explained below.\"\n     MODULE MPLS-LSR-STD-MIB -- The MPLS-LSR-STD-MIB, RFC
    3813\n     MANDATORY-GROUPS {\n       mplsInSegmentGroup,\n       mplsOutSegmentGroup,\n
    \      mplsXCGroup,\n       mplsLsrNotificationGroup\n     }\n     MODULE -- this
    module\n     MANDATORY-GROUPS    {\n       mplsXCExtGroup\n     }\n     ::= {
    mplsLsrExtCompliances 1 }\n    -- Compliance requirement for implementations that
    provide\n    -- read-only access.\n     mplsLsrExtModuleReadOnlyCompliance MODULE-COMPLIANCE\n
    \      STATUS current\n       DESCRIPTION\n          \"Compliance requirement
    for implementations that only\n           provide read-only support for MPLS-LSR-EXT-STD-MIB.\n
    \          Such devices can then be monitored but cannot be\n           configured
    using this MIB module.\"\n     MODULE MPLS-LSR-STD-MIB\n     MANDATORY-GROUPS
    {\n         mplsInterfaceGroup,\n         mplsInSegmentGroup,\n         mplsOutSegmentGroup\n
    \    }\n     MODULE -- this module\n     GROUP mplsXCExtReadOnlyObjectsGroup\n
    \    DESCRIPTION\n           \"This group is mandatory for devices that support\n
    \           opposite-direction XC configuration of tunnels.\"\n     -- mplsXCExtTable\n
    \         OBJECT mplsXCExtOppositeDirXCPtr\n          MIN-ACCESS   read-only\n
    \         DESCRIPTION\n              \"Write access is not required.\n               This
    object indicates the pointer to the opposite-\n               direction XC entry.
    \ The only valid value for XC\n               Pointer is mplsXCTable entry.\"\n
    \         ::= { mplsLsrExtCompliances 2 }\n     -- Units of conformance.\n     mplsXCExtGroup
    \ OBJECT-GROUP\n     OBJECTS {\n         mplsXCExtTunnelPointer,\n         mplsXCExtOppositeDirXCPtr\n
    \    }\n     STATUS  current\n     DESCRIPTION\n         \"This object should
    be supported in order to access\n         the tunnel entry from the XC entry.\"\n
    \    ::= { mplsLsrExtGroups 1 }\n     mplsXCExtReadOnlyObjectsGroup OBJECT-GROUP\n
    \    OBJECTS {\n         mplsXCExtTunnelPointer,\n         mplsXCExtOppositeDirXCPtr\n
    \    }\n     STATUS  current\n     DESCRIPTION\n         \"This Object is needed
    to associate the opposite-direction\n         (forward/reverse) XC entry.\"\n
    \    ::= { mplsLsrExtGroups 2 }\n    -- MPLS-LSR-EXT-STD-MIB module ends\n    END\n"
  title: 12.  MPLS LSR Extension MIB Definitions
- contents:
  - "13.  MPLS Tunnel Extension MIB Definitions\n   This MIB module imports from [RFC2578],
    [RFC2579], [RFC2580],\n   [RFC3289], [RFC3811], and [RFC3812].\n   MPLS-TE-EXT-STD-MIB
    DEFINITIONS ::= BEGIN\n   IMPORTS\n      MODULE-IDENTITY, OBJECT-TYPE\n         FROM
    SNMPv2-SMI                               -- RFC 2578\n      MODULE-COMPLIANCE,
    OBJECT-GROUP\n         FROM SNMPv2-CONF                              -- RFC 2580\n
    \     TruthValue, RowStatus, RowPointer, StorageType\n         FROM SNMPv2-TC
    \                               -- RFC 2579\n      IndexIntegerNextFree\n         FROM
    DIFFSERV-MIB                             -- RFC 3289\n      MplsGlobalId, MplsNodeId,
    MplsCcId, MplsIccId\n         FROM MPLS-TC-EXT-STD-MIB\n      mplsStdMIB, MplsTunnelIndex,
    MplsTunnelInstanceIndex,\n      MplsExtendedTunnelId\n         FROM MPLS-TC-STD-MIB
    \                         -- RFC 3811\n      mplsTunnelIndex, mplsTunnelInstance,
    mplsTunnelIngressLSRId,\n      mplsTunnelEgressLSRId\n         FROM MPLS-TE-STD-MIB
    \                         -- RFC 3812\n      ;\n   mplsTeExtStdMIB MODULE-IDENTITY\n
    \     LAST-UPDATED\n         \"201502020000Z\" -- February 2, 2015\n      ORGANIZATION\n
    \        \"Multiprotocol Label Switching (MPLS) Working Group\"\n      CONTACT-INFO\n
    \        \"\n                Venkatesan Mahalingam\n                Dell Inc,\n
    \               5450 Great America Parkway,\n                Santa Clara, CA 95054,
    USA\n          Email: venkat.mahalingams@gmail.com\n                Kannan KV
    Sampath\n                Redeem,\n                India\n          Email: kannankvs@gmail.com\n
    \               Sam Aldrin\n                Huawei Technologies\n                2330
    Central Express Way,\n                Santa Clara, CA 95051, USA\n          Email:
    \ aldrin.ietf@gmail.com\n                Thomas D. Nadeau\n          Email: tnadeau@lucidvision.com\n
    \       \"\n      DESCRIPTION\n        \"This MIB module contains generic object
    definitions for\n         extending the MPLS Traffic Engineering tunnels in transport\n
    \        networks.\n         Copyright (c) 2015 IETF Trust and the persons identified
    as\n         authors of the code.  All rights reserved.\n         Redistribution
    and use in source and binary forms, with or\n         without modification, is
    permitted pursuant to, and subject to\n         the license terms contained in,
    the Simplified BSD License set\n         forth in Section 4.c of the IETF Trust's
    Legal Provisions\n         Relating to IETF Documents\n         (http://trustee.ietf.org/license-info).\"\n
    \     -- Revision history.\n      REVISION\n       \"201502020000Z\" -- February
    2, 2015\n      DESCRIPTION\n           \"MPLS TE MIB objects extension\"\n      ::=
    { mplsStdMIB 20 }\n   -- Top-level components of this MIB module.\n   -- tables,
    scalars\n   mplsTeExtObjects       OBJECT IDENTIFIER\n                                    ::=
    { mplsTeExtStdMIB 0 }\n   -- conformance\n   mplsTeExtConformance   OBJECT IDENTIFIER\n
    \                                   ::= { mplsTeExtStdMIB 1 }\n  -- Start of MPLS
    Transport Profile Node configuration table\n  mplsTunnelExtNodeConfigLocalIdNext
    OBJECT-TYPE\n   SYNTAX        IndexIntegerNextFree (0..16777215)\n   MAX-ACCESS
    \   read-only\n   STATUS        current\n   DESCRIPTION\n      \"This object contains
    an unused value for\n       mplsTunnelExtNodeConfigLocalId, or a zero to indicate\n
    \      that none exist.  Negative values are not allowed,\n       as they do not
    correspond to valid values of\n       mplsTunnelExtNodeConfigLocalId.\"\n    ::=
    { mplsTeExtObjects 1 }\n    mplsTunnelExtNodeConfigTable OBJECT-TYPE\n     SYNTAX
    \       SEQUENCE OF MplsTunnelExtNodeConfigEntry\n     MAX-ACCESS    not-accessible\n
    \    STATUS        current\n     DESCRIPTION\n       \"This table allows the operator
    to map a node or\n        LSR identifier (IP-compatible [Global_ID::Node_ID] or\n
    \       ICC-based [ICC_Operator_ID::Node_ID]) with a local\n        identifier.\n
    \       This table is created to reuse the existing\n        mplsTunnelTable for
    MPLS-based transport network\n        tunnels also.\n        Since the MPLS tunnel's
    Ingress/Egress LSR identifiers'\n        size (Unsigned32) value is not compatible
    for\n        MPLS-TP Tunnel, i.e., Global_ID::Node_ID of size 8 bytes and\n        ICC_Operator_ID::Node_ID
    of size 12 bytes, there exists a\n        need to map the Global_ID::Node_ID or
    ICC_Operator_ID::Node_ID\n        with the local identifier of size 4 bytes (Unsigned32)
    value\n        in order to index (Ingress/Egress LSR identifier)\n        the
    existing mplsTunnelTable.\"\n     ::= { mplsTeExtObjects 2 }\n    mplsTunnelExtNodeConfigEntry
    OBJECT-TYPE\n     SYNTAX        MplsTunnelExtNodeConfigEntry\n     MAX-ACCESS
    \   not-accessible\n     STATUS        current\n     DESCRIPTION\n        \"An
    entry in this table represents a mapping\n        identification for the operator
    or service provider\n        to a node or an LSR.\n        As per RFC 6370, IP-compatible
    mapping is represented\n        as Global_ID::Node_ID.\n        As per RFC 6923,
    the CC and the ICC form the ICC_Operator_ID\n        as CC::ICC, and ICC-compatible
    mapping is represented\n        as ICC_Operator_ID::Node_ID.\n        Note: Each
    entry in this table should have a unique\n        [Global_ID and Node_ID] or [CC::ICC
    and Node_ID] combination.\"\n        INDEX { mplsTunnelExtNodeConfigLocalId }\n
    \       ::= { mplsTunnelExtNodeConfigTable 1 }\n    MplsTunnelExtNodeConfigEntry
    ::= SEQUENCE {\n          mplsTunnelExtNodeConfigLocalId     MplsExtendedTunnelId,\n
    \         mplsTunnelExtNodeConfigGlobalId    MplsGlobalId,\n          mplsTunnelExtNodeConfigCcId
    \       MplsCcId,\n          mplsTunnelExtNodeConfigIccId       MplsIccId,\n          mplsTunnelExtNodeConfigNodeId
    \     MplsNodeId,\n          mplsTunnelExtNodeConfigIccValid    TruthValue,\n
    \         mplsTunnelExtNodeConfigStorageType StorageType,\n          mplsTunnelExtNodeConfigRowStatus
    \  RowStatus\n    }\n    mplsTunnelExtNodeConfigLocalId  OBJECT-TYPE\n       SYNTAX
    \       MplsExtendedTunnelId\n       MAX-ACCESS    not-accessible\n       STATUS
    \       current\n       DESCRIPTION\n         \"This object is used in accommodating
    the bigger-\n          size Global_ID::Node_ID and/or the ICC_Operator_ID::Node_ID\n
    \         with the smaller-size LSR identifier in order to index\n          the
    mplsTunnelTable.\n          The local identifier is configured between 0 and 16777215,\n
    \         as the valid IP address range starts from\n          16777216(01.00.00.00).\n
    \         This range is chosen to determine whether the\n          mplsTunnelTable's
    Ingress/Egress LSR ID is an IP address or\n          local identifier.  If the
    configured range is not an\n          IP address, the operator is expected to
    retrieve the\n          complete information (Global_ID::Node_ID or\n          ICC_Operator_ID::Node_ID)
    from mplsTunnelExtNodeConfigTable.\n          This way, the existing mplsTunnelTable
    is reused for\n          bidirectional tunnel extensions for MPLS-based transport\n
    \         networks.\n          The local identifier allows the operator to assign\n
    \         a unique identifier to map Global_ID::Node_ID and/or\n          ICC_Operator_ID::Node_ID.
    \ As this local identifier is unique\n          within the node and the same syntax
    of this object can be\n          used for MPLS-TE tunnel also, it is up to the
    operator/local\n          management entity to choose a non-conflicting value
    for\n          indexing the MPLS and MPLS-TP tunnel entries.\"\n       ::= { mplsTunnelExtNodeConfigEntry
    1 }\n    mplsTunnelExtNodeConfigGlobalId  OBJECT-TYPE\n       SYNTAX        MplsGlobalId\n
    \      MAX-ACCESS    read-create\n       STATUS        current\n       DESCRIPTION\n
    \        \"This object indicates the Global Operator Identifier.\n          This
    object has no meaning when\n          mplsTunnelExtNodeConfigIccValid is set true.\"\n
    \      REFERENCE\n             \"MPLS Transport Profile (MPLS-TP) Identifiers,
    RFC 6370,\n              Section 3.\"\n       ::= { mplsTunnelExtNodeConfigEntry
    2 }\n    mplsTunnelExtNodeConfigCcId OBJECT-TYPE\n         SYNTAX      MplsCcId\n
    \        MAX-ACCESS  read-create\n         STATUS      current\n         DESCRIPTION\n
    \           \"This object allows the operator or service provider to\n             configure
    a unique MPLS-TP ITU-T Country Code (CC)\n             either for Ingress ID or
    Egress ID.\n             This object has no meaning when\n             mplsTunnelExtNodeConfigIccValid
    is set to false.\"\n            REFERENCE\n               \"MPLS-TP Identifiers
    Following ITU-T Conventions,\n               RFC 6923, Section 3\"\n       ::=
    { mplsTunnelExtNodeConfigEntry 3 }\n       mplsTunnelExtNodeConfigIccId OBJECT-TYPE\n
    \           SYNTAX      MplsIccId\n            MAX-ACCESS  read-create\n            STATUS
    \     current\n            DESCRIPTION\n               \"This object allows the
    operator or service provider to\n                configure a unique MPLS-TP ITU-T
    Carrier Code (ICC)\n                either for Ingress ID or Egress ID.\n                This
    object has no meaning when\n                mplsTunnelExtNodeConfigIccValid is
    set to false.\"\n            REFERENCE\n               \"MPLS-TP Identifiers Following
    ITU-T Conventions,\n                RFC 6923, Section 3\"\n       ::= { mplsTunnelExtNodeConfigEntry
    4 }\n       mplsTunnelExtNodeConfigNodeId  OBJECT-TYPE\n          SYNTAX        MplsNodeId\n
    \         MAX-ACCESS    read-create\n          STATUS        current\n          DESCRIPTION\n
    \            \"This object indicates the Node_ID within the scope\n              of
    a Global_ID or ICC_Operator_ID.\"\n          REFERENCE\n              \"MPLS Transport
    Profile (MPLS-TP) Identifiers, RFC 6370,\n               Section 4.\"\n          ::=
    { mplsTunnelExtNodeConfigEntry 5 }\n       mplsTunnelExtNodeConfigIccValid  OBJECT-TYPE\n
    \         SYNTAX        TruthValue\n          MAX-ACCESS    read-create\n          STATUS
    \       current\n          DESCRIPTION\n             \"Denotes whether or not
    this entry uses\n              mplsTunnelExtNodeConfigCcId,\n              mplsTunnelExtNodeConfigIccId,
    and\n              mplsTunnelExtNodeConfigNodeId for mapping\n              the
    ICC-based identifiers with the local identifier.\n              Note that if this
    variable is set to false, then the\n              mplsTunnelExtNodeConfigGlobalId
    and\n              mplsTunnelExtNodeConfigNodeId objects should have\n              the
    valid information.\"\n          DEFVAL { false }\n            ::= { mplsTunnelExtNodeConfigEntry
    6 }\n       mplsTunnelExtNodeConfigStorageType OBJECT-TYPE\n          SYNTAX        StorageType\n
    \         MAX-ACCESS    read-create\n          STATUS        current\n          DESCRIPTION\n
    \          \"This variable indicates the storage type for this\n            object.\n
    \           Conceptual rows having the value 'permanent'\n            need not
    allow write-access to any columnar\n            objects in the row.\"\n          DEFVAL
    { volatile }\n          ::= { mplsTunnelExtNodeConfigEntry 7 }\n    mplsTunnelExtNodeConfigRowStatus
    OBJECT-TYPE\n       SYNTAX        RowStatus\n       MAX-ACCESS    read-create\n
    \      STATUS        current\n       DESCRIPTION\n          \"This object allows
    the operator to create, modify,\n           and/or delete a row in this table.\"\n
    \      ::= { mplsTunnelExtNodeConfigEntry 8 }\n   -- End of MPLS Transport Profile
    Node configuration table\n   -- Start of MPLS Transport Profile Node IP-compatible\n
    \  -- mapping table\n  mplsTunnelExtNodeIpMapTable OBJECT-TYPE\n     SYNTAX        SEQUENCE
    OF MplsTunnelExtNodeIpMapEntry\n     MAX-ACCESS    not-accessible\n     STATUS
    \       current\n     DESCRIPTION\n         \"This read-only table allows the
    operator to retrieve\n          the local identifier for a given Global_ID::Node_ID
    in an\n          IP-compatible operator environment.\n          This table MAY
    be used in on-demand and/or proactive\n          OAM operations to get the Ingress/Egress
    LSR identifier\n          (local identifier) from Src-Global_Node_ID\n          or
    Dst-Global_Node_ID.  The Ingress and Egress LSR\n          identifiers are used
    to retrieve the tunnel entry.\n          This table returns nothing when the associated
    entry\n          is not defined in mplsTunnelExtNodeConfigTable.\"\n     ::= {
    mplsTeExtObjects 3 }\n    mplsTunnelExtNodeIpMapEntry OBJECT-TYPE\n     SYNTAX
    \       MplsTunnelExtNodeIpMapEntry\n     MAX-ACCESS    not-accessible\n     STATUS
    \       current\n     DESCRIPTION\n           \"An entry in this table represents
    a mapping of\n            Global_ID::Node_ID with the local identifier.\n            An
    entry in this table is created automatically when\n            the local identifier
    is associated with Global_ID and\n            Node_Id in the mplsTunnelExtNodeConfigTable.\n
    \           Note: Each entry in this table should have a unique\n            Global_ID
    and Node_ID combination.\"\n      INDEX { mplsTunnelExtNodeIpMapGlobalId,\n              mplsTunnelExtNodeIpMapNodeId\n
    \           }\n      ::= { mplsTunnelExtNodeIpMapTable 1 }\n    MplsTunnelExtNodeIpMapEntry
    ::= SEQUENCE {\n          mplsTunnelExtNodeIpMapGlobalId    MplsGlobalId,\n          mplsTunnelExtNodeIpMapNodeId
    \     MplsNodeId,\n          mplsTunnelExtNodeIpMapLocalId     MplsExtendedTunnelId\n
    \   }\n    mplsTunnelExtNodeIpMapGlobalId  OBJECT-TYPE\n       SYNTAX        MplsGlobalId\n
    \      MAX-ACCESS    not-accessible\n       STATUS        current\n       DESCRIPTION\n
    \        \"This object indicates the Global_ID.\"\n       ::= { mplsTunnelExtNodeIpMapEntry
    1 }\n    mplsTunnelExtNodeIpMapNodeId  OBJECT-TYPE\n       SYNTAX        MplsNodeId\n
    \      MAX-ACCESS    not-accessible\n       STATUS        current\n       DESCRIPTION\n
    \        \"This object indicates the Node_ID within the\n          operator.\"\n
    \      ::= { mplsTunnelExtNodeIpMapEntry 2 }\n    mplsTunnelExtNodeIpMapLocalId
    \ OBJECT-TYPE\n       SYNTAX        MplsExtendedTunnelId\n       MAX-ACCESS    read-only\n
    \      STATUS        current\n       DESCRIPTION\n         \"This object contains
    an IP-compatible local identifier\n          that is defined in mplsTunnelExtNodeConfigTable.\"\n
    \      ::= { mplsTunnelExtNodeIpMapEntry 3 }\n    -- End MPLS Transport Profile
    Node IP compatible table\n    -- Start of MPLS Transport Profile Node ICC based
    table\n    mplsTunnelExtNodeIccMapTable OBJECT-TYPE\n     SYNTAX        SEQUENCE
    OF MplsTunnelExtNodeIccMapEntry\n     MAX-ACCESS    not-accessible\n     STATUS
    \       current\n     DESCRIPTION\n        \"This read-only table allows the operator
    to retrieve\n         the local identifier for a given ICC_Operator_ID::Node_ID\n
    \        in an ICC operator environment.\n         This table MAY be used in on-demand
    and/or proactive\n         OAM operations to get the Ingress/Egress LSR\n         identifier
    (local identifier) from Src-ICC\n         or Dst-ICC.  The Ingress and Egress
    LSR\n         identifiers are used to retrieve the tunnel entry.\n         This
    table returns nothing when the associated entry\n         is not defined in mplsTunnelExtNodeConfigTable.\"\n
    \    ::= { mplsTeExtObjects 4 }\n    mplsTunnelExtNodeIccMapEntry OBJECT-TYPE\n
    \    SYNTAX        MplsTunnelExtNodeIccMapEntry\n     MAX-ACCESS    not-accessible\n
    \    STATUS        current\n     DESCRIPTION\n           \"An entry in this table
    represents a mapping of\n            ICC_Operator_ID::Node_ID with the local identifier.\n
    \           An entry in this table is created automatically when\n            the
    local identifier is associated with\n            ICC_Operator_ID::Node_ID in\n
    \           the mplsTunnelExtNodeConfigTable.\"\n      INDEX { mplsTunnelExtNodeIccMapCcId,\n
    \             mplsTunnelExtNodeIccMapIccId,\n              mplsTunnelExtNodeIccMapNodeId
    }\n      ::= { mplsTunnelExtNodeIccMapTable 1 }\n    MplsTunnelExtNodeIccMapEntry
    ::= SEQUENCE {\n          mplsTunnelExtNodeIccMapCcId       MplsCcId,\n          mplsTunnelExtNodeIccMapIccId
    \     MplsIccId,\n          mplsTunnelExtNodeIccMapNodeId     MplsNodeId,\n          mplsTunnelExtNodeIccMapLocalId
    \   MplsExtendedTunnelId\n    }\n    mplsTunnelExtNodeIccMapCcId OBJECT-TYPE\n
    \        SYNTAX      MplsCcId\n         MAX-ACCESS  not-accessible\n         STATUS
    \     current\n         DESCRIPTION\n            \"This object allows the operator
    or service provider to\n             configure a unique MPLS-TP ITU-T Country
    Code (CC)\n             either for Ingress or Egress LSR ID.\n             The
    CC is a string of two alphabetic characters\n             represented with uppercase
    letters (i.e., A-Z).\"\n         ::= { mplsTunnelExtNodeIccMapEntry 1 }\n         mplsTunnelExtNodeIccMapIccId
    OBJECT-TYPE\n              SYNTAX      MplsIccId\n              MAX-ACCESS  not-accessible\n
    \             STATUS      current\n              DESCRIPTION\n                 \"This
    object allows the operator or service provider\n                  to configure
    a unique MPLS-TP ITU-T Carrier\n                  Code (ICC) either for Ingress
    or Egress LSR ID.\n                  The ICC is a string of one to six characters,
    each\n                  character being either alphabetic (i.e., A-Z) or\n                  numeric
    (i.e., 0-9) characters.  Alphabetic characters\n                  in the ICC should
    be represented with uppercase\n                  letters.\"\n         ::= { mplsTunnelExtNodeIccMapEntry
    2 }\n         mplsTunnelExtNodeIccMapNodeId  OBJECT-TYPE\n            SYNTAX        MplsNodeId\n
    \           MAX-ACCESS    not-accessible\n            STATUS        current\n
    \           DESCRIPTION\n              \"This object indicates the Node_ID within
    the\n               ICC-based operator.\"\n         ::= { mplsTunnelExtNodeIccMapEntry
    3}\n    mplsTunnelExtNodeIccMapLocalId  OBJECT-TYPE\n       SYNTAX        MplsExtendedTunnelId\n
    \      MAX-ACCESS    read-only\n       STATUS        current\n       DESCRIPTION\n
    \        \"This object contains an ICC-based local identifier\n          that
    is defined in mplsTunnelExtNodeConfigTable.\"\n    ::= { mplsTunnelExtNodeIccMapEntry
    4 }\n -- End MPLS Transport Profile Node ICC-based table\n -- Start of MPLS Tunnel
    table extension\n   mplsTunnelExtTable OBJECT-TYPE\n     SYNTAX        SEQUENCE
    OF MplsTunnelExtEntry\n     MAX-ACCESS    not-accessible\n     STATUS        current\n
    \    DESCRIPTION\n       \"This table represents extensions to mplsTunnelTable\n
    \       in order to support MPLS-TP Tunnels.\n        As per MPLS-TP Identifiers
    (RFC 6370), LSP_ID for IP-based\n        co-routed bidirectional tunnel:\n        A1-{Global_ID::Node_ID::Tunnel_Num}::Z9-{Global_ID::\n
    \       Node_ID::Tunnel_Num}::LSP_Num\n        LSP_ID for IP based associated
    bidirectional tunnel:\n        A1-{Global_ID::Node_ID::Tunnel_Num::LSP_Num}::\n
    \       Z9-{Global_ID::Node_ID::Tunnel_Num::LSP_Num}\n        mplsTunnelTable
    is reused for forming the LSP_ID\n        as follows:\n        Source Tunnel_Num
    is mapped with mplsTunnelIndex,\n        Source Node_ID is mapped with\n        mplsTunnelIngressLSRId,
    Destination Node_ID is\n        mapped with mplsTunnelEgressLSRId, and LSP_Num
    is mapped with\n        mplsTunnelInstance.\n        Source Global_ID::Node_ID
    and/or ICC_Operator_ID::Node_ID and\n        Destination Global_ID::Node_ID and/or
    ICC_Operator_ID::Node-ID\n        are maintained in the mplsTunnelExtNodeConfigTable.\n
    \       mplsTunnelExtNodeConfigLocalId is used to create an entry\n        in
    mplsTunnelTable.\"\n     REFERENCE\n           \"MPLS Transport Profile (MPLS-TP)
    Identifiers, RFC 6370.\"\n     ::= { mplsTeExtObjects 5 }\n    mplsTunnelExtEntry
    OBJECT-TYPE\n    SYNTAX        MplsTunnelExtEntry\n    MAX-ACCESS    not-accessible\n
    \   STATUS        current\n    DESCRIPTION\n          \"An entry in this table
    represents additional MPLS-TP-\n           specific tunnel configurations.\"\n
    \   INDEX {\n      mplsTunnelIndex,\n      mplsTunnelInstance,\n      mplsTunnelIngressLSRId,\n
    \     mplsTunnelEgressLSRId\n     }\n     ::= { mplsTunnelExtTable 1 }\n    MplsTunnelExtEntry
    ::= SEQUENCE {\n         mplsTunnelExtOppositeDirPtr          RowPointer,\n         mplsTunnelExtOppositeDirTnlValid
    \    TruthValue,\n         mplsTunnelExtDestTnlIndex            MplsTunnelIndex,\n
    \        mplsTunnelExtDestTnlLspIndex         MplsTunnelInstanceIndex,\n         mplsTunnelExtDestTnlValid
    \           TruthValue,\n         mplsTunnelExtIngressLSRLocalIdValid  TruthValue,\n
    \        mplsTunnelExtEgressLSRLocalIdValid   TruthValue\n    }\n    mplsTunnelExtOppositeDirPtr
    \ OBJECT-TYPE\n       SYNTAX        RowPointer\n       MAX-ACCESS    read-create\n
    \      STATUS        current\n       DESCRIPTION\n          \"This object points
    to the opposite-direction tunnel entry.\"\n    ::= { mplsTunnelExtEntry 1 }\n
    \   mplsTunnelExtOppositeDirTnlValid  OBJECT-TYPE\n       SYNTAX        TruthValue\n
    \      MAX-ACCESS    read-create\n       STATUS        current\n       DESCRIPTION\n
    \         \"Denotes whether or not this tunnel uses\n           mplsTunnelExtOppositeDirPtr
    for identifying the opposite-\n           direction tunnel information.  Note
    that if this variable\n           is set to true, then the mplsTunnelExtOppositeDirPtr
    should\n           point to the first accessible row of the valid opposite-\n
    \          direction tunnel.\"\n       DEFVAL { false }\n         ::= { mplsTunnelExtEntry
    2 }\n    mplsTunnelExtDestTnlIndex  OBJECT-TYPE\n       SYNTAX        MplsTunnelIndex\n
    \      MAX-ACCESS    read-create\n       STATUS        current\n       DESCRIPTION\n
    \         \"This object is applicable only for the bidirectional\n           tunnel
    that has the forward and reverse LSPs in the\n           different tunnel entries.\n
    \          The values of this object and the\n           mplsTunnelExtDestTnlLspIndex
    object together can be used\n           to identify an opposite-direction LSP,
    i.e., if the\n           mplsTunnelIndex and mplsTunnelInstance hold the value\n
    \          for forward LSP, this object and\n           mplsTunnelExtDestTnlLspIndex
    can be used to retrieve\n           the reverse-direction LSP and vice versa.\n
    \          This object and mplsTunnelExtDestTnlLspIndex values\n           provide
    the first two indices of tunnel entry, and\n           the remaining indices can
    be derived as follows:\n           the Ingress and Egress Identifiers should be\n
    \          swapped in order to index the other direction tunnel.\"\n          ::=
    { mplsTunnelExtEntry 3 }\n    mplsTunnelExtDestTnlLspIndex  OBJECT-TYPE\n       SYNTAX
    \       MplsTunnelInstanceIndex\n       MAX-ACCESS    read-create\n       STATUS
    \       current\n       DESCRIPTION\n          \"This object is applicable only
    for the bidirectional\n           tunnel that has the forward and reverse LSPs
    in the\n           different tunnel entries.  This object holds\n           the
    instance index of the opposite-direction tunnel.\"\n          ::= { mplsTunnelExtEntry
    4 }\n    mplsTunnelExtDestTnlValid  OBJECT-TYPE\n       SYNTAX        TruthValue\n
    \      MAX-ACCESS    read-create\n       STATUS        current\n       DESCRIPTION\n
    \         \"Denotes whether or not this tunnel uses\n           mplsTunnelExtDestTnlIndex
    and\n           mplsTunnelExtDestTnlLspIndex for identifying\n           the opposite-direction
    tunnel information.  Note that if\n           this variable is set to true, then
    the\n           mplsTunnelExtDestTnlIndex and\n           mplsTunnelExtDestTnlLspIndex
    objects should have\n           the valid opposite-direction tunnel indices.\"\n
    \      DEFVAL { false }\n         ::= { mplsTunnelExtEntry 5 }\n    mplsTunnelExtIngressLSRLocalIdValid
    OBJECT-TYPE\n       SYNTAX        TruthValue\n       MAX-ACCESS    read-create\n
    \      STATUS        current\n       DESCRIPTION\n        \"This object denotes
    whether the mplsTunnelIngressLSRId\n         contains the local value that is
    used to reference\n         the complete Ingress Global_ID::Node_ID or ICC_Operator_ID\n
    \        from the mplsTunnelExtNodeConfigTable.\n         If this object is set
    to FALSE, mplsTunnelExtNodeConfigTable\n         will not contain an entry to
    reference the local identifier\n         with Global_ID::Node_ID or ICC_Operator_ID::Node_ID
    value.\n         This object is set to FALSE for legacy implementations like\n
    \        MPLS TE tunnels where mplsTunnelIngressId itself provides\n         the
    complete Ingress LSR ID.\"\n       REFERENCE\n         \"MPLS-TE-STD-MIB (RFC
    3812), Section 11.\n          mplsTunnelIngressLSRId object in mplsTunnelTable.\"\n
    \      DEFVAL { false }\n         ::= { mplsTunnelExtEntry 6 }\n    mplsTunnelExtEgressLSRLocalIdValid
    OBJECT-TYPE\n       SYNTAX        TruthValue\n       MAX-ACCESS    read-create\n
    \      STATUS        current\n       DESCRIPTION\n        \"This object denotes
    whether the mplsTunnelEgressLSRId\n         contains the local value, which is
    used to reference\n         the complete Egress Global_ID::Node_ID or\n         ICC_Operator_ID::Node_ID
    from\n         the mplsTunnelExtNodeConfigTable.\n         If this object is set
    to FALSE, mplsTunnelExtNodeConfigTable\n         will not contain an entry to
    reference the local identifier\n         with Global_ID::Node_ID or ICC_Operator_ID::Node_ID
    value.\n         This object is set to FALSE for legacy implementations like\n
    \        MPLS TE tunnels where mplsTunnelEgressId itself provides\n         the
    complete Egress LSR ID.\"\n       REFERENCE\n         \"MPLS-TE-STD-MIB (RFC 3812),
    Section 11.\n          mplsTunnelEgressLSRId object in mplsTunnelTable.\"\n       DEFVAL
    { false }\n         ::= { mplsTunnelExtEntry 7 }\n    -- End of MPLS Tunnel table
    extension\n   -- Module compliance.\n   mplsTeExtCompliances\n      OBJECT IDENTIFIER
    ::= { mplsTeExtConformance 1 }\n   mplsTeExtGroups\n      OBJECT IDENTIFIER ::=
    { mplsTeExtConformance 2 }\n   -- Compliance requirement for fully compliant implementations.\n
    \  mplsTeExtModuleFullCompliance MODULE-COMPLIANCE\n      STATUS current\n      DESCRIPTION\n
    \          \"Compliance statement for agents that provide full\n            support
    the MPLS-TE-EXT-STD-MIB module.\"\n      MODULE -- this module\n         -- The
    mandatory group has to be implemented by all\n         -- LSRs that originate/terminate
    MPLS-TP Tunnels.\n         -- In addition, depending on the type of tunnels\n
    \        -- supported, other groups become mandatory as\n         -- explained
    below.\n         MANDATORY-GROUPS    {\n            mplsTunnelExtGroup\n         }\n
    \        GROUP mplsTunnelExtIpOperatorGroup\n         DESCRIPTION\n             \"This
    group is mandatory for devices that support\n              configuration of IP-based
    identifier tunnels.\"\n         GROUP mplsTunnelExtIccOperatorGroup\n         DESCRIPTION\n
    \            \"This group is mandatory for devices that support\n              configuration
    of ICC based tunnels.\"\n          ::= { mplsTeExtCompliances 1 }\n   -- Compliance
    requirement for read-only implementations.\n   mplsTeExtModuleReadOnlyCompliance
    MODULE-COMPLIANCE\n      STATUS current\n      DESCRIPTION\n          \"Compliance
    statement for agents that only provide\n           read-only support for the MPLS-TE-EXT-STD-MIB
    module.\"\n      MODULE -- this module\n   MANDATORY-GROUPS    {\n      mplsTunnelExtGroup\n
    \  }\n   GROUP mplsTunnelExtIpOperatorGroup\n   DESCRIPTION\n       \"This group
    is mandatory for devices that support\n        configuration of IP-based identifier
    tunnels.\"\n   GROUP mplsTunnelExtIccOperatorGroup\n   DESCRIPTION\n       \"This
    group is mandatory for devices that support\n        configuration of ICC-based
    tunnels.\"\n   -- mplsTunnelExtTable\n   OBJECT      mplsTunnelExtOppositeDirPtr\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \  OBJECT      mplsTunnelExtOppositeDirTnlValid\n   MIN-ACCESS  read-only\n   DESCRIPTION\n
    \        \"Write access is not required.\"\n   OBJECT      mplsTunnelExtDestTnlIndex\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \  OBJECT      mplsTunnelExtDestTnlLspIndex\n   MIN-ACCESS  read-only\n   DESCRIPTION\n
    \        \"Write access is not required.\"\n   OBJECT      mplsTunnelExtDestTnlValid\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \  OBJECT      mplsTunnelExtIngressLSRLocalIdValid\n   MIN-ACCESS  read-only\n
    \  DESCRIPTION\n         \"Write access is not required.\"\n   OBJECT      mplsTunnelExtEgressLSRLocalIdValid\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \  OBJECT      mplsTunnelExtNodeConfigGlobalId\n   MIN-ACCESS  read-only\n   DESCRIPTION\n
    \        \"Write access is not required.\"\n   OBJECT      mplsTunnelExtNodeConfigNodeId\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \  OBJECT      mplsTunnelExtNodeConfigStorageType\n   MIN-ACCESS  read-only\n
    \  DESCRIPTION\n         \"Write access is not required.\"\n   OBJECT      mplsTunnelExtNodeConfigRowStatus\n
    \  SYNTAX      RowStatus { active(1) }\n   MIN-ACCESS  read-only\n   DESCRIPTION\n
    \        \"Write access is not required.\"\n   OBJECT      mplsTunnelExtNodeConfigCcId\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \  OBJECT      mplsTunnelExtNodeConfigIccId\n   MIN-ACCESS  read-only\n   DESCRIPTION\n
    \        \"Write access is not required.\"\n   OBJECT      mplsTunnelExtNodeConfigIccValid\n
    \  MIN-ACCESS  read-only\n   DESCRIPTION\n         \"Write access is not required.\"\n
    \       ::= { mplsTeExtCompliances 2 }\n     -- Units of conformance.\n     mplsTunnelExtGroup
    OBJECT-GROUP\n        OBJECTS {\n          mplsTunnelExtOppositeDirPtr,\n          mplsTunnelExtOppositeDirTnlValid,\n
    \         mplsTunnelExtDestTnlIndex,\n          mplsTunnelExtDestTnlLspIndex,\n
    \         mplsTunnelExtDestTnlValid,\n          mplsTunnelExtIngressLSRLocalIdValid,\n
    \         mplsTunnelExtEgressLSRLocalIdValid\n       }\n      STATUS  current\n
    \     DESCRIPTION\n           \"Necessary, but not sufficient, set of objects
    to\n             implement tunnels.  In addition, depending on the\n             operating
    environment, the following groups are\n             mandatory.\"\n      ::= {
    mplsTeExtGroups 1 }\n   mplsTunnelExtIpOperatorGroup  OBJECT-GROUP\n      OBJECTS
    { mplsTunnelExtNodeConfigLocalIdNext,\n                mplsTunnelExtNodeConfigGlobalId,\n
    \               mplsTunnelExtNodeConfigNodeId,\n                mplsTunnelExtNodeIpMapLocalId,\n
    \               mplsTunnelExtNodeConfigStorageType,\n                mplsTunnelExtNodeConfigRowStatus\n
    \     }\n      STATUS  current\n      DESCRIPTION\n           \"Object(s) needed
    to implement IP-compatible tunnels.\"\n      ::= { mplsTeExtGroups 2 }\n   mplsTunnelExtIccOperatorGroup
    \ OBJECT-GROUP\n      OBJECTS { mplsTunnelExtNodeConfigLocalIdNext,\n                mplsTunnelExtNodeConfigCcId,\n
    \               mplsTunnelExtNodeConfigIccId,\n                mplsTunnelExtNodeConfigNodeId,\n
    \               mplsTunnelExtNodeConfigIccValid,\n                mplsTunnelExtNodeIccMapLocalId,\n
    \               mplsTunnelExtNodeConfigStorageType,\n                mplsTunnelExtNodeConfigRowStatus\n
    \     }\n      STATUS  current\n      DESCRIPTION\n           \"Object(s) needed
    to implement ICC-based tunnels.\"\n      ::= { mplsTeExtGroups 3 }\n   -- MPLS-TE-EXT-STD-MIB
    module ends\n   END\n"
  title: 13.  MPLS Tunnel Extension MIB Definitions
- contents:
  - "14.  Security Considerations\n   This document follows the security considerations
    mentioned in\n   Section 12 of [RFC3812].  These security considerations are also\n
    \  applicable to the MIB objects and tables defined in this document,\n   which
    are identified as below.\n      - The common objects mplsIdGlobalId, mplsIdNodeId,
    mplsIdCc, and\n        mplsIdIcc are used to define the identity of an MPLS-TP
    node for\n        OAM purposes.  If write-access is allowed to these objects it\n
    \       offers the possibility for incorrect values to be entered that\n        will
    confuse the information returned by OAM functions and\n        possibly prevent
    OAM from operating correctly.  Furthermore,\n        there is the possibility
    of inducing one node to impersonate\n        another with confusing results.\n
    \     - mplsTunnelExtNodeConfigTable, mplsTunnelExtTable and\n        mplsXCExtTable
    collectively contain objects to provision MPLS-TP\n        Tunnels, tunnel hops,
    and tunnel resources.\n   Some of the readable objects in this MIB module (i.e.,
    objects with a\n   MAX-ACCESS other than not-accessible) may be considered sensitive
    or\n   vulnerable in some network environments.  It is thus important to\n   control
    even GET and/or NOTIFY access to these objects and possibly\n   to even encrypt
    the values of these objects when sending them over\n   the network via SNMP.  These
    are the tables and objects and their\n   sensitivity/vulnerability:\n      - mplsTunnelExtNodeConfigTable,
    mplsTunnelExtTable, and\n        mplsXCExtTable collectively show the characteristics
    of the\n        MPLS-TP tunnel network topology.  If an Administrator does not\n
    \       want to reveal this information, then these tables should be\n        considered
    sensitive/vulnerable.\n   SNMP versions prior to SNMPv3 did not include adequate
    security.\n   Even if the network itself is secure (for example by using IPsec),\n
    \  there is no control as to who on the secure network is allowed to\n   access
    and GET/SET (read/change/create/delete) the objects in this\n   MIB module.\n
    \  Implementations SHOULD provide the security features described by the\n   SNMPv3
    framework (see [RFC3410]), and implementations claiming\n   compliance to the
    SNMPv3 standard MUST include full support for\n   authentication and privacy via
    the User-based Security Model (USM)\n   [RFC3414] with the AES cipher algorithm
    [RFC3826].  Implementations\n   MAY also provide support for the Transport Security
    Model (TSM)\n   [RFC5591] in combination with a secure transport such as SSH\n
    \  [RFC5592] or TLS/DTLS [RFC6353].\n   Further, deployment of SNMP versions prior
    to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3
    and to\n   enable cryptographic security.  It is then a customer/operator\n   responsibility
    to ensure that the SNMP entity giving access to an\n   instance of this MIB module
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)
    them.\n"
  title: 14.  Security Considerations
- contents:
  - "15.  IANA Considerations\n   As described in [RFC4221] and [RFC6639], and as
    requested in the\n   MPLS-TC-STD-MIB [RFC3811], MPLS-related Standards Track MIB
    modules\n   should be rooted under the mplsStdMIB subtree.  There are four MPLS\n
    \  MIB modules contained in this document; each of the following\n   subsections
    lists a new assignment made by IANA under the mplsStdMIB\n   subtree.  New assignments
    can only be made via a Standards Action as\n   specified in [RFC5226].\n"
  - contents:
    - "15.1.  IANA Considerations for MPLS-TC-EXT-STD-MIB\n   IANA has assigned the
      OID { mplsStdMIB 17 } to the\n   MPLS-TC-EXT-STD-MIB module specified in this
      document.\n"
    title: 15.1.  IANA Considerations for MPLS-TC-EXT-STD-MIB
  - contents:
    - "15.2.  IANA Considerations for MPLS-ID-STD-MIB\n   IANA has assigned the OID
      { mplsStdMIB 18 } to the MPLS-ID-STD-MIB\n   module specified in this document.\n"
    title: 15.2.  IANA Considerations for MPLS-ID-STD-MIB
  - contents:
    - "15.3.  IANA Considerations for MPLS-LSR-EXT-STD-MIB\n   IANA has assigned the
      OID { mplsStdMIB 19 } to the\n   MPLS-LSR-EXT-STD-MIB module specified in this
      document.\n"
    title: 15.3.  IANA Considerations for MPLS-LSR-EXT-STD-MIB
  - contents:
    - "15.4.  IANA Considerations for MPLS-TE-EXT-STD-MIB\n   IANA has assigned the
      OID { mplsStdMIB 20 } to the\n   MPLS-TE-EXT-STD-MIB module specified in this
      document.\n"
    title: 15.4.  IANA Considerations for MPLS-TE-EXT-STD-MIB
  title: 15.  IANA Considerations
- contents:
  - '16.  References

    '
  - contents:
    - "16.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2578]
      \ McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\",
      STD 58, RFC 2578, April 1999,\n              <http://www.rfc-editor.org/info/rfc2578>.\n
      \  [RFC2579]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Textual Conventions for SMIv2\", STD\n              58, RFC 2579, April
      1999,\n              <http://www.rfc-editor.org/info/rfc2579>.\n   [RFC2580]
      \ McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Conformance Statements for SMIv2\",\n              STD 58, RFC 2580,
      April 1999,\n              <http://www.rfc-editor.org/info/rfc2580>.\n   [RFC3031]
      \ Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label
      Switching Architecture\", RFC 3031, January 2001,\n              <http://www.rfc-editor.org/info/rfc3031>.\n
      \  [RFC3289]  Baker, F., Chan, K., and A. Smith, \"Management Information\n
      \             Base for the Differentiated Services Architecture\", RFC\n              3289,
      May 2002, <http://www.rfc-editor.org/info/rfc3289>.\n   [RFC3811]  Nadeau, T.,
      Ed., and J. Cucchiara, Ed., \"Definitions of\n              Textual Conventions
      (TCs) for Multiprotocol Label\n              Switching (MPLS) Management\",
      RFC 3811, June 2004,\n              <http://www.rfc-editor.org/info/rfc3811>.\n
      \  [RFC3812]  Srinivasan, C., Viswanathan, A., and T. Nadeau,\n              \"Multiprotocol
      Label Switching (MPLS) Traffic Engineering\n              (TE) Management Information
      Base (MIB)\", RFC 3812, June\n              2004, <http://www.rfc-editor.org/info/rfc3812>.\n
      \  [RFC3813]  Srinivasan, C., Viswanathan, A., and T. Nadeau,\n              \"Multiprotocol
      Label Switching (MPLS) Label Switching\n              Router (LSR) Management
      Information Base (MIB)\", RFC 3813,\n              June 2004, <http://www.rfc-editor.org/info/rfc3813>.\n
      \  [RFC4802]  Nadeau, T., Ed., and A. Farrel, Ed., \"Generalized\n              Multiprotocol
      Label Switching (GMPLS) Traffic Engineering\n              Management Information
      Base\", RFC 4802, February 2007,\n              <http://www.rfc-editor.org/info/rfc4802>.\n
      \  [RFC6370]  Bocci, M., Swallow, G., and E. Gray, \"MPLS Transport\n              Profile
      (MPLS-TP) Identifiers\", RFC 6370, September 2011,\n              <http://www.rfc-editor.org/info/rfc6370>.\n
      \  [RFC6923]  Winter, R., Gray, E., van Helvoort, H., and M. Betts,\n              \"MPLS
      Transport Profile (MPLS-TP) Identifiers Following\n              ITU-T Conventions\",
      RFC 6923, May 2013,\n              <http://www.rfc-editor.org/info/rfc6923>.\n
      \  [T.50]     ITU-T, \"International Reference Alphabet (IRA) (Formerly\n              International
      Alphabet No. 5 or IA5) - Information\n              technology - 7-bit coded
      character set for information\n              exchange\", ITU-T Recommendation
      T.50, September 1992.\n"
    title: 16.1.  Normative References
  - contents:
    - "16.2.  Informative References\n   [RFC3410]  Case, J., Mundy, R., Partain,
      D., and B. Stewart,\n              \"Introduction and Applicability Statements
      for Internet-\n              Standard Management Framework\", RFC 3410, December
      2002,\n              <http://www.rfc-editor.org/info/rfc3410>.\n   [RFC3414]
      \ Blumenthal, U. and B. Wijnen, \"User-based Security Model\n              (USM)
      for version 3 of the Simple Network Management\n              Protocol (SNMPv3)\",
      STD 62, RFC 3414, December 2002,\n              <http://www.rfc-editor.org/info/rfc3414>.\n
      \  [RFC3826]  Blumenthal, U., Maino, F., and K. McCloghrie, \"The\n              Advanced
      Encryption Standard (AES) Cipher Algorithm in the\n              SNMP User-based
      Security Model\", RFC 3826, June 2004,\n              <http://www.rfc-editor.org/info/rfc3826>.\n
      \  [RFC4221]  Nadeau, T., Srinivasan, C., and A. Farrel, \"Multiprotocol\n              Label
      Switching (MPLS) Management Overview\", RFC 4221,\n              November 2005,
      <http://www.rfc-editor.org/info/rfc4221>.\n   [RFC5226]  Narten, T. and H. Alvestrand,
      \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\",
      BCP 26, RFC 5226,\n              May 2008, <http://www.rfc-editor.org/info/rfc5226>.\n
      \  [RFC5591]  Harrington, D. and W. Hardaker, \"Transport Security Model\n              for
      the Simple Network Management Protocol (SNMP)\", STD\n              78, RFC
      5591, June 2009,\n              <http://www.rfc-editor.org/info/rfc5591>.\n
      \  [RFC5592]  Harrington, D., Salowey, J., and W. Hardaker, \"Secure\n              Shell
      Transport Model for the Simple Network Management\n              Protocol (SNMP)\",
      RFC 5592, June 2009,\n              <http://www.rfc-editor.org/info/rfc5592>.\n
      \  [RFC5654]  Niven-Jenkins, B., Ed., Brungard, D., Ed., Betts, M., Ed.,\n              Sprecher,
      N., and S. Ueno, \"Requirements of an MPLS\n              Transport Profile\",
      RFC 5654, September 2009,\n              <http://www.rfc-editor.org/info/rfc5654>.\n
      \  [RFC6353]  Hardaker, W., \"Transport Layer Security (TLS) Transport\n              Model
      for the Simple Network Management Protocol (SNMP)\",\n              STD 78,
      RFC 6353, July 2011,\n              <http://www.rfc-editor.org/info/rfc6353>.\n
      \  [RFC6639]  King, D., Ed., and M. Venkatesan, Ed., \"Multiprotocol\n              Label
      Switching Transport Profile (MPLS-TP) MIB-Based\n              Management Overview\",
      RFC 6639, June 2012,\n              <http://www.rfc-editor.org/info/rfc6639>.\n"
    title: 16.2.  Informative References
  title: 16.  References
- contents:
  - "Acknowledgments\n   The authors would like to thank Francesco Fondelli, Josh
    Littlefield,\n   Agrahara Kiran Koushik, Metrri Jain, Muly Ilan, Randy Presuhn,
    Elwyn\n   Davies, Tom Taylor, and Pete Resnick for their valuable reviews and\n
    \  comments.  A special thanks to Joan Cucchiara and Adrian Farrel for\n   really
    getting the MIB modules into shape.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Venkatesan Mahalingam\n   Dell Inc.\n   5450 Great America
    Parkway,\n   Santa Clara, CA 95054\n   United States\n   EMail: venkat.mahalingams@gmail.com\n
    \  Sam Aldrin\n   Huawei Technologies\n   2330 Central Express Way,\n   Santa
    Clara, CA 95051\n   United States\n   EMail:  aldrin.ietf@gmail.com\n   Thomas
    D. Nadeau\n   Brocade\n   EMail: tnadeau@lucidvision.com\n   Kannan KV Sampath\n
    \  Redeem\n   India\n   EMail: kannankvs@gmail.com\n"
  title: Authors' Addresses
