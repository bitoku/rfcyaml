- title: __initial_text__
  contents:
  - '      Framework for Abstraction and Control of TE Networks (ACTN)

    '
- title: Abstract
  contents:
  - "Abstract\n   Traffic Engineered (TE) networks have a variety of mechanisms to\n\
    \   facilitate the separation of the data plane and control plane.  They\n   also\
    \ have a range of management and provisioning protocols to\n   configure and activate\
    \ network resources.  These mechanisms represent\n   key technologies for enabling\
    \ flexible and dynamic networking.  The\n   term \"Traffic Engineered network\"\
    \ refers to a network that uses any\n   connection-oriented technology under the\
    \ control of a distributed or\n   centralized control plane to support dynamic\
    \ provisioning of end-to-\n   end connectivity.\n   Abstraction of network resources\
    \ is a technique that can be applied\n   to a single network domain or across\
    \ multiple domains to create a\n   single virtualized network that is under the\
    \ control of a network\n   operator or the customer of the operator that actually\
    \ owns the\n   network resources.\n   This document provides a framework for Abstraction\
    \ and Control of TE\n   Networks (ACTN) to support virtual network services and\
    \ connectivity\n   services.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8453.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Overview  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     2.1.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n     2.2.  VNS Model of ACTN . . . . . . . . . . . . . . . . . .\
    \ . .   7\n       2.2.1.  Customers . . . . . . . . . . . . . . . . . . . . .\
    \ .   9\n       2.2.2.  Service Providers . . . . . . . . . . . . . . . . . .\
    \   9\n       2.2.3.  Network Operators . . . . . . . . . . . . . . . . . .  10\n\
    \   3.  ACTN Base Architecture  . . . . . . . . . . . . . . . . . . .  10\n  \
    \   3.1.  Customer Network Controller . . . . . . . . . . . . . . .  12\n    \
    \ 3.2.  Multi-Domain Service Coordinator  . . . . . . . . . . . .  13\n     3.3.\
    \  Provisioning Network Controller . . . . . . . . . . . . .  13\n     3.4.  ACTN\
    \ Interfaces . . . . . . . . . . . . . . . . . . . . .  14\n   4.  Advanced ACTN\
    \ Architectures . . . . . . . . . . . . . . . . .  15\n     4.1.  MDSC Hierarchy\
    \  . . . . . . . . . . . . . . . . . . . . .  15\n     4.2.  Functional Split\
    \ of MDSC Functions in Orchestrators . . .  16\n   5.  Topology Abstraction Methods\
    \  . . . . . . . . . . . . . . . .  18\n     5.1.  Abstraction Factors . . . .\
    \ . . . . . . . . . . . . . . .  18\n     5.2.  Abstraction Types . . . . . .\
    \ . . . . . . . . . . . . . .  19\n       5.2.1.  Native/White Topology . . .\
    \ . . . . . . . . . . . . .  19\n       5.2.2.  Black Topology  . . . . . . .\
    \ . . . . . . . . . . . .  19\n       5.2.3.  Grey Topology . . . . . . . . .\
    \ . . . . . . . . . . .  20\n     5.3.  Methods of Building Grey Topologies .\
    \ . . . . . . . . . .  21\n       5.3.1.  Automatic Generation of Abstract Topology\
    \ by\n               Configuration . . . . . . . . . . . . . . . . . . . .  22\n\
    \       5.3.2.  On-Demand Generation of Supplementary Topology via\n         \
    \      Path Compute Request/Reply  . . . . . . . . . . . . .  22\n     5.4.  Hierarchical\
    \ Topology Abstraction Example . . . . . . . .  23\n     5.5.  VN Recursion with\
    \ Network Layers  . . . . . . . . . . . .  25\n   6.  Access Points and Virtual\
    \ Network Access Points . . . . . . .  28\n     6.1.  Dual-Homing Scenario  .\
    \ . . . . . . . . . . . . . . . . .  30\n"
- title: '7.  Advanced ACTN Application: Multi-Destination Service  . . . . .   31'
  contents:
  - "7.  Advanced ACTN Application: Multi-Destination Service  . . . . .   31\n  \
    \   7.1.  Preplanned Endpoint Migration . . . . . . . . . . . . . .  32\n    \
    \ 7.2.  On-the-Fly Endpoint Migration . . . . . . . . . . . . . .  33\n   8. \
    \ Manageability Considerations  . . . . . . . . . . . . . . . .  33\n     8.1.\
    \  Policy  . . . . . . . . . . . . . . . . . . . . . . . . .  34\n     8.2.  Policy\
    \ Applied to the Customer Network Controller . . . .  34\n     8.3.  Policy Applied\
    \ to the Multi-Domain Service Coordinator  .  35\n     8.4.  Policy Applied to\
    \ the Provisioning Network Controller . .  35\n   9.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  36\n     9.1.  CNC-MDSC Interface (CMI)\
    \  . . . . . . . . . . . . . . . .  37\n     9.2.  MDSC-PNC Interface (MPI)  .\
    \ . . . . . . . . . . . . . . .  37\n   10. IANA Considerations . . . . . . .\
    \ . . . . . . . . . . . . . .  37\n   11. Informative References  . . . . . .\
    \ . . . . . . . . . . . . .  38\n   Appendix A.  Example of MDSC and PNC Functions\
    \ Integrated in a\n                Service/Network Orchestrator . . . . . . .\
    \ . . . . .  40\n   Contributors  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  41\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  42\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The term \"Traffic Engineered network\" refers to a network\
    \ that uses\n   any connection-oriented technology under the control of a distributed\n\
    \   or centralized control plane to support dynamic provisioning of end-\n   to-end\
    \ connectivity.  TE networks have a variety of mechanisms to\n   facilitate the\
    \ separation of data planes and control planes including\n   distributed signaling\
    \ for path setup and protection, centralized path\n   computation for planning\
    \ and traffic engineering, and a range of\n   management and provisioning protocols\
    \ to configure and activate\n   network resources.  These mechanisms represent\
    \ key technologies for\n   enabling flexible and dynamic networking.  Some examples\
    \ of networks\n   that are in scope of this definition are optical, MPLS Transport\n\
    \   Profile (MPLS-TP) [RFC5654], and MPLS-TE networks [RFC2702].\n   One of the\
    \ main drivers for Software-Defined Networking (SDN)\n   [RFC7149] is a decoupling\
    \ of the network control plane from the data\n   plane.  This separation has been\
    \ achieved for TE networks with the\n   development of MPLS/GMPLS [RFC3945] and\
    \ the Path Computation Element\n   (PCE) [RFC4655].  One of the advantages of\
    \ SDN is its logically\n   centralized control regime that allows a global view\
    \ of the\n   underlying networks.  Centralized control in SDN helps improve\n\
    \   network resource utilization compared with distributed network\n   control.\
    \  For TE-based networks, a PCE may serve as a logically\n   centralized path\
    \ computation function.\n   This document describes a set of management and control\
    \ functions\n   used to operate one or more TE networks to construct virtual networks\n\
    \   that can be presented to customers and that are built from\n   abstractions\
    \ of the underlying TE networks.  For example, a link in\n   the customer's network\
    \ is constructed from a path or collection of\n   paths in the underlying networks.\
    \  We call this set of functions\n   \"Abstraction and Control of TE Networks\"\
    \ or \"ACTN\".\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   Three key aspects that need to be solved by SDN are:\n   o \
    \ Separation of service requests from service delivery so that the\n      configuration\
    \ and operation of a network is transparent from the\n      point of view of the\
    \ customer but it remains responsive to the\n      customer's services and business\
    \ needs.\n   o  Network abstraction: As described in [RFC7926], abstraction is\
    \ the\n      process of applying policy to a set of information about a TE\n \
    \     network to produce selective information that represents the\n      potential\
    \ ability to connect across the network.  The process of\n      abstraction presents\
    \ the connectivity graph in a way that is\n      independent of the underlying\
    \ network technologies, capabilities,\n      and topology so that the graph can\
    \ be used to plan and deliver\n      network services in a uniform way\n   o \
    \ Coordination of resources across multiple independent networks and\n      multiple\
    \ technology layers to provide end-to-end services\n      regardless of whether\
    \ or not the networks use SDN.\n   As networks evolve, the need to provide support\
    \ for distinct\n   services, separated service orchestration, and resource abstraction\n\
    \   have emerged as key requirements for operators.  In order to support\n   multiple\
    \ customers each with its own view of and control of the\n   server network, a\
    \ network operator needs to partition (or \"slice\") or\n   manage sharing of\
    \ the network resources.  Network slices can be\n   assigned to each customer\
    \ for guaranteed usage, which is a step\n   further than shared use of common\
    \ network resources.\n   Furthermore, each network represented to a customer can\
    \ be built from\n   virtualization of the underlying networks so that, for example,\
    \ a\n   link in the customer's network is constructed from a path or\n   collection\
    \ of paths in the underlying network.\n   ACTN can facilitate virtual network\
    \ operation via the creation of a\n   single virtualized network or a seamless\
    \ service.  This supports\n   operators in viewing and controlling different domains\
    \ (at any\n   dimension: applied technology, administrative zones, or vendor-\n\
    \   specific technology islands) and presenting virtualized networks to\n   their\
    \ customers.\n   The ACTN framework described in this document facilitates:\n\
    \   o  Abstraction of the underlying network resources to higher-layer\n     \
    \ applications and customers [RFC7926].\n   o  Virtualization of particular underlying\
    \ resources, whose selection\n      criterion is the allocation of those resources\
    \ to a particular\n      customer, application, or service [ONF-ARCH].\n   o \
    \ TE Network slicing of infrastructure to meet specific customers'\n      service\
    \ requirements.\n   o  Creation of an abstract environment allowing operators\
    \ to view and\n      control multi-domain networks as a single abstract network.\n\
    \   o  The presentation to customers of networks as a virtual network via\n  \
    \    open and programmable interfaces.\n"
- title: 2.1.  Terminology
  contents:
  - "2.1.  Terminology\n   The following terms are used in this document.  Some of\
    \ them are\n   newly defined, some others reference existing definitions:\n  \
    \ Domain:  A domain as defined by [RFC4655] is \"any collection of\n      network\
    \ elements within a common sphere of address management or\n      path computation\
    \ responsibility\".  Specifically, within this\n      document we mean a part\
    \ of an operator's network that is under\n      common management (i.e., under\
    \ shared operational management using\n      the same instances of a tool and\
    \ the same policies).  Network\n      elements will often be grouped into domains\
    \ based on technology\n      types, vendor profiles, and geographic proximity.\n\
    \   Abstraction:  This process is defined in [RFC7926].\n   TE Network Slicing:\
    \  In the context of ACTN, a TE network slice is a\n      collection of resources\
    \ that is used to establish a logically\n      dedicated virtual network over\
    \ one or more TE networks.  TE\n      network slicing allows a network operator\
    \ to provide dedicated\n      virtual networks for applications/customers over\
    \ a common network\n      infrastructure.  The logically dedicated resources are\
    \ a part of\n      the larger common network infrastructures that are shared among\n\
    \      various TE network slice instances, which are the end-to-end\n      realization\
    \ of TE network slicing, consisting of the combination\n      of physically or\
    \ logically dedicated resources.\n   Node:  A node is a vertex on the graph representation\
    \ of a TE\n      topology.  In a physical network topology, a node corresponds\
    \ to a\n      physical network element (NE) such as a router.  In an abstract\n\
    \      network topology, a node (sometimes called an \"abstract node\") is\n \
    \     a representation as a single vertex of one or more physical NEs\n      and\
    \ their connecting physical connections.  The concept of a node\n      represents\
    \ the ability to connect from any access to the node (a\n      link end) to any\
    \ other access to that node, although \"limited\n      cross-connect capabilities\"\
    \ may also be defined to restrict this\n      functionality.  Network abstraction\
    \ may be applied recursively, so\n      a node in one topology may be created\
    \ by applying abstraction to\n      the nodes in the underlying topology.\n  \
    \ Link:  A link is an edge on the graph representation of a TE\n      topology.\
    \  Two nodes connected by a link are said to be \"adjacent\"\n      in the TE\
    \ topology.  In a physical network topology, a link\n      corresponds to a physical\
    \ connection.  In an abstract network\n      topology, a link (sometimes called\
    \ an \"abstract link\") is a\n      representation of the potential to connect\
    \ a pair of points with\n      certain TE parameters (see [RFC7926] for details).\
    \  Network\n      abstraction may be applied recursively, so a link in one topology\n\
    \      may be created by applying abstraction to the links in the\n      underlying\
    \ topology.\n   Abstract Topology:  The topology of abstract nodes and abstract\
    \ links\n      presented through the process of abstraction by a lower-layer\n\
    \      network for use by a higher-layer network.\n   Virtual Network (VN):  A\
    \ VN is a network provided by a service\n      provider to a customer for the\
    \ customer to use in any way it wants\n      as though it was a physical network.\
    \  There are two views of a VN\n      as follows:\n      o  The VN can be abstracted\
    \ as a set of edge-to-edge links (a Type\n         1 VN).  Each link is referred\
    \ as a \"VN member\" and is formed as\n         an end-to-end tunnel across the\
    \ underlying networks.  Such\n         tunnels may be constructed by recursive\
    \ slicing or abstraction\n         of paths in the underlying networks and can\
    \ encompass edge\n         points of the customer's network, access links, intra-domain\n\
    \         paths, and inter-domain links.\n      o  The VN can also be abstracted\
    \ as a topology of virtual nodes\n         and virtual links (a Type 2 VN).  The\
    \ operator needs to map the\n         VN to actual resource assignment, which\
    \ is known as \"virtual\n         network embedding\".  The nodes in this case\
    \ include physical\n         endpoints, border nodes, and internal nodes as well\
    \ as\n         abstracted nodes.  Similarly, the links include physical access\n\
    \         links, inter-domain links, and intra-domain links as well as\n     \
    \    abstract links.\n      Clearly, a Type 1 VN is a special case of a Type 2\
    \ VN.\n   Access link:  A link between a customer node and an operator node.\n\
    \   Inter-domain link:  A link between domains under distinct management\n   \
    \   administration.\n   Access Point (AP):  An AP is a logical identifier shared\
    \ between the\n      customer and the operator used to identify an access link.\
    \  The AP\n      is used by the customer when requesting a Virtual Network Service\n\
    \      (VNS).  Note that the term \"TE Link Termination Point\" defined in\n \
    \     [TE-TOPO] describes the endpoints of links, while an AP is a\n      common\
    \ identifier for the link itself.\n   VN Access Point (VNAP):  A VNAP is the binding\
    \ between an AP and a\n      given VN.\n   Server Network:  As defined in [RFC7926],\
    \ a server network is a\n      network that provides connectivity for another\
    \ network (the Client\n      Network) in a client-server relationship.\n"
- title: 2.2.  VNS Model of ACTN
  contents:
  - "2.2.  VNS Model of ACTN\n   A Virtual Network Service (VNS) is the service agreement\
    \ between a\n   customer and operator to provide a VN.  When a VN is a simple\n\
    \   connectivity between two points, the difference between VNS and\n   connectivity\
    \ service becomes blurred.  There are three types of VNSs\n   defined in this\
    \ document.\n   o  Type 1 VNS refers to a VNS in which the customer is allowed\
    \ to\n      create and operate a Type 1 VN.\n   o  Type 2a and 2b VNS refer to\
    \ VNSs in which the customer is allowed\n      to create and operates a Type 2\
    \ VN.  With a Type 2a VNS, the VN is\n      statically created at service configuration\
    \ time, and the customer\n      is not allowed to change the topology (e.g., by\
    \ adding or deleting\n      abstract nodes and links).  A Type 2b VNS is the same\
    \ as a Type 2a\n      VNS except that the customer is allowed to make dynamic\
    \ changes to\n      the initial topology created at service configuration time.\n\
    \   VN Operations are functions that a customer can exercise on a VN\n   depending\
    \ on the agreement between the customer and the operator.\n   o  VN Creation allows\
    \ a customer to request the instantiation of a\n      VN.  This could be through\
    \ offline preconfiguration or through\n      dynamic requests specifying attributes\
    \ to a Service Level\n      Agreement (SLA) to satisfy the customer's objectives.\n\
    \   o  Dynamic Operations allow a customer to modify or delete the VN.\n     \
    \ The customer can further act upon the virtual network to\n      create/modify/delete\
    \ virtual links and nodes.  These changes will\n      result in subsequent tunnel\
    \ management in the operator's networks.\n   There are three key entities in the\
    \ ACTN VNS model:\n   o  Customers\n   o  Service Providers\n   o  Network Operators\n\
    \   These entities are related in a three tier model as shown in\n   Figure 1.\n\
    \                           +----------------------+\n                       \
    \    |       Customer       |\n                           +----------------------+\n\
    \                                      |\n                       VNS       ||\
    \   |   /\\     VNS\n                      Request    ||   |   ||    Reply\n \
    \                                \\/   |   ||\n                           +----------------------+\n\
    \                           |  Service Provider    |\n                       \
    \    +----------------------+\n                           /          |       \
    \    \\\n                          /           |            \\\n             \
    \            /            |             \\\n                        /        \
    \     |              \\\n    +------------------+   +------------------+   +------------------+\n\
    \    |Network Operator 1|   |Network Operator 2|   |Network Operator 3|\n    +------------------+\
    \   +------------------+   +------------------+\n                      Figure\
    \ 1: The Three-Tier Model\n   The commercial roles of these entities are described\
    \ in the following\n   sections.\n"
- title: 2.2.1.  Customers
  contents:
  - "2.2.1.  Customers\n   Basic customers include fixed residential users, mobile\
    \ users, and\n   small enterprises.  Each requires a small amount of resources\
    \ and is\n   characterized by steady requests (relatively time invariant).  Basic\n\
    \   customers do not modify their services themselves: if a service\n   change\
    \ is needed, it is performed by the provider as a proxy.\n   Advanced customers\
    \ include enterprises and governments.  Such\n   customers ask for both point-to\
    \ point and multipoint connectivity\n   with high resource demands varying significantly\
    \ in time.  This is\n   one of the reasons why a bundled service offering is not\
    \ enough, and\n   it is desirable to provide each advanced customer with a customized\n\
    \   VNS.  Advanced customers may also have the ability to modify their\n   service\
    \ parameters within the scope of their virtualized\n   environments.  The primary\
    \ focus of ACTN is Advanced Customers.\n   As customers are geographically spread\
    \ over multiple network operator\n   domains, they have to interface to multiple\
    \ operators and may have to\n   support multiple virtual network services with\
    \ different underlying\n   objectives set by the network operators.  To enable\
    \ these customers\n   to support flexible and dynamic applications, they need\
    \ to control\n   their allocated virtual network resources in a dynamic fashion;\
    \ that\n   means that they need a view of the topology that spans all of the\n\
    \   network operators.  Customers of a given service provider can, in\n   turn,\
    \ offer a service to other customers in a recursive way.\n"
- title: 2.2.2.  Service Providers
  contents:
  - "2.2.2.  Service Providers\n   In the scope of ACTN, service providers deliver\
    \ VNSs to their\n   customers.  Service providers may or may not own physical\
    \ network\n   resources (i.e., may or may not be network operators as described\
    \ in\n   Section 2.2.3).  When a service provider is the same as the network\n\
    \   operator, the case is similar to existing VPN models applied to a\n   single\
    \ operator (although it may be hard to use this approach when\n   the customer\
    \ spans multiple independent network operator domains).\n   When network operators\
    \ supply only infrastructure, while distinct\n   service providers interface with\
    \ the customers, the service providers\n   are themselves customers of the network\
    \ infrastructure operators.\n   One service provider may need to keep multiple\
    \ independent network\n   operators because its end users span geographically\
    \ across multiple\n   network operator domains.  In some cases, a service provider\
    \ is also\n   a network operator when it owns network infrastructure on which\n\
    \   service is provided.\n"
- title: 2.2.3.  Network Operators
  contents:
  - "2.2.3.  Network Operators\n   Network operators are the infrastructure operators\
    \ that provision the\n   network resources and provide network resources to their\
    \ customers.\n   The layered model described in this architecture separates the\n\
    \   concerns of network operators and customers, with service providers\n   acting\
    \ as aggregators of customer requests.\n"
- title: 3.  ACTN Base Architecture
  contents:
  - "3.  ACTN Base Architecture\n   This section provides a high-level model of ACTN,\
    \ showing the\n   interfaces and the flow of control between components.\n   The\
    \ ACTN architecture is based on a three-tier reference model and\n   allows for\
    \ hierarchy and recursion.  The main functionalities within\n   an ACTN system\
    \ are:\n   o  Multi-domain coordination: This function oversees the specific\n\
    \      aspects of different domains and builds a single abstracted end-\n    \
    \  to-end network topology in order to coordinate end-to-end path\n      computation\
    \ and path/service provisioning.  Domain sequence path\n      calculation/determination\
    \ is also a part of this function.\n   o  Abstraction: This function provides\
    \ an abstracted view of the\n      underlying network resources for use by the\
    \ customer -- a customer\n      may be the client or a higher-level controller\
    \ entity.  This\n      function includes network path computation based on customer-\n\
    \      service-connectivity request constraints, path computation based\n    \
    \  on the global network-wide abstracted topology, and the creation\n      of\
    \ an abstracted view of network resources allocated to each\n      customer. \
    \ These operations depend on customer-specific network\n      objective functions\
    \ and customer traffic profiles.\n   o  Customer mapping/translation: This function\
    \ is to map customer\n      requests/commands into network provisioning requests\
    \ that can be\n      sent from the Multi-Domain Service Coordinator (MDSC) to\
    \ the\n      Provisioning Network Controller (PNC) according to business\n   \
    \   policies provisioned statically or dynamically at the Operations\n      Support\
    \ System (OSS) / Network Management System (NMS).\n      Specifically, it provides\
    \ mapping and translation of a customer's\n      service request into a set of\
    \ parameters that are specific to a\n      network type and technology such that\
    \ network configuration\n      process is made possible.\n   o  Virtual service\
    \ coordination: This function translates information\n      that is customer service\
    \ related into virtual network service\n      operations in order to seamlessly\
    \ operate virtual networks while\n      meeting a customer's service requirements.\
    \  In the context of\n      ACTN, service/virtual service coordination includes\
    \ a number of\n      service orchestration functions such as multi-destination\
    \ load-\n      balancing and guarantees of service quality.  It also includes\n\
    \      notifications for service fault and performance degradation and so\n  \
    \    forth.\n   The base ACTN architecture defines three controller types and\
    \ the\n   corresponding interfaces between these controllers.  The following\n\
    \   types of controller are shown in Figure 2:\n   o  CNC - Customer Network Controller\n\
    \   o  MDSC - Multi-Domain Service Coordinator\n   o  PNC - Provisioning Network\
    \ Controller\n   Figure 2 also shows the following interfaces\n   o  CMI - CNC-MDSC\
    \ Interface\n   o  MPI - MDSC-PNC Interface\n   o  SBI - Southbound Interface\n\
    \             +---------+           +---------+             +---------+\n    \
    \         |   CNC   |           |   CNC   |             |   CNC   |\n        \
    \     +---------+           +---------+             +---------+\n            \
    \       \\                    |                       /\n                    \\\
    \                   |                      /\n   Boundary  ========\\==================|=====================/=======\n\
    \   between            \\                 |                    /\n   Customer\
    \ &          -----------      | CMI  --------------\n   Network Operator     \
    \          \\     |     /\n                                +---------------+\n\
    \                                |     MDSC      |\n                         \
    \       +---------------+\n                                  /     |     \\\n\
    \                      ------------      | MPI  -------------\n              \
    \       /                  |                   \\\n                +-------+ \
    \         +-------+            +-------+\n                |  PNC  |          |\
    \  PNC  |            |  PNC  |\n                +-------+          +-------+ \
    \           +-------+\n                    | SBI            /   |            \
    \      /  \\\n                    |               /    | SBI         SBI /   \
    \ \\\n                ---------        -----   |                /      \\\n  \
    \             (         )      (     )  |               /        \\\n        \
    \       - Control -     ( Phys. ) |              /      -----\n              (\
    \  Plane    )     ( Net )  |             /      (     )\n             (  Physical\
    \   )     -----   |            /      ( Phys. )\n              (  Network  ) \
    \           -----        -----     ( Net )\n               -         -       \
    \     (     )      (     )     -----\n               (         )           ( Phys.\
    \ )    ( Phys. )\n                ---------             ( Net )      ( Net )\n\
    \                                       -----        -----\n                 \
    \    Figure 2: ACTN Base Architecture\n   Note that this is a functional architecture:\
    \ an implementation and\n   deployment might collocate one or more of the functional\
    \ components.\n   Figure 2 shows a case where the service provider is also a network\n\
    \   operator.\n"
- title: 3.1.  Customer Network Controller
  contents:
  - "3.1.  Customer Network Controller\n   A Customer Network Controller (CNC) is\
    \ responsible for communicating\n   a customer's VNS requirements to the network\
    \ operator over the CNC-\n   MDSC Interface (CMI).  It has knowledge of the endpoints\
    \ associated\n   with the VNS (expressed as APs), the service policy, and other\
    \ QoS\n   information related to the service.\n   As the CNC directly interfaces\
    \ with the applications, it understands\n   multiple application requirements\
    \ and their service needs.  The\n   capability of a CNC beyond its CMI role is\
    \ outside the scope of ACTN\n   and may be implemented in different ways.  For\
    \ example, the CNC may,\n   in fact, be a controller or part of a controller in\
    \ the customer's\n   domain, or the CNC functionality could also be implemented\
    \ as part of\n   a service provider's portal.\n"
- title: 3.2.  Multi-Domain Service Coordinator
  contents:
  - "3.2.  Multi-Domain Service Coordinator\n   A Multi-Domain Service Coordinator\
    \ (MDSC) is a functional block that\n   implements all of the ACTN functions listed\
    \ in Section 3 and\n   described further in Section 4.2.  Two functions of the\
    \ MDSC, namely,\n   multi-domain coordination and virtualization/abstraction are\
    \ referred\n   to as network-related functions; whereas the other two functions,\n\
    \   namely, customer mapping/translation and virtual service\n   coordination,\
    \ are referred to as service-related functions.  The MDSC\n   sits at the center\
    \ of the ACTN model between the CNC that issues\n   connectivity requests and\
    \ the Provisioning Network Controllers (PNCs)\n   that manage the network resources.\
    \  The key point of the MDSC (and of\n   the whole ACTN framework) is detaching\
    \ the network and service\n   control from underlying technology to help the customer\
    \ express the\n   network as desired by business needs.  The MDSC envelopes the\n\
    \   instantiation of the right technology and network control to meet\n   business\
    \ criteria.  In essence, it controls and manages the\n   primitives to achieve\
    \ functionalities as desired by the CNC.\n   In order to allow for multi-domain\
    \ coordination, a 1:N relationship\n   must be allowed between MDSCs and PNCs.\n\
    \   In addition to that, it could also be possible to have an M:1\n   relationship\
    \ between MDSCs and PNCs to allow for network-resource\n   partitioning/sharing\
    \ among different customers that are not\n   necessarily connected to the same\
    \ MDSC (e.g., different service\n   providers) but that are all using the resources\
    \ of a common network\n   infrastructure operator.\n"
- title: 3.3.  Provisioning Network Controller
  contents:
  - "3.3.  Provisioning Network Controller\n   The Provisioning Network Controller\
    \ (PNC) oversees configuring the\n   network elements, monitoring the topology\
    \ (physical or virtual) of\n   the network, and collecting information about the\
    \ topology (either\n   raw or abstracted).\n   The PNC functions can be implemented\
    \ as part of an SDN domain\n   controller, a Network Management System (NMS),\
    \ an Element Management\n   System (EMS), an active PCE-based controller [RFC8283],\
    \ or any other\n   means to dynamically control a set of nodes that implements\
    \ a\n   northbound interface from the standpoint of the nodes (which is out\n\
    \   of the scope of this document).  A PNC domain includes all the\n   resources\
    \ under the control of a single PNC.  It can be composed of\n   different routing\
    \ domains and administrative domains, and the\n   resources may come from different\
    \ layers.  The interconnection\n   between PNC domains is illustrated in Figure\
    \ 3.\n                     _______                        _______\n          \
    \         _(       )_                    _(       )_\n                 _(    \
    \       )_                _(           )_\n                (               ) \
    \    Border   (               )\n               (     PNC     ------   Link  \
    \ ------     PNC     )\n              (   Domain X  |Border|========|Border| \
    \ Domain Y   )\n              (             | Node |        | Node |         \
    \    )\n               (             ------          ------             )\n  \
    \              (_             _)              (_             _)\n            \
    \      (_         _)                  (_         _)\n                    (_______)\
    \                      (_______)\n                       Figure 3: PNC Domain\
    \ Borders\n"
- title: 3.4.  ACTN Interfaces
  contents:
  - "3.4.  ACTN Interfaces\n   Direct customer control of transport network elements\
    \ and virtualized\n   services is not a viable proposition for network operators\
    \ due to\n   security and policy concerns.  Therefore, the network has to provide\n\
    \   open, programmable interfaces, through which customer applications\n   can\
    \ create, replace, and modify virtual network resources and\n   services in an\
    \ interactive, flexible, and dynamic fashion.\n   Three interfaces exist in the\
    \ ACTN architecture as shown in Figure 2.\n   o  CMI: The CNC-MDSC Interface (CMI)\
    \ is an interface between a CNC\n      and an MDSC.  The CMI is a business boundary\
    \ between customer and\n      network operator.  It is used to request a VNS for\
    \ an application.\n      All service-related information is conveyed over this\
    \ interface\n      (such as the VNS type, topology, bandwidth, and service\n \
    \     constraints).  Most of the information over this interface is\n      agnostic\
    \ of the technology used by network operators, but there\n      are some cases\
    \ (e.g., access link configuration) where it is\n      necessary to specify technology-specific\
    \ details.\n   o  MPI: The MDSC-PNC Interface (MPI) is an interface between an\
    \ MDSC\n      and a PNC.  It communicates requests for new connectivity or for\n\
    \      bandwidth changes in the physical network.  In multi-domain\n      environments,\
    \ the MDSC needs to communicate with multiple PNCs,\n      each responsible for\
    \ control of a domain.  The MPI presents an\n      abstracted topology to the\
    \ MDSC hiding technology-specific aspects\n      of the network and hiding topology\
    \ according to policy.\n   o  SBI: The Southbound Interface (SBI) is out of scope\
    \ of ACTN.  Many\n      different SBIs have been defined for different environments,\n\
    \      technologies, standards organizations, and vendors.  It is shown\n    \
    \  in Figure 3 for reference reason only.\n"
- title: 4.  Advanced ACTN Architectures
  contents:
  - "4.  Advanced ACTN Architectures\n   This section describes advanced configurations\
    \ of the ACTN\n   architecture.\n"
- title: 4.1.  MDSC Hierarchy
  contents:
  - "4.1.  MDSC Hierarchy\n   A hierarchy of MDSCs can be foreseen for many reasons,\
    \ among which\n   are scalability, administrative choices, or putting together\n\
    \   different layers and technologies in the network.  In the case where\n   there\
    \ is a hierarchy of MDSCs, we introduce the terms \"higher-level\n   MDSC\" (MDSC-H)\
    \ and \"lower-level MDSC\" (MDSC-L).  The interface\n   between them is a recursion\
    \ of the MPI.  An implementation of an\n   MDSC-H makes provisioning requests\
    \ as normal using the MPI, but an\n   MDSC-L must be able to receive requests\
    \ as normal at the CMI and also\n   at the MPI.  The hierarchy of MDSCs can be\
    \ seen in Figure 4.\n   Another implementation choice could foresee the usage\
    \ of an MDSC-L\n   for all the PNCs related to a given technology (e.g., Internet\n\
    \   Protocol (IP) / Multiprotocol Label Switching (MPLS)) and a different\n  \
    \ MDSC-L for the PNCs related to another technology (e.g., Optical\n   Transport\
    \ Network (OTN) / Wavelength Division Multiplexing (WDM)) and\n   an MDSC-H to\
    \ coordinate them.\n                                  +--------+\n           \
    \                       |   CNC  |\n                                  +--------+\n\
    \                                       |          +-----+\n                 \
    \                      | CMI      | CNC |\n                                 +----------+\
    \     +-----+\n                          -------|  MDSC-H  |----    |\n      \
    \                   |       +----------+    |   | CMI\n                     MPI\
    \ |                   MPI |   |\n                         |                  \
    \     |   |\n                    +---------+               +---------+\n     \
    \               |  MDSC-L |               |  MDSC-L |\n                    +---------+\
    \               +---------+\n                  MPI |     |                   |\
    \     |\n                      |     |                   |     |\n           \
    \        -----   -----             -----   -----\n                  | PNC | |\
    \ PNC |           | PNC | | PNC |\n                   -----   -----          \
    \   -----   -----\n                         Figure 4: MDSC Hierarchy\n   The hierarchy\
    \ of MDSC can be recursive, where an MDSC-H is, in turn,\n   an MDSC-L to a higher-level\
    \ MDSC-H.\n"
- title: 4.2.  Functional Split of MDSC Functions in Orchestrators
  contents:
  - "4.2.  Functional Split of MDSC Functions in Orchestrators\n   An implementation\
    \ choice could separate the MDSC functions into two\n   groups: one group for\
    \ service-related functions and the other for\n   network-related functions. \
    \ This enables the implementation of a\n   service orchestrator that provides\
    \ the service-related functions of\n   the MDSC and a network orchestrator that\
    \ provides the network-related\n   functions of the MDSC.  This split is consistent\
    \ with the YANG\n   service model architecture described in [RFC8309].  Figure\
    \ 5 depicts\n   this and shows how the ACTN interfaces may map to YANG data models.\n\
    \                                +--------------------+\n                    \
    \            |           Customer |\n                                |   +-----+\
    \          |\n                                |   | CNC |          |\n       \
    \                         |   +-----+          |\n                           \
    \     +--------------------+\n                                         CMI | \
    \ Customer Service Model\n                                             |\n   \
    \                     +---------------------------------------+\n            \
    \            |                          Service      |\n                ********|***********************\
    \   Orchestrator |\n                * MDSC  |  +-----------------+ *         \
    \       |\n                *       |  | Service-related | *                |\n\
    \                *       |  |    Functions    | *                |\n         \
    \       *       |  +-----------------+ *                |\n                * \
    \      +----------------------*----------------+\n                *          \
    \                    *  |  Service Delivery\n                *               \
    \               *  |  Model\n                *       +----------------------*----------------+\n\
    \                *       |                      *   Network      |\n         \
    \       *       |  +-----------------+ *   Orchestrator |\n                * \
    \      |  | Network-related | *                |\n                *       |  |\
    \    Functions    | *                |\n                *       |  +-----------------+\
    \ *                |\n                ********|***********************       \
    \         |\n                        +---------------------------------------+\n\
    \                                         MPI |  Network Configuration\n     \
    \                                        |  Model\n                          \
    \     +------------------------+\n                               |           \
    \ Domain      |\n                               |  +------+  Controller  |\n \
    \                              |  | PNC  |              |\n                  \
    \             |  +------+              |\n                               +------------------------+\n\
    \                                         SBI |  Device Configuration\n      \
    \                                       |  Model\n                           \
    \              +--------+\n                                         | Device |\n\
    \                                         +--------+\n   Figure 5: ACTN Architecture\
    \ in the Context of the YANG Service Models\n"
- title: 5.  Topology Abstraction Methods
  contents:
  - "5.  Topology Abstraction Methods\n   Topology abstraction is described in [RFC7926].\
    \  This section\n   discusses topology abstraction factors, types, and their context\
    \ in\n   the ACTN architecture.\n   Abstraction in ACTN is performed by the PNC\
    \ when presenting available\n   topology to the MDSC, or by an MDSC-L when presenting\
    \ topology to an\n   MDSC-H.  This function is different from the creation of\
    \ a VN (and\n   particularly a Type 2 VN) that is not abstraction but construction\
    \ of\n   virtual resources.\n"
- title: 5.1.  Abstraction Factors
  contents:
  - "5.1.  Abstraction Factors\n   As discussed in [RFC7926], abstraction is tied\
    \ with the policy of the\n   networks.  For instance, per an operational policy,\
    \ the PNC would not\n   provide any technology-specific details (e.g., optical\
    \ parameters for\n   Wavelength Switched Optical Network (WSON) in the abstract\
    \ topology\n   it provides to the MDSC.  Similarly, the policy of the networks\
    \ may\n   determine the abstraction type as described in Section 5.2.\n   There\
    \ are many factors that may impact the choice of abstraction:\n   o  Abstraction\
    \ depends on the nature of the underlying domain\n      networks.  For instance,\
    \ packet networks may be abstracted with\n      fine granularity while abstraction\
    \ of optical networks depends on\n      the switching units (such as wavelengths)\
    \ and the end-to-end\n      continuity and cross-connect limitations within the\
    \ network.\n   o  Abstraction also depends on the capability of the PNCs.  As\n\
    \      abstraction requires hiding details of the underlying network\n      resources,\
    \ the PNC's capability to run algorithms impacts the\n      feasibility of abstraction.\
    \  Some PNCs may not have the ability to\n      abstract native topology while\
    \ other PNCs may have the ability to\n      use sophisticated algorithms.\n  \
    \ o  Abstraction is a tool that can improve scalability.  Where the\n      native\
    \ network resource information is of a large size, there is a\n      specific\
    \ scaling benefit to abstraction.\n   o  The proper abstraction level may depend\
    \ on the frequency of\n      topology updates and vice versa.\n   o  The nature\
    \ of the MDSC's support for technology-specific\n      parameters impacts the\
    \ degree/level of abstraction.  If the MDSC\n      is not capable of handling\
    \ such parameters, then a higher level of\n      abstraction is needed.\n   o\
    \  In some cases, the PNC is required to hide key internal\n      topological\
    \ data from the MDSC.  Such confidentiality can be\n      achieved through abstraction.\n"
- title: 5.2.  Abstraction Types
  contents:
  - "5.2.  Abstraction Types\n   This section defines the following three types of\
    \ topology\n   abstraction:\n   o  Native/White Topology (Section 5.2.1)\n   o\
    \  Black Topology (Section 5.2.2)\n   o  Grey Topology (Section 5.2.3)\n"
- title: 5.2.1.  Native/White Topology
  contents:
  - "5.2.1.  Native/White Topology\n   This is a case where the PNC provides the actual\
    \ network topology to\n   the MDSC without any hiding or filtering of information,\
    \ i.e., no\n   abstraction is performed.  In this case, the MDSC has the full\n\
    \   knowledge of the underlying network topology and can operate on it\n   directly.\n"
- title: 5.2.2.  Black Topology
  contents:
  - "5.2.2.  Black Topology\n   A black topology replaces a full network with a minimal\n\
    \   representation of the edge-to-edge topology without disclosing any\n   node\
    \ internal connectivity information.  The entire domain network\n   may be abstracted\
    \ as a single abstract node with the network's\n   access/egress links appearing\
    \ as the ports to the abstract node and\n   the implication that any port can\
    \ be \"cross-connected\" to any other.\n   Figure 6 depicts a native topology\
    \ with the corresponding black\n   topology with one virtual node and inter-domain\
    \ links.  In this case,\n   the MDSC has to make a provisioning request to the\
    \ PNCs to establish\n   the port-to-port connection.  If there is a large number\
    \ of\n   interconnected domains, this abstraction method may impose a heavy\n\
    \   coordination load at the MDSC level in order to find an optimal end-\n   to-end\
    \ path since the abstraction hides so much information that it\n   is not possible\
    \ to determine whether an end-to-end path is feasible\n   without asking each\
    \ PNC to set up each path fragment.  For this\n   reason, the MPI might need to\
    \ be enhanced to allow the PNCs to be\n   queried for the practicality and characteristics\
    \ of paths across the\n   abstract node.\n                   .....................................\n\
    \                   : PNC Domain                        :\n                  \
    \ :  +--+     +--+     +--+     +--+  :\n                ------+  +-----+  +-----+\
    \  +-----+  +------\n                   :  ++-+     ++-+     +-++     +-++  :\n\
    \                   :   |        |         |        |   :\n                  \
    \ :   |        |         |        |   :\n                   :   |        |   \
    \      |        |   :\n                   :   |        |         |        |  \
    \ :\n                   :  ++-+     ++-+     +-++     +-++  :\n              \
    \  ------+  +-----+  +-----+  +-----+  +------\n                   :  +--+   \
    \  +--+     +--+     +--+  :\n                   :....................................\n\
    \                                +----------+\n                             ---+\
    \          +---\n                                | Abstract |\n              \
    \                  |   Node   |\n                             ---+          +---\n\
    \                                +----------+\n               Figure 6: Native\
    \ Topology with Corresponding\n               Black Topology Expressed as an Abstract\
    \ Node\n"
- title: 5.2.3.  Grey Topology
  contents:
  - "5.2.3.  Grey Topology\n   A grey topology represents a compromise between black\
    \ and white\n   topologies from a granularity point of view.  In this case, the\
    \ PNC\n   exposes an abstract topology containing all PNC domain border nodes\n\
    \   and an abstraction of the connectivity between those border nodes.\n   This\
    \ abstraction may contain either physical or abstract nodes/links.\n   Two types\
    \ of grey topology are identified:\n   o  In a type A grey topology, border nodes\
    \ are connected by a full\n      mesh of TE links (see Figure 7).\n   o  In a\
    \ type B grey topology, border nodes are connected over a more-\n      detailed\
    \ network comprising internal abstract nodes and abstracted\n      links.  This\
    \ mode of abstraction supplies the MDSC with more\n      information about the\
    \ internals of the PNC domain and allows it to\n      make more informed choices\
    \ about how to route connectivity over\n      the underlying network.\n      \
    \            .....................................\n                  : PNC Domain\
    \                        :\n                  :  +--+     +--+     +--+     +--+\
    \  :\n               ------+  +-----+  +-----+  +-----+  +------\n           \
    \       :  ++-+     ++-+     +-++     +-++  :\n                  :   |       \
    \ |         |        |   :\n                  :   |        |         |       \
    \ |   :\n                  :   |        |         |        |   :\n           \
    \       :   |        |         |        |   :\n                  :  ++-+     ++-+\
    \     +-++     +-++  :\n               ------+  +-----+  +-----+  +-----+  +------\n\
    \                  :  +--+     +--+     +--+     +--+  :\n                  :....................................\n\
    \                           ....................\n                           :\
    \ Abstract Network :\n                           :                  :\n      \
    \                     :   +--+    +--+   :\n                        -------+ \
    \ +----+  +-------\n                           :   ++-+    +-++   :\n        \
    \                   :    |  \\  /  |    :\n                           :    | \
    \  \\/   |    :\n                           :    |   /\\   |    :\n          \
    \                 :    |  /  \\  |    :\n                           :   ++-+ \
    \   +-++   :\n                        -------+  +----+  +-------\n           \
    \                :   +--+    +--+   :\n                           :..................:\n\
    \        Figure 7: Native Topology with Corresponding Grey Topology\n"
- title: 5.3.  Methods of Building Grey Topologies
  contents:
  - "5.3.  Methods of Building Grey Topologies\n   This section discusses two different\
    \ methods of building a grey\n   topology:\n   o  Automatic generation of abstract\
    \ topology by configuration\n      (Section 5.3.1)\n   o  On-demand generation\
    \ of supplementary topology via path\n      computation request/reply (Section\
    \ 5.3.2)\n"
- title: 5.3.1.  Automatic Generation of Abstract Topology by Configuration
  contents:
  - "5.3.1.  Automatic Generation of Abstract Topology by Configuration\n   Automatic\
    \ generation is based on the abstraction/summarization of the\n   whole domain\
    \ by the PNC and its advertisement on the MPI.  The level\n   of abstraction can\
    \ be decided based on PNC configuration parameters\n   (e.g., \"provide the potential\
    \ connectivity between any PE and any\n   ASBR in an MPLS-TE network\").\n   Note\
    \ that the configuration parameters for this abstract topology can\n   include\
    \ available bandwidth, latency, or any combination of defined\n   parameters.\
    \  How to generate such information is beyond the scope of\n   this document.\n\
    \   This abstract topology may need to be periodically or incrementally\n   updated\
    \ when there is a change in the underlying network or the use\n   of the network\
    \ resources that make connectivity more or less\n   available.\n"
- title: 5.3.2.  On-Demand Generation of Supplementary Topology via Path Compute
  contents:
  - "5.3.2.  On-Demand Generation of Supplementary Topology via Path Compute\n   \
    \     Request/Reply\n   While abstract topology is generated and updated automatically\
    \ by\n   configuration as explained in Section 5.3.1, additional supplementary\n\
    \   topology may be obtained by the MDSC via a path compute request/reply\n  \
    \ mechanism.\n   The abstract topology advertisements from PNCs give the MDSC\
    \ the\n   border node/link information for each domain.  Under this scenario,\n\
    \   when the MDSC needs to create a new VN, the MDSC can issue path\n   computation\
    \ requests to PNCs with constraints matching the VN request\n   as described in\
    \ [ACTN-YANG].  An example is provided in Figure 8,\n   where the MDSC is creating\
    \ a P2P VN between AP1 and AP2.  The MDSC\n   could use two different inter-domain\
    \ links to get from domain X to\n   domain Y, but in order to choose the best\
    \ end-to-end path, it needs\n   to know what domain X and Y can offer in terms\
    \ of connectivity and\n   constraints between the PE nodes and the border nodes.\n\
    \                        -------                 --------\n                  \
    \     (       )               (        )\n                      -      BrdrX.1-------\
    \ BrdrY.1      -\n                     (+---+       )          (       +---+)\n\
    \               -+---( |PE1| Dom.X  )        (  Dom.Y |PE2| )---+-\n         \
    \       |    (+---+       )          (       +---+)    |\n               AP1 \
    \   -      BrdrX.2------- BrdrY.2      -    AP2\n                       (    \
    \   )               (        )\n                        -------              \
    \   --------\n                     Figure 8: A Multi-Domain Example\n   The MDSC\
    \ issues a path computation request to PNC.X asking for\n   potential connectivity\
    \ between PE1 and border node BrdrX.1 and\n   between PE1 and BrdrX.2 with related\
    \ objective functions and TE\n   metric constraints.  A similar request for connectivity\
    \ from the\n   border nodes in domain Y to PE2 will be issued to PNC.Y.  The MDSC\n\
    \   merges the results to compute the optimal end-to-end path including\n   the\
    \ inter-domain links.  The MDSC can use the result of this\n   computation to\
    \ request the PNCs to provision the underlying networks,\n   and the MDSC can\
    \ then use the end-to-end path as a virtual link in\n   the VN it delivers to\
    \ the customer.\n"
- title: 5.4.  Hierarchical Topology Abstraction Example
  contents:
  - "5.4.  Hierarchical Topology Abstraction Example\n   This section illustrates\
    \ how topology abstraction operates in\n   different levels of a hierarchy of\
    \ MDSCs as shown in Figure 9.\n                             +-----+\n        \
    \                     | CNC |  CNC wants to create a VN\n                    \
    \         +-----+  between CE A and CE B\n                                |\n\
    \                                |\n                    +-----------------------+\n\
    \                    |         MDSC-H        |\n                    +-----------------------+\n\
    \                          /           \\\n                         /        \
    \     \\\n                 +---------+         +---------+\n                 |\
    \ MDSC-L1 |         | MDSC-L2 |\n                 +---------+         +---------+\n\
    \                   /    \\               /    \\\n                  /      \\\
    \             /      \\\n               +----+  +----+       +----+  +----+\n\
    \     CE A o----|PNC1|  |PNC2|       |PNC3|  |PNC4|----o CE B\n              \
    \ +----+  +----+       +----+  +----+\n                   Virtual Network Delivered\
    \ to CNC\n                     CE A o==============o CE B\n                  \
    \ Topology operated on by MDSC-H\n                  CE A o----o==o==o===o----o\
    \ CE B\n     Topology operated on by MDSC-L1     Topology operated on by MDSC-L2\n\
    \                  _        _                       _        _\n             \
    \    ( )      ( )                     ( )      ( )\n                (   )    (\
    \   )                   (   )    (   )\n       CE A o--(o---o)==(o---o)==Dom.3\
    \   Dom.2==(o---o)==(o---o)--o CE B\n                (   )    (   )          \
    \         (   )    (   )\n                 (_)      (_)                     (_)\
    \      (_)\n                              Actual Topology\n                ___\
    \          ___          ___          ___\n               (   )        (   )  \
    \      (   )        (   )\n              (  o  )      (  o  )      ( o--o)   \
    \   (  o  )\n             (  / \\  )    (   |\\  )    (  |  | )    (  / \\  )\n\
    \   CE A o---(o-o---o-o)==(o-o-o-o-o)==(o--o--o-o)==(o-o-o-o-o)---o CE B\n   \
    \          (  \\ /  )    ( | |/  )    (  |  | )    (  \\ /  )\n              (\
    \  o  )      (o-o  )      ( o--o)      (  o  )\n               (___)        (___)\
    \        (___)        (___)\n              Domain 1     Domain 2     Domain 3\
    \     Domain 4\n   Where\n        o   is a node\n        --- is a link\n     \
    \   === is a border link\n        Figure 9: Illustration of Hierarchical Topology\
    \ Abstraction\n   In the example depicted in Figure 9, there are four domains\
    \ under\n   control of PNCs: PNC1, PNC2, PNC3, and PNC4.  MDSC-L1 controls PNC1\n\
    \   and PNC2, while MDSC-L2 controls PNC3 and PNC4.  Each of the PNCs\n   provides\
    \ a grey topology abstraction that presents only border nodes\n   and links across\
    \ and outside the domain.  The abstract topology\n   MDSC-L1 that operates is\
    \ a combination of the two topologies from\n   PNC1 and PNC2.  Likewise, the abstract\
    \ topology that MDSC-L2 operates\n   is shown in Figure 9.  Both MDSC-L1 and MDSC-L2\
    \ provide a black\n   topology abstraction to MDSC-H in which each PNC domain\
    \ is presented\n   as a single virtual node.  MDSC-H combines these two topologies\
    \ to\n   create the abstraction topology on which it operates.  MDSC-H sees\n\
    \   the whole four domain networks as four virtual nodes connected via\n   virtual\
    \ links.\n"
- title: 5.5.  VN Recursion with Network Layers
  contents:
  - "5.5.  VN Recursion with Network Layers\n   In some cases, the VN supplied to\
    \ a customer may be built using\n   resources from different technology layers\
    \ operated by different\n   operators.  For example, one operator may run a packet\
    \ TE network and\n   use optical connectivity provided by another operator.\n\
    \   As shown in Figure 10, a customer asks for end-to-end connectivity\n   between\
    \ CE A and CE B, a virtual network.  The customer's CNC makes a\n   request to\
    \ Operator 1's MDSC.  The MDSC works out which network\n   resources need to be\
    \ configured and sends instructions to the\n   appropriate PNCs.  However, the\
    \ link between Q and R is a virtual\n   link supplied by Operator 2: Operator\
    \ 1 is a customer of Operator 2.\n   To support this, Operator 1 has a CNC that\
    \ communicates with Operator\n   2's MDSC.  Note that Operator 1's CNC in Figure\
    \ 10 is a functional\n   component that does not dictate implementation: it may\
    \ be embedded in\n   a PNC.\n      Virtual     CE A o===============================o\
    \ CE B\n      Network\n                                    -----    CNC wants\
    \ to create a VN\n      Customer                     | CNC |   between CE A and\
    \ CE B\n                                    -----\n                          \
    \            :\n               ***********************************************\n\
    \                                      :\n      Operator 1         ---------------------------\n\
    \                        |           MDSC            |\n                     \
    \    ---------------------------\n                          :           :    \
    \       :\n                          :           :           :\n             \
    \           -----   -------------   -----\n                       | PNC | |  \
    \   PNC     | | PNC |\n                        -----   -------------   -----\n\
    \                          :     :     :     :     :\n      Higher           \
    \   v     v     :     v     v\n      Layer      CE A o---P-----Q===========R-----S---o\
    \ CE B\n      Network                   |     :     |\n                      \
    \          |     :     |\n                                |   -----   |\n    \
    \                            |  | CNC |  |\n                                |\
    \   -----   |\n                                |     :     |\n               ***********************************************\n\
    \                                |     :     |\n      Operator 2             \
    \   |  ------   |\n                                | | MDSC |  |\n           \
    \                     |  ------   |\n                                |     : \
    \    |\n                                |  -------  |\n                      \
    \          | |  PNC  | |\n                                |  -------  |\n    \
    \                             \\ :  :  : /\n      Lower                      \
    \ \\v  v  v/\n      Layer                        X--Y--Z\n      Network\n    \
    \  Where\n      --- is a link\n      === is a virtual link\n                Figure\
    \ 10: VN Recursion with Network Layers\n"
- title: 6.  Access Points and Virtual Network Access Points
  contents:
  - "6.  Access Points and Virtual Network Access Points\n   In order to map identification\
    \ of connections between the customer's\n   sites and the TE networks and to scope\
    \ the connectivity requested in\n   the VNS, the CNC and the MDSC refer to the\
    \ connections using the\n   Access Point (AP) construct as shown in Figure 11.\n\
    \                                -------------\n                             \
    \  (             )\n                              -               -\n        \
    \       +---+ X       (                 )      Z +---+\n               |CE1|---+----(\
    \                   )---+---|CE2|\n               +---+   |     (            \
    \     )    |   +---+\n                      AP1     -               -    AP2\n\
    \                               (             )\n                            \
    \    -------------\n                      Figure 11: Customer View of APs\n  \
    \ Let's take as an example a scenario shown in Figure 11.  CE1 is\n   connected\
    \ to the network via a 10 Gbps link and CE2 via a 40 Gbps\n   link.  Before the\
    \ creation of any VN between AP1 and AP2, the\n   customer view can be summarized\
    \ as shown in Figure 12.\n                            +----------+------------------------+\n\
    \                            | Endpoint | Access Link Bandwidth  |\n         \
    \             +-----+----------+----------+-------------+\n                  \
    \    |AP id| CE,port  | MaxResBw | AvailableBw |\n                      +-----+----------+----------+-------------+\n\
    \                      | AP1 |CE1,portX |  10 Gbps |   10 Gbps   |\n         \
    \             +-----+----------+----------+-------------+\n                  \
    \    | AP2 |CE2,portZ |  40 Gbps |   40 Gbps   |\n                      +-----+----------+----------+-------------+\n\
    \                       Figure 12: AP - Customer View\n   On the other hand, what\
    \ the operator sees is shown in Figure 13\n                          ------- \
    \           -------\n                         (       )          (       )\n \
    \                       -         -        -         -\n                   W \
    \ (+---+       )      (       +---+)  Y\n                -+---( |PE1| Dom.X  )----(\
    \  Dom.Y |PE2| )---+-\n                 |    (+---+       )      (       +---+)\
    \    |\n                 AP1    -         -        -         -     AP2\n     \
    \                    (       )          (       )\n                          -------\
    \            -------\n                    Figure 13: Operator View of the AP\n\
    \   which results in a summarization as shown in Figure 14.\n                \
    \            +----------+------------------------+\n                         \
    \   | Endpoint | Access Link Bandwidth  |\n                      +-----+----------+----------+-------------+\n\
    \                      |AP id| PE,port  | MaxResBw | AvailableBw |\n         \
    \             +-----+----------+----------+-------------+\n                  \
    \    | AP1 |PE1,portW |  10 Gbps |   10 Gbps   |\n                      +-----+----------+----------+-------------+\n\
    \                      | AP2 |PE2,portY |  40 Gbps |   40 Gbps   |\n         \
    \             +-----+----------+----------+-------------+\n                  \
    \     Figure 14: AP - Operator View\n   A Virtual Network Access Point (VNAP)\
    \ needs to be defined as binding\n   between an AP and a VN.  It is used to allow\
    \ different VNs to start\n   from the same AP.  It also allows for traffic engineering\
    \ on the\n   access and/or inter-domain links (e.g., keeping track of bandwidth\n\
    \   allocation).  A different VNAP is created on an AP for each VN.\n   In this\
    \ simple scenario, we suppose we want to create two virtual\n   networks: the\
    \ first with VN identifier 9 between AP1 and AP2 with\n   bandwidth of 1 Gbps\
    \ and the second with VN identifier 5, again\n   between AP1 and AP2 and with\
    \ bandwidth 2 Gbps.\n   The operator view would evolve as shown in Figure 15.\n\
    \                           +----------+------------------------+\n          \
    \                 | Endpoint |  Access Link/VNAP Bw   |\n                 +---------+----------+----------+-------------+\n\
    \                 |AP/VNAPid| PE,port  | MaxResBw | AvailableBw |\n          \
    \       +---------+----------+----------+-------------+\n                 |AP1\
    \      |PE1,portW | 10 Gbps  |   7 Gbps    |\n                 | -VNAP1.9|   \
    \       |  1 Gbps  |     N.A.    |\n                 | -VNAP1.5|          |  2\
    \ Gbps  |     N.A     |\n                 +---------+----------+----------+-------------+\n\
    \                 |AP2      |PE2,portY | 4 0Gbps  |   37 Gbps   |\n          \
    \       | -VNAP2.9|          |  1 Gbps  |     N.A.    |\n                 | -VNAP2.5|\
    \          |  2 Gbps  |     N.A     |\n                 +---------+----------+----------+-------------+\n\
    \         Figure 15: AP and VNAP - Operator View after VNS Creation\n"
- title: 6.1.  Dual-Homing Scenario
  contents:
  - "6.1.  Dual-Homing Scenario\n   Often there is a dual-homing relationship between\
    \ a CE and a pair of\n   PEs.  This case needs to be supported by the definition\
    \ of VN, APs,\n   and VNAPs.  Suppose CE1 connected to two different PEs in the\n\
    \   operator domain via AP1 and AP2 and that the customer needs 5 Gbps of\n  \
    \ bandwidth between CE1 and CE2.  This is shown in Figure 16.\n              \
    \                        ____________\n                              AP1    (\
    \            )    AP3\n                             -------(PE1)      (PE3)-------\n\
    \                          W /      (                )      \\ X\n           \
    \           +---+/      (                  )      \\+---+\n                  \
    \    |CE1|      (                    )      |CE2|\n                      +---+\\\
    \      (                  )      /+---+\n                          Y \\      (\
    \                )      / Z\n                             -------(PE2)      (PE4)-------\n\
    \                              AP2    (____________)\n                      Figure\
    \ 16: Dual-Homing Scenario\n   In this case, the customer will request a VN between\
    \ AP1, AP2, and\n   AP3 specifying a dual-homing relationship between AP1 and\
    \ AP2.  As a\n   consequence, no traffic will flow between AP1 and AP2.  The dual-\n\
    \   homing relationship would then be mapped against the VNAPs (since\n   other\
    \ independent VNs might have AP1 and AP2 as endpoints).\n   The customer view\
    \ would be shown in Figure 17.\n                      +----------+------------------------+\n\
    \                      | Endpoint |  Access Link/VNAP Bw   |\n            +---------+----------+----------+-------------+-----------+\n\
    \            |AP/VNAPid| CE,port  | MaxResBw | AvailableBw |Dual Homing|\n   \
    \         +---------+----------+----------+-------------+-----------+\n      \
    \      |AP1      |CE1,portW | 10 Gbps  |   5 Gbps    |           |\n         \
    \   | -VNAP1.9|          |  5 Gbps  |     N.A.    | VNAP2.9   |\n            +---------+----------+----------+-------------+-----------+\n\
    \            |AP2      |CE1,portY | 40 Gbps  |   35 Gbps   |           |\n   \
    \         | -VNAP2.9|          |  5 Gbps  |     N.A.    | VNAP1.9   |\n      \
    \      +---------+----------+----------+-------------+-----------+\n         \
    \   |AP3      |CE2,portX | 50 Gbps  |  45 Gbps    |           |\n            |\
    \ -VNAP3.9|          |  5 Gbps  |     N.A.    |   NONE    |\n            +---------+----------+----------+-------------+-----------+\n\
    \         Figure 17: Dual-Homing -- Customer View after VN Creation\n"
- title: '7.  Advanced ACTN Application: Multi-Destination Service'
  contents:
  - "7.  Advanced ACTN Application: Multi-Destination Service\n   A more-advanced\
    \ application of ACTN is the case of data center (DC)\n   selection, where the\
    \ customer requires the DC selection to be based\n   on the network status; this\
    \ is referred to as \"Multi-Destination\n   Service\" in [ACTN-REQ].  In terms\
    \ of ACTN, a CNC could request a VNS\n   between a set of source APs and destination\
    \ APs and leave it up to\n   the network (MDSC) to decide which source and destination\
    \ APs to be\n   used to set up the VNS.  The candidate list of source and destination\n\
    \   APs is decided by a CNC (or an entity outside of ACTN) based on\n   certain\
    \ factors that are outside the scope of ACTN.\n   Based on the AP selection as\
    \ determined and returned by the network\n   (MDSC), the CNC (or an entity outside\
    \ of ACTN) should further take\n   care of any subsequent actions such as orchestration\
    \ or service setup\n   requirements.  These further actions are outside the scope\
    \ of ACTN.\n   Consider a case as shown in Figure 18, where three DCs are available,\n\
    \   but the customer requires the DC selection to be based on the network\n  \
    \ status and the connectivity service setup between the AP1 (CE1) and\n   one\
    \ of the destination APs (AP2 (DC-A), AP3 (DC-B), and AP4 (DC-C)).\n   The MDSC\
    \ (in coordination with PNCs) would select the best\n   destination AP based on\
    \ the constraints, optimization criteria,\n   policies, etc., and set up the connectivity\
    \ service (virtual\n   network).\n                          -------          \
    \  -------\n                         (       )          (       )\n          \
    \              -         -        -         -\n          +---+        (      \
    \     )      (           )        +----+\n          |CE1|---+---(  Domain X  \
    \ )----(  Domain Y   )---+---|DC-A|\n          +---+   |    (           )    \
    \  (           )    |   +----+\n                   AP1  -         -        - \
    \        -    AP2\n                         (       )          (       )\n   \
    \                       ---+---            ---+---\n                         \
    \    |                  |\n                         AP3-+              AP4-+\n\
    \                             |                  |\n                         \
    \ +----+              +----+\n                          |DC-B|              |DC-C|\n\
    \                          +----+              +----+\n           Figure 18: Endpoint\
    \ Selection Based on Network Status\n"
- title: 7.1.  Preplanned Endpoint Migration
  contents:
  - "7.1.  Preplanned Endpoint Migration\n   Furthermore, in the case of DC selection,\
    \ a customer could request a\n   backup DC to be selected, such that in case of\
    \ failure, another DC\n   site could provide hot stand-by protection.  As shown\
    \ in Figure 19,\n   DC-C is selected as a backup for DC-A.  Thus, the VN should\
    \ be set up\n   by the MDSC to include primary connectivity between AP1 (CE1)\
    \ and AP2\n   (DC-A) as well as protection connectivity between AP1 (CE1) and\
    \ AP4\n   (DC-C).\n                    -------            -------\n          \
    \         (       )          (       )\n                  -         -    __  -\
    \         -\n   +---+         (           )      (           )        +----+\n\
    \   |CE1|---+----(  Domain X   )----(  Domain Y   )---+---|DC-A|\n   +---+   |\
    \     (           )      (           )    |   +----+\n           AP1    -    \
    \     -        -         -    AP2    |\n                   (       )         \
    \ (       )            |\n                    ---+---            ---+---     \
    \        |\n                       |                  |                |\n   \
    \                AP3-|              AP4-|         HOT STANDBY\n              \
    \         |                  |                |\n                    +----+  \
    \           +----+              |\n                    |DC-D|             |DC-C|<-------------\n\
    \                    +----+             +----+\n                 Figure 19: Preplanned\
    \ Endpoint Migration\n"
- title: 7.2.  On-the-Fly Endpoint Migration
  contents:
  - "7.2.  On-the-Fly Endpoint Migration\n   Compared to preplanned endpoint migration,\
    \ on-the-fly endpoint\n   selection is dynamic in that the migration is not preplanned\
    \ but\n   decided based on network condition.  Under this scenario, the MDSC\n\
    \   would monitor the network (based on the VN SLA) and notify the CNC in\n  \
    \ the case where some other destination AP would be a better choice\n   based\
    \ on the network parameters.  The CNC should instruct the MDSC\n   when it is\
    \ suitable to update the VN with the new AP if it is\n   required.\n"
- title: 8.  Manageability Considerations
  contents:
  - "8.  Manageability Considerations\n   The objective of ACTN is to manage traffic\
    \ engineered resources and\n   provide a set of mechanisms to allow customers\
    \ to request virtual\n   connectivity across server-network resources.  ACTN supports\
    \ multiple\n   customers, each with its own view of and control of a virtual network\n\
    \   built on the server network; the network operator will need to\n   partition\
    \ (or \"slice\") their network resources, and manage the\n   resources accordingly.\n\
    \   The ACTN platform will, itself, need to support the request,\n   response,\
    \ and reservations of client- and network-layer connectivity.\n   It will also\
    \ need to provide performance monitoring and control of TE\n   resources.  The\
    \ management requirements may be categorized as\n   follows:\n   o  Management\
    \ of external ACTN protocols\n   o  Management of internal ACTN interfaces/protocols\n\
    \   o  Management and monitoring of ACTN components\n   o  Configuration of policy\
    \ to be applied across the ACTN system\n   The ACTN framework and interfaces are\
    \ defined to enable traffic\n   engineering for virtual network services and connectivity\
    \ services.\n   Network operators may have other Operations, Administration, and\n\
    \   Maintenance (OAM) tasks for service fulfillment, optimization, and\n   assurance\
    \ beyond traffic engineering.  The realization of OAM beyond\n   abstraction and\
    \ control of TE networks is not discussed in this\n   document.\n"
- title: 8.1.  Policy
  contents:
  - "8.1.  Policy\n   Policy is an important aspect of ACTN control and management.\n\
    \   Policies are used via the components and interfaces, during\n   deployment\
    \ of the service, to ensure that the service is compliant\n   with agreed-upon\
    \ policy factors and variations (often described in\n   SLAs); these include,\
    \ but are not limited to connectivity, bandwidth,\n   geographical transit, technology\
    \ selection, security, resilience, and\n   economic cost.\n   Depending on the\
    \ deployment of the ACTN architecture, some policies\n   may have local or global\
    \ significance.  That is, certain policies may\n   be ACTN component specific\
    \ in scope, while others may have broader\n   scope and interact with multiple\
    \ ACTN components.  Two examples are\n   provided below:\n   o  A local policy\
    \ might limit the number, type, size, and scheduling\n      of virtual network\
    \ services a customer may request via its CNC.\n      This type of policy would\
    \ be implemented locally on the MDSC.\n   o  A global policy might constrain certain\
    \ customer types (or\n      specific customer applications) only to use certain\
    \ MDSCs and be\n      restricted to physical network types managed by the PNCs.\
    \  A\n      global policy agent would govern these types of policies.\n   The\
    \ objective of this section is to discuss the applicability of ACTN\n   policy:\
    \ requirements, components, interfaces, and examples.  This\n   section provides\
    \ an analysis and does not mandate a specific method\n   for enforcing policy,\
    \ or the type of policy agent that would be\n   responsible for propagating policies\
    \ across the ACTN components.  It\n   does highlight examples of how policy may\
    \ be applied in the context\n   of ACTN, but it is expected further discussion\
    \ in an applicability or\n   solution-specific document, will be required.\n"
- title: 8.2.  Policy Applied to the Customer Network Controller
  contents:
  - "8.2.  Policy Applied to the Customer Network Controller\n   A virtual network\
    \ service for a customer application will be\n   requested by the CNC.  The request\
    \ will reflect the application\n   requirements and specific service needs, including\
    \ bandwidth, traffic\n   type and survivability.  Furthermore, application access\
    \ and type of\n   virtual network service requested by the CNC, will be need adhere\
    \ to\n   specific access control policies.\n"
- title: 8.3.  Policy Applied to the Multi-Domain Service Coordinator
  contents:
  - "8.3.  Policy Applied to the Multi-Domain Service Coordinator\n   A key objective\
    \ of the MDSC is to support the customer's expression\n   of the application connectivity\
    \ request via its CNC as a set of\n   desired business needs; therefore, policy\
    \ will play an important\n   role.\n   Once authorized, the virtual network service\
    \ will be instantiated via\n   the CNC-MDSC Interface (CMI); it will reflect the\
    \ customer\n   application and connectivity requirements and specific service-\n\
    \   transport needs.  The CNC and the MDSC components will have agreed-\n   upon\
    \ connectivity endpoints; use of these endpoints should be defined\n   as a policy\
    \ expression when setting up or augmenting virtual network\n   services.  Ensuring\
    \ that permissible endpoints are defined for CNCs\n   and applications will require\
    \ the MDSC to maintain a registry of\n   permissible connection points for CNCs\
    \ and application types.\n   Conflicts may occur when virtual network service\
    \ optimization\n   criteria are in competition.  For example, to meet objectives\
    \ for\n   service reachability, a request may require an interconnection point\n\
    \   between multiple physical networks; however, this might break a\n   confidentially\
    \ policy requirement of a specific type of end-to-end\n   service.  Thus, an MDSC\
    \ may have to balance a number of the\n   constraints on a service request and\
    \ between different requested\n   services.  It may also have to balance requested\
    \ services with\n   operational norms for the underlying physical networks.  This\n\
    \   balancing may be resolved using configured policy and using hard and\n   soft\
    \ policy constraints.\n"
- title: 8.4.  Policy Applied to the Provisioning Network Controller
  contents:
  - "8.4.  Policy Applied to the Provisioning Network Controller\n   The PNC is responsible\
    \ for configuring the network elements,\n   monitoring physical network resources,\
    \ and exposing connectivity\n   (direct or abstracted) to the MDSC.  Therefore,\
    \ it is expected that\n   policy will dictate what connectivity information will\
    \ be exchanged\n   on the MPI.\n   Policy interactions may arise when a PNC determines\
    \ that it cannot\n   compute a requested path from the MDSC, or notices that (per\
    \ a\n   locally configured policy) the network is low on resources (for\n   example,\
    \ the capacity on key links became exhausted).  In either\n   case, the PNC will\
    \ be required to notify the MDSC, which may (again\n   per policy) act to construct\
    \ a virtual network service across another\n   physical network topology.\n  \
    \ Furthermore, additional forms of policy-based resource management\n   will be\
    \ required to provide VNS performance, security, and resilience\n   guarantees.\
    \  This will likely be implemented via a local policy agent\n   and additional\
    \ protocol methods.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The ACTN framework described in this document\
    \ defines key components\n   and interfaces for managed TE networks.  Securing\
    \ the request and\n   control of resources, confidentiality of the information,\
    \ and\n   availability of function should all be critical security\n   considerations\
    \ when deploying and operating ACTN platforms.\n   Several distributed ACTN functional\
    \ components are required, and\n   implementations should consider encrypting\
    \ data that flows between\n   components, especially when they are implemented\
    \ at remote nodes,\n   regardless of whether these data flows are on external\
    \ or internal\n   network interfaces.\n   The ACTN security discussion is further\
    \ split into two specific\n   categories described in the following subsections:\n\
    \   o  Interface between the Customer Network Controller and Multi-Domain\n  \
    \    Service Coordinator (MDSC), CNC-MDSC Interface (CMI)\n   o  Interface between\
    \ the Multi-Domain Service Coordinator and\n      Provisioning Network Controller\
    \ (PNC), MDSC-PNC Interface (MPI)\n   From a security and reliability perspective,\
    \ ACTN may encounter many\n   risks such as malicious attack and rogue elements\
    \ attempting to\n   connect to various ACTN components.  Furthermore, some ACTN\n\
    \   components represent a single point of failure and threat vector and\n   must\
    \ also manage policy conflicts and eavesdropping of communication\n   between\
    \ different ACTN components.\n   The conclusion is that all protocols used to\
    \ realize the ACTN\n   framework should have rich security features, and customer,\n\
    \   application and network data should be stored in encrypted data\n   stores.\
    \  Additional security risks may still exist.  Therefore,\n   discussion and applicability\
    \ of specific security functions and\n   protocols will be better described in\
    \ documents that are use case and\n   environment specific.\n"
- title: 9.1.  CNC-MDSC Interface (CMI)
  contents:
  - "9.1.  CNC-MDSC Interface (CMI)\n   Data stored by the MDSC will reveal details\
    \ of the virtual network\n   services and which CNC and customer/application is\
    \ consuming the\n   resource.  Therefore, the data stored must be considered a\
    \ candidate\n   for encryption.\n   CNC Access rights to an MDSC must be managed.\
    \  The MDSC must allocate\n   resources properly, and methods to prevent policy\
    \ conflicts, resource\n   waste, and denial-of-service attacks on the MDSC by\
    \ rogue CNCs should\n   also be considered.\n   The CMI will likely be an external\
    \ protocol interface.  Suitable\n   authentication and authorization of each CNC\
    \ connecting to the MDSC\n   will be required; especially, as these are likely\
    \ to be implemented\n   by different organizations and on separate functional\
    \ nodes.  Use of\n   the AAA-based mechanisms would also provide role-based authorization\n\
    \   methods so that only authorized CNC's may access the different\n   functions\
    \ of the MDSC.\n"
- title: 9.2.  MDSC-PNC Interface (MPI)
  contents:
  - "9.2.  MDSC-PNC Interface (MPI)\n   Where the MDSC must interact with multiple\
    \ (distributed) PNCs, a PKI-\n   based mechanism is suggested, such as building\
    \ a TLS or HTTPS\n   connection between the MDSC and PNCs, to ensure trust between\
    \ the\n   physical network layer control components and the MDSC.  Trust\n   anchors\
    \ for the PKI can be configured to use a smaller (and\n   potentially non-intersecting)\
    \ set of trusted Certificate Authorities\n   (CAs) than in the Web PKI.\n   Which\
    \ MDSC the PNC exports topology information to, and the level of\n   detail (full\
    \ or abstracted), should also be authenticated, and\n   specific access restrictions\
    \ and topology views should be\n   configurable and/or policy based.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [ACTN-REQ]\n              Lee, Y., Ceccarelli,\
    \ D., Miyasaka, T., Shin, J., and K.\n              Lee, \"Requirements for Abstraction\
    \ and Control of TE\n              Networks\", Work in Progress,\n           \
    \   draft-ietf-teas-actn-requirements-09, March 2018.\n   [ACTN-YANG]\n      \
    \        Lee, Y., Dhody, D., Ceccarelli, D., Bryskin, I., Yoon, B.,\n        \
    \      Wu, Q., and P. Park, \"A Yang Data Model for ACTN VN\n              Operation\"\
    , Work in Progress,\n              draft-ietf-teas-actn-vn-yang-01, June 2018.\n\
    \   [ONF-ARCH]\n              Open Networking Foundation, \"SDN Architecture\"\
    , Issue\n              1.1, ONF TR-521, June 2016.\n   [RFC2702]  Awduche, D.,\
    \ Malcolm, J., Agogbua, J., O'Dell, M., and J.\n              McManus, \"Requirements\
    \ for Traffic Engineering Over MPLS\",\n              RFC 2702, DOI 10.17487/RFC2702,\
    \ September 1999,\n              <https://www.rfc-editor.org/info/rfc2702>.\n\
    \   [RFC3945]  Mannie, E., Ed., \"Generalized Multi-Protocol Label\n         \
    \     Switching (GMPLS) Architecture\", RFC 3945,\n              DOI 10.17487/RFC3945,\
    \ October 2004,\n              <https://www.rfc-editor.org/info/rfc3945>.\n  \
    \ [RFC4655]  Farrel, A., Vasseur, J., and J. Ash, \"A Path Computation\n     \
    \         Element (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655,\
    \ August 2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n   [RFC5654]\
    \  Niven-Jenkins, B., Ed., Brungard, D., Ed., Betts, M., Ed.,\n              Sprecher,\
    \ N., and S. Ueno, \"Requirements of an MPLS\n              Transport Profile\"\
    , RFC 5654, DOI 10.17487/RFC5654,\n              September 2009, <https://www.rfc-editor.org/info/rfc5654>.\n\
    \   [RFC7149]  Boucadair, M. and C. Jacquenet, \"Software-Defined\n          \
    \    Networking: A Perspective from within a Service Provider\n              Environment\"\
    , RFC 7149, DOI 10.17487/RFC7149, March 2014,\n              <https://www.rfc-editor.org/info/rfc7149>.\n\
    \   [RFC7926]  Farrel, A., Ed., Drake, J., Bitar, N., Swallow, G.,\n         \
    \     Ceccarelli, D., and X. Zhang, \"Problem Statement and\n              Architecture\
    \ for Information Exchange between\n              Interconnected Traffic-Engineered\
    \ Networks\", BCP 206,\n              RFC 7926, DOI 10.17487/RFC7926, July 2016,\n\
    \              <https://www.rfc-editor.org/info/rfc7926>.\n   [RFC8283]  Farrel,\
    \ A., Ed., Zhao, Q., Ed., Li, Z., and C. Zhou, \"An\n              Architecture\
    \ for Use of PCE and the PCE Communication\n              Protocol (PCEP) in a\
    \ Network with Central Control\",\n              RFC 8283, DOI 10.17487/RFC8283,\
    \ December 2017,\n              <https://www.rfc-editor.org/info/rfc8283>.\n \
    \  [RFC8309]  Wu, Q., Liu, W., and A. Farrel, \"Service Models\n             \
    \ Explained\", RFC 8309, DOI 10.17487/RFC8309, January 2018,\n              <https://www.rfc-editor.org/info/rfc8309>.\n\
    \   [TE-TOPO]  Liu, X., Bryskin, I., Beeram, V., Saad, T., Shah, H., and\n   \
    \           O. Dios, \"YANG Data Model for Traffic Engineering (TE)\n        \
    \      Topologies\", Work in Progress,\n              draft-ietf-teas-yang-te-topo-18,\
    \ June 2018.\n"
- title: Appendix A.  Example of MDSC and PNC Functions Integrated in a Service/
  contents:
  - "Appendix A.  Example of MDSC and PNC Functions Integrated in a Service/\n   \
    \          Network Orchestrator\n   This section provides an example of a possible\
    \ deployment scenario,\n   in which Service/Network Orchestrator can include the\
    \ PNC\n   functionalities for domain 2 and the MDSC functionalities.\n       \
    \       Customer\n                          +-------------------------------+\n\
    \                          |    +-----+                    |\n               \
    \           |    | CNC |                    |\n                          |   \
    \ +-----+                    |\n                          +-------|-----------------------+\n\
    \                                  |\n              Service/Network     | CMI\n\
    \              Orchestrator        |\n                          +-------|------------------------+\n\
    \                          |    +------+   MPI   +------+   |\n              \
    \            |    | MDSC |---------| PNC2 |   |\n                          | \
    \   +------+         +------+   |\n                          +-------|------------------|-----+\n\
    \                                  | MPI              |\n              Domain\
    \ Controller   |                  |\n                          +-------|-----+\
    \            |\n                          |   +-----+   |            | SBI\n \
    \                         |   |PNC1 |   |            |\n                     \
    \     |   +-----+   |            |\n                          +-------|-----+\
    \            |\n                                  v SBI              v\n     \
    \                          -------            -------\n                      \
    \        (       )          (       )\n                             -        \
    \ -        -         -\n                            (           )      (     \
    \      )\n                           (  Domain 1   )----(  Domain 2   )\n    \
    \                        (           )      (           )\n                  \
    \           -         -        -         -\n                              (  \
    \     )          (       )\n                               -------           \
    \ -------\n"
- title: Contributors
  contents:
  - "Contributors\n   Adrian Farrel\n   Old Dog Consulting\n   Email: adrian@olddog.co.uk\n\
    \   Italo Busi\n   Huawei\n   Email: Italo.Busi@huawei.com\n   Khuzema Pithewan\n\
    \   Peloton Technology\n   Email: khuzemap@gmail.com\n   Michael Scharf\n   Nokia\n\
    \   Email: michael.scharf@nokia.com\n   Luyuan Fang\n   eBay\n   Email: luyuanf@gmail.com\n\
    \   Diego Lopez\n   Telefonica I+D\n   Don Ramon de la Cruz, 82\n   28006 Madrid\n\
    \   Spain\n   Email: diego@tid.es\n   Sergio Belotti\n   Nokia\n   Via Trento,\
    \ 30\n   Vimercate\n   Italy\n   Email: sergio.belotti@nokia.com\n   Daniel King\n\
    \   Lancaster University\n   Email: d.king@lancaster.ac.uk\n   Dhruv Dhody\n \
    \  Huawei Technologies\n   Divyashree Techno Park, Whitefield\n   Bangalore, Karnataka\
    \  560066\n   India\n   Email: dhruv.ietf@gmail.com\n   Gert Grammel\n   Juniper\
    \ Networks\n   Email: ggrammel@juniper.net\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Daniele Ceccarelli (editor)\n   Ericsson\n   Torshamnsgatan,\
    \ 48\n   Stockholm\n   Sweden\n   Email: daniele.ceccarelli@ericsson.com\n   Young\
    \ Lee (editor)\n   Huawei Technologies\n   5340 Legacy Drive\n   Plano, TX 75023\n\
    \   United States of America\n   Email: leeyoung@huawei.com\n"
