- title: __initial_text__
  contents:
  - '         Implementation of L2TP Compulsory Tunneling via RADIUS

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses implementation issues arising in the\n \
    \  provisioning of compulsory tunneling in dial-up networks using the\n   L2TP\
    \ protocol.  This provisioning can be accomplished via the\n   integration of\
    \ RADIUS and tunneling protocols. Implementation issues\n   encountered with other\
    \ tunneling protocols are left to separate\n   documents.\n"
- title: 1. Terminology
  contents:
  - "1. Terminology\n   Voluntary Tunneling\n              In voluntary tunneling,\
    \ a tunnel is created by the user,\n              typically via use of a tunneling\
    \ client.\n   Compulsory Tunneling\n              In compulsory tunneling, a tunnel\
    \ is created without any\n              action from the user and without allowing\
    \ the user any\n              choice.\n   Tunnel Network Server\n            \
    \  This is a server which terminates a tunnel. In L2TP\n              terminology,\
    \ this is known as the L2TP Network Server\n              (LNS).\n   Network Access\
    \ Server\n              The Network Access Server (NAS) is the device that clients\n\
    \              contact in order to get access to the network. In L2TP\n      \
    \        terminology, a NAS performing compulsory tunneling is\n             \
    \ referred to as the L2TP Access Concentrator (LAC).\n   RADIUS authentication\
    \ server\n              This is a server which provides for\n              authentication/authorization\
    \ via the protocol described in\n              [1].\n   RADIUS proxy\n       \
    \       In order to provide for the routing of RADIUS\n              authentication\
    \ requests, a RADIUS proxy can be employed.\n              To the NAS, the RADIUS\
    \ proxy appears to act as a RADIUS\n              server, and to the RADIUS server,\
    \ the proxy appears to act\n              as a RADIUS client.  Can be used to\
    \ locate the tunnel\n              endpoint when realm-based tunneling is used.\n"
- title: 2.  Requirements language
  contents:
  - "2.  Requirements language\n   In this document, the key words \"MAY\", \"MUST,\
    \ \"MUST NOT\", \"optional\",\n   \"recommended\", \"SHOULD\", and \"SHOULD NOT\"\
    , are to be interpreted as\n   described in [4].\n"
- title: 3.  Introduction
  contents:
  - "3.  Introduction\n   Many applications of tunneling protocols involve dial-up\
    \ network\n   access.  Some, such as the provisioning of secure access to corporate\n\
    \   intranets via the Internet, are characterized by voluntary tunneling:\n  \
    \ the tunnel is created at the request of the user for a specific\n   purpose.\
    \ Other applications involve compulsory tunneling: the tunnel\n   is created without\
    \ any action from the user and without allowing the\n   user any choice.\n   Examples\
    \ of applications that might be implemented using compulsory\n   tunnels are Internet\
    \ software upgrade servers, software registration\n   servers and banking services.\
    \  These are all services which, without\n   compulsory tunneling, would probably\
    \ be provided using dedicated\n   networks or at least dedicated network access\
    \ servers (NAS), since\n   they are characterized by the need to limit user access\
    \ to specific\n   hosts.\n   Given the existence of widespread support for compulsory\
    \ tunneling,\n   however, these types of services could be accessed via any Internet\n\
    \   service provider (ISP).  The most popular means of authorizing dial-\n   up\
    \ network users today is through the RADIUS protocol. The use of\n   RADIUS allows\
    \ the dial-up users' authorization and authentication\n   data to be maintained\
    \ in a central location, rather than on each NAS.\n   It makes sense to use RADIUS\
    \ to centrally administer compulsory\n   tunneling, since RADIUS is widely deployed\
    \ and was designed to carry\n   this type of information.  New RADIUS attributes\
    \ are needed to carry\n   the tunneling information from the RADIUS server to\
    \ the NAS. Those\n   attributes are defined in [3].\n"
- title: 3.1.  Advantages of RADIUS-based compulsory tunneling
  contents:
  - "3.1.  Advantages of RADIUS-based compulsory tunneling\n   Current proposals for\
    \ routing of tunnel requests include static\n   tunneling, where all users are\
    \ automatically tunneled to a given\n   endpoint, and realm-based tunneling, where\
    \ the tunnel endpoint is\n   determined from the realm portion of the userID.\
    \ User-based tunneling\n   as provided by integration of RADIUS and tunnel protocols\
    \ offers\n   significant advantages over both of these approaches.\n   Static\
    \ tunneling requires dedication of a NAS device to the purpose.\n   In the case\
    \ of an ISP, this is undesirable because it requires them\n   to dedicate a NAS\
    \ to tunneling service for a given customer, rather\n   than allowing them to\
    \ use existing NASes deployed in the field. As a\n   result static tunneling is\
    \ likely to be costly for deployment of a\n   global service.\n   Realm-based\
    \ tunneling assumes that all users within a given realm\n   wish to be treated\
    \ the same way. This limits flexibility in account\n   management.  For example,\
    \ BIGCO may desire to provide Janet with an\n   account that allows access to\
    \ both the Internet and the intranet,\n   with Janet's intranet access provided\
    \ by a tunnel server located in\n   the engineering department. However BIGCO\
    \ may desire to provide Fred\n   with an account that provides only access to\
    \ the intranet, with\n   Fred's intranet access provided by a tunnel network server\
    \ located in\n   the sales department. Such a situation cannot be accommodated\
    \ with\n   realm-based tunneling, but can be accommodated via user-based\n   tunneling\
    \ as enabled by the attributes defined in [3].\n"
- title: 4.  Authentication alternatives
  contents:
  - "4.  Authentication alternatives\n   RADIUS-based compulsory tunneling can support\
    \ both single\n   authentication, where the user is authenticated at the NAS or\
    \ tunnel\n   server, or dual authentication, where the user is authenticated at\n\
    \   both the NAS and the tunnel server. When single authentication is\n   supported,\
    \ a variety of modes are possible, including telephone-\n   number based authentication.\
    \  When dual-authentication is used, a\n   number of modes are available, including\
    \ dual CHAP authentications;\n   CHAP/EAP authentication; CHAP/PAP(token) authentication;\
    \ and EAP/EAP\n   authentication, using the same EAP type for both authentications.\
    \ EAP\n   is described in [5].\n   The alternatives are described in more detail\
    \ below.\n"
- title: 4.1.  Single authentication
  contents:
  - "4.1.  Single authentication\n   Single authentication alternatives include:\n\
    \   NAS authentication\n   NAS authentication with RADIUS reply forwarding\n \
    \  Tunnel server authentication\n"
- title: 4.1.1.  NAS authentication
  contents:
  - "4.1.1.  NAS authentication\n   With this approach, authentication and authorization\
    \ (including\n   tunneling information) occurs once, at the NAS. The advantages\
    \ of\n   this approach are that it disallows network access for unauthorized\n\
    \   NAS users, and permits accounting to done at the NAS.  Disadvantages\n   are\
    \ that it requires that the tunnel server trust the NAS, since no\n   user authentication\
    \ occurs at the tunnel server. Due to the lack of\n   user authentication, accounting\
    \ cannot take place at the tunnel\n   server with strong assurance that the correct\
    \ party is being billed.\n   NAS-only authentication is most typically employed\
    \ along with LCP\n   forwarding and tunnel authentication, both of which are supported\
    \ in\n   L2TP, described in [2].  Thus, the tunnel server can be set up to\n \
    \  accept all calls occurring within authenticated tunnels, without\n   requiring\
    \ PPP authentication.  However, this approach is not\n   compatible with roaming,\
    \ since the tunnel server will typically only\n   be set up to accept tunnels\
    \ from a restricted set of NASes. A typical\n   initiation sequence looks like\
    \ this:\n   Client and NAS: Call Connected\n   Client and NAS: PPP LCP negotiation\n\
    \   Client and NAS: PPP authentication\n   NAS to RADIUS Server: RADIUS Access-request\n\
    \   RADIUS server to NAS: RADIUS Access-Accept/Access-Reject\n   NAS to Tunnel\
    \ Server: L2TP Incoming-Call-Request w/LCP forwarding\n   Tunnel Server to NAS:\
    \ L2TP Incoming-Call-Reply\n   NAS to Tunnel Server: L2TP Incoming-Call-Connected\n\
    \   Client and Tunnel Server: NCP negotiation\n   The process begins with an incoming\
    \ call to the NAS, and the PPP LCP\n   negotiation between the client and the\
    \ NAS. In order to authenticate\n   the client, the NAS will send a RADIUS Access-Request\
    \ to the RADIUS\n   server and will receive a RADIUS Access-Accept including tunnel\n\
    \   attributes, or an Access-Reject.\n   In the case where an L2TP tunnel is indicated,\
    \ the NAS will now bring\n   up a control connection if none existed before, and\
    \ the NAS and\n   tunnel server will bring up the call. At this point, data will\
    \ begin\n   to flow through the tunnel.  The NAS will typically employ LCP\n \
    \  forwarding, although it is also possible for the tunnel server to\n   renegotiate\
    \ LCP.  If LCP renegotiation is to be permitted, the NAS\n   SHOULD NOT send an\
    \ LCP CONFACK completing LCP negotiation. Rather\n   than sending an LCP CONFACK,\
    \ the NAS will instead send an LCP\n   Configure-Request packet, described in\
    \ [6].  The Client MAY then\n   renegotiate LCP, and from that point forward,\
    \ all PPP packets\n   originated from the client will be encapsulated and sent\
    \ to the\n   tunnel server.\n   Since address assignment will occur at the tunnel\
    \ server, the client\n   and NAS MUST NOT begin NCP negotiation. Instead, NCP\
    \ negotiation will\n   occur between the client and the tunnel server.\n"
- title: 4.1.2.  NAS authentication with RADIUS reply forwarding
  contents:
  - "4.1.2.  NAS authentication with RADIUS reply forwarding\n   With this approach,\
    \ authentication and authorization occurs once at\n   the NAS and the RADIUS reply\
    \ is forwarded to the tunnel server. This\n   approach disallows network access\
    \ for unauthorized NAS users; does\n   not require trust between the NAS and tunnel\
    \ server; and allows for\n   accounting to be done at both ends of the tunnel.\
    \ However, it also\n   requires that both ends share the same secret with the\
    \ RADIUS server,\n   since that is the only way that the tunnel server can check\
    \ the\n   RADIUS Access-Reply.\n   In this approach, the tunnel server will share\
    \ secrets with all the\n   NASes and associated RADIUS servers, and there is no\
    \ provision for\n   LCP renegotiation by the tunnel server. Also, the tunnel server\
    \ will\n   need to know how to handle and verify RADIUS Access-Accept messages.\n\
    \   While this scheme can be workable if the reply comes directly from a\n   RADIUS\
    \ server, it would become unmanageable if a RADIUS proxy is\n   involved, since\
    \ the reply would be authenticated using the secret\n   shared by the client and\
    \ proxy, rather than the RADIUS server. As a\n   result, this scheme is impractical.\n"
- title: 4.1.2.1. Tunnel server authentication
  contents:
  - "4.1.2.1. Tunnel server authentication\n   In this scheme, authentication and\
    \ authorization occurs once at the\n   tunnel server.  This requires that the\
    \ NAS determine that the user\n   needs to be tunneled (through RADIUS or NAS\
    \ configuration). Where\n   RADIUS is used, the determination can be made using\
    \ one of the\n   following methods:\n   Telephone-number based authentication\n\
    \   UserID\n"
- title: 4.1.2.2.  Telephone-number based authentication
  contents:
  - "4.1.2.2.  Telephone-number based authentication\n   Using the Calling-Station-Id\
    \ and Called-Station-Id RADIUS attributes,\n   authorization and subsequent tunnel\
    \ attributes can be based on the\n   phone number originating the call, or the\
    \ number being called. This\n   allows the RADIUS server to authorize users based\
    \ on the calling\n   phone number or to provide tunnel attributes based on the\
    \ Calling-\n   Station-Id or Called-Station-Id.  Similarly, in L2TP the tunnel\n\
    \   server MAY choose to reject or accept the call based on the Dialed\n   Number\
    \ and Dialing Number included in the L2TP Incoming-Call-Request\n   packet sent\
    \ by the NAS.  Accounting can also take place based on the\n   Calling-Station-Id\
    \ and Called-Station-Id.\n   RADIUS as defined in [1] requires that an Access-Request\
    \ packet\n   contain a User-Name attribute as well as either a CHAP-Password or\n\
    \   User-Password attribute, which must be non-empty.  To satisfy this\n   requirement\
    \ the Called-Station-Id or Calling-Station-Id MAY be\n   furnished in the User-Name\
    \ attribute and a dummy value MAY be used in\n   the User-Password or CHAP-Password\
    \ attribute.\n   In the case of telephone-number based authentication, a typical\n\
    \   initiation sequence looks like this:\n   Client and NS: Call Connected\n \
    \  NAS to RADIUS Server: RADIUS Access-request\n   RADIUS server to NAS: RADIUS\
    \ Access-Accept/Access-Reject\n   NAS to Tunnel Server: L2TP Incoming-Call-Request\n\
    \   Tunnel Server to NAS: L2TP Incoming-Call-Reply\n   NAS to Tunnel Server: L2TP\
    \  Incoming-Call-Connected\n   Client and Tunnel Server: PPP LCP negotiation\n\
    \   Client and Tunnel Server: PPP authentication\n   Tunnel Server to RADIUS Server:\
    \ RADIUS Access-request (optional)\n   RADIUS server to Tunnel Server: RADIUS\
    \ Access-Accept/Access-Reject\n   Client and Tunnel Server: NCP negotiation\n\
    \   The process begins with an incoming call to the NAS. If configured\n   for\
    \ telephone-number based authentication, the NAS sends a RADIUS\n   Access-Request\
    \ containing the Calling-Station-Id and the Called-\n   Station-Id attributes.\
    \ The RADIUS server will then respond with a\n   RADIUS Access-Accept or Access-Reject.\n\
    \   The NAS MUST NOT begin PPP authentication before bringing up the\n   tunnel.\
    \  If timing permits, the NAS MAY bring up the tunnel prior to\n   beginning LCP\
    \ negotiation with the peer. If this is done, then LCP\n   will not need to be\
    \ renegotiated between the peer and tunnel server,\n   nor will LCP forwarding\
    \ need to be employed.\n   If the initial telephone-number based authentication\
    \ is unsuccessful,\n   the RADIUS server sends a RADIUS Access-Reject. In this\
    \ case, the NAS\n   MUST send an LCP-Terminate and disconnect the user.\n   In\
    \ the case where tunnel attributes are included in the RADIUS\n   Access-Accept,\
    \ and an L2TP tunnel is indicated, the NAS will now\n   bring up a control connection\
    \ if none existed before. This is\n   accomplished by sending an L2TP Start-Control-Connection-Request\n\
    \   message to the tunnel server.  The tunnel server will then reply with\n  \
    \ an L2TP Start-Control-Connection-Reply.  If this message indicates an\n   error,\
    \ or if the control connection is terminated at any future time,\n   then the\
    \ NAS MUST send an LCP-Terminate and disconnect the user.\n   The NAS will then\
    \ send an L2TP Incoming-Call-Request message to the\n   tunnel server. Among other\
    \ things, this message will contain the Call\n   Serial Number, which along with\
    \ the NAS-IP-Address and Tunnel-\n   Server-Endpoint is used to uniquely identify\
    \ the call. The tunnel\n   server will reply with an L2TP Incoming-Call-Reply\
    \ message. If this\n   message indicates an error, then the NAS MUST send an LCP-Terminate\n\
    \   and disconnect the user. If no error is indicated, the NAS then\n   replies\
    \ with an L2TP Incoming-Call-Connected message.\n   At this point, data can begin\
    \ to flow through the tunnel. If LCP\n   negotiation had been begun between the\
    \ NAS and the client, then LCP\n   forwarding may be employed, or the client and\
    \ tunnel server will now\n   renegotiate LCP and begin PPP authentication. Otherwise,\
    \ the client\n   and tunnel server will negotiate LCP for the first time, and\
    \ then\n   move on to PPP authentication.\n   If a renegotiation is required,\
    \ at the time that the renegotiation\n   begins, the NAS SHOULD NOT have sent\
    \ an LCP CONFACK completing LCP\n   negotiation, and the client and NAS MUST NOT\
    \ have begun NCP\n   negotiation.  Rather than sending an LCP CONFACK, the NAS\
    \ will\n   instead send an LCP Configure-Request Packet, described in [6].  The\n\
    \   Client MAY then renegotiate LCP, and from that point forward, all PPP\n  \
    \ packets originated from the client will be encapsulated and sent to\n   the\
    \ tunnel server.  When LCP re-negotiation has been concluded, the\n   NCP phase\
    \ will begin, and the tunnel server will assign an address to\n   the client.\n\
    \   If L2TP is being used as the tunnel protocol, and LCP renegotiation\n   is\
    \ required, the NAS MAY in its initial setup notification include a\n   copy of\
    \ the LCP CONFACKs sent in each direction which completed LCP\n   negotiation.\
    \ The tunnel server MAY then use this information to avoid\n   an additional LCP\
    \ negotiation. With L2TP, the initial setup\n   notification can also include\
    \ the authentication information required\n   to allow the tunnel server to authenticate\
    \ the user and decide to\n   accept or decline the connection. However, in telephone-number\
    \ based\n   authentication, PPP authentication MUST NOT occur prior to the NAS\n\
    \   bringing up the tunnel.  As a result, L2TP authentication forwarding\n   MUST\
    \ NOT be employed.\n   In performing the PPP authentication, the tunnel server\
    \ can access\n   its own user database, or alternatively can send a RADIUS Access-\n\
    \   Request.  The latter approach is useful in cases where authentication\n  \
    \ forwarding is enabled, such as with roaming or shared use networks.\n   In this\
    \ case, the RADIUS and tunnel servers are under the same\n   administration and\
    \ are typically located close together, possibly on\n   the same LAN.  Therefore\
    \ having the tunnel server act as a RADIUS\n   client provides for unified user\
    \ administration. Note that the tunnel\n   server's RADIUS Access-Request is typically\
    \ sent directly to the\n   local RADIUS server rather than being forwarded via\
    \ a proxy.\n   The interactions involved in initiation of a compulsory tunnel\
    \ with\n   telephone-number based authentication are summarized below. In order\n\
    \   to simplify the diagram that follows, we have left out the client.\n   However,\
    \ it is understood that the client participates via PPP\n   negotiation, authentication\
    \ and subsequent data interchange with the\n   Tunnel Server.\n              \
    \                    INITIATION SEQUENCE\n   NAS                            Tunnel\
    \ Server       RADIUS Server\n   ---                            -------------\
    \       -------------\n   Call connected\n   Send RADIUS\n    Access-Request\n\
    \    with Called-Station-Id,\n    and/or Calling-Station-Id\n   LCP starts\n \
    \                                                     IF authentication\n    \
    \                                                  succeeds\n                \
    \                                       Send ACK\n                           \
    \                           ELSE Send NAK\n   IF NAK DISCONNECT\n   ELSE\n   \
    \ IF no control\n     connection exists\n     Send\n     Start-Control-Connection-Request\n\
    \     to Tunnel Server\n                                Send\n               \
    \                 Start-Control-Connection-Reply\n                           \
    \     to NAS\n    ENDIF\n   Send\n   Incoming-Call-Request\n   message to Tunnel\
    \ Server\n                                Send Incoming-Call-Reply\n         \
    \                       to NAS\n   Send\n   Incoming-Call-Connected\n   message\
    \ to Tunnel Server\n   Send data through the tunnel\n                        \
    \        Re-negotiate LCP,\n                                authenticate user,\n\
    \                                bring up IPCP,\n                            \
    \    start accounting\n"
- title: 4.1.2.3.  User-Name
  contents:
  - "4.1.2.3.  User-Name\n   Since authentication will occur only at the tunnel-server,\
    \ tunnel\n   initiation must occur prior to user authentication at the NAS. As\
    \ a\n   result, this scheme typically uses either the domain portion of the\n\
    \   userID or attribute-specific processing on the RADIUS server.  Since\n   the\
    \ user identity is never verified by the NAS, either the tunnel\n   server owner\
    \ must be willing to be billed for all incoming calls, or\n   other information\
    \ such as the Calling-Station-Id must be used to\n   verify the user's identity\
    \ for accounting purposes.\n   In attribute-specific processing RADIUS may be\
    \ employed and an\n   attribute is used to signal tunnel initiation.  For example,\
    \ tunnel\n   attributes can be sent back if the User-Password attribute contains\
    \ a\n   dummy value (such as \"tunnel\" or \"L2TP\"). Alternatively, a userID\n\
    \   beginning with a special character ('*') could be used to indicate\n   the\
    \ need to initiate a tunnel.  When attribute-specific processing is\n   used,\
    \ the tunnel server may need to renegotiate LCP.\n   Another solution involves\
    \ using the domain portion of the userID; all\n   users in domain X would be tunneled\
    \ to address Y. This proposal\n   supports compulsory tunneling, but does not\
    \ provide for user-based\n   tunneling.\n   In order for the NAS to start accounting\
    \ on the connection, it would\n   need to use the identity claimed by the user\
    \ in authenticating to the\n   tunnel server, since it did not verify the identity\
    \ via RADIUS.\n   However, in order for that to be of any use in accounting, the\
    \ tunnel\n   endpoint needs to have an account relationship with the NAS owner.\n\
    \   Thus even if a user has an account with the NAS owner, they cannot\n   use\
    \ this account for tunneling unless the tunnel endpoint also has a\n   business\
    \ relationship with the NAS owner. Thus this approach is\n   incompatible with\
    \ roaming.\n   A typical initiation sequence involving use of the domain portion\
    \ of\n   the userID looks like this:\n   Client and NAS: Call Connected\n   Client\
    \ and NAS: PPP LCP negotiation\n   Client and NAS: Authentication\n   NAS to Tunnel\
    \ Server: L2TP Incoming-Call-Request\n   Tunnel Server to NAS: L2TP Incoming-Call-Reply\n\
    \   NAS to Tunnel Server: L2TP  Incoming-Call-Connected\n   Client and Tunnel\
    \ Server: PPP LCP re-negotiation\n   Client and Tunnel Server: PPP authentication\n\
    \   Tunnel Server to RADIUS Server: RADIUS Access-request (optional)\n   RADIUS\
    \ server to Tunnel Server: RADIUS Access-Accept/Access-Reject\n   Client and Tunnel\
    \ Server: NCP negotiation\n   The process begins with an incoming call to the\
    \ NAS, and the PPP LCP\n   negotiation between the Client and NAS. The authentication\
    \ process\n   will then begin and based on the domain portion of the userID, the\n\
    \   NAS will now bring up a control connection if none existed before,\n   and\
    \ the NAS and tunnel server will bring up the call. At this point,\n   data MAY\
    \ begin to flow through the tunnel.  The client and tunnel\n   server MAY now\
    \ renegotiate LCP and will complete PPP authentication.\n   At the time that the\
    \ renegotiation begins, the NAS SHOULD NOT have\n   sent an LCP CONFACK completing\
    \ LCP negotiation, and the client and\n   NAS MUST NOT have begun NCP negotiation.\
    \ Rather than sending an LCP\n   CONFACK, the NAS will instead send an LCP Configure-Request\
    \ packet,\n   described in [6].  The Client MAY then renegotiate LCP, and from\
    \ that\n   point forward, all PPP packets originated from the client will be\n\
    \   encapsulated and sent to the tunnel server.  In single authentication\n  \
    \ compulsory tunneling, L2TP authentication forwarding MUST NOT be\n   employed.\
    \  When LCP re-negotiation has been concluded, the NCP phase\n   will begin, and\
    \ the tunnel server will assign an address to the\n   client.\n   In performing\
    \ the PPP authentication, the tunnel server can access\n   its own user database,\
    \ or it MAY send a RADIUS Access-Request. After\n   the tunnel has been brought\
    \ up, the NAS and tunnel server can start\n   accounting.\n   The interactions\
    \ are summarized below.\n                                  INITIATION SEQUENCE\n\
    \   NAS                            Tunnel Server       RADIUS Server\n   --- \
    \                           -------------       -------------\n   Call accepted\n\
    \   LCP starts\n   Authentication\n    phase starts\n   IF no control\n    connection\
    \ exists\n    Send\n    Start-Control-Connection-Request\n    to Tunnel Server\n\
    \   ENDIF\n                                IF no control\n                   \
    \              connection exists\n                                 Send\n    \
    \                             Start-Control-Connection-Reply\n               \
    \                  to NAS\n                                ENDIF\n   Send\n  \
    \ Incoming-Call-Request\n   message to Tunnel Server\n                       \
    \         Send Incoming-Call-Reply\n                                to NAS\n \
    \  Send\n   Incoming-Call-Connected\n   message to Tunnel Server\n   Send data\
    \ through the tunnel\n                                Re-negotiate LCP,\n    \
    \                            authenticate user,\n                            \
    \    bring up IPCP,\n                                start accounting\n"
- title: 4.2.  Dual authentication
  contents:
  - "4.2.  Dual authentication\n   In this scheme, authentication occurs both at the\
    \ NAS and the tunnel\n   server. This requires the dial-up client to handle dual\n\
    \   authentication, with attendant LCP re-negotiations. In order to allow\n  \
    \ the NAS and tunnel network server to authenticate against the same\n   database,\
    \ this requires RADIUS client capability on the tunnel\n   network server, and\
    \ possibly a RADIUS proxy on the NAS end.\n   Advantages of dual authentication\
    \ include support for authentication\n   and accounting at both ends of the tunnel;\
    \ use of a single\n   userID/password pair via implementation of RADIUS on the\
    \ tunnel\n   network server; no requirement for telephone-number based\n   authentication,\
    \ or attribute-specific processing on the RADIUS\n   server.\n   Dual authentication\
    \ allows for accounting records to be generated on\n   both the NAS and tunnel\
    \ server ends, making auditing possible. Also\n   the tunnel endpoint does not\
    \ need to have an account relationship\n   with the NAS owner, making this approach\
    \ compatible with roaming.\n   A disadvantage of dual authentication is that unless\
    \ LCP forwarding\n   is used, LCP will need to be renegotiated; some clients do\
    \ not\n   support it at all, and others only support only a subset of the dual\n\
    \   authentication combinations. Feasible combinations include\n   PAP/PAP(token),\
    \ PAP/CHAP, PAP/EAP, CHAP/PAP(token), CHAP/CHAP,\n   CHAP/EAP, EAP/CHAP, and EAP/EAP.\
    \  EAP is described in [5].\n   In the case of a dual authentication, a typical\
    \ initiation sequence\n   looks like this:\n   Client and NAS: PPP LCP negotiation\n\
    \   Client and NAS: PPP authentication\n   NAS to RADIUS Server: RADIUS Access-request\n\
    \   RADIUS server to NAS: RADIUS Access-Accept/Access-Reject\n   NAS to Tunnel\
    \ Server: L2TP Incoming-Call-Request\n   Tunnel Server to NAS: L2TP Incoming-Call-Reply\n\
    \   NAS to Tunnel Server: L2TP  Incoming-Call-Connected\n   Client and Tunnel\
    \ Server: PPP LCP re-negotiation (optional)\n   Client and Tunnel Server: PPP\
    \ authentication\n   Tunnel Server to RADIUS Server: RADIUS Access-request (optional)\n\
    \   RADIUS server to Tunnel Server: RADIUS Access-Accept/Access-Reject\n   Client\
    \ and Tunnel Server: NCP negotiation\n   The process begins with an incoming call\
    \ to the NAS. The client and\n   NAS then begin LCP negotiation. Subsequently\
    \ the PPP authentication\n   phase starts, and the NAS sends a RADIUS Access-Request\
    \ message to\n   the RADIUS server. If the authentication is successful, the RADIUS\n\
    \   server responds with a RADIUS Access-Accept containing tunnel\n   attributes.\n\
    \   In the case where an L2TP tunnel is indicated, the NAS will now bring\n  \
    \ up a control connection if none existed before, and the NAS and\n   tunnel server\
    \ will bring up the call. At this point, data MAY begin\n   to flow through the\
    \ tunnel. The client and tunnel server MAY now\n   renegotiate LCP and go through\
    \ another round of PPP authentication.\n   At the time that this renegotiation\
    \ begins, the NAS SHOULD NOT have\n   sent an LCP CONFACK completing LCP negotiation,\
    \ and the client and\n   NAS MUST NOT have begun NCP negotiation. Rather than\
    \ sending an LCP\n   CONFACK, the NAS will instead send an LCP Configure-Request\
    \ packet,\n   described in [6].  The Client MAY then renegotiate LCP, and from\
    \ that\n   point forward, all PPP packets originated from the client will be\n\
    \   encapsulated and sent to the tunnel server.  When LCP re-negotiation\n   has\
    \ been concluded, the NCP phase will begin, and the tunnel server\n   will assign\
    \ an address to the client.\n   If L2TP is being used as the tunnel protocol,\
    \ the NAS MAY in its\n   initial setup notification include a copy of the LCP\
    \ CONFACKs sent in\n   each direction which completed LCP negotiation. The tunnel\
    \ server MAY\n   then use this information to avoid an additional LCP negotiation.\n\
    \   With L2TP, the initial setup notification can also include the\n   authentication\
    \ information required to allow the tunnel server to\n   authenticate the user\
    \ and decide to accept or decline the connection.\n   However, this facility creates\
    \ a vulnerability to replay attacks, and\n   can create problems in the case where\
    \ the NAS and tunnel server\n   authenticate against different RADIUS servers.\
    \ As a result, where\n   user-based tunneling via RADIUS is implemented, L2TP\
    \ authentication\n   forwarding SHOULD NOT be employed.\n   In performing the\
    \ PPP authentication, the tunnel server can access\n   its own user database,\
    \ or it MAY send a RADIUS Access-Request.  After\n   the tunnel has been brought\
    \ up, the NAS and tunnel server can start\n   accounting.\n   The interactions\
    \ involved in initiation of a compulsory tunnel with\n   dual authentication are\
    \ summarized below.\n                                  INITIATION SEQUENCE\n \
    \  NAS                            Tunnel Server       RADIUS Server\n   ---  \
    \                          -------------       -------------\n   Call accepted\n\
    \   LCP starts\n   PPP authentication\n    phase starts\n   Send RADIUS\n    Access-Request\n\
    \    with userID and\n    authentication data\n                              \
    \                        IF authentication\n                                 \
    \                     succeeds\n                                             \
    \          Send ACK\n                                                      ELSE\
    \ Send NAK\n   IF NAK DISCONNECT\n   ELSE\n    IF no control\n     connection\
    \ exists\n     Send\n     Start-Control-Connection-Request\n     to Tunnel Server\n\
    \                                Send\n                                Start-Control-Connection-Reply\n\
    \                                to NAS\n    ENDIF\n   Send\n   Incoming-Call-Request\n\
    \   message to Tunnel Server\n                                Send Incoming-Call-Reply\n\
    \                                to NAS\n   Send\n   Incoming-Call-Connected\n\
    \   message to Tunnel Server\n   Send data through the tunnel\n              \
    \                  Re-negotiate LCP,\n                                authenticate\
    \ user,\n                                bring up IPCP,\n                    \
    \            start accounting\n   ENDIF\n"
- title: 5.  Termination sequence
  contents:
  - "5.  Termination sequence\n   The tear down of a compulsory tunnel involves an\
    \ interaction between\n   the client, NAS and Tunnel Server. This interaction\
    \ is virtually\n   identical regardless of whether telephone-number based\n  \
    \ authentication, single authentication, or dual authentication is\n   being used.\
    \  In any of the cases, the following events occur:\n        Tunnel Server to\
    \ NAS: L2TP Call-Clear-Request (optional)\n        NAS to Tunnel Server: L2TP\
    \ Call-Disconnect-Notify\n   Tunnel termination can occur due to a client request\
    \ (PPP\n   termination), a tunnel server request (Call-Clear-Request), or a line\n\
    \   problem (call disconnect).\n   In the case of a client-requested termination,\
    \ the tunnel server MUST\n   terminate the PPP session. The tunnel server MUST\
    \ subsequently send a\n   Call-Clear-Request to the NAS. The NAS MUST then send\
    \ a Call-\n   Disconnect-Notify message to the tunnel server, and will disconnect\n\
    \   the call.\n   The NAS MUST also respond with a Call-Disconnect-Notify message\
    \ and\n   disconnection if it receives a Call-Clear-Request from the tunnel\n\
    \   server without a client-requested termination.\n   In the case of a line problem\
    \ or user hangup, the NAS MUST send a\n   Call-Disconnect-Notify to the tunnel\
    \ server. Both sides will then\n   tear down the call.\n   The interactions involved\
    \ in termination of a compulsory tunnel are\n   summarized below. In order to\
    \ simplify the diagram that follows, we\n   have left out the client. However,\
    \ it is understood that the client\n   MAY participate via PPP termination and\
    \ disconnection.\n                                  TERMINATION SEQUENCE\n   NAS\
    \                            Tunnel Server         RADIUS Server\n   ---     \
    \                       -------------         -------------\n   IF user disconnected\n\
    \    send\n    Call-Disconnect-Notify\n    message to tunnel server\n        \
    \                          Tear down the call\n                              \
    \    stop accounting\n   ELSE IF client requests\n    termination\n          \
    \                        send\n                                  Call-Clear-Request\n\
    \                                  to the NAS\n    Send\n    Call-Disconnect-Notify\n\
    \    message to tunnel server\n    Disconnect the user\n                     \
    \             Tear down the call\n                                  stop accounting\n\
    \   ENDIF\n"
- title: 6.  Use of distinct RADIUS servers
  contents:
  - "6.  Use of distinct RADIUS servers\n   In the case that the NAS and the tunnel\
    \ server are using distinct\n   RADIUS servers, some interesting cases can arise\
    \ in the provisioning\n   of compulsory tunnels.\n"
- title: 6.1.  Distinct userIDs
  contents:
  - "6.1.  Distinct userIDs\n   If distinct RADIUS servers are being used, it is likely\
    \ that distinct\n   userID/password pairs will be required to complete the RADIUS\
    \ and\n   tunnel authentications. One pair will be used in the initial PPP\n \
    \  authentication with the NAS, and the second pair will be used for\n   authentication\
    \ at the tunnel server.\n   This has implications if the NAS attempts to forward\
    \ authentication\n   information to the tunnel server in the initial setup notification.\n\
    \   Since the userID/password pair used for tunnel authentication is\n   different\
    \ from that used to authenticate against the NAS, forwarding\n   authentication\
    \ information in this manner will cause the tunnel\n   authentication to fail.\
    \ As a result, where user-based tunneling via\n   RADIUS is implemented, L2TP\
    \ authentication forwarding SHOULD NOT be\n   employed.\n   In order to provide\
    \ maximum ease of use in the case where the\n   userID/password pairs are identical,\
    \ tunnel clients typically attempt\n   authentication with the same userID/password\
    \ pair as was used in the\n   initial PPP negotiation. Only after this fails do\
    \ they prompt the\n   user for the second pair. Rather than putting up an error\
    \ message\n   indicating an authentication failure, it is preferable to present\
    \ a\n   dialog requesting the tunnel userID/password combination.\n   A similar\
    \ issue arises when extended authentication methods are being\n   used, as is\
    \ enabled by EAP, described in [5]. In particular, when\n   one-time passwords\
    \ or cryptographic calculators are being used,\n   different passwords will be\
    \ used for the first and second\n   authentications. Thus the user will need to\
    \ be prompted to enter the\n   second password.\n"
- title: 6.2.  Multilink PPP issues
  contents:
  - "6.2.  Multilink PPP issues\n   It is possible for the two RADIUS servers to return\
    \ different Port-\n   Limit attributes.  For example, it is conceivable that the\
    \ NAS RADIUS\n   server will only grant use of a single channel, while the tunnel\n\
    \   RADIUS server will grant more than one channel. In this case, the\n   correct\
    \ behavior is for the tunnel client to open a connection to\n   another NAS in\
    \ order to bring up a multilink bundle on the tunnel\n   server. The client MUST\
    \ NOT indicate to the NAS that this additional\n   link is being brought up as\
    \ part of a multilink bundle; this will\n   only be indicated in the subsequent\
    \ negotiation with the tunnel\n   server.\n   It is also conceivable that the\
    \ NAS RADIUS server will allow the\n   client to bring up multiple channels, but\
    \ that the tunnel RADIUS\n   server will allow fewer channels than the NAS RADIUS\
    \ server. In this\n   case, the client should terminate use of the excess channels.\n"
- title: 7.  UserID Issues
  contents:
  - "7.  UserID Issues\n   In the provisioning of roaming and shared use networks,\
    \ one of the\n   requirements is to be able to route the authentication request\
    \ to the\n   user's home RADIUS server. This authentication routing is\n   accomplished\
    \ based on the userID submitted by the user to the NAS in\n   the initial PPP\
    \ authentication. The userID is subsequently relayed by\n   the NAS to the RADIUS\
    \ server in the User-Name attribute, as part of\n   the RADIUS Access-Request.\n\
    \   Similarly, [2] refers to use of the userID in determining the tunnel\n   endpoint,\
    \ although it does not provide guidelines for how RADIUS or\n   tunnel routing\
    \ is to be accomplished. Thus the possibility of\n   conflicting interpretations\
    \ exists.\n   The use of RADIUS in provisioning of compulsory tunneling relieves\n\
    \   the userID from having to do double duty. Rather than being used both\n  \
    \ for routing of the RADIUS authentication/authorization request as\n   well for\
    \ determination of the tunnel endpoint, the userID is now used\n   solely for\
    \ routing of RADIUS authentication/authorization requests.\n   Tunnel attributes\
    \ returned in the RADIUS Access-Response are then\n   used to determine the tunnel\
    \ endpoint.\n   Since the framework described in this document allows both ISPs\
    \ and\n   tunnel users to authenticate users as well as to account for\n   resources\
    \ consumed by them, and provides for maintenance of two\n   distinct userID/password\
    \ pairs, this scheme provides a high degree of\n   flexibility.  Where RADIUS\
    \ proxies and tunneling are employed, it is\n   possible to allow the user to\
    \ authenticate with a single\n   userID/password pair at both the NAS and the\
    \ tunnel endpoint. This is\n   accomplished by routing the NAS RADIUS Access-Request\
    \ to the same\n   RADIUS server used by the tunnel server.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1]  Rigney C., Rubens A., Simpson W. and S. Willens, \"Remote\n\
    \        Authentication Dial In User Service (RADIUS)\", RFC 2138, April\n   \
    \     1997.\n   [2]  Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn, G.\
    \ and\n        Palter, B., \"Layer Two Tunneling Protocol \"L2TP\"\", RFC 2661,\n\
    \        August 1999.\n   [3]  Zorn, G., Leifer, D., Rubens, A., Shriver, J.,\
    \ Holdrege, M. and\n        Goyret, I., \"RADIUS Attributes for Tunnel Protocol\
    \ Support\",\n        Work in Progress.\n   [4]  Bradner, S., \"Key words for\
    \ use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [5]  Blunk, L. anf J. Vollbrecht, \"PPP Extensible Authentication\n\
    \        Protocol (EAP)\", RFC 2284, March 1998.\n   [6]  Simpson, W., Editor,\
    \ \"The Point-to-Point Protocol (PPP)\", STD\n        51, RFC 1661, July 1994.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   In PPP-based tunneling, PPP security is negotiated\
    \ between the client\n   and the tunnel server, and covers the entire length of\
    \ the path. This\n   is because the client does not have a way to know that they\
    \ are being\n   tunneled. Thus, any security the NAS may negotiate with the tunnel\n\
    \   server will occur in addition to that negotiated between the client\n   and\
    \ NAS.\n   In L2TP compulsory tunneling, this means that PPP encryption and\n\
    \   compression will be negotiated between the client and the tunnel\n   server.\
    \  In addition, the NAS may bring up an IPSEC security\n   association between\
    \ itself and the tunnel server. This adds\n   protection against a number of possible\
    \ attacks.\n   Where RADIUS proxies are deployed, the Access-Reply sent by the\n\
    \   RADIUS server may be processed by one or more proxies prior to being\n   received\
    \ by the NAS.  In order to ensure that tunnel attributes\n   arrive without modification,\
    \ intermediate RADIUS proxies forwarding\n   the Access-Reply MUST NOT modify\
    \ tunnel attributes. If the RADIUS\n   proxy does not support tunnel attributes,\
    \ then it MUST send an\n   Access-Reject to the NAS. This is necessary to ensure\
    \ that the user\n   is only granted access if the services requested by the RADIUS\
    \ server\n   can be provided.\n   Since RADIUS tunnel attributes are used for\
    \ compulsory tunneling,\n   address assignment is handled by the tunnel server\
    \ rather than the\n   NAS.  As a result, if tunnel attributes are present, the\
    \ NAS MUST\n   ignore any address assignment attributes sent by the RADIUS server.\n\
    \   In addition, the NAS and client MUST NOT begin NCP negotiation, since\n  \
    \ this could create a time window in which the client will be capable\n   of sending\
    \ packets to the transport network, which is not permitted\n   in compulsory tunneling.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Thanks to Gurdeep Singh Pall of Microsoft for many\
    \ useful discussions\n   of this problem space, and to Allan Rubens of Tut Systems\
    \ and\n   Bertrand Buclin of AT&T Labs Europe for their comments on this\n   document.\n\
    \   Most of the work on this document was performed while Glen Zorn was\n   employed\
    \ by the Microsoft Corporation.\n"
- title: 11.  Chair's Address
  contents:
  - "11.  Chair's Address\n   The RADIUS Working Group can be contacted via the current\
    \ chair:\n   Carl Rigney\n   Livingston Enterprises\n   4464 Willow Road\n   Pleasanton,\
    \ California  94588\n   Phone: +1 510-426-0770\n   EMail: cdr@livingston.com\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Bernard Aboba\n   Microsoft Corporation\n   One Microsoft\
    \ Way\n   Redmond, WA 98052\n   Phone: +1 425-936-6605\n   EMail: bernarda@microsoft.com\n\
    \   Glen Zorn\n   Cisco Systems, Inc.\n   500 108th Avenue N.E., Suite 500\n \
    \  Bellevue, WA 98004\n   USA\n   Phone: +1 425 438 8218\n   FAX:   +1 425 438\
    \ 1848\n   EMail: gwz@cisco.com\n"
- title: 13.  Intellectual Property Statement
  contents:
  - "13.  Intellectual Property Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
