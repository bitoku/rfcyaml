- title: __initial_text__
  contents:
  - '                  Lemonade Notifications Architecture

    '
- title: Abstract
  contents:
  - "Abstract\n   Notification and filtering mechanisms can make email more enjoyable\n\
    \   on mobile and other constrained devices (such as those with limited\n   screen\
    \ sizes, memory, data transfer rates, etc.).  Notifications make\n   the client\
    \ aware of significant events (such as the arrival of new\n   mail) so it can\
    \ react (such as by fetching interesting mail\n   immediately).  Filtering reduces\
    \ the visible mail to a set of\n   messages that meet some criteria for \"interesting\"\
    .  This\n   functionality is included in the goals of the Lemonade (Enhancements\n\
    \   to Internet email to Support Diverse Service Environments) Working\n   Group.\n\
    \   This document also discusses the use of server-to-server\n   notifications,\
    \ and how server to server notifications fit into an\n   architecture that provides\
    \ server to client notifications.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................2\n  \
    \ 2. Notifications Logical Architecture and LEMONADE Profile .........2\n   3.\
    \ Event-Based Synchronization .....................................4\n   4. Push\
    \ Email ......................................................5\n   5. Server-to-Server\
    \ Notifications Rationale ........................5\n      5.1. Notifications\
    \ Discussion ...................................6\n      5.2. Server to Server\
    \ Notifications Scope .......................7\n      5.3. Basic Operation ............................................8\n\
    \      5.4. Event Order ...............................................10\n  \
    \    5.5. Reliability ...............................................10\n   6.\
    \ Security Considerations ........................................10\n   7. References\
    \ .....................................................11\n      7.1. Normative\
    \ References ......................................11\n      7.2. Informative\
    \ References ....................................11\n   8. Contributors ...................................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lemonade work [LEMONADE-PROFILE] identified a need to\
    \ provide\n   notification and filtering mechanisms for use with IMAP [IMAP].\n\
    \   In addition, external groups that make use of IETF work also\n   expressed\
    \ such requirements (see, for example, [OMA-LEMONADE-ARCH];\n   Open Mobile Alliance\
    \ (OMA) requirements for within-IMAP (\"inband\")\n   and out-of-IMAP (\"outband\"\
    ) server to client notifications are listed\n   in [OMA-ME-RD]).\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   Within this document, the terms \"\
    Lemonade Profile\" and \"Lemonade\"\n   generally refer to the revised Lemonade\
    \ Profile document, RFC 5550\n   [LEMONADE-PROFILE].\n"
- title: 2.  Notifications Logical Architecture and LEMONADE Profile
  contents:
  - "2.  Notifications Logical Architecture and LEMONADE Profile\n   The target logical\
    \ architecture for the LEMONADE Profile is described\n   in the revised Lemonade\
    \ Profile document [LEMONADE-PROFILE].\n   Figure 1 illustrates how notification\
    \ and filtering fit in the\n   context of Lemonade.\n                     +--------------+\n\
    \                     |              |....\n           +=========| Notification\
    \ |.NF.\n           !         |    Server    |....\n           !         |   \
    \           |^ ^               NOTE:\n           !         +--------------+! !\
    \               NF is either in\n     Notif-!                         ! !    \
    \           Notification\n   ications!       Filter Protocol   ! !           \
    \    Server or IMAP\n   Protocol!  !======================! !               Store,\
    \ not both\n           !  !                        !\n           !  !    Filter\
    \ Protocol   ....\n           !  !=====================>.  .            +---------+\n\
    \           !  !          +-----------.NF.---+        |         |\n          \
    \ V  !          |           ....   |        |   MTA   |\n        +-----+   IMAP\
    \   |....              |  LMTP/ |....     |<==SMTP\n        |     | <======> |.VF.\
    \  IMAP    ....|  SMTP  |.AF.     |\n        | MUA |\\   ME-2a |....  Store  \
    \ .DF.|<=======|....     |\n        |     | \\        |              ....|   \
    \     |         |\n        +-----+  \\       +------------------+        +---------+\n\
    \                  \\              !\n                   \\             !URLAUTH\n\
    \              SUBMIT\\            !\n                     \\      +----v-----+\n\
    \                      \\     |          |                +-----+\n          \
    \             \\    | LEMONADE |       SMTP     |     |==>SMTP\n             \
    \           ===>| Submit   |===============>| MTA |\n                    ME-2b\
    \   | Server   |                |     |\n                            |       \
    \   |                +-----+\n                            +----------+\n     \
    \            Figure 1: Filtering Mechanism Defined in\n                      Lemonade\
    \ Profile Architecture\n   In Figure 1, four categories of filters are defined:\n\
    \   1. AF:  Administrative Filters:  Created and maintained by mail\n      administration.\
    \  AF are typically not configured by the user and\n      are used to apply policies,\
    \ content filtering, virus protection,\n      spam filtering, etc.\n   2. DF:\
    \  Deposit Filters:  Executed on deposit of new mail.  Can be\n      defined as\
    \ Sieve filters [SIEVE].\n   3. VF:  View Filters:  Define which messages are\
    \ important to a\n      client.  May be implemented as pseudo-virtual mailboxes\
    \ [CONTEXT].\n      Clients may use this to restrict which messages they synchronize.\n\
    \   4. NF:  Notification Filters:  Determine when out-of-IMAP (\"outband\")\n\
    \      notifications are sent to the client.  These filters can be\n      implemented\
    \ either in the message store or in a separate\n      notifications engine.\n\
    \   Note that when implementing DF or NF using Sieve, the 'enotify'\n   [SIEVE-NOTIFY]\
    \ and likely the 'variables' [SIEVE-VARIABLES] Sieve\n   extensions might be needed.\n\
    \   The filters are manageable by the client as follows:\n   * NF and DF:  When\
    \ internal to the mail store, these are typically\n     implemented using Sieve;\
    \ hence, a Sieve management protocol is used\n     for client modifications. \
    \ See [MANAGE-SIEVE] for more information.\n     Per-mailbox notifications might\
    \ be implemented using a combination\n     of a primary Sieve script for notifications\
    \ on delivery into a\n     mailbox (e.g., FILEINTO) and a per-mailbox Sieve script\
    \ such as\n     [IMAP-SIEVE] for transfers into a mailbox.  When the NF is within\
    \ a\n     notification server, it is out of scope of Lemonade.\n   * VF: via pseudo-virtual\
    \ mailboxes as defined in [CONTEXT].\n   In Figure 1, the NF are shown both as\
    \ part of the mail store (for\n   example, using Sieve) and as an external notification\
    \ server.  Either\n   approach can be used.\n"
- title: 3.  Event-Based Synchronization
  contents:
  - "3.  Event-Based Synchronization\n   +----------------+       +---------------+\
    \            +------------+\n   |    COMPLETE    | (VF)  |   VIEW        |   \
    \ (NF)    |   PUSH     |\n   |   REPOSITORY   | View  |  REPOSITORY   |Notification|\
    \ REPOSITORY |\n   |                |Filters|               |  Filters   |   \
    \         |\n   |   all email    |       |  email to be  |            | important\
    \  |\n   | in the account |=======|synched by the |=====<?>====| email /    |\n\
    \   |                |       | mobile client |      |     | events     |\n   |\
    \                |       |   (CONTEXT)   |      |     |            |\n   +----------------+\
    \       +---------------+      |     +------------+\n                        \
    \                           |            |\n                                 \
    \                IDLE /         |\n                                          \
    \       NOTIFY    Out-of-IMAP\n                                              \
    \     |      Notifications\n                                                 \
    \  |            |\n                                                   V      \
    \      V\n                    Figure 2:  Filters and Repositories\n   For in-IMAP\
    \ (\"inband\") notifications, the Mail User Agent (MUA)\n   (client) issues IDLE\
    \ [IDLE], or the successor extension command\n   NOTIFY [NOTIFY]; the LEMONADE\
    \ IMAP server sends notifications as\n   unsolicited responses to the client.\n\
    \   Out-of-IMAP (\"outband\") notifications are messages sent to the user\n  \
    \ or client not through IMAP.  When directed at the user, they are\n   human-consumable\
    \ and intended to alert the user.  When directed at\n   the client, they are machine-consumable\
    \ and may be acted upon by the\n   receiver in various ways, for example, fetching\
    \ data from the mail\n   store or resynchronizing one or more mailboxes, updating\
    \ internal\n   state information, and alerting the user.\n"
- title: 4.  Push Email
  contents:
  - "4.  Push Email\n   A good user experience of \"push email\" requires that when\n\
    \   \"interesting\" events occur in the mail store, the client is informed\n \
    \  so that it can connect and resynchronize.  The Lemonade Profile\n   [LEMONADE-PROFILE]\
    \ contains more information, especially in Section\n   5.4.2, titled \"External\
    \ Notifications\".\n"
- title: 5.  Server-to-Server Notifications Rationale
  contents:
  - "5.  Server-to-Server Notifications Rationale\n   With server-to-server notifications,\
    \ a mail system generates event\n   notifications.  These notifications describe\
    \ mailbox state change\n   events such as arrival of a new message, mailbox full,\
    \ and so forth.\n   See [MSGEVENT] for a list of such events.\n   These state\
    \ change notifications are sent to a notification system,\n   which may generate\
    \ alerts or notifications for delivery to one or\n   more clients or the user.\n\
    \   Server-to-server notifications allow the mail system to generate end\n   user\
    \ or client notifications without needing to keep track of\n   notification settings\
    \ for users or clients; the notification system\n   maintains notification preferences\
    \ for clients and users.\n   Using server-to-server notifications, the mail system\
    \ can provide the\n   end user with a unified notification experience (the same\
    \ look and\n   feel for accounts at all messaging systems, such as email and\n\
    \   voicemail), while allowing smooth integration of additional messaging\n  \
    \ systems.\n"
- title: 5.1.  Notifications Discussion
  contents:
  - "5.1.  Notifications Discussion\n   The POP3 and IMAP4 Internet mail protocols\
    \ allow mail clients to\n   access and manipulate electronic mail messages on\
    \ mail systems.  By\n   definition and scope, these protocols do not provide off-line\
    \ methods\n   to notify an end user when the mailbox state changes.  Nor does\n\
    \   either protocol define a way to aggregate the status within the end\n   user's\
    \ various mailboxes.\n   The desire for this functionality is obvious.  For example,\
    \ from the\n   very early days of electronic mail, various notifications mechanisms\n\
    \   have been used, including login shell checks, and simple hacks such\n   as\
    \ [BIFF].\n   To provide an end user with unified notifications and one centralized\n\
    \   Message-Waiting Indicator (MWI), notification mechanisms are needed\n   that\
    \ aggregate the information of all the events occurring on the end\n   user's\
    \ different messaging systems.\n   Server-to-server notifications allow the messaging\
    \ system to send\n   state change events to the notification system when something\
    \ happens\n   in or to an end user's mailbox.\n   Notification systems can be\
    \ broadly grouped into three general\n   architectures: external smart clients,\
    \ intrinsic notification, and\n   separate notification mechanisms.\n   External\
    \ smart clients are agents independent of the mail system that\n   periodically\
    \ check mailbox state (or receive notifications, for\n   example, via IMAP IDLE)\
    \ and inform the user or the user's mail\n   client.  Many such systems have been\
    \ used over the years, including\n   login shells that check the user's mail spool,\
    \ laptop/desktop tiny\n   clients that periodically poll the user's mail servers,\
    \ etc.\n   Intrinsic notification is any facility within a mail system that\n\
    \   generates notifications, for example, the server component of [BIFF],\n  \
    \ or, for more modern systems, the recent Sieve extensions for\n   notifications\
    \ [SIEVE-NOTIFY].\n   Separate notification systems decouple the state change\
    \ event\n   notification from the end user or client notification, allowing a\n\
    \   mail system to do the former, and specialized systems (such as those\n   that\
    \ handle presence) to be responsible for the latter.  This\n   separation is architecturally\
    \ cleaner, since the mail system only\n   needs to support one additional protocol\
    \ (for communication to the\n   notification system) instead of multiple notification\
    \ delivery\n   protocols, and does not need to keep track of which clients and\
    \ which\n   users are interested in which events.  It also allows notifications\n\
    \   to be generated for any service, not just electronic mail.  However,\n   it\
    \ requires a new service (the notification system) and the mail\n   system needs\
    \ to support an additional protocol (to communicate with\n   the notification\
    \ system).\n   In addition to any external notification mechanisms, Sieve can\
    \ be\n   used for notifications [SIEVE-NOTIFY].  Since many mail systems\n   already\
    \ provide Sieve support, this can be a fairly easy and quick\n   deployment option\
    \ to provide a useful form of notifications.\n"
- title: 5.2.  Server-to-Server Notifications Scope
  contents:
  - "5.2.  Server-to-Server Notifications Scope\n   For the purposes of the Lemonade\
    \ work, the scope of server-to-server\n   notifications is limited to communications\
    \ between the mail system\n   and the notification system (the third architectural\
    \ type described\n   in Section 5.1).  Communication between the notification\
    \ system and\n   the end user or devices (which might use SMS, WAP Push, instant\n\
    \   messaging, etc.) is out of scope.  Likewise, the scope generally\n   presumes\
    \ a security relationship between the mail system and the\n   notification system.\
    \  Thus, the security relationship then becomes\n   the responsibility of the\
    \ notification system.  However, the\n   specifics of security, trust relationships,\
    \ and related issues depend\n   on the specifics of both server-to-server notifications\
    \ and\n   notification systems.\n   Figure 3 shows the context of server-to-server\
    \ notifications; only\n   the left side is in scope for Lemonade:\n          \
    \   +--------+                                 +--------+\n      New    |    \
    \    |_                                |  SMS   |\n     Message |  Mail  | \\\
    \                               |Gateway |\n    -------> |Server 1|  \\      \
    \                      __|        |\n             +--------+   \\            \
    \              /  +--------+\n                         ^ \\                  \
    \      /\n                         |  \\                      / ^\n          \
    \               |   \\  +--------------+  /  |  +--------+\n             +--------+\
    \  |    \\ |              | /   |  |  MWI   |\n     Read    | Voice  |  |    \
    \ -| Notification |/    |  |Gateway |\n    Message  |  Mail  |-------->|    Server\
    \    |------->|        |\n    -------> | Server |  | ^  __|              |\\ \
    \ ^ |  +--------+\n             +--------+  | | /  |(out of scope)| \\ | |\n \
    \                        | |/   |              |  \\| |\n                    \
    \     | / ^  +--------------+ ^ \\ |\n                         |/| |         \
    \       \\  | |\\|\n             +--------+  / | |                 \\ | | \\ \
    \ +--------+\n     Mailbox |        | /| | |                  \\| | |\\ |  WAP\
    \   |\n     Full    |  Mail  |/ | | |                 ^ \\ | | \\|  Push  |\n\
    \    -------> |Server 2|  | | |                 | |\\| |  |Gateway |\n       \
    \      +--------+  | | |                 | | \\ |  +--------+\n              \
    \           | | |                 | | |\\|\n                         | | |   \
    \              | | | \\\n                         | | |                 | | |\
    \ |\\ +--------+\n                         | | |                 | | | | \\| IM\
    \     |\n                         | | |                 | | | |  |Gateway |\n\
    \                         | | |                 | | | |  |        |\n        \
    \                 | | |                 | | | |  +--------+\n                \
    \         | | |                 | | | |\n                         | | |      \
    \           | | | |\n                       Server-to-               OTHER\n \
    \                        Server               PROTOCOLS\n                    \
    \ Notifications          (out of scope)\n                     (in scope)\n   \
    \          Figure 3: Scope of Server-to-Server Notifications\n"
- title: 5.3.  Basic Operation
  contents:
  - "5.3.  Basic Operation\n   The mail system sends state change event notifications\
    \ to the\n   notification system (which in turn might notify a client or end user)\n\
    \   for events that occur in the end user's mailboxes.  Each such\n   notification,\
    \ referring to a single mailbox event, is called a state\n   change event.\n \
    \  The state change event contains data regarding the mailbox event that\n   has\
    \ occurred.  The state change event describes the change, but\n   normally does\
    \ not specify how or if the end user or client is\n   notified; this allows the\
    \ end user and client notification\n   preferences to be maintained only within\
    \ the notification server.\n   From the Lemonade viewpoint, out-of-IMAP (outband)\
    \ notifications are\n   usually desired only when the client is not connected\
    \ to the IMAP\n   server (since inband notifications are used when there is an\
    \ IMAP\n   connection).  Thus, it is helpful for the mail system to be able to\n\
    \   inform the notification system when the user logs in or out, and\n   which\
    \ client is used (when this information is available).\n   When Sieve is used,\
    \ the Sieve engine might have access to this\n   information.\n   A message is\
    \ generated by the message store as a result of a state\n   change event.  This\
    \ message may be delivered to the end user, a\n   client, or to an external notification\
    \ server that might deliver an\n   equivalent message to the user or to a client.\n\
    \   Within the context of the Lemonade Profile (Figure 1), the event is\n   filtered\
    \ by NF.  That is, the Notification Filters logically\n   determine which state\
    \ change events cause notification to the user or\n   client.\n   Notifications\
    \ allow for a rich end user experience.  This might\n   include conveying mailbox\
    \ status, new message attributes, etc., to\n   the user or client independent\
    \ of the client's connection to the mail\n   store.\n   Notifications also allow\
    \ for different Message Waiting Indicator\n   (MWI) behaviors (e.g., turn MWI\
    \ indication off after all the messages\n   in all the end user's mailboxes have\
    \ been read, should such an\n   unlikely thing occur in the real world).\n   The\
    \ payload of a notification might include a URL referring to the\n   message that\
    \ caused the event, possibly using URLAUTH [URLAUTH].\n   As state change events\
    \ occur in the mail store, they are filtered,\n   which is to say matched against\
    \ client or user preferences.  As a\n   result, a notification may or may not\
    \ be generated for delivery to\n   the user or client.\n   In the most general\
    \ case, the mail system sends bulk state change\n   events to an external notification\
    \ server, and it is the notification\n   server that filters the events by matching\
    \ against the user's or\n   client's preferences.\n   In the most mail-specific\
    \ case, the mail system performs the\n   filtering itself, for example, using\
    \ Sieve.\n"
- title: 5.4.  Event Order
  contents:
  - "5.4.  Event Order\n   For the Lemonade Profile, the event order is generally\
    \ not important.\n   By including information such as the modification sequence\
    \ identifier\n   (called a modseq or mod-sequence) [CONDSTORE] in notifications,\
    \ the\n   receiving client can quickly and easily determine if it has already\n\
    \   processed the triggering event (for example, if a notification\n   arrives\
    \ out of order, or if the client has resynchronized since the\n   event was generated).\n\
    \   For generic server-to-server notifications, the order is likely to\n   matter\
    \ and the mail system needs to provide notifications to the\n   notification system\
    \ in the order that they occur.\n"
- title: 5.5.  Reliability
  contents:
  - "5.5.  Reliability\n   For the Lemonade Profile, lost or delayed notifications\
    \ to the client\n   are tolerated.  A client can resynchronize its state (including\
    \ that\n   reported by any missing events) when it next connects to the server.\n\
    \   For generic server-to-server notifications, it is assumed that the\n   data\
    \ in a state change event is important, and therefore a high level\n   of reliability\
    \ is needed between the mail system and any external\n   notification systems.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Notification content (payload) needs to be protected\
    \ against\n   eavesdropping and alteration when it contains specific information\n\
    \   from messages, such as the sender.\n   Even when the content is trivial and\
    \ does not contain privacy-\n   sensitive information, guarding against denial-of-service\
    \ attacks may\n   require authentication or verification of the notification sender.\n\
    \   Protocols that manipulate filters need mechanisms to protect against\n   modification\
    \ by, as well as disclosure to, unauthorized entities.\n   For example, a malicious\
    \ entity might try to delete notifications the\n   user wants, or try to flood\
    \ the target device with notifications to\n   incur usage charges, or prevent\
    \ normal use.  In addition, the filters\n   themselves might contain sensitive\
    \ information or reveal\n   interpersonal or inter-organizational relationships,\
    \ as well as email\n   addresses.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [IMAP]         Crispin, M., \"INTERNET MESSAGE\
    \ ACCESS PROTOCOL -\n                  VERSION 4rev1\", RFC 3501, March 2003.\n\
    \   [LEMONADE-PROFILE]\n                  Cridland, D., Ed., Melnikov, A., Ed.,\
    \ and S. Maes,\n                  Ed., \"The Internet Email to Support Diverse\
    \ Service\n                  Environments (Lemonade) Profile\", RFC 5550, August\n\
    \                  2009.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [BIFF]         Gellens, R., \"Simple New Mail\
    \ Notification\", RFC 4146,\n                  August 2005.\n   [CONTEXT]    \
    \  Cridland, D. and C. King, \"Contexts for IMAP4\", RFC\n                  5267,\
    \ July 2008.\n   [CONDSTORE]    Melnikov, A. and S. Hole, \"IMAP Extension for\n\
    \                  Conditional STORE Operation or Quick Flag Changes\n       \
    \           Resynchronization\", RFC 4551, June 2006.\n   [IMAP-SIEVE]   Leiba,\
    \ B., \"Support for Sieve in Internet Message\n                  Access Protocol\
    \ (IMAP4)\", Work in Progress, February\n                  2008.\n   [MANAGE-SIEVE]\
    \ Melnikov, A., Ed., and T. Martin, \"A Protocol for\n                  Remotely\
    \ Managing Sieve Scripts\", Work in Progress,\n                  September 2008.\n\
    \   [MSGEVENT]     Gellens, R. and C. Newman, \"Internet Message Store\n     \
    \             Events\", RFC 5423, March 2009.\n   [IDLE]         Leiba, B., \"\
    IMAP4 IDLE command\", RFC 2177, June 1997.\n   [NOTIFY]       Gulbrandsen, A.,\
    \ King, C., and A. Melnikov, \"The IMAP\n                  NOTIFY Extension\"\
    , RFC 5465, February 2009.\n   [OMA-LEMONADE-ARCH]\n                  Burger,\
    \ E. and G. Parsons, \"LEMONADE Architecture -\n                  Supporting Open\
    \ Mobile Alliance (OMA) Mobile Email\n                  (MEM) Using Internet Mail\"\
    , RFC 5442, March 2009.\n   [OMA-ME-RD]    Open Mobile Alliance Mobile Email Requirement\n\
    \                  Document, (Work in progress).\n                  http://www.openmobilealliance.org/\n\
    \   [SIEVE]        Guenther, P., Ed., and T. Showalter, Ed., \"Sieve: An\n   \
    \               Email Filtering Language\", RFC 5228, January 2008.\n   [SIEVE-NOTIFY]\
    \ Melnikov, A., Ed., Leiba, B., Ed., Segmuller, W., and\n                  T.\
    \ Martin, \"Sieve Email Filtering: Extension for\n                  Notifications\"\
    , RFC 5435, January 2009.\n   [SIEVE-VARIABLES]\n                  Homme, K.,\
    \ \"Sieve Email Filtering: Variables\n                  Extension\", RFC 5229,\
    \ January 2008.\n   [URLAUTH]      Crispin, M., \"Internet Message Access Protocol\
    \ (IMAP)\n                  - URLAUTH Extension\", RFC 4467, May 2006.\n"
- title: 8.  Contributors
  contents:
  - "8.  Contributors\n   The original (and longer and more detailed) version of this\
    \ document\n   was authored by Stephane H. Maes and Ray Cromwell of Oracle\n \
    \  Corporation.\n   The current and original authors want to thank all who have\n\
    \   contributed key insight in notifications and filtering and have\n   authored\
    \ specifications or documents used in this document.\n   The current and original\
    \ authors want to thank the authors of the\n   original work on \"Server To Server\
    \ Notification Protocol\n   Requirements\", some of whose material has been incorporated\
    \ in the\n   present document, in particular, Gev Decktor.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Randall Gellens, Editor\n   QUALCOMM Incorporated\n   5775\
    \ Morehouse Drive\n   San Diego, CA  92121\n   USA\n   EMail: rg+ietf@qualcomm.com\n"
