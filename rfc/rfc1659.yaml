- contents:
  - "    Definitions of Managed Objects for RS-232-like Hardware Devices\n                              using
    SMIv2\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Table of Contents\n   1. Introduction ................................................
    \   1\n   2. The SNMPv2 Network Management Framework .....................    1\n
    \  2.1 Object Definitions .........................................    2\n   3.
    Overview ....................................................    2\n   3.1 Relationship
    to Interface MIB ..............................    3\n   4. Definitions .................................................
    \   3\n   5. Acknowledgements ............................................   20\n
    \  6. References ..................................................   20\n   7.
    Security Considerations .....................................   21\n   8. Author's
    Address ............................................   21\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This memo defines an extension to the Management Information
    Base\n   (MIB) for use with network management protocols in the Internet\n   community.
    \ In particular, it defines objects for the management of\n   RS-232-like devices.\n"
  title: 1.  Introduction
- contents:
  - "2.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management
    Framework consists of four major\n   components.  They are:\n      o    RFC 1442
    [1] which defines the SMI, the mechanisms used for\n           describing and
    naming objects for the purpose of management.\n      o    STD 17, RFC 1213 [2]
    defines MIB-II, the core set of managed\n           objects for the Internet suite
    of protocols.\n      o    RFC 1445 [3] which defines the administrative and other\n
    \          architectural aspects of the framework.\n      o    RFC 1448 [4] which
    defines the protocol used for network\n           access to managed objects.\n
    \  The Framework permits new objects to be defined for the purpose of\n   experimentation
    and evaluation.\n"
  title: 2.  The SNMPv2 Network Management Framework
- contents:
  - "2.1.  Object Definitions\n   Managed objects are accessed via a virtual information
    store, termed\n   the Management Information Base or MIB.  Objects in the MIB
    are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n   defined
    in the SMI.  In particular, each object object type is named\n   by an OBJECT
    IDENTIFIER, an administratively assigned name.  The\n   object type together with
    an object instance serves to uniquely\n   identify a specific instantiation of
    the object.  For human\n   convenience, we often use a textual string, termed
    the descriptor, to\n   refer to the object type.\n"
  title: 2.1.  Object Definitions
- contents:
  - "3.  Overview\n   The RS-232-like Hardware Device MIB applies to interface ports
    that\n   might logically support the Interface MIB, a Transmission MIB, or the\n
    \  Character MIB.  The most common example is an RS-232 port with modem\n   signals.\n
    \  The RS-232-like Hardware Device MIB is mandatory for all systems that\n   have
    such a hardware port supporting services managed through some\n   other MIB.\n
    \  The MIB includes multiple similar types of hardware, and as a result\n   contains
    objects not applicable to all of those types.  The\n   compliance definitions
    herein thus have a general group for all\n   implementations, and separate groups
    for the different types of\n   ports, such as asynchronous and synchronous.\n
    \  The RS-232-like Hardware Port MIB includes RS-232, RS-422, RS-423,\n   V.35,
    and other asynchronous or synchronous, serial physical links\n   with a similar
    set of control signals.\n   The MIB contains objects that relate to physical layer
    connections.\n   Such connections may provide interesting hardware signals (other
    than\n   for basic data transfer), such as RNG and DCD.  Hardware ports also\n
    \  have such attributes as speed and bits per character.\n   The MIB comprises
    one base object and four tables, detailed in the\n   following sections.  The
    tables contain objects for all ports,\n   asynchronous ports, and input and output
    control signals.\n"
  title: 3.  Overview
- contents:
  - "3.1.  Relationship to Interface MIB\n   The RS-232-like MIB is one of many MIBs
    designed for layered use as\n   described in the Interface MIB [5].  In most implementations
    where it\n   is present, it will be in the lowest interface sublayer, that is,
    the\n   RS-232-like MIB represents the physical layer, providing service to\n
    \  higher layers such as the Character MIB [6] or PPP MIB [7].\n   The Interface
    MIB's ifTestTable and ifRcvAddressTable are not\n   relevant to the RS-232-like
    MIB.\n   The RS-232-like MIB is relevant for ifType values rs232(33), v35(45),\n
    \  and perhaps others.\n   The RS-232-like MIB requires the conformance groups
    ifGeneralGroup,\n   and ifFixedLengthGroup.\n   The value of ifSpeed is the same
    as rs232PortOutSpeed.\n   Usefulness of error counters in this MIB depends on
    the octet\n   counters in ifFixedLengthGroup.\n"
  title: 3.1.  Relationship to Interface MIB
- contents:
  - "4.  Definitions\n   RS-232-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,
    OBJECT-TYPE, NOTIFICATION-TYPE,\n       Counter32, Integer32\n           FROM
    SNMPv2-SMI\n       InterfaceIndex\n           FROM IF-MIB\n       transmission\n
    \          FROM RFC1213-MIB\n       MODULE-COMPLIANCE, OBJECT-GROUP\n           FROM
    SNMPv2-CONF;\n   rs232 MODULE-IDENTITY\n       LAST-UPDATED \"9405261700Z\"\n
    \      ORGANIZATION \"IETF Character MIB Working Group\"\n       CONTACT-INFO\n
    \              \"        Bob Stewart\n                Postal: Xyplex, Inc.\n                        295
    Foster Street\n                        Littleton, MA 01460\n                   Tel:
    508-952-4816\n                   Fax: 508-952-4887\n                E-mail: rlstewart@eng.xyplex.com\"\n
    \      DESCRIPTION\n               \"The MIB module for RS-232-like hardware devices.\"\n
    \      ::= { transmission 33 }\n   -- Generic RS-232-like information\n   rs232Number
    OBJECT-TYPE\n       SYNTAX Integer32\n       MAX-ACCESS read-only\n       STATUS
    current\n       DESCRIPTION\n           \"The number of ports (regardless of their
    current\n           state) in the RS-232-like general port table.\"\n       ::=
    { rs232 1 }\n   -- RS-232-like General Port Table\n   rs232PortTable OBJECT-TYPE\n
    \      SYNTAX SEQUENCE OF Rs232PortEntry\n       MAX-ACCESS not-accessible\n       STATUS
    current\n       DESCRIPTION\n           \"A list of port entries.  The number
    of entries is\n           given by the value of rs232Number.\"\n       ::= { rs232
    2 }\n   rs232PortEntry OBJECT-TYPE\n       SYNTAX Rs232PortEntry\n       MAX-ACCESS
    not-accessible\n       STATUS current\n       DESCRIPTION\n           \"Status
    and parameter values for a port.\"\n       INDEX { rs232PortIndex }\n       ::=
    { rs232PortTable 1 }\n   Rs232PortEntry ::=\n       SEQUENCE {\n           rs232PortIndex\n
    \              InterfaceIndex,\n           rs232PortType\n               INTEGER,\n
    \          rs232PortInSigNumber\n               Integer32,\n           rs232PortOutSigNumber\n
    \              Integer32,\n           rs232PortInSpeed\n               Integer32,\n
    \          rs232PortOutSpeed\n               Integer32,\n           rs232PortInFlowType\n
    \              INTEGER,\n           rs232PortOutFlowType\n               INTEGER\n
    \      }\n   rs232PortIndex OBJECT-TYPE\n       SYNTAX InterfaceIndex\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"The value of
    ifIndex for the port.  By convention\n           and if possible, hardware port
    numbers map directly\n           to external connectors.  The value for each port
    must\n           remain constant at least from one re-initialization\n           of
    the network management agent to the next.\"\n       ::= { rs232PortEntry 1 }\n
    \  rs232PortType OBJECT-TYPE\n       SYNTAX INTEGER { other(1), rs232(2), rs422(3),\n
    \                       rs423(4), v35(5), x21(6) }\n       MAX-ACCESS read-only\n
    \      STATUS current\n       DESCRIPTION\n           \"The port's hardware type.\"\n
    \      ::= { rs232PortEntry 2 }\n   rs232PortInSigNumber OBJECT-TYPE\n       SYNTAX
    Integer32\n       MAX-ACCESS read-only\n       STATUS current\n       DESCRIPTION\n
    \          \"The number of input signals for the port in the\n           input
    signal table (rs232PortInSigTable).  The table\n           contains entries only
    for those signals the software\n           can detect and that are useful to observe.\"\n
    \      ::= { rs232PortEntry 3 }\n   rs232PortOutSigNumber OBJECT-TYPE\n       SYNTAX
    Integer32\n       MAX-ACCESS read-only\n       STATUS current\n       DESCRIPTION\n
    \          \"The number of output signals for the port in the\n           output
    signal table (rs232PortOutSigTable).  The\n           table contains entries only
    for those signals the\n           software can assert and that are useful to observe.\"\n
    \      ::= { rs232PortEntry 4 }\n   rs232PortInSpeed OBJECT-TYPE\n       SYNTAX
    Integer32\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n
    \          \"The port's input speed in bits per second.  Note that\n           non-standard
    values, such as 9612, are probably not allowed\n           on most implementations.\"\n
    \      ::= { rs232PortEntry 5 }\n   rs232PortOutSpeed OBJECT-TYPE\n       SYNTAX
    Integer32\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n
    \          \"The port's output speed in bits per second.  Note that\n           non-standard
    values, such as 9612, are probably not allowed\n           on most implementations.\"\n
    \      ::= { rs232PortEntry 6 }\n   rs232PortInFlowType OBJECT-TYPE\n       SYNTAX
    INTEGER { none(1), ctsRts(2), dsrDtr(3) }\n       MAX-ACCESS read-write\n       STATUS
    current\n       DESCRIPTION\n           \"The port's type of input flow control.
    \ 'none'\n           indicates no flow control at this level.\n           'ctsRts'
    and 'dsrDtr' indicate use of the indicated\n           hardware signals.\"\n       ::=
    { rs232PortEntry 7 }\n   rs232PortOutFlowType OBJECT-TYPE\n       SYNTAX INTEGER
    { none(1), ctsRts(2), dsrDtr(3) }\n       MAX-ACCESS read-write\n       STATUS
    current\n       DESCRIPTION\n           \"The port's type of output flow control.
    \ 'none'\n           indicates no flow control at this level.\n           'ctsRts'
    and 'dsrDtr' indicate use of the indicated\n           hardware signals.\"\n       ::=
    { rs232PortEntry 8 }\n   -- RS-232-like Asynchronous Port Table\n   rs232AsyncPortTable
    OBJECT-TYPE\n       SYNTAX SEQUENCE OF Rs232AsyncPortEntry\n       MAX-ACCESS
    not-accessible\n       STATUS current\n       DESCRIPTION\n           \"A list
    of asynchronous port entries.  Entries need\n           not exist for synchronous
    ports.\"\n       ::= { rs232 3 }\n   rs232AsyncPortEntry OBJECT-TYPE\n       SYNTAX
    Rs232AsyncPortEntry\n       MAX-ACCESS not-accessible\n       STATUS current\n
    \      DESCRIPTION\n           \"Status and parameter values for an asynchronous\n
    \          port.\"\n       INDEX { rs232AsyncPortIndex }\n       ::= { rs232AsyncPortTable
    1 }\n   Rs232AsyncPortEntry ::=\n       SEQUENCE {\n           rs232AsyncPortIndex\n
    \              InterfaceIndex,\n           rs232AsyncPortBits\n               INTEGER,\n
    \          rs232AsyncPortStopBits\n               INTEGER,\n           rs232AsyncPortParity\n
    \              INTEGER,\n           rs232AsyncPortAutobaud\n               INTEGER,\n
    \          rs232AsyncPortParityErrs\n               Counter32,\n           rs232AsyncPortFramingErrs\n
    \              Counter32,\n           rs232AsyncPortOverrunErrs\n               Counter32\n
    \      }\n   rs232AsyncPortIndex OBJECT-TYPE\n       SYNTAX InterfaceIndex\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"A unique value
    for each port.  Its value is the\n           same as rs232PortIndex for the port.\"\n
    \      ::= { rs232AsyncPortEntry 1 }\n   rs232AsyncPortBits OBJECT-TYPE\n       SYNTAX
    INTEGER (5..8)\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n
    \          \"The port's number of bits in a character.\"\n       ::= { rs232AsyncPortEntry
    2 }\n   rs232AsyncPortStopBits OBJECT-TYPE\n       SYNTAX INTEGER { one(1), two(2),\n
    \                       oneAndHalf(3), dynamic(4) }\n       MAX-ACCESS read-write\n
    \      STATUS current\n       DESCRIPTION\n           \"The port's number of stop
    bits.\"\n       ::= { rs232AsyncPortEntry 3 }\n   rs232AsyncPortParity OBJECT-TYPE\n
    \      SYNTAX INTEGER { none(1), odd(2), even(3),\n                        mark(4),
    space(5) }\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n
    \          \"The port's sense of a character parity bit.\"\n       ::= { rs232AsyncPortEntry
    4 }\n   rs232AsyncPortAutobaud OBJECT-TYPE\n       SYNTAX INTEGER { enabled(1),
    disabled(2) }\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n
    \          \"A control for the port's ability to automatically\n           sense
    input speed.\n           When rs232PortAutoBaud is 'enabled', a port may\n           autobaud
    to values different from the set values for\n           speed, parity, and character
    size.  As a result a\n           network management system may temporarily observe\n
    \          values different from what was previously set.\"\n       ::= { rs232AsyncPortEntry
    5 }\n   rs232AsyncPortParityErrs OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"Total number
    of characters with a parity error,\n           input from the port since system
    re-initialization\n           and while the port state was 'up' or 'test'.\"\n
    \      ::= { rs232AsyncPortEntry 6 }\n   rs232AsyncPortFramingErrs OBJECT-TYPE\n
    \      SYNTAX Counter32\n       MAX-ACCESS read-only\n       STATUS current\n
    \      DESCRIPTION\n           \"Total number of characters with a framing error,\n
    \          input from the port since system re-initialization\n           and
    while the port state was 'up' or 'test'.\"\n       ::= { rs232AsyncPortEntry 7
    }\n   rs232AsyncPortOverrunErrs OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"Total number
    of characters with an overrun error,\n           input from the port since system
    re-initialization\n           and while the port state was 'up' or 'test'.\"\n
    \      ::= { rs232AsyncPortEntry 8 }\n   -- RS-232-like Synchronous Port Table\n
    \  rs232SyncPortTable OBJECT-TYPE\n       SYNTAX SEQUENCE OF Rs232SyncPortEntry\n
    \      MAX-ACCESS not-accessible\n       STATUS current\n       DESCRIPTION\n
    \          \"A list of asynchronous port entries.  Entries need\n           not
    exist for synchronous ports.\"\n       ::= { rs232 4 }\n   rs232SyncPortEntry
    OBJECT-TYPE\n       SYNTAX Rs232SyncPortEntry\n       MAX-ACCESS not-accessible\n
    \      STATUS current\n       DESCRIPTION\n           \"Status and parameter values
    for a synchronous\n           port.\"\n       INDEX { rs232SyncPortIndex }\n       ::=
    { rs232SyncPortTable 1 }\n   Rs232SyncPortEntry ::=\n       SEQUENCE {\n           rs232SyncPortIndex\n
    \              InterfaceIndex,\n           rs232SyncPortClockSource\n               INTEGER,\n
    \          rs232SyncPortFrameCheckErrs\n               Counter32,\n           rs232SyncPortTransmitUnderrunErrs\n
    \              Counter32,\n           rs232SyncPortReceiveOverrunErrs\n               Counter32,\n
    \          rs232SyncPortInterruptedFrames\n               Counter32,\n           rs232SyncPortAbortedFrames\n
    \              Counter32,\n           rs232SyncPortRole\n               INTEGER,\n
    \          rs232SyncPortEncoding\n               INTEGER,\n           rs232SyncPortRTSControl\n
    \              INTEGER,\n           rs232SyncPortRTSCTSDelay\n               Integer32,\n
    \          rs232SyncPortMode\n               INTEGER,\n           rs232SyncPortIdlePattern\n
    \              INTEGER,\n           rs232SyncPortMinFlags\n               Integer32\n
    \      }\n   rs232SyncPortIndex OBJECT-TYPE\n       SYNTAX InterfaceIndex\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"A unique value
    for each port.  Its value is the\n           same as rs232PortIndex for the port.\"\n
    \      ::= { rs232SyncPortEntry 1 }\n   rs232SyncPortClockSource OBJECT-TYPE\n
    \      SYNTAX INTEGER { internal(1), external(2), split(3) }\n       MAX-ACCESS
    read-write\n       STATUS current\n       DESCRIPTION\n           \"Source of
    the port's bit rate clock. 'split' means\n           the tranmit clock is internal
    and the receive clock\n           is external.\"\n       ::= { rs232SyncPortEntry
    2 }\n   rs232SyncPortFrameCheckErrs OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"Total number
    of frames with an invalid frame check\n           sequence, input from the port
    since system\n           re-initialization and while the port state was 'up'\n
    \          or 'test'.\"\n       ::= { rs232SyncPortEntry 3 }\n   rs232SyncPortTransmitUnderrunErrs
    OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS read-only\n       STATUS
    current\n       DESCRIPTION\n           \"Total number of frames that failed to
    be\n           transmitted on the port since system\n           re-initialization
    and while the port state was 'up'\n           or 'test' because data was not available
    to the\n           transmitter in time.\"\n       ::= { rs232SyncPortEntry 4 }\n
    \  rs232SyncPortReceiveOverrunErrs OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"Total number
    of frames that failed to be received\n           on the port since system re-initialization
    and while\n           the port state was 'up' or 'test' because the\n           receiver
    did not accept the data in time.\"\n       ::= { rs232SyncPortEntry 5 }\n   rs232SyncPortInterruptedFrames
    OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS read-only\n       STATUS
    current\n       DESCRIPTION\n           \"Total number of frames that failed to
    be received\n           or transmitted on the port due to loss of modem\n           signals
    since system re-initialization and while the\n           port state was 'up' or
    'test'.\"\n       ::= { rs232SyncPortEntry 6 }\n   rs232SyncPortAbortedFrames
    OBJECT-TYPE\n       SYNTAX Counter32\n       MAX-ACCESS read-only\n       STATUS
    current\n       DESCRIPTION\n           \"Number of frames aborted on the port
    due to\n           receiving an abort sequence since system\n           re-initialization
    and while the port state was 'up'\n           or 'test'.\"\n       ::= { rs232SyncPortEntry
    7 }\n   rs232SyncPortRole OBJECT-TYPE\n       SYNTAX INTEGER  { dte(1), dce(2)
    }\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n           \"The
    role the device is playing that is using this port.\n              dte    means
    the device is performing the role of\n                     data terminal equipment\n
    \             dce    means the device is performing the role of\n                     data
    circuit-terminating equipment.\"\n       DEFVAL { dce }\n       ::= { rs232SyncPortEntry
    8 }\n   rs232SyncPortEncoding OBJECT-TYPE\n       SYNTAX INTEGER  { nrz(1), nrzi(2)
    }\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n           \"The
    bit stream encoding technique that is in effect\n            for this port.\n
    \             nrz    for Non-Return to Zero encoding\n              nrzi   for
    Non-Return to Zero Inverted encoding.\"\n       DEFVAL { nrz }\n       ::= { rs232SyncPortEntry
    9 }\n   rs232SyncPortRTSControl OBJECT-TYPE\n       SYNTAX INTEGER  { controlled(1),
    constant(2) }\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n
    \          \"The method used to control the Request To Send (RTS)\n            signal.\n
    \             controlled  when the DTE is asserts RTS each time\n                          data
    needs to be transmitted and drops\n                          RTS at some point
    after data\n                          transmission begins.\n                          If
    rs232SyncPortRole is 'dte', the\n                          RTS is an output signal.
    The device\n                          will issue a RTS and wait for a CTS\n                          from
    the DCE before starting to\n                          transmit.\n                          If
    rs232SyncPortRole is 'dce', the\n                          RTS is an input signal.
    The device\n                          will issue a CTS only after having\n                          received
    RTS and waiting the\n                          rs232SyncPortRTSCTSDelay interval.\n
    \             constant    when the DTE constantly asserts RTS.\"\n       DEFVAL
    { constant }\n       ::= { rs232SyncPortEntry 10 }\n   rs232SyncPortRTSCTSDelay
    OBJECT-TYPE\n       SYNTAX Integer32\n       MAX-ACCESS read-write\n       STATUS
    current\n       DESCRIPTION\n           \"The interval (in milliseconds) that
    the DCE must wait\n            after it sees RTS asserted before asserting CTS.
    \ This\n            object exists in support of older synchronous devices\n            that
    cannot recognize CTS within a certain interval\n            after it asserts RTS.\"\n
    \      DEFVAL { 0 }\n       ::= { rs232SyncPortEntry 11 }\n   rs232SyncPortMode
    OBJECT-TYPE\n       SYNTAX INTEGER  { fdx(1), hdx(2), simplex-receive(3),\n                         simplex-send(4)
    }\n       MAX-ACCESS read-write\n       STATUS current\n       DESCRIPTION\n           \"The
    mode of operation of the port with respect to the\n            direction and simultaneity
    of data transfer.\n              fdx              when frames on the data link
    can be\n                               transmitted and received at the same\n
    \                              time\n              hdx              when frames
    can either be received\n                               from the data link or transmitted\n
    \                              onto the data link but not at the\n                               same
    time.\n              simplex-receive  when frames can only be received on\n                               this
    data link.\n              simplex-send     when frames can only be sent on this\n
    \                              data link.\"\n       DEFVAL { fdx }\n       ::=
    { rs232SyncPortEntry 12 }\n   rs232SyncPortIdlePattern OBJECT-TYPE\n       SYNTAX
    INTEGER  { mark(1), space(2) }\n       MAX-ACCESS read-write\n       STATUS current\n
    \      DESCRIPTION\n           \"The bit pattern used to indicate an idle line.\"\n
    \      DEFVAL { space }\n       ::= { rs232SyncPortEntry 13 }\n   rs232SyncPortMinFlags
    OBJECT-TYPE\n       SYNTAX Integer32\n       MAX-ACCESS read-write\n       STATUS
    current\n       DESCRIPTION\n           \"The minimum number of flag patterns
    this port needs in\n            order to recognize the end of one frame and the
    start\n            of the next.  Plausible values are 1 and 2.\"\n       DEFVAL
    { 2 }\n       ::= { rs232SyncPortEntry 14 }\n   -- Input Signal Table\n   rs232InSigTable
    OBJECT-TYPE\n       SYNTAX SEQUENCE OF Rs232InSigEntry\n       MAX-ACCESS not-accessible\n
    \      STATUS current\n       DESCRIPTION\n           \"A list of port input control
    signal entries\n           implemented and visible to the software on the port,\n
    \          and useful to monitor.\"\n       ::= { rs232 5 }\n   rs232InSigEntry
    OBJECT-TYPE\n       SYNTAX Rs232InSigEntry\n       MAX-ACCESS not-accessible\n
    \      STATUS current\n       DESCRIPTION\n           \"Input control signal status
    for a hardware port.\"\n       INDEX { rs232InSigPortIndex, rs232InSigName }\n
    \      ::= { rs232InSigTable 1 }\n   Rs232InSigEntry ::=\n       SEQUENCE {\n
    \          rs232InSigPortIndex\n               InterfaceIndex,\n           rs232InSigName\n
    \              INTEGER,\n           rs232InSigState\n               INTEGER,\n
    \          rs232InSigChanges\n               Counter32\n       }\n   rs232InSigPortIndex
    OBJECT-TYPE\n       SYNTAX InterfaceIndex\n       MAX-ACCESS read-only\n       STATUS
    current\n       DESCRIPTION\n           \"The value of rs232PortIndex for the
    port to which\n           this entry belongs.\"\n       ::= { rs232InSigEntry
    1 }\n   rs232InSigName OBJECT-TYPE\n       SYNTAX INTEGER { rts(1), cts(2), dsr(3),
    dtr(4), ri(5),\n                        dcd(6), sq(7), srs(8), srts(9),\n                        scts(10),
    sdcd(11) }\n       MAX-ACCESS read-only\n       STATUS current\n       DESCRIPTION\n
    \          \"Identification of a hardware signal, as follows:\n               rts
    \   Request to Send\n               cts    Clear to Send\n               dsr    Data
    Set Ready\n               dtr    Data Terminal Ready\n               ri     Ring
    Indicator\n               dcd    Received Line Signal Detector\n               sq
    \    Signal Quality Detector\n               srs    Data Signaling Rate Selector\n
    \              srts   Secondary Request to Send\n               scts   Secondary
    Clear to Send\n               sdcd   Secondary Received Line Signal Detector\n
    \          \"\n       REFERENCE\n           \"EIA Standard RS-232-C, August 1969.\"\n
    \      ::= { rs232InSigEntry 2 }\n   rs232InSigState OBJECT-TYPE\n       SYNTAX
    INTEGER { none(1), on(2), off(3) }\n       MAX-ACCESS read-only\n       STATUS
    current\n       DESCRIPTION\n           \"The current signal state.\"\n       ::=
    { rs232InSigEntry 3 }\n   rs232InSigChanges OBJECT-TYPE\n       SYNTAX Counter32\n
    \      MAX-ACCESS read-only\n       STATUS current\n       DESCRIPTION\n           \"The
    number of times the signal has changed from\n           'on' to 'off' or from
    'off' to 'on'.\"\n       ::= { rs232InSigEntry 4 }\n   -- Output Signal Table\n
    \  rs232OutSigTable OBJECT-TYPE\n       SYNTAX SEQUENCE OF Rs232OutSigEntry\n
    \      MAX-ACCESS not-accessible\n       STATUS current\n       DESCRIPTION\n
    \          \"A list of port output control signal entries\n           implemented
    and visible to the software on the port,\n           and useful to monitor.\"\n
    \      ::= { rs232 6 }\n   rs232OutSigEntry OBJECT-TYPE\n       SYNTAX Rs232OutSigEntry\n
    \      MAX-ACCESS not-accessible\n       STATUS current\n       DESCRIPTION\n
    \          \"Output control signal status for a hardware port.\"\n       INDEX
    { rs232OutSigPortIndex, rs232OutSigName }\n       ::= { rs232OutSigTable 1 }\n
    \  Rs232OutSigEntry ::=\n       SEQUENCE {\n           rs232OutSigPortIndex\n
    \              InterfaceIndex,\n           rs232OutSigName\n               INTEGER,\n
    \          rs232OutSigState\n               INTEGER,\n           rs232OutSigChanges\n
    \              Counter32\n       }\n   rs232OutSigPortIndex OBJECT-TYPE\n       SYNTAX
    InterfaceIndex\n       MAX-ACCESS read-only\n       STATUS current\n       DESCRIPTION\n
    \          \"The value of rs232PortIndex for the port to which\n           this
    entry belongs.\"\n       ::= { rs232OutSigEntry 1 }\n   rs232OutSigName OBJECT-TYPE\n
    \      SYNTAX INTEGER { rts(1), cts(2), dsr(3), dtr(4), ri(5),\n                        dcd(6),
    sq(7), srs(8), srts(9),\n                        scts(10), sdcd(11) }\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"Identification
    of a hardware signal, as follows:\n               rts    Request to Send\n               cts
    \   Clear to Send\n               dsr    Data Set Ready\n               dtr    Data
    Terminal Ready\n               ri     Ring Indicator\n               dcd    Received
    Line Signal Detector\n               sq     Signal Quality Detector\n               srs
    \   Data Signaling Rate Selector\n               srts   Secondary Request to Send\n
    \              scts   Secondary Clear to Send\n               sdcd   Secondary
    Received Line Signal Detector\n           \"\n       REFERENCE\n           \"EIA
    Standard RS-232-C, August 1969.\"\n       ::= { rs232OutSigEntry 2 }\n   rs232OutSigState
    OBJECT-TYPE\n       SYNTAX INTEGER { none(1), on(2), off(3) }\n       MAX-ACCESS
    read-only\n       STATUS current\n       DESCRIPTION\n           \"The current
    signal state.\"\n       ::= { rs232OutSigEntry 3 }\n   rs232OutSigChanges OBJECT-TYPE\n
    \      SYNTAX Counter32\n       MAX-ACCESS read-only\n       STATUS current\n
    \      DESCRIPTION\n           \"The number of times the signal has changed from\n
    \          'on' to 'off' or from 'off' to 'on'.\"\n       ::= { rs232OutSigEntry
    4 }\n   -- conformance information\n   rs232Conformance OBJECT IDENTIFIER ::=
    { rs232 7 }\n   rs232Groups      OBJECT IDENTIFIER ::= { rs232Conformance 1 }\n
    \  rs232Compliances OBJECT IDENTIFIER ::= { rs232Conformance 2 }\n   -- compliance
    statements\n   rs232Compliance MODULE-COMPLIANCE\n       STATUS  current\n       DESCRIPTION\n
    \              \"The compliance statement for SNMPv2 entities\n               which
    have RS-232-like hardware interfaces.\"\n       MODULE  -- this module\n           MANDATORY-GROUPS
    { rs232Group }\n           GROUP   rs232AsyncGroup\n           DESCRIPTION\n               \"The
    Asynch group is mandatory only for those\n                SNMPv2 entities which
    have asynchronous\n                interfaces Rs-232-like.\"\n           GROUP
    \  rs232SyncGroup\n           DESCRIPTION\n               \"The Synch group is
    mandatory only for those\n                SNMPv2 entities which have synchronous\n
    \               interfaces Rs-232-like.\"\n       ::= { rs232Compliances 1 }\n
    \  -- units of conformance\n   rs232Group    OBJECT-GROUP\n       OBJECTS { rs232Number,
    rs232PortIndex, rs232PortType,\n                 rs232PortInSigNumber, rs232PortOutSigNumber,\n
    \                rs232PortInSpeed, rs232PortOutSpeed,\n                 rs232PortInFlowType,
    rs232PortOutFlowType,\n                 rs232InSigPortIndex, rs232InSigName,\n
    \                rs232InSigState, rs232InSigChanges,\n                 rs232OutSigPortIndex,
    rs232OutSigName,\n                 rs232OutSigState, rs232OutSigChanges }\n       STATUS
    \ current\n       DESCRIPTION\n               \"A collection of objects providing
    information\n                applicable to all RS-232-like interfaces.\"\n       ::=
    { rs232Groups 1 }\n   rs232AsyncGroup OBJECT-GROUP\n       OBJECTS { rs232AsyncPortIndex,
    rs232AsyncPortBits,\n                 rs232AsyncPortStopBits, rs232AsyncPortParity,\n
    \                rs232AsyncPortAutobaud, rs232AsyncPortParityErrs,\n                 rs232AsyncPortFramingErrs,
    rs232AsyncPortOverrunErrs }\n       STATUS  current\n       DESCRIPTION\n               \"A
    collection of objects providing information\n                applicable to asynchronous
    RS-232-like interfaces.\"\n       ::= { rs232Groups 2 }\n   rs232SyncGroup OBJECT-GROUP\n
    \      OBJECTS { rs232SyncPortIndex, rs232SyncPortClockSource,\n                 rs232SyncPortFrameCheckErrs,\n
    \                rs232SyncPortTransmitUnderrunErrs,\n                 rs232SyncPortReceiveOverrunErrs,\n
    \                rs232SyncPortInterruptedFrames,\n                 rs232SyncPortAbortedFrames
    }\n       STATUS  current\n       DESCRIPTION\n               \"A collection of
    objects providing information\n                applicable to synchronous RS-232-like
    interfaces.\"\n       ::= { rs232Groups 3 }\n   rs232SyncSDLCGroup OBJECT-GROUP\n
    \      OBJECTS { rs232SyncPortRole,\n                 rs232SyncPortEncoding,\n
    \                rs232SyncPortRTSControl,\n                 rs232SyncPortRTSCTSDelay,\n
    \                rs232SyncPortMode,\n                 rs232SyncPortIdlePattern,\n
    \                rs232SyncPortMinFlags }\n       STATUS  current\n       DESCRIPTION\n
    \              \"A collection of objects providing information\n                applicable
    to synchronous RS-232-like interfaces\n                running SDLC.\"\n       ::=
    { rs232Groups 4 }\n   END\n"
  title: 4.  Definitions
- contents:
  - "5.  Acknowledgements\n   This memo was produced by the IETF Character MIB Working
    Group.\n"
  title: 5.  Acknowledgements
- contents:
  - "6.  References\n   [1] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
    \"Structure\n       of Management Information for version 2 of the Simple Network\n
    \      Management Protocol (SNMPv2)\", RFC 1442, SNMP Research,Inc.,\n       Hughes
    LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,
    April 1993.\n   [2] McCloghrie, K., and M. Rose, Editors, \"Management Information\n
    \      Base for Network Management of TCP/IP-based internets: MIB-II\",\n       STD
    17, RFC 1213, Hughes LAN Systems, Performance Systems\n       International, March
    1991.\n   [3] Galvin, J., and K. McCloghrie, \"Administrative Model for version\n
    \      2 of the Simple Network Management Protocol (SNMPv2)\", RFC 1445,\n       Trusted
    Information Systems, Hughes LAN Systems, April 1993.\n   [4] Case, J., McCloghrie,
    K., Rose, M., and S. Waldbusser, \"Protocol\n       Operations for version 2 of
    the Simple Network Management\n       Protocol (SNMPv2)\", RFC 1448, SNMP Research,Inc.,
    Hughes LAN\n       Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,
    April 1993.\n   [5] McCloghrie, K., and F. Kastenholz, \"Evolution of the Interfaces\n
    \      Group of MIB-II\", RFC 1573, Hughes LAN Systems, FTP Software,\n       January
    1994.\n   [6] Stewart, B., \"Definitions of Managed Objects for Character Stream\n
    \      Devices using SMIv2\", RFC 1658, Xyplex, Inc., July 1994.\n   [7] Kastenholz,
    F., \"The Definitions of Managed Objects for the Link\n       Control Protocol
    of the Point-to-Point Protocol\", RFC 1471, FTP\n       Software, Inc., June 1993.\n"
  title: 6.  References
- contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Author's Address\n   Bob Stewart\n   Xyplex, Inc.\n   295 Foster Street\n
    \  Littleton, MA 01460\n   Phone: 508-952-4816\n   Fax: 508-952-4887\n   EMail:
    rlstewart@eng.xyplex.com\n"
  title: 8.  Author's Address
