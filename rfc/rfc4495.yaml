- title: __initial_text__
  contents:
  - "       A Resource Reservation Protocol (RSVP) Extension for the\n           \
    \   Reduction of Bandwidth of a Reservation Flow\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes an extension to the Resource Reservation\n\
    \   Protocol (RSVPv1) to reduce the guaranteed bandwidth allocated to an\n   existing\
    \ reservation.  This mechanism can be used to affect\n   individual reservations,\
    \ aggregate reservations, or other forms of\n   RSVP tunnels.  This specification\
    \ is an extension of RFC 2205.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................4\n  \
    \ 2. Individual Reservation Reduction Scenario .......................4\n   3.\
    \ RSVP Aggregation Overview .......................................6\n      3.1.\
    \ RSVP Aggregation Reduction Scenario ........................8\n   4. Requirements\
    \ for Reservation Reduction ..........................9\n   5. RSVP Bandwidth\
    \ Reduction Solution ..............................10\n      5.1. Partial Preemption\
    \ Error Code .............................11\n      5.2. Error Flow Descriptor\
    \ .....................................11\n      5.3. Individual Reservation Flow\
    \ Reduction .....................11\n      5.4. Aggregation Reduction of Individual\
    \ Flows .................12\n      5.5. RSVP Flow Reduction Involving IPsec Tunnels\
    \ ...............12\n      5.6. Reduction of Multiple Flows at Once .......................13\n\
    \   6. Backwards Compatibility ........................................13\n  \
    \ 7. Security Considerations ........................................14\n   8.\
    \ IANA Considerations ............................................15\n   9. Acknowledgements\
    \ ...............................................15\n   10. References ....................................................15\n\
    \      10.1. Normative References .....................................15\n  \
    \    10.2. Informative References ...................................16\n   Appendix\
    \ A. Walking through the Solution ..........................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document proposes an extension to the Resource Reservation\n\
    \   Protocol (RSVP) [1] to allow an existing reservation to be reduced in\n  \
    \ allocated bandwidth in lieu of tearing that reservation down when\n   some of\
    \ that reservation's bandwidth is needed for other purposes.\n   Several examples\
    \ exist in which this mechanism may be utilized.\n   The bandwidth allotted to\
    \ an individual reservation may be reduced\n   due to a variety of reasons such\
    \ as preemption, etc.  In such cases,\n   when the entire bandwidth allocated\
    \ to a reservation is not required,\n   the reservation need not be torn down.\
    \  The solution described in\n   this document allows endpoints to negotiate a\
    \ new (lower) bandwidth\n   that falls at or below the specified new bandwidth\
    \ maximum allocated\n   by the network.  Using a voice session as an example,\
    \ this indication\n   in RSVP could lead endpoints, using another protocol such\
    \ as Session\n   Initiation Protocol (SIP) [9], to signal for a lower-bandwidth\
    \ codec\n   and retain the reservation.\n   With RSVP aggregation [2], two aggregate\
    \ flows with differing\n   priority levels may traverse the same router interface.\
    \  If that\n   router interface reaches bandwidth capacity and is then asked to\n\
    \   establish a new reservation or increase an existing reservation, the\n   router\
    \ has to make a choice: deny the new request (because all\n   resources have been\
    \ utilized) or preempt an existing lower-priority\n   reservation to make room\
    \ for the new or expanded reservation.\n   If the flow being preempted is an aggregate\
    \ of many individual flows,\n   this has greater consequences.  While [2] clearly\
    \ does not terminate\n   all the individual flows if an aggregate is torn down,\
    \ this event\n   will cause packets to be discarded during aggregate reservation\n\
    \   reestablishment.  This document describes a method where only the\n   minimum\
    \ required bandwidth is taken away from the lower-priority\n   aggregated reservation\
    \ and the entire reservation is not preempted.\n   This has the advantage that\
    \ only some of the microflows making up the\n   aggregate are affected.  Without\
    \ this extension, all individual flows\n   are affected and the deaggregator will\
    \ have to attempt the\n   reservation request with a reduced bandwidth.\n   RSVP\
    \ tunnels utilizing IPsec [8] also require an indication that the\n   reservation\
    \ must be reduced to a certain amount (or less).  RSVP\n   aggregation with IPsec\
    \ tunnels is being defined in [11], which should\n   be able to take advantage\
    \ of the mechanism created here in this\n   specification.\n   Note that when\
    \ this document refers to a router interface being\n   \"full\" or \"at capacity\"\
    , this does not imply that all of the\n   bandwidth has been used, but rather\
    \ that all of the bandwidth\n   available for reservation(s) via RSVP under the\
    \ applicable policy has\n   been used.  Policies for real-time traffic routinely\
    \ reserve capacity\n   for routing and inelastic applications, and may distinguish\
    \ between\n   voice, video, and other real-time applications.\n   Explicit Congestion\
    \ Notification (ECN) [10] is an indication that the\n   transmitting endpoint\
    \ must reduce its transmission.  It does not\n   provide sufficient indication\
    \ to tell the endpoint by how much the\n   reduction should be.  Hence the application\
    \ may have to attempt\n   multiple times before it is able to drop its bandwidth\
    \ utilization\n   below the available limit.  Therefore, while we consider ECN\
    \ to be\n   very useful for elastic applications, it is not sufficient for the\n\
    \   purpose of inelastic application where an indication of bandwidth\n   availability\
    \ is useful for codec selection.\n   Section 2 discusses the individual reservation\
    \ flow problem, while\n   Section 3 discusses the aggregate reservation flow problem\
    \ space.\n   Section 4 lists the requirements for this extension.  Section 5\n\
    \   details the protocol changes necessary in RSVP to create a\n   reservation\
    \ reduction indication.  And finally, the appendix provides\n   a walk-through\
    \ example of how this extension modifies RSVP\n   functionality in an aggregate\
    \ scenario.\n   This document updates RFC 2205 [1], as this mechanism affects\
    \ the\n   behaviors of the ResvErr and ResvTear indications defined in that\n\
    \   document.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [4].\n"
- title: 2.  Individual Reservation Reduction Scenario
  contents:
  - "2.  Individual Reservation Reduction Scenario\n   Figure 1 is a network topology\
    \ that is used to describe the benefit\n   of bandwidth reduction in an individual\
    \ reservation.\n               +------------+            +------------+\n    \
    \           |     |Int 1 |            |Int 7 |     |\n   Flow 1===>  |     +-----\
    \ |            |------+     | Flow 1===>\n               | R1  |Int 2 |===========>|Int\
    \ 8 | R2  |\n               |     |      |:::::::::::>|      |     |\n   Flow\
    \ 2:::>  |     +----- |            |------+     | Flow 2:::>\n               |\
    \     |Int 3 |            |Int 9 |     |\n               +------------+      \
    \      +------------+\n                   Figure 1.  Simple Reservation Flows\n\
    \         Legend/Rules:\n         - Flow 1 priority = 300\n         - Flow 2 priority\
    \ = 100\n         - Both flows are shown in the same direction (left to\n    \
    \       right).  Corresponding flows in the reverse direction are\n          \
    \ not shown for diagram simplicity\n   RSVP is a reservation establishment protocol\
    \ in one direction only.\n   This split-path philosophy is because the routed\
    \ path from one device\n   to the other in one direction might not be the routed\
    \ path for\n   communicating between the same two endpoints in the reverse\n \
    \  direction.  End-systems must request 2 one-way reservations if that\n   is\
    \ what is needed for a particular application (like voice calls).\n   Please refer\
    \ to [1] for the details on how this functions.  This\n   example only describes\
    \ the reservation scenario in one direction for\n   simplicity's sake.\n   Figure\
    \ 1 depicts 2 routers (R1 and R2) initially with only one flow\n   (Flow 1). \
    \ The flows are forwarded from R1 to R2 via Int 2.  For this\n   example, let\
    \ us say that Flow 1 and Flow 2 each require 80 units of\n   bandwidth (such as\
    \ for the codec G.711 with no silence suppression).\n   Let us also say that the\
    \ RSVP bandwidth limit for Int 2 of R1 is 100\n   units.\n   As described in [3],\
    \ a priority indication is established for each\n   flow.  In fact, there are\
    \ two priority indications:\n      1) one to establish the reservation, and\n\
    \      2) one to defend the reservation.\n   In this example, Flow 1 and Flow\
    \ 2 have an 'establishing' and a\n   'defending' priority of 300 and 100, respectively.\
    \  Flow 2 will have\n   a higher establishing priority than Flow 1 has for its\
    \ defending\n   priority.  This means that when Flow 2 is signaled, and if no\n\
    \   bandwidth is available at the interface, Flow 1 will have to\n   relinquish\
    \ bandwidth in favor of the higher-priority request of Flow\n   2.  The priorities\
    \ assigned to a reservation are always end-to-end,\n   and not altered by any\
    \ routers in transit.\n   Without the benefit of this specification, Flow 1 will\
    \ be preempted.\n   This specification makes it possible for the ResvErr message\
    \ to\n   indicate that 20 units are still available for a reservation to\n   remain\
    \ up (the interface's 100 units maximum minus Flow 2's 80\n   units).  The reservation\
    \ initiating node (router or end-system) for\n   Flow 1 has the opportunity to\
    \ renegotiate (via call signaling) for\n   acceptable parameters within the existing\
    \ and available bandwidth for\n   the flow (for example, it may decide to change\
    \ to using a codec such\n   as G.729)\n   The problems avoided with the partial\
    \ failure of the flow are:\n   - Reduced packet loss, which results as Flow 1\
    \ attempts to\n     reestablish the reservation for a lower bandwidth.\n   - Inefficiency\
    \ caused by multiple attempts until Flow 1 is able to\n     request bandwidth\
    \ equal to or lower than what is available.  If\n     Flow 1 is established with\
    \ much less than what is available then it\n     leads to inefficient use of available\
    \ bandwidth.\n"
- title: 3.  RSVP Aggregation Overview
  contents:
  - "3.  RSVP Aggregation Overview\n   The following network overview is to help visualize\
    \ the concerns that\n   this specification addresses in RSVP aggregates.  Figure\
    \ 2 consists\n   of 10 routers (the boxes) and 11 flows (1, 2, 3, 4, 5, 9, A,\
    \ B, C, D,\n   and E).  Initially, there will be 5 flows per aggregate (Flow 9\
    \ will\n   be introduced to cause the problem we are addressing in this\n   document),\
    \ with 2 aggregates (X and Y); Flows 1 through 5 in\n   aggregate X and Flows\
    \ A through E in aggregate Y.  These 2 aggregates\n   will cross one router interface\
    \ utilizing all available capacity (in\n   this example).\n   RSVP aggregation\
    \ (per [2]) is no different from an individual\n   reservation with respect to\
    \ being unidirectional.\n           Aggregator of X                          \
    \   Deaggregator of X\n                |                                     \
    \     |\n                V                                          V\n      \
    \       +------+   +------+            +------+   +------+\n    Flow 1-->|   \
    \   |   |      |            |      |   |      |-->Flow 1\n    Flow 2-->|     \
    \ |   |      |            |      |   |      |-->Flow 2\n    Flow 3-->|      |==>|\
    \      |            |      |==>|      |-->Flow 3\n    Flow 4-->|      | ^ |  \
    \    |            |      | ^ |      |-->Flow 4\n    Flow 5-->|      | | |    \
    \  |            |      | | |      |-->Flow 5\n    Flow 9   |  R1  | | |  R2  |\
    \            |  R3  | | |  R4  |   Flow 9\n             +------+ | +------+  \
    \          +------+ | +------+\n                      |   ||                 \
    \ ||     |\n            Aggregate X-->||    Aggregate X   ||<--Aggregate X\n \
    \                         ||        |         ||\n               +--------------+\
    \     |      +--------------+\n               |       |Int 7 |     |      |Int\
    \ 1 |       |\n               |       +----- |     V      |------+       |\n \
    \              |   R10 |Int 8 |===========>|Int 2 | R11   |\n               |\
    \       |      |:::::::::::>|      |       |\n               |       +----- |\
    \     ^      |------+       |\n               |       |Int 9 |     |      |Int\
    \ 3 |       |\n               +--------------+     |      +--------------+\n \
    \                         ..        |        ..\n           Aggregate Y--->..\
    \    Aggregate Y  ..<---Aggregate Y\n                     |    ..            \
    \     ..     |\n            +------+ | +------+            +------+ | +------+\n\
    \   Flow A-->|      | | |      |            |      | | |      |-->Flow A\n   Flow\
    \ B-->|      | V |      |            |      | V |      |-->Flow B\n   Flow C-->|\
    \      |::>|      |            |      |::>|      |-->Flow C\n   Flow D-->|   \
    \   |   |      |            |      |   |      |-->Flow D\n   Flow E-->|  R5  |\
    \   |  R6  |            |  R7  |   |  R8  |-->Flow E\n            +------+   +------+\
    \            +------+   +------+\n               ^                           \
    \              ^\n               |                                         |\n\
    \       Aggregator of Y                              Deaggregator of Y\n     \
    \            Figure 2.  Generic RSVP Aggregate Topology\n         Legend/Rules:\n\
    \         - Aggregate X priority = 100\n         - Aggregate Y priority = 200\n\
    \         - All boxes are routers\n         - Both aggregates are shown in the\
    \ same direction (left to\n           right).  Corresponding aggregates in the\
    \ reverse direction\n           are not shown for diagram simplicity.\n      The\
    \ path for aggregate X is:\n         R1 => R2 => R10 => R11 => R3 => R4\n    \
    \  where aggregate X starts in R1, and deaggregates in R4.\n      Flows 1, 2,\
    \ 3, 4, 5, and 9 communicate through aggregate A.\n      The path for aggregate\
    \ Y is:\n         R5 ::> R6 ::> R10 ::> R11 ::> R7 ::> R8\n      where aggregate\
    \ Y starts in R5, and deaggregates in R8.\n      Flows A, B, C, D, and E communicate\
    \ through aggregate B.\n   Both aggregates share one leg or physical link: between\
    \ R10 and R11,\n   thus they share one outbound interface: Int 8 of R10, where\n\
    \   contention of resources may exist.  That link has an RSVP capacity of\n  \
    \ 800 kbps.  RSVP signaling (messages) is outside the 800 kbps in this\n   example,\
    \ as is any session signaling protocol like SIP.\n"
- title: 3.1.  RSVP Aggregation Reduction Scenario
  contents:
  - "3.1.  RSVP Aggregation Reduction Scenario\n   Figure 2 shows an established aggregated\
    \ reservation (aggregate X)\n   between the routers R1 and R4.  This aggregated\
    \ reservation consists\n   of 5 microflows (Flows 1, 2, 3, 4, and 5).  For the\
    \ sake of this\n   discussion, let us assume that each flow represents a voice\
    \ call and\n   requires 80 kb (such as for the codec G.711 with no silence\n \
    \  suppression).  Aggregate X request is for 400 kbps (80 kbps * 5\n   flows).\
    \  The priority of the aggregate is derived from the individual\n   microflows\
    \ that it is made up of.  In the simple case, all flows of a\n   single priority\
    \ are bundled as a single aggregate (another priority\n   level would be in another\
    \ aggregate, even if traversing the same path\n   through the network).  There\
    \ may be other ways in which the priority\n   of the aggregate is derived, but\
    \ for this discussion it is sufficient\n   to note that each aggregate contains\
    \ a priority (both hold and\n   defending priority).  The means of deriving the\
    \ priority is out of\n   scope for this discussion.\n   Aggregate Y, in Figure\
    \ 2, consists of Flows A, B, C, D, and E and\n   requires 400 kbps (80 kbps *\
    \ 5 flows), and starts at R5 and ends R8.\n   This means there are two aggregates\
    \ occupying all 800 kbps of the\n   RSVP capacity.\n   When Flow 9 is added into\
    \ aggregate X, this will occupy 80 kbps more\n   than Int 8 on R10 has available\
    \ (880k offered load vs. 800k capacity)\n   [1] and [2] create a behavior in RSVP\
    \ to deny the entire aggregate Y\n   and all its individual flows because aggregate\
    \ X has a higher\n   priority.  This situation is where this document focuses\
    \ its\n   requirements and calls for a solution.  There should be some means to\n\
    \   signal to all affected routers of aggregate Y that only 80 kbps is\n   needed\
    \ to accommodate another (higher priority) aggregate.  A\n   solution that accomplishes\
    \ this reduction instead of a failure could:\n      - reduce significant packet\
    \ loss of all flows within aggregate Y\n   During the re-reservation request period\
    \ of time no packets will\n   traverse the aggregate until it is reestablished.\n\
    \      - reduces the chances that the reestablishment of the aggregate\n     \
    \   will reserve an inefficient amount of bandwidth, causing the\n        likely\
    \ preemption of more individual flows at the aggregator\n        than would be\
    \ necessary had the aggregator had more information\n        (that RSVP does not\
    \ provide at this time)\n   During reestablishment of the aggregation in Figure\
    \ 2 (without any\n   modification to RSVP), R8 would guess at how much bandwidth\
    \ to ask\n   for in the new RESV message.  It could request too much bandwidth,\n\
    \   and have to wait for the error that not that much bandwidth was\n   available;\
    \ it could request too little bandwidth and have that\n   aggregation accepted,\
    \ but this would mean that more individual flows\n   would need to be preempted\
    \ outside the aggregate than were necessary,\n   leading to inefficiencies in\
    \ the opposite direction.\n"
- title: 4.  Requirements for Reservation Reduction
  contents:
  - "4.  Requirements for Reservation Reduction\n   The following are the requirements\
    \ to reduce the bandwidth of a\n   reservation.  This applies to both individual\
    \ and aggregate\n   reservations:\n   Req#1 - MUST have the ability to differentiate\
    \ one reservation from\n           another.  In the case of aggregates, it MUST\
    \ distinguish one\n           aggregate from other flows.\n   Req#2 - MUST have\
    \ the ability to indicate within an RSVP error\n           message (generated\
    \ at the router with the congested\n           interface) that a specific reservation\
    \ (individual or\n           aggregate) is to be reduced in bandwidth.\n   Req#3\
    \ - MUST have the ability to indicate within the same error\n           message\
    \ the new maximum amount of bandwidth that is available\n           to be utilized\
    \ within the existing reservation, but no more.\n   Req#4 - MUST NOT produce a\
    \ case in which retransmitted reduction\n           indications further reduce\
    \ the bandwidth of a reservation.\n           Any additional reduction in bandwidth\
    \ for a specified\n           reservation MUST be signaled in a new message.\n\
    \   RSVP messages are unreliable and can get lost.  This specification\n   should\
    \ not compound any error in the network.  If a reduction message\n   were lost,\
    \ another one needs to be sent.  If the receiver ends up\n   receiving two copies\
    \ to reduce the bandwidth of a reservation by some\n   amount, it is likely the\
    \ router will reduce the bandwidth by twice\n   the amount that was actually called\
    \ for.  This will be in error.\n"
- title: 5.  RSVP Bandwidth Reduction Solution
  contents:
  - "5.  RSVP Bandwidth Reduction Solution\n   When a reservation is partially failed,\
    \ a ResvErr (Reservation Error)\n   message is generated just as it is done currently\
    \ with preemptions.\n   The ERROR_SPEC object and the PREEMPTION_PRI object are\
    \ included as\n   well.  Very few additions/changes are needed to the ResvErr\
    \ message\n   to support partial preemptions.  A new error subcode is required\
    \ and\n   is defined in Section 5.1.  The ERROR_SPEC object contained in the\n\
    \   ResvErr message indicates the flowspec that is reserved.  The\n   bandwidth\
    \ indication in this flowspec SHOULD be less than the\n   original reservation\
    \ request.  This is defined in Section 5.2.\n   A comment about RESV messages\
    \ that do not use reliable transport:\n   This document RECOMMENDS that ResvErr\
    \ messages be made reliable by\n   implementing mechanisms in [6].\n   The current\
    \ behavior in RSVP requires a ResvTear message to be\n   transmitted upstream\
    \ when the ResvErr message is transmitted\n   downstream (per [1]).  This ResvTear\
    \ message terminates the\n   reservation in all routers upstream of the router\
    \ where the failure\n   occurred.  This document requires that the ResvTear is\
    \ only generated\n   when the reservation is to be completely removed.  In cases\
    \ where the\n   reservation is only to be reduced, routers compliant with this\n\
    \   specification require that the ResvTear message MUST NOT be sent.\n   The\
    \ appendix has been written to walk through the overall solution to\n   the problems\
    \ presented in Sections 2 and 3.  There is mention of this\n   ResvTear transmission\
    \ behavior in the appendix.\n"
- title: 5.1.  Partial Preemption Error Code
  contents:
  - "5.1.  Partial Preemption Error Code\n   The ResvErr message generated due to\
    \ preemption includes the\n   ERROR_SPEC object as well as the PREEMPTION_PRI\
    \ object.  The format\n   of ERROR_SPEC objects is defined in [1].  The error\
    \ code listed in\n   the ERROR_SPEC object for preemption [5] currently is as\
    \ follows:\n         Errcode = 2 (Policy Control Failure) and\n         ErrSubCode\
    \ = 5 (ERR_PREEMPT)\n   The following error code is suggested in the ERROR_SPEC\
    \ object for\n   partial preemption:\n      Errcode = 2 (Policy Control Failure)\
    \ and\n      ErrSubCode = 102 (ERR_PARTIAL_PREEMPT)\n   There is also an error\
    \ code in the PREEMPTION-PRI object.  This error\n   code takes a value of 1 to\
    \ indicate that the admitted flow was\n   preempted [3].  The same error value\
    \ of 1 may be used for the partial\n   preemption case as well.\n"
- title: 5.2.  Error Flow Descriptor
  contents:
  - "5.2.  Error Flow Descriptor\n   The error flow descriptor is defined in [1] and\
    \ [7].  In the case of\n   partial failure, the flowspec contained in the error\
    \ flow descriptor\n   indicates the highest average and peak rates that the preempting\n\
    \   system can accept in the next RESV message.  The deaggregator must\n   reduce\
    \ its reservation to a number less than or equal to that,\n   whether by changing\
    \ codecs, dropping reservations, or some other\n   mechanism.\n"
- title: 5.3.  Individual Reservation Flow Reduction
  contents:
  - "5.3.  Individual Reservation Flow Reduction\n   When a router requires part of\
    \ the bandwidth that has been allocated\n   to a reservation be used for another\
    \ flow, the router engages in the\n   partial reduction of bandwidth as described\
    \ in this document.  The\n   router sends a ResvErr downstream to indicate the\
    \ partial error with\n   the error code and subcode as described in section 5.1.\
    \  The flowspec\n   contained in the ResvErr message will be used to indicate\
    \ the\n   bandwidth that is currently allocated.\n   The requesting endpoint that\
    \ receives the ResvErr can then negotiate\n   with the transmitting endpoint to\
    \ lower the bandwidth requirement (by\n   selecting another lower bandwidth codec,\
    \ for example).  After the\n   negotiations, both endpoints will issue the RSVP\
    \ PATH and RESV\n   message with the new, lowered bandwidth.\n"
- title: 5.4.  Aggregation Reduction of Individual Flows
  contents:
  - "5.4.  Aggregation Reduction of Individual Flows\n   When a partial failure occurs\
    \ in an aggregation scenario, the\n   deaggregator receives the ResvErr message\
    \ with the reduction\n   indication from a router in the path of the aggregate.\
    \  It then\n   decides whether one or more individual flows from the aggregate\
    \ are\n   to be affected by this ResvErr message.  The following choices are\n\
    \   possible:\n   o  If that (deaggregator) router determines that one or more\n\
    \      individual flow(s) are to partially failed, then it sends a\n      ResvErr\
    \ message with a reduced bandwidth indication to those\n      individual flow(s).\
    \  This is as per the descriptions in the\n      previous section (5.3).\n   o\
    \  If that (deaggregator) router determines that one individual flow\n      is\
    \ to be preempted to satisfy the aggregate ResvErr, it determines\n      which\
    \ flow is affected.  That router transmits a new ResvErr\n      message downstream\
    \ per [3].  That same router transmits a ResvTear\n      message upstream.  This\
    \ ResvTear message of an individual flow\n      does not tear down the aggregate.\
    \  Only the individual flow is\n      affected.\n   o  If that (deaggregator)\
    \ router determines that multiple individual\n      flows are to be preempted\
    \ to satisfy the aggregate ResvErr, it\n      chooses which flows are affected.\
    \  That router transmits a new\n      ResvErr message downstream as per [3] to\
    \ each individual flow.\n      The router also transmits ResvTear messages upstream\
    \ for the same\n      individual flows.  These ResvTear messages of an individual\
    \ flow\n      do not tear down the aggregate.  Only the individual flows are\n\
    \      affected.\n   In all cases, the deaggregator lowers the bandwidth requested\
    \ in the\n   Aggregate Resv message to reflect the change.\n   Which particular\
    \ flow or series of flows within an aggregate are\n   picked by the deaggregator\
    \ for bandwidth reduction or preemption is\n   outside the scope of this document.\n"
- title: 5.5.  RSVP Flow Reduction Involving IPsec Tunnels
  contents:
  - "5.5.  RSVP Flow Reduction Involving IPsec Tunnels\n   RFC 2207 (per [8]) specifies\
    \ how RSVP reservations function in IPsec\n   data flows.  The nodes initiating\
    \ the IPsec flow can be an end-system\n   like a computer, or it can router between\
    \ two end-systems, or it can\n   be an in-line bulk encryption device immediately\
    \ adjacent to a router\n   interface; [11] directly addresses this later scenario.\n\
    \   The methods of identification of an IPsec with reservation flow are\n   different\
    \ from non-encrypted flows, but how the reduction mechanism\n   specified within\
    \ this document functions is not.\n   An IPsec with reservation flow is, for all\
    \ intents and purposes,\n   considered an individual flow with regard to how to\
    \ reduce the\n   bandwidth of the flow.  Obviously, an IPsec with reservation\
    \ flow can\n   be a series of individual flows or disjointed best-effort packets\n\
    \   between two systems.  But to this specification, this tunnel is an\n   individual\
    \ RSVP reservation.\n   Anywhere within this specification that mentions an individual\n\
    \   reservation flow, the same rules of bandwidth reduction and\n   preemption\
    \ MUST apply.\n"
- title: 5.6.  Reduction of Multiple Flows at Once
  contents:
  - "5.6.  Reduction of Multiple Flows at Once\n   As a cautionary note, bandwidth\
    \ SHOULD NOT be reduced across multiple\n   reservations at the same time, in\
    \ reaction to the same reduction\n   event.  A router not knowing the impact of\
    \ reservation bandwidth\n   reduction on more than one flow may cause more widespread\
    \ ill effects\n   than is necessary.\n   This says nothing to a policy where preemption\
    \ should or should not\n   occur across multiple flows.\n"
- title: 6.  Backwards Compatibility
  contents:
  - "6.  Backwards Compatibility\n   Backwards compatibility with this extension will\
    \ result in RSVP\n   operating as it does without this extension, and no worse.\
    \  The two\n   routers involved in this extension are the router that had the\n\
    \   congested interface and the furthest downstream router that\n   determines\
    \ what to do with the reduction indication.\n   In the case of the router that\
    \ experiences congestion or otherwise\n   needs to reduce the bandwidth of an\
    \ existing reservation:\n   - If that router supports this extension:\n     #1\
    \ - it generates the ResvErr message with the error code\n          indicating\
    \ the reduction in bandwidth.\n     #2 - it does not generate the ResvTear message.\n\
    \   - If that router does not support this extension, it generates both\n    \
    \ ResvErr and ResvTear messages according to [1].\n   In the case of the router\
    \ at the extreme downstream of a reservation\n   that receives the ResvErr message\
    \ with the reduction indication:\n   - If that router does support this extension:\n\
    \     #1 - it processes this error message and applies whatever local\n      \
    \    policy it is configured to do to determine how to reduce the\n          bandwidth\
    \ of this designated flow.\n   - If the router does not support this extension:\n\
    \     #1 - it processes the ResvErr message according to [1] and all\n       \
    \   extensions it is able to understand, but not this extension\n          from\
    \ this document.\n   Thus, this extension does not cause ill effects within RSVP\
    \ if one or\n   more routers support this extension, and one or more routers do\
    \ not\n   support this extension.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document does not lessen the overall security\
    \ of RSVP or of\n   reservation flows through an aggregate.\n   If this specification\
    \ is implemented poorly - which is never\n   intended, but is a consideration\
    \ - the following issues may arise:\n   1) If the ResvTear messages are transmitted\
    \ initially (at the same\n      time as the ResvErr messages indicating a reduction\
    \ in bandwidth\n      is necessary), all upstream routers will tear down the entire\n\
    \      reservation.  This will free up the total amount of bandwidth of\n    \
    \  this reservation inadvertently.  This may cause the re-\n      establishment\
    \ of an otherwise good reservation to fail.  This has\n      the most severe affects\
    \ on an aggregate that has many individual\n      flows that would have remained\
    \ operational.\n   2) Just as RSVP has the vulnerability of premature termination\
    \ of\n      valid reservations by rogue flows without authentication [12, 13],\n\
    \      this mechanism will have the same vulnerability.  Usage of RSVP\n     \
    \ authentication mechanisms is encouraged.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The IANA has assigned the following from RFC 4495\
    \ (i.e., this\n   document):\n   The following error code has been defined in\
    \ the ERROR_SPEC object\n   for partial reservation failure under \"Errcode =\
    \ 2 (Policy Control\n   Failure)\":\n      ErrSubCode = 102 (ERR_PARTIAL_PREEMPT)\n\
    \   The behavior of this ErrSubCode is defined in this document.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank Fred Baker for contributing\
    \ text and\n   guidance in this effort and to Roger Levesque and Francois Le\n\
    \   Faucheur for helpful comments.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Braden, R., Ed., Zhang, L., Berson, S.,\
    \ Herzog, S., and S.\n        Jamin, \"Resource ReSerVation Protocol (RSVP) --\
    \ Version 1\n        Functional Specification\", RFC 2205, September 1997.\n \
    \  [2]  Baker, F., Iturralde, C., Le Faucheur, F., and B. Davie,\n        \"Aggregation\
    \ of RSVP for IPv4 and IPv6 Reservations\", RFC 3175,\n        September 2001.\n\
    \   [3]  Herzog, S., \"Signaled Preemption Priority Policy Element\", RFC\n  \
    \      3181, October 2001.\n   [4]  Bradner, S., \"Key words for use in RFCs to\
    \ Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [5]\
    \  Herzog, S., \"RSVP Extensions for Policy Control\", RFC 2750,\n        January\
    \ 2000.\n   [6]  Berger, L., Gan, D., Swallow, G., Pan, P., Tommasi, F., and S.\n\
    \        Molendini, \"RSVP Refresh Overhead Reduction Extensions\", RFC\n    \
    \    2961, April 2001.\n   [7]  Wroclawski, J., \"The Use of RSVP with IETF Integrated\
    \ Services\",\n        RFC 2210, September 1997.\n   [8]  Berger, L. and T. O'Malley,\
    \ \"RSVP Extensions for IPSEC Data\n        Flows\", RFC 2207, September 1997.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [9]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n        Session Initiation Protocol\", RFC 3261, June 2002.\n   [10]\
    \ Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of\n        Explicit\
    \ Congestion Notification (ECN) to IP\", RFC 3168,\n        September 2001.\n\
    \   [11] Le Faucheur, F., Davie, B., Bose, P., Christou, C., and M.\n        Davenport,\
    \ \"Generic Aggregate RSVP Reservations\", Work in\n        Progress, October\
    \ 2005.\n   [12] Baker, F., Lindell, B., and M. Talwar, \"RSVP Cryptographic\n\
    \        Authentication\", RFC 2747, January 2000.\n   [13] Braden, R. and L.\
    \ Zhang, \"RSVP Cryptographic Authentication --\n        Updated Message Type\
    \ Value\", RFC 3097, April 2001.\n"
- title: Appendix A.  Walking through the Solution
  contents:
  - "Appendix A.  Walking through the Solution\n   Here is a concise explanation of\
    \ roughly how RSVP behaves with the\n   solution to the problems presented in\
    \ Sections 2 and 3 of this\n   document.  There is no normative text in this appendix.\n\
    \   Here is a duplicate of Figure 2 from section 3 of the document body\n   (to\
    \ bring it closer to the detailed description of the solution).\n        Aggregator\
    \ of X                              Deaggregator of X\n                |     \
    \                                     |\n                V                   \
    \                       V\n             +------+   +------+            +------+\
    \   +------+\n    Flow 1-->|      |   |      |            |      |   |      |-->Flow\
    \ 1\n    Flow 2-->|      |   |      |            |      |   |      |-->Flow 2\n\
    \    Flow 3-->|      |==>|      |            |      |==>|      |-->Flow 3\n  \
    \  Flow 4-->|      | ^ |      |            |      | ^ |      |-->Flow 4\n    Flow\
    \ 5-->|      | | |      |            |      | | |      |-->Flow 5\n    Flow 9-->|\
    \  R1  | | |  R2  |            |  R3  | | |  R4  |-->Flow 9\n             +------+\
    \ | +------+            +------+ | +------+\n                     |    ||    \
    \              ||    |\n           Aggregate X--->||    Aggregate X   ||<--Aggregate\
    \ X\n                          ||        |         ||\n               +--------------+\
    \     |      +--------------+\n               |       |Int 7 |     |      |Int\
    \ 1 |       |\n               |       +----- |     V      |------+       |\n \
    \              |  R10  |Int 8 |===========>|Int 2 |  R11  |\n               |\
    \       |      |:::::::::::>|      |       |\n               |       +----- |\
    \     ^      |------+       |\n               |       |Int 9 |     |      |Int\
    \ 3 |       |\n               +--------------+     |      +--------------+\n \
    \                         ..        |        ..\n           Aggregate Y--->..\
    \    Aggregate Y  ..<---Aggregate Y\n                     |    ..            \
    \     ..     |\n            +------+ | +------+            +------+ | +------+\n\
    \   Flow A-->|      | | |      |            |      | | |      |-->Flow A\n   Flow\
    \ B-->|      | V |      |            |      | V |      |-->Flow B\n   Flow C-->|\
    \      |::>|      |            |      |::>|      |-->Flow C\n   Flow D-->|   \
    \   |   |      |            |      |   |      |-->Flow D\n   Flow E-->|  R5  |\
    \   |  R6  |            |  R7  |   |  R8  |-->Flow E\n            +------+   +------+\
    \            +------+   +------+\n               ^                           \
    \              ^\n               |                                         |\n\
    \       Aggregator of Y                              Deaggregator of Y\n     \
    \      Duplicate of Figure 2.  Generic RSVP Aggregate Topology\n   Looking at\
    \ Figure 2, aggregate X (with five 80 kbps flows) traverses:\n         R1 ==>\
    \ R2 ==> R10 ==> R11 ==> R3 ==> R4\n   And aggregate Y (with five 80 kbps flows)\
    \ traverses:\n         R5 ::> R6 ::> R10 ::> R11 ::> R7 ::> R8\n   Both aggregates\
    \ are 400 kbps.  This totals 800 kbps at Int 7 in R10,\n   which is the maximum\
    \ bandwidth that RSVP has access to at this\n   interface.  Signaling messages\
    \ still traverse the interface without\n   problem.  Aggregate X is at a higher\
    \ relative priority than aggregate\n   Y.  Local policy in this example is for\
    \ higher relative priority\n   flows to preempt lower-priority flows during times\
    \ of congestion.\n   The following points describe the flow when aggregate A is\
    \ increased\n   to include Flow 9.\n   o  When Flow 9 (at 80 kbps) is added to\
    \ aggregate X, R1 will initiate\n      the PATH message towards the destination\
    \ endpoint of the flow.\n      This hop-by-hop message will take it through R2,\
    \ R10, R11, R3, and\n      R4, which is the aggregate X path (that was built per\
    \ [2] from the\n      aggregate's initial setup) to the endpoint node.\n   o \
    \ In response, R4 will generate the RESV (reservation) message\n      (defined\
    \ behavior per [1]).  This RESV from the deaggregator\n      indicates an increase\
    \ bandwidth sufficient to accommodate the\n      existing 5 flows (1, 2, 3, 4,\
    \ and 5) and the new flow (9), as\n      stated in [2].\n   o  As mentioned before,\
    \ in this example, Int 8 in R10 can only\n      accommodate 800 kbps, and aggregates\
    \ X and Y have each already\n      established 400 kbps flows comprised of five\
    \ 80 kbps individual\n      flows.  Therefore, R10 (the interface that detects\
    \ a congestion\n      event in this example) must make a decision about this new\n\
    \      congestion generating condition in regard to the RESV message\n      received\
    \ at Int 8.\n   o  Local policy in this scenario is to preempt lower-priority\n\
    \      reservations to place higher-priority reservations.  This would\n     \
    \ normally cause all of aggregate Y to be preempted just to\n      accommodate\
    \ aggregate X's request for an additional 80 kbps.\n   o  This document defines\
    \ how aggregate Y is not completely preempted,\n      but reduced in bandwidth\
    \ by 80 kbps.  This is contained in the\n      ResvErr message that R10 generates\
    \ (downstream) towards R11, R7,\n      and R8.  See section 5 for the details\
    \ of the error message.\n   o  Normal operation of RSVP is to have the router\
    \ that generates a\n      ResvErr message downstream to also generate a ResvTear\
    \ message\n      upstream (in the opposite direction, i.e., towards R5).  The\n\
    \      ResvTear message terminates an individual flow or aggregate flow.\n   \
    \   This document calls for that message not to be sent on any partial\n     \
    \ failure of reservation.\n   o  R8 is the deaggregator of aggregate Y.  The deaggregator\
    \ controls\n      all the parameters of an aggregate reservation.  This will be\
    \ the\n      node that reduces the necessary bandwidth of the aggregate as a\n\
    \      response to the reception of an ResvErr message (from R10)\n      indicating\
    \ such an action is called for.  In this example,\n      bandwidth reduction is\
    \ accomplished by preempting an individual\n      flow within the aggregate (perhaps\
    \ picking on Flow D for\n      individual preemption by generating a ResvErr downstream\
    \ on that\n      individual flow).\n   o  At the same time, a ResvTear message\
    \ is transmitted upstream on\n      that individual flow (Flow D) by R8.  This\
    \ will not affect the\n      aggregate directly, but is an indication to the routers\
    \ (and the\n      source end-system) which individual flow is to be preempted.\n\
    \   o  Once R8 preempts whichever individual flow (or 'bandwidth' at the\n   \
    \   aggregate ingress), it transmits a new RESV message for that\n      aggregate\
    \ (Y), not for a new aggregate.  This RESV from the\n      deaggregator indicates\
    \ a decrease in bandwidth sufficient to\n      accommodate the remaining 4 flows\
    \ (A, B, C, and E), which is now\n      320 kbps (in this example).\n   o  This\
    \ RESV message travels the entire path of the reservation,\n      resetting all\
    \ routers to this new aggregate bandwidth value.  This\n      should be what is\
    \ necessary to prevent a ResvTear message from\n      being generated by R10 towards\
    \ R6 and R5.\n   R5 will not know through this RESV message which individual flow\
    \ was\n   preempted.  If in this example, R8 was given more bandwidth to keep,\n\
    \   it might have transmitted a bandwidth reduction ResvErr indication\n   towards\
    \ the end-system of Flow D.  In that case, a voice signaling\n   protocol (such\
    \ as SIP) could have attempted a renegotiation of that\n   individual flow to\
    \ a reduced bandwidth (say, but changing the voice\n   codec from G.711 to G.\
    \ 729).  This could have saved Flow D from\n   preemption.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   James M. Polk\n   Cisco Systems\n   2200 East President\
    \ George Bush Turnpike\n   Richardson, Texas 75082 USA\n   EMail: jmpolk@cisco.com\n\
    \   Subha Dhesikan\n   Cisco Systems\n   170 W. Tasman Drive\n   San Jose, CA\
    \ 95134 USA\n   EMail: sdhesika@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
