- contents:
  - '                      Message Submission for Mail

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This memo splits message submission from message relay, allowing
    each\n   service to operate according to its own rules (for security, policy,\n
    \  etc.), and specifies what actions are to be taken by a submission\n   server.\n
    \  Message relay is unaffected, and continues to use SMTP over port 25.\n   When
    conforming to this document, message submission uses the\n   protocol specified
    here, normally over port 587.\n   This separation of function offers a number
    of benefits, including\n   the ability to apply specific security or policy requirements.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6409.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Document Information ............................................5\n      2.1.
    Definitions of Terms Used in This Memo .....................5\n      2.2. Conventions
    Used in This Document ..........................6\n   3. Message Submission ..............................................6\n
    \     3.1. Submission Identification ..................................6\n      3.2.
    Message Rejection and Bouncing .............................6\n      3.3. Authorized
    Submission ......................................7\n   4. Mandatory Actions ...............................................8\n
    \     4.1. General Submission Rejection Code ..........................8\n      4.2.
    Ensure All Domains Are Fully Qualified .....................8\n      4.3. Require
    Authentication .....................................8\n   5. Recommended Actions
    .............................................9\n      5.1. Enforce Address Syntax
    .....................................9\n      5.2. Log Errors .................................................9\n
    \     5.3. Apply Shorter Timeouts .....................................9\n   6.
    Optional Actions ...............................................10\n      6.1.
    Enforce Submission Rights .................................10\n      6.2. Enforce
    Permissions .......................................10\n      6.3. Check Message
    Data ........................................10\n      6.4. Support for the Postmaster
    Address ........................10\n      6.5. Adjust Character Encodings ................................11\n
    \  7. Interaction with SMTP Extensions ...............................12\n   8.
    Message Modifications ..........................................13\n      8.1.
    Add 'Sender' ..............................................14\n      8.2. Add
    'Date' ................................................14\n      8.3. Add 'Message-ID'
    ..........................................14\n      8.4. Transfer Encode ...........................................14\n
    \     8.5. Sign the Message ..........................................14\n      8.6.
    Encrypt the Message .......................................14\n      8.7. Resolve
    Aliases ...........................................15\n      8.8. Header Rewriting
    ..........................................15\n   9. Security Considerations ........................................15\n
    \  10. IANA Considerations ...........................................16\n   11.
    Acknowledgments ...............................................16\n   12. References
    ....................................................17\n      12.1. Normative
    References .....................................17\n      12.2. Informative References
    ...................................17\n   Appendix A. Major Changes from RFC 4409
    ...........................20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   SMTP [SMTP-MTA] was defined as a message *transfer* protocol,
    that\n   is, a means to route (if needed) and deliver finished (complete)\n   messages.\n
    \  Message Transfer Agents (MTAs) are not supposed to alter the message\n   text,
    except to add 'Received', 'Return-Path', and other header\n   fields as required
    by [SMTP-MTA].  However, SMTP is now also widely\n   used as a message *submission*
    protocol, that is, a means for Message\n   User Agents (MUAs) to introduce new
    messages into the MTA routing\n   network.  The process that accepts message submissions
    from MUAs is\n   termed a \"Message Submission Agent\" (MSA).\n   In order to
    permit unconstrained communications, SMTP is not often\n   authenticated during
    message relay.\n   Authentication and authorization of initial submissions have
    become\n   increasingly important, driven by changes in security requirements\n
    \  and rising expectations that submission servers take responsibility\n   for
    the message traffic they originate.\n   For example, due to the prevalence of
    machines that have worms,\n   viruses, or other malicious software that generate
    large amounts of\n   spam, many sites now prohibit outbound traffic on the standard
    SMTP\n   port (port 25), funneling all mail submissions through submission\n   servers.\n
    \  In addition to authentication and authorization issues, messages\n   being
    submitted are, in some cases, finished (complete) messages and,\n   in other cases,
    are unfinished (incomplete) in one or more aspects.\n   Unfinished messages may
    need to be completed to ensure they conform\n   to the Message Format specification
    [MESSAGE-FORMAT] and related\n   requirements.  For example, the message may lack
    a proper 'Date'\n   header field, and domains might not be fully qualified.  In
    some\n   cases, the MUA may be unable to generate finished messages (e.g., it\n
    \  might not know its time zone).  Even when submitted messages are\n   complete,
    local site policy may dictate that the message text be\n   examined or modified
    in some way, e.g., to conceal local name or\n   address spaces.  Such completions
    or modifications have been shown to\n   cause harm when performed by downstream
    MTAs -- that is, MTAs after\n   the first-hop submission MTA -- and are, in general,
    considered to be\n   outside the province of standardized MTA functionality.\n
    \  Separating messages into submissions and transfers allows developers\n   and
    network administrators to do the following more easily:\n   o  Implement security
    policies and guard against unauthorized mail\n      relaying or injection of unsolicited
    bulk mail.\n   o  Implement authenticated submission, including off-site submission\n
    \     by authorized users such as travelers.\n   o  Separate the relevant software
    code differences, thereby making\n      each code base more straightforward and
    allowing for different\n      programs for relay and submission.\n   o  Detect
    configuration problems with a site's mail clients.\n   o  Provide a basis for
    adding enhanced submission services.\n   This memo describes a low-cost, deterministic
    means for messages to\n   be identified as submissions, and it specifies what
    actions are to be\n   taken by a submission server.\n"
  title: 1.  Introduction
- contents:
  - '2.  Document Information

    '
  - contents:
    - "2.1.  Definitions of Terms Used in This Memo\n   Many of the concepts and terms
      used in this document are defined in\n   [SMTP-MTA]; familiarity with those
      documents is assumed here.\n   Fully Qualified\n   Containing or consisting
      of a domain that can be globally resolved\n   using the Domain Name Service,
      that is, not a local alias or partial\n   specification.\n   Message Submission
      Agent (MSA)\n   A process that conforms to this specification.  An MSA acts
      as a\n   submission server to accept messages from MUAs, and it either\n   delivers
      them or acts as an SMTP client to relay them to an MTA.\n   Message Transfer
      Agent (MTA)\n   A process that conforms to [SMTP-MTA].  An MTA acts as an SMTP
      server\n   to accept messages from an MSA or another MTA, and it either delivers\n
      \  them or acts as an SMTP client to relay them to another MTA.\n   Message
      User Agent (MUA)\n   A process that acts (often on behalf of a user and with
      a user\n   interface) to compose and submit new messages, and to process\n   delivered
      messages.\n   For delivered messages, the receiving MUA may obtain and process
      the\n   message according to local conventions or, in what is commonly\n   referred
      to as a split-MUA model, Post Office Protocol [POP3] or IMAP\n   [IMAP4] is
      used to access delivered messages, whereas the protocol\n   defined here (or
      SMTP) is used to submit messages.\n"
    title: 2.1.  Definitions of Terms Used in This Memo
  - contents:
    - "2.2.  Conventions Used in This Document\n   Examples use the 'example.net'
      domain.\n   The key words \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\",
      and \"MAY\"\n   in this document are to be interpreted as defined in [KEYWORDS].\n"
    title: 2.2.  Conventions Used in This Document
  title: 2.  Document Information
- contents:
  - '3.  Message Submission

    '
  - contents:
    - "3.1.  Submission Identification\n   Port 587 is reserved for email message
      submission as specified in\n   this document.  Messages received on this port
      are defined to be\n   submissions.  The protocol used is ESMTP [SMTP-MTA], with
      additional\n   restrictions or allowances as specified here.\n   Although most
      email clients and servers can be configured to use port\n   587 instead of 25,
      there are cases where this is not possible or\n   convenient.  A site MAY choose
      to use port 25 for message submission\n   by designating some hosts to be MSAs
      and others to be MTAs.\n"
    title: 3.1.  Submission Identification
  - contents:
    - "3.2.  Message Rejection and Bouncing\n   MTAs and MSAs MAY implement message
      rejection rules that rely, in\n   part, on whether the message is a submission
      or a relay.\n   For example, some sites might configure their MTAs to reject
      all RCPT\n   commands for messages that do not reference local users, and they\n
      \  might configure their MSA to reject all message submissions that do\n   not
      come from authorized users, with authorization based on either\n   the authenticated
      identity or the submitting endpoint being within a\n   protected IP environment.\n
      \  NOTE: It is better to reject a message than to risk sending one that\n   is
      damaged.  This is especially true for problems that are\n   correctable by the
      MUA, for example, an invalid 'From' field.\n   If an MSA is not able to determine
      a return path to the submitting\n   user, from a valid MAIL FROM, a valid source
      IP address, or based on\n   authenticated identity, then the MSA SHOULD immediately
      reject the\n   message.  A message can be immediately rejected by returning
      a 550\n   code to the MAIL command.\n   Note that a null return path, that is,
      MAIL FROM:<>, is permitted and\n   MUST NOT, in itself, be cause for rejecting
      a message.  (MUAs need to\n   generate null return-path messages for a variety
      of reasons,\n   including disposition notifications.)\n   Except in the case
      where the MSA is unable to determine a valid\n   return path for the message
      being submitted, text in this\n   specification that instructs an MSA to issue
      a rejection code MAY be\n   complied with by accepting the message and subsequently
      generating a\n   bounce message.  (That is, if the MSA is going to reject a
      message\n   for any reason except being unable to determine a return path, it
      can\n   optionally do an immediate rejection or accept the message and then\n
      \  mail a bounce.)\n   NOTE: In the normal case of message submission, immediately
      rejecting\n   the message is preferred, as it gives the user and MUA direct\n
      \  feedback.  To properly handle delayed bounces, the client MUA needs\n   to
      maintain a queue of messages it has submitted and match bounces to\n   them.
      \ Note that many contemporary MUAs do not have this capability.\n"
    title: 3.2.  Message Rejection and Bouncing
  - contents:
    - "3.3.  Authorized Submission\n   Numerous methods have been used to ensure that
      only authorized users\n   are able to submit messages.  These methods include
      authenticated\n   SMTP, IP address restrictions, secure IP and other tunnels,
      and prior\n   POP authentication.\n   Authenticated SMTP [SMTP-AUTH] has seen
      widespread deployment.  It\n   allows the MSA to determine an authorization
      identity for the message\n   submission, one that is not tied to other protocols.\n
      \  IP address restrictions are very widely implemented, but they do not\n   allow
      for travelers and similar situations, and they can be easily\n   spoofed unless
      all transport paths between the MUA and MSA are\n   trustworthy.\n   Secure
      IP [IPSEC], and other encrypted and authenticated tunneling\n   techniques,
      can also be used and provide additional benefits of\n   protection against eavesdropping
      and traffic analysis.\n   Requiring a POP [POP3] authentication (from the same
      IP address)\n   within some amount of time (e.g., 20 minutes) prior to the start
      of a\n   message submission session has also been used, but this does impose\n
      \  restrictions on clients as well as servers, which may cause\n   difficulties.
      \ Specifically, the client must do a POP authentication\n   before an SMTP submission
      session, and not all clients are capable\n   and configured for this.  Also,
      the MSA must coordinate with the POP\n   server, which may be difficult.  There
      is also a window during which\n   an unauthorized user can submit messages and
      appear to be a\n   previously authorized user.  Since it is dependent on the
      MUA's IP\n   addresses, this technique is substantially as subject to IP address\n
      \  spoofing as validation based on known IP addresses alone (see above).\n"
    title: 3.3.  Authorized Submission
  title: 3.  Message Submission
- contents:
  - "4.  Mandatory Actions\n   An MSA MUST do all of the following:\n"
  - contents:
    - "4.1.  General Submission Rejection Code\n   Unless covered by a more precise
      response code, response code 554 is\n   to be used to reject a MAIL, RCPT, or
      DATA command that contains\n   something improper.\n"
    title: 4.1.  General Submission Rejection Code
  - contents:
    - "4.2.  Ensure All Domains Are Fully Qualified\n   The MSA MUST ensure that all
      domains in the SMTP envelope are fully\n   qualified.\n   If the MSA examines
      or alters the message text in any way, except to\n   add trace header fields
      [SMTP-MTA], it MUST ensure that all domains\n   in address header fields are
      fully qualified.\n   Reply code 554 is to be used to reject a MAIL, RCPT, or
      DATA command\n   that contains improper domain references.\n   A frequent local
      convention is to accept single-level domains (e.g.,\n   'sales') and then to
      expand the reference by adding the remaining\n   portion of the domain name
      (e.g., to 'sales.example.net').  Local\n   conventions that permit single-level
      domains SHOULD reject, rather\n   than expand, incomplete multi-level domains
      (e.g., 'squeaky.sales'),\n   since such expansion is particularly risky.\n"
    title: 4.2.  Ensure All Domains Are Fully Qualified
  - contents:
    - "4.3.  Require Authentication\n   The MSA MUST, by default, issue an error response
      to the MAIL command\n   if the session has not been authenticated using [SMTP-AUTH],
      unless\n   it has already independently established authentication or\n   authorization
      (such as being within a protected subnetwork).\n   Section 3.3 discusses authentication
      mechanisms.\n   Reply code 530 [SMTP-AUTH] is used for this purpose.\n"
    title: 4.3.  Require Authentication
  title: 4.  Mandatory Actions
- contents:
  - "5.  Recommended Actions\n   The MSA SHOULD do all of the following.\n"
  - contents:
    - "5.1.  Enforce Address Syntax\n   An MSA SHOULD reject messages with illegal
      syntax in a sender or\n   recipient SMTP envelope address.\n   If the MSA examines
      or alters the message text in any way, except to\n   add trace header fields,
      it SHOULD reject messages with illegal\n   address syntax in address header
      fields.\n   Reply code 501 is to be used to reject a MAIL or RCPT command that\n
      \  contains a detectably improper address.\n   When addresses are resolved after
      submission of the message body,\n   reply code 554 (with a suitable enhanced
      status code from\n   [SMTP-CODES]) is used after end-of-data, if the message
      contains\n   invalid addresses in the header.\n"
    title: 5.1.  Enforce Address Syntax
  - contents:
    - "5.2.  Log Errors\n   The MSA SHOULD log message errors, especially apparent\n
      \  misconfigurations of client software.\n   It can be very helpful to notify
      the administrator when problems are\n   detected with local mail clients.  This
      is another advantage of\n   distinguishing submission from relay: system administrators
      might be\n   interested in local configuration problems, but not in client\n
      \  problems at other sites.\n   Note that it is important to impose limits on
      such logging to prevent\n   certain forms of denial-of-service (DoS) attacks.\n"
    title: 5.2.  Log Errors
  - contents:
    - "5.3.  Apply Shorter Timeouts\n   The timeouts specified in Section 4.5.3.2
      of RFC 5321 [SMTP-MTA] are\n   designed to deal with the many types of situations
      that can be\n   encountered on the public Internet.  The relationship among
      clients\n   and servers corresponding to this specification is typically much\n
      \  closer and more predictable.  Submission clients behave differently\n   from
      relay client in some areas, especially tolerance for timeouts.\n   In practice,
      message submission clients tend to have short timeouts\n   (perhaps 2-5 minutes
      for a reply to any command).  Submission servers\n   SHOULD respond to any command
      (even DATA) in fewer than 2 minutes.\n   When the submission server has a close
      administrative and/or network\n   relationship with the submission client(s)
      -- e.g., with a webmail\n   interface calling on a tightly bound submission
      server -- mutual\n   agreement on much shorter timeouts MAY be appropriate.\n"
    title: 5.3.  Apply Shorter Timeouts
  title: 5.  Recommended Actions
- contents:
  - "6.  Optional Actions\n   The MSA MAY do any of the following.\n"
  - contents:
    - "6.1.  Enforce Submission Rights\n   The MSA MAY issue an error response to
      a MAIL command if the address\n   in MAIL FROM appears to have insufficient
      submission rights or is not\n   authorized with the authentication used (if
      the session has been\n   authenticated).\n   Reply code 550 with an appropriate
      enhanced status code per\n   [SMTP-CODES], such as 5.7.1, is used for this purpose.\n"
    title: 6.1.  Enforce Submission Rights
  - contents:
    - "6.2.  Enforce Permissions\n   The MSA MAY issue an error response to a RCPT
      command if inconsistent\n   with the permissions given to the user (if the session
      has been\n   authenticated).\n   Reply code 550 with an appropriate enhanced
      status code per\n   [SMTP-CODES], such as 5.7.1, is used for this purpose.\n"
    title: 6.2.  Enforce Permissions
  - contents:
    - "6.3.  Check Message Data\n   The MSA MAY issue an error response to the DATA
      command or send a\n   failure result after end-of-data if the submitted message
      is\n   syntactically invalid, seems inconsistent with permissions given to\n
      \  the user (if known), or violates site policy in some way.\n   Reply code
      554 is used for syntactic problems in the data.  Reply\n   code 501 is used
      if the command itself is not syntactically valid.\n   Reply code 550 with an
      appropriate enhanced status code per\n   [SMTP-CODES] (such as 5.7.1) is used
      to reject based on the\n   submitting user.  Reply code 550 with an appropriate
      enhanced status\n   code (such as 5.7.0) is used if the message violates site
      policy.\n"
    title: 6.3.  Check Message Data
  - contents:
    - "6.4.  Support for the Postmaster Address\n   If appropriate under local conditions
      and to facilitate conformance\n   with the \"postmaster\" requirements of [SMTP-MTA],
      the MSA MAY permit\n   a reduced degree of authentication for mail addressed
      to the\n   \"postmaster\" (or one of its alternate spelling forms, see\n   [SMTP-MTA]),
      in one or more domains, as compared to requirements\n   enforced for other addresses.
      \ Among other benefits, this provides an\n   address of last resort that can
      be used by authorized users to report\n   problems that otherwise prevent them
      from submitting mail.\n"
    title: 6.4.  Support for the Postmaster Address
  - contents:
    - "6.5.  Adjust Character Encodings\n   Subject to limits imposed by other protocols
      and specifications, the\n   MSA MAY convert among character sets or string encodings
      to improve\n   message usefulness, likelihood of delivery, or conformance with
      other\n   specifications or recommendations.  Such conversions MAY include,\n
      \  when necessary, replacement of addresses whose encoding does not\n   conform
      to RFC 5321 with ones that do, using information available\n   out of band.\n"
    title: 6.5.  Adjust Character Encodings
  title: 6.  Optional Actions
- contents:
  - "7.  Interaction with SMTP Extensions\n   The following table lists Standards
    Track and Experimental SMTP\n   extensions whose documents do not explicitly specify
    their\n   applicability to this protocol.  Listed are the EHLO keyword, name,\n
    \  an indication as to the use of the extension on the submit port, and\n   a
    reference.\n"
  - '+--------------------+----------------------+--------+-----------------+

    '
  - '| Keyword            | Name                 |Sub-    | Reference       |

    '
  - '|                    |                      |mission |                 |

    '
  - '+--------------------+----------------------+--------+-----------------+

    '
  - '|PIPELINING          |Pipelining            |SHOULD  |[PIPELINING]     |

    '
  - '|ENHANCEDSTATUSCODES |Enhanced Status Codes |SHOULD  |[CODES-EXTENSION]|

    '
  - '|ETRN                |Extended Turn         |MUST NOT|[ETRN]           |

    '
  - '|   ...              |Extended Codes        |SHOULD  |[SMTP-CODES]     |

    '
  - '|DSN                 |Delivery Status       |SHOULD  |[DSN]            |

    '
  - '|                    |  Notification        |        |                 |

    '
  - '|SIZE                |Message size          |MAY     |[SIZE]           |

    '
  - '|   ...              |521 reply code        |MUST NOT|[REPLY-521]      |

    '
  - '|CHECKPOINT          |Checkpoint/Restart    |MAY     |[CHECKPOINT]     |

    '
  - '|BINARYMIME          |Binary MIME           |MAY     |[CHUNKING]       |

    '
  - '|CHUNKING            |Chunking              |MAY     |[CHUNKING]       |

    '
  - '|8BITMIME            |Use 8-bit data        |SHOULD  |[RFC6152]        |

    '
  - '|AUTH                |Authentication        |MUST    |[SMTP-AUTH]      |

    '
  - '|STARTTLS            |Start TLS             |MAY     |[START-TLS]      |

    '
  - '|NO-SOLICITING       |Notification of       |MAY     |[RFC3865]        |

    '
  - '|                    |  no soliciting       |        |                 |

    '
  - '|MTRK                |Message Tracking      |MAY     |[MSG-TRACK]      |

    '
  - '|ATRN                |On-Demand Relay       |MUST NOT|[RFC2645]        |

    '
  - '|DELIVERBY           |Deliver By            |MAY     |[RFC2852]        |

    '
  - '|CONPERM             |Content Conversion    |MAY     |[RFC4141]        |

    '
  - '|                    |  Permission          |        |                 |

    '
  - '|CONNEG              |Content Conversion    |MAY     |[RFC4141]        |

    '
  - '|                    |  Negotiation         |        |                 |

    '
  - "+--------------------+----------------------+--------+-----------------+\n                             Table
    1\n   Future SMTP extensions SHOULD explicitly specify if they are valid on\n
    \  the Submission port.\n   Some SMTP extensions are especially useful for message
    submission:\n   Extended Status Codes [SMTP-CODES] SHOULD be supported and used\n
    \  according to [CODES-EXTENSION].  This permits the MSA to notify the\n   client
    of specific configuration or other problems in more detail\n   than the response
    codes listed in this memo.  Because some rejections\n   are related to a site's
    security policy, care should be used not to\n   expose more detail to unauthenticated
    senders than is needed.\n   [PIPELINING] SHOULD be supported by the MSA.\n   [SMTP-AUTH]
    allows the MSA to validate the authority and determine\n   the identity of the
    submitting user and MUST be supported by the MSA.\n   [START-TLS] is the most
    widely used mechanism, at the time this\n   document was written, that allows
    the MUA and MSA to protect message\n   submission integrity and privacy.\n   Any
    references to the DATA command in this memo also refer to any\n   substitutes
    for DATA, such as the BDAT command used with [CHUNKING].\n"
  title: 7.  Interaction with SMTP Extensions
- contents:
  - "8.  Message Modifications\n   Sites MAY modify submissions to ensure compliance
    with standards and\n   site policy.  This section describes a number of such modifications\n
    \  that are often considered useful.\n   NOTE: As a matter of guidance for local
    decisions to implement\n   message modification, a paramount rule is to limit
    such actions to\n   remedies for specific problems that have clear solutions.
    \ This is\n   especially true with address elements.  For example, indiscriminately\n
    \  appending a domain to an address or element that lacks one typically\n   results
    in more broken addresses.  An unqualified address must be\n   verified to be a
    valid local part in the domain before the domain can\n   be safely added.\n   Any
    message forwarded or delivered by the MSA MUST conform to the\n   requirements
    of [SMTP-MTA] and [MESSAGE-FORMAT] or the requirements\n   permitted by extensions
    that are supported by the MSA and accepted by\n   the next-hop server.\n   Message
    modification can affect the validity of an existing message\n   signature, such
    as by DomainKeys Identified Mail (DKIM) [DKIM],\n   Pretty Good Privacy (PGP)
    [RFC4880], or Secure MIME (S/MIME)\n   [RFC5751], and can render the signature
    invalid.  This, in turn, can\n   affect message handling by later receivers, such
    as filtering engines\n   that consider the presence or absence of a valid signature.\n"
  - contents:
    - "8.1.  Add 'Sender'\n   The MSA MAY add or replace the 'Sender' field, if the
      identity of the\n   sender is known and this is not given in the 'From' field.\n
      \  The MSA MUST ensure that any address it places in a 'Sender' field\n   is,
      in fact, a valid mail address.\n"
    title: 8.1.  Add 'Sender'
  - contents:
    - "8.2.  Add 'Date'\n   The MSA MAY add a 'Date' field to the submitted message,
      if it lacks\n   it, or correct the 'Date' field if it does not conform to\n
      \  [MESSAGE-FORMAT] syntax.\n"
    title: 8.2.  Add 'Date'
  - contents:
    - "8.3.  Add 'Message-ID'\n   The MSA SHOULD add or replace the 'Message-ID' field,
      if it lacks it,\n   or it is not valid syntax (as defined by [MESSAGE-FORMAT]).
      \ Note\n   that a number of clients still do not generate 'Message-ID' fields.\n"
    title: 8.3.  Add 'Message-ID'
  - contents:
    - "8.4.  Transfer Encode\n   The MSA MAY apply transfer encoding to the message
      according to MIME\n   conventions, if needed and not harmful to the MIME type.\n"
    title: 8.4.  Transfer Encode
  - contents:
    - "8.5.  Sign the Message\n   The MSA MAY (digitally) sign or otherwise add authentication\n
      \  information to the message.\n"
    title: 8.5.  Sign the Message
  - contents:
    - "8.6.  Encrypt the Message\n   The MSA MAY encrypt the message for transport
      to reflect\n   organizational policies.\n   NOTE: To be useful, the addition
      of a signature and/or encryption by\n   the MSA generally implies that the connection
      between the MUA and MSA\n   must, itself, be secured in some other way, for
      example, by operating\n   inside of a secure environment, by securing the submission
      connection\n   at the transport layer, or by using an [SMTP-AUTH] mechanism
      that\n   provides for session integrity.\n"
    title: 8.6.  Encrypt the Message
  - contents:
    - "8.7.  Resolve Aliases\n   The MSA MAY resolve and rewrite aliases (e.g., Canonical
      Name (CNAME)\n   records) for domain names, in the SMTP envelope and/or in address\n
      \  fields of the header, subject to local policy.\n   NOTE: SMTP [SMTP-MTA]
      prohibits the use of domain name aliases in\n   addresses and the session-opening
      announcement.  As with other SMTP\n   requirements, RFC 5321 effectively prohibits
      an MSA from forwarding\n   such messages into the public Internet.  Nonetheless,
      unconditionally\n   resolving aliases could be harmful.  For example, if www.example.net\n
      \  and ftp.example.net are both aliases for mail.example.net, rewriting\n   them
      could lose useful information.\n"
    title: 8.7.  Resolve Aliases
  - contents:
    - "8.8.  Header Rewriting\n   The MSA MAY rewrite local parts and/or domains in
      the SMTP envelope\n   and, optionally, in address fields of the header, according
      to local\n   policy.  For example, a site may prefer to rewrite 'JRU' as\n   'J.Random.User'
      in order to hide login names and/or to rewrite\n   'squeaky.sales.example.net'
      as 'zyx.example.net' to hide machine\n   names and make it easier to move users.\n
      \  However, only addresses, local-parts, or domains that match specific\n   local
      MSA configuration settings should be altered.  It would be very\n   dangerous
      for the MSA to apply data-independent rewriting rules, such\n   as always deleting
      the first element of a domain name.  So, for\n   example, a rule that strips
      the leftmost element of the domain, if\n   the complete domain matches '*.foo.example.net',
      would be acceptable.\n   The MSA MUST NOT rewrite a forward-pointing (destination)
      address in\n   a way that violates the constraints of [SMTP-MTA] on modifications
      of\n   local-parts.  Changes to addressing and encoding, carried out in\n   conjunction
      with the action of Section 6.5, do not violate this\n   principle if the MSA
      has sufficient information available to\n   successfully and accurately apply
      the substitution.\n"
    title: 8.8.  Header Rewriting
  title: 8.  Message Modifications
- contents:
  - "9.  Security Considerations\n   Separation of submission and relay of messages
    allows a site to\n   implement different policies for the two types of services,
    including\n   requiring the use of additional security mechanisms for one or both.\n
    \  It can do this in a way that is simpler, both technically and\n   administratively.
    \ This increases the likelihood that policies will\n   be applied correctly.\n
    \  Separation also can aid in tracking and preventing unsolicited bulk\n   email.\n
    \  For example, a site could configure its mail servers such that the\n   MSA
    requires authentication before accepting a message, and the MTA\n   rejects all
    RCPT commands for non-local users.  This can be an\n   important element in a
    site's total email security policy.\n   If a site fails to require any form of
    authorization for message\n   submissions (see Section 3.3 for discussion), it
    is allowing open use\n   of its resources and name; unsolicited bulk email can
    be injected\n   using its facilities.\n   Section 3 includes further discussion
    of issues with some\n   authentication methods.\n   Section 5.2 includes a cautionary
    note that unlimited logging can\n   enable certain forms of denial-of-service
    attacks.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   The entries in Table 1 have been corrected (reference
    for NO-\n   SOLICITING) and extended (ATRN, DELIVERBY, CONPERM, and CONNEG).  The\n
    \  \"SMTP Service Extensions\" registry has been updated to reflect the\n   changed
    and new entries.  Entries in the registry that do not appear\n   in the table
    above are correct and should not be altered.\n   The entry in the \"SMTP Service
    Extensions\" registry for RFC 4409 has\n   been updated to reference this document.
    \ The original reference for\n   Submit (RFC 2476), which should have been corrected
    earlier, has also\n   been updated to point to this document.\n   The entry in
    the \"Service Name and Transport Protocol Port Number\n   Registry\" for port
    587 has been updated to point to this document.\n"
  title: 10.  IANA Considerations
- contents:
  - "11.  Acknowledgments\n   The preparation and development of the current version
    of this\n   specification was stimulated by discussions in the IETF YAM and EAI\n
    \  Working Groups.  Dave Crocker, Subramanian Moonesamy, Barry Leiba,\n   John
    Levine, and others provided text that appeared in this document\n   or versions
    leading up to it.\n   Nathaniel Borenstein and Barry Leiba were instrumental in
    the\n   development of RFC 4409, the update to RFC 2476.\n   The original memo
    (RFC 2476) was developed, in part, based on\n   comments and discussions that
    took place on and off the IETF-Submit\n   mailing list.  The help of those who
    took the time to review that\n   document and make suggestions is appreciated,
    especially that of Dave\n   Crocker, Ned Freed, Keith Moore, John Myers, and Chris
    Newman.\n   Special thanks to Harald Alvestrand, who got this effort started.\n"
  title: 11.  Acknowledgments
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [KEYWORDS]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [SMTP-AUTH]  Siemborski, R. and A. Melnikov, \"SMTP Service
      Extension\n                for Authentication\", RFC 4954, July 2007.\n   [SMTP-MTA]
      \  Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n                October
      2008.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [CHECKPOINT] Crocker, D. and N. Freed, \"SMTP
      Service Extension for\n                Checkpoint/Restart\", RFC 1845, September
      1995.\n   [CHUNKING]   Vaudreuil, G., \"SMTP Service Extensions for Transmission\n
      \               of Large and Binary MIME Messages\", RFC 3030,\n                December
      2000.\n   [CODES-EXTENSION]\n                Freed, N., \"SMTP Service Extension
      for Returning\n                Enhanced Error Codes\", RFC 2034, October 1996.\n
      \  [DKIM]       Crocker, D., Hansen, T., and M. Kucherawy, \"DomainKeys\n                Identified
      Mail (DKIM) Signatures\", RFC 6376,\n                September 2011.\n   [DSN]
      \       Moore, K., \"Simple Mail Transfer Protocol (SMTP) Service\n                Extension
      for Delivery Status Notifications (DSNs)\",\n                RFC 3461, January
      2003.\n   [ETRN]       De Winter, J., \"SMTP Service Extension for Remote\n
      \               Message Queue Starting\", RFC 1985, August 1996.\n   [IMAP4]
      \     Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n                4rev1\",
      RFC 3501, March 2003.\n   [IPSEC]      Kent, S. and K. Seo, \"Security Architecture
      for the\n                Internet Protocol\", RFC 4301, December 2005.\n   [MESSAGE-FORMAT]\n
      \               Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n                October
      2008.\n   [MSG-TRACK]  Allman, E. and T. Hansen, \"SMTP Service Extension for\n
      \               Message Tracking\", RFC 3885, September 2004.\n   [PIPELINING]
      Freed, N., \"SMTP Service Extension for Command\n                Pipelining\",
      STD 60, RFC 2920, September 2000.\n   [POP3]       Myers, J. and M. Rose, \"Post
      Office Protocol - Version\n                3\", STD 53, RFC 1939, May 1996.\n
      \  [REPLY-521]  Durand, A. and F. Dupont, \"SMTP 521 Reply Code\",\n                RFC
      1846, September 1995.\n   [RFC2645]    Gellens, R., \"ON-DEMAND MAIL RELAY (ODMR)
      SMTP with\n                Dynamic IP Addresses\", RFC 2645, August 1999.\n
      \  [RFC2852]    Newman, D., \"Deliver By SMTP Service Extension\",\n                RFC
      2852, June 2000.\n   [RFC3865]    Malamud, C., \"A No Soliciting Simple Mail
      Transfer\n                Protocol (SMTP) Service Extension\", RFC 3865,\n                September
      2004.\n   [RFC4141]    Toyoda, K. and D. Crocker, \"SMTP and MIME Extensions
      for\n                Content Conversion\", RFC 4141, November 2005.\n   [RFC4880]
      \   Callas, J., Donnerhacke, L., Finney, H., Shaw, D., and\n                R.
      \ Thayer, \"OpenPGP Message Format\", RFC 4880,\n                November 2007.\n
      \  [RFC5751]    Ramsdell, B. and S. Turner, \"Secure/Multipurpose\n                Internet
      Mail Extensions (S/MIME) Version 3.2 Message\n                Specification\",
      RFC 5751, January 2010.\n   [RFC6152]    Klensin, J., Freed, N., Rose, M., and
      D. Crocker, \"SMTP\n                Service Extension for 8-bit MIME Transport\",
      STD 71,\n                RFC 6152, March 2011.\n   [SIZE]       Klensin, J.,
      Freed, N., and K. Moore, \"SMTP Service\n                Extension for Message
      Size Declaration\", STD 10,\n                RFC 1870, November 1995.\n   [SMTP-CODES]
      Vaudreuil, G., \"Enhanced Mail System Status Codes\",\n                RFC 3463,
      January 2003.\n   [START-TLS]  Hoffman, P., \"SMTP Service Extension for Secure
      SMTP\n                over Transport Layer Security\", RFC 3207, February 2002.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Appendix A.  Major Changes from RFC 4409\n   The protocol specified by this document
    is not substantively\n   different from that of RFC 4409.  However, the present
    specification\n   contains several clarifications and updates to reflect changes
    and\n   revisions to other documents subsequent to the publication of RFC\n   4409.
    \ The following specific changes may be of interest to some\n   readers.\n   o
    \ Updated several references to reflect more recent versions of the\n      various
    specifications.  As part of this, reclassified RFC 4954 to\n      a normative
    reference (SMTP AUTH is a MUST for RFC 4409 and this\n      specification).\n
    \  o  Updated the text in Section 7 to reflect the existence and partial\n      population
    of the registry and the included table (Table 1) to\n      correct one entry and
    add others.  See Section 10 for more\n      information.\n   o  Added new text
    (Section 5.3) to clarify that Submission Servers\n      should respond quickly.\n
    \  o  Added text to make it explicit that character encoding changes are\n      permitted.\n
    \  o  Added text to make it clear that modifications to signed messages\n      may
    cause problems and that they should be carefully considered.\n"
  title: Appendix A.  Major Changes from RFC 4409
- contents:
  - "Authors' Addresses\n   Randall Gellens\n   QUALCOMM Incorporated\n   5775 Morehouse
    Drive\n   San Diego, CA  92121-2779\n   USA\n   EMail: rg+ietf@qualcomm.com\n
    \  John C Klensin\n   1770 Massachusetts Ave, #322\n   Cambridge, MA  02140\n
    \  USA\n   Phone: +1 617 491 5735\n   EMail: john-ietf@jck.com\n"
  title: Authors' Addresses
