- title: __initial_text__
  contents:
  - '                       DNS Server MIB Extensions

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it describes a set of extensions which instrument DNS\n   name\
    \ server functions.  This memo was produced by the DNS working\n   group.\n  \
    \ With the adoption of the Internet-standard Network Management\n   Framework\
    \ [4,5,6,7], and with a large number of vendor\n   implementations of these standards\
    \ in commercially available\n   products, it became possible to provide a higher\
    \ level of effective\n   network management in TCP/IP-based internets than was\
    \ previously\n   available.  With the growth in the use of these standards, it\
    \ has\n   become possible to consider the management of other elements of the\n\
    \   infrastructure beyond the basic TCP/IP protocols.  A key element of\n   the\
    \ TCP/IP infrastructure is the DNS.\n   Up to this point there has been no mechanism\
    \ to integrate the\n   management of the DNS with SNMP-based managers.  This memo\
    \ provides\n   the mechanisms by which IP-based management stations can effectively\n\
    \   manage DNS name server software in an integrated fashion.\n   We have defined\
    \ DNS MIB objects to be used in conjunction with the\n   Internet MIB to allow\
    \ access to and control of DNS name server\n   software via SNMP by the Internet\
    \ community.\n"
- title: 2.  The SNMPv2 Network Management Framework
  contents:
  - "2.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework consists of four major\n   components.  They are:\n      o  RFC 1442\
    \ which defines the SMI, the mechanisms used for\n         describing and naming\
    \ objects for the purpose of management.\n      o  STD 17, RFC 1213 defines MIB-II,\
    \ the core set of managed objects\n         for the Internet suite of protocols.\n\
    \      o  RFC 1445 which defines the administrative and other architectural\n\
    \         aspects of the framework.\n      o  RFC 1448 which defines the protocol\
    \ used for network access to\n         managed objects.\n      The Framework permits\
    \ new objects to be defined for the purpose of\n      experimentation and evaluation.\n"
- title: 2.1.  Object Definitions
  contents:
  - "2.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object object type is named\n   by\
    \ an OBJECT IDENTIFIER, an administratively assigned name.  The\n   object type\
    \ together with an object instance serves to uniquely\n   identify a specific\
    \ instantiation of the object.  For human\n   convenience, we often use a textual\
    \ string, termed the descriptor, to\n   refer to the object type.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   In theory, the DNS world is pretty simple.  There are two kinds\
    \ of\n   entities: resolvers and name servers.  Resolvers ask questions.  Name\n\
    \   servers answer them.  The real world, however, is not so simple.\n   Implementors\
    \ have made widely differing choices about how to divide\n   DNS functions between\
    \ resolvers and servers.  They have also\n   constructed various sorts of exotic\
    \ hybrids.  The most difficult task\n   in defining this MIB was to accommodate\
    \ this wide range of entities\n   without having to come up with a separate MIB\
    \ for each.\n   We divided up the various DNS functions into two, non-overlapping\n\
    \   classes, called \"resolver functions\" and \"name server functions.\"  A\n\
    \   DNS entity that performs what we define as resolver functions\n   contains\
    \ a resolver, and therefore must implement the MIB groups\n   required of all\
    \ resolvers which are defined in a separate MIB Module.\n   A DNS entity which\
    \ implements name server functions is considered to\n   be a name server, and\
    \ must implement the MIB groups required for name\n   servers in this module.\
    \  If the same piece of software performs both\n   resolver and server functions,\
    \ we imagine that it contains both a\n   resolver and a server and would thus\
    \ implement both the DNS Server\n   and DNS Resolver MIBs.\n"
- title: 3.1.  Resolvers
  contents:
  - "3.1.  Resolvers\n   In our model, a resolver is a program (or piece thereof)\
    \ which\n   obtains resource records from servers.  Normally it does so at the\n\
    \   behest of an application, but may also do so as part of its own\n   operation.\
    \  A resolver sends DNS protocol queries and receives DNS\n   protocol replies.\
    \  A resolver neither receives queries nor sends\n   replies.  A full service\
    \ resolver is one that knows how to resolve\n   queries: it obtains the needed\
    \ resource records by contacting a\n   server authoritative for the records desired.\
    \  A stub resolver does\n   not know how to resolve queries: it sends all queries\
    \ to a local name\n   server, setting the \"recursion desired\" flag to indicate\
    \ that it\n   hopes that the name server will be willing to resolve the query.\
    \  A\n   resolver may (optionally) have a cache for remembering previously\n \
    \  acquired resource records.  It may also have a negative cache for\n   remembering\
    \ names or data that have been determined not to exist.\n"
- title: 3.2.  Name Servers
  contents:
  - "3.2.  Name Servers\n   A name server is a program (or piece thereof) that provides\
    \ resource\n   records to resolvers.  All references in this document to \"a name\n\
    \   server\" imply \"the name server's role\"; in some cases the name\n   server's\
    \ role and the resolver's role might be combined into a single\n   program.  A\
    \ name server receives DNS protocol queries and sends DNS\n   protocol replies.\
    \  A name server neither sends queries nor receives\n   replies.  As a consequence,\
    \ name servers do not have caches.\n   Normally, a name server would expect to\
    \ receive only those queries to\n   which it could respond with authoritative\
    \ information.  However, if a\n   name server receives a query that it cannot\
    \ respond to with purely\n   authoritative information, it may choose to try to\
    \ obtain the\n   necessary additional information from a resolver which may or\
    \ may not\n   be a separate process.\n"
- title: 3.3.  Selected Objects
  contents:
  - "3.3.  Selected Objects\n   Many of the objects included in this memo have been\
    \ created from\n   information contained in the DNS specifications [1,2], as amended\
    \ and\n   clarified by subsequent host requirements documents [3].  Other\n  \
    \ objects have been created based on experience with existing DNS\n   management\
    \ tools, expected operational needs, the statistics\n   generated by existing\
    \ DNS implementations, and the configuration\n   files used by existing DNS implementations.\
    \  These objects have been\n   ordered into groups as follows:\n      o  Server\
    \ Configuration Group\n      o  Server Counter Group\n      o  Server Optional\
    \ Counter Group\n      o  Server Zone Group\n   This information has been converted\
    \ into a standard form using the\n   SNMPv2 SMI defined in [9].  For the most\
    \ part, the descriptions are\n   influenced by the DNS related RFCs noted above.\
    \  For example, the\n   descriptions for counters used for the various types of\
    \ queries of\n   DNS records are influenced by the definitions used for the various\n\
    \   record types found in [2].\n"
- title: 3.4.  Textual Conventions
  contents:
  - "3.4.  Textual Conventions\n   Several conceptual data types have been introduced\
    \ as a textual\n   conventions in this DNS MIB document.  These additions will\n\
    \   facilitate the common understanding of information used by the DNS.\n   No\
    \ changes to the SMI or the SNMP are necessary to support these\n   conventions.\n\
    \   Readers familiar with MIBs designed to manage entities in the lower\n   layers\
    \ of the Internet protocol suite may be surprised at the number\n   of non-enumerated\
    \ integers used in this MIB to represent values such\n   as DNS RR class and type\
    \ numbers.  The reason for this choice is\n   simple: the DNS itself is designed\
    \ as an extensible protocol,\n   allowing new classes and types of resource records\
    \ to be added to the\n   protocol without recoding the core DNS software.  Using\
    \ non-\n   enumerated integers to represent these data types in this MIB allows\n\
    \   the MIB to accommodate these changes as well.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   DNS-SERVER-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n      \
    \ mib-2\n           FROM RFC-1213\n       MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,\n\
    \       IpAddress, Counter32, Gauge32\n           FROM SNMPv2-SMI\n       TEXTUAL-CONVENTION,\
    \ RowStatus, DisplayString, TruthValue\n           FROM SNMPv2-TC\n       MODULE-COMPLIANCE,\
    \ OBJECT-GROUP\n           FROM SNMPv2-CONF;\n   dns OBJECT-IDENTITY\n       STATUS\
    \  current\n       DESCRIPTION\n               \"The OID assigned to DNS MIB work\
    \ by the IANA.\"\n       ::= { mib-2 32 }\n   dnsServMIB MODULE-IDENTITY\n   \
    \    LAST-UPDATED \"9401282251Z\"\n       ORGANIZATION \"IETF DNS Working Group\"\
    \n       CONTACT-INFO\n               \"       Rob Austein\n               Postal:\
    \ Epilogue Technology Corporation\n                       268 Main Street, Suite\
    \ 283\n                       North Reading, MA 10864\n                      \
    \ US\n                  Tel: +1 617 245 0804\n                  Fax: +1 617 245\
    \ 8122\n               E-Mail: sra@epilogue.com\n                       Jon Saperia\n\
    \               Postal: Digital Equipment Corporation\n                      \
    \ 110 Spit Brook Road\n                       ZKO1-3/H18\n                   \
    \    Nashua, NH 03062-2698\n                       US\n                  Tel:\
    \ +1 603 881 0480\n                  Fax: +1 603 881 0120\n                Email:\
    \ saperia@zko.dec.com\"\n       DESCRIPTION\n               \"The MIB module for\
    \ entities implementing the server side\n               of the Domain Name System\
    \ (DNS) protocol.\"\n       ::= { dns 1 }\n   dnsServMIBObjects       OBJECT IDENTIFIER\
    \ ::= { dnsServMIB 1 }\n   -- (Old-style) groups in the DNS server MIB.\n   dnsServConfig\
    \           OBJECT IDENTIFIER ::= { dnsServMIBObjects 1 }\n   dnsServCounter \
    \         OBJECT IDENTIFIER ::= { dnsServMIBObjects 2 }\n   dnsServOptCounter\
    \       OBJECT IDENTIFIER ::= { dnsServMIBObjects 3 }\n   dnsServZone        \
    \     OBJECT IDENTIFIER ::= { dnsServMIBObjects 4 }\n   -- Textual conventions\n\
    \   DnsName ::= TEXTUAL-CONVENTION\n       -- A DISPLAY-HINT would be nice, but\
    \ difficult to express.\n       STATUS  current\n       DESCRIPTION\n        \
    \       \"A DNS name is a sequence of labels.  When DNS names are\n          \
    \     displayed, the boundaries between labels are typically\n               indicated\
    \ by dots (e.g. `Acme' and `COM' are labels in\n               the name `Acme.COM').\
    \  In the DNS protocol, however, no\n               such separators are needed\
    \ because each label is encoded\n               as a length octet followed by\
    \ the indicated number of\n               octets of label.  For example, `Acme.COM'\
    \ is encoded as\n               the octet sequence { 4, 'A', 'c', 'm', 'e', 3,\
    \ 'C', 'O',\n               'M', 0 } (the final 0 is the length of the name of\
    \ the\n               root domain, which appears implicitly at the end of any\n\
    \               DNS name).  This MIB uses the same encoding as the DNS\n     \
    \          protocol.\n               A DnsName must always be a fully qualified\
    \ name.  It is\n               an error to encode a relative domain name as a\
    \ DnsName\n               without first making it a fully qualified name.\"\n\
    \       REFERENCE\n               \"RFC-1034 section 3.1.\"\n       SYNTAX  OCTET\
    \ STRING (SIZE (0..255))\n   DnsNameAsIndex ::= TEXTUAL-CONVENTION\n       STATUS\
    \  current\n       DESCRIPTION\n               \"This textual convention is like\
    \ a DnsName, but is used\n               as an index componant in tables.  Alphabetic\
    \ characters\n               in names of this type are restricted to uppercase:\
    \ the\n               characters 'a' through 'z' are mapped to the characters\n\
    \               'A' through 'Z'.  This restriction is intended to make\n     \
    \          the lexical ordering imposed by SNMP useful when applied\n        \
    \       to DNS names.\n               Note that it is theoretically possible for\
    \ a valid DNS\n               name to exceed the allowed length of an SNMP object\n\
    \               identifer, and thus be impossible to represent in tables\n   \
    \            in this MIB that are indexed by DNS name.  Sampling of\n        \
    \       DNS names in current use on the Internet suggests that\n             \
    \  this limit does not pose a serious problem in practice.\"\n       REFERENCE\n\
    \               \"RFC-1034 section 3.1, RFC-1448 section 4.1.\"\n       SYNTAX\
    \  DnsName\n   DnsClass ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT \"2d\"\n \
    \      STATUS  current\n       DESCRIPTION\n               \"This data type is\
    \ used to represent the class values\n               which appear in Resource\
    \ Records in the DNS.  A 16-bit\n               unsigned integer is used to allow\
    \ room for new classes\n               of records to be defined.  Existing standard\
    \ classes are\n               listed in the DNS specifications.\"\n       REFERENCE\n\
    \               \"RFC-1035 section 3.2.4.\"\n       SYNTAX  INTEGER (0..65535)\n\
    \   DnsType ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT \"2d\"\n       STATUS\
    \  current\n       DESCRIPTION\n               \"This data type is used to represent\
    \ the type values\n               which appear in Resource Records in the DNS.\
    \  A 16-bit\n               unsigned integer is used to allow room for new record\n\
    \               types to be defined.  Existing standard types are listed\n   \
    \            in the DNS specifications.\"\n       REFERENCE\n               \"\
    RFC-1035 section 3.2.2.\"\n       SYNTAX  INTEGER (0..65535)\n   DnsQClass ::=\
    \ TEXTUAL-CONVENTION\n       DISPLAY-HINT \"2d\"\n       STATUS  current\n   \
    \    DESCRIPTION\n               \"This data type is used to represent the QClass\
    \ values\n               which appear in Resource Records in the DNS.  A 16-bit\n\
    \               unsigned integer is used to allow room for new QClass\n      \
    \         records to be defined.  Existing standard QClasses are\n           \
    \    listed in the DNS specification.\"\n       REFERENCE\n               \"RFC-1035\
    \ section 3.2.5.\"\n       SYNTAX  INTEGER (0..65535)\n   DnsQType ::= TEXTUAL-CONVENTION\n\
    \       DISPLAY-HINT \"2d\"\n       STATUS  current\n       DESCRIPTION\n    \
    \           \"This data type is used to represent the QType values\n         \
    \      which appear in Resource Records in the DNS.  A 16-bit\n              \
    \ unsigned integer is used to allow room for new QType\n               records\
    \ to be defined.  Existing standard QTypes are\n               listed in the DNS\
    \ specification.\"\n       REFERENCE\n               \"RFC-1035 section 3.2.3.\"\
    \n       SYNTAX  INTEGER (0..65535)\n   DnsTime ::= TEXTUAL-CONVENTION\n     \
    \  DISPLAY-HINT \"4d\"\n       STATUS  current\n       DESCRIPTION\n         \
    \      \"DnsTime values are 32-bit unsigned integers which\n               measure\
    \ time in seconds.\"\n       REFERENCE\n               \"RFC-1035.\"\n       SYNTAX\
    \  Gauge32\n   DnsOpCode ::= TEXTUAL-CONVENTION\n       STATUS  current\n    \
    \   DESCRIPTION\n               \"This textual convention is used to represent\
    \ the DNS\n               OPCODE values used in the header section of DNS\n  \
    \             messages.  Existing standard OPCODE values are listed in\n     \
    \          the DNS specifications.\"\n       REFERENCE\n               \"RFC-1035\
    \ section 4.1.1.\"\n       SYNTAX  INTEGER (0..15)\n   DnsRespCode ::= TEXTUAL-CONVENTION\n\
    \       STATUS  current\n       DESCRIPTION\n               \"This data type is\
    \ used to represent the DNS RCODE value\n               in DNS response messages.\
    \  Existing standard RCODE\n               values are listed in the DNS specifications.\"\
    \n       REFERENCE\n               \"RFC-1035 section 4.1.1.\"\n       SYNTAX\
    \  INTEGER (0..15)\n   -- Server Configuration Group\n   dnsServConfigImplementIdent\
    \ OBJECT-TYPE\n       SYNTAX      DisplayString\n       MAX-ACCESS  read-only\n\
    \       STATUS      current\n       DESCRIPTION\n               \"The implementation\
    \ identification string for the DNS\n               server software in use on\
    \ the system, for example;\n               `FNS-2.1'\"\n       ::= { dnsServConfig\
    \ 1 }\n   dnsServConfigRecurs  OBJECT-TYPE\n       SYNTAX      INTEGER { available(1),\n\
    \                             restricted(2),\n                             unavailable(3)\
    \ }\n       MAX-ACCESS  read-write\n       STATUS      current\n       DESCRIPTION\n\
    \               \"This represents the recursion services offered by this\n   \
    \            name server.  The values that can be read or written\n          \
    \     are:\n               available(1) - performs recursion on requests from\n\
    \               clients.\n               restricted(2) - recursion is performed\
    \ on requests only\n               from certain clients, for example; clients\
    \ on an access\n               control list.\n               unavailable(3) -\
    \ recursion is not available.\"\n        ::= { dnsServConfig 2 }\n   dnsServConfigUpTime\
    \ OBJECT-TYPE\n       SYNTAX      DnsTime\n       MAX-ACCESS  read-only\n    \
    \   STATUS      current\n       DESCRIPTION\n               \"If the server has\
    \ a persistent state (e.g., a process),\n               this value will be the\
    \ time elapsed since it started.\n               For software without persistant\
    \ state, this value will\n               be zero.\"\n       ::= { dnsServConfig\
    \ 3 }\n   dnsServConfigResetTime OBJECT-TYPE\n       SYNTAX      DnsTime\n   \
    \    MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n \
    \              \"If the server has a persistent state (e.g., a process)\n    \
    \           and supports a `reset' operation (e.g., can be told to\n         \
    \      re-read configuration files), this value will be the\n               time\
    \ elapsed since the last time the name server was\n               `reset.'  For\
    \ software that does not have persistence or\n               does not support\
    \ a `reset' operation, this value will be\n               zero.\"\n       ::=\
    \ { dnsServConfig 4 }\n   dnsServConfigReset OBJECT-TYPE\n       SYNTAX      INTEGER\
    \ { other(1),\n                             reset(2),\n                      \
    \       initializing(3),\n                             running(4) }\n       MAX-ACCESS\
    \  read-write\n       STATUS      current\n       DESCRIPTION\n              \
    \ \"Status/action object to reinitialize any persistant name\n               server\
    \ state.  When set to reset(2), any persistant\n               name server state\
    \ (such as a process) is reinitialized as\n               if the name server had\
    \ just been started.  This value\n               will never be returned by a read\
    \ operation.  When read,\n               one of the following values will be returned:\n\
    \                   other(1) - server in some unknown state;\n               \
    \    initializing(3) - server (re)initializing;\n                   running(4)\
    \ - server currently running.\"\n       ::= { dnsServConfig 5 }\n   -- Server\
    \ Counter Group\n   dnsServCounterAuthAns OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of queries which were authoritatively answered.\"\n \
    \      ::= { dnsServCounter 2 }\n   dnsServCounterAuthNoNames OBJECT-TYPE\n  \
    \     SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS     \
    \ current\n       DESCRIPTION\n               \"Number of queries for which `authoritative\
    \ no such name'\n               responses were made.\"\n       ::= { dnsServCounter\
    \ 3 }\n   dnsServCounterAuthNoDataResps OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of queries for which `authoritative no such data'\n \
    \              (empty answer) responses were made.\"\n       ::= { dnsServCounter\
    \ 4 }\n   dnsServCounterNonAuthDatas OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of queries which were non-authoritatively\n         \
    \      answered (cached data).\"\n       ::= { dnsServCounter 5 }\n   dnsServCounterNonAuthNoDatas\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of queries\
    \ which were non-authoritatively\n               answered with no data (empty\
    \ answer).\"\n       ::= { dnsServCounter 6 }\n   dnsServCounterReferrals OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of requests that were\
    \ referred to other servers.\"\n       ::= { dnsServCounter 7 }\n   dnsServCounterErrors\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ the server has processed that were\n               answered with errors (RCODE\
    \ values other than 0 and 3).\"\n       REFERENCE\n               \"RFC-1035 section\
    \ 4.1.1.\"\n       ::= { dnsServCounter 8 }\n   dnsServCounterRelNames OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of requests received\
    \ by the server for names that\n               are only 1 label long (text form\
    \ - no internal dots).\"\n       ::= { dnsServCounter 9 }\n   dnsServCounterReqRefusals\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of DNS\
    \ requests refused by the server.\"\n       ::= { dnsServCounter 10 }\n   dnsServCounterReqUnparses\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ received which were unparseable.\"\n       ::= { dnsServCounter 11 }\n   dnsServCounterOtherErrors\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ which were aborted for other (local)\n               server errors.\"\n    \
    \   ::= { dnsServCounter 12 }\n   -- DNS Server Counter Table\n   dnsServCounterTable\
    \ OBJECT-TYPE\n       SYNTAX      SEQUENCE OF DnsServCounterEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \     \"Counter information broken down by DNS class and type.\"\n       ::= {\
    \ dnsServCounter 13 }\n   dnsServCounterEntry OBJECT-TYPE\n       SYNTAX     \
    \ DnsServCounterEntry\n       MAX-ACCESS  not-accessible\n       STATUS      current\n\
    \       DESCRIPTION\n               \"This table contains count information for\
    \ each DNS class\n               and type value known to the server.  The index\
    \ allows\n               management software to to create indices to the table\
    \ to\n               get the specific information desired, e.g., number of\n \
    \              queries over UDP for records with type value `A' which\n      \
    \         came to this server.  In order to prevent an\n               uncontrolled\
    \ expansion of rows in the table; if\n               dnsServCounterRequests is\
    \ 0 and dnsServCounterResponses\n               is 0, then the row does not exist\
    \ and `no such' is\n               returned when the agent is queried for such\
    \ instances.\"\n       INDEX     { dnsServCounterOpCode,\n                   dnsServCounterQClass,\n\
    \                   dnsServCounterQType,\n                   dnsServCounterTransport\
    \ }\n       ::= { dnsServCounterTable 1 }\n   DnsServCounterEntry ::=\n      \
    \ SEQUENCE {\n           dnsServCounterOpCode\n               DnsOpCode,\n   \
    \        dnsServCounterQClass\n               DnsClass,\n           dnsServCounterQType\n\
    \               DnsType,\n           dnsServCounterTransport\n               INTEGER,\n\
    \           dnsServCounterRequests\n               Counter32,\n           dnsServCounterResponses\n\
    \               Counter32\n           }\n   dnsServCounterOpCode OBJECT-TYPE\n\
    \       SYNTAX      DnsOpCode\n       MAX-ACCESS  not-accessible\n       STATUS\
    \      current\n       DESCRIPTION\n               \"The DNS OPCODE being counted\
    \ in this row of the table.\"\n       ::= { dnsServCounterEntry 1 }\n   dnsServCounterQClass\
    \ OBJECT-TYPE\n       SYNTAX      DnsClass\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n               \"The class of\
    \ record being counted in this row of the\n               table.\"\n       ::=\
    \ { dnsServCounterEntry 2 }\n   dnsServCounterQType OBJECT-TYPE\n       SYNTAX\
    \      DnsType\n       MAX-ACCESS  not-accessible\n       STATUS      current\n\
    \       DESCRIPTION\n               \"The type of record which is being counted\
    \ in this row in\n               the table.\"\n       ::= { dnsServCounterEntry\
    \ 3 }\n   dnsServCounterTransport OBJECT-TYPE\n       SYNTAX      INTEGER { udp(1),\
    \ tcp(2), other(3) }\n       MAX-ACCESS  not-accessible\n       STATUS      current\n\
    \       DESCRIPTION\n               \"A value of udp(1) indicates that the queries\
    \ reported on\n               this row were sent using UDP.\n               A\
    \ value of tcp(2) indicates that the queries reported on\n               this\
    \ row were sent using TCP.\n               A value of other(3) indicates that\
    \ the queries reported\n               on this row were sent using a transport\
    \ that was neither\n               TCP nor UDP.\"\n       ::= { dnsServCounterEntry\
    \ 4 }\n   dnsServCounterRequests OBJECT-TYPE\n       SYNTAX      Counter32\n \
    \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of requests (queries) that have been recorded in\n  \
    \             this row of the table.\"\n       ::= { dnsServCounterEntry 5 }\n\
    \   dnsServCounterResponses OBJECT-TYPE\n       SYNTAX      Counter32\n      \
    \ MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n    \
    \           \"Number of responses made by the server since\n               initialization\
    \ for the kind of query identified on this\n               row of the table.\"\
    \n       ::= { dnsServCounterEntry 6 }\n   -- Server Optional Counter Group\n\
    \   -- The Server Optional Counter Group is intended for those systems\n   --\
    \ which make distinctions between the different sources of the DNS\n   -- queries\
    \ as defined below.\n   --\n   -- Objects in this group are implemented on servers\
    \ which distinguish\n   -- between queries which originate from the same host\
    \ as the server,\n   -- queries from one of an arbitrary group of hosts that are\
    \ on an\n   -- access list defined by the server, and queries from hosts that\
    \ do\n   -- not fit either of these descriptions.\n   --\n   -- The objects found\
    \ in the Server Counter group are totals.  Thus if\n   -- one wanted to identify,\
    \ for example, the number of queries from\n   -- `remote' hosts which have been\
    \ given authoritative answers, one\n   -- would subtract the current values of\
    \ ServOptCounterFriendsAuthAns\n   -- and ServOptCounterSelfAuthAns from servCounterAuthAns.\n\
    \   --\n   -- The purpose of these distinctions is to allow for implementations\n\
    \   -- to group queries and responses on this basis.  One way in which\n   --\
    \ servers may make these distinctions is by looking at the source IP\n   -- address\
    \ of the DNS query.  If the source of the query is `your\n   -- own' then the\
    \ query should be counted as `yourself' (local host).\n   -- If the source of\
    \ the query matches an `access list,' the query\n   -- came from a friend.  What\
    \ constitutes an `access list' is\n   -- implementation dependent and could be\
    \ as simple as a rule that all\n   -- hosts on the same IP network as the DNS\
    \ server are classed\n   -- `friends.'\n   --\n   -- In order to avoid double\
    \ counting, the following rules apply:\n   --\n   -- 1. No host is in more than\
    \ one of the three groups defined above.\n   --\n   -- 2. All queries from the\
    \ local host are always counted in the\n   --    `yourself' group regardless of\
    \ what the access list, if any,\n   --    says.\n   --\n   -- 3. The access list\
    \ should not define `your friends' in such a way\n   --    that it includes all\
    \ hosts.   That is, not everybody is your\n   --    `friend.'\n   dnsServOptCounterSelfAuthAns\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ the server has processed which\n               originated from a resolver on\
    \ the same host for which\n               there has been an authoritative answer.\"\
    \n       ::= { dnsServOptCounter 1 }\n   dnsServOptCounterSelfAuthNoNames OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of requests the server\
    \ has processed which\n               originated from a resolver on the same host\
    \ for which\n               there has been an authoritative no such name answer\n\
    \               given.\"\n       ::= { dnsServOptCounter 2 }\n   dnsServOptCounterSelfAuthNoDataResps\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ the server has processed which\n               originated from a resolver on\
    \ the same host for which\n               there has been an authoritative no such\
    \ data answer\n               (empty answer) made.\"\n       ::= { dnsServOptCounter\
    \ 3 }\n   dnsServOptCounterSelfNonAuthDatas OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of requests the server has processed which\n        \
    \       originated from a resolver on the same host for which a\n            \
    \   non-authoritative answer (cached data) was made.\"\n       ::= { dnsServOptCounter\
    \ 4 }\n   dnsServOptCounterSelfNonAuthNoDatas OBJECT-TYPE\n       SYNTAX     \
    \ Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n      \
    \ DESCRIPTION\n               \"Number of requests the server has processed which\n\
    \               originated from a resolver on the same host for which a\n    \
    \           `non-authoritative, no such data' response was made\n            \
    \   (empty answer).\"\n       ::= { dnsServOptCounter 5 }\n   dnsServOptCounterSelfReferrals\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of queries\
    \ the server has processed which\n               originated from a resolver on\
    \ the same host and were\n               referred to other servers.\"\n      \
    \ ::= { dnsServOptCounter 6 }\n   dnsServOptCounterSelfErrors OBJECT-TYPE\n  \
    \     SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS     \
    \ current\n       DESCRIPTION\n               \"Number of requests the server\
    \ has processed which\n               originated from a resolver on the same host\
    \ which have\n               been answered with errors (RCODEs other than 0 and\
    \ 3).\"\n       REFERENCE\n               \"RFC-1035 section 4.1.1.\"\n      \
    \ ::= { dnsServOptCounter 7 }\n   dnsServOptCounterSelfRelNames OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of requests received\
    \ for names that are only 1\n               label long (text form - no internal\
    \ dots) the server has\n               processed which originated from a resolver\
    \ on the same\n               host.\"\n       ::= { dnsServOptCounter 8 }\n  \
    \ dnsServOptCounterSelfReqRefusals OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of DNS requests refused by the server which\n       \
    \        originated from a resolver on the same host.\"\n       ::= { dnsServOptCounter\
    \ 9 }\n   dnsServOptCounterSelfReqUnparses OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of requests received which were unparseable and\n   \
    \            which originated from a resolver on the same host.\"\n       ::=\
    \ { dnsServOptCounter 10 }\n   dnsServOptCounterSelfOtherErrors OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of requests which were\
    \ aborted for other (local)\n               server errors and which originated\
    \ on the same host.\"\n       ::= { dnsServOptCounter 11 }\n   dnsServOptCounterFriendsAuthAns\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of queries\
    \ originating from friends which were\n               authoritatively answered.\
    \  The definition of friends is\n               a locally defined matter.\"\n\
    \       ::= { dnsServOptCounter 12 }\n   dnsServOptCounterFriendsAuthNoNames OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of queries originating\
    \ from friends, for which\n               authoritative `no such name' responses\
    \ were made.  The\n               definition of friends is a locally defined matter.\"\
    \n       ::= { dnsServOptCounter 13 }\n   dnsServOptCounterFriendsAuthNoDataResps\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of queries\
    \ originating from friends for which\n               authoritative no such data\
    \ (empty answer) responses were\n               made.  The definition of friends\
    \ is a locally defined\n               matter.\"\n       ::= { dnsServOptCounter\
    \ 14 }\n   dnsServOptCounterFriendsNonAuthDatas OBJECT-TYPE\n       SYNTAX   \
    \   Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n    \
    \   DESCRIPTION\n               \"Number of queries originating from friends which\
    \ were\n               non-authoritatively answered (cached data). The\n     \
    \          definition of friends is a locally defined matter.\"\n       ::= {\
    \ dnsServOptCounter 15 }\n   dnsServOptCounterFriendsNonAuthNoDatas OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of queries originating\
    \ from friends which were\n               non-authoritatively answered with no\
    \ such data (empty\n               answer).\"\n       ::= { dnsServOptCounter\
    \ 16 }\n   dnsServOptCounterFriendsReferrals OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of requests which originated from friends that\n    \
    \           were referred to other servers.  The definition of\n             \
    \  friends is a locally defined matter.\"\n       ::= { dnsServOptCounter 17 }\n\
    \   dnsServOptCounterFriendsErrors OBJECT-TYPE\n       SYNTAX      Counter32\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Number of requests the server has processed which\n        \
    \       originated from friends and were answered with errors\n              \
    \ (RCODE values other than 0 and 3).  The definition of\n               friends\
    \ is a locally defined matter.\"\n       REFERENCE\n               \"RFC-1035\
    \ section 4.1.1.\"\n       ::= { dnsServOptCounter 18 }\n   dnsServOptCounterFriendsRelNames\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ received for names from friends that\n               are only 1 label long (text\
    \ form - no internal dots) the\n               server has processed.\"\n     \
    \  ::= { dnsServOptCounter 19 }\n   dnsServOptCounterFriendsReqRefusals OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of DNS requests refused\
    \ by the server which were\n               received from `friends'.\"\n      \
    \ ::= { dnsServOptCounter 20 }\n   dnsServOptCounterFriendsReqUnparses OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Number of requests received\
    \ which were unparseable and\n               which originated from `friends'.\"\
    \n       ::= { dnsServOptCounter 21 }\n   dnsServOptCounterFriendsOtherErrors\
    \ OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"Number of requests\
    \ which were aborted for other (local)\n               server errors and which\
    \ originated from `friends'.\"\n       ::= { dnsServOptCounter 22 }\n   -- Server\
    \ Zone Group\n   -- DNS Management Zone Configuration Table\n   -- This table\
    \ contains zone configuration information.\n   dnsServZoneTable OBJECT-TYPE\n\
    \       SYNTAX      SEQUENCE OF DnsServZoneEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n               \"Table of zones\
    \ for which this name server provides\n               information.  Each of the\
    \ zones may be loaded from stable\n               storage via an implementation-specific\
    \ mechanism or may\n               be obtained from another name server via a\
    \ zone transfer.\n               If name server doesn't load any zones, this table\
    \ is\n               empty.\"\n       ::= { dnsServZone 1 }\n   dnsServZoneEntry\
    \ OBJECT-TYPE\n       SYNTAX      DnsServZoneEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n               \"An entry in\
    \ the name server zone table.  New rows may be\n               added either via\
    \ SNMP or by the name server itself.\"\n       INDEX     { dnsServZoneName,\n\
    \                   dnsServZoneClass }\n       ::= { dnsServZoneTable 1 }\n  \
    \ DnsServZoneEntry ::=\n       SEQUENCE {\n           dnsServZoneName\n      \
    \         DnsNameAsIndex,\n           dnsServZoneClass\n               DnsClass,\n\
    \           dnsServZoneLastReloadSuccess\n               DnsTime,\n          \
    \ dnsServZoneLastReloadAttempt\n               DnsTime,\n           dnsServZoneLastSourceAttempt\n\
    \               IpAddress,\n           dnsServZoneStatus\n               RowStatus,\n\
    \           dnsServZoneSerial\n               Counter32,\n           dnsServZoneCurrent\n\
    \               TruthValue,\n           dnsServZoneLastSourceSuccess\n       \
    \        IpAddress\n       }\n   dnsServZoneName OBJECT-TYPE\n       SYNTAX  \
    \    DnsNameAsIndex\n       MAX-ACCESS  not-accessible\n       STATUS      current\n\
    \       DESCRIPTION\n               \"DNS name of the zone described by this row\
    \ of the table.\n               This is the owner name of the SOA RR that defines\
    \ the\n               top of the zone. This is name is in uppercase:\n       \
    \        characters 'a' through 'z' are mapped to 'A' through 'Z'\n          \
    \     in order to make the lexical ordering useful.\"\n       ::= { dnsServZoneEntry\
    \ 1 }\n   dnsServZoneClass OBJECT-TYPE\n       SYNTAX      DnsClass\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \     \"DNS class of the RRs in this zone.\"\n       ::= { dnsServZoneEntry 2\
    \ }\n   dnsServZoneLastReloadSuccess OBJECT-TYPE\n       SYNTAX      DnsTime\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \               \"Elapsed time in seconds since last successful reload of\n  \
    \             this zone.\"\n       ::= { dnsServZoneEntry 3 }\n   dnsServZoneLastReloadAttempt\
    \ OBJECT-TYPE\n       SYNTAX      DnsTime\n       MAX-ACCESS  read-only\n    \
    \   STATUS      current\n       DESCRIPTION\n               \"Elapsed time in\
    \ seconds since last attempted reload of\n               this zone.\"\n      \
    \ ::= { dnsServZoneEntry 4 }\n   dnsServZoneLastSourceAttempt OBJECT-TYPE\n  \
    \     SYNTAX      IpAddress\n       MAX-ACCESS  read-only\n       STATUS     \
    \ current\n       DESCRIPTION\n               \"IP address of host from which\
    \ most recent zone transfer\n               of this zone was attempted.  This\
    \ value should match the\n               value of dnsServZoneSourceSuccess if\
    \ the attempt was\n               succcessful.  If zone transfer has not been\
    \ attempted\n               within the memory of this name server, this value\
    \ should\n               be 0.0.0.0.\"\n       ::= { dnsServZoneEntry 5 }\n  \
    \ dnsServZoneStatus OBJECT-TYPE\n       SYNTAX      RowStatus\n       MAX-ACCESS\
    \  read-create\n       STATUS      current\n       DESCRIPTION\n             \
    \  \"The status of the information represented in this row of\n              \
    \ the table.\"\n       ::= { dnsServZoneEntry 6 }\n   dnsServZoneSerial OBJECT-TYPE\n\
    \       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n               \"Zone serial number (from the\
    \ SOA RR) of the zone\n               represented by this row of the table.  If\
    \ the zone has\n               not been successfully loaded within the memory\
    \ of this\n               name server, the value of this variable is zero.\"\n\
    \       ::= { dnsServZoneEntry 7 }\n   dnsServZoneCurrent OBJECT-TYPE\n      \
    \ SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n               \"Whether the server's copy of the zone represented\
    \ by\n               this row of the table is currently valid.  If the zone\n\
    \               has never been successfully loaded or has expired since\n    \
    \           it was last succesfully loaded, this variable will have\n        \
    \       the value false(2), otherwise this variable will have\n              \
    \ the value true(1).\"\n       ::= { dnsServZoneEntry 8 }\n   dnsServZoneLastSourceSuccess\
    \ OBJECT-TYPE\n       SYNTAX      IpAddress\n       MAX-ACCESS  read-only\n  \
    \     STATUS      current\n       DESCRIPTION\n               \"IP address of\
    \ host which was the source of the most\n               recent successful zone\
    \ transfer for this zone.  If\n               unknown (e.g., zone has never been\
    \ successfully\n               transfered) or irrelevant (e.g., zone was loaded\
    \ from\n               stable storage), this value should be 0.0.0.0.\"\n    \
    \   ::= { dnsServZoneEntry 9 }\n   -- DNS Zone Source Table\n   dnsServZoneSrcTable\
    \ OBJECT-TYPE\n       SYNTAX      SEQUENCE OF DnsServZoneSrcEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \     \"This table is a list of IP addresses from which the\n               server\
    \ will attempt to load zone information using DNS\n               zone transfer\
    \ operations.  A reload may occur due to SNMP\n               operations that\
    \ create a row in dnsServZoneTable or a\n               SET to object dnsServZoneReload.\
    \  This table is only\n               used when the zone is loaded via zone transfer.\"\
    \n       ::= { dnsServZone 2 }\n   dnsServZoneSrcEntry OBJECT-TYPE\n       SYNTAX\
    \      DnsServZoneSrcEntry\n       MAX-ACCESS  not-accessible\n       STATUS \
    \     current\n       DESCRIPTION\n               \"An entry in the name server\
    \ zone source table.\"\n       INDEX     { dnsServZoneSrcName,\n             \
    \      dnsServZoneSrcClass,\n                   dnsServZoneSrcAddr }\n       ::=\
    \ { dnsServZoneSrcTable 1 }\n   DnsServZoneSrcEntry ::=\n       SEQUENCE {\n \
    \          dnsServZoneSrcName\n               DnsNameAsIndex,\n           dnsServZoneSrcClass\n\
    \               DnsClass,\n           dnsServZoneSrcAddr\n               IpAddress,\n\
    \           dnsServZoneSrcStatus\n               RowStatus\n       }\n   dnsServZoneSrcName\
    \ OBJECT-TYPE\n       SYNTAX      DnsNameAsIndex\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n               \"DNS name of\
    \ the zone to which this entry applies.\"\n       ::= { dnsServZoneSrcEntry 1\
    \ }\n   dnsServZoneSrcClass OBJECT-TYPE\n       SYNTAX      DnsClass\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \     \"DNS class of zone to which this entry applies.\"\n       ::= { dnsServZoneSrcEntry\
    \ 2 }\n   dnsServZoneSrcAddr OBJECT-TYPE\n       SYNTAX      IpAddress\n     \
    \  MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \               \"IP address of name server host from which this zone\n      \
    \         might be obtainable.\"\n       ::= { dnsServZoneSrcEntry 3 }\n   dnsServZoneSrcStatus\
    \ OBJECT-TYPE\n       SYNTAX      RowStatus\n       MAX-ACCESS  read-create\n\
    \       STATUS      current\n       DESCRIPTION\n               \"The status of\
    \ the information represented in this row of\n               the table.\"\n  \
    \     ::= { dnsServZoneSrcEntry 4 }\n   -- SNMPv2 groups.\n   dnsServMIBGroups\
    \        OBJECT IDENTIFIER ::= { dnsServMIB 2 }\n   dnsServConfigGroup OBJECT-GROUP\n\
    \       OBJECTS   { dnsServConfigImplementIdent,\n                   dnsServConfigRecurs,\n\
    \                   dnsServConfigUpTime,\n                   dnsServConfigResetTime,\n\
    \                   dnsServConfigReset }\n       STATUS      current\n       DESCRIPTION\n\
    \               \"A collection of objects providing basic configuration\n    \
    \           control of a DNS name server.\"\n       ::= { dnsServMIBGroups 1 }\n\
    \   dnsServCounterGroup OBJECT-GROUP\n       OBJECTS   { dnsServCounterAuthAns,\n\
    \                   dnsServCounterAuthNoNames,\n                   dnsServCounterAuthNoDataResps,\n\
    \                   dnsServCounterNonAuthDatas,\n                   dnsServCounterNonAuthNoDatas,\n\
    \                   dnsServCounterReferrals,\n                   dnsServCounterErrors,\n\
    \                   dnsServCounterRelNames,\n                   dnsServCounterReqRefusals,\n\
    \                   dnsServCounterReqUnparses,\n                   dnsServCounterOtherErrors,\n\
    \                   dnsServCounterOpCode,\n                   dnsServCounterQClass,\n\
    \                   dnsServCounterQType,\n                   dnsServCounterTransport,\n\
    \                   dnsServCounterRequests,\n                   dnsServCounterResponses\
    \ }\n       STATUS      current\n       DESCRIPTION\n               \"A collection\
    \ of objects providing basic instrumentation\n               of a DNS name server.\"\
    \n       ::= { dnsServMIBGroups 2 }\n   dnsServOptCounterGroup OBJECT-GROUP\n\
    \       OBJECTS   { dnsServOptCounterSelfAuthAns,\n                   dnsServOptCounterSelfAuthNoNames,\n\
    \                   dnsServOptCounterSelfAuthNoDataResps,\n                  \
    \ dnsServOptCounterSelfNonAuthDatas,\n                   dnsServOptCounterSelfNonAuthNoDatas,\n\
    \                   dnsServOptCounterSelfReferrals,\n                   dnsServOptCounterSelfErrors,\n\
    \                   dnsServOptCounterSelfRelNames,\n                   dnsServOptCounterSelfReqRefusals,\n\
    \                   dnsServOptCounterSelfReqUnparses,\n                   dnsServOptCounterSelfOtherErrors,\n\
    \                   dnsServOptCounterFriendsAuthAns,\n                   dnsServOptCounterFriendsAuthNoNames,\n\
    \                   dnsServOptCounterFriendsAuthNoDataResps,\n               \
    \    dnsServOptCounterFriendsNonAuthDatas,\n                   dnsServOptCounterFriendsNonAuthNoDatas,\n\
    \                   dnsServOptCounterFriendsReferrals,\n                   dnsServOptCounterFriendsErrors,\n\
    \                   dnsServOptCounterFriendsRelNames,\n                   dnsServOptCounterFriendsReqRefusals,\n\
    \                   dnsServOptCounterFriendsReqUnparses,\n                   dnsServOptCounterFriendsOtherErrors\
    \ }\n       STATUS      current\n       DESCRIPTION\n               \"A collection\
    \ of objects providing extended\n               instrumentation of a DNS name\
    \ server.\"\n       ::= { dnsServMIBGroups 3 }\n   dnsServZoneGroup OBJECT-GROUP\n\
    \       OBJECTS   { dnsServZoneName,\n                   dnsServZoneClass,\n \
    \                  dnsServZoneLastReloadSuccess,\n                   dnsServZoneLastReloadAttempt,\n\
    \                   dnsServZoneLastSourceAttempt,\n                   dnsServZoneLastSourceSuccess,\n\
    \                   dnsServZoneStatus,\n                   dnsServZoneSerial,\n\
    \                   dnsServZoneCurrent,\n                   dnsServZoneSrcName,\n\
    \                   dnsServZoneSrcClass,\n                   dnsServZoneSrcAddr,\n\
    \                   dnsServZoneSrcStatus }\n       STATUS      current\n     \
    \  DESCRIPTION\n               \"A collection of objects providing configuration\
    \ control\n               of a DNS name server which loads authoritative zones.\"\
    \n       ::= { dnsServMIBGroups 4 }\n   -- Compliances.\n   dnsServMIBCompliances\
    \ OBJECT IDENTIFIER ::= { dnsServMIB 3 }\n   dnsServMIBCompliance MODULE-COMPLIANCE\n\
    \       STATUS      current\n       DESCRIPTION\n               \"The compliance\
    \ statement for agents implementing the DNS\n               name server MIB extensions.\"\
    \n       MODULE -- This MIB module\n           MANDATORY-GROUPS { dnsServConfigGroup,\
    \ dnsServCounterGroup }\n           GROUP   dnsServOptCounterGroup\n         \
    \  DESCRIPTION\n               \"The server optional counter group is unconditionally\n\
    \               optional.\"\n           GROUP   dnsServZoneGroup\n           DESCRIPTION\n\
    \               \"The server zone group is mandatory for any name server\n   \
    \            that acts as an authoritative server for any DNS zone.\"\n      \
    \     OBJECT  dnsServConfigRecurs\n           MIN-ACCESS      read-only\n    \
    \       DESCRIPTION\n               \"This object need not be writable.\"\n  \
    \         OBJECT  dnsServConfigReset\n           MIN-ACCESS      read-only\n \
    \          DESCRIPTION\n               \"This object need not be writable.\"\n\
    \       ::= { dnsServMIBCompliances 1 }\n   END\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document is the result of work undertaken the by\
    \ DNS working\n   group.  The authors would particularly like to thank the following\n\
    \   people for their contributions to this document: Philip Almquist,\n   Frank\
    \ Kastenholz (FTP Software), Joe Peck (DEC), Dave Perkins\n   (SynOptics), Win\
    \ Treese (DEC), and Mimi Zohar (IBM).\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1] Mockapetris, P., \"Domain Names -- Concepts and Facilities\"\
    , STD\n       13, RFC 1034, USC/Information Sciences Institute, November 1987.\n\
    \   [2] Mockapetris, P., \"Domain Names -- Implementation and\n       Specification\"\
    , STD 13, RFC 1035, USC/Information Sciences\n       Institute, November 1987.\n\
    \   [3] Braden, R., Editor, \"Requirements for Internet Hosts --\n       Application\
    \ and Support, STD 3, RFC 1123, USC/Information\n       Sciences Institute, October\
    \ 1989.\n   [4] Rose, M., and K. McCloghrie, \"Structure and Identification of\n\
    \       Management Information for TCP/IP-based internets\", STD 16, RFC\n   \
    \    1155, Performance Systems International, Hughes LAN Systems, May\n      \
    \ 1990.\n   [5] McCloghrie, K., and M. Rose, \"Management Information Base for\n\
    \       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n   \
    \    LAN Systems, Performance Systems International, May 1990.\n   [6] Case, J.,\
    \ Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management\
    \ Protocol\", STD 15, RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [7] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\"\
    ,\n       STD 16, RFC 1212, Performance Systems International, Hughes LAN\n  \
    \     Systems, March 1991.\n   [8] McCloghrie, K., and M. Rose, Editors, \"Management\
    \ Information\n       Base for Network Management of TCP/IP-based internets: MIB-II\"\
    ,\n       STD 17, RFC 1213, Hughes LAN Systems, Performance Systems\n       International,\
    \ March 1991.\n   [9] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"\
    Structure\n       of Management Information for version 2 of the Simple Network\n\
    \       Management Protocol (SNMPv2)\", RFC 1442, SNMP Research, Inc.,\n     \
    \  Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n  [10] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"\
    Textual\n       Conventions for version 2 of the the Simple Network Management\n\
    \       Protocol (SNMPv2)\", RFC 1443, SNMP Research, Inc., Hughes LAN\n     \
    \  Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n  [11] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\n\
    \       \"Conformance Statements for version 2 of the the Simple Network\n   \
    \    Management Protocol (SNMPv2)\", RFC 1444, SNMP Research, Inc.,\n       Hughes\
    \ LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n  [12] Galvin, J., and K. McCloghrie, \"Administrative Model for\
    \ version\n       2 of the Simple Network Management Protocol (SNMPv2)\", RFC\
    \ 1445,\n       Trusted Information Systems, Hughes LAN Systems, April 1993.\n\
    \  [13] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"Protocol\n  \
    \     Operations for version 2 of the Simple Network Management\n       Protocol\
    \ (SNMPv2)\", RFC 1448, SNMP Research, Inc., Hughes LAN\n       Systems, Dover\
    \ Beach Consulting, Inc., Carnegie Mellon\n       University, April 1993.\n  [14]\
    \ \"Information processing systems - Open Systems Interconnection -\n       Specification\
    \ of Abstract Syntax Notation One (ASN.1)\",\n       International Organization\
    \ for Standardization, International\n       Standard 8824, December 1987.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Rob Austein\n   Epilogue Technology Corporation\n\
    \   268 Main Street, Suite 283\n   North Reading, MA 01864\n   USA\n   Phone:\
    \ +1-617-245-0804\n   Fax:   +1-617-245-8122\n   EMail: sra@epilogue.com\n   Jon\
    \ Saperia\n   Digital Equipment Corporation\n   110 Spit Brook Road\n   ZKO1-3/H18\n\
    \   Nashua, NH 03062-2698\n   USA\n   Phone: +1-603-881-0480\n   Fax:   +1-603-881-0120\n\
    \   EMail: saperia@zko.dec.com\n"
