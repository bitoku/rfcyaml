- contents:
  - '                   Diameter Routing Message Priority

    '
  title: __initial_text__
- contents:
  - "Abstract\n   When making routing and resource allocation decisions, Diameter
    nodes\n   currently have no generic mechanism to determine the relative\n   priority
    of Diameter messages.  This document addresses this by\n   defining a mechanism
    to allow Diameter endpoints to indicate the\n   relative priority of Diameter
    transactions.  With this information,\n   Diameter nodes can factor that priority
    into routing, resource\n   allocation, and overload abatement decisions.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7944.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Applicability . . . . . . . . . . . . . . . . . . .
    . . .   3\n   2.  Terminology and Abbreviations . . . . . . . . . . . . . . .
    .   4\n   3.  Conventions Used in This Document . . . . . . . . . . . . . .   4\n
    \  4.  Problem Statement . . . . . . . . . . . . . . . . . . . . . .   5\n   5.
    \ Use Cases . . . . . . . . . . . . . . . . . . . . . . . . . .   6\n     5.1.
    \ First-Responder-Related Signaling . . . . . . . . . . . .   6\n     5.2.  Emergency-Call-Related
    Signaling  . . . . . . . . . . . .   6\n     5.3.  Differentiated Services . .
    . . . . . . . . . . . . . . .   7\n     5.4.  Application-Specific Priorities
    . . . . . . . . . . . . .   7\n   6.  Theory of Operation . . . . . . . . . .
    . . . . . . . . . . .   8\n   7.  Extensibility . . . . . . . . . . . . . . .
    . . . . . . . . .  10\n   8.  Normative Behavior  . . . . . . . . . . . . . .
    . . . . . . .  10\n   9.  Attribute Value Pairs . . . . . . . . . . . . . . .
    . . . . .  12\n     9.1.  DRMP AVP  . . . . . . . . . . . . . . . . . . . . .
    . . .  12\n     9.2.  Attribute Value Pair Flag Rules . . . . . . . . . . . .
    .  13\n   10. Considerations When Defining Application Priorities . . . . .  14\n
    \  11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15\n     11.1.
    \ AVP Codes  . . . . . . . . . . . . . . . . . . . . . . .  15\n   12. Security
    Considerations . . . . . . . . . . . . . . . . . . .  15\n     12.1.  Potential
    Threat Modes . . . . . . . . . . . . . . . . .  15\n     12.2.  Denial-of-Service
    Attacks  . . . . . . . . . . . . . . .  16\n     12.3.  End-to-End Security Issues
    . . . . . . . . . . . . . . .  16\n   13. References  . . . . . . . . . . . .
    . . . . . . . . . . . . .  17\n     13.1.  Normative References . . . . . . .
    . . . . . . . . . . .  17\n     13.2.  Informative References . . . . . . . .
    . . . . . . . . .  17\n   Contributors  . . . . . . . . . . . . . . . . . . .
    . . . . . . .  18\n   Author's Address  . . . . . . . . . . . . . . . . . . .
    . . . . .  18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Diameter Overload Indication Conveyance (DOIC) solution
    [RFC7683]\n   for Diameter overload control introduces scenarios where Diameter\n
    \  routing decisions made by Diameter nodes can be influenced by the\n   overload
    state of other Diameter nodes.  This includes the scenarios\n   where Diameter
    endpoints and Diameter Agents can throttle requests as\n   a result of the target
    for the request being overloaded.\n   With currently available mechanisms, these
    Diameter nodes do not have\n   a mechanism to differentiate request message priorities
    when making\n   these throttling decisions.  As such, all requests are treated
    the\n   same, meaning that all requests have the same probability of being\n   throttled.\n
    \  There are scenarios where treating all requests the same can cause\n   issues.
    \ For instance, it might be considered important to reduce the\n   probability
    of transactions involving first responders being\n   throttled during overload
    scenarios caused, for example, by a period\n   of heavy signaling resulting from
    a natural disaster.\n   This document defines a mechanism that allows Diameter
    nodes to\n   indicate the relative priority of Diameter transactions.  With this\n
    \  information, other Diameter nodes can factor the relative priority of\n   requests
    into routing and throttling decisions.\n"
  - contents:
    - "1.1.  Applicability\n   There are two primary considerations that must be addressed
      for the\n   mechanism described in this document to work effectively.  The first\n
      \  takes into consideration the fact that the Diameter base protocol\n   defined
      in [RFC6733]  is designed to transport multiple Diameter\n   applications and
      that Diameter nodes can be implemented that support\n   multiple applications.
      \ In order for the Diameter Routing Message\n   Priority (DRMP) mechanism to
      work, the priorities defined for all\n   messages across all applications used
      in a Diameter administrative\n   domain must be defined in a consistent and
      coordinated fashion,\n   taking the default priority into account.  See Section
      10 for a\n   discussion of some of the considerations that need to be factored\n
      \  into the setting of DRMPs used by Diameter applications.\n      Note that
      this consideration does not apply to Diameter networks\n      where all Diameter
      nodes only support a single application.\n   Without this cross application
      priority design taken into\n   consideration, it is possible for messages for
      one application to\n   gain unwarranted preferential treatment over messages
      for other\n   applications.\n   This mechanism also depends on all of the messages
      that carry the\n   DRMP Attribute Value Pair (AVP) that are inserted into Diameter\n
      \  messages by trusted nodes within the Diameter administrative domain.\n   As
      discussed in Section 12, misbehaving nodes have the ability to use\n   the DRMP
      mechanism to gain unwarranted preferential treatment.\n   When messages cross
      Diameter administrative boundaries, care should\n   be taken to either strip
      or modify the DRMP values in these messages.\n   If the priority definitions
      vary between the two Diameter\n   administrative domains, then it is possible
      for messages from a\n   foreign domain to gain unwarranted preferential treatment.\n"
    title: 1.1.  Applicability
  title: 1.  Introduction
- contents:
  - "2.  Terminology and Abbreviations\n   Diversion\n      As defined in [RFC7683].
    \ An overload abatement treatment where\n      the reacting node selects alternate
    destinations or paths for\n      requests.\n   DOIC\n      Diameter Overload Indication
    Conveyance.\n   DRMP\n      Diameter Routing Message Priority.\n   Overload Abatement\n
    \     As defined in [RFC7683].  Reaction to receipt of an overload\n      report
    resulting in a reduction in traffic sent to the reporting\n      node.  Abatement
    actions include diversion and throttling.\n   Priority\n      The relative importance
    of a Diameter message.  A lower-priority\n      value implies a higher relative
    importance of the message.\n   Throttling\n      As defined in [RFC7683].  An
    abatement treatment that limits the\n      number of requests sent by the DOIC
    reacting node.  Throttling can\n      include a Diameter Client choosing to not
    send requests or a\n      Diameter Agent or Server rejecting requests with appropriate
    error\n      responses.  In both cases, the result of the throttling is a\n      permanent
    rejection of the transaction.\n"
  title: 2.  Terminology and Abbreviations
- contents:
  - "3.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n   The interpretation from RFC 2119 does not apply for the above
    listed\n   words when they are not used in all caps.\n"
  title: 3.  Conventions Used in This Document
- contents:
  - "4.  Problem Statement\n   With the introduction of overload control mechanisms,
    Diameter nodes\n   will be required to make decisions regarding which Diameter
    request\n   messages should be throttled as a result of overloaded Diameter\n
    \  nodes.\n   There is currently no generic mechanism to indicate which request\n
    \  messages should be given preferential treatment when these throttling\n   decisions
    are made.\n   As a result, all messages are treated equally and, as such, have
    an\n   equal probability of being throttled.\n   There are a number of scenarios
    where it is appropriate for an\n   application to mark a request as being of a
    higher priority than\n   other application requests.  These are discussed in the
    next section.\n   This document defines a mechanism for applications to indicate\n
    \  priority for individual transactions, reducing the probability of\n   those
    transactions being throttled if there are other lower-priority\n   transactions
    that are eligible for throttling treatment.\n   While the primary usage of DRMP-defined
    priorities is for input to\n   throttling decisions related to Diameter overload
    control, it is also\n   expected that the priority information could also be used
    for other\n   routing-related functionality.  This might include giving higher-\n
    \  priority transactions preferential treatment when selecting routes.\n   It
    is also envisioned that DRMP information could be used by Diameter\n   endpoints
    to make resource allocation decisions.  For instance, a\n   Diameter Server might
    choose to use the priority information to treat\n   higher-priority requests ahead
    of lower-priority requests.  It might\n   also use the priority information as
    a reason to fail a request as a\n   result of insufficient resources.\n      Note:
    There are a number of application-specific definitions\n      indicating various
    views of application-level priority for\n      different requests.  Using these
    application-specific priority\n      AVPs as input to throttling and other Diameter
    routing decisions\n      would require Diameter Agents to understand all applications
    and\n      do application-specific parsing of all messages in order to\n      determine
    the priority of individual messages.  This is considered\n      an unacceptable
    level of complexity to put on elements whose\n      primary responsibility is
    to route Diameter messages.\n"
  title: 4.  Problem Statement
- contents:
  - "5.  Use Cases\n   This section discusses various scenarios where Diameter transactions\n
    \  can benefit from the use of priority information.\n   It is important to note
    that for priority information to be reliably\n   usable, the Diameter nodes sending
    and consuming DRMP AVPs must have\n   pre-established trust relationships of the
    sort described in\n   Section 12.\n"
  - contents:
    - "5.1.  First-Responder-Related Signaling\n   Natural disasters can result in
      a considerable increase in usage of\n   network resources.  This can be made
      worse if the disaster results in\n   a loss of network capacity.\n   The combination
      of added load and reduced capacity can lead to\n   Diameter nodes becoming overloaded
      and, as a result, the use of DOIC\n   mechanisms to request a reduction in traffic.
      \ In turn, this results\n   in requests being throttled in an attempt to control
      the overload\n   scenario and prevent the overloaded node from failing.\n   There
      is the need for first responders and other individuals\n   responsible for handling
      the after effects of the disaster to be\n   assured that they can gain access
      to the network resources in order\n   to communicate both between themselves
      and with other network\n   resources.\n   Signaling associated with first responders
      needs to be given a higher\n   priority to help ensure they can most effectively
      do their jobs.\n   The United States Wireless Priority Services (WPS) and Government\n
      \  Emergency Telecommunications Service (GETS) are examples of systems\n   designed
      to address the command and control aspects of these first\n   responder needs.\n"
    title: 5.1.  First-Responder-Related Signaling
  - contents:
    - "5.2.  Emergency-Call-Related Signaling\n   Similar to the first responder scenario,
      there is also signaling\n   associated with emergency calls.  Given the critical
      nature of these\n   emergency calls, this signaling should also be given preferential\n
      \  treatment when possible.\n"
    title: 5.2.  Emergency-Call-Related Signaling
  - contents:
    - "5.3.  Differentiated Services\n   Operators may desire to differentiate network-based
      services by\n   providing a service level agreement (SLA) that includes preferential\n
      \  Diameter routing behavior.  This might, for example, be modeled as\n   Platinum,
      Gold, and Silver levels of service.\n   In this scenario, an operator might
      offer a Platinum SLA that\n   includes ensuring that all signaling for a customer
      who purchases the\n   Platinum service is being marked as having a higher priority
      than\n   signaling associated with Gold and Silver customers.\n"
    title: 5.3.  Differentiated Services
  - contents:
    - "5.4.  Application-Specific Priorities\n   There are scenarios within Diameter
      applications where it might be\n   appropriate to give a subset of the transactions
      for the application\n   a higher priority than other transactions for that application.\n
      \  For instance, when there is a series of transactions required for a\n   user
      to gain access to network services, it might be appropriate to\n   mark transactions
      that occur later in the series at a higher priority\n   than those that occur
      early in the series.  This would recognize that\n   there was potentially significant
      work done by the network already\n   that would be lost if those later transactions
      were throttled.\n   There are also scenarios where an agent cannot easily differentiate
      a\n   request that starts a session from requests that update or end\n   sessions.
      \ In these scenarios, it might be appropriate to mark the\n   requests that
      establish new sessions with a lower priority than\n   updates and session ending
      requests.  This also recognizes that more\n   work has already taken place for
      established sessions, and as a\n   result, it might be more harmful from a signaling
      point of view if\n   the session update and session ending requests were to
      be throttled.\n   There are also scenarios where the priority of requests for\n
      \  individual command codes within an application depends on the context\n   that
      exists when the request is sent.  There isn't always information\n   in the
      message from which this context can be determined by Diameter\n   nodes other
      than the node that originates the request.\n   This is similar to the scenario
      where a series of requests are needed\n   to access a network service.  It is
      different in that the series of\n   requests involves different application
      command codes.  In this\n   scenario, requests with the same command code have
      different implied\n   priorities.\n      One example of this is in the 3GPP
      application [S6a] where an\n      Update Location Request (ULR) resulting from
      a Mobility Management\n      Entity (MME) restoration procedure might be given
      a higher\n      priority than a ULR resulting from an initial attach.\n"
    title: 5.4.  Application-Specific Priorities
  title: 5.  Use Cases
- contents:
  - "6.  Theory of Operation\n   This section outlines the envisioned usage of DRMP.\n
    \  The expected behavior depends on the role (request sender, agent, or\n   request
    handler) of the Diameter node handling the request.\n   The following behavior
    is expected during the flow of a Diameter\n   transaction.\n   1.  Request sender
    -- The sender of a request, be it a Diameter\n       Client or a Diameter Server,
    determines the relative priority of\n       the request and includes that priority
    information in the\n       request.  The method for determining the relative priority
    is\n       application specific and is outside the scope of this\n       specification.
    \ The request sender also saves the priority\n       information with the transaction
    state.  This will be used when\n       handling the answer messages.\n   2.  Agents
    handling the request -- Agents use the priority\n       information when making
    routing decisions.  This can include\n       determining which requests to route
    first, which requests to\n       throttle, and where the request is routed.  For
    instance,\n       requests with higher priority might have a lower probability
    of\n       being throttled.  The mechanism for how the agent determines\n       which
    requests are candidates to be throttled is implementation\n       dependent and
    is outside the scope of this document.  Before\n       forwarding request messages,
    agents generally do not modify the\n       priority information present in the
    received request message nor\n       include the priority information when absent
    in the received\n       request message.  However, in some scenarios, agents can
    modify\n       the priority information, for example, edge agents modifying the\n
    \      priority values set by an adjacent operator.  There might be\n       other
    scenarios where a Diameter endpoint does not support the\n       DRMP mechanism,
    and agents insert the priority information in the\n       request messages for
    that non-supporting endpoint.  When\n       forwarding the request messages, the
    agent also saves the\n       transaction priority in the transaction state either
    as locally\n       managed state or using the Proxy-Info mechanism defined in\n
    \      [RFC6733].  This will be used when handling the associated answer\n       message
    for the transaction.\n   3.  Request handler -- The handler of the request, be
    it a Diameter\n       Server or a Diameter Client, can use the priority information
    to\n       determine how to handle the request.  This could include\n       determining
    the order in which requests are handled and resources\n       that are applied
    to the handling of the request.\n   4.  Answer sender -- The handler of the request
    is also the sender of\n       the answer.  The answer sender uses the priority
    information\n       received in the request message when sending the answer.  This\n
    \      implies that answers for higher-priority transactions are given\n       preferential
    treatment over lower-priority transactions.  The\n       answer sender also has
    the option of including priority\n       information in the answer message.  This
    is done when the answer\n       message needs to have a different priority than
    the priority\n       carried in the request message.  The priority included by
    the\n       answer sender is application specific.\n   5.  Agent handling the
    answer -- By default, agents handling answer\n       messages use the priority
    information stored with the transaction\n       state to determine the priority
    of relaying the answer message.\n       However, priority information included
    in the answer message,\n       when present, is used in place of the stored priority\n
    \      information.  The use of priority information implies that\n       answers
    for higher-priority transactions are given preferential\n       treatment over
    lower-priority transactions.  When forwarding the\n       answer messages, agents
    generally do not modify the priority\n       information present in the received
    answer messages nor include\n       the priority information when absent in the
    received answer\n       messages.  However, in some scenarios, agents can modify
    the\n       priority information, for example, edge agents modifying the\n       priority
    values set by an adjacent operator.  There might be\n       other scenarios where
    a Diameter endpoint does not support the\n       DRMP mechanism, and agents insert
    the priority information for\n       that non-supporting endpoint.\n   6.  Answer
    handler -- The answer handler uses the same method as the\n       agent to determine
    the priority of the answer message.  By\n       default, the handler of the answer
    message uses the priority\n       saved in the transaction's state.  Priority
    information in the\n       answer message is used when present.  The priority
    is used when\n       allocating resources for processing that occurs after the
    receipt\n       of the answer message.\n"
  title: 6.  Theory of Operation
- contents:
  - "7.  Extensibility\n   This document does not define extensibility mechanisms
    that are\n   specific to the DRMP mechanism.  As a result, any extension that\n
    \  requires new AVPs will be required to use existing Diameter\n   extensibility
    mechanisms defined in [RFC6733].\n"
  title: 7.  Extensibility
- contents:
  - "8.  Normative Behavior\n   This section contains the normative behavior associated
    with DRMP.\n   When routing priority information is available, Diameter nodes
    SHOULD\n   include Diameter routing message priority in the DRMP AVP in all\n
    \  Diameter request messages.\n      Note: The method of determining the priority
    value included in the\n      request is application specific and is not in the
    scope of this\n      specification.\n   The priority marking scheme does not require
    the Diameter Agents to\n   understand application-specific AVPs.\n   When available,
    Diameter nodes SHOULD use routing priority\n   information included in the DRMP
    AVP when making Diameter overload\n   throttling decisions.\n   Diameter Agents
    MAY use routing priority information included in the\n   DRMP AVP when relaying
    request and answer messages.  This includes\n   the selection of routes and the
    ordering of messages relayed.\n      Note: The priority information included in
    the DRMP AVP in request\n      messages applies to both the request message and,
    by default, the\n      answer message associated with the transaction.\n   While
    done only in exceptional circumstances, Diameter Agents MAY\n   modify priority
    information when relaying request and answer\n   messages.\n      Note: There
    might be scenarios where a Diameter Agent does modify\n      priority information.
    \ For instance, an edge agent might need to\n      modify the priority values
    set by an adjacent operator.\n   While done only in exceptional circumstances,
    Diameter Agents MAY add\n   priority information when relaying request and answer
    messages.\n      Note: There might be scenarios where a Diameter endpoint does
    not\n      support the DRMP mechanism, and agents insert priority information\n
    \     for that non-supporting endpoint.\n   Diameter endpoints MAY use routing
    priority information included in\n   the DRMP AVP when making resource allocation
    decisions for the\n   transaction associated with the request message that contains
    the\n   DRMP information.\n   Diameter endpoints MAY use routing priority information
    included in\n   the DRMP AVP when making resource allocation decisions for the\n
    \  transaction associated with the answer messages using the DRMP\n   information
    associated with the transaction.\n   Diameter endpoints MAY include the DRMP AVP
    in answer messages.  This\n   is done when the priority for the answer message
    needs to have a\n   different priority than the priority carried in the request
    message.\n   When determining the priority to apply to answer messages, Diameter\n
    \  nodes SHOULD use the priority indicated in the DRMP AVP carried in\n   the
    answer message, if it exists.  If there is not DRMP AVP in the\n   answer message,
    then the Diameter node SHOULD use the priority\n   indicated in the DRMP AVP of
    the associated request message.\n      Note: One method to determine what priority
    to apply to an answer\n      when there is no DRMP AVP in the answer message is
    to save the\n      priority included in the request message in the state associated\n
    \     with the Diameter transaction.  Another is to use the Proxy-Info\n      mechanism
    defined in [RFC6733].\n   Diameter nodes MUST have a default priority to apply
    to transactions\n   that do not have an explicit priority set in the DRMP AVP.\n
    \  In order to guarantee consistent handling of messages from non-\n   upgraded
    Diameter Clients, Diameter nodes SHOULD use the PRIORITY_10\n   priority as this
    default priority value.\n      PRIORITY_10 is a midrange priority that corresponds
    to \"normal\"\n      traffic and thus would be a suitable default for most deployments,\n
    \     while still allowing different Diameter applications to designate\n      other
    priorities for lower- and higher-priority traffic.\n      Note: This does not
    imply that a DRMP AVP is added to the message.\n      Rather, the message is treated
    the same as a message that has a\n      DRMP AVP with a priority value of PRIORITY_10.\n
    \  Diameter nodes MUST support the ability for the default priority to\n   be
    modified through local configuration interfaces.\n      Note: There are scenarios
    where operators might want to specify a\n      different default value for transactions
    that do not have an\n      explicit priority.  In this case, the operator-defined
    local\n      policy would override the use of PRIORITY_10 as the default\n      priority.\n
    \  When using DRMP information, Diameter nodes MUST use the default\n   priority
    for transactions that do not have priority specified in a\n   DRMP AVP.\n      Note:
    This guidance on the handling of messages without a priority\n      does not result
    in a Diameter Agent inserting a DRMP AVP into the\n      message.  Rather, it
    gives guidance on how that specific\n      transaction should be treated when
    its priority is compared with\n      other requests.  When a Diameter Agent relays
    the request, it will\n      not insert a DRMP AVP with a priority value of 10.\n
    \  When setting and using priorities, for all integers x,y in [0,15],\n   treat
    PRIORITY_<x> as lower priority than PRIORITY_<y> when y<x.\n      Note: As a result,
    PRIORITY_0 is the highest priority.\n"
  title: 8.  Normative Behavior
- contents:
  - "9.  Attribute Value Pairs\n   This section describes the encoding and semantics
    of the Diameter\n   Routing Message Priority AVP defined in this document.\n"
  - contents:
    - "9.1.  DRMP AVP\n   The DRMP (AVP code 301) is of type Enumerated.  The value
      of the AVP\n   indicates the routing message priority for the transaction.  The\n
      \  following values are defined:\n   PRIORITY_15 15  PRIORITY_15 is the lowest
      priority.\n   PRIORITY_14 14  PRIORITY_14 is a higher priority than PRIORITY_15
      and\n      a lower priority than PRIORITY_13.\n   PRIORITY_13 13  PRIORITY_13
      is a higher priority than PRIORITY_14 and\n      a lower priority than PRIORITY_12.\n
      \  PRIORITY_12 12  PRIORITY_12 is a higher priority than PRIORITY_13 and\n      a
      lower priority than PRIORITY_11.\n   PRIORITY_11 11  PRIORITY_11 is a higher
      priority than PRIORITY_12 and\n      a lower priority than PRIORITY_10.\n   PRIORITY_10
      10  PRIORITY_10 is a higher priority than PRIORITY_11 and\n      a lower priority
      than PRIORITY_9.\n   PRIORITY_9 9  PRIORITY_9 is a higher priority than PRIORITY_10
      and a\n      lower priority than PRIORITY_8.\n   PRIORITY_8 8  PRIORITY_8 is
      a higher priority than PRIORITY_9 and a\n      lower priority than PRIORITY_7.\n
      \  PRIORITY_7 7  PRIORITY_7 is a higher priority than PRIORITY_8 and a\n      lower
      priority than PRIORITY_6.\n   PRIORITY_6 6  PRIORITY_6 is a higher priority
      than PRIORITY_7 and a\n      lower priority than PRIORITY_5.\n   PRIORITY_5
      5  PRIORITY_5 is a higher priority than PRIORITY_6 and a\n      lower priority
      than PRIORITY_4.\n   PRIORITY_4 4  PRIORITY_4 is a higher priority than PRIORITY_5
      and a\n      lower priority than PRIORITY_3.\n   PRIORITY_3 3  PRIORITY_3 is
      a higher priority than PRIORITY_4 and a\n      lower priority than PRIORITY_2.\n
      \  PRIORITY_2 2  PRIORITY_2 is a higher priority than PRIORITY_3 and a\n      lower
      priority than PRIORITY_1.\n   PRIORITY_1 1  PRIORITY_1 is a higher priority
      than PRIORITY_2 and a\n      lower priority than PRIORITY_0.\n   PRIORITY_0
      0  Priority 0 is the highest priority.\n"
    title: 9.1.  DRMP AVP
  - contents:
    - "9.2.  Attribute Value Pair Flag Rules\n                                                         +---------+\n
      \                                                        |AVP Flag |\n                                                         |Rules
      \   |\n                                                         +----+----+\n
      \                             AVP   Section              |    |MUST|\n       Attribute
      Name         Code  Defined  Value Type  |MUST| NOT|\n      +--------------------------------------------------+----+----+\n
      \     |DRMP                    301  9.1      Enumerated  |    | V  |\n      +--------------------------------------------------+----+----+\n"
    title: 9.2.  Attribute Value Pair Flag Rules
  title: 9.  Attribute Value Pairs
- contents:
  - "10.  Considerations When Defining Application Priorities\n   As discussed in
    Section 1.1, it is important that the definition of\n   priority values used by
    all applications within a single Diameter\n   administrative domain be done in
    a consistent and coordinated manner.\n   The following are some things to be considered
    when defining the\n   DRMPs to be used in Diameter networks that support Diameter
    nodes\n   handling multiple applications.\n   1.  As with any prioritization scheme,
    it is possible for higher-\n       priority messages to block lower-priority messages
    from ever\n       being handled.  In a Diameter network, this will often result
    in\n       those Diameter transactions being retried.  This can result in\n       more
    traffic than the network would have handled without use of\n       the DRMP mechanism.\n
    \      One potential guideline to prevent unwanted starving of lower-\n       priority
    messages is to have higher-priority messages represent a\n       relatively small
    portion of messages handled by the Diameter\n       network under normal scenarios.\n
    \         Note that there are scenarios, such as first responder\n          messages,
    where the blocking of lower-priority messages is a\n          requirement.\n   2.
    \ When setting priorities for any of the use cases outlined in\n       Section
    5, it is important to use the same priority values across\n       applications.
    \ For instance, when defining priority for the first\n       responder use case
    discussed in Section 5.1 and the emergency\n       call use case discussed in
    Section 5.2, one high-priority value\n       might be used for all first responder
    messages, say PRIORITY_2,\n       and a slightly lower-priority value, say PRIORITY_3,
    might be\n       used for emergency-call-related messages.  These values should
    be\n       specified for these use cases across all applications used within\n
    \      the Diameter administrative domain.\n          Note that the values mentioned
    here are strictly for\n          illustrative purposes.  The actual values used
    for these use\n          cases are likely to be different.\n   3.  Messages without
    the DRMP AVP will be given default priority\n       value treatment.  This will
    include messages from Diameter\n       Clients that have not been updated to support
    the DRMP mechanism.\n       It might also include messages from foreign administrative\n
    \      domains if the DRMP AVPs are stripped from messages crossing the\n       Diameter
    administrative domains.\n   4.  The process used to introduce the DRMP mechanism
    into a Diameter\n       network should also be taken into consideration.  Messages
    of the\n       same type within the same application might get different\n       treatment
    depending on whether those messages are sent from nodes\n       that are upgraded
    to support the DRMP mechanism versus nodes that\n       have not yet been upgraded
    to support the DRMP mechanism.\n"
  title: 10.  Considerations When Defining Application Priorities
- contents:
  - '11.  IANA Considerations

    '
  - contents:
    - "11.1.  AVP Codes\n   The new AVP defined by this specification is listed in
      Section 9.\n   All AVP codes are allocated from the \"AVP Codes\" subregistry
      of the\n   \"Authentication, Authorization, and Accounting (AAA) Parameters\"\n
      \  registry.\n"
    title: 11.1.  AVP Codes
  title: 11.  IANA Considerations
- contents:
  - "12.  Security Considerations\n   DRMP gives Diameter nodes the ability to influence
    which requests are\n   throttled during overload scenarios.  In addition, DRMP
    can be used\n   in determining the routing decisions for request messages.  Improper\n
    \  use of the DRMP mechanism could result in the malicious Diameter node\n   gaining
    preferential treatment, by reducing the probability of its\n   requests being
    throttled, over other Diameter nodes.  This would be\n   achieved by the malicious
    node inserting priority values that are\n   artificially high.\n   Diameter does
    not include features to provide end-to-end\n   authentication, integrity protection,
    or confidentiality.  This opens\n   the possibility that malicious or compromised
    agents in the path of a\n   request could modify the DRMP AVP to reflect a priority
    different\n   than that asserted by the sender of the request.\n"
  - contents:
    - "12.1.  Potential Threat Modes\n   The Diameter protocol involves transactions
      in the form of requests\n   and answers exchanged between clients and servers.
      \ These clients and\n   servers may be peers; that is, they may share a direct
      transport\n   (e.g., the Transmission Control Protocol (TCP) or Stream Control\n
      \  Transmission Protocol (SCTP)) connection, or the messages may\n   traverse
      one or more intermediaries, known as Diameter Agents.\n   Diameter nodes use
      Transport Layer Security (TLS), Datagram Transport\n   Layer Security (DTLS),
      or IPsec to authenticate peers and to provide\n   confidentiality and integrity
      protection of traffic between peers.\n   Nodes can make authorization decisions
      based on the peer identities\n   authenticated at the transport layer.\n   When
      agents are involved, this presents an effectively transitive\n   trust model.
      \ That is, a Diameter Client or Server can authorize an\n   agent for certain
      actions, but it must trust that agent to make\n   appropriate authorization
      decisions about its peers, and so on.\n   Since confidentiality and integrity
      protection occurs at the\n   transport layer, agents can read, and perhaps modify,
      any part of a\n   Diameter message, including the DRMP AVP.\n   There are several
      ways an attacker might attempt to exploit the DRMP\n   mechanism.  A malicious
      or compromised Diameter node might insert\n   invalid priority values resulting
      in either preferential treatment,\n   resulting from higher values, or degraded
      treatment resulting from\n   lower values, for that node.\n   A similar attack
      involves a malicious or compromised Diameter Agent\n   changing the priority
      value resulting in the sending Diameter node\n   getting either preferential
      or degraded service.\n   The DRMP mechanism can be used to aid in overload throttling\n
      \  decisions.  When this is the case, then the above attacks are limited\n   in
      scope to when one or more Diameter nodes are in an overloaded\n   state.\n   The
      DRMP mechanism can also be used to influence the order in which\n   Diameter
      messages are handled by Diameter nodes.  The above attacks\n   have a potentially
      greater impact in this scenario as the priority\n   indication impacts the handling
      of all requests at all times,\n   independent of the overload status of Diameter
      nodes in the Diameter\n   network.\n"
    title: 12.1.  Potential Threat Modes
  - contents:
    - "12.2.  Denial-of-Service Attacks\n   The DRMP mechanism does not open direct
      denial-of-service attack\n   vectors.  Rather, it introduces a mechanism where
      a node can gain\n   unwarranted preferential treatment.  It also introduces
      a mechanism\n   where a node can get degraded service in the scenario where
      a rogue\n   agent changes the priority value included in messages.\n"
    title: 12.2.  Denial-of-Service Attacks
  - contents:
    - "12.3.  End-to-End Security Issues\n   The lack of end-to-end integrity features
      in Diameter [RFC6733] makes\n   it difficult to establish trust in DRMP AVPs
      received from non-\n   adjacent nodes.  Any agents in the message path may insert
      or modify\n   DRMP AVPs.  Nodes must trust that their adjacent peers perform
      proper\n   checks on overload reports from their peers, and so on, creating
      a\n   transitive-trust requirement extending for potentially long chains of\n
      \  nodes.  Network operators must determine if this transitive trust\n   requirement
      is acceptable for their deployments.  Nodes supporting\n   DRMP MUST give operators
      the ability to select which peers are\n   trusted to deliver DRMP AVPs, and
      whether they are trusted to forward\n   the DRMP AVPs from non-adjacent nodes.
      \ Diameter nodes MUST strip\n   DRMP AVPs from messages received from peers
      that are not trusted for\n   DRMP purposes.\n   It is expected that work on
      end-to-end Diameter security might make\n   it easier to establish trust in
      non-adjacent nodes for DRMP purposes.\n   Readers should be reminded, however,
      that the DRMP mechanism allows\n   Diameter Agents to modify AVPs in existing
      messages that are\n   originated by other nodes.  If end-to-end security is
      enabled, there\n   is a risk that such modification could violate integrity
      protection.\n   The details of using any future Diameter end-to-end security\n
      \  mechanism with DRMP will require careful consideration and are beyond\n   the
      scope of this document.\n"
    title: 12.3.  End-to-End Security Issues
  title: 12.  Security Considerations
- contents:
  - '13.  References

    '
  - contents:
    - "13.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC6733]  Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n              Ed.,
      \"Diameter Base Protocol\", RFC 6733,\n              DOI 10.17487/RFC6733, October
      2012,\n              <http://www.rfc-editor.org/info/rfc6733>.\n"
    title: 13.1.  Normative References
  - contents:
    - "13.2.  Informative References\n   [RFC7683]  Korhonen, J., Ed., Donovan, S.,
      Ed., Campbell, B., and L.\n              Morand, \"Diameter Overload Indication
      Conveyance\",\n              RFC 7683, DOI 10.17487/RFC7683, October 2015,\n
      \             <http://www.rfc-editor.org/info/rfc7683>.\n   [S6a]      3GPP,
      \"Evolved Packet System (EPS); Mobility Management\n              Entity (MME)
      and Serving GPRS Support Node (SGSN) related\n              interfaces based
      on Diameter protocol\", 3GPP TS\n              29.272, 14.0.0, June 2016,\n
      \             <http://www.3gpp.org/ftp/Specs/html-info/29272.htm>.\n"
    title: 13.2.  Informative References
  title: 13.  References
- contents:
  - "Contributors\n   The following person contributed substantial ideas, feedback,
    and\n   discussion to this document:\n   o  Janet P. Gunn\n"
  title: Contributors
- contents:
  - "Author's Address\n   Steve Donovan\n   Oracle\n   7460 Warren Parkway\n   Frisco,
    Texas  75034\n   United States of America\n   Email: srdonovan@usdonovans.com\n"
  title: Author's Address
