- title: __initial_text__
  contents:
  - "             MIKEY-SAKKE: Sakai-Kasahara Key Encryption in\n                \
    \   Multimedia Internet KEYing (MIKEY)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Multimedia Internet KEYing-Sakai-Kasahara\n\
    \   Key Encryption (MIKEY-SAKKE), a method of key exchange that uses\n   Identity-based\
    \ Public Key Cryptography (IDPKC) to establish a shared\n   secret value and certificateless\
    \ signatures to provide source\n   authentication.  MIKEY-SAKKE has a number of\
    \ desirable features,\n   including simplex transmission, scalability, low-latency\
    \ call setup,\n   and support for secure deferred delivery.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It has been approved for\
    \ publication by the Internet\n   Engineering Steering Group (IESG).  Not all\
    \ documents approved by the\n   IESG are a candidate for any level of Internet\
    \ Standard; see Section\n   2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6509.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements Terminology ...................................3\n  \
    \ 2. A New MIKEY Mode: MIKEY-SAKKE ...................................4\n    \
    \  2.1. Outline ....................................................4\n      \
    \     2.1.1. Parameters ..........................................5\n        \
    \   2.1.2. Key Types ...........................................5\n      2.2.\
    \ Preparing and Processing MIKEY-SAKKE Messages ..............6\n           2.2.1.\
    \ Components of the I_MESSAGE .........................6\n           2.2.2. Processing\
    \ the I_MESSAGE ............................7\n      2.3. Forking and Retargeting\
    \ ....................................8\n      2.4. Group Communications .......................................9\n\
    \      2.5. Deferred Delivery ..........................................9\n  \
    \ 3. Key Management ..................................................9\n    \
    \  3.1. Generating Keys from the Shared Secret Value ...............9\n      3.2.\
    \ Identifiers ...............................................10\n      3.3. Key\
    \ Longevity and Update ..................................11\n      3.4. Key Delivery\
    \ ..............................................12\n   4. Payload Encoding ...............................................12\n\
    \      4.1. Common Header Payload (HDR) ...............................12\n  \
    \    4.2. SAKKE Payload .............................................13\n    \
    \  4.3. SIGN Payload ..............................................14\n      4.4.\
    \ IDR Payload ...............................................14\n   5. Applicability\
    \ of MIKEY-SAKKE Mode ..............................14\n   6. Security Considerations\
    \ ........................................14\n      6.1. Forking ...................................................15\n\
    \      6.2. Retargeting ...............................................16\n  \
    \    6.3. Group Calls ...............................................16\n    \
    \  6.4. Deferred Delivery .........................................16\n   7. IANA\
    \ Considerations ............................................16\n   8. References\
    \ .....................................................17\n      8.1. Normative\
    \ References ......................................17\n      8.2. Informative\
    \ References ....................................18\n   Appendix A. Parameters\
    \ for Use in MIKEY-SAKKE......................20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Multimedia Internet KEYing (MIKEY) [RFC3830] defines a protocol\n\
    \   framework for key distribution and specifies key distribution methods\n  \
    \ using pre-shared keys, RSA, and, optionally, a Diffie-Hellman Key\n   Exchange.\
    \  Since the original specification, several alternative key\n   distribution\
    \ methods for MIKEY have been proposed such as [RFC4650],\n   [RFC4738], [RFC6043],\
    \ and [RFC6267].\n   This document describes MIKEY-SAKKE, a method for key exchange\
    \ and\n   source authentication designed for use in IP Multimedia Subsystem\n\
    \   (IMS) [3GPP.33.328] Media Plane Security, but with potential for\n   wider\
    \ applicability.  This scheme makes use of a Key Management\n   Service (KMS)\
    \ as a root of trust and distributor of key material.\n   The KMS provides users\
    \ with assurance of the authenticity of the\n   peers with which they communicate.\
    \  Unlike traditional key\n   distribution systems, MIKEY-SAKKE does not require\
    \ the KMS to offer\n   high availability.  Rather, it need only distribute new\
    \ keys to its\n   users periodically.\n   MIKEY-SAKKE consists of an Identity-based\
    \ Public Key Cryptography\n   (IDPKC) scheme based on that of Sakai and Kasahara\
    \ [S-K], and a\n   source authentication algorithm that is tailored to use Identifiers\n\
    \   instead of certificates.  The algorithms behind this protocol are\n   described\
    \ in [RFC6507] and [RFC6508].\n   The primary motivation for the MIKEY protocol\
    \ design is the low-\n   latency requirement of real-time communication; hence,\
    \ many of the\n   defined exchanges finish in one-half to one roundtrip.  However,\
    \ some\n   exchanges, such as those described in [RFC6043] and [RFC6267], have\n\
    \   been proposed that extend the latency of the protocol with the intent\n  \
    \ of providing additional security.  MIKEY-SAKKE affords similarly\n   enhanced\
    \ security, but requires only a single simplex transmission\n   (one-half roundtrip).\n\
    \   MIKEY-SAKKE additionally offers support for scenarios such as\n   forking,\
    \ retargeting, deferred delivery, and pre-encoded content.\n"
- title: 1.1.  Requirements Terminology
  contents:
  - "1.1.  Requirements Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n"
- title: '2.  A New MIKEY Mode: MIKEY-SAKKE'
  contents:
  - '2.  A New MIKEY Mode: MIKEY-SAKKE

    '
- title: 2.1.  Outline
  contents:
  - "2.1.  Outline\n   The proposed MIKEY mode requires a single simplex transmission.\
    \  The\n   Initiator sends a MIKEY I_MESSAGE containing SAKKE Encapsulated Data\n\
    \   and a signature to the intended recipient.  The Responder MUST\n   validate\
    \ the signature.  Following signature validation, the\n   Responder processes\
    \ the Encapsulated Data according to the operations\n   defined in [RFC6508] to\
    \ derive a Shared Secret Value (SSV).  This SSV\n   is used as the TGK (the TEK\
    \ Generation Key defined in [RFC3830]).\n   A verification message from the Responder\
    \ (as in pre-shared key mode,\n   for example) is not needed, as the parties are\
    \ mutually authenticated\n   following processing of the single I_MESSAGE.  The\
    \ notation used for\n   MIKEY messages and their payloads in Figure 1, and in\
    \ the rest of\n   this document, is defined in [RFC3830].\n            Initiator\
    \                                   Responder\n            I_MESSAGE =\n     \
    \       HDR, T, RAND, [IDRi], [IDRr], [IDRkmsi], [IDRkmsr],\n            [CERT],\
    \ {SP}, SAKKE, SIGN        --->\n                    Figure 1: MIKEY-SAKKE Unicast\
    \ Mode\n   The Initiator wants to establish a secure media session with the\n\
    \   Responder.  The Initiator and the Responder trust a third party, the\n   KMS,\
    \ which provisions them with key material by a secure mechanism.\n   In addition\
    \ to the public and secret keys corresponding to their\n   Identifier, the KMS\
    \ MUST provision devices with its KMS Public Key\n   and, where [RFC6507] is used,\
    \ its KMS Public Authentication Key.  A\n   description of all key material used\
    \ in MIKEY-SAKKE can be found in\n   Section 2.1.2.  The Initiator and the Responder\
    \ do not share any\n   credentials; instead, the Initiator is able to derive the\
    \ Responder's\n   public Identifier.\n   Implementations MAY provide support for\
    \ multiple KMSs.  In this case,\n   rather than a single KMS, several different\
    \ KMSs could be involved,\n   e.g., one for the Initiator and one for the Responder.\
    \  To allow\n   this, each interoperating KMS MUST provide its users with the\
    \ KMS\n   public keys for every KMS subscriber domain with which its users\n \
    \  communicate.  It is not anticipated that large mutually communicating\n   groups\
    \ of KMSs will be needed, as each KMS only needs to provide its\n   domain of\
    \ devices with key material once per key period (see\n   Section 3.3) rather than\
    \ to be active in each call.\n   As MIKEY-SAKKE is based on [RFC3830], the same\
    \ terminology,\n   processing, and considerations still apply unless otherwise\
    \ stated.\n   Following [RFC3830], messages are integrity protected and encryption\n\
    \   is not applied to entire messages.\n"
- title: 2.1.1.  Parameters
  contents:
  - "2.1.1.  Parameters\n   [RFC6508] requires each application to define the set\
    \ of public\n   parameters to be used by implementations.  The parameters in\n\
    \   Appendix A SHOULD be used in MIKEY-SAKKE; alternative parameters MAY\n   be\
    \ subsequently defined; see Section 4.2.\n   [RFC6507] requires each application\
    \ to define the hash function and\n   various other parameters to be used (see\
    \ Section 4.1 of [RFC6507]).\n   For MIKEY-SAKKE, the P-256 elliptic curve and\
    \ base point [FIPS186-3]\n   and SHA-256 [FIPS180-3] MUST be used.\n"
- title: 2.1.2.  Key Types
  contents:
  - "2.1.2.  Key Types\n   Users require keys for [RFC6508] and to sign messages.\
    \  These keys\n   MUST be provided by the users' KMS.  It is RECOMMENDED that\n\
    \   implementations support the scheme for signatures described in\n   [RFC6507].\
    \  Alternatively, RSA signing as defined in [RFC3830] MAY be\n   used.\n   SAKKE\
    \ keys\n      SAKKE requires each user to have a Receiver Secret Key, created\
    \ by\n      the KMS, and the KMS Public Key.  For systems that support\n     \
    \ multiple KMSs, each user also requires the KMS Public Key of every\n      KMS\
    \ subscriber domain with which communication is authorized.\n   ECCSI keys\n \
    \     If the Elliptic Curve-based Certificateless Signatures for\n      Identity-based\
    \ Encryption (ECCSI) signatures are used, each user\n      requires a Secret Signing\
    \ Key and Public Validation Token, created\n      by the KMS, and the KMS Public\
    \ Authentication Key.  For systems\n      that support multiple KMSs, each user\
    \ also requires the KMS Public\n      Authentication Key of every KMS subscriber\
    \ domain with which\n      communication is authorized.\n   If instead RSA signatures\
    \ are to be used, certificates and\n   corresponding private keys MUST be supplied.\n"
- title: 2.2.  Preparing and Processing MIKEY-SAKKE Messages
  contents:
  - "2.2.  Preparing and Processing MIKEY-SAKKE Messages\n   Preparation and parsing\
    \ of MIKEY messages are as described in\n   Sections 5.2 and 5.3 of [RFC3830].\
    \  Error handling is described in\n   Section 5.1.2, and replay protection guidelines\
    \ are in Section 5.4 of\n   [RFC3830].  In the following, we describe the components\
    \ of\n   MIKEY-SAKKE messages and specify message processing and parsing rules\n\
    \   in addition to those in [RFC3830].\n"
- title: 2.2.1.  Components of the I_MESSAGE
  contents:
  - "2.2.1.  Components of the I_MESSAGE\n   MIKEY-SAKKE requires a single simplex\
    \ transmission (a half roundtrip)\n   to establish a shared TGK.  The I_MESSAGE\
    \ MUST contain the MIKEY\n   Common Header Payload HDR defined in [RFC6043] together\
    \ with the\n   timestamp payload in order to provide replay protection.  The HDR\n\
    \   field contains a CSB_ID (Crypto Session Bundle ID) randomly selected\n   by\
    \ the Initiator.  The V bit in the HDR payload MUST be set to '0'\n   and ignored\
    \ by the Responder, as a response is not expected in this\n   mode.  The timestamp\
    \ payload MUST use TS type NTP-UTC (TS type 0) or\n   NTP (TS type 1) as defined\
    \ in Section 6.6 of [RFC3830] so that the\n   Responder can determine the Identifiers\
    \ used by the Initiator (see\n   Section 3.2).  It is RECOMMENDED that the time\
    \ always be specified\n   in UTC.\n   The I_MESSAGE MUST be signed by the Initiator\
    \ following either the\n   procedure to sign MIKEY messages specified in [RFC3830],\
    \ or using\n   [RFC6507] as specified in this document.  The SIGN payload contains\n\
    \   this signature.  Thus, the I_MESSAGE is integrity and replay\n   protected.\
    \  The ECCSI signature scheme [RFC6507] SHOULD be used.  If\n   this signature\
    \ scheme is used, then the Initiator MUST NOT include a\n   CERT payload.  To\
    \ form this signature type, the Initiator requires a\n   Secret Signing Key that\
    \ is provided by the KMS.\n   Other signature types defined for use with MIKEY\
    \ MAY be used.  If\n   signature types 0 or 1 (RSA) are used, then the Initiator\
    \ SHOULD\n   include a CERT payload; in this case, the CERT payload MAY be left\n\
    \   out if it is expected that the Responder is able to obtain the\n   certificate\
    \ in some other manner.  If a CERT payload is included, it\n   MUST correspond\
    \ to the private key used to sign the I_MESSAGE.\n   The Initiator MUST include\
    \ a RAND payload in the I_MESSAGE, as this\n   is used to derive session keys.\n\
    \   The identities of the Initiator, Responder, the Initiator's KMS (root\n  \
    \ of trust for authentication of the Initiator), and the Responder's\n   KMS (root\
    \ of trust for authentication of the Responder) MAY be\n   contained in the IDRi,\
    \ IDRr, IDRkmsi, and IDRkmsr I_MESSAGEs,\n   respectively.  The ID Payload with\
    \ Role Indicator (IDR) is defined in\n   [RFC6043] and modified in Section 4.4.\
    \  When used, this payload\n   provides the Identifier for any of the Initiator,\
    \ the Responder, and\n   their respective KMSs.\n   The ID Role MUST be the Initiator\
    \ (value 1) for the IDRi payload and\n   Responder (value 2) for the IDRr payload.\
    \  The Initiator's ID is used\n   to validate signatures [RFC6507].  If included,\
    \ the IDRi payload MUST\n   contain the URI of the Initiator incorporated in the\
    \ Identifier used\n   to sign the I_MESSAGE (see Section 3.2).  If included, the\
    \ IDRr\n   payload MUST contain the URI of the Responder incorporated in the\n\
    \   Identifier that the Initiator used in SAKKE (see Section 3.2).  If\n   included,\
    \ the ID Role MUST be the Initiator's KMS (value 6) for the\n   IDRkmsi payload\
    \ and Responder's KMS (value 7) for the IDRkmsr payload\n   and MUST correspond\
    \ to the KMS used as root of trust for the\n   signature (for the IDRkmsi payload)\
    \ and the KMS used as the root of\n   trust for the SAKKE key exchange (for the\
    \ IDRkmsr payload).\n   It is OPTIONAL to include any IDR payloads, as in some\
    \ user groups\n   Identifiers could be inferred by other means, e.g., through\
    \ the\n   signaling used to establish a call.  Furthermore, a closed user group\n\
    \   could rely on only one KMS, whose identity will be understood and\n   need\
    \ not be included in the signaling.\n   The I_MESSAGE MUST contain a SAKKE payload\
    \ constructed as defined in\n   Section 4.2.\n   The Initiator MAY also send security\
    \ policy (SP) payload(s)\n   containing all the security policies that it supports.\
    \  If the\n   Responder does not support any of the policies included, it SHOULD\n\
    \   reply with an error message of type \"Invalid SPpar\" (Error no. 10).\n  \
    \ The Responder has the option not to send the error message in MIKEY\n   if a\
    \ generic session establishment failure indication is deemed\n   appropriate and\
    \ communicated via other means (see Section 4.1.2 of\n   [RFC4567] for additional\
    \ guidance).\n"
- title: 2.2.2.  Processing the I_MESSAGE
  contents:
  - "2.2.2.  Processing the I_MESSAGE\n   The Responder MUST process the I_MESSAGE\
    \ according to the rules\n   specified in Section 5.3 of [RFC3830].  The following\
    \ additional\n   processing MUST also be applied.\n   *  If the Responder does\
    \ not support the MIKEY-SAKKE mode of\n      operation, or otherwise cannot correctly\
    \ parse the received MIKEY\n      message, then it SHOULD send an error message\
    \ \"Unsupported message\n      type\" (Error no. 13).  Error no. 13 is not defined\
    \ in [RFC3830],\n      and so implementations compliant with [RFC3830] MAY return\
    \ an\n      \"Unspecified error\" (Error no. 12).\n   *  The Responder MAY compare\
    \ the IDi payload against his local policy\n      to determine whether he wishes\
    \ to establish secure communications\n      from the Initiator.  If the Responder's\
    \ policy does not allow this\n      communication, then the Responder MAY respond\
    \ with an \"Auth\n      failure\" error (Error no. 0).\n   *  If the Responder\
    \ supports MIKEY-SAKKE and has determined that it\n      wishes to establish secure\
    \ communications with the Initiator, then\n      it MUST verify the signature\
    \ according to the method described in\n      Section 5.2.2 of [RFC6507] if it\
    \ is of type 2, or according to the\n      certificate used if a signature of\
    \ type 0 or 1 is used.  If the\n      verification of the signature fails, then\
    \ an \"Auth failure\" error\n      (Error no. 0) MAY be sent to the Initiator.\n\
    \   *  If the authentication is successful, then the Responder SHALL\n      process\
    \ the SAKKE payload and derive the SSV according to the\n      method described\
    \ in [RFC6508].\n"
- title: 2.3.  Forking and Retargeting
  contents:
  - "2.3.  Forking and Retargeting\n   Where forking is to be supported, Receiver\
    \ Secret Keys can be held by\n   multiple devices.  To facilitate this, the Responder\
    \ needs to load\n   his Receiver Secret Key into each of his devices that he wishes\
    \ to\n   receive MIKEY-SAKKE communications.  If forking occurs, each of these\n\
    \   devices can then process the SAKKE payload, and each can verify the\n   Identifier\
    \ of the Initiator as they hold the KMS Public\n   Authentication Key.  Therefore,\
    \ the traffic keys could be derived by\n   any of these devices.  However, this\
    \ is the case for any scheme\n   employing simplex transmission, and it is considered\
    \ that the\n   advantages of this type of scheme are significant for many users.\n\
    \   Furthermore, it is for the owner of the Identifier to determine on\n   which\
    \ devices to allow his Receiver Secret Key to be loaded.  Thus,\n   it is anticipated\
    \ that he would have control over all devices that\n   hold his Receiver Secret\
    \ Key.  This argument also applies to\n   applications such as call centers, in\
    \ which the security relationship\n   is typically between the call center and\
    \ the individual calling the\n   center, rather than the particular operative\
    \ who receives the call.\n   Devices holding the same Receiver Secret Key ought\
    \ to each hold a\n   different Secret Signing Key corresponding to the same Identifier.\n\
    \   This is possible because the Elliptic Curve-based Certificateless\n   Signatures\
    \ for Identity-based Encryption (ECCSI) scheme allows\n   multiple keys to be\
    \ generated by KMS for the same Identifier.\n   Secure retargeted calls can only\
    \ be established in the situation\n   where the Initiator is aware of the Identifier\
    \ of the device to whom\n   the call is being retargeted; in this case, the Initiator\
    \ ought to\n   initiate a new MIKEY-SAKKE session with the device to whom it has\n\
    \   been retargeted (if willing to do so).  Retargeting an Initiator's\n   call\
    \ to another device (with a different Identifier) is to be viewed\n   as insecure\
    \ when the Initiator is unaware that this has occurred, as\n   this prevents authentication\
    \ of the Responder.\n"
- title: 2.4.  Group Communications
  contents:
  - "2.4.  Group Communications\n   SAKKE supports key establishment for group communications.\
    \  The\n   Initiator needs to form an I_MESSAGE for each member in the group,\n\
    \   each using the same SSV.  Alternatively, a bridge can be used.  In\n   this\
    \ case, the bridge forms an I_MESSAGE for each member of the\n   group.  Any member\
    \ of the group can invite new members directly by\n   forming an I_MESSAGE using\
    \ the group SSV.\n"
- title: 2.5.  Deferred Delivery
  contents:
  - "2.5.  Deferred Delivery\n   Deferred delivery / secure voicemail is fully supported\
    \ by MIKEY-\n   SAKKE.  A deferred delivery server that supports MIKEY-SAKKE needs\
    \ to\n   store the MIKEY-SAKKE I_MESSAGE along with the encrypted data.  When\n\
    \   the recipient of the voicemail requests his data, the server needs to\n  \
    \ initiate MIKEY-SAKKE using the stored I_MESSAGE.  Thus, the data can\n   be\
    \ received and decrypted only by a legitimate recipient, who can\n   also verify\
    \ the Identifier of the sender.  This requires no\n   additional support from\
    \ the KMS, and the deferred delivery server\n   need not be trusted, as it is\
    \ unable to read or tamper with the\n   messages it receives.  Note that the deferred\
    \ delivery server does\n   not need to fully implement MIKEY-SAKKE merely to store\
    \ and forward\n   the I_MESSAGE.\n   The deferred delivery message needs to be\
    \ collected by its recipient\n   before the key period in which it was sent expires\
    \ (see Section 3.3\n   for a discussion of key periods).  Alternatively, if greater\n\
    \   longevity of deferred delivery payloads is to be supported, the\n   Initiator\
    \ needs to include an I_MESSAGE for each key period during\n   the lifetime of\
    \ the deferred delivery message, each using the same\n   SSV.  In this case, the\
    \ deferred delivery server needs to forward the\n   I_MESSAGE corresponding to\
    \ the current key period to the recipient.\n"
- title: 3.  Key Management
  contents:
  - '3.  Key Management

    '
- title: 3.1.  Generating Keys from the Shared Secret Value
  contents:
  - "3.1.  Generating Keys from the Shared Secret Value\n   Once a MIKEY-SAKKE I_MESSAGE\
    \ has been successfully processed by the\n   Responder, he will share an authenticated\
    \ SSV with the Initiator.\n   This SSV is used as the TGK.  The keys used to protect\
    \ application\n   traffic are derived as specified in [RFC3830].\n"
- title: 3.2.  Identifiers
  contents:
  - "3.2.  Identifiers\n   One of the primary features and advantages of Identity-Based\n\
    \   Encryption (IBE) is that the public keys of users are their\n   Identifiers,\
    \ which can be constructed by their peers.  This removes\n   the need for Public\
    \ Key or Certificate servers, so that all data\n   transmission per session can\
    \ take place directly between the peers,\n   and high-availability security infrastructure\
    \ is not needed.  In\n   order for the Identifiers to be constructable, they need\
    \ to be\n   unambiguously defined.  This section defines the format of\n   Identifiers\
    \ for use in MIKEY-SAKKE.\n   If keys are updated regularly, a KMS is able to\
    \ revoke devices.  To\n   this end, every Identifier for use in MIKEY-SAKKE MUST\
    \ contain a\n   timestamp value indicating the key period for which the Identifier\
    \ is\n   valid (see Section 3.3).  This document uses a year and month format\n\
    \   to enforce monthly changes of key material.  Further Identifier\n   schemes\
    \ MAY be defined for communities that require different key\n   longevity.\n \
    \  An Identifier for use in MIKEY-SAKKE MUST take the form of a\n   timestamp\
    \ formatted as a US-ASCII string [ASCII] and terminated by a\n   null byte, followed\
    \ by identifying data which relates to the identity\n   of the device or user,\
    \ also represented by a US-ASCII string and\n   terminated by a null byte.\n \
    \  For the purposes of this document, the timestamp MUST take the form\n   of\
    \ a year and month value, formatted according to [ISO8601], with the\n   format\
    \ \"YYYY-MM\", indicating a four-digit year, followed by a hyphen\n   \"-\", followed\
    \ by a two-digit month.\n   For the Identifier scheme defined in this document,\
    \ the identifying\n   data MUST take the form of a constrained \"tel\" URI.  If\
    \ an\n   alternative URI scheme is to be used to form SAKKE Identifiers, a\n \
    \  subsequent RFC MUST define constraints to ensure that the URI can be\n   formed\
    \ unambiguously.  The normalization procedures described in\n   Section 6 of [RFC3986]\
    \ MUST be used as part of the constraining rules\n   for the URI format.  It would\
    \ also be possible to define Identifier\n   types that used identifying data other\
    \ than a URI.\n   The restrictions for the \"tel\" URI scheme [RFC3966] for use\
    \ in\n   MIKEY-SAKKE Identifiers are as follows:\n   *  the \"tel\" URI for use\
    \ in MIKEY-SAKKE MUST be formed in global\n      notation,\n   *  visual separators\
    \ MUST NOT be included,\n   *  the \"tel\" URI MUST NOT include additional parameters,\
    \ and\n   *  the \"tel\" URI MUST NOT include phone-context parameters.\n   These\
    \ constraints on format are necessary so that all parties can\n   unambiguously\
    \ form the \"tel\" URI.\n   For example, suppose a user's telephone number is\
    \ +447700900123 and\n   the month is 2011-02, then the user's Identifier is defined\
    \ as the\n   ASCII string:\n      2011-02\\0tel:+447700900123\\0,\n   where '\\\
    0' denotes the null 8-bit ASCII character 0x00.\n   If included in I_MESSAGE,\
    \ the IDRi and IDRr payloads MUST contain the\n   URI used to form the Identifier.\
    \  The value of the month used to form\n   the Identifiers MUST be equal to the\
    \ month as specified by the data\n   in the timestamp payload.\n"
- title: 3.3.  Key Longevity and Update
  contents:
  - "3.3.  Key Longevity and Update\n   Identifiers for use in MIKEY-SAKKE change\
    \ regularly in order to force\n   users to regularly update their key material;\
    \ we term the interval\n   for which a key is valid a \"key period\".  This means\
    \ that if a device\n   is compromised (and this is reported procedurally), it\
    \ can continue\n   to communicate with other users for at most one key period.\
    \  Key\n   periods SHOULD be indicated by the granularity of the format of the\n\
    \   timestamp used in the Identifier.  In particular, the Identifier\n   scheme\
    \ in this document uses monthly key periods.  Implementations\n   MUST allow devices\
    \ to hold two periods' keys simultaneously to allow\n   for differences in system\
    \ time between the Initiator and Responder.\n   Where a monthly key period applies,\
    \ it is RECOMMENDED that\n   implementations receive the new key material before\
    \ the\n   second-to-last day of the old month, commence allowing receipt of\n\
    \   calls with the new key material on the second-to-last day of the old\n   month,\
    \ and continue to allow receipt calls with the old key material\n   on the first\
    \ and second days of the new month.  Devices SHOULD cease\n   to receive calls\
    \ with key material corresponding to the previous\n   month on the third day of\
    \ the month; this is to allow compromised\n   devices to be keyed out of the communicating\
    \ user group.\n   KMSs MAY update their KMS Master Secret Keys and KMS Master\
    \ Secret\n   Authentication Keys.  If such an update is not deemed necessary,\
    \ then\n   the corresponding KMS Public Keys and KMS Public Authentication Keys\n\
    \   will be fixed.  If KMS keys are to be updated, then this update MUST\n   occur\
    \ at the change of a key period, and new KMS Public Key(s) and\n   KMS Public\
    \ Authentication Key(s) MUST be provided to all users with\n   their user key\
    \ material.\n   It is NOT RECOMMENDED for KMSs to distribute multiple key periods'\n\
    \   keys simultaneously, as this prevents the periodic change of keys\n   from\
    \ excluding compromised devices.\n"
- title: 3.4.  Key Delivery
  contents:
  - "3.4.  Key Delivery\n   This document does not seek to restrict the mechanisms\
    \ by which the\n   necessary key material might be obtained from the KMS.  The\n\
    \   mechanisms of [RFC5408] are not suitable for this application, as the\n  \
    \ MIKEY-SAKKE protocol does not require public parameters to be\n   obtained from\
    \ a server: these are fixed for all users in order to\n   facilitate interoperability\
    \ and simplify implementation.\n   The delivery mechanism used MUST provide confidentiality\
    \ to all\n   secret keys, integrity protection to all keys, and mutual\n   authentication\
    \ of the device and the KMS.\n"
- title: 4.  Payload Encoding
  contents:
  - "4.  Payload Encoding\n   This section describes the new SAKKE payload and also\
    \ the payloads\n   for which changes have been made compared to [RFC3830].  A\
    \ detailed\n   description of MIKEY payloads is provided in [RFC3830].\n"
- title: 4.1.  Common Header Payload (HDR)
  contents:
  - "4.1.  Common Header Payload (HDR)\n   An additional value is added to the data\
    \ type and next payload\n   fields.\n   *  Data type (8 bits): describes the type\
    \ of message.\n               Data type | Value | Comment\n               -----------------------------------------------\n\
    \               SAKKE msg |  26   | Initiator's SAKKE message\n              \
    \        Table 1: Data type (additions)\n   *  Next payload (8 bits): identifies\
    \ the payload that is added after\n      this payload.\n                     \
    \ Next payload | Value | Section\n                      -------------------------------\n\
    \                      SAKKE        |  26   | 4.2\n                      Table\
    \ 2: Next payload (additions)\n   *  V (1 bit): flag to indicate whether a response\
    \ message is expected\n      ('1') or not ('0').  It MUST be set to '0' and ignored\
    \ by the\n      Responder in a SAKKE message.\n"
- title: 4.2.  SAKKE Payload
  contents:
  - "4.2.  SAKKE Payload\n   The SAKKE payload contains the SAKKE Encapsulated Data\
    \ as defined in\n   [RFC6508].\n   1                   2                   3\n\
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Next payload  ! SAKKE params  !   ID scheme   !  SAKKE data   ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~ length (cont) !                  SAKKE data                   ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                          Table 3: SAKKE payload\n   *  Next payload (8 bits):\
    \ identifies the payload that is added after\n      this payload.\n   *  SAKKE\
    \ params (8 bits): indicates the SAKKE parameter set to be\n      used.\n    \
    \              SAKKE params                       | Value\n                  ------------------------------------------\n\
    \                  Parameter Set 1 (See Appendix A)   |     1\n              \
    \              Table 4: SAKKE params\n   *  ID scheme (8 bits): indicates the\
    \ SAKKE identifier scheme to be\n      used.\n             ID scheme         \
    \                           | Value\n             ----------------------------------------------------\n\
    \             tel URI with monthly keys (See Section 3.2)  |     1\n         \
    \                     Table 5: ID scheme\n   *  SAKKE data length (16 bits): length\
    \ of SAKKE data (in bytes).\n   *  SAKKE data (variable): the SAKKE Encapsulated\
    \ Data formatted as\n      defined in Section 4 of [RFC6508].\n"
- title: 4.3.  SIGN Payload
  contents:
  - "4.3.  SIGN Payload\n   To enable use of the ECCSI signature algorithm, which\
    \ has efficiency\n   benefits for use with Identity-based encryption, we define\
    \ an\n   additional signature type.\n   *  S type (4 bits): indicates the signature\
    \ algorithm applied by the\n      Signer.\n                          S type  |\
    \ Value | Comments\n                     -----------------------------------\n\
    \                      ECCSI   |   2   | ECCSI signature\n                   \
    \      Table 6: S type (additions)\n"
- title: 4.4.  IDR Payload
  contents:
  - "4.4.  IDR Payload\n   The IDR payload was defined in [RFC6043], but its definition\
    \ only\n   provided the facility to identify one KMS per exchange.  Since it is\n\
    \   possible that different KMSs could be used by the Initiator and\n   Responder,\
    \ this payload is extended to define an ID Role for the KMS\n   of the Initiator\
    \ and the KMS of the Responder.\n   *  ID Role (8 bits): specifies the sort of\
    \ identity.\n                      ID Role                   | Value\n       \
    \               ---------------------------------\n                        Initiator's\
    \ KMS (IDRkmsi) |  6\n                        Responder's KMS (IDRkmsr) |  7\n\
    \                         Table 7: ID Role (additions)\n"
- title: 5.  Applicability of MIKEY-SAKKE Mode
  contents:
  - "5.  Applicability of MIKEY-SAKKE Mode\n   MIKEY-SAKKE is suitable for use in\
    \ a range of applications in which\n   secure communications under a clear trust\
    \ model are needed.  In\n   particular, the KMS need not provide high availability,\
    \ as it is only\n   necessary to provide a periodic refresh of key material. \
    \ Devices are\n   provided with a high level of authentication, as the KMS acts\
    \ as a\n   root of trust for both key exchange and signatures.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Unless explicitly stated, the security properties\
    \ of the MIKEY\n   protocol as described in [RFC3830] apply to MIKEY-SAKKE as\
    \ well.  In\n   addition, MIKEY-SAKKE inherits some properties of Identity-based\n\
    \   cryptography.  For instance, by concatenating the \"date\" with the URI\n\
    \   to form the Identifier, the need for any key revocation mechanisms is\n  \
    \ virtually eliminated.  It is NOT RECOMMENDED for KMSs to distribute\n   multiple\
    \ months' keys simultaneously in an IBE system, as this\n   prevents the monthly\
    \ change of keys from excluding compromised\n   devices.\n   The solution proposed\
    \ provides protection suitable for high-security\n   user groups, but is scalable\
    \ enough that it could be used for large\n   numbers of users.  Traffic keys cannot\
    \ be derived by any\n   infrastructure component other than the KMS.\n   The effective\
    \ security of the public parameters defined in this\n   document is 112 bits,\
    \ as this is the security offered by the prime p\n   of size 1024 bits used in\
    \ SAKKE (see Section 7 of [RFC6508]).  For\n   similar parameter sizes, MIKEY-SAKKE\
    \ provides equivalent levels of\n   effective security to other schemes of this\
    \ type (such as [RFC6267]).\n   For reasons of efficiency and security, it is\
    \ RECOMMENDED to use a\n   mode of AES-128 [AES] in the traffic application to\
    \ which MIKEY-SAKKE\n   supplies key material, but users SHOULD be aware that\
    \ 112 bits of\n   security are offered by the defined public parameters.  Following\n\
    \   [SP800-57], this choice of security strength is appropriate for use\n   to\
    \ protect data until 2030.\n   User identities cannot be spoofed, since the Public\
    \ Authentication\n   Token is tied to the Identifier of the sender by the KMS.\
    \  In\n   particular, the Initiator is provided with assurance that nobody\n \
    \  other than a holder of the legitimate Receiver Secret Key can process\n   the\
    \ SAKKE Encapsulated Data, and the signature binds the holder of\n   the Initiator's\
    \ Secret Signing Key to the I_MESSAGE.  Since these\n   keys are provided via\
    \ a secure channel by the KMS, mutual\n   authentication is provided.  This mechanism\
    \ protects against both\n   passive and active attacks.\n   If there were a requirement\
    \ that a caller remain anonymous from any\n   called parties, then it would be\
    \ possible to remove the signature\n   from the protocol.  A called user could\
    \ then decide, according to\n   local policy, whether to accept such a secure\
    \ session.\n"
- title: 6.1.  Forking
  contents:
  - "6.1.  Forking\n   Where forking is used, the view is taken that it is not necessary\
    \ for\n   each device to have a separate Receiver Secret Key.  Rather, where a\n\
    \   user wishes his calls to be forked between his devices, he loads the\n   same\
    \ Receiver Secret Key onto each of them.  This does not compromise\n   his security\
    \ as he controls each of the devices, and is consistent\n   with the Initiator's\
    \ expectation that he is authenticated to the\n   owner of the Identifier he selected\
    \ when initiating the call.\n"
- title: 6.2.  Retargeting
  contents:
  - "6.2.  Retargeting\n   Since the Initiator is made aware by the forwarding server\
    \ of the\n   change to the Identifier of the Responder, he creates an I_MESSAGE\n\
    \   that can only be processed by this legitimate Responder.  The\n   Initiator\
    \ MAY also choose to discontinue the session after checking\n   his local policy.\n"
- title: 6.3.  Group Calls
  contents:
  - "6.3.  Group Calls\n   Any device that possesses an SSV can potentially provide\
    \ it securely\n   to any other device using SAKKE.  Thus, group calls can either\
    \ be\n   established by an Initiator, or can be extended to further Responders\n\
    \   by any party to whom the original Initiator has sent an I_MESSAGE.\n   The\
    \ Initiator in this context MAY be a conference bridge.  If a mode\n   of operation\
    \ in which a bridge has no knowledge of the SSV is needed,\n   the role of the\
    \ MIKEY-SAKKE Initiator MUST be carried out by one or\n   more of the communicating\
    \ parties, not by the bridge.\n   Where multi-way communications (rather than\
    \ broadcast) are needed,\n   the application using the supplied key material MUST\
    \ ensure that a\n   suitable Initialization Vector (IV) scheme is used in order\
    \ to\n   prevent cryptovariable re-use.\n"
- title: 6.4.  Deferred Delivery
  contents:
  - "6.4.  Deferred Delivery\n   Secure deferred delivery is supported in a manner\
    \ such that no trust\n   is placed on the deferred delivery server.  This is a\
    \ significant\n   advantage, as it removes the need for secure infrastructure\n\
    \   components beyond the KMS.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document defines new values for the namespaces\
    \ Data Type, Next\n   Payload, and S type defined in [RFC3830], and for the ID\
    \ Role\n   namespace defined in [RFC6043].  The following IANA assignments have\n\
    \   been added to the MIKEY Payload registry:\n   *  26 - Data type (see Table\
    \ 1)\n   *  26 - Next payload (see Table 2)\n   * 2 - S type (see Table 6)\n \
    \  *  ID Role (see Table 7)\n         * 6 - Initiator's KMS (IDRkmsi)\n      \
    \   * 7 - Responder's KMS (IDRkmsr)\n   The SAKKE payload defined in Section 4.2\
    \ defines two fields for which\n   IANA has created and now maintains namespaces\
    \ in the MIKEY Payload\n   registry.  These two fields are the 8-bit SAKKE Params\
    \ field, and the\n   8-bit ID Scheme field.  IANA has recorded the pre-defined\
    \ values\n   defined in Section 4.2 for each of the two name spaces.  Values in\n\
    \   the range 1-239 SHOULD be approved by the process of Specification\n   Required,\
    \ values in the range 240-254 are for Private Use, and the\n   values 0 and 255\
    \ are Reserved according to [RFC5226].\n   Initial values for the SAKKE Params\
    \ registry are given below.\n   Assignments consist of a SAKKE parameters name\
    \ and its associated\n   value.\n      Value    SAKKE params      Definition\n\
    \      -----    ------------      ----------\n      0        Reserved\n      1\
    \        Parameter Set 1   See Appendix A\n      2-239    Unassigned\n      240-254\
    \  Private Use\n      255      Reserved\n   Initial values for the ID scheme registry\
    \ are given below.\n   Assignments consist of a name of an identifier scheme name\
    \ and its\n   associated value.\n      Value    ID Scheme                    Definition\n\
    \      -----    ------------                 ----------\n      0        Reserved\n\
    \      1        tel URI with monthly keys    See Section 3.2\n      2-239    Unassigned\n\
    \      240-254  Private Use\n      255      Reserved\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [AES]       NIST, \"Advanced Encryption Standard\
    \ (AES)\", FIPS PUB 197,\n               November 2001, http://www.itl.nist.gov/fipspubs/\n\
    \               by-num.htm.\n   [ASCII]     American National Standards Institute,\
    \ \"Coded Character\n               Sets - 7-Bit American National Standard Code\
    \ for\n               Information Interchange (7-Bit ASCII)\", ANSI X3.4, 1986.\n\
    \   [FIPS180-3] Federal Information Processing Standards Publication\n       \
    \        (FIPS PUB) 180-3, \"Secure Hash Standard (SHS)\",\n               October\
    \ 2008.\n   [FIPS186-3] Federal Information Processing Standards Publication\n\
    \               (FIPS PUB) 186-3, \"Digital Signature Standard (DSS)\",\n    \
    \           June 2009.\n   [ISO8601]   \"Data elements and interchange formats\
    \ -- Information\n               interchange -- Representation of dates and times\"\
    ,\n               ISO 8601:2004(E), International Organization for\n         \
    \      Standardization, December 2004.\n   [RFC2119]   Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC3830]   Arkko, J., Carrara, E., Lindholm, F., Naslund,\
    \ M., and K.\n               Norrman, \"MIKEY: Multimedia Internet KEYing\", RFC\
    \ 3830,\n               August 2004.\n   [RFC3966]   Schulzrinne, H., \"The tel\
    \ URI for Telephone Numbers\",\n               RFC 3966, December 2004.\n   [RFC3986]\
    \   Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              \
    \ Resource Identifier (URI): Generic Syntax\", STD 66,\n               RFC 3986,\
    \ January 2005.\n   [RFC6043]   Mattsson, J. and T. Tian, \"MIKEY-TICKET: Ticket-Based\n\
    \               Modes of Key Distribution in Multimedia Internet KEYing\n    \
    \           (MIKEY)\", RFC 6043, March 2011.\n   [RFC6507]   Groves, M., \"Elliptic\
    \ Curve-Based Certificateless\n               Signatures for Identity-Based Encryption\
    \ (ECCSI)\",\n               RFC 6507, February 2012.\n   [RFC6508]   Groves,\
    \ M., \"Sakai-Kasahara Key Encryption (SAKKE)\",\n               RFC 6508, February\
    \ 2012.\n   [SP800-57]  Barker, E., Barker, W., Burr, W., Polk, W., and M. Smid,\n\
    \               \"Recommendation for Key Management - Part 1: General\n      \
    \         (Revised)\", NIST Special Publication 800-57, March 2007.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [3GPP.33.328]\n               3GPP, \"IP Multimedia\
    \ Subsystem (IMS) media plane\n               security\", 3GPP TS 33.328 10.0.0,\
    \ April 2011.\n   [RFC4567]   Arkko, J., Lindholm, F., Naslund, M., Norrman, K.,\
    \ and E.\n               Carrara, \"Key Management Extensions for Session\n  \
    \             Description Protocol (SDP) and Real Time Streaming\n           \
    \    Protocol (RTSP)\", RFC 4567, July 2006.\n   [RFC4650]   Euchner, M., \"HMAC-Authenticated\
    \ Diffie-Hellman for\n               Multimedia Internet KEYing (MIKEY)\", RFC\
    \ 4650,\n               September 2006.\n   [RFC4738]   Ignjatic, D., Dondeti,\
    \ L., Audet, F., and P. Lin, \"MIKEY-\n               RSA-R: An Additional Mode\
    \ of Key Distribution in\n               Multimedia Internet KEYing (MIKEY)\"\
    , RFC 4738,\n               November 2006.\n   [RFC5226]   Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n               IANA Considerations Section in RFCs\"\
    , BCP 26, RFC 5226,\n               May 2008.\n   [RFC5408]   Appenzeller, G.,\
    \ Martin, L., and M. Schertler, \"Identity-\n               Based Encryption Architecture\
    \ and Supporting Data\n               Structures\", RFC 5408, January 2009.\n\
    \   [RFC6267]   Cakulev, V. and G. Sundaram, \"MIKEY-IBAKE: Identity-Based\n \
    \              Authenticated Key Exchange (IBAKE) Mode of Key\n              \
    \ Distribution in Multimedia Internet KEYing (MIKEY)\",\n               RFC 6267,\
    \ June 2011.\n   [S-K]       Sakai, R., Ohgishi, K., and M. Kasahara, \"ID based\n\
    \               cryptosystem based on pairing on elliptic curves\",\n        \
    \       Symposium on Cryptography and Information Security -\n               SCIS,\
    \ 2001.\n"
- title: Appendix A.  Parameters for Use in MIKEY-SAKKE
  contents:
  - "Appendix A.  Parameters for Use in MIKEY-SAKKE\n   [RFC6508] requires each application\
    \ to define the set of public\n   parameters to be used by implementations.  Parameter\
    \ Set 1 is defined\n   in this appendix.  Descriptions of the parameters are provided\
    \ in\n   Section 2.1 of [RFC6508].\n      n      = 128\n      p      = 997ABB1F\
    \ 0A563FDA 65C61198 DAD0657A\n               416C0CE1 9CB48261 BE9AE358 B3E01A2E\n\
    \               F40AAB27 E2FC0F1B 228730D5 31A59CB0\n               E791B39F F7C88A19\
    \ 356D27F4 A666A6D0\n               E26C6487 326B4CD4 512AC5CD 65681CE1\n    \
    \           B6AFF4A8 31852A82 A7CF3C52 1C3C09AA\n               9F94D6AF 56971F1F\
    \ FCE3E823 89857DB0\n               80C5DF10 AC7ACE87 666D807A FEA85FEB\n    \
    \  q      = 265EAEC7 C2958FF6 99718466 36B4195E\n               905B0338 672D2098\
    \ 6FA6B8D6 2CF8068B\n               BD02AAC9 F8BF03C6 C8A1CC35 4C69672C\n    \
    \           39E46CE7 FDF22286 4D5B49FD 2999A9B4\n               389B1921 CC9AD335\
    \ 144AB173 595A0738\n               6DABFD2A 0C614AA0 A9F3CF14 870F026A\n    \
    \           A7E535AB D5A5C7C7 FF38FA08 E2615F6C\n               203177C4 2B1EB3A1\
    \ D99B601E BFAA17FB\n      Px     = 53FC09EE 332C29AD 0A799005 3ED9B52A\n    \
    \           2B1A2FD6 0AEC69C6 98B2F204 B6FF7CBF\n               B5EDB6C0 F6CE2308\
    \ AB10DB90 30B09E10\n               43D5F22C DB9DFA55 718BD9E7 406CE890\n    \
    \           9760AF76 5DD5BCCB 337C8654 8B72F2E1\n               A702C339 7A60DE74\
    \ A7C1514D BA66910D\n               D5CFB4CC 80728D87 EE9163A5 B63F73EC\n    \
    \           80EC46C4 967E0979 880DC8AB EAE63895\n      Py     = 0A824906 3F6009F1\
    \ F9F1F053 3634A135\n               D3E82016 02990696 3D778D82 1E141178\n    \
    \           F5EA69F4 654EC2B9 E7F7F5E5 F0DE55F6\n               6B598CCF 9A140B2E\
    \ 416CFF0C A9E032B9\n               70DAE117 AD547C6C CAD696B5 B7652FE0\n    \
    \           AC6F1E80 164AA989 492D979F C5A4D5F2\n               13515AD7 E9CB99A9\
    \ 80BDAD5A D5BB4636\n               ADB9B570 6A67DCDE 75573FD7 1BEF16D7\n    \
    \  g      = 66FC2A43 2B6EA392 148F1586 7D623068\n               C6A87BD1 FB94C41E\
    \ 27FABE65 8E015A87\n               371E9474 4C96FEDA 449AE956 3F8BC446\n    \
    \           CBFDA85D 5D00EF57 7072DA8F 541721BE\n               EE0FAED1 828EAB90\
    \ B99DFB01 38C78433\n               55DF0460 B4A9FD74 B4F1A32B CAFA1FFA\n    \
    \           D682C033 A7942BCC E3720F20 B9B7B040\n               3C8CAE87 B7A0042A\
    \ CDE0FAB3 6461EA46\n      Hash   = SHA-256 (defined in [FIPS180-3]).\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Michael Groves\n   CESG\n   Hubble Road\n   Cheltenham\n\
    \   GL51 8HJ\n   UK\n   EMail: Michael.Groves@cesg.gsi.gov.uk\n"
