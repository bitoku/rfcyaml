- title: __initial_text__
  contents:
  - '           Nortel''s Virtual Network Switching (VNS) Overview

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides an overview of Virtual Network Switching\n\
    \   (VNS).\n   VNS is a multi-protocol switching architecture that provides COS-\n\
    \   sensitive packet switching, reduces the complexity of operating\n   protocols\
    \ like PPP and frame relay, provides logical networks and\n   traffic segregation\
    \ for Virtual Private Networks (VPNs), security and\n   traffic engineering, enables\
    \ efficient WAN broadcasting and\n   multicasting, and reduces address space requirements.\
    \ VNS reduces the\n   number of routing hops over the WAN by switching packets\
    \ based on\n   labels.\n   VNS has been proven in production networks for several\
    \ years.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      8.1   Equal Cost Multipaths ..................................\
    \  10\n      8.2   Trunk Load Spreading ...................................  10\n\
    \   9       Class of Service ........................................  11\n  \
    \ 10      VNS Migration Strategies ................................  11\n   11\
    \      Summary .................................................  11\n   12  \
    \    Security Considerations .................................  12\n   13    \
    \  Acknowledgments .........................................  12\n   14      Authors'\
    \ Addresses ......................................  13\n   15      Full Copyright\
    \ Statement ................................  14\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   There are several key problem areas with today's wide area\
    \ backbone\n   networks that carry LAN traffic: scalability, service\n   differentiation,\
    \ redundancy, administration, and traffic containment.\n   First, scalability\
    \ is becoming a major concern because of the rapid\n   growth in bandwidth demand\
    \ and geographical reach. As the size of the\n   WAN network grows traditional\
    \ point-to-point and NBMA topologies or\n   network models lose their performance.\n\
    \   Second, the need to provide several Classes of Service (CoS) has\n   never\
    \ been greater. The days of a single \"best effort\" service are\n   over and\
    \ service providers demand ways to differentiate the quality\n   of the service\
    \ offered to their clients based on several policies.\n   Third, the WAN is often\
    \ carrying mission-critical traffic and loss of\n   service is not acceptable.\
    \ So far, path redundancy has been addressed\n   inefficiently by requiring additional\
    \ links or VCs.\n   Fourth, network operators demand easy and simplified network\n\
    \   administration. Large NBMA topologies require extensive PVC\n   provisioning\
    \ until SVC  deployment becomes more ubiquitous. For\n   Point-to-point models,\
    \ IP address space may be used inefficiently and\n   non-trivial network schemas\
    \ are required to contain reserved address\n   space.\n   Finally, proper segregation\
    \ of traffic is becoming a must. This\n   requirement is being addressed today\
    \ by adding leased lines or VCs\n   used to separate traffic flows based on regions\
    \ or interest or\n   protocol.\n   Nortel's Virtual Network Switching (VNS) is\
    \ a technology that\n   provides efficient solutions to these challenges.\n  \
    \ Section 2 provides an overview of VNS. The VNS header is specified in\n   Section\
    \ 3. Section 4 describes the VNS label distribution mechanism.\n   Section 5 defines\
    \ how a VNS network can be partitioned into Logical\n   Networks (LN). Section\
    \ 6 outlines VNS routing. Section 7 defines both\n   unicast and multicast forwarding.\
    \ Section 8 describes the mechanisms\n   used to engineer the traffic. Section\
    \ 9 defines the COS based\n   switching of VNS. Section 10 provides network migration\
    \ scenarios\n   using VNS. A summary of VNS is provided in Section 11.\n"
- title: 2. What is VNS?
  contents:
  - "2. What is VNS?\n   Virtual Network Switching (VNS) is a CoS-sensitive multi-protocol\n\
    \   label switching architecture that reduces or eliminates the number of\n  \
    \ layer 3 hops over the WAN by switching traffic based on labels.\n   VNS makes\
    \ a network of point to point links  appear to be a single\n   LAN (broadcast,\
    \ multiple access) media.  The network used by a\n   particular instance of VNS\
    \ is called a Logical Network (LN) which is\n   described in more detail in Section\
    \ 5.\n   In reference to the ISO Network Layering Model, the Data Link Layer\n\
    \   is expanded to include VNS network layer. To the ISO Network Layer,\n   (e.g.,\
    \ IP), VNS is treated as a Data Link Layer.\n           ------------------------\n\
    \           | Application          |\n           ------------------------\n  \
    \         | Presentation         |\n           ------------------------\n    \
    \       | Session              |\n           ------------------------\n      \
    \     | Transport            |\n           ------------------------      -------------------------\n\
    \           | Network (e.g., IP)   |     / Network VNS            |\n        \
    \   -----------------------------                         |\n           | Data\
    \ Link                 |--------------------------\n           -----------------------------\
    \                         |\n           | Physical             |     \\ data link\
    \ (e.g., ATM)  |\n           ------------------------      -------------------------\n\
    \               Figure 1. ISO Network Layering Model for VNS\n   In a VNS Network,\
    \ three separate nodal functions are defined.  An\n   ingress node, an egress\
    \ node, and a tandem node. The ingress and\n   egress nodes define the boundary\
    \ between an IP network and the VNS\n   network. Therefore, these nodes run both\
    \ IP routing and VNS routing.\n   However, tandem nodes need only run VNS routing.\n\
    \   A LAN packet is encapsulated in a VNS header as it enters the LN. The\n  \
    \ label in the header is used to switch the packet across the LN. The\n   encapsulation\
    \ header contains the identifier of the last node (or\n   egress node) that processes\
    \ the packet as it traverses the LN. It is\n   the first  node (or ingress node)\
    \ that decides to which egress node\n   the packet is sent. All nodes between\
    \ the ingress and egress nodes\n   (known as tandem nodes) decide independently\
    \ the best packet\n   forwarding route to the egress node identified in the packet.\n\
    \   The network layer protocols view VNS as a shared broadcast media,\n   where\
    \ the speed to reach any node on the media is the same for all\n   nodes. VNS\
    \ ensures that traffic destined to other nodes is forwarded\n   optimally. This\
    \ transparent view of the VNS means that all the\n   details of the network (for\
    \ example, topology and link states) can be\n   hidden from the Upper Layer Protocols\
    \ (e.g. Layer 3 routing\n   protocols) and their applications. VNS also ensures\
    \ that changes to\n   topology and link state are hidden.\n   The network layer\
    \ protocol on the ingress node views the network\n   layer protocol on the egress\
    \ node as its logical and directly\n   connected neighbor. This is significant\
    \ because the network layer\n   protocols always decide which directly connected\
    \ neighbor should\n   receive a forwarded packet. The details of the actual topology\n\
    \   supporting the connectionless network are managed entirely by the\n   Virtual\
    \ Network Switching and are hidden from the network layer\n   protocols. To the\
    \ network layer, VNS simply appears to be another\n   Data Link Layer (or media),\
    \ even though VNS is a network layer itself\n   running on top of the actual Data\
    \ Link Layer (for example, ATM\n   trunks).\n   For the ingress node to choose\
    \ the egress node that provides the best\n   path to the packet's final destination,\
    \ it must have knowledge of the\n   following:\n      - the nodes that can be\
    \ reached in the  network\n      - the topology of the network that is using the\
    \ VNS services for\n        transport across the network (but not necessarily\
    \ the topology\n        of the full network)\n   This knowledge is obtained through\
    \ the network layer routing\n   mechanisms such as, IP's Open Shortest Path First\
    \ (OSPF) and Address\n   Resolution Protocol (ARP).\n   Once the network layer\
    \ protocol on the ingress node has decided which\n   neighbor to transmit the\
    \ packet to, it is the responsibility of VNS\n   forwarding, a part of VNS, to\
    \ deliver the packet to that node. Once\n   the packet arrives at the egress node,\
    \ the packet is delivered to the\n   network layer protocol, which then forwards\
    \ it to its ultimate\n   destination.\n   Tandem nodes have no interaction with\
    \ the network layer protocols.\n   They only require knowledge of the  VNS network\
    \ topology. They make\n   their packet forwarding decision on the egress node\
    \  identifier and\n   LN identifier carried in the VNS header of the packet.\n"
- title: 3. VNS Header
  contents:
  - "3. VNS Header\n   VNS defines a unicast header shown in Figure 2 and a multicast\
    \ header\n   shown in Figure 3.\n       3                   2                \
    \   1                   0\n     1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9\
    \ 8 7 6 5 4 3 2 1 0\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      TTL      |      LNN            |x|LS-Key |x|DP | CmnHdr  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | Protocol Type |         Destination Node Identifier           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |  COS  |x x x x|         Source Node Identifier                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                 Network Layer Header (e.g. IP)                |\n    /\
    \                                                               /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          Data                                 |\n    /\
    \                                                               /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Figure 2. Unicast VNS Header\n   The unicast header includes\
    \ the following fields:\n   - Common Header (CmnHdr): The common header identifies\
    \ the packet to\n   be a VNS encapsulated packet.\n   - Discard Priority: Indicates\
    \ the level of congestion at which the\n   packet should be discarded. The value\
    \ of this field is assigned on\n   the originating node based on policy information\
    \ (see Section 9).\n   - Load Spreading Key: indicates the stream to which the\
    \ packet\n   belongs for the purposes of equal cost multipath and trunk load\n\
    \   spreading (see Section 8).\n   - LNN: The Logical Network Number defines the\
    \ logical network the\n   packet belongs to. This field in is used in conjunction\
    \ with the\n   destination node identifier as the VNS switching label (see Section\n\
    \   5).\n   - TTL: The Time To Live field is used to detect and discard packets\n\
    \   caught in temporary routing loops.\n   - Destination Node Identifier: This\
    \ field contains an ID which\n   uniquely identifies the destination node.  This\
    \ ID is unique to  the\n   physical network not just the LN. In conjunction with\
    \ the LNN, this\n   forms a global VNS switching label.\n   - Protocol Type: indicates\
    \ the type of Network layer protocol being\n   carried in the packet. Examples\
    \ include IP, IPX, and Bridging. If the\n   packet is a multicast packet then\
    \ this is indicated in this field.\n   - Source Node Identifier: This field contains\
    \ an ID which uniquely\n   identifies the source node (ingress node).\n   - CoS:\
    \ The Class of Service field is used to provide routing class of\n   service.\
    \ The COS field also affects the Emission Priority of the\n   packet in the scheduler\
    \ (see Section 9).\n   - Reserved Fields: All the fields marked with \"x\" are\
    \ Reserved.\n       3                   2                   1                \
    \   0\n     1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \      TTL      |      LNN            |x|LS-Key |x|DP | CmnHdr  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | PT = Multicast|         Destination Node Identifier           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |  COS  |x x x x|         Source Node Identifier                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | Protocol Type |x x x x x x x x|    Multicast Group            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                 Network Layer Header (e.g. IP)                |\n    /\
    \                                                               /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    /                          Data                                 /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 3. Multicast VNS Header\n   The multicast header\
    \ shown in Figure 3, includes all the fields of\n   the unicast header. In addition,\
    \ the multicast header includes the\n   following fields:\n   - Multicast Group:\
    \ this field is used to identify a sub-group within\n   the logical network that\
    \ receives the multicast packets.\n   - Protocol Type: indicates the type of Network\
    \ layer protocol being\n   carried in the packet. Examples include IP, IPX, and\
    \ Bridging.\n"
- title: 4. VNS Label Distribution
  contents:
  - "4. VNS Label Distribution\n   Label distribution in VNS is based on a distributed\
    \ serverless\n   topology driven approach. Standard ARP or address gleaning is\
    \ used to\n   distribute and map network layer addresses to VNS addresses.\n \
    \  A VNS Label is an 6 byte encoding of the LNN and the node ID.  VNS\n   Labels\
    \ are treated as MAC addresses by the network layer.  This means\n   that labels\
    \ are distributed by the same means network layers use to\n   distribute MAC addresses.\
    \  Thus, VNS leverages existing L2/L3 mapping\n   techniques and doesn't require\
    \ a separate Label Distribution\n   Protocol.\n"
- title: 5. Logical Networks (LNs)
  contents:
  - "5. Logical Networks (LNs)\n   A logical network consists of a subset of the nodes\
    \ in a network\n   together with a subset of the trunking facilities that link\
    \ those\n   nodes. Logical networks partition the network into subnetworks that\n\
    \   serve a subset of the overall topology.\n   Each of the logical networks supported\
    \ on any given node has a\n   separate routing and forwarding table (built by\
    \ VNS). Therefore,\n   routing decisions are based on the resources available\
    \ to the logical\n   network, not the entire network.\n   Each instance of VNS\
    \ will discover all the trunks which are connected\n   to neighbors which support\
    \ a matching LNN.  This provides a huge\n   administrative saving, since VNS provisioning\
    \ is on a per-node basis,\n   not on a per-link basis.  VNS provisioning requires\
    \ only a unique\n   node ID and an LNN.  Discovery of which trunks support which\
    \ LNNs is\n   done at run time, relieving administrative effort, and allowing\
    \ the\n   LN to dynamically adapt to topology changes.\n   Multiple Logical Networks\
    \ provide the following benefits to the\n   network system:\n      - Logical networks\
    \ allow service providers to service multiple\n      private networks or (Virtual\
    \ Private Internets) easily over one\n      network.\n      - Logical networks\
    \ can be used to limit the impact of one network\n      layer protocol on the\
    \ others. This is particularly true for\n      protocols that broadcast or multicast\
    \ a large percentage of either\n      their control or data packets.  This increases\
    \ the effective\n      bandwidth of the trunks and allows the overall network\
    \ to scale\n      better.\n      - Logical networks allow for the configuration\
    \ of the network to\n      meet individual community of interest and geographical\n\
    \      subnetworking needs.\n      - Routing control traffic has significance\
    \ only in the local\n      subnetwork that is isolated to that subnetwork.\n \
    \     - Logical networks allow different instances of the same protocol\n    \
    \  to share trunk facilities.\n"
- title: 6. VNS Routing
  contents:
  - "6. VNS Routing\n   VNS routing is a link state routing system which uses many\
    \ concepts\n   similar to OSPF and PNNI. One of the most significant departures\
    \ from\n   the others is its ability to calculate shortest path trees for\n  \
    \ routing unicast traffic and spanning trees for routing multicast\n   traffic\
    \ within a Logical Network.\n   There is only one type of interface that VNS routing\
    \ supports and\n   this is known as a VNS link. A link is a set of trunks that\
    \ join two\n   VNS neighbor nodes. Each node in a VNS network maintains information\n\
    \   about the state of locally attached links. This information is\n   flooded\
    \ throughout the network whenever there is a significant change\n   to the link's\
    \ state or attributes (i.e. up/down, speed change,\n   available bandwidth change).\n\
    \   Each node stores and forwards the link state information received\n   from\
    \ all other nodes. This allows each node to have the same view of\n   all of the\
    \ nodes in the network together with all of their link state\n   information.\
    \ This data is used to compute both the shortest path to\n   reach each node in\
    \ the Logical Network and a spanning tree for the\n   Logical Network.\n   Logical\
    \ networks are not bound to a particular trunk or link. They\n   are configured\
    \ on a node. By default, a link will support a specific\n   logical network if\
    \ the two nodes which it connects both are\n   configured to support the logical\
    \ network number. This provides a\n   significant savings in operations over having\
    \ to configure logical\n   networks on links or trunks.\n   When a link first\
    \ comes into service, a protocol is run which allows\n   the two neighboring nodes\
    \ to exchange information about the logical\n   networks they support. This allows\
    \ the two nodes to determine if the\n   links are to be considered as a locally\
    \ attached link for a logical\n   network.\n"
- title: 7. VNS Forwarding
  contents:
  - "7. VNS Forwarding\n   VNS supports two types of forwarding: unicasting and multicasting.\
    \ In\n   the first type, the data packet arrives on the ingress node and\n   unicasting\
    \ forwards the data packet to a single destination (egress\n   node). In the second\
    \ type, the data packet arrives on the ingress\n   node and multicasting forwards\
    \ the data packet to all other nodes in\n   the logical network.\n"
- title: 7.1 Unicast
  contents:
  - "7.1 Unicast\n   When a packet first enters the  LAN internetwork, the network\
    \ layer\n   routing protocol determines the next hop of the best route for the\n\
    \   packet to reach its final destination. If the best route is through a\n  \
    \ VNS Logical Network, the network layer routing protocol relies on VNS\n   forwarding\
    \ to get the packet to the egress  node. A VNS packet header\n   containing the\
    \ node ID (the unique ID assigned  to each  node) of the\n   egress node is added\
    \ to the front of the packet and VNS forwarding is\n   invoked to deliver the\
    \ packet. The network layer routing protocol\n   learns the egress node ID through\
    \ an Address Resolution Protocol\n   (ARP) for IP and Source Address learning\
    \ for bridging.\n   As the packet traverses the LN, routing decisions are made\
    \ to\n   determine the next hop in the route to reach the destination node ID\n\
    \   specified in the VNS header. A forwarding table is built on each node\n  \
    \ that assists in making the routing decision.\n   Each VNS instance on each \
    \ node builds and maintains a forwarding\n   table for its LN. Each forwarding\
    \ table has an entry for every  node\n   that is a member of the logical network.\n"
- title: 7.2 Multicast
  contents:
  - "7.2 Multicast\n   In addition to the unicast forwarding function, VNS also supports\
    \ a\n   multicast forwarding service for traffic within an LN at the VNS\n   layer.\
    \ Multicast packets are delivered to all nodes supporting the\n   logical network\
    \ to which the multicast packet belongs. The packets\n   are sent along the branches\
    \ of a spanning tree that is built by each\n   node supporting the logical network\
    \ and is based on a common root\n   node (so that each node's view of the tree\
    \ is the same as other\n   nodes). In other words, multicast packets are sent\
    \ intelligently,\n   consuming a minimum of network bandwidth. If the network\
    \ topology is\n   stable, each node receives each multicast packet only once.\n\
    \   Multicast packets received at any node are not acknowledged. They are\n  \
    \ simply forwarded to the specified network layer interface and sent to\n   any\
    \ other neighbor nodes on the spanning tree.\n"
- title: 8. Traffic Engineering
  contents:
  - "8. Traffic Engineering\n   VNS forwarding supports two types of traffic engineering\
    \ mechanisms:\n   equal cost multipaths and trunk load spreading.\n   Equal cost\
    \ multipaths allows different streams (unique network layer\n   source and destination\
    \ address pairings) to be load spread between\n   multiple relatively equal cost\
    \ paths, through the Logical Network to\n   the egress node.\n   Trunk load spreading\
    \ between two neighbors can take place when\n   multiple VNS  trunks are defined\
    \ between neighbors. Again, the load\n   spreading is based on network layer streams.\n"
- title: 8.1 Equal Cost Multipaths
  contents:
  - "8.1 Equal Cost Multipaths\n   From any point in a logical network, there may\
    \ be multiple paths to\n   reach a specific egress node. If VNS routing determines\
    \ that more\n   than one of these paths are of equal cost, VNS packets will be\
    \ load\n   spread between two of them.\n   Equal cost multipath forwarding is\
    \ supported not only on ingress\n   nodes but on tandem nodes as well. Each packet\
    \ on an ingress node is\n   tagged with an equal cost multipath key. This key\
    \ is acted upon at\n   the ingress node and stored in the VNS header to be used\
    \ on tandem\n   nodes.\n   The equal cost multipath key is calculated by running\
    \ an algorithm\n   over the source and destination network layer addresses. This\
    \ means\n   that, in a stable network, any given stream will always take the same\n\
    \   path through a Logical Network avoiding the problems that misordering\n  \
    \ would otherwise cause.\n"
- title: 8.2 Trunk Load Spreading Between Neighbors
  contents:
  - "8.2 Trunk Load Spreading Between Neighbors\n   VNS allows multiple trunks to\
    \ be configured between neighboring VNS\n   nodes. VNS routing considers the aggregate\
    \ bandwidth of those trunks\n   to determine the metric between the nodes. Also,\
    \ VNS load spreads its\n   traffic amongst those trunks.\n   As is the case with\
    \ equal cost multipaths, the trunk load spreading\n   key is calculated on the\
    \ ingress node from an algorithm run over the\n   source and destination network\
    \ layer addresses. The key is then\n   stored in the VNS header to be used on\
    \ all tandem nodes through the\n   Logical Network.\n"
- title: 9. Class of Service
  contents:
  - "9. Class of Service\n   At the ingress to a VNS Network, packets are classified\
    \ according to\n   the Class of Service (Cos) policy settings. The CoS differentiation\n\
    \   is achieved through different  Emission and Discard priorities. The\n   semantics\
    \ of the classification is carried in the VNS label (DP and\n   COS Fields described\
    \ in Section 3) to be used at the ingress node as\n   well as all tandem points\
    \ in the VNS network to affect queuing and\n   scheduling decisions.\n"
- title: 10. VNS Migration Strategies
  contents:
  - "10. VNS Migration Strategies\n   VNS supports several upper layer protocols such\
    \ as IP, IPX, and\n   Bridging. Therefore, it is a multiprotocol label switching\n\
    \   architecture. In addition, VNS  is not tied to a particular L2\n   technology.\
    \ It runs on cell (e.g., ATM) trunks, frame trunks, or a\n   mixture of both.\n\
    \   VNS can be gradually introduced in a network. It can be implemented\n   between\
    \ switching elements interconnected by point to point links.\n   Each of the switching\
    \ nodes can run layer 3 routing simultaneously\n   with packet switching. VNS\
    \ also allows for the interconnection of VNS\n   clouds through an ATM VC.\n \
    \  Since VNS can run on a mixture of Frame and Cell trunks, it allows\n   for\
    \ the graceful migration of the frame links to ATM without\n   requiring a complete\
    \ immediate overhaul.\n"
- title: 11. Summary
  contents:
  - "11. Summary\n   VNS addresses scalability problems in several ways:\n      1.\
    \ By a generally distributed design which doesn't\n         require a Label Distribution\
    \ Protocol, or servers of any kind.\n      2. By providing an efficient, distributed\
    \ multicast mechanism.\n      3. By allowing administrators to control the size\
    \ of a\n         Logical Network, limiting traffic to a subset of the physical\n\
    \         topology.\n      4. By reducing layer 3 address space/subnet requirements\
    \ in the\n         WAN which reduces the routing table size.\n   VNS provides\
    \ redundancy transparent to the network layer protocol by\n   managing the network\
    \ of trunks independently of the network layer.\n   VNS will automatically discover\
    \ any topology changes and re-route\n   traffic accordingly.\n   VNS eases network\
    \ administration by dynamically keeping track of\n   which trunks are available\
    \ for each LNN.  Network administrators\n   don't have to configure VNS or network\
    \ layer addresses on a per link\n   basis.  Network layer addresses only have\
    \ to be assigned on a per\n   Logical Network basis.  For nodes which will only\
    \ be tandem VNS\n   nodes, network layer addresses aren't required at all.\n \
    \  Since VNS traffic is constrained within an LNN, administrators have\n   control\
    \ of where VNS traffic is allowed to flow.\n   Finally, VNS supports switching\
    \ of several Upper Layer Protocols and\n   supports  several media (cell and Frame)\
    \ or a mixture thereof.\n   Switching in the core of the WAN removes the need\
    \ for routers and\n   improves the performance due to a reduction in the  number\
    \ of fields\n   that need to processed.\n"
- title: 12. Security Considerations
  contents:
  - "12. Security Considerations\n   Logical networks provide a means of restricting\
    \ traffic flow for\n   security purposes. VNS also relies on the inherent security\
    \ of the L2\n   media such as an ATM Virtual Circuit.\n"
- title: 13. Acknowledgments
  contents:
  - "13. Acknowledgments\n   The authors would like to acknowledge the valuable comments\
    \ of Terry\n   Boland, Pierre Cousineau, Robert Eros, Robert Tomkins, and John\n\
    \   Whatman.\n"
- title: 14. Authors' Addresses
  contents:
  - "14. Authors' Addresses\n   Bilel Jamoussi\n   Nortel (Northern Telecom), Ltd.\n\
    \   PO Box 3511 Station C\n   Ottawa ON K1Y 4H7\n   Canada\n   EMail: jamoussi@Nortel.ca\n\
    \   Dwight Jamieson\n   Nortel (Northern Telecom), Ltd.\n   PO Box 3511 Station\
    \ C\n   Ottawa ON K1Y 4H7\n   Canada\n   EMail: djamies@Nortel.ca\n   Dan Williston\n\
    \   Nortel (Northern Telecom), Ltd.\n   PO Box 3511 Station C\n   Ottawa ON K1Y\
    \ 4H7\n   Canada\n   EMail: danwil@Nortel.ca\n   Stephen Gabe\n   Nortel (Northern\
    \ Telecom), Ltd.\n   PO Box 3511 Station C\n   Ottawa ON K1Y 4H7\n   Canada\n\
    \   EMail: spgabe@Nortel.ca\n"
- title: 15.  Full Copyright Statement
  contents:
  - "15.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
