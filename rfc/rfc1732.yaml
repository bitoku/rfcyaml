- title: __initial_text__
  contents:
  - '              IMAP4 COMPATIBILITY WITH IMAP2 AND IMAP2BIS

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   This is a summary of hints and recommendations to enable an\
    \ IMAP4\n   implementation to interoperate with implementations that conform to\n\
    \   earlier specifications.  None of these hints and recommendations are\n   required\
    \ by the IMAP4 specification; implementors must decide for\n   themselves whether\
    \ they want their implementation to fail if it\n   encounters old software.\n\
    \   IMAP4 has been designed to be upwards compatible with earlier\n   specifications.\
    \  For the most part, IMAP4 facilities that were not in\n   earlier specifications\
    \ should be invisible to clients unless the\n   client asks for the facility.\n\
    \   In some cases, older servers may support some of the capabilities\n   listed\
    \ as being \"new in IMAP4\" as experimental extensions to the\n   IMAP2 protocol\
    \ described in RFC 1176.\n   This information may not be complete; it reflects\
    \ current knowledge\n   of server and client implementations as well as \"folklore\"\
    \ acquired\n   in the evolution of the protocol.\n"
- title: IMAP4 client interoperability with old servers
  contents:
  - "IMAP4 client interoperability with old servers\n   In general, a client should\
    \ be able to discover whether an IMAP2\n   server supports a facility by trial-and-error;\
    \ if an attempt to use a\n   facility generates a BAD response, the client can\
    \ assume that the\n   server does not support the facility.\n   A quick way to\
    \ check whether a server implementation supports the\n   IMAP4 specification is\
    \ to try the CAPABILITY command.  An OK response\n   that includes the IMAP4 capability\
    \ value indicates a server that\n   supports IMAP4; a BAD response or one without\
    \ the IMAP4 capability\n   value indicates an older server.\n   The following\
    \ is a list of facilities that are only in IMAP4, and\n   suggestions for how\
    \ new clients might interoperate with old servers:\n   CAPABILITY command\n  \
    \          A BAD response to this command indicates that the server\n        \
    \    implements IMAP2 (or IMAP2bis) and not IMAP4.\n   AUTHENTICATE command.\n\
    \            Use the LOGIN command.\n   LSUB and LIST commands\n            Try\
    \ the RFC 1176 FIND command.\n   * in a sequence\n            Use the number of\
    \ messages in the mailbox from the EXISTS\n            unsolicited response.\n\
    \   SEARCH extensions (character set, additional criteria)\n            Reformulate\
    \ the search request using only the searching\n            options listed in search_old\
    \ in the IMAP4 grammar.  This may\n            entail doing multiple searches\
    \ to achieve the desired\n            results.\n   BODYSTRUCTURE fetch data item\n\
    \            Try to fetch the non-extensible BODY data item.\n   body section\
    \ number 0\n            Fetch the entire message and extract the header.\n   RFC822.HEADER.LINES\
    \ and RFC822.HEADER.LINES.NOT fetch data items\n            Use RFC822.HEADER\
    \ and remove the unwanted information.\n   BODY.PEEK[section], RFC822.PEEK, and\
    \ RFC822.TEXT.PEEK fetch data\n            items Use the corresponding non-PEEK\
    \ versions and manually\n            clear the \\Seen flag as necessary.\n   UID\
    \ fetch data item and the UID commands\n            No equivalent capabilitity\
    \ exists in older servers.\n   FLAGS.SILENT, +FLAGS.SILENT, and -FLAGS.SILENT\
    \ store data items\n            Use the corresponding non-SILENT versions and\
    \ ignore the\n            untagged FETCH responses which com eback.\n   The following\
    \ IMAP4 facilities were introduced in the experimental\n   IMAP2bis revisions\
    \ to RFC-1176, and may be present in a server that\n   does not support the CAPABILITY\
    \ command:\n   CREATE, DELETE, and RENAME commands\n            To test whether\
    \ these commands are present, try a CREATE\n            INBOX command.  If the\
    \ response is NO, these commands are\n            supported by the server.  If\
    \ the response is BAD, they are\n            not.  Older servers without the CREATE\
    \ capability may sup-\n            port implicit creation of a mailbox by a COPY\
    \ command with a\n            non-existant name as the destination.\n   APPEND\
    \ command\n            To test whether this command is present, try to append\
    \ a\n            zero-length stream to a mailbox name that is known not to\n \
    \           exist (or at least, highly unlikely to exist) on the remote\n    \
    \        system.\n   SUBSCRIBE and UNSUBSCRIBE commands\n            Try the form\
    \ of these commands with the optional MAILBOX\n            keyword.\n   EXAMINE\
    \ command\n            Use the SELECT command instead.\n   flags and internal\
    \ date argument to APPEND command\n            Try the APPEND without any flag\
    \ list and internal date argu-\n            ments.\n   BODY, BODY[section], and\
    \ FULL fetch data items\n            Use RFC822.TEXT and ALL instead.  Server\
    \ does not support\n            MIME.\n   PARTIAL command\n            Use the\
    \ appropriate FETCH command and ignore the unwanted\n            data.\n   IMAP4\
    \ client implementations must accept all responses and data for-\n   mats documented\
    \ in the IMAP4 specification, including those labeled\n   as obsolete.  This includes\
    \ the COPY and STORE unsolicited responses\n   and the old format of dates and\
    \ times.  In particular, client imple-\n   mentations must not treat a date/time\
    \ as a fixed format string; nor\n   may they assume that the time begins at a\
    \ particular octet.\n   IMAP4 client implementations must not depend upon the\
    \ presence of any\n   server extensions that are not in the base IMAP4 specification.\n\
    \   The experimental IMAP2bis version specified that the TRYCREATE spe-\n   cial\
    \ information token is sent as a separate unsolicited OK response\n   instead\
    \ of inside the NO response.\n   The FIND BBOARDS, FIND ALL.BBOARDS, and BBOARD\
    \ commands of RFC 1176\n   are removed from IMAP4.  There is no equivalent to\
    \ the bboard com-\n   mands, which provided a separate namespace with implicit\
    \ restrictions\n   on what may be done in that namespace.\n   Older server implementations\
    \ may automatically create the destination\n   mailbox on COPY if that mailbox\
    \ does not already exist.  This was how\n   a new mailbox was created in older\
    \ specifications.  If the server\n   does not support the CREATE command (see\
    \ above for how to test for\n   this), it will probably create a mailbox on COPY.\n\
    \   Older server implementations may not preserve flags or internal dates\n  \
    \ on COPY.  Some server implementations may not permit the preservation\n   of\
    \ certain flags on COPY or their setting with APPEND as site policy.\n"
- title: IMAP4 server interoperability with old clients
  contents:
  - "IMAP4 server interoperability with old clients\n   In general, there should be\
    \ no interoperation problem between a\n   server conforming to the IMAP4 specification\
    \ and a well-written\n   client that conforms to an earlier specification.  Known\
    \ problems are\n   noted below:\n      Poor wording in the description of the\
    \ CHECK command in earlier\n      specifications implied that a CHECK command\
    \ is the way to get the\n      current number of messages in the mailbox.  This\
    \ is incorrect.  A\n      CHECK command does not necessarily result in an EXISTS\
    \ response.\n      Clients must remember the most recent EXISTS value sent from\
    \ the\n      server, and should not generate unnecessary CHECK commands.\n   \
    \   An incompatibility exists with COPY in IMAP4.  COPY in IMAP4\n      servers\
    \ does not automatically create the destination mailbox if\n      that mailbox\
    \ does not already exist.  This may cause problems with\n      old clients that\
    \ expect automatic mailbox creation in COPY.\n      The PREAUTH unsolicited response\
    \ is new in IMAP4.  It is highly\n      unlikely that an old client would ever\
    \ see this response.\n      The format of dates and times has changed due to the\
    \ impending end\n      of the century.  Clients that fail to accept a four-digit\
    \ year or\n      a signed four-digit timezone value will not work properly with\n\
    \      IMAP4.\n      An incompatibility exists with the use of \"\\\" in quoted\
    \ strings.\n      This is best avoided by using literals instead of quoted strings\n\
    \      if \"\\\" or <\"> is embedded in the string.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 'Author''s Address:'
  contents:
  - "Author's Address:\n   Mark R. Crispin\n   Networks and Distributed Computing,\
    \ JE-30\n   University of Washington\n   Seattle, WA  98195\n   Phone: (206) 543-5762\n\
    \   EMail: MRC@CAC.Washington.EDU\n"
