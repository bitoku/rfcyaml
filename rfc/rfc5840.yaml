- title: __initial_text__
  contents:
  - '  Wrapped Encapsulating Security Payload (ESP) for Traffic Visibility

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Wrapped Encapsulating Security Payload\n\
    \   (WESP) protocol, which builds on the Encapsulating Security Payload\n   (ESP)\
    \ RFC 4303 and is designed to allow intermediate devices to (1)\n   ascertain\
    \ if data confidentiality is being employed within ESP, and\n   if not, (2) inspect\
    \ the IPsec packets for network monitoring and\n   access control functions. \
    \ Currently, in the IPsec ESP standard,\n   there is no deterministic way to differentiate\
    \ between encrypted and\n   unencrypted payloads by simply examining a packet.\
    \  This poses\n   certain challenges to the intermediate devices that need to\
    \ deep\n   inspect the packet before making a decision on what should be done\n\
    \   with that packet (Inspect and/or Allow/Drop).  The mechanism\n   described\
    \ in this document can be used to easily disambiguate\n   integrity-only ESP from\
    \ ESP-encrypted packets, without compromising\n   on the security provided by\
    \ ESP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5840.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements Language ......................................4\n  \
    \    1.2. Applicability Statement ....................................4\n   2.\
    \ Wrapped ESP (WESP) Header Format ................................5\n      2.1.\
    \ UDP Encapsulation ..........................................8\n      2.2. Transport\
    \ and Tunnel Mode Considerations ...................9\n           2.2.1. Transport\
    \ Mode Processing ...........................9\n           2.2.2. Tunnel Mode\
    \ Processing .............................10\n      2.3. IKE Considerations ........................................11\n\
    \   3. Security Considerations ........................................12\n  \
    \ 4. IANA Considerations ............................................13\n   5.\
    \ Acknowledgments ................................................13\n   6. References\
    \ .....................................................14\n      6.1. Normative\
    \ References ......................................14\n      6.2. Informative\
    \ References ....................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Use of ESP within IPsec [RFC4303] specifies how ESP packet\n\
    \   encapsulation is performed.  It also specifies that ESP can provide\n   data\
    \ confidentiality and data integrity services.  Data integrity\n   without data\
    \ confidentiality (\"integrity-only ESP\") is possible via\n   the ESP-NULL encryption\
    \ algorithm [RFC2410] or via combined-mode\n   algorithms such as AES-GMAC [RFC4543].\
    \  The exact encapsulation and\n   algorithms employed are negotiated out of band\
    \ using, for example,\n   Internet Key Exchange Protocol version 2 (IKEv2) [RFC4306]\
    \ and based\n   on policy.\n   Enterprise environments typically employ numerous\
    \ security policies\n   (and tools for enforcing them), as related to access control,\
    \ content\n   screening, firewalls, network monitoring functions, deep packet\n\
    \   inspection, Intrusion Detection and Prevention Systems (IDS and IPS),\n  \
    \ scanning and detection of viruses and worms, etc.  In order to\n   enforce these\
    \ policies, network tools and intermediate devices\n   require visibility into\
    \ packets, ranging from simple packet header\n   inspection to deeper payload\
    \ examination.  Network security protocols\n   that encrypt the data in transit\
    \ prevent these network tools from\n   performing the aforementioned functions.\n\
    \   When employing IPsec within an enterprise environment, it is\n   desirable\
    \ to employ ESP instead of Authentication Header (AH)\n   [RFC4302], as AH does\
    \ not work in NAT environments.  Furthermore, in\n   order to preserve the above\
    \ network monitoring functions, it is\n   desirable to use integrity-only ESP.\
    \  In a mixed-mode environment,\n   some packets containing sensitive data employ\
    \ a given encryption\n   cipher suite, while other packets employ integrity-only\
    \ ESP.  For an\n   intermediate device to unambiguously distinguish which packets\
    \ are\n   using integrity-only ESP requires knowledge of all the policies being\n\
    \   employed for each protected session.  This is clearly not practical.\n   Heuristics-based\
    \ methods can be employed to parse the packets, but\n   these can be very expensive,\
    \ requiring numerous rules based on each\n   different protocol and payload. \
    \ Even then, the parsing may not be\n   robust in cases where fields within a\
    \ given encrypted packet happen\n   to resemble the fields for a given protocol\
    \ or heuristic rule.  In\n   cases where the packets may be encrypted, it is also\
    \ wasteful to\n   check against heuristics-based rules, when a simple exception\
    \ policy\n   (e.g., allow, drop, or redirect) can be employed to handle the\n\
    \   encrypted packets.  Because of the non-deterministic nature of\n   heuristics-based\
    \ rules for disambiguating between encrypted and non-\n   encrypted data, an alternative\
    \ method for enabling intermediate\n   devices to function in encrypted data environments\
    \ needs to be\n   defined.  Additionally, there are many types and classes of\
    \ network\n   devices employed within a given network and a deterministic approach\n\
    \   provides a simple solution for all of them.  Enterprise environments\n   typically\
    \ use both stateful and stateless packet inspection\n   mechanisms.  The previous\
    \ considerations weigh particularly heavy on\n   stateless mechanisms such as\
    \ router Access Control Lists (ACLs) and\n   NetFlow exporters.  Nevertheless,\
    \ a deterministic approach provides a\n   simple solution for the myriad types\
    \ of devices employed within a\n   network, regardless of their stateful or stateless\
    \ nature.\n   This document defines a mechanism to provide additional information\n\
    \   in relevant IPsec packets so intermediate devices can efficiently\n   differentiate\
    \ between encrypted and integrity-only packets.\n   Additionally, and in the interest\
    \ of consistency, this extended\n   format can also be used to carry encrypted\
    \ packets without loss in\n   disambiguation.\n   This document is consistent\
    \ with the operation of ESP in NAT\n   environments [RFC3947].\n   The design\
    \ principles for this protocol are the following:\n   o  Allow easy identification\
    \ and parsing of integrity-only IPsec\n      traffic\n   o  Leverage the existing\
    \ hardware IPsec parsing engines as much as\n      possible to minimize additional\
    \ hardware design costs\n   o  Minimize the packet overhead in the common case\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.2.  Applicability Statement
  contents:
  - "1.2.  Applicability Statement\n   The document is applicable only to the wrapped\
    \ ESP header defined\n   below, and does not describe any changes to either ESP\
    \ [RFC4303] or\n   the IP Authentication Header (AH) [RFC4302].\n   There are\
    \ two well-accepted ways to enable intermediate security\n   devices to distinguish\
    \ between encrypted and unencrypted ESP traffic:\n   - The heuristics approach\
    \ [Heuristics] has the intermediate node\n     inspect the unchanged ESP traffic,\
    \ to determine with extremely high\n     probability whether or not the traffic\
    \ stream is encrypted.\n   - The Wrapped ESP (WESP) approach, described in this\
    \ document, in\n     contrast, requires the ESP endpoints to be modified to support\
    \ the\n     new protocol.  WESP allows the intermediate node to distinguish\n\
    \     encrypted and unencrypted traffic deterministically, using a\n     simpler\
    \ implementation for the intermediate node.\n   Both approaches are being documented\
    \ simultaneously by the IP\n   Security Maintenance and Extensions (IPsecME) Working\
    \ Group, with\n   WESP (this document) as a Standards Track RFC while the heuristics\n\
    \   approach is expected to be published as an Informational RFC.  While\n   endpoints\
    \ are being modified to adopt WESP, we expect both approaches\n   to coexist for\
    \ years because the heuristic approach is needed to\n   inspect traffic where\
    \ at least one of the endpoints has not been\n   modified.  In other words, intermediate\
    \ nodes are expected to support\n   both approaches in order to achieve good security\
    \ and performance\n   during the transition period.\n"
- title: 2.  Wrapped ESP (WESP) Header Format
  contents:
  - "2.  Wrapped ESP (WESP) Header Format\n   Wrapped ESP (WESP) encapsulation uses\
    \ protocol number 141.\n   Accordingly, the (outer) protocol header (IPv4, IPv6,\
    \ or Extension)\n   that immediately precedes the WESP header SHALL contain the\
    \ value\n   (141) in its Protocol (IPv4) or Next Header (IPv6, Extension) field.\n\
    \   WESP provides additional attributes in each packet to assist in\n   differentiating\
    \ between encrypted and non-encrypted data, and to aid\n   in parsing of the packet.\
    \  WESP follows RFC 4303 for all IPv6 and\n   IPv4 considerations (e.g., alignment\
    \ considerations).\n   This extension essentially acts as a wrapper to the existing\
    \ ESP\n   protocol and provides an additional 4 octets at the front of the\n \
    \  existing ESP packet for IPv4.  For IPv6, additional padding may be\n   required\
    \ and this is described below.\n   The packet format may be depicted as follows:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Wrapped ESP Header                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                      Existing ESP Encapsulation               |\n      ~   \
    \                                                            ~\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                         Figure 1: WESP Packet Format\n   By preserving the body\
    \ of the existing ESP packet format, a compliant\n   implementation can simply\
    \ add in the new header, without needing to\n   change the body of the packet.\
    \  The value of the new protocol used to\n   identify this new header is 141.\
    \  Further details are shown below:\n       0                   1            \
    \       2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Next Header  |   HdrLen      |  TrailerLen   |     Flags     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Padding (optional)                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Existing ESP Encapsulation               |\n   \
    \   ~                                                               ~\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 2: Detailed WESP Packet Format\n   Where:\n   Next\
    \ Header, 8 bits: This field MUST be the same as the Next Header\n   field in\
    \ the ESP trailer when using ESP in the Integrity-only mode.\n   When using ESP\
    \ with encryption, the \"Next Header\" field looses this\n   name and semantics\
    \ and becomes an empty field that MUST be\n   initialized to all zeros.  The receiver\
    \ MUST do some sanity checks\n   before the WESP packet is accepted.  The receiver\
    \ MUST ensure that\n   the Next Header field in the WESP header and the Next Header\
    \ field in\n   the ESP trailer match when using ESP in the Integrity-only mode.\
    \  The\n   packet MUST be dropped if the two do not match.  Similarly, the\n \
    \  receiver MUST ensure that the Next Header field in the WESP header is\n   an\
    \ empty field initialized to zero if using WESP with encryption.\n   The WESP\
    \ flags dictate if the packet is encrypted.\n   HdrLen, 8 bits: Offset from the\
    \ beginning of the WESP header to the\n   beginning of the Rest of Payload Data\
    \ (i.e., past the IV, if present\n   and any other WESP options defined in the\
    \ future) within the\n   encapsulated ESP header, in octets.  HdrLen MUST be set\
    \ to zero when\n   using ESP with encryption.  When using integrity-only ESP,\
    \ the\n   following HdrLen values are invalid: any value less than 12; any\n \
    \  value that is not a multiple of 4; any value that is not a multiple\n   of\
    \ 8 when using IPv6.  The receiver MUST ensure that this field\n   matches with\
    \ the header offset computed from using the negotiated\n   Security Association\
    \ (SA) and MUST drop the packet in case it does\n   not match.\n   TrailerLen,\
    \ 8 bits: TrailerLen contains the size of the Integrity\n   Check Value (ICV)\
    \ being used by the negotiated algorithms within the\n   IPsec SA, in octets.\
    \  TrailerLen MUST be set to zero when using ESP\n   with encryption.  The receiver\
    \ MUST only accept the packet if this\n   field matches with the value computed\
    \ from using the negotiated SA.\n   This ensures that sender is not deliberately\
    \ setting this value to\n   obfuscate a part of the payload from examination by\
    \ a trusted\n   intermediary device.\n   Flags, 8 bits: The bits are defined most-significant-bit\
    \ (MSB) first,\n   so bit 0 is the most significant bit of the flags octet.\n\
    \       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n      |V V|E|P| Rsvd  |\n  \
    \    +-+-+-+-+-+-+-+-+\n      Figure 3: Flags Format\n   Version (V), 2 bits:\
    \ MUST be sent as 0 and checked by the receiver.\n   If the version is different\
    \ than an expected version number (e.g.,\n   negotiated via the control channel),\
    \ then the packet MUST be dropped\n   by the receiver.  Future modifications to\
    \ the WESP header require a\n   new version number.  In particular, the version\
    \ of WESP defined in\n   this document does not allow for any extensions.  However,\
    \ old\n   implementations will still be able to find the encapsulated cleartext\n\
    \   packet using the HdrLen field from the WESP header, when the 'E' bit\n   is\
    \ not set.  Intermediate nodes dealing with unknown versions are not\n   necessarily\
    \ able to parse the packet correctly.  Intermediate\n   treatment of such packets\
    \ is policy dependent (e.g., it may dictate\n   dropping such packets).\n   Encrypted\
    \ Payload (E), 1 bit: Setting the Encrypted Payload bit to 1\n   indicates that\
    \ the WESP (and therefore ESP) payload is protected with\n   encryption.  If this\
    \ bit is set to 0, then the payload is using\n   integrity-only ESP.  Setting\
    \ or clearing this bit also impacts the\n   value in the WESP Next Header field,\
    \ as described above.  The\n   recipient MUST ensure consistency of this flag\
    \ with the negotiated\n   policy and MUST drop the incoming packet otherwise.\n\
    \   Padding header (P), 1 bit: If set (value 1), the 4-octet padding is\n   present.\
    \  If not set (value 0), the 4-octet padding is absent.  This\n   padding MUST\
    \ be used with IPv6 in order to preserve IPv6 8-octet\n   alignment.  If WESP\
    \ is being used with UDP encapsulation (see Section\n   2.1 below) and IPv6, the\
    \ Protocol Identifier (0x00000002) occupies 4\n   octets so the IPv6 padding is\
    \ not needed, as the header is already on\n   an 8-octet boundary.  This padding\
    \ MUST NOT be used with IPv4, as it\n   is not needed to guarantee 4-octet IPv4\
    \ alignment.\n   Rsvd, 4 bits: Reserved for future use.  The reserved bits MUST\
    \ be\n   sent as 0, and ignored by the receiver.  Future documents defining\n\
    \   any of these bits MUST NOT affect the distinction between encrypted\n   and\
    \ unencrypted packets or the semantics of HdrLen.  In other words,\n   even if\
    \ new bits are defined, old implementations will be able to\n   find the encapsulated\
    \ packet correctly.  Intermediate nodes dealing\n   with unknown reserved bits\
    \ are not necessarily able to parse the\n   packet correctly.  Intermediate treatment\
    \ of such packets is policy\n   dependent (e.g., it may dictate dropping such\
    \ packets).\n   Future versions of this protocol may change the version number\
    \ and/or\n   the reserved bits sent, possibly by negotiating them over the control\n\
    \   channel.\n   As can be seen, the WESP format extends the standard ESP header\
    \ by\n   the first 4 octets for IPv4 and optionally (see above) by 8 octets\n\
    \   for IPv6.\n"
- title: 2.1.  UDP Encapsulation
  contents:
  - "2.1.  UDP Encapsulation\n   This section describes a mechanism for running the\
    \ new packet format\n   over the existing UDP encapsulation of ESP as defined\
    \ in RFC 3948.\n   This allows leveraging the existing IKE negotiation of the\
    \ UDP port\n   for Network Address Translation Traversal (NAT-T) discovery and\
    \ usage\n   [RFC3947] [RFC4306], as well as preserving the existing UDP ports\
    \ for\n   ESP (port 4500).  With UDP encapsulation, the packet format can be\n\
    \   depicted as follows.\n       0                   1                   2   \
    \                3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        Src Port (4500)        | Dest Port (4500)              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \             Length            |          Checksum             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          Protocol Identifier (value = 0x00000002)             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Next Header  |   HdrLen      |  TrailerLen   |    Flags      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Existing ESP Encapsulation               |\n   \
    \   ~                                                               ~\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 4: UDP-Encapsulated WESP Header\n   Where:\n   Source/Destination\
    \ port (4500) and checksum: describes the UDP\n   encapsulation header, per RFC\
    \ 3948.\n   Protocol Identifier: new field to demultiplex between UDP\n   encapsulation\
    \ of IKE, UDP encapsulation of ESP per RFC 3948, and the\n   UDP encapsulation\
    \ in this specification.\n   According to RFC 3948, Section 2.2, a 4-octet value\
    \ of zero (0)\n   immediately following the UDP header indicates a Non-ESP marker,\n\
    \   which can be used to assume that the data following that value is an\n   IKE\
    \ packet.  Similarly, a value greater then 255 indicates that the\n   packet is\
    \ an ESP packet and the 4-octet value can be treated as the\n   ESP Security Parameter\
    \ Index (SPI).  However, RFC 4303, Section 2.1\n   indicates that the values 1-255\
    \ are reserved and cannot be used as\n   the SPI.  We leverage that knowledge\
    \ and use one of these reserved\n   values to indicate that the UDP encapsulated\
    \ ESP header contains this\n   new packet format for ESP encapsulation.\n   The\
    \ remaining fields in the packet have the same meaning as per\n   Section 2 above.\n"
- title: 2.2.  Transport and Tunnel Mode Considerations
  contents:
  - "2.2.  Transport and Tunnel Mode Considerations\n   This extension is equally\
    \ applicable to transport and tunnel mode\n   where the ESP Next Header field\
    \ is used to differentiate between\n   these modes, as per the existing IPsec\
    \ specifications.\n"
- title: 2.2.1.  Transport Mode Processing
  contents:
  - "2.2.1.  Transport Mode Processing\n   In transport mode, ESP is inserted after\
    \ the IP header and before a\n   next layer protocol, e.g., TCP, UDP, ICMP, etc.\
    \  The following\n   diagrams illustrate how WESP is applied to the ESP transport\
    \ mode for\n   a typical packet, on a \"before and after\" basis.\n      BEFORE\
    \ APPLYING WESP -IPv4\n            -------------------------------------------------\n\
    \            |orig IP hdr  | ESP |     |      |   ESP   | ESP|\n            |(any\
    \ options)| Hdr | TCP | Data | Trailer | ICV|\n            -------------------------------------------------\n\
    \                                |<---- encryption ---->|\n                  \
    \        |<------- integrity -------->|\n      AFTER APPLYING WESP - IPv4\n  \
    \          --------------------------------------------------------\n        \
    \    |orig IP hdr  | WESP | ESP |     |      |   ESP   | ESP|\n            |(any\
    \ options)| Hdr  | Hdr | TCP | Data | Trailer | ICV|\n            --------------------------------------------------------\n\
    \                                       |<---- encryption ---->|\n           \
    \                      |<------- integrity -------->|\n      BEFORE APPLYING WESP\
    \ - IPv6\n          --------------------------------------------------------------\n\
    \          | orig |hop-by-hop,dest*,|   |dest|   |    | ESP   | ESP|\n       \
    \   |IP hdr|routing,fragment |ESP|opt*|TCP|Data|Trailer| ICV|\n          --------------------------------------------------------------\n\
    \                                       |<---- encryption --->|\n            \
    \                       |<----- integrity ------->|\n      AFTER APPLYING WESP\
    \ - IPv6\n          --------------------------------------------------------------\n\
    \          | orig |hop-by-hop,dest*,|    |   |dest|   |    | ESP   | ESP|\n  \
    \        |IP hdr|routing,fragment |WESP|ESP|opt*|TCP|Data|Trailer| ICV|\n    \
    \      --------------------------------------------------------------\n      \
    \                                      |<---- encryption --->|\n             \
    \                           |<----- integrity ------->|\n          * = if present,\
    \ could be before WESP, after ESP, or both\n    All other considerations are as\
    \ per RFC 4303.\n"
- title: 2.2.2.  Tunnel Mode Processing
  contents:
  - "2.2.2.  Tunnel Mode Processing\n   In tunnel mode, ESP is inserted after the\
    \ new IP header and before\n   the original IP header, as per RFC 4303.  The following\
    \ diagram\n   illustrates how WESP is applied to the ESP tunnel mode for a typical\n\
    \   packet, on a \"before-and-after\" basis.\n      BEFORE APPLYING WESP - IPv4\n\
    \          ---------------------------------------------------------\n       \
    \   |new IP hdr*  |   | orig IP hdr*  |   |    | ESP   | ESP|\n          |(any\
    \ options)|ESP| (any options) |TCP|Data|Trailer| ICV|\n          ---------------------------------------------------------\n\
    \                            |<--------- encryption --------->|\n            \
    \            |<----------- integrity ------------>|\n      AFTER APPLYING WESP\
    \ - IPv4\n          --------------------------------------------------------------\n\
    \          |new IP hdr*  |    |   | orig IP hdr*  |   |    | ESP   | ESP|\n  \
    \        |(any options)|WESP|ESP| (any options) |TCP|Data|Trailer| ICV|\n    \
    \      --------------------------------------------------------------\n      \
    \                           |<--------- encryption --------->|\n             \
    \                |<----------- integrity ------------>|\n      BEFORE APPLYING\
    \ WESP - IPv6\n      -----------------------------------------------------------------\n\
    \      |new IP|new ext |   |orig IP|orig ext|   |    | ESP   | ESP|\n      | hdr*\
    \ | hdrs*  |ESP|  hdr* | hdrs * |TCP|Data|Trailer| ICV|\n      -----------------------------------------------------------------\n\
    \                          |<--------- encryption ---------->|\n             \
    \         |<------------- integrity ----------->|\n      AFTER APPLYING WESP -\
    \ IPv6\n      -----------------------------------------------------------------\n\
    \      |new IP|new ext |    |   |orig IP|orig ext|   |    | ESP   | ESP|\n   \
    \   | hdr* | hdrs*  |WESP|ESP|  hdr* | hdrs * |TCP|Data|Trailer| ICV|\n      -----------------------------------------------------------------\n\
    \                               |<--------- encryption ---------->|\n        \
    \                   |<------------- integrity ----------->|\n          * = if\
    \ present, construction of outer IP hdr/extensions and\n              modification\
    \ of inner IP hdr/extensions is discussed in\n              the Security Architecture\
    \ document.\n   All other considerations are as per RFC 4303.\n"
- title: 2.3.  IKE Considerations
  contents:
  - "2.3.  IKE Considerations\n   This document assumes that WESP negotiation is performed\
    \ using IKEv2.\n   In order to negotiate the new format of ESP encapsulation via\
    \ IKEv2\n   [RFC4306], both parties need to agree to use the new packet format.\n\
    \   This can be achieved using a notification method similar to\n   USE_TRANSPORT_MODE,\
    \ defined in RFC 4306.\n   The notification, USE_WESP_MODE (value 16415) MUST\
    \ be included in a\n   request message that also includes an SA payload requesting\
    \ a\n   CHILD_SA using ESP.  It signals that the sender supports the WESP\n  \
    \ version defined in the current document and requests that the\n   CHILD_SA use\
    \ WESP mode rather than ESP for the SA created.  If the\n   request is accepted,\
    \ the response MUST also include a notification of\n   type USE_WESP_MODE.  If\
    \ the responder declines the request, the\n   CHILD_SA will be established using\
    \ ESP, as per RFC 4303.  If this is\n   unacceptable to the initiator, the initiator\
    \ MUST delete the SA.\n   Note: Except when using this option to negotiate WESP\
    \ mode, all\n   CHILD_SAs will use standard ESP.\n   Negotiation of WESP in this\
    \ manner preserves all other negotiation\n   parameters, including NAT-T [RFC3948].\
    \  NAT-T is wholly compatible\n   with this wrapped format and can be used as-is,\
    \ without any\n   modifications, in environments where NAT is present and needs\
    \ to be\n   taken into account.\n   WESP version negotiation is not introduced\
    \ as part of this\n   specification.  If the WESP version is updated in a future\n\
    \   specification, then that document MUST specify how the WESP version\n   is\
    \ negotiated.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   As this document augments the existing ESP encapsulation\
    \ format, UDP\n   encapsulation definitions specified in RFC 3948 and IKE negotiation\n\
    \   of the new encapsulation, the security observations made in those\n   documents\
    \ also apply here.  In addition, as this document allows\n   intermediate device\
    \ visibility into IPsec ESP encapsulated frames for\n   the purposes of network\
    \ monitoring functions, care should be taken\n   not to send sensitive data over\
    \ connections using definitions from\n   this document, based on network domain/administrative\
    \ policy.  A\n   strong key agreement protocol, such as IKEv2, together with a\
    \ strong\n   policy engine should be used in determining appropriate security\n\
    \   policy for the given traffic streams and data over which it is being\n   employed.\n\
    \   ESP is end-to-end and it will be impossible for the intermediate\n   devices\
    \ to verify that all the fields in the WESP header are correct.\n   It is thus\
    \ possible to modify the WESP header so that the packet\n   sneaks past a firewall\
    \ if the fields in the WESP header are set to\n   something that the firewall\
    \ will allow.  The endpoint thus must\n   verify the sanity of the WESP header\
    \ before accepting the packet.  In\n   an extreme case, someone colluding with\
    \ the attacker, could change\n   the WESP fields back to the original values so\
    \ that the attack goes\n   unnoticed.  However, this is not a new problem and\
    \ it already exists\n   IPsec.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   The WESP protocol number assigned by IANA out of\
    \ the IP Protocol\n   Number space is 141.\n   The USE_WESP_MODE notification\
    \ number assigned out of the \"IKEv2\n   Notify Message Types - Status Types\"\
    \ registry's 16384-40959 (Expert\n   Review) range is 16415.\n   The SPI value\
    \ of 2 has been assigned by IANA out of the reserved SPI\n   range from the SPI\
    \ values registry to indicate use of the WESP\n   protocol within a UDP-encapsulated,\
    \ NAT-T environment.\n   IANA has created a new registry for \"WESP Flags\" to\
    \ be managed as\n   follows:\n   The first 2 bits are the WESP Version Number.\
    \  The value 0 is\n   assigned to the version defined in this specification. \
    \ Further\n   assignments of the WESP Version Number are to be managed via the\
    \ IANA\n   Policy of \"Standards Action\" [RFC5226].  For WESP version numbers,\n\
    \   the unassigned values are 1, 2, and 3.  The Encrypted Payload bit is\n   used\
    \ to indicate if the payload is encrypted or using integrity-only\n   ESP.  The\
    \ Padding Present bit is used to signal the presence of\n   padding.  The remaining\
    \ 4 bits of the WESP Flags are undefined and\n   future assignment is to be managed\
    \ via the IANA Policy of \"IETF\n   Review\" [RFC5226].\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   The authors would like to acknowledge the following people\
    \ for their\n   feedback on updating the definitions in this document:\n   David\
    \ McGrew, Brian Weis, Philippe Joubert, Brian Swander, Yaron\n   Sheffer, Pasi\
    \ Eronen, Men Long, David Durham, Prashant Dewan, Marc\n   Millier, Russ Housley,\
    \ and Jari Arkko, among others.\n   Manav Bhatia would also like to acknowledge\
    \ Swati and Maitri for\n   their continued support.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2410]    Glenn, R. and S. Kent, \"The NULL Encryption Algorithm\n\
    \                and Its Use With IPsec\", RFC 2410, November 1998.\n   [RFC3948]\
    \    Huttunen, A., Swander, B., Volpe, V., DiBurro, L., and\n                M.\
    \ Stenberg, \"UDP Encapsulation of IPsec ESP Packets\",\n                RFC 3948,\
    \ January 2005.\n   [RFC4303]    Kent, S., \"IP Encapsulating Security Payload\
    \ (ESP)\", RFC\n                4303, December 2005.\n   [RFC4543]    McGrew,\
    \ D. and J. Viega, \"The Use of Galois Message\n                Authentication\
    \ Code (GMAC) in IPsec ESP and AH\", RFC\n                4543, May 2006.\n  \
    \ [RFC5226]    Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \             IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n     \
    \           May 2008.\n"
- title: 6.2. Informative References
  contents:
  - "6.2. Informative References\n   [RFC3947]    Kivinen, T., Swander, B., Huttunen,\
    \ A., and V. Volpe,\n                \"Negotiation of NAT-Traversal in the IKE\"\
    , RFC 3947,\n                January 2005.\n   [RFC4302]    Kent, S., \"IP Authentication\
    \ Header\", RFC 4302, December\n                2005.\n   [RFC4306]    Kaufman,\
    \ C., Ed., \"Internet Key Exchange (IKEv2)\n                Protocol\", RFC 4306,\
    \ December 2005.\n   [Heuristics] Kivinen, T. and D. McDonald, \"Heuristics for\
    \ Detecting\n                ESP-NULL packets\", Work in Progress, March 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ken Grewal\n   Intel Corporation\n   2111 NE 25th Avenue,\
    \ JF3-232\n   Hillsboro, OR  97124\n   USA\n   EMail: ken.grewal@intel.com\n \
    \  Gabriel Montenegro\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond,\
    \ WA  98052\n   USA\n   EMail: gabriel.montenegro@microsoft.com\n   Manav Bhatia\n\
    \   Alcatel-Lucent\n   Manyata Embassy\n   Nagawara Bangalore\n   India\n   EMail:\
    \ manav.bhatia@alcatel-lucent.com\n"
