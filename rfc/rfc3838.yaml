- title: __initial_text__
  contents:
  - "          Policy, Authorization, and Enforcement Requirements\n             \
    \  of the Open Pluggable Edge Services (OPES)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes policy, authorization, and enforcement\n\
    \   requirements for the selection of the services to be applied to a\n   given\
    \ Open Pluggable Edge Services (OPES) flow.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Policy Architecture  . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n       3.1.  Policy Components and Functions  . . . . . . . . .\
    \ . . .  4\n       3.2.  Requirements for Policy Decision Points. . . . . . .\
    \ . .  5\n       3.3.  Requirements for Policy Enforcement Points . . . . . .\
    \ .  5\n   4.  Requirements for Interfaces  . . . . . . . . . . . . . . . . .\
    \  6\n       4.1.  Service Bindings Requirements  . . . . . . . . . . . . .  7\n\
    \             4.1.1.  Environment Variables  . . . . . . . . . . . . .  7\n  \
    \           4.1.2.  Requirements for Using State Information . . . .  8\n    \
    \         4.1.3.  Requirements for Passing Information Between\n             \
    \        Services . . . . . . . . . . . . . . . . . . . .  8\n       4.2.  Requirements\
    \ for Rule and Rules Management . . . . . . .  8\n             4.2.1.  Requirements\
    \ for Rule Providers  . . . . . . . .  8\n             4.2.2.  Requirements for\
    \ Rule Formats and Protocols  . .  9\n             4.2.3.  Requirements for Rule\
    \ Conditions . . . . . . . .  9\n             4.2.4.  Requirements for Rule Actions\
    \  . . . . . . . . .  9\n       4.3.  Requirements for Policy Expression . . .\
    \ . . . . . . . . 10\n   5.  Authentication of Principals and Authorization of\
    \ Services . . 10\n       5.1.  End users, Publishers and Other Considerations\
    \ . . . . . 11\n             5.1.1.  Considerations for End Users . . . . . .\
    \ . . . . 11\n             5.1.2.  Considerations for Publishing Sites. . . .\
    \ . . . 12\n             5.1.3.  Other Considerations . . . . . . . . . . . .\
    \ . . 12\n       5.2.  Authentication . . . . . . . . . . . . . . . . . . . .\
    \ . 12\n       5.3.  Authorization  . . . . . . . . . . . . . . . . . . . . .\
    \ 13\n       5.4.  Integrity and Encryption . . . . . . . . . . . . . . . . 14\n\
    \             5.4.1.  Integrity and Confidentiality of Authentication\n      \
    \               and Requests/Responses for Service . . . . . . . 14\n        \
    \     5.4.2.  Integrity and Confidentiality of Application\n                 \
    \    Content  . . . . . . . . . . . . . . . . . . . . 14\n       5.5.  Privacy.\
    \ . . . . . . . . . . . . . . . . . . . . . . . . 14\n   6.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 15\n   7.  References . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 15\n       7.1.  Normative References .\
    \ . . . . . . . . . . . . . . . . . 15\n       7.2.  Informative References .\
    \ . . . . . . . . . . . . . . . . 15\n   8.  Acknowledgements . . . . . . . .\
    \ . . . . . . . . . . . . . . . 16\n   9.  Authors' Addresses . . . . . . . .\
    \ . . . . . . . . . . . . . . 16\n   10. Full Copyright Statement . . . . . .\
    \ . . . . . . . . . . . . . 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Open Pluggable Edge Services (OPES) [1]  architecture\
    \ enables\n   cooperative application services (OPES services) between a data\n\
    \   provider, a data consumer, and zero or more OPES processors.  The\n   application\
    \ services under consideration analyze and possibly\n   transform application-level\
    \ messages exchanged between the data\n   provider and the data consumer.  The\
    \ OPES processor can distribute\n   the responsibility of service execution by\
    \ communicating and\n   collaborating with one or more remote callout servers.\n\
    \   The execution of such services is governed by a set of rules\n   installed\
    \ on the OPES processor.  The rule evaluation can trigger the\n   execution of\
    \ service applications local to the OPES processor or on a\n   remote callout\
    \ server.\n   Policies express the goals of an OPES processor as a set of rules\n\
    \   used to administer, manage, and control access to resources.  The\n   requirements\
    \ in this document govern the behavior of OPES entities in\n   determining which\
    \ of the available services are to be applied to a\n   given message, if any.\n\
    \   The scope of OPES policies described in this document are limited to\n   those\
    \ that describe which services to call and, if appropriate, with\n   what parameters.\
    \  These policies do not include those that prescribe\n   the behavior of the\
    \ called services.  It is desirable to enable a\n   common management framework\
    \ for specifying policies for both the\n   calling of and the behavior of a service.\
    \  The integration of such a\n   function is the domain of policy administration\
    \ user interaction\n   applications.\n   The document is organized as follows:\
    \ Section 2 considers policy\n   framework.  Section 3 discusses requirements\
    \ for interfaces, while\n   section 4 examines authentication of principals and\
    \ authorization of\n   services.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [4].\
    \  When used with\n   the normative meanings, these keywords will be all uppercase.\n\
    \   Occurrences of these words in lowercase comprise normal prose usage,\n   with\
    \ no normative implications.\n"
- title: 3.  Policy Architecture
  contents:
  - "3.  Policy Architecture\n   This section describes the architectural policy decomposition\n\
    \   requirements.  It also describes the requirements for the interfaces\n   between\
    \ the policy components.  Many of the rules here were\n   determined under the\
    \ influence of RFC 3238 [2].\n"
- title: 3.1.  Policy Components and Functions
  contents:
  - "3.1.  Policy Components and Functions\n   The policy functions are decomposed\
    \ into three components: a Rule\n   Author, a Policy Decision Point (PDP) [6],\
    \ and a Policy Enforcement\n   Point (PEP) [6].  The Rule Author provides the\
    \ rules to be used by an\n   OPES entity.  These rules control the invocation\
    \ of services on\n   behalf of the rule author.  The PDP and the PEP interpret\
    \ the\n   collected rules and appropriately enforce them.  The decomposition is\n\
    \   illustrated in Figure 1.\n         +--------+                         +--------+\n\
    \         |  Rule  |                         |  Rule  |\n         | Author | \
    \         ...            | Author |\n         +--------+                     \
    \    +--------+\n              |                                 |\n         \
    \     |                                 |\n              |          +----------+\
    \           |\n              |          |  Policy  |           |  <- PDP Interface\n\
    \              +--------->| Decision |<----------+\n                         |\
    \  Point   |\n                         +----------+\n                        \
    \     | ^\n                             | |\n                             | |\
    \  <- PEP Interface\n                             | |\n                      \
    \       V |\n                       +--------------+   ...\n                 \
    \ ---> |    Policy    | --->\n                       |  Enforcement |       Data\
    \ Traffic\n                  <--- |    Point     | <---\n                    \
    \   +--------------+\n                  Figure 1: Policy Components\n   The decomposition\
    \ of policy control into a PDP and a PEP permit the\n   offloading of some tasks\
    \ to an administrative service that may be\n   located on a server separate from\
    \ the real-time enforcement services\n   of the PEP that reside on the OPES processor.\n\
    \   The PDP provides for the authentication and authorization of rule\n   authors\
    \ and the validation and compilation of rules.\n   The PEP resides in the data\
    \ filter where the data from an OPES flow\n   is evaluated against the compiled\
    \ rules and appropriate calls to the\n   requested services are performed.\n \
    \  Interfaces between these architectural components are points of\n   interoperability.\
    \  The interface between rule authors and the policy\n   decision points (PDP\
    \ Interface) MUST use the format that may result\n   from the requirements as\
    \ described in this document.\n   The interface between the policy decision points\
    \ and the policy\n   enforcement points (PEP Interface) can be internal to a specific\n\
    \   vendor implementation of an OPES processor.  Implementations MUST use\n  \
    \ standard interface only if the PDP and the PEP reside on different\n   OPES\
    \ processors.\n"
- title: 3.2.  Requirements for Policy Decision Points
  contents:
  - "3.2.  Requirements for Policy Decision Points\n   The Policy Decision Point is\
    \ essentially a policy compiler.  The PDP\n   MUST be a service that provides\
    \ administrative support to the\n   enforcement points.  The PDP service MUST\
    \ authenticate the rule\n   authors.\n   The PDP MUST verify that the specified\
    \ rules are within the scope of\n   the rule authors authority.  The PDP MUST\
    \ be a component of the OPES\n   Administration Authority.\n"
- title: 3.3.  Requirements for Policy Enforcement Points
  contents:
  - "3.3.  Requirements for Policy Enforcement Points\n   In the OPES architecture,\
    \ the data filter represents a Policy\n   Enforcement point (PEP).  At this point,\
    \ data from an OPES flow is\n   evaluated against the compiled rules, and appropriate\
    \ calls to the\n   requested services are performed.\n   In the PEP rules MAY\
    \ chain actions together, where a series of\n   services to be called are specified.\
    \  Implementation MUST ensure the\n   passing of information from one called service\
    \ to another.\n   Implementation MUST NOT prohibit the re-evaluation of a message\
    \ to\n   determine if another service or set of services should be called.\n \
    \  The execution of an action (i.e., the triggering of a rule) may lead\n   to\
    \ the modification of message property values.  For example, an OPES\n   service\
    \ that under some circumstances converts JPEG images to GIF\n   images modifies\
    \ the content type of the requested web object.\n   Such modification of message\
    \ property values may change the behavior\n   of subsequently performed OPES actions.\
    \  The data filter SHOULD act\n   on matched rules before it evaluates subsequent\
    \ rules.  Multiple\n   matched rules can be triggered simultaneously if the data\
    \ filter can\n   determine in advance that there are no side effects from the\n\
    \   execution of any specific rule.\n   A data filter MAY evaluate messages several\
    \ times in the course of\n   handling an OPES flow.  The rule processing points\
    \ MAY be defined by\n   administratively defined names.  The definition of such\
    \ names can\n   serve as a selector for policy rules to determine the applicability\n\
    \   of a rule or a set of rules at each processing point.\n   Policy roles ([5]\
    \ and [6]) SHOULD be used where they aid in the\n   development of the OPES policy\
    \ model.\n   Figure 2 expresses a typical message data flow between a data\n \
    \  consumer application, an OPES processor, and a data provider\n   application.\
    \  There are four commonly used processing points\n   identified by the numbers\
    \ 1 through 4.\n            +--------+       +-----------+       +---------+\n\
    \            |        |<------|4         3|<------|         |\n            | Data\
    \   |       |  OPES     |       | Data    |\n            |Consumer|       | Processor\
    \ |       |Provider |\n            |  Appl. |------>|1         2|------>| Appl.\
    \   |\n            +--------+       +-----------+       +---------+\n        \
    \         Figure 2: Processing Execution Points\n   Any data filter (PEP) or any\
    \ administrative (PDP) implementation MUST\n   support the four rule processing\
    \ points.\n   o  Data Consumer Request handling role: This involves request\n\
    \      processing when received from a Data Consumer Application.\n   o  OPES\
    \ Processor Request handling role: This involves request\n      processing before\
    \ forwarding to Data Provider Application.\n   o  Data Provider Response handling\
    \ role: This involves response\n      processing when forwarding to Data Consumer\
    \ Application.\n   o  OPES Processor Response handling role: This involves response\n\
    \      processing when forwarding to Data Consumer Application.\n"
- title: 4.  Requirements for Interfaces
  contents:
  - "4.  Requirements for Interfaces\n   The interface between the policy system and\
    \ OPES services needs to\n   include the ability to pass system state information\
    \ as well as the\n   subject message.\n"
- title: 4.1.  Service Bindings Requirements
  contents:
  - "4.1.  Service Bindings Requirements\n   The invoked OPES services MUST be able\
    \ to be specified in a location\n   independent fashion.  That is, the rule authors\
    \ need not know and\n   need not specify the instance of an OPES service in the\
    \ rules.\n   The rule author SHOULD be able to identify the required service at\n\
    \   the detail level that is appropriate for his or her needs.  The rule\n   author\
    \ SHOULD be able to specify a type of service or be able to\n   specify any service\
    \ that fits a general category of service to be\n   applied to its traffic.\n\
    \   The binding of OPES service names to a specific service MAY be\n   distributed\
    \ between the PDP and the PEP.  As rules are compiled and\n   validated by the\
    \ PDP, they MUST be resolved to a specific\n   installations' set of homogeneous\
    \ OPES service.\n   The selection of a specific instance MAY be postponed and\
    \ left to PEP\n   to select at either the rule installation time or at run time.\
    \  To\n   achieve interoperability, PEP MUST support resolving a generic name\n\
    \   to a specific instance.  It is possible to use services such as SLP\n   or\
    \ UDDI to resolve generic service names to specific OPES service\n   instances.\n\
    \   The policy system MAY support dynamic discovery of service bindings.\n   The\
    \ rule author may not know specific service bindings, such as\n   protocol and\
    \ parameters, when a rule (as specified on the PDP\n   Interface) is general in\
    \ nature.  The required binding information\n   MUST be provided by the PDP and\
    \ conveyed on the PEP Interface.  A\n   service description methodology such as\
    \ WSDL [8] MUST be present in\n   the policy system.\n"
- title: 4.1.1.  Environment Variables
  contents:
  - "4.1.1.  Environment Variables\n   There may be a need to define and support a\
    \ means for maintaining\n   state information that can be used in both condition\
    \ evaluation and\n   action execution.  Depending on the execution environment,\
    \ OPES\n   services MAY have the freedom to define variables that are needed and\n\
    \   use these variables to further define their service behavior without\n   the\
    \ data filter support.\n"
- title: 4.1.2.  Requirements for Using State Information
  contents:
  - "4.1.2.  Requirements for Using State Information\n   Policy rules MAY specify\
    \ that state information be used as part of\n   the evaluation of the rules against\
    \ a given message in an OPES flow.\n   Thus, the policy system SHOULD support\
    \ the maintenance of groups that\n   can be used in evaluating rule conditions.\
    \  Membership in such groups\n   can be used as action triggers.\n   For example,\
    \ an authorized site blocking service might conclude that\n   a particular user\
    \ shouldn't be permitted access to a certain web\n   site.  Rather than calling\
    \ the service for each request sent by such\n   a user, a rule might be created\
    \ to determine whether a user is a\n   member of blocked users and if a requested\
    \ site is a member of\n   blocked-sites, and then invoke a local blocking service\
    \ to return an\n   appropriate message to the user.\n"
- title: 4.1.3.  Requirements for Passing Information Between Services
  contents:
  - "4.1.3.  Requirements for Passing Information Between Services\n   Environment\
    \ variables can be used to pass state information between\n   services.  For example,\
    \ analysis of the request or modifications to\n   the request may need to be captured\
    \ as state information that can be\n   passed to other services on the request\
    \ path or to services on the\n   response(s) associated with that request.\n \
    \  In the PEP, there SHOULD be provisions to enable setting up variables\n   when\
    \ returning from a service call and passing variables to other\n   called services\
    \ based on policy.\n"
- title: 4.2.  Requirements for Rule and Rules Management
  contents:
  - "4.2.  Requirements for Rule and Rules Management\n   This section provides the\
    \ requirements for rule management.  The\n   rules are divided into two groups.\
    \  Some rules are provided by the\n   data consumer application, and other rules\
    \ are provided by the data\n   provider application.\n"
- title: 4.2.1.  Requirements for Rule Providers
  contents:
  - "4.2.1.  Requirements for Rule Providers\n   The requirements for rule providers\
    \ are:\n   o  Rule providers MUST be authenticated and authorized for rules that\n\
    \      apply to their network role.\n   o  Rule providers MUST NOT be able to\
    \ specify rules that are NOT\n      within their scope of authority.\n   o  Rule\
    \ providers SHOULD be able to specify only what is needed for\n      their services.\n\
    \   o  Compilation of rules from different sources MUST NOT lead to\n      execution\
    \ of conflicting rules.\n   o  The resolution of such rule conflicts is out of\
    \ scope.\n   o  Rules are assumed to be static and applied to current network\n\
    \      state.\n"
- title: 4.2.2.  Requirements for Rule Formats and Protocols
  contents:
  - "4.2.2.  Requirements for Rule Formats and Protocols\n   It is desirable to choose\
    \ standard technologies like XML to specify\n   the rule language format.\n  \
    \ Rules need to be sent from the rule authors to the OPES\n   administrative server\
    \ for service authorization, rule validation, and\n   compilation.  The mechanisms\
    \ for doing that are out of scope of the\n   current work.\n   Once the rules\
    \ are authorized, validated, and compiled by the\n   administrative server, the\
    \ rules need to be sent to the OPES\n   processor.  The mechanisms for doing that\
    \ are out of scope of the\n   current work.\n"
- title: 4.2.3.  Requirements for Rule Conditions
  contents:
  - "4.2.3.  Requirements for Rule Conditions\n   Rule conditions MUST be matched\
    \ against attribute values of the\n   encapsulated protocol as well as environment\
    \ variable values.\n   Attribute values of the encapsulated protocol include protocol\
    \ header\n   values and possibly also protocol body values.\n   Some OPES services\
    \ may need to be invoked for all user requests or\n   server responses, such as\
    \ services with logging functionality, for\n   example.  The rule system SHOULD\
    \ allow unconditional rules rather\n   than requiring rule authors to specify\
    \ rule conditions that are\n   always true.\n"
- title: 4.2.4.  Requirements for Rule Actions
  contents:
  - "4.2.4.  Requirements for Rule Actions\n   The rule system MUST allow for the\
    \ specification of rule actions that\n   are triggered if the conditions of a\
    \ rule are met.  Matched rules\n   typically lead to the invocation of local or\
    \ remote services.  Rule\n   actions MUST identify the OPES service that is to\
    \ be executed for the\n   current message request or response.\n   Rule actions\
    \ MAY contain run-time parameters which can be used to\n   control the behavior\
    \ of an OPES service.  If specified, these\n   parameters MUST be passed to the\
    \ executed OPES service.\n"
- title: 4.3.  Requirements for Policy Expression
  contents:
  - "4.3.  Requirements for Policy Expression\n   OPES processors MUST enforce policy\
    \ requirements set by data\n   consumers and/or data publishers in accordance\
    \ with the architecture\n   [1] and this document.  They cannot do this consistently\
    \ unless there\n   are an unambiguous semantics and representation of the data\
    \ elements\n   mentioned in the policy.  For example, this document mentions\n\
    \   protection of user \"identity\" and \"profile\" information.  If a user\n\
    \   specifies that his identity must not be shared with other OPES\n   administrative\
    \ trust domains, and later discovers that his family\n   name has been shared,\
    \ he might complain.  If he were told that\n   \"family names are not considered\
    \ 'identities' by this site\", he would\n   probably feel that he had cause for\
    \ complaint.  Or, he might be told\n   that when he selected \"do not share identity\"\
    \ on a web form offered\n   by the OPES service provider, that this only covered\
    \ his login name,\n   and that a different part of the form had to be filled out\
    \ to protect\n   the family name.  A further breakdown can occur if the configuration\n\
    \   information provided by such a web form gets translated into\n   configuration\
    \ elements given to an OPES processor, and those\n   configuration elements are\
    \ difficult for a software engineer to\n   translate into policy enforcement.\
    \  The data elements might have\n   confusing names or be split into groupings\
    \ that are difficult to\n   relate to one another.\n   The examples illustrate\
    \ why the OPES policy MUST have definitions of\n   data elements, their relationships,\
    \ and how they relate to\n   enforcement.  These semantics of essential items\
    \ do not require a\n   separate protocol, but they MUST be agreed upon by all\
    \ OPES service\n   providers, and the users of OPES services MUST be assured that\
    \ they\n   have the ability to know their settings, to change them if the\n  \
    \ service provider policy allows the changes, and to have reasonable\n   assurance\
    \ that they are enforced with reasonable interpretations.\n   The requirements\
    \ for policy data elements in the OPES specification\n   do not have to be all-inclusive,\
    \ but they MUST cover the minimal set\n   of elements that enable the policies\
    \ that protect the data of end\n   users and publishers.\n"
- title: 5.  Authentication of Principals and Authorization of Services
  contents:
  - "5.  Authentication of Principals and Authorization of Services\n   This section\
    \ considers the authorization and authentication of OPES\n   services.\n"
- title: 5.1.  End Users, Publishers and Other Considerations
  contents:
  - '5.1.  End Users, Publishers and Other Considerations

    '
- title: 5.1.1.  Considerations for End Users
  contents:
  - "5.1.1.  Considerations for End Users\n   An OPES rule determines which attributes\
    \ of traffic will trigger the\n   application of OPES services.  The author of\
    \ the service can supply\n   rules, but the author cannot supply the necessary\
    \ part of the rule\n   precondition that determines which network users will have\
    \ the OPES\n   services applied for them.  This section discusses how users are\n\
    \   identified in the rule preconditions, and how users can select and\n   deselect\
    \ OPES services for their traffic, how an OPES service\n   provider SHOULD identify\
    \ the users, and how they determine whether or\n   not to add their service selection\
    \ to an OPES enforcement point.\n   An OPES service provider MUST satisfy these\
    \ major requirements:\n   o  Allow all users to request addition, deletion, or\
    \ blocking of OPES\n      services for their traffic (blocking means \"do not\
    \ use this\n      service for my traffic\").\n   o  Prevent untrusted users from\
    \ causing OPES services to interfere\n      with the traffic of other users.\n\
    \   o  Allow users to see their OPES service profiles and notify them of\n   \
    \   changes.\n   o  Keep a log of all profile activity for audit purposes.\n \
    \  o  Adhere to a privacy policy guarding users' profiles.\n   The administrator\
    \ of the PDP is a trusted party and can set policy\n   for individuals or groups\
    \ using out-of-band communication and\n   configuration files.  However, users\
    \ MUST always be able to query the\n   PDP in order to learn what rules apply\
    \ to their traffic.\n   Rules can be deposited in the PDP with no precondition\
    \ relating to\n   network users.  This is the way rules are packaged with an OPES\n\
    \   service when it is delivered for installation.  The PDP is\n   responsible\
    \ for binding identities to the rules and transmitting them\n   to the PEP.  The\
    \ identity used by the PDP for policy decisions MUST\n   be strictly mapped to\
    \ the identity used by the PEP.  Thus, if a user\n   goes through an identification\
    \ and authentication procedure with the\n   PDP and is known by identity \"A\"\
    , and if the PEP uses IP addresses\n   for identities, then the PDP MUST provide\
    \ the PEP with a binding\n   between \"A\" and A's current IP address.\n"
- title: 5.1.2.  Considerations for Publishing Sites
  contents:
  - "5.1.2.  Considerations for Publishing Sites\n   An OPES service provider acting\
    \ on behalf of different publishing\n   sites SHOULD keep all the above considerations\
    \ in mind when\n   implementing an OPES site.  Because each publishing site may\
    \ be\n   represented by only a single identity, the authentication and\n   authorization\
    \ databases may be easier for the PEP to handle.\n"
- title: 5.1.3.  Other Considerations
  contents:
  - "5.1.3.  Other Considerations\n   Authentication may be necessary between PDP's\
    \ and PEP's, PEP's and\n   callout servers, PEP's and other PEP's, and callout\
    \ servers and other\n   callout servers, for purposes of validating privacy policies.\
    \  In any\n   case where user data or traffic crosses trust domain boundaries,\
    \ the\n   originating trust domain SHOULD have a policy describing which other\n\
    \   domains are trusted, and it SHOULD authenticate the domains and their\n  \
    \ policies before forwarding information.\n"
- title: 5.2.  Authentication
  contents:
  - "5.2.  Authentication\n   When an individual selects (or deselects) an OPES service,\
    \ the\n   individual MUST be authenticated by the OPES service provider.  This\n\
    \   means that a binding between the user's communication channel and an\n   identity\
    \ known to the service provider is made in a secure manner.\n   This SHOULD be\
    \ done using a strong authentication method with a\n   public key certificate\
    \ for the user; this will be helpful in\n   resolving later disputes.  It is recommended\
    \ that the service\n   provider keep a log of all requests for OPES services.\
    \  The service\n   provider SHOULD use public key certificates to authenticate\
    \ responses\n   to requests.\n   The service provider may have trusted users who\
    \ through explicit or\n   implicit contract can assign, remove, or block OPES\
    \ services for\n   particular users.  The trusted users MUST be authenticated\
    \ before\n   being allowed to take actions which will modify the policy base,\
    \ and\n   thus, the actions of the PEP's.\n   Because of the sensitivity of user\
    \ profiles, the PEP Interface\n   between the PEP and the PDP MUST use a secure\
    \ transport protocol.\n   The PEP's MUST adhere to the privacy preferences of\
    \ the users.\n   When an OPES service provider accepts an OPES service, there\
    \ MUST be\n   a unique name for the service provided by the entity publishing\
    \ the\n   service.  Users MAY refer to the unique name when requesting a\n   service.\
    \  The unique name MUST be used when notifying users about\n   their service profiles.\
    \  PEP's MUST be aware of the unique name for\n   each service that can be accessed\
    \ from their domain.  There MUST be a\n   cryptographic binding between the unique\
    \ name and the entity\n   responsible for the functional behavior of the service,\
    \ i.e., if it\n   is a human language translating service, then the name of company\n\
    \   that wrote the software SHOULD be bound to the unique name.\n"
- title: 5.3.  Authorization
  contents:
  - "5.3.  Authorization\n   In addition to requesting or terminating specific services,\
    \ users MAY\n   block particular services, indicating that the services should\
    \ not be\n   applied to their traffic.  The \"block all OPES\" directive MUST\
    \ be\n   supported on a per user basis.\n   A response to a request for an OPES\
    \ service can be positive or\n   negative.  Reasons for a negative response include\
    \ \"service unknown\"\n   or \"service denied by PDP policy\".  Positive responses\
    \ SHOULD include\n   the identity of the requestor and the service and the type\
    \ of\n   request.\n   As described in the OPES Architecture [1], requests for\
    \ OPES services\n   originate in either the end user or the publisher domain.\
    \  The PDP\n   bases its authorization decision on the requestor and the domain.\n\
    \   There are some cases where the decision may be complicated.\n   o  The end\
    \ user has blocked a service, but a trusted user of the PDP\n      wants it applied\
    \ anyway.  In this case, the end user SHOULD\n      prevail, unless there are\
    \ security or legal reasons to leave it in\n      place.\n   o  The publisher\
    \ and the end user are in the same domain.  If the\n      publisher and end user\
    \ are both clients of a PDP, can they make\n      requests that effect each other's\
    \ processing?  In this case, the\n      PDP MUST have policy rules naming the\
    \ identities that are allowed\n      to set such rules.\n   o  The publisher requests\
    \ a service for an end user.  In this case,\n      where the PDP and PEP are in\
    \ the publisher's administrative\n      domain, the publisher has some way of\
    \ identifying the end user and\n      his traffic, and the PDP MUST enable the\
    \ PEP to enforce the\n      policy.  This is allowed, but the PDP MUST use strong\
    \ methods to\n      identify the user and his traffic.  The user MUST be able\
    \ to\n      request and receive information about the service profile that a\n\
    \      publisher site keeps about him.\n   o  The end user requests a service\
    \ specific to a publisher's identity\n      (e.g., nfl.com), but the publisher\
    \ prohibits the service (e.g.,\n      through a \"NO OPES\" application header).\
    \  As in the case above,\n      the publisher MUST be able to request and receive\
    \ profile\n      information that a user keeps about a publisher.\n   In general,\
    \ the PDP SHOULD keep its policy base in a manner that\n   makes the decision\
    \ procedure for all cases easy to understand.\n"
- title: 5.4.  Integrity and Encryption
  contents:
  - '5.4.  Integrity and Encryption

    '
- title: 5.4.1.  Integrity and Confidentiality of Authentication and Requests/
  contents:
  - "5.4.1.  Integrity and Confidentiality of Authentication and Requests/\n     \
    \   Responses for Service\n   The requests and responses SHOULD be cryptographically\
    \ tied to the\n   identities of the requestor and responder, and the messages\
    \ SHOULD\n   NOT be alterable without detection.  A certificate-based digital\n\
    \   signature is strongly recommended as part of the authentication\n   process.\
    \  A binding between the request and response SHOULD be\n   established using\
    \ a well-founded cryptographic means, to show that\n   the response is made in\
    \ reply to a specific request.\n"
- title: 5.4.2.  Integrity and Confidentiality of Application Content
  contents:
  - "5.4.2.  Integrity and Confidentiality of Application Content\n   As directed\
    \ by the PEP, content will be transformed in whole or in\n   part by OPES services.\
    \  This means that end-to-end cryptographic\n   protections cannot be used.  This\
    \ is probably acceptable for the vast\n   majority of traffic, but in cases where\
    \ a lesser form of content\n   protection is desirable, hop-by-hop protections\
    \ can be used instead.\n   The requirements for such protections are:\n   o  Integrity\
    \ using shared secrets MUST be used between all processing\n      points, end-to-end\
    \ (i.e., the two ends of a \"hop\" MUST share a\n      secret, but the secret\
    \ can be different between \"hops\").  The\n      processing points include the\
    \ callout servers.\n   o  Encryption can be requested separately, with the same\
    \ secret\n      sharing requirement between \"hops\".  When requested, encryption\n\
    \      applies to all processing points, including callout servers.\n   o  The\
    \ signal for integrity (and optionally encryption) MUST\n      originate from\
    \ either the requestor (in which case it is applied\n      to the response as\
    \ well) or the responder (in which case it covers\n      only the response).\n\
    \   o  The shared secrets MUST be unique (to within a very large\n      probabilistic\
    \ certainty) for each requestor/responder pair.  This\n      helps to protect\
    \ the privacy of end user data from insider attacks\n      or configuration errors\
    \ while it transits the provider's network.\n"
- title: 5.5.  Privacy
  contents:
  - "5.5.  Privacy\n   The PDP MUST have a privacy policy regarding OPES data such\
    \ as user\n   profiles for services.  Users MUST be able to limit the promulgation\n\
    \   of their profile data and their identities.\n   Supported limitations MUST\
    \ include:\n   o  The ability to prevent Identity from being given to callout\n\
    \      servers.\n   o  The ability to prevent Profile information from being shared.\n\
    \   o  The ability to prevent Traffic data from being sent to callout\n      servers\
    \ run by third parties.\n   o  The ability to prevent Traffic from particular\
    \ sites from being\n      given to OPES callout servers.\n   When an OPES service\
    \ is provided by a third-party, it MUST have a\n   privacy policy and identify\
    \ itself to upstream and downstream\n   parties, telling them how to access its\
    \ privacy policy.  A mechanism\n   is needed to specify these preferences and\
    \ a protocol to distribute\n   them (see section 3.3).\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document discusses policy, authorization\
    \ and enforcement\n   requirements of OPES.  In [3]  multiple security and privacy\
    \ issues\n   related to the OPES services are discussed.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]  Barbir, A., Penno, R., Chen, R., Hofmann,\
    \ M., and H. Orman, \"An\n        Architecture for Open Pluggable Edge Services\
    \ (OPES)\", RFC 3835,\n        August 2004.\n   [2]  Floyd, S. and L. Daigle,\
    \ \"IAB Architectural and Policy\n        Considerations for Open Pluggable Edge\
    \ Services\", RFC 3238,\n        January 2002.\n   [3]  Barbir, A., Batuner, O.,\
    \ Srinivas, B., Hofmann, M., and H.\n        Orman, \"Security Threats and Risks\
    \ for Open Pluggable Edge\n        Services (OPES)\", RFC 3837, August 2004.\n\
    \   [4]  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n  \
    \      Levels\", BCP 14, RFC 2119, March 1997.\n   [5] Moore, B., Ellesson, E.,\
    \ Strassner, J., and A. Westerinen,\n        \"Policy Core Information Model --\
    \ Version 1 Specification\", RFC\n        3060, February 2001.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [6]  Westerinen, A., Schnizlein, J., Strassner,\
    \ J., Scherling, M.,\n        Quinn, B., Herzog, S., Huynh, A., Carlson, M., Perry,\
    \ J., and S.\n        Waldbusser, \"Terminology for Policy-Based Management\"\
    , RFC 3198,\n        November 2001.\n   [7]  Fielding, R., Gettys, J., Mogul,\
    \ J., Frystyk, H., Masinter, L.,\n        Leach, P., and T. Berners-Lee, \"Hypertext\
    \ Transfer Protocol --\n        HTTP/1.1\", RFC 2616, June 1999.\n   [8]  Christensen,\
    \ et al., Web Services Description Language (WSDL)\n        1.1, W3C Note 15 March\
    \ 2001, http://www.w3.org/TR/wsdl\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Many thanks to Andreas Terzis, L. Rafalow (IBM), L.\
    \ Yang (Intel), M.\n   Condry (Intel), Randy Presuhn (Mindspring), and B. Srinivas\
    \ (Nokia).\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Abbie Barbir\n   Nortel Networks\n   3500 Carling\
    \ Avenue\n   Nepean, Ontario  K2H 8E9\n   Canada\n   Phone: +1 613 763 5229\n\
    \   EMail: abbieb@nortelnetworks.com\n   Oskar Batuner\n   Consultant\n   EMail:\
    \ batuner@attbi.com\n   Andre Beck\n   Lucent Technologies\n   101 Crawfords Corner\
    \ Road\n   Holmdel, NJ  07733\n   USA\n   EMail: abeck@bell-labs.com\n   Tat Chan\n\
    \   Nokia\n   5 Wayside Road\n   Burlington, MA  01803\n   USA\n   EMail: Tat.Chan@nokia.com\n\
    \   Hilarie Orman\n   Purple Streak Development\n   EMail: ho@alum.mit.edu\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
