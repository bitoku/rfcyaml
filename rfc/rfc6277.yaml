- title: __initial_text__
  contents:
  - '          Online Certificate Status Protocol Algorithm Agility

    '
- title: Abstract
  contents:
  - "Abstract\n   The Online Certificate Status Protocol (OCSP) requires server\n\
    \   responses to be signed but does not specify a mechanism for selecting\n  \
    \ the signature algorithm to be used.  This may lead to avoidable\n   interoperability\
    \ failures in contexts where multiple signature\n   algorithms are in use.  This\
    \ document specifies rules for server\n   signature algorithm selection and an\
    \ extension that allows a client\n   to advise a server that specific signature\
    \ algorithms are supported.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6277.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Requirements Language ......................................3\n  \
    \ 2. OCSP Algorithm Agility Requirements .............................3\n   3.\
    \ Updates to Mandatory and Optional Cryptographic Algorithms ......4\n   4. Client\
    \ Indication of Preferred Signature Algorithms .............4\n   5. Responder\
    \ Signature Algorithm Selection .........................5\n      5.1. Dynamic\
    \ Response ...........................................5\n      5.2. Static Response\
    \ ............................................6\n   6. Acknowledgements ................................................6\n\
    \   7. Security Considerations .........................................6\n  \
    \    7.1. Use of Insecure Algorithms .................................6\n    \
    \  7.2. Man-in-the-Middle Downgrade Attack .........................7\n      7.3.\
    \ Denial-of-Service Attack ...................................7\n   8. References\
    \ ......................................................7\n      8.1. Normative\
    \ References .......................................7\n      8.2. Informative\
    \ References .....................................8\n   Appendix A.  ASN.1 Modules\
    \ .........................................9\n      A.1. ASN.1 Module ...............................................9\n\
    \      A.2. 1988 ASN.1 Module .........................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Online Certificate Status Protocol (OCSP) [RFC2560]\
    \ defines a\n   protocol for obtaining certificate status information from an\
    \ online\n   service.  An OCSP responder may or may not be issued an OCSP\n  \
    \ responder certificate by the certification authority (CA) that issued\n   the\
    \ certificate whose status is being queried.  An OCSP responder may\n   provide\
    \ pre-signed OCSP responses or may sign responses when queried.\n   RFC 2560 [RFC2560]\
    \ specifies a means for an OCSP responder to\n   indicate the signature and digest\
    \ algorithms used in a response but\n   not how those algorithms are specified.\
    \  The only algorithm\n   requirements established by that protocol specification\
    \ are that the\n   OCSP client SHALL support the Digital Signature Algorithm (DSA)\
    \ sig-\n   alg-oid specified in Section 7.2.2 of [RFC2459] and SHOULD be capable\n\
    \   of processing RSA signatures as specified in Section 7.2.1 of\n   [RFC2459].\
    \  The only requirement placed on responders by RFC 2560 is\n   that they SHALL\
    \ support the SHA1 hashing algorithm.\n   This document specifies rules for server\
    \ signature algorithm\n   selection and an extension that allows a client to advise\
    \ a server\n   that specific signature algorithms are supported.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  OCSP Algorithm Agility Requirements
  contents:
  - "2.  OCSP Algorithm Agility Requirements\n   Since algorithms other than those\
    \ that are mandatory to implement are\n   allowed and since a client currently\
    \ has no mechanism to indicate its\n   algorithm preferences, there is always\
    \ a risk that a server choosing\n   a non-mandatory algorithm will generate a\
    \ response that the client\n   may not support.\n   While an OCSP responder may\
    \ apply rules for algorithm selection,\n   e.g., using the signature algorithm\
    \ employed by the CA for signing\n   certificate revocation lists (CRLs) and certificates,\
    \ such rules may\n   fail in common situations:\n   o  The algorithm used to sign\
    \ the CRLs and certificates may not be\n      consistent with the key pair being\
    \ used by the OCSP responder to\n      sign responses.\n   o  A request for an\
    \ unknown certificate provides no basis for a\n      responder to select from\
    \ among multiple algorithm options.\n   Without modifying the protocol, the last\
    \ criterion cannot be resolved\n   through the information available from in-band\
    \ signaling using the\n   protocol described in RFC 2560 [RFC2560].\n   In addition,\
    \ an OCSP responder may wish to employ different signature\n   algorithms than\
    \ the one used by the CA to sign certificates and CRLs\n   for several reasons:\n\
    \   o  The responder may employ an algorithm for certificate status\n      response\
    \ that is less computationally demanding than for signing\n      the certificate\
    \ itself.\n   o  An implementation may wish to guard against the possibility of\
    \ a\n      compromise resulting from a signature algorithm compromise by\n   \
    \   employing two separate signature algorithms.\n   This document describes:\n\
    \   o  A mechanism that allows a client to indicate the set of preferred\n   \
    \   signature algorithms.\n   o  Rules for signature algorithm selection that\
    \ maximize the\n      probability of successful operation in the case that no\
    \ supported\n      preferred algorithm(s) are specified.\n"
- title: 3.  Updates to Mandatory and Optional Cryptographic Algorithms
  contents:
  - "3.  Updates to Mandatory and Optional Cryptographic Algorithms\n   Section 4.3\
    \ (\"Mandatory and Optional Cryptographic Algorithms\") of\n   RFC 2560 [RFC2560]\
    \ is updated as follows:\n   OLD: Clients that request OCSP services SHALL be\
    \ capable of\n        processing responses signed used DSA keys identified by\
    \ the DSA\n        sig-alg-oid specified in section 7.2.2 of [RFC2459].  Clients\n\
    \        SHOULD also be capable of processing RSA signatures as specified\n  \
    \      in section 7.2.1 of [RFC2459].  OCSP responders SHALL support\n       \
    \ the SHA1 hashing algorithm.\n   NEW: Clients that request OCSP services SHALL\
    \ be capable of\n        processing responses signed using RSA with SHA-1 (identified\
    \ by\n        sha1WithRSAEncryption OID specified in [RFC3279]) and RSA with\n\
    \        SHA-256 (identified by sha256WithRSAEncryption OID specified in\n   \
    \     [RFC4055]).  Clients SHOULD also be capable of processing\n        responses\
    \ signed using DSA keys (identified by the id-dsa-with-\n        sha1 OID specified\
    \ in [RFC3279]).  Clients MAY support other\n        algorithms.\n"
- title: 4.  Client Indication of Preferred Signature Algorithms
  contents:
  - "4.  Client Indication of Preferred Signature Algorithms\n   A client MAY declare\
    \ a preferred set of algorithms in a request by\n   including a preferred signature\
    \ algorithms extension in\n   requestExtensions of the OCSPRequest [RFC2560].\n\
    \     id-pkix-ocsp-pref-sig-algs OBJECT IDENTIFIER ::= { id-pkix-ocsp 8 }\n  \
    \   PreferredSignatureAlgorithms ::= SEQUENCE OF\n                           \
    \           PreferredSignatureAlgorithm\n     PreferredSignatureAlgorithm ::=\
    \ SEQUENCE {\n        sigIdentifier        AlgorithmIdentifier,\n        pubKeyAlgIdentifier\
    \  SMIMECapability OPTIONAL\n        }\n   The syntax of AlgorithmIdentifier is\
    \ defined in Section 4.1.1.2 of\n   RFC 5280 [RFC5280].  The syntax of SMIMECapability\
    \ is defined in RFC\n   5751 [RFC5751].\n   sigIdentifier specifies the signature\
    \ algorithm the client prefers,\n   e.g., algorithm=ecdsa-with-sha256.  Parameters\
    \ are absent for most\n   common signature algorithms.\n   pubKeyAlgIdentifier\
    \ specifies the subject public key algorithm\n   identifier the client prefers\
    \ in the server's certificate used to\n   validate the OCSP response, e.g., algorithm=id-ecPublicKey\
    \ and\n   parameters= secp256r1.\n   pubKeyAlgIdentifier is OPTIONAL and provides\
    \ means to specify\n   parameters necessary to distinguish among different usages\
    \ of a\n   particular algorithm, e.g., it may be used by the client to specify\n\
    \   what curve it supports for a given elliptic curve algorithm.\n   The client\
    \ MUST support each of the specified preferred signature\n   algorithms, and the\
    \ client MUST specify the algorithms in the order\n   of preference, from the\
    \ most preferred to the least preferred.\n   Section 5 of this document describes\
    \ how a server selects an\n   algorithm for signing OCSP responses to the requesting\
    \ client.\n"
- title: 5.  Responder Signature Algorithm Selection
  contents:
  - "5.  Responder Signature Algorithm Selection\n   RFC 2560 [RFC2560] does not specify\
    \ a mechanism for deciding the\n   signature algorithm to be used in an OCSP response.\
    \  As previously\n   noted, this does not provide a sufficient degree of certainty\
    \ as to\n   the algorithm selected to facilitate interoperability.\n"
- title: 5.1.  Dynamic Response
  contents:
  - "5.1.  Dynamic Response\n   As long as the selected algorithm meets all security\
    \ requirements of\n   the OCSP responder, a responder MAY maximize the potential\
    \ for\n   ensuring interoperability by selecting a supported signature\n   algorithm\
    \ using the following order of precedence, where the first\n   method has the\
    \ highest precedence:\n   1.  Select an algorithm specified as a preferred signing\
    \ algorithm in\n       the client request.\n   2.  Select the signing algorithm\
    \ used to sign a certificate\n       revocation list (CRL) issued by the certificate\
    \ issuer to provide\n       status information for the certificate specified by\
    \ CertID.\n   3.  Select the signing algorithm used to sign the OCSPRequest.\n\
    \   4.  Select a signature algorithm that has been advertised as being\n     \
    \  the default signature algorithm for the signing service using an\n       out-of-band\
    \ mechanism.\n   5.  Select a mandatory or recommended signing algorithm specified\
    \ for\n       the version of the OCSP protocol in use.\n   A responder SHOULD\
    \ always apply the lowest-numbered selection\n   mechanism that results in the\
    \ selection of a known and supported\n   algorithm that meets the responder's\
    \ criteria for cryptographic\n   algorithm strength.\n"
- title: 5.2.  Static Response
  contents:
  - "5.2.  Static Response\n   For purposes of efficiency, an OCSP responder is permitted\
    \ to\n   generate static responses in advance of a request.  The case may not\n\
    \   permit the responder to make use of the client request data during\n   the\
    \ response generation; however, the responder SHOULD still use the\n   client\
    \ request data during the selection of the pre-generated\n   response to be returned.\
    \  Responders MAY use the historical client\n   requests as part of the input\
    \ to the decisions of what different\n   algorithms should be used to sign the\
    \ pre-generated responses.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors acknowledge Santosh Chokhani for the helpful\
    \ comments\n   made on earlier drafts, Sean Turner for proposing the syntax for\n\
    \   algorithm identifiers, Jim Schaad for providing and testing the ASN.1\n  \
    \ module in Appendix A, and Stephen Kent for valuable review and input.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The mechanism used to choose the response signing\
    \ algorithm MUST be\n   considered to be sufficiently secure against cryptanalytic\
    \ attack for\n   the intended application.\n   In most applications, it is sufficient\
    \ for the signing algorithm to\n   be at least as secure as the signing algorithm\
    \ used to sign the\n   original certificate whose status is being queried.  However,\
    \ this\n   criteria may not hold in long-term archival applications in which the\n\
    \   status of a certificate is being queried for a date in the distant\n   past,\
    \ long after the signing algorithm has ceased to be considered\n   trustworthy.\n"
- title: 7.1.  Use of Insecure Algorithms
  contents:
  - "7.1.  Use of Insecure Algorithms\n   It is not always possible for a responder\
    \ to generate a response that\n   the client is expected to understand and that\
    \ meets contemporary\n   standards for cryptographic security.  In such cases,\
    \ an OCSP\n   responder operator MUST balance the risk of employing a compromised\n\
    \   security solution and the cost of mandating an upgrade, including the\n  \
    \ risk that the alternative chosen by end users will offer even less\n   security\
    \ or no security.\n   In archival applications, it is quite possible that an OCSP\
    \ responder\n   might be asked to report the validity of a certificate on a date\
    \ in\n   the distant past.  Such a certificate might employ a signing method\n\
    \   that is no longer considered acceptably secure.  In such\n   circumstances,\
    \ the responder MUST NOT generate a signature using a\n   signing mechanism that\
    \ is not considered acceptably secure.\n   A client MUST accept any signing algorithm\
    \ in a response that it\n   specified as a preferred signing algorithm in the\
    \ request.\n   Therefore, it follows that a client MUST NOT specify a preferred\n\
    \   signing algorithm that is either not supported or not considered\n   acceptably\
    \ secure.\n"
- title: 7.2.  Man-in-the-Middle Downgrade Attack
  contents:
  - "7.2.  Man-in-the-Middle Downgrade Attack\n   The mechanism to support client\
    \ indication of preferred signature\n   algorithms is not protected against a\
    \ man-in-the-middle downgrade\n   attack.  This constraint is not considered to\
    \ be a significant\n   security concern since the OCSP responder MUST NOT sign\
    \ OCSP\n   responses using weak algorithms even if requested by the client.  In\n\
    \   addition, the client can reject OCSP responses that do not meet its\n   own\
    \ criteria for acceptable cryptographic security no matter what\n   mechanism\
    \ is used to determine the signing algorithm of the response.\n"
- title: 7.3.  Denial-of-Service Attack
  contents:
  - "7.3.  Denial-of-Service Attack\n   Algorithm agility mechanisms defined in this\
    \ document introduce a\n   slightly increased attack surface for denial-of-service\
    \ attacks where\n   the client request is altered to require algorithms that are\
    \ not\n   supported by the server.  Denial-of-service considerations from RFC\n\
    \   4732 [RFC4732] are relevant for this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2560]  Myers, M., Ankney, R., Malpani, A., Galperin, S., and C.\n\
    \              Adams, \"X.509 Internet Public Key Infrastructure Online\n    \
    \          Certificate Status Protocol - OCSP\", RFC 2560, June 1999.\n   [RFC3279]\
    \  Bassham, L., Polk, W., and R. Housley, \"Algorithms and\n              Identifiers\
    \ for the Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 3279, April\
    \ 2002.\n   [RFC4055]  Schaad, J., Kaliski, B., and R. Housley, \"Additional\n\
    \              Algorithms and Identifiers for RSA Cryptography for use in\n  \
    \            the Internet X.509 Public Key Infrastructure Certificate\n      \
    \        and Certificate Revocation List (CRL) Profile\", RFC 4055,\n        \
    \      June 2005.\n   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen,\
    \ S.,\n              Housley, R., and W. Polk, \"Internet X.509 Public Key\n \
    \             Infrastructure Certificate and Certificate Revocation List\n   \
    \           (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5751]  Ramsdell, B. and\
    \ S. Turner, \"Secure/Multipurpose Internet\n              Mail Extensions (S/MIME)\
    \ Version 3.2 Message\n              Specification\", RFC 5751, January 2010.\n\
    \   [RFC5912]  Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the\n      \
    \        Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912,\n         \
    \     June 2010.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2459]  Housley, R., Ford, W., Polk, W.,\
    \ and D. Solo, \"Internet\n              X.509 Public Key Infrastructure Certificate\
    \ and CRL\n              Profile\", RFC 2459, January 1999.\n   [RFC4732]  Handley,\
    \ M., Ed., Rescorla, E., Ed., and IAB, \"Internet\n              Denial-of-Service\
    \ Considerations\", RFC 4732, December\n              2006.\n"
- title: Appendix A.  ASN.1 Modules
  contents:
  - 'Appendix A.  ASN.1 Modules

    '
- title: A.1.  ASN.1 Module
  contents:
  - "A.1.  ASN.1 Module\n OCSP-AGILITY-2009 { iso(1) identified-organization(3) dod(6)\n\
    \     internet(1)  security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-ocsp-agility-2009-93(66)\
    \ }\n DEFINITIONS EXPLICIT TAGS ::=\n BEGIN\n   EXPORTS ALL;   -- export all items\
    \ from this module\n   IMPORTS\n   id-pkix-ocsp\n     FROM OCSP-2009  -- From\
    \ OCSP [RFC2560]\n      { iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n        mechanisms(5) pkix(7) id-mod(0) id-mod-ocsp-02(48) }\n\
    \   AlgorithmIdentifier{}, SMIMECapability{}, SIGNATURE-ALGORITHM,\n   PUBLIC-KEY\n\
    \     FROM AlgorithmInformation-2009 -- From [RFC5912]\n       { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n         security(5) mechanisms(5) pkix(7) id-mod(0)\n \
    \        id-mod-algorithmInformation-02(58) }\n   EXTENSION\n     FROM PKIX-CommonTypes-2009\
    \ -- From [RFC5912]\n      { iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n        mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\
    \ ;\n    --  Add re-preferred-signature-algorithms to the set of extensions\n\
    \    --  for TBSRequest.requestExtensions\n   re-preferred-signature-algorithms\
    \ EXTENSION ::= {\n      SYNTAX PreferredSignatureAlgorithms\n      IDENTIFIED\
    \ BY id-pkix-ocsp-pref-sig-algs  }\n   id-pkix-ocsp-pref-sig-algs OBJECT IDENTIFIER\
    \ ::= { id-pkix-ocsp 8 }\n   PreferredSignatureAlgorithms ::= SEQUENCE OF\n  \
    \                                    PreferredSignatureAlgorithm\n   PreferredSignatureAlgorithm\
    \ ::= SEQUENCE {\n    sigIdentifier       AlgorithmIdentifier{SIGNATURE-ALGORITHM,\
    \ {...}},\n    pubKeyAlgIdentifier SMIMECapability{PUBLIC-KEY, {...}} OPTIONAL\
    \  }\n END\n"
- title: A.2.  1988 ASN.1 Module
  contents:
  - "A.2.  1988 ASN.1 Module\n OCSP-AGILITY-88 { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-ocsp-agility-2009-88(67)\
    \ }\n DEFINITIONS EXPLICIT TAGS ::=\n BEGIN\n   -- EXPORTS ALL;\n   IMPORTS\n\
    \   id-pkix-ocsp  -- From [RFC2560]\n     FROM OCSP\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) id-mod(0) id-mod-ocsp(14)}\n\
    \   AlgorithmIdentifier\n     FROM PKIX1Explicit88 -- From [RFC5280]\n      {\
    \ iso(1) identified-organization(3) dod(6) internet(1) security(5)\n        mechanisms(5)\
    \ pkix(7) id-mod(0) id-pkix1-explicit(18) };\n   SMIMECapability\n     FROM SecureMimeMessageV3dot1\
    \ -- From [RFC5751]\n      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\
    \ pkcs-9(9)\n        smime(16) modules(0) msg-v3dot1(21) }\n     id-pkix-ocsp-pref-sig-algs\
    \ OBJECT IDENTIFIER ::= { id-pkix-ocsp 8 }\n     PreferredSignatureAlgorithms\
    \ ::= SEQUENCE OF\n                                      PreferredSignatureAlgorithm\n\
    \     PreferredSignatureAlgorithm ::= SEQUENCE {\n        sigIdentifier      \
    \  AlgorithmIdentifier,\n        pubKeyAlgIdentifier  SMIMECapability OPTIONAL\n\
    \        }\n END\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stefan Santesson\n   3xA Security AB\n   Sweden\n   Email:\
    \ sts@aaa-sec.com\n   Phillip Hallam-Baker\n   Default Deny Security\n   EMail:\
    \ hallam@gmail.com\n"
