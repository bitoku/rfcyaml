- title: __initial_text__
  contents:
  - '                Towards the Future Internet Architecture

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This informational RFC discusses important directions\
    \ for possible\n   future evolution of the Internet architecture, and suggests\
    \ steps\n   towards the desired goals.  It is offered to the Internet community\n\
    \   for discussion and comment.  This memo provides information for the\n   Internet\
    \ community.  It does not specify an Internet standard.\n   Distribution of this\
    \ memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  INTRODUCTION .................................................\
    \  2\n   2.  ROUTING AND ADDRESSING .......................................  5\n\
    \   3.  MULTI-PROTOCOL ARCHITECTURES .................................  9\n  \
    \ 4.  SECURITY ARCHITECTURE ........................................ 13\n   5\
    \   TRAFFIC CONTROL AND STATE .................................... 16\n   6. \
    \ ADVANCED APPLICATIONS ........................................ 18\n   7.  REFERENCES\
    \ ................................................... 21\n   APPENDIX A. Setting\
    \ the Stage .................................... 22\n   APPENDIX B. Group Membership\
    \ ..................................... 28\n   Security Considerations ..........................................\
    \ 29\n   Authors' Addresses ............................................... 29\n"
- title: 1.  INTRODUCTION
  contents:
  - "1.  INTRODUCTION\n   1.1 The Internet Architecture\n      The Internet architecture,\
    \ the grand plan behind the TCP/IP\n      protocol suite, was developed and tested\
    \ in the late 1970s by a\n      small group of network researchers [1-4].  Several\
    \ important\n      features were added to the architecture during the early 1980's\
    \ --\n      subnetting, autonomous systems, and the domain name system [5,6].\n\
    \      More recently, IP multicasting has been added [7].\n      Within this architectural\
    \ framework, the Internet Engineering Task\n      Force (IETF) has been working\
    \ with great energy and effectiveness\n      to engineer, define, extend, test,\
    \ and standardize protocols for\n      the Internet.  Three areas of particular\
    \ importance have been\n      routing protocols, TCP performance, and network\
    \ management.\n      Meanwhile, the Internet infrastructure has continued to grow\
    \ at an\n      astonishing rate.  Since January 1983 when the ARPANET first\n\
    \      switched from NCP to TCP/IP, the vendors, managers, wizards, and\n    \
    \  researchers of the Internet have all been laboring mightily to\n      survive\
    \ their success.\n      A set of the researchers who had defined the Internet\
    \ architecture\n      formed the original membership of the Internet Activities\
    \ Board\n      (IAB).  The IAB evolved from a technical advisory group set up\
    \ in\n      1981 by DARPA to become the general technical and policy oversight\n\
    \      body for the Internet.  IAB membership has changed over the years\n   \
    \   to better represent the changing needs and issues in the Internet\n      community,\
    \ and more recently, to reflect the internationalization\n      of the Internet,\
    \ but it has retained an institutional concern for\n      the protocol architecture.\n\
    \      The IAB created the Internet Engineering Task Force (IETF) to\n      carry\
    \ out protocol development and engineering for the Internet.\n      To manage\
    \ the burgeoning IETF activities, the IETF chair set up\n      the Internet Engineering\
    \ Steering Group (IESG) within the IETF.\n      The IAB and IESG work closely\
    \ together in ratifying protocol\n      standards developed within the IETF.\n\
    \      Over the past few years, there have been increasing signs of\n      strains\
    \ on the fundamental architecture, mostly stemming from\n      continued Internet\
    \ growth.  Discussions of these problems\n      reverberate constantly on many\
    \ of the major mailing lists.\n   1.2  Assumptions\n      The priority for solving\
    \ the problems with the current Internet\n      architecture depends upon one's\
    \ view of the future relevance of\n      TCP/IP with respect to the OSI protocol\
    \ suite.  One view has been\n      that we should just let the TCP/IP suite strangle\
    \ in its success,\n      and switch to OSI protocols.  However, many of those\
    \ who have\n      worked hard and successfully on Internet protocols, products,\
    \ and\n      service are anxious to try to solve the new problems within the\n\
    \      existing framework.  Furthermore, some believe that OSI protocols\n   \
    \   will suffer from versions of many of the same problems.\n      To begin to\
    \ attack these issues, the IAB and the IESG held a one-\n      day joint discussion\
    \ of Internet architectural issues in January\n      1991.  The framework for\
    \ this meeting was set by Dave Clark (see\n      Appendix A for his slides). \
    \ The discussion was spirited,\n      provocative, and at times controversial,\
    \ with a lot of soul-\n      searching over questions of relevance and future\
    \ direction.  The\n      major result was to reach a consensus on the following\
    \ four basic\n      assumptions regarding the networking world of the next 5-10\
    \ years.\n      (1)  The TCP/IP and OSI suites will coexist for a long time.\n\
    \           There are powerful political and market forces as well as\n      \
    \     some technical advantages behind the introduction of the OSI\n         \
    \  suite.  However, the entrenched market position of the TCP/IP\n           protocols\
    \ means they are very likely to continue in service\n           for the foreseeable\
    \ future.\n      (2)  The Internet will continue to include diverse networks and\n\
    \           services, and will never be comprised of a single network\n      \
    \     technology.\n           Indeed, the range of network technologies and characteristics\n\
    \           that are connected into the Internet will increase over the\n    \
    \       next decade.\n      (3)  Commercial and private networks will be incorporated,\
    \ but we\n           cannot expect the common carriers to provide the entire\n\
    \           service.  There will be mix of public and private networks,\n    \
    \       common carriers and private lines.\n      (4)  The Internet architecture\
    \ needs to be able to scale to 10**9\n           networks.\n           The historic\
    \ exponential growth in the size of the Internet\n           will presumably saturate\
    \ some time in the future, but\n           forecasting when is about as easy as\
    \ forecasting the future\n           economy.  In any case, responsible engineering\
    \ requires an\n           architecture that is CAPABLE of expanding to a worst-case\n\
    \           size.  The exponent \"9\" is rather fuzzy; estimates have\n      \
    \     varied from 7 to 10.\n   1.3  Beginning a Planning Process\n      Another\
    \ result of the IAB and IESG meeting was the following list\n      of the five\
    \ most important areas for architectural evolution:\n      (1)  Routing and Addressing\n\
    \           This is the most urgent architectural problem, as it is\n        \
    \   directly involved in the ability of the Internet to continue\n           to\
    \ grow successfully.\n      (2)  Multi-Protocol Architecture\n           The Internet\
    \ is moving towards widespread support of both the\n           TCP/IP and the\
    \ OSI protocol suites.  Supporting both suites\n           raises difficult technical\
    \ issues, and a plan -- i.e., an\n           architecture -- is required to increase\
    \ the chances of\n           success.  This area was facetiously dubbed \"making\
    \ the\n           problem harder for the good of mankind.\"\n           Clark\
    \ had observed that translation gateways (e.g., mail\n           gateways) are\
    \ very much a fact of life in Internet operation\n           but are not part\
    \ of the architecture or planning.  The group\n           discussed the possibility\
    \ of building the architecture around\n           the partial connectivity that\
    \ such gateways imply.\n      (3)  Security Architecture\n           Although\
    \ military security was considered when the Internet\n           architecture\
    \ was designed, the modern security issues are\n           much broader, encompassing\
    \ commercial requirements as well.\n           Furthermore, experience has shown\
    \ that it is difficult to add\n           security to a protocol suite unless\
    \ it is built into the\n           architecture from the beginning.\n      (4)\
    \  Traffic Control and State\n           The Internet should be extended to support\
    \ \"real-time\"\n           applications like voice and video.  This will require\
    \ new\n           packet queueing mechanisms in gateways -- \"traffic control\"\
    \n           -- and additional gateway state.\n      (5)  Advanced Applications\n\
    \           As the underlying Internet communication mechanism matures,\n    \
    \       there is an increasing need for innovation and\n           standardization\
    \ in building new kinds of applications.\n      The IAB and IESG met again in\
    \ June 1991 at SDSC and devoted three\n      full days to a discussion of these\
    \ five topics.  This meeting,\n      which was called somewhat perversely the\
    \ \"Architecture Retreat\",\n      was convened with a strong resolve to take\
    \ initial steps towards\n      planning evolution of the architecture.  Besides\
    \ the IAB and IESG,\n      the group of 32 people included the members of the\
    \ Research\n      Steering Group (IRSG) and a few special guests.  On the second\n\
    \      day, the Retreat broke into groups, one for each of the five\n      areas.\
    \  The group membership is listed in Appendix B.\n      This document was assembled\
    \ from the reports by the chairs of\n      these groups.  This material was presented\
    \ at the Atlanta IETF\n      meeting, and appears in the minutes of that meeting\
    \ [8].\n"
- title: 2.  ROUTING AND ADDRESSING
  contents:
  - "2.  ROUTING AND ADDRESSING\n   Changes are required in the addressing and routing\
    \ structure of IP to\n   deal with the anticipated growth and functional evolution\
    \ of the\n   Internet.  We expect that:\n   o    The Internet will run out of\
    \ certain classes of IP network\n        addresses, e.g., B addresses.\n   o \
    \   The Internet will run out of the 32-bit IP address space\n        altogether,\
    \ as the space is currently subdivided and managed.\n   o    The total number\
    \ of IP network numbers will grow to the point\n        where reasonable routing\
    \ algorithms will not be able to perform\n        routing based upon network numbers.\n\
    \   o    There will be a need for more than one route from a source to a\n   \
    \     destination, to permit variation in TOS and policy conformance.\n      \
    \  This need will be driven both by new applications and by diverse\n        transit\
    \ services.  The source, or an agent acting for the\n        source, must control\
    \ the selection of the route options.\n   2.1  Suggested Approach\n      There\
    \ is general agreement on the approach needed to deal with\n      these facts.\n\
    \      (a)  We must move to an addressing scheme in which network numbers\n  \
    \         are aggregated into larger units as the basis for routing.\n       \
    \    An example of an aggregate is the Autonomous System, or the\n           Administrative\
    \ Domain (AD).\n           Aggregation will accomplish several goals: define regions\n\
    \           where policy is applied, control the number of routing\n         \
    \  elements, and provide elements for network management.  Some\n           believe\
    \ that it must be possible to further combine\n           aggregates, as in a\
    \ nesting of ADs.\n      (b)  We must provide some efficient means to compute\
    \ common\n           routes, and some general means to compute \"special\" routes.\n\
    \           The general approach to special routes will be some form of\n    \
    \       route setup specified by a \"source route\".\n      There is not full\
    \ agreement on how ADs may be expected to be\n      aggregated, or how routing\
    \ protocols should be organized to deal\n      with the aggregation boundaries.\
    \   A very general scheme may be\n      used [ref. Chiappa], but some prefer a\
    \ scheme that more restricts\n      and defines the expected network model.\n\
    \      To deal with the address space exhaustion, we must either expand\n    \
    \  the address space or else reuse the 32 bit field (\"32bf\") in\n      different\
    \ parts of the net.  There are several possible address\n      formats that might\
    \ make sense, as described in the next section.\n      Perhaps more important\
    \ is the question of how to migrate to the\n      new scheme.  All migration plans\
    \ will require that some routers\n      (or other components inside the Internet)\
    \ be able to rewrite\n      headers to accommodate hosts that handle only the\
    \ old or format or\n      only the new format.  Unless the need for such format\
    \ conversion\n      can be inferred algorithmically, migration by itself will\
    \ require\n      some sort of setup of state in the conversion element.\n    \
    \  We should not plan a series of \"small\" changes to the\n      architecture.\
    \  We should embark now on a plan that will take us\n      past the exhaustion\
    \ of the address space.  This is a more long-\n      range act of planning than\
    \ the Internet community has undertaken\n      recently, but the problems of migration\
    \ will require a long lead\n      time, and it is hard to see an effective way\
    \ of dealing with some\n      of the more immediate problems, such as class B\
    \ exhaustion, in a\n      way that does not by itself take a long time.  So, once\
    \ we embark\n      on a plan of change, it should take us all the way to replacing\n\
    \      the current 32-bit global address space.  (This conclusion is\n      subject\
    \ to revision if, as is always possible, some very clever\n      idea surfaces\
    \ that is quick to deploy and gives us some breathing\n      room.  We do not\
    \ mean to discourage creative thinking about\n      short-term actions.  We just\
    \ want to point out that even small\n      changes take a long time to deploy.)\n\
    \      Conversion of the address space by itself is not enough.  We must\n   \
    \   at the same time provide a more scalable routing architecture, and\n     \
    \ tools to better manage the Internet.  The proposed approach is to\n      ADs\
    \ as the unit of aggregation for routing.  We already have\n      partial means\
    \ to do this.  IDPR does this.  The OSI version of BGP\n      (IDRP) does this.\
    \  BGP could evolve to do this.  The additional\n      facility needed is a global\
    \ table that maps network numbers to\n      ADs.\n      For several reasons (special\
    \ routes and address conversion, as\n      well as accounting and resource allocation),\
    \ we are moving from a\n      \"stateless\" gateway model, where only precomputed\
    \ routes are\n      stored in the gateway, to a model where at least some of the\n\
    \      gateways have per-connection state.\n   2.2  Extended IP Address Formats\n\
    \      There are three reasonable choices for the extended IP address\n      format.\n\
    \      A)   Replace the 32 bit field (32bf) with a field of the same size\n  \
    \         but with different meaning.  Instead of being globally\n           unique,\
    \ it would now be unique only within some smaller\n           region (an AD or\
    \ an aggregate of ADs).  Gateways on the\n           boundary would rewrite the\
    \ address as the packet crossed the\n           boundary.\n           Issues:\
    \ (1) addresses in the body of packets must be found\n           and rewritten;\
    \ (2) the host software need not be changed; (3)\n           some method (perhaps\
    \ a hack to the DNS) must set up the\n           address mappings.\n         \
    \  This scheme is due to Van Jacobson.  See also the work by\n           Paul\
    \ Tsuchiya on NAT.\n      B)   Expand the 32bf to a 64 bit field (or some other\
    \ new size),\n           and use the field to hold a global host address and an\
    \ AD for\n           that host.\n           This choice would provide a trivial\
    \ mapping from the host to\n           the value (the AD) that is the basis of\
    \ routing.  Common\n           routes (those selected on the basis of destination\
    \ address\n           without taking into account the source address as well)\
    \ can\n           be selected directly from the packet address, as is done\n \
    \          today, without any prior setup.\n      3)   Expand the 32bf to a 64\
    \ bit field (or some other new size),\n           and use the field as a \"flat\"\
    \ host identifier.  Use\n           connection setup to provide routers with the\
    \ mapping from\n           host id to AD, as needed.\n           The 64 bits can\
    \ now be used to simplify the problem of\n           allocating host ids, as in\
    \ Ethernet addresses.\n      Each of these choices would require an address re-writing\
    \ module\n      as a part of migration.  The second and third require a change\
    \ to\n      the IP header, so host software must change.\n   2.3  Proposed Actions\n\
    \      The following actions are proposed:\n      A)   Time Line\n           Construct\
    \ a specific set of estimates for the time at which\n           the various problems\
    \ above will arise, and construct a\n           corresponding time-line for development\
    \ and deployment of a\n           new addressing/routing architecture.  Use this\
    \ time line as a\n           basis for evaluating specific proposals for changes.\
    \  This is\n           a matter for the IETF.\n      B)   New Address Format\n\
    \           Explore the options for a next generation address format and\n   \
    \        develop a plan for migration.  Specifically, construct a\n          \
    \ prototype gateway that does address mapping.  Understand the\n           complexity\
    \ of this task, to guide our thinking about\n           migration options.\n \
    \     C)   Routing on ADs\n           Take steps to make network aggregates (ADs)\
    \ the basis of\n           routing.  In particular, explore the several options\
    \ for a\n           global table that maps network numbers to ADs.  This is a\n\
    \           matter for the IETF.\n      D)   Policy-Based Routing\n          \
    \ Continue the current work on policy based routing. There are\n           several\
    \ specific objectives.\n           -    Seek ways to control the complexity of\
    \ setting policy\n                (this is a human interface issue, not an algorithm\n\
    \                complexity issue).\n           -    Understand better the issues\
    \ of maintaining connection\n                state in gateways.\n           -\
    \    Understand better the issues of connection state setup.\n      E)   Research\
    \ on Further Aggregation\n           Explore, as a research activity, how ADs\
    \ should be aggregated\n           into still larger routing elements.\n     \
    \      -    Consider whether the architecture should define the\n            \
    \    \"role\" of an AD or an aggregate.\n           -    Consider whether one\
    \ universal routing method or\n                distinct methods should be used\
    \ inside and outside ADs\n                and aggregates.\n      Existing projects\
    \ planned for DARTnet will help resolve several of\n      these issues: state\
    \ in gateways, state setup, address mapping,\n      accounting and so on.  Other\
    \ experiments in the R&D community also\n      bear on this area.\n"
- title: 3.  MULTI-PROTOCOL ARCHITECTURE
  contents:
  - "3.  MULTI-PROTOCOL ARCHITECTURE\n   Changing the Internet to support multiple\
    \ protocol suites leads to\n   three specific architectural questions:\n   o \
    \   How exactly will we define \"the Internet\"?\n   o    How would we architect\
    \ an Internet with n>1 protocol suites,\n        regardless of what the suites\
    \ are?\n   o    Should we architect for partial or filtered connectivity?\n  \
    \ o    How to add explicit support for application gateways into the\n       \
    \ architecture?\n   3.1  What is the \"Internet\"?\n      It is very difficult\
    \ to deal constructively with the issue of \"the\n      multi-protocol Internet\"\
    \ without first determining what we believe\n      \"the Internet\" is (or should\
    \ be).   We distinguish \"the Internet\",\n      a set of communicating systems,\
    \ from \"the Internet community\", a\n      set of people and organizations. \
    \ Most people would accept a loose\n      definition of the latter as \"the set\
    \ of people who believe\n      themselves to be part of the Internet community\"\
    .  However, no\n      such \"sociological\" definition of the Internet itself\
    \ is likely to\n      be useful.\n      Not too long ago, the Internet was defined\
    \ by IP connectivity (IP\n      and ICMP were - and still are - the only \"required\"\
    \ Internet\n      protocols).  If I could PING you, and you could PING me, then\
    \ we\n      were both on the Internet, and a satisfying working definition of\n\
    \      the Internet could be constructed as a roughly transitive closure\n   \
    \   of IP-speaking systems.  This model of the Internet was simple,\n      uniform,\
    \ and - perhaps most important - testable.  The IP-\n      connectivity model\
    \ clearly distinguished systems that were \"on the\n      Internet\" from those\
    \ that were not.\n      As the Internet has grown and the technology on which\
    \ it is based\n      has gained widespread commercial acceptance, the sense of\
    \ what it\n      means for a system to be \"on the Internet\" has changed, to\n\
    \      include:\n      *    Any system that has partial IP connectivity, restricted\
    \ by\n           policy filters.\n      *    Any system that runs the TCP/IP protocol\
    \ suite, whether or\n           not it is actually accessible from other parts\
    \ of the\n           Internet.\n      *    Any system that can exchange RFC-822\
    \ mail, without the\n           intervention of mail gateways or the transformation\
    \ of mail\n           objects.\n      *    Any system with e-mail connectivity\
    \ to the Internet, whether\n           or not a mail gateway or mail object transformation\
    \ is\n           required.\n      These definitions of \"the Internet\", are still\
    \ based on the\n      original concept of connectivity, just \"moving up the stack\"\
    .\n      We propose instead a new definition of the Internet, based on a\n   \
    \   different unifying concept:\n      *    \"Old\" Internet concept:  IP-based.\n\
    \           The organizing principle is the IP address, i.e., a common\n     \
    \      network address space.\n      *    \"New\" Internet concept:  Application-based.\n\
    \           The organizing principle is the domain name system and\n         \
    \  directories, i.e., a common - albeit necessarily multiform -\n           application\
    \ name space.\n      This suggests that the idea of \"connected status\", which\
    \ has\n      traditionally been tied to the IP address(via network numbers,\n\
    \      should instead be coupled to the names and related identifying\n      information\
    \ contained in the distributed Internet directory.\n      A naming-based definition\
    \ of \"the Internet\" implies a much larger\n      Internet community, and a much\
    \ more dynamic (and unpredictable)\n      operational Internet.  This argues for\
    \ an Internet architecture\n      based on adaptability (to a broad spectrum of\
    \ possible future\n      developments) rather than anticipation.\n   3.2  A Process-Based\
    \ Model of the Multiprotocol Internet\n      Rather than specify a particular\
    \ \"multi-protocol Internet\",\n      embracing a pre-determined number of specific\
    \ protocol\n      architectures, we propose instead a process-oriented model of\
    \ the\n      Internet, which accommodates different protocol architectures\n \
    \     according to the traditional \"things that work\" principle.\n      A process-oriented\
    \ Internet model includes, as a basic postulate,\n      the assertion that there\
    \ is no *steady-state* \"multi-protocol\n      Internet\".  The most basic forces\
    \ driving the evolution of the\n      Internet are pushing it not toward multi-protocol\
    \ diversity, but\n      toward the original state of protocol-stack uniformity\
    \ (although\n      it is unlikely that it will ever actually get there).  We may\n\
    \      represent this tendency of the Internet to evolve towards\n      homogeneity\
    \ as the most \"thermodynamically stable\" state by\n      describing four components\
    \ of a new process-based Internet\n      architecture:\n      Part 1: The core\
    \ Internet architecture\n           This is the traditional TCP/IP-based architecture.\
    \  It is the\n           \"magnetic center\" of Internet evolution, recognizing\
    \ that (a)\n           homogeneity is still the best way to deal with diversity\
    \ in\n           an internetwork, and (b) IP connectivity is still the best\n\
    \           basic model of the Internet (whether or not the actual state\n   \
    \        of IP ubiquity can be achieved in practice in a global\n           operational\
    \ Internet).\n      \"In the beginning\", the Internet architecture consisted\
    \ only of\n      this first part.  The success of the Internet, however, has\n\
    \      carried it beyond its uniform origins;  ubiquity and uniformity\n     \
    \ have been sacrificed in order to greatly enrich the Internet \"gene\n      pool\"\
    .\n      Two additional parts of the new Internet architecture express the\n \
    \     ways in which the scope and extent of the Internet have been\n      expanded.\n\
    \      Part 2: Link sharing\n           Here physical resources -- transmission\
    \ media, network\n           interfaces, perhaps some low-level (link) protocols\
    \ -- are\n           shared by multiple, non-interacting protocol suites.  This\n\
    \           part of the architecture recognizes the necessity and\n          \
    \ convenience of coexistence, but is not concerned with\n           interoperability;\
    \  it has been called \"ships in the night\" or\n           \"S.I.N.\".\n    \
    \       Coexisting protocol suites are not, of course, genuinely\n           isolated\
    \ in practice;  the ships passing in the night raise\n           issues of management,\
    \ non-interference, coordination, and\n           fairness in real Internet systems.\n\
    \      Part 3: Application interoperability\n           Absent ubiquity of interconnection\
    \ (i.e., interoperability of\n           the \"underlying stacks\"), it is still\
    \ possible to achieve\n           ubiquitous application functionality by arranging\
    \ for the\n           essential semantics of applications to be conveyed among\n\
    \           disjoint communities of Internet systems.  This can be\n         \
    \  accomplished by application relays, or by user agents that\n           present\
    \ a uniform virtual access method to different\n           application services\
    \ by expressing only the shared semantics.\n           This part of the architecture\
    \ emphasizes the ultimate role of\n           the Internet as a basis for communication\
    \ among applications,\n           rather than as an end in itself.  To the extent\
    \ that it\n           enables a population of applications and their users to\
    \ move\n           from one underlying protocol suite to another without\n   \
    \        unacceptable loss of functionality, it is also a \"transition\n     \
    \      enabler\".\n      Adding parts 2 and 3 to the original Internet architecture\
    \ is at\n      best a mixed blessing.  Although they greatly increase the scope\n\
    \      of the Internet and the size of the Internet community, they also\n   \
    \   introduce significant problems of complexity, cost, and\n      management,\
    \ and they usually represent a loss of functionality\n      (particularly with\
    \ respect to part 3).  Parts 2 and 3 represent\n      unavoidable, but essentially\
    \ undesirable, departures from the\n      homogeneity represented by part 1. \
    \ Some functionality is lost,\n      and additional system complexity and cost\
    \ is endured, in order to\n      expand the scope of the Internet.  In a perfect\
    \ world, however,\n      the Internet would evolve and expand without these penalties.\n\
    \      There is a tendency, therefore, for the Internet to evolve in\n      favor\
    \ of the homogeneous architecture represented by part 1, and\n      away from\
    \ the compromised architectures of parts 2 and 3.  Part 4\n      expresses this\
    \ tendency.\n      Part 4: Hybridization/Integration.\n           Part 4 recognizes\
    \ the desirability of integrating similar\n           elements from different\
    \ Internet protocol architectures to\n           form hybrids that reduce the\
    \ variability and complexity of\n           the Internet system.  It also recognizes\
    \ the desirability of\n           leveraging the existing Internet infrastructure\
    \ to facilitate\n           the absorption of \"new stuff\" into the Internet,\
    \ applying to\n           \"new stuff\" the established Internet practice of test,\n\
    \           evaluate, adopt.\n           This part expresses the tendency of the\
    \ Internet, as a\n           system, to attempt to return to the original \"state\
    \ of grace\"\n           represented by the uniform architecture of part 1.  It\
    \ is a\n           force acting on the evolution of the Internet, although the\n\
    \           Internet will never actually return to a uniform state at any\n  \
    \         point in the future.\n      According to this dynamic process model,\
    \ running X.400 mail over\n      RFC 1006 on a TCP/IP stack, integrated IS-IS\
    \ routing, transport\n      gateways, and the development of a single common successor\
    \ to the\n      IP and CLNP protocols are all examples of \"good things\".  They\n\
    \      represent movement away from the non-uniformity of parts 2 and 3\n    \
    \  towards greater homogeneity, under the influence of the \"magnetic\n      field\"\
    \ asserted by part 1, following the hybridization dynamic of\n      part 4.\n"
- title: 4.  SECURITY ARCHITECTURE
  contents:
  - "4.  SECURITY ARCHITECTURE\n   4.1  Philosophical Guidelines\n      The principal\
    \ themes for development of an Internet security\n      architecture are simplicity,\
    \ testability, trust, technology and\n      security perimeter identification.\n\
    \      *    There is more to security than protocols and cryptographic\n     \
    \      methods.\n      *    The security architecture and policies should be simple\n\
    \           enough to be readily understood.  Complexity breeds\n           misunderstanding\
    \ and poor implementation.\n      *    The implementations should be testable\
    \ to determine if the\n           policies are met.\n      *    We are forced\
    \ to trust hardware, software and people to make\n           any security architecture\
    \ function.  We assume that the\n           technical instruments of security\
    \ policy enforcement are at\n           least as powerful as modern personal computers\
    \ and work\n           stations; we do not require less capable components to\
    \ be\n           self-protecting (but might apply external remedies such as\n\
    \           link level encryption devices).\n      *    Finally, it is essential\
    \ to identify security perimeters at\n           which protection is to be effective.\n\
    \   4.2  Security Perimeters\n      There were four possible security perimeters:\
    \ link level,\n      net/subnet level, host level, and process/application level.\
    \  Each\n      imposes different requirements, can admit different techniques,\n\
    \      and makes different assumptions about what components of the\n      system\
    \ must be trusted to be effective.\n      Privacy Enhanced Mail is an example\
    \ of a process level security\n      system; providing authentication and confidentiality\
    \ for SNMP is\n      another example.  Host level security typically means applying\
    \ an\n      external security mechanism on the communication ports of a host\n\
    \      computer.  Network or subnetwork security means applying the\n      external\
    \ security capability at the gateway/router(s) leading from\n      the subnetwork\
    \ to the \"outside\".  Link-level security is the\n      traditional point-to-point\
    \ or media-level (e.g., Ethernet)\n      encryption mechanism.\n      There are\
    \ many open questions about network/subnetwork security\n      protection, not\
    \ the least of which is a potential mismatch between\n      host level (end/end)\
    \ security methods and methods at the\n      network/subnetwork level.  Moreover,\
    \ network level protection does\n      not deal with threats arising within the\
    \ security perimeter.\n      Applying protection at the process level assumes\
    \ that the\n      underlying scheduling and operating system mechanisms can be\n\
    \      trusted not to prevent the application from applying security when\n  \
    \    appropriate.  As the security perimeter moves downward in the\n      system\
    \ architecture towards the link level, one must make many\n      assumptions about\
    \ the security threat to make an argument that\n      enforcement at a particular\
    \ perimeter is effective.  For example,\n      if only link-level encryption is\
    \ used, one must assume that\n      attacks come only from the outside via communications\
    \ lines, that\n      hosts, switches and gateways are physically protected, and\
    \ the\n      people and software in all these components are to be trusted.\n\
    \   4.3  Desired Security Services\n      We need authenticatable distinguished\
    \ names if we are to implement\n      discretionary and non-discretionary access\
    \ control at application\n      and lower levels in the system.  In addition,\
    \ we need enforcement\n      for integrity (anti-modification, anti-spoof and\
    \ anti-replay\n      defenses), confidentiality, and prevention of denial-of-service.\n\
    \      For some situations, we may also need to prevent repudiation of\n     \
    \ message transmission or to prevent covert channels.\n      We have some building\
    \ blocks with which to build the Internet\n      security system.  Cryptographic\
    \ algorithms are available (e.g.,\n      Data Encryption Standard, RSA, El Gamal,\
    \ and possibly other public\n      key and symmetric key algorithms), as are hash\
    \ functions such as\n      MD2 and MD5.\n      We need Distinguished Names (in\
    \ the OSI sense) and are very much\n      in need of an infrastructure for the\
    \ assignment of such\n      identifiers, together with widespread directory services\
    \ for\n      making them known.  Certificate concepts binding distinguished\n\
    \      names to public keys and binding distinguished names to\n      capabilities\
    \ and permissions may be applied to good advantage.\n      At the router/gateway\
    \ level, we can apply address and protocol\n      filters and other configuration\
    \ controls to help fashion a\n      security system.  The proposed OSI Security\
    \ Protocol 3 (SP3) and\n      Security Protocol 4 (SP4) should be given serious\
    \ consideration as\n      possible elements of an Internet security architecture.\n\
    \      Finally, it must be observed that we have no good solutions to\n      safely\
    \ storing secret information (such as the secret component of\n      a public\
    \ key pair) on systems like PCs or laptop computers that\n      are not designed\
    \ to enforce secure storage.\n   4.4  Proposed Actions\n      The following actions\
    \ are proposed.\n      A)   Security Reference Model\n           A Security Reference\
    \ Model for the Internet is needed, and it\n           should be developed expeditiously.\
    \  This model should\n           establish the target perimeters and document\
    \ the objectives\n           of the security architecture.\n      B)   Privacy-Enhanced\
    \ Mail (PEM)\n           For Privacy Enhanced Mail, the most critical steps seem\
    \ to be\n           the installation of (1) a certificate generation and\n   \
    \        management infrastructure, and (2) X.500 directory services\n       \
    \    to provide access to public keys via distinguished names.\n           Serious\
    \ attention also needs to be placed on any limitations\n           imposed by\
    \ patent and export restrictions on the deployment\n           of this system.\n\
    \      C)   Distributed System Security\n           We should examine security\
    \ methods for distributed systems\n           applications, in both simple (client/server)\
    \ and complex\n           (distributed computing environment) cases.  For example,\
    \ the\n           utility of certificates granting permissions/capabilities to\n\
    \           objects bound to distinguished names should be examined.\n      D)\
    \   Host-Level Security\n           SP4 should be evaluated for host-oriented\
    \ security, but SP3\n           should also be considered for this purpose.\n\
    \      E)   Application-Level Security\n           We should implement application-level\
    \ security services, both\n           for their immediate utility (e.g., PEM,\
    \ SNMP authentication)\n           and also to gain valuable practical experience\
    \ that can\n           inform the refinement of the Internet security architecture.\n"
- title: 5.  TRAFFIC CONTROL AND STATE
  contents:
  - "5.  TRAFFIC CONTROL AND STATE\n   In the present Internet, all IP datagrams are\
    \ treated equally.  Each\n   datagram is forwarded independently, regardless of\
    \ any relationship\n   it has to other packets for the same connection, for the\
    \ same\n   application, for the same class of applications, or for the same user\n\
    \   class.  Although Type-of-Service and Precedence bits are defined in\n   the\
    \ IP header, these are not generally implemented, and in fact it is\n   not clear\
    \ how to implement them.\n   It is now widely accepted that the future Internet\
    \ will need to\n   support important applications for which best-effort is not\n\
    \   sufficient -- e.g., packet video and voice for teleconferencing.\n   This\
    \ will require some \"traffic control\" mechanism in routers,\n   controlled by\
    \ additional state, to handle \"real-time\" traffic.\n   5.1  Assumptions and\
    \ Principles\n      o    ASSUMPTION: The Internet will need to support performance\n\
    \           guarantees for particular subsets of the traffic.\n      Unfortunately,\
    \ we are far from being able to give precise meanings\n      to the terms \"performance\"\
    , \"guarantees\", or \"subsets\" in this\n      statement.  Research is still\
    \ needed to answer these questions.\n      o    The default service will continue\
    \ to be the current \"best-\n           effort\" datagram delivery, with no service\
    \ guarantees.\n      o    The mechanism of a router can be separated into (1)\
    \ the\n           forwarding path and (2) the control computations (e.g.,\n  \
    \         routing) which take place in the background.\n           The forwarding\
    \ path must be highly optimized, sometimes with\n           hardware-assist, and\
    \ it is therefore relatively costly and\n           difficult to change.  The\
    \ traffic control mechanism operates\n           in the forwarding path, under\
    \ the control of state created by\n           routing and resource control computations\
    \ that take place in\n           background.  We will have at most one shot at\
    \ changing the\n           forwarding paths of routers, so we had better get it\
    \ right\n           the first time.\n      o    The new extensions must operate\
    \ in a highly heterogeneous\n           environment, in which some parts will\
    \ never support\n           guarantees.  For some hops of a path (e.g., a high-speed\n\
    \           LAN), \"over-provisioning\" (i.e., excess capacity) will allow\n \
    \          adequate service for real-time traffic, even when explicit\n      \
    \     resource reservation is unavailable.\n      o    Multicast distribution\
    \ is probably essential.\n   5.2  Technical Issues\n      There are a number of\
    \ technical issues to be resolved, including:\n      o    Resource Setup\n   \
    \        To support real-time traffic, resources need to be reserved\n       \
    \    in each router along the path from source to destination.\n           Should\
    \ this new router state be \"hard\" (as in connections) or\n           \"soft\"\
    \ (i.e., cached state)?\n      o    Resource binding vs. route binding\n     \
    \      Choosing a path from source to destination is traditionally\n         \
    \  performed using a dynamic routing protocol.  The resource\n           binding\
    \ and the routing might be folded into a single complex\n           process, or\
    \ they might be performed essentially\n           independently.  There is a tradeoff\
    \ between complexity and\n           efficiency.\n      o    Alternative multicast\
    \ models\n           IP multicasting uses a model of logical addressing in which\n\
    \           targets attach themselves to a group.  In ST-2, each host in\n   \
    \        a multicast session includes in its setup packet an explicit\n      \
    \     list of target addresses.  Each of these approaches has\n           advantages\
    \ and drawbacks; it is not currently clear which\n           will prevail for\
    \ n-way teleconferences.\n      o    Resource Setup vs. Inter-AD routing\n   \
    \        Resource guarantees of whatever flavor must hold across an\n        \
    \   arbitrary end-to-end path, including multiple ADs.  Hence,\n           any\
    \ resource setup mechanism needs to mesh smoothly with the\n           path setup\
    \ mechanism incorporated into IDPR.\n      o    Accounting\n           The resource\
    \ guarantee subsets (\"classes\") may be natural\n           units for accounting.\n\
    \   5.3  Proposed Actions\n      The actions called for here are further research\
    \ on the technical\n      issues listed above, followed by development and standardization\n\
    \      of appropriate protocols.  DARTnet, the DARPA Research Testbed\n      network,\
    \ will play an important role in this research.\n"
- title: 6.  ADVANCED APPLICATIONS
  contents:
  - "6.  ADVANCED APPLICATIONS\n   One may ask: \"What network-based applications\
    \ do we want, and why\n   don't we have them now?\"  It is easy to develop a large\
    \ list of\n   potential applications, many of which would be based on a\n   client/server\
    \ model.  However, the more interesting part of the\n   question is: \"Why haven't\
    \ people done them already?\"  We believe the\n   answer to be that the tools\
    \ to make application writing easy just do\n   not exist.\n   To begin, we need\
    \ a set of common interchange formats for a number of\n   data items that will\
    \ be used across the network.  Once these common\n   data formats have been defined,\
    \ we need to develop tools that the\n   applications can use to move the data\
    \ easily.\n   6.1  Common Interchange Formats\n      The applications have to\
    \ know the format of information that they\n      are exchanging, for the information\
    \ to have any meaning.   The\n      following format types are to concern:\n \
    \     (1)  Text - Of the formats in this list, text is the most stable,\n    \
    \       but today's international Internet has to address the needs\n        \
    \   of character sets other than USASCII.\n      (2)  Image -  As we enter the\
    \ \"Multimedia Age\", images will become\n           increasingly important, but\
    \ we need to agree on how to\n           represent them in packets.\n      (3)\
    \  Graphics - Like images, vector graphic information needs a\n           common\
    \ definition. With such a format we could exchange\n           things like architectural\
    \ blueprints.\n      (4)  Video - Before we can have a video window running on\
    \ our\n           workstation, we need to know the format of that video\n    \
    \       information coming over the network.\n      (5)  Audio/Analog - Of course,\
    \ we also need the audio to go with\n           the video, but such a format would\
    \ be used for representation\n           of all types of analog signals.\n   \
    \   (6)  Display - Now that we are opening windows on our workstation,\n     \
    \      we want to open a window on another person's workstation to\n         \
    \  show her some data pertinent to the research project, so now\n           we\
    \ need a common window display format.\n      (7)  Data Objects - For inter-process\
    \ communications we need to\n           agree on the formats of things like integers,\
    \ reals, strings,\n           etc.\n      Many of these formats are being defined\
    \ by other, often several\n      other, standards organizations.  We need to agree\
    \ on one format\n      per category for the Internet.\n   6.2  Data Exchange Methods\n\
    \      Applications will require the following methods of data exchange.\n   \
    \   (1)  Store and Forward\n           Not everyone is on the network all the\
    \ time.  We need a\n           standard means of providing an information flow\
    \ to\n           sometimes-connected hosts, i.e., we need a common store-and-\n\
    \           forward service.  Multicasting should be included in such a\n    \
    \       service.\n      (2)  Global File Systems\n           Much of the data\
    \ access over the network can be broken down\n           to simple file access.\
    \ If you had a real global file system\n           where you access any file on\
    \ the Internet (assuming you have\n           permission), would you ever need\
    \ FTP?\n      (3)  Inter-process Communications\n           For a true distributed\
    \ computing environment, we need the\n           means to allow processes to exchange\
    \ data in a standard\n           method over the network.  This requirement encompasses\
    \ RPC,\n           APIs, etc.\n      (4)  Data Broadcast\n           Many  applications\
    \ need to send the same information to many\n           other hosts.  A standard\
    \ and efficient method is needed to\n           accomplish this.\n      (5)  Database\
    \ Access\n           For good information exchange, we need to have a standard\n\
    \           means for accessing databases. The Global File System can get\n  \
    \         you to the data, but the database access methods will tell\n       \
    \    you about its structure and content.\n      Many of these items are being\
    \ addressed by other organizations,\n      but for Internet interoperability,\
    \ we need to agree on the methods\n      for the Internet.\n      Finally, advanced\
    \ applications need solutions to the problems of\n      two earlier areas in this\
    \ document.  From the Traffic Control and\n      State area, applications need\
    \ the ability to transmit real-time\n      data.  This means some sort of expectation\
    \ level for data delivery\n      within a certain time frame.  Applications also\
    \ require global\n      authentication and access control systems from the Security\
    \ area.\n      Much of the usefulness of today's Internet applications is lost\n\
    \      due to the lack of trust and security.  This needs to be solved\n     \
    \ for tomorrow's applications.\n"
- title: 7.  REFERENCES
  contents:
  - "7.  REFERENCES\n   [1]  Cerf, V. and R. Kahn, \"A Protocol for Packet Network\n\
    \        Intercommunication,\" IEEE Transactions on Communication, May\n     \
    \   1974.\n   [2]  Postel, J., Sunshine, C., and D. Cohen, \"The ARPA Internet\n\
    \        Protocol,\" Computer Networks, Vol. 5, No. 4, July 1981.\n   [3]  Leiner,\
    \ B., Postel, J., Cole, R., and D. Mills, \"The DARPA\n        Internet Protocol\
    \ Suite,\" Proceedings INFOCOM 85, IEEE,\n        Washington DC, March 1985. \
    \ Also in: IEEE Communications\n        Magazine, March 1985.\n   [4]  Clark,\
    \ D., \"The Design Philosophy of the DARPA Internet\n        Protocols\", Proceedings\
    \ ACM SIGCOMM '88, Stanford, California,\n        August 1988.\n   [5]  Mogul,\
    \ J., and J. Postel, \"Internet Standard Subnetting\n        Procedure\", RFC\
    \ 950, USC/Information Sciences Institute, August\n        1985.\n   [6]  Mockapetris,\
    \ P., \"Domain Names - Concepts and Facilities\", RFC\n        1034, USC/Information\
    \ Sciences Institute, November 1987.\n   [7]  Deering, S., \"Host Extensions for\
    \ IP Multicasting\", RFC 1112,\n        Stanford University, August 1989.\n  \
    \ [8]  \"Proceedings of the Twenty-First Internet Engineering Task\n        Force\"\
    , Bell-South, Atlanta, July 29 - August 2, 1991.\n"
- title: 'APPENDIX A: Setting the Stage'
  contents:
  - "APPENDIX A: Setting the Stage\n   Slide 1\n                           WHITHER\
    \ THE INTERNET?\n                         OPTIONS FOR ARCHITECTURE\n         \
    \                  IAB/IESG -- Jan 1990\n                              David D.\
    \ Clark\n   __________________________________________________________________\n\
    \   Slide 2\n                      SETTING THE TOPIC OF DISCUSSION\n   Goals:\n\
    \       o Establish a common frame of understanding for\n         IAB, IESG and\
    \ the Internet community.\n       o Understand the set of problems to be solved.\n\
    \       o Understand the range of solutions open to us.\n       o Draw some conclusions,\
    \ or else\n         \"meta-conclusions\".\n   __________________________________________________________________\n\
    \   Slide 3\n                        SOME CLAIMS -- MY POSITION\n   We have two\
    \ different goals:\n      o Make it possible to build \"The Internet\"\n     \
    \ o Define a protocol suite called Internet\n   Claim: These goals have very different\
    \ implications.\n     The protocols are but a means, though a powerful one.\n\
    \   Claim: If \"The Internet\" is to succeed and grow, it will\n     require specific\
    \ design efforts.  This need will continue\n     for at least another 10 years.\n\
    \   Claim: Uncontrolled growth could lead to chaos.\n   Claim: A grass-roots solution\
    \ seems to be the only\n     means to success.  Top-down mandates are powerless.\n\
    \   __________________________________________________________________\n   Slide\
    \ 4\n                          OUTLINE OF PRESENTATION\n   1) The problem space\
    \ and the solution space.\n   2) A set of specific questions -- discussion.\n\
    \   3) Return to top-level questions -- discussion.\n   4) Plan for action --\
    \ meta discussion.\n   Try to separate functional requirements from technical\
    \ approach.\n   Understand how we are bounded by our problem space and our\n \
    \    solution space.\n   Is architecture anything but protocols?\n   __________________________________________________________________\n\
    \   Slide 5\n                        WHAT IS THE PROBLEM SPACE?\n   Routing and\
    \ addressing:\n      How big, what topology, and what routing model?\n   Getting\
    \ big:\n      User services, what technology for host and nets?\n   Divestiture\
    \ of the Internet:\n      Accounting, controlling usage and fixing faults.\n \
    \  New services:\n      Video? Transactions? Distributed computing?\n   Security:\n\
    \      End node or network?  Routers or relays?\n   __________________________________________________________________\n\
    \   Slide 6\n                        BOUNDING THE SOLUTION SPACE\n   How far can\
    \ we migrate from the current state?\n      o Can we change the IP header (except\
    \ to OSI)?\n      o Can we change host requirements in mandatory ways?\n     \
    \ o Can we manage a long-term migration objective?\n         -  Consistent direction\
    \ vs. diverse goals, funding.\n   Can we assume network-level connectivity?\n\
    \      o Relays are the wave of the future (?)\n      o Security a key issue;\
    \ along with conversion.\n      o Do we need a new \"relay-based\" architecture?\n\
    \   How \"managed\" can/must \"The Internet\" be?\n      o Can we manage or constrain\
    \ connectivity?\n   What protocols are we working with? One or many?\n   __________________________________________________________________\n\
    \   Slide 7\n                        THE MULTI-PROTOCOL INTERNET\n   \"Making\
    \ the problem harder for the good of mankind.\"\n   Are we migrating, interoperating,\
    \ or tolerating multiple protocols?\n      o Not all protocol suites will have\
    \ same range of functionality\n        at the same time.\n      o \"The Internet\"\
    \ will require specific functions.\n   Claim: Fundamental conflict (not religion\
    \ or spite):\n      o Meeting aggressive requirements for the Internet\n     \
    \ o Dealing with OSI migration.\n   Conclusion: One protocol must \"lead\", and\
    \ the others must follow.\n      When do we \"switch\" to OSI?\n   Consider every\
    \ following slide in this context.\n   __________________________________________________________________\n\
    \   Slide 8\n                          ROUTING and ADDRESSING\n   What is the\
    \ target size of \"The Internet\"?\n      o How do addresses and routes relate?\n\
    \      o What is the model of topology?\n      o What solutions are possible?\n\
    \   What range of policy routing is required?\n      o BGP and IDRP are two answers.\
    \  What is the question?\n      o Fixed classes, or variable paths?\n      o Source\
    \ controlled routing is a minimum.\n   How seamless is the needed support for\
    \ mobile hosts?\n      o New address class, rebind to local address, use DNS?\n\
    \   Shall we push for Internet multicast?\n   __________________________________________________________________\n\
    \   Slide 9\n                        GETTING BIG -- AN OLD TITLE\n   (Addressing\
    \ and routing was on previous slide...)\n   What user services will be needed\
    \ in the next 10 years?\n      o Can we construct a plan?\n      o Do we need\
    \ architectural changes?\n   Is there a requirement for dealing better with ranges\
    \ in\n      speed, packet sizes, etc.\n      o Policy to phase out fragmentation?\n\
    \   What range of hosts (things != Unix) will we support?\n   _________________________________________________________________\n\
    \   Slide 10\n                         DEALING WITH DIVESTITURE\n   The Internet\
    \ is composed of parts separately managed and\n   controlled.\n   What support\
    \ is needed for network charging?\n      o No architecture implies bulk charges\
    \ and re-billing, pay\n          for lost packets.\n      o Do we need controls\
    \ to supply billing id or routing?\n   Requirement: we must support links with\
    \ controlled sharing.\n      (Simple form is classes based on link id.)\n    \
    \  o How general?\n   Is there an increased need for fault isolation? (I vote\
    \ yes!)\n      o How can we find managers to talk to?\n      o Do we need services\
    \ in hosts?\n   _________________________________________________________________\n\
    \   Slide 11\n                               NEW SERVICES\n   Shall we support\
    \ video and audio? Real time? What %?\n      o Need to plan for input from research.\
    \  What quality?\n      o Target date for heads-up to vendors.\n   Shall we \"\
    better\" support transactions?\n      o Will TCP do? VMTP? Presentation? Locking?\n\
    \   What application support veneers are coming?\n      o Distributed computing\
    \ -- will it actually happen?\n      o Information networking?\n   __________________________________________________________________\n\
    \   Slide 12\n                                 SECURITY\n   Can we persist in\
    \ claiming the end-node is the only line of defense?\n      o What can we do inside\
    \ the network?\n      o What can ask the host to do?\n   Do we tolerate relays,\
    \ or architect them?\n   Can find a better way to construct security boundaries?\n\
    \   Do we need global authentication?\n   Do we need new host requirements:\n\
    \      o Logging.\n      o Authentication.\n      o Management interfaces.\n \
    \        - Phone number or point of reference.\n   __________________________________________________________________\n"
- title: 'APPENDIX B: Group Membership'
  contents:
  - "APPENDIX B: Group Membership\n   Group 1: ROUTING AND ADDRESSING\n       Dave\
    \ Clark, MIT  [Chair]\n       Hans-Werner Braun, SDSC\n       Noel Chiappa, Consultant\n\
    \       Deborah Estrin, USC\n       Phill Gross, CNRI\n       Bob Hinden, BBN\n\
    \       Van Jacobson, LBL\n       Tony Lauck, DEC.\n   Group 2: MULTI-PROTOCOL\
    \ ARCHITECTURE\n       Lyman Chapin, BBN  [Chair]\n       Ross Callon, DEC\n \
    \      Dave Crocker, DEC\n       Christian Huitema, INRIA\n       Barry Leiner,\n\
    \       Jon Postel, ISI\n   Group 3: SECURITY ARCHITECTURE\n       Vint Cerf,\
    \ CNRI  [Chair]\n       Steve Crocker, TIS\n       Steve Kent, BBN\n       Paul\
    \ Mockapetris, DARPA\n   Group 4: TRAFFIC CONTROL AND STATE\n       Robert Braden,\
    \ ISI  [Chair]\n       Chuck Davin,  MIT\n       Dave Mills, University of Delaware\n\
    \       Claudio Topolcic, CNRI\n   Group 5: ADVANCED APPLICATIONS\n       Russ\
    \ Hobby, UCDavis  [Chair]\n       Dave Borman, Cray Research\n       Cliff Lynch,\
    \ University of California\n       Joyce K. Reynolds, ISI\n       Bruce Schatz,\
    \ University of Arizona\n       Mike Schwartz, University of Colorado\n      \
    \ Greg Vaudreuil, CNRI.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in Section 4.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David D. Clark\n   Massachusetts Institute of Technology\n\
    \   Laboratory for Computer Science\n   545 Main Street\n   Cambridge, MA 02139\n\
    \   Phone: (617) 253-6003\n   EMail: ddc@LCS.MIT.EDU\n   Vinton G. Cerf\n   Corporation\
    \ for National Research Initiatives\n   1895 Preston White Drive, Suite 100\n\
    \   Reston, VA 22091\n   Phone: (703) 620-8990\n   EMail: vcerf@nri.reston.va.us\n\
    \   Lyman A. Chapin\n   Bolt, Beranek & Newman\n   Mail Stop 20/5b\n   150 Cambridge\
    \ Park Drive\n   Cambridge, MA 02140\n   Phone: (617) 873-3133\n   EMail: lyman@BBN.COM\n\
    \   Robert Braden\n   USC/Information Sciences Institute\n   4676 Admiralty Way\n\
    \   Marina del Rey, CA 90292\n   Phone: (310) 822-1511\n   EMail: braden@isi.edu\n\
    \   Russell Hobby\n   University of California\n   Computing Services\n   Davis,\
    \ CA 95616\n   Phone: (916) 752-0236\n   EMail: rdhobby@ucdavis.edu\n"
