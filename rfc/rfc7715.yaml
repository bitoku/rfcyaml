- title: __initial_text__
  contents:
  - '                 Multipoint LDP (mLDP) Node Protection

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes procedures to support node protection for\n\
    \   Point-to-Multipoint and Multipoint-to-Multipoint Label Switched Paths\n  \
    \ (P2MP and MP2MP LSPs) that have been built by the Multipoint Label\n   Distribution\
    \ Protocol (mLDP).  In order to protect a node N, the\n   Point of Local Repair\
    \ (PLR) Label Switching Router (LSR) of N must\n   learn the Merge Point (MPT)\
    \ LSR(s) of node N such that traffic can be\n   redirected to them in case node\
    \ N fails.  Redirecting the traffic\n   around the failed node N depends on existing\
    \ Point-to-Point (P2P)\n   Label Switched Paths (LSPs).  The pre-established LSPs\
    \ originate from\n   the PLR LSR and terminate on the MPT LSRs while bypassing\
    \ LSR N.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7715.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Conventions Used in This Document  . . . . . . .\
    \ . . . . .  3\n     1.2.  Terminology  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   2.  PLR Determination  . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n     2.1.  Transit Node Procedure . . . . . . . . . . . . . . . .\
    \ . .  5\n     2.2.  MP2MP Root Node Procedure  . . . . . . . . . . . . . . .\
    \ .  6\n     2.3.  PLR Information Encoding . . . . . . . . . . . . . . . . .\
    \  7\n   3.  Using the tLDP Session . . . . . . . . . . . . . . . . . . . .  9\n\
    \   4.  Link or Node Failure . . . . . . . . . . . . . . . . . . . . . 10\n  \
    \   4.1.  Reconvergence after Node or Link Failure . . . . . . . . . 11\n    \
    \   4.1.1.  Node Failure . . . . . . . . . . . . . . . . . . . . . 12\n      \
    \ 4.1.2.  Link Failure . . . . . . . . . . . . . . . . . . . . . 12\n       4.1.3.\
    \  Switching to New Primary Path  . . . . . . . . . . . . 12\n   5.  mLDP Capabilities\
    \ for Node Protection  . . . . . . . . . . . . 13\n     5.1.  PLR Capability .\
    \ . . . . . . . . . . . . . . . . . . . . . 13\n     5.2.  MPT Capability . .\
    \ . . . . . . . . . . . . . . . . . . . . 14\n     5.3.  The Protected LSR  .\
    \ . . . . . . . . . . . . . . . . . . . 14\n     5.4.  The Node Protection Capability\
    \ . . . . . . . . . . . . . . 15\n   6.  Security Considerations  . . . . . .\
    \ . . . . . . . . . . . . . 16\n   7.  IANA Considerations  . . . . . . . . .\
    \ . . . . . . . . . . . . 16\n   8.  References . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 17\n     8.1.  Normative References . . . . . . . . .\
    \ . . . . . . . . . . 17\n     8.2.  Informative References . . . . . . . . .\
    \ . . . . . . . . . 17\n   Acknowledgments  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 18\n   Contributors . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 18\n   Authors' Addresses . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes procedures to support node protection\
    \ for\n   Point-to-Multipoint and Multipoint-to-Multipoint Label Switched Paths\n\
    \   (P2MP and MP2MP LSPs) that have been built by the Multipoint Label\n   Distribution\
    \ Protocol (mLDP) [RFC6388].  In order to protect a node\n   N, the Point of Local\
    \ Repair (PLR) LSR of N must learn the Merge\n   Point (MPT) LSR(s) of node N\
    \ such that traffic can be redirected to\n   them in case node N fails.  Redirecting\
    \ the traffic around the failed\n   node N depends on existing P2P LSPs.  The\
    \ pre-established LSPs\n   originate from the PLR LSR and terminate on the MPT\
    \ LSRs while\n   bypassing LSR N.  The procedures to set up these P2P LSPs are\
    \ outside\n   the scope of this document, but one can imagine using techniques\n\
    \   based on the Resource Reservation Protocol for Traffic Engineering\n   (RSVP-TE)\
    \ [RFC5420] or Label Distribution Protocol (LDP) Loop-Free\n   Alternate (LFA)\
    \ [RFC5286] to accomplish this.\n   The solution described in this document notifies\
    \ the PLR(s) of the\n   MPT LSR(s) via signaling using a Targeted LDP (tLDP) session\n\
    \   [RFC7060].  By having a tLDP session with the PLR, no additional\n   procedures\
    \ need to be defined in order to support Make-Before-Break\n   (MBB), Graceful\
    \ Restart (GR), and Typed Wildcard Forwarding\n   Equivalence Class (FEC).  All\
    \ this is achieved at the expense of\n   having additional tLDP sessions between\
    \ each MPT and PLR LSR.\n   In order to allow a node to be protected against failure,\
    \ the LSRs\n   providing the PLR and the MPT functionality as well as the protected\n\
    \   node MUST support the functionality described in this document.  LDP\n   capability\
    \ negotiation [RFC5561] is used to signal the availability\n   of the functionality\
    \ between the participating nodes; these nodes\n   MUST support capability negotiation.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   The term \"node\" is used to refer to an LSR; \"\
    node\" and \"LSR\" are used\n   interchangeably in this document.  The terms \"\
    PLR\" and \"MPT\" are used\n   as shorthand to refer to \"PLR LSR\" and \"MPT\
    \ LSR\", respectively.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   mLDP:  Multipoint LDP\n   PLR:  Point of Local Repair\n\
    \      The LSR that redirects the traffic to one or more Merge Point\n      LSRs.\n\
    \   MPT:  Merge Point\n      The LSR that merges the backup LSP with the primary\
    \ LSP.  Note,\n      there can be multiple MPT LSRs for a single MP-LSP node\n\
    \      protection.\n   tLDP:  Targeted LDP\n   MP LSP:  Multi-Point LSP\n    \
    \  Either a P2MP or MP2MP LSP.\n   root node:\n      The root of either a P2MP\
    \ or MP2MP LSP as defined in [RFC6388].\n"
- title: 2.  PLR Determination
  contents:
  - "2.  PLR Determination\n   In order for an MPT to establish a tLDP session with\
    \ a PLR, it first\n   has to learn the PLR for a particular MP LSP.  It is the\n\
    \   responsibility of the protected node N to advertise the address of\n   the\
    \ PLR to the MPT.  The PLR address for an MP LSP on node N is the\n   address\
    \ of the upstream LDP peer, but only when node N is NOT the\n   root node of the\
    \ MP2MP LSP.  If the upstream LDP peer is unable to\n   function as PLR, the procedures\
    \ in this document do not apply and are\n   out of the scope.  If node N is the\
    \ root node, the procedures are\n   slightly different as described in Section\
    \ 2.2.  The procedures that\n   follow assume that all the participating nodes\
    \ (N, PLRs, MPTs) are\n   enabled (e.g., by a user configuration) to support and\
    \ implement the\n   PLR determination feature.\n   The procedures as documented\
    \ in this RFC require the protected node\n   to be directly connected to the PLR\
    \ and MPT nodes.  This is because\n   mLDP depends on unicast routing to determine\
    \ the upstream LSR and\n   unicast routing (by default) only has information about\
    \ the next hop\n   and not beyond that.  Support for non-directly connected PLR\
    \ and MPT\n   nodes is outside the scope of this document.\n"
- title: 2.1.  Transit Node Procedure
  contents:
  - "2.1.  Transit Node Procedure\n   Below are the procedures for when the protected\
    \ node is a transit\n   node along the path to the root.\n                   \
    \     root\n                         ^\n                         |\n         \
    \              (LSR1)\n                      .  |  .\n                     . \
    \  |   .\n                    .   (N)   .\n                    .   /  \\  .\n\
    \                     . /    \\.\n                   (LSR2)  (LSR3)\n        \
    \              |      |\n               N: The node being protected.\n       \
    \        ...: Backup LSPs from LSR1 to LSR2 and LSR3.\n                      \
    \       Figure 1\n   Node N uses the root address of the MP LSP to determine the\
    \ upstream\n   LSR for a given MP LSP following the procedures as documented in\n\
    \   Section 2.4.1.1 of [RFC6388].  The upstream LSR in Figure 1 is LSR1\n   because\
    \ it is the first hop along the shortest path to reach the root\n   address. \
    \ After determining the upstream LSR, node N (which has the\n   node protection\
    \ feature enabled) MUST advertise the address of LSR1\n   as the PLR address to\
    \ the downstream members of the MP LSP (i.e.,\n   LSR2 and LSR3) if the given\
    \ downstream member has announced support\n   for node protection (see Section\
    \ 5 regarding capability negotiation).\n   For the format and encoding of PLR\
    \ address information, see Section\n   2.3.\n   Note, in order for the protected\
    \ traffic to reach nodes LSR2 and\n   LSR3, LSR1 MUST have two unidirectional\
    \ LSPs to LSR2 and LSR3,\n   bypassing node N.  The procedures for setting up\
    \ these LSPs are\n   outside the scope of this document.\n"
- title: 2.2.  MP2MP Root Node Procedure
  contents:
  - "2.2.  MP2MP Root Node Procedure\n   Below are the procedures for when the protected\
    \ node is the root of\n   an MP2MP LSP.  Consider figure 2 below.\n          \
    \               |\n                       (LSR1)\n                      .  | \
    \ .\n                     .   |   .\n                    .   (N)   . root\n  \
    \                  .   /  \\  .\n                     . /    \\.\n           \
    \       (LSR2)....(LSR3)\n                     |        |\n               N: The\
    \ MP2MP root node being protected.\n               ...: Backup LSPs between LSR1,\
    \ LSR2, and LSR3.\n                             Figure 2\n   Assume that LSR1,\
    \ LSR2, and LSR3 are all members of an MP2MP LSP for\n   which N is the root node.\
    \  Since N is the root of the MP2MP LSP,\n   there is no upstream LSR and no 'single'\
    \ PLR LSR for protecting node\n   N.  In order to protect node N, all the directly\
    \ connected members of\n   the MP2MP must participate in protecting node N by\
    \ acting both as PLR\n   and MPT LSR.  An LSR will act as MPT for traffic coming\
    \ from the\n   other LSR(s) and it will act as PLR for traffic it is sending to\
    \ the\n   other LSR(s).  Since node N knows the members of the MP2MP LSP, it\n\
    \   will advertise the member list to its directly connected members,\n   excluding\
    \ the member it is sending to.  For example, node N will\n   advertise list {LSR3,LSR1}\
    \ to LSR2 excluding LSR2 from it.  Instead\n   of advertising a single PLR when\
    \ node N is not the root, a list of\n   PLRs is advertised using the procedures\
    \ documented in Section 2.3.\n   It should be noted that the MP2MP root node protection\
    \ mechanism\n   doesn't replace the Root Node Redundancy (RNR) procedures as\n\
    \   described in Section 7 of [RFC6388].  The node protection procedures\n   in\
    \ this document will help in restoring traffic for the existing\n   MP2MP LSPs\
    \ after node failure, but a new root node has to be elected\n   eventually in\
    \ order to allow new MP2MP LSPs to be created.\n   Note, in order for the protected\
    \ traffic to be exchanged between\n   nodes LSR1, LSR2, and LSR3, bidirectional\
    \ LSPs have to exist between\n   the LSRs, bypassing node N.  The procedures for\
    \ setting up these LSPs\n   are outside the scope of this document.\n"
- title: 2.3.  PLR Information Encoding
  contents:
  - "2.3.  PLR Information Encoding\n   The upstream LSR address is conveyed via an\
    \ LDP Notification message\n   with an MP Status TLV, where the MP Status TLV\
    \ contains a new \"PLR\n   Status Value Element\" that specifies the address of\
    \ the PLR.\n   The new \"PLR Status Value Element\" is encoded as described below.\n\
    \   PLR Status Element:\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Type =  2     |           Length              |  Addr Family  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Addr Fam cont | Num PLR entry |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n   |                                      \
    \                         |\n   |                         PLR entry (1 or more)\
    \                 ~\n   |                                                    \
    \           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Where\n      Type: PLR Status Value Element (Type 2).\n      Length: The Length\
    \ field is an unsigned integer that encodes the\n      length of the Status Value\
    \ following the Length field.  The\n      encoded Length varies based on the Addr\
    \ Family and the number of\n      PLR entries.\n      Addr Family: Two-octet quantity\
    \ containing a value from IANA's\n      \"Address Family Numbers\" registry [AFI]\
    \ that encodes the address\n      family for the PLR address encoded in the PLR\
    \ entry.\n      Num PLR entry: Element as an unsigned integer followed by the\n\
    \      number of \"PLR entry\" fields in the format specified below.\n   The format\
    \ of a \"PLR Entry\" is as follows:\n    0                   1               \
    \    2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |A|        Reserved             |       PLR address             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                  PLR address (cont)                           ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Where\n      A bit: 0 = Withdraw, 1 = Add.\n      Reserved: 15 bits; MUST\
    \ be zero on transmit and ignored on\n      receipt.\n      PLR address: PLR address\
    \ encoded according to the Address Family\n      field encoded in the PLR Status\
    \ Value Element.  Note that the\n      length of the PLR address field is specific\
    \ to the Address Family\n      that is encoded.\n   The size of a \"PLR Entry\"\
    \ is the 2 octets (\"A bit + Reserved\") + PLR\n   address length.  The length\
    \ of the PLR address is dependent on the\n   Address Family as encoded in the\
    \ PLR Status Value Element.  The size\n   of a \"PLR entry\" is 6 octets and 18\
    \ octets, respectively, for an IPv4\n   PLR address and an IPv6 PLR address.\n\
    \   If the PLR address on N changes for a given MP LSP, N needs to\n   trigger\
    \ a new PLR Status to update the MPT(s).  Node N can advertise\n   or withdraw\
    \ a given PLR from its PLR set by setting the A bit to 1 or\n   0 respectively\
    \ in the corresponding PLR entry.  Removing a PLR\n   address is likely due to\
    \ a link failure; see the procedures as\n   documented in Section 4.1.  To remove\
    \ all PLR addresses belonging to\n   the encoded Address Family, an LSR N MUST\
    \ encode a PLR Status Value\n   Element with no PLR entry and the \"Num PLR entry\"\
    \ field MUST be set\n   to zero.\n   Both the PLR Status and an MP FEC TLV [RFC5036]\
    \ MUST be included in\n   the LDP Notification message so that a receiver is able\
    \ to associate\n   the PLR Status with the MP LSP.\n"
- title: 3.  Using the tLDP Session
  contents:
  - "3.  Using the tLDP Session\n   The receipt of a PLR MP Status (with PLR addresses)\
    \ for an MP LSP on\n   a receiving LSR makes it an MPT for node protection.  If\
    \ not already\n   established, the MPT LSR MUST establish a tLDP session with\
    \ all of\n   the learned PLR addresses using the procedures as documented in\n\
    \   [RFC7060].\n   Using Figure 1 as the reference topology, let us assume that\
    \ both\n   LSR2 and LSR3 are MPTs and have established a tLDP session with the\n\
    \   PLR being LSR1.  Assume that both LSR2 and LSR3 have a FEC <R,X> with\n  \
    \ an upstream LSR N and label Ln assigned to FEC towards N.  The MPTs\n   will\
    \ create a secondary upstream LSR for the FEC <R,X> (using the\n   received PLR\
    \ address) and assign label Lpx to it.  The MPTs will do\n   that for each PLR\
    \ address that was learned for the MP LSP.  In this\n   example, the MPTs will\
    \ have a FEC <R,X> with two local labels\n   associated with it.  Label Ln that\
    \ was assigned to N using the normal\n   mLDP procedures, and Label Lpx that was\
    \ assigned to PLR (LSR1) for\n   the purpose of node protection.  Note, when the\
    \ protected node is an\n   MP2MP root node, there will be an upstream LSR for\
    \ each PLR address\n   that was advertised along with a unique Label Lpx.\n  \
    \ The receipt of a FEC Label Mapping alone over the tLDP session from\n   MPT\
    \ on a PLR conveys the label information but does not convey the\n   node being\
    \ protected.  The information about a protected node is\n   known to the MPT LSR\
    \ and needs to be communicated to the PLR as well.\n   For this reason, the FEC\
    \ Label Mapping (FEC <R,X> : Lpx) sent by the\n   MPT over the tLDP session to\
    \ the PLR MUST include a Status TLV with\n   an MP Status and a new LDP MP Status\
    \ Value Element called the\n   \"Protected Node Status Value Element\".  This\
    \ new value element is\n   used to specify the address of the node being protected.\
    \  The\n   \"Protected Node Status Value Element\" has the following format:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Type = 3      |           Length              | Addr  Family  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Addr Fam cont |        Node address                           ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type : Protected Node Status Value Element (Type 3).\n      Length: The\
    \ Length field is an unsigned integer that encodes the\n      length of the Status\
    \ Value following the Length field.  The\n      encoded Length varies based on\
    \ the Address Family and is 6 octets\n      for Address Family + IPv4 address\
    \ and 18 octets for Address Family\n      + IPv6 address.\n      Addr Family:\
    \ Two-octet quantity containing a value from IANA's\n      \"Address Family Numbers\"\
    \ registry [AFI] that encodes the address\n      family for the node address.\n\
    \      Node address: Protected node address encoded according to the\n      Address\
    \ Family field.\n   When a PLR receives a Label Mapping for FEC <R,X> that includes\
    \ a\n   Protected Node Status, it will only use that label binding once the\n\
    \   Node advertised in the Status value becomes unreachable.  If the LSP\n   is\
    \ an MP2MP LSP, the PLR would have assigned a Label Mapping for the\n   upstream\
    \ MP2MP FEC Element to the MPT ([RFC6388], Section 3) for FEC\n   <R,X>.  This\
    \ label binding on the MPT MUST only be used once node N\n   becomes unreachable.\n\
    \   The procedures to determine if a node is unreachable is a local\n   decision\
    \ and not spelled out in this document.  Typically, link\n   failure or Bidirectional\
    \ Forwarding Detection (BFD) can be used to\n   determine and detect node unreachability.\n"
- title: 4.  Link or Node Failure
  contents:
  - "4.  Link or Node Failure\n   Consider the following topology:\n             \
    \              root\n                            ^\n                         \
    \   |\n                        . (LSR1)\n                      .   / |  .\n  \
    \                   .  (M) |   .\n                     .    \\ |    .\n      \
    \                .    (N)   .\n                       .   /  \\  .\n         \
    \               . /    \\.\n                      (LSR2)  (LSR3)\n           \
    \              |      |\n               N: The node being protected.\n       \
    \        M: The backup node to protect link LSR1 - N.\n               ...: Backup\
    \ LSPs from LSR1 to LSR2 and LSR3.\n                              Figure 3\n \
    \  Assume that LSR1 is the PLR for protected node N and that LSR2 and\n   LSR3\
    \ are MPTs for node N.  When LSR1 discovers that node N is\n   unreachable, it\
    \ cannot immediately determine whether it is the link\n   from LSR1 to N or the\
    \ actual node N that has failed.  In Figure 3,\n   the link between LSR1 and N\
    \ is also protected using Fast Reroute\n   (FRR) [RFC4090] link protection via\
    \ node M.  LSR1 MAY simultaneously\n   invoke both link protection via node M\
    \ to N using redirection of the\n   traffic and node protection directly to LSR1\
    \ and LSR2.  If only the\n   link failed, LSR2 and LSR3 will receive the packets\
    \ twice due to the\n   two protection mechanisms.  To prevent duplicate packets\
    \ being\n   forwarded to the receivers on the tree, LSR2 and LSR3 need to\n  \
    \ determine from which upstream node they should accept the packets.\n   This\
    \ can be either from the primary upstream LSR N or from the\n   secondary upstream\
    \ LSR1, but never both at the same time.  The\n   selection between the primary\
    \ upstream LSR or (one or more) secondary\n   upstream LSRs (on LSR2 and LSR3)\
    \ is based on the reachability of the\n   protected node N.  As long as N is reachable\
    \ from an MPT, the MPT\n   should accept and forward the MPLS packets from N.\
    \  Once N becomes\n   unreachable, the LSPs from secondary upstream PLR LSRs (LSR1\
    \ in our\n   example) are activated.  Note that detecting if N is unreachable\
    \ is a\n   local decision and not spelled out in this document.\n   Typically,\
    \ link failure or BFD can be used to determine and detect\n   node unreachability.\n"
- title: 4.1.  Reconvergence after Node or Link Failure
  contents:
  - "4.1.  Reconvergence after Node or Link Failure\n   Consider the following topology:\n\
    \                           root\n                            ^\n            \
    \             _  |\n                      /.  (LSR1)\n                     /.\
    \   /. |  .\\\n                    /.  (M). |   .\\\n                  (P).  \
    \  \\. |    .\\\n                    \\.     ( N )   .(Q)\n                  \
    \   \\.   /     \\   ./\n                      \\. /       \\ ./\n           \
    \          (LSR2)     (LSR3)\n                        |          |\n         \
    \      N: The node being protected.\n               M: The backup node to protect\
    \ link 'LSR1 - N'.\n               P and Q: The nodes on the new primary path\
    \ after\n                  failure of node N.\n               ...: P2P backup\
    \ LSPs.\n                               Figure 4\n   Assume that LSR1 has detected\
    \ that node N is unreachable and invoked\n   both the link protection and node\
    \ protection procedures as described\n   in this example.  LSR1 is acting as PLR\
    \ and sending traffic over both\n   the backup P2P LSP to node N (via M) and the\
    \ P2P LSPs directly to\n   LSR2 and LSR3, acting as MPT LSRs.  The sequence of\
    \ events is\n   dependent on whether the link from LSR1 to N has failed or node\
    \ N\n   itself has failed.  The nodes downstream from the protected node (and\n\
    \   participating in node protection) MUST have the capability to\n   determine\
    \ that the protected node has become unreachable.  Otherwise,\n   the procedures\
    \ below cannot be applied.\n"
- title: 4.1.1.  Node Failure
  contents:
  - "4.1.1.  Node Failure\n   If node N failed, both LSR2 and LSR3 will have changed\
    \ the primary\n   upstream LSR to the secondary upstream LSR (LSR1) due to node\
    \ N being\n   unreachable.  With that, the label bindings previously assigned\
    \ to\n   LSR1 will be activated on the MPTs (LSR2 and LSR3) and the label\n  \
    \ binding to N will be disabled.  Traffic is now switched over to the\n   label\
    \ bindings that were installed for node protection.\n"
- title: 4.1.2.  Link Failure
  contents:
  - "4.1.2.  Link Failure\n   If the link 'LSR1 - N' has failed, both LSR2 and LSR3\
    \ will not change\n   the primary upstream LSR because node N is still reachable.\
    \  LSR2 and\n   LSR3 will receive traffic over two different bindings, the primary\n\
    \   label binding assigned to node N (due to link protection via node M)\n   as\
    \ well as over the binding assigned to LSR1 for the node protection.\n   Since\
    \ the secondary upstream LSRs have not been activated, the\n   traffic received\
    \ due to node protection will be dropped.  Node N will\n   reconverge and update\
    \ LSR2 and LSR3 (Section 2.3) with the\n   information that the PLR address (LSR1)\
    \ is no longer applicable and\n   must be removed.  In response, LSR2 and LSR3\
    \ MUST send a Label\n   Withdraw to LSR1 to withdraw the label binding.  This\
    \ will stop the\n   traffic being forwarded over the backup P2P LSPs for node\
    \ protection.\n   LSR1 will respond back with a Label Release as soon as the binding\n\
    \   has been removed.\n"
- title: 4.1.3.  Switching to New Primary Path
  contents:
  - "4.1.3.  Switching to New Primary Path\n   The network will eventually reconverge\
    \ and a new best path to the\n   root will be found by LSR2 and LSR3.  LSR2 will\
    \ find that P is its\n   new primary upstream LSR to reach the root and LSR3 will\
    \ find Q.\n   Note that although the current active upstream LSR can either be\
    \ node\n   N or LSR1 (depending on link or node failure), it does not matter for\n\
    \   the following procedures.  Both LSR2 and LSR3 SHOULD use the Make-\n   Before-Break\
    \ (MBB) procedures as described in Section 8 of [RFC6388]\n   to switch to the\
    \ new primary upstream node.  As soon as the new\n   primary upstream LSRs P and\
    \ Q are activated, a Label Withdraw message\n   MUST be sent to the old upstream\
    \ LSR.  Note that an upstream LSR\n   switchover from a tLDP neighbor to a directly\
    \ connected LDP neighbor\n   is no different compared to switching between two\
    \ directly connected\n   neighbors.  After the Label Withdraw message has been\
    \ received by\n   LSR1 or node N, forwarding will stop and a Label Release will\
    \ be\n   sent.\n   When it is determined that after reconvergence there is no\
    \ more\n   interest in the tLDP session between the MPT and the PLR, the tLDP\n\
    \   session MAY be taken down.  It is possible that having no more\n   interest\
    \ in the tLDP session is temporarily due to link flapping.  In\n   order to avoid\
    \ the tLDP session from flapping, it is RECOMMENDED to\n   apply a delay before\
    \ tearing down the session.  Determining the delay\n   is a local implementation\
    \ matter.  If the operator is not concerned\n   with the tLDP session flapping\
    \ and/or other procedures are in place\n   to avoid this altogether, there is\
    \ no need to apply the delay.\n"
- title: 5.  mLDP Capabilities for Node Protection
  contents:
  - "5.  mLDP Capabilities for Node Protection\n   In order to describe the capabilities\
    \ of the participating LSRs, this\n   document is organizing it per role in the\
    \ network, i.e., Point of\n   Local Repair (PLR), Merge Point (MPT), and protected\
    \ node (as\n   depicted in Figure 1).\n"
- title: 5.1.  PLR Capability
  contents:
  - "5.1.  PLR Capability\n   A PLR node should handle the following conditions:\n\
    \   1. Accept an incoming tLDP session from the MPT LSR.\n   2. Support the receipt\
    \ of a \"Protected Node Status Value Element\"\n      status in an MP Status TLV\
    \ over tLDP session.\n   3. Upon node failure detection, capable of switching\
    \ traffic towards\n      one or more MPT(s) over a P2P LSP (bypassing N) using\
    \ the labels\n      previously advertised for MP LSPs over the tLDP session.\n\
    \   An LSR capable of performing these actions will advertise itself as\n   PLR\
    \ capable in the Node Protection Capability (see Section 5.4).\n   This is a unidirectional\
    \ capability announced from PLR to the\n   protected LSR.\n"
- title: 5.2.  MPT Capability
  contents:
  - "5.2.  MPT Capability\n   An MPT node should handle the following conditions;\n\
    \   1. Support the receipt of \"PLR Status Value Element\" in an MP Status\n \
    \     TLV from a protected node N.\n   2. Support to transmit \"Protected Node\
    \ Status Value Element\" in an MP\n      Status TLV to a PLR.\n   An LSR capable\
    \ of performing these actions will advertise itself as\n   MPT capable in the\
    \ Node Protection Capability (see Section 5.4).\n   This is a unidirectional capability\
    \ from MPT to the protected LSR.\n"
- title: 5.3.  The Protected LSR
  contents:
  - "5.3.  The Protected LSR\n   A protected node should handle the following conditions:\n\
    \   1. Determine the PLR and MPT capability for directly connected\n      upstream\
    \ and downstream LSRs for a given MP FEC.\n   2. Support transmitting of \"PLR\
    \ Status Value Element\" in an MP Status\n      TLV to one or more downstream\
    \ MPT LSRs.\n   The protected LSR does not advertise any capability for mLDP Node\n\
    \   Protection because it does not need to receive any of the defined MP\n   Status\
    \ values as described above.  However, the protected node does\n   play an important\
    \ role in the signaling and setup of the node\n   protection.  For a given FEC,\
    \ the protected node can only send PLR\n   information to a downstream LSR if\
    \ the PLR has signaled the PLR\n   capability and the downstream LSR has signaled\
    \ the MPT capability.\n   When the downstream LSR (acting as MPT) receives the\
    \ PLR Status, it\n   can implicitly infer that the advertised LSR(s) are PLR capable.\
    \  The\n   MPT LSR can now proceed with setting up a tLDP session with the\n \
    \  PLR(s) and MP LSP node protection signaling.\n"
- title: 5.4.  The Node Protection Capability
  contents:
  - "5.4.  The Node Protection Capability\n   We define a single capability \"MP Node\
    \ Protection Capability\" to\n   announce the PLR and MPT capability.\n   The\
    \ format of the capability parameter TLV is as follows:\n    0               \
    \    1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F| Type = 0x0972             |           Length = 2          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S| Reserved    |P|M| Reserved  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Where\n      U/F bits: MUST be set to 1 and 0, respectively (as per [RFC5561]).\n\
    \      Type: MP Node Protection Capability (Type = 0x0972).\n      Length: Unsigned\
    \ integer; MUST be set to 2.\n      S bit: Set to 1 to announce and 0 to withdraw\
    \ the capability (as\n      per [RFC5561]).\n      P bit: Set to 1 to indicate\
    \ the PLR is capable of MP LSP node\n      protection.\n      M bit: Set to 1\
    \ to indicate the MPT is capable of MP LSP node\n      protection.\n      Reserved:\
    \ MUST be zero on transmit and ignored on receipt.\n   The above capability can\
    \ be sent in an LDP Initialization message to\n   announce capability at the session\
    \ establishment time, or it can be\n   sent in an LDP Capability message to dynamically\
    \ update (announce or\n   withdraw) its capability towards its peer using procedures\
    \ specified\n   in [RFC5561].\n   An LSR that supports the PLR functionality LSR\
    \ MAY send this\n   capability to its downstream MP peers with P bit set; whereas,\
    \ an LSR\n   that supports the MPT functionality MAY send this capability to its\n\
    \   upstream peer with M bit set.  Moreover, an LSR that supports both\n   the\
    \ PLR and MPT functionality MAY sent this capability to its peers\n   with both\
    \ P and M bit set.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The procedures in this document add two new TLVs\
    \ to existing LDP\n   messages.  Those TLVs can be protected by the mechanisms\
    \ that are\n   used to protect LDP messages as described in [RFC6388] and [RFC5920].\n\
    \   If it were possible to attack the mechanisms described in this\n   document,\
    \ an LSR (a PLR or a MPT) could be induced to support a large\n   number of tLDP\
    \ sessions and set up an even larger number of LSPs.\n   The security mechanisms\
    \ described in [RFC6388] and [RFC5920] are\n   believed to be adequate, but an\
    \ implementation could provide\n   additional protection by counting such protection\
    \ sessions and LSPs\n   and producing a log message to the operator if a threshold\
    \ is\n   crossed.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has allocated the following two new code points\
    \ from the \"LDP MP\n   Status Value Element type\" registry within the \"Label\
    \ Distribution\n   Protocol (LDP) Parameters\" registry.\n      Value | Name \
    \                                  | Reference\n      ------+----------------------------------------+-----------\n\
    \         2  | PLR Status Value Element               | this doc\n      ------+----------------------------------------+-----------\n\
    \         3  | Protected Node Status Value Element    | this doc\n   IANA has\
    \ assigned the following new code point for a new Capability\n   Parameter TLV.\
    \  The code point has been assigned from the IETF\n   Consensus range of the \"\
    TLV Type Name Space\" registry within the\n   \"Label Distribution Protocol (LDP)\
    \ Parameters\" registry.\n      Value | Description                   | Reference\
    \ | Notes/Reg Date\n      ------+-------------------------------+-----------+---------------\n\
    \      0x0972| MP Node Protection Capability | this doc  |\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5036]  Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n     \
    \         \"LDP Specification\", RFC 5036, DOI 10.17487/RFC5036,\n           \
    \   October 2007, <http://www.rfc-editor.org/info/rfc5036>.\n   [RFC6388]  Wijnands,\
    \ IJ., Ed., Minei, I., Ed., Kompella, K., and B.\n              Thomas, \"Label\
    \ Distribution Protocol Extensions for Point-\n              to-Multipoint and\
    \ Multipoint-to-Multipoint Label Switched\n              Paths\", RFC 6388, DOI\
    \ 10.17487/RFC6388, November 2011,\n              <http://www.rfc-editor.org/info/rfc6388>.\n\
    \   [RFC5561]  Thomas, B., Raza, K., Aggarwal, S., Aggarwal, R., and JL.\n   \
    \           Le Roux, \"LDP Capabilities\", RFC 5561,\n              DOI 10.17487/RFC5561,\
    \ July 2009,\n              <http://www.rfc-editor.org/info/rfc5561>.\n   [RFC7060]\
    \  Napierala, M., Rosen, E., and IJ. Wijnands, \"Using LDP\n              Multipoint\
    \ Extensions on Targeted LDP Sessions\", RFC 7060,\n              DOI 10.17487/RFC7060,\
    \ November 2013, <http://www.rfc-\n              editor.org/info/rfc7060>.\n \
    \  [AFI]      IANA, \"Address Family Numbers\",\n              <http://www.iana.org/assignments/address-family-numbers>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC4090]  Pan, P., Ed., Swallow, G., Ed., and\
    \ A. Atlas, Ed., \"Fast\n              Reroute Extensions to RSVP-TE for LSP Tunnels\"\
    , RFC 4090,\n              DOI 10.17487/RFC4090, May 2005,\n              <http://www.rfc-editor.org/info/rfc4090>.\n\
    \   [RFC5286]  Atlas, A., Ed., and A. Zinin, Ed., \"Basic Specification\n    \
    \          for IP Fast Reroute: Loop-Free Alternates\", RFC 5286,\n          \
    \    DOI 10.17487/RFC5286, September 2008,\n              <http://www.rfc-editor.org/info/rfc5286>.\n\
    \   [RFC5420]  Farrel, A., Ed., Papadimitriou, D., Vasseur, JP., and A.\n    \
    \          Ayyangarps, \"Encoding of Attributes for MPLS LSP\n              Establishment\
    \ Using Resource Reservation Protocol Traffic\n              Engineering (RSVP-TE)\"\
    , RFC 5420, DOI 10.17487/RFC5420,\n              February 2009, <http://www.rfc-editor.org/info/rfc5420>.\n\
    \   [RFC5920]  Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n      \
    \        Networks\", RFC 5920, DOI 10.17487/RFC5920, July 2010,\n            \
    \  <http://www.rfc-editor.org/info/rfc5920>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors thank Nagendra Kumar, Duan Hong, Martin Vigoureux,\
    \ Kenji\n   Fujihira, Loa Andersson, and Ben Campbell for their comments on this\n\
    \   document.  Also, many thanks to Elwyn Davies and Adrian Farrel for\n   the\
    \ detailed review and contribution to this document.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following individual contributed to this document:\n   Eric\
    \ Rosen\n   Juniper Networks, Inc.\n   10 Technology Park Drive\n   Westford,\
    \ MA  01886\n   United States\n   Email: erosen@juniper.net\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   IJsbrand Wijnands (editor)\n   Cisco Systems, Inc.\n \
    \  De kleetlaan 6a\n   Diegem  1831\n   Belgium\n   Email: ice@cisco.com\n   Kamran\
    \ Raza\n   Cisco Systems, Inc.\n   2000 Innovation Drive\n   Ottawa, Ontario K2K-3E8\n\
    \   Canada\n   Email: skraza@cisco.com\n   Alia Atlas\n   Juniper Networks, Inc.\n\
    \   10 Technology Park Drive\n   Westford, MA  01886\n   United States\n   Email:\
    \ akatlas@juniper.net\n   Jeff Tantsura\n   Ericsson\n   300 Holger Way\n   San\
    \ Jose, CA  95134\n   United States\n   Email: jeff.tantsura@ericsson.com\n  \
    \ Quintin Zhao\n   Huawei Technology\n   125 Nagog Technology Park\n   Acton,\
    \ MA  01719\n   United States\n   Email: quintin.zhao@huawei.com\n"
