- title: __initial_text__
  contents:
  - "               EAP Re-authentication Protocol Extensions\n            for Authenticated\
    \ Anticipatory Keying (ERP/AAK)\n"
- title: Abstract
  contents:
  - "Abstract\n   The Extensible Authentication Protocol (EAP) is a generic framework\n\
    \   supporting multiple types of authentication methods.\n   The EAP Re-authentication\
    \ Protocol (ERP) specifies extensions to EAP\n   and the EAP keying hierarchy\
    \ to support an EAP method-independent\n   protocol for efficient re-authentication\
    \ between the peer and an EAP\n   re-authentication server through any authenticator.\n\
    \   Authenticated Anticipatory Keying (AAK) is a method by which\n   cryptographic\
    \ keying material may be established upon one or more\n   Candidate Attachment\
    \ Points (CAPs) prior to handover.  AAK uses the\n   AAA infrastructure for key\
    \ transport.\n   This document specifies the extensions necessary to enable AAK\n\
    \   support in ERP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6630.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     2.1.  Requirements Language  . . . . . . . . . . . . . .\
    \ . . . .  3\n     2.2.  Acronyms . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n   3.  ERP/AAK Description  . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   4.  ERP/AAK Key Hierarchy  . . . . . . . . . . . . . . . . . . .\
    \ .  7\n     4.1.  Derivation of the pRK and pMSK . . . . . . . . . . . . . .\
    \  8\n   5.  Packet and TLV Extension . . . . . . . . . . . . . . . . . . .  9\n\
    \     5.1.  EAP-Initiate/Re-auth-Start Packet and TLV Extension  . . .  9\n  \
    \   5.2.  EAP-Initiate/Re-auth Packet and TLV Extension  . . . . . . 10\n    \
    \ 5.3.  EAP-Finish/Re-auth Packet and TLV Extension  . . . . . . . 12\n     5.4.\
    \  TV and TLV Attributes  . . . . . . . . . . . . . . . . . . 14\n   6.  Lower-Layer\
    \ Considerations . . . . . . . . . . . . . . . . . . 15\n   7.  AAA Transport\
    \ Considerations . . . . . . . . . . . . . . . . . 15\n   8.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 15\n   9.  IANA Considerations  . . .\
    \ . . . . . . . . . . . . . . . . . . 16\n   10. Acknowledgements . . . . . .\
    \ . . . . . . . . . . . . . . . . . 18\n   11. References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 18\n     11.1. Normative References . . . .\
    \ . . . . . . . . . . . . . . . 18\n     11.2. Informative References . . . .\
    \ . . . . . . . . . . . . . . 19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Extensible Authentication Protocol (EAP) [RFC3748] is\
    \ a generic\n   framework supporting multiple types of authentication methods.\
    \  In\n   systems where EAP is used for authentication, it is desirable not to\n\
    \   repeat the entire EAP exchange with another authenticator.  The EAP\n   Re-authentication\
    \ Protocol (ERP) [RFC5296] specifies extensions to\n   EAP and the EAP keying\
    \ hierarchy to support an EAP method-independent\n   protocol for efficient re-authentication\
    \ between the EAP\n   re-authentication peer and an EAP re-authentication server\
    \ through\n   any authenticator.  The re-authentication server may be in the home\n\
    \   network or in the local network to which the mobile host (i.e., the\n   EAP\
    \ re-authentication peer) is connecting.\n   Authenticated Anticipatory Keying\
    \ (AAK) [RFC5836] is a method by\n   which cryptographic keying material may be\
    \ established upon one or\n   more Candidate Attachment Points (CAPs) prior to\
    \ handover.  AAK\n   utilizes the AAA infrastructure for key transport.\n   This\
    \ document specifies the extensions necessary to enable AAK\n   support in ERP.\n"
- title: 2.  Terminology
  contents:
  - '2.  Terminology

    '
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.2.  Acronyms
  contents:
  - "2.2.  Acronyms\n   The following acronyms are used in this document; see the\
    \ references\n   for more details.\n   AAA\n       Authentication, Authorization,\
    \ and Accounting [RFC3588]\n   CAP\n       Candidate Attachment Point [RFC5836]\n\
    \   DSRK\n         Domain-Specific Root Key [RFC5295]\n   EA\n       Abbreviation\
    \ for \"ERP/AAK\"\n   EA Peer\n            An EAP peer that supports the ERP/AAK.\
    \  Note that all\n            references to \"peer\" in this document imply an\
    \ EA peer,\n            unless specifically noted otherwise.\n   NAI\n       Network\
    \ Access Identifier [RFC4282]\n   pMSK\n         pre-established Master Session\
    \ Key\n   pRK\n       pre-established Root Key\n   rIK\n       re-authentication\
    \ Integrity Key [RFC5296]\n   rRK\n       re-authentication Root Key [RFC5296]\n\
    \   SAP\n       Serving Attachment Point [RFC5836]\n"
- title: 3.  ERP/AAK Description
  contents:
  - "3.  ERP/AAK Description\n   ERP/AAK is intended to allow (upon request by the\
    \ peer) the\n   establishment of cryptographic keying materials on a single Candidate\n\
    \   Attachment Point prior to the arrival of the peer at the Candidate\n   Access\
    \ Network (CAN).\n   In this document, ERP/AAK support by the peer is assumed.\
    \  Also, it\n   is assumed that the peer has previously completed full EAP\n \
    \  authentication and that either the peer or the SAP knows the\n   identities\
    \ of neighboring attachment points.  Note that the behavior\n   of a peer that\
    \ does not support the ERP-AAK scheme defined in this\n   specification is out\
    \ of the scope of this document.  Figure 1 shows\n   the general protocol exchange\
    \ by which the keying material is\n   established on the CAP.\n     +------+ \
    \        +-----+        +-----+          +-----------+\n     | Peer |        \
    \ | SAP |        | CAP |          | EA Server |\n     +--+---+         +--+--+\
    \        +--+--+          +-----+-----+\n        |                |          \
    \    |                   |\n     a. | [EAP-Initiate/ |              |        \
    \           |\n        | Re-auth-start  |              |                   |\n\
    \        | (E flag)]      |              |                   |\n        |<---------------|\
    \              |                   |\n        |                |             \
    \ |                   |\n     b. | EAP-Initiate/  |              |           \
    \        |\n        | Re-auth        |              |                   |\n  \
    \      | (E flag)       |              |                   |\n        |--------------->|\
    \              |                   |\n     c. |                | AAA(EAP-Initiate/Re-auth(E\
    \ flag))|\n        |                |--------------------------------->|\n   \
    \     |                |              |         +---------+---------+\n      \
    \  |                |              |         | CA authorized &   |\n     d. |\
    \                |              |         |  and EA Keying    |\n        |   \
    \             |              |         |   Distribution    |\n        |      \
    \          |              |         +---------+---------+\n        |         \
    \       |              |                   |\n        |                |     \
    \         |                   |\n     f. |                | AAA (EAP-Finish/Re-auth(E\
    \ flag)) |\n        |                |<---------------------------------|\n  \
    \   g. | EAP-Finish/    |              |                   |\n        | Re-auth(E\
    \ flag)|              |                   |\n        |<---------------|      \
    \        |                   |\n        |                |              |    \
    \               |\n                        Figure 1: ERP/AAK Exchange\n      \
    \            +-----------+               +---------+\n                  |    \
    \       |               |         |\n                  | EA Server |         \
    \      |   CAP   |\n                  |           |               |         |\n\
    \                  +-----|-----+               +----|----+\n                 \
    \       |                          |\n                        |              \
    \            |\n                        |    AAA Request (pMSK)    |\n       \
    \              e.1|------------------------->|\n                        |    \
    \                      |\n                        |                          |\n\
    \                        |                          |\n                      \
    \  |  AAA Response (Success)  |\n                     e.2|<-------------------------|\n\
    \                        |                          |\n                      \
    \  |                          |\n                        |                   \
    \       |\n                  Figure 2: Key Distribution for ERP/AAK\n   ERP/AAK\
    \ reuses the packet format defined by ERP, but specifies a new\n   flag to differentiate\
    \ EAP early authentication from EAP\n   re-authentication.  The peer initiates\
    \ ERP/AAK without an external\n   trigger, or initiates ERP/AAK in response to\
    \ an EAP-Initiate/\n   Re-Auth-Start message from the SAP.\n   In the latter case,\
    \ the SAP MAY send the identity of one or more\n   Candidate Attachment Points\
    \ to which the SAP is adjacent to the peer\n   in the EAP-Initiate/Re-auth-Start\
    \ message (see step a in Figure 1).\n   The peer SHOULD override the identity\
    \ of CAP(s) carried in the\n   EAP-Initiate/Re-auth-Start message by sending EAP-Initiate/Re-auth\n\
    \   with the E flag set if it knows to which CAP it will move.  If the\n   EAP-Initiate/Re-auth-Start\
    \ packet is not supported by the peer, it\n   MUST be silently discarded.\n  \
    \ If the peer initiates ERP/AAK, the peer MAY send an early-\n   authentication\
    \ request message (EAP-Initiate/Re-auth with the E flag\n   set) containing the\
    \ keyName-NAI, the CAP-Identifier, rIK, and\n   sequence number (see step b in\
    \ Figure 1).  The realm in the keyName-\n   NAI field is used to locate the peer's\
    \ ERP/AAK server.  The CAP-\n   Identifier is used to identify the CAP.  The re-authentication\n\
    \   Integrity Key (rIK) is defined by Narayanan & Dondeti in [RFC5296]\n   and\
    \ is used to protect the integrity of the message.  The sequence\n   number is\
    \ used for replay protection.\n   The SAP SHOULD verify the integrity of this\
    \ message at step b.  If\n   this verification fails, the SAP MUST send an EAP-Finish/Re-auth\n\
    \   message with the Result flag set to '1' (Failure).  If the\n   verification\
    \ succeeds, the SAP SHOULD encapsulate the early-\n   authentication message into\
    \ a AAA message and send it to the peer's\n   ERP/AAK server in the realm indicated\
    \ in the keyName-NAI field (see\n   step c in Figure 1).\n   Upon receiving the\
    \ message, the ERP/AAK server MUST first use the\n   keyName indicated in the\
    \ keyName-NAI to look up the rIK and check the\n   integrity and freshness of\
    \ the message.  Then, the ERP/AAK server\n   MUST verify the identity of the peer\
    \ by checking the username portion\n   of the KeyName-NAI.  If any of the checks\
    \ fail, the server MUST send\n   an early-authentication finish message (EAP-Finish/Re-auth\
    \ with E\n   flag set) with the Result flag set to '1'.  Next, the server MUST\n\
    \   authorize the CAP specified in the CAP-Identifier TLV.  In the\n   success\
    \ case, the server MUST derive a pMSK from the pRK for the CAP\n   carried in\
    \ the CAP-Identifier field using the sequence number\n   associated with CAP-Identifier\
    \ as an input to the key derivation.\n   (see step d in Figure 1).\n   Then, the\
    \ ERP/AAK server MUST transport the pMSK to the authorized\n   CAP via AAA (see\
    \ Section 7) as illustrated above (see steps e.1 and\n   e.2 in Figure 2).  Note\
    \ that key distribution in Figure 2 is one part\n   of step d in Figure 1.\n \
    \  Finally, in response to the EAP-Initiate/Re-auth message, the ERP/AAK\n   server\
    \ SHOULD send the early-authentication finish message (EAP--\n   -Finish/Re-auth\
    \ with E flag set) containing the identity of the\n   authorized CAP to the peer\
    \ via the SAP along with the lifetime of the\n   pMSK.  If the peer also requests\
    \ the rRK Lifetime, the ERP/AAK server\n   SHOULD send the rRK Lifetime in the\
    \ EAP-Finish/Re-auth message (see\n   steps f and g in Figure 1).\n"
- title: 4.  ERP/AAK Key Hierarchy
  contents:
  - "4.  ERP/AAK Key Hierarchy\n   ERP/AAK uses a key hierarchy similar to that of\
    \ ERP.  The ERP/AAK\n   pre-established Root Key (pRK) is derived from either\
    \ the EMSK or the\n   DSRK as specified below (see Section 4.1).  In general,\
    \ the pRK is\n   derived from the EMSK if the peer is located in the home AAA\
    \ realm\n   and derived from the DSRK if the peer is in a visited realm.  The\n\
    \   DSRK is delivered from the EAP server to the ERP/AAK server as\n   specified\
    \ in [KEYTRAN].  If the peer has previously been\n   authenticated by means of\
    \ ERP or ERP/AAK, the DSRK SHOULD be directly\n   reused.\n                  \
    \               DSRK    EMSK\n                                  |       |\n  \
    \                            +---+---+---+---+\n                             \
    \ |\n                             pRK            ...\n                   Figure\
    \ 3: ERP/AAK Root Key Derivation\n   Similarly, the pre-established Master Session\
    \ Key (pMSK) is derived\n   from the pRK.  The pMSK is established for the CAP\
    \ when the peer\n   early authenticates to the network.  The hierarchy relationship\
    \ is\n   illustrated Figure 4, below.\n                                    pRK\n\
    \                                     |\n                            +--------+--------+\n\
    \                            |\n                            pMSK             ...\n\
    \                      Figure 4: ERP/AAK Key Hierarchy\n"
- title: 4.1.  Derivation of the pRK and pMSK
  contents:
  - "4.1.  Derivation of the pRK and pMSK\n   The rRK is derived as specified in [RFC5295].\n\
    \   pRK = KDF (K, S), where\n      K = EMSK or K = DSRK and\n      S = pRK Label\
    \ | \"\\0\" | length\n   The pRK Label is an IANA-assigned 8-bit ASCII string:\n\
    \      EAP Early-Authentication Root Key@ietf.org\n   assigned from the \"User\
    \ Specific Root Keys (USRK) Key Labels\" name\n   space in accordance with Salowey,\
    \ et al. [RFC5295].  The KDF and\n   algorithm agility for the KDF are also defined\
    \ in RFC 5295.  The KDF\n   algorithm is indicated in the cryptosuite field or\
    \ list of\n   cryptosuites TLV payload as specified in Sections 5.2 and 5.3.\n\
    \   The pMSK uses the same KDF as pRK and is derived as follows:\n   pMSK = KDF\
    \ (K, S), where\n      K = pRK and\n      S = pMSK label | \"\\0\" | SEQ | length\n\
    \   The pMSK label is the 8-bit ASCII string:\n      EAP Early-Authentication\
    \ Master Session Key@ietf.org\n   The length field refers to the length of the\
    \ pMSK in octets encoded\n   as specified in RFC 5295.  SEQ is sent by either\
    \ the peer or the\n   server in the ERP/AAK message using the SEQ field or the\
    \ Sequence\n   number TLV.  It is encoded as a 16-bit number as specified in\n\
    \   Sections 5.2 and 5.3.\n"
- title: 5.  Packet and TLV Extension
  contents:
  - "5.  Packet and TLV Extension\n   This section describes the packet and TLV extensions\
    \ for the ERP/AAK\n   exchange.\n"
- title: 5.1.  EAP-Initiate/Re-auth-Start Packet and TLV Extension
  contents:
  - "5.1.  EAP-Initiate/Re-auth-Start Packet and TLV Extension\n   Figure 5 shows\
    \ the new parameters contained in the EAP-Initiate/\n   Re-auth-Start packet defined\
    \ in [RFC5296].\n      0                   1                   2             \
    \      3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Code      |  Identifier   |            Length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   Type      |E| Reserved    |     1 or more TVs or TLVs     ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 5: EAP-Initiate/Re-auth-Start Extension\n   Flags\n   'E'\
    \ - The E flag is used to indicate early authentication.  This\n   field MUST\
    \ be set to '1' if early authentication is in use, and it\n   MUST be set to '0'\
    \ otherwise.\n   The rest of the 7 bits (Reserved) MUST be set to 0 and ignored\
    \ on\n   reception.\n   Type/Values (TVs) and TLVs\n   CAP-Identifier: Carried\
    \ in a TLV payload.  The format is identical to\n   that of a DiameterIdentity\
    \ [RFC3588].  It is used by the SAP to\n   advertise the identity of the CAP to\
    \ the peer.  Exactly one\n   CAP-Identifier TLV MAY be included in the EAP-Initiate/Re-auth-Start\n\
    \   packet if the SAP has performed CAP discovery.\n   If the EAP-Initiate/Re-auth-Start\
    \ packet is not supported by the\n   peer, it SHOULD be discarded silently.\n"
- title: 5.2.  EAP-Initiate/Re-auth Packet and TLV Extension
  contents:
  - "5.2.  EAP-Initiate/Re-auth Packet and TLV Extension\n   Figure 6 illustrates\
    \ the new parameters contained in the\n   EAP-Initiate/Re-auth packet defined\
    \ in [RFC5296].\n      0                   1                   2             \
    \      3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Code      |  Identifier   |            Length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   Type      |R|x|L|E|Resved |             SEQ               |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                 1 or more TVs or TLVs                         ~\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | Cryptosuite\
    \  |         Authentication Tag                     ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 6: EAP-Initiate/Re-auth Extension\n   Flags\n   'x' -\
    \ The x flag is reserved.  It MUST be ignored on receipt.\n   'L' - As defined\
    \ in Section 5.3.2 of [RFC5296], this bit is used to\n   request the key lifetimes\
    \ from the server.\n   'E' - The E flag is used to indicate early authentication.\n\
    \   The first bit(R) and final 4 bits (Resved) MUST be set to 0 and\n   ignored\
    \ on reception.\n   SEQ\n   As defined in Section 5.3.2 of [RFC5296], this field\
    \ is 16-bit\n   sequence number and used for replay protection.\n   TVs and TLVs\n\
    \   keyName-NAI: As defined in [RFC5296], this is carried in a TLV\n   payload.\
    \  The Type is 1.  The NAI is variable in length, not\n   exceeding 253 octets.\
    \  The username part of the NAI is the EMSKname\n   used to identify the peer.\
    \  The realm part of the NAI is the peer's\n   home domain name if the peer communicates\
    \ with the home EA server or\n   the domain to which the peer is currently attached\
    \ (i.e., local\n   domain name) if the peer communicates with a local EA server.\
    \  The\n   SAP knows whether the KeyName-NAI carries the local domain name by\n\
    \   comparing the domain name carried in the KeyName-NAI with the local\n   domain\
    \ name that is associated with the SAP.  Exactly one keyName-NAI\n   attribute\
    \ SHALL be present in an EAP-Initiate/Re-auth packet and the\n   realm part of\
    \ it SHOULD follow the use of internationalized domain\n   names defined in [RFC5890].\n\
    \   CAP-Identifier: Carried in a TLV payload.  The Type is 11.  This\n   field\
    \ is used to indicate the Fully Qualified Domain Name (FQDN) of a\n   CAP.  The\
    \ value field MUST be encoded as specified in Section 8 of\n   [RFC3315].  Exactly\
    \ one instance of the CAP-Identifier TLV MUST be\n   present in the ERP/AAK-Key\
    \ TLV.\n   Sequence number: The Type is 7.  The value field is a 16-bit field\n\
    \   and used in the derivation of the pMSK for a CAP.\n   Cryptosuite\n   This\
    \ field indicates the integrity algorithm used for ERP/AAK.  Key\n   lengths and\
    \ output lengths are either indicated or obvious from the\n   cryptosuite name,\
    \ e.g., HMAC-SHA256-128 denotes Hashed Message\n   Authentication Code (HMAC)\
    \ computed using the SHA-256 function\n   [RFC4868] with 256-bit key length and\
    \ the output truncated to 128\n   bits [RFC2104].  We specify some cryptosuites\
    \ below:\n   0-1  RESERVED\n   2    HMAC-SHA256-128\n   3    HMAC-SHA256-256\n\
    \   HMAC-SHA256-128 is REQUIRED to implement, and it SHOULD be enabled in\n  \
    \ the default configuration.\n   Authentication Tag\n   This field contains an\
    \ integrity checksum over the ERP/AAK packet\n   from the first bit of the Code\
    \ field to the last bit of the\n   Cryptosuite field, excluding the Authentication\
    \ Tag field itself.\n   The value field is calculated using the integrity algorithm\
    \ indicated\n   in the Cryptosuite field and rIK specified in [RFC5296] as the\
    \ secret\n   key.  The length of the field is indicated by the Cryptosuite.\n\
    \   The peer uses the Authentication Tag to determine the validity of the\n  \
    \ EAP-Finish/Re-auth message from the server.\n   If the message doesn't pass\
    \ verification or the Authentication Tag is\n   not included in the message, the\
    \ message SHOULD be discarded\n   silently.\n   If the EAP-Initiate/Re-auth packet\
    \ is not supported by the SAP, it\n   SHOULD be discarded silently.  The peer\
    \ MUST maintain retransmission\n   timers for reliable transport of the EAP-Initiate/Re-auth\
    \ message.\n   If there is no response to the EAP-Initiate/Re-auth message from\
    \ the\n   server after the necessary number of retransmissions (see Section 6),\n\
    \   the peer MUST assume that ERP/AAK is not supported by the SAP.\n"
- title: 5.3.  EAP-Finish/Re-auth Packet and TLV Extension
  contents:
  - "5.3.  EAP-Finish/Re-auth Packet and TLV Extension\n   Figure 7 shows the new\
    \ parameters contained in the EAP-Finish/Re-auth\n   packet defined in [RFC5296].\n\
    \      0                   1                   2                   3\n      0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Code      |  Identifier   |            Length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   Type      |R|x|L|E|Resved |             SEQ               |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                 1 or more TVs or TLVs                         ~\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | Cryptosuite\
    \  |         Authentication Tag                     ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 7: EAP-Finish/Re-auth Extension\n   Flags\n   'R' -\
    \ As defined in Section 5.3.3 of [RFC5296], this bit is used as\n   the Result\
    \ flag.  This field MUST be set to '1' to indicate success,\n   and it MUST be\
    \ set to '0' otherwise.\n   'x' - The x flag is reserved.  It MUST be ignored\
    \ on receipt.\n   'L' - As defined in Section 5.3.3 of [RFC5296], this bit is\
    \ used to\n   request the key lifetimes from the server.\n   'E' - The E flag\
    \ is used to indicate early authentication.\n   The final 4 bits (Resved) MUST\
    \ be set to 0 and ignored on reception.\n   SEQ\n   As defined in Section 5.3.3\
    \ of [RFC5296], this field is a 16-bit\n   sequence number and is used for replay\
    \ protection.\n   TVs and TLVs\n   keyName-NAI: As defined in [RFC5296], this\
    \ is carried in a TLV\n   payload.  The Type is 1.  The NAI is variable in length,\
    \ not\n   exceeding 253 octets.  Exactly one keyName-NAI attribute SHALL be\n\
    \   present in an EAP-Finish/Re-auth packet.\n   ERP/AAK-Key: Carried in a TLV\
    \ payload for the key container.  The\n   Type is 8.  Exactly one ERP/AAK-key\
    \ SHALL be present in an\n   EAP-Finish/Re-auth packet.\n   ERP/AAK-Key ::=\n\
    \        { sub-TLV: CAP-Identifier }\n        { sub-TLV: pMSK Lifetime }\n   \
    \     { sub-TLV: pRK Lifetime }\n        { sub-TLV: Cryptosuites }\n   CAP-Identifier\n\
    \      Carried in a sub-TLV payload.  The Type is 11 (less than 128).\n      This\
    \ field is used to indicate the identifier of the candidate\n      authenticator.\
    \  The value field MUST be encoded as specified in\n      Section 8 of [RFC3315].\
    \  At least one instance of the CAP-\n      Identifier TLV MUST be present in\
    \ the ERP/AAK-Key TLV.\n   pMSK Lifetime\n      Carried in a sub-TLV payload of\
    \ the EAP-Finish/Re-auth message.\n      The Type is 10.  The value field is an\
    \ unsigned 32-bit field and\n      contains the lifetime of the pMSK in seconds.\
    \  This value is\n      calculated by the server after performing the pRK Lifetime\n\
    \      computation upon receiving the EAP-Initiate/Re-auth message.  The\n   \
    \   rIK SHOULD share the same lifetime as the pMSK.  If the 'L' flag\n      is\
    \ set, the pMSK Lifetime attribute MUST be present.\n   pRK Lifetime\n      Carried\
    \ in a sub-TLV payload of EAP-Finish/Re-auth message.  The\n      Type is 9. \
    \ The value field is an unsigned 32-bit field and\n      contains the lifetime\
    \ of the pRK in seconds.  This value is\n      calculated by the server before\
    \ performing the pMSK Lifetime\n      computation upon receiving a EAP-Initiate/Re-auth\
    \ message.  If the\n      'L' flag is set, the pRK Lifetime attribute MUST be\
    \ present.\n   List of Cryptosuites\n      Carried in a sub-TLV payload.  The\
    \ Type is 5 [RFC5296].  The value\n      field contains a list of cryptosuites\
    \ (at least one cryptosuite\n      SHOULD be included), each 1 octet in length.\
    \  The allowed\n      cryptosuite values are as specified in Section 5.2.  The\
    \ server\n      SHOULD include this attribute if the cryptosuite used in the\n\
    \      EAP-Initiate/Re-auth message was not acceptable and the message is\n  \
    \    being rejected.  The server MAY include this attribute in other\n      cases.\
    \  The server MAY use this attribute to signal its\n      cryptographic algorithm\
    \ capabilities to the peer.\n   Cryptosuite\n   This field indicates the integrity\
    \ algorithm and PRF used for ERP/\n   AAK.  HMAC-SHA256-128 is REQUIRED to implement,\
    \ and it SHOULD be\n   enabled in the default configuration.  Key lengths and\
    \ output lengths\n   are either indicated or obvious from the cryptosuite name.\n\
    \   Authentication Tag\n   This field contains the integrity checksum over the\
    \ ERP/AAK packet\n   from the first bit of the Code field to the last bit of the\n\
    \   Cryptosuite field, excluding the Authentication Tag field itself.\n   The\
    \ value field is calculated using the integrity algorithm indicated\n   in the\
    \ Cryptosuite field and the rIK [RFC5296] as the integrity key.\n   The length\
    \ of the field is indicated by the corresponding\n   Cryptosuite.\n   The peer\
    \ uses the authentication tag to determine the validity of the\n   EAP-Finish/Re-auth\
    \ message from a server.\n   If the message doesn't pass verification or the authentication\
    \ tag is\n   not included in the message, the message SHOULD be discarded\n  \
    \ silently.\n   If the EAP-Initiate/Re-auth packet is not supported by the SAP,\
    \ it is\n   discarded silently.  The peer MUST maintain retransmission timers\
    \ for\n   reliable transport of the EAP-Initiate/Re-auth message.  If there is\n\
    \   no response to the EAP-Initiate/Re-auth message from the server after\n  \
    \ the necessary number of retransmissions (see Section 6), the peer\n   MUST assume\
    \ that ERP/AAK is not supported by the SAP.\n"
- title: 5.4.  TV and TLV Attributes
  contents:
  - "5.4.  TV and TLV Attributes\n   With the exception of the rRK Lifetime and rMSK\
    \ Lifetime TV payloads,\n   the attributes specified in Section 5.3.4 of [RFC5296]\
    \ also apply to\n   this document.  In this document, new attributes that may\
    \ be present\n   in the EAP-Initiate and EAP-Finish messages are defined as below:\n\
    \   o  Sequence number: This is a TV payload.  The Type is 7.\n   o  ERP/AAK-Key:\
    \ This is a TLV payload.  The Type is 8.\n   o  pRK Lifetime: This is a TV payload.\
    \  The Type is 9.\n   o  pMSK Lifetime: This is a TV payload.  The Type is 10.\n\
    \   o  CAP-Identifier: This is a TLV payload.  The Type is 11.\n"
- title: 6.  Lower-Layer Considerations
  contents:
  - "6.  Lower-Layer Considerations\n   Similar to ERP, some lower-layer specifications\
    \ may need to be\n   revised to support ERP/AAK; refer to Section 6 of [RFC5296]\
    \ for\n   additional guidance.\n"
- title: 7.  AAA Transport Considerations
  contents:
  - "7.  AAA Transport Considerations\n   The AAA transport of ERP/AAK messages is\
    \ the same as that of the ERP\n   message [RFC5296].  In addition, this document\
    \ requires AAA transport\n   of the ERP/AAK keying materials delivered by the\
    \ ERP/AAK server to\n   the CAP.  Hence, a new AAA message for the ERP/AAK application\
    \ should\n   be specified to transport the keying materials.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This section provides an analysis of the protocol\
    \ in accordance with\n   the AAA key management requirements specified in [RFC4962].\n\
    \   o  Cryptographic algorithm independence: ERP-AAK satisfies this\n      requirement.\
    \  The algorithm chosen by the peer for calculating the\n      authentication\
    \ tag is indicated in the EAP-Initiate/Re-auth\n      message.  If the chosen\
    \ algorithm is unacceptable, the EAP server\n      returns an EAP-Finish/Re-auth\
    \ message with a Failure indication.\n   o  Strong, fresh session keys: ERP-AAK\
    \ results in the derivation of\n      strong, fresh keys that are unique for the\
    \ given CAP.  A pMSK is\n      always derived on demand when the peer requires\
    \ a key with a new\n      CAP.  The derivation ensures that the compromise of\
    \ one pMSK does\n      not result in the compromise of a different pMSK at any\
    \ time.\n   o  Limit key scope: The scope of all the keys derived by ERP-AAK is\n\
    \      well defined.  The pRK is used to derive the pMSK for the CAP.\n      Different\
    \ sequence numbers for each CAP MUST be used to derive a\n      unique pMSK.\n\
    \   o  Replay detection mechanism: For replay protection, a sequence\n      number\
    \ associated with the pMSK is used.  The peer increments the\n      sequence number\
    \ by one after it sends an ERP/AAK message.  The\n      server sets the expected\
    \ sequence number to the received sequence\n      number plus one after verifying\
    \ the validity of the received\n      message, and it responds to the message.\n\
    \   o  Authenticate all parties: The EAP Re-authentication Protocol\n      provides\
    \ mutual authentication of the peer and the server.  The\n      peer and SAP are\
    \ authenticated via ERP.  The CAP is authenticated\n      and trusted by the SAP.\n\
    \   o  Peer and authenticator authorization: The peer and authenticator\n    \
    \  demonstrate possession of the same keying material without\n      disclosing\
    \ it, as part of the lower-layer secure authentication\n      protocol.\n   o\
    \  Keying material confidentiality: The peer and the server derive\n      the\
    \ keys independently using parameters known to each entity.\n   o  Uniquely named\
    \ keys: All keys produced within the ERP context can\n      be referred to uniquely\
    \ as specified in this document.\n   o  Prevent the domino effect: Different sequence\
    \ numbers for each CAP\n      MUST be used to derive the unique pMSK so that the\
    \ compromise of\n      one pMSK does not hurt any other CAP.\n   o  Bind key to\
    \ its context: The pMSKs are bound to the context in\n      which the sequence\
    \ numbers are transmitted.\n   o  Confidentiality of identity: This is the same\
    \ as with ERP\n      [RFC5296].\n   o  Authorization restriction: All the keys\
    \ derived are limited in\n      lifetime by that of the parent key or by server\
    \ policy.  Any\n      domain-specific keys are further restricted to be used only\
    \ in the\n      domain for which the keys are derived.  Any other restrictions\
    \ of\n      session keys may be imposed by the specific lower layer and are\n\
    \      out of scope for this specification.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA has assigned five TLVs from the registry of\
    \ EAP Initiate and\n   Finish Attributes maintained at\n   http://www.iana.org/assignments/eap-numbers/\
    \ with the following\n   numbers:\n   o  Sequence number: This is a TV payload.\
    \  The Type is 7.\n   o  ERP/AAK-Key: This is a TLV payload.  The Type is 8.\n\
    \   o  pRK Lifetime: This is a TLV payload.  The Type is 9.\n   o  pMSK Lifetime:\
    \ This is a TLV payload.  The Type is 10.\n   o  CAP-Identifier: This is a TLV\
    \ payload.  The Type is 11.\n   This document reuses the cryptosuites that were\
    \ created for\n   \"Re-authentication Cryptosuites\" in [RFC5296].\n   Further,\
    \ IANA has added a new label in the \"User Specific Root Keys\n   (USRK) Key Labels\"\
    \ sub-registry of the \"Extended Master Session Key\n   (EMSK) Parameters\" registry,\
    \ as follows:\n      EAP Early-Authentication Root Key@ietf.org\n   A new registry\
    \ for the flags in the EAP Initiate/Re-auth-Start\n   message called the \"EAP\
    \ Initiate/Re-auth-Start Flags\" has been\n   created and a new flag (E) has been\
    \ assigned as follows:\n      (E) 0x80\n   The rest of the values in the 8-bit\
    \ field are reserved.  New values\n   can be assigned by Standards Action or IESG\
    \ Approval [RFC5226].\n   A new registry for the flags in the EAP Initiate/Re-auth\
    \ message\n   called the \"EAP Initiate/Re-auth Flags\" has also been created.\
    \  The\n   following flags are reserved:\n      (R) 0x80 [RFC5296]\n      (B)\
    \ 0x40 [RFC5296]\n      (L) 0x20 [RFC5296]\n   This document assigns a new flag\
    \ (E) as follows:\n      (E) 0x10\n   The rest of the values in the 8-bit field\
    \ are reserved.  New values\n   can be assigned by Standards Action or IESG Approval.\n\
    \   Further, this document creates a new registry for the flags in the\n   EAP\
    \ Finish/Re-auth message called the \"EAP Finish/Re-auth Flags\".\n   The following\
    \ values are assigned.\n      (R) 0x80 [RFC5296]\n      (B) 0x40 [RFC5296]\n \
    \     (L) 0x20 [RFC5296]\n   This document assigns a new flag (E) as follows:\n\
    \      (E) 0x10\n   The rest of the values in the 8-bit field are reserved.  New\
    \ values\n   can be assigned by Standards Action or IESG approval.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   In writing this document, Yungui Wang contributed to\
    \ early versions\n   of this document and we have received reviews from many experts\
    \ in\n   the IETF, including Tom Taylor, Tena Zou, Tim Polk, Tan Zhang, Semyon\n\
    \   Mizikovsky, Stephen Farrell, Radia Perlman, Miguel A. Garcia, and\n   Sujing\
    \ Zhou.  We apologize if we miss some of those who have helped\n   us.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n\
    \              and M. Carney, \"Dynamic Host Configuration Protocol for\n    \
    \          IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC4282]  Aboba, B., Beadles,\
    \ M., Arkko, J., and P. Eronen, \"The\n              Network Access Identifier\"\
    , RFC 4282, December 2005.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an\n              IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC 5226,\n              May 2008.\n   [RFC5295]  Salowey, J., Dondeti, L.,\
    \ Narayanan, V., and M. Nakhjiri,\n              \"Specification for the Derivation\
    \ of Root Keys from an\n              Extended Master Session Key (EMSK)\", RFC\
    \ 5295,\n              August 2008.\n   [RFC5296]  Narayanan, V. and L. Dondeti,\
    \ \"EAP Extensions for EAP\n              Re-authentication Protocol (ERP)\",\
    \ RFC 5296, August 2008.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [KEYTRAN]  Zorn, G., Wu, W., and V. Cakulev,\
    \ \"Diameter Attribute-\n              Value Pairs for Cryptographic Key Transport\"\
    , Work\n              in Progress, August 2011.\n   [RFC2104]  Krawczyk, H., Bellare,\
    \ M., and R. Canetti, \"HMAC: Keyed-\n              Hashing for Message Authentication\"\
    , RFC 2104,\n              February 1997.\n   [RFC3588]  Calhoun, P., Loughney,\
    \ J., Guttman, E., Zorn, G., and J.\n              Arkko, \"Diameter Base Protocol\"\
    , RFC 3588, September 2003.\n   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht, J.,\
    \ Carlson, J., and H.\n              Levkowetz, \"Extensible Authentication Protocol\
    \ (EAP)\",\n              RFC 3748, June 2004.\n   [RFC4868]  Kelly, S. and S.\
    \ Frankel, \"Using HMAC-SHA-256, HMAC-SHA-\n              384, and HMAC-SHA-512\
    \ with IPsec\", RFC 4868, May 2007.\n   [RFC4962]  Housley, R. and B. Aboba, \"\
    Guidance for Authentication,\n              Authorization, and Accounting (AAA)\
    \ Key Management\",\n              BCP 132, RFC 4962, July 2007.\n   [RFC5836]\
    \  Ohba, Y., Wu, Q., and G. Zorn, \"Extensible Authentication\n              Protocol\
    \ (EAP) Early Authentication Problem Statement\",\n              RFC 5836, April\
    \ 2010.\n   [RFC5890]  Klensin, J., \"Internationalized Domain Names for\n   \
    \           Applications (IDNA): Definitions and Document Framework\",\n     \
    \         RFC 5890, August 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Zhen Cao\n   China Mobile\n   53A Xibianmennei Ave., Xuanwu\
    \ District\n   Beijing, Beijing  100053\n   P.R. China\n   EMail: zehn.cao@gmail.com\n\
    \   Hui Deng\n   China Mobile\n   53A Xibianmennei Ave., Xuanwu District\n   Beijing,\
    \ Beijing  100053\n   P.R. China\n   EMail: denghui02@gmail.com\n   Qin Wu\n \
    \  Huawei\n   Floor 12, HuiHong Mansion, No. 91 BaiXia Rd.\n   Nanjing, Jiangsu\
    \  210001\n   P.R. China\n   Phone: +86 25 56623633\n   EMail: sunseawq@huawei.com\n\
    \   Glen Zorn (editor)\n   Network Zen\n   227/358 Thanon Sanphawut\n   Bang Na,\
    \ Bangkok  10260\n   Thailand\n   Phone: +66 (0) 87-040-4617\n   EMail: glenzorn@gmail.com\n"
