- title: __initial_text__
  contents:
  - "     Generalized MPLS (GMPLS) Data Channel Switching Capable (DCSC)\n       \
    \             and Channel Set Label Extensions\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes two technology-independent extensions to\n\
    \   Generalized Multi-Protocol Label Switching (GMPLS).  The first\n   extension\
    \ defines the new switching type Data Channel Switching\n   Capable.  Data Channel\
    \ Switching Capable interfaces are able to\n   support switching of the whole\
    \ digital channel presented on single\n   channel interfaces.  The second extension\
    \ defines a new type of\n   generalized label and updates related objects.  The\
    \ new label is\n   called the Generalized Channel_Set Label and allows more than\
    \ one\n   data plane label to be controlled as part of a Label Switched Path\n\
    \   (LSP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6002.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. Data Channel Switching ..........................................3\n    \
    \  2.1. Compatibility ..............................................4\n   3. Generalized\
    \ Channel_Set Label Related Formats ...................4\n      3.1. Generalized\
    \ Channel_Set LABEL_REQUEST Object ...............4\n      3.2. Generalized Channel_Set\
    \ LABEL Object .......................4\n      3.3. Other Label-Related Objects\
    \ ................................7\n      3.4. Compatibility ..............................................7\n\
    \   4. IANA Considerations .............................................8\n  \
    \    4.1. Data Channel Switching Type ................................8\n    \
    \  4.2. Generalized Channel_Set LABEL_REQUEST Object ...............8\n      4.3.\
    \ Generalized Channel_Set LABEL Object .......................8\n   5. Security\
    \ Considerations .........................................9\n   6. References\
    \ ......................................................9\n      6.1. Normative\
    \ References .......................................9\n      6.2. Informative\
    \ References ....................................10\n   Acknowledgments ...................................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes two technology-independent extensions\
    \ to\n   Generalized Multi-Protocol Label Switching (GMPLS).  Both of these\n\
    \   extensions were initially defined in the context of Ethernet\n   services,\
    \ see [RFC6004] and [RFC6005], but are generic in nature and\n   may be useful\
    \ to any switching technology controlled via GMPLS.\n   The first extension defines\
    \ a new switching type, which is called\n   Data Channel Switching Capable (DCSC).\
    \  DCSC interfaces are able to\n   support switching of the whole digital channel\
    \ presented on single\n   channel interfaces.  The second extension defines a\
    \ new type of\n   generalized label and updates related objects.  The new label\
    \ is\n   called the Generalized Channel_Set Label and allows more than one\n \
    \  data plane label to be controlled as part of a GMPLS Label Switched\n   Path\
    \ (LSP).\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Data Channel Switching
  contents:
  - "2.  Data Channel Switching\n   Current GMPLS switching types are defined in [RFC3945]\
    \ and [RFC3471]\n   and support switching at the packet (PSC), frame (L2SC), time-slot\n\
    \   (TDM), frequency (LSC), and fiber (FSC) granularities.  Parallel\n   definitions\
    \ for these switching types are also made in [RFC4202],\n   [RFC4203], and [RFC5307].\n\
    \   One type of switching that is not well represented in this current\n   set\
    \ is switching that occurs when all data received on an ingress\n   port is switched\
    \ through a network to an egress port.  While there\n   are similarities between\
    \ this level of switching and the \"opaque\n   single wavelength\" case, described\
    \ in Section 3.5 of [RFC4202], such\n   port-to-port switching is not limited\
    \ to the optical switching\n   technology implied by the LSC type.  FSC is also\
    \ similar, but it is\n   restricted to fiber ports and also supports multiple\
    \ data channels\n   within a fiber port.\n   This document defines a new switching\
    \ type called Data Channel\n   Switching Capable (DCSC).  Port switching seems\
    \ a more intuitive\n   name, but this naming collides with PSC so is not used.\
    \  DCSC\n   interfaces are able to support switching of the whole digital channel\n\
    \   presented on single channel interfaces.  Interfaces that inherently\n   support\
    \ multiple channels, e.g., Wavelength Division Multiplexing\n   (WDM) and channelized\
    \ TDM interfaces, are specifically excluded from\n   this type.  Any interface\
    \ that can be represented as a single digital\n   channel are included.  Examples\
    \ include concatenated TDM and line-\n   encoded interfaces.  Framed interfaces\
    \ may also be included when they\n   support switching on an interface granularity,\
    \ for example Ethernet\n   terminated at the physical (port) level and all traffic\
    \ received on a\n   port is switched to a physical port at the LSP egress.\n \
    \  DCSC is represented in GMPLS, see [RFC3471] and [RFC4202], using the\n   value\
    \ 125.  The DCSC value is carried in routing protocols in the\n   Interface Switching\
    \ Capability Descriptor defined in [RFC4202], and\n   used in OSPF [RFC4203] and\
    \ IS-IS [RFC5307].  These documents are not\n   otherwise modified by this document.\n\
    \   The DCSC Switching Type may be used with the Generalized Label\n   Request\
    \ object, [RFC3473], or the Generalized Channel_Set\n   LABEL_REQUEST object defined\
    \ below.  Port labels, as defined in\n   [RFC3471], SHOULD be used for LSPs signaled\
    \ using the DCSC Switching\n   Type.\n"
- title: 2.1.  Compatibility
  contents:
  - "2.1.  Compatibility\n   Transit and egress nodes that do not support the DCSC\
    \ Switching Type\n   when receiving a Path message with a Label Request containing\
    \ the\n   DCSC Switching Type will behave in the same way nodes generally\n  \
    \ handle the case of an unsupported Switching Type.  Specifically, per\n   [RFC3473],\
    \ such nodes are required to generate a PathErr message,\n   with a \"Routing\
    \ problem/Unsupported Encoding\" indication.\n   Ingress nodes initiating a Path\
    \ message containing a Label Request\n   containing the DCSC Switching Type, receiving\
    \ such a PathErr\n   messages, then notify the requesting application user as\
    \ appropriate.\n"
- title: 3.  Generalized Channel_Set Label Related Formats
  contents:
  - "3.  Generalized Channel_Set Label Related Formats\n   This section defines a\
    \ new type of generalized label and updates\n   related objects.  This section\
    \ updates the label-related definitions\n   of [RFC3473].  The ability to communicate\
    \ more than one label as part\n   of the same LSP was motivated by the support\
    \ for the communication of\n   one or more VLAN IDs.  Simple concatenation of\
    \ labels as is done in\n   [RFC4606] was deemed impractical given the large number\
    \ of VLAN IDs\n   (up to 4096) that may need to be communicated.  The formats\
    \ defined\n   in this section are not technology specific and may be useful for\n\
    \   other switching technologies.  The LABEL_SET object defined in\n   [RFC3473]\
    \ serves as the foundation for the defined formats.\n"
- title: 3.1.  Generalized Channel_Set LABEL_REQUEST Object
  contents:
  - "3.1.  Generalized Channel_Set LABEL_REQUEST Object\n   The Generalized Channel_Set\
    \ LABEL_REQUEST object is used to indicate\n   that the Generalized Channel_Set\
    \ LABEL object is to be used with the\n   associated LSP.  The format of the Generalized\
    \ Channel_Set\n   LABEL_REQUEST object is the same as the Generalized LABEL_REQUEST\n\
    \   object and uses a C-Type of 5.\n"
- title: 3.2.  Generalized Channel_Set LABEL Object
  contents:
  - "3.2.  Generalized Channel_Set LABEL Object\n   The Generalized Channel_Set LABEL\
    \ Object communicates one or more\n   labels, all of which can be used equivalently\
    \ in the data path\n   associated with a single LSP.  The format of the Generalized\n\
    \   Channel_Set LABEL Object is based on the LABEL_SET object defined in\n   [RFC3473].\
    \  It differs from the LABEL_SET object in that the full set\n   may be represented\
    \ in a single object rather than the multiple\n   objects required by the [RFC3473]\
    \ LABEL_SET object.  The object MUST\n   be used on LSPs that use the Generalized\
    \ Channel_Set LABEL_REQUEST\n   object.  The object MUST be processed per [RFC3473].\
    \  Make-before-\n   break procedures, see [RFC3209], SHOULD be used when modifying\
    \ the\n   Channel_Set LABEL object.\n   The format of the Generalized Channel_Set\
    \ LABEL object is:\n   o  Generalized Channel_Set LABEL object: Class = 16, C-Type\
    \ = 4\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                   Channel_Set Subobject 1                     |\n      |   \
    \                           ...                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      :                               :                               :\n   \
    \   :                               :                               :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                   Channel_Set Subobject N                     |\n   \
    \   |                              ...                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Channel_Set Subobject size is measured in bytes and MUST always\n   be\
    \ a multiple of 4, and at least 4, and has the following format:\n       0   \
    \                1                   2                   3\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Action     |  Num Subchannels  |        Label Type         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Subchannel 1                         |\n      |   \
    \                            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |      \
    \ ...                     |                               :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               :\n      :                               :   \
    \                            :\n      :                               :      \
    \                         :\n      :                               :         \
    \                      :\n      :                               :            \
    \                   :\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          Subchannel N                         |\n   \
    \   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           ...                 |         Padding               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Action: 8 bits\n      See [RFC3471] for definition of actions.  Range actions\
    \ SHOULD be\n      used when possible to minimize the size of the Channel_Set\
    \ LABEL\n      Object.\n   Number of Subchannels: 10 bits\n      Indicates the\
    \ number of subchannels carried in the subobject.\n      When the number of subchannels\
    \ required exceeds the limit of the\n      field, i.e., 1024, multiple Channel_Set\
    \ Subobjects MUST be used.\n      Note that the size of the subobject may result\
    \ in a Path message\n      being larger than a single unfragmented IP packet.\
    \  See Section\n      4.4 of [RFC6004] for an example of how this case may be\
    \ handled.\n      A value of zero (0) has special meaning and MAY be used in either\n\
    \      the LABEL or UPSTREAM_LABEL object.  A value of zero (0) is used\n    \
    \  in a LABEL or UPSTREAM_LABEL object to indicate that the\n      subchannel(s)\
    \ used in the corresponding (downstream or upstream)\n      direction MUST match\
    \ the subchannel(s) carried in the reverse\n      directions label object.  When\
    \ value of zero (0) is used, no\n      subchannels are included in the Channel_Set\
    \ Subobject and only one\n      Channel_Set Subobject may be present.  The zero\
    \ (0) value MUST NOT\n      be used in both the LABEL and UPSTREAM_LABEL objects\
    \ of the same\n      LSP.  Note that unacceptable label values continue to be\
    \ handled\n      according to [RFC3209] and [RFC3473], i.e., they result in PathErr\n\
    \      or ResvErr messages with a \"Routing problem/Unacceptable label\n     \
    \ value\" indication.  For example, in the case where a Resv message\n      containing\
    \ a zero (0) in both the LABEL and UPSTREAM_LABEL objects\n      is received,\
    \ the node would generate a ResvErr message.\n   Label Type: 14 bits\n      See\
    \ [RFC3473] for a description of this field.\n   Subchannel: Variable\n      See\
    \ [RFC3471] for a description of this field.  Note that this\n      field might\
    \ not be 32-bit aligned.\n   Padding: Variable\n      Padding is used to ensure\
    \ that the length of a Channel_Set\n      Subobject meets the multiple of 4 byte\
    \ size requirement stated\n      above.  The field is only required when the Subchannel\
    \ field is\n      not 32-bit aligned and the number of included Subchannel fields\n\
    \      result in the Subobject not being 32-bit aligned.\n      The Padding field\
    \ MUST be included when the number of bits\n      represented in all the Subchannel\
    \ fields included in a Generalized\n      Channel_Set Subobject result in the\
    \ Subobject not being 32-bit\n      aligned.  When present, the Padding field\
    \ MUST have a length that\n      results in the Subobject being 32-bit aligned.\
    \  When present, the\n      Padding field MUST be set to a zero (0) value on transmission\
    \ and\n      MUST be ignored on receipt.  These bits SHOULD be passed through\n\
    \      unmodified by transit nodes.\n      Note that the overall length of a Channel_Set\
    \ Subobject is\n      determined based on the value of the Num Subchannels field\n\
    \      together with the size of each Subchannel field as well as any\n      required\
    \ padding.  The size of the Subchannel field is uniquely\n      identified by\
    \ the Label Type field.\n"
- title: 3.3.  Other Label-Related Objects
  contents:
  - "3.3.  Other Label-Related Objects\n   The previous section introduced a new LABEL\
    \ object.  As such the\n   formats of the other label-related objects and subobjects\
    \ are also\n   impacted.  Processing of these objects and subobjects is not modified\n\
    \   and remains per their respective specifications.  The other label\n   related\
    \ objects and subobjects are defined in [RFC3473] and include:\n      - SUGGESTED_LABEL\
    \ object\n      - LABEL_SET object\n      - ACCEPTABLE_LABEL_SET object\n    \
    \  - UPSTREAM_LABEL object\n      - RECOVERY_LABEL object\n      - Label ERO subobject\n\
    \      - Label RRO subobject\n   The label-related objects and subobjects each\
    \ contain a Label field,\n   all of which may carry any label type.  As any label\
    \ type may be\n   carried, the introduction of a new label type means that the\
    \ new\n   label type may be carried in the Label field of each of the label-\n\
    \   related objects and subobjects.  No new definition needs to specified\n  \
    \ as their original specification is label-type agnostic.\n"
- title: 3.4.  Compatibility
  contents:
  - "3.4.  Compatibility\n   Transit and egress nodes that do not support the Generalized\n\
    \   Channel_Set Label related formats will first receive a Path message\n   containing\
    \ Generalized Channel_Set LABEL_REQUEST object.  When such a\n   node receives\
    \ the Path message, per [RFC3209], it will send a PathErr\n   with the error code\
    \ \"Unknown object C_Type\".\n   Ingress nodes initiating a Path message containing\
    \ a Generalized\n   Channel_Set LABEL_REQUEST object on receiving such a PathErr\n\
    \   messages, then notify the requesting application user as appropriate.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   IANA has assigned new values for namespaces defined\
    \ in this document\n   and summarized in this section.  The registries are available\
    \ from\n   http://www.iana.org.\n"
- title: 4.1.  Data Channel Switching Type
  contents:
  - "4.1.  Data Channel Switching Type\n   IANA has made the following assignment\
    \ in the \"Switching Types\"\n   section of the \"GMPLS Signaling Parameters\"\
    \ registry.\n      Value   Type                                   Reference\n\
    \      -----   ------------------------------------   ---------\n        125 \
    \  Data Channel Switching Capable (DCSC)  [RFC6002]\n   The assigned value is\
    \ reflected in IANAGmplsSwitchingTypeTC of the\n   IANA-GMPLS-TC-MIB available\
    \ from http://www.iana.org.\n"
- title: 4.2.  Generalized Channel_Set LABEL_REQUEST Object
  contents:
  - "4.2.  Generalized Channel_Set LABEL_REQUEST Object\n   IANA has made the following\
    \ assignment in the \"Class Names, Class\n   Numbers, and Class Types\" section\
    \ of the \"RSVP PARAMETERS\" registry.\n   A new class type for the existing LABEL_REQUEST\
    \ Object class number\n   (19) with the following definition:\n      Class Types\
    \ or C-Types:\n        5 Generalized Channel_Set                  [RFC6002]\n"
- title: 4.3.  Generalized Channel_Set LABEL Object
  contents:
  - "4.3.  Generalized Channel_Set LABEL Object\n   IANA has made the following assignment\
    \ in the \"Class Names, Class\n   Numbers, and Class Types\" section of the \"\
    RSVP PARAMETERS\" registry.\n   A new class type for the existing RSVP_LABEL Object\
    \ class number (16)\n   with the following definition:\n      Class Types or C-Types:\n\
    \        4 Generalized Channel_Set                  [RFC6002]\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document introduces new message object formats\
    \ for use in GMPLS\n   signaling [RFC3473].  It does not introduce any new signaling\n\
    \   messages, nor change the relationship between LSRs that are adjacent\n   in\
    \ the control plane.  As such, this document introduces no\n   additional security\
    \ considerations.  See [RFC3473] for relevant\n   security considerations.  Additionally,\
    \ the existing framework for\n   MPLS and GMPLS security is documented in [RFC5920].\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n\
    \              and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n       \
    \       Tunnels\", RFC 3209, December 2001.\n   [RFC3471]  Berger, L., Ed., \"\
    Generalized Multi-Protocol Label\n              Switching (GMPLS) Signaling Functional\
    \ Description\", RFC\n              3471, January 2003.\n   [RFC3473]  Berger,\
    \ L., Ed., \"Generalized Multi-Protocol Label\n              Switching (GMPLS)\
    \ Signaling Resource ReserVation Protocol-\n              Traffic Engineering\
    \ (RSVP-TE) Extensions\", RFC 3473,\n              January 2003.\n   [RFC3945]\
    \  Mannie, E., Ed., \"Generalized Multi-Protocol Label\n              Switching\
    \ (GMPLS) Architecture\", RFC 3945, October 2004.\n   [RFC4202]  Kompella, K.,\
    \ Ed., and Y. Rekhter, Ed., \"Routing\n              Extensions in Support of\
    \ Generalized Multi-Protocol Label\n              Switching (GMPLS)\", RFC 4202,\
    \ October 2005.\n   [RFC4203]  Kompella, K., Ed., and Y. Rekhter, Ed., \"OSPF\
    \ Extensions\n              in Support of Generalized Multi-Protocol Label Switching\n\
    \              (GMPLS)\", RFC 4203, October 2005.\n   [RFC5307]  Kompella, K.,\
    \ Ed., and Y. Rekhter, Ed., \"IS-IS Extensions\n              in Support of Generalized\
    \ Multi-Protocol Label Switching\n              (GMPLS)\", RFC 5307, October 2008.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC4606]  Mannie, E. and D. Papadimitriou,\
    \ \"Generalized Multi-\n              Protocol Label Switching (GMPLS) Extensions\
    \ for\n              Synchronous Optical Network (SONET) and Synchronous\n   \
    \           Digital Hierarchy (SDH) Control\", RFC 4606, August 2006.\n   [RFC5920]\
    \  Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n              Networks\"\
    , RFC 5920, July 2010.\n   [RFC6004]  Berger, L. and D. Fedyk, \"Generalized MPLS\
    \ (GMPLS) Support\n              for Metro Ethernet Forum and G.8011 Ethernet\
    \ Service\n              Switching\", RFC 6004, October 2010.\n   [RFC6005]  Berger,\
    \ L. and D. Fedyk, \"Generalized MPLS (GMPLS) Support\n              for Metro\
    \ Ethernet Forum and G.8011 User Network Interface\n              (UNI)\", RFC\
    \ 6005, October 2010.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Dimitri Papadimitriou provided substantial textual contributions\
    \ to\n   this document and coauthored earlier versions of this document.\n   The\
    \ authors would like to thank Evelyne Roch, Stephen Shew, and\n   Adrian Farrel\
    \ for their valuable comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Lou Berger\n   LabN Consulting, L.L.C.\n   Phone: +1-301-468-9228\n\
    \   EMail: lberger@labn.net\n   Don Fedyk\n   Alcatel-Lucent\n   Groton, MA, 01450\n\
    \   Phone: +1-978-467-5645\n   EMail: donald.fedyk@alcatel-lucent.com\n"
