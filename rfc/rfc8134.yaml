- title: __initial_text__
  contents:
  - ' Management Incident Lightweight Exchange (MILE) Implementation Report

    '
- title: Abstract
  contents:
  - "Abstract\n   This document is a collection of implementation reports from vendors,\n\
    \   consortiums, and researchers who have implemented one or more of the\n   standards\
    \ published from the IETF INCident Handling (INCH) and\n   Management Incident\
    \ Lightweight Exchange (MILE) working groups.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8134.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Consortiums and Information Sharing and Analysis Centers\n\
    \       (ISACs) . . . . . . . . . . . . . . . . . . . . . . . . . . .   4\n  \
    \   2.1.  Anti-Phishing Working Group . . . . . . . . . . . . . . .   4\n    \
    \ 2.2.  Advanced Cyber Defence Centre . . . . . . . . . . . . . .   4\n     2.3.\
    \  Research and Education Networking Information Sharing and\n           Analysis\
    \ Center . . . . . . . . . . . . . . . . . . . . .   4\n   3.  Open Source Implementations\
    \ . . . . . . . . . . . . . . . . .   4\n     3.1.  EMC/RSA RID Agent . . . .\
    \ . . . . . . . . . . . . . . . .   4\n     3.2.  NICT IODEF-SCI implementation\
    \ . . . . . . . . . . . . . .   5\n     3.3.  n6  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .   5\n   4.  Vendor Implementations  . . . . . . .\
    \ . . . . . . . . . . . .   6\n     4.1.  Deep Secure . . . . . . . . . . . .\
    \ . . . . . . . . . . .   6\n     4.2.  IncMan Suite, DFLabs  . . . . . . . .\
    \ . . . . . . . . . .   7\n     4.3.  Surevine Proof of Concept . . . . . . .\
    \ . . . . . . . . .   8\n     4.4.  MANTIS Cyber-Intelligence Management Framework\
    \  . . . . .   8\n   5.  Vendors with Planned Support  . . . . . . . . . . . .\
    \ . . . .   9\n     5.1.  Threat Central, HP  . . . . . . . . . . . . . . . .\
    \ . . .   9\n     5.2.  DAEDALUS, NICT  . . . . . . . . . . . . . . . . . . .\
    \ . .   9\n   6.  Other Implementations . . . . . . . . . . . . . . . . . . .\
    \ .  10\n     6.1.  Collaborative Incident Management System  . . . . . . . .\
    \  10\n     6.2.  Automated Incident Reporting - AirCERT  . . . . . . . . .  10\n\
    \     6.3.  US Department of Energy CyberFed  . . . . . . . . . . . .  11\n  \
    \ 7.  Implementation Guide  . . . . . . . . . . . . . . . . . . . .  11\n    \
    \ 7.1.  Code Generators . . . . . . . . . . . . . . . . . . . . .  11\n     7.2.\
    \  iodeflib  . . . . . . . . . . . . . . . . . . . . . . . .  13\n     7.3.  iodefpm\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  13\n     7.4.  Usability\
    \ . . . . . . . . . . . . . . . . . . . . . . . .  13\n   8.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .  14\n   9.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  14\n   10. Informative References  .\
    \ . . . . . . . . . . . . . . . . . .  14\n   Acknowledgements  . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  16\n   Authors' Addresses  . . . . . . .\
    \ . . . . . . . . . . . . . . . .  16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is a collection of information about security\
    \ incident\n   reporting protocols and the implementation of systems that use\
    \ them\n   to share such information.  It is simply a collection of information,\n\
    \   and it makes no attempt to compare the various standards or\n   implementations.\
    \  As such, it will be of interest to network\n   operators who wish to collect\
    \ and share such data.\n   Operationally, operators would need to decide which\
    \ incident data\n   collection group they want to be part of, and that choice\
    \ will\n   strongly influence their choice of reporting protocol and\n   applications\
    \ used to gather and distribute the data.\n   This document is a collection of\
    \ implementation reports from vendors\n   and researchers who have implemented\
    \ one or more of the standards\n   published from the INCH and MILE working groups.\
    \  The standards\n   include:\n   o  Incident Object Description Exchange Format\
    \ (IODEF) v1 [RFC5070]\n   o  Incident Object Description Exchange Format (IODEF)\
    \ v2 [RFC7970]\n   o  Extensions to the IODEF-Document Class for Reporting Phishing\n\
    \      [RFC5901]\n   o  Sharing Transaction Fraud Data [RFC5941]\n   o  Real-time\
    \ Inter-network Defense (RID) [RFC6545]\n   o  Transport of Real-time Inter-network\
    \ Defense (RID) Messages over\n      HTTP/TLS [RFC6546]\n   o  Incident Object\
    \ Description Exchange Format (IODEF) Extension for\n      Structured Cybersecurity\
    \ Information (SCI) [RFC7203]\n   The implementation reports included in this\
    \ document have been\n   provided by the team or product responsible for the implementations\n\
    \   of the mentioned RFCs.  A more complete list of implementations,\n   including\
    \ open source efforts and vendor products, can also be found\n   at the following\
    \ location:\n      <http://siis.realmv6.org/implementations/>\n"
- title: 2.  Consortiums and Information Sharing and Analysis Centers (ISACs)
  contents:
  - '2.  Consortiums and Information Sharing and Analysis Centers (ISACs)

    '
- title: 2.1.  Anti-Phishing Working Group
  contents:
  - "2.1.  Anti-Phishing Working Group\n   The Anti-Phishing Working Group (APWG)\
    \ is one of the biggest\n   coalitions against cybercrime, especially phishing.\
    \  In order to\n   collect threat information in a structured format, APWG provides\
    \ a\n   phishing and cybercrime reporting tool that sends threat information\n\
    \   to APWG by tailoring information with the IODEF format, based on RFC\n   5070\
    \ [RFC5070] and RFC 5901 [RFC5901].\n"
- title: 2.2.  Advanced Cyber Defence Centre
  contents:
  - "2.2.  Advanced Cyber Defence Centre\n   The Advanced Cyber Defence Centre (ACDC)\
    \ is a Europe-wide activity to\n   fight against botnets.  ACDC provides solutions\
    \ to mitigate on-going\n   attacks and consolidates information provided by various\
    \ stakeholders\n   into a pool of knowledge.  Within ACDC, IODEF is one of the\
    \ supported\n   schemas for exchanging the information.\n"
- title: 2.3.  Research and Education Networking Information Sharing and Analysis
  contents:
  - "2.3.  Research and Education Networking Information Sharing and Analysis\n  \
    \    Center\n   The Research and Education Networking Information Sharing and\n\
    \   Analysis Center (REN-ISAC) is a private community of researchers and\n   higher-education\
    \ members that share threat information and employs\n   IODEF formatted-messages\
    \ to exchange information.\n   REN-ISAC also recommends using an IODEF attachment\
    \ provided with a\n   notification email for processing rather than relying on\
    \ parsing of\n   the body text of email.  The tools provided by REN-ISAC are designed\n\
    \   to handle such email.\n      <http://www.ren-isac.net/notifications/using_iodef.html>\n"
- title: 3.  Open Source Implementations
  contents:
  - '3.  Open Source Implementations

    '
- title: 3.1.  EMC/RSA RID Agent
  contents:
  - "3.1.  EMC/RSA RID Agent\n   The EMC/RSA RID agent is an open source implementation\
    \ of the IETF\n   standards for the exchange of incident and indicator data. \
    \ The code\n   has been released under an MIT license, and development will continue\n\
    \   with the open source community at the GitHub site for RSA\n   Intelligence\
    \ Sharing:\n      <https://github.com/RSAIntelShare/RID-Server.git>\n   The code\
    \ implements the Real-time Inter-network Defense (RID)\n   described in RFC 6545\
    \ [RFC6545] and the Transport of RID over HTTP/\n   TLS protocol described in\
    \ [RFC6546].  The code supports the evolving\n   Incident Object Description Exchange\
    \ Format (IODEF) data model\n   [RFC7970] from the work in the IETF Managed Incident\
    \ Lightweight\n   Exchange (MILE) working group.\n"
- title: 3.2.  NICT IODEF-SCI implementation
  contents:
  - "3.2.  NICT IODEF-SCI implementation\n   Japan's National Institute of Information\
    \ and Communications\n   Technology (NICT) Network Security Research Institute\
    \ implemented\n   open source tools for exchanging, accumulating, and locating\
    \ IODEF-\n   SCI [RFC7203] documents.\n   Three tools are available from GitHub.\
    \  These tools assist the\n   exchange of IODEF-SCI documents between parties.\
    \  IODEF-SCI [RFC7203]\n   extends IODEF so that an IODEF document can embed Structured\n\
    \   Cybersecurity Information (SCI).  For instance, it can embed Malware\n   Metadata\
    \ Exchange Format (MMDEF), Common Event Expression (CEE),\n   Malware Attribute\
    \ Enumeration and Characterization (MAEC) in XML, and\n   Common Vulnerabilities\
    \ and Exposures (CVE) identifiers.\n   The three tools are generator, exchanger,\
    \ and parser.  The generator\n   generates IODEF-SCI documents or appends XML\
    \ to an existing IODEF\n   document.  The exchanger sends the IODEF document to\
    \ a specified\n   correspondent node.  The parser receives, parses, and stores\
    \ the\n   IODEF-SCI document.  The parser also creates an interface that\n   enables\
    \ users to locate IODEF-SCI documents that have previously been\n   received.\
    \  The code has been released under an MIT license and\n   development will continue\
    \ on GitHub.\n   Note that users can enjoy using this software at their own risk.\n\
    \   Available Online:\n      <https://github.com/TakeshiTakahashi/IODEF-SCI>\n"
- title: 3.3.  n6
  contents:
  - "3.3.  n6\n   n6 is a platform for processing security-related information; it\
    \ was\n   developed by the Poland Research and Academic Computer Network (NASK)\n\
    \   Computer Emergency Response Team (CERT) Polska.  The n6 API provides\n   a\
    \ common and unified way of representing data across the different\n   sources\
    \ that participate in knowledge management.\n   n6 exposes a REST-ful (Representational\
    \ State Transfer) API over\n   HTTPS with mandatory authentication via Transport\
    \ Layer Security\n   (TLS) client certificates to ensure confidential and trustworthy\n\
    \   communications.  Moreover, it uses an event-based data model for\n   representation\
    \ of all types of security information.\n   Each event is represented as a JSON\
    \ object with a set of mandatory\n   and optional attributes. n6 also supports\
    \ alternative output data\n   formats for keeping compatibility with existing\
    \ systems - IODEF and\n   CSV - although these formats lack some of the attributes\
    \ that may be\n   present in the native JSON format.\n   Available Online:\n \
    \     <https://github.com/CERT-Polska/n6sdk>\n"
- title: 4.  Vendor Implementations
  contents:
  - '4.  Vendor Implementations

    '
- title: 4.1.  Deep Secure
  contents:
  - "4.1.  Deep Secure\n   Deep-Secure Guards are built to protect a trusted domain\
    \ from:\n   o  releasing sensitive data that does not meet the organizational\n\
    \      security policy, and\n   o  applications receiving badly constructed or\
    \ malicious data that\n      could exploit a vulnerability (known or unknown).\n\
    \   Deep-Secure Guards support HTTPS and the Extensible Messaging and\n   Presence\
    \ Protocol (XMPP -- optimized server-to-server protocol),\n   transports.  The\
    \ Deep-Secure Guards support transfer of XML-based\n   business content by creating\
    \ a schema to translate the known good\n   content to and from the intermediate\
    \ format.  This means that the\n   Deep-Secure Guards can be used to protect:\n\
    \   o  IODEF/RID using the HTTPS transport binding [RFC6546]\n   o  IODEF/RID\
    \ using an XMPP binding\n   o  Resource-Oriented Lightweight Indicator Exchange\
    \ (ROLIE) using\n      HTTPS transport binding [XEP-0268]\n   o  Structured Threat\
    \ Information Expression (STIX) / Trusted\n      Automated Exchange of Indicator\
    \ Information (TAXII) using the\n      HTTPS transport binding\n   Deep-Secure\
    \ Guards also support the SMTP transport and perform deep\n   content inspection\
    \ of content including XML attachments.  The Mail\n   Guard supports S/MIME, and\
    \ Deep Secure is working on support for the\n   upcoming PLASMA standard, which\
    \ enables an information-centric policy\n   enforcement of data use.\n"
- title: 4.2.  IncMan Suite, DFLabs
  contents:
  - "4.2.  IncMan Suite, DFLabs\n   The Incident Object Description Exchange Format,\
    \ documented in RFC\n   5070 [RFC5070], defines a data representation that provides\
    \ a\n   framework for sharing information commonly exchanged by Computer\n   Security\
    \ Incident Response Teams (CSIRTs) about computer security\n   incidents.  IncMan\
    \ Suite implements the IODEF standard for exchanging\n   details about incidents,\
    \ either for exporting or importing\n   activities.  This has been introduced\
    \ to enhance the capabilities of\n   the various CSIRTs to facilitate collaboration\
    \ and sharing of useful\n   experiences (sharing awareness on specific cases).\n\
    \   The IODEF implementation is specified as an XML schema; therefore all\n  \
    \ data are stored in an XML file.  In this file, all the data of an\n   incident\
    \ are organized in a hierarchical structure to describe the\n   various objects\
    \ and their relationships.\n   The IncMan Suite relies on IODEF as a transport\
    \ format, which is\n   composed by various classes for describing the entities\
    \ that are part\n   of the incident description.  For instance, the various relevant\n\
    \   timestamps (detection time, start time, end time, and report time),\n   the\
    \ techniques used by the intruders to perpetrate the incident, the\n   impact\
    \ of the incident, technical and non-technical (time and\n   monetary), and obviously\
    \ all systems involved in the incident.\n"
- title: 4.2.1.  Exporting Incidents
  contents:
  - "4.2.1.  Exporting Incidents\n   Each incident defined in the IncMan Suite can\
    \ be exported via a user\n   interface feature, and it will create an XML document.\
    \  Due to the\n   nature of the data processed, the IODEF extraction might be\n\
    \   considered privacy sensitive by the parties exchanging the\n   information\
    \ or by those described by it.  For this reason, specific\n   care needs to be\
    \ taken in ensuring the distribution to an appropriate\n   audience or third party,\
    \ either during the document exchange or the\n   subsequent processing.\n   The\
    \ XML document generated will include a description and details of\n   the incident\
    \ along with all the systems involved and the related\n   information.  At this\
    \ stage, it can be distributed for import into a\n   remote system.\n"
- title: 4.2.2.  Importing Incidents
  contents:
  - "4.2.2.  Importing Incidents\n   The IncMan Suite provides the functionality to\
    \ import incidents\n   stored in files and transported via IODEF-compliant XML\
    \ documents.\n   The importing process is comprised of two steps: first, the file\
    \ is\n   inspected to validate if it is well formed; second, all data are\n  \
    \ uploaded inside the system.\n   If the incident already exists in the system\
    \ with the same incident\n   ID, the new one being imported will be created under\
    \ a new ID.  This\n   approach prevents accidentally overwriting existing information\
    \ or\n   merging inconsistent data.\n   The IncMan Suite also includes a feature\
    \ to upload incidents from\n   emails.\n   The incident, described in XML format,\
    \ can be stored directly into\n   the body of the email message or transported\
    \ as an attachment of the\n   email.  At regular intervals that are customizable\
    \ by the user, the\n   IncMan Suite monitors for incoming emails, which are filtered\
    \ by a\n   configurable white-list and black-list mechanism on the sender's\n\
    \   email account.  Then, a parser processes the received email and a new\n  \
    \ incident is created automatically after having validated the email\n   body\
    \ or the attachment to ensure the format is well formed.\n"
- title: 4.3.  Surevine Proof of Concept
  contents:
  - "4.3.  Surevine Proof of Concept\n   XMPP is enhanced and extended through the\
    \ XMPP Extension Protocols\n   (XEPs).  XEP-0268 [XEP-0268] describes incident\
    \ management (using\n   IODEF) of the XMPP network itself, effectively supporting\
    \ self-\n   healing the XMPP network.  In order to more generically cover the\n\
    \   incident management of a network over the same network, XEP-0268\n   requires\
    \ some updates.  We are working on these changes together with\n   a new XEP that\
    \ supports \"social networking\" over XMPP, which enhances\n   the publish-and-subscribe\
    \ XEP [XEP-0060].  This now allows nodes to\n   publish and subscribe to any type\
    \ of content and therefore receive\n   the content.  XEP-0060 will be used to\
    \ describe IODEF content.  We\n   now have an alpha version of the server-side\
    \ software and client-side\n   software required to demonstrate the \"social networking\"\
    \ capability\n   and are currently enhancing this to support cyber incident management\n\
    \   in real time.\n"
- title: 4.4.  MANTIS Cyber-Intelligence Management Framework
  contents:
  - "4.4.  MANTIS Cyber-Intelligence Management Framework\n   Model-based Analysis\
    \ of Threat Intelligence Sources (MANTIS) provides\n   an example implementation\
    \ of a framework for managing cyber threat\n   intelligence expressed in standards\
    \ such as STIX, Cyber Observable\n   Expression (CybOX), IODEF, etc.  The aims\
    \ of providing such an\n   example implementation are as follows:\n   o  To facilitate\
    \ discussions about emerging standards such as STIX,\n      CybOX, et al., with\
    \ respect to questions regarding tooling: how\n      would a certain aspect be\
    \ implemented, and how do changes affect\n      an implementation?  Such discussions\
    \ become much easier and have a\n      better basis if they can be lead in the\
    \ context of example tooling\n      that is known to the community.\n   o  To\
    \ lower the barrier of entry for organizations and teams\n      (especially CSIRT/CERT\
    \ teams) in using emerging standards for\n      cyber-threat-intelligence management\
    \ and exchange.\n   o  To provide a platform on the basis of which research and\n\
    \      community-driven development in the area of cyber-threat-\n      intelligence\
    \ management can occur.\n"
- title: 5.  Vendors with Planned Support
  contents:
  - '5.  Vendors with Planned Support

    '
- title: 5.1.  Threat Central, HP
  contents:
  - "5.1.  Threat Central, HP\n   HP has developed HP Threat Central, a security intelligence\
    \ platform\n   that enables automated, real-time collaboration between organizations\n\
    \   to combat today's increasingly sophisticated cyber attacks.  One way\n   automated\
    \ sharing of threat indicators is achieved is through close\n   integration with\
    \ the HP ArcSight Security Information and Event\n   Management (SIEM) for automated\
    \ upload and consumption of information\n   from the Threat Central Server.  In\
    \ addition, HP Threat Central\n   supports open standards for sharing threat information\
    \ so that\n   participants who do not use HP Security Products can participate\
    \ in\n   the sharing ecosystem.  It is planned that future versions will also\n\
    \   support IODEF for the automated upload and download of threat\n   information.\n"
- title: 5.2.  DAEDALUS, NICT
  contents:
  - "5.2.  DAEDALUS, NICT\n   DAEDALUS is a real-time alert system based on a large-scale\
    \ darknet\n   monitoring facility that has been deployed as a part of the Network\n\
    \   Incident analysis Center for Tactical Emergency Response (nicter)\n   system\
    \ of NICT, which is based in Japan.  DAEDALUS consists of an\n   analysis center\
    \ (i.e., nicter) and several cooperative organizations.\n   Each organization\
    \ installs a darknet sensor and establishes a secure\n   channel between it and\
    \ the analysis center, and it continuously\n   forwards darknet traffic toward\
    \ the center.  In addition, each\n   organization registers the IP address range\
    \ of its livenet at the\n   center in advance.  When these distributed darknet\
    \ sensors observe\n   malware activities from the IP address of a cooperating\
    \ organization,\n   then the analysis center sends an alert to the organization.\
    \  The\n   future version of DAEDALUS will support IODEF for sending alert\n \
    \  messages to the users.\n"
- title: 6.  Other Implementations
  contents:
  - '6.  Other Implementations

    '
- title: 6.1.  Collaborative Incident Management System
  contents:
  - "6.1.  Collaborative Incident Management System\n   A Collaborative Incident Management\
    \ System (CIMS) is a proof-of-\n   concept system for collaborative incident handling\
    \ and for the\n   sharing of information about cyber defense situational awareness\n\
    \   between the participants; it was developed for the Cyber Coalition\n   2013\
    \ (CC13) exercise organized by the North Atlantic Treaty\n   Organization (NATO).\
    \  CIMS was implemented based on Request Tracker\n   (RT), an open source software\
    \ widely used for handling incident\n   responses by many CERTs and CSIRTs.\n\
    \   One of the functionalities implemented in CIMS was the ability to\n   import\
    \ and export IODEF messages in the body of emails.  The intent\n   was to verify\
    \ the suitability of IODEF to achieve the objective of\n   collaborative incident\
    \ handling.  The customized version of RT could\n   be configured to send an email\
    \ message containing an IODEF message\n   whenever an incident ticket was created,\
    \ modified, or deleted.  These\n   IODEF messages would then be imported into\
    \ other incident handling\n   systems in order to allow participating CSIRTs to\
    \ use their usual\n   means for incident handling while still interacting with\
    \ those using\n   the proof-of-concept CIMS.  Having an IODEF message generated\
    \ for\n   every change made to the incident information in RT (and for the\n \
    \  system to allow incoming IODEF email messages to be associated to an\n   existing\
    \ incident) would in some way allow all participating CSIRTs\n   to actually work\
    \ on a \"common incident ticket\", at least at the\n   conceptual level.  Of particular\
    \ importance was the ability for users\n   to exchange information between each\
    \ other concerning actions taken\n   in the handling of a particular incident,\
    \ thus creating a sort of\n   common action log as well as requesting/tasking\
    \ others to provide\n   information or perform a specified action and correlating\
    \ received\n   responses to the original request or task.  As well, a specific\n\
    \   \"profile\" was developed to identify a subset of the IODEF classes\n   that\
    \ would be used during the exercise in an attempt to channel all\n   users into\
    \ a common usage pattern of the otherwise flexible IODEF\n   standard.\n"
- title: 6.2.  Automated Incident Reporting - AirCERT
  contents:
  - "6.2.  Automated Incident Reporting - AirCERT\n   AirCERT was implemented by the\
    \ CERT / Coordination Center (CC) of\n   Carnegie Mellon's Software Engineering\
    \ Institute CERT division.\n   AirCERT was designed to be an Internet-scalable\
    \ distributed system\n   for sharing security event data.  The AirCERT system\
    \ was designed to\n   be an automated collector of flow and Intrusion Detection\
    \ System\n   (IDS) alerts.  AirCERT would collect that information into a\n  \
    \ relational database and be able to share reporting using IODEF and\n   the Intrusion\
    \ Detection Message Exchange Format [RFC4765].  AirCERT\n   additionally used\
    \ SNML [SNML] to exchange information about the\n   network.  AirCERT was implemented\
    \ in a combination of C and Perl\n   modules and included periodic graphing capabilities\
    \ leveraging the\n   Round-Robin Database Tool (RRDTool).\n   AirCERT was intended\
    \ for large-scale distributed deployment and,\n   eventually, the ability to sanitize\
    \ data to be shared across\n   administrative domains.  The architecture was designed\
    \ to allow\n   collection of data on a per-site basis and to allow each site to\n\
    \   create data sharing based on its own particular trust relationships.\n"
- title: 6.3.  US Department of Energy CyberFed
  contents:
  - "6.3.  US Department of Energy CyberFed\n   The CyberFed system was implemented\
    \ and deployed by Argonne National\n   Laboratory to automate the detection and\
    \ response of attack activity\n   against Department of Energy (DoE) computer\
    \ networks.  CyberFed\n   automates the collection of network alerting activity\
    \ from various\n   perimeter network defenses and logs those events into its database.\n\
    \   CyberFed then automatically converts that information into blocking\n   information\
    \ transmitted to all participants.  The original\n   implementation used IODEF\
    \ messages wrapped in an XML extension to\n   manage a large array of indicators.\
    \  The CyberFed system was not\n   designed to describe a particular incident\
    \ as much as to describe a\n   set of current network-blocking indicators that\
    \ can be generated and\n   deployed machine to machine.\n   CyberFed is primarily\
    \ implemented in Perl.  Included as part of the\n   CyberFed system are scripts\
    \ that interact with a large number of\n   firewalls, IDS / Intrusion Prevention\
    \ System (IPS) devices, DNS\n   systems, and proxies that operate to implement\
    \ both the automated\n   collection of events as well as the automated deployment\
    \ of black\n   listing.\n   Currently, CyberFed supports multiple exchange formats\
    \ including\n   IODEF and STIX.  Open Indicators of Compromise (OpenIOC) is also\
    \ a\n   potential exchange format that the US DoE is considering.\n"
- title: 7.  Implementation Guide
  contents:
  - "7.  Implementation Guide\n   The section aims at sharing tips for development\
    \ of IODEF-capable\n   systems.\n"
- title: 7.1.  Code Generators
  contents:
  - "7.1.  Code Generators\n   For implementing IODEF-capable systems, it is feasible\
    \ to employ code\n   generators for the XML Schema Definition (XSD).  The generators\
    \ are\n   used to save development costs since they automatically create useful\n\
    \   libraries for accessing XML attributes, composing messages, and/or\n   validating\
    \ XML objects.  The IODEF XSD was defined in Section 8 of\n   RFC 5070 [RFC5070]\
    \ and is available from the \"ns\" registry\n   <https://www.iana.org/assignments/xml-registry>.\n\
    \   However, some issues remain.  Due to the complexity of the IODEF XSD,\n  \
    \ some code generators could not generate code from the XSD file.  The\n   tested\
    \ code generators are as follows.\n   o  XML::Pastor [XSD:Perl] (Perl)\n   o \
    \ RXSD [XSD:Ruby] (Ruby)\n   o  PyXB [XSD:Python] (Python)\n   o  JAXB [XSD:Java]\
    \ (Java)\n   o  CodeSynthesis XSD [XSD:Cxx] (C++)\n   o  Xsd.exe [XSD:CS] (C#)\n\
    \   For instance, we have tried to use XML::Pastor, but it could not\n   properly\
    \ understand its schema due to the complexity of IODEF XSD.\n   The same applies\
    \ to Ruby XSD (RXSD) and Java Architecture for XML\n   Binding (JAXB).  Only Python\
    \ XML Schema Bindings (PyXB),\n   CodeSynthesis XSD, and Xsd.exe were able to\
    \ understand the complex\n   schema.\n   Unfortunately, there is no recommended\
    \ workaround.  A possible\n   workaround is a double conversion of the XSD file.\
    \  This entails the\n   XSD being serialized into XML; afterwards, the resulting\
    \ XML is\n   converted back into an XSD.  The resultant XSD was successfully\n\
    \   processed by all the tools listed above.\n   It should be noted that IODEF\
    \ uses '-' (hyphen) symbols in its\n   classes or attributes, which are listed\
    \ as follows:\n   o  IODEF-Document Class: It is the top-level class in the IODEF\
    \ data\n      model described in Section 3.1 of RFC 5070 [RFC5070].\n   o  The\
    \ vlan-name and vlan-num Attributes: According to Section 3.16.2\n      of RFC\
    \ 5070 [RFC5070], they are the name and number of Virtual LAN\n      and are the\
    \ attributes for Address class.\n   o  Extending the Enumerated Values of Attribute:\
    \ According to\n      Section 5.1 of RFC 5070 [RFC5070], this is an extension\
    \ technique\n      to add new enumerated values to an attribute, and it has a\
    \ prefix\n      of \"ext-\", e.g., ext-value, ext-category, ext-type, and so on.\n\
    \   According to the language specification, many programming languages\n   prohibit\
    \ having '-' symbols in the name of class.  The code\n   generators must replace\
    \ or remove the '-' when building the\n   libraries.  They should have the name\
    \ space restore the '-' when\n   outputting the XML along with IODEF XSD.\n"
- title: 7.2.  iodeflib
  contents:
  - "7.2.  iodeflib\n   iodeflib is an open source implementation written in Python.\
    \  This\n   provides simple but powerful APIs to create, parse, and edit IODEF\n\
    \   documents.  It was designed in order to keep its interface as simple\n   as\
    \ possible, whereas generated libraries tend to inherit the\n   complexity of\
    \ IODEF XSD.  In addition, the iodeflib interface\n   includes functions to hide\
    \ some unnecessarily nested structures of\n   the IODEF schema and add more convenient\
    \ shortcuts.\n   This tool is available through the following link:\n      <http://www.decalage.info/python/iodeflib>\n"
- title: 7.3.  iodefpm
  contents:
  - "7.3.  iodefpm\n   IODEF.pm is an open source implementation written in Perl.\
    \  This also\n   provides a simple interface for creating and parsing IODEF documents\n\
    \   in order to facilitate the translation of the key-value-based format\n   to\
    \ the IODEF representation.  The module contains a generic XML DTD\n   parser\
    \ and includes a simplified node-based representation of the\n   IODEF DTD.  Hence,\
    \ it can easily be upgraded or extended to support\n   new XML nodes or other\
    \ DTDs.\n   This tool is available through the following link:\n      <http://search.cpan.org/~saxjazman/>\n"
- title: 7.4.  Usability
  contents:
  - "7.4.  Usability\n   Some tips to avoid problems are noted here:\n   o  IODEF\
    \ has a category attribute for the NodeRole class.  Though\n      various categories\
    \ are described, they are not sufficient.  For\n      example, in the case of\
    \ webmail servers, should the user choose\n      \"www\" or \"mail\"?  One suggestion\
    \ is to select \"mail\" as the\n      category attribute and add \"www\" for another\
    \ attribute.\n   o  The numbering of incident IDs needs to be considered.  Otherwise,\n\
    \      information, such as the number of incidents within a certain\n      period,\
    \ could be observed by document receivers.  This is easily\n      mitigated by\
    \ randomizing the assignment of incident IDs.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This memo does not require any IANA actions.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document provides a summary of implementation\
    \ reports from\n   researchers and vendors who have implemented RFCs and drafts\
    \ from the\n   MILE and INCH working groups.  There are no security considerations\n\
    \   added because of the nature of the document.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [RFC4765]  Debar, H., Curry, D., and B. Feinstein,\
    \ \"The Intrusion\n              Detection Message Exchange Format (IDMEF)\",\
    \ RFC 4765,\n              DOI 10.17487/RFC4765, March 2007,\n              <http://www.rfc-editor.org/info/rfc4765>.\n\
    \   [RFC5070]  Danyliw, R., Meijer, J., and Y. Demchenko, \"The Incident\n   \
    \           Object Description Exchange Format\", RFC 5070,\n              DOI\
    \ 10.17487/RFC5070, December 2007,\n              <http://www.rfc-editor.org/info/rfc5070>.\n\
    \   [RFC5901]  Cain, P. and D. Jevans, \"Extensions to the IODEF-Document\n  \
    \            Class for Reporting Phishing\", RFC 5901,\n              DOI 10.17487/RFC5901,\
    \ July 2010,\n              <http://www.rfc-editor.org/info/rfc5901>.\n   [RFC5941]\
    \  M'Raihi, D., Boeyen, S., Grandcolas, M., and S. Bajaj,\n              \"Sharing\
    \ Transaction Fraud Data\", RFC 5941,\n              DOI 10.17487/RFC5941, August\
    \ 2010,\n              <http://www.rfc-editor.org/info/rfc5941>.\n   [RFC6545]\
    \  Moriarty, K., \"Real-time Inter-network Defense (RID)\",\n              RFC\
    \ 6545, DOI 10.17487/RFC6545, April 2012,\n              <http://www.rfc-editor.org/info/rfc6545>.\n\
    \   [RFC6546]  Trammell, B., \"Transport of Real-time Inter-network\n        \
    \      Defense (RID) Messages over HTTP/TLS\", RFC 6546,\n              DOI 10.17487/RFC6546,\
    \ April 2012,\n              <http://www.rfc-editor.org/info/rfc6546>.\n   [RFC7203]\
    \  Takahashi, T., Landfield, K., and Y. Kadobayashi, \"An\n              Incident\
    \ Object Description Exchange Format (IODEF)\n              Extension for Structured\
    \ Cybersecurity Information\",\n              RFC 7203, DOI 10.17487/RFC7203,\
    \ April 2014,\n              <http://www.rfc-editor.org/info/rfc7203>.\n   [RFC7970]\
    \  Danyliw, R., \"The Incident Object Description Exchange\n              Format\
    \ Version 2\", RFC 7970, DOI 10.17487/RFC7970,\n              November 2016, <http://www.rfc-editor.org/info/rfc7970>.\n\
    \   [SNML]     Trammell, B., Danyliw, R., Levy, S., and A. Kompanek,\n       \
    \       \"AirCERT: The Definitive Guide\", 2005,\n              <http://aircert.sourceforge.net/docs/\n\
    \              aircert_manual-06_2005.pdf>.\n   [XEP-0060] Millard, P., Saint-Andre,\
    \ P., and R. Meijer, \"XEP-0060:\n              Publish-Subscribe\", December\
    \ 2016,\n              <http://www.xmpp.org/extensions/xep-0060.html>.\n   [XEP-0268]\
    \ Hefczy, A., Jensen, F., Remond, M., Saint-Andre, P., and\n              M. Wild,\
    \ \"XEP-0268: Incident Handling\", May 2012,\n              <http://xmpp.org/extensions/xep-0268.html>.\n\
    \   [XSD:CS]   Microsoft, \"XML Schema Definition Tool (Xsd.exe)\",\n        \
    \      <http://www.microsoft.com/>.\n   [XSD:Cxx]  CodeSynthesis, \"XSD: XML Data\
    \ Binding for C++\",\n              <http://www.codesynthesis.com/>.\n   [XSD:Java]\
    \ Project Kenai, \"Project JAXB\", <https://jaxb.java.net/>.\n   [XSD:Perl] Ulsoy,\
    \ A., \"XML-Pastor-1.0.4\",\n              <http://search.cpan.org/~aulusoy/XML-Pastor-1.0.4/>.\n\
    \   [XSD:Python]\n              Bigot, P., \"PyXB 1.2.5: Python XML Schema Bindings\"\
    ,\n              <https://pypi.python.org/pypi/PyXB>.\n   [XSD:Ruby] Morsi, M.,\
    \ \"XSD / Ruby Translator\",\n              <https://github.com/movitto/RXSD>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The MILE implementation report has been compiled through\
    \ the\n   submissions of implementers of INCH and MILE working group standards.\n\
    \   A special note of thanks to the following contributors:\n      John Atherton,\
    \ Surevine\n      Humphrey Browning, Deep-Secure\n      Dario Forte, DFLabs\n\
    \      Tomas Sander, HP\n      Ulrich Seldeslachts, ACDC\n      Takeshi Takahashi,\
    \ National Institute of Information and\n      Communications Technology Network\
    \ Security Research Institute\n      Kathleen Moriarty, EMC\n      Bernd Grobauer,\
    \ Siemens\n      Dandurand Luc, NATO\n      Pawel Pawlinski, NASK\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Chris Inacio\n   Carnegie Mellon University\n   4500 5th\
    \ Ave., SEI 4108\n   Pittsburgh, PA  15213\n   United States of America\n   Email:\
    \ inacio@andrew.cmu.edu\n   Daisuke Miyamoto\n   The University of Tokyo\n   2-11-16\
    \ Yayoi, Bunkyo\n   Tokyo  113-8658\n   Japan\n   Email: daisu-mi@nc.u-tokyo.ac.jp\n"
