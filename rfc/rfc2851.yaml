- title: __initial_text__
  contents:
  - '           Textual Conventions for Internet Network Addresses

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This MIB module defines textual conventions to represent commonly\n\
    \   used Internet network layer addressing information. The intent is\n   that\
    \ these definitions will be imported and used in MIBs that would\n   otherwise\
    \ define their own representations.\n   This work is output from the Operations\
    \ and Management Area \"IPv6MIB\"\n   design team.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   2.  The SNMP Management Framework  . . . . . . . . . . . .\
    \ . . .  3\n   3.  Definitions  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n   4.  Usage Hints  . . . . . . . . . . . . . . . . . . . . . . . .  8\n\
    \   4.1 Table Indexing . . . . . . . . . . . . . . . . . . . . . . .  8\n   4.2\
    \ Uniqueness of Addresses  . . . . . . . . . . . . . . . . . .  9\n   4.3 Multiple\
    \ InetAddresses per Host  . . . . . . . . . . . . . .  9\n   4.4 Resolving DNS\
    \ Names  . . . . . . . . . . . . . . . . . . . .  9\n   5.  Table Indexing Example\
    \ . . . . . . . . . . . . . . . . . . . 10\n   6.  Security Considerations  .\
    \ . . . . . . . . . . . . . . . . . 12\n   7.  Acknowledgments  . . . . . . .\
    \ . . . . . . . . . . . . . . . 12\n   8.  Intellectual Property Notice . . .\
    \ . . . . . . . . . . . . . 12\n       References . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 13\n       Authors' Addresses . . . . . . . . . . . .\
    \ . . . . . . . . . 15\n       Full Copyright Statement . . . . . . . . . . .\
    \ . . . . . . . 16\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Several standard-track MIB modules use the IpAddress SMIv2\
    \ base type.\n   This limits the applicability of these MIB modules to IP Version\
    \ 4\n   (IPv4) since the IpAddress SMIv2 base type can only contain 4 byte\n \
    \  IPv4 addresses. The IpAddress SMIv2 base type has become problematic\n   with\
    \ the introduction of IP Version 6 (IPv6) addresses [21].\n   This document defines\
    \ multiple textual conventions as a mechanism to\n   express generic Internet\
    \ network layer addresses within MIB module\n   specifications. The solution is\
    \ compatible with SMIv2 (STD 58) and\n   SMIv1 (STD 16). New MIB definitions which\
    \ need to express network\n   layer Internet addresses SHOULD use the textual\
    \ conventions defined\n   in this memo. New MIBs SHOULD NOT use the SMIv2 IpAddress\
    \ base type\n   anymore.\n   A generic Internet address consists of two objects,\
    \ one whose syntax\n   is InetAddressType, and another whose syntax is InetAddress.\
    \ The\n   value of the first object determines how the value of the second\n \
    \  object is encoded. The InetAddress textual convention represents an\n   opaque\
    \ Internet address value. The InetAddressType enumeration is\n   used to \"cast\"\
    \ the InetAddress value into a concrete textual\n   convention for the address\
    \ type. This usage of multiple textual\n   conventions allows expression of the\
    \ display characteristics of each\n   address type and makes the set of defined\
    \ Internet address types\n   extensible.\n   The textual conventions defined in\
    \ this document can be used to\n   define Internet addresses by using DNS domain\
    \ names in addition to\n   IPv4 and IPv6 addresses. A MIB designer can write compliance\n\
    \   statements to express that only a subset of the possible address\n   types\
    \ must be supported by a compliant implementation.\n   MIB developers who need\
    \ to represent Internet addresses SHOULD use\n   these definitions whenever applicable,\
    \ as opposed to defining their\n   own constructs. Even MIBs that only need to\
    \ represent IPv4 or IPv6\n   addresses SHOULD use the textual conventions defined\
    \ in this memo.\n   In order to make existing widely-deployed IPv4-only MIBs fit\
    \ for\n   IPv6, it might be a valid approach to define separate tables for\n \
    \  different address types. This is a decision for the MIB designer.\n   For example,\
    \ the tcpConnTable of the TCP-MIB [18] was left intact\n   and a new table was\
    \ added for TCP connections over IPv6 in the IPV6-\n   TCP-MIB [19]. Note that\
    \ even in this case, the MIBs SHOULD use the\n   textual conventions defined in\
    \ this memo.\n   Note that MIB developers SHOULD NOT use the textual conventions\n\
    \   defined in this document to represent transport layer addresses.\n   Instead\
    \ the SMIv2 TAddress textual convention and associated\n   definitions should\
    \ be used for transport layer addresses.\n   The key words \"MUST\", \"MUST NOT\"\
    , \"SHOULD\", \"SHOULD NOT\" and \"MAY\" in\n   this document are to be interpreted\
    \ as described in RFC 2119 [1].\n"
- title: 2. The SNMP Management Framework
  contents:
  - "2. The SNMP Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n   o  An overall architecture, described\
    \ in RFC 2571 [2].\n   o  Mechanisms for describing and naming objects and events\
    \ for the\n      purpose of management. The first version of this Structure of\n\
    \      Management Information (SMI) is called SMIv1 and described in STD\n   \
    \   16, RFC 1155 [3], STD 16, RFC 1212 [4] and RFC 1215 [5]. The\n      second\
    \ version, called SMIv2, is described in STD 58, RFC 2578\n      [6], STD 58,\
    \ RFC 2579 [7] and STD 58, RFC 2580 [8].\n   o  Message protocols for transferring\
    \ management information. The\n      first version of the SNMP message protocol\
    \ is called SNMPv1 and\n      described in STD 15, RFC 1157 [9]. A second version\
    \ of the SNMP\n      message protocol, which is not an Internet standards track\n\
    \      protocol, is called SNMPv2c and described in RFC 1901 [10] and RFC\n  \
    \    1906 [11]. The third version of the message protocol is called\n      SNMPv3\
    \ and described in RFC 1906 [11], RFC 2572 [12] and RFC 2574\n      [13].\n  \
    \ o  Protocol operations for accessing management information. The\n      first\
    \ set of protocol operations and associated PDU formats is\n      described in\
    \ STD 15, RFC 1157 [9]. A second set of protocol\n      operations and associated\
    \ PDU formats is described in RFC 1905\n      [14].\n   o  A set of fundamental\
    \ applications described in RFC 2573 [15] and\n      the view-based access control\
    \ mechanism described in RFC 2575\n      [16].\n   A more detailed introduction\
    \ to the current SNMP Management Framework\n   can be found in RFC 2570 [17].\n\
    \   Managed objects are accessed via a virtual information store, termed\n   the\
    \ Management Information Base or MIB. Objects in the MIB are\n   defined using\
    \ the mechanisms defined in the SMI.\n   This memo specifies a MIB module that\
    \ is compliant to the SMIv2. A\n   MIB conforming to the SMIv1 can be produced\
    \ through the appropriate\n   translations. The resulting translated MIB must\
    \ be semantically\n   equivalent, except where objects or events are omitted because\
    \ no\n   translation is possible (use of Counter64). Some machine readable\n \
    \  information in SMIv2 will be converted into textual descriptions in\n   SMIv1\
    \ during the translation process. However, this loss of machine\n   readable information\
    \ is not considered to change the semantics of the\n   MIB.\n"
- title: 3. Definitions
  contents:
  - "3. Definitions\n   INET-ADDRESS-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n     MODULE-IDENTITY,\
    \ mib-2 FROM SNMPv2-SMI\n     TEXTUAL-CONVENTION     FROM SNMPv2-TC;\n   inetAddressMIB\
    \ MODULE-IDENTITY\n     LAST-UPDATED \"200006080000Z\"\n     ORGANIZATION\n  \
    \       \"IETF Operations and Management Area\"\n     CONTACT-INFO\n         \"\
    Mike Daniele\n          Compaq Computer Corporation\n          110 Spit Brook\
    \ Rd\n          Nashua, NH  03062, USA\n          Phone: +1 603 884-1423\n   \
    \       EMail: daniele@zk3.dec.com\n          Brian Haberman\n          Nortel\
    \ Networks\n          4039 Emperor Blvd., Suite 200\n          Durham, NC  27703,\
    \ USA\n          Phone: +1 919 992-4439\n          EMail: haberman@nortelnetworks.com\n\
    \          Shawn A. Routhier\n          Wind River Systems, Inc.\n          1\
    \ Tara Blvd, Suite 403\n          Nashua, NH  03062, USA\n          Phone: +1\
    \ 603 897-2000\n          EMail: sar@epilogue.com\n          Juergen Schoenwaelder\n\
    \          TU Braunschweig\n          Bueltenweg 74/75\n          38106 Braunschweig,\
    \ Germany\n          Phone: +49 531 391-3289\n          EMail: schoenw@ibr.cs.tu-bs.de\n\
    \          Send comments to mibs@ops.ietf.org.\"\n   DESCRIPTION\n     \"This\
    \ MIB module defines textual conventions for\n      representing Internet addresses.\
    \ An Internet\n      address can be an IPv4 address, an IPv6 address\n      or\
    \ a DNS domain name.\"\n   REVISION     \"200006080000Z\"\n   DESCRIPTION\n  \
    \     \"Initial version, published as RFC 2851.\"\n   ::= { mib-2 76 }\n   InetAddressType\
    \ ::= TEXTUAL-CONVENTION\n     STATUS      current\n     DESCRIPTION\n       \
    \  \"A value that represents a type of Internet address.\n          unknown(0)\
    \  An unknown address type. This value MUST\n                      be used if\
    \ the value of the corresponding\n                      InetAddress object is\
    \ a zero-length string.\n                      It may also be used to indicate\
    \ an IP address\n                      which is not in one of the formats defined\n\
    \                      below.\n          ipv4(1)     An IPv4 address as defined\
    \ by the\n                      InetAddressIPv4 textual convention.\n        \
    \  ipv6(2)     An IPv6 address as defined by the\n                      InetAddressIPv6\
    \ textual convention.\n          dns(16)     A DNS domain name as defined by the\n\
    \                      InetAddressDNS textual convention.\n          Each definition\
    \ of a concrete InetAddressType value must be\n          accompanied by a definition\
    \ of a textual convention for use\n          with that InetAddressType.\n    \
    \      The InetAddressType textual convention SHOULD NOT be subtyped\n       \
    \   in object type definitions to support future extensions. It\n          MAY\
    \ be subtyped in compliance statements in order to require\n          only a subset\
    \ of these address types for a compliant\n          implementation.\"\n     SYNTAX\
    \      INTEGER {\n                     unknown(0),\n                     ipv4(1),\
    \    -- these named numbers are aligned\n                     ipv6(2),    -- with\
    \ AddressFamilyNumbers from\n                     dns(16)     -- IANA-ADDRESS-FAMILY-NUMBERS-MIB\n\
    \                 }\n   InetAddress ::= TEXTUAL-CONVENTION\n     STATUS      \
    \ current\n     DESCRIPTION\n         \"Denotes a generic Internet address.\n\
    \          An InetAddress value is always interpreted within the\n          context\
    \ of an InetAddressType value. The InetAddressType\n          object which defines\
    \ the context must be registered\n          immediately before the object which\
    \ uses the InetAddress\n          textual convention. In other words, the object\
    \ identifiers\n          for the InetAddressType object and the InetAddress object\n\
    \          MUST have the same length and the last sub-identifier of\n        \
    \  the InetAddressType object MUST be 1 less than the last\n          sub-identifier\
    \ of the InetAddress object.\n          When this textual convention is used as\
    \ the syntax of an\n          index object, there may be issues with the limit\
    \ of 128\n          sub-identifiers specified in SMIv2, STD 58. In this case,\n\
    \          the OBJECT-TYPE declaration MUST include a 'SIZE' clause\n        \
    \  to limit the number of potential instance sub-identifiers.\"\n     SYNTAX \
    \     OCTET STRING (SIZE (0..255))\n   InetAddressIPv4 ::= TEXTUAL-CONVENTION\n\
    \     DISPLAY-HINT \"1d.1d.1d.1d\"\n     STATUS       current\n     DESCRIPTION\n\
    \         \"Represents an IPv4 network address:\n            octets   contents\
    \         encoding\n             1-4     IP address       network-byte order\n\
    \          The corresponding InetAddressType value is ipv4(1).\"\n     SYNTAX\
    \       OCTET STRING (SIZE (4))\n   InetAddressIPv6 ::= TEXTUAL-CONVENTION\n \
    \    DISPLAY-HINT \"2x:2x:2x:2x:2x:2x:2x:2x%4d\"\n     STATUS       current\n\
    \     DESCRIPTION\n         \"Represents an IPv6 network address:\n          \
    \  octets   contents         encoding\n             1-16    IPv6 address     network-byte\
    \ order\n            17-20    scope identifier network-byte order\n          The\
    \ corresponding InetAddressType value is ipv6(2).\n          The scope identifier\
    \ (bytes 17-20) MUST NOT be present\n          for global IPv6 addresses. For\
    \ non-global IPv6 addresses\n          (e.g. link-local or site-local addresses),\
    \ the scope\n          identifier MUST always be present. It contains a link\n\
    \          identifier for link-local and a site identifier for\n          site-local\
    \ IPv6 addresses.\n          The scope identifier MUST disambiguate identical\
    \ address\n          values. For link-local addresses, the scope identifier will\n\
    \          typically be the interface index (ifIndex as defined in the\n     \
    \     IF-MIB, RFC 2233) of the interface on which the address is\n          configured.\n\
    \          The scope identifier may contain the special value 0\n          which\
    \ refers to the default scope. The default scope\n          may be used in cases\
    \ where the valid scope identifier\n          is not known (e.g., a management\
    \ application needs to\n          write a site-local InetAddressIPv6 address without\n\
    \          knowing the site identifier value). The default scope\n          SHOULD\
    \ NOT be used as an easy way out in cases where\n          the scope identifier\
    \ for a non-global IPv6 is known.\"\n     SYNTAX       OCTET STRING (SIZE (16|20))\n\
    \   InetAddressDNS ::= TEXTUAL-CONVENTION\n     DISPLAY-HINT \"255a\"\n     STATUS\
    \       current\n     DESCRIPTION\n         \"Represents a DNS domain name. The\
    \ name SHOULD be\n          fully qualified whenever possible.\n          The\
    \ corresponding InetAddressType is dns(16).\n          The DESCRIPTION clause\
    \ of InetAddress objects that\n          may have InetAddressDNS values must fully\
    \ describe\n          how (and when) such names are to be resolved to IP\n   \
    \       addresses.\"\n     SYNTAX       OCTET STRING (SIZE (1..255))\n   END\n"
- title: 4. Usage Hints
  contents:
  - "4. Usage Hints\n   One particular usage of InetAddressType/InetAddress pairs\
    \ is to avoid\n   over-constraining an object definition by the use of the IpAddress\n\
    \   SMI base type. An InetAddressType/InetAddress pair allows to\n   represent\
    \ IP addresses in various formats.\n   The InetAddressType and InetAddress objects\
    \ SHOULD NOT be subtyped.\n   Subtyping binds the MIB module to specific address\
    \ formats, which may\n   cause serious problems if new address formats need to\
    \ be introduced.\n   Note that it is possible to write compliance statements in\
    \ order to\n   express that only a subset of the defined address types must be\n\
    \   implemented to be compliant.\n   Internet addresses MUST always be represented\
    \ by a pair of\n   InetAddressType/InetAddress objects. It is not allowed to \"\
    share\" an\n   InetAddressType between multiple InetAddress objects. Furthermore,\n\
    \   the InetAddressType object must be registered immediately before the\n   InetAddress\
    \ object. In other words, the object identifiers for the\n   InetAddressType object\
    \ and the InetAddress object MUST have the same\n   length and the last sub-identifier\
    \ of the InetAddressType object MUST\n   be 1 less than the last sub-identifier\
    \ of the InetAddress object.\n"
- title: 4.1 Table Indexing
  contents:
  - "4.1 Table Indexing\n   When a generic Internet address is used as an index, both\
    \ the\n   InetAddressType and InetAddress objects MUST be used. The\n   InetAddressType\
    \ object MUST come immediately before the InetAddress\n   object in the INDEX\
    \ clause. If multiple Internet addresses are used\n   in the INDEX clause, then\
    \ every Internet address must be represented\n   by a pair of InetAddressType\
    \ and InetAddress objects.\n   The IMPLIED keyword MUST NOT be used for an object\
    \ of type\n   InetAddress in an INDEX clause. Instance sub-identifiers are then\
    \ of\n   the form T.N.O1.O2...On, where T is the value of the InetAddressType\n\
    \   object, O1...On are the octets in the InetAddress object, and N is\n   the\
    \ number of those octets.\n   There is a meaningful lexicographical ordering to\
    \ tables indexed in\n   this fashion. Command generator applications may lookup\
    \ specific\n   addresses of known type and value, issue GetNext requests for\n\
    \   addresses of a single type, or issue GetNext requests for a specific\n   type\
    \ and address prefix.\n"
- title: 4.2 Uniqueness of Addresses
  contents:
  - "4.2 Uniqueness of Addresses\n   IPv4 addresses were intended to be globally unique,\
    \ current usage\n   notwithstanding. IPv6 addresses were architected to have different\n\
    \   scopes and hence uniqueness [21]. In particular, IPv6 \"link-local\"\n   and\
    \ \"site-local\" addresses are not guaranteed to be unique on any\n   particular\
    \ node. In such cases, the duplicate addresses must be\n   configured on different\
    \ interfaces. So the combination of an IPv6\n   address and an interface number\
    \ is unique. The interface number may\n   therefore be used as a scope identifier.\n\
    \   The InetAddressIPv6 textual convention has been defined to represent\n   global\
    \ and non-global IPv6 addresses. MIB designers who use\n   InetAddressType/InetAddress\
    \ pairs therefore do not need define\n   additional objects in order to support\
    \ link-local or site-local\n   addresses.\n   The size of the scope identifier\
    \ has been chosen so that it matches\n   the sin6_scope_id field of the sockaddr_in6\
    \ structure defined in RFC\n   2553 [22].\n"
- title: 4.3 Multiple InetAddresses per Host
  contents:
  - "4.3 Multiple InetAddresses per Host\n   A single host system may be configured\
    \ with multiple addresses (IPv4\n   or IPv6), and possibly with multiple DNS names.\
    \ Thus it is possible\n   for a single host system to be represented by multiple\n\
    \   InetAddressType/InetAddress pairs.\n   If this could be an implementation\
    \ or usage issue, then the\n   DESCRIPTION clause of the relevant objects MUST\
    \ fully describe\n   required behavior.\n"
- title: 4.4 Resolving DNS Names
  contents:
  - "4.4 Resolving DNS Names\n   DNS names must be resolved to IP addresses when communication\
    \ with\n   the named host is required. This raises a temporal aspect to defining\n\
    \   MIB objects whose value is a DNS name: When is the name translated to\n  \
    \ an address?\n   For example, consider an object defined to indicate a forwarding\n\
    \   destination, and whose value is a DNS name. When does the forwarding\n   entity\
    \ resolve the DNS name? Each time forwarding occurs? Once, when\n   the object\
    \ was instantiated?\n   The DESCRIPTION clause of such objects SHOULD precisely\
    \ define how\n   and when any required name to address resolution is done.\n \
    \  Similarly, the DESCRIPTION clause of such objects SHOULD precisely\n   define\
    \ how and when a reverse lookup is being done if an agent has\n   accessed instrumentation\
    \ that knows about an IP address and the MIB\n   or implementation requires to\
    \ map the address to a name.\n"
- title: 5. Table Indexing Example
  contents:
  - "5. Table Indexing Example\n   This example shows a table listing communication\
    \ peers that are\n   identified by either an IPv4 address, an IPv6 address or\
    \ a DNS name.\n   The table definition also prohibits entries with an empty address\n\
    \   (whose type would be \"unknown\"). The size of a DNS name is limited to\n\
    \   64 characters.\n   peerTable OBJECT-TYPE\n     SYNTAX      SEQUENCE OF PeerEntry\n\
    \     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n\
    \         \"A list of communication peers.\"\n     ::= { somewhere 1 }\n   peerEntry\
    \ OBJECT-TYPE\n     SYNTAX      PeerEntry\n     MAX-ACCESS  not-accessible\n \
    \    STATUS      current\n     DESCRIPTION\n         \"An entry containing information\
    \ about a particular peer.\"\n     INDEX       { peerAddressType, peerAddress\
    \ }\n     ::= { peerTable 1 }\n   PeerEntry ::= SEQUENCE {\n     peerAddressType\
    \     InetAddressType,\n     peerAddress         InetAddress,\n     peerStatus\
    \          INTEGER }\n   peerAddressType OBJECT-TYPE\n     SYNTAX      InetAddressType\n\
    \     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n\
    \         \"The type of Internet address by which the peer\n          is reachable.\"\
    \n     ::= { peerEntry 1 }\n   peerAddress OBJECT-TYPE\n     SYNTAX      InetAddress\
    \ (SIZE (1..64))\n     MAX-ACCESS  not-accessible\n     STATUS      current\n\
    \     DESCRIPTION\n         \"The Internet address for the peer. Note that\n \
    \         implementations must limit themselves to a single\n          entry in\
    \ this table per reachable peer.\n          The peerAddress may not be empty due\
    \ to the SIZE\n          restriction.\n          If a row is created administratively\
    \ by an SNMP\n          operation and the address type value is dns(16), then\n\
    \          the agent stores the DNS name internally. A DNS name\n          lookup\
    \ must be performed on the internally stored DNS\n          name whenever it is\
    \ being used to contact the peer.\n          If a row is created by the managed\
    \ entity itself and\n          the address type value is dns(16), then the agent\n\
    \          stores the IP address internally. A DNS reverse lookup\n          must\
    \ be performed on the internally stored IP address\n          whenever the value\
    \ is retrieved via SNMP.\"\n     ::= { peerEntry 2 }\n   The following compliance\
    \ statement specifies that implementations\n   need only support IPv4 addresses\
    \ and globally unique IPv6 addresses\n   to be compliant. Support for DNS names\
    \ or scoped IPv6 addresses is\n   not required.\n   peerCompliance MODULE-COMPLIANCE\n\
    \     STATUS      current\n     DESCRIPTION\n         \"The compliance statement\
    \ the peer MIB.\"\n     MODULE      -- this module\n     MANDATORY-GROUPS    {\
    \ peerGroup }\n     OBJECT  peerAddressType\n     SYNTAX  InetAddressType { ipv4(1),\
    \ ipv6(2) }\n     DESCRIPTION\n         \"An implementation is only required to\
    \ support IPv4\n          and IPv6 addresses.\"\n     OBJECT  peerAddress\n  \
    \   SYNTAX  InetAddress (SIZE(4|16))\n     DESCRIPTION\n         \"An implementation\
    \ is only required to support IPv4\n          and globally unique IPv6 addresses.\"\
    \n     ::= { somewhere 2 }\n   Note that the SMIv2 does not permit inclusion of\
    \ not-accessible\n   objects in an object group (see section 3.1 in STD 58, RFC\
    \ 2580 [8]).\n   It is therefore not possible to formally refine the syntax of\n\
    \   auxiliary objects which are not-accessible.  In such a case, it is\n   suggested\
    \ to express the refinement informally in the DESCRIPTION\n   clause of the MODULE-COMPLIANCE\
    \ macro invocation.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   This module does not define any management objects.\
    \ Instead, it\n   defines a set of textual conventions which may be used by other\
    \ MIB\n   modules to define management objects.\n   Meaningful security considerations\
    \ can only be written in the modules\n   that define management objects.\n"
- title: 7. Acknowledgments
  contents:
  - "7. Acknowledgments\n   The authors would like to thank Randy Bush, Richard Draves,\
    \ Mark\n   Ellison, Bill Fenner, Jun-ichiro Hagino, Tim Jenkins, Glenn\n   Mansfield,\
    \ Keith McCloghrie, Thomas Narten, Erik Nordmark, Peder Chr.\n   Norgaard, Randy\
    \ Presuhn, Andrew Smith, Dave Thaler, Kenneth White,\n   Bert Wijnen, and Brian\
    \ Zill for their comments and suggestions.\n"
- title: 8. Intellectual Property Notice
  contents:
  - "8. Intellectual Property Notice\n   The IETF takes no position regarding the\
    \ validity or scope of any\n   intellectual property or other rights that might\
    \ be claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; neither does it represent that it\n   has\
    \ made any effort to identify any such rights. Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11. Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard. Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: References
  contents:
  - "References\n   [1]  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n\
    \        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]  Harrington, D., Presuhn,\
    \ R. and B. Wijnen, \"An Architecture for\n        Describing SNMP Management\
    \ Frameworks\", RFC 2571, April 1999.\n   [3]  Rose, M. and K. McCloghrie, \"\
    Structure and Identification of\n        Management Information for TCP/IP-based\
    \ Internets\", STD 16, RFC\n        1155, May 1990.\n   [4]  Rose, M. and K. McCloghrie,\
    \ \"Concise MIB Definitions\", STD 16,\n        RFC 1212, March 1991.\n   [5]\
    \  Rose, M., \"A Convention for Defining Traps for use with the\n        SNMP\"\
    , RFC 1215, March 1991.\n   [6]  McCloghrie, K., Perkins, D., Schoenwaelder, J.,\
    \ Case, J., Rose,\n        M. and S. Waldbusser, \"Structure of Management Information\n\
    \        Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [7]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser,\
    \ \"Textual Conventions for SMIv2\", STD 58,\n        RFC 2579, April 1999.\n\
    \   [8]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n   \
    \     M. and S. Waldbusser, \"Conformance Statements for SMIv2\", STD\n      \
    \  58, RFC 2580, April 1999.\n   [9]  Case, J., Fedor, M., Schoffstall, M. and\
    \ J. Davin, \"A Simple\n        Network Management Protocol (SNMP)\", STD 15,\
    \ RFC 1157, May 1990.\n   [10]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n\
    \         \"Introduction to Community-based SNMPv2\", RFC 1901, January\n    \
    \     1996.\n   [11]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n\
    \         \"Transport Mappings for Version 2 of the Simple Network\n         Management\
    \ Protocol (SNMPv2)\", RFC 1906, January 1996.\n   [12]  Case, J., Harrington,\
    \ D., Presuhn, R. and B. Wijnen, \"Message\n         Processing and Dispatching\
    \ for the Simple Network Management\n         Protocol (SNMP)\", RFC 2572, April\
    \ 1999.\n   [13]  Blumenthal, U. and B. Wijnen, \"User-based Security Model (USM)\n\
    \         for version 3 of the Simple Network Management Protocol\n         (SNMPv3)\"\
    , RFC 2574, April 1999.\n   [14]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n\
    \         \"Protocol Operations for Version 2 of the Simple Network\n        \
    \ Management Protocol (SNMPv2)\", RFC 1905, January 1996.\n   [15]  Levi, D.,\
    \ Meyer, P. and B. Stewart, \"SNMP Applications\", RFC\n         2573, April 1999.\n\
    \   [16]  Wijnen, B., Presuhn, R. and K. McCloghrie, \"View-based Access\n   \
    \      Control Model (VACM) for the Simple Network Management\n         Protocol\
    \ (SNMP)\", RFC 2575, April 1999.\n   [17]  Case, J., Mundy, R., Partain, D. and\
    \ B. Stewart, \"Introduction\n         to Version 3 of the Internet-standard Network\
    \ Management\n         Framework\", RFC 2570, April 1999.\n   [18]  McCloghrie,\
    \ K., \"SNMPv2 Management Information Base for the\n         Transmission Control\
    \ Protocol using SMIv2\", RFC 2012, November\n         1996.\n   [19]  Daniele,\
    \ M., \"IP Version 6 Management Information Base for the\n         Transmission\
    \ Control Protocol\", RFC 2452, December 1998.\n   [20]  McCloghrie, K. and F.\
    \ Kastenholz, \"The Interfaces Group MIB\n         using SMIv2\", RFC 2233, November\
    \ 1997.\n   [21]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n     \
    \    Architecture\", RFC 2373, July 1998.\n   [22]  Gilligan, R., Thomson, S.,\
    \ Bound, J. and W. Stevens, \"Basic\n         Socket Interface Extensions for\
    \ IPv6\", RFC 2553, March 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mike Daniele\n   Compaq Computer Corporation\n   110 Spit\
    \ Brook Rd\n   Nashua, NH  03062\n   USA\n   Phone: +1 603 884-1423\n   EMail:\
    \ daniele@zk3.dec.com\n   Brian Haberman\n   Nortel Networks\n   4039 Emperor\
    \ Blvd., Suite 200\n   Durham, NC  27703\n   USA\n   Phone: +1 919 992-4439\n\
    \   EMail: haberman@nortelnetworks.com\n   Shawn A. Routhier\n   Wind River Systems,\
    \ Inc.\n   1 Tara Blvd, Suite 403\n   Nashua, NH  03062\n   USA\n   Phone: +1\
    \ 603 897-2000\n   EMail: sar@epilogue.com\n   Juergen Schoenwaelder\n   TU Braunschweig\n\
    \   Bueltenweg 74/75\n   38106 Braunschweig\n   Germany\n   Phone: +49 531 391-3289\n\
    \   EMail: schoenw@ibr.cs.tu-bs.de\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
