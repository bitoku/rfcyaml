- title: __initial_text__
  contents:
  - '  IRIS: The Internet Registry Information Service (IRIS) Core Protocol

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an application layer client-server protocol\n\
    \   for a framework to represent the query and result operations of the\n   information\
    \ services of Internet registries.  Specified in the\n   Extensible Markup Language\
    \ (XML), the protocol defines generic query\n   and result operations and a mechanism\
    \ for extending these operations\n   for specific registry service needs.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Use of XML . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n       1.2.  General Concepts . . . . . . . . . . . . . . . .\
    \ . . . .  3\n       1.3.  Framework Layers . . . . . . . . . . . . . . . . .\
    \ . . .  4\n       1.4.  Definitions  . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n       1.5.  Further Reading  . . . . . . . . . . . . . . . . . . .\
    \ .  5\n   2.  Document Terminology . . . . . . . . . . . . . . . . . . . . .\
    \  5\n   3.  Protocol Identification  . . . . . . . . . . . . . . . . . . .  5\n\
    \   4.  Exchange Description . . . . . . . . . . . . . . . . . . . . .  6\n  \
    \     4.1.  Request Format . . . . . . . . . . . . . . . . . . . . .  6\n    \
    \   4.2.  Response Format  . . . . . . . . . . . . . . . . . . . .  6\n      \
    \ 4.3.  Extension Framework  . . . . . . . . . . . . . . . . . .  9\n        \
    \     4.3.1.  Derived Elements . . . . . . . . . . . . . . . .  9\n          \
    \   4.3.2.  Registry Type Identifier Requirements  . . . . . 10\n            \
    \ 4.3.3.  Entity Classes . . . . . . . . . . . . . . . . . 10\n             4.3.4.\
    \  Names of Entities  . . . . . . . . . . . . . . . 11\n             4.3.5.  References\
    \ to Entities . . . . . . . . . . . . . 11\n             4.3.6.  Temporary Entities\
    \ . . . . . . . . . . . . . . . 12\n             4.3.7.  <result> Derived Elements\
    \  . . . . . . . . . . . 13\n             4.3.8.  <control> and <reaction> Elements\
    \  . . . . . . . 16\n       4.4.  Relay Bags . . . . . . . . . . . . . . . . .\
    \ . . . . . . 18\n   5.  Database Serialization . . . . . . . . . . . . . . .\
    \ . . . . . 19\n   6.  Formal XML Syntax  . . . . . . . . . . . . . . . . . .\
    \ . . . . 22\n   7.  The IRIS URI . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 37\n       7.1.  URI Definition . . . . . . . . . . . . . . . . . . .\
    \ . . 37\n       7.2.  Transport Specific Schemes . . . . . . . . . . . . . .\
    \ . 38\n       7.3.  URI Resolution . . . . . . . . . . . . . . . . . . . . .\
    \ 38\n             7.3.1.  Registry Dependent Resolution  . . . . . . . . . 38\n\
    \             7.3.2.  Direct Resolution  . . . . . . . . . . . . . . . 39\n  \
    \           7.3.3.  Transport and Service Location . . . . . . . . . 39\n    \
    \   7.4.  IRIS URI Examples  . . . . . . . . . . . . . . . . . . . 40\n   8. \
    \ Checklists . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n       8.1.\
    \  Registry Definition Checklist  . . . . . . . . . . . . . 41\n       8.2.  Transport\
    \ Mapping Checklist  . . . . . . . . . . . . . . 42\n   9.  Internationalization\
    \ Considerations  . . . . . . . . . . . . . 42\n   10. IANA Considerations  .\
    \ . . . . . . . . . . . . . . . . . . . . 43\n   11. Security Considerations \
    \ . . . . . . . . . . . . . . . . . . . 43\n   12. References . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 43\n       12.1. Normative References .\
    \ . . . . . . . . . . . . . . . . . 43\n       12.2. Informative References .\
    \ . . . . . . . . . . . . . . . . 45\n   A.  S-NAPTR and IRIS Uses  . . . . .\
    \ . . . . . . . . . . . . . . . 46\n       A.1.  Examples of S-NAPTR with IRIS.\
    \ . . . . . . . . . . . . . 46\n       A.2.  Using S-NAPTR for Cohabitation .\
    \ . . . . . . . . . . . . 47\n   B.  IRIS Design Philosophy . . . . . . . . .\
    \ . . . . . . . . . . . 48\n       B.1.  The Basic Premise  . . . . . . . . .\
    \ . . . . . . . . . . 48\n       B.2.  The Lure of a Universal Client . . . .\
    \ . . . . . . . . . 49\n       B.3.  Server Considerations  . . . . . . . . .\
    \ . . . . . . . . 49\n       B.4.  Lookups, Searches, and Entity Classes  . .\
    \ . . . . . . . 50\n       B.5.  Entities References, Search Continuations, and\
    \ Scope . . 50\n   C.  Acknowledgments  . . . . . . . . . . . . . . . . . . .\
    \ . . . . 51\n   Authors' Addresses . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 51\n   Full Copyright Statement . . . . . . . . . . . . . . . . . . .\
    \ . . 52\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The specification outlined in this document is based on\
    \ the\n   functional requirements described in CRISP [17].\n"
- title: 1.1.  Use of XML
  contents:
  - "1.1.  Use of XML\n   This document describes the specification for the Internet\
    \ Registry\n   Information Service (IRIS), an XML text protocol intended to describe\n\
    \   the query types and result types of various registry information\n   services.\
    \  IRIS is specified by using the Extensible Markup Language\n   (XML) 1.0 as\
    \ described in [2], XML Schema notation as described in\n   [4] and [5], and XML\
    \ Namespaces as described in [3].\n"
- title: 1.2.  General Concepts
  contents:
  - "1.2.  General Concepts\n   Each kind of Internet registry is identified by a\
    \ registry type.  The\n   identifier for a registry type is a Uniform Resource\
    \ Name (URN) used\n   within the XML instances to identify the XML schema that\
    \ formally\n   describes the set of queries, results, and entity classes allowed\n\
    \   within that type of registry.\n   The structure of these URNs makes no assumptions\
    \ or restrictions on\n   the types of registries they identify.  Therefore, IRIS\
    \ may support\n   multiple registry types of a disparate or similar nature; it\
    \ is only\n   a matter of definition.  For instance, a single registry type may\
    \ be\n   defined for domain name registries, and multiple registry types for\n\
    \   the various IP address registries.\n   A registry information server may handle\
    \ queries and serve results\n   for multiple registry types.  Each registry type\
    \ that a particular\n   registry operator serves is a registry service instance.\n\
    \   IRIS and the XML schema formally describing IRIS do not specify any\n   registry,\
    \ registry identifier, or knowledge of a particular service\n   instance or set\
    \ of instances.  IRIS is a specification for a\n   framework with which these\
    \ registries can be defined, used and, in\n   some cases, interoperate.  The framework\
    \ merely specifies the\n   elements for registry identification and the elements\
    \ that must be\n   used to derive queries and results.\n   This framework allows\
    \ a registry type to define its own structure for\n   naming, entities, queries,\
    \ etc., through the use of XML namespaces\n   and XML schemas (hence, a registry\
    \ type MUST be identified by the\n   same URI that identifies its XML namespace).\
    \  To be compliant, a\n   registry type's specification must extend from this\
    \ framework.\n   The framework defines certain structures that can be common to\
    \ all\n   registry types, such as references to entities, search continuations,\n\
    \   and entity classes.  A registry type may declare its own definitions\n   for\
    \ all of these, or it may mix its derived definitions with the base\n   definitions.\n\
    \   IRIS defines two types of referrals: an entity reference and a search\n  \
    \ continuation.  An entity reference indicates specific knowledge about\n   an\
    \ individual entity, and a search continuation allows distributed\n   searches.\
    \  Both referrals may span differing registry types and\n   instances.  No assumptions\
    \ or specifications are made about the\n   roots, bases, or meshes of entities.\n"
- title: 1.3.  Framework Layers
  contents:
  - "1.3.  Framework Layers\n   The IRIS framework can be thought of as having three\
    \ layers.\n                             -----------------------------\n      \
    \    Registry-Specific  |domain | address  | etc... |\n                      \
    \       -----------------------------\n            Common-Registry  |        \
    \  IRIS             |\n                             -----------------------------\n\
    \      Application-Transport  | beep  | iris-lwz | etc... |\n                \
    \             -----------------------------\n   In this figure, \"beep\" refers\
    \ to the Blocks Extensible Exchange\n   Protocol (BEEP) (see [20]), and \"iris-lwz\"\
    \ refers to a theoretical\n   UDP binding that uses compression.\n   The differing\
    \ layers have the following responsibilities:\n      Registry-Specific :: defines\
    \ queries, results, and entity classes\n      of a specific type of registry.\
    \  Each specific type of registry is\n      identified by a URN.\n      Common-Registry\
    \ :: defines base operations and semantics common to\n      all registry types\
    \ such as search sets, result sets, and\n      referrals.  It also defines the\
    \ syntaxes for talking about\n      specific registry types.\n      Application-Transport\
    \ :: defines the mechanisms for\n      authentication, message passing, connection\
    \ and session\n      management, etc.  It also defines the URI syntax specific\
    \ to the\n      application-transport mechanism.\n"
- title: 1.4.  Definitions
  contents:
  - "1.4.  Definitions\n   For clarity, the following definitions are supplied:\n\
    \   o  registry type -- A registry serving a specific function, such as a\n  \
    \    domain registry or an address registry.  Each type of registry is\n     \
    \ assigned a URN.\n   o  registry schema -- The definition for a registry type\
    \ specifying\n      the queries, results, and entity classes.\n   o  authority\
    \ -- A reference to the server or set of servers\n      containing information.\n\
    \   o  resolution method -- The technique used to locate an authority.\n   o \
    \ entity class -- A group of entities with a common type or common\n      set\
    \ of characteristics.\n   o  entity name -- The identifier used to refer to a\
    \ single entity\n      within an entity class.\n   o  entity reference -- A pointer\
    \ to an entity composed of an\n      authority, an optional resolution method,\
    \ a registry type, an\n      entity class, and an entity name.  One type of entity\
    \ reference is\n      the IRIS URI (defined in Section 7).\n   The terms \"derivative\"\
    , \"derive\", and \"derivation\" are used with the\n   same meaning for deriving\
    \ one type of element from another as\n   specified in XML_SS [5].\n"
- title: 1.5.  Further Reading
  contents:
  - "1.5.  Further Reading\n   Appendix B contains text answering the question, \"\
    Why IRIS?\".\n   This document describes the structure at the core of IRIS.  The\n\
    \   following documents describe the other aspects of IRIS relevant to\n   CRISP\
    \ [17]: iris-beep [1] and iris-dreg [18].\n"
- title: 2.  Document Terminology
  contents:
  - "2.  Document Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119 [8].\n"
- title: 3.  Protocol Identification
  contents:
  - "3.  Protocol Identification\n   The root element of all request XML instances\
    \ MUST be <request>.  The\n   root element of all response XML instances MUST\
    \ be <response>.  These\n   elements identify the start of the IRIS elements,\
    \ the XML namespace\n   used as the identifier for IRIS, and, optionally, the\
    \ location of the\n   schema.  These elements and the associated closing tag MUST\
    \ be\n   applied to all requests and responses sent by both clients and\n   servers.\n\
    \   The use of the schema location attribute 'xsi:schemaLocation' is\n   OPTIONAL\
    \ with respect to this specification, and IRIS implementations\n   MAY resolve\
    \ it to retrieve the schema or MAY use a locally cached\n   version of the schema.\n\
    \   Versioning of the IRIS protocol is the responsibility of the\n   application-transport\
    \ layer but MUST be associated with the XML\n   namespace [3] URI representing\
    \ IRIS.  A change in this URI indicates\n   a change of the underlying schema\
    \ and, therefore, a new version of\n   the protocol (and vice versa).\n"
- title: 4.  Exchange Description
  contents:
  - "4.  Exchange Description\n   This section describes the request and response\
    \ exchanges of the\n   protocol.  The descriptions contained within this section\
    \ refer to\n   XML elements and attributes and their relation to the exchange\
    \ of\n   data within the protocol.  These descriptions also contain\n   specifications\
    \ outside the scope of the formal XML syntax.\n   Therefore, this section will\
    \ use terms defined by RFC 2119 [8] to\n   describe the specification outside\
    \ the scope of the formal XML\n   syntax.  While reading this section, please\
    \ reference Section 6 for\n   details on the formal XML syntax.\n"
- title: 4.1.  Request Format
  contents:
  - "4.1.  Request Format\n   A <request> element contains an optional <control> element\
    \ and a set\n   of <searchSet> elements.\n   The <searchSet> elements enable a\
    \ client to query a particular\n   registry type by using the URN identifying\
    \ the registry type.  This\n   can be found in one of its two children: <lookupEntity>\
    \ and <query>.\n   The <lookupEntity> element describes the lookup of an entity\
    \ in a\n   specific registry.  This element has three attributes:\n   'registryType',\
    \ 'entityClass', and 'entityName'.  The 'registryType'\n   attribute contains\
    \ the registry identifier for the registry type in\n   which the lookup operation\
    \ will take place.  The 'entityClass'\n   attribute contains the token identifying\
    \ the index for which the\n   lookup operation will take place, and the 'entityName'\
    \ attribute\n   contains the name of the entity to look up.\n   The <query> element\
    \ is abstract and may not legally appear in an XML\n   instance.  It provides\
    \ the base type that registry schemas will use\n   to define derived query types.\
    \  This derivation mechanism is\n   described in Section 4.3.\n   Each <searchSet>\
    \ may also contain a <bag> element.  When this element\n   appears as a child\
    \ of <searchSet>, it MUST NOT contain the 'id'\n   attribute.  For a description\
    \ of the <bag> element, see Section 4.4.\n   The <control> element may contain\
    \ one child element of any XML\n   namespace.  This child element allows a client\
    \ to signal a server for\n   special states or processing.  An example of one\
    \ such <control> child\n   element may be found in Section 4.3.8.\n"
- title: 4.2.  Response Format
  contents:
  - "4.2.  Response Format\n   The <response> element contains an optional <reaction>\
    \ element, a set\n   of <resultSet> elements, and an optional <bags> element.\n\
    \   The <resultSet> elements are responses to a <searchSet> request.  The\n  \
    \ contents of this element contain an <answer> element, an optional\n   <additional>\
    \ element, and error elements, if applicable.\n   The children of the <answer>\
    \ element are of the following types:\n   o  <result> is an abstract element and\
    \ may not be legally placed in\n      an XML instance.  It provides the base type\
    \ to be used by registry\n      schemas to define derived result types.  This\
    \ derivation mechanism\n      is described in Section 4.3.\n   o  <entity> is\
    \ an element specifying an entity reference.  See\n      Section 4.3.5.\n   o\
    \  The <searchContinuation> element specifies a query referral.  Its\n      one\
    \ child is any element derived from <query> (see Section 4.3.1).\n      To direct\
    \ the query to a referent server, <searchContinuation> has\n      a mandatory\
    \ 'authority' attribute and an optional 'resolution'\n      attribute.  The <searchContinuation>\
    \ element may also contain a\n      'bagRef' attribute.  For a description of\
    \ the 'bagRef' attribute,\n      see Section 4.4.\n   When following entity references\
    \ and search continuations, clients\n   SHOULD only follow an <entity> or <searchContinuation>\
    \ response once.\n   Failure to do so may result in the client process getting\
    \ stuck in a\n   never-ending query loop, commonly known as a referral loop.\n\
    \   The <additional> element only contains <result> elements, as\n   described\
    \ above.  This element allows a server to indicate to a\n   client results that\
    \ were not specifically queried but that are\n   related to the queried results,\
    \ thus enabling the client to display\n   this distinction to a user properly.\
    \  The <additional> element use is\n   optional.\n   The following elements, which\
    \ represent error conditions, may be\n   returned:\n   o  <insufficientResources>\
    \ -- The corresponding query requires\n      resources unobtainable by the server.\n\
    \   o  <invalidName> -- A name given in a query is not syntactically\n      correct.\n\
    \   o  <invalidSearch> -- Parameters of the corresponding query are not\n    \
    \  semantically meaningful.\n   o  <queryNotSupported> -- The corresponding query\
    \ is not supported by\n      this server.\n   o  <limitExceeded> -- The corresponding\
    \ query requires more resources\n      than allowed.\n   o  <nameNotFound> --\
    \ The name given in a query does not match a known\n      entity.\n   o  <permissionDenied>\
    \ -- The authentication given does not allow\n      access to a specific result\
    \ entry.\n   o  <bagUnrecognized> -- The contents of a bag were unrecognized.\
    \  See\n      Section 4.4.\n   o  <bagUnacceptable> -- The contents of a bag were\
    \ not and never will\n      be acceptable.  See Section 4.4.\n   o  <bagRefused>\
    \ -- The contents of a bag were not acceptable at this\n      time.  See Section\
    \ 4.4.\n   o  A derivative of <genericCode>, as described in Section 4.3.\n  \
    \ The <resultSet> section is divided into the <answer> and <additional>\n   sections\
    \ to allow easier processing and navigation of the results by\n   a client.  Servers\
    \ MUST return the direct answers to queries in the\n   <answer> element and MAY\
    \ return results in the <additional> element\n   for which a reference has been\
    \ made in the <answer> element.  Results\n   in the <additional> element MUST\
    \ have been referenced in the\n   <answer>, either as direct children of the <answer>\
    \ element or as\n   deeper descendants of the <answer> element.\n   This serves\
    \ two purposes.  First, it may eliminate a requery by the\n   client for references\
    \ contained in the <answer> element.  Second, it\n   distinguishes between results\
    \ that are a direct result of a query and\n   those that would have been returned\
    \ had the client followed the\n   appropriate referrals, thus hinting how clients\
    \ could process or\n   display the returned results.  For instance, clients constructing\n\
    \   complex displays with tree navigation widgets will know that results\n   in\
    \ the <answer> element should all be directly beneath the root node\n   of the\
    \ tree, while results in the <additional> element are leaf nodes\n   of those\
    \ produced from the <answer> element.\n   A <reaction> element (child of <response>)\
    \ is a response to a\n   <control> element, and provides a means for a server\
    \ to advise a\n   client of the effect of a <control> element.\n   The <bags>\
    \ element (child of <response>) is optional.  It contains\n   <bag> elements,\
    \ and the contents of each <bag> element constitute one\n   element in any XML\
    \ namespace.  Each <bag> element has an 'id'\n   attribute, which is referenced\
    \ by the 'bagRef' attribute of entity\n   references (<entity>) and search continuations\n\
    \   (<searchContinuation>).  See Section 4.4.\n"
- title: 4.3.  Extension Framework
  contents:
  - "4.3.  Extension Framework\n   Because the IRIS schema defines only one query\
    \ type, and two stand-\n   alone result types, and does not define a registry\
    \ structure, it is\n   of limited use by itself.  Extension of IRIS is accomplished\
    \ through\n   the use of a base IRIS schema, as defined in XML_SD [4] and XML_SS\n\
    \   [5], and through extension of it by schemas constructed on top of\n   IRIS.\n"
- title: 4.3.1.  Derived Elements
  contents:
  - "4.3.1.  Derived Elements\n   The XML Schema definition of IRIS requires schemas\
    \ of registry types\n   to derive element types from base types in the IRIS definition.\
    \  The\n   registry schemas MUST derive elements to define typed queries and\n\
    \   results.\n   While the IRIS schema definition does not prohibit the derivation\
    \ of\n   any elements, registry schemas SHOULD restrict the derivations to the\n\
    \   following types:\n   o  <query> -- As defined, this element contains no content\
    \ and has no\n      valid attributes.  It is abstract and therefore only its\n\
    \      derivatives appear in XML instances.  Registry schemas derive from\n  \
    \    this element to define the queries allowed.\n   o  <result> -- As defined,\
    \ this element contains no content and has\n      five valid attributes: 'authority',\
    \ 'resolution' (optional),\n      'registryType', 'entityClass', 'entityName',\
    \ and\n      'temporaryReference' (optional, see Section 4.3.6).  It is\n    \
    \  abstract and therefore only its derivatives appear in XML\n      instances.\
    \  Registry schemas derive from this element to define\n      results that may\
    \ be returned from a query.\n   o  <genericCode> -- As defined, this element is\
    \ an instance of\n      <codeType>.  It contains the optional elements <explanation>\
    \ and\n      <language>, which further describe the nature of the error.\n   o\
    \  <entity> -- Identifies a reference to an entity.  Registry schemas\n      SHOULD\
    \ use elements derived from <entity> but MAY use <entity>\n      directly.  The\
    \ advantage of deriving from <entity> vs. direct use\n      is the chance to define\
    \ the name of the element and to use that\n      name descriptively -- for instance,\
    \ as the role the entity plays\n      with respect to another entity.  See Section\
    \ 4.3.5.\n   o  <seeAlso> -- Indicates a reference to an entity that has indirect\n\
    \      association with a parent element representing an entity.  This\n     \
    \ element is derived from the <entity> element (Section 4.3.5).\n      Registry\
    \ schemas MAY derive from this element or MAY use it\n      directly.\n"
- title: 4.3.2.  Registry Type Identifier Requirements
  contents:
  - "4.3.2.  Registry Type Identifier Requirements\n   The identifier for a registry\
    \ type and the XML namespace identifier\n   used by the XML Schema describing\
    \ the registry MUST be the same.\n   These identifiers MUST be restricted to a\
    \ URN [7] registered in the\n   'ns' class of the IANA registry governed by XML_URN\
    \ [9].  These\n   identifiers are case insensitive.\n   This is a restriction\
    \ on XML_NS [3], which specifies that an XML\n   namespace identifier is any valid\
    \ URI [6].\n   These identifiers MAY be abbreviated to the part following the\
    \ class\n   component and its separator of the URN.  For example, the full URN\n\
    \   \"urn:ietf:params:xml:ns:dreg1\" may be abbreviated to \"dreg1\".\n   In use\
    \ with IRIS, this abbreviation MUST NOT be used inside of XML\n   instances in\
    \ which the XML Schema [4] specifies the use of a URI for\n   schema identification\
    \ or where XML_NS [3] specifies the use of a URI\n   for XML namespace identification.\n"
- title: 4.3.3.  Entity Classes
  contents:
  - "4.3.3.  Entity Classes\n   IRIS provides entity classes to help avoid collisions\
    \ with entity\n   names within any given registry type.  Their specification in\
    \ queries\n   also allows server implementations to narrow search or lookup scopes\n\
    \   quickly to a single index.\n   For instance, the entity name \"192.0.2.0\"\
    \ might refer to separate\n   entities in the \"name-server\" and \"network\"\
    \ classes.  The entity\n   \"192.0.2.0\" in the \"name-server\" class may refer\
    \ to the name server\n   host that is also multi-homed by address 192.0.2.255\
    \ and known in DNS\n   as \"ns.example.com\", whereas the entity \"192.0.2.0\"\
    \ in the \"network\"\n   class may refer to the network 192.0.2/30.\n   IRIS defines\
    \ two default entity classes of \"local\" and \"iris\", which\n   MUST NOT be\
    \ redefined.  These entity classes MUST be valid in all\n   registry types.\n\
    \   The \"local\" class is reserved for entities defined locally by a\n   server\
    \ operator and does not denote any particular type of entity.  A\n   lookup in\
    \ this entity class MAY result in an entity reference or\n   search continuation.\
    \  For example, \"iris:dreg1//example.com/local/\n   myhosts\" may result in a\
    \ search continuation yielding the nameservers\n   for example.com.\n   The \"\
    iris\" class is reserved for entities specific to a particular\n   service instance.\
    \  It MUST contain the following entity names (see\n   Section 4.3.4):\n   o \
    \ \"id\", which yields a result of <serviceIdentification> (see\n      Section\
    \ 4.3.7.1).\n   o  \"limits\", which yields a result of <limits> (see Section\
    \ 4.3.7.2).\n      This entity class MAY contain other locally defined entities\
    \ as\n      well.\n   The names of entity classes in a registry schema are of\
    \ type token,\n   as defined by XML_SD [4].  Their case sensitivity MUST be defined\
    \ by\n   the definition of the registry type.  In general, they SHOULD be case\n\
    \   insensitive.\n"
- title: 4.3.4.  Names of Entities
  contents:
  - "4.3.4.  Names of Entities\n   The names of entities in a registry schema are\
    \ of type token, as\n   defined by XML_SD [4].\n   Names of entities SHOULD be\
    \ unique within an instance of any\n   particular entity class within a registry.\
    \  Two entities SHOULD NOT\n   have the same name, but a single entity MAY be\
    \ known by multiple\n   names.  In situations where a single name may result in\
    \ two entities,\n   the registry schema SHOULD make allowances by defining result\
    \ types\n   that contain entity references to both entities (e.g., \"example.com\"\
    \n   can refer to both the domain example.com and the host example.com).\n   However,\
    \ this type of conflict SHOULD generally be avoided by the\n   proper use of entity\
    \ classes.\n   The case sensitivity of entity names is dependent on the entity\
    \ class\n   in which they reside.  The definition of a registry type MUST specify\n\
    \   the case sensitivity for entity names.  A registry type MAY define\n   the\
    \ entity names of differing entity classes as having different case\n   sensitivity.\n"
- title: 4.3.5.  References to Entities
  contents:
  - "4.3.5.  References to Entities\n   The element <entity> allows references to\
    \ entities in result sets,\n   either as a direct child of <resultSet> or within\
    \ a more complex\n   structure deriving from <result>.  The <entity> element is\
    \ defined by\n   'entityType'.  Registry schemas SHOULD define elements derived\
    \ from\n   <entity> when referencing entities but may use the <entity> element\n\
    \   directly.  Deriving a new element allows a registry schema to use the\n  \
    \ name of the new element to signify the relationship the referenced\n   entity\
    \ has with the referrer.  A derivative of <entity> MUST NOT be\n   used as a substitute\
    \ when the <entity> element is declared (such as\n   in the <answer> section of\
    \ the <resultSet>).\n   The <entity> element (and elements of type 'entityType')\
    \ can have\n   child elements of <displayName> with an optional 'language'\n \
    \  attribute.  These are provided so that servers may provide clients\n   with\
    \ a more human-friendly description of the entity reference.  This\n   is often\
    \ useful to users navigating referral structures.\n   The <entity> element (and\
    \ its derivations) have the following\n   attributes:\n   o  'authority', 'resolution'\
    \ (optional), 'registryType',\n      'entityClass', and 'entityName' -- These\
    \ attributes specify where\n      the entity may be found.\n   o  'temporaryReference'\
    \ -- This attribute is optional.  See Section\n      4.3.6.\n   o  'referentType'\
    \ -- This attribute contains the expected type of the\n      entity being referenced\
    \ and may contain the word \"ANY\" or a\n      qualified XML name.  Unlike the\
    \ other attributes of <entity>, this\n      attribute is qualified and declared\
    \ in the IRIS XML namespace.\n      Therefore it will also be qualified with the\
    \ prefix associated\n      with the IRIS XML namespace (e.g., 'iris:referentType').\
    \  This\n      allows clients to recognize entity references using an element\n\
    \      derived from <entity>.\n   o  'bagRef' -- This attribute is optional. \
    \ If present, it must\n      contain an XML identifier to a <bag> element in the\
    \ <bags> section\n      of the result set.  For a description of the 'bagRef'\
    \ attribute,\n      see Section 4.4.\n"
- title: 4.3.6.  Temporary Entities
  contents:
  - "4.3.6.  Temporary Entities\n   Instances may exist in which an entity reference\
    \ needs to be\n   temporary.  For example, a particular type of result may only\
    \ have\n   one unique key.  If that key contains semantic meaning that may not\n\
    \   be exposed to all users, a synthetic key will have to be substituted.\n  \
    \ Furthermore, there may be times when data in the data store is not\n   normalized\
    \ in the same manner as that expressed by the registry\n   schema.  In the registry\
    \ schema, objects of type A may reference\n   objects of type B.  But in the data\
    \ store, objects of type A may\n   contain objects of type B.  Again, a synthetic\
    \ key will have to be\n   temporarily produced.\n   To support such use cases,\
    \ results and entity references can be\n   declared temporary by using the 'temporaryReference'\
    \ attribute.  This\n   attribute is of type boolean [4] and has a default value\
    \ of \"false\".\n   It is optional for <result> derivatives and elements of type\n\
    \   'entityType'.\n   When this attribute is used, the entity reference data (e.g.,\n\
    \   'entityClass', 'entityName') is only valid within the response in\n   which\
    \ it appears and may not be consistent with subsequent responses.\n   A server\
    \ MUST include the referent of any temporary entity reference\n   in the <additional>\
    \ section of the same <resultSet>\n"
- title: 4.3.7.  <result> Derived Elements
  contents:
  - "4.3.7.  <result> Derived Elements\n   The base IRIS framework contains three\
    \ elements directly derived from\n   the <result> element for use by any registry\
    \ type.\n"
- title: 4.3.7.1.  <serviceIdentification>
  contents:
  - "4.3.7.1.  <serviceIdentification>\n   An example of a <serviceIdentification>\
    \ result:\n   <serviceIdentification\n     authority=\"example.com\" registryType=\"\
    dreg1\"\n     entityClass=\"iris\"\n     entityName=\"id\" >\n     <authorities>\n\
    \       <authority> example.com </authority>\n       <authority> example.net </authority>\n\
    \       <authority> example.org </authority>\n     </authorities>\n     <operatorName>\n\
    \       Internet Assigned Numbers Authority\n     </operatorName>\n     <eMail>\n\
    \       iana@iana.org\n     </eMail>\n   </serviceIdentification>\n   The <serviceIdentification>\
    \ element is provided to allow IRIS clients\n   to reference IRIS service instances.\
    \  It contains the following\n   elements:\n   o  <authorities> -- This element\
    \ contains one or more <authority>\n      elements.  Each <authority> element\
    \ contains a URI authority\n      component for which the server has results.\
    \  Although a server MAY\n      only return a partial list of its authority areas,\
    \ depending on\n      operator policy, it MUST return the authority for which\
    \ the client\n      has requested.\n   o  <operatorName> -- This element contains\
    \ the name of the operator\n      of the server.\n   o  <eMail> -- These optional\
    \ elements contain email addresses of the\n      operator of the service instance.\n\
    \   o  <phone> -- These optional elements contain phone numbers of the\n     \
    \ operator of the service instance.\n   o  <seeAlso> -- See Section 4.3.1 for\
    \ its definition.\n"
- title: 4.3.7.2.  <limits>
  contents:
  - "4.3.7.2.  <limits>\n   An example of a <limits> result:\n   <limits\n     authority=\"\
    example.com\" registryType=\"dreg1\"\n     entityClass=\"iris\" entityName=\"\
    limits\">\n     <totalQueries>\n       <perHour>2</perHour>\n       <perDay>15</perDay>\n\
    \     </totalQueries>\n     <totalResults>\n       <perHour>25</perHour>\n   \
    \    <perDay>200</perDay>\n     </totalResults>\n     <totalSessions>\n      \
    \ <perHour>2</perHour>\n       <perDay>15</perDay>\n     </totalSessions>\n  \
    \ </limits>\n   The <limits> element provides a mechanism allowing a server to\
    \ inform\n   a client of the limits it may encounter from overuse of the service.\n\
    \   The contents describe the service limitations to a client at the\n   current\
    \ level of access.  The contents of this element are as\n   follows:\n   o  <totalQueries>\
    \ -- This element describes the total number of\n      queries that the server\
    \ will accept.  The children of this element\n      indicate this number per unit\
    \ of time.  The children are\n      <perSecond>, <perMinute>, <perHour>, and <perDay>.\
    \  Each child\n      MUST only appear once as a child of <totalQueries>, but more\
    \ than\n      one child MAY be present.  For example, a server could indicate\n\
    \      that it will accept 15 queries a minute but only 60 queries a day.\n  \
    \ o  <totalResults> -- This element describes the total number of\n      results\
    \ that the server will send to a client.  The children of\n      this element\
    \ indicate this number per unit of time in the same\n      manner as <totalQueries>.\n\
    \   o  <totalSessions> -- This element describes the total number of\n      sessions\
    \ that the server will accept from a client.  The children\n      of this element\
    \ indicate this number per unit of time in the same\n      manner as <totalQueries>.\
    \  The definition of a session is defined\n      the by application transport\
    \ layer.\n   o  <otherRestrictions> -- This element describes other restrictions\n\
    \      that may only be expressible outside of the structured syntax of\n    \
    \  the other child elements of <limits>.  This element may have\n      optional\
    \ <description> child elements, each with a mandatory\n      'language' attribute.\n\
    \   o  <seeAlso> -- These elements are provided to reference other\n      entities,\
    \ such as a <simpleEntity> (Section 4.3.7.3) describing a\n      published policy.\
    \  See <seeAlso> (Section 4.3.1).\n   All of these child elements are optional,\
    \ and a server may express\n   that it has no limits by using a <limits> element\
    \ with no content\n   (e.g., <limits authority=...  />).\n"
- title: 4.3.7.3.  <simpleEntity>
  contents:
  - "4.3.7.3.  <simpleEntity>\n   An example of a <simpleEntity> result:\n   <simpleEntity\n\
    \     authority=\"example.com\" registryType=\"dreg1\"\n     entityClass=\"local\"\
    \n     entityName=\"notice\" >\n     <property name=\"legal\" language=\"en\"\
    >\n       Example.com is reserved according to RFC 2606.\n     </property>\n \
    \  </simpleEntity>\n   The <simpleEntity> element is provided so that service\
    \ operators may\n   make simple additions to other entities without deriving entirely\
    \ new\n   registry types.  Its definition allows service operators to reference\n\
    \   it from other entities (using, for instance, a <seeAlso> element).\n   The\
    \ <simpleEntity> is meant to represent name and value pairs of\n   strings, allowing\
    \ each pair to be associated with a specific language\n   qualifier and an optional\
    \ URI pointing to more information.\n   Clients may easily display such information\
    \ in a two-column table.\n   Applications using binary data or richer data structures\
    \ are out of\n   scope for this element.  When such usage scenarios arise, a client\n\
    \   will likely need specific knowledge to handle such data, thus calling\n  \
    \ the need for a new registry type into question.\n"
- title: 4.3.8.  <control> and <reaction> Elements
  contents:
  - "4.3.8.  <control> and <reaction> Elements\n   The <control> (Section 4.1) and\
    \ <reaction> (Section 4.2) elements\n   allow the client to request from the server\
    \ special states for the\n   processing of queries.  The intent of these elements\
    \ is to allow\n   extensibility so that some jurisdictions may adopt policies\
    \ for query\n   processing without requiring re-versioning of IRIS or any registry\n\
    \   type.\n   This document defines one control, <onlyCheckPermissions>, and its\n\
    \   requisite reaction, <standardReaction>, for compliance with CRISP\n   [17].\n\
    \   When a client sends an <onlyCheckPermissions> control, it is only\n   asking\
    \ the server to check to see whether adequate permissions are\n   available to\
    \ execute the queries in the associated request.  A server\n   MUST respond to\
    \ this control with a <standardReaction> element.\n   The <standardReaction> element\
    \ provides a server with a standard\n   means to respond to controls (it may be\
    \ used by other controls, but\n   this is left to their definition).  It contains\
    \ four children:\n   o  <controlAccepted> -- the processing or state needed by\
    \ the control\n      has been accepted.\n   o  <controlDenied> -- the processing\
    \ or state needed by the control\n      has been denied (a transient failure).\n\
    \   o  <controlDisabled> -- the processing or state needed by the control\n  \
    \    cannot be activated (a permanent failure).\n   o  <controlUnrecognized> --\
    \ the control is not recognized (a\n      permanent failure).\n   If <onlyCheckPermissions>\
    \ is rejected, then the server MUST return\n   all appropriate result sets (i.e.,\
    \ for every search set in the\n   request), but all result sets MUST be empty\
    \ of results and MUST\n   contain no errors (a reaction is not part of a result\
    \ set and is\n   therefore not a result set error).  This control applies to all\n\
    \   search sets or none of them; therefore a server MUST issue a\n   rejection\
    \ if <onlyCheckPermissions> cannot be accepted for all search\n   sets in a request.\n\
    \   An example of an IRIS XML exchange using these elements follows:\n   C: <?xml\
    \ version=\"1.0\"?>\n   C: <request xmlns=\"urn:ietf:params:xml:ns:iris1\"\n \
    \  C:   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" >\n   C:\n   C:\
    \   <control>\n   C:     <onlyCheckPermissions />\n   C:   </control>\n   C:\n\
    \   C:   <searchSet>\n   C:\n   C:     <lookupEntity\n   C:       registryType=\"\
    dreg1\"\n   C:       entityClass=\"local\"\n   C:       entityName=\"AUP\" />\n\
    \   C:\n   C:   </searchSet>\n   C:\n   C: </request>\n   S: <?xml version=\"\
    1.0\"?>\n   S: <response xmlns=\"urn:ietf:params:xml:ns:iris1\"\n   S:       \
    \    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" >\n   S:\n   S: \
    \  <reaction>\n   S:     <standardReaction>\n   S:       <controlAccepted />\n\
    \   S:     </standardReaction>\n   S:   </reaction>\n   S:\n   S:   <resultSet>\n\
    \   S:     <answer>\n   S:\n   S:       <simpleEntity\n   S:         authority=\"\
    example.com\" registryType=\"dreg1\"\n   S:         entityClass=\"local\" entityName=\"\
    AUP\" >\n   S:         <property name=\"legal\" language=\"en\">\n   S:      \
    \     It is illegal to use information from this service\n   S:           for\
    \ the purposes of sending unsolicited bulk email.\n   S:         </property>\n\
    \   S:       </simpleEntity>\n   S:\n   S:     </answer>\n   S:   </resultSet>\n\
    \   S:\n   S: </response>\n"
- title: 4.4.  Relay Bags
  contents:
  - "4.4.  Relay Bags\n   IRIS employs bags to allow a server to relay information\
    \ to a\n   referent server via the client.  These bags are generated by the\n\
    \   queried server, passed to the client as opaque data, and then passed\n   to\
    \ the referent server for processing.  The contents of the bags are\n   not defined\
    \ by IRIS, and the client MUST NOT make any assumptions\n   about the contents\
    \ of a bag when relaying it from one server to\n   another.\n   When a server\
    \ returns a result set to a client, the <response>\n   element may contain a <bags>\
    \ child element.  This child element\n   contains one or more <bag> elements.\
    \  Each of these MUST contain an\n   'id' attribute containing the XML data type\
    \ ID.  Entity references\n   and search continuations that have to specify a bag\
    \ to be used when\n   they are followed MUST have a 'bagRef' attribute containing\
    \ the XML\n   data type IDREF.  See Section 4.2.  This allows the response to\n\
    \   specify a bag only once but allows each entity reference or search\n   continuation\
    \ (in all result sets) to have a distinct bag, as needed.\n   When following an\
    \ entity reference or search continuation that\n   specifies the use of a bag,\
    \ the client MUST include the referenced\n   bag in the search set as a child\
    \ of the <searchSet> element.  See\n   Section 4.1.\n   See Section 4.2 for the\
    \ list of errors a server may return to a\n   client when a bag is received. \
    \ A server MUST NOT ignore a bag when\n   it is received.  In case a bag cannot\
    \ be recognized or accepted, one\n   of the errors from Section 4.2 MUST be returned.\n\
    \   An example of an IRIS XML exchange using these elements follows:\n   C: <?xml\
    \ version=\"1.0\"?>\n   C: <request xmlns=\"urn:ietf:params:xml:ns:iris1\"\n \
    \  C:   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" >\n   C:\n   C:\
    \   <searchSet>\n   C:\n   C:     <bag>\n   C:       <simpleBag xmlns=\"http://example.com/\"\
    >\n   C:         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n   C:       </simpleBag>\n\
    \   C:     </bag>\n   C:\n   C:     <lookupEntity\n   C:       registryType=\"\
    dreg1\"\n   C:       entityClass=\"local\"\n   C:       entityName=\"AUP\" />\n\
    \   C:\n   C:   </searchSet>\n   C:\n   C: </request>\n   S: <?xml version=\"\
    1.0\"?>\n   S: <response xmlns=\"urn:ietf:params:xml:ns:iris1\"\n   S:       \
    \    xmlns:iris=\"urn:ietf:params:xml:ns:iris1\"\n   S:           xmlns:xsi=\"\
    http://www.w3.org/2001/XMLSchema-instance\" >\n   S:\n   S:   <resultSet>\n  \
    \ S:     <answer>\n   S:\n   S:       <entity authority=\"example.com\" bagRef=\"\
    x1\"\n   S:         registryType=\"dreg1\"\n   S:         entityClass=\"local\"\
    \ entityName=\"AUP\"\n   S:         iris:referentType=\"ANY\" >\n   S:       \
    \  <displayName language=\"en\">\n   S:           Acceptable Usage Policy\n  \
    \ S:         </displayName>\n   S:       </entity>\n   S:\n   S:     </answer>\n\
    \   S:   </resultSet>\n   S:\n   S:   <bags>\n   S:\n   S:     <bag id=\"x1\"\
    >\n   S:       <simpleBag xmlns=\"http://example.com/\">\n   S:         AAAAB3NzaC1yc2EAAAABIwAAAIEA0ddD+W3Agl0Lel98G1r77fZ\n\
    \   S:       </simpleBag>\n   S:     </bag>\n   S:\n   S:   </bags>\n   S: </response>\n"
- title: 5.  Database Serialization
  contents:
  - "5.  Database Serialization\n   This section describes a method for serializing\
    \ IRIS registry\n   entities.  The descriptions contained within this section\
    \ refer to\n   XML elements and attributes and their relation to this serialization\n\
    \   process.  These descriptions also contain specifications outside the\n   scope\
    \ of the formal XML syntax.  This section will use terms defined\n   by RFC 2119\
    \ [8] to describe these.  While reading this section,\n   please reference Section\
    \ 6 for needed details on the formal XML\n   syntax.\n   A database of IRIS entities\
    \ can be serialized to file storage with\n   XML [2] by using the IRIS defined\
    \ <serialization> element.  This\n   element contains <result> element derivatives\
    \ and\n   <serializedReferral> elements.\n   Derivatives of the <result> element\
    \ are entities.  Servers loading\n   these entities MUST place the entity in the\
    \ entity classes specified\n   by the elements 'registryType', 'entityClass',\
    \ and 'entityName'\n   attributes and in any entity classes the entities may apply\
    \ according\n   to explicitly defined children of that element.  For instance,\
    \ if a\n   registry type has two entity classes \"foo\" and \"bar\" and a <result>\n\
    \   derivative has the attributes entityClass=\"foo\" and entityName=\"one\"\n\
    \   and a child element <bar>two</bar>, the server is to enter that\n   entity\
    \ into the entity class \"foo\" as the name \"one\" and into the\n   entity class\
    \ \"bar\" as the name \"two\".\n   Servers loading entities as serialized derivatives\
    \ of the <result>\n   element MAY translate the authority attribute.  Servers\
    \ will likely\n   have to do this if the authority for the entity has changed.\n\
    \   <serializedReferral> elements allow the serialization of explicit\n   entity\
    \ references and search continuations.  This element has a child\n   <source>\
    \ element containing the 'authority', 'resolution' (optional),\n   'registryType',\
    \ 'entityClass', and 'entityName' attributes.  The\n   attributes of this element\
    \ are used to signify the entity that can be\n   referenced to yield this referral.\n\
    \   As mentioned above, there may be times when a server needs to\n   translate\
    \ the authority attribute of a loaded entity.\n   Implementations must also beware\
    \ of this need for referrals.  During\n   deserialization, servers MUST change\
    \ the authority attribute of a\n   referral (either <entity> or elements derived\
    \ from <entity> or\n   <source> child of <serializedReferral>) to contain a valid\
    \ authority\n   of the server if the serialized attribute is empty.  During\n\
    \   serialization, servers and their related processes MUST leave the\n   authority\
    \ attribute empty for referrals in which the referent is an\n   entity for which\
    \ the server answers queries.\n   The following is an example of serialized IRIS:\n\
    \   <iris:serialization\n     xmlns:iris=\"urn:ietf:params:xml:ns:iris1\"\n  \
    \   xmlns=\"urn:ietf:params:xml:ns:iris1\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
    >\n     <serviceIdentification\n       authority=\"iana.org\" registryType=\"\
    dreg1\"\n       entityClass=\"iris\"\n       entityName=\"id\" >\n       <authorities>\n\
    \         <authority> iana.org </authority>\n       </authorities>\n       <operatorName>\n\
    \         Internet Assigned Numbers Authority\n       </operatorName>\n      \
    \ <eMail>\n         dbarton@iana.org\n       </eMail>\n       <seeAlso\n     \
    \    iris:referentType=\"iris:simpleEntity\"\n         authority=\"iana.org\"\
    \ registryType=\"dreg1\"\n         entityClass=\"local\"\n         entityName=\"\
    notice\">\n         <displayName language=\"en\">\n           Legal Notice\n \
    \        </displayName>\n       </seeAlso>\n     </serviceIdentification>\n  \
    \   <serializedReferral>\n       <source\n         authority=\"example.com\" registryType=\"\
    dreg1\"\n         entityClass=\"iris\"\n         entityName=\"id\"/>\n       <entity\n\
    \         iris:referentType=\"iris:serviceIdentification\"\n         authority=\"\
    iana.org\" registryType=\"dreg1\"\n         entityClass=\"iris\" entityName=\"\
    id\"/>\n     </serializedReferral>\n     <simpleEntity\n       authority=\"iana.org\"\
    \ registryType=\"dreg1\"\n       entityClass=\"local\"\n       entityName=\"notice\"\
    \ >\n       <property name=\"legal\" language=\"en\">\n         Please use the\
    \ net wisely!\n       </property>\n     </simpleEntity>\n   </iris:serialization>\n"
- title: 6.  Formal XML Syntax
  contents:
  - "6.  Formal XML Syntax\n   IRIS is specified in XML Schema notation.  The formal\
    \ syntax\n   presented here is a complete schema representation of IRIS suitable\n\
    \   for automated validation of IRIS XML instances.\n   <?xml version=\"1.0\"\
    ?>\n   <schema xmlns=\"http://www.w3.org/2001/XMLSchema\"\n           xmlns:iris=\"\
    urn:ietf:params:xml:ns:iris1\"\n           targetNamespace=\"urn:ietf:params:xml:ns:iris1\"\
    \n           elementFormDefault=\"qualified\" >\n     <annotation>\n       <documentation>\n\
    \         Internet Registry Information Service (IRIS) Schema v1\n       </documentation>\n\
    \     </annotation>\n     <!-- ========================================= -->\n\
    \     <!--                                           -->\n     <!-- The Transactions\
    \                          -->\n     <!--                                    \
    \       -->\n     <!-- ========================================= -->\n     <element\
    \ name=\"request\">\n       <complexType>\n         <sequence>\n           <element\n\
    \             name=\"control\"\n             type=\"iris:controlType\"\n     \
    \        minOccurs=\"0\"\n             maxOccurs=\"1\" />\n           <element\n\
    \             name=\"searchSet\"\n             type=\"iris:searchSetType\"\n \
    \            minOccurs=\"1\"\n             maxOccurs=\"unbounded\" />\n      \
    \   </sequence>\n       </complexType>\n     </element>\n     <element name=\"\
    response\">\n       <complexType>\n         <sequence>\n           <element\n\
    \             name=\"reaction\"\n             type=\"iris:reactionType\"\n   \
    \          minOccurs=\"0\"\n             maxOccurs=\"1\" />\n           <element\n\
    \             name=\"resultSet\"\n             type=\"iris:resultSetType\"\n \
    \            minOccurs=\"1\"\n             maxOccurs=\"unbounded\" />\n      \
    \     <element\n             name=\"bags\"\n             type=\"iris:bagsType\"\
    \n             minOccurs=\"0\"\n             maxOccurs=\"1\" />\n         </sequence>\n\
    \       </complexType>\n     </element>\n     <!-- =========================================\
    \ -->\n     <!--                                           -->\n     <!-- Search\
    \ Sets and Result Sets               -->\n     <!--                          \
    \                 -->\n     <!-- ========================================= -->\n\
    \     <complexType\n       name=\"searchSetType\" >\n       <sequence>\n     \
    \    <element\n           name=\"bag\"\n           type=\"iris:bagType\"\n   \
    \        minOccurs=\"0\"\n           maxOccurs=\"1\" />\n         <choice>\n \
    \          <element\n             name=\"lookupEntity\"\n             type=\"\
    iris:lookupEntityType\" />\n           <element\n             ref=\"iris:query\"\
    \ />\n         </choice>\n       </sequence>\n     </complexType>\n     <complexType\n\
    \       name=\"resultSetType\" >\n       <sequence>\n         <element\n     \
    \      name=\"answer\"\n           minOccurs=\"1\"\n           maxOccurs=\"1\"\
    >\n           <complexType>\n             <sequence>\n               <element\n\
    \                 ref=\"iris:result\"\n                 minOccurs=\"0\"\n    \
    \             maxOccurs=\"unbounded\" />\n               <element\n          \
    \       ref=\"iris:entity\"\n                 minOccurs=\"0\"\n              \
    \   maxOccurs=\"unbounded\" />\n               <element\n                 ref=\"\
    iris:searchContinuation\"\n                 minOccurs=\"0\"\n                \
    \ maxOccurs=\"unbounded\" />\n             </sequence>\n           </complexType>\n\
    \         </element>\n         <element\n           name=\"additional\"\n    \
    \       minOccurs=\"0\"\n           maxOccurs=\"1\">\n           <complexType>\n\
    \             <sequence>\n               <element\n                 ref=\"iris:result\"\
    \n                 minOccurs=\"1\"\n                 maxOccurs=\"unbounded\" />\n\
    \             </sequence>\n           </complexType>\n         </element>\n  \
    \       <choice\n           minOccurs=\"0\"\n           maxOccurs=\"1\" >\n  \
    \         <element\n             name=\"insufficientResources\"\n            \
    \ type=\"iris:codeType\" />\n           <element\n             name=\"invalidName\"\
    \n             type=\"iris:codeType\" />\n           <element\n             name=\"\
    invalidSearch\"\n             type=\"iris:codeType\" />\n           <element\n\
    \             name=\"queryNotSupported\"\n             type=\"iris:codeType\"\
    \ />\n           <element\n             name=\"limitExceeded\"\n             type=\"\
    iris:codeType\" />\n           <element\n             name=\"nameNotFound\"\n\
    \             type=\"iris:codeType\" />\n           <element\n             name=\"\
    permissionDenied\"\n             type=\"iris:codeType\" />\n           <element\n\
    \             name=\"bagUnrecognized\"\n             type=\"iris:codeType\" />\n\
    \           <element\n             name=\"bagUnacceptable\"\n             type=\"\
    iris:codeType\" />\n           <element\n             name=\"bagRefused\"\n  \
    \           type=\"iris:codeType\" />\n           <element\n             ref=\"\
    iris:genericCode\"/>\n         </choice>\n       </sequence>\n     </complexType>\n\
    \     <!-- ========================================= -->\n     <!--          \
    \                                 -->\n     <!-- Controls and Reactions      \
    \              -->\n     <!--                                           -->\n\
    \     <!-- ========================================= -->\n     <complexType\n\
    \       name=\"controlType\">\n       <sequence>\n         <any\n           namespace=\"\
    ##any\"\n           processContents=\"skip\"\n           minOccurs=\"1\"\n   \
    \        maxOccurs=\"1\" />\n       </sequence>\n     </complexType>\n     <complexType\n\
    \       name=\"reactionType\">\n       <sequence>\n         <any\n           namespace=\"\
    ##any\"\n           processContents=\"skip\"\n           minOccurs=\"1\"\n   \
    \        maxOccurs=\"1\" />\n       </sequence>\n     </complexType>\n     <!--\
    \ ========================================= -->\n     <!--                   \
    \                        -->\n     <!-- Queries and Lookups                  \
    \     -->\n     <!--                                           -->\n     <!--\
    \ ========================================= -->\n     <complexType\n       name=\"\
    queryType\" />\n     <element\n       name=\"query\"\n       type=\"iris:queryType\"\
    \n       abstract=\"true\" />\n     <complexType\n       name=\"lookupEntityType\"\
    \ >\n       <attribute\n         name=\"registryType\"\n         type=\"anyURI\"\
    \n         use=\"required\" />\n       <attribute\n         name=\"entityClass\"\
    \n         type=\"token\"\n         use=\"required\" />\n       <attribute\n \
    \        name=\"entityName\"\n         type=\"token\"\n         use=\"required\"\
    \ />\n     </complexType>\n     <!-- =========================================\
    \ -->\n     <!--                                           -->\n     <!-- Results\
    \                                   -->\n     <!--                           \
    \                -->\n     <!-- ========================================= -->\n\
    \     <complexType\n       name=\"resultType\">\n       <attribute\n         name=\"\
    authority\"\n         use=\"required\"\n         type=\"token\" />\n       <attribute\n\
    \         name=\"resolution\"\n         type=\"token\" />\n       <attribute\n\
    \         name=\"registryType\"\n         use=\"required\"\n         type=\"anyURI\"\
    \ />\n       <attribute\n         name=\"entityClass\"\n         use=\"required\"\
    \n         type=\"token\" />\n       <attribute\n         name=\"entityName\"\n\
    \         use=\"required\"\n         type=\"token\" />\n       <attribute\n  \
    \       name=\"temporaryReference\"\n         default=\"false\"\n         type=\"\
    boolean\" />\n     </complexType>\n     <element\n       name=\"result\"\n   \
    \    type=\"iris:resultType\"\n       abstract=\"true\" />\n     <!-- =========================================\
    \ -->\n     <!--                                           -->\n     <!-- Errors\
    \                                    -->\n     <!--                          \
    \                 -->\n     <!-- ========================================= -->\n\
    \     <complexType\n       name=\"codeType\">\n       <sequence\n         minOccurs=\"\
    0\"\n         maxOccurs=\"unbounded\">\n         <element\n           name=\"\
    explanation\">\n           <complexType>\n             <simpleContent>\n     \
    \          <extension\n                 base=\"string\">\n                 <attribute\n\
    \                   use=\"required\"\n                   name=\"language\"\n \
    \                  type=\"language\" />\n               </extension>\n       \
    \      </simpleContent>\n           </complexType>\n         </element>\n    \
    \   </sequence>\n     </complexType>\n     <element\n       name=\"genericCode\"\
    \n       type=\"iris:codeType\"\n       abstract=\"true\" />\n     <!-- =========================================\
    \ -->\n     <!--                                           -->\n     <!-- Entity\
    \ References and                     -->\n     <!-- Search Continuations     \
    \                 -->\n     <!--                                           -->\n\
    \     <!-- ========================================= -->\n     <complexType\n\
    \       name=\"entityType\">\n       <sequence>\n         <element\n         \
    \  name=\"displayName\"\n           minOccurs=\"0\"\n           maxOccurs=\"unbounded\"\
    >\n           <complexType>\n             <simpleContent>\n               <extension\n\
    \                 base=\"string\">\n                 <attribute\n            \
    \       name=\"language\"\n                   use=\"required\"\n             \
    \      type=\"language\" />\n               </extension>\n             </simpleContent>\n\
    \           </complexType>\n         </element>\n       </sequence>\n       <attribute\n\
    \         name=\"authority\"\n         use=\"required\"\n         type=\"token\"\
    \ />\n       <attribute\n         name=\"resolution\"\n         type=\"token\"\
    \ />\n       <attribute\n         name=\"registryType\"\n         use=\"required\"\
    \n         type=\"anyURI\" />\n       <attribute\n         name=\"entityClass\"\
    \n         use=\"required\"\n         type=\"token\" />\n       <attribute\n \
    \        name=\"entityName\"\n         use=\"required\"\n         type=\"token\"\
    \ />\n       <attribute\n         name=\"referentType\"\n         use=\"required\"\
    \n         form=\"qualified\"\n         type=\"iris:referentTypeType\" />\n  \
    \     <attribute\n         name=\"temporaryReference\"\n         default=\"false\"\
    \n         type=\"boolean\" />\n       <attribute\n         name=\"bagRef\"\n\
    \         type=\"IDREF\" />\n     </complexType>\n     <element\n       name=\"\
    entity\"\n       type=\"iris:entityType\" />\n     <simpleType\n       name=\"\
    referentTypeType\">\n       <union\n         memberTypes=\"QName iris:anyLiteralType\"\
    \ />\n     </simpleType>\n     <simpleType\n       name=\"anyLiteralType\">\n\
    \       <restriction\n         base=\"string\">\n         <enumeration\n     \
    \      value=\"ANY\" />\n       </restriction>\n     </simpleType>\n     <complexType\n\
    \       name=\"searchContinuationType\">\n       <sequence>\n         <element\
    \ ref=\"iris:query\" />\n       </sequence>\n       <attribute\n         name=\"\
    bagRef\"\n         type=\"IDREF\" />\n       <attribute\n         name=\"authority\"\
    \n         type=\"token\"\n         use=\"required\" />\n       <attribute\n \
    \        name=\"resolution\"\n         type=\"token\" />\n     </complexType>\n\
    \     <element\n       name=\"searchContinuation\"\n       type=\"iris:searchContinuationType\"\
    \ />\n     <!-- ========================================= -->\n     <!--     \
    \                                      -->\n     <!-- Bags                   \
    \                   -->\n     <!--                                           -->\n\
    \     <!-- ========================================= -->\n     <complexType\n\
    \       name=\"bagsType\">\n       <sequence>\n         <element\n           name=\"\
    bag\"\n           minOccurs=\"1\"\n           maxOccurs=\"unbounded\">\n     \
    \      <complexType>\n             <complexContent>\n               <extension\n\
    \                 base=\"iris:bagType\">\n                 <attribute\n      \
    \             use=\"required\"\n                   name=\"id\"\n             \
    \      type=\"ID\" />\n               </extension>\n             </complexContent>\n\
    \           </complexType>\n         </element>\n       </sequence>\n     </complexType>\n\
    \     <complexType\n       name=\"bagType\">\n       <sequence>\n         <any\n\
    \           namespace=\"##any\"\n           processContents=\"skip\"\n       \
    \    minOccurs=\"1\"\n           maxOccurs=\"1\" />\n       </sequence>\n    \
    \ </complexType>\n     <!-- ========================================= -->\n  \
    \   <!--                                           -->\n     <!-- Derived Results\
    \ for use with all          -->\n     <!-- registry types.                   \
    \        -->\n     <!--                                           -->\n     <!--\
    \ ========================================= -->\n     <!--                   \
    \                        -->\n     <!-- See Also                             \
    \     -->\n     <!--                                           -->\n     <element\n\
    \       name=\"seeAlso\"\n       type=\"iris:entityType\" />\n     <!--      \
    \                                     -->\n     <!-- Service Identification  \
    \                  -->\n     <!--                                           -->\n\
    \     <complexType\n       name=\"serviceIdentificationType\">\n       <complexContent>\n\
    \         <extension\n           base=\"iris:resultType\">\n           <sequence>\n\
    \             <element\n               name=\"authorities\"\n               minOccurs=\"\
    1\"\n               maxOccurs=\"1\">\n               <complexType>\n         \
    \        <sequence>\n                   <element\n                     name=\"\
    authority\"\n                     type=\"token\"\n                     minOccurs=\"\
    1\"\n                     maxOccurs=\"unbounded\" />\n                 </sequence>\n\
    \               </complexType>\n             </element>\n             <element\n\
    \               name=\"operatorName\"\n               type=\"string\"\n      \
    \         minOccurs=\"0\"\n               maxOccurs=\"1\" />\n             <element\n\
    \               name=\"eMail\"\n               type=\"string\"\n             \
    \  minOccurs=\"0\"\n               maxOccurs=\"unbounded\" />\n             <element\n\
    \               name=\"phone\"\n               type=\"string\"\n             \
    \  minOccurs=\"0\"\n               maxOccurs=\"unbounded\" />\n             <element\n\
    \               ref=\"iris:seeAlso\"\n               minOccurs=\"0\"\n       \
    \        maxOccurs=\"unbounded\" />\n           </sequence>\n         </extension>\n\
    \       </complexContent>\n     </complexType>\n     <element\n       name=\"\
    serviceIdentification\"\n       type=\"iris:serviceIdentificationType\"\n    \
    \   substitutionGroup=\"iris:result\" />\n     <!--                          \
    \                 -->\n     <!-- Limits                                    -->\n\
    \     <!--                                           -->\n     <complexType\n\
    \       name=\"limitsType\">\n       <complexContent>\n         <extension\n \
    \          base=\"iris:resultType\">\n           <sequence>\n             <element\n\
    \               name=\"totalQueries\"\n               minOccurs=\"0\"\n      \
    \         maxOccurs=\"1\" >\n               <complexType>\n                 <group\n\
    \                   ref=\"iris:timeLimitsGroup\"\n                   minOccurs=\"\
    1\"\n                   maxOccurs=\"4\" />\n               </complexType>\n  \
    \           </element>\n             <element\n               name=\"totalResults\"\
    \n               minOccurs=\"0\"\n               maxOccurs=\"1\" >\n         \
    \      <complexType>\n                 <group\n                   ref=\"iris:timeLimitsGroup\"\
    \n                   minOccurs=\"1\"\n                   maxOccurs=\"4\" />\n\
    \               </complexType>\n             </element>\n             <element\n\
    \               name=\"totalSessions\"\n               minOccurs=\"0\"\n     \
    \          maxOccurs=\"1\" >\n               <complexType>\n                 <group\n\
    \                   ref=\"iris:timeLimitsGroup\"\n                   minOccurs=\"\
    1\"\n                   maxOccurs=\"4\" />\n               </complexType>\n  \
    \           </element>\n             <element\n               name=\"otherRestrictions\"\
    \n               minOccurs=\"0\"\n               maxOccurs=\"1\">\n          \
    \     <complexType>\n                 <sequence>\n                   <element\n\
    \                     name=\"description\"\n                     minOccurs=\"\
    0\"\n                     maxOccurs=\"unbounded\">\n                     <complexType>\n\
    \                       <simpleContent>\n                         <extension\n\
    \                           base=\"string\">\n                           <attribute\n\
    \                             name=\"language\"\n                            \
    \ type=\"language\"\n                             use=\"required\" />\n      \
    \                   </extension>\n                       </simpleContent>\n  \
    \                   </complexType>\n                   </element>\n          \
    \       </sequence>\n               </complexType>\n             </element>\n\
    \             <element\n               ref=\"iris:seeAlso\"\n               minOccurs=\"\
    0\"\n               maxOccurs=\"unbounded\" />\n           </sequence>\n     \
    \    </extension>\n       </complexContent>\n     </complexType>\n     <element\n\
    \       name=\"limits\"\n       type=\"iris:limitsType\"\n       substitutionGroup=\"\
    iris:result\" />\n     <group\n       name=\"timeLimitsGroup\">\n       <choice>\n\
    \         <element\n           name=\"perSecond\"\n           type=\"nonNegativeInteger\"\
    \ />\n         <element\n           name=\"perMinute\"\n           type=\"nonNegativeInteger\"\
    \ />\n         <element\n           name=\"perHour\"\n           type=\"nonNegativeInteger\"\
    \ />\n         <element\n           name=\"perDay\"\n           type=\"nonNegativeInteger\"\
    \ />\n       </choice>\n     </group>\n     <!--                             \
    \              -->\n     <!-- Simple Entity                             -->\n\
    \     <!--                                           -->\n     <complexType\n\
    \       name=\"simpleEntityType\">\n       <complexContent>\n         <extension\n\
    \           base=\"iris:resultType\">\n           <sequence>\n             <element\n\
    \               name=\"property\"\n               minOccurs=\"1\"\n          \
    \     maxOccurs=\"unbounded\">\n               <complexType>\n               \
    \  <simpleContent>\n                   <extension\n                     base=\"\
    string\">\n                     <attribute\n                       name=\"name\"\
    \n                       type=\"string\"\n                       use=\"required\"\
    \ />\n                     <attribute\n                       name=\"language\"\
    \n                       type=\"language\"\n                       use=\"required\"\
    \ />\n                     <attribute\n                       name=\"uri\"\n \
    \                      type=\"anyURI\" />\n                   </extension>\n \
    \                </simpleContent>\n               </complexType>\n           \
    \  </element>\n           </sequence>\n         </extension>\n       </complexContent>\n\
    \     </complexType>\n     <element\n       name=\"simpleEntity\"\n       type=\"\
    iris:simpleEntityType\"\n       substitutionGroup=\"iris:result\" />\n     <!--\
    \ ========================================= -->\n     <!--                   \
    \                        -->\n     <!-- Derived Controls and Reactions       \
    \     -->\n     <!--                                           -->\n     <!--\
    \ ========================================= -->\n     <!--                   \
    \                        -->\n     <!-- Only Check Permissions               \
    \     -->\n     <!--                                           -->\n     <element\n\
    \       name=\"onlyCheckPermissions\" >\n       <complexType />\n     </element>\n\
    \     <!--                                           -->\n     <!-- Standard Reaction\
    \                         -->\n     <!--                                     \
    \      -->\n     <element\n       name=\"standardReaction\" >\n       <complexType>\n\
    \         <choice>\n           <element\n             name=\"controlAccepted\"\
    >\n             <complexType/>\n           </element>\n           <element\n \
    \            name=\"controlDenied\">\n             <complexType/>\n          \
    \ </element>\n           <element\n             name=\"controlDisabled\">\n  \
    \           <complexType/>\n           </element>\n           <element\n     \
    \        name=\"controlUnrecognized\">\n             <complexType/>\n        \
    \   </element>\n         </choice>\n       </complexType>\n     </element>\n \
    \    <!-- ========================================= -->\n     <!--           \
    \                                -->\n     <!-- Serialization                \
    \             -->\n     <!--                                           -->\n \
    \    <!-- ========================================= -->\n     <complexType\n \
    \      name=\"serializedReferralType\">\n       <sequence>\n         <element\
    \ name=\"source\">\n           <complexType>\n             <attribute\n      \
    \         name=\"authority\"\n               use=\"required\"\n              \
    \ type=\"token\" />\n             <attribute\n               name=\"resolution\"\
    \n               type=\"token\" />\n             <attribute\n               name=\"\
    registryType\"\n               type=\"anyURI\"\n               use=\"required\"\
    \ />\n             <attribute\n               name=\"entityClass\"\n         \
    \      type=\"token\"\n               use=\"required\" />\n             <attribute\n\
    \               name=\"entityName\"\n               type=\"token\"\n         \
    \      use=\"required\" />\n           </complexType>\n         </element>\n \
    \        <choice>\n           <element\n             ref=\"iris:searchContinuation\"\
    \ />\n           <element\n             ref=\"iris:entity\" />\n         </choice>\n\
    \       </sequence>\n     </complexType>\n     <element\n       name=\"serialization\"\
    >\n       <complexType>\n         <choice\n           minOccurs=\"1\"\n      \
    \     maxOccurs=\"unbounded\">\n           <element\n             ref=\"iris:result\"\
    \ />\n           <element\n             name=\"serializedReferral\"\n        \
    \     type=\"iris:serializedReferralType\" />\n         </choice>\n       </complexType>\n\
    \     </element>\n   </schema>\n                                Figure 8\n"
- title: 7.  The IRIS URI
  contents:
  - "7.  The IRIS URI\n   The IRIS URI has a very rigid structure.  All IRIS URIs\
    \ have the same\n   fields and look similar to users.\n   But the IRIS URIs are\
    \ flexible because they allow different methods\n   to be employed to find servers\
    \ and allow the use of multiple\n   transports (with BEEP being the default).\n"
- title: 7.1.  URI Definition
  contents:
  - "7.1.  URI Definition\n   An IRIS URI [6] has the following general syntax.\n\
    \   iris:<registry>/<resolution>/<authority>/<class>/<name>\n   The full ABNF\
    \ [11] follows, with certain values included from RFC\n   2396 [6] and RFC 2732\
    \ [15].\n      iris-uri           = scheme \":\" registry-urn \"/\"\n        \
    \                   [ resolution-method ] \"/\" authority\n                  \
    \         [ \"/\" entity-class \"/\" entity-name ]\n      scheme             =\
    \ \"iris\"\n      authority          = // as specified by RFC2396\n      registry-urn\
    \       = // as specified by IRIS\n      resolution-method  = *(unreserved | escaped)\n\
    \      entity-class       = *(unreserved | escaped)\n      entity-name       \
    \ = *(unreserved | escaped)\n      unreserved         = // as specified by RFC2396\n\
    \      escaped            = // as specified by RFC2396\n   An IRIS URI MUST NOT\
    \ be a relative URI.  The resolution method,\n   entity class, and entity name\
    \ MUST be of the UTF-8 [12] character set\n   encoded with \"application/x-www-form-urlencoded\"\
    , as specified by\n   URL_ENC [14].\n   When the entity-class and entity-name\
    \ components are not specified,\n   the defaults \"iris\" and \"id\" MUST be implied.\
    \  For example,\n   \"iris:dreg1//com\" is interpreted as \"iris:dreg1//com/iris/id\"\
    .\n   When the resolution-method is not specified, the default is the\n   direct\
    \ resolution method described in Section 7.3.2.\n"
- title: 7.2.  Transport Specific Schemes
  contents:
  - "7.2.  Transport Specific Schemes\n   The \"iris\" scheme name is not application\
    \ transport specific.  The\n   URI resolution process MAY determine the application\
    \ transport.  An\n   example of such a process is direct resolution (Section 7.3.2),\
    \ which\n   uses the steps outlined in Section 7.3.3 to determine the application\n\
    \   transport.\n   A mapping between an application transport and IRIS MAY define\
    \ a\n   scheme name signifying its use with the semantics of the IRIS URI.\n \
    \  The rules for determining which application transport to use are as\n   follows:\n\
    \   o  If an application transport specific scheme name is present, the\n    \
    \  application transport it signifies SHOULD be used if possible.\n   o  If a\
    \ client has a preferred transport and the resolution process\n      allows for\
    \ its use, the client MAY use that application transport.\n   o  Otherwise, the\
    \ default application transport specified by IRIS-\n      BEEP [1] MUST be used.\n"
- title: 7.3.  URI Resolution
  contents:
  - '7.3.  URI Resolution

    '
- title: 7.3.1.  Registry Dependent Resolution
  contents:
  - "7.3.1.  Registry Dependent Resolution\n   Interpretation and resolution of the\
    \ authority component of an IRIS\n   URI may be altered with the specification\
    \ of a resolution-method in\n   the URI.  If no resolution-method component is\
    \ specified in the URI,\n   the default is the direct resolution method (see Section\
    \ 7.3.2).\n   Alternate resolution methods MAY be specified by registry types.\
    \  The\n   identifiers for these methods MUST conform to the ABNF in Section\n\
    \   7.1.\n"
- title: 7.3.2.  Direct Resolution
  contents:
  - "7.3.2.  Direct Resolution\n   In the direct resolution process, the authority\
    \ component of an IRIS\n   URI may only contain a domain name, a domain name accompanied\
    \ by a\n   port number, an IP address, or an IP address accompanied by a port\n\
    \   number.  The authority component of the scheme indicates the server\n   or\
    \ set of servers authoritatively responsible for a domain according\n   to records\
    \ in DNS (Section 7.3.3) if a domain is specified.  If an IP\n   address is specified,\
    \ it indicates the specific server to be queried.\n   The rules for resolution\
    \ are as follows:\n   o  If the authority component is a domain name accompanied\
    \ by a port\n      number as specified by RFC 2396, the domain name is converted\
    \ to\n      an IP address via an A or AAAA record to the DNS.\n   o  If the authority\
    \ component is a domain name by itself, the\n      service/transport location\
    \ (Section 7.3.3) process is used.  If\n      this process produces no results,\
    \ then the DNS is queried for the\n      A or AAAA RRs corresponding to the domain\
    \ name, and the port\n      number used is the well-known port of the transport\
    \ used according\n      to Section 7.2.\n   o  If the authority component is an\
    \ IP address, then the DNS is not\n      queried, and the IP address is used directly.\
    \  If the port number\n      is present, it is used directly; otherwise, the port\
    \ number used\n      is the well-known port of the transport used according to\
    \ Section\n      7.2.\n   The use of an IPv6 address in the authority component\
    \ MUST conform to\n   RFC 2732 [15].\n"
- title: 7.3.3.  Transport and Service Location
  contents:
  - "7.3.3.  Transport and Service Location\n   The direct resolution method (Section\
    \ 7.3.2) uses the profiled use of\n   the NAPTR and SRV resource records defined\
    \ in S-NAPTR [10] to\n   determine both the location of a set of servers for a\
    \ given service\n   and the set of possible transports that may be used.  It is\n\
    \   RECOMMENDED that any resolution method not making explicit use of the\n  \
    \ direct resolution process should use S-NAPTR [10] in whatever process\n   it\
    \ does define.\n   S-NAPTR [10] requires an application service label.  The direct\n\
    \   resolution method (Section 7.3.2) uses the abbreviated form of the\n   registry\
    \ URN as the application service label.  Other resolution\n   methods MAY specify\
    \ other application service labels.\n   See Appendix A for sample uses of S-NAPTR.\n"
- title: 7.4.  IRIS URI Examples
  contents:
  - "7.4.  IRIS URI Examples\n   Here are some examples of IRIS URIs and their meaning:\n\
    \   o  iris:dreg1//example.com/domain/example.com\n      *  Finds a server authoritative\
    \ for \"example.com\" according to the\n         rules of direct resolution (Section\
    \ 7.3.2).\n      *  The server is asked for \"example.com\" in the \"domain\"\
    \ index, or\n         entity class, of the \"dreg1\" registry.\n   o  iris:dreg1//example.com\n\
    \      *  Finds a server authoritative for \"example.com\" according to the\n\
    \         rules of direct resolution (Section 7.3.2).\n      *  The server is\
    \ asked for \"id\" in the \"iris\" index, or entity\n         class, of the \"\
    dreg1\" registry.\n   o  iris:dreg1//com/domain/example.com\n      *  Finds a\
    \ server authoritative for \"com\" according to the rules\n         of direct-resolution\
    \ (Section 7.3.2).\n      *  The server is asked for \"example.com\" in the \"\
    domain\" index, or\n         entity class, of the \"dreg1\" registry.\n   o  iris:dreg1//192.0.2.1:44/domain/example.com\n\
    \      *  Following the rules of direct-resolution (Section 7.3.2), the\n    \
    \     server at IP address 192.0.2.1 on port 44 is queried by using\n        \
    \ BEEP.\n      *  The server is asked for \"example.com\" in the \"domain\" index,\
    \ or\n         entity class, of the \"dreg1\" registry.\n   o  iris.lwz:dreg1//192.0.2.1:44/domain/example.com\n\
    \      *  Following the rules of direct-resolution (Section 7.3.2), the\n    \
    \     server at IP address 192.0.2.1 on port 44 is queried by using a\n      \
    \   lightweight application transport.\n      *  The server is asked for \"example.com\"\
    \ in the \"domain\" index, or\n         entity class, of the \"dreg1\" registry.\n\
    \   o  iris.beep:dreg1//com/domain/example.com\n      *  Finds a server authoritative\
    \ for \"com\" according to the rules\n         of direct-resolution (Section 7.3.2).\n\
    \      *  Uses the BEEP application transport.\n      *  The server is asked for\
    \ \"example.com\" in the \"domain\" index, or\n         entity class, of the \"\
    dreg1\" registry.\n   o  iris:dreg1/bottom/example.com/domain/example.com\n  \
    \    *  Finds a server authoritative for \"example.com\" according to the\n  \
    \       rules of the resolution method 'bottom' as defined by the\n         registry\
    \ type urn:ietf:params:xml:ns:dreg1.\n      *  The application transport used\
    \ is determined by the 'bottom'\n         resolution method.\n      *  The server\
    \ is asked for \"example.com\" in the \"domain\" index, or\n         entity class,\
    \ of the \"dreg1\" registry.\n   o  iris.beep:dreg1/bottom/example.com/domain/example.com\n\
    \      *  Finds a server authoritative for \"example.com\" according to the\n\
    \         rules of the resolution method 'bottom' as defined by the\n        \
    \ registry type urn:ietf:params:xml:ns:dreg1.\n      *  Uses the BEEP application\
    \ transport.\n      *  The server is asked for \"example.com\" in the \"domain\"\
    \ index, or\n         entity class, of the \"dreg1\" registry.\n"
- title: 8.  Checklists
  contents:
  - '8.  Checklists

    '
- title: 8.1.  Registry Definition Checklist
  contents:
  - "8.1.  Registry Definition Checklist\n   Specifications of registry types MUST\
    \ include the following explicit\n   definitions:\n   o  Formal XML syntax deriving\
    \ from the IRIS XML.\n   o  An identifying registry URN.\n   o  Any registry specific\
    \ resolution methods.\n   o  A registration of the abbreviated registry URN as\
    \ an application\n      service label for compliance with S-NAPTR [10].  Note\
    \ that this is\n      a different IANA registry than the registry type URN IANA\n\
    \      registry.\n   o  A list of well-known entity classes.\n   o  A statement\
    \ regarding the case sensitivity of the names in each\n      entity class.\n"
- title: 8.2.  Transport Mapping Checklist
  contents:
  - "8.2.  Transport Mapping Checklist\n   Specifications of transport mappings MUST\
    \ include the following\n   explicit definitions:\n   o  A URI scheme name specific\
    \ to the transport.\n   o  An application protocol label for compliance with S-NAPTR\
    \ [10].\n      See Section 7.3.3.  Note that although this is a different IANA\n\
    \      registry than the URI scheme name IANA registry, it is RECOMMENDED\n  \
    \    that they be the same string of characters.\n   o  The set of allowable character\
    \ set encodings for the exchange of\n      XML (see Section 9).\n   o  The set\
    \ of security mechanisms.\n"
- title: 9.  Internationalization Considerations
  contents:
  - "9.  Internationalization Considerations\n   IRIS is represented in XML.  XML\
    \ processors are obliged to recognize\n   both UTF-8 and UTF-16 [12] encodings.\
    \  XML provides for mechanisms to\n   identify and use other character encodings\
    \ by means of the \"encoding\"\n   attribute in the <xml> declaration.  Absence\
    \ of this attribute or a\n   byte order mark (BOM) indicates a default of UTF-8\
    \ [13] encoding.\n   Thus, for compatibility reasons and per RFC 2277 [16], use\
    \ of UTF-8\n   [13] is RECOMMENDED with IRIS.\n   The complete list of character\
    \ set encoding identifiers is maintained\n   by IANA at [21].\n   The application-transport\
    \ layer MUST define a common set of character\n   set encodings to be understood\
    \ by both client and server.\n   Localization of internationalized strings may\
    \ require additional\n   information from the client.  Entity definitions SHOULD\
    \ use the\n   \"language\" type defined by XML_SD [4] to aid clients in the\n\
    \   localization process.  See Section 4.3.7.3 for an example.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document uses a proposed XML namespace and\
    \ schema registry\n   specified in XML_URN [9].  Accordingly, the following registration\n\
    \   information is provided for the IANA:\n   o  URN/URI:\n      *  urn:ietf:params:xml:ns:iris1\n\
    \   o  Contact:\n      *  Andrew Newton <andy@hxr.us>\n      *  Marcos Sanz <sanz@denic.de>\n\
    \   o  XML:\n      *  The XML Schema specified in Section 6\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The IRIS XML layer provides no authentication\
    \ or privacy facilities\n   of its own.  It relies on the application-transport\
    \ layer for all of\n   these abilities.  Application-transports should explicitly\
    \ define\n   their security mechanisms (see Section 8.2).\n   Referral IRIS registry\
    \ results may contain entity lookups and search\n   continuations that result\
    \ in a client query operation against another\n   registry service.  Clients SHOULD\
    \ NOT use authentication credentials\n   and mechanisms subject to replay attacks\
    \ to conduct subsequent entity\n   lookups and search continuations.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [1]  Newton, A. and M. Sanz, \"Using the Internet\
    \ Registry Information\n        Service (IRIS) over the Blocks Extensible Exchange\
    \ Protocol\n        (BEEP)\", RFC 3983, January 2005.\n   [2]  World Wide Web\
    \ Consortium, \"Extensible Markup Language (XML)\n        1.0\", W3C XML, February\
    \ 1998, <http://www.w3.org/TR/1998/REC-\n        xml-19980210>.\n   [3]  World\
    \ Wide Web Consortium, \"Namespaces in XML\", W3C XML\n        Namespaces, January\
    \ 1999, <http://www.w3.org/TR/1999/REC-xml-\n        names-19990114>.\n   [4]\
    \  World Wide Web Consortium, \"XML Schema Part 2: Datatypes\", W3C\n        XML\
    \ Schema, October 2000, <http://www.w3.org/TR/2001/REC-\n        xmlschema-2-20010502/>.\n\
    \   [5]  World Wide Web Consortium, \"XML Schema Part 1: Structures\", W3C\n \
    \       XML Schema, October 2000, <http://www.w3.org/TR/2001/REC-\n        xmlschema-1-20010502/>.\n\
    \   [6]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n        Resource\
    \ Identifiers (URI): Generic Syntax\", RFC 2396, August\n        1998.\n   [7]\
    \  Moats, R., \"URN Syntax\", RFC 2141, May 1997.\n   [8]  Bradner, S., \"Key\
    \ words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [9]  Mealling, M., \"The IETF XML Registry\", BCP 81,\
    \ RFC 3688, January\n        2004.\n   [10] Daigle, L. and A. Newton, \"Domain-based\
    \ Application Service\n        Location Using SRV RRs and the Dynamic Delegation\
    \ Discovery\n        Service (DDDS)\", RFC 3958, January 2005.\n   [11] Crocker,\
    \ D. and P. Overell, \"Augmented BNF for Syntax\n        Specifications: ABNF\"\
    , RFC 2234, November 1997.\n   [12] The Unicode Consortium, \"The Unicode Standard,\
    \ Version 3\", ISBN\n        0-201-61633-5, 2000, <The Unicode Standard, Version\
    \ 3>.\n   [13] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD\n\
    \        63, RFC 3629, November 2003.\n   [14] Connolly, D. and L. Masinter, \"\
    The 'text/html' Media Type\", RFC\n        2854, June 2000.\n   [15] Hinden, R.,\
    \ Carpenter, B., and L. Masinter, \"Format for Literal\n        IPv6 Addresses\
    \ in URL's\", RFC 2732, December 1999.\n   [16] Alvestrand, H., \"IETF Policy\
    \ on Character Sets and Languages\",\n        BCP 18, RFC 2277, January 1998.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [17] Newton, A., \"Cross Registry Internet\
    \ Service Protocol (CRISP)\n        Requirements\", RFC 3707, February 2004.\n\
    \   [18] Newton, A. and M. Sanz, \"IRIS:  A Domain Registry (dreg) Type\n    \
    \    for the Internet Registry Information Service (IRIS)\", RFC 3982,\n     \
    \   January 2005.\n   [19] Daigle, L., \"WHOIS Protocol Specification\", RFC 3912,\
    \ September\n        2004.\n   [20] Rose, M., \"The Blocks Extensible Exchange\
    \ Protocol Core\", RFC\n        3080, March 2001.\n"
- title: URIs
  contents:
  - "URIs\n   [21] <http://www.iana.org/assignments/character-sets>\n"
- title: Appendix A.  S-NAPTR and IRIS Uses
  contents:
  - 'Appendix A.  S-NAPTR and IRIS Uses

    '
- title: A.1.  Example of S-NAPTR with IRIS
  contents:
  - "A.1.  Example of S-NAPTR with IRIS\n   This section shows an example of S-NAPTR\
    \ [10] use by IRIS.  In this\n   example, there are two registry types: REGA and\
    \ REGB.  There are also\n   two IRIS application transports: iris-a and iris-b.\
    \  Given this, the\n   use of S-NAPTR offers the following:\n   1. A means by\
    \ which an operator can split the set of servers running\n      REGA from the\
    \ set of servers running REGB.  This is to say, the\n      operator is able to\
    \ split out the set of servers serving up data\n      for REGA from the set of\
    \ servers serving up data for REGB.\n   2. A means by which an operator can distinguish\
    \ the set of servers\n      running iris-a from the set of servers running iris-b.\
    \  This is to\n      say, the operator is able to split out the set of servers\
    \ running\n      protocol iris-a serving REGA and REGB data from the set of servers\n\
    \      running protocol iris-b serving REGA and REGB data.\n   3. A means by which\
    \ an operator can specify which set of the servers\n      to operate and which\
    \ set of the above servers to delegate to\n      another operator.\n   To implement\
    \ the first feature, the operator deploys the following in\n   his or her DNS\
    \ zone:\n"
- title: example.com.
  contents:
  - 'example.com.

    '
- title: ;;        order  pref  flags service               re replacement
  contents:
  - ';;        order  pref  flags service               re replacement

    '
- title: IN NAPTR  100    10    ""    "REGA:iris-a:iris-b"  "" rega.example.com
  contents:
  - 'IN NAPTR  100    10    ""    "REGA:iris-a:iris-b"  "" rega.example.com

    '
- title: IN NAPTR  100    10    ""    "REGB:iris-a:iris-b"  "" regb.example.com
  contents:
  - "IN NAPTR  100    10    \"\"    \"REGB:iris-a:iris-b\"  \"\" regb.example.com\n\
    \   To implement the second feature, the operator then adds the following\n  \
    \ in their DNS zone:\n"
- title: rega.example.com.
  contents:
  - 'rega.example.com.

    '
- title: ;;        order  pref flags service        re  replacement
  contents:
  - ';;        order  pref flags service        re  replacement

    '
- title: IN NAPTR  100    10   "s"   "REGA:iris-a"  ""  _iris-a._udp.example.com
  contents:
  - 'IN NAPTR  100    10   "s"   "REGA:iris-a"  ""  _iris-a._udp.example.com

    '
- title: regb.example.com.
  contents:
  - 'regb.example.com.

    '
- title: IN NAPTR  100    10   "s"   "REGA:iris-b"  ""  _iris-b._tcp.example.com
  contents:
  - 'IN NAPTR  100    10   "s"   "REGA:iris-b"  ""  _iris-b._tcp.example.com

    '
- title: _iris-a._udp.example.com.
  contents:
  - '_iris-a._udp.example.com.

    '
- title: ;;        pref  weight port  target
  contents:
  - ';;        pref  weight port  target

    '
- title: IN SRV    10    0      34    big-a.example.com.
  contents:
  - 'IN SRV    10    0      34    big-a.example.com.

    '
- title: IN SRV    20    0      34    small-a.example.com.
  contents:
  - 'IN SRV    20    0      34    small-a.example.com.

    '
- title: _iris-b._tcp.example.com.
  contents:
  - '_iris-b._tcp.example.com.

    '
- title: ;;        pref  weight port  target
  contents:
  - ';;        pref  weight port  target

    '
- title: IN SRV    10    0      34    big-b.example.com.
  contents:
  - 'IN SRV    10    0      34    big-b.example.com.

    '
- title: IN SRV    20    0      34    small-b.example.com.
  contents:
  - "IN SRV    20    0      34    small-b.example.com.\n   Finally, an operator may\
    \ decide to operate the REGA services while\n   delegating the REGB services to\
    \ somebody else.  Here is how that is\n   done:\n"
- title: example.com.
  contents:
  - 'example.com.

    '
- title: ;;       order pref flags service              re replacement
  contents:
  - ';;       order pref flags service              re replacement

    '
- title: IN NAPTR 100   10   ""    "REGA:iris-a:iris-b" "" rega.example.com
  contents:
  - 'IN NAPTR 100   10   ""    "REGA:iris-a:iris-b" "" rega.example.com

    '
- title: IN NAPTR 100   10   ""    "REGB:iris-a:iris-b" "" somebodyelse.com
  contents:
  - "IN NAPTR 100   10   \"\"    \"REGB:iris-a:iris-b\" \"\" somebodyelse.com\n  \
    \ Or the operator may decide to operate REGB services under the iris-a\n   protocol/transport\
    \ while delegating the REGB services under the\n   iris-b protocol/transport to\
    \ somebody else.\n"
- title: example.com.
  contents:
  - 'example.com.

    '
- title: ;;       order pref flags service       re replacement
  contents:
  - ';;       order pref flags service       re replacement

    '
- title: IN NAPTR 100   10   ""    "REGB:iris-a:iris-b" "" regb.example.com
  contents:
  - 'IN NAPTR 100   10   ""    "REGB:iris-a:iris-b" "" regb.example.com

    '
- title: IN NAPTR 100   10   "s"   "REGB:iris-a" "" _iris-a._udp.example.com
  contents:
  - 'IN NAPTR 100   10   "s"   "REGB:iris-a" "" _iris-a._udp.example.com

    '
- title: IN NAPTR 100   10   "s"   "REGB:iris-b" "" _iris-b._tcp.somebodyelse.com
  contents:
  - 'IN NAPTR 100   10   "s"   "REGB:iris-b" "" _iris-b._tcp.somebodyelse.com

    '
- title: _iris-a._udp.example.com.
  contents:
  - '_iris-a._udp.example.com.

    '
- title: ;;        pref  weight port  target
  contents:
  - ';;        pref  weight port  target

    '
- title: IN SRV    10    0      34    big-a.example.com.
  contents:
  - 'IN SRV    10    0      34    big-a.example.com.

    '
- title: IN SRV    20    0      34    small-a.example.com.
  contents:
  - "IN SRV    20    0      34    small-a.example.com.\n   Note that while this last\
    \ example is possible, it is probably not\n   advisable because of the operational\
    \ issues involved in synchronizing\n   the data between example.com and somebodyelse.com.\
    \  It is provided\n   here as an example of what is possible.\n"
- title: A.2.  Using S-NAPTR for Cohabitation
  contents:
  - "A.2.  Using S-NAPTR for Cohabitation\n   Given the examples in Appendix A.1,\
    \ the use of S-NAPTR could be part\n   of a transition strategy for cohabitation\
    \ of protocols solving the\n   problems of CRISP [17].\n   For example, the type\
    \ of data for domain information could be given\n   the application service label\
    \ of \"DREG1\".  Given this, the service\n   field of an S-NAPTR compliant NAPTR\
    \ record could read\n      \"DREG1:whois:iris-beep\"\n   This service field conveys\
    \ that domain data, as defined by CRISP, is\n   available via both the iris-beep\
    \ protocol and the whois protocol.\n   The whois application protocol label refers\
    \ to RFC 954 [19].\n"
- title: Appendix B.  IRIS Design Philosophy
  contents:
  - "Appendix B.  IRIS Design Philosophy\n   Beyond the concrete arguments that could\
    \ be placed behind a\n   thoughtful analysis of the bits flying across the ether,\
    \ there are\n   other abstract reasons for the development of IRIS.  This section\n\
    \   attempts an explanation.\n"
- title: B.1.  The Basic Premise
  contents:
  - "B.1.  The Basic Premise\n   IRIS has been designed as a directory service for\
    \ public-facing\n   registries of Internet resources.  The basic premise is this:\n\
    \   o  A client should be able to look up any single piece of data from\n    \
    \  any type of registry.  This lookup should involve a straight-\n      forward\
    \ and consistent definition for finding the registry and\n      should entail\
    \ a hit to a single data index in the registry.\n   o  Anything more, such as\
    \ searches up and down the DNS tree to find\n      the registry or searches across\
    \ multiple indexes in a registry,\n      requires a client with special knowledge\
    \ of the data relationships\n      contained within a registry.\n   Therefore,\
    \ IRIS does the following:\n   o  It specifies the basic schema language used\
    \ by all registries to\n      specify their schemas.\n      o  It provides the\
    \ basic framework for a registry to make a\n      reference to an entity in another\
    \ type of registry.\n   And, therefore, IRIS does not do the following:\n   o\
    \  It does not specify a common query language across all types of\n      registries.\
    \  A common query language imposed across multiple types\n      of registries\
    \ usually results in the disabling of certain\n      functions by a server operator\
    \ in order to meet acceptable levels\n      of performance, leaving a common query\
    \ language that does not\n      commonly work.\n   o  It does not impose any relationship\
    \ between sets of data in any\n      type of registry, such as specifying a tree.\
    \  There are many types\n      of Internet resources, and they do not all share\
    \ the same style of\n      relationship with their contained sets of data.  When\
    \ it is not a\n      natural fit, an imposition of a common relationship is often\
    \ a\n      concern and not a benefit.\n"
- title: B.2.  The Lure of a Universal Client
  contents:
  - "B.2.  The Lure of a Universal Client\n   The design premise of IRIS signifies\
    \ that, for directory services,\n   there is no such thing as a universal client\
    \ (or that if there is\n   one, it is commonly called the \"web browser\").\n\
    \   For IRIS, the closest thing to a universal client is one that may\n   \"look\
    \ up\" data and may be able to display the data in a rudimentary\n   fashion.\
    \  For a client to be able to \"search\" data or display it in a\n   truly user-friendly\
    \ manner, it must have specific knowledge about the\n   type of data it is retrieving.\n\
    \   Attempts to outfit a universal client with a common query language\n   are\
    \ also not very useful.  A common query language may be applied to\n   a specific\
    \ problem domain, which would require a user to have\n   expertise in both the\
    \ common query language and the problem domain.\n   In the end, the outcome is\
    \ usually the development of a client\n   specific to the problem domain but saddled\
    \ with translation of the\n   user's desires and the lowest-common-denominator\
    \ aspect of the query\n   language.\n"
- title: B.3.  Server Considerations
  contents:
  - "B.3.  Server Considerations\n   As mentioned above, IRIS was designed for the\
    \ directory service needs\n   of public-facing registries.  In this light, certain\
    \ aspects of more\n   generalized directory services are a hindrance in an environment\
    \ that\n   does not have the same control and safety considerations as a managed\n\
    \   network.\n   For instance, a common query language can provide great flexibility\n\
    \   to both the power user and the abusive user.  An abusive user could\n   easily\
    \ submit a query across multiple indexes with partial values.\n   Such a query\
    \ would have no utility other than to cause denial of\n   service to other users.\
    \  To combat this, a service operator must\n   restrict the types of queries that\
    \ cause harm to overall performance,\n   and this act obsoletes the benefit of\
    \ a common query language.\n   Another consideration for server performance is\
    \ the lack of a\n   required data relationship.  Because sets of data often have\n\
    \   differing relationships, a one-size-fits-all approach does not fit\n   well\
    \ with all types of registries.  In addition, public-facing\n   services tend\
    \ to have service level requirements that cannot\n   reasonably be met by transforming\
    \ complete data stores from a native\n   format into a format enforcing an artificial\
    \ set of relationships.\n   To combat these issues, operators of public-facing\
    \ services tend to\n   create their own custom query parsers and back-end data\
    \ stores.  But\n   doing so brings into question the use of a generalized directory\n\
    \   service.\n   Finally, IRIS is built upon a set of standard technological layers.\n\
    \   This allows service operators to switch components to meet the needs\n   of\
    \ their particular environment.\n"
- title: B.4.  Lookups, Searches, and Entity Classes
  contents:
  - "B.4.  Lookups, Searches, and Entity Classes\n   IRIS supports both lookups and\
    \ searches.  Conceptually, the\n   difference between the two is as follows:\n\
    \      A \"lookup\" is a single query with a discrete value on a single\n    \
    \  index.\n      Anything more, such as partial value queries, queries across\n\
    \      multiple indexes, or multiple queries to a single index is a\n      \"\
    search\".\n   Lookups are accomplished through the defined query <lookupEntity>.\n\
    \   This query specifies a discrete name, called the entity name, to be\n   queried\
    \ in a single index, called the entity class.  Therefore,\n   implementations\
    \ may consider a type of registry to be composed of\n   multiple indexes, one\
    \ for each defined entity class.\n   There are no standard searches in IRIS. \
    \ Each type of registry\n   defines its own set of searches.\n"
- title: B.5.  Entities References, Search Continuations, and Scope
  contents:
  - "B.5.  Entities References, Search Continuations, and Scope\n   Due to its effect\
    \ on client behavior and the side effects such\n   behavior may have on servers,\
    \ IRIS makes a clear distinction between\n   entity references (<entity>) and\
    \ search continuations\n   (<searchContinuation>).  It is not an add-on, but a\
    \ fundamental core\n   of the protocol.\n   The distinction is very important\
    \ to a client:\n      \"Go look over there and you will find what you seek.\"\
    \  \"Go look\n      over there and you may find what you seek, or you may find\
    \ some\n      other stuff, or you may find nothing.\"\n   Finally, because IRIS\
    \ makes no assumptions about and places no\n   requirements on the relationship\
    \ of data in a registry, this also\n   extends to data of the same registry type\
    \ spread across multiple\n   authority areas.  This means that IRIS makes no requirements\
    \ as to\n   the scope of entity references or search continuations.  The scope\
    \ is\n   determined by what the registry type needs and by what the registry\n\
    \   type allows a service operator.\n"
- title: Appendix C.  Acknowledgments
  contents:
  - "Appendix C.  Acknowledgments\n   The terminology used in this document to describe\
    \ namespaces and\n   namespaces of namespaces is now much clearer thanks to the\
    \ skillful\n   debate tactics of Leslie Daigle.  Previously, it was much more\n\
    \   confusing.  In addition, Leslie has provided great insight into the\n   details\
    \ of URIs, URNs, and NAPTR/SRV resource records.\n   Many other technical complexities\
    \ were proved unnecessary by David\n   Blacka and have been removed.  And his\
    \ IRIS implementation has helped\n   smooth out the rougher edges.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew L. Newton\n   VeriSign, Inc.\n   21345 Ridgetop\
    \ Circle\n   Sterling, VA  20166\n   USA\n   Phone: +1 703 948 3382\n   EMail:\
    \ anewton@verisignlabs.com; andy@hxr.us\n   URI:   http://www.verisignlabs.com/\n\
    \   Marcos Sanz\n   DENIC eG\n   Wiesenhuettenplatz 26\n   D-60329 Frankfurt\n\
    \   Germany\n   EMail: sanz@denic.de\n   URI:   http://www.denic.de/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
