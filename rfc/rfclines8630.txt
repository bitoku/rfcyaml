Abstract This document defines a Trust Anchor Locator (TAL) for the Resource Public Key Infrastructure (RPKI).
The TAL allows Relying Parties in the RPKI to download the current Trust Anchor (TA) Certification Authority (CA) certificate from one or more locations and verify that the key of this self signed certificate matches the key on the TAL.
Thus, Relying Parties can be configured with TA keys but can allow these TAs to change the content of their CA certificate.
In particular, it allows TAs to change the set of IP Address Delegations and/or Autonomous System Identifier Delegations included in the extension(s)
(RFC 3779) of their certificate.
This document obsoletes the previous definition of the TAL as provided in RFC 7730 by adding support for Uniform Resource Identifiers (URIs) (RFC 3986) that use HTTP over TLS (HTTPS)
(RFC 7230) as the scheme.
This document defines a Trust Anchor Locator (TAL) for the Resource Public Key Infrastructure (RPKI)
This format may be used to distribute Trust Anchor (TA) material using a mix of out of band and online means.
Procedures used by Relying Parties (RPs) to verify RPKI signed objects SHOULD support this format to facilitate interoperability between creators of TA material and RPs.
This document obsoletes [RFC7730] by adding support for Uniform Resource Identifiers (URIs)
[RFC3986] that use HTTP over TLS (HTTPS) [RFC7230] as the scheme.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
The TAL format defined in this document differs from the definition in [RFC7730] in that:  it allows for the use of the HTTPS scheme in URIs [RFC7230], and  it allows for the inclusion of an optional comment section.
Note that current RPs may not support this new format yet.
Therefore, it is RECOMMENDED that a TA operator maintain a TAL file as defined in [RFC7730] for a time as well, until they are satisfied that RP tooling has been updated.
This document does not propose a new format for TA material.
A TA in the RPKI is represented by a self signed X.509 Certification Authority (CA) certificate, a format commonly used in PKIs and widely supported by RP software.
This document specifies a format for data used to retrieve and verify the authenticity of a TA in a very simple fashion.
That data is referred to as the TAL.
The motivation for defining the TAL is to enable selected data in the TA to change, without needing to redistribute the TA per se.
In the RPKI, certificates contain one or more extensions [RFC3779] that can contain a set of IP Address Delegations and/or Autonomous System Identifier Delegations.
In this document, we refer to these delegations as the Internet Number Resources (INRs) contained in an RPKI certificate.
The set of INRs associated with an entity acting as a TA is likely to change over time.
Thus, if one were to use the common PKI convention of distributing a TA to RPs in a secure fashion, then this procedure would need to be repeated whenever the INR set for the entity acting as a TA changed.
By distributing the TAL (in a secure fashion) instead of distributing the TA, this problem is avoided, i.e., the TAL is constant so long as the TA's public key and its location do not change.
The TAL is analogous to the TrustAnchorInfo data structure specified in [RFC5914], which is on the Standards Track.
That specification could be used to represent the TAL, if one defined an rsync or HTTPS URI extension for that data structure.
However, the TAL format was adopted by RPKI implementors prior to the PKIX TA work, and the RPKI implementor community has elected to utilize the TAL format rather than define the requisite extension.
The community also prefers the simplicity of the ASCII encoding of the TAL, versus the binary (ASN.1) encoding for TrustAnchorInfo.
Trust Anchor Locator File Format
In this document, we define a TA URI as a URI that can be used to retrieve a current TA certificate.
This URI MUST be either an rsync URI [RFC5781] or an HTTPS URI [RFC7230].
The TAL is an ordered sequence of: 1.
a URI section that is comprised of one or more ordered lines, each containing a TA URI, and ending with a line break, 3.
a line break, and 4.
a subjectPublicKeyInfo [RFC5280] in DER format [X.509], encoded in base64
(see Section 4 of [RFC4648]).
To avoid long lines, line breaks MAY be inserted into the base64 encoded string.
Note that line breaks in this file can use either "<CRLF>" or "<LF>".
TAL and TA Certificate Considerations
Each TA URI in the TAL MUST reference a single object.
It MUST NOT reference a directory or any other form of collection of objects.
The referenced object MUST be a self signed CA certificate that conforms to the RPKI certificate profile [RFC6487].
This certificate is the TA in certification path discovery [RFC4158] and validation [RFC5280] [RFC3779].
The validity interval of this TA is chosen such that (1) the "notBefore" time predates the moment that this certificate is published and
(2) the "notAfter" time is after the planned time of reissuance of this certificate.
The INR extension(s) of this TA MUST contain a non empty set of number resources.
It MUST NOT use the "inherit" form of the INR extension(s).
The INR set described in this certificate is the set of number resources for which the issuing entity is offering itself as a putative TA in the RPKI
The public key used to verify the TA MUST be the same as the subjectPublicKeyInfo in the CA certificate and in the TAL.
The TA MUST contain a stable key that does not change when the certificate is reissued due to changes in the INR extension(s), when the certificate is renewed prior to expiration.
Because the public key in the TAL and the TA MUST be stable, this motivates operation of that CA in an offline mode.
In that case, a subordinate CA certificate containing the same INRs, or, in theory, any subset of INRs, can be issued for online operations.
This allows the entity that issues the TA to keep the corresponding private key of this certificate offline, while issuing all relevant child certificates under the immediate subordinate CA.
This measure also allows the Certificate Revocation List (CRL) issued by that entity to be used to revoke the subordinate CA certificate in the event of suspected key compromise of this online operational key pair that is potentially more vulnerable.
The TA MUST be published at a stable URI.
When the TA is reissued for any reason, the replacement CA certificate MUST be accessible using the same URI.
Because the TA is a self signed certificate, there is no corresponding CRL that can be used to revoke it, nor is there a manifest [RFC6486] that lists this certificate.
If an entity wishes to withdraw a self signed CA certificate as a putative TA, for any reason, including key rollover, the entity MUST remove the object from the location referenced in the TAL.
Where the TAL contains two or more TA URIs, the same self signed
CA certificate MUST be found at each referenced location.
In order to increase operational resilience, it is RECOMMENDED that (1) the domain name parts of each of these URIs resolve to distinct IP addresses that are used by a diverse set of repository publication points and (2)
these IP addresses be included in distinct Route Origin Authorization (ROA) objects signed by different CAs.
Example # This TAL is intended for documentation purposes only.
# Do not attempt to use this in a production setting.
In order to use the TAL to retrieve and validate a (putative) TA, an RP SHOULD: 1.
Retrieve the object referenced by (one of) the TA URI(s) contained in the TAL.
Confirm that the retrieved object is a current, self signed RPKI CA certificate that conforms to the profile as specified in [RFC6487].
Confirm that the public key in the TAL matches the public key in the retrieved object.
Perform other checks, as deemed appropriate (locally), to ensure that the RP is willing to accept the entity publishing this self signed CA certificate to be a TA.
These tests apply to the validity of attestations made in the context of the RPKI relating to all resources described in the INR extension(s) of this certificate.
An RP SHOULD perform these functions for each instance of a TAL that it is holding for this purpose every time the RP performs a resynchronization across the local repository cache.
In any case, an RP also SHOULD perform these functions prior to the expiration of the locally cached copy of the retrieved TA referenced by the TAL.
In the case where a TAL contains multiple TA URIs, an RP MAY use a locally defined preference rule to select the URI to retrieve the self signed RPKI CA certificate that is to be used as a TA.
Some examples are:  Using the order provided in the TAL  Selecting the TA URI randomly from the available list  Creating a prioritized list of URIs based on RP specific parameters, such as connection establishment delay
If the connection to the preferred URI fails or the retrieved CA certificate public key does not match the TAL public key, the RP SHOULD retrieve the CA certificate from the next URI, according to the local preference ranking of URIs.
URI Scheme Considerations Please note that the RSYNC protocol provides neither transport security nor any means by which the RP can validate that they are connected to the proper host.
Therefore, it is RECOMMENDED that HTTPS be used as the preferred scheme.
Note that, although a Man in the Middle (MITM) cannot produce a CA certificate that would be considered valid according to the process described in Section 3, this type of attack can prevent the RP from learning about an updated CA certificate.
RPs MUST do TLS certificate and host name validation when they fetch a CA certificate using an HTTPS URI on a TAL.
RPs SHOULD log any TLS certificate or host name validation issues found so that an operator can investigate the cause.
It is RECOMMENDED that RPs and Repository Servers follow the Best Current Practices outlined in [RFC7525] on the use of HTTPS [RFC7230].
RPs SHOULD do TLS certificate and host name validation using subjectAltName dNSName identities as described in [RFC6125].
The rules and guidelines defined in [RFC6125] apply here, with the following considerations:  RPs and Repository Servers SHOULD support the DNS ID identifier type.
The DNS ID identifier type SHOULD be present in Repository Server certificates.
This protocol does not require the use of SRV IDs.
This protocol does not require the use of URI IDs.
Security Considerations Compromise of a TA private key permits unauthorized parties to masquerade as a TA, with potentially severe consequences.
Reliance on an inappropriate or incorrect
TA has similar potentially severe consequences.
This TAL does not directly provide a list of resources covered by the referenced self signed CA certificate.
Instead, the RP is referred to the TA itself and the INR extension(s) within this certificate.
This provides necessary operational flexibility, but it also allows the certificate issuer to claim to be authoritative for any resource.
RPs should either (1) have great confidence in the issuers of such certificates that they are configuring as TAs or (2) issue their own self signed certificate as a TA
and, in doing so, impose constraints on the subordinate certificates.
This document has no IANA actions.
