- title: __initial_text__
  contents:
  - "          Traffic Classification and Quality of Service (QoS)\n             \
    \           Attributes for Diameter\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a number of Diameter attribute-value pairs\n\
    \   (AVPs) for traffic classification with actions for filtering and\n   Quality\
    \ of Service (QoS) treatment.  These AVPs can be used in\n   existing and future\
    \ Diameter applications where permitted by the\n   Augmented Backus-Naur Form\
    \ (ABNF) specification of the respective\n   Diameter command extension policy.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5777.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Rule Sets and Rules .............................................4\n    \
    \  3.1. QoS-Resources AVP ..........................................5\n      3.2.\
    \ Filter-Rule AVP ............................................5\n      3.3. Filter-Rule-Precedence\
    \ AVP .................................6\n   4. Conditions ......................................................6\n\
    \      4.1. Traffic Classifiers ........................................6\n  \
    \         4.1.1. Classifier AVP ......................................8\n    \
    \       4.1.2. Classifier-ID AVP ...................................9\n      \
    \     4.1.3. Protocol AVP ........................................9\n        \
    \   4.1.4. Direction AVP .......................................9\n          \
    \ 4.1.5. From-Spec AVP .......................................9\n           4.1.6.\
    \ To-Spec AVP ........................................10\n           4.1.7. Source\
    \ and Destination AVPs ........................11\n           4.1.8. Header Option\
    \ AVPs .................................15\n      4.2. Time Of Day AVPs ..........................................22\n\
    \           4.2.1. Time-Of-Day-Condition AVP ..........................22\n  \
    \         4.2.2. Time-Of-Day-Start AVP ..............................23\n    \
    \       4.2.3. Time-Of-Day-End AVP ................................23\n      \
    \     4.2.4. Day-Of-Week-Mask AVP ...............................23\n        \
    \   4.2.5. Day-Of-Month-Mask AVP ..............................24\n          \
    \ 4.2.6. Month-Of-Year-Mask AVP .............................24\n           4.2.7.\
    \ Absolute-Start-Time AVP ............................25\n           4.2.8. Absolute-Start-Fractional-Seconds\
    \ AVP ..............25\n           4.2.9. Absolute-End-Time AVP ..............................25\n\
    \           4.2.10. Absolute-End-Fractional-Seconds AVP ...............25\n  \
    \         4.2.11. Timezone-Flag AVP .................................25\n    \
    \       4.2.12. Timezone-Offset AVP ...............................26\n   5. Actions\
    \ ........................................................26\n      5.1. Treatment-Action\
    \ AVP ......................................26\n      5.2. QoS-Profile-Id AVP\
    \ ........................................27\n      5.3. QoS-Profile-Template\
    \ AVP ..................................27\n      5.4. QoS-Semantics .............................................28\n\
    \      5.5. QoS-Parameters AVP ........................................29\n  \
    \    5.6. Excess-Treatment AVP ......................................29\n   6.\
    \ QoS Capability Indication ......................................29\n   7. Examples\
    \ .......................................................30\n      7.1. Diameter\
    \ EAP with QoS Information .........................30\n      7.2. Diameter NASREQ\
    \ with QoS Information ......................32\n      7.3. QoS Authorization\
    \ .........................................33\n      7.4. Diameter Server Initiated\
    \ Re-Authorization of QoS .........33\n      7.5. Diameter Credit Control (CC)\
    \ with QoS Information .........34\n      7.6. Classifier Examples .......................................35\n\
    \      7.7. QoS Parameter Examples ....................................37\n  \
    \ 8. Acknowledgments ................................................37\n   9.\
    \ Contributors ...................................................37\n   10. IANA\
    \ Considerations ...........................................38\n      10.1. AVP\
    \ Codes ................................................38\n      10.2. QoS-Semantics\
    \ IANA Registry ..............................39\n      10.3. Action ...................................................40\n\
    \   11. Security Considerations .......................................40\n  \
    \ 12. References ....................................................40\n    \
    \  12.1. Normative References .....................................40\n      12.2.\
    \ Informative References ...................................41\n   Appendix A.\
    \  MAC and EUI64 Address Mask Usage Considerations ......42\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a number of Diameter attribute-value\
    \ pairs\n   (AVPs) for traffic classification with actions for filtering and\n\
    \   Quality of Service (QoS) treatment.  These AVPs can be used in\n   existing\
    \ and future Diameter applications where permitted by the\n   Augmented Backus-Naur\
    \ Form (ABNF) specification of the respective\n   Diameter command extension policy.\n\
    \   The work on Quality of Service treatment and filtering via Diameter\n   dates\
    \ back to the base protocol described in RFC 3588 [RFC3588].  The\n   filtering\
    \ and QoS functionality was provided by the IPFilterRule AVP\n   and the QoSFilterRule\
    \ AVP.  Both AVPs relied on syntax based on the\n   FreeBSD ipfw tool for traffic\
    \ classification.  The functionality of\n   the QoSFilterRule AVP was underspecified\
    \ in RFC 3588 [RFC3588] and\n   was later updated by RFC 4005 [RFC4005].\n   As\
    \ part of the work on updating RFC 3588, the functionality of the\n   IPFilterRule\
    \ and the QoSFilterRule was revised by the functionality\n   offered by this document\
    \ with the goals of a uniform and extensible\n   traffic classification mechanism\
    \ in a native Diameter syntax (instead\n   of the free text previously used).\
    \  Additionally, an extensible set\n   of actions is provided that offers the\
    \ ability for filtering and for\n   QoS treatment, whereby the QoS functionality\
    \ was extended to meet the\n   needs of today's networking environments.\n   The\
    \ QoS-Resources AVP represents a complete rule set with each rule\n   represented\
    \ by a Filter-Rule AVP.  Each rule consists of information\n   for handling conflict\
    \ resolution, a conditions part and the\n   corresponding actions to be performed\
    \ if the conditions are\n   satisfied.  The AVPs responsible for expressing a\
    \ condition are\n   defined in Section 4.  The capability to match all or a subset\
    \ of the\n   data traffic is provided.  This includes the ability to match on\n\
    \   Ethernet specific attributes, which was not possible with the QoS-\n   Filter-Rule\
    \ AVP.  Service differentiation may be based on Ethernet\n   priority bits, a\
    \ single layer of VLAN-IDs or stacked VLAN-IDs,\n   Logical Link Control (LLC)\
    \ attributes, MAC addresses, or any\n   combination thereof.  The header fields\
    \ used for Ethernet\n   classification are defined in the IEEE802 series of specifications:\n\
    \   [IEEE802.2], [IEEE802.1ad], [IEEE802.1Q], and [IEEE802.1D].\n   Additionally,\
    \ time-based conditions can be expressed based on the\n   functionality offered\
    \ by the attributes in Section 4.2.\n   The action part of a rule contains the\
    \ type of traffic treatment and\n   further description regarding QoS-related\
    \ actions.\n   The QoS policy rules are defined as Diameter encoded attribute-value\n\
    \   pairs (AVPs) described using a modified version of the Augmented\n   Backus-Naur\
    \ Form (ABNF) (see [RFC3588]).  The AVP datatypes are also\n   taken from [RFC3588].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Rule Sets and Rules
  contents:
  - "3.  Rule Sets and Rules\n   As mentioned in the introduction, the top-level element\
    \ is the QoS-\n   Resources AVP that encapsulates one or more Filter-Rule AVPs.\n"
- title: 3.1.  QoS-Resources AVP
  contents:
  - "3.1.  QoS-Resources AVP\n   The QoS-Resources AVP (AVP Code 508) is of type Grouped\
    \ and contains\n   a list of filter policy rules.\n   QoS-Resources ::= < AVP\
    \ Header: 508 >\n                   1*{ Filter-Rule }\n                   * [\
    \ AVP ]\n"
- title: 3.2.  Filter-Rule AVP
  contents:
  - "3.2.  Filter-Rule AVP\n   The Filter-Rule AVP (AVP Code 509) is of type Grouped\
    \ and defines a\n   specific condition and action combination.\n             \
    \          Filter-Rule ::= < AVP Header: 509 >\n                             \
    \       [ Filter-Rule-Precedence ]\n                                    ; Condition\
    \ part of a Rule\n                                    ; ------------------------\n\
    \                                    [ Classifier ]\n                        \
    \          * [ Time-Of-Day-Condition ]\n                                    ;\
    \ Action and Meta-Data\n                                    ; --------------------\n\
    \                                    [ Treatment-Action ]\n                  \
    \                  ; Info about QoS related Actions\n                        \
    \            ; ------------------------------\n                              \
    \      [ QoS-Semantics ]\n                                    [ QoS-Profile-Template\
    \ ]\n                                    [ QoS-Parameters ]\n                \
    \                    [ Excess-Treatment ]\n                                  \
    \  ; Extension Point\n                                    ; ---------------\n\
    \                                  * [ AVP ]\n   If the QoS-Profile-Template AVP\
    \ is not included in the Filter-Rule\n   AVP and the Treatment-Action AVP is set\
    \ to 'shape' or 'mark' then the\n   default setting is assumed, namely, a setting\
    \ of the Vendor-Id AVP to\n   0 (for IETF) and the QoS-Profile-Id AVP to zero\
    \ (0) (for the profile\n   defined in [RFC5624]).  Note that the content of the\
    \ QoS-Parameters\n   are defined in the respective specification defining the\
    \ QoS\n   parameters.  When the Vendor-Id AVP is set to 0 (for IETF) and the\n\
    \   QoS-Profile-Id AVP is set to zero (0), then the AVPs included in the\n   QoS-Parameters\
    \ AVP are the AVPs defined in [RFC5624].\n"
- title: 3.3.  Filter-Rule-Precedence AVP
  contents:
  - "3.3.  Filter-Rule-Precedence AVP\n   The Filter-Rule-Precedence AVP (AVP Code\
    \ 510) is of type Unsigned32\n   and specifies the execution order of the rules\
    \ expressed in the QoS-\n   Resources AVP.  The lower the numerical value of Filter-Rule-\n\
    \   Precedence AVP, the higher the rule precedence.  Rules with equal\n   precedence\
    \ MAY be executed in parallel if supported by the Resource\n   Management Function.\
    \  If the Filter-Rule-Precedence AVP is absent\n   from the Filter-Rule AVP, the\
    \ rules SHOULD be executed in the order\n   in which they appear in the QoS-Resources\
    \ AVP.\n"
- title: 4.  Conditions
  contents:
  - "4.  Conditions\n   This section describes the condition part of a rule.  Two\
    \ condition\n   types are introduced by this document: packet classification\n\
    \   conditions represented by the Classifier AVP and time of day\n   conditions\
    \ represented by the Time-Of-Day-Condition AVP.\n   If more than one instance\
    \ of the Time-Of-Day-Condition AVP is present\n   in the Filter-Rule AVP, the\
    \ current time at rule evaluation MUST be\n   within at least one of the time\
    \ windows specified in one of the Time-\n   Of-Day-Condition AVPs.\n   When the\
    \ Time-Of-Day-Condition AVP and Classifier AVP are present in\n   the same Filter-Rule\
    \ AVP, both the time of day and packet\n   classification conditions MUST match\
    \ for the traffic treatment action\n   to be applied.\n"
- title: 4.1.  Traffic Classifiers
  contents:
  - "4.1.  Traffic Classifiers\n   Classifiers are used in many applications to specify\
    \ how to select a\n   subset of data packets for subsequent treatment as indicated\
    \ in the\n   action part of a rule.  For example, in a QoS application, if a\n\
    \   packet matches a classifier then that packet will be treated in\n   accordance\
    \ with a QoS specification associated with that classifier.\n   Figure 1 shows\
    \ a typical deployment.\n                                                    \
    \       +-----------+\n                                                      \
    \    +-----------+|\n       +--------+          +-------------+              +------------+||\n\
    \       |        |   IN     |             |              |            |||\n  \
    \     |        +--------->|             +------------->|            |||\n    \
    \   |Managed |          | Classifying |              | Unmanaged  |||\n      \
    \ |Terminal|   OUT    | Entity      |              | Terminal   |||\n       |\
    \        |<---------+             |<-------------+            ||+\n       |  \
    \      |          |             |              |            |+\n       +--------+\
    \          +-------------+              +------------+\n                     \
    \             ^\n                                  | Classifiers\n           \
    \                       |\n                           +------+------+\n      \
    \                     |             |\n                           |     AAA  \
    \   |\n                           |             |\n                          \
    \ +-------------+\n              Figure 1: Example of a Classifier Architecture\n\
    \   The managed terminal, the terminal for which the classifiers are\n   being\
    \ specified, is located on the left of the Classifying Entity.\n   The unmanaged\
    \ terminals, the terminals that receive packets from the\n   managed terminal\
    \ or send packets to the managed terminal, are located\n   to the right side of\
    \ the Classifying Entity.\n   The Classifying Entity is responsible for classifying\
    \ packets that\n   are incoming (IN) from the managed terminal or packets outgoing\
    \ (OUT)\n   to the managed terminal.\n   A classifier consists of a group of attributes\
    \ that specify how to\n   match a packet.  Each set of attributes expresses values\
    \ about\n   aspects of the packet -- typically the packet header.  Different\n\
    \   protocols therefore would use different attributes.\n   In general, a classifier\
    \ consists of the following:\n   Identifier:\n      The identifier uniquely identifies\
    \ this classifier and may be used\n      to reference the classifier from another\
    \ structure.\n   From:\n      Specifies the rule for matching the protocol-specific\
    \ source\n      address(es) part of the packet.\n   To:\n      Specifies the rule\
    \ for matching the protocol-specific destination\n      address(es) part of the\
    \ packet.\n   Protocol:\n      Specifies the matching protocol of the packet.\n\
    \   Direction:\n      Specifies whether the classifier is to apply to packets\
    \ flowing\n      from the managed terminal (IN) or to packets flowing to the\n\
    \      managed terminal (OUT) or to packets flowing in both directions.\n   Options:\n\
    \      Attributes or properties associated with each protocol or layer,\n    \
    \  or various values specific to the header of the protocol or layer.\n      Options\
    \ allow matching on those values.\n   Each protocol type will have a specific\
    \ set of attributes that can be\n   used to specify a classifier for that protocol.\
    \  These attributes\n   will be grouped under a grouped AVP called a Classifier\
    \ AVP.\n"
- title: 4.1.1.  Classifier AVP
  contents:
  - "4.1.1.  Classifier AVP\n   The Classifier AVP (AVP Code 511) is a grouped AVP\
    \ that consists of a\n   set of attributes that specify how to match a packet.\n\
    \   Classifier ::= < AVP Header: 511 >\n                  { Classifier-ID }\n\
    \                  [ Protocol ]\n                  [ Direction ]\n           \
    \     * [ From-Spec ]\n                * [ To-Spec ]\n                * [ Diffserv-Code-Point\
    \ ]\n                  [ Fragmentation-Flag ]\n                * [ IP-Option ]\n\
    \                * [ TCP-Option ]\n                  [ TCP-Flags ]\n         \
    \       * [ ICMP-Type ]\n                * [ ETH-Option ]\n                * [\
    \ AVP ]\n"
- title: 4.1.2.  Classifier-ID AVP
  contents:
  - "4.1.2.  Classifier-ID AVP\n   The Classifier-ID AVP (AVP Code 512) is of type\
    \ OctetString and\n   uniquely identifies the classifier.  Each application will\
    \ define the\n   uniqueness scope of this identifier, e.g., unique per terminal\
    \ or\n   globally unique.  Exactly one Classifier-ID AVP MUST be contained\n \
    \  within a Classifier AVP.\n"
- title: 4.1.3.  Protocol AVP
  contents:
  - "4.1.3.  Protocol AVP\n   The Protocol AVP (AVP Code 513) is of type Enumerated\
    \ and specifies\n   the protocol being matched.  The attributes included in the\n\
    \   Classifier AVP MUST be consistent with the value of the Protocol AVP.\n  \
    \ Exactly zero or one Protocol AVP may be contained within a Classifier\n   AVP.\
    \  If the Protocol AVP is omitted from the classifier, then\n   comparison of\
    \ the protocol of the packet is irrelevant.  The values\n   for this AVP are managed\
    \ by IANA under the Protocol Numbers registry\n   as defined in [RFC2780].\n"
- title: 4.1.4.  Direction AVP
  contents:
  - "4.1.4.  Direction AVP\n   The Direction AVP (AVP Code 514) is of type Enumerated\
    \ and specifies\n   in which direction to apply the classifier.  The values of\
    \ the\n   enumeration are \"IN\",\"OUT\",\"BOTH\".  In the \"IN\" and \"BOTH\"\
    \n   directions, the From-Spec refers to the address of the managed\n   terminal\
    \ and the To-Spec refers to the unmanaged terminal.  In the\n   \"OUT\" direction,\
    \ the From-Spec refers to the unmanaged terminal\n   whereas the To-Spec refers\
    \ to the managed terminal.  If the Direction\n   AVP is omitted, the classifier\
    \ matches packets flowing in both\n   directions.\n     Value | Name and Semantic\n\
    \     ------+--------------------------------------------------\n       0   |\
    \ IN - The classifier applies to flows from the\n           | managed terminal.\n\
    \       1   | OUT - The classifier applies to flows to the\n           | managed\
    \ terminal.\n       2   | BOTH - The classifier applies to flows both to\n   \
    \        | and from the managed terminal.\n"
- title: 4.1.5.  From-Spec AVP
  contents:
  - "4.1.5.  From-Spec AVP\n   The From-Spec AVP (AVP Code 515) is a grouped AVP that\
    \ specifies the\n   Source Specification used to match the packet.  Zero or more\
    \ of these\n   AVPs may appear in the classifier.  If this AVP is absent from\
    \ the\n   classifier, then all packets are matched regardless of the source\n\
    \   address.  If more than one instance of this AVP appears in the\n   classifier,\
    \ then the source of the packet can match any From-Spec\n   AVP.  The contents\
    \ of this AVP are protocol specific.\n   If one instance (or multiple instances)\
    \ of the IP address AVP (IP-\n   Address, IP-Address-Range, IP-Address-Mask, Use-Assigned-Address)\n\
    \   appears in the From-Spec AVP, then the source IP address of the\n   packet\
    \ MUST match one of the addresses represented by these AVPs.\n   If more than\
    \ one instance of the layer 2 address AVPs (MAC-Address,\n   MAC-Address-Mask,\
    \ EUI64-Address, EUI64-Address-Mask) appears in the\n   From-Spec, then the source\
    \ layer 2 address of the packet MUST match\n   one of the addresses represented\
    \ in these AVPs.\n   If more than one instance of the port AVPs (Port, Port-Range)\
    \ appears\n   in the From-Spec AVP, then the source port number MUST match one\
    \ of\n   the port numbers represented in these AVPs.\n   If the IP address, MAC\
    \ address, and port AVPs appear in the same\n   From-Spec AVP, then the source\
    \ packet MUST match all the\n   specifications, i.e., match the IP address AND\
    \ MAC address AND port\n   number.\n   From-Spec ::= < AVP Header: 515 >\n   \
    \            * [ IP-Address ]\n               * [ IP-Address-Range ]\n       \
    \        * [ IP-Address-Mask ]\n               * [ MAC-Address ]\n           \
    \    * [ MAC-Address-Mask]\n               * [ EUI64-Address ]\n             \
    \  * [ EUI64-Address-Mask]\n               * [ Port ]\n               * [ Port-Range\
    \ ]\n                 [ Negated ]\n                 [ Use-Assigned-Address ]\n\
    \               * [ AVP ]\n"
- title: 4.1.6.  To-Spec AVP
  contents:
  - "4.1.6.  To-Spec AVP\n   The To-Spec AVP (AVP Code 516) is a grouped AVP that\
    \ specifies the\n   Destination Specification used to match the packet.  Zero\
    \ or more of\n   these AVPs may appear in the classifier.  If this AVP is absent\
    \ from\n   the classifier, then all packets are matched regardless of the\n  \
    \ destination address.  If more than one instance of this AVP appears\n   in the\
    \ classifier, then the destination of the packet can match any\n   To-Spec AVP.\
    \  The contents of this AVP are protocol specific.\n   If one instance (or multiple\
    \ instances) of the IP address AVP (IP-\n   Address, IP-Address-Range, IP-Address-Mask,\
    \ Use-Assigned-Address)\n   appears in the To-Spec AVP, then the destination IP\
    \ address of the\n   packet MUST match one of the addresses represented by these\
    \ AVPs.\n   If more than one instance of the layer 2 address AVPs (MAC-Address,\n\
    \   MAC-Address-Mask, EUI64-Address, EUI64-Address-Mask) appears in the\n   To-Spec,\
    \ then the destination layer 2 address of the packet MUST\n   match one of the\
    \ addresses represented in these AVPs.\n   If more than one instance of the port\
    \ AVPs (Port, Port-Range) appears\n   in the To-Spec AVP, then the destination\
    \ port number MUST match one\n   of the port numbers represented in these AVPs.\n\
    \   If the IP address, MAC address, and port AVPs appear in the same To-\n   Spec\
    \ AVP, then the destination packet MUST match all the\n   specifications, i.e.,\
    \ match the IP address AND MAC address AND port\n   number.\n   To-Spec ::= <\
    \ AVP Header: 516 >\n             * [ IP-Address ]\n             * [ IP-Address-Range\
    \ ]\n             * [ IP-Address-Mask ]\n             * [ MAC-Address ]\n    \
    \         * [ MAC-Address-Mask]\n             * [ EUI64-Address ]\n          \
    \   * [ EUI64-Address-Mask]\n             * [ Port ]\n             * [ Port-Range\
    \ ]\n               [ Negated ]\n               [ Use-Assigned-Address ]\n   \
    \          * [ AVP ]\n"
- title: 4.1.7.  Source and Destination AVPs
  contents:
  - "4.1.7.  Source and Destination AVPs\n   For packet classification, the contents\
    \ of the From-Spec and To-Spec\n   can contain the AVPs listed in the subsections\
    \ below.\n"
- title: 4.1.7.1.  Negated AVP
  contents:
  - "4.1.7.1.  Negated AVP\n   The Negated AVP (AVP Code 517) is of type Enumerated\
    \ containing the\n   values of True or False.  Exactly zero or one of these AVPs\
    \ may\n   appear in the From-Spec or To-Spec AVP.\n   When set to True, the meaning\
    \ of the match is inverted and the\n   classifier will match addresses other than\
    \ those specified by the\n   From-Spec or To-Spec AVP.  When set to False, or\
    \ when the Negated AVP\n   is not present, the classifier will match the addresses\
    \ specified by\n   the From-Spec or To-Spec AVP.\n   Note that the negation does\
    \ not impact the port comparisons.\n     Value | Name\n     ------+--------\n\
    \       0   | False\n       1   | True\n"
- title: 4.1.7.2.  IP-Address AVP
  contents:
  - "4.1.7.2.  IP-Address AVP\n   The IP-Address AVP (AVP Code 518) is of type Address\
    \ and specifies a\n   single IP address (IPv4 or IPv6) to match.\n"
- title: 4.1.7.3.  IP-Address-Range AVP
  contents:
  - "4.1.7.3.  IP-Address-Range AVP\n   The IP-Address-Range AVP (AVP Code 519) is\
    \ of type Grouped and\n   specifies an inclusive IP address range.\n   IP-Address-Range\
    \ ::= < AVP Header: 519 >\n                        [ IP-Address-Start ]\n    \
    \                    [ IP-Address-End ]\n                      * [ AVP ]\n   If\
    \ the IP-Address-Start AVP is not included, then the address range\n   starts\
    \ from the first valid IP address up to and including the\n   specified IP-Address-End\
    \ address.\n   If the IP-Address-End AVP is not included, then the address range\n\
    \   starts at the address specified by the IP-Address-Start AVP and\n   includes\
    \ all the remaining valid IP addresses.\n   For the IP-Address-Range AVP to be\
    \ valid, the IP-Address-Start AVP\n   MUST contain a value that is less than that\
    \ of the IP-Address-End\n   AVP.\n"
- title: 4.1.7.4.  IP-Address-Start AVP
  contents:
  - "4.1.7.4.  IP-Address-Start AVP\n   The IP-Address-Start AVP (AVP Code 520) is\
    \ of type Address and\n   specifies the first IP address (IPv4 or IPv6) of an\
    \ IP address range.\n"
- title: 4.1.7.5.  IP-Address-End AVP
  contents:
  - "4.1.7.5.  IP-Address-End AVP\n   The IP-Address-End AVP (AVP Code 521) is of\
    \ type Address and\n   specifies the last IP address (IPv4 or IPv6) of an address\
    \ range.\n"
- title: 4.1.7.6.  IP-Address-Mask AVP
  contents:
  - "4.1.7.6.  IP-Address-Mask AVP\n   The IP-Address-Mask AVP (AVP Code 522) is of\
    \ type Grouped and\n   specifies an IP address range using a base IP address and\
    \ the bit-\n   width of the mask.  For example, a range expressed as 192.0.2.0/24\n\
    \   will match all IP addresses from 192.0.2.0 up to and including\n   192.0.2.255.\
    \  The bit-width MUST be valid for the type of IP address.\n   IP-Address-Mask\
    \ ::= < AVP Header: 522 >\n                       { IP-Address }\n           \
    \            { IP-Bit-Mask-Width }\n                     * [ AVP ]\n"
- title: 4.1.7.7.  IP-Mask-Bit-Mask-Width AVP
  contents:
  - "4.1.7.7.  IP-Mask-Bit-Mask-Width AVP\n   The IP-Bit-Mask-Width AVP (AVP Code\
    \ 523) is of type Unsigned32.  The\n   value specifies the width of an IP address\
    \ bit mask.\n"
- title: 4.1.7.8.  MAC-Address AVP
  contents:
  - "4.1.7.8.  MAC-Address AVP\n   The MAC-Address AVP (AVP Code 524) is of type OctetString\
    \ and\n   specifies a single layer 2 address in MAC-48 format.  The value is a\n\
    \   6-octet encoding of the address as it would appear in the frame\n   header.\n"
- title: 4.1.7.9.  MAC-Address-Mask AVP
  contents:
  - "4.1.7.9.  MAC-Address-Mask AVP\n   The MAC-Address-Mask AVP (AVP Code 525) is\
    \ of type Grouped and\n   specifies a set of MAC addresses using a bit mask to\
    \ indicate the\n   bits of the MAC addresses that must fit to the specified MAC\
    \ address\n   attribute.  For example, a MAC-Address-Mask with the MAC-Address\
    \ as\n   00-10-A4-23-00-00 and with a MAC-Address-Mask-Pattern of FF-FF-FF-FF-\n\
    \   00-00 will match all MAC addresses from 00-10-A4-23-00-00 up to and\n   including\
    \ 00-10-A4-23-FF-FF.\n   Appendix A describes the considerations that should be\
    \ given to the\n   use of MAC address masks in constructing classifiers.\n   MAC-Address-Mask\
    \ ::= < AVP Header: 525 >\n                        { MAC-Address }\n         \
    \               { MAC-Address-Mask-Pattern }\n                      * [ AVP ]\n"
- title: 4.1.7.10.  MAC-Address-Mask-Pattern AVP
  contents:
  - "4.1.7.10.  MAC-Address-Mask-Pattern AVP\n   The MAC-Address-Mask-Pattern AVP\
    \ (AVP Code 526) is of type\n   OctetString.  The value is 6 octets specifying\
    \ the bit positions of a\n   MAC address that are taken for matching.\n"
- title: 4.1.7.11.  EUI64-Address AVP
  contents:
  - "4.1.7.11.  EUI64-Address AVP\n   The EUI64-Address AVP (AVP Code 527) is of type\
    \ OctetString and\n   specifies a single layer 2 address in EUI-64 format.  The\
    \ value is an\n   8-octet encoding of the address as it would appear in the frame\n\
    \   header.\n"
- title: 4.1.7.12.  EUI64-Address-Mask AVP
  contents:
  - "4.1.7.12.  EUI64-Address-Mask AVP\n   The EUI64-Address-Mask AVP (AVP Code 528)\
    \ is of type Grouped and\n   specifies a set of EUI64 addresses using a bit mask\
    \ to indicate the\n   bits of the EUI64 addresses that must fit to the specified\
    \ EUI64\n   address attribute.  For example, a EUI64-Address-Mask with the EUI64-\n\
    \   Address as 00-10-A4-FF-FE-23-00-00 and with a EUI64-Address-Mask-\n   Pattern\
    \ of FF-FF-FF-FF-FF-FF-00-00 will match all EUI64 addresses\n   from 00-10-A4-FF-FE-23-00-00\
    \ up to and including 00-10-A4-FF-FE-23-\n   FF-FF.\n   Appendix A describes the\
    \ considerations that should be given to the\n   use of EUI64 address masks in\
    \ constructing classifiers.\n   EUI64-Address-Mask ::= < AVP Header: 528 >\n \
    \                         { EUI64-Address }\n                          { EUI64-Address-Mask-Pattern\
    \ }\n                        * [ AVP ]\n"
- title: 4.1.7.13.  EUI64-Address-Mask-Pattern AVP
  contents:
  - "4.1.7.13.  EUI64-Address-Mask-Pattern AVP\n   The EUI64-Address-Mask-Pattern\
    \ AVP (AVP Code 529) is of type\n   OctetString.  The value is 8 octets specifying\
    \ the bit positions of a\n   EUI64 address that are taken for matching.\n"
- title: 4.1.7.14.  Port AVP
  contents:
  - "4.1.7.14.  Port AVP\n   The Port AVP (AVP Code 530) is of type Integer32 in the\
    \ range of 0 to\n   65535 and specifies port numbers to match.  The type of port\
    \ is\n   indicated by the value of the Protocol AVP; i.e., if Protocol AVP\n \
    \  value is 6 (TCP), then the Port AVP represents a TCP port.\n"
- title: 4.1.7.15.  Port-Range AVP
  contents:
  - "4.1.7.15.  Port-Range AVP\n   The Port-Range AVP (AVP Code 531) is of type Grouped\
    \ and specifies an\n   inclusive range of ports.  The type of the ports is indicated\
    \ by the\n   value of the Protocol AVP; i.e., if Protocol AVP value is 6 (TCP),\n\
    \   then the Port-Range AVP represents an inclusive range of TCP ports.\n   Port-Range\
    \ ::= < AVP Header: 531 >\n                  [ Port-Start ]\n                \
    \  [ Port-End ]\n                * [ AVP ]\n   If the Port-Start AVP is omitted,\
    \ then port 0 is assumed.  If the\n   Port-End AVP is omitted, then port 65535\
    \ is assumed.\n"
- title: 4.1.7.16.  Port-Start AVP
  contents:
  - "4.1.7.16.  Port-Start AVP\n   The Port-Start AVP (AVP Code 532) is of type Integer32\
    \ and specifies\n   the first port number of an IP port range.\n"
- title: 4.1.7.17.  Port-End AVP
  contents:
  - "4.1.7.17.  Port-End AVP\n   The Port-End AVP (AVP Code 533) is of type Integer32\
    \ and specifies\n   the last port number of an IP port range.\n"
- title: 4.1.7.18.  Use-Assigned-Address AVP
  contents:
  - "4.1.7.18.  Use-Assigned-Address AVP\n   In some scenarios, the AAA does not know\
    \ the IP address assigned to\n   the managed terminal at the time that the classifier\
    \ is sent to the\n   Classifying Entity.  The Use-Assigned-Address AVP (AVP Code\
    \ 534) is\n   of type Enumerated containing the values of True or False.  When\n\
    \   present and set to True, it represents the IP address assigned to the\n  \
    \ managed terminal.\n     Value | Name\n     ------+--------\n       0   | False\n\
    \       1   | True\n"
- title: 4.1.8.  Header Option AVPs
  contents:
  - "4.1.8.  Header Option AVPs\n   The Classifier AVP may contain one or more of\
    \ the following AVPs to\n   match on the various possible IP, TCP, or ICMP header\
    \ options.\n"
- title: 4.1.8.1.  Diffserv-Code-Point AVP
  contents:
  - "4.1.8.1.  Diffserv-Code-Point AVP\n   The Diffserv-Code-Point AVP (AVP Code 535)\
    \ is of type Enumerated and\n   specifies the Differentiated Services Field Codepoints\
    \ to match in\n   the IP header.  The values are managed by IANA under the\n \
    \  Differentiated Services Field Codepoints registry as defined in\n   [RFC2474].\n"
- title: 4.1.8.2.  Fragmentation-Flag AVP
  contents:
  - "4.1.8.2.  Fragmentation-Flag AVP\n   The Fragmentation-Flag AVP (AVP Code 536)\
    \ is of type Enumerated and\n   specifies the packet fragmentation flags to match\
    \ in the IP header.\n     Value | Name and Semantic\n     ------+------------------------------------------------------------\n\
    \       0   | Don't Fragment (DF)\n       1   | More Fragments (MF)\n"
- title: 4.1.8.3.  IP-Option AVP
  contents:
  - "4.1.8.3.  IP-Option AVP\n   The IP-Option AVP (AVP Code 537) is of type Grouped\
    \ and specifies an\n   IP header option that must be matched.\n   IP-Option ::=\
    \ < AVP Header: 537 >\n                 { IP-Option-Type }\n               * [\
    \ IP-Option-Value ]\n                 [ Negated ]\n               * [ AVP ]\n\
    \   If one or more IP-Option-Value AVPs are present, one of the values\n   MUST\
    \ match the value in the IP header option.  If the IP-Option-Value\n   AVP is\
    \ absent, the option type MUST be present in the IP header but\n   the value is\
    \ wild carded.\n   The Negated AVP is used in conjunction with the IP-Option-Value\
    \ AVPs\n   to specify IP header options that do not match specific values.  The\n\
    \   Negated AVP is used without the IP-Option-Value AVP to specify IP\n   headers\
    \ that do not contain the option type.\n"
- title: 4.1.8.4.  IP-Option-Type AVP
  contents:
  - "4.1.8.4.  IP-Option-Type AVP\n   The IP-Option-Type AVP (AVP Code 538) is of\
    \ type Enumerated and the\n   values are managed by IANA under the IP Option Numbers\
    \ registry as\n   defined in [RFC2780].\n"
- title: 4.1.8.5.  IP-Option-Value AVP
  contents:
  - "4.1.8.5.  IP-Option-Value AVP\n   The IP-Option-Value AVP (AVP Code 539) is of\
    \ type OctetString and\n   contains the option value that must be matched.\n"
- title: 4.1.8.6.  TCP-Option AVP
  contents:
  - "4.1.8.6.  TCP-Option AVP\n   The TCP-Option AVP (AVP Code 540) is of type Grouped\
    \ and specifies a\n   TCP header option that must be matched.\n   TCP-Option ::=\
    \ < AVP Header: 540 >\n                  { TCP-Option-Type }\n               \
    \ * [ TCP-Option-Value ]\n                  [ Negated ]\n                * [ AVP\
    \ ]\n   If one or more TCP-Option-Value AVPs are present, one of the values\n\
    \   MUST match the value in the TCP header option.  If the TCP-Option-\n   Value\
    \ AVP is absent, the option type MUST be present in the TCP\n   header but the\
    \ value is wild carded.\n   The Negated AVP is used in conjunction that the TCP-Option-Value\
    \ AVPs\n   to specify TCP header options that do not match specific values.  The\n\
    \   Negated AVP is used without the TCP-Option-Value AVP to specify TCP\n   headers\
    \ that do not contain the option type.\n"
- title: 4.1.8.7.  TCP-Option-Type AVP
  contents:
  - "4.1.8.7.  TCP-Option-Type AVP\n   The TCP-Option-Type AVP (AVP Code 541) is of\
    \ type Enumerated and the\n   values are managed by IANA under the TCP Option\
    \ Numbers registry as\n   defined in [RFC2780].\n"
- title: 4.1.8.8.  TCP-Option-Value AVP
  contents:
  - "4.1.8.8.  TCP-Option-Value AVP\n   The TCP-Option-Value AVP (AVP Code 542) is\
    \ of type OctetString and\n   contains the option value that must be matched.\n"
- title: 4.1.8.9.  TCP-Flags AVP
  contents:
  - "4.1.8.9.  TCP-Flags AVP\n   The TCP-Flags AVP (AVP Code 543) is of type Grouped\
    \ and specifies a\n   set of TCP control flags that must be matched.\n   TCP-Flags\
    \ ::= < AVP Header: 543 >\n                 { TCP-Flag-Type }\n              \
    \   [ Negated ]\n               * [ AVP ]\n   If the Negated AVP is not present\
    \ or present but set to False, the\n   TCP-Flag-Type AVP specifies which flags\
    \ MUST be set.  If the Negated\n   AVP is set to True, the TCP-Flag-Type AVP specifies\
    \ which flags MUST\n   be cleared.\n"
- title: 4.1.8.10.  TCP-Flag-Type AVP
  contents:
  - "4.1.8.10.  TCP-Flag-Type AVP\n   The TCP-Flag-Type AVP (AVP Code 544) is of type\
    \ Unsigned32 and\n   specifies the TCP control flag types that must be matched.\
    \  The first\n   16 bits match the TCP header format defined in [RFC3168], and\
    \ the\n   subsequent 16 bits are unused.  Within the first 16 bits, bits 0 to\
    \ 3\n   are unused and bits 4 to 15 are managed by IANA under the TCP Header\n\
    \   Flag registry as defined in [RFC3168].\n"
- title: 4.1.8.11.  ICMP-Type
  contents:
  - "4.1.8.11.  ICMP-Type\n   The ICMP-Type AVP (AVP Code 545) is of type Grouped\
    \ and specifies an\n   ICMP message type that must be matched.\n   ICMP-Type ::=\
    \ < AVP Header: 545 >\n                 { ICMP-Type-Number }\n               *\
    \ [ ICMP-Code ]\n                 [ Negated ]\n               * [ AVP ]\n   If\
    \ the ICMP-Code AVP is present, the value MUST match that in the\n   ICMP header.\
    \  If the ICMP-Code AVP is absent, the ICMP type MUST be\n   present in the ICMP\
    \ header but the code is wild carded.\n   The Negated AVP is used in conjunction\
    \ with the ICMP-Code AVPs to\n   specify ICMP codes that do not match specific\
    \ values.  The Negated\n   AVP is used without the ICMP-Code AVP to specify ICMP\
    \ headers that do\n   not contain the ICMP type.  As such, the Negated AVP feature\
    \ applies\n   to ICMP-Code AVP if the ICMP-Code AVP is present.  If the ICMP-Code\n\
    \   AVP is absent, the Negated AVP feature applies to the ICMP-Type-\n   Number.\n"
- title: 4.1.8.12.  ICMP-Type-Number AVP
  contents:
  - "4.1.8.12.  ICMP-Type-Number AVP\n   The ICMP-Type-Number AVP (AVP Code 546) is\
    \ of type Enumerated and the\n   values are managed by IANA under the ICMP Type\
    \ Numbers registry as\n   defined in [RFC2780].\n"
- title: 4.1.8.13.  ICMP-Code AVP
  contents:
  - "4.1.8.13.  ICMP-Code AVP\n   The ICMP-Code AVP (AVP Code 547) is of type Enumerated\
    \ and the values\n   are managed by IANA under the ICMP Type Numbers registry\
    \ as defined\n   in [RFC2780].\n"
- title: 4.1.8.14.  ETH-Option AVP
  contents:
  - "4.1.8.14.  ETH-Option AVP\n   The ETH-Option AVP (AVP Code 548) is of type Grouped\
    \ and specifies\n   Ethernet specific attributes.\n   ETH-Option ::= < AVP Header:\
    \ 548 >\n                  { ETH-Proto-Type }\n                * [ VLAN-ID-Range\
    \ ]\n                * [ User-Priority-Range ]\n                * [ AVP ]\n"
- title: 4.1.8.15.  ETH-Proto-Type AVP
  contents:
  - "4.1.8.15.  ETH-Proto-Type AVP\n   The Eth-Proto-Type AVP (AVP Code 549) is of\
    \ type Grouped and\n   specifies the encapsulated protocol type.  ETH-Ether-Type\
    \ and ETH-SAP\n   are mutually exclusive.\n   ETH-Proto-Type ::= < AVP Header:\
    \ 549 >\n                    * [ ETH-Ether-Type ]\n                    * [ ETH-SAP\
    \ ]\n                    * [ AVP ]\n"
- title: 4.1.8.16.  ETH-Ether-Type AVP
  contents:
  - "4.1.8.16.  ETH-Ether-Type AVP\n   The ETH-Ether-Type AVP (AVP Code 550) is of\
    \ type OctetString.  The\n   value is a double octet that contains the value of\
    \ the Ethertype\n   field in the packet to match.  This AVP MAY be present in\
    \ the case of\n   Digital, Intel, and Xerox (DIX) or if the Subnetwork Access\
    \ Protocol\n   (SNAP) is present at 802.2, but the ETH-SAP AVP MUST NOT be present\n\
    \   in this case.\n"
- title: 4.1.8.17.  ETH-SAP AVP
  contents:
  - "4.1.8.17.  ETH-SAP AVP\n   The ETH-SAP AVP (AVP Code 551) is of type OctetString.\
    \  The value is\n   a double octet representing the 802.2 SAP as specified in\n\
    \   [IEEE802.2].  The first octet contains the Destination Service Access\n  \
    \ Point (DSAP) and the second the Source Service Access Point (SSAP).\n"
- title: 4.1.8.18.  VLAN-ID-Range AVP
  contents:
  - "4.1.8.18.  VLAN-ID-Range AVP\n   The VLAN-ID-Range AVP (AVP Code 552) is of type\
    \ Grouped and specifies\n   the VLAN range to match.  VLAN identities are specified\
    \ either by a\n   single VLAN-ID according to [IEEE802.1Q] or by a combination\
    \ of\n   Customer and Service VLAN-IDs according to [IEEE802.1ad].\n   The single\
    \ VLAN-ID is represented by the C-VID-Start and C-VID-End\n   AVPs, and the S-VID-Start\
    \ and S-VID-End AVPs SHALL be omitted in this\n   case.  If the VLAN-ID-Range\
    \ AVP is omitted from the classifier, then\n   comparison of the VLAN identity\
    \ of the packet is irrelevant.\n   VLAN-ID-Range ::= < AVP Header: 552 >\n   \
    \                  [ S-VID-Start ]\n                     [ S-VID-End ]\n     \
    \                [ C-VID-Start ]\n                     [ C-VID-End ]\n       \
    \            * [ AVP ]\n   The following is the list of possible combinations\
    \ of the S-VID-Start\n   and S-VID-End AVPs and their inference:\n   o  If S-VID-Start\
    \ AVP is present but the S-VID-End AVP is absent, the\n      S-VID-Start AVP value\
    \ MUST equal the value of the IEEE 802.1ad\n      S-VID bits specified in [IEEE802.1ad]\
    \ for a successful match.\n   o  If S-VID-Start AVP is absent but the S-VID-End\
    \ AVP is present, the\n      S-VID-End AVP value MUST equal the value of the IEEE\
    \ 802.1ad S-VID\n      bits for a successful match.\n   o  If both S-VID-Start\
    \ and S-VID-End AVPs are present and their\n      values are equal, the S-VID-Start\
    \ AVP value MUST equal the value\n      of the IEEE 802.1ad S-VID bits for a successful\
    \ match.\n   o  If both S-VID-Start and S-VID-End AVPs are present and the value\n\
    \      of S-VID-End AVP is greater than the value of the S-VID-Start AVP,\n  \
    \    the value of the IEEE 802.1ad S-VID bits MUST be greater than or\n      equal\
    \ to the S-VID-Start AVP value and less than or equal to the\n      S-VID-End\
    \ AVP value for a successful match.  If the S-VID-Start\n      and S-VID-End AVPs\
    \ are specified, then Ethernet packets without\n      IEEE 802.1ad encapsulation\
    \ MUST NOT match this classifier.\n   o  If the S-VID-Start and S-VID-End AVPs\
    \ are omitted, then existence\n      of IEEE802.1ad encapsulation or comparison\
    \ of the IEEE 802.1ad\n      S-VID bits is irrelevant for this classifier.\n \
    \  The following is the list of possible combinations of the C-VID-Start\n   and\
    \ C-VID-End AVPs and their inference:\n   o  If C-VID-Start AVP is present but\
    \ the C-VID-End AVP is absent, the\n      C-VID-Start AVP value MUST equal the\
    \ value of the IEEE 802.1ad\n      C-VID bits specified in [IEEE802.1ad] or the\
    \ IEEE 802.1Q VLAN-ID\n      bits specified in [IEEE802.1Q] for a successful match.\n\
    \   o  If C-VID-Start AVP is absent but the C-VID-End AVP is present, the\n  \
    \    C-VID-End AVP value MUST equal the value of the IEEE 802.1ad C-VID\n    \
    \  bits or the IEEE 802.1Q VLAN-ID bits for a successful match.\n   o  If both\
    \ C-VID-Start and C-VID-End AVPs are present and their\n      values are equal,\
    \ the C-VID-Start AVP value MUST equal the value\n      of the IEEE 802.1ad C-VID\
    \ bits or the IEEE 802.1Q VLAN-ID bits for\n      a successful match.\n   o  If\
    \ both C-VID-Start and C-VID-End AVPs are present and the value\n      of C-VID-End\
    \ AVP is greater than the value of the C-VID-Start AVP,\n      the value of the\
    \ IEEE 802.1ad C-VID bits or the IEEE 802.1Q\n      VLAN-ID bits MUST be greater\
    \ than or equal to the C-VID-Start AVP\n      value and less than or equal to\
    \ the C-VID-End AVP value for a\n      successful match.  If the C-VID-Start and\
    \ C-VID-End AVPs are\n      specified, then Ethernet packets without IEEE 802.1ad\
    \ or IEEE\n      802.1Q encapsulation MUST NOT match this classifier.\n   o  If\
    \ the C-VID-Start and C-VID-End AVPs are omitted, the comparison\n      of the\
    \ IEEE 802.1ad C-VID bits or IEEE 802.1Q VLAN-ID bits for\n      this classifier\
    \ is irrelevant.\n"
- title: 4.1.8.19.  S-VID-Start AVP
  contents:
  - "4.1.8.19.  S-VID-Start AVP\n   The S-VID-Start AVP (AVP Code 553) is of type\
    \ Unsigned32.  The value\n   MUST be in the range from 0 to 4095.  The value of\
    \ this AVP specifies\n   the start value of the range of S-VID VLAN-IDs to be\
    \ matched.\n"
- title: 4.1.8.20.  S-VID-End AVP
  contents:
  - "4.1.8.20.  S-VID-End AVP\n   The S-VID-End AVP (AVP Code 554) is of type Unsigned32.\
    \  The value\n   MUST be in the range from 0 to 4095.  The value of this AVP specifies\n\
    \   the end value of the range of S-VID VLAN-IDs to be matched.\n"
- title: 4.1.8.21.  C-VID-Start AVP
  contents:
  - "4.1.8.21.  C-VID-Start AVP\n   The C-VID-Start AVP (AVP Code 555) is of type\
    \ Unsigned32.  The value\n   MUST be in the range from 0 to 4095.  The value of\
    \ this AVP specifies\n   the start value of the range of C-VID VLAN-IDs to be\
    \ matched.\n"
- title: 4.1.8.22.  C-VID-End AVP
  contents:
  - "4.1.8.22.  C-VID-End AVP\n   The C-VID-End AVP (AVP Code 556) is of type Unsigned32.\
    \  The value\n   MUST be in the range from 0 to 4095.  The value of this AVP specifies\n\
    \   the end value of the range of C-VID VLAN-IDs to be matched.\n"
- title: 4.1.8.23.  User-Priority-Range AVP
  contents:
  - "4.1.8.23.  User-Priority-Range AVP\n   The User-Priority-Range AVP (AVP Code\
    \ 557) is of type Grouped and\n   specifies an inclusive range to match the user_priority\
    \ parameter\n   specified in [IEEE802.1D].  An Ethernet packet containing the\n\
    \   user_priority parameter matches this classifier if the value is\n   greater\
    \ than or equal to Low-User-Priority and less than or equal to\n   High-User-Priority.\
    \  If this AVP is omitted, then comparison of the\n   IEEE 802.1D user_priority\
    \ parameter for this classifier is\n   irrelevant.\n   User-Priority-Range ::=\
    \ < AVP Header: 557 >\n                         * [ Low-User-Priority ]\n    \
    \                     * [ High-User-Priority ]\n                         * [ AVP\
    \ ]\n"
- title: 4.1.8.24.  Low-User-Priority AVP
  contents:
  - "4.1.8.24.  Low-User-Priority AVP\n   The Low-User-Priority AVP (AVP Code 558)\
    \ is of type Unsigned32.  The\n   value MUST be in the range from 0 to 7.\n"
- title: 4.1.8.25.  High-User-Priority AVP
  contents:
  - "4.1.8.25.  High-User-Priority AVP\n   The High-User-Priority AVP (AVP Code 559)\
    \ is of type Unsigned32.  The\n   value MUST be in the range from 0 to 7.\n"
- title: 4.2.  Time Of Day AVPs
  contents:
  - "4.2.  Time Of Day AVPs\n   In many QoS applications, the QoS specification applied\
    \ to the\n   traffic flow is conditional upon the time of day when the flow was\n\
    \   observed.  The following sections define AVPs that can be used to\n   express\
    \ one or more time windows that determine when a traffic\n   treatment action\
    \ is applicable to a traffic flow.\n"
- title: 4.2.1.  Time-Of-Day-Condition AVP
  contents:
  - "4.2.1.  Time-Of-Day-Condition AVP\n   The Time-Of-Day-Condition AVP (AVP Code\
    \ 560) is of type Grouped and\n   specifies one or more time windows.\n   Time-Of-Day-Condition\
    \ ::= < AVP Header: 560 >\n                             [ Time-Of-Day-Start ]\n\
    \                             [ Time-Of-Day-End ]\n                          \
    \   [ Day-Of-Week-Mask ]\n                             [ Day-Of-Month-Mask ]\n\
    \                             [ Month-Of-Year-Mask ]\n                       \
    \      [ Absolute-Start-Time ]\n                             [ Absolute-End-Time\
    \ ]\n                             [ Timezone-Flag ]\n                        \
    \   * [ AVP ]\n   For example, a time window for 9 a.m. to 5 p.m. (local time)\
    \ from\n   Monday to Friday would be expressed as:\n   Time-Of-Day-Condition =\
    \ {\n       Time-Of-Day-Start = 32400;\n       Time-Of-Day-End = 61200;\n    \
    \   Day-Of-Week-Mask =\n           ( MONDAY | TUESDAY | WEDNESDAY | THURSDAY |\
    \ FRIDAY );\n       Timezone-Flag = LOCAL;\n   }\n"
- title: 4.2.2.  Time-Of-Day-Start AVP
  contents:
  - "4.2.2.  Time-Of-Day-Start AVP\n   The Time-Of-Day-Start AVP (AVP Code 561) is\
    \ of type Unsigned32.  The\n   value MUST be in the range from 0 to 86400.  The\
    \ value of this AVP\n   specifies the start of an inclusive time window expressed\
    \ as the\n   offset in seconds from midnight.  If this AVP is absent from the\n\
    \   Time-Of-Day-Condition AVP, the time window starts at midnight.\n"
- title: 4.2.3.  Time-Of-Day-End AVP
  contents:
  - "4.2.3.  Time-Of-Day-End AVP\n   The Time-Of-Day-End AVP (AVP Code 562) is of\
    \ type Unsigned32.  The\n   value MUST be in the range from 1 to 86400.  The value\
    \ of this AVP\n   specifies the end of an inclusive time window expressed as the\
    \ offset\n   in seconds from midnight.  If this AVP is absent from the Time-Of-\n\
    \   Day-Condition AVP, the time window ends one second before midnight.\n"
- title: 4.2.4.  Day-Of-Week-Mask AVP
  contents:
  - "4.2.4.  Day-Of-Week-Mask AVP\n   The Day-Of-Week-Mask AVP (AVP Code 563) is of\
    \ type Unsigned32.  The\n   value is a bit mask that specifies the day of the\
    \ week for the time\n   window to match.  This document specifies the following\
    \ bits:\n      Bit  | Name\n     ------+------------\n       0   | SUNDAY\n  \
    \     1   | MONDAY\n       2   | TUESDAY\n       3   | WEDNESDAY\n       4   |\
    \ THURSDAY\n       5   | FRIDAY\n       6   | SATURDAY\n   The bit MUST be set\
    \ for the time window to match on the corresponding\n   day of the week.  Bit\
    \ 0 is the least significant bit and unused bits\n   MUST be cleared.  If this\
    \ AVP is absent from the Time-Of-Day-\n   Condition AVP, the time windows match\
    \ on all days of the week.\n"
- title: 4.2.5.  Day-Of-Month-Mask AVP
  contents:
  - "4.2.5.  Day-Of-Month-Mask AVP\n   The Day-Of-Month AVP (AVP Code 564) is of type\
    \ Unsigned32.  The value\n   MUST be in the range from 0 to 2147483647.  The value\
    \ is a bit mask\n   that specifies the days of the month where bit 0 represents\
    \ the first\n   day of the month through to bit 30, which represents the last\
    \ day of\n   the month.  The bit MUST be set for the time window to match on the\n\
    \   corresponding day of the month.  Bit 0 is the least significant bit\n   and\
    \ unused bits MUST be cleared.  If this AVP is absent from the\n   Time-Of-Day-Condition\
    \ AVP, the time windows match on all days of the\n   month.\n"
- title: 4.2.6.  Month-Of-Year-Mask AVP
  contents:
  - "4.2.6.  Month-Of-Year-Mask AVP\n   The Month-Of-Year-Mask AVP (AVP Code 565)\
    \ is of type Unsigned32.  The\n   value is a bit mask that specifies the months\
    \ of the year for the\n   time window to match.  This document specifies the following\
    \ bits:\n      Bit  | Name\n     ------+-----------\n       0   | JANUARY\n  \
    \     1   | FEBRUARY\n       2   | MARCH\n       3   | APRIL\n       4   | MAY\n\
    \       5   | JUNE\n       6   | JULY\n       7   | AUGUST\n       8   | SEPTEMBER\n\
    \       9   | OCTOBER\n       10  | NOVEMBER\n       11  | DECEMBER\n   The bit\
    \ MUST be set for the time window to match on the corresponding\n   month of the\
    \ year.  Bit 0 is the least significant bit and unused\n   bits MUST be cleared.\
    \  If this AVP is absent from the Time-Of-Day-\n   Condition AVP, the time windows\
    \ match during all months of the year.\n"
- title: 4.2.7.  Absolute-Start-Time AVP
  contents:
  - "4.2.7.  Absolute-Start-Time AVP\n   The Absolute-Start-Time AVP (AVP Code 566)\
    \ is of type Time.  The\n   value of this AVP specifies the time in seconds since\
    \ January 1,\n   1900, 00:00 UTC when the time window starts.  If this AVP is\
    \ absent\n   from the Time-Of-Day-Condition AVP, the time window starts on January\n\
    \   1, 1900, 00:00 UTC.\n"
- title: 4.2.8.  Absolute-Start-Fractional-Seconds AVP
  contents:
  - "4.2.8.  Absolute-Start-Fractional-Seconds AVP\n   The Absolute-Start-Fractional-Seconds\
    \ AVP (AVP Code 567) is of type\n   Unsigned32.  The value specifies the fractional\
    \ seconds that are\n   added to Absolute-Start-Time value in order to determine\
    \ when the\n   time window starts.  If this AVP is absent from the Time-Of-Day-\n\
    \   Condition AVP, then the fractional seconds are assumed to be zero.\n"
- title: 4.2.9.  Absolute-End-Time AVP
  contents:
  - "4.2.9.  Absolute-End-Time AVP\n   The Time-Of-Day-End AVP (AVP Code 568) is of\
    \ type Time.  The value of\n   this AVP specifies the time in seconds since January\
    \ 1, 1900, 00:00\n   UTC when the time window ends.  If this AVP is absent from\
    \ the Time-\n   Of-Day-Condition AVP, then the time window is open-ended.\n"
- title: 4.2.10.  Absolute-End-Fractional-Seconds AVP
  contents:
  - "4.2.10.  Absolute-End-Fractional-Seconds AVP\n   The Absolute-End-Fractional-Seconds\
    \ AVP (AVP Code 569) is of type\n   Unsigned32.  The value specifies the fractional\
    \ seconds that are\n   added to Absolute-End-Time value in order to determine\
    \ when the time\n   window ends.  If this AVP is absent from the Time-Of-Day-Condition\n\
    \   AVP, then the fractional seconds are assumed to be zero.\n"
- title: 4.2.11.  Timezone-Flag AVP
  contents:
  - "4.2.11.  Timezone-Flag AVP\n   The Timezone-Flag AVP (AVP Code 570) is of type\
    \ Enumerated and\n   indicates whether the time windows are specified in UTC,\
    \ local time,\n   at the managed terminal or as an offset from UTC.  If this AVP\
    \ is\n   absent from the Time-Of-Day-Condition AVP, then the time windows are\n\
    \   in UTC.\n   This document defines the following values:\n     Value | Name\
    \ and Semantic\n     ------+--------------------------------------------------\n\
    \       0   | UTC - The time windows are expressed in UTC.\n       1   | LOCAL\
    \ - The time windows are expressed in local\n           | time at the managed\
    \ terminal.\n       2   | OFFSET - The time windows are expressed as an\n    \
    \       | offset from UTC (see Timezone-Offset AVP).\n"
- title: 4.2.12.  Timezone-Offset AVP
  contents:
  - "4.2.12.  Timezone-Offset AVP\n   The Timezone-Offset AVP (AVP Code 571) is of\
    \ type Integer32.  The\n   value of this AVP MUST be in the range from -43200\
    \ to 43200.  It\n   specifies the offset in seconds from UTC that was used to\
    \ express\n   Time-Of-Day-Start, Time-Of-Day-End, Day-Of-Week-Mask, Day-Of-Month-\n\
    \   Mask, and Month-Of-Year-Mask AVPs.  This AVP MUST be present if the\n   Timezone-Flag\
    \ AVP is set to OFFSET.\n"
- title: 5.  Actions
  contents:
  - "5.  Actions\n   This section defines the actions associated with a rule.\n"
- title: 5.1.  Treatment-Action AVP
  contents:
  - "5.1.  Treatment-Action AVP\n   The Treatment-Action AVP (AVP Code 572) is of\
    \ type Enumerated and\n   lists the actions that are associated with the condition\
    \ part of a\n   rule.  The following actions are defined in this document:\n \
    \     0: drop\n      1: shape\n      2: mark\n      3: permit\n   drop:\n    \
    \  This action indicates that the respective traffic MUST be dropped.\n   shape:\n\
    \      [RFC2475] describes shaping as \"the process of delaying packets\n    \
    \  within a traffic stream to cause it to conform to some defined\n      traffic\
    \ profile\".  When the action is set to 'shape', the QoS-\n      Parameters AVP\
    \ SHALL contain QoS information AVPs, such as the\n      TMOD-1 and Bandwidth\
    \ AVPs [RFC5624], that indicate how to shape\n      the traffic described by the\
    \ condition part of the rule.\n   mark:\n      [RFC2475] describes marking as\
    \ \"the process of setting the DS\n      codepoint in a packet based on defined\
    \ rules\".  When the action is\n      set to 'mark', the QoS-Parameters AVP SHALL\
    \ contain QoS\n      information AVPs, such as the PHB-Class AVP [RFC5624], that\n\
    \      indicate the Diffserv marking to be applied to the traffic\n      described\
    \ by the condition part of the rule.\n   permit:\n      The 'permit' action is\
    \ the counterpart to the 'drop' action used\n      to allow traffic that matches\
    \ the condition part of a rule to\n      bypass.\n   [RFC2475] also describes\
    \ an action called 'policing' as \"the process\n   of discarding packets (by a\
    \ dropper) within a traffic stream in\n   accordance with the state of a corresponding\
    \ meter enforcing a\n   traffic profile\".  This behavior is modeled in the Filter-Rule\n\
    \   through the inclusion of the Excess-Treatment AVP containing a\n   Treatment-Action\
    \ AVP set to 'drop'.\n   Further action values can be registered, as described\
    \ in\n   Section 10.3.\n"
- title: 5.2.  QoS-Profile-Id AVP
  contents:
  - "5.2.  QoS-Profile-Id AVP\n   The QoS-Profile-Id AVP (AVP Code 573) is of type\
    \ Unsigned32 and\n   contains a QoS profile template identifier.  An initial QoS\
    \ profile\n   template is defined with value of 0 and can be found in [RFC5624].\n\
    \   The registry for the QoS profile templates is created with the same\n   document.\n"
- title: 5.3.  QoS-Profile-Template AVP
  contents:
  - "5.3.  QoS-Profile-Template AVP\n   The QoS-Profile-Template AVP (AVP Code 574)\
    \ is of type Grouped and\n   defines the namespace of the QoS profile (indicated\
    \ in the Vendor-ID\n   AVP) followed by the specific value for the profile.\n\
    \   The Vendor-Id AVP contains a 32-bit IANA Private Enterprise Number\n   (PEN),\
    \ and the QoS-Profile-Id AVP contains the template identifier\n   assigned by\
    \ the vendor.  The vendor identifier of zero (0) is used\n   for the IETF.\n \
    \  QoS-Profile-Template ::= < AVP Header: 574 >\n                            {\
    \ Vendor-Id }\n                            { QoS-Profile-Id }\n              \
    \            * [ AVP ]\n"
- title: 5.4.  QoS-Semantics
  contents:
  - "5.4.  QoS-Semantics\n   The QoS-Semantics AVP (AVP Code 575) is of type Enumerated\
    \ and\n   provides the semantics for the QoS-Profile-Template and QoS-\n   Parameters\
    \ AVPs in the Filter-Rule AVP.\n   This document defines the following values:\n\
    \    (0): QoS-Desired\n    (1): QoS-Available\n    (2): QoS-Delivered\n    (3):\
    \ Minimum-QoS\n    (4): QoS-Authorized\n   The semantics of the QoS parameters\
    \ depend on the information\n   provided in the list above.  The semantics of\
    \ the different values\n   are as follows:\n   Object Type    Direction   Semantic\n\
    \   ---------------------------------------------------------------------\n  \
    \ QoS-Desired     C->S       Client requests authorization of the\n          \
    \                    indicated QoS.\n   QoS-Desired     C<-S       NA\n   QoS-Available\
    \   C->S       Admission Control at client indicates\n                       \
    \       that this QoS is available. (note 1)\n   QoS-Available   C<-S       Admission\
    \ Control at server indicates\n                              that this QoS is\
    \ available. (note 2)\n   QoS-Delivered   C->S       Client is reporting the actual\
    \ QoS\n                              delivered to the terminal.\n   QoS-Delivered\
    \   C<-S       NA\n   Minimum-QoS     C->S       Client is not interested in authorizing\n\
    \                              QoS that is lower than the indicated QoS.\n   Minimum-QoS\
    \     C<-S       Client must not provide QoS guarantees\n                    \
    \          lower than the indicated QoS.\n   QoS-Authorized  C->S       NA\n \
    \  QoS-Authorized  C<-S       Server authorizes the indicated QoS.\n   Legend:\n\
    \     C: Diameter client\n     S: Diameter server\n     NA: Not applicable to\
    \ this document;\n         no semantic defined in this specification\n   Notes:\n\
    \    (1) QoS-Available in this direction indicates to the server that\n      \
    \  any QoS-Authorized or Minimum-QoS must be less than this\n        indicated\
    \ QoS.\n    (2) QoS-Available in this direction is only useful when the AAA\n\
    \        server performs admission control and knows about the resources\n   \
    \     in the network.\n"
- title: 5.5.  QoS-Parameters AVP
  contents:
  - "5.5.  QoS-Parameters AVP\n   The QoS-Parameters AVP (AVP Code 576) is of type\
    \ Grouped and contains\n   Quality of Service parameters.  These parameters are\
    \ defined in\n   separate documents and depend on the indicated QoS profile template\n\
    \   of the QoS-Profile-Template AVP.  For an initial QoS parameter\n   specification,\
    \ see [RFC5624].\n   QoS-Parameters  ::= < AVP Header: 576 >\n               \
    \         * [ AVP ]\n"
- title: 5.6.  Excess-Treatment AVP
  contents:
  - "5.6.  Excess-Treatment AVP\n   The Excess-Treatment AVP (AVP Code 577) is of\
    \ type Grouped and\n   indicates how out-of-profile traffic, i.e., traffic not\
    \ covered by\n   the original QoS-Profile-Template and QoS-Parameters AVPs, is\n\
    \   treated.  The additional Treatment-Action, QoS-Profile-Template, and\n   QoS-Parameters\
    \ AVPs carried inside the Excess-Treatment AVP provide\n   information about the\
    \ QoS treatment of the excess traffic.  In case\n   the Excess-Treatment AVP is\
    \ absent, then the treatment of the out-of-\n   profile traffic is left to the\
    \ discretion of the node performing QoS\n   treatment.\n   Excess-Treatment ::=\
    \ < AVP Header: 577 >\n                        { Treatment-Action }\n        \
    \                [ QoS-Profile-Template ]\n                        [ QoS-Parameters\
    \ ]\n                      * [ AVP ]\n"
- title: 6.  QoS Capability Indication
  contents:
  - "6.  QoS Capability Indication\n   The QoS-Capability AVP (AVP Code 578) is of\
    \ type Grouped and contains\n   a list of supported Quality of Service profile\
    \ templates (and\n   therefore the support of the respective parameter AVPs).\n\
    \   The QoS-Capability AVP may be used for a simple announcement of the\n   QoS\
    \ capabilities and QoS profiles supported by a peer.  It may also\n   be used\
    \ to negotiate a mutually supported set of QoS capabilities and\n   QoS profiles\
    \ between two peers.  In such a case, handling of failed\n   negotiations is application\
    \ and/or deployment specific.\n   QoS-Capability ::= < AVP Header: 578 >\n   \
    \                 1*{ QoS-Profile-Template }\n                    * [ AVP ]\n\
    \   The QoS-Profile-Template AVP is defined in Section 5.3.\n"
- title: 7.  Examples
  contents:
  - "7.  Examples\n   This section shows a number of signaling flows where QoS negotiation\n\
    \   and authorization are part of the conventional NASREQ, EAP, or Credit\n  \
    \ Control applications message exchanges.  The signaling flows for the\n   Diameter\
    \ QoS Application are described in [DIAMETER-QOS].\n"
- title: 7.1.  Diameter EAP with QoS Information
  contents:
  - "7.1.  Diameter EAP with QoS Information\n   Figure 2 shows a simple signaling\
    \ flow where a Network Access Server\n   (NAS) (Diameter Client) announces its\
    \ QoS awareness and capabilities\n   included into the DER message and as part\
    \ of the access\n   authentication procedure.  Upon completion of the EAP exchange,\
    \ the\n   Diameter server provides a pre-provisioned QoS profile with the QoS-\n\
    \   Semantics in the Filter-Rule AVP set to 'QoS-Authorized', to the NAS\n   in\
    \ the final Diameter-EAP-Answer (DEA) message.\n    End                      \
    \     Diameter                      Diameter\n    Host                       \
    \    Client                         Server\n     |                           \
    \    |                                |\n     |        (initiate EAP)        \
    \ |                                |\n     |<----------------------------->| \
    \                               |\n     |                               | Diameter-EAP-Request\
    \           |\n     |                               | EAP-Payload(EAP Start) \
    \        |\n     |                               | QoS-Capability            \
    \     |\n     |                               |------------------------------->|\n\
    \     |                               |                                |\n   \
    \  |                               |            Diameter-EAP-Answer |\n     |\
    \                          Result-Code=DIAMETER_MULTI_ROUND_AUTH |\n     |   \
    \                            |    EAP-Payload(EAP Request #1) |\n     |      \
    \                         |<-------------------------------|\n     |         EAP\
    \ Request(Identity) |                                |\n     |<------------------------------|\
    \                                |\n     :                               :   \
    \                             :\n     :                     <<<more message exchanges>>>\
    \               :\n     :                               :                    \
    \            :\n     |                               |                       \
    \         |\n     | EAP Response #N               |                          \
    \      |\n     |------------------------------>|                             \
    \   |\n     |                               | Diameter-EAP-Request           |\n\
    \     |                               | EAP-Payload(EAP Response #N)   |\n   \
    \  |                               |------------------------------->|\n     |\
    \                               |                                |\n     |   \
    \                            |            Diameter-EAP-Answer |\n     |      \
    \                         |   Result-Code=DIAMETER_SUCCESS |\n     |         \
    \                      |       EAP-Payload(EAP Success) |\n     |            \
    \                   |           (authorization AVPs) |\n     |               \
    \                |  QoS-Resources(QoS-Authorized) |\n     |                  \
    \             |<-------------------------------|\n     |                     \
    \          |                                |\n     |                   EAP Success\
    \ |                                |\n     |<------------------------------| \
    \                               |\n     |                               |    \
    \                            |\n     Figure 2: Example of a Diameter EAP Enhanced\
    \ with QoS Information\n"
- title: 7.2.  Diameter NASREQ with QoS Information
  contents:
  - "7.2.  Diameter NASREQ with QoS Information\n   Figure 3 shows a similar pre-provisioned\
    \ QoS signaling as in Figure 2\n   but using the NASREQ application instead of\
    \ EAP application.\n      End                                             Diameter\n\
    \      Host               NAS                            Server\n       |    \
    \              |                              |\n       |  Start Network   | \
    \                             |\n       |  Attachment      |                 \
    \             |\n       |<---------------->|                              |\n\
    \       |                  |                              |\n       |        \
    \          |AA-Request                    |\n       |                  |NASREQ-Payload\
    \                |\n       |                  |QoS-Capability                |\n\
    \       |                  +----------------------------->|\n       |        \
    \          |                              |\n       |                  |     \
    \                AA-Answer|\n       |            Result-Code=DIAMETER_MULTI_ROUND_AUTH|\n\
    \       |                NASREQ-Payload(NASREQ Request #1)|\n       |        \
    \          |<-----------------------------+\n       |                  |     \
    \                         |\n       | Request          |                     \
    \         |\n       |<-----------------+                              |\n    \
    \   |                  |                              |\n       :            \
    \      :                              :\n       :          <<<more message exchanges>>>\
    \           :\n       :                  :                              :\n  \
    \     | Response #N      |                              |\n       +----------------->|\
    \                              |\n       |                  |                \
    \              |\n       |                  |AA-Request                    |\n\
    \       |                  |NASREQ-Payload ( Response #N )|\n       |        \
    \          +----------------------------->|\n       |                  |     \
    \                         |\n       |                  |                     AA-Answer|\n\
    \       |                  |  Result-Code=DIAMETER_SUCCESS|\n       |        \
    \          |          (authorization AVPs)|\n       |                  | QoS-Resources(QoS-Authorized)|\n\
    \       |                  |<-----------------------------+\n       |        \
    \          |                              |\n       | Success          |     \
    \                         |\n       |<-----------------+                     \
    \         |\n       |                  |                              |\n   Figure\
    \ 3: Example of a Diameter NASREQ Enhanced with QoS Information\n"
- title: 7.3.  QoS Authorization
  contents:
  - "7.3.  QoS Authorization\n   Figure 4 shows an example of authorization-only QoS\
    \ signaling as part\n   of the NASREQ message exchange.  The NAS provides the\
    \ Diameter server\n   with the \"QoS-Desired\" QoS-Semantics AVP included in the\
    \ QoS-\n   Resources AVP.  The Diameter server then either authorizes the\n  \
    \ indicated QoS or rejects the request and informs the NAS about the\n   result.\
    \  In this scenario, the NAS does not need to include the QoS-\n   Capability\
    \ AVP in the AAR message as the QoS-Resources AVP implicitly\n   does the same\
    \ and also the NAS is authorizing a specific QoS profile,\n   not a pre-provisioned\
    \ one.\n       End                                            Diameter\n     \
    \  Host               NAS                          Server\n        |         \
    \         |                              |\n        |                  |     \
    \                         |\n        |  QoS Request     |                    \
    \          |\n        +----------------->|                              |\n  \
    \      |                  |                              |\n        |        \
    \          |AA-Request                    |\n        |                  |Auth-Request-Type=AUTHORIZE_ONLY\n\
    \        |                  |NASREQ-Payload                |\n        |      \
    \            |QoS-Resources(QoS-Desired)    |\n        |                  +----------------------------->|\n\
    \        |                  |                              |\n        |      \
    \            |                     AA-Answer|\n        |                  |  \
    \     NASREQ-Payload(Success)|\n        |                  | QoS-Resources(QoS-Authorized)|\n\
    \        |                  |<-----------------------------+\n        |  Accept\
    \          |                              |\n        |<-----------------+    \
    \                          |\n        |                  |                   \
    \           |\n        |                  |                              |\n \
    \       |                  |                              |\n          Figure\
    \ 4: Example of an Authorization-Only Message Flow\n"
- title: 7.4.  Diameter Server Initiated Re-Authorization of QoS
  contents:
  - "7.4.  Diameter Server Initiated Re-Authorization of QoS\n   Figure 5 shows a\
    \ message exchange for a Diameter server-initiated QoS\n   re-authorization procedure.\
    \  The Diameter server sends the NAS a Re-\n   Auth Request (RAR) message requesting\
    \ re-authorization for an\n   existing session and the NAS acknowledges it with\
    \ a RAA message.  The\n   NAS is aware of its existing QoS profile and information\
    \ for the\n   ongoing session that the Diameter server requested for re-\n   authorization.\
    \  Thus, the NAS must initiate re-authorization of the\n   existing QoS profile.\
    \  The re-authorization procedure is the same as\n   in Figure 4.\n      End \
    \                                            Diameter\n      Host            \
    \   NAS                           Server\n       |                  |        \
    \                      |\n       |                  |                        \
    \      |\n       :                  :                              :\n       :\
    \          <<<Initial Message Exchanges>>>        :\n       :                \
    \  :                              :\n       |                  |             \
    \                 |\n       |                  |                   RA-Request\
    \ |\n       |                  |<-----------------------------+\n       |    \
    \              |                              |\n       |                  |RA-Answer\
    \                     |\n       |                  |Result-Code=DIAMETER_SUCCESS\
    \  |\n       |                  +----------------------------->|\n       |   \
    \               |                              |\n       |                  |\
    \                              |\n       |                  |AA-Request      \
    \              |\n       |                  |NASREQ-Payload                |\n\
    \       |                  |Auth-Request-Type=AUTHORIZE_ONLY\n       |       \
    \           |QoS-Resources(QoS-Desired)    |\n       |                  +----------------------------->|\n\
    \       |                  |                              |\n       |        \
    \          |                     AA-Answer|\n       |                  |  Result-Code=DIAMETER_SUCCESS|\n\
    \       |                  |          (authorization AVPs)|\n       |        \
    \          | QoS-Resources(QoS-Authorized)|\n       |                  |<-----------------------------+\n\
    \       |                  |                              |\n    Figure 5: Example\
    \ of a Server-Initiated Re-Authorization Procedure\n"
- title: 7.5.  Diameter Credit Control (CC) with QoS Information
  contents:
  - "7.5.  Diameter Credit Control (CC) with QoS Information\n   In this example,\
    \ the CC client includes a QoS authorization request\n   (QoS-Semantics=QoS-Desired)\
    \ in the initial Credit Control Request\n   (CCR).  The CC server responds with\
    \ a Credit Control Answer (CCA),\n   which includes the granted resources with\
    \ an authorized QoS\n   definition (QoS-Semantics=QoS-Authorized) and the CC client\
    \ proceeds\n   to deliver service with the specified QoS.\n   At the end of service,\
    \ the CC client reports the units used and the\n   QoS level at which those units\
    \ were delivered (QoS-Semantics=QoS-\n   Delivered).  The end of service could\
    \ occur because the credit\n   resources granted to the user were exhausted or\
    \ the service was been\n   successfully delivered or the service was terminated,\
    \ e.g., because\n   the Service Element could not deliver the service at the authorized\n\
    \   QoS level.\n                           Service Element\n     End User    \
    \        (CC Client)                        CC Server\n        |             \
    \        |                                  |\n        |(1) Service Request  |\
    \                                  |\n        |-------------------->|        \
    \                          |\n        |                     |(2) CCR (Initial,\
    \                 |\n        |                     |    QoS-Resources(QoS-Desired))\
    \   |\n        |                     |--------------------------------->|\n  \
    \      |                     |(3) CCA (Granted-Units,           |\n        | \
    \                    |    QoS-Resources(QoS-Authorized))|\n        |         \
    \            |<---------------------------------|\n        |(4) Service Delivery\
    \ |                                  |\n        |<------------------->|      \
    \                            |\n        |                     |              \
    \                    |\n        |(5) End of Service   |                      \
    \            |\n        |-------------------->|                              \
    \    |\n        |                     |(6) CCR (Termination, Used-Units, |\n \
    \       |                     |    QoS-Resources(QoS-Delivered)) |\n        |\
    \                     |--------------------------------->|\n        |        \
    \             |(7) CCA                           |\n        |                \
    \     |<---------------------------------|\n    Figure 6: Example of a Diameter\
    \ Credit Control with QoS Information\n"
- title: 7.6.  Classifier Examples
  contents:
  - "7.6.  Classifier Examples\n   Example: Classify all packets from hosts on subnet\
    \ 192.0.2.0/24 to\n   ports 80, 8090 or 443 on web servers 192.0.2.123, 192.0.2.124,\n\
    \   192.0.2.125.\n   Classifier = {\n       Classifier-Id = \"web_svr_example\"\
    ;\n       Protocol = TCP;\n       Direction = OUT;\n       From-Spec = {\n   \
    \        IP-Address-Mask = {\n               IP-Address = 192.0.2.0;\n       \
    \        IP-Bit-Mask-Width = 24;\n           }\n       }\n       To-Spec = {\n\
    \           IP-Address = 192.0.2.123;\n           IP-Address = 192.0.2.124;\n\
    \           IP-Address = 192.0.2.125;\n           Port = 80;\n           Port\
    \ = 8080;\n           Port = 443;\n       }\n   }\n   Example: Any SIP signaling\
    \ traffic from a device with a MAC address\n   of 01:23:45:67:89:ab to servers\
    \ with IP addresses in the range\n   192.0.2.90 to 192.0.2.190.\n   Classifier\
    \ = {\n       Classifier-Id = \"web_svr_example\";\n       Protocol = UDP;\n \
    \      Direction = OUT;\n       From-Spec = {\n           MAC-Address = 01:23:45:67:89:ab;\n\
    \       }\n       To-Spec = {\n           IP-Address-Range = {\n             \
    \  IP-Address-Start = 192.0.2.90;\n               IP-Address-End = 192.0.2.190;\n\
    \           }\n           Port = 5060;\n           Port = 3478;\n           Port-Range\
    \ = {\n               Port-Start = 16348;\n               Port-End = 32768;\n\
    \           }\n       }\n   }\n"
- title: 7.7.  QoS Parameter Examples
  contents:
  - "7.7.  QoS Parameter Examples\n   The following high-level description aims to\
    \ illustrate the\n   interworking between the Diameter QoS AVPs defined in this\
    \ document\n   and the QoS parameters defined in [RFC5624].\n   Consider the following\
    \ example where a rule should be installed that\n   limits traffic to 1 Mbit/s\
    \ and where out-of-profile traffic shall be\n   dropped.  The Classifiers are\
    \ ignored in this example.\n   This would require the Treatment-Action AVP to\
    \ be set to 'shape' and\n   the QoS-Parameters AVP carries the Bandwidth AVP indicating\
    \ the 1\n   Mbit/s limit.  The Treatment-Action carried inside the Excess-\n \
    \  Treatment AVP would be set to 'drop'.\n   In a second, more complex scenario,\
    \ we consider traffic marking with\n   Diffserv.  In-profile traffic (of 5 Mbit/s\
    \ in our example) shall be\n   associated with a particular PHB-Class \"X\". \
    \ Out-of-profile traffic\n   shall belong to a different PHB-Class, in our example\
    \ \"Y\".\n   This configuration would require the Treatment-Action AVP to be set\n\
    \   to 'mark'.  The QoS-Parameters AVPs for the traffic conforming of the\n  \
    \ profile contains two AVPs, namely, the TMOD-1 AVP and the PHB-Class\n   AVP.\
    \  The TMOD-1 AVP describes the traffic characteristics, namely, 5\n   Mbit/s,\
    \ and the PHB-Class AVP is set to class \"X\".  Then, the Excess-\n   Treatment\
    \ AVP has to be included with the Treatment-Action AVP set to\n   'mark' and the\
    \ QoS-Parameters AVP to carry another PHB-Class AVP\n   indicating PHB-Class AVP\
    \ setting to class \"Y\".\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   We would like to thank Victor Fajardo, Tseno Tsenov,\
    \ Robert Hancock,\n   Jukka Manner, Cornelia Kappler, Xiaoming Fu, Frank Alfano,\
    \ Tolga\n   Asveren, Mike Montemurro, Glen Zorn, Avri Doria, Dong Sun, Tina Tsou,\n\
    \   Pete McCann, Georgios Karagiannis, Elwyn Davies, Max Riegel, Yong Li,\n  \
    \ and Eric Gray for their comments.  We thank Victor Fajardo for his\n   job as\
    \ PROTO document shepherd.  Finally, we would like to thank Lars\n   Eggert, Magnus\
    \ Westerlund, Adrian Farrel, Lisa Dusseault, Ralph\n   Droms, and Eric Gray for\
    \ their feedback during the IESG review phase.\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   Max Riegel contributed the VLAN sections.\n"
- title: 10.  IANA Considerations
  contents:
  - '10.  IANA Considerations

    '
- title: 10.1.  AVP Codes
  contents:
  - "10.1.  AVP Codes\n   IANA has allocated codes from the \"AVP Codes\" registry\
    \ under\n   Authentication, Authorization, and Accounting (AAA) Parameters for\n\
    \   the following AVPs that are defined in this document.\n   +-------------------------------------------------------------------+\n\
    \   |                                      AVP  Section                 |\n  \
    \ | Attribute Name                       Code Defined     Data Type   |\n   +-------------------------------------------------------------------+\n\
    \   |QoS-Resources                         508    3.1       Grouped     |\n  \
    \ |Filter-Rule                           509    3.2       Grouped     |\n   |Filter-Rule-Precedence\
    \                510    3.3       Unsigned32  |\n   |Classifier              \
    \              511    4.1.1     Grouped     |\n   |Classifier-ID             \
    \            512    4.1.2     OctetString |\n   |Protocol                    \
    \          513    4.1.3     Enumerated  |\n   |Direction                     \
    \        514    4.1.4     Enumerated  |\n   |From-Spec                       \
    \      515    4.1.5     Grouped     |\n   |To-Spec                           \
    \    516    4.1.6     Grouped     |\n   |Negated                             \
    \  517    4.1.7.1   Enumerated  |\n   |IP-Address                            518\
    \    4.1.7.2   Address     |\n   |IP-Address-Range                      519  \
    \  4.1.7.3   Grouped     |\n   |IP-Address-Start                      520    4.1.7.4\
    \   Address     |\n   |IP-Address-End                        521    4.1.7.5  \
    \ Address     |\n   |IP-Address-Mask                       522    4.1.7.6   Grouped\
    \     |\n   |IP-Mask-Bit-Mask-Width                523    4.1.7.7   Unsigned32\
    \  |\n   |MAC-Address                           524    4.1.7.8   OctetString |\n\
    \   |MAC-Address-Mask                      525    4.1.7.9   Grouped     |\n  \
    \ |MAC-Address-Mask-Pattern              526    4.1.7.10  OctetString |\n   |EUI64-Address\
    \                         527    4.1.7.11  OctetString |\n   |EUI64-Address-Mask\
    \                    528    4.1.7.12  Grouped     |\n   |EUI64-Address-Mask-Pattern\
    \            529    4.1.7.13  OctetString |\n   |Port                        \
    \          530    4.1.7.14  Integer32   |\n   |Port-Range                    \
    \        531    4.1.7.15  Grouped     |\n   |Port-Start                      \
    \      532    4.1.7.16  Integer32   |\n   |Port-End                          \
    \    533    4.1.7.17  Integer32   |\n   |Use-Assigned-Address                \
    \  534    4.1.7.18  Enumerated  |\n   |Diffserv-Code-Point                   535\
    \    4.1.8.1   Enumerated  |\n   |Fragmentation-Flag                    536  \
    \  4.1.8.2   Enumerated  |\n   |IP-Option                             537    4.1.8.3\
    \   Grouped     |\n   |IP-Option-Type                        538    4.1.8.4  \
    \ Enumerated  |\n   |IP-Option-Value                       539    4.1.8.5   OctetString\
    \ |\n   |TCP-Option                            540    4.1.8.6   Grouped     |\n\
    \   |TCP-Option-Type                       541    4.1.8.7   Enumerated  |\n  \
    \ |TCP-Option-Value                      542    4.1.8.8   OctetString |\n   |TCP-Flags\
    \                             543    4.1.8.9   Grouped     |\n   |TCP-Flag-Type\
    \                         544    4.1.8.10  Unsigned32  |\n   |ICMP-Type      \
    \                       545    4.1.8.11  Grouped     |\n   |ICMP-Type-Number \
    \                     546    4.1.8.12  Enumerated  |\n   |ICMP-Code          \
    \                   547    4.1.8.13  Enumerated  |\n   |ETH-Option           \
    \                 548    4.1.8.14  Grouped     |\n   |ETH-Proto-Type         \
    \               549    4.1.8.15  Grouped     |\n   |ETH-Ether-Type           \
    \             550    4.1.8.16  OctetString |\n   |ETH-SAP                    \
    \           551    4.1.8.17  OctetString |\n   |VLAN-ID-Range                \
    \         552    4.1.8.18  Grouped     |\n   |S-VID-Start                    \
    \       553    4.1.8.19  Unsigned32  |\n   |S-VID-End                        \
    \     554    4.1.8.20  Unsigned32  |\n   |C-VID-Start                        \
    \   555    4.1.8.21  Unsigned32  |\n   |C-VID-End                            \
    \ 556    4.1.8.22  Unsigned32  |\n   |User-Priority-Range                   557\
    \    4.1.8.23  Grouped     |\n   |Low-User-Priority                     558  \
    \  4.1.8.24  Unsigned32  |\n   |High-User-Priority                    559    4.1.8.25\
    \  Unsigned32  |\n   |Time-Of-Day-Condition                 560    4.2.1     Grouped\
    \     |\n   |Time-Of-Day-Start                     561    4.2.2     Unsigned32\
    \  |\n   |Time-Of-Day-End                       562    4.2.3     Unsigned32  |\n\
    \   |Day-Of-Week-Mask                      563    4.2.4     Unsigned32  |\n  \
    \ |Day-Of-Month-Mask                     564    4.2.5     Unsigned32  |\n   |Month-Of-Year-Mask\
    \                    565    4.2.6     Unsigned32  |\n   |Absolute-Start-Time \
    \                  566    4.2.7     Time        |\n   |Absolute-Start-Fractional-Seconds\
    \     567    4.2.8     Unsigned32  |\n   |Absolute-End-Time                  \
    \   568    4.2.9     Time        |\n   |Absolute-End-Fractional-Seconds      \
    \ 569    4.2.10    Unsigned32  |\n   |Timezone-Flag                         570\
    \    4.2.11    Enumerated  |\n   |Timezone-Offset                       571  \
    \  4.2.12    Integer32   |\n   |Treatment-Action                      572    5.1\
    \       Grouped     |\n   |QoS-Profile-Id                        573    5.2  \
    \     Unsigned32  |\n   |QoS-Profile-Template                  574    5.3    \
    \   Grouped     |\n   |QoS-Semantics                         575    5.4      \
    \ Enumerated  |\n   |QoS-Parameters                        576    5.5       Grouped\
    \     |\n   |Excess-Treatment                      577    5.6       Grouped  \
    \   |\n   |QoS-Capability                        578    6         Grouped    \
    \ |\n   +-------------------------------------------------------------------+\n"
- title: 10.2.  QoS-Semantics IANA Registry
  contents:
  - "10.2.  QoS-Semantics IANA Registry\n   IANA has allocated a new registry under\
    \ Authentication,\n   Authorization, and Accounting (AAA) Parameters for the QoS-Semantics\n\
    \   AVP.  The following values are allocated by this specification:\n        \
    \       (0): QoS-Desired\n               (1): QoS-Available\n               (2):\
    \ QoS-Delivered\n               (3): Minimum-QoS\n               (4): QoS-Authorized\n\
    \   The definition of new values is subject to the Specification Required\n  \
    \ policy [RFC5226].\n"
- title: 10.3.  Action
  contents:
  - "10.3.  Action\n   IANA has allocated a new registry under Authentication,\n \
    \  Authorization, and Accounting (AAA) Parameters for the Treatment-\n   Action\
    \ AVP.  The following values are allocated by this\n   specification:\n      0:\
    \ drop\n      1: shape\n      2: mark\n      3: permit\n   The definition of new\
    \ values is subject to the Specification Required\n   policy [RFC5226].\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This document describes the extension of Diameter\
    \ for conveying\n   Quality of Service information.  The security considerations\
    \ of the\n   Diameter protocol itself have been discussed in RFC 3588 [RFC3588].\n\
    \   Use of the AVPs defined in this document MUST take into consideration\n  \
    \ the security issues and requirements of the Diameter base protocol.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [IEEE802.1D]    IEEE, \"IEEE Standard for Local\
    \ and metropolitan area\n                   networks, Media Access Control (MAC)\
    \ Bridges\", 2004.\n   [IEEE802.1Q]    IEEE, \"IEEE Standard for Local and metropolitan\
    \ area\n                   networks, Virtual Bridged Local Area Networks\", 2005.\n\
    \   [IEEE802.1ad]   IEEE, \"IEEE Standard for Local and metropolitan area\n  \
    \                 networks, Virtual Bridged Local Area Networks,\n           \
    \        Amendment 4: Provider Bridges\", 2005.\n   [IEEE802.2]     IEEE, \"IEEE\
    \ Standard for Information technology,\n                   Telecommunications\
    \ and information exchange between\n                   systems, Local and metropolitan\
    \ area networks,\n                   Specific requirements, Part 2: Logical Link\
    \ Control\",\n                   1998.\n   [RFC2119]       Bradner, S., \"Key\
    \ words for use in RFCs to Indicate\n                   Requirement Levels\",\
    \ BCP 14, RFC 2119, March 1997.\n   [RFC2474]       Nichols, K., Blake, S., Baker,\
    \ F., and D. Black,\n                   \"Definition of the Differentiated Services\
    \ Field (DS\n                   Field) in the IPv4 and IPv6 Headers\", RFC 2474,\n\
    \                   December 1998.\n   [RFC2780]       Bradner, S. and V. Paxson,\
    \ \"IANA Allocation\n                   Guidelines For Values In the Internet\
    \ Protocol and\n                   Related Headers\", BCP 37, RFC 2780, March\
    \ 2000.\n   [RFC3168]       Ramakrishnan, K., Floyd, S., and D. Black, \"The\n\
    \                   Addition of Explicit Congestion Notification (ECN) to\n  \
    \                 IP\", RFC 3168, September 2001.\n   [RFC3588]       Calhoun,\
    \ P., Loughney, J., Guttman, E., Zorn, G., and\n                   J. Arkko, \"\
    Diameter Base Protocol\", RFC 3588,\n                   September 2003.\n   [RFC5226]\
    \       Narten, T. and H. Alvestrand, \"Guidelines for Writing\n             \
    \      an IANA Considerations Section in RFCs\", BCP 26,\n                   RFC\
    \ 5226, May 2008.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [DIAMETER-QOS]  Sun, D., Ed., McCann, P., Tschofenig,\
    \ H., Tsou, T.,\n                   Doria, A., and G. Zorn, Ed., \"Diameter Quality\
    \ of\n                   Service Application\", Work in Progress, October 2009.\n\
    \   [RFC2475]       Blake, S., Black, D., Carlson, M., Davies, E., Wang,\n   \
    \                Z., and W. Weiss, \"An Architecture for Differentiated\n    \
    \               Services\", RFC 2475, December 1998.\n   [RFC4005]       Calhoun,\
    \ P., Zorn, G., Spence, D., and D. Mitton,\n                   \"Diameter Network\
    \ Access Server Application\",\n                   RFC 4005, August 2005.\n  \
    \ [RFC5624]       Korhonen, J., Tschofenig, H., and E. Davies, \"Quality\n   \
    \                of Service Parameters for Usage with Diameter\",\n          \
    \         RFC 5624, August 2009.\n"
- title: Appendix A.  MAC and EUI64 Address Mask Usage Considerations
  contents:
  - "Appendix A.  MAC and EUI64 Address Mask Usage Considerations\n   The MAC and\
    \ EUI64 address bit masks are generally used in classifying\n   devices according\
    \ to Organizationally Unique Identifier (OUI) and/or\n   address blocks specific\
    \ to the OUI assignee.  The bit masks are not\n   intended to introduce a structure\
    \ into the MAC or EUI64 address space\n   that was not intended by the IEEE.\n\
    \   The MAC address bit mask should be defined as a contiguous series of\n   \"\
    N\" set bits followed by a contiguous series of \"48 - N\" clear bits,\n   e.g.,\
    \ the MAC address bit mask of 0xFF00FF000000 would not be valid.\n   Similarly,\
    \ the EUI64 address bit mask should be defined as a\n   contiguous series of \"\
    N\" set bits followed by a contiguous series of\n   \"64 - N\" clear bits.\n \
    \  It should also be noted that some OUIs are assigned for use in\n   applications\
    \ that require number space management at the organization\n   level (e.g., LLC/SNAP\
    \ encoding), and are not commonly used for MAC\n   addresses.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jouni Korhonen\n   Nokia Siemens Networks\n   Linnoitustie\
    \ 6\n   Espoo  02600\n   Finland\n   EMail: jouni.korhonen@nsn.com\n   Hannes\
    \ Tschofenig\n   Nokia Siemens Networks\n   Linnoitustie 6\n   Espoo  02600\n\
    \   Finland\n   Phone: +358 (50) 4871445\n   EMail: Hannes.Tschofenig@gmx.net\n\
    \   URI:   http://www.tschofenig.priv.at\n   Mayutan Arumaithurai\n   University\
    \ of Goettingen\n   EMail: mayutan.arumaithurai@gmail.com\n   Mark Jones (editor)\n\
    \   Bridgewater Systems\n   303 Terry Fox Drive, Suite 500\n   Ottawa, Ontario\
    \  K2K 3J1\n   Canada\n   Phone: +1 613-591-6655\n   EMail: mark.jones@bridgewatersystems.com\n\
    \   Avi Lior\n   Bridgewater Systems\n   303 Terry Fox Drive, Suite 500\n   Ottawa,\
    \ Ontario  K2K 3J1\n   Canada\n   Phone: +1 613-591-6655\n   EMail: avi@bridgewatersystems.com\n"
