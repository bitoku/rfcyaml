Abstract Application Exchange (APEX), at its core, provides a best effort application layer datagram service.
Options are used to alter the semantics of the core service.
This memo defines various options to change the default behavior of APEX's "relaying mesh".
The attachOverride Option Section 5.1 contains the APEX option registration for the "attachOverride" option.
The default behavior of the APEX relaying mesh, in the absence of processing options, is to allow at most one application to attach as a particular endpoint, on a "first come, first served" basis.
The "attachOverride" option provides gives preference to the current application trying to attach.
If this option is present in the "attach" operation (c.f., Section 4.4.1 of [1]) and if any application is already attached as the specified endpoint, that endpoint has its attachment terminated (c.f.
, Section 4.4.3 of [1]) concurrently with processing of that "attach" operation.
The "code" attribute of the resulting "terminate" operation is set to 556.
Note that any data being expected by the previously attached application may instead be delivered to the last application to successfully attach.
Accordingly, applications should take care to properly deal with incoming data having unrecognized transaction
identifiers (c.f., Section 6.1.1 of [1]).
This option provides for a new attachment to automatically terminate any existing attachment for the same endpoint.
<attach endpoint 'fred@example.com' transID '1' /
some time later appl #2 starts on a different computer ...
/> C: <terminate transID '1' code '556'>overriden</terminate
The dataTiming Option Section 5.2 contains the APEX option registration for the "dataTiming" option.
This option contains a "dataTiming" element (c.f., Section 6).
The default behavior of the APEX relaying mesh is "immediate, best effort", and expects that all relays and endpoints are able to process and transfer data without delay   in the absence of processing options, if a relay is unavailable, then data is silently dropped.
The "dataTiming" option provides for controlled queuing delays in processing, whilst providing reasonable deterministic behavior for the originator.
There are two types of delays addressed by the "dataTiming" option:  delays in transit through the relaying mesh, possibly due to intermittent or slow connections, or congested relays; and,  delays because the intended endpoint is not available to receive the data, when used in conjunction with the hold4Endpoint option (Section 3).
Accordingly, the "dataTiming" option allows for:  data to be discarded if not delivered within a finite amount of time as specified using the "noLaterThan" attribute (Section 2.1);
a "statusResponse" message (c.f., Section 5.1 of [1]) to be generated if data is not delivered within a known amount of time as specified using the "reportAfter" attribute (Section 2.2); and,  an upper limit on the amount of time for the "statusResponse" message to be delivered using the "returnTrip" attribute (Section 2.1.1), after which the sender may presume the message to be lost.
This option does not provide any functionality with respect to the priority of the data.
Nor does this option have any effect on other parts of the relaying process.
Further, note that because this option is processed on a per hop basis, the originator must set the "targetHop" attribute to the value "all" and the "mustUnderstand" attribute to the value "true".
2.1 Upper Bounds on Delivery The "noLaterThan" attribute of the "dataTiming" option provides for control over delays that may occur in transit through the relaying mesh or to the recipient endpoint.
If this option is present in the "data" operation (c.f., Section 4.4.4 of [1]) and the value of the "noLaterThan" attribute is non  zero, then:  For Step 5.2 of Section 4.4.4.1 of [1]:
Immediately prior to sending the data to the next relay, the value of the "noLaterThan" attribute is adjusted to reflect the processing time of the data at the local relay (e.g., the time required to determine the next relay, to successfully issue a "bind" operation, and then be ready to immediately issue a "data" operation).
If the value of the "noLaterThan" attribute becomes less than or equal to zero, an error in processing has occurred, the data element is not sent to the next relay, and if the "reportErrors" attribute is true, the APEX report service is invoked to send a timing error report.
For Step 5.3 of Section 4.4.4.1 of [1]: If the relay does not receive an "ok" element from the recipient endpoint within the number of milli seconds indicated by the value of the "noLaterThan" attribute, an error in processing has occurred, and if the "reportErrors" attribute is true, the APEX report service is invoked to send a timing error report.
Otherwise, if the data is successfully transmitted to the recipient, and the "returnTrip" attribute is non zero, the APEX report service is invoked to send a final hop report.
Note that in some cases, a relay may be able to predict this outcome without actually connecting to the next relay; if so, a timing error report may be sent without connecting to the next relay.
data content 'cid:1@example.com'> <originator identity 'fred@example.com' /
> <option internal 'dataTiming' targetHop 'all
' mustUnderstand 'true' transID '86'
> <dataTiming noLaterThan '10000' returnTrip '20000' /
data content '#Content'> <originator identity 'apex report@example.com' />
> <option internal 'dataTiming' targetHop 'all' mustUnderstand 'true' transID '99'
> <dataTiming noLaterThan '20000' /
> </option> <data content Name 'Content'> <statusResponse transID '86'> <destination identity 'barney@example.com'>
> <option internal 'dataTiming' targetHop 'all
' mustUnderstand 'true' transID '86'
noLaterThan '6000' reportErrors 'true' /
data content '#Content'> <originator identity 'apex report@example.com' />
> <data content Name 'Content'> <statusResponse transID '86'> <destination identity 'barney@example.com'>
The "reportAfter" attribute of the "dataTiming" option provides for the originator to be notified if delivery is delayed beyond a specified time.
Delivery of the data is not affected.
Note that if the value of the "noLaterThan" attribute is non zero, then it provides the operational upper bounds for the "reportAfter" attribute.
If this option is present in the "data" operation (c.f., Section 4.4.4 of [1]) and the value of the "reportAfter" attribute is non  zero, then:  For Step 5.2 of Section 4.4.4.1 of [1]:
Immediately prior to sending the data to the next relay, the value of the "reportAfter" attribute is adjusted to reflect the processing time of the data at the local relay (e.g., the time required to determine the next relay, to successfully issue a "bind" operation, and then be ready to immediately issue a "data" operation).
If the value of the "reportAfter" attribute becomes less than or equal to zero, then its value is set to zero and the APEX report service is invoked to send a transient timing report; regardless, the data element is sent to the next relay.
For Step 5.3 of Section 4.4.4.1 of [1]: If the relay does not receive an "ok" element from the recipient endpoint within the number of milli seconds indicated by the value of the "reportAfter" attribute, then its value is set to zero and the APEX report service is invoked to send a transient timing report.
> <option internal 'dataTiming' targetHop 'all' mustUnderstand 'true' transID '86'
data content '#Content'> <originator identity 'apex report@example.com' />
> <data content Name 'Content'> <statusResponse transID '86'> <destination identity 'barney@example.com'>
The hold4Endpoint Option Section 5.3 contains the APEX option registration for the "hold4Endpoint" option.
The default behavior of the APEX relaying mesh, in the absence of processing options, is to silently drop data for a recipient if its endpoint isn't attached.
The "hold4Endpoint" option provides for data to be queued if the recipient endpoint is not attached.
If this option is present in the "data" operation (c.f., Section 4.4.4 of [1]), and the value of the "hold4Endpoint" attribute is true then:  For Step 5.3 of Section 4.4.4.1 of [1]: If the recipient's endpoint is not currently attached, the relay will queue the data waiting for an application to attach as that endpoint.
Note that in the absence of an upper bounds on delivery, such as limits provided by the dataTiming option (Section 2), the data will be queued indefinitely for the endpoint.
> <option internal 'hold4Endpoint' /
> <option internal 'dataTiming' targetHop 'all' mustUnderstand 'true' transID '86'
> <dataTiming noLaterThan '60000' /
<attach endpoint 'barney@example.com' transID '2'> <option internal 'attachOverride' transID '3' /
/> C: <data content 'cid:1@example.com'> <originator identity 'fred@example.com' /
> <option internal 'hold4Endpoint' /
> <option internal 'dataTiming' targetHop 'all' mustUnderstand 'true' transID '86'
> <dataTiming noLaterThan '18000' /
The dataHopping Option To detect misconfigurations that cause forwarding loops in the APEX relaying mesh, the APEX pubsub service re introduces a mechanism similar to the IP TTL [2] mechanism, in the form of an APEX option.
Section 5.4 contains the APEX option registration for the "dataHopping" option.
If this option is present in the "data" operation (c.f., Section 4.4.4 of [1]) and the value of the "noMoreThan" attribute is non  zero, then:  For Step 5.2 of Section 4.4.4.1 of [1]:
Immediately prior to sending the data to the next relay, the value of the "noMoreThan" attribute is reduced by 1.
If the value of the "noMoreThan" attribute becomes less than or equal to zero, an error in processing has occurred, the data element is not sent to the next relay, and if the "reportErrors" attribute is true, the APEX report service is invoked to send an error report.
Further, note that because this option is processed on a per hop basis, the originator must set the "targetHop" attribute to the value "all" and the "mustUnderstand" attribute to the value "true".
<data content 'cid:1@example.com'> <originator identity 'appl pubsub/topic fred@example.com' /
> <option internal 'dataHopping' targetHop 'all' mustUnderstand 'true' transID '86'> <dataHopping noMoreThan '2' reportErrors 'true' /
<originator identity 'appl pubsub/topic fred@example.com' /
> <option internal 'dataHopping' targetHop 'all
' mustUnderstand 'true' transID '86'> <dataHopping noMoreThan '1' reportErrors 'true' /
data content '#Content'> <originator identity 'apex report@example.com' />
<recipient identity 'appl pubsub/topic fred@example.com' /
> <data content Name 'Content'> <statusResponse transID '86'> <destination identity 'barney@example.com'>
The APEX option registration template is defined in Section 7.1 of [1].
The attachOverride Option Option Identification: attachOverride
Present in: APEX's "attach" element Contains: nothing
, Section 1 Contact Information:
, the "Authors' Addresses" section of this memo 5.2 Registration:
The dataTiming Option Option Identification: dataTiming Present in: APEX's "data" element Contains: dataTiming (c.f., Section 6)
, Section 2 Contact Information:
, the "Authors' Addresses" section of this memo 5.3 Registration:
The hold4Endpoint Option Option Identification:
hold4Endpoint Present in: APEX's "data" element Contains: nothing
, Section 3 Contact Information:
, the "Authors' Addresses" section of this memo 5.4 Registration:
The dataHopping Option Option Identification: dataHopping Present in: APEX's "data" element Contains: dataHopping (c.f., Section 6)
Processing Rules: c.f., Section 4
Contact Information: c.f., the "Authors' Addresses" section of this memo 6.
The APEX Party Pack DTD <!
DTD for the APEX option party pack, as of 2001 05 14 Refer to this DTD as: <!
17 milli seconds MILLISECS    0..2147483647
Security Considerations Consult [1]'s Section 11 for a discussion of security issues.
In addition:  The dataTiming option (Section 2) may be used to expose private network topology.
Accordingly, an administrator may wish to choose to disable this option except at the ingress/egress points for its administrative domain.
The hold4Endpoint option (Section 3) may be used to facilitate denial of service attacks.
Accordingly, an administrator may wish to impose administrative limits on this attribute (e.g., always require that the "dataTiming" option also be present with a short lived "noLaterThan" attribute).
The IANA completed the registrations specified in Section 5.
