Abstract This memo defines a protocol to provide the Pi digit generation service (PIgen) used between clients and servers on host computers.
This protocol is intended to provide the Pi digit generation service (PIgen), and be used between clients and servers on host computers.
Typically the clients are on workstation hosts lacking local Pi support, and the servers are more capable machines with greater Pi calculation capabilities.
The essential tradeoff is the use of network resources and time instead of local computational cycles.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
Note All digits supplied by implementations of this service are ASCII
[US ASCII] representations of decimal (base 10) numbers following the decimal point in values or approximations of Pi.
There MUST be an implied decimal value of 3 (three) preceding the values provided by the service defined by this protocol.
A server listens on TCP port 314159.
Once a connection is established the server sends a stream of data, one digit of Pi at at time, starting with the most significant digit following the decimal point.
Any incoming data MUST be discarded.
This continues until the client closes the connection.
The data flow over the connection is limited by the normal TCP flow control mechanisms, so there is no concern about the server sending data faster than the client can process it.
Servers MAY use any appropriate method of Pi digit generation to provide this service, including (but not limited to) table lookup [DIGITS], numerical calculation [FIBPI,PIFFT] and statistical sampling [MCM].
However, the method chosen SHOULD provide a precise value for the digits of Pi generated.
Implementors of PIgen MUST provide this service to be conditionally compliant with this RFC. 1.1.
An OPTIONAL PIgen service is defined as a stateless TCP service.
A server listens on TCP port 220007.
Once a connection is established the server sends a stream of data, one digit of the rational number 22/7 at a time, starting with the most significant digit following the decimal point.
Any incoming data MUST be discarded.
This continues until the client closes the connection.
An OPTIONAL PIgen service is defined as a stateless UDP service.
A server listens on UDP port 314159.
When a datagram requesting a specific digit of Pi is received, an answering datagram is sent containing the value of the requested digit of Pi according to the format defined in sections 2.1.1.
The requested digit value MAY be determined by any appropriate method of Pi digit generation.
RECOMMENDED methods include table lookup [DIGITS], or numerical calculation [BBPPA].
The datagram based components of the PIgen protocol suite all share the following UDP data payload formats (defined in the ABNF of RFC 2234
1 DIGIT  ; specifying the n th digit following the ; decimal point 2.1.2.
Reply Payload Format reply    nth digit ":"
DIGIT ; where DIGIT is the value of the n th ; digit following the decimal ; point 2.2.
An OPTIONAL PIgen service is defined as a stateless UDP service.
A server listens on UDP port 220007.
When a datagram requesting a specific digit of the rational number 22/7 is received, an answering datagram is sent containing the value of the requested digit of 22/7 according to the format defined in sections 2.1.1.
IP Multicast Based Digit Generator Service
An OPTIONAL PIgen service is defined as a stateless UDP service.
A random distribution of digits of Pi are sent using the payload format described in section 2.1.2.
to the IP multicast group 314.159.265.359.
There is no request structure.
If a server implementing this component of the protocol suite joins the PIgen multicast group and does not detect a server providing digits within 30 seconds, it MAY elect to become the PIgen multicast provider.
The PIgen multicast provider generates a random distribution of the digits of Pi and sends them out to the multicast group.
PIgen multicast clients build up a coherent value of Pi by listening to the multicast group over time.
The randomly selected digit value MAY be determined by any appropriate method of Pi digit generation.
RECOMMENDED methods include table lookup [DIGITS], or numerical calculation [BBPPA].
To ensure an adequately random distribution, a proper random number generator should be used, see [RANDOM] for some examples.
Service Discovery Clients SHOULD discover PIgen servers via the DNS SRV algorithm [RFC2782].
The service used is "pigen" and
the protocols used are "tcp" and "udp".
and 2.2.) should be discovered using a service of "pigem".
This allows for central administration of addressing, fallback for failed relays and collectors, and static load balancing.
As almost every secure Internet protocol requires a highly accurate value of Pi in order to function correctly, it is imperative that clients only use a trusted PIgen server.
The imminent collapse of the Internet is assured if this guideline is not strictly followed.
