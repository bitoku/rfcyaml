Abstract This document defines a standard profile for Route Origin Authorizations (ROAs).
A ROA is a digitally signed object that provides a means of verifying that an IP address block holder has authorized an Autonomous System (AS) to originate routes to one or more prefixes within the address block.
The primary purpose of the Resource Public Key Infrastructure (RPKI) is to improve routing security.
(See [RFC6480] for more information.)
As part of this system, a mechanism is needed to allow entities to verify that an AS has been given permission by an IP address block holder to advertise routes to one or more prefixes within that block.
A ROA provides this function.
The ROA makes use of the template for RPKI digitally signed objects [RFC6488], which defines a Crytopgraphic Message Syntax (CMS)
[RFC5652] wrapper for the ROA content as well as a generic validation procedure for RPKI signed objects.
Therefore, to complete the specification of the ROA (see Section 4 of [RFC6488]), this document defines:
The OID that identifies the signed object as being a ROA.
(This OID appears within the eContentType in the encapContentInfo object as well as the content type signed attribute in the signerInfo object).
The ASN.1 syntax for the ROA eContent.
(This is the payload that specifies the AS being authorized to originate routes as well as the prefixes to which the AS may originate routes.)
The ROA eContent is ASN.1 encoded using the Distinguished Encoding Rules (DER) [X.690].
An additional step required to validate ROAs (in addition to the validation steps specified in [RFC6488]).
It is assumed that the reader is familiar with the terms and concepts described in "Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile" [RFC5280] and "X.509 Extensions for IP Addresses and AS Identifiers" [RFC3779].
Additionally, this document makes use of the RPKI signed object profile [RFC6488]; thus, familiarity with that document is assumed.
Note that the RPKI signed object profile makes use of certificates adhering to the RPKI Resource Certificate Profile [RFC6487]; thus, familiarly with that profile is also assumed.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The content type for a ROA is defined as routeOriginAuthz and has the numerical value of 1.2.840.113549.1.9.16.1.24.
This OID MUST appear both within the eContentType in the encapContentInfo object as well as the content type signed attribute in the signerInfo object (see [RFC6488]).
The content of a ROA identifies a single AS that has been authorized by the address space holder to originate routes and a list of one or more IP address prefixes that will be advertised.
If the address space holder needs to authorize multiple ASes to advertise the same set of address prefixes, the holder issues multiple ROAs, one per AS number.
BIT STRING Note that this content appears as the eContent within the encapContentInfo (see [RFC6488]).
The version number of the RouteOriginAttestation MUST be 0.
asID The asID field contains the AS number that is authorized to originate routes to the given IP address prefixes.
The ipAddrBlocks field encodes the set of IP address prefixes to which the AS is authorized to originate routes.
Note that the syntax here is more restrictive than that used in the IP address delegation extension defined in RFC 3779.
That extension can represent arbitrary address ranges, whereas ROAs need to represent only prefixes.
Within the ROAIPAddressFamily structure, addressFamily contains the Address Family Identifier (AFI) of an IP address family.
This specification only supports IPv4 and IPv6.
Therefore, addressFamily MUST be either 0001 or 0002.
Within a ROAIPAddress structure, the addresses field represents prefixes as a sequence of type IPAddress.
(See [RFC3779] for more details).
If present, the maxLength MUST be an integer greater than or equal to the length of the accompanying prefix, and less than or equal to the length (in bits) of an IP address in the address family (32 for IPv4 and 128 for IPv6).
When present, the maxLength specifies the maximum length of the IP address prefix that the AS is authorized to advertise.
(For example, if the IP address prefix is 203.0.113/24 and the maxLength is 26, the AS is authorized to advertise any more specific prefix with a maximum length of 26.
In this example, the AS would be authorized to advertise 203.0.113/24, 203.0.113.128/25, or 203.0.113.0/25, but not 203.0.113.0/27.)
When the maxLength is not present, the AS is only authorized to advertise the exact prefix specified in the ROA.
Note that a valid ROA may contain an IP address prefix (within a ROAIPAddress element) that is encompassed by another IP address prefix (within a separate ROAIPAddress element).
For example, a ROA may contain the prefix 203.0.113/24 with maxLength 26, as well as the prefix 203.0.113.0/28 with maxLength 28.
(Such a ROA would authorize the indicated AS to advertise any prefix beginning with 203.0.113 with a minimum length of 24 and a maximum length of 26, as well as the specific prefix 203.0.113.0/28.)
Additionally, a ROA MAY contain two ROAIPAddress elements, where the IP address prefix is identical in both cases.
However, this is NOT RECOMMENDED as, in such a case, the ROAIPAddress with the shorter maxLength grants no additional privileges to the indicated AS and thus can be omitted without changing the meaning of the ROA.
Before a relying party can use a ROA to validate a routing announcement, the relying party MUST first validate the ROA.
To validate a ROA, the relying party MUST perform all the validation checks specified in [RFC6488] as well as the following additional ROA specific validation step.
The IP address delegation extension [RFC3779] is present in the end entity (EE) certificate (contained within the ROA), and each IP address prefix(es) in the ROA is contained within the set of IP addresses specified by the EE certificate's IP address delegation extension.
There is no assumption of confidentiality for the data in a ROA; it is anticipated that ROAs will be stored in repositories that are accessible to all ISPs, and perhaps to all Internet users.
There is no explicit authentication associated with a ROA, since the PKI used for ROA validation provides authorization but not authentication.
Although the ROA is a signed, application layer object, there is no intent to convey non repudiation via a ROA.
The purpose of a ROA is to convey authorization for an AS to originate a route to the prefix(es) in the ROA.
Thus, the integrity of a ROA MUST be established.
The ROA specification makes use of the RPKI signed object format; thus, all security considerations in [RFC6488] also apply to ROAs.
Additionally, the signed object profile uses the CMS signed message format for integrity; thus, ROAs inherit all security considerations associated with that data structure.
The right of the ROA signer to authorize the target AS to originate routes to the prefix(es) is established through use of the address space and AS number
Specifically, one MUST verify the signature on the ROA using an X.509 certificate issued under this PKI, and check that the prefix(es) in the ROA match those in the certificate's address space extension.
IANA Considerations IANA has registered the following RPKI Signed Object: ROA    1.2.840.113549.1.9.16.1.24
This normative appendix provides an ASN.1 module that specifies the ROA content in ASN.1 syntax.
RPKI ROA { iso(1) member body(2
61 } DEFINITIONS EXPLICIT TAGS ::
addressFamily OCTET STRING (SIZE (2..3)), addresses SEQUENCE (SIZE (1..MAX)) OF ROAIPAddress } ROAIPAddress ::
SEQUENCE { address IPAddress, maxLength INTEGER OPTIONAL }
