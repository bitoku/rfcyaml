Abstract This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes objects for configuring parameters of the Neighborhood Discovery Protocol (NHDP) process on a router.
The MIB module defined in this document, denoted NHDP MIB, also reports state, performance information, and notifications about NHDP.
This additional state and performance information is useful to troubleshoot problems and performance issues during neighbor discovery.
This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes objects for configuring parameters of the Neighborhood Discovery Protocol (NHDP)
[RFC6130] process on a router.
The MIB module defined in this document, denoted NHDP MIB, also reports state, performance information, and notifications about NHDP.
This additional state and performance information is useful to troubleshoot problems and performance issues during neighbor discovery.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Overview [RFC6130] allows a router to discover and track topological information of routers up to two hops away by virtue of exchanging HELLO messages.
This information is useful for routers running various routing and multicast flooding protocols developed within the IETF MANET Working Group.
The following definitions apply throughout this document:  Notification Objects triggers and associated notification messages allowing for asynchronous tracking of pre defined events on the managed router.
Configuration Objects switches, tables, and objects that are initialized to default settings or set through the management interface defined by this MIB module.
State Objects automatically generated values that define the current operating state of the NHDP instance in the router.
Performance Objects automatically generated values that help an administrator or automated tool to assess the performance of the NHDP instance on the router and the overall discovery performance within the Mobile Ad
The same notations as defined in [RFC6130] are used throughout this document.
Structure of the MIB Module
This section presents the structure of the NHDP MIB module.
The MIB module is arranged into the following structure:  nhdpNotifications objects defining NHDP MIB notifications.
nhdpObjects defining objects within this MIB module.
The objects are arranged into the following groups:
Configuration Group defining objects related to the configuration of the NHDP instance on the router.
State Group defining objects that reflect the current state of the NHDP instance running on the router.
Performance Group defining objects that are useful to a management station when characterizing the performance of NHDP on the router and in the MANET.
nhdpConformance defining the minimal and maximal conformance requirements for implementations of this MIB module.
This section describes the use of notifications and mechanisms to enhance the ability to manage NHDP routing domains.
Introduction Notifications can be emitted by a router running an instance of this specification as a reaction to a specific event.
This allows a network manager to efficiently determine the source of problems or significant changes of configuration or topology, instead of polling a possibly large number of routers.
When an exception event occurs, the application notifies the local agent, which sends a notification to the appropriate SNMP management stations.
The message includes the notification type and may include a list of notification specific variables.
Section 7 contains the notification definitions, which includes the variable lists.
At least one IP address of the router that originates the notification is included in the variable list so that the network manager may determine the source of the notification.
To limit the frequency of notifications, the following additional mechanisms are suggested, similar to those in [RFC4750].
The majority of critical events occur when NHDP is first enabled on a router, at which time the symmetric neighbors and two hop neighbors of the router are discovered.
During this initial period, a potential flood of notifications is unnecessary since the events are expected.
To avoid unnecessary notifications, a router SHOULD NOT originate expected notifications until a certain time interval has elapsed, which is to be predefined by the network manager.
It is RECOMMENDED that this time interval is at least 3 x nhdpHelloInterval, so that symmetric neighbors are discovered.
The suppression window for notifications is started when the nhdpIfStatus transitions from its default value of 'false(2)' to 'true(1)'.
The mechanism for throttling the notifications is the same as in [RFC4750] (i.e., the number of transmitted notifications per time is bounded).
Appropriate values for the window time and upper bound are to be selected by the network manager and depend on the deployment of the MANET.
If NHDP is deployed on a lossy, wireless medium, sending too many notifications in a short time interval may lead to collisions and dropped packets.
In particular, in dense deployments of routers running NHDP (i.e., where each router has many neighbors), a change of the local topology may trigger many notifications at the same time.
[RFC4750] recommends "7 traps with a window time of 10 seconds" as the upper bound.
As NHDP is expected to be deployed in more lossy channels than OSPF, it is RECOMMENDED to choose a lower threshold for the number of notifications per time than that.
Specifically, it is RECOMMENDED that the threshold value for the objects reflecting the change be set to a value of '10' and the DEFAULT values for these objects within the Notifications Group be set to this value.
Further, a time window for the change objects is defined within this MIB module.
It is RECOMMENDED that if the number of occurrences exceeds the change threshold within the previous change window, then the notification is to be sent.
Furthermore, it is RECOMMENDED that the value for this window be set to at least 5 times the nhdpHelloInterval.
The following objects are used to define the thresholds and time windows for specific notifications defined in the NHDP MIB module: nhdpNbrStateChangeThreshold, nhdpNbrStateChangeWindow, nhdp2HopNbrStateChangeThreshold, and nhdp2HopNbrStateChangeWindow.
One Notification per Event Similar to the mechanism in [RFC4750], only one notification is sent per event.
The router running NHDP is configured with a set of controls.
The authoritative list of configuration controls within the NHDP
MIB module are found within the MIB module itself.
Generally, an attempt was made in developing the NHDP MIB module to support all configuration objects defined in [RFC6130].
For all of the configuration parameters, the same constraints and default values of these parameters as defined in [RFC6130] are followed.
Refer to [RFC5148] for guidance on setting jitter related parameters, e.g., nhdpMaxJitter. 5.3.
The State Group reports current state information of a router running NHDP.
The NHDP MIB State Group tables were designed to contain the complete set of state information defined within the information bases specified in Sections 6, 7, and 8 of [RFC6130].
Two constructs, i.e., TEXTUAL CONVENTIONs, are defined to support the tables in the State Group.
NHDP stores and indexes information through sets of (dynamically defined) addresses, i.e., address sets.
Within SMIv2, it is not possible to index tables with variably defined address sets.
Hence, these TEXTUAL CONVENTIONs are defined to provide a local mapping between NHDP managed address sets and SMIv2 table indexing.
These constructs are the NeighborIfIndex and
These are locally (to the router) defined, unique identifiers of virtual neighbors and neighbor interfaces.
Due to the nature of NHDP, the local router may have identified distinct address sets but is not able to associate these as a single interface.
Hence, two or more NeighborIfIndexes pointing to multiple distinct address sets may, in fact, be related to a common neighbor interface.
This ambiguity may also hold with respect to the assignment of the NeighborRouterIndex.
The local MIB agent is responsible for managing, aggregating, and retiring the defined indexes and for updating MIB tables using these indexes as the local router learns more about its neighbors' topologies.
These constructs are used to define indexes to the appropriate State Group tables and to correlate table entries to address sets, virtual neighbor interfaces, and virtual neighbors within the MANET.
The Performance Group reports values relevant to system performance.
Unstable neighbors or 2 hop neighbors and frequent changes of sets can have a negative influence on the performance of NHDP.
This MIB module defines several objects that can be polled in order to, e.g., calculate histories or monitor frequencies of changes.
This may help the network administrator to determine unusual topology changes or other changes that affect stability and reliability of the MANET.
One such framework is specified in [REPORT MIB].
The NHDP MIB module contains a number of tables that record data related to:  the local router,  a local MANET interface on the router,  other routers that are 1 hop removed from the local router,  interfaces on other routers that are 1 hop removed from the local router, and  other routers that are 2 hops removed from the local router.
The NHDP MIB module's tables are indexed via the following constructs:  nhdpIfIndex the IfIndex of the local router on which NHDP is configured.
nhdpDiscIfIndex a locally managed index representing a known interface on a neighboring router.
nhdpDiscRouterIndex a locally managed index representing an ID of a known neighboring router.
These tables and their indexing are:  nhdpInterfaceTable describes the configuration of the interfaces of this router.
This table has INDEX { nhdpIfIndex }.
nhdpLibLocalIfSetTable records all network addresses that are defined as local interface network addresses on this router.
This table has INDEX { nhdpLibLocalIfSetIndex }.
nhdpLibRemovedIfAddrSetTable records network addresses that were recently used as local interface network addresses on this router but have been removed.
This table has INDEX { nhdpLibRemovedIfAddrSetIndex }.
nhdpInterfaceStateTable records state information related to specific interfaces of this router.
This table has INDEX { nhdpIfIndex }.
nhdpDiscIfSetTable includes the nhdpDiscRouterIndex of the discovered router, the nhdpDiscIfIndex of the discovered interface, and the current set of addresses associated with this neighbor interface.
This table has INDEX { nhdpDiscIfSetIndex }.
nhdpIibLinkSetTable for each local interface, records all links belonging to other routers that are, or recently were, 1 hop neighbors to this router.
This table has INDEX { nhdpIfIndex, nhdpDiscIfIndex }.
nhdpIib2HopSetTable for each local interface, records network addresses (one at a time) of symmetric 2 hop neighbors and the symmetric links to symmetric 1 hop neighbors of this router through which these symmetric 2 hop neighbors can be reached.
This table has INDEX { nhdpIfIndex, nhdpDiscIfIndex, nhdpIib2HopSetIpAddressType, nhdpIib2HopSetIpAddress }.
nhdpNibNeighborSetTable records all network addresses of each 1 hop neighbor to this router.
This table has INDEX { nhdpDiscRouterIndex }.
nhdpNibLostNeighborSetTable records network addresses of other routers that were recently symmetric 1 hop neighbors to this router but are now advertised as lost.
This table has INDEX { nhdpDiscRouterIndex }.
nhdpInterfacePerfTable records performance objects that are measured for each local NHDP interface on this router.
This table has INDEX { nhdpIfIndex }.
nhdpDiscIfSetPerfTable records performance objects that are measured for each discovered interface of a neighbor of this router.
This table has INDEX { nhdpDiscIfIndex }.
nhdpDiscNeighborSetPerfTable records performance objects that are measured for discovered neighbors of this router.
This table has INDEX { nhdpDiscRouterIndex }.
nhdpIib2HopSetPerfTable records performance objects that are measured for discovered 2 hop neighbors of this router.
This table has INDEX { nhdpDiscRouterIndex }.
Relationship to Other MIB Modules
This section specifies the relationship of the MIB module contained in this document to other standards, particularly to standards containing other MIB modules.
MIB modules and specific definitions imported from MIB modules that SHOULD be implemented in conjunction with the MIB module contained within this document are identified in this section.
Relationship to the SNMPv2 MIB
The System group in the SNMPv2 MIB module [RFC3418] is defined as being mandatory for all systems, and the objects apply to the entity as a whole.
The System group provides identification of the management entity and certain other system wide data.
The NHDP MIB module does not duplicate those objects.
Relationship to Routing Protocol MIB Modules
MIB Module [RFC6130] allows routing protocols to rely on the neighborhood information that is discovered by means of HELLO message exchange.
In order to allow for troubleshooting, fault isolation, and management of such routing protocols through a routing protocol MIB module, it may be desired to align the State Group tables of the NHDP MIB module and the routing protocol MIB module.
This is accomplished through the definition of two TEXTUAL CONVENTIONs in the NHDP MIB module: the NeighborIfIndex and the NeighborRouterIndex.
These object types are used to develop indexes into common NHDP MIB module and routing protocol State Group tables.
These objects are locally significant but should be locally common to the NHDP MIB module and the routing protocol
MIB module implemented on a common networked router.
This will allow for improved cross referencing of information across the two MIB modules.
MIB Modules Required for IMPORTS
The following NHDP MIB module IMPORTS objects from SNMPv2
CONF [RFC2580], IF MIB [RFC2863], INET ADDRESS MIB [RFC4001], and FLOAT TC MIB
This section contains the MIB module defined by the specification.
This MIB module defines objects for the management of   NHDP (RFC 6130)
The Neighborhood Discovery Protocol,   Clausen, T., Dearlove, C., and J. Dean, January 2011.
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE,
Counter32, Counter64, Integer32, Unsigned32, mib 2, TimeTicks FROM
SNMPv2 SMI    RFC 2578 TEXTUAL CONVENTION, TruthValue, TimeStamp, RowStatus FROM SNMPv2 TC
MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2 CONF    STD 58
SnmpAdminString FROM SNMP FRAMEWORK MIB    RFC 3411 InetAddressType, InetAddress, InetAddressPrefixLength FROM INET ADDRESS
MIB    RFC 4001 InterfaceIndex FROM IF
MIB    RFC 2863 Float32TC FROM FLOAT TC MIB    RFC 6340 ; nhdpMIB MODULE IDENTITY LAST UPDATED "201210221000Z"
22 October 2012 ORGANIZATION "IETF MANET Working Group" CONTACT INFO "WG E Mail:
Ulrich Herberg LIX, Ecole Polytechnique 91128 Palaiseau Cedex France ulrich@herberg.name http://www.herberg.name/ Robert G. Cole US Army CERDEC Space and Terrestrial Communications 6010
Frankford Street Bldg 6010, Room 453H Aberdeen Proving Ground, Maryland 21005 USA  1
Ian D Chakeres DRS CenGen 9250
Bendix Road North Columbia, Maryland  21045
USA ian.chakeres@gmail.com http://www.ianchak.com/" DESCRIPTION "
This NHDP MIB module is applicable to routers implementing the Neighborhood Discovery Protocol defined in RFC 6130.
IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this MIB module is part of RFC 6779; see the RFC itself for full legal notices."
22 October 2012 DESCRIPTION "Initial version of this MIB module, published as RFC 6779."
Top Level Components of this MIB Module   nhdpNotifications OBJECT
Two new TEXTUAL CONVENTIONs have been defined in   this MIB module for indexing into the following   tables and indexing into other tables in other MIB modules.
The NeighborIfIndex defines a unique (to the local router)   index referencing a discovered virtual interface on another   neighbor within the MANET.
The NeighborRouterIndex defines a   unique (to the local router) index referencing a discovered   virtual neighbor within the MANET.
Due to the nature of NHDP,   different indexes may be related to common neighbor   interfaces or common neighbor routers, but the information   obtained through NHDP has not allowed the local router   to relate these virtual objects (i.e., interfaces or routers)
at this point in time.
As more topology information   is gathered by the local router, it may associate   virtual interfaces or routers and collapse these   indexes appropriately.
Multiple addresses can be associated with a   given NeighborIfIndex.
Each NeighborIfIndex is   associated with a
the nhdpStateObjGroup, the   NeighborIfIndex and
the NeighborRouterIndex are used   to define the set of IpAddrs related to a virtual   neighbor interface or virtual neighbor under discussion.
Due to the nature of NHDP, the local router may not know if two distinct addresses belong to the same interface of a neighbor or to two different interfaces.
As the local router gains more knowledge of its neighbors, its local view may change, and this table will be updated to reflect the local router's current understanding, associating address sets to neighbor interfaces.
The local router identifies a virtual neighbor interface through the receipt of address lists advertised through an NHDP HELLO message.
All objects of type NeighborIfIndex are assigned by the agent out of a common number space.
The value for each discovered virtual neighbor interface may not remain constant from one re initialization of the entity's network management agent to the next re initialization.
If the local router gains information associating two virtual interfaces on a neighbor as a common interface, then the agent MUST aggregate the two address sets to a single index chosen from the set of aggregated indexes, and it MUST update all tables in this MIB module that are indexed by indexes of type NeighborIfIndex.
It MAY then reuse freed index values following the next agent restart.
The specific value is meaningful only within a given SNMP entity."
An arbitrary, locally unique identifier associated with a virtual discovered neighbor (one or two hop).
Due to the nature of NHDP, the local router may identify multiple virtual neighbors that, in fact, are one and the same.
Neighbors that are two hops away with more than one advertised address will exhibit this behavior.
As the local router's knowledge of its neighbors' topology increases, the local router will be able to associate multiple virtual neighbor indexes into a single virtual neighbor index chosen from the set of aggregated indexes; it MUST update all tables in this MIB module indexed by these indexes, and it MAY reuse the freed indexes following the next agent re initialization.
All objects of type NeighborRouterIndex are assigned by the agent out of a common number space.
The NeighborRouterIndex defines a discovered NHDP peer virtual neighbor of the local router.
The value for each discovered virtual neighbor index MUST remain constant at least from one re initialization of the entity's network management agent to the next re initialization, except if an application is deleted and re created.
The specific value is meaningful only within a given SNMP entity.
A NeighborRouterIndex value MUST not be reused until the next agent restart."
objects that configure specific options   that determine the overall performance and operation of   NHDP.
"The nhdpInterfaceTable describes the configuration of the interfaces of this router that are intended to use MANET control protocols.
As such, this table 'sparse augments' the ifTable specifically when NHDP is to be configured to operate over this interface.
The interface is identified by the ifIndex from the interfaces group defined in the Interfaces Group MIB module.
A conceptual row in this table exists if and only if either a manager has explicitly created the row or there is an interface on the managed device that supports and runs NHDP.
The manager can create a row by setting rowStatus to 'createAndGo' or 'createAndWait'.
Row objects having associated DEFVAL clauses are automatically defined by the agent with these values during row creation, unless the manager explicitly defines these object values during the row creation.
If the corresponding entry with ifIndex value is deleted from the Interface Table, then the entry in this table is automatically deleted, NHDP is disabled on this interface, and all configuration and state information related to this interface is to be removed from memory."
"The nhdpInterfaceEntry describes one NHDP local interface configuration as indexed by its ifIndex as defined in the Standard MIB II Interface Table (RFC 2863).
The objects in this table are persistent, and when written, the device SHOULD save the change to non volatile storage.
For further information on the storage behavior for these objects, refer to the description for the nhdpIfRowStatus object.
nhdpLHoldTime Unsigned32, nhdpHHoldTime Unsigned32, nhdpHystAcceptQuality Float32TC, nhdpHystRejectQuality Float32TC, nhdpInitialQuality Float32TC, nhdpInitialPending TruthValue, nhdpHpMaxJitter Unsigned32,
"This value MUST correspond to an ifIndex referring to a valid entry in the Interfaces Table."
"The textual name of the interface.
The value of this object SHOULD be the name of the interface as assigned by the local device.
This can be a text name, such as 'le0' or a simple port number, such as '1', depending on the interface naming syntax of the device.
If there is no local name or this object is otherwise not applicable, then this object contains a zero length string."
"nhdpIfStatus indicates whether this interface is currently running NHDP.
A value of 'true(1)' indicates that NHDP is running on this interface.
A value of 'false(2)' indicates that NHDP is not currently running on this interface.
This corresponds to the I manet parameter in the Local Interface Set of NHDP.
"nhdpHelloInterval corresponds to HELLO INTERVAL of NHDP and represents the maximum time between the transmission of two successive HELLO messages on this MANET interface.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: nhdpHelloInterval > 0
nhdpHelloMinInterval" REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpHelloMinInterval corresponds to HELLO MIN INTERVAL of NHDP and represents the minimum interval between transmission of two successive HELLO messages on this MANET interface.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: nhdpHelloMinInterval <  nhdpHelloInterval" REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpRefreshInterval corresponds to REFRESH INTERVAL of NHDP and represents the maximum interval between advertisements of each 1 hop neighbor network address and its status.
Each advertisement is in a HELLO message on this MANET interface.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: nhdpRefreshInterval >  nhdpHelloInterval" REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpLHoldTime corresponds to L HOLD TIME of NHDP and represents the period of advertisement, on this MANET interface, of former 1 hop neighbor network addresses as lost in HELLO messages, allowing recipients of these HELLO messages to accelerate removal of this information from their Link Sets.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that it should be assigned a value significantly greater than the refresh interval held by nhdpRefreshInterval."
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpHHoldTime corresponds to H HOLD TIME of NHDP and is used as the value in the VALIDITY TIME
Message TLV included in all HELLO messages on this MANET interface.
It is then used by each router receiving such a HELLO message to indicate the validity of the information taken from that HELLO message and recorded in the receiving router's Information Bases.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that it should be assigned a value significantly greater than the refresh interval held by nhdpRefreshInterval and must be representable as described in RFC 5497.
" REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpHystAcceptQuality corresponds to HYST ACCEPT of NHDP and represents the link quality threshold at or above which a link becomes usable, if it was not already so.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: 0 <  nhdpHystRejectQuality <  nhdpHystAcceptQuality <  1.0
The default value for this object is 1.0.
According to RFC 6340: Since these textual conventions are defined in terms of the OCTET STRING type, the SMI's mechanisms for formally setting range constraints are not available.
MIB designers using these textual conventions will need to use DESCRIPTION clauses to spell out any applicable range constraints beyond those implied by the underlying IEEE types.
Therefore, this object does not have a DEFVAL clause."
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpHystRejectQuality corresponds to HYST REJECT of NHDP and represents the link quality threshold below which a link becomes unusable, if it was not already so.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: 0 <  nhdpHystRejectQuality <  nhdpHystAcceptQuality <  1.0
The default value for this object is 0.0.
According to RFC 6340: Since these textual conventions are defined in terms of the OCTET STRING type, the SMI's mechanisms for formally setting range constraints are not available.
MIB designers using these textual conventions will need to use DESCRIPTION clauses to spell out any applicable range constraints beyond those implied by the underlying IEEE types.
Therefore, this object does not have a DEFVAL clause."
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpInitialQuality corresponds to INITIAL QUALITY of NHDP and represents the initial quality of a newly identified link.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: 0 <  nhdpInitialQuality <  1.0
The default value for this object is 1.0.
According to RFC 6340: Since these textual conventions are defined in terms of the OCTET STRING type, the SMI's mechanisms for formally setting range constraints are not available.
MIB designers using these textual conventions will need to use DESCRIPTION clauses to spell out any applicable range constraints beyond those implied by the underlying IEEE types.
Therefore, this object does not have a DEFVAL clause."
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
If the value of this object is 'true(1)', then a newly identified link is considered pending and is not usable until the link quality has reached or exceeded the nhdpHystAcceptQuality threshold.
Guidance for setting this object may be found in Section 5 of the NHDP specification (RFC 6130), which indicates that: If nhdpInitialQuality >  nhdpHystAcceptQuality, then nhdpInitialPending :  false(2).
If nhdpInitialQuality < nhdpHystRejectQuality, then nhdpInitialPending :  true(1).
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpHpMaxJitter corresponds to HP MAXJITTER of NHDP and represents the value of MAXJITTER used in RFC 5148 for periodically generated HELLO messages on this MANET interface.
Guidance for setting this object may be found in Section 5 of RFC 5148, which indicates that: nhdpHpMaxJitter <  nhdpHelloInterval / 2 nhdpHpMaxJitter should not be greater than nhdpHelloInterval / 4
nhdpHpMaxJitter <  nhdpHelloMinInterval; and nhdpHpMaxJitter should not be greater than nhdpHelloMinInterval / 2" REFERENCE "Section 5 of RFC 5148 Jitter Considerations in Mobile Ad
Hoc Networks (MANETs), Clausen, T., Dearlove, C., and B. Adamson, February 2008
"nhdpHtMaxJitter corresponds to HT MAXJITTER of NHDP and represents the value of MAXJITTER used in RFC 5148 for externally triggered HELLO messages on this MANET interface.
Guidance for setting this object may be found in Section 5 of RFC 5148, which indicates that:
/ 2 nhdpHtMaxJitter should not be greater than nhdpHelloInterval / 4
, then nhdpHtMaxJitter <  nhdpHelloMinInterval; and nhdpHtMaxJitter should not be greater than nhdpHelloMinInterval / 2" REFERENCE "Section 5 of RFC 5148 Jitter Considerations in Mobile Ad
Hoc Networks (MANETs), Clausen, T., Dearlove, C., and B. Adamson, February 2008
"This object permits management of the table by facilitating actions such as row creation, construction, and destruction.
The value of this object has no effect on whether other objects in this conceptual row can be modified.
An entry may not exist in the 'active(1)' state unless all objects in the entry have a defined appropriate value.
For objects with DEFVAL clauses, the management station does not need to specify the value of this object in order for the row to transit to the 'active(1)' state; the default value for this object is used.
For objects that do not have DEFVAL clauses, then the network manager MUST specify the value of this object prior to this row transitioning to the 'active(1)' state.
When this object transitions to 'active(1)'
, all objects in this row SHOULD be written to non volatile (stable) storage.
Read create objects in this row MAY be modified.
When an object in a row with nhdpIfRowStatus of 'active(1)' is changed, then the updated value MUST be reflected in NHDP, and this new object value MUST be written to non volatile storage.
If the value of this object is not equal to 'active(1)', all associated entries in the nhdpLibLocalIfSetTable, nhdpInterfaceStateTable, nhdpIibLinkSetTable, and nhdpInterfacePerfTable MUST be deleted."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
current DESCRIPTION "nhdpNHoldTime corresponds to N HOLD TIME of NHDP and is used as the period during which former 1 hop neighbor network addresses are advertised as lost in HELLO messages, allowing recipients of these HELLO messages to accelerate removal of this information from their 2 Hop Sets.
This object is persistent, and when written, the entity SHOULD save the change to non volatile storage.
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
I HOLD TIME of NHDP and represents the period for which a recently used local interface network address is recorded.
This object is persistent, and when written, the entity SHOULD save the change to non volatile storage.
REFERENCE "Section 5 on Protocol Parameters and Constraints of RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
A router's Local Interface Set records all network addresses that are defined as local MANET interface network addresses.
As such, this table 'sparse augments' the nhdpInterfaceTable when network addresses are being defined for the interfaces existing within the nhdpInterfaceTable.
The local interface is defined by the nhdpIfIndex.
The Local Interface Set consists of Local Interface Address Tuples per MANET interface and their prefix lengths (in order to determine the network addresses related to the interface).
A conceptual row in this table exists if and only if a manager has explicitly created the row.
The manager can create a row by setting rowStatus to 'createAndGo' or 'createAndWait'.
Further guidance on the addition or removal of local addresses and network addresses is found in Section 9 of RFC 6130."
A router's Local Interface Set consists of Configured Interface Address Tuples for each network interface.
The objects in this table are persistent, and when written, the device SHOULD save the change to non volatile storage.
For further information on the storage behavior for these objects, refer to the description for the nhdpLibLocalIfSetRowStatus object.
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
SEQUENCE { nhdpLibLocalIfSetIndex Integer32, nhdpLibLocalIfSetIfIndex InterfaceIndex, nhdpLibLocalIfSetIpAddrType InetAddressType, nhdpLibLocalIfSetIpAddr InetAddress, nhdpLibLocalIfSetIpAddrPrefixLen InetAddressPrefixLength, nhdpLibLocalIfSetRowStatus RowStatus }
"The index for this table.
Necessary because multiple addresses may be associated with a given nhdpIfIndex.
"Specifies the local nhdpIfIndex for which this IP address was added."
"The type of the nhdpLibLocalIfSetIpAddr in the InetAddress MIB (RFC 4001).
Only the values 'ipv4(1)' and 'ipv6(2)' are supported.
"nhdpLibLocalIfSetIpAddr is an address of an interface of this router.
This object is interpreted according to the setting of nhdpLibLocalIfSetIpAddrType.
"Indicates the number of leading one bits that form the mask.
The mask is logically ANDed to the nhdpLibLocalIfSetIpAddr to determine the address prefix.
A row match is true if the address used as an index falls within the network address range defined by the address prefix."
"This object permits management of the table by facilitating actions such as row creation, construction, and destruction.
The value of this object has no effect on whether other objects in this conceptual row can be modified.
An entry may not exist in the 'active(1)' state unless all read create objects in the entry have a defined appropriate value.
As no objects in this table have DEFVAL clauses, the management station MUST specify the values of all read create objects prior to this row transitioning to the 'active(1)' state.
When this object transitions to 'active(1)'
, all objects in this row SHOULD be written to non volatile (stable) storage.
Read create objects in this row MAY be modified.
When an object in a row with nhdpIfRowStatus of 'active(1)' is changed, then the updated value MUST be reflected in NHDP, and this new object value MUST be written to non volatile storage.
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
SEQUENCE OF NhdpLibRemovedIfAddrSetEntry MAX ACCESS
A router's Removed Interface Address Set records network addresses that were recently used as local interface network addresses.
If a router's interface network addresses are immutable, then the Removed Interface Address Set is always empty and may be omitted.
It consists of Removed Interface Address Tuples, one per network address.
A router's Removed Interface Address Set consists of Removed Interface Address Tuples, one per network address: (IR local iface addr, IR time)
The association between these addresses and the router's Interface is found in the Standard MIB II's IP address table (RFC 1213).
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
InterfaceIndex, nhdpLibRemovedIfAddrSetIRTime TimeStamp } nhdpLibRemovedIfAddrSetIndex
"The index for this table.
Necessary because multiple addresses may be associated with a given nhdpIfIndex.
The type of the nhdpLibRemovedIfAddrSetIpAddr in the InetAddress MIB (RFC 4001).
Only the values 'ipv4(1)' and 'ipv6(2)' are supported.
"nhdpLibRemovedIfAddrSetIpAddr is a recently used address of an interface of this router.
"Indicates the number of leading one bits that form the mask.
The mask is logically ANDed to the nhdpLibRemovedIfAddrSetIpAddr to determine the address prefix.
A row match is true if the address used as an index falls within the network address range defined by the address prefix."
"Specifies the local IfIndex from which this IP address was recently removed."
"nhdpLibRemovedIfAddrSetIRTime specifies the value of sysUptime when this entry should expire and be removed from the nhdpLibRemovedIfAddrSetTable."
SEQUENCE OF NhdpInterfaceStateEntry MAX ACCESS
"nhdpInterfaceStateTable lists state information related to specific interfaces of this router.
The value of nhdpIfIndex is an ifIndex from the interfaces group defined in the Interfaces Group MIB.
The objects in this table are persistent, and when written, the entity SHOULD save the change to non volatile storage.
The Interfaces Group MIB, McCloghrie, K., and F. Kastenholtz, June 2000."
current DESCRIPTION "nhdpInterfaceStateEntry describes one NHDP local interface state as indexed by its nhdpIfIndex.
"The value of the sysUpTime when NHDP was last initialized on this MANET interface."
"The entries include the nhdpDiscRouterIndex of the discovered router, the nhdpDiscIfIndex of the discovered interface, and the current set of addresses associated with this neighbor interface.
The nhdpDiscIfIndex uniquely identifies the remote interface address sets through this table.
It does not need to be unique across the MANET but MUST be locally unique within this router."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
SEQUENCE { nhdpDiscIfSetIndex Integer32, nhdpDiscIfIndex NeighborIfIndex, nhdpDiscRouterIndex NeighborRouterIndex, nhdpDiscIfSetIpAddrType InetAddressType, nhdpDiscIfSetIpAddr InetAddress, nhdpDiscIfSetIpAddrPrefixLen InetAddressPrefixLength } nhdpDiscIfSetIndex
"The index for this table.
Necessary because multiple addresses may be associated with a given nhdpDiscIfIndex."
"The NHDP interface index (locally created) of a neighbor's interface.
Used for cross  indexing into other NHDP tables and other MIB modules.
The NHDP neighbor index (locally created) of a neighboring router.
Used for cross  indexing into other NHDP tables and other MIB modules.
Only the values 'ipv4(1)' and 'ipv6(2)' are supported.
"The nhdpDiscIfSetIpAddr is a recently used address of a neighbor of this router.
"Indicates the number of leading one bits that form the mask.
The mask is logically ANDed to the nhdpDiscIfSetIpAddr to determine the address prefix.
A row match is true if the address used as an index falls within the network address range defined by the address prefix."
A Link Set of an interface records all links from other routers that are, or recently were, 1 hop neighbors.
A Link Set consists of Link Tuples, each representing a single link indexed by the local and remote interface pair: (L neighbor iface addr list, L HEARD time,
L SYM time, L quality, L pending, L lost, L time).
The local interface is indexed via the nhdpIfIndex.
The 1 hop interface is indexed via the nhdpDiscIfIndex.
There SHOULD be an entry in this table for each local interface and associated 1 hop neighbor reachable on this local interface.
Note that L quality is not included in the entries below, because updates may be required too frequently."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpIibLinkSetLHeardTime corresponds to L HEARD time of NHDP and represents the time up to which the MANET interface of the 1 hop neighbor would be considered heard if not considering link quality."
nhdpIibLinkSetLSymTime corresponds to L SYM time of NHDP and represents the time up to which the link to the 1 hop neighbor would be considered symmetric if not considering link quality."
nhdpIibLinkSetEntry 2 } nhdpIibLinkSetLPending  OBJECT TYPE SYNTAX
"nhdpIibLinkSetLPending corresponds to L pending of NHDP and is a boolean flag, describing if a link is considered pending (i.e., a candidate, but not yet established, link).
"nhdpIibLinkSetLLost corresponds to L lost of NHDP and is a boolean flag, describing if a link is considered lost due to low link quality."
"nhdpIibLinkSetLTime specifies the value of sysUptime when this entry should expire and be removed from the nhdpIibLinkSetTable."
SEQUENCE OF NhdpIib2HopSetEntry MAX ACCESS
A 2 Hop Set of an interface records network addresses of symmetric 2 hop neighbors and the symmetric links to symmetric 1 hop neighbors through which these symmetric 2 hop neighbors can be reached.
It consists of 2 Hop Tuples.
nhdpIib2HopSetTable consists of 2 Hop Tuples, each representing a single network address of a symmetric 2 hop neighbor and a single MANET interface of a symmetric 1 hop neighbor.
(N2 neighbor iface addr list, N2 2hop addr, N2 time).
The entries include the 2 hop neighbor addresses, which act as the table index, and associated 1 hop symmetric link address set, designated through nhdpDiscIfIndex, and an expiration time.
The nhdpIfIndex in the INDEX is the interface index of the local interface through which these 2 hop addresses are accessible.
The nhdpDiscIfIndex in the INDEX represents the 1 hop neighbor interface through which these 2 hop addresses are reachable."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"The type of the nhdpIib2HopSetIpAddress in the InetAddress MIB module (RFC 4001).
Only the values 'ipv4(1)' and 'ipv6(2)' are supported.
current DESCRIPTION "nhdpIib2HopSetIpAddr corresponds to N2 2hop addr of NHDP and is a network address of a symmetric 2 hop neighbor that has a symmetric link (using any MANET interface) to the indicated symmetric 1 hop neighbor.
"Indicates the number of leading one bits that form the mask.
The mask is logically ANDed to the nhdpIib2HopSetIpAddress to determine the address prefix.
A row match is true if the address used as an index falls within the network address range defined by the address prefix."
nhdpIib2HopSet1HopIfIndex is nhdpDiscIfIndex of the 1 hop neighbor that communicated the ipAddress of the 2 hop neighbor in this row entry."
"nhdpIib2HopSetN2Time specifies the value of sysUptime when this entry should expire and be removed from the nhdpIib2HopSetTable."
Each router maintains a Neighbor Information Base   that records information about addresses of   current and recently symmetric 1 hop neighbors.
SEQUENCE OF NhdpNibNeighborSetEntry MAX ACCESS
A router's Neighbor Set records all network addresses of each 1 hop neighbor.
A router's Neighbor Set consists of Neighbor Tuples, each representing a single 1 hop neighbor: (N neighbor addr list, N symmetric)
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpNibNeighborNSymmetric corresponds to N symmetric of NHDP and is a boolean flag, describing if this is a symmetric 1 hop neighbor."
A router's Lost Neighbor Set records network addresses of routers that were recently symmetric 1 hop neighbors but are now advertised as lost.
A router's Lost Neighbor Set consists of Lost Neighbor Tuples, each representing a single such network address: (NL neighbor addr, NL time)" REFERENCE "RFC 6130
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"nhdpNibLostNeighborSetNLTime specifies the value of sysUptime when this entry should expire and be removed from the nhdpNibLostNeighborSetTable."
"This table summarizes performance objects that are measured per local NHDP interface.
"A single entry contains performance counters for a local NHDP interface.
nhdpIfHelloMessageXmitAccumulatedSize Counter64, nhdpIfHelloMessageRecvdAccumulatedSize Counter64, nhdpIfHelloMessageTriggeredXmits Counter32,
nhdpIfHelloMessagePeriodicXmits Counter32, nhdpIfHelloMessageXmitAccumulatedSymmetricNeighborCount Counter32, nhdpIfHelloMessageXmitAccumulatedHeardNeighborCount
"A counter is incremented each time a HELLO message has been transmitted on that interface."
"A counter is incremented each time a HELLO message has been received on that interface."
"A counter is incremented by the number of octets in a HELLO message each time a HELLO message has been sent."
"A counter is incremented by the number of octets in a HELLO message each time a HELLO message has been received."
"A counter is incremented each time a triggered HELLO message has been sent."
"A counter is incremented each time a periodic HELLO message has been sent."
"A counter is incremented by the number of advertised symmetric neighbors in a HELLO each time a HELLO message has been sent."
"A counter is incremented by the number of advertised heard neighbors in a HELLO each time a HELLO message has been sent."
"A counter is incremented by the number of advertised lost neighbors in a HELLO each time a HELLO message has been sent."
"There is an entry for each discovered interface of a neighbor."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"This counter increments each time this router receives a packet from that interface of the neighbor."
"This counter increments by the number of missed packets from this neighbor based on the packet sequence number each time this router receives a packet from that interface of the neighbor."
"This counter increments each time the Neighbor Set changes.
A change occurs whenever a new Neighbor Tuple has been added, a Neighbor Tuple has been removed, or any entry of a Neighbor Tuple has been modified."
"The entries include the nhdpDiscRouterIndex of the discovered router as well as performance objects related to changes of the Neighbor Set."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"This object returns the number of changes to the given Neighbor Tuple.
"This object returns the sysUpTime when the neighbor becomes 'nbrup'.
A neighbor is said to become 'nbrup' if a new nhdpNibNeighborSetEntry is created for a particular nhdpNibNeighborSetRouterIndex.
It becomes 'nbrdown' if the entry for that neighbor has been deleted."
"This object counts each time the neighbor changes the interface(s) over which it is reachable.
A change in the set of Link Tuples corresponding to the appropriate Neighbor Tuple is registered, i.e., a corresponding Link Tuple is added or removed from the set of all corresponding Link Tuples."
"This table contains performance objects per discovered 2 hop neighbor."
"The entries contain performance objects per discovered 2 hop neighbor."
Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP), Clausen, T., Dearlove, C., and J. Dean, April 2011
"This object counts the changes of the union of all N2 neighbor iface addr list of 2 Hop Tuples with an N2 2hop addr equal to one of the given 2 hop neighbor's addresses.
"This object returns the sysUpTime when the 2 Hop Tuple corresponding to the given 2 hop neighbor IP address was registered in the nhdpIib2HopSetTable."
NOTIFICATION TYPE OBJECTS { nhdpIfName,
nhdp2HopNbrStateChange is a notification sent when more than nhdp2HopNbrStateChangeThreshold 2 hop neighbors change their status (i.e., 'down(0)' or 'up(1)')
within a time window of nhdp2HopNbrStateChangeWindow."
nhdpIfStateChange is a notification sent when nhdpIfStatus has changed on this interface."
A threshold value for the nhdpNbrStateChange object.
If the number of occurrences exceeds this threshold within the previous nhdpNbrStateChangeWindow, then the nhdpNbrStateChange notification is to be sent.
It is recommended that the value of this threshold be set to at least 10 and higher in dense topologies with frequent expected topology changes.
A time window for the nhdpNbrStateChange object.
If the number of occurrences exceeds the nhdpNbrStateChangeThreshold within the previous nhdpNbrStateChangeWindow, then the nhdpNbrStateChange notification is to be sent.
It is recommended that the value for this window be set to at least 5 times the nhdpHelloInterval.
This object represents the time in hundredths of a second."
A threshold value for the nhdp2HopNbrStateChange object.
If the number of occurrences exceeds this threshold within the previous nhdp2HopNbrStateChangeWindow,
then the nhdp2HopNbrStateChange notification is to be sent.
It is recommended that the value of this threshold be set to at least 10 and higher when topologies are expected to be highly dynamic."
A time window for the nhdp2HopNbrStateChange object.
If the number of occurrences exceeds the nhdp2HopNbrStateChangeThreshold within the previous nhdp2HopNbrStateChangeWindow,
then the nhdp2HopNbrStateChange notification is to be sent.
It is recommended that the value for this window be set to at least 5 times nhdpHelloInterval.
This object represents the time in hundredths of a second."
In NHDP, it is not necessary to remove Protocol Tuples from Protocol Sets at the exact time indicated, only to behave as if the Protocol Tuples were removed at that time.
This case is indicated here as 'down(0)', all other cases being indicated as 'asymmetric(1)' or 'symmetric(2)'.
If 'down(0)', the direct neighbor is also added to the nhdpNibLostNeighborSetTable."
In NHDP, it is not necessary to remove Protocol Tuples from Protocol Sets at the exact time indicated, only to behave as if the Protocol Tuples were removed at that time.
This case is indicated here as 'down(0)'; otherwise, it is 'up(1)'."
"The basic implementation requirements for managed network entities that implement NHDP."
"The full implementation requirements for managed network entities that implement NHDP."
OBJECT GROUP OBJECTS { nhdpIfName, nhdpIfStatus, nhdpHelloInterval, nhdpHelloMinInterval, nhdpRefreshInterval, nhdpLHoldTime, nhdpHHoldTime, nhdpHystAcceptQuality, nhdpHystRejectQuality, nhdpInitialQuality, nhdpInitialPending, nhdpHpMaxJitter, nhdpHtMaxJitter, nhdpNHoldTime, nhdpIHoldTime, nhdpIfRowStatus, nhdpLibLocalIfSetIfIndex, nhdpLibLocalIfSetIpAddrType, nhdpLibLocalIfSetIpAddr, nhdpLibLocalIfSetIpAddrPrefixLen, nhdpLibLocalIfSetRowStatus, nhdpLibRemovedIfAddrSetIpAddrType, nhdpLibRemovedIfAddrSetIpAddr, nhdpLibRemovedIfAddrSetIpAddrPrefixLen, nhdpLibRemovedIfAddrSetIfIndex, nhdpLibRemovedIfAddrSetIRTime } STATUS
current DESCRIPTION "Set of NHDP configuration objects implemented in this module."
OBJECT GROUP OBJECTS { nhdpUpTime, nhdpIfStateUpTime, nhdpDiscRouterIndex, nhdpDiscIfIndex, nhdpDiscIfSetIpAddrType, nhdpDiscIfSetIpAddr, nhdpDiscIfSetIpAddrPrefixLen, nhdpIibLinkSetLHeardTime, nhdpIibLinkSetLSymTime, nhdpIibLinkSetLPending, nhdpIibLinkSetLLost, nhdpIibLinkSetLTime, nhdpIib2HopSetIpAddrPrefixLen, nhdpIib2HopSet1HopIfIndex, nhdpIib2HopSetN2Time, nhdpNibNeighborSetNSymmetric, nhdpNibLostNeighborSetNLTime
NOTIFICATION GROUP NOTIFICATIONS { nhdpNbrStateChange, nhdp2HopNbrStateChange, nhdpIfStateChange } STATUS
current DESCRIPTION "Set of NHDP notifications implemented in this module."
This MIB module defines objects for the configuration, monitoring, and notification of the Neighborhood Discovery Protocol [RFC6130].
NHDP allows routers to acquire topological information up to two hops away by virtue of exchanging HELLO messages.
The information acquired by NHDP may be used by routing protocols.
The neighborhood information, exchanged between routers using NHDP, serves these routing protocols as a baseline for calculating paths to all destinations in the MANET, relay set selection for network wide transmissions, etc.
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:  nhdpIfStatus
This writable object turns on or off the NHDP process for the specified interface.
If disabled, higher level protocol functions, e.g., routing, would fail, causing network  wide disruptions.
These writable objects control the rate at which HELLO messages are sent on an interface.
If set at too high a rate, this could represent a form of denial of service (DoS) attack by overloading interface resources.
nhdpHystAcceptQuality, nhdpHystRejectQuality, nhdpInitialQuality, and nhdpInitialPending
These writable objects affect the perceived quality of the NHDP links and hence the overall stability of the network.
If improperly set, these settings could result in network wide disruptions.
nhdpInterfaceTable This table contains writable objects that affect the overall performance and stability of the NHDP process.
Failure of the NHDP process would result in network wide failure.
Particularly sensitive objects from this table are discussed in the previous list items.
This is the only table in the NHDP MIB module with writable objects.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:  nhdpDiscIfSetTable
The object contains information on discovered neighbors, specifically their IP address in the nhdpDiscIfSetIpAddr object.
This information provides an adversary broad information on the members of the MANET, located within this single table.
This information can be used to expedite attacks on the other members of the MANET without having to go through a laborious discovery process on their own.
This object is the index into the table and has a MAX ACCESS of 'not  accessible'.
However, this information can be exposed using SNMP operations.
MANET technology is often deployed to support communications of emergency services or military tactical applications.
In these applications, it is imperative to maintain the proper operation of the communications network and to protect sensitive information related to its operation.
Therefore, it is RECOMMENDED to provide support for the Transport Security Model (TSM)
[RFC5591] in combination with TLS/DTLS [RFC6353].
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
Implementations MUST provide the security features described by the SNMPv3 framework (see [RFC3410]), including full support for authentication and privacy via the User based Security Model (USM)
[RFC3414] with the AES cipher algorithm [RFC3826].
Implementations MAY also provide support for the Transport Security Model (TSM)
[RFC5591] in combination with a secure transport such as SSH [RFC5592] or TLS/DTLS [RFC6353].
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
Applicability Statement This document describes objects for configuring parameters of the Neighborhood Discovery Protocol [RFC6130] process on a router.
This MIB module, denoted NHDP MIB, also reports state, performance information, and notifications.
This section provides some examples of how this MIB module can be used in MANET network deployments.
A fuller discussion of MANET network management use cases and challenges will be provided elsewhere.
NHDP is designed to allow routers to automatically discover and track routers one hop remote (denoted "neighbors") and routers two hops remote (denoted "two hop neighbors").
This information is used by other MANET protocols in operation on the router to perform routing, multicast forwarding, and other functions with ad hoc and mobile networks.
In the following, three example scenarios are listed where this MIB module is useful:  For a Parking Lot Initial Configuration Situation
It is common for the vehicles comprising the MANET being forward deployed at a remote location, e.g., the site of a natural disaster, to be off  loaded in a parking lot where an initial configuration of the networking devices is performed.
The configuration is loaded into the devices from a fixed location Network Operation Center (NOC) at the parking lot, and the vehicles are stationary at the parking lot while the configuration changes are made.
Standards based methods for configuration management from the co located NOC are necessary for this deployment option.
For Mobile Vehicles with Low Bandwidth Satellite Link to a Fixed NOC
Here, the vehicles carrying the MANET routers carry multiple wireless interfaces, one of which is a relatively low bandwidth, on the move satellite connection that interconnects a fix NOC to the nodes of the MANET.
Standards based methods for monitoring and fault management from the fixed NOC are necessary for this deployment option.
For Fixed NOC and Mobile Local Manager in Larger Vehicles for larger vehicles, a hierarchical network management arrangement is useful.
Centralized network management is performed from a fixed NOC while local management is performed locally from within the vehicles.
Standards based methods for configuration, monitoring, and fault management are necessary for this deployment option.
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER value recorded in the SMI Numbers registry:
