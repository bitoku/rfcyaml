- title: __initial_text__
  contents:
  - "           Advice on When It Is Safe to Start Sending Data on\n             Label\
    \ Switched Paths Established Using RSVP-TE\n"
- title: Abstract
  contents:
  - "Abstract\n   The Resource Reservation Protocol (RSVP) has been extended to support\n\
    \   Traffic Engineering (TE) in Multiprotocol Label Switching (MPLS) and\n   Generalized\
    \ MPLS (GMPLS) networks.  The protocol enables signaling\n   exchanges to establish\
    \ Label Switched Paths (LSPs) that traverse\n   nodes and link to provide end-to-end\
    \ data paths.  Each node is\n   programmed with \"cross-connect\" information\
    \ as the signaling messages\n   are processed.  The cross-connection information\
    \ instructs the node\n   how to forward data that it receives.\n   End points\
    \ of an LSP need to know when it is safe to start sending\n   data so that it\
    \ is not misdelivered, and so that safety issues\n   specific to optical data-plane\
    \ technology are satisfied.  Likewise,\n   all label switching routers along the\
    \ path of the LSP need to know\n   when to program their data planes relative\
    \ to sending and receiving\n   control-plane messages.\n   This document clarifies\
    \ and summarizes the RSVP-TE protocol exchanges\n   with relation to the programming\
    \ of cross-connects along an LSP for\n   both unidirectional and bidirectional\
    \ LSPs.  This document does not\n   define any new procedures or protocol extensions,\
    \ and defers\n   completely to the documents that provide normative references.\
    \  The\n   clarifications set out in this document may also be used to help\n\
    \   interpret LSP establishment performance figures for MPLS-TE and GMPLS\n  \
    \ devices.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any\n   errata, and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6383.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Resource Reservation Protocol (RSVP) [RFC2205] has been\
    \ extended\n   to support Traffic Engineering (TE) in Multiprotocol Label Switching\n\
    \   (MPLS) and Generalized MPLS (GMPLS) networks [RFC3209] [RFC3473].\n   The\
    \ protocol enables signaling exchanges to establish Label Switched\n   Paths (LSPs)\
    \ that traverse nodes and links to provide end-to-end data\n   paths.  Each node\
    \ is programmed with \"cross-connect\" information as\n   the signaling messages\
    \ are processed.  The cross-connection\n   information instructs the node how\
    \ to forward data that it receives.\n   In some technologies this requires configuration\
    \ of physical devices,\n   while in others it may involve the exchange of commands\
    \ between\n   different components of the node.  The nature of a cross-connect\
    \ is\n   described further in Section 1.1.1.\n   End points of an LSP need to\
    \ know when it is safe to start sending\n   data.  In this context \"safe\" has\
    \ two meanings.  The first issue is\n   that the sender needs to know that the\
    \ data path has been fully\n   established, setting up the cross-connects and\
    \ removing any old,\n   incorrect forwarding instructions, so that data will be\
    \ delivered to\n   the intended destination.  The other meaning of \"safe\" is\
    \ that in\n   optical technologies, lasers must not be turned on until the correct\n\
    \   cross-connects have been put in place to ensure that service\n   personnel\
    \ are not put at risk.\n   Similarly, all Label Switching Routers (LSRs) along\
    \ the path of the\n   LSP need to know when to program their data planes relative\
    \ to\n   sending and receiving control-plane messages.\n   This document clarifies\
    \ and summarizes the RSVP-TE protocol exchanges\n   with relation to the programming\
    \ of cross-connects along an LSP for\n   both unidirectional and bidirectional\
    \ LSPs.  Bidirectional LSPs, it\n   should be noted, are supported only in GMPLS.\
    \  This document does not\n   define any new procedures or protocol extensions,\
    \ and defers\n   completely to the documents that provide normative references.\n\
    \   The clarifications set out in this document may also be used to help\n   interpret\
    \ LSP establishment performance figures for MPLS-TE and GMPLS\n   devices.  For\
    \ example, the dynamic provisioning performance metrics\n   set out in [RFC5814]\
    \ need to be understood in the context of LSP\n   setup times and not in terms\
    \ of control message exchange times that\n   are actually only a component of\
    \ the whole LSP establishment process.\n   Implementations could significantly\
    \ benefit from this document\n   definitively identifying any LSR to forward the\
    \ Path or Resv message\n   [RFC3473] before programming its cross-connect, thereby\
    \ exploiting\n   pipelining (i.e., doing one action in the background while another\
    \ is\n   progressing) to try to minimize the total time to set up the LSP.\n \
    \  However, while this document gives advice and identifies the issues\n   to\
    \ be considered, it is not possible to make definitive statements\n   about how\
    \ much pipelining is safe, since a node cannot \"know\" much\n   without first\
    \ probing the network (for example, with protocol\n   extensions) which would\
    \ defeat the point of pipelining.  Due to the\n   number of variables introduced\
    \ by path length, and other node\n   behavior, ingress might be limited to a very\
    \ pessimistic view for\n   safety.  Furthermore, it seems unlikely that an implementation\
    \ would\n   necessarily give a full and frank description of how long it takes\
    \ to\n   program and stabilize its cross-connects.  Nevertheless, this\n   document\
    \ identifies the issues and opportunities for pipelining in\n   GMPLS systems.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   It is assumed that the reader is familiar with the basic\
    \ message\n   flows of RSVP-TE as used in MPLS-TE and GMPLS.  Refer to [RFC2205],\n\
    \   [RFC3209], [RFC3471], and [RFC3473] for more details.\n"
- title: 1.1.1.  What is a Cross-Connect?
  contents:
  - "1.1.1.  What is a Cross-Connect?\n   In the context of this document, the concept\
    \ of a \"cross-connection\"\n   should be taken to imply the data forwarding instructions\
    \ installed\n   (that is, \"programmed\") at a network node (or \"switch\").\n\
    \   In packet MPLS networks, this is often referred to as the Incoming\n   Label\
    \ Map (ILM) and Next Hop Label Forwarding Entry (NHLFE) [RFC3031]\n   which are\
    \ sometimes considered together as entries in the Label\n   Forwarding Information\
    \ Base (LFIB) [RFC4221].  Where there is\n   admission control and resource reservation\
    \ associated with the data\n   forwarding path (such as the allocation of data\
    \ buffers) [RFC3209],\n   this can be treated as part of the cross-connect programming\
    \ process\n   since the LSP will not be available to forward data in the manner\n\
    \   agreed to during the signaling protocol exchange until the resources\n   are\
    \ correctly allocated and reserved.\n   In non-packet networks (such as time-division\
    \ multiplexing, or\n   optical switching networks), the cross-connect concept\
    \ may be an\n   electronic cross-connect array or a transparent optical device\
    \ (such\n   as a microelectromechanical system (MEMS)).  In all cases, however,\n\
    \   the concept applies to the instructions that are programmed into the\n   forwarding\
    \ plane (that is, the data plane) so that incoming data for\n   the LSP on one\
    \ port can be correctly handled and forwarded out of\n   another port.\n"
- title: 2.  Unidirectional MPLS-TE LSPs
  contents:
  - "2.  Unidirectional MPLS-TE LSPs\n   [RFC3209] describes the RSVP-TE signaling\
    \ and processing for MPLS-TE\n   packet-based networks.  LSPs in these networks\
    \ are unidirectional by\n   definition (there are no bidirectional capabilities\
    \ in [RFC3209]).\n   Section 4.1.1.1 of [RFC3209] describes a node's process prior\
    \ to\n   sending a Resv message to its upstream neighbor.\n      The node then\
    \ sends the new LABEL object as part of the Resv\n      message to the previous\
    \ hop.  The node SHOULD be prepared to\n      forward packets carrying the assigned\
    \ label prior to sending the\n      Resv message.\n   This means that the cross-connect\
    \ should be in place to support\n   traffic that may arrive at the node before\
    \ the node sends the Resv.\n   This is clearly advisable because the upstream\
    \ LSRs might otherwise\n   complete their cross-connections more rapidly and encourage\
    \ the\n   ingress to start transmitting data with the risk that the node that\n\
    \   sent the Resv \"early\" would be unable to forward the data it received\n\
    \   and would be forced to drop it, or might accidentally send it along\n   the\
    \ wrong LSP because of stale cross-connect information.\n   The use of \"SHOULD\"\
    \ [RFC2119] in this text indicates that an\n   implementation could be constructed\
    \ that sends a Resv before it is\n   ready to receive and forward data.  This\
    \ might be done simply because\n   the internal construction of the node means\
    \ that the control-plane\n   components cannot easily tell when the cross-connection\
    \ has been\n   installed.  Alternatively, it might arise because the implementation\n\
    \   is aware that it will be slow and does not wish to hold up the\n   establishment\
    \ of the LSP.  In this latter case, the implementation is\n   choosing to pipeline\
    \ the cross-connect programming with the protocol\n   exchange taking a gamble\
    \ that there will be other upstream LSRs that\n   may also take some time to process,\
    \ and it will in any case be some\n   time before the ingress actually starts\
    \ to send data.  It should be\n   noted that, as well as the risks described in\
    \ the previous paragraph,\n   a node that behaves like this must include a mechanism\
    \ to report a\n   failure to chase the Resv message (using a PathErr) in the event\
    \ that\n   the pipelined cross-connect processing fails.\n"
- title: 3.  GMPLS LSPs
  contents:
  - "3.  GMPLS LSPs\n   GMPLS [RFC3945] extends RSVP-TE signaling for use in networks\
    \ of\n   different technologies [RFC3471] [RFC3473].  This means that RSVP-TE\n\
    \   signaling may be used in MPLS packet switching networks, as well as\n   layer\
    \ two networks (Ethernet, Frame Relay, ATM), time-division\n   multiplexing networks\
    \ (Time Division Multiplexer (TDM), i.e.,\n   Synchronous Optical Network (SONET)\
    \ and Synchronous Digital Hierarchy\n   (SDH)), Wavelength Division Multiplexing\
    \ (WDM) networks, and fiber\n   switched network.\n   The introduction of these\
    \ other technologies, specifically the\n   optical technologies, brings about\
    \ the second definition of the\n   \"safe\" commencement of data transmission\
    \ as described in Section 1.\n   That is, there is a physical safety issue that\
    \ means that the lasers\n   should not be enabled until the cross-connects are\
    \ correctly in\n   place.\n   GMPLS supports unidirectional and bidirectional\
    \ LSPs.  These are\n   split into separate sections for discussion.  The processing\
    \ rules\n   are inherited from [RFC3209] unless they are specifically modified\
    \ by\n   [RFC3471] and [RFC3473].\n"
- title: 3.1.  Unidirectional LSPs
  contents:
  - "3.1.  Unidirectional LSPs\n   Unidirectional LSP processing would be the same\
    \ as that described in\n   Section 2 except for the use of the Suggested_Label\
    \ object defined in\n   [RFC3473].  This object allows an upstream LSR to 'suggest'\
    \ to its\n   downstream neighbor the label that should be used for forward-\n\
    \   direction data by including the object on a Path message.  The\n   purpose\
    \ of this object is to help the downstream LSR in its choice of\n   label, but\
    \ it also makes it possible for the upstream LSR to\n   'pipeline' programming\
    \ its cross-connect with the RSVP-TE signaling\n   exchanges.  That means that\
    \ the cross-connect might be in place\n   before the signaling has completed (i.e.,\
    \ before a Resv message\n   carrying a Label object has been received at the upstream\
    \ LSR).\n   We need to know when it is safe to start sending data.  There are\n\
    \   three sources of information.\n   -  Section 3.4 of [RFC3471] states:\n  \
    \    In particular, an ingress node should not transmit data traffic on\n    \
    \  a suggested label until the downstream node passes a label\n      upstream.\n\
    \   The implication here is that an ingress node may (safely) start to\n   transmit\
    \ data when it receives a label in a Resv message.\n   -  Section 2.5 of [RFC3473]\
    \ states:\n      Furthermore, an ingress node SHOULD NOT transmit data traffic\n\
    \      using a suggested label until the downstream node passes a\n      corresponding\
    \ label upstream.\n   This is a confirmation of the first source.\n   -  Section\
    \ 4.1.1.1 of [RFC3209] states:\n      The node then sends the new LABEL object\
    \ as part of the Resv\n      message to the previous hop.  The node SHOULD be\
    \ prepared to\n      forward packets carrying the assigned label prior to sending\
    \ the\n      Resv message.\n   In this text, the word \"prior\" is very important.\
    \  It means that the\n   cross-connect must be in place for forward traffic before\
    \ the Resv is\n   sent.  In other words, each of the transit nodes and the egress\
    \ node\n   must finish making their cross-connects before they send the Resv\n\
    \   message to their upstream neighbors.\n   Thus, as in Section 2, we can deduce\
    \ that the ingress must not start\n   to transmit traffic until it has both received\
    \ a Resv and has\n   programmed its own cross-connect.\n"
- title: 3.2.  Bidirectional LSPs
  contents:
  - "3.2.  Bidirectional LSPs\n   A bidirectional LSP is established with one signaling\
    \ exchange of a\n   Path message from ingress to egress, and a Resv from egress\
    \ to\n   ingress.  The LSP itself is comprised of two sets of forwarding\n   state,\
    \ one providing a path from the ingress to the egress (the\n   forwards data path),\
    \ and one from the egress to the ingress (the\n   reverse data path).\n"
- title: 3.2.1.  Forwards Direction Data
  contents:
  - "3.2.1.  Forwards Direction Data\n   The processing for the forwards direction\
    \ data path is exactly as\n   described for a unidirectional LSP in Section 3.1.\n"
- title: 3.2.2.  Reverse Direction Data
  contents:
  - "3.2.2.  Reverse Direction Data\n   For the reverse direction data flow, an Upstream_Label\
    \ object is\n   carried in the Path message from each LSR to its downstream neighbor.\n\
    \   The Upstream_Label object tells the downstream LSR which label to use\n  \
    \ for data being sent to the upstream LSR (that is, reverse direction\n   data).\
    \  The use of the label is confirmed by the downstream LSR when\n   it sends a\
    \ Resv message.  Note that there is no explicit confirmation\n   of the label\
    \ in the Resv message, but if the label was not acceptable\n   to the downstream\
    \ LSR, it would return a PathErr message instead.\n   The upstream LSR must decide\
    \ when to send the Path message relative\n   to when it programs its cross-connect.\
    \  That is:\n   -  Should it program the cross-connect before it sends the Path\n\
    \      message;\n   -  Can it overlap the programming with the exchange of messages;\
    \ or\n   -  Must it wait until it receives a Resv from its downstream\n      neighbor?\n\
    \   The defining reference is Section 3.1 of [RFC3473]:\n      The Upstream_Label\
    \ object MUST indicate a label that is valid for\n      forwarding at the time\
    \ the Path message is sent.\n   In this text, \"valid for forwarding\" should\
    \ be taken to mean that it\n   is safe for the LSR that sends the Path message\
    \ to receive data, and\n   that the LSR will forward data correctly.  The text\
    \ does not mean\n   that the label is \"acceptable for use\" (i.e., the label\
    \ is available\n   to be cross-connected).\n   This point is clarified later in\
    \ Section 3.1 of [RFC3473]:\n      Terminator nodes process Path messages as usual,\
    \ with the\n      exception that the upstream label can immediately be used to\n\
    \      transport data traffic associated with the LSP upstream towards\n     \
    \ the initiator.\n   This is a clear statement that when a Path message has been\
    \ fully\n   processed by an egress node, it is completely safe to transmit data\n\
    \   toward the ingress (i.e., reverse direction data).\n   From this we can deduce\
    \ several things:\n   -  An LSR must not wait to receive a Resv message before\
    \ it programs\n      the cross-connect for the reverse direction data.  It must\
    \ be\n      ready to receive data from the moment that the egress completes\n\
    \      processing the Path message that it receives (i.e., before it\n      sends\
    \ a Resv back upstream).\n   -  An LSR may expect to start receiving reverse direction\
    \ data as\n      soon as it sends a Path message for a bidirectional LSP.\n  \
    \ -  An LSR may make some assumptions about the time lag between\n      sending\
    \ a Path message and the message reaching and being\n      processed by the egress.\
    \  It may take advantage of this time lag\n      to pipeline programming the cross-connect.\n"
- title: 3.3.  ResvConf Message
  contents:
  - "3.3.  ResvConf Message\n   The ResvConf message is used in standard RSVP [RFC2205]\
    \ to let the\n   ingress confirm to the egress that the Resv has been successfully\n\
    \   received, and what bandwidth has been reserved.  In RSVP-TE [RFC3209]\n  \
    \ and GMPLS [RFC3473], it is not expected that bandwidth will be\n   modified\
    \ along the path of the LSP, so the purpose of the ResvConf is\n   reduced to\
    \ a confirmation that the LSP has been successfully\n   established.\n   The egress\
    \ may request that a ResvConf be sent by including a\n   Resv_Confirm object in\
    \ the Resv message that it sends.  When the\n   ingress receives the Resv message\
    \ and sees the Resv_Confirm object,\n   it can respond with a ResvConf message.\n\
    \   It should be clear that this mechanism might provide a doubly secure\n   way\
    \ for the egress to ensure that the reverse direction data path is\n   safely\
    \ in place before transmitting data.  That is, if the egress\n   waits until it\
    \ receives a ResvConf message, it can be sure that the\n   whole LSP is in place.\n\
    \   However, this mechanism is excessive given the definitions presented\n   in\
    \ Section 3.2.2, and would delay LSP setup by one end-to-end message\n   propagation\
    \ cycle.  It should be noted as well that the generation\n   and of the ResvConf\
    \ message is not guaranteed.  Furthermore, many (if\n   not most) GMPLS implementations\
    \ neither request nor send ResvConf\n   messages.  Therefore, egress reliance\
    \  on the receipt of a ResvConf\n   as a way of knowing that it is safe to start\
    \ transmitting reverse\n   direction data is not recommended.\n"
- title: 3.4.  Administrative Status
  contents:
  - "3.4.  Administrative Status\n   GMPLS offers an additional tool for ensuring\
    \ safety of the LSP.  The\n   Administrative Status information is defined in\
    \ Section 8 of\n   [RFC3471] and is carried in the Admin_Status Object defined\
    \ in\n   Section 7 of [RFC3473].\n   This object allows an ingress to set up an\
    \ LSP in \"Administratively\n   Down\" state.  This state means that [RFC3471]:\n\
    \      ... the local actions related to the \"administratively down\" state\n\
    \      should be taken.\n   In this state, it is assumed that the LSP exists (i.e.,\
    \ the cross-\n   connects are all in place), but no data is transmitted (i.e.,\
    \ in\n   optical systems, the lasers are off).\n   Additionally, the Admin_Status\
    \ object allows the LSP to be put into\n   \"Testing\" state.  This state means\
    \ ([RFC3471]) that:\n      ... the local actions related to the \"testing\" mode\
    \ should be\n      taken.\n   This state allows the connectivity of the LSP to\
    \ be tested without\n   actually exchanging user data.  For example, in an optical\
    \ system, it\n   would be possible to run a data continuity test (using some external\n\
    \   coordination of errors).  In a packet network, a connection\n   verification\
    \ exchange (such as the in-band Virtual Circuit\n   Connectivity Verification\
    \ described in Section 5.1.1 of [RFC5085])\n   could be used.  Once connectivity\
    \ has been verified, the LSP could be\n   put into active mode and the exchange\
    \ of user data could commence.\n   These processes may be considered particularly\
    \ important in systems\n   where the control-plane processors are physically distinct\
    \ from the\n   data-plane cross-connects (for example, where there is a\n   communication\
    \ protocol operating between the control-plane processor\n   and the data-plane\
    \ switch) in which case the successful completion of\n   control-plane signaling\
    \ cannot necessarily be taken as evidence of\n   correct data-plane programming.\n"
- title: 4.  Implications for Performance Metrics
  contents:
  - "4.  Implications for Performance Metrics\n   The ability of LSRs to handle and\
    \ propagate control-plane messages\n   and to program cross-connects varies considerably\
    \ from device to\n   device according to switching technology, control-plane connectivity,\n\
    \   and implementation.  These factors influence how quickly an LSP can\n   be\
    \ established.\n   Different applications have different requirements for the\
    \ speed of\n   setup of LSPs, and this may be particularly important in recovery\n\
    \   scenarios.  It is important for service providers considering the\n   deployment\
    \ of MPLS-TE or GMPLS equipment to have a good benchmark for\n   the performance\
    \ of the equipment.  Similarly, it is important for\n   equipment vendors to be\
    \ compared on a level playing field.\n   In order to provide a basis for comparison,\
    \ [RFC5814] defines a\n   series of performance metrics to evaluate dynamic LSP\
    \ provisioning\n   performance in MPLS-TE/GMPLS networks.  Any use of such metrics\
    \ must\n   be careful to understand what is being measured, bearing in mind that\n\
    \   it is not enough to know that the control-plane message has been\n   processed\
    \ and forwarded: the cross-connect must be put in place\n   before the LSP can\
    \ be used.  Thus, care must be taken to ensure that\n   devices are correctly\
    \ conforming to the procedures clarified in\n   Section 2 of this document, and\
    \ not simply forwarding control-plane\n   messages with the intent to program\
    \ the cross-connects in the\n   background.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document does not define any network behavior\
    \ and does not\n   introduce or seek to solve any security issues.\n   It may\
    \ be noted that a clear understanding of when to start sending\n   data may reduce\
    \ the risk of data being accidentally delivered to the\n   wrong place or individuals\
    \ being hurt.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Thanks to Weiqiang Sun, Olufemi Komolafe, Daniel King,\
    \ and Stewart\n   Bryant for their review and comments.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2205] Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and\
    \ S.\n             Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n\
    \             Functional Specification\", RFC 2205, September 1997.\n   [RFC3209]\
    \ Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n             and\
    \ G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n             Tunnels\", RFC\
    \ 3209, December 2001.\n   [RFC3471] Berger, L., Ed., \"Generalized Multi-Protocol\
    \ Label\n             Switching (GMPLS) Signaling Functional Description\", RFC\n\
    \             3471, January 2003.\n   [RFC3473] Berger, L., Ed., \"Generalized\
    \ Multi-Protocol Label\n             Switching (GMPLS) Signaling Resource ReserVation\
    \ Protocol-\n             Traffic Engineering (RSVP-TE) Extensions\", RFC 3473,\n\
    \             January 2003.\n   [RFC3945] Mannie, E., Ed., \"Generalized Multi-Protocol\
    \ Label\n             Switching (GMPLS) Architecture\", RFC 3945, October 2004.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC3031] Rosen, E., Viswanathan, A., and R.\
    \ Callon, \"Multiprotocol\n             Label Switching Architecture\", RFC 3031,\
    \ January 2001.\n   [RFC4221] Nadeau, T., Srinivasan, C., and A. Farrel, \"Multiprotocol\n\
    \             Label Switching (MPLS) Management Overview\", RFC 4221,\n      \
    \       November 2005.\n   [RFC5085] Nadeau, T., Ed., and C. Pignataro, Ed., \"\
    Pseudowire Virtual\n             Circuit Connectivity Verification (VCCV): A Control\
    \ Channel\n             for Pseudowires\", RFC 5085, December 2007.\n   [RFC5814]\
    \ Sun, W., Ed., and G. Zhang, Ed., \"Label Switched Path (LSP)\n             Dynamic\
    \ Provisioning Performance Metrics in Generalized\n             MPLS Networks\"\
    , RFC 5814, March 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kohei Shiomoto\n   NTT Service Integration Laboratories\n\
    \   3-9-11 Midori\n   Musashino, Tokyo 180-8585\n   Japan\n   Phone: +81 422 59\
    \ 4402\n   EMail: shiomoto.kohei@lab.ntt.co.jp\n   Adrian Farrel\n   Old Dog Consulting\n\
    \   EMail: adrian@olddog.co.uk\n"
