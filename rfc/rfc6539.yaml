- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        V. Cakulev
  contents:
  - "Independent Submission                                        V. Cakulev\n  \
    \          IBAKE: Identity-Based Authenticated Key Exchange\n"
- title: Abstract
  contents:
  - "Abstract\n   Cryptographic protocols based on public-key methods have been\n\
    \   traditionally based on certificates and Public Key Infrastructure\n   (PKI)\
    \ to support certificate management.  The emerging field of\n   Identity-Based\
    \ Encryption (IBE) protocols allows simplification of\n   infrastructure requirements\
    \ via a Private-Key Generator (PKG) while\n   providing the same flexibility.\
    \  However, one significant limitation\n   of IBE methods is that the PKG can\
    \ end up being a de facto key escrow\n   server, with undesirable consequences.\
    \  Another observed deficiency\n   is a lack of mutual authentication of communicating\
    \ parties.  This\n   document specifies the Identity-Based Authenticated Key Exchange\n\
    \   (IBAKE) protocol.  IBAKE does not suffer from the key escrow problem\n   and\
    \ in addition provides mutual authentication as well as perfect\n   forward and\
    \ backward secrecy.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6539.\n"
- title: Independent Submissions Editor Note
  contents:
  - "Independent Submissions Editor Note\n   This document specifies the Identity-Based\
    \ Authenticated Key Exchange\n   (IBAKE) protocol.  Due to its specialized nature,\
    \ this document\n   experienced limited review within the Internet Community.\
    \  Readers of\n   this RFC should carefully evaluate its value for implementation\
    \ and\n   deployment.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Requirements Notation ...........................................3\n  \
    \    2.1. IBE: Definition ............................................3\n    \
    \  2.2. Abbreviations ..............................................3\n      2.3.\
    \ Conventions ................................................4\n   3. Identity-Based\
    \ Authenticated Key Exchange .......................5\n      3.1. Overview ...................................................5\n\
    \      3.2. IBAKE Message Exchange .....................................6\n  \
    \    3.3. Discussion .................................................7\n   4.\
    \ Security Considerations .........................................9\n      4.1.\
    \ General ....................................................9\n      4.2. IBAKE\
    \ Protocol ............................................10\n   5. References .....................................................12\n\
    \      5.1. Normative References ......................................12\n  \
    \    5.2. Informative References ....................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Authenticated key agreements are cryptographic protocols\
    \ where two or\n   more participants authenticate each other and agree on key\
    \ material\n   used for securing future communication.  These protocols could\
    \ be\n   symmetric key or asymmetric public-key protocols.  Symmetric-key\n  \
    \ protocols require an out-of-band security mechanism to bootstrap a\n   secret\
    \ key.  On the other hand, public-key protocols traditionally\n   require certificates\
    \ and a large-scale Public Key Infrastructure\n   (PKI).  Clearly, public-key\
    \ methods are more flexible; however, the\n   requirement for certificates and\
    \ a large-scale PKI have proved to be\n   challenging.  In particular, efficient\
    \ methods to support large-scale\n   certificate revocation and management have\
    \ proved to be elusive.\n   Recently, Identity-Based Encryption (IBE) protocols\
    \ have been\n   proposed as a viable alternative to public-key methods by replacing\n\
    \   the PKI with a Private-Key Generator (PKG).  However, one significant\n  \
    \ limitation of IBE methods is that the PKG can end up being a de facto\n   key\
    \ escrow entity (i.e., an entity that has sufficient information to\n   decrypt\
    \ communicated data), with undesirable consequences.  Another\n   limitation is\
    \ a lack of mutual authentication between communicating\n   parties.  This document\
    \ specifies an Identity-Based Authenticated Key\n   Encryption (IBAKE) protocol\
    \ that does not suffer from the key escrow\n   problem and that provides mutual\
    \ authentication.  In addition, the\n   scheme described in this document allows\
    \ the use of time-bound public\n   identities and corresponding public and private\
    \ keys, resulting in\n   automatic expiration of private keys at the end of a\
    \ time span\n   indicated in the identity itself.  With the self-expiration of\
    \ the\n   public identities, the traditional real-time validity verification\n\
    \   and revocation procedures used with certificates are not required.\n   For\
    \ example, if the public identity is bound to one day, then, at the\n   end of\
    \ the day, the public/private key pair issued to this peer will\n   simply not\
    \ be valid anymore.  Nevertheless, just as with public-key-\n   based certificate\
    \ systems, if there is a need to revoke keys before\n   the designated expiry\
    \ time, communication with a third party will be\n   needed.  Finally, the protocol\
    \ also provides forward and backward\n   secrecy of session keys; i.e., a session\
    \ key produced using IBAKE is\n   always fresh and unrelated to any past or future\
    \ sessions between the\n   protocol participants.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: '2.1.  IBE: Definition'
  contents:
  - "2.1.  IBE: Definition\n   Identity-Based Encryption (IBE) is a public-key encryption\
    \ technology\n   that allows a public key to be calculated from an identity and\
    \ a set\n   of public parameters, and the corresponding private key to be\n  \
    \ calculated from the public key.  The public key can then be used by\n   an Initiator\
    \ to encrypt messages that the recipient can decrypt using\n   the corresponding\
    \ private key.  The IBE framework is defined in\n   [RFC5091], [RFC5408], and\
    \ [RFC5409].\n"
- title: 2.2.  Abbreviations
  contents:
  - "2.2.  Abbreviations\n   EC          Elliptic Curve\n   IBE         Identity-Based\
    \ Encryption\n   IBAKE       Identity-Based Authenticated Key Exchange\n   IDi\
    \         Initiator's Identity\n   IDr         Responder's Identity\n   K_PUB\
    \       Public Key\n   PKG         Private-Key Generator\n   PKI         Public\
    \ Key Infrastructure\n"
- title: 2.3.  Conventions
  contents:
  - "2.3.  Conventions\n   o  E is an elliptic curve over a finite field F.\n   o\
    \  P is a point on E of large prime order.\n   o  s is a non-zero positive integer.\
    \  s is a secret stored in a PKG.\n      This is a system-wide secret and not\
    \ revealed outside the PKG.\n   o  sP is the public key of the system that is\
    \ known to all\n      participants.  sP denotes a point on E, and denotes the\
    \ point P\n      added to itself s times where addition refers to the group\n\
    \      operation on E.\n   o  H1 is a known hash function that takes a string\
    \ and assigns it to\n      a point on the elliptic curve, i.e., H1(A) = QA on\
    \ E, where A is\n      usually based on the identity.\n   o  E(k, A) denotes that\
    \ A is IBE-encrypted with the key k.\n   o  s||t denotes concatenation of the\
    \ strings s and t.\n   o  K_PUBx denotes a public key of x.\n"
- title: 3.  Identity-Based Authenticated Key Exchange
  contents:
  - '3.  Identity-Based Authenticated Key Exchange

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   IBAKE consists of a three-way exchange between an Initiator\
    \ and a\n   Responder.  In the figure below, a conceptual signaling diagram of\n\
    \   IBAKE is depicted.\n                 +---+                             +---+\n\
    \                 | I |                             | R |\n                 +---+\
    \                             +---+\n                                MESSAGE_1\n\
    \                   ---------------------------------->\n                    \
    \            MESSAGE_2\n                   <----------------------------------\n\
    \                                MESSAGE_3\n                   ---------------------------------->\n\
    \                 Figure 1: Example IBAKE Message Exchange\n   The Initiator (I)\
    \ and Responder (R) are attempting to mutually\n   authenticate each other and\
    \ agree on a key using IBAKE.  This\n   specification assumes that the Initiator\
    \ and the Responder trust a\n   third party -- the PKG.  Rather than a single\
    \ PKG, different PKGs may\n   be involved, e.g., one for the Initiator and one\
    \ for the Responder.\n   The Initiator and the Responder do not share any credentials;\n\
    \   however, they know or can obtain each other's public identity (key)\n   as\
    \ well as the public parameters of each other's PKG.  This\n   specification does\
    \ not make any assumption on when and how the\n   private keys are obtained. \
    \ However, to complete the protocol\n   described (i.e., to decrypt encrypted\
    \ messages in the IBAKE protocol\n   exchange), the Initiator and the Responder\
    \ need to have their\n   respective private keys.  The procedures needed to obtain\
    \ the private\n   keys and public parameters are outside the scope of this\n \
    \  specification.  The details of these procedures can be found in\n   [RFC5091]\
    \ and [RFC5408].  Finally, the protocol described in this\n   document relies\
    \ on the use of elliptic curves.  Section 3.3 discusses\n   the choice of elliptic\
    \ curves.  However, how the Initiator and the\n   Responder agree on a specific\
    \ elliptic curve is left to the\n   application that is leveraging the IBAKE protocol\
    \ (see [EAP-IBAKE],\n   for example).\n   The Initiator chooses a random x.  In\
    \ the first step, the Initiator\n   computes xP (i.e., P, as a point on E, added\
    \ to itself x times using\n   the addition law on E); encrypts xP, the IDi, and\
    \ the IDr using the\n   Responder's public key (e.g., K_PUBr=H1(IDr||date)); and\
    \ includes\n   this encrypted information in MESSAGE_1 sent to the Responder.\
    \  In\n   this step, encryption refers to IBE as described in [RFC5091] and\n\
    \   [RFC5408].\n   The Responder, upon receiving the message, IBE-decrypts it\
    \ using its\n   private key (e.g., a private key for that date), and obtains xP.\
    \  The\n   Responder further chooses a random y and computes yP.  The Responder\n\
    \   then IBE-encrypts the Initiator's identity (IDi), its own identity\n   (IDr),\
    \ xP, and yP using the Initiator's public key (e.g.,\n   K_PUBi=H1(IDi||date)).\
    \  The Responder includes this encrypted\n   information in MESSAGE_2 sent to\
    \ the Initiator.\n   The Initiator, upon receiving and IBE-decrypting MESSAGE_2,\
    \ obtains\n   yP.  Subsequently, the Initiator sends MESSAGE_3, which includes\
    \ the\n   IBE-encrypted IDi, IDr, and yP, to the Responder.  At this point,\n\
    \   both the Initiator and the Responder are able to compute the same\n   session\
    \ key as xyP.\n"
- title: 3.2.  IBAKE Message Exchange
  contents:
  - "3.2.  IBAKE Message Exchange\n   Initially, the Initiator selects a random x\
    \ and computes xP; the\n   Initiator MUST use a fresh, random value for x on each\
    \ run of the\n   protocol.  The Initiator then encrypts xP, the IDi, and the IDr\
    \ using\n   the Responder's public key (e.g., K_PUBr=H1(IDr||date)).  The\n  \
    \ Initiator includes this encrypted information in MESSAGE_1 and sends\n   it\
    \ to the Responder, as shown below.\n   Initiator   ---->   Responder\n      MESSAGE_1\
    \ = E(K_PUBr, IDi || IDr || xP)\n   Upon receiving MESSAGE_1, the Responder SHALL\
    \ perform the following:\n   o  Decrypt the message as specified in [RFC5091]\
    \ and [RFC5408].\n   o  Obtain xP.\n   o  Select a random y and compute yP.  The\
    \ Responder MUST use a fresh,\n      random value for x on each run of the protocol.\n\
    \   o  Encrypt the Initiator's identity (IDi), its own identity (IDr),\n     \
    \ xP, and yP using the Initiator's public key (K_PUBi).\n   Responder   ---->\
    \   Initiator\n      MESSAGE_2 = E(K_PUBi, IDi || IDr || xP || yP)\n   Upon receiving\
    \ MESSAGE_2, the Initiator SHALL perform the following:\n   o  Decrypt the message\
    \ as specified in [RFC5091] and [RFC5408].\n   o  Verify that the received xP\
    \ is the same as that sent in MESSAGE_1.\n   o  Obtain yP.\n   o  Encrypt its\
    \ own identity (IDi), the Responder's identity (IDr),\n      and yP using the\
    \ Responder's public key (K_PUBi).\n   Initiator   ---->   Responder\n      MESSAGE_3\
    \ = E(K_PUBr, IDi || IDr || yP)\n   Upon receiving MESSAGE_3, the Responder SHALL\
    \ perform the following:\n   o  Decrypt the message as specified in [RFC5091]\
    \ and [RFC5408].\n   o  Verify that the received yP is the same as that sent in\
    \ MESSAGE_2.\n   If any of the above verifications fail, the protocol halts;\n\
    \   otherwise, following this exchange, both the Initiator and the\n   Responder\
    \ have authenticated each other and are able to compute xyP\n   as the session\
    \ key.  At this point, both protocol participants MUST\n   discard all intermediate\
    \ cryptographic values, including x and y.\n   Similarly, both parties MUST immediately\
    \ discard these values\n   whenever the protocol terminates as a result of a verification\n\
    \   failure or timeout.\n"
- title: 3.3.  Discussion
  contents:
  - "3.3.  Discussion\n   Properties of the protocol are as follows:\n   o  Immunity\
    \ from key escrow: Observe that all of the steps in the\n      protocol exchange\
    \ are encrypted using IBE.  So, clearly, the PKG\n      can decrypt all of the\
    \ exchanges.  However, given the assumption\n      that PKGs are trusted and well\
    \ behaved (e.g., PKGs will not mount\n      an active man-in-the-middle (MitM)\
    \ attack), they cannot compute\n      the session key.  This is because of the\
    \ hardness of the Elliptic\n      Curve Diffie-Hellman problem.  In other words,\
    \ given xP and yP, it\n      is computationally hard to compute xyP.\n   o  Mutually\
    \ authenticated key agreement: Observe that all of the\n      steps in the protocol\
    \ exchange are encrypted using IBE.  In\n      particular, only the Responder\
    \ and its corresponding PKG can\n      decrypt the contents of MESSAGE_1 and MESSAGE_3\
    \ sent by the\n      Initiator, and similarly only the Initiator and its corresponding\n\
    \      PKG can decrypt the contents of MESSAGE_2 sent by the Responder.\n    \
    \  Again, given the assumption made above -- that PKGs are trusted\n      and\
    \ well behaved (e.g., a PKG will not impersonate a user to which\n      it issued\
    \ a private key) -- upon receiving MESSAGE_2, the\n      Initiator can verify\
    \ the Responder's authenticity, since xP could\n      have been sent in MESSAGE_2\
    \ only after decryption of the contents\n      of MESSAGE_1 by the Responder.\
    \  Similarly, upon receiving\n      MESSAGE_3, the Responder can verify the Initiator's\
    \ authenticity,\n      since yP could have been sent back in MESSAGE_3 only after\
    \ correct\n      decryption of the contents of MESSAGE_2 by the Initiator.\n \
    \     Finally, both the Initiator and the Responder can agree on the\n      same\
    \ session key.  In other words, IBAKE is a mutually\n      authenticated key agreement\
    \ protocol based on IBE.  The hardness\n      of the key agreement protocol relies\
    \ on the hardness of the\n      Elliptic Curve Diffie-Hellman problem.  Thus,\
    \ in any practical\n      implementation, care should be devoted to the choice\
    \ of elliptic\n      curve.\n   o  Perfect forward and backward secrecy: Since\
    \ x and y are random,\n      xyP is always fresh and unrelated to any past or\
    \ future sessions\n      between the Initiator and the Responder.\n   o  No passwords:\
    \ Clearly, the IBAKE protocol does not require any\n      offline exchange of\
    \ passwords or secret keys between the Initiator\n      and the Responder.  In\
    \ fact, the method is applicable to any two\n      parties communicating for the\
    \ first time through any communication\n      network.  The only requirement is\
    \ to ensure that both the\n      Initiator and the Responder are aware of each\
    \ other's public keys\n      and the public parameters of the PKG that generated\
    \ the\n      corresponding private keys.\n   o  PKG availability: Observe that\
    \ PKGs need not be contacted during\n      an IBAKE protocol exchange, which dramatically\
    \ reduces the\n      availability requirements on PKGs.\n   o  Choice of elliptic\
    \ curves: This specification relies on the use of\n      elliptic curves for both\
    \ IBE and Elliptic Curve Diffie-Hellman\n      exchange.  When making a decision\
    \ on the choice of elliptic\n      curves, it is beneficial to choose two different\
    \ elliptic curves\n      -- a non-supersingular curve for the internal calculations\
    \ of\n      Elliptic Curve Diffie-Hellman values xP and yP, and a\n      supersingular\
    \ curve for the IBE encryption/decryption.  For the\n      calculations of Elliptic\
    \ Curve Diffie-Hellman values, it is\n      beneficial to use the curves recommended\
    \ by NIST [FIPS-186].\n      These curves make the calculations simpler while\
    \ keeping the\n      security high.  On the other hand, IBE systems are based\
    \ on\n      bilinear pairings.  Therefore, the choice of an elliptic curve for\n\
    \      IBE is restricted to a family of supersingular elliptic curves\n      over\
    \ finite fields of large prime characteristic.  The appropriate\n      elliptic\
    \ curves for IBE are described in [RFC5091].\n   o  Implementation considerations:\
    \ An implementation of IBAKE would\n      consist of two primary modules, i.e.,\
    \ point addition operations\n      over a NIST curve, and IBE operations over\
    \ a supersingular curve.\n      The implementation of both modules only needs\
    \ to be aware of the\n      following parameters: (a) the full description of\
    \ the curves that\n      are in use (fixed or negotiated), (b) the public parameters\
    \ of the\n      PKG used for the derivation of IBE private keys, and (c) the exact\n\
    \      public identity of each IBAKE participant.  The knowledge of these\n  \
    \    parameters is sufficient to perform Elliptic Curve Cryptography\n      (ECC)\
    \ operations in different terminals and produce the same\n      results, independently\
    \ of the implementation.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document is based on the basic IBE protocol,\
    \ as specified in\n   [BF], [RFC5091]), [RFC5408], and [RFC5409], and as such\
    \ inherits some\n   properties of that protocol.  For instance, by concatenating\
    \ the\n   \"date\" with the identity (to derive the public key), the need for\
    \ any\n   key revocation mechanisms is virtually eliminated.  Moreover, by\n \
    \  allowing the participants to acquire multiple private keys (e.g., for\n   duration\
    \ of contract) the availability requirements on the PKG are\n   also reduced without\
    \ any reduction in security.  The granularity\n   associated with the date is\
    \ a matter of security policy and as such\n   is a decision made by the PKG administrator.\
    \  However, the\n   granularity applicable to any given participant should be\
    \ publicly\n   available and known to other participants.  For example, this\n\
    \   information can be made available in the same venue that provides\n   \"public\
    \ information\" on a PKG server (i.e., P, sP) needed to\n   execute IBE.\n"
- title: 4.1.  General
  contents:
  - "4.1.  General\n   Attacks on the cryptographic algorithms used in IBE are outside\
    \ the\n   scope of this document.  It is assumed that any administrator will\n\
    \   pay attention to the desired strengths of the relevant cryptographic\n   algorithms\
    \ based on an up-to-date understanding of the strength of\n   these algorithms\
    \ from published literature, as well as to known\n   attacks.\n   It is assumed\
    \ that the PKGs are secure, not compromised, trusted, and\n   will not engage\
    \ in launching active attacks independently or in a\n   collaborative environment.\
    \  Nevertheless, if an active adversary can\n   fool the parties into believing\
    \ that it is a legitimate PKG, then it\n   can mount a successful MitM attack.\
    \  Therefore, care should be taken\n   when choosing a PKG.  In addition, any\
    \ malicious insider could\n   potentially launch passive attacks (by decryption\
    \ of one or more\n   message exchanges offline).  While it is in the best interest\
    \ of\n   administrators to prevent such an issue, it is hard to eliminate this\n\
    \   problem.  Hence, it is assumed that such problems will persist, and\n   hence\
    \ the session key agreement protocols are designed to protect\n   participants\
    \ from passive adversaries.\n   It is also assumed that the communication between\
    \ participants and\n   their respective PKGs is secure.  Therefore, in any implementation\
    \ of\n   the protocols described in this document, administrators of any PKG\n\
    \   have to ensure that communication with participants is secure and not\n  \
    \ compromised.\n   Finally, concatenating the date to the identity ensures that\
    \ the\n   corresponding private key is applicable only to that date.  This\n \
    \  serves to limit the damage related to a leakage or compromise of\n   private\
    \ keys to just that date.  This, in particular, eliminates the\n   revocation\
    \ mechanisms that are typical to various certificate-based\n   public key protocols.\n"
- title: 4.2.  IBAKE Protocol
  contents:
  - "4.2.  IBAKE Protocol\n   For the basic IBAKE protocol, from a cryptographic perspective,\
    \ the\n   following security considerations apply.\n   In every step, IBE is used,\
    \ with the recipient's public key.  This\n   guarantees that only the intended\
    \ recipient of the message and its\n   corresponding PKG can decrypt the message\
    \ [BF].\n   Next, the use of identities within the encrypted payload is intended\n\
    \   to eliminate some basic reflection attacks.  For instance, suppose we\n  \
    \ did not use identities as part of the encrypted payload, in the first\n   step\
    \ of the IBAKE protocol exchange (i.e., MESSAGE_1 of Figure 1 in\n   Section 3.1).\
    \  Furthermore, assume that an adversary has access to\n   the conversation between\
    \ the Initiator and the Responder and can\n   actively snoop packets and drop/modify\
    \ them before routing them to\n   the destination.  For instance, assume that\
    \ the IP source address and\n   destination address can be modified by the adversary.\
    \  After the\n   first message is sent by the Initiator (to the Responder), the\n\
    \   adversary can take over and trap the packet.  Next, the adversary can\n  \
    \ modify the IP source address to include the adversary's IP address,\n   before\
    \ routing it on to the Responder.  The Responder will assume\n   that the request\
    \ for an IBAKE session came from the adversary, and\n   will execute step 2 of\
    \ the IBAKE protocol exchange (i.e., MESSAGE_2\n   of Figure 1 in Section 3.1)\
    \ but encrypt it using the adversary's\n   public key.  The above message can\
    \ be decrypted by the adversary (and\n   only by the adversary).  In particular,\
    \ since the second message\n   includes the challenge sent by the Initiator to\
    \ the Responder, the\n   adversary will now learn the challenge sent by the Initiator.\n\
    \   Following this, the adversary can carry on a conversation with the\n   Initiator,\
    \ \"pretending\" to be the Responder.  This attack will be\n   eliminated if identities\
    \ are used as part of the encrypted payload.\n   In summary, at the end of the\
    \ exchange, both the Initiator and the\n   Responder can mutually authenticate\
    \ each other and agree on a\n   session key.\n   Recall that IBE guarantees that\
    \ only the recipient of the message can\n   decrypt the message using the private\
    \ key, with the caveat that the\n   PKG that generated the private key of the\
    \ recipient of the message\n   can decrypt the message as well.  However, the\
    \ PKG cannot learn the\n   public key xyP given xP and yP, based on the hardness\
    \ of the Elliptic\n   Curve Diffie-Hellman problem.  This property of resistance\
    \ to passive\n   key escrow from the PKG is not applicable to the basic IBE protocols\n\
    \   proposed in [RFC5091]), [RFC5408], and [RFC5409].\n   Observe that the protocol\
    \ works even if the Initiator and Responder\n   belong to two different PKGs.\
    \  In particular, the parameters used for\n   encryption to the Responder and\
    \ parameters used for encryption to the\n   Initiator can be completely different\
    \ and independent of each other.\n   Moreover, the elliptic curve used to generate\
    \ the session key xyP can\n   be completely different and can be chosen during\
    \ the key exchange.\n   If such flexibility is desired, then it would be required\
    \ to add\n   optional extra data to the protocol to exchange the algebraic\n \
    \  primitives used in deriving the session key.\n   In addition to mutual authentication\
    \ and resistance to passive\n   escrow, the Diffie-Hellman property of the session\
    \ key exchange\n   guarantees perfect secrecy of keys.  In other words, accidental\n\
    \   leakage of one session key does not compromise past or future session\n  \
    \ keys between the same Initiator and Responder.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [BF]        Boneh, D. and M. Franklin, \"Identity-Based\
    \ Encryption\n               from the Weil Pairing\", in SIAM Journal on Computing,\n\
    \               Vol. 32, No. 3, pp. 586-615, 2003.\n   [EAP-IBAKE] Cakulev, V.\
    \ and I. Broustis, \"An EAP Authentication\n               Method Based on Identity-Based\
    \ Authenticated Key\n               Exchange\", Work in Progress, February 2012.\n\
    \   [FIPS-186]  National Institute of Standards and Technology, \"Digital\n  \
    \             Signature Standard (DSS)\", FIPS Pub 186-3, June 2009.\n   [RFC5091]\
    \   Boyen, X. and L. Martin, \"Identity-Based Cryptography\n               Standard\
    \ (IBCS) #1: Supersingular Curve Implementations\n               of the BF and\
    \ BB1 Cryptosystems\", RFC 5091,\n               December 2007.\n   [RFC5408]\
    \   Appenzeller, G., Martin, L., and M. Schertler, \"Identity-\n             \
    \  Based Encryption Architecture and Supporting Data\n               Structures\"\
    , RFC 5408, January 2009.\n   [RFC5409]   Martin, L. and M. Schertler, \"Using\
    \ the Boneh-Franklin\n               and Boneh-Boyen Identity-Based Encryption\
    \ Algorithms with\n               the Cryptographic Message Syntax (CMS)\", RFC\
    \ 5409,\n               January 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Violeta Cakulev\n   Alcatel Lucent\n   600 Mountain Ave.\n\
    \   3D-517\n   Murray Hill, NJ  07974\n   US\n   Phone: +1 908 582 3207\n   EMail:\
    \ violeta.cakulev@alcatel-lucent.com\n   Ganapathy S. Sundaram\n   Alcatel Lucent\n\
    \   600 Mountain Ave.\n   3D-517\n   Murray Hill, NJ  07974\n   US\n   Phone:\
    \ +1 908 582 3209\n   EMail: ganesh.sundaram@alcatel-lucent.com\n   Ioannis Broustis\n\
    \   Alcatel Lucent\n   600 Mountain Ave.\n   3D-526\n   Murray Hill, NJ  07974\n\
    \   US\n   Phone: +1 908 582 3744\n   EMail: ioannis.broustis@alcatel-lucent.com\n"
