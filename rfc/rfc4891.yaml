- title: __initial_text__
  contents:
  - '               Using IPsec to Secure IPv6-in-IPv4 Tunnels

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document gives guidance on securing manually configured IPv6-in-\n\
    \   IPv4 tunnels using IPsec in transport mode.  No additional protocol\n   extensions\
    \ are described beyond those available with the IPsec\n   framework.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Threats and the Use of IPsec . . . . . . . . . . . .\
    \ . . . . .  3\n     2.1.  IPsec in Transport Mode  . . . . . . . . . . . . .\
    \ . . . .  4\n     2.2.  IPsec in Tunnel Mode . . . . . . . . . . . . . . . .\
    \ . . .  5\n   3.  Scenarios and Overview . . . . . . . . . . . . . . . . . .\
    \ . .  5\n     3.1.  Router-to-Router Tunnels . . . . . . . . . . . . . . . .\
    \ .  6\n     3.2.  Site-to-Router/Router-to-Site Tunnels  . . . . . . . . . .\
    \  6\n     3.3.  Host-to-Host Tunnels . . . . . . . . . . . . . . . . . . .  8\n\
    \   4.  IKE and IPsec Versions . . . . . . . . . . . . . . . . . . . .  9\n  \
    \ 5.  IPsec Configuration Details  . . . . . . . . . . . . . . . . . 10\n    \
    \ 5.1.  IPsec Transport Mode . . . . . . . . . . . . . . . . . . . 11\n     5.2.\
    \  Peer Authorization Database and Identities . . . . . . . . 12\n   6.  Recommendations\
    \  . . . . . . . . . . . . . . . . . . . . . . . 13\n   7.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 13\n   8.  Contributors . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 14\n   9.  Acknowledgments  . . . . . .\
    \ . . . . . . . . . . . . . . . . . 14\n   10. References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 15\n     10.1. Normative References . . . .\
    \ . . . . . . . . . . . . . . . 15\n     10.2. Informative References . . . .\
    \ . . . . . . . . . . . . . . 15\n   Appendix A.  Using Tunnel Mode . . . . .\
    \ . . . . . . . . . . . . . 17\n     A.1.  Tunnel Mode Implementation Methods\
    \ . . . . . . . . . . . . 17\n     A.2.  Specific SPD for Host-to-Host Scenario\
    \ . . . . . . . . . . 18\n     A.3.  Specific SPD for Host-to-Router Scenario\
    \ . . . . . . . . . 19\n   Appendix B.  Optional Features . . . . . . . . . .\
    \ . . . . . . . . 20\n     B.1.  Dynamic Address Configuration  . . . . . . .\
    \ . . . . . . . 20\n     B.2.  NAT Traversal and Mobility . . . . . . . . . .\
    \ . . . . . . 20\n     B.3.  Tunnel Endpoint Discovery  . . . . . . . . . . .\
    \ . . . . . 21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IPv6 Operations (v6ops) working group has selected (manually\n\
    \   configured) IPv6-in-IPv4 tunneling [RFC4213] as one of the IPv6\n   transition\
    \ mechanisms for IPv6 deployment.\n   [RFC4213] identified a number of threats\
    \ that had not been adequately\n   analyzed or addressed in its predecessor [RFC2893].\
    \  The most\n   complete solution is to use IPsec to protect IPv6-in-IPv4 tunneling.\n\
    \   The document was intentionally not expanded to include the details on\n  \
    \ how to set up an IPsec-protected tunnel in an interoperable manner,\n   but\
    \ instead the details were deferred to this memo.\n   The first four sections\
    \ of this document analyze the threats and\n   scenarios that can be addressed\
    \ by IPsec and assumptions made by this\n   document for successful IPsec Security\
    \ Association (SA)\n   establishment.  Section 5 gives the details of Internet\
    \ Key Exchange\n   (IKE) and IP security (IPsec) exchange with packet formats\
    \ and\n   Security Policy Database (SPD) entries.  Section 6 gives\n   recommendations.\
    \  Appendices further discuss tunnel mode usage and\n   optional extensions.\n\
    \   This document does not address the use of IPsec for tunnels that are\n   not\
    \ manually configured (e.g., 6to4 tunnels [RFC3056]).  Presumably,\n   some form\
    \ of opportunistic encryption or \"better-than-nothing\n   security\" might or\
    \ might not be applicable.  Similarly, propagating\n   quality-of-service attributes\
    \ (apart from Explicit Congestion\n   Notification bits [RFC4213]) from the encapsulated\
    \ packets to the\n   tunnel path is out of scope.\n   The use of the word \"interface\"\
    \ or the phrase \"IP interface\" refers\n   to the IPv6 interface that must be\
    \ present on any IPv6 node to send\n   or receive IPv6 packets.  The use of the\
    \ phrase \"tunnel interface\"\n   refers to the interface that receives the IPv6-in-IPv4\
    \ tunneled\n   packets over IPv4.\n"
- title: 2.  Threats and the Use of IPsec
  contents:
  - "2.  Threats and the Use of IPsec\n   [RFC4213] is mostly concerned about address\
    \ spoofing threats:\n   1.  The IPv4 source address of the encapsulating (\"outer\"\
    ) packet can\n       be spoofed.\n   2.  The IPv6 source address of the encapsulated\
    \ (\"inner\") packet can\n       be spoofed.\n   The reason threat (1) exists\
    \ is the lack of universal deployment of\n   IPv4 ingress filtering [RFC3704].\
    \  The reason threat (2) exists is\n   that the IPv6 packet is encapsulated in\
    \ IPv4 and hence may escape\n   IPv6 ingress filtering.  [RFC4213] specifies the\
    \ following strict\n   address checks as mitigating measures:\n   o  To mitigate\
    \ threat (1), the decapsulator verifies that the IPv4\n      source address of\
    \ the packet is the same as the address of the\n      configured tunnel endpoint.\
    \  The decapsulator may also implement\n      IPv4 ingress filtering, i.e., check\
    \ whether the packet is received\n      on a legitimate interface.\n   o  To mitigate\
    \ threat (2), the decapsulator verifies whether the\n      inner IPv6 address\
    \ is a valid IPv6 address and also applies IPv6\n      ingress filtering before\
    \ accepting the IPv6 packet.\n   This memo proposes using IPsec for providing\
    \ stronger security in\n   preventing these threats and additionally providing\
    \ integrity,\n   confidentiality, replay protection, and origin protection between\n\
    \   tunnel endpoints.\n   IPsec can be used in two ways, in transport and tunnel\
    \ mode; detailed\n   discussion about applicability in this context is provided\
    \ in\n   Section 5.\n"
- title: 2.1.  IPsec in Transport Mode
  contents:
  - "2.1.  IPsec in Transport Mode\n   In transport mode, the IPsec Encapsulating\
    \ Security Payload (ESP) or\n   Authentication Header (AH) security association\
    \ (SA) is established\n   to protect the traffic defined by (IPv4-source, IPv4-dest,\
    \ protocol =\n   41).  On receiving such an IPsec packet, the receiver first applies\n\
    \   the IPsec transform (e.g., ESP) and then matches the packet against\n   the\
    \ Security Parameter Index (SPI) and the inbound selectors\n   associated with\
    \ the SA to verify that the packet is appropriate for\n   the SA via which it\
    \ was received.  A successful verification implies\n   that the packet came from\
    \ the right IPv4 endpoint, because the SA is\n   bound to the IPv4 source address.\n\
    \   This prevents threat (1) but not threat (2).  IPsec in transport mode\n  \
    \ does not verify the contents of the payload itself where the IPv6\n   addresses\
    \ are carried.  That is, two nodes using IPsec transport mode\n   to secure the\
    \ tunnel can spoof the inner payload.  The packet will be\n   decapsulated successfully\
    \ and accepted.\n   This shortcoming can be partially mitigated by IPv6 ingress\n\
    \   filtering, i.e., check that the packet is arriving from the interface\n  \
    \ in the direction of the route towards the tunnel endpoint, similar to\n   a\
    \ Strict Reverse Path Forwarding (RPF) check [RFC3704].\n   In most implementations,\
    \ a transport mode SA is applied to a normal\n   IPv6-in-IPv4 tunnel.  Therefore,\
    \ ingress filtering can be applied in\n   the tunnel interface.  (Transport mode\
    \ is often also used in other\n   kinds of tunnels such as Generic Routing Encapsulation\
    \ (GRE)\n   [RFC4023] and Layer 2 Tunneling Protocol (L2TP) [RFC3193].)\n"
- title: 2.2.  IPsec in Tunnel Mode
  contents:
  - "2.2.  IPsec in Tunnel Mode\n   In tunnel mode, the IPsec SA is established to\
    \ protect the traffic\n   defined by (IPv6-source, IPv6-destination).  On receiving\
    \ such an\n   IPsec packet, the receiver first applies the IPsec transform (e.g.,\n\
    \   ESP) and then matches the packet against the SPI and the inbound\n   selectors\
    \ associated with the SA to verify that the packet is\n   appropriate for the\
    \ SA via which it was received.  The successful\n   verification implies that\
    \ the packet came from the right endpoint.\n   The outer IPv4 addresses may be\
    \ spoofed, and IPsec cannot detect this\n   in tunnel mode; the packets will be\
    \ demultiplexed based on the SPI\n   and possibly the IPv6 address bound to the\
    \ SA.  Thus, the outer\n   address spoofing is irrelevant as long as the decryption\
    \ succeeds and\n   the inner IPv6 packet can be verified to have come from the\
    \ right\n   tunnel endpoint.\n   As described in Section 5, using tunnel mode\
    \ is more difficult than\n   applying transport mode to a tunnel interface, and\
    \ as a result this\n   document recommends transport mode.  Note that even though\
    \ transport\n   rather than tunnel mode is recommended, an IPv6-in-IPv4 tunnel\n\
    \   specified by protocol 41 still exists [RFC4213].\n"
- title: 3.  Scenarios and Overview
  contents:
  - "3.  Scenarios and Overview\n   There are roughly three scenarios:\n   1.  (Generic)\
    \ router-to-router tunnels.\n   2.  Site-to-router or router-to-site tunnels.\
    \  These refer to tunnels\n       between a site's IPv6 (border) device and an\
    \ IPv6 upstream\n       provider's router.  A degenerate case of a site is a single\
    \ host.\n   3.  Host-to-host tunnels.\n"
- title: 3.1.  Router-to-Router Tunnels
  contents:
  - "3.1.  Router-to-Router Tunnels\n   IPv6/IPv4 hosts and routers can tunnel IPv6\
    \ datagrams over regions of\n   IPv4 forwarding topology by encapsulating them\
    \ within IPv4 packets.\n   Tunneling can be used in a variety of ways.\n   .--------.\
    \           _----_          .--------.\n   |v6-in-v4|         _( IPv4 )_     \
    \   |v6-in-v4|\n   | Router | <======( Internet )=====> | Router |\n   |   A \
    \   |         (_      _)        |   B    |\n   '--------'           '----'   \
    \       '--------'\n       ^        IPsec tunnel between        ^\n       |  \
    \      Router A and Router B       |\n       V                               \
    \     V\n                   Figure 1: Router-to-Router Scenario.\n   IPv6/IPv4\
    \ routers interconnected by an IPv4 infrastructure can tunnel\n   IPv6 packets\
    \ between themselves.  In this case, the tunnel spans one\n   segment of the end-to-end\
    \ path that the IPv6 packet takes.\n   The source and destination addresses of\
    \ the IPv6 packets traversing\n   the tunnel could come from a wide range of IPv6\
    \ prefixes, so binding\n   IPv6 addresses to be used to the SA is not generally\
    \ feasible.  IPv6\n   ingress filtering must be performed to mitigate the IPv6\
    \ address\n   spoofing threat.\n   A specific case of router-to-router tunnels,\
    \ when one router resides\n   at an end site, is described in the next section.\n"
- title: 3.2.  Site-to-Router/Router-to-Site Tunnels
  contents:
  - "3.2.  Site-to-Router/Router-to-Site Tunnels\n   This is a generalization of host-to-router\
    \ and router-to-host\n   tunneling, because the issues when connecting a whole\
    \ site (using a\n   router) and connecting a single host are roughly equal.\n\
    \      _----_        .---------. IPsec     _----_    IPsec  .-------.\n    _(\
    \ IPv6 )_      |v6-in-v4 | Tunnel  _( IPv4 )_  Tunnel | V4/V6  |\n   ( Internet\
    \ )<--->| Router  |<=======( Internet )=======>| Site B |\n    (_      _)    \
    \  |   A     |         (_      _)         '--------'\n      '----'        '---------'\
    \           '----'\n        ^\n        |\n        V\n    .--------.\n    | Native\
    \ |\n    | IPv6   |\n    | node   |\n    '--------'\n                    Figure\
    \ 2: Router-to-Site Scenario.\n   IPv6/IPv4 routers can tunnel IPv6 packets to\
    \ their final destination\n   IPv6/IPv4 site.  This tunnel spans only the last\
    \ segment of the end-\n   to-end path.\n                                   +---------------------+\n\
    \                                   |      IPv6 Network   |\n                \
    \                   |                     |\n   .--------.        _----_     \
    \   |     .--------.      |\n   | V6/V4  |      _( IPv4 )_      |     |v6-in-v4|\
    \      |\n   | Site B |<====( Internet )==========>| Router |      |\n   '--------'\
    \      (_      _)      |     |   A    |      |\n                     '----'  \
    \      |     '--------'      |\n           IPsec tunnel between    |         ^\
    \           |\n           IPv6 Site and Router A  |         |           |\n  \
    \                                 |         V           |\n                  \
    \                 |     .-------.       |\n                                  \
    \ |     |  V6    |      |\n                                   |     |  Hosts |\
    \      |\n                                   |     '--------'      |\n       \
    \                            +---------------------+\n                    Figure\
    \ 3: Site-to-Router Scenario.\n   In the other direction, IPv6/IPv4 hosts can\
    \ tunnel IPv6 packets to an\n   intermediary IPv6/IPv4 router that is reachable\
    \ via an IPv4\n   infrastructure.  This type of tunnel spans the first segment\
    \ of the\n   packet's end-to-end path.\n   The hosts in the site originate the\
    \ packets with IPv6 source\n   addresses coming from a well-known prefix, whereas\
    \ the destination\n   addresses could be any nodes on the Internet.\n   In this\
    \ case, an IPsec tunnel mode SA could be bound to the prefix\n   that was allocated\
    \ to the router at Site B, and Router A could verify\n   that the source address\
    \ of the packet matches the prefix.  Site B\n   will not be able to do a similar\
    \ verification for the packets it\n   receives.  This may be quite reasonable\
    \ for most of the deployment\n   cases, for example, an Internet Service Provider\
    \ (ISP) allocating a\n   /48 to a customer.  The Customer Premises Equipment (CPE)\
    \ where the\n   tunnel is terminated \"trusts\" (in a weak sense) the ISP's router,\
    \ and\n   the ISP's router can verify that Site B is the only one that can\n \
    \  originate packets within the /48.\n   IPv6 spoofing must be prevented, and\
    \ setting up ingress filtering may\n   require some amount of manual configuration;\
    \ see more of these\n   options in Section 5.\n"
- title: 3.3.  Host-to-Host Tunnels
  contents:
  - "3.3.  Host-to-Host Tunnels\n     .--------.           _----_          .--------.\n\
    \     | V6/V4  |         _( IPv4 )_        | V6/V4  |\n     | Host   | <======(\
    \ Internet )=====> | Host   |\n     |   A    |         (_      _)        |   B\
    \    |\n     '--------'           '----'          '--------'\n               \
    \   IPsec tunnel between\n                  Host A and Host B\n              \
    \       Figure 4: Host-to-Host Scenario.\n   IPv6/IPv4 hosts interconnected by\
    \ an IPv4 infrastructure can tunnel\n   IPv6 packets between themselves.  In this\
    \ case, the tunnel spans the\n   entire end-to-end path.\n   In this case, the\
    \ source and the destination IPv6 addresses are known\n   a priori.  A tunnel\
    \ mode SA could be bound to these specific\n   addresses.  Address verification\
    \ prevents IPv6 source address\n   spoofing completely.\n   As noted in the Introduction,\
    \ automatic host-to-host tunneling\n   methods (e.g., 6to4) are out of scope for\
    \ this memo.\n"
- title: 4.  IKE and IPsec Versions
  contents:
  - "4.  IKE and IPsec Versions\n   This section discusses the different versions\
    \ of the IKE and IPsec\n   security architecture and their applicability to this\
    \ document.\n   The IPsec security architecture was previously defined in [RFC2401]\n\
    \   and is now superseded by [RFC4301].  IKE was originally defined in\n   [RFC2409]\
    \ (which is called IKEv1 in this document) and is now\n   superseded by [RFC4306]\
    \ (called IKEv2; see also [RFC4718]).  There\n   are several differences between\
    \ them.  The differences relevant to\n   this document are discussed below.\n\
    \   1.  [RFC2401] does not require allowing IP as the next layer protocol\n  \
    \     in traffic selectors when an IPsec SA is negotiated.  In\n       contrast,\
    \ [RFC4301] requires supporting IP as the next layer\n       protocol (like TCP\
    \ or UDP) in traffic selectors.\n   2.  [RFC4301] assumes IKEv2, as some of the\
    \ new features cannot be\n       negotiated using IKEv1.  It is valid to negotiate\
    \ multiple\n       traffic selectors for a given IPsec SA in [RFC4301].  This\
    \ is\n       possible only with IKEv2.  If IKEv1 is used, then multiple SAs\n\
    \       need to be set up, one for each traffic selector.\n   Note that the existing\
    \ implementations based on IKEv1 may already be\n   able to support the [RFC4301]\
    \ features described in (1) and (2).  If\n   appropriate, the deployment may choose\
    \ to use either version of the\n   security architecture.\n   IKEv2 supports features\
    \ useful for configuring and securing tunnels\n   not present with IKEv1.\n  \
    \ 1.  IKEv2 supports legacy authentication methods by carrying them in\n     \
    \  Extensible Authentication Protocol (EAP) payloads.  This can be\n       used\
    \ to authenticate hosts or sites to an ISP using EAP methods\n       that support\
    \ username and password.\n   2.  IKEv2 supports dynamic address configuration,\
    \ which may be used\n       to configure the IPv6 address of the host.\n   Network\
    \ Address Translation (NAT) traversal works with both the old\n   and revised\
    \ IPsec architectures, but the negotiation is integrated\n   with IKEv2.\n   For\
    \ the purposes of this document, where the confidentiality of ESP\n   [RFC4303]\
    \ is not required, AH [RFC4302] can be used as an alternative\n   to ESP.  The\
    \ main difference is that AH is able to provide integrity\n   protection for certain\
    \ fields in the outer IPv4 header and IPv4\n   options.  However, as the outer\
    \ IPv4 header will be discarded in any\n   case, and those particular fields are\
    \ not believed to be relevant in\n   this particular application, there is no\
    \ particular reason to use AH.\n"
- title: 5.  IPsec Configuration Details
  contents:
  - "5.  IPsec Configuration Details\n   This section describes the SPD entries for\
    \ setting up the IPsec\n   transport mode SA to protect the IPv6 traffic.\n  \
    \ Several requirements arise when IPsec is used to protect the IPv6\n   traffic\
    \ (inner header) for the scenarios listed in Section 3.\n   1.  All of IPv6 traffic\
    \ should be protected, including link-local\n       (e.g., Neighbor Discovery)\
    \ and multicast traffic.  Without this,\n       an attacker can pollute the IPv6\
    \ neighbor cache causing\n       disruption in communication between the two routers.\n\
    \   2.  In router-to-router tunnels, the source and destination addresses\n  \
    \     of the traffic could come from a wide range of prefixes that are\n     \
    \  normally learned through routing.  As routing can always learn a\n       new\
    \ prefix, one cannot assume that all the prefixes are known a\n       priori [RFC3884].\
    \  This mainly affects scenario (1).\n   3.  Source address selection depends\
    \ on the notions of routes and\n       interfaces.  This implies that the reachability\
    \ to the various\n       IPv6 destinations appear as routes in the routing table.\
    \  This\n       affects scenarios (2) and (3).\n   The IPv6 traffic can be protected\
    \ using transport or tunnel mode.\n   There are many problems when using tunnel\
    \ mode as implementations may\n   or may not model the IPsec tunnel mode SA as\
    \ an interface as\n   described in Appendix A.1.\n   If IPsec tunnel mode SA is\
    \ not modeled as an interface (e.g., as of\n   this writing, popular in many open\
    \ source implementations), the SPD\n   entries for protecting all traffic between\
    \ the two endpoints must be\n   described.  Evaluating against the requirements\
    \ above, all link-local\n   traffic multicast traffic would need to be identified,\
    \ possibly\n   resulting in a long list of SPD entries.  The second requirement\
    \ is\n   difficult to satisfy, because the traffic needing protection is not\n\
    \   necessarily (e.g., router-to-router tunnel) known a priori [RFC3884].\n  \
    \ The third requirement is also problematic, because almost all\n   implementations\
    \ assume addresses are assigned on interfaces (rather\n   than configured in SPDs)\
    \ for proper source address selection.\n   If the IPsec tunnel mode SA is modeled\
    \ as interface, the traffic that\n   needs protection can be modeled as routes\
    \ pointing to the interface.\n   But the second requirement is difficult to satisfy,\
    \ because the\n   traffic needing protection is not necessarily known a priori.\
    \  The\n   third requirement is easily solved, because IPsec is modeled as an\n\
    \   interface.\n   In practice, (2) has been solved by protecting all the traffic\n\
    \   (::/0), but no interoperable implementations support this feature.\n   For\
    \ a detailed list of issues pertaining to this, see [VLINK].\n   Because applying\
    \ transport mode to protect a tunnel is a much simpler\n   solution and also easily\
    \ protects link-local and multicast traffic,\n   we do not recommend using tunnel\
    \ mode in this context.  Tunnel mode\n   is, however, discussed further in Appendix\
    \ A.\n   This document assumes that tunnels are manually configured on both\n\
    \   sides and the ingress filtering is manually set up to discard spoofed\n  \
    \ packets.\n"
- title: 5.1.  IPsec Transport Mode
  contents:
  - "5.1.  IPsec Transport Mode\n   Transport mode has typically been applied to L2TP,\
    \ GRE, and other\n   tunneling methods, especially when the user wants to tunnel\
    \ non-IP\n   traffic.  [RFC3884], [RFC3193], and [RFC4023] provide examples of\n\
    \   applying transport mode to protect tunnel traffic that spans only a\n   part\
    \ of an end-to-end path.\n   IPv6 ingress filtering must be applied on the tunnel\
    \ interface on all\n   the packets that pass the inbound IPsec processing.\n \
    \  The following SPD entries assume that there are two routers, Router1\n   and\
    \ Router2, with tunnel endpoint IPv4 addresses denoted IPV4-TEP1\n   and IPV4-TEP2,\
    \ respectively.  (In other scenarios, the SPDs are set\n   up similarly.)\n  \
    \   Router1's SPD:\n                                  Next Layer\n     Rule  \
    \   Local     Remote     Protocol   Action\n     ----     -----     ------   \
    \ ---------- --------\n       1     IPV4-TEP1  IPV4-TEP2    ESP       BYPASS\n\
    \       2     IPV4-TEP1  IPV4-TEP2    IKE       BYPASS\n       3     IPv4-TEP1\
    \  IPV4-TEP2     41       PROTECT(ESP,transport)\n     Router2's SPD:\n      \
    \                            Next Layer\n     Rule     Local     Remote     Protocol\
    \   Action\n     ----     -----     ------    ---------- --------\n       1  \
    \   IPV4-TEP2  IPV4-TEP1    ESP       BYPASS\n       2     IPV4-TEP2  IPV4-TEP1\
    \    IKE       BYPASS\n       3     IPv4-TEP2  IPV4-TEP1     41       PROTECT(ESP,transport)\n\
    \     In both SPD entries, \"IKE\" refers to UDP destination port 500\n     and\
    \ possibly also port 4500 if NAT traversal is used.\n   The packet format is as\
    \ shown in Table 1.\n    +----------------------------+------------------------------------+\n\
    \    | Components (first to last) |              Contains              |\n   \
    \ +----------------------------+------------------------------------+\n    | \
    \        IPv4 header        | (src = IPV4-TEP1, dst = IPV4-TEP2) |\n    |    \
    \     ESP header         |                                    |\n    |       \
    \  IPv6 header        |  (src = IPV6-EP1, dst = IPV6-EP2)  |\n    |          (payload)\
    \         |                                    |\n    +----------------------------+------------------------------------+\n\
    \               Table 1: Packet Format for IPv6/IPv4 Tunnels.\n   The IDci and\
    \ IDcr payloads of IKEv1 carry the IPv4-TEP1, IPV4-TEP2,\n   and protocol value\
    \ 41 as phase 2 identities.  With IKEv2, the traffic\n   selectors are used to\
    \ carry the same information.\n"
- title: 5.2.  Peer Authorization Database and Identities
  contents:
  - "5.2.  Peer Authorization Database and Identities\n   The Peer Authorization Database\
    \ (PAD) provides the link between SPD\n   and the key management daemon [RFC4306].\
    \  This is defined in\n   [RFC4301] and hence relevant only when used with IKEv2.\n\
    \   As there is currently no defined way to discover the PAD-related\n   parameters\
    \ dynamically, it is assumed that these are manually\n   configured:\n   o  The\
    \ Identity of the peer asserted in the IKEv2 exchange: Many\n      different types\
    \ of identities can be used.  At least, the IPv4\n      address of the peer should\
    \ be supported.\n   o  IKEv2 can authenticate the peer by several methods.  Pre-shared\n\
    \      key and X.509 certificate-based authentication is required by\n      [RFC4301].\
    \  At least, pre-shared key should be supported, because\n      it interoperates\
    \ with a larger number of implementations.\n   o  The child SA authorization data\
    \ should contain the IPv4 address of\n      the peer.\n   IPv4 address should\
    \ be supported as Identity during the key exchange.\n   As this does not provide\
    \ Identity protection, main mode or aggressive\n   mode can be used with IKEv1.\n"
- title: 6.  Recommendations
  contents:
  - "6.  Recommendations\n   In Section 5, we examined the differences between setting\
    \ up an IPsec\n   IPv6-in-IPv4 tunnel using either transport or tunnel mode. \
    \ We\n   observe that applying transport mode to a tunnel interface is the\n \
    \  simplest and therefore recommended solution.\n   In Appendix A, we also explore\
    \ what it would take to use so-called\n   Specific SPD (SSPD) tunnel mode.  Such\
    \ usage is more complicated\n   because IPv6 prefixes need to be known a priori,\
    \ and multicast and\n   link-local traffic do not work over such a tunnel.  Fragment\
    \ handling\n   in tunnel mode is also more difficult.  However, because the Mobility\n\
    \   and Multihoming Protocol (MOBIKE) [RFC4555] supports only tunnel\n   mode,\
    \ when the IPv4 endpoints of a tunnel are dynamic and the other\n   constraints\
    \ are not applicable, using tunnel mode may be an\n   acceptable solution.\n \
    \  Therefore, our primary recommendation is to use transport mode\n   applied\
    \ to a tunnel interface.  Source address spoofing can be\n   limited by enabling\
    \ ingress filtering on the tunnel interface.\n   Manual keying must not be used\
    \ as large amounts of IPv6 traffic may\n   be carried over the tunnels and doing\
    \ so would make it easier for an\n   attacker to recover the keys.  IKEv1 or IKEv2\
    \ must be used for\n   establishing the IPsec SAs.  IKEv2 should be used where\
    \ supported and\n   available; if not, IKEv1 may be used instead.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   When running IPv6-in-IPv4 tunnels (unsecured)\
    \ over the Internet, it\n   is possible to \"inject\" packets into the tunnel\
    \ by spoofing the\n   source address (data plane security), or if the tunnel is\
    \ signaled\n   somehow (e.g., using authentication protocol and obtaining a static\n\
    \   v6 prefix), someone might be able to spoof the signaling (control\n   plane\
    \ security).\n   The IPsec framework plays an important role in adding security\
    \ to\n   both the protocol for tunnel setup and data traffic.\n   Either IKEv1\
    \ or IKEv2 provides a secure signaling protocol for\n   establishing, maintaining,\
    \ and deleting an IPsec tunnel.\n   IPsec, with ESP, offers integrity and data\
    \ origin authentication,\n   confidentiality, and optional (at the discretion\
    \ of the receiver)\n   anti-replay features.  Using confidentiality without integrity\
    \ is\n   discouraged.  ESP furthermore provides limited traffic flow\n   confidentiality.\n\
    \   IPsec provides access control mechanisms through the distribution of\n   keys\
    \ and also through the application of policies dictated by the\n   Security Policy\
    \ Database (SPD).\n   The NAT traversal mechanism provided by IKEv2 introduces\
    \ some\n   weaknesses into IKE and IPsec.  These issues are discussed in more\n\
    \   detail in [RFC4306].\n   Please note that using IPsec for the scenarios described\
    \ in Figures\n   1, 2, and 3 does not aim to protect the end-to-end communication.\
    \  It\n   protects just the tunnel part.  It is still possible for an IPv6\n \
    \  endpoint not attached to the IPsec tunnel to spoof packets.\n"
- title: 8.  Contributors
  contents:
  - "8.  Contributors\n   The authors are listed in alphabetical order.\n   Suresh\
    \ Satapati also participated in the initial discussions on this\n   topic.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The authors would like to thank Stephen Kent, Michael\
    \ Richardson,\n   Florian Weimer, Elwyn Davies, Eric Vyncke, Merike Kaeo, Alfred\n\
    \   Hoenes, Francis Dupont, and David Black for their substantive\n   feedback.\n\
    \   We would like to thank Pasi Eronen for his text contributions and\n   suggestions\
    \ for improvement.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2401]  Kent, S. and R. Atkinson, \"Security\
    \ Architecture for the\n              Internet Protocol\", RFC 2401, November\
    \ 1998.\n   [RFC2409]  Harkins, D. and D. Carrel, \"The Internet Key Exchange\n\
    \              (IKE)\", RFC 2409, November 1998.\n   [RFC3704]  Baker, F. and\
    \ P. Savola, \"Ingress Filtering for Multihomed\n              Networks\", BCP\
    \ 84, RFC 3704, March 2004.\n   [RFC3948]  Huttunen, A., Swander, B., Volpe, V.,\
    \ DiBurro, L., and M.\n              Stenberg, \"UDP Encapsulation of IPsec ESP\
    \ Packets\",\n              RFC 3948, January 2005.\n   [RFC4213]  Nordmark, E.\
    \ and R. Gilligan, \"Basic Transition Mechanisms\n              for IPv6 Hosts\
    \ and Routers\", RFC 4213, October 2005.\n   [RFC4301]  Kent, S. and K. Seo, \"\
    Security Architecture for the\n              Internet Protocol\", RFC 4301, December\
    \ 2005.\n   [RFC4303]  Kent, S., \"IP Encapsulating Security Payload (ESP)\",\n\
    \              RFC 4303, December 2005.\n   [RFC4306]  Kaufman, C., \"Internet\
    \ Key Exchange (IKEv2) Protocol\",\n              RFC 4306, December 2005.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC2893]  Gilligan, R. and E. Nordmark, \"\
    Transition Mechanisms for\n              IPv6 Hosts and Routers\", RFC 2893, August\
    \ 2000.\n   [RFC3056]  Carpenter, B. and K. Moore, \"Connection of IPv6 Domains\n\
    \              via IPv4 Clouds\", RFC 3056, February 2001.\n   [RFC3193]  Patel,\
    \ B., Aboba, B., Dixon, W., Zorn, G., and S. Booth,\n              \"Securing\
    \ L2TP using IPsec\", RFC 3193, November 2001.\n   [RFC3715]  Aboba, B. and W.\
    \ Dixon, \"IPsec-Network Address Translation\n              (NAT) Compatibility\
    \ Requirements\", RFC 3715, March 2004.\n   [RFC3884]  Touch, J., Eggert, L.,\
    \ and Y. Wang, \"Use of IPsec\n              Transport Mode for Dynamic Routing\"\
    , RFC 3884,\n              September 2004.\n   [RFC4023]  Worster, T., Rekhter,\
    \ Y., and E. Rosen, \"Encapsulating\n              MPLS in IP or Generic Routing\
    \ Encapsulation (GRE)\",\n              RFC 4023, March 2005.\n   [RFC4302]  Kent,\
    \ S., \"IP Authentication Header\", RFC 4302,\n              December 2005.\n\
    \   [RFC4555]  Eronen, P., \"IKEv2 Mobility and Multihoming Protocol\n       \
    \       (MOBIKE)\", RFC 4555, June 2006.\n   [RFC4718]  Eronen, P. and P. Hoffman,\
    \ \"IKEv2 Clarifications and\n              Implementation Guidelines\", RFC 4718,\
    \ October 2006.\n   [TUNN-AD]  Palet, J. and M. Diaz, \"Analysis of IPv6 Tunnel\
    \ End-point\n              Discovery Mechanisms\", Work in Progress, January 2005.\n\
    \   [VLINK]    Duffy, M., \"Framework for IPsec Protected Virtual Links\n    \
    \          for PPVPNs\", Work in Progress, October 2002.\n"
- title: Appendix A.  Using Tunnel Mode
  contents:
  - "Appendix A.  Using Tunnel Mode\n   First, we describe the different tunnel mode\
    \ implementation methods.\n   We note that, in this context, only the so-called\
    \ Specific SPD (SSPD)\n   model (without a tunnel interface) can be made to work,\
    \ but it has\n   reduced applicability, and the use of a transport mode tunnel\
    \ is\n   recommended instead.  However, we will describe how the SSPD tunnel\n\
    \   mode might look if one would like to use it in any case.\n"
- title: A.1.  Tunnel Mode Implementation Methods
  contents:
  - "A.1.  Tunnel Mode Implementation Methods\n   Tunnel mode could (in theory) be\
    \ deployed in two very different ways\n   depending on the implementation:\n \
    \  1.  \"Generic SPDs\": some implementations model the tunnel mode SA as\n  \
    \     an IP interface.  In this case, an IPsec tunnel interface is\n       created\
    \ and used with \"any\" addresses (\"::/0 <-> ::/0\" ) as IPsec\n       traffic\
    \ selectors while setting up the SA.  Though this allows\n       all traffic between\
    \ the two nodes to be protected by IPsec, the\n       routing table would decide\
    \ what traffic gets sent over the\n       tunnel.  Ingress filtering must be separately\
    \ applied on the\n       tunnel interface as the IPsec policy checks do not check\
    \ the IPv6\n       addresses at all.  Routing protocols, multicast, etc. will\
    \ work\n       through this tunnel.  This mode is similar to transport mode.\n\
    \       The SPDs must be interface-specific.  However, because IKE uses\n    \
    \   IPv4 but the tunnel is IPv6, there is no standard solution to map\n      \
    \ the IPv4 interface to IPv6 interface [VLINK] and this approach is\n       not\
    \ feasible.\n   2.  \"Specific SPDs\": some implementations do not model the tunnel\n\
    \       mode SA as an IP interface.  Traffic selection is based on\n       specific\
    \ SPD entries, e.g., \"2001:db8:1::/48 <-> 2001:db8:\n       2::/48\".  As the\
    \ IPsec session between two endpoints does not\n       have an interface (though\
    \ an implementation may have a common\n       pseudo-interface for all IPsec traffic),\
    \ there is no Duplicate\n       Address Detection (DAD), Multicast Listener Discovery\
    \ (MLD), or\n       link-local traffic to protect; multicast is not possible over\n\
    \       such a tunnel.  Ingress filtering is performed automatically by\n    \
    \   the IPsec traffic selectors.\n   Ingress filtering is guaranteed by IPsec\
    \ processing when option (2)\n   is chosen, whereas the operator has to enable\
    \ it explicitly when\n   transport mode or option (1) is chosen.\n   In summary,\
    \ there does not appear to be a standard solution in this\n   context for the\
    \ first implementation approach.\n   The second approach can be made to work,\
    \ but is only applicable in\n   host-to-host or site-to-router/router-to-site\
    \ scenarios (i.e., when\n   the IPv6 prefixes can be known a priori), and it offers\
    \ only a\n   limited set of features (e.g., no multicast) compared with a\n  \
    \ transport mode tunnel.\n   When tunnel mode is used, fragment handling [RFC4301]\
    \ may also be\n   more difficult compared with transport mode and, depending on\n\
    \   implementation, may need to be reflected in SPDs.\n"
- title: A.2.  Specific SPD for Host-to-Host Scenario
  contents:
  - "A.2.  Specific SPD for Host-to-Host Scenario\n   The following SPD entries assume\
    \ that there are two hosts, Host1 and\n   Host2, whose IPv6 addresses are denoted\
    \ IPV6-EP1 and IPV6-EP2 (global\n   addresses), and the IPV4 addresses of the\
    \ tunnel endpoints are\n   denoted IPV4-TEP1 and IPV4-TEP2, respectively.\n  \
    \ Host1's SPD:\n                                Next Layer\n   Rule     Local\
    \     Remote     Protocol   Action\n   ----     -----     ------    ----------\
    \ --------\n     1     IPV6-EP1  IPV6-EP2      ESP      BYPASS\n     2     IPV6-EP1\
    \  IPV6-EP2      IKE      BYPASS\n     3     IPv6-EP1  IPV6-EP2       41     \
    \ PROTECT(ESP,\n                                            tunnel{IPV4-TEP1,IPV4-TEP2})\n\
    \   Host2's SPD:\n                                Next Layer\n   Rule     Local\
    \     Remote     Protocol   Action\n   ----     -----     ------    ----------\
    \ --------\n     1     IPV6-EP2  IPV6-EP1      ESP      BYPASS\n     2     IPV6-EP2\
    \  IPV6-EP1      IKE      BYPASS\n     3     IPv6-EP2  IPV6-EP1       41     \
    \ PROTECT(ESP,\n                                            tunnel{IPV4-TEP2,IPV4-TEP1})\n\
    \   \"IKE\" refers to UDP destination port 500 and possibly also\n   port 4500\
    \ if NAT traversal is used.\n   The IDci and IDcr payloads of IKEv1 carry the\
    \ IPV6-EP1 and IPV6-TEP2\n   as phase 2 identities.  With IKEv2, the traffic selectors\
    \ are used to\n   carry the same information.\n"
- title: A.3.  Specific SPD for Host-to-Router Scenario
  contents:
  - "A.3.  Specific SPD for Host-to-Router Scenario\n   The following SPD entries\
    \ assume that the host has the IPv6 address\n   IPV6-EP1 and the tunnel endpoints\
    \ of the host and router are IPV4-\n   TEP1 and IPV4-TEP2, respectively.  If the\
    \ tunnel is between a router\n   and a host where the router has allocated an\
    \ IPV6-PREF/48 to the\n   host, the corresponding SPD entries can be derived by\
    \ replacing IPV6-\n   EP1 with IPV6-PREF/48.\n   Please note the bypass entry\
    \ for host's SPD, absent in router's SPD.\n   While this might be an implementation\
    \ matter for host-to-router\n   tunneling, having a similar entry, \"Local=IPV6-PREF/48\
    \ & Remote=IPV6-\n   PREF/48\", is critical for site-to-router tunneling.\n  \
    \ Host's SPD:\n                                Next Layer\n   Rule     Local \
    \    Remote     Protocol   Action\n   ----     -----     ------    ----------\
    \ --------\n     1     IPV6-EP1  IPV6-EP2      ESP      BYPASS\n     2     IPV6-EP1\
    \  IPV6-EP2      IKE      BYPASS\n     3     IPV6-EP1  IPV6-EP1      ANY     \
    \ BYPASS\n     4     IPV6-EP1    ANY         ANY      PROTECT(ESP,\n         \
    \                                   tunnel{IPV4-TEP1,IPV4-TEP2})\n   Router's\
    \ SPD:\n                                Next Layer\n   Rule     Local     Remote\
    \     Protocol   Action\n   ----     -----     ------    ---------- --------\n\
    \     1     IPV6-EP2  IPV6-EP1      ESP      BYPASS\n     2     IPV6-EP2  IPV6-EP1\
    \      IKE      BYPASS\n     3       ANY     IPV6-EP1      ANY      PROTECT(ESP,\n\
    \                                            tunnel{IPV4-TEP1,IPV4-TEP2})\n  \
    \ The IDci and IDcr payloads of IKEv1 carry the IPV6-EP1 and\n   ID_IPV6_ADDR_RANGE\
    \ or ID_IPV6_ADDR_SUBNET as their phase 2\n   identities.  The starting address\
    \ is zero and the end address is all\n   ones for ID_IPV6_ADDR_RANGE.  The starting\
    \ address is zero IP address\n   and the end address is all zeroes for ID_IPV6_ADDR_SUBNET.\
    \  With\n   IKEv2, the traffic selectors are used to carry the same information.\n"
- title: Appendix B.  Optional Features
  contents:
  - 'Appendix B.  Optional Features

    '
- title: B.1.  Dynamic Address Configuration
  contents:
  - "B.1.  Dynamic Address Configuration\n   With the exchange of protected configuration\
    \ payloads, IKEv2 is able\n   to provide the IKEv2 peer with Dynamic Host Configuration\
    \ Protocol\n   (DHCP)-like information payloads.  These configuration payloads\
    \ are\n   exchanged between the IKEv2 initiator and responder.\n   This could\
    \ be used (for example) by the host in the host-to-router\n   scenario to obtain\
    \ an IPv6 address from the ISP as part of setting up\n   the IPsec tunnel mode\
    \ SA.  The details of these procedures are out of\n   scope for this memo.\n"
- title: B.2.  NAT Traversal and Mobility
  contents:
  - "B.2.  NAT Traversal and Mobility\n   Network address (and port) translation devices\
    \ are commonly found in\n   today's networks.  A detailed description of the problem\
    \ and\n   requirements of IPsec-protected data traffic traversing a NAT is\n \
    \  provided in [RFC3715].\n   IKEv2 can detect the presence of a NAT automatically\
    \ by sending\n   NAT_DETECTION_SOURCE_IP and NAT_DETECTION_DESTINATION_IP payloads\
    \ in\n   the initial IKE_SA_INIT exchange.  Once a NAT is detected and both\n\
    \   endpoints support IPsec NAT traversal extensions, UDP encapsulation\n   can\
    \ be enabled.\n   More details about UDP encapsulation of IPsec-protected IP packets\n\
    \   can be found in [RFC3948].\n   For IPv6-in-IPv4 tunneling, NAT traversal is\
    \ interesting for two\n   reasons:\n   1.  One of the tunnel endpoints is often\
    \ behind a NAT, and configured\n       tunneling, using protocol 41, is not guaranteed\
    \ to traverse the\n       NAT.  Hence, using IPsec tunnels would enable one to\
    \ set up both\n       a secure tunnel and a tunnel that might not always be possible\n\
    \       without other tunneling mechanisms.\n   2.  Using NAT traversal allows\
    \ the outer address to change without\n       having to renegotiate the SAs. \
    \ This could be beneficial for a\n       crude form of mobility and in scenarios\
    \ where the NAT changes the\n       IP addresses frequently.  However, as the\
    \ outer address may\n       change, this might introduce new security issues,\
    \ and using\n       tunnel mode would be most appropriate.\n   When NAT is not\
    \ applied, the second benefit would still be desirable.\n   In particular, using\
    \ manually configured tunneling is an operational\n   challenge with dynamic IP\
    \ addresses, because both ends need to be\n   reconfigured if an address changes.\
    \  Therefore, an easy and efficient\n   way to re-establish the IPsec tunnel if\
    \ the IP address changes would\n   be desirable.  MOBIKE [RFC4555] provides a\
    \ solution when IKEv2 is\n   used, but it only supports tunnel mode.\n"
- title: B.3.  Tunnel Endpoint Discovery
  contents:
  - "B.3.  Tunnel Endpoint Discovery\n   The IKEv2 initiator needs to know the address\
    \ of the IKEv2 responder\n   to start IKEv2 signaling.  A number of ways can be\
    \ used to provide\n   the initiator with this information, for example:\n   o\
    \  Using out-of-band mechanisms, e.g., from the ISP's Web page.\n   o  Using DNS\
    \ to look up a service name by appending it to the DNS\n      search path provided\
    \ by DHCPv4 (e.g., \"tunnel-\n      service.example.com\").\n   o  Using a DHCP\
    \ option.\n   o  Using a pre-configured or pre-determined IPv4 anycast address.\n\
    \   o  Using other, unspecified or proprietary methods.\n   For the purpose of\
    \ this document, it is assumed that this address can\n   be obtained somehow.\
    \  Once the address has been learned, it is\n   configured as the tunnel endpoint\
    \ for the configured IPv6-in-IPv4\n   tunnel.\n   This problem is also discussed\
    \ at more length in [TUNN-AD].\n   However, simply discovering the tunnel endpoint\
    \ is not sufficient for\n   establishing an IKE session with the peer.  The PAD\
    \ information (see\n   Section 5.2) also needs to be learned dynamically.  Hence,\
    \ currently,\n   automatic endpoint discovery provides benefit only if PAD information\n\
    \   is chosen in such a manner that it is not IP-address specific.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Richard Graveman\n   RFG Security, LLC\n   15 Park Avenue\n\
    \   Morristown, NJ  07960\n   USA\n   EMail: rfg@acm.org\n   Mohan Parthasarathy\n\
    \   Nokia\n   313 Fairchild Drive\n   Mountain View, CA  94043\n   USA\n   EMail:\
    \ mohanp@sbcglobal.net\n   Pekka Savola\n   CSC/FUNET\n   Espoo\n   Finland\n\
    \   EMail: psavola@funet.fi\n   Hannes Tschofenig\n   Nokia Siemens Networks\n\
    \   Otto-Hahn-Ring 6\n   Munich, Bayern  81739\n   Germany\n   EMail: Hannes.Tschofenig@nsn.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
