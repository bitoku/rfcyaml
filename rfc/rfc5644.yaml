- title: __initial_text__
  contents:
  - '          IP Performance Metrics (IPPM): Spatial and Multicast

    '
- title: Abstract
  contents:
  - "Abstract\n   The IETF has standardized IP Performance Metrics (IPPM) for measuring\n\
    \   end-to-end performance between two points.  This memo defines two new\n  \
    \ categories of metrics that extend the coverage to multiple\n   measurement points.\
    \  It defines spatial metrics for measuring the\n   performance of segments of\
    \ a source to destination path, and metrics\n   for measuring the performance\
    \ between a source and many destinations\n   in multiparty communications (e.g.,\
    \ a multicast tree).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the BSD License.\n   This document may\
    \ contain material from IETF Documents or IETF\n   Contributions published or\
    \ made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Scope ..........................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Brief Metric Descriptions .......................................7\n   4.\
    \ Motivations ....................................................10\n   5. Spatial\
    \ Vector Metrics Definitions .............................12\n   6. Spatial Segment\
    \ Metrics Definitions ............................19\n   7. One-to-Group Metrics\
    \ Definitions ...............................27\n   8. One-to-Group Sample Statistics\
    \ .................................30\n   9. Measurement Methods: Scalability\
    \ and Reporting .................40\n   10. Manageability Considerations ..................................44\n\
    \   11. Security Considerations .......................................49\n  \
    \ 12. Acknowledgments ...............................................50\n   13.\
    \ IANA Considerations ...........................................50\n   14. References\
    \ ....................................................56\n      14.1. Normative\
    \ References .....................................56\n      14.2. Informative\
    \ References ...................................57\n"
- title: 1.  Introduction and Scope
  contents:
  - "1.  Introduction and Scope\n   IETF has standardized IP Performance Metrics (IPPM)\
    \ for measuring\n   end-to-end performance between two points.  This memo defines\
    \ two new\n   categories of metrics that extend the coverage to multiple\n   measurement\
    \ points.  It defines spatial metrics for measuring the\n   performance of segments\
    \ of a source to destination path, and metrics\n   for measuring the performance\
    \ between a source and many destinations\n   in multiparty communications (e.g.,\
    \ a multicast tree).\n   The purpose of this memo is to define metrics to fulfill\
    \ the new\n   requirements of measurement involving multiple measurement points.\n\
    \   Spatial metrics measure the performance of each segment along a path.\n  \
    \ One-to-group metrics measure the performance for a group of users.\n   These\
    \ metrics are derived from one-way end-to-end metrics, all of\n   which follow\
    \ the IPPM framework [RFC2330].\n   This memo is organized as follows: Section\
    \ 2 introduces new terms\n   that extend the original IPPM framework [RFC2330].\
    \  Section 3 briefly\n   introduces the new metrics, and Section 4 motivates each\
    \ metric\n   category.  Sections 5 through 8 develop each category of metrics\
    \ with\n   definitions and statistics.  Then the memo discusses the impact of\n\
    \   the measurement methods on the scalability and proposes an\n   information\
    \ model for reporting the measurements.  Finally, the memo\n   discusses security\
    \ aspects related to measurement and registers the\n   metrics in the IANA IP\
    \ Performance Metrics Registry [RFC4148].\n   The scope of this memo is limited\
    \ to metrics using a single source\n   packet or stream, and observations of corresponding\
    \ packets along the\n   path (spatial), at one or more destinations (one-to-group),\
    \ or both.\n   Note that all the metrics defined herein are based on observations\
    \ of\n   packets dedicated to testing, a process that is called active\n   measurement.\
    \  Passive measurement (for example, a spatial metric\n   based on the observation\
    \ of user traffic) is beyond the scope of this\n   memo.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Terminology
  contents:
  - '2.  Terminology

    '
- title: 2.1.  Naming of the Metrics
  contents:
  - "2.1.  Naming of the Metrics\n   The names of the metrics, including capitalized\
    \ letters, are as close\n   as possible of the names of the one-way end-to-end\
    \ metrics they are\n   derived from.\n"
- title: 2.2.  Terms Defined Elsewhere
  contents:
  - "2.2.  Terms Defined Elsewhere\n   host: section 5 of RFC 2330\n   router: section\
    \ 5 of RFC 2330\n   loss threshold: section 2.8.2 of RFC 2680\n   path: section\
    \ 5 of RFC 2330\n   sample: section 11 of RFC 2330\n   singleton: section 11 of\
    \ RFC 2330\n"
- title: 2.3.  Routers Digest
  contents:
  - "2.3.  Routers Digest\n   The list of the routers on the path from the source\
    \ to the\n   destination that act as points of interest, also referred to as the\n\
    \   routers digest.\n"
- title: 2.4.  Multiparty Metric
  contents:
  - "2.4.  Multiparty Metric\n   A metric is said to be multiparty if the topology\
    \ involves more than\n   one measurement collection point.  All multiparty metrics\
    \ designate a\n   set of hosts as \"points of interest\", where one host is the\
    \ source\n   and other hosts are the measurement collection points.  For example,\n\
    \   if the set of points of interest is < ha, hb, hc, ..., hn >, where ha\n  \
    \ is the source and < hb, hc, ..., hn > are the destinations, then\n   measurements\
    \ may be conducted between < ha, hb>, < ha, hc>, ..., <ha,\n   hn >.\n   For the\
    \ purposes of this memo (reflecting the scope of a single\n   source), the only\
    \ multiparty metrics are one-to-group metrics.\n"
- title: 2.5.  Spatial Metric
  contents:
  - "2.5.  Spatial Metric\n   A metric is said to be spatial if one of the hosts (measurement\n\
    \   collection points) involved is neither the source nor a destination\n   of\
    \ the measured packet(s).  Such measurement hosts will usually be\n   routers\
    \ that are members of the routers digest.\n"
- title: 2.6.  One-to-Group Metric
  contents:
  - "2.6.  One-to-Group Metric\n   A metric is said to be one-to-group if the measured\
    \ packet is sent by\n   one source and (potentially) received by more than one\
    \ destination.\n   Thus, the topology of the communication group can be viewed\
    \ as a\n   center-distributed or server-client topology with the source as the\n\
    \   center/server in the topology.\n"
- title: 2.7.  Points of Interest
  contents:
  - "2.7.  Points of Interest\n   Points of interest are the hosts (as per the RFC\
    \ 2330 definition,\n   \"hosts\" include routing nodes) that are measurement collection\n\
    \   points, which are a sub-set of the set of hosts involved in the\n   delivery\
    \ of the packets (in addition to the source itself).\n   For spatial metrics,\
    \ points of interest are a (possibly arbitrary)\n   sub-set of all the routers\
    \ involved in the path.\n   Points of interest of one-to-group metrics are the\
    \ intended\n   destination hosts for packets from the source (in addition to the\n\
    \   source itself).\n                         Src                   Dst\n    \
    \                     `.          ,-.\n                           `.      ,' \
    \  `...... 1\n                             `.   ;       :\n                  \
    \             `. ;       :\n                                 ;         :... 2\n\
    \                                 |         |\n                              \
    \   :         ;\n                                  :       ;.... 3\n         \
    \                         :       ;\n                                   `.   ,'\n\
    \                                     `-'....... I\n                 Figure 1:\
    \ One-to-Group Points of Interest\n   A candidate point of interest for spatial\
    \ metrics is a router from\n   the set of routers involved in the delivery of\
    \ the packets from\n   source to destination.\n                         Src ------.\
    \           Hosts\n                                    \\\n                  \
    \                   `---X   --- 1\n                                         \\\
    \n                                          x\n                              \
    \           /\n                              .---------X   ---- 2\n          \
    \                  /\n                           x\n                         \
    \   ...\n                            `---X           ---- ...\n              \
    \                     \\\n                                    \\\n           \
    \                          \\\n                                      X     ----\
    \ J\n                                       \\\n                             \
    \           \\\n                                         \\\n                \
    \                          `---- Dst\n                Note: 'X' are nodes that\
    \ are points of interest,\n                      'x' are nodes that are not points\
    \ of interest\n                   Figure 2: Spatial Points of Interest\n"
- title: 2.8.  Reference Point
  contents:
  - "2.8.  Reference Point\n   A reference point is defined as the server where the\
    \ statistical\n   calculations will be carried out.  It is usually a centralized\
    \ server\n   in the measurement architecture that is controlled by a network\n\
    \   operator, where measurement data can be collected for further\n   processing.\
    \  The reference point is distinctly different from hosts\n   at measurement collection\
    \ points, where the actual measurements are\n   carried out (e.g., points of interest).\n"
- title: 2.9.  Vector
  contents:
  - "2.9.  Vector\n   A vector is a set of singletons (single atomic results) comprised\
    \ of\n   observations corresponding to a single source packet at different\n \
    \  hosts in a network.  For instance, if the one-way delay singletons\n   observed\
    \ at N receivers for Packet P sent by the source Src are dT1,\n   dT2,..., dTN,\
    \ then a vector V with N elements can be organized as\n   {dT1, dT2,..., dTN}.\
    \  The element dT1 is distinct from all others as\n   the singleton at receiver\
    \ 1 in response to a packet sent from the\n   source at a specific time.  The\
    \ complete vector gives information\n   over the dimension of space, a set of\
    \ N receivers in this example.\n   The singleton elements of any vector are distinctly\
    \ different from\n   each other in terms of their measurement collection point.\
    \  Different\n   vectors for common measurement points of interest are distinguished\n\
    \   by the source packet sending time.\n"
- title: 2.10.  Matrix
  contents:
  - "2.10.  Matrix\n   Several vectors form a matrix, which contains results observed\
    \ over a\n   sampling interval at different places in a network at different\n\
    \   times.  For example, the one-way delay vectors V1={dT11, dT12,...,\n   dT1N},\
    \ V2={dT21, dT22,..., dT2N},..., Vm={dTm1, dTm2,..., dTmN} for\n   Packet P1,\
    \ P2,...,Pm, form a one-way delay Matrix {V1, V2,...,Vm}.\n   The matrix organizes\
    \ the vector information to present network\n   performance in both space and\
    \ time.\n   A one-dimensional matrix (row) corresponds to a sample in simple\n\
    \   point-to-point measurement.\n   The relationship among singleton, sample,\
    \ vector, and matrix is\n   illustrated in Figure 3.\n                 points\
    \ of        singleton\n                 interest           /       samples(time)\n\
    \                  ,----.    ^      /\n                 /   R1.....|  / R1dT1\
    \   R1dT2   R1dT3 ... R3dTk \\\n                /         \\ | |             \
    \                      |\n               ;  R2........| |  R2dT1   R2dT2   R2dT3\
    \ ... R3dTk  |\n          Src  |           || |                              \
    \     |\n               |      R3....| |  R3dT1   R3dT2   R3dT3 ... R3dTk  |\n\
    \               |           || |                                   |\n       \
    \        :           ;| |                                   |\n              \
    \  \\         / | |                                   |\n                 \\ \
    \ Rn......|  \\ RndT1   RndT2   RndT3 ... RndTk /\n                  `-----' \
    \  +-------------------------------------> time\n                            \
    \    vector           matrix\n                               (space)      (time\
    \ and space)\n     Figure 3: Relationship between Singletons, Samples, Vectors,\
    \ and\n                                  Matrix\n"
- title: 3.  Brief Metric Descriptions
  contents:
  - "3.  Brief Metric Descriptions\n   The metrics for spatial and one-to-group measurement\
    \ are based on the\n   source-to-destination, or end-to-end metrics defined by\
    \ IETF in\n   [RFC2679], [RFC2680], [RFC3393], and [RFC3432].\n   This memo defines\
    \ seven new spatial metrics using the [RFC2330]\n   framework of parameters, units\
    \ of measure, and measurement\n   methodologies.  Each definition includes a section\
    \ that describes\n   measurement constraints and issues, and provides guidance\
    \ to increase\n   the accuracy of the results.\n   The spatial metrics are:\n\
    \   o  Type-P-Spatial-One-way-Delay-Vector divides the end-to-end Type-P-\n  \
    \    One-way-Delay [RFC2679] into a spatial vector of one-way delay\n      singletons.\n\
    \   o  Type-P-Spatial-One-way-Packet-Loss-Vector divides an end-to-end\n     \
    \ Type-P-One-way-Packet-Loss [RFC2680] into a spatial vector of\n      packet\
    \ loss singletons.\n   o  Type-P-Spatial-One-way-ipdv-Vector divides an end-to-end\
    \ Type-P-\n      One-way-ipdv into a spatial vector of ipdv (IP Packet Delay\n\
    \      Variation) singletons.\n   o  Using elements of the Type-P-Spatial-One-way-Delay-Vector\
    \ metric,\n      a sample called Type-P-Segment-One-way-Delay-Stream collects\
    \ one-\n      way delay metrics between two points of interest on the path over\n\
    \      time.\n   o  Likewise, using elements of the Type-P-Spatial-Packet-Loss-Vector\n\
    \      metric, a sample called Type-P-Segment-Packet-Loss-Stream collects\n  \
    \    one-way delay metrics between two points of interest on the path\n      over\
    \ time.\n   o  Using the Type-P-Spatial-One-way-Delay-Vector metric, a sample\n\
    \      called Type-P-Segment-ipdv-prev-Stream will be introduced to\n      compute\
    \ ipdv metrics (using the previous packet selection\n      function) between two\
    \ points of interest on the path over time.\n   o  Again using the Type-P-Spatial-One-way-Delay-Vector\
    \ metric, a\n      sample called Type-P-Segment-ipdv-min-Stream will define another\n\
    \      set of ipdv metrics (using the minimum delay packet selection\n      function)\
    \ between two points of interest on the path over time.\n   The memo also defines\
    \ three one-to-group metrics to measure the one-\n   way performance between a\
    \ source and a group of receivers.  They are:\n   o  Type-P-One-to-group-Delay-Vector\
    \ which collects the set of Type-P-\n      One-way-Delay singletons between one\
    \ sender and N receivers;\n   o  Type-P-One-to-group-Packet-Loss-Vector which\
    \ collects the set of\n      Type-P-One-way-Packet-Loss singletons between one\
    \ sender and N\n      receivers; and\n   o  Type-P-One-to-group-ipdv-Vector which\
    \ collects the set of Type-P-\n      One-way-ipdv singletons between one sender\
    \ and N receivers.\n   Finally, based on the one-to-group vector metrics listed\
    \ above,\n   statistics are defined to capture single receiver performance, group\n\
    \   performance, and the relative performance for a multiparty\n   communication:\n\
    \   o  Using the Type-P-One-to-group-Delay-Vector, a metric called Type-\n   \
    \   P-One-to-group-Receiver-n-Mean-Delay, or RnMD, presents the mean\n      of\
    \ delays between one sender and a single receiver 'n'.  From this\n      metric,\
    \ three additional metrics are defined to characterize the\n      mean delay over\
    \ the entire group of receivers during the same time\n      interval:\n      *\
    \  Type-P-One-to-group-Mean-Delay, or GMD, presents the mean of\n         delays;\n\
    \      *  Type-P-One-to-group-Range-Mean-Delay, or GRMD, presents the\n      \
    \   range of mean delays; and\n      *  Type-P-One-to-group-Max-Mean-Delay, or\
    \ GMMD, presents the\n         maximum of mean delays.\n   o  Using the Type-P-One-to-group-Packet-Loss-Vector,\
    \ a metric called\n      Type-P-One-to-group-Receiver-n-Loss-Ratio, or RnLR, captures\
    \ the\n      packet loss ratio between one sender and a single receiver 'n'.\n\
    \      Based on this definition, two more metrics are defined to\n      characterize\
    \ packet loss over the entire group during the same\n      time interval:\n  \
    \    *  Type-P-One-to-group-Loss-Ratio, or GLR, captures the overall\n       \
    \  packet loss ratio for the entire group of receivers; and\n      *  Type-P-One-to-group-Range-Loss-Ratio,\
    \ or GRLR, presents the\n         comparative packet loss ratio during the test\
    \ interval between\n         one sender and N receivers.\n   o  Using the Type-P-One-to-group-Packet-Loss-Vector,\
    \ a metric called\n      Type-P-One-to-group-Receiver-n-Comp-Loss-Ratio, or RnCLR,\
    \ computes\n      a packet loss ratio using the maximum number of packets received\n\
    \      at any receiver.\n   o  Using Type-P-One-to-group-ipdv-Vector, a metric\
    \ called Type-P-One-\n      to-group-Range-Delay-Variation, or GRDV, presents\
    \ the range of\n      delay variation between one sender and a group of receivers.\n"
- title: 4.  Motivations
  contents:
  - "4.  Motivations\n   All existing IPPM metrics are defined for end-to-end (source-to-\n\
    \   destination) measurement of point-to-point paths.  It is logical to\n   extend\
    \ them to multiparty situations such as one-to-one trajectory\n   metrics and\
    \ one-to-multipoint metrics.\n"
- title: 4.1.  Motivations for Spatial Metrics
  contents:
  - "4.1.  Motivations for Spatial Metrics\n   Spatial metrics are needed for:\n \
    \  o  Decomposing the performance of an inter-domain path to quantify\n      the\
    \ per-AS (Autonomous System) contribution to the end-to-end\n      performance.\n\
    \   o  Traffic engineering and troubleshooting, which benefit from\n      spatial\
    \ views of one-way delay and ipdv consumption, or\n      identification of the\
    \ path segment where packets were lost.\n   o  Monitoring the decomposed performance\
    \ of a multicast tree based on\n      MPLS point-to-multipoint communications.\n\
    \   o  Dividing end-to-end metrics, so that some segment measurements can\n  \
    \    be re-used and help measurement systems reach large-scale\n      coverage.\
    \  Spatial measures could characterize the performance of\n      an intra-domain\
    \ segment and provide an elementary piece of\n      information needed to estimate\
    \ inter-domain performance to another\n      destination using Spatial Composition\
    \ metrics [SPATIAL].\n"
- title: 4.2.  Motivations for One-to-group Metrics
  contents:
  - "4.2.  Motivations for One-to-group Metrics\n   While the node-to-node-based spatial\
    \ measures can provide very useful\n   data in the view of each connection, we\
    \ also need measures to present\n   the performance of a multiparty communication\
    \ topology.  A simple\n   point-to-point metric cannot completely describe the\
    \ multiparty\n   situation.  New one-to-group metrics assess performance of the\n\
    \   multiple paths for further statistical analysis.  The new metrics are\n  \
    \ named one-to-group performance metrics, and they are based on the\n   unicast\
    \ metrics defined in IPPM RFCs.  One-to-group metrics are one-\n   way metrics\
    \ from one source to a group of destinations or receivers.\n   The metrics are\
    \ helpful for judging the overall performance of a\n   multiparty communications\
    \ network and for describing the performance\n   variation across a group of destinations.\n\
    \   One-to-group performance metrics are needed for:\n   o  Designing and engineering\
    \ multicast trees and MPLS point-to-\n      multipoint Label Switched Paths (LSPs).\n\
    \   o  Evaluating and controlling the quality of multicast services,\n      including\
    \ inter-domain multicast.\n   o  Presenting and evaluating the performance requirements\
    \ for\n      multiparty communications and overlay multicast.\n   To understand\
    \ the packet transfer performance between one source and\n   any one receiver\
    \ in the multiparty communication group, we need to\n   collect instantaneous\
    \ end-to-end metrics, or singletons.  This gives\n   a very detailed view into\
    \ the performance of each branch of the\n   multicast tree, and can provide clear\
    \ and helpful information for\n   engineers to identify the branch with problems\
    \ in a complex\n   multiparty routing tree.\n   The one-to-group metrics described\
    \ in this memo introduce the\n   multiparty topology into the IPPM framework,\
    \ and they describe the\n   performance delivered to a group receiving packets\
    \ from the same\n   source.  The concept extends the \"path\" of the point-to-point\n\
    \   measurement to \"path tree\" to cover one-to-many topologies.  If\n   applied\
    \ to one-to-one topology, the one-to-group metrics provide\n   exactly the same\
    \ results as the corresponding one-to-one metrics.\n"
- title: 4.3.  Discussion on Group-to-One and Group-to-Group Metrics
  contents:
  - "4.3.  Discussion on Group-to-One and Group-to-Group Metrics\n   We note that\
    \ points of interest can also be selected to define\n   measurements on group-to-one\
    \ and group-to-group topologies.  These\n   topologies are beyond the scope of\
    \ this memo, because they would\n   involve multiple packets launched from different\
    \ sources.  However,\n   this section gives some insights on these two cases.\n\
    \   The measurements for group-to-one topology can be easily derived from\n  \
    \ the one-to-group measurement.  The measurement point is the host that\n   is\
    \ acting as a receiver while all other hosts act as sources in this\n   case.\n\
    \   The group-to-group communication topology has no obvious focal point:\n  \
    \ the sources and the measurement collection points can be anywhere.\n   However,\
    \ it is possible to organize the problem by applying\n   measurements in one-to-group\
    \ or group-to-one topologies for each host\n   in a uniform way (without taking\
    \ account of how the real\n   communication might be carried out).  For example,\
    \ one group of hosts\n   < ha, hb, hc, ..., hn > might act as sources to send\
    \ data to another\n   group of hosts < Ha, Hb, Hc, ..., Hm >, and they can be\
    \ organized\n   into n sets of points of interest for one-to-group communications:\n\
    \   < ha, Ha, Hb, Hc, ..., Hm >, < hb, Ha, Hb, Hc, ..., Hm >, <hc, Ha,\n   Hb,\
    \ Hc, ..., Hm >, ..., < hn, Ha, Hb, Hc, ..., Hm >.\n"
- title: 5.  Spatial Vector Metrics Definitions
  contents:
  - "5.  Spatial Vector Metrics Definitions\n   This section defines vectors for the\
    \ spatial decomposition of end-to-\n   end singleton metrics over a path.\n  \
    \ Spatial vector metrics are based on the decomposition of standard\n   end-to-end\
    \ metrics defined by the IPPM WG in [RFC2679], [RFC2680],\n   [RFC3393], and [RFC3432].\n\
    \   The spatial vector definitions are coupled with the corresponding\n   end-to-end\
    \ metrics.  Measurement methodology aspects are common to\n   all the vectors\
    \ defined and are consequently discussed in a common\n   section.\n"
- title: 5.1.  A Definition for Spatial One-Way Delay Vector
  contents:
  - "5.1.  A Definition for Spatial One-Way Delay Vector\n   This section is coupled\
    \ with the definition of Type-P-One-way-Delay\n   in section 3 of [RFC2679]. \
    \ When a parameter from the definition in\n   [RFC2679] is re-used in this section,\
    \ the first instance will be\n   tagged with a trailing asterisk.\n   Sections\
    \ 3.5 to 3.8 of [RFC2679] give requirements and applicability\n   statements for\
    \ end-to-end one-way delay measurements.  They are\n   applicable to each point\
    \ of interest, Hi, involved in the measure.\n   Spatial one-way delay measurements\
    \ MUST respect them, especially\n   those related to methodology, clock, uncertainties,\
    \ and reporting.\n"
- title: 5.1.1.  Metric Name
  contents:
  - "5.1.1.  Metric Name\n   Type-P-Spatial-One-way-Delay-Vector\n"
- title: 5.1.2.  Metric Parameters
  contents:
  - "5.1.2.  Metric Parameters\n   o  Src*, the IP address of the sender.\n   o  Dst*,\
    \ the IP address of the receiver.\n   o  i, an integer in the ordered list <1,2,...,n>\
    \ of routers in the\n      path.\n   o  Hi, a router of the routers digest.\n\
    \   o  T*, a time, the sending (or initial observation) time for a\n      measured\
    \ packet.\n   o  dT*, a delay, the one-way delay for a measured packet.\n   o\
    \  dTi, a delay, the one-way delay for a measured packet from the\n      source\
    \ to router Hi.\n   o  <dT1,... dTi,... dTn> a list of n delay singletons.\n \
    \  o  Type-P*, the specification of the packet type.\n   o  <H1, H2,..., Hn> the\
    \ routers digest.\n"
- title: 5.1.3.  Metric Units
  contents:
  - "5.1.3.  Metric Units\n   The value of Type-P-Spatial-One-way-Delay-Vector is\
    \ a sequence of\n   times (a real number in the dimension of seconds with sufficient\n\
    \   resolution to convey the results).\n"
- title: 5.1.4.  Definition
  contents:
  - "5.1.4.  Definition\n   Given a Type-P packet sent by the Src at wire-time (first\
    \ bit) T to\n   the receiver Dst on the path <H1, H2,..., Hn>.  There is a sequence\n\
    \   of values <T+dT1,T+dT2,...,T+dTn,T+dT> such that dT is the Type-P-\n   One-way-Delay\
    \ from Src to Dst, and for each Hi of the path, T+dTi is\n   either a real number\
    \ corresponding to the wire-time the packet passes\n   (last bit received) Hi,\
    \ or undefined if the packet does not pass Hi\n   within a specified loss threshold*\
    \ time.\n   Type-P-Spatial-One-way-Delay-Vector metric is defined for the path\n\
    \   <Src, H1, H2,..., Hn, Dst> as the sequence of values\n   <T,dT1,dT2,...,dTn,dT>.\n"
- title: 5.1.5.  Discussion
  contents:
  - "5.1.5.  Discussion\n   Some specific issues that may occur are as follows:\n\
    \   o  the delay singletons \"appear\" to decrease: dTi > dTi+1.  This may\n \
    \     occur despite being physically impossible with the definition\n      used.\n\
    \      *  This is frequently due to a measurement clock synchronization\n    \
    \     issue.  This point is discussed in section 3.7.1 \"Errors or\n         uncertainties\
    \ related to Clocks\" of [RFC2679].  Consequently,\n         the values of delays\
    \ measured at multiple routers may not match\n         the order of those routers\
    \ on the path.\n      *  The actual order of routers on the path may change due\
    \ to\n         reconvergence (e.g., recovery from a link failure).\n      *  The\
    \ location of the measurement collection point in the device\n         influences\
    \ the result.  If the packet is not observed directly\n         on the input interface,\
    \ the delay includes buffering time and\n         consequently an uncertainty\
    \ due to the difference between\n         'wire-time' and 'host time'.\n"
- title: 5.2.  A Definition for Spatial Packet Loss Vector
  contents:
  - "5.2.  A Definition for Spatial Packet Loss Vector\n   This section is coupled\
    \ with the definition of Type-P-One-way-Packet-\n   Loss.  When a parameter from\
    \ section 2 of [RFC2680] is used in this\n   section, the first instance will\
    \ be tagged with a trailing asterisk.\n   Sections 2.5 to 2.8 of [RFC2680] give\
    \ requirements and applicability\n   statements for end-to-end one-way packet\
    \ loss measurements.  They are\n   applicable to each point of interest, Hi, involved\
    \ in the measure.\n   Spatial packet loss measurement MUST respect them, especially\
    \ those\n   related to methodology, clock, uncertainties, and reporting.\n   The\
    \ following sections define the spatial loss vector, adapt some of\n   the points\
    \ above, and introduce points specific to spatial loss\n   measurement.\n"
- title: 5.2.1.  Metric Name
  contents:
  - "5.2.1.  Metric Name\n   Type-P-Spatial-Packet-Loss-Vector\n"
- title: 5.2.2.  Metric Parameters
  contents:
  - "5.2.2.  Metric Parameters\n   o  Src*, the IP address of the sender.\n   o  Dst*,\
    \ the IP address of the receiver.\n   o  i, an integer in the ordered list <1,2,...,n>\
    \ of routers in the\n      path.\n   o  Hi, a router of the routers digest.\n\
    \   o  T*, a time, the sending time for a measured packet.\n   o  dTi, a delay,\
    \ the one-way delay for a measured packet from the\n      source to host Hi.\n\
    \   o  <dT1,..., dTn>, list of n delay singletons.\n   o  Type-P*, the specification\
    \ of packet type.\n   o  <H1, H2,..., Hn>, the routers digest.\n   o  <L1, L2,\
    \ ...,Ln>, a list of Boolean values.\n"
- title: 5.2.3.  Metric Units
  contents:
  - "5.2.3.  Metric Units\n   The value of Type-P-Spatial-Packet-Loss-Vector is a\
    \ sequence of\n   Boolean values.\n"
- title: 5.2.4.  Definition
  contents:
  - "5.2.4.  Definition\n   Given a Type-P packet sent by the Src at time T to the\
    \ receiver Dst\n   on the path <H1, H2, ..., Hn>.  For the sequence of times <T+dT1,T+\n\
    \   dT2,..., T+dTi, ...,T+dTn> the packet passes in <H1, H2, ..., Hi,\n   ...,\
    \ Hn>, define the Type-P-Packet-Loss-Vector metric as the sequence\n   of values\
    \ <T, L1, L2, ..., Ln> such that for each Hi of the path, a\n   value of 0 for\
    \ Li means that dTi is a finite value, and a value of 1\n   means that dTi is\
    \ undefined.\n"
- title: 5.2.5.  Discussion
  contents:
  - "5.2.5.  Discussion\n   Some specific issues that may occur are as follows:\n\
    \   o  The result might include the sequence of values 1,0.  Although\n      this\
    \ appears physically impossible (a packet is lost, then re-\n      appears later\
    \ on the path):\n      *  The actual routers on the path may change due to reconvergence\n\
    \         (e.g., recovery from a link failure).\n      *  The order of routers\
    \ on the path may change due to\n         reconvergence.\n      *  A packet may\
    \ not be observed in a router due to some buffer or\n         CPU overflow at\
    \ the measurement collection point.\n"
- title: 5.3.  A Definition for Spatial One-Way ipdv Vector
  contents:
  - "5.3.  A Definition for Spatial One-Way ipdv Vector\n   When a parameter from\
    \ section 2 of [RFC3393] (the definition of Type-\n   P-One-way-ipdv) is used\
    \ in this section, the first instance will be\n   tagged with a trailing asterisk.\n\
    \   The following sections define the spatial ipdv vector, adapt some of\n   the\
    \ points above, and introduce points specific to spatial ipdv\n   measurement.\n"
- title: 5.3.1.  Metric Name
  contents:
  - "5.3.1.  Metric Name\n   Type-P-Spatial-One-way-ipdv-Vector\n"
- title: 5.3.2.  Metric Parameters
  contents:
  - "5.3.2.  Metric Parameters\n   o  Src*, the IP address of the sender.\n   o  Dst*,\
    \ the IP address of the receiver.\n   o  i, an integer in the ordered list <1,2,...,n>\
    \ of routers in the\n      path.\n   o  Hi, a router of the routers digest.\n\
    \   o  T1*, a time, the sending time for a first measured packet.\n   o  T2*,\
    \ a time, the sending time for a second measured packet.\n   o  dT*, a delay,\
    \ the one-way delay for a measured packet.\n   o  dTi, a delay, the one-way delay\
    \ for a measured packet from the\n      source to router Hi.\n   o  Type-P*, the\
    \ specification of the packet type.\n   o  P1, the first packet sent at time T1.\n\
    \   o  P2, the second packet sent at time T2.\n   o  <H1, H2,..., Hn>, the routers\
    \ digest.\n   o  <T1,dT1.1, dT1.2,..., dT1.n,dT1>, the Type-P-Spatial-One-way-\n\
    \      Delay-Vector for a packet sent at time T1.\n   o  <T2,dT2.1, dT2.2,...,\
    \ dT2.n,dT2>, the Type-P-Spatial-One-way-\n      Delay-Vector for a packet sent\
    \ at time T2.\n   o  L*, a packet length in bits.  The packets of a Type-P packet\n\
    \      stream from which the Type-P-Spatial-One-way-Delay-Vector metric\n    \
    \  is taken MUST all be of the same length.\n"
- title: 5.3.3.  Metric Units
  contents:
  - "5.3.3.  Metric Units\n   The value of Type-P-Spatial-One-way-ipdv-Vector is a\
    \ sequence of\n   times (a real number in the dimension of seconds with sufficient\n\
    \   resolution to convey the results).\n"
- title: 5.3.4.  Definition
  contents:
  - "5.3.4.  Definition\n   Given P1 the Type-P packet sent by the sender Src at wire-time\
    \ (first\n   bit) T1 to the receiver Dst. Given <T1, dT1.1, dT1.2,..., dT1.n,\
    \ dT1>\n   the Type-P-Spatial-One-way-Delay-Vector of P1 over the sequence of\n\
    \   routers <H1, H2,..., Hn>.\n   Given P2 the Type-P packet sent by the sender\
    \ Src at wire-time (first\n   bit) T2 to the receiver Dst. Given <T2, dT2.1, dT2.2,...,\
    \ dT2.n, dT2>\n   the Type-P-Spatial-One-way-Delay-Vector of P2 over the same\
    \ path.\n   The Type-P-Spatial-One-way-ipdv-Vector metric is defined as the\n\
    \   sequence of values <T1, T2, dT2.1-dT1.1, dT2.2-dT1.2 ,..., dT2.n-\n   dT1.n,\
    \ dT2-dT1> such that for each Hi of the sequence of routers <H1,\n   H2,..., Hn>,\
    \ dT2.i-dT1.i is either a real number if the packets P1\n   and P2 pass Hi at\
    \ wire-time (last bit) dT1.i and dT2.i respectively,\n   or undefined if at least\
    \ one of them never passes Hi (and the\n   respective one-way delay is undefined).\
    \  The T1,T2* pair indicates\n   the inter-packet emission interval and dT2-dT1\
    \ is ddT* the Type-P-\n   One-way-ipdv.\n"
- title: 5.4.  Spatial Methodology
  contents:
  - "5.4.  Spatial Methodology\n   The methodology, reporting specifications, and\
    \ uncertainties\n   specified in section 3 of [RFC2679] apply to each point of\
    \ interest\n   (or measurement collection point), Hi, measuring an element of\
    \ a\n   spatial delay vector.\n   Likewise, the methodology, reporting specifications,\
    \ and\n   uncertainties specified in section 2 of [RFC2680] apply to each point\n\
    \   of interest, Hi, measuring an element of a spatial packet loss\n   vector.\n\
    \   Sections 3.5 to 3.7 of [RFC3393] give requirements and applicability\n   statements\
    \ for end-to-end One-way ipdv measurements.  They are\n   applicable to each point\
    \ of interest, Hi, involved in the measure.\n   Spatial One-way ipdv measurement\
    \ MUST respect the methodology, clock,\n   uncertainties, and reporting aspects\
    \ given there.\n   Generally, for a given Type-P packet of length L at a specific\
    \ Hi,\n   the methodology for spatial vector metrics may proceed as follows:\n\
    \   o  At each Hi, points of interest/measurement collection points\n      prepare\
    \ to capture the packet sent at time T, record a timestamp\n      Ti', and determine\
    \ the internal delay correction dTi' (see section\n      3.7.1.  \"Errors or uncertainties\
    \ related to Clocks\" of [RFC2679]);\n   o  Each Hi extracts the path ordering\
    \ information from the packet\n      (e.g., time-to-live (TTL));\n   o  Each Hi\
    \ computes the corrected wire-time from Src to Hi: Ti = Ti'\n      - dTi'.  This\
    \ arrival time is undefined if the packet is not\n      detected after the 'loss\
    \ threshold' duration;\n   o  Each Hi extracts the timestamp T from the packet;\n\
    \   o  Each Hi computes the one-way delay from Src to Hi: dTi = Ti - T;\n   o\
    \  The reference point gathers the result of each Hi and arranges\n      them\
    \ according to the path ordering information received to build\n      the Type-P\
    \ spatial one-way vector (e.g., Type-P-Spatial-One-way-\n      Delay-Vector metric\
    \ <T, dT1, dT2,..., dTn, dT>) over the path\n      <Src, H1, H2,..., Hn, Dst>\
    \ at time T.\n"
- title: 5.4.1.  Packet Loss Detection
  contents:
  - "5.4.1.  Packet Loss Detection\n   In a pure end-to-end measurement, packet losses\
    \ are detected by the\n   receiver only.  A packet is lost when Type-P-One-way-Delay\
    \ is\n   undefined or very large (see sections 2.4 and 2.5 of [RFC2680] and\n\
    \   section 3.5 of [RFC2680]).  A packet is deemed lost by the receiver\n   after\
    \ a duration that starts at the time the packet is sent.  This\n   timeout value\
    \ is chosen by a measurement process.  It determines the\n   threshold between\
    \ recording a long packet transfer time as a finite\n   value or an undefined\
    \ value.\n   In a spatial measurement, packet losses may be detected at several\n\
    \   measurement collection points.  Depending on the consistency of the\n   packet\
    \ loss detections among the points of interest, a packet may be\n   considered\
    \ as lost at one point despite having a finite delay at\n   another, or it may\
    \ be observed by the last measurement collection\n   point of the path but considered\
    \ lost by Dst.\n   There is a risk of misinterpreting such results: has the path\n\
    \   changed?  Did the packet arrive at the destination or was it lost on\n   the\
    \ very last link?\n   The same concern applies to one-way delay measures: a delay\
    \ measured\n   may be computed as infinite by one observation point but as a real\n\
    \   value by another one, or may be measured as a real value by the last\n   observation\
    \ point of the path but designated as undefined by Dst.\n   The observation/measurement\
    \ collection points and the destination\n   SHOULD use consistent methods to detect\
    \ packets losses.  The methods\n   and parameters must be systematically reported\
    \ to permit careful\n   comparison and to avoid introducing any confounding factors\
    \ in the\n   analysis.\n"
- title: 5.4.2.  Routers Digest
  contents:
  - "5.4.2.  Routers Digest\n   The methodology given above relies on knowing the\
    \ order of the\n   router/measurement collection points on the path [RFC2330].\n\
    \   Path instability might cause a test packet to be observed more than\n   once\
    \ by the same router, resulting in the repetition of one or more\n   routers in\
    \ the routers digest.\n   For example, repeated observations may occur during\
    \ rerouting phases\n   that introduce temporary micro loops.  During such an event,\
    \ the\n   routers digest for a packet crossing Ha and Hb may include the\n   pattern\
    \ <Hb, Ha, Hb, Ha, Hb>, meaning that Ha ended the computation\n   of the new path\
    \ before Hb and that the initial path was from Ha to\n   Hb, and that the new\
    \ path is from Hb to Ha.\n   Consequently, duplication of routers in the routers\
    \ digest of a\n   vector MUST be identified before computation of statistics to\
    \ avoid\n   producing corrupted information.\n"
- title: 6.  Spatial Segment Metrics Definitions
  contents:
  - "6.  Spatial Segment Metrics Definitions\n   This section defines samples to measure\
    \ the performance of a segment\n   of a path over time.  The definitions rely\
    \ on the matrix of the\n   spatial vector metrics defined above.\n   First, this\
    \ section defines a sample of one-way delay, Type-P-\n   Segment-One-way-Delay-Stream,\
    \ and a sample of packet loss, Type-P-\n   Segment-Packet-Loss-Stream.\n   Then,\
    \ it defines two different samples of ipdv: Type-P-Segment-ipdv-\n   prev-Stream\
    \ uses the current and previous packets as the selection\n   function, and Type-P-Segment-ipdv-min-Stream\
    \ uses the minimum delay\n   as one of the selected packets in every pair.\n"
- title: 6.1.  A Definition of a Sample of One-Way Delay of a Segment of the Path
  contents:
  - "6.1.  A Definition of a Sample of One-Way Delay of a Segment of the Path\n  \
    \ This metric defines a sample of one-way delays over time between a\n   pair\
    \ of routers on a path.  Since it is very close semantically to\n   the metric\
    \ Type-P-One-way-Delay-Poisson-Stream defined in section 4\n   of [RFC2679], sections\
    \ 4.5 to 4.8 of [RFC2679] are integral parts of\n   the definition text below.\n"
- title: 6.1.1.  Metric Name
  contents:
  - "6.1.1.  Metric Name\n   Type-P-Segment-One-way-Delay-Stream\n"
- title: 6.1.2.  Metric Parameters
  contents:
  - "6.1.2.  Metric Parameters\n   o  Src, the IP address of the sender.\n   o  Dst,\
    \ the IP address of the receiver.\n   o  Type-P, the specification of the packet\
    \ type.\n   o  i, an integer in the ordered list <1,2,...,n> of routers in the\n\
    \      path.\n   o  k, an integer that orders the packets sent.\n   o  a and b,\
    \ two integers where b > a.\n   o  Hi, a router of the routers digest.\n   o \
    \ <H1,..., Ha, ..., Hb, ...., Hn>, the routers digest.\n   o  <T1, T2, ..., Tm>,\
    \ a list of times.\n"
- title: 6.1.3.  Metric Units
  contents:
  - "6.1.3.  Metric Units\n   The value of a Type-P-Segment-One-way-Delay-Stream is\
    \ a pair of:\n      A list of times <T1, T2, ..., Tm>; and\n      A sequence of\
    \ delays.\n"
- title: 6.1.4.  Definition
  contents:
  - "6.1.4.  Definition\n   Given two routers, Ha and Hb, of the path <H1, H2,...,\
    \ Ha, ..., Hb,\n   ..., Hn>, and the matrix of Type-P-Spatial-One-way-Delay-Vector\
    \ for\n   the packets sent from Src to Dst at times <T1, T2, ..., Tm-1, Tm> :\n\
    \      <T1, dT1.1, dT1.2, ..., dT1.a, ..., dT1.b,..., dT1.n, dT1>;\n      <T2,\
    \ dT2.1, dT2.2, ..., dT2.a, ..., dT2.b,..., dT2.n, dT2>;\n      ...\n      <Tm,\
    \ dTm.1, dTm.2, ..., dTm.a, ..., dTm.b,..., dTm.n, dTm>.\n   We define the sample\
    \ Type-P-Segment-One-way-Delay-Stream as the\n   sequence <dT1.ab, dT2.ab, ...,\
    \ dTk.ab, ..., dTm.ab> such that for\n   each time Tk, 'dTk.ab' is either the\
    \ real number 'dTk.b - dTk.a', if\n   the packet sent at the time Tk passes Ha\
    \ and Hb, or is undefined if\n   this packet never passes Ha or (inclusive) never\
    \ passes Hb.\n"
- title: 6.1.5.  Discussion
  contents:
  - "6.1.5.  Discussion\n   Some specific issues that may occur are as follows:\n\
    \   o  the delay singletons \"appear\" to decrease: dTi > DTi+1, and is\n    \
    \  discussed in section 5.1.5.\n      *  This could also occur when the clock\
    \ resolution of one\n         measurement collection point is larger than the\
    \ minimum delay\n         of a path.  For example, the minimum delay of a 500\
    \ km path\n         through optical fiber facilities is 2.5 ms, but the measurement\n\
    \         collection point has a clock resolution of 8 ms.\n   The metric SHALL\
    \ be invalid for times < T1 , T2, ..., Tm-1, Tm> if\n   the following conditions\
    \ occur:\n   o  Ha or Hb disappears from the path due to some routing change.\n\
    \   o  The order of Ha and Hb changes in the path.\n"
- title: 6.2.  A Definition of a Sample of Packet Loss of a Segment of the Path
  contents:
  - "6.2.  A Definition of a Sample of Packet Loss of a Segment of the Path\n   This\
    \ metric defines a sample of packet loss over time between a pair\n   of routers\
    \ of a path.  Since it is very close semantically to the\n   metric Type-P-Packet-loss-Stream\
    \ defined in section 3 of [RFC2680],\n   sections 3.5 to 3.8 of [RFC2680] are\
    \ integral parts of the definition\n   text below.\n"
- title: 6.2.1.  Metric Name
  contents:
  - "6.2.1.  Metric Name\n   Type-P-Segment-Packet-Loss-Stream\n"
- title: 6.2.2.  Metric Parameters
  contents:
  - "6.2.2.  Metric Parameters\n   o  Src, the IP address of the sender.\n   o  Dst,\
    \ the IP address of the receiver.\n   o  Type-P, the specification of the packet\
    \ type.\n   o  k, an integer that orders the packets sent.\n   o  n, an integer\
    \ that orders the routers on the path.\n   o  a and b, two integers where b >\
    \ a.\n   o  <H1, H2, ..., Ha, ..., Hb, ...,Hn>, the routers digest.\n   o  Hi,\
    \ a router of the routers digest.\n   o  <T1, T2, ..., Tm>, a list of times.\n\
    \   o  <L1, L2, ..., Ln>, a list of Boolean values.\n"
- title: 6.2.3.  Metric Units
  contents:
  - "6.2.3.  Metric Units\n   The value of a Type-P-Segment-Packet-Loss-Stream is\
    \ a pair of:\n      The list of times <T1, T2, ..., Tm>; and\n      A sequence\
    \ of Boolean values.\n"
- title: 6.2.4.  Definition
  contents:
  - "6.2.4.  Definition\n   Given two routers, Ha and Hb, of the path <H1, H2,...,\
    \ Ha, ..., Hb,\n   ..., Hn> and the matrix of Type-P-Spatial-Packet-Loss-Vector\
    \ for the\n   packets sent from Src to Dst at times <T1, T2, ..., Tm-1, Tm> :\n\
    \      <T1, L1.1, L1.2,..., L1.a, ..., L1.b, ..., L1.n, L>,\n      <T2, L2.1,\
    \ L2.2,..., L2.a, ..., L2.b, ..., L2.n, L>,\n      ...,\n      <Tm, Lm.1, Lm.2,...,\
    \ Lma, ..., Lm.b, ..., Lm.n, L>.\n   We define the value of the sample Type-P-Segment-Packet-Loss-Stream\n\
    \   from Ha to Hb as the sequence of Booleans <L1.ab, L2.ab,..., Lk.ab,\n   ...,\
    \ Lm.ab> such that for each Tk:\n   o  A value of Lk of 0 means that Ha and Hb\
    \ observed the packet sent\n      at time Tk (both Lk.a and Lk.b have a value\
    \ of 0).\n   o  A value of Lk of 1 means that Ha observed the packet sent at time\n\
    \      Tk (Lk.a has a value of 0) and that Hb did not observe the packet\n   \
    \   sent at time Tk (Lk.b has a value of 1).\n   o  The value of Lk is undefined\
    \ when neither Ha nor Hb observed the\n      packet (both Lk.a and Lk.b have a\
    \ value of 1).\n"
- title: 6.2.5.  Discussion
  contents:
  - "6.2.5.  Discussion\n   Unlike Type-P-Packet-loss-Stream, Type-P-Segment-Packet-Loss-Stream\n\
    \   relies on the stability of the routers digest.  The metric SHALL be\n   invalid\
    \ for times < T1 , T2, ..., Tm-1, Tm> if the following\n   conditions occur:\n\
    \   o  Ha or Hb disappears from the path due to some routing change.\n   o  The\
    \ order of Ha and Hb changes in the path.\n   o  Lk.a or Lk.b is undefined.\n\
    \   o  Lk.a has the value 1 (not observed) and Lk.b has the value 0\n      (observed).\n\
    \   o  L has the value 0 (the packet was received by Dst) and Lk.ab has\n    \
    \  the value 1 (the packet was lost between Ha and Hb).\n"
- title: 6.3.  A Definition of a Sample of ipdv of a Segment Using the Previous
  contents:
  - "6.3.  A Definition of a Sample of ipdv of a Segment Using the Previous\n    \
    \  Packet Selection Function\n   This metric defines a sample of ipdv [RFC3393]\
    \ over time between a\n   pair of routers using the previous packet as the selection\
    \ function.\n"
- title: 6.3.1.  Metric Name
  contents:
  - "6.3.1.  Metric Name\n   Type-P-Segment-ipdv-prev-Stream\n"
- title: 6.3.2.  Metric Parameters
  contents:
  - "6.3.2.  Metric Parameters\n   o  Src, the IP address of the sender.\n   o  Dst,\
    \ the IP address of the receiver.\n   o  Type-P, the specification of the packet\
    \ type.\n   o  k, an integer that orders the packets sent.\n   o  n, an integer\
    \ that orders the routers on the path.\n   o  a and b, two integers where b >\
    \ a.\n   o  <H1, H2, ..., Ha, ..., Hb, ...,Hn>, the routers digest.\n   o  <T1,\
    \ T2, ..., Tm-1, Tm>, a list of times.\n   o  <Tk, dTk.1, dTk.2, ..., dTk.a, ...,\
    \ dTk.b,..., dTk.n, dTk>, a\n      Type-P-Spatial-One-way-Delay-Vector.\n"
- title: 6.3.3.  Metric Units
  contents:
  - "6.3.3.  Metric Units\n   The value of a Type-P-Segment-ipdv-prev-Stream is a\
    \ pair of:\n      The list of <T1, T2, ..., Tm-1, Tm>; and\n      A list of pairs\
    \ of interval of times and delays;\n"
- title: 6.3.4.  Definition
  contents:
  - "6.3.4.  Definition\n   Given two routers, Ha and Hb, of the path <H1, H2,...,\
    \ Ha, ..., Hb,\n   ..., Hn> and the matrix of Type-P-Spatial-One-way-Delay-Vector\
    \ for\n   the packets sent from Src to Dst at times <T1, T2, ..., Tm-1, Tm> :\n\
    \      <T1, dT1.1, dT1.2, ..., dT1.a, ..., dT1.b,..., dT1.n, dT1>,\n      <T2,\
    \ dT2.1, dT2.2, ..., dT2.a, ..., dT2.b,..., dT2.n, dT2>,\n      ...\n      <Tm,\
    \ dTm.1, dTm.2, ..., dTm.a, ..., dTm.b,..., dTm.n, dTm>.\n   We define the Type-P-Segment-ipdv-prev-Stream\
    \ as the sequence of\n   packet time pairs and delay variations\n   <(T1, T2 ,\
    \ dT2.ab - dT1.ab) ,...,\n   (Tk-1, Tk, dTk.ab - dTk-1.ab), ...,\n   (Tm-1, Tm,\
    \ dTm.ab - dTm-1.ab)>\n   For any pair, Tk, Tk-1 in k=1 through m, the difference\
    \ dTk.ab - dTk-\n   1.ab is undefined if:\n   o  the delay dTk.a or the delay\
    \ dTk-1.a is undefined, OR\n   o  the delay dTk.b or the delay dTk-1.b is undefined.\n"
- title: 6.3.5.  Discussion
  contents:
  - "6.3.5.  Discussion\n   This metric belongs to the family of inter-packet delay\
    \ variation\n   metrics (IPDV in uppercase) whose results are extremely sensitive\
    \ to\n   the inter-packet interval in practice.\n   The inter-packet interval\
    \ of an end-to-end IPDV metric is under the\n   control of the source (ingress\
    \ point of interest).  In contrast, the\n   inter-packet interval of a segment\
    \ IPDV metric is not under the\n   control the ingress point of interest of the\
    \ measure, Ha.  The\n   interval will certainly vary if there is delay variation\
    \ between the\n   Source and Ha.  Therefore, the ingress inter-packet interval\
    \ must be\n   known at Ha in order to fully comprehend the delay variation between\n\
    \   Ha and Hb.\n"
- title: 6.4.  A Definition of a Sample of ipdv of a Segment Using the Minimum
  contents:
  - "6.4.  A Definition of a Sample of ipdv of a Segment Using the Minimum\n     \
    \ Delay Selection Function\n   This metric defines a sample of ipdv [RFC3393]\
    \ over time between a\n   pair of routers on a path using the minimum delay as\
    \ one of the\n   selected packets in every pair.\n"
- title: 6.4.1.  Metric Name
  contents:
  - "6.4.1.  Metric Name\n   Type-P-Segment-One-way-ipdv-min-Stream\n"
- title: 6.4.2.  Metric Parameters
  contents:
  - "6.4.2.  Metric Parameters\n   o  Src, the IP address of the sender.\n   o  Dst,\
    \ the IP address of the receiver.\n   o  Type-P, the specification of the packet\
    \ type.\n   o  k, an integer that orders the packets sent.\n   o  i, an integer\
    \ that identifies a packet sent.\n   o  n, an integer that orders the routers\
    \ on the path.\n   o  a and b, two integers where b > a.\n   o  <H1, H2, ...,\
    \ Ha, ..., Hb, ...,Hn>, the routers digest.\n   o  <T1, T2, ..., Tm-1, Tm>, a\
    \ list of times.\n   o  <Tk, dTk.1, dTk.2, ..., dTk.a, ..., dTk.b,..., dTk.n,\
    \ dTk>, a\n      Type-P-Spatial-One-way-Delay-Vector.\n"
- title: 6.4.3.  Metric Units
  contents:
  - "6.4.3.  Metric Units\n   The value of a Type-P-Segment-One-way-ipdv-min-Stream\
    \ is a pair of:\n      The list of <T1, T2, ..., Tm-1, Tm>; and\n      A list\
    \ of times.\n"
- title: 6.4.4.  Definition
  contents:
  - "6.4.4.  Definition\n   Given two routers, Ha and Hb, of the path <H1, H2,...,\
    \ Ha, ..., Hb,\n   ..., Hn> and the matrix of Type-P-Spatial-One-way-Delay-Vector\
    \ for\n   the packets sent from Src to Dst at times <T1, T2, ..., Tm-1, Tm> :\n\
    \      <T1, dT1.1, dT1.2, ..., dT1.a, ..., dT1.b,..., dT1.n, dT1>,\n      <T2,\
    \ dT2.1, dT2.2, ..., dT2.a, ..., dT2.b,..., dT2.n, dT2>,\n      ...\n      <Tm,\
    \ dTm.1, dTm.2, ..., dTm.a, ..., dTm.b,..., dTm.n, dTm>.\n   We define the Type-P-Segment-One-way-ipdv-min-Stream\
    \ as the sequence\n   of times <dT1.ab - min(dTi.ab) ,..., dTk.ab - min(dTi.ab),\
    \ ...,\n   dTm.ab - min(dTi.ab)> where:\n   o  min(dTi.ab) is the minimum value\
    \ of the tuples (dTk.b - dTk.a);\n   o  for each time Tk, dTk.ab is undefined\
    \ if dTk.a or (inclusive)\n      dTk.b is undefined, or the real number (dTk.b\
    \ - dTk.a) is\n      undefined.\n"
- title: 6.4.5.  Discussion
  contents:
  - "6.4.5.  Discussion\n   This metric belongs to the family of packet delay variation\
    \ metrics\n   (PDV).  PDV distributions have less sensitivity to inter-packet\n\
    \   interval variations than IPDV values, as discussed above.\n   In principle,\
    \ the PDV distribution reflects the variation over many\n   different inter-packet\
    \ intervals, from the smallest inter-packet\n   interval, up to the length of\
    \ the evaluation interval, Tm - T1.\n   Therefore, when delay variation occurs\
    \ and disturbs the packet\n   spacing observed at Ha, the PDV results will likely\
    \ compare favorably\n   to a PDV measurement where the source is Ha and the destination\
    \ is\n   Hb, because a wide range of spacings are reflected in any PDV\n   distribution.\n"
- title: 7.  One-to-Group Metrics Definitions
  contents:
  - "7.  One-to-Group Metrics Definitions\n   This section defines performance metrics\
    \ between a source and a group\n   of receivers.\n"
- title: 7.1.  A Definition for One-to-Group Delay
  contents:
  - "7.1.  A Definition for One-to-Group Delay\n   This section defines a metric for\
    \ one-way delay between a source and\n   a group of receivers.\n"
- title: 7.1.1.  Metric Name
  contents:
  - "7.1.1.  Metric Name\n   Type-P-One-to-group-Delay-Vector\n"
- title: 7.1.2.  Metric Parameters
  contents:
  - "7.1.2.  Metric Parameters\n   o  Src, the IP address of a host acting as the\
    \ source.\n   o  Recv1,..., RecvN, the IP addresses of the N hosts acting as\n\
    \      receivers.\n   o  T, a time.\n   o  dT1,...,dTn a list of times.\n   o\
    \  Type-P, the specification of the packet type.\n   o  Gr, the receiving group\
    \ identifier.  The parameter Gr is the\n      multicast group address if the measured\
    \ packets are transmitted\n      over IP multicast.  This parameter is to differentiate\
    \ the\n      measured traffic from other unicast and multicast traffic.  It is\n\
    \      OPTIONAL for this metric to avoid losing any generality, i.e., to\n   \
    \   make the metric also applicable to unicast measurement where there\n     \
    \ is only one receiver.\n"
- title: 7.1.3.  Metric Units
  contents:
  - "7.1.3.  Metric Units\n   The value of a Type-P-One-to-group-Delay-Vector is a\
    \ set of Type-P-\n   One-way-Delay singletons [RFC2679], that is a sequence of\
    \ times (a\n   real number in the dimension of seconds with sufficient resolution\
    \ to\n   convey the results).\n"
- title: 7.1.4.  Definition
  contents:
  - "7.1.4.  Definition\n   Given a Type-P packet sent by the source Src at time T,\
    \ and the N\n   hosts { Recv1,...,RecvN } which receive the packet at the time\
    \ {\n   T+dT1,...,T+dTn }, or the packet does not pass a receiver within a\n \
    \  specified loss threshold time, then the Type-P-One-to-group-Delay-\n   Vector\
    \ is defined as the set of the Type-P-One-way-Delay singletons\n   between Src\
    \ and each receiver with value of { dT1, dT2,...,dTn },\n   where any of the singletons\
    \ may be undefined if the packet did not\n   pass the corresponding receiver within\
    \ a specified loss threshold\n   time.\n"
- title: 7.2.  A Definition for One-to-Group Packet Loss
  contents:
  - '7.2.  A Definition for One-to-Group Packet Loss

    '
- title: 7.2.1.  Metric Name
  contents:
  - "7.2.1.  Metric Name\n   Type-P-One-to-group-Packet-Loss-Vector\n"
- title: 7.2.2.  Metric Parameters
  contents:
  - "7.2.2.  Metric Parameters\n   o  Src, the IP address of a host acting as the\
    \ source.\n   o  Recv1,..., RecvN, the IP addresses of the N hosts acting as\n\
    \      receivers.\n   o  T, a time.\n   o  Type-P, the specification of the packet\
    \ type.\n   o  Gr, the receiving group identifier, OPTIONAL.\n"
- title: 7.2.3.  Metric Units
  contents:
  - "7.2.3.  Metric Units\n   The value of a Type-P-One-to-group-Packet-Loss-Vector\
    \ is a set of\n   Type-P-One-way-Packet-Loss singletons [RFC2680].\n   o  T, time\
    \ the source packet was sent.\n   o  L1,...,LN a list of Boolean values.\n"
- title: 7.2.4.  Definition
  contents:
  - "7.2.4.  Definition\n   Given a Type-P packet sent by the source Src at T and\
    \ the N hosts,\n   Recv1,...,RecvN, the Type-P-One-to-group-Packet-Loss-Vector\
    \ is\n   defined as a set of the Type-P-One-way-Packet-Loss singletons between\n\
    \   Src and each of the receivers:\n   {T, <L1=0|1>,<L2=0|1>,..., <LN=0|1>},\n\
    \   where the Boolean value 0|1 depends on receiving the packet at a\n   particular\
    \ receiver within a loss threshold time.\n"
- title: 7.3.  A Definition for One-to-Group ipdv
  contents:
  - '7.3.  A Definition for One-to-Group ipdv

    '
- title: 7.3.1.  Metric Name
  contents:
  - "7.3.1.  Metric Name\n   Type-P-One-to-group-ipdv-Vector\n"
- title: 7.3.2.  Metric Parameters
  contents:
  - "7.3.2.  Metric Parameters\n   o  Src, the IP address of a host acting as the\
    \ source.\n   o  Recv1,..., RecvN, the IP addresses of the N hosts acting as\n\
    \      receivers.\n   o  T1, a time.\n   o  T2, a time.\n   o  ddT1, ...,ddTn,\
    \ a list of times.\n   o  Type-P, the specification of the packet type.\n   o\
    \  F, a selection function non-ambiguously defining the two packets\n      from\
    \ the stream selected for the metric.\n   o  Gr, the receiving group identifier.\
    \  The parameter Gr is the\n      multicast group address if the measured packets\
    \ are transmitted\n      over IP multicast.  This parameter is to differentiate\
    \ the\n      measured traffic from other unicast and multicast traffic.  It is\n\
    \      OPTIONAL in the metric to avoid losing any generality, i.e., to\n     \
    \ make the metric also applicable to unicast measurement where there\n      is\
    \ only one receiver.\n"
- title: 7.3.3.  Metric Units
  contents:
  - "7.3.3.  Metric Units\n   The value of a Type-P-One-to-group-ipdv-Vector is a\
    \ set of Type-P-\n   One-way-ipdv singletons [RFC3393].\n"
- title: 7.3.4.  Definition
  contents:
  - "7.3.4.  Definition\n   Given a Type-P packet stream, Type-P-One-to-group-ipdv-Vector\
    \ is\n   defined for two packets transferred from the source Src to the N\n  \
    \ hosts {Recv1,...,RecvN }, which are selected by the selection\n   function F\
    \ as the difference between the value of the Type-P-One-to-\n   group-Delay-Vector\
    \ from Src to { Recv1,..., RecvN } at time T1 and\n   the value of the Type-P-One-to-group-Delay-Vector\
    \ from Src to {\n   Recv1,...,RecvN } at time T2.  T1 is the wire-time at which\
    \ Src sent\n   the first bit of the first packet, and T2 is the wire-time at which\n\
    \   Src sent the first bit of the second packet.  This metric is derived\n   from\
    \ the Type-P-One-to-group-Delay-Vector metric.\n   For a set of real numbers {ddT1,...,ddTn},\
    \ the Type-P-One-to-group-\n   ipdv-Vector from Src to { Recv1,...,RecvN } at\
    \ T1, T2 is\n   {ddT1,...,ddTn} means that Src sent two packets, the first at\
    \ wire-\n   time T1 (first bit), and the second at wire-time T2 (first bit) and\n\
    \   the packets were received by { Recv1,...,RecvN } at wire-time {dT1+\n   T1,...,dTn+T1}(last\
    \ bit of the first packet), and at wire-time {dT'1+\n   T2,...,dT'n+T2} (last\
    \ bit of the second packet), and that {dT'1-\n   dT1,...,dT'n-dTn} ={ddT1,...,ddTn}.\n\
    \   For any pair of selected packets, the difference dT'n-dTn is\n   undefined\
    \ if:\n   o  the delay dTn to Receiver n is undefined, OR\n   o  the delay dT'n\
    \ to Receiver n is undefined.\n"
- title: 8.  One-to-Group Sample Statistics
  contents:
  - "8.  One-to-Group Sample Statistics\n   The one-to-group metrics defined above\
    \ are directly achieved by\n   collecting relevant unicast one-way metrics measurements\
    \ results and\n   by gathering them per group of receivers.  They produce network\n\
    \   performance information that guides engineers toward potential\n   problems\
    \ that may have happened on any branch of a multicast routing\n   tree.\n   The\
    \ results of these metrics are not directly usable to present the\n   performance\
    \ of a group because each result is made of a huge number\n   of singletons that\
    \ are difficult to read and analyze.  As an example,\n   delays are not comparable\
    \ because the distance between receiver and\n   sender differs.  Furthermore,\
    \ they don't capture relative performance\n   situations in a multiparty communication.\n\
    \   From the performance point of view, the multiparty communication\n   services\
    \ not only require the support of absolute performance\n   information but also\
    \ information on \"relative performance\".\n   \"Relative performance\" means\
    \ the difference between absolute\n   performance of all users.  Directly using\
    \ the one-way metrics cannot\n   present the relative performance situation. \
    \ However, if we use the\n   variations of all users' one-way parameters, we can\
    \ have new metrics\n   to measure the difference of the absolute performance and\
    \ hence\n   provide the threshold value of relative performance that a multiparty\n\
    \   service might demand.  A very good example of the high relative\n   performance\
    \ requirement is online gaming.  A very small difference in\n   delay might result\
    \ in failure in the game.  We have to use multicast-\n   specific statistic metrics\
    \ to define the relative delay required by\n   online gaming.  There are many\
    \ other services, e.g., online biding,\n   online stock market, etc., that require\
    \ multicast metrics in order to\n   evaluate the network against their requirements.\
    \  Therefore, we can\n   see the importance of new, multicast specific, statistic\
    \ metrics to\n   feed this need.\n   We might also use some one-to-group statistic\
    \ conceptions to present\n   and report the group performance and relative performance\
    \ to save the\n   report transmission bandwidth.  Statistics have been defined\
    \ for One-\n   way metrics in corresponding RFCs.  They provide the foundation\
    \ of\n   definition for performance statistics.  For instance, there are\n   definitions\
    \ for minimum and maximum one-way delay in [RFC2679].\n   However, there is a\
    \ dramatic difference between the statistics for\n   one-to-one communications\
    \ and for one-to-many communications.  The\n   former one only has statistics\
    \ over the time dimension while the\n   later one can have statistics over both\
    \ time and space dimensions.\n   This space dimension is introduced by the Matrix\
    \ concept as\n   illustrated in Figure 4.  For a Matrix M, each row is a set of\
    \ one-\n   way singletons spreading over the time dimension and each column is\n\
    \   another set of One-way singletons spreading over the space dimension.\n  \
    \          Receivers\n             Space\n               ^\n             1 | \
    \   / R1dT1   R1dT2     R1dT3 ... R1dTk \\\n               |   |             \
    \                        |\n             2 |   |  R2dT1   R2dT2     R2dT3 ...\
    \ R2dTk  |\n               |   |                                     |\n     \
    \        3 |   |  R3dT1   R3dT2     R3dT3 ... R3dTk  |\n             . |   | \
    \                                    |\n             . |   |                 \
    \                    |\n             . |   |                                 \
    \    |\n             n |    \\ RndT1   RndT2     RndT3 ... RndTk /\n         \
    \      +--------------------------------------------> time\n              T0\n\
    \                         Figure 4: Matrix M (n*m)\n   In Matrix M, each element\
    \ is a one-way delay singleton.  Each column\n   is a delay vector.  It contains\
    \ the one-way delays of the same packet\n   observed at n points of interest.\
    \  It implies the geographical factor\n   of the performance within a group. \
    \ Each row is a set of one-way\n   delays observed during a sampling interval\
    \ at one of the points of\n   interest.  It presents the delay performance at\
    \ a receiver over the\n   time dimension.\n   Therefore, one can either calculate\
    \ statistics by rows over the space\n   dimension or by columns over the time\
    \ dimension.  It's up to the\n   operators or service providers in which dimension\
    \ they are\n   interested.  For example, a TV broadcast service provider might\
    \ want\n   to know the statistical performance of each user in a long-term run\n\
    \   to make sure their services are acceptable and stable.  While for an\n   online\
    \ gaming service provider, he might be more interested in\n   knowing if all users\
    \ are served fairly by calculating the statistics\n   over the space dimension.\
    \  This memo does not intend to recommend\n   which of the statistics are better\
    \ than the others.\n   To save the report transmission bandwidth, each point of\
    \ interest can\n   send statistics in a pre-defined time interval to the reference\
    \ point\n   rather than sending every one-way singleton it observed.  As long\
    \ as\n   an appropriate time interval is decided, appropriate statistics can\n\
    \   represent the performance in a certain accurate scale.  How to decide\n  \
    \ the time interval and how to bootstrap all points of interest and the\n   reference\
    \ point depend on applications.  For instance, applications\n   with a lower transmission\
    \ rate can have the time interval be longer,\n   and ones with higher transmission\
    \ rate can have the time interval be\n   shorter.  However, this is out of the\
    \ scope of this memo.\n   Moreover, after knowing the statistics over the time\
    \ dimension, one\n   might want to know how these statistics are distributed over\
    \ the\n   space dimension.  For instance, a TV broadcast service provider had\n\
    \   the performance Matrix M and calculated the one-way delay mean over\n   the\
    \ time dimension to obtain a delay Vector as {V1,V2,..., VN}.  He\n   then calculated\
    \ the mean of all the elements in the Vector to see\n   what level of delay he\
    \ has served to all N users.  This new delay\n   mean gives information on how\
    \ well the service has been delivered to\n   a group of users during a sampling\
    \ interval in terms of delay.  It\n   requires twice as much calculation to have\
    \ this statistic over both\n   time and space dimensions.  These kinds of statistics\
    \ are referred to\n   as 2-level statistics to distinguish them from 1-level statistics\n\
    \   calculated over either space or time dimension.  It can be easily\n   proven\
    \ that no matter over which dimension a 2-level statistic is\n   calculated first,\
    \ the results are the same.  That is, one can\n   calculate the 2-level delay\
    \ mean using the Matrix M by having the\n   1-level delay mean over the time dimension\
    \ first and then calculate\n   the mean of the obtained vector to find out the\
    \ 2-level delay mean.\n   Or, he can do the 1-level statistic calculation over\
    \ the space\n   dimension first and then have the 2-level delay mean.  Both results\n\
    \   will be exactly the same.  Therefore, when defining a 2-level\n   statistic,\
    \ there is no need to specify the order in which the\n   calculation is executed.\n\
    \   Many statistics can be defined for the proposed one-to-group metrics\n   over\
    \ the space dimension, the time dimension, or both.  This memo\n   treats the\
    \ case where a stream of packets from the Source results in\n   a sample at each\
    \ of the Receivers in the Group, and these samples are\n   each summarized with\
    \ the usual statistics employed in one-to-one\n   communication.  New statistic\
    \ definitions are presented, which\n   summarize the one-to-one statistics over\
    \ all the Receivers in the\n   Group.\n"
- title: 8.1.  Discussion on the Impact of Packet Loss on Statistics
  contents:
  - "8.1.  Discussion on the Impact of Packet Loss on Statistics\n   Packet loss does\
    \ have effects on one-way metrics and their\n   statistics.  For example, a lost\
    \ packet can result in an infinite\n   one-way delay.  It is easy to handle the\
    \ problem by simply ignoring\n   the infinite value in the metrics and in the\
    \ calculation of the\n   corresponding statistics.  However, the packet loss has\
    \ such a strong\n   impact on the statistics calculation for the one-to-group\
    \ metrics\n   that it can not be solved by the same method used for one-way\n\
    \   metrics.  This is due to the complexity of building a matrix, which\n   is\
    \ needed for calculation of the statistics proposed in this memo.\n   The situation\
    \ is that measurement results obtained by different end\n   users might have different\
    \ packet loss pattern.  For example, for\n   User1, packet A was observed to be\
    \ lost.  And for User2, packet A was\n   successfully received, but packet B was\
    \ lost.  If the method to\n   overcome the packet loss for one-way metrics is\
    \ applied, the two\n   singleton sets reported by User1 and User2 will be different\
    \ in terms\n   of the transmitted packets.  Moreover, if User1 and User2 have\
    \ a\n   different number of lost packets, the size of the results will be\n  \
    \ different.  Therefore, for the centralized calculation, the reference\n   point\
    \ will not be able to use these two results to build up the group\n   Matrix and\
    \ cannot calculate the statistics.  The extreme situation\n   being the case when\
    \ no packets arrive at any user.  One of the\n   possible solutions is to replace\
    \ the infinite/undefined delay value\n   by the average of the two adjacent values.\
    \  For example, if the\n   result reported by User1 is { R1dT1 R1dT2 R1dT3 ...\
    \  R1dTK-1 UNDEF\n   R1dTK+1...  R1MD } where \"UNDEF\" is an undefined value,\
    \ the reference\n   point can replace it by R1dTK = {(R1dTK-1)+( R1dTK+1)}/2.\
    \  Therefore,\n   this result can be used to build up the group Matrix with an\n\
    \   estimated value R1dTK.  There are other possible solutions, such as\n   using\
    \ the overall mean of the whole result to replace the infinite/\n   undefined\
    \ value, and so on.  However, this is out of the scope of\n   this memo.\n   For\
    \ the distributed calculation, the reported statistics might have\n   different\
    \ \"weight\" to present the group performance, which is\n   especially true for\
    \ delay and ipdv relevant metrics.  For example,\n   User1 calculates the Type-P-Finite-One-way-Delay-Mean\
    \ R1MD as shown\n   in Figure 7 without any packet loss, and User2 calculates\
    \ the R2MD\n   with N-2 packet loss.  The R1MD and R2MD should not be treated\
    \ with\n   equal weight because R2MD was calculated only based on two delay\n\
    \   values in the whole sample interval.  One possible solution is to use\n  \
    \ a weight factor to mark every statistic value sent by users and use\n   this\
    \ factor for further statistic calculation.\n"
- title: 8.2.  General Metric Parameters
  contents:
  - "8.2.  General Metric Parameters\n   o  Src, the IP address of a host.\n   o \
    \ G, the receiving group identifier.\n   o  N, the number of Receivers (Recv1,\
    \ Recv2, ...  RecvN).\n   o  T, a time (start of test interval).\n   o  Tf, a\
    \ time (end of test interval).\n   o  K, the number of packets sent from the source\
    \ during the test\n      interval.\n   o  J[n], the number of packets received\
    \ at a particular Receiver, n,\n      where 1<=n<=N.\n   o  lambda, a rate in\
    \ reciprocal seconds (for Poisson Streams).\n   o  incT, the nominal duration\
    \ of inter-packet interval, first bit to\n      first bit (for Periodic Streams).\n\
    \   o  T0, a time that MUST be selected at random from the interval [T,\n    \
    \  T+I] to start generating packets and taking measurements (for\n      Periodic\
    \ Streams).\n   o  TstampSrc, the wire-time of the packet as measured at MP(Src)\
    \ (the\n      Source Measurement Point).\n   o  TstampRecv, the wire-time of the\
    \ packet as measured at MP(Recv),\n      assigned to packets that arrive within\
    \ a \"reasonable\" time.\n   o  Tmax, a maximum waiting time for packets at the\
    \ destination, set\n      sufficiently long to disambiguate packets with long\
    \ delays from\n      packets that are discarded (lost); thus, the distribution\
    \ of delay\n      is not truncated.\n   o  dT, shorthand notation for a one-way\
    \ delay singleton value.\n   o  L, shorthand notation for a one-way loss singleton\
    \ value, either\n      zero or one, where L=1 indicates loss and L=0 indicates\
    \ arrival at\n      the destination within TstampSrc + Tmax, may be indexed over\
    \ n\n      Receivers.\n   o  DV, shorthand notation for a one-way delay variation\
    \ singleton\n      value.\n"
- title: 8.3.  One-to-Group Delay Statistics
  contents:
  - "8.3.  One-to-Group Delay Statistics\n   This section defines the overall one-way\
    \ delay statistics for a\n   receiver and for an entire group as illustrated by\
    \ the matrix below.\n      Recv    /----------- Sample -------------\\   Stats\
    \      Group Stat\n       1      R1dT1   R1dT2     R1dT3 ... R1dTk    R1MD  \\\
    \n                                                          |\n       2      R2dT1\
    \   R2dT2     R2dT3 ... R2dTk    R2MD   |\n                                  \
    \                        |\n       3      R3dT1   R3dT2     R3dT3 ... R3dTk  \
    \  R3MD    > Group Delay\n       .                                           \
    \       |\n       .                                                  |\n     \
    \  .                                                  |\n       n      RndT1 \
    \  RndT2     RndT3 ... RndTk    RnMD  /\n                                    \
    \             Receiver-n\n                                                   Delay\n\
    \                     Figure 5: One-to-Group Mean Delay\n   Statistics are computed\
    \ on the finite one-way delays of the matrix\n   above.\n   All one-to-group delay\
    \ statistics are expressed in seconds with\n   sufficient resolution to convey\
    \ three significant digits.\n"
- title: 8.3.1.  Type-P-One-to-group-Receiver-n-Mean-Delay
  contents:
  - "8.3.1.  Type-P-One-to-group-Receiver-n-Mean-Delay\n   This section defines Type-P-One-to-group-Receiver-n-Mean-Delay,\
    \ the\n   Delay Mean, at each Receiver N, also named RnMD.\n   We obtain the value\
    \ of Type-P-One-way-Delay singleton for all packets\n   sent during the test interval\
    \ at each Receiver (Destination), as per\n   [RFC2679].  For each packet that\
    \ arrives within Tmax of its sending\n   time, TstampSrc, the one-way delay singleton\
    \ (dT) will be the finite\n   value TstampRecv[i] - TstampSrc[i] in units of seconds.\
    \  Otherwise,\n   the value of the singleton is Undefined.\n                 \
    \          J[n]\n                           ---\n                      1    \\\
    \n           RnMD =    --- *  >  TstampRecv[i] - TstampSrc[i]\n              \
    \       J[n]  /\n                           ---\n                           i\
    \ = 1\n           Note:  RnMD value is Undefined when J[n] = 0 for all n.\n  \
    \          Figure 6: Type-P-One-to-group-Receiver-n-Mean-Delay\n   where all packets\
    \ i= 1 through J[n] have finite singleton delays.\n"
- title: 8.3.2.  Type-P-One-to-group-Mean-Delay
  contents:
  - "8.3.2.  Type-P-One-to-group-Mean-Delay\n   This section defines Type-P-One-to-group-Mean-Delay,\
    \ the Mean one-way\n   Delay calculated over the entire Group, also named GMD.\n\
    \                                         N\n                                \
    \        ---\n                                   1    \\\n                   \
    \         GMD =  - *   >   RnMD\n                                   N    /\n \
    \                                       ---\n                                \
    \        n = 1\n                 Figure 7: Type-P-One-to-group-Mean-Delay\n  \
    \ Note that the Group Mean Delay can also be calculated by summing the\n   finite\
    \ one-way delay singletons in the matrix, and dividing by the\n   number of finite\
    \ one-way delay singletons.\n"
- title: 8.3.3.   Type-P-One-to-group-Range-Mean-Delay
  contents:
  - "8.3.3.   Type-P-One-to-group-Range-Mean-Delay\n   This section defines a metric\
    \ for the Range of Mean Delays over all N\n   receivers in the Group (R1MD, R2MD...RnMD).\n\
    \   Type-P-One-to-group-Range-Mean-Delay = GRMD = max(RnMD) - min(RnMD)\n"
- title: 8.3.4.  Type-P-One-to-group-Max-Mean-Delay
  contents:
  - "8.3.4.  Type-P-One-to-group-Max-Mean-Delay\n   This section defines a metric\
    \ for the Maximum of Mean Delays over all\n   N receivers in the Group (R1MD,\
    \ R2MD,...RnMD).\n   Type-P-One-to-group-Max-Mean-Delay = GMMD = max(RnMD)\n"
- title: 8.4.  One-to-Group Packet Loss Statistics
  contents:
  - "8.4.  One-to-Group Packet Loss Statistics\n   This section defines the overall\
    \ one-way loss statistics for a\n   receiver and for an entire group as illustrated\
    \ by the matrix below.\n    Recv    /----------- Sample ----------\\   Stats \
    \    Group Stat\n      1      R1L1   R1L2     R1L3 ... R1Lk     R1LR \\\n    \
    \                                                 |\n      2      R2L1   R2L2\
    \     R2L3 ... R2Lk     R2LR  |\n                                            \
    \         |\n      3      R3L1   R3L2     R3L3 ... R3Lk     R3LR   > Group Loss\
    \ Ratio\n      .                                              |\n      .     \
    \                                         |\n      .                         \
    \                     |\n      n      RnL1   RnL2     RnL3 ... RnLk     RnLR /\n\
    \                                           Receiver-n\n                     \
    \                      Loss Ratio\n                     Figure 8: One-to-Group\
    \ Loss Ratio\n   Statistics are computed on the sample of Type-P-One-way-Packet-Loss\n\
    \   [RFC2680] of the matrix above.\n   All loss ratios are expressed in units\
    \ of packets lost to total\n   packets sent.\n"
- title: 8.4.1.  Type-P-One-to-group-Receiver-n-Loss-Ratio
  contents:
  - "8.4.1.  Type-P-One-to-group-Receiver-n-Loss-Ratio\n   Given a Matrix of loss\
    \ singletons as illustrated above, determine the\n   Type-P-One-way-Packet-Loss-Average\
    \ for the sample at each receiver,\n   according to the definitions and method\
    \ of [RFC2680].  The Type-P-\n   One-way-Packet-Loss-Average and the Type-P-One-to-group-Receiver-n-\n\
    \   Loss-Ratio, also named RnLR, are equivalent metrics.  In terms of the\n  \
    \ parameters used here, these metrics definitions can be expressed as\n      \
    \                                     K\n                                    \
    \      ---\n                                     1    \\\n                   \
    \          RnLR =  - *   >   RnLk\n                                     K    /\n\
    \                                          ---\n                             \
    \            k = 1\n            Figure 9: Type-P-One-to-group-Receiver-n-Loss-Ratio\n"
- title: 8.4.2.  Type-P-One-to-group-Receiver-n-Comp-Loss-Ratio
  contents:
  - "8.4.2.  Type-P-One-to-group-Receiver-n-Comp-Loss-Ratio\n   Usually, the number\
    \ of packets sent is used in the denominator of\n   packet loss ratio metrics.\
    \  For the comparative metrics defined here,\n   the denominator is the maximum\
    \ number of packets received at any\n   receiver for the sample and test interval\
    \ of interest.  The numerator\n   is the sum of the losses at receiver n.\n  \
    \ The Comparative Loss Ratio, also named, RnCLR, is defined as\n             \
    \                     K\n                                 ---\n              \
    \                   \\\n                                  >   Ln(k)\n        \
    \                         /\n                                 ---\n          \
    \                       k=1\n            RnCLR =  -----------------------------\n\
    \                              /    K         \\\n                           \
    \   |   ---        |\n                              |   \\          |\n      \
    \                K - Min |    >   Ln(k) |\n                              |   /\
    \          |\n                              |   ---        |\n               \
    \               \\   k=1        / N\n            Note: Ln is a set of one-way\
    \ loss values at receiver n.\n                  There is one value for each of\
    \ the K packets sent.\n         Figure 10: Type-P-One-to-group-Receiver-n-Comp-Loss-Ratio\n"
- title: 8.4.3.  Type-P-One-to-group-Loss-Ratio
  contents:
  - "8.4.3.  Type-P-One-to-group-Loss-Ratio\n   Type-P-One-to-group-Loss-Ratio, the\
    \ overall Group Loss Ratio, also\n   named GLR, is defined as:\n             \
    \                            K,N\n                                         ---\n\
    \                                   1     \\\n                            GLR\
    \ = --- *   >   Ln(k)\n                                  K*N    /\n          \
    \                               ---\n                                        k,n\
    \ = 1\n                 Figure 11: Type-P-One-to-group-Loss-Ratio\n   Where the\
    \ sum includes all of the Loss singletons, Ln(k), over the N\n   receivers and\
    \ K packets sent, in a ratio with the total packets over\n   all receivers.\n"
- title: 8.4.4.  Type-P-One-to-group-Range-Loss-Ratio
  contents:
  - "8.4.4.  Type-P-One-to-group-Range-Loss-Ratio\n   The One-to-group Loss Ratio\
    \ Range is defined as:\n   Type-P-One-to-group-Range-Loss-Ratio = max(RnLR) -\
    \ min(RnLR)\n   It is most effective to indicate the range by giving both the\
    \ maximum\n   and minimum loss ratios for the Group, rather than only reporting\
    \ the\n   difference between them.\n"
- title: 8.5.  One-to-group Delay Variation Statistics
  contents:
  - "8.5.  One-to-group Delay Variation Statistics\n   This section defines one-way\
    \ delay variation (DV) statistics for an\n   entire group as illustrated by the\
    \ matrix below.\n    Recv    /------------- Sample --------------\\   Stats\n\
    \     1      R1ddT1   R1ddT2     R1ddT3 ... R1ddTk   R1DV  \\\n              \
    \                                             |\n     2      R2ddT1   R2ddT2 \
    \    R2ddT3 ... R2ddTk   R2DV   |\n                                          \
    \                 |\n     3      R3ddT1   R3ddT2     R3ddT3 ... R3ddTk   R3DV\
    \    > Group Stat\n     .                                                    \
    \ |\n     .                                                     |\n     .    \
    \                                                 |\n     n      RnddT1   RnddT2\
    \     RnddT3 ... RnddTk   RnDV  /\n           Figure 12: One-to-group Delay Variation\
    \ Matrix (DVMa)\n   Statistics are computed on the sample of Type-P-One-way-ipdv\n\
    \   singletons of the group delay variation matrix above where RnddTk is\n   the\
    \ Type-P-One-way-ipdv singleton evaluated at Receiver n for the\n   packet k and\
    \ where RnDV is the point-to-point one-way packet delay\n   variation for Receiver\
    \ n.\n   All One-to-group delay variation statistics are expressed in seconds\n\
    \   with sufficient resolution to convey three significant digits.\n"
- title: 8.5.1.  Type-P-One-to-group-Range-Delay-Variation
  contents:
  - "8.5.1.  Type-P-One-to-group-Range-Delay-Variation\n   This section defines a\
    \ metric for the Range of Delay Variation over\n   all N receivers in the Group.\n\
    \   Maximum DV and minimum DV over all receivers summarize the\n   performance\
    \ over the Group (where DV is a point-to-point metric).\n   For each receiver,\
    \ the DV is usually expressed as the 1-10^(-3)\n   quantile of one-way delay minus\
    \ the minimum one-way delay.\n   Type-P-One-to-group-Range-Delay-Variation = GRDV\
    \ =\n   = max(RnDV) - min(RnDV) for all n receivers\n   This range is determined\
    \ from the minimum and maximum values of the\n   point-to-point one-way IP Packet\
    \ Delay Variation for the set of\n   Destinations in the group and a population\
    \ of interest, using the\n   Packet Delay Variation expressed as the 1-10^-3 quantile\
    \ of one-way\n   delay minus the minimum one-way delay.  If a more demanding service\n\
    \   is considered, one alternative is to use the 1-10^-5 quantile, and in\n  \
    \ either case, the quantile used should be recorded with the results.\n   Both\
    \ the minimum and the maximum delay variation are recorded, and\n   both values\
    \ are given to indicate the location of the range.\n"
- title: '9.  Measurement Methods: Scalability and Reporting'
  contents:
  - "9.  Measurement Methods: Scalability and Reporting\n   Virtually all the guidance\
    \ on measurement processes supplied by the\n   earlier IPPM RFCs (such as [RFC2679]\
    \ and [RFC2680]) for one-to-one\n   scenarios is applicable here in the spatial\
    \ and multiparty\n   measurement scenario.  The main difference is that the spatial\
    \ and\n   multiparty configurations require multiple points of interest where\
    \ a\n   stream of singletons will be collected.  The amount of information\n \
    \  requiring storage grows with both the number of metrics and the\n   points\
    \ of interest, so the scale of the measurement architecture\n   multiplies the\
    \ number of singleton results that must be collected and\n   processed.\n   It\
    \ is possible that the architecture for results collection involves\n   a single\
    \ reference point with connectivity to all the points of\n   interest.  In this\
    \ case, the number of points of interest determines\n   both storage capacity\
    \ and packet transfer capacity of the host acting\n   as the reference point.\
    \  However, both the storage and transfer\n   capacity can be reduced if the points\
    \ of interest are capable of\n   computing the summary statistics that describe\
    \ each measurement\n   interval.  This is consistent with many operational monitoring\n\
    \   architectures today, where even the individual singletons may not be\n   stored\
    \ at each point of interest.\n   In recognition of the likely need to minimize\
    \ the form of the results\n   for storage and communication, the Group metrics\
    \ above have been\n   constructed to allow some computations on a per-Receiver\
    \ basis.  This\n   means that each Receiver's statistics would normally have an\
    \ equal\n   weight with all other Receivers in the Group (regardless of the\n\
    \   number of packets received).\n"
- title: 9.1.  Computation Methods
  contents:
  - "9.1.  Computation Methods\n   The scalability issue can be raised when there\
    \ are thousands of\n   points of interest in a group who are trying to send back\
    \ the\n   measurement results to the reference point for further processing and\n\
    \   analysis.  The points of interest can send either the whole measured\n   sample\
    \ or only the calculated statistics.  The former is a\n   centralized statistic\
    \ calculation method and the latter is a\n   distributed statistic calculation\
    \ method.  The sample should include\n   all metrics parameters, the values, and\
    \ the corresponding sequence\n   numbers.  The transmission of the whole sample\
    \ can cost much more\n   bandwidth than the transmission of the statistics that\
    \ should include\n   all statistic parameters specified by policies and the additional\n\
    \   information about the whole sample, such as the size of the sample,\n   the\
    \ group address, the address of the point of interest, the ID of\n   the sample\
    \ session, and so on.  Apparently, the centralized\n   calculation method can\
    \ require much more bandwidth than the\n   distributed calculation method when\
    \ the sample size is big.  This is\n   especially true when the measurement has\
    \ a very large number of the\n   points of interest.  It can lead to a scalability\
    \ issue at the\n   reference point by overloading the network resources.\n   The\
    \ distributed calculation method can save much more bandwidth and\n   mitigate\
    \ issues arising from scalability at the reference point side.\n   However, it\
    \ may result in a loss of information.  As not all measured\n   singletons are\
    \ available for building up the group matrix, the real\n   performance over time\
    \ can be hidden from the result.  For example,\n   the loss pattern can be missed\
    \ by simply accepting the loss ratio.\n   This tradeoff between bandwidth consumption\
    \ and information\n   acquisition has to be taken into account when designing\
    \ the\n   measurement approach.\n   One possible solution could be to transmit\
    \ the statistic parameters\n   to the reference point first to obtain the general\
    \ information of the\n   group performance.  If detailed results are required,\
    \ the reference\n   point should send the requests to the points of interest,\
    \ which could\n   be particular ones or the whole group.  This procedure can happen\
    \ in\n   the off peak time and can be well scheduled to avoid delivery of too\n\
    \   many points of interest at the same time.  Compression techniques can\n  \
    \ also be used to minimize the bandwidth required by the transmission.\n   This\
    \ could be a measurement protocol to report the measurement\n   results.  However,\
    \ this is out of the scope of this memo.\n"
- title: 9.2.  Measurement
  contents:
  - "9.2.  Measurement\n   To prevent any bias in the result, the configuration of\
    \ a one-to-many\n   measure must take into consideration that more packets will\
    \ be routed\n   than sent (copies of a packet sent are expected to arrive at many\n\
    \   destination points) and select a test packet rate that will not\n   impact\
    \ the network performance.\n"
- title: 9.3.  Effect of Time and Space Aggregation Order on Stats
  contents:
  - "9.3.  Effect of Time and Space Aggregation Order on Stats\n   This section presents\
    \ the impact of the aggregation order on the\n   scalability of the reporting\
    \ and of the computation.  It makes the\n   hypothesis that receivers are not\
    \ co-located and that results are\n   gathered in a point of reference for further\
    \ usages.\n   Multimetric samples are represented in a matrix as illustrated below\n\
    \      Point of\n      Interest\n        1      R1S1   R1S1     R1S1 ... R1Sk\
    \    \\\n                                                 |\n        2      R2S1\
    \   R2S2     R2S3 ... R2Sk     |\n                                           \
    \      |\n        3      R3S1   R3S2     R3S3 ... R3Sk      >  Sample over Space\n\
    \        .                                        |\n        .               \
    \                         |\n        .                                       \
    \ |\n        n      RnS1   RnS2     RnS3 ... RnSk    /\n               S1M   \
    \ S2M      S3M  ... SnM     Stats over Space\n               \\------------- \
    \ ------------/\n                             \\/\n                 Stats over\
    \ Space and Time\n       Figure 13: Impact of Space Aggregation on Multimetrics\
    \ Stats\n   Two methods are available to compute statistics on a matrix:\n   o\
    \  Method 1: The statistic metric is computed over time and then over\n      space;\
    \ or\n   o  Method 2: The statistic metric is computed over space and then\n \
    \     over time.\n   These two methods differ only by the order of the aggregation.\
    \  The\n   order does not impact the computation resources required.  It does\n\
    \   not change the value of the result.  However, it impacts severely the\n  \
    \ minimal volume of data to report:\n   o  Method 1: Each point of interest periodically\
    \ computes statistics\n      over time to lower the volume of data to report.\
    \  They are\n      reported to the reference point for subsequent computations\
    \ over\n      the spatial dimension.  This volume no longer depends on the\n \
    \     number of samples.  It is only proportional to the computation\n      period.\n\
    \   o  Method 2: The volume of data to report is proportional to the\n      number\
    \ of samples.  Each sample, RiSi, must be reported to the\n      reference point\
    \ for computing statistic over space and statistic\n      over time.  The volume\
    \ increases with the number of samples.  It\n      is proportional to the number\
    \ of test packets;\n   Method 2 has severe drawbacks in terms of security and\
    \ dimensioning:\n   o  Increasing the rate of the test packets may result in a\
    \ Denial of\n      Service (DoS) toward the points of reference;\n   o  The dimensioning\
    \ of a measurement system is quite impossible to\n      validate because any increase\
    \ of the rate of the test packets will\n      increase the bandwidth requested\
    \ to collect the raw results.\n   The computation period over time period (commonly\
    \ named the\n   aggregation period) provides the reporting side with a control\
    \ of\n   various collecting aspects such as bandwidth, computation, and\n   storage\
    \ capacities.  So this document defines metrics based on method\n   1.\n"
- title: 9.3.1.  Impact on Spatial Statistics
  contents:
  - "9.3.1.  Impact on Spatial Statistics\n   Two methods are available to compute\
    \ spatial statistics:\n   o  Method 1: Spatial segment metrics and statistics\
    \ are preferably\n      computed over time for each points of interest;\n   o\
    \  Method 2: Vectors metrics are intrinsically instantaneous space\n      metrics,\
    \ which must be reported using Method 2 whenever\n      instantaneous metrics\
    \ information is needed.\n"
- title: 9.3.2.  Impact on One-to-Group Statistics
  contents:
  - "9.3.2.  Impact on One-to-Group Statistics\n   Two methods are available to compute\
    \ group statistics:\n   o  Method 1: Figure 5 and Figure 8 illustrate the method.\
    \  The one-\n      to-one statistic is computed per interval of time before the\n\
    \      computation of the mean over the group of receivers.\n   o  Method 2: Figure\
    \ 13 presents the second method.  The metric is\n      computed over space and\
    \ then over time.\n"
- title: 10.  Manageability Considerations
  contents:
  - "10.  Manageability Considerations\n   This section defines the reporting of all\
    \ the metrics introduced in\n   the document.\n   Information models of spatial\
    \ metrics and of one-to-group metrics are\n   similar except that points of interests\
    \ of spatial vectors MUST be\n   ordered.\n   The complexity of the reporting\
    \ relies on the number of points of\n   interest.\n"
- title: 10.1.  Reporting Spatial Metric
  contents:
  - "10.1.  Reporting Spatial Metric\n   The reporting of spatial metrics shares a\
    \ lot of aspects with RFC\n   2679 and RFC 2680.  New ones are common to all the\
    \ definitions and\n   are mostly related to the reporting of the path and of methodology\n\
    \   parameters that may bias raw results analysis.  This section presents\n  \
    \ these specific parameters and then lists exhaustively the parameters\n   that\
    \ SHOULD be reported.\n"
- title: 10.1.1.  Path
  contents:
  - "10.1.1.  Path\n   End-to-end metrics can't determine the path of the measure\
    \ despite\n   the fact that IPPM RFCs recommend it be reported (see section 3.8.4\n\
    \   of [RFC2679]).  Spatial metrics vectors provide this path.  The\n   report\
    \ of a spatial vector MUST include the points of interests\n   involved: the sub-set\
    \ of the routers of the path participating to the\n   instantaneous measure.\n"
- title: 10.1.2.  Host Order
  contents:
  - "10.1.2.  Host Order\n   A spatial vector MUST order the points of interest according\
    \ to their\n   order in the path.  The ordering MAY be based on information from\
    \ the\n   TTL in IPv4, the Hop Limit in IPv6, or the corresponding information\n\
    \   in MPLS.\n   The report of a spatial vector MUST include the ordered list\
    \ of the\n   hosts involved in the instantaneous measure.\n"
- title: 10.1.3.  Timestamping Bias
  contents:
  - "10.1.3.  Timestamping Bias\n   The location of the point of interest inside a\
    \ node influences the\n   timestamping skew and accuracy.  As an example, consider\
    \ that some\n   internal machinery delays the timestamping up to three milliseconds;\n\
    \   then the minimal uncertainty reported be 3 ms if the internal delay\n   is\
    \ unknown at the time of the timestamping.\n   The report of a spatial vector\
    \ MUST include the uncertainty of the\n   timestamping compared to wire-time.\n"
- title: 10.1.4.  Reporting Spatial One-Way Delay
  contents:
  - "10.1.4.  Reporting Spatial One-Way Delay\n   The reporting includes information\
    \ to report for one-way delay as\n   section 3.6 of [RFC2679].  The same applies\
    \ for packet loss and ipdv.\n"
- title: 10.2.  Reporting One-to-Group Metric
  contents:
  - "10.2.  Reporting One-to-Group Metric\n   All reporting rules described in [RFC2679]\
    \ and [RFC2680] apply to the\n   corresponding One-to-group metrics.  The following\
    \ are specific\n   parameters that SHOULD be reported.\n"
- title: 10.2.1.  Path
  contents:
  - "10.2.1.  Path\n   As suggested by [RFC2679] and [RFC2680], the path traversed\
    \ by the\n   packet SHOULD be reported, if possible.  For One-to-group metrics,\n\
    \   the path tree between the source and the destinations or the set of\n   paths\
    \ between the source and each destination SHOULD be reported.\n   The path tree\
    \ might not be as valuable as individual paths because an\n   incomplete path\
    \ might be difficult to identify in the path tree.  For\n   example, how many\
    \ points of interest are reached by a packet\n   traveling along an incomplete\
    \ path?\n"
- title: 10.2.2.  Group Size
  contents:
  - "10.2.2.  Group Size\n   The group size SHOULD be reported as one of the critical\
    \ management\n   parameters.  One-to-group metrics, unlike spatial metrics, don't\n\
    \   require the ordering of the points of interests because group members\n  \
    \ receive the packets in parallel.\n"
- title: 10.2.3.  Timestamping Bias
  contents:
  - "10.2.3.  Timestamping Bias\n   It is the same as described in section 10.1.3.\n"
- title: 10.2.4.  Reporting One-to-group One-way Delay
  contents:
  - "10.2.4.  Reporting One-to-group One-way Delay\n   It is the same as described\
    \ in section 10.1.4.\n"
- title: 10.2.5.  Measurement Method
  contents:
  - "10.2.5.  Measurement Method\n   As explained in section 9, the measurement method\
    \ will have impact on\n   the analysis of the measurement result.  Therefore,\
    \ it SHOULD be\n   reported.\n"
- title: 10.3.  Metric Identification
  contents:
  - "10.3.  Metric Identification\n   IANA assigns each metric defined by the IPPM\
    \ WG a unique identifier\n   as per [RFC4148] in the IANA-IPPM-METRICS-REGISTRY-MIB.\n"
- title: 10.4.  Information Model
  contents:
  - "10.4.  Information Model\n   This section presents the elements of information\
    \ and the usage of\n   the information reported for network performance analysis.\
    \  It is out\n   of the scope of this section to define how the information is\n\
    \   reported.\n   The information model is built with pieces of information introduced\n\
    \   and explained in the sections of [RFC2679] , [RFC2680] , [RFC3393],\n   and\
    \ [RFC3432] that define the IPPM metrics and from any of the\n   sections named\
    \ \"Reporting the metric\" , \"Methodology\", and \"Errors\n   and Uncertainties\"\
    \ whenever they exist in these documents.\n   The following are the elements of\
    \ information taken from end-to-end\n   metrics definitions referred to in this\
    \ memo and from spatial and\n   multicast metrics it defines:\n   o  Packet_type,\
    \ the Type-P of test packets (Type-P).\n   o  Packet_length, a packet length in\
    \ bits (L).\n   o  Src_host, the IP address of the sender.\n   o  Dst_host, the\
    \ IP address of the receiver.\n   o  Hosts_series: <H1, H2,..., Hn>, a list of\
    \ points of interest\n      participating in the instantaneous measure.  They\
    \ are routers in\n      the case of spatial metrics or receivers in the case of\
    \ one-to-\n      group metrics.\n   o  Loss_threshold, the threshold of infinite\
    \ delay.\n   o  Systematic_error, constant delay between wire-time and\n     \
    \ timestamping.\n   o  Calibration_error, maximal uncertainty.\n   o  Src_time,\
    \ the sending time for a measured packet.\n   o  Dst_time, the receiving time\
    \ for a measured packet.\n   o  Result_status, an indicator of usability of a\
    \ result 'Resource\n      exhaustion' 'infinite', 'lost'.\n   o  Delays_series,\
    \ <dT1,..., dTn>, a list of delays.\n   o  Losses_series, <B1, B2, ..., Bi, ...,\
    \ Bn>, a list of Boolean\n      values (spatial) or a set of Boolean values (one-to-group).\n\
    \   o  Result_status_series, a list of results status.\n   o  dT, a delay.\n \
    \  o  Singleton_number, a number of singletons.\n   o  Observation_duration, an\
    \ observation duration.\n   o  metric_identifier.\n   The following is the information\
    \ of each vector that SHOULD be\n   available to compute samples:\n   o  Packet_type;\n\
    \   o  Packet_length;\n   o  Src_host, the sender of the packet;\n   o  Dst_host,\
    \ the receiver of the packet, apply only for spatial\n      vectors;\n   o  Hosts_series,\
    \ not ordered for one-to-group;\n   o  Src_time, the sending time for the measured\
    \ packet;\n   o  dT, the end-to-end one-way delay for the measured packet, apply\n\
    \      only for spatial vectors;\n   o  Delays_series, apply only for delays and\
    \ ipdv vector, not ordered\n      for one-to-group;\n   o  Losses_series, apply\
    \ only for packets loss vector, not ordered for\n      one-to-group;\n   o  Result_status_series;\n\
    \   o  Observation_duration, the difference between the time of the last\n   \
    \   singleton and the time of the first singleton.\n   Following is the context\
    \ information (measure, points of interests)\n   that SHOULD be available to compute\
    \ samples:\n   o  Loss threshold;\n   o  Systematic error, constant delay between\
    \ wire-time and\n      timestamping;\n   o  Calibration error, maximal uncertainty.\n\
    \   A spatial or a one-to-group sample is a collection of singletons\n   giving\
    \ the performance from the sender to a single point of interest.\n   The following\
    \ is the information that SHOULD be available for each\n   sample to compute statistics:\n\
    \   o  Packet_type;\n   o  Packet_length;\n   o  Src_host, the sender of the packet;\n\
    \   o  Dst_host, the receiver of the packet;\n   o  Start_time, the sending time\
    \ of the first packet;\n   o  Delays_series, apply only for delays and ipdv samples;\n\
    \   o  Losses_series, apply only for packets loss samples;\n   o  Result_status_series;\n\
    \   o  Observation_duration, the difference between the time of the last\n   \
    \   singleton of the last sample and the time of the first singleton\n      of\
    \ the first sample.\n   The following is the context information (measure, points\
    \ of\n   interests) that SHOULD be available to compute statistics:\n   o  Loss\
    \ threshold;\n   o  Systematic error, constant delay between wire-time and\n \
    \     timestamping;\n   o  Calibration error, maximal uncertainty;\n   The following\
    \ is the information of each statistic that SHOULD be\n   reported:\n   o  Result;\n\
    \   o  Start_time;\n   o  Duration;\n   o  Result_status;\n   o  Singleton_number,\
    \ the number of singletons on which the statistic\n      is computed;\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   Spatial and one-to-group metrics are defined\
    \ on the top of end-to-end\n   metrics.  Security considerations discussed in\
    \ the one-way delay\n   metrics definitions of [RFC2679], in packet loss metrics\
    \ definitions\n   of [RFC2680] and in IPDV metrics definitions of [RFC3393] and\n\
    \   [RFC3432] apply to metrics defined in this memo.\n   Someone may spoof the\
    \ identity of a point of interest identity and\n   intentionally send corrupt\
    \ results in order to remotely orient the\n   traffic engineering decisions.\n\
    \   A point of interest could intentionally corrupt its results in order\n   to\
    \ remotely orient the traffic engineering decisions.\n"
- title: 11.1.  Spatial Metrics
  contents:
  - "11.1.  Spatial Metrics\n   Malicious generation of packets that systematically\
    \ match the hash\n   function used to detect the packets may lead to a DoS attack\
    \ toward\n   the point of reference.\n   Spatial measurement results carry the\
    \ performance of individual\n   segments of the path and the identity of nodes.\
    \  An attacker may\n   infer from this information the points of weakness of a\
    \ network\n   (e.g., congested node) that would require the least amount of\n\
    \   additional attacking traffic to exploit.  Therefore, monitoring\n   information\
    \ should be carried in a way that prevents unintended\n   recipients from inspecting\
    \ the measurement reports.  A\n   straightforward solution is to restrict access\
    \ to the reports using\n   encrypted sessions or secured networks.\n"
- title: 11.2.  One-to-Group Metrics
  contents:
  - "11.2.  One-to-Group Metrics\n   Reporting of measurement results from a huge\
    \ number of probes may\n   overload reference point resources (network, network\
    \ interfaces,\n   computation capacities, etc.).\n   The configuration of a measurement\
    \ must take into consideration that\n   implicitly more packets will be routed\
    \ than sent and select a test\n   packet rate accordingly.  Collecting statistics\
    \ from a huge number of\n   probes may overload any combination of the network\
    \ to which the\n   measurement controller is attached, measurement controller\
    \ network\n   interfaces, and measurement controller computation capacities.\n\
    \   One-to-group metric measurements should consider using source\n   authentication\
    \ protocols, standardized in the MSEC group, to avoid\n   fraud packet in the\
    \ sampling interval.  The test packet rate could be\n   negotiated before any\
    \ measurement session to avoid denial-of-service\n   attacks.\n   A point of interest\
    \ could intentionally degrade its results in order\n   to remotely increase the\
    \ quality of the network on the branches of\n   the multicast tree to which it\
    \ is connected.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   Lei would like to acknowledge Professor Zhili Sun from\
    \ CCSR,\n   University of Surrey, for his instruction and helpful comments on\n\
    \   this work.\n"
- title: 13.  IANA Considerations
  contents:
  - "13.  IANA Considerations\n   Metrics defined in this memo have been registered\
    \ in the IANA IPPM\n   METRICS REGISTRY as described in the initial version of\
    \ the registry\n   [RFC4148]:\n   IANA has registered the following metrics in\
    \ the IANA-IPPM-METRICS-\n   REGISTRY-MIB:\n   ietfSpatialOneWayDelayVector OBJECT-IDENTITY\n\
    \      STATUS current\n      DESCRIPTION\n         \"Type-P-Spatial-One-way-Delay-Vector\"\
    \n      REFERENCE\n         \"RFC 5644, section 5.1.\"\n      := { ianaIppmMetrics\
    \ 52 }\n   ietfSpatialPacketLossVector OBJECT-IDENTITY\n      STATUS current\n\
    \      DESCRIPTION\n         \"Type-P-Spatial-Packet-Loss-Vector\"\n      REFERENCE\n\
    \         \"RFC 5644, section 5.2.\"\n      := { ianaIppmMetrics 53 }\n   ietfSpatialOneWayIpdvVector\
    \ OBJECT-IDENTITY\n      STATUS current\n      DESCRIPTION\n         \"Type-P-Spatial-One-way-ipdv-Vector\"\
    \n      REFERENCE\n         \"RFC 5644, section 5.3.\"\n      := { ianaIppmMetrics\
    \ 54 }\n   ietfSegmentOneWayDelayStream OBJECT-IDENTITY\n      STATUS current\n\
    \      DESCRIPTION\n         \"Type-P-Segment-One-way-Delay-Stream\"\n      REFERENCE\n\
    \         \"RFC 5644, section 6.1.\"\n      := { ianaIppmMetrics 55 }\n   ietfSegmentPacketLossStream\
    \ OBJECT-IDENTITY\n      STATUS current\n      DESCRIPTION\n         \"Type-P-Segment-Packet-Loss-Stream\"\
    \n      REFERENCE\n         \"RFC 5644, section 6.2.\"\n      := { ianaIppmMetrics\
    \ 56 }\n   ietfSegmentIpdvPrevStream OBJECT-IDENTITY\n      STATUS current\n \
    \     DESCRIPTION\n         \"Type-P-Segment-ipdv-prev-Stream\"\n      REFERENCE\n\
    \         \"RFC 5644, section 6.3.\"\n      := { ianaIppmMetrics 57 }\n   ietfSegmentIpdvMinStream\
    \ OBJECT-IDENTITY\n      STATUS current\n      DESCRIPTION\n         \"Type-P-Segment-ipdv-min-Stream\"\
    \n      REFERENCE\n         \"RFC 5644, section 6.4.\"\n      := { ianaIppmMetrics\
    \ 58 }\n   -- One-to-group metrics\n   ietfOneToGroupDelayVector OBJECT-IDENTITY\n\
    \      STATUS current\n      DESCRIPTION\n         \"Type-P-One-to-group-Delay-Vector\"\
    \n      REFERENCE\n         \"RFC 5644, section 7.1.\"\n      := { ianaIppmMetrics\
    \ 59 }\n   ietfOneToGroupPacketLossVector OBJECT-IDENTITY\n      STATUS current\n\
    \      DESCRIPTION\n         \"Type-P-One-to-group-Packet-Loss-Vector\"\n    \
    \  REFERENCE\n         \"RFC 5644, section 7.2.\"\n      := { ianaIppmMetrics\
    \ 60 }\n   ietfOneToGroupIpdvVector OBJECT-IDENTITY\n      STATUS current\n  \
    \    DESCRIPTION\n         \"Type-P-One-to-group-ipdv-Vector\"\n      REFERENCE\n\
    \         \"RFC 5644, section 7.3.\"\n      := { ianaIppmMetrics 61 }\n   -- One\
    \ to group statistics\n   --\n   ietfOnetoGroupReceiverNMeanDelay OBJECT-IDENTITY\n\
    \      STATUS current\n      DESCRIPTION\n         \"Type-P-One-to-group-Receiver-n-Mean-Delay\"\
    \n      REFERENCE\n         \"RFC 5644, section 8.3.1.\"\n      := { ianaIppmMetrics\
    \ 62 }\n   ietfOneToGroupMeanDelay OBJECT-IDENTITY\n      STATUS current\n   \
    \   DESCRIPTION\n         \"Type-P-One-to-group-Mean-Delay\"\n      REFERENCE\n\
    \         \"RFC 5644, section 8.3.2.\"\n      := { ianaIppmMetrics 63 }\n   ietfOneToGroupRangeMeanDelay\
    \ OBJECT-IDENTITY\n      STATUS current\n      DESCRIPTION\n         \"Type-P-One-to-group-Range-Mean-Delay\"\
    \n      REFERENCE\n         \"RFC 5644, section 8.3.3.\"\n      := { ianaIppmMetrics\
    \ 64 }\n   ietfOneToGroupMaxMeanDelay OBJECT-IDENTITY\n      STATUS current\n\
    \      DESCRIPTION\n         \"Type-P-One-to-group-Max-Mean-Delay\"\n      REFERENCE\n\
    \         \"RFC 5644, section 8.3.4.\"\n      := { ianaIppmMetrics 65 }\n   ietfOneToGroupReceiverNLossRatio\
    \ OBJECT-IDENTITY\n      STATUS current\n      DESCRIPTION\n         \"Type-P-One-to-group-Receiver-n-Loss-Ratio\"\
    \n      REFERENCE\n         \"RFC 5644, section 8.4.1.\"\n      := { ianaIppmMetrics\
    \ 66 }\n   --\n   ietfOneToGroupReceiverNCompLossRatio OBJECT-IDENTITY\n     \
    \ STATUS current\n      DESCRIPTION\n         \"Type-P-One-to-group-Receiver-n-Comp-Loss-Ratio\"\
    \n      REFERENCE\n         \"RFC 5644, section 8.4.2.\"\n      := { ianaIppmMetrics\
    \ 67 }\n   ietfOneToGroupLossRatio OBJECT-IDENTITY\n      STATUS current\n   \
    \   DESCRIPTION\n         \"Type-P-One-to-group-Loss-Ratio\"\n      REFERENCE\n\
    \         \"RFC 5644, section 8.4.3.\"\n      := { ianaIppmMetrics 68 }\n   --\n\
    \   ietfOneToGroupRangeLossRatio OBJECT-IDENTITY\n      STATUS current\n     \
    \ DESCRIPTION\n         \"Type-P-One-to-group-Range-Loss-Ratio\"\n      REFERENCE\n\
    \         \"RFC 5644, section 8.4.4.\"\n      := { ianaIppmMetrics 69 }\n   ietfOneToGroupRangeDelayVariation\
    \ OBJECT-IDENTITY\n      STATUS current\n      DESCRIPTION\n         \"Type-P-One-to-group-Range-Delay-Variation\"\
    \n      REFERENCE\n         \"RFC 5644, section 8.5.1.\"\n      := { ianaIppmMetrics\
    \ 70 }\n   --\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2679]  Almes, G., Kalidindi, S., and M. Zekauskas, \"A One-way\n\
    \              Delay Metric for IPPM\", RFC 2679, September 1999.\n   [RFC2680]\
    \  Almes, G., Kalidindi, S., and M. Zekauskas, \"A One-way\n              Packet\
    \ Loss Metric for IPPM\", RFC 2680, September 1999.\n   [RFC3393]  Demichelis,\
    \ C. and P. Chimento, \"IP Packet Delay Variation\n              Metric for IP\
    \ Performance Metrics (IPPM)\", RFC 3393,\n              November 2002.\n   [RFC4148]\
    \  Stephan, E., \"IP Performance Metrics (IPPM) Metrics\n              Registry\"\
    , BCP 108, RFC 4148, August 2005.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC2330]  Paxson, V., Almes, G., Mahdavi,\
    \ J., and M. Mathis,\n              \"Framework for IP Performance Metrics\",\
    \ RFC 2330,\n              May 1998.\n   [RFC3432]  Raisanen, V., Grotefeld, G.,\
    \ and A. Morton, \"Network\n              performance measurement with periodic\
    \ streams\", RFC 3432,\n              November 2002.\n   [SPATIAL]  Morton, A.\
    \ and E. Stephan, \"Spatial Composition of\n              Metrics\", Work in Progress,\
    \ June 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stephan Emile\n   France Telecom Division R&D\n   2 avenue\
    \ Pierre Marzin\n   Lannion  F-22307\n   France\n   Fax:   +33 2 96 05 18 52\n\
    \   EMail: emile.stephan@orange-ftgroup.com\n   Lei Liang\n   CCSR, University\
    \ of Surrey\n   Guildford\n   Surrey  GU2 7XH\n   UK\n   Fax:   +44 1483 683641\n\
    \   EMail: L.Liang@surrey.ac.uk\n   Al Morton\n   200 Laurel Ave. South\n   Middletown,\
    \ NJ  07748\n   USA\n   Phone: +1 732 420 1571\n   EMail: acmorton@att.com\n"
