- contents:
  - '           Distributing Address Selection Policy Using DHCPv6

    '
  title: __initial_text__
- contents:
  - "Abstract\n   RFC 6724 defines default address selection mechanisms for IPv6 that\n
    \  allow nodes to select an appropriate address when faced with multiple\n   source
    and/or destination addresses to choose between.  RFC 6724\n   allows for the future
    definition of methods to administratively\n   configure the address selection
    policy information.  This document\n   defines a new DHCPv6 option for such configuration,
    allowing a site\n   administrator to distribute address selection policy overriding
    the\n   default address selection parameters and policy table, and thus\n   allowing
    the administrator to control the address selection behavior\n   of nodes in their
    site.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7078.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "1.  Introduction\n   [RFC6724] describes default algorithms for selecting an
    address when\n   a node has multiple destination and/or source addresses to choose\n
    \  from by using an address selection policy.  This specification\n   defines
    a new DHCPv6 option for configuring the default policy table.\n   Some problems
    were identified with the default address selection\n   policy as originally defined
    in [RFC3484].  As a result, RFC 3484 was\n   updated and obsoleted by [RFC6724].
    \ While this update corrected a\n   number of issues identified from operational
    experience, it is\n   unlikely that any default policy will suit all scenarios,
    and thus\n   mechanisms to control the source address selection policy will be\n
    \  necessary.  Requirements for those mechanisms are described in\n   [RFC5221],
    while solutions are discussed in [ADDR-SEL].  Those\n   documents have helped
    shape the improvements in the default address\n   selection algorithm in [RFC6724]
    as well as the requirements for the\n   DHCPv6 option defined in this specification.\n
    \  This option's concept is to serve as a hint for a node about how to\n   behave
    in the network.  Ultimately, while the node's administrator\n   can control how
    to deal with the received policy information, the\n   implementation SHOULD follow
    the method described below uniformly to\n   ease troubleshooting and to reduce
    operational costs.\n"
  - contents:
    - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in [RFC2119].\n"
    title: 1.1.  Conventions Used in This Document
  - contents:
    - "1.2.  Terminology\n   This document uses the terminology defined in [RFC2460]
      and the\n   DHCPv6 specification defined in [RFC3315]\n"
    title: 1.2.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Address Selection Options\n   The Address Selection option provides the address
    selection policy\n   table and some other configuration parameters.\n   An Address
    Selection option contains zero or more policy table\n   options.  Multiple policy
    table options in an Address Selection\n   option constitute a single policy table.
    \ When an Address Selection\n   option does not contain a policy table option,
    it may be used to just\n   convey the A and P flags for Automatic Row Additions
    and Privacy\n   Preference, respectively.\n   The format of the Address Selection
    option is given below.\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |          OPTION_ADDRSEL       |         option-len            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |  Reserved |A|P|                                               |\n      +-+-+-+-+-+-+-+-+
    \    POLICY TABLE OPTIONS                      |\n      |                      (variable
    length)                        |\n      |                                                               |\n
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                 Figure
    1: Address Selection Option Format\n   option-code:  OPTION_ADDRSEL (84).\n   option-len:
    \ The total length of the Reserved field, A and P flags,\n        and POLICY TABLE
    OPTIONS in octets.\n   Reserved:  Reserved field.  The server MUST set this value
    to 0, and\n        the client MUST ignore its content.\n   A:   Automatic Row
    Addition flag.  This flag toggles the Automatic\n        Row Addition flag at
    client hosts, which is described in\n        Section 2.1 of [RFC6724].  If this
    flag is set to 1, it does not\n        change client host behavior; that is, a
    client MAY automatically\n        add additional site-specific rows to the policy
    table.  If set\n        to 0, the Automatic Row Addition flag is disabled, and
    a client\n        SHOULD NOT automatically add rows to the policy table.  If the\n
    \       option contains a POLICY TABLE option, this flag is meaningless,\n        and
    automatic row addition SHOULD NOT be performed against the\n        distributed
    policy table.  This flag SHOULD be set to 0 only\n        when the Automatic Row
    Addition at client hosts is harmful for\n        site-specific reasons.\n   P:
    \  Privacy Preference flag.  This flag toggles the Privacy\n        Preference
    flag on client hosts, which is described in Section 5\n        of [RFC6724].  If
    this flag is set to 1, it does not change\n        client host behavior; that
    is, a client will prefer temporary\n        addresses [RFC4941].  If set to 0,
    the Privacy Preference flag\n        is disabled, and a client will prefer public
    addresses.  This\n        flag SHOULD be set to 0 only when the temporary addresses
    should\n        not be preferred for site-specific reasons.\n   POLICY TABLE OPTIONS:
    \ Zero or more Address Selection Policy\n        Table options, as described below.
    \ This option corresponds to a\n        row in the policy table defined in Section
    2.1 of [RFC6724].\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |     OPTION_ADDRSEL_TABLE      |         option-len            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |    label      |  precedence   |   prefix-len  |               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    \              |\n      |                                                               |\n
    \     |                   prefix   (variable length)                  |\n      |
    \                                                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \           Figure 2: Address Selection Policy Table Option Format\n   option-code:
    \ OPTION_ADDRSEL_TABLE (85).\n   option-len:  The total length of the label field,
    precedence field,\n        prefix-len field, and prefix field.\n   label:  An
    8-bit unsigned integer; this value is for correlation of\n        source address
    prefixes and destination address prefixes.  This\n        field is used to deliver
    a label value in the [RFC6724] policy\n        table.\n   precedence:  An 8-bit
    unsigned integer; this value is used for\n        sorting destination addresses.
    \ This field is used to deliver a\n        precedence value in the [RFC6724] policy
    table.\n   prefix-len:  An 8-bit unsigned integer; the number of leading bits
    in\n        the prefix that are valid.  The value ranges from 0 to 128.  If\n
    \       an option with a prefix length greater than 128 is included, the\n        whole
    Address Selection option MUST be ignored.\n   prefix:  A variable-length field
    containing an IP address or the\n        prefix of an IP address.  An IPv4-mapped
    address [RFC4291] must\n        be used to represent an IPv4 address as a prefix
    value.\n        This field is padded with zeros up to the nearest octet boundary\n
    \       when prefix-len is not divisible by 8.  This can be expressed\n        using
    the following equation: (prefix-len + 7)/8\n        So, the length of this field
    should be between 0 and 16 bytes.\n        For example, the prefix 2001:db8::/60
    would be encoded with a\n        prefix-len of 60; the prefix would be 8 octets
    and would contain\n        octets 20 01 0d b8 00 00 00 00.\n"
  title: 2.  Address Selection Options
- contents:
  - "3.  Processing the Address Selection Option\n   This section describes how to
    process a received Address Selection\n   option at the DHCPv6 client.\n   This
    option's concept is to serve as a hint for a node about how to\n   behave in the
    network.  Ultimately, while the node's administrator\n   can control how to deal
    with the received policy information, the\n   implementation SHOULD follow the
    method described below uniformly to\n   ease troubleshooting and to reduce operational
    costs.\n"
  - contents:
    - "3.1.  Handling Local Configurations\n   [RFC6724] defines two flags (A and
      P) and the default policy table.\n   Also, users are usually able to configure
      the flags and the policy\n   table to satisfy their own requirements.\n   The
      client implementation SHOULD provide the following choices to the\n   user.\n
      \  (a)   replace the existing flags and active policy table with the\n         DHCPv6
      distributed flags and policy table.\n   (b)   preserve the existing flags and
      active policy table, whether\n         this be the default policy table or the
      user configured policy.\n   Choice (a) SHOULD be the default, i.e., that the
      policy table is not\n   explicitly configured by the user.\n"
    title: 3.1.  Handling Local Configurations
  - contents:
    - "3.2.  Handling Stale Distributed Flags and Policy Table\n   When the information
      from the DHCP server goes stale, the flags and\n   the policy table received
      from the DHCP server SHOULD be deprecated.\n   The local configuration SHOULD
      be restored when the DHCP-supplied\n   configuration has been deprecated.  In
      order to implement this, a\n   host can retain the local configuration even
      after the flags and the\n   policy table is updated by the distributed flags
      and policy table.\n   The received information can be considered stale in several
      cases,\n   e.g., when the interface goes down, the DHCP server does not respond\n
      \  for a certain amount of time, or the Information Refresh Time has\n   expired.\n"
    title: 3.2.  Handling Stale Distributed Flags and Policy Table
  - contents:
    - "3.3.  Handling Multiple Interfaces\n   The policy table, and other parameters
      specified in this document,\n   are node-global information by their nature.
      \ One reason being that\n   the outbound interface is usually chosen after destination
      address\n   selection.  So a host cannot make use of multiple address selection\n
      \  policies even if they are stored per interface.\n   The policy table is defined
      as a whole, so the slightest addition/\n   deletion from the policy table brings
      a change in the semantics of\n   the policy.\n   It also should be noted that
      the absence of a DHCP-distributed policy\n   from a certain network interface
      should not infer that the network\n   administrator does not care about address
      selection policy at all,\n   because it may mean there is a preference to use
      the default address\n   selection policy.  So, it should be safe to assume that
      the default\n   address selection policy should be used where no overriding
      policy is\n   provided.\n   Under the above assumptions, we can specify how
      to handle received\n   policy as follows.\n   In the absence of distributed
      policy for a certain network interface,\n   the default address selection policy
      SHOULD be used.  A node should\n   use Address Selection options by default
      in any of the following two\n   cases:\n   1: A single-homed host SHOULD use
      default address selection options,\n      where the host belongs exclusively
      to one administrative network\n      domain, usually through one active network
      interface.\n   2: Hosts that use advanced heuristics to deal with multiple received\n
      \     policies that are defined outside the scope of this document\n      SHOULD
      use Address Selection options.\n   Implementations MAY provide configuration
      options to enable this\n   protocol on a per-interface basis.\n   Implementations
      MAY store distributed address selection policies per\n   interface.  They can
      be used effectively on implementations that\n   adopt per-application interface
      selection.\n"
    title: 3.3.  Handling Multiple Interfaces
  title: 3.  Processing the Address Selection Option
- contents:
  - "4.  Implementation Considerations\n   o  The value 'label' is passed as an unsigned
    integer, but there is\n      no special meaning for the value; that is, whether
    it is a large\n      or small number.  It is used to select a preferred source
    address\n      prefix corresponding to a destination address prefix by matching\n
    \     the same label value within the DHCP message.  DHCPv6 clients\n      SHOULD
    convert this label to a representation appropriate for the\n      local implementation
    (e.g., string).\n   o  The maximum number of address selection rules that may
    be conveyed\n      in one DHCPv6 message depends on the prefix length of each
    rule\n      and the maximum DHCPv6 message size defined in [RFC3315].  It is\n
    \     possible to carry over 3,000 rules in one DHCPv6 message (maximum\n      UDP
    message size).  However, it should not be expected that DHCP\n      clients, servers,
    and relay agents can handle UDP fragmentation.\n      Network administrators SHOULD
    consider local limitations to the\n      maximum DHCPv6 message size that can
    be reliably transported via\n      their specific local infrastructure to end
    nodes; therefore, they\n      SHOULD consider the number of options, the total
    size of the\n      options, and the resulting DHCPv6 message size when defining
    their\n      policy table.\n"
  title: 4.  Implementation Considerations
- contents:
  - "5.  Security Considerations\n   A rogue DHCPv6 server could issue bogus address
    selection policies to\n   a client.  This might lead to incorrect address selection
    by the\n   client, and the affected packets might be blocked at an outgoing ISP\n
    \  because of ingress filtering, incur additional network charges, or be\n   misdirected
    to an attacker's machine.  Alternatively, an IPv6\n   transition mechanism might
    be preferred over native IPv6, even if it\n   is available.  To guard against
    such attacks, a legitimate DHCPv6\n   server should communicate through a secure,
    trusted channel, such as\n   a channel protected by IPsec, Secure Neighbor Discovery
    (SEND), and\n   DHCP authentication, as described in Section 21 of [RFC3315].
    \ A\n   commonly used alternative mitigation is to employ DHCP snooping at\n   Layer
    2.\n   Another threat surrounds the potential privacy concern as described\n   in
    the security considerations section of [RFC6724], whereby an\n   attacker can
    send packets with different source addresses to a\n   destination to solicit different
    source addresses in the responses\n   from that destination.  This issue will
    not be modified by the\n   introduction of this option, regardless of whether
    or not the host is\n   multihomed.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   IANA has assigned option codes to OPTION_ADDRSEL
    (84) and\n   OPTION_ADDRSEL_TABLE (85) from the \"DHCP Option Codes\" registry\n
    \  (http://www.iana.org/assignments/dhcpv6-parameters/).\n"
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n
      \             and M. Carney, \"Dynamic Host Configuration Protocol for\n              IPv6
      (DHCPv6)\", RFC 3315, July 2003.\n   [RFC6724]  Thaler, D., Draves, R., Matsumoto,
      A., and T. Chown,\n              \"Default Address Selection for Internet Protocol
      Version 6\n              (IPv6)\", RFC 6724, September 2012.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [ADDR-SEL] Chown, T., Ed., and A. Matsumoto,
      Ed., \"Considerations for\n              IPv6 Address Selection Policy Changes\",
      Work in Progress,\n              April 2013.\n   [RFC2460]  Deering, S. and
      R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\",
      RFC 2460, December 1998.\n   [RFC3484]  Draves, R., \"Default Address Selection
      for Internet\n              Protocol version 6 (IPv6)\", RFC 3484, February
      2003.\n   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n
      \             Architecture\", RFC 4291, February 2006.\n   [RFC4941]  Narten,
      T., Draves, R., and S. Krishnan, \"Privacy\n              Extensions for Stateless
      Address Autoconfiguration in\n              IPv6\", RFC 4941, September 2007.\n
      \  [RFC5220]  Matsumoto, A., Fujisaki, T., Hiromi, R., and K. Kanayama,\n              \"Problem
      Statement for Default Address Selection in Multi-\n              Prefix Environments:
      Operational Issues of RFC 3484\n              Default Rules\", RFC 5220, July
      2008.\n   [RFC5221]  Matsumoto, A., Fujisaki, T., Hiromi, R., and K. Kanayama,\n
      \             \"Requirements for Address Selection Mechanisms\", RFC 5221,\n
      \             July 2008.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  Acknowledgements\n   The authors would like to thank to Dave Thaler,
    Pekka Savola, Remi\n   Denis-Courmont, Francois-Xavier Le Bail, Ole Troan, Bob
    Hinden,\n   Dmitry Anipko, Ray Hunter, Rui Paulo, Brian E. Carpenter, Tom Petch,\n
    \  and the members of 6man's address selection design team for their\n   invaluable
    contributions to this document.\n"
  title: Appendix A.  Acknowledgements
- contents:
  - "Appendix B.  Examples\n   [RFC5220] gives several cases where address selection
    problems\n   happen.  This section contains some examples for solving those cases\n
    \  by using the DHCP option defined in this text to update the hosts'\n   policy
    table in a network, accordingly.  There is also some\n   discussion of example
    policy tables in Sections 10.3 to 10.7 of RFC\n   6724.\n"
  - contents:
    - "B.1.  Ingress Filtering Problem\n   In the case described in Section 2.1.2
      of [RFC5220], the following\n   policy table should be distributed when the
      Router performs static\n   routing and directs the default route to ISP1 as
      per Figure 2.  By\n   putting the same label value to all IPv6 addresses (::/0)
      and the\n   local subnet (2001:db8:1000:1::/64), a host picks a source address
      in\n   this subnet to send a packet via the default route.\n         Prefix
      \       Precedence Label\n         ::1/128               50     0\n         ::/0
      \                 40     1\n         2001:db8:1000:1::/64  45     1\n         2001:db8:8000:1::/64
      \ 45    14\n         ::ffff:0:0/96         35     4\n         2002::/16             30
      \    2\n         2001::/32              5     5\n         fc00::/7               3
      \   13\n         ::/96                  1     3\n         fec0::/10              1
      \   11\n         3ffe::/16              1    12\n"
    title: B.1.  Ingress Filtering Problem
  - contents:
    - "B.2.  Half-Closed Network Problem\n   In the case described in Section 2.1.3
      of [RFC5220], the following\n   policy table should be distributed.  By splitting
      the closed network\n   prefix (2001:db8:8000::/36) from all IPv6 addresses (::/0)
      and giving\n   different labels, the closed network prefix will only be used
      when\n   packets are destined for the closed network.\n         Prefix        Precedence
      Label\n         ::1/128               50     0\n         ::/0                  40
      \    1\n         2001:db8:8000::/36    45    14\n         ::ffff:0:0/96         35
      \    4\n         2002::/16             30     2\n         2001::/32              5
      \    5\n         fc00::/7               3    13\n         ::/96                  1
      \    3\n         fec0::/10              1    11\n         3ffe::/16              1
      \   12\n"
    title: B.2.  Half-Closed Network Problem
  - contents:
    - "B.3.  IPv4 or IPv6 Prioritization\n   In the case described in Section 2.2.1
      of [RFC5220], the following\n   policy table should be distributed to prioritize
      IPv6.  This case is\n   also described in [RFC6724].\n         Prefix        Precedence
      Label\n         ::1/128               50     0\n         ::/0                  40
      \    1\n         ::ffff:0:0/96        100     4\n         2002::/16             30
      \    2\n         2001::/32              5     5\n         fc00::/7               3
      \   13\n         ::/96                  1     3\n         fec0::/10              1
      \   11\n         3ffe::/16              1    12\n"
    title: B.3.  IPv4 or IPv6 Prioritization
  - contents:
    - "B.4.  ULA or Global Prioritization\n   In the case described in Section 2.2.3
      of [RFC5220], the following\n   policy table should be distributed, or the Automatic
      Row Addition\n   flag should be set to 1.  By splitting the Unique Local Address
      (ULA)\n   in this site (fc12:3456:789a::/48) from all IPv6 addresses (::/0)
      and\n   giving it higher precedence, the ULA will be used to connect to\n   servers
      in the same site.\n         Prefix        Precedence Label\n         ::1/128
      \              50     0\n         fc12:3456:789a::/48   45    14\n         ::/0
      \                 40     1\n         ::ffff:0:0/96         35     4\n         2002::/16
      \            30     2\n         2001::/32              5     5\n         fc00::/7
      \              3    13\n         ::/96                  1     3\n         fec0::/10
      \             1    11\n         3ffe::/16              1    12\n"
    title: B.4.  ULA or Global Prioritization
  title: Appendix B.  Examples
- contents:
  - "Authors' Addresses\n   Arifumi Matsumoto\n   NTT NT Lab\n   3-9-11 Midori-Cho\n
    \  Musashino-shi, Tokyo  180-8585\n   Japan\n   Phone: +81 422 59 3334\n   EMail:
    arifumi@nttv6.net\n   Tomohiro Fujisaki\n   NTT NT Lab\n   3-9-11 Midori-Cho\n
    \  Musashino-shi, Tokyo  180-8585\n   Japan\n   Phone: +81 422 59 7351\n   EMail:
    fujisaki@nttv6.net\n   Tim Chown\n   University of Southampton\n   Southampton,
    Hampshire  SO17 1BJ\n   United Kingdom\n   EMail: tjc@ecs.soton.ac.uk\n"
  title: Authors' Addresses
