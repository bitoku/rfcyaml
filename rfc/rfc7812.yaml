- contents:
  - "                An Architecture for IP/LDP Fast Reroute\n               Using
    Maximally Redundant Trees (MRT-FRR)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines the architecture for IP and LDP Fast Reroute\n
    \  using Maximally Redundant Trees (MRT-FRR).  MRT-FRR is a technology\n   that
    gives link-protection and node-protection with 100% coverage in\n   any network
    topology that is still connected after the failure.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7812.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Importance of 100% Coverage . . . . . . . . . . . .
    . . .   4\n     1.2.  Partial Deployment and Backwards Compatibility  . . . .
    .   5\n   2.  Requirements Language . . . . . . . . . . . . . . . . . . . .   5\n
    \  3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   5\n   4.
    \ Maximally Redundant Trees (MRT) . . . . . . . . . . . . . . .   7\n   5.  MRT
    and Fast Reroute  . . . . . . . . . . . . . . . . . . . .   9\n   6.  Unicast
    Forwarding with MRT Fast Reroute  . . . . . . . . . .   9\n     6.1.  Introduction
    to MRT Forwarding Options  . . . . . . . . .  10\n       6.1.1.  MRT LDP Labels
    \ . . . . . . . . . . . . . . . . . . .  10\n         6.1.1.1.  Topology-Scoped
    FEC Encoded Using a Single Label\n                   (Option 1A) . . . . . . .
    . . . . . . . . . . . .  10\n         6.1.1.2.  Topology and FEC Encoded Using
    a Two-Label Stack\n                   (Option 1B) . . . . . . . . . . . . . .
    . . . . .  11\n         6.1.1.3.  Compatibility of MRT LDP Label Options 1A and
    1B   12\n         6.1.1.4.  Required Support for MRT LDP Label Options  . . .
    \ 12\n       6.1.2.  MRT IP Tunnels (Options 2A and 2B)  . . . . . . . . .  12\n
    \    6.2.  Forwarding LDP Unicast Traffic over MRT Paths . . . . . .  13\n       6.2.1.
    \ Forwarding LDP Traffic Using MRT LDP Label Option 1A   13\n       6.2.2.  Forwarding
    LDP Traffic Using MRT LDP Label Option 1B   14\n       6.2.3.  Other Considerations
    for Forwarding LDP Traffic Using\n               MRT LDP Labels  . . . . . . .
    . . . . . . . . . . . .  14\n       6.2.4.  Required Support for LDP Traffic  .
    . . . . . . . . .  14\n     6.3.  Forwarding IP Unicast Traffic over MRT Paths
    \ . . . . . .  14\n       6.3.1.  Tunneling IP Traffic Using MRT LDP Labels .
    . . . . .  15\n         6.3.1.1.  Tunneling IP Traffic Using MRT LDP Label Option\n
    \                  1A  . . . . . . . . . . . . . . . . . . . . . . .  15\n         6.3.1.2.
    \ Tunneling IP Traffic Using MRT LDP Label Option\n                   1B  . .
    . . . . . . . . . . . . . . . . . . . . .  15\n       6.3.2.  Tunneling IP Traffic
    Using MRT IP Tunnels . . . . . .  16\n       6.3.3.  Required Support for IP Traffic
    . . . . . . . . . . .  16\n   7.  MRT Island Formation  . . . . . . . . . . .
    . . . . . . . . .  16\n     7.1.  IGP Area or Level . . . . . . . . . . . . .
    . . . . . . .  17\n     7.2.  Support for a Specific MRT Profile  . . . . . .
    . . . . .  17\n     7.3.  Excluding Additional Routers and Interfaces from the
    MRT\n           Island  . . . . . . . . . . . . . . . . . . . . . . . . .  18\n
    \      7.3.1.  Existing IGP Exclusion Mechanisms . . . . . . . . . .  18\n       7.3.2.
    \ MRT-Specific Exclusion Mechanism  . . . . . . . . . .  19\n     7.4.  Connectivity
    \ . . . . . . . . . . . . . . . . . . . . . .  19\n     7.5.  Algorithm for MRT
    Island Identification . . . . . . . . .  19\n   8.  MRT Profile . . . . . . .
    . . . . . . . . . . . . . . . . . .  19\n     8.1.  MRT Profile Options . . .
    . . . . . . . . . . . . . . . .  19\n     8.2.  Router-Specific MRT Parameters
    \ . . . . . . . . . . . . .  21\n     8.3.  Default MRT Profile . . . . . . .
    . . . . . . . . . . . .  21\n   9.  LDP Signaling Extensions and Considerations
    . . . . . . . . .  22\n   10. Inter-area Forwarding Behavior  . . . . . . . .
    . . . . . . .  23\n     10.1.  ABR Forwarding Behavior with MRT LDP Label Option
    1A . .  23\n       10.1.1.  Motivation for Creating the Rainbow-FEC  . . . . .
    .  24\n     10.2.  ABR Forwarding Behavior with IP Tunneling (Option 2) . .  24\n
    \    10.3.  ABR Forwarding Behavior with MRT LDP Label Option 1B . .  25\n   11.
    Prefixes Multiply Attached to the MRT Island  . . . . . . . .  26\n     11.1.
    \ Protecting Multihomed Prefixes Using Tunnel Endpoint\n            Selection
    \ . . . . . . . . . . . . . . . . . . . . . . .  28\n     11.2.  Protecting Multihomed
    Prefixes Using Named Proxy-Nodes .  29\n     11.3.  MRT Alternates for Destinations
    outside the MRT Island .  31\n   12. Network Convergence and Preparing for the
    Next Failure  . . .  32\n     12.1.  Micro-loop Prevention and MRTs . . . . .
    . . . . . . . .  32\n     12.2.  MRT Recalculation for the Default MRT Profile
    \ . . . . .  33\n   13. Operational Considerations  . . . . . . . . . . . . .
    . . . .  34\n     13.1.  Verifying Forwarding on MRT Paths  . . . . . . . . .
    . .  34\n     13.2.  Traffic Capacity on Backup Paths . . . . . . . . . . . .
    \ 34\n     13.3.  MRT IP Tunnel Loopback Address Management  . . . . . . .  36\n
    \    13.4.  MRT-FRR in a Network with Degraded Connectivity  . . . .  36\n     13.5.
    \ Partial Deployment of MRT-FRR in a Network . . . . . . .  37\n   14. IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .  37\n   15. Security Considerations
    . . . . . . . . . . . . . . . . . . .  38\n   16. References  . . . . . . . .
    . . . . . . . . . . . . . . . . .  38\n     16.1.  Normative References . . .
    . . . . . . . . . . . . . . .  38\n     16.2.  Informative References . . . .
    . . . . . . . . . . . . .  39\n   Appendix A.  Inter-level Forwarding Behavior
    for IS-IS  . . . . .  41\n   Appendix B.  General Issues with Area Abstraction
    . . . . . . . .  42\n   Acknowledgements  . . . . . . . . . . . . . . . . . .
    . . . . . .  43\n   Contributors  . . . . . . . . . . . . . . . . . . . . . .
    . . . .  43\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . .
    . .  44\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes a solution for IP/LDP fast reroute
    [RFC5714].\n   MRT-FRR creates two alternate forwarding trees that are distinct
    from\n   the primary next-hop forwarding used during stable operation.  These\n
    \  two trees are maximally diverse from each other, providing link and\n   node
    protection for 100% of paths and failures as long as the failure\n   does not
    cut the network into multiple pieces.  This document defines\n   the architecture
    for IP/LDP fast reroute with MRT.\n   [RFC7811] describes how to compute maximally
    redundant trees using a\n   specific algorithm: the MRT Lowpoint algorithm.  The
    MRT Lowpoint\n   algorithm is used by a router that supports the Default MRT Profile,\n
    \  as specified in this document.\n   IP/LDP Fast Reroute using Maximally Redundant
    Trees (MRT-FRR) uses\n   two maximally diverse forwarding topologies to provide
    alternates.  A\n   primary next hop should be on only one of the diverse forwarding\n
    \  topologies; thus, the other can be used to provide an alternate.\n   Once traffic
    has been moved to one of the MRTs by one Point of Local\n   Repair (PLR), that
    traffic is not subject to further repair actions\n   by another PLR, even in the
    event of multiple simultaneous failures.\n   Therefore, traffic repaired by MRT-FRR
    will not loop between\n   different PLRs responding to different simultaneous
    failures.\n   While MRT provides 100% protection for a single link or node failure,\n
    \  it may not protect traffic in the event of multiple simultaneous\n   failures,
    nor does it take into account Shared Risk Link Groups\n   (SRLGs).  Also, while
    the MRT Lowpoint algorithm is computationally\n   efficient, it is also new.  In
    order for MRT-FRR to function\n   properly, all of the other nodes in the network
    that support MRT must\n   correctly compute next hops based on the same algorithm
    and install\n   the corresponding forwarding state.  This is in contrast to other
    FRR\n   methods where the calculation of backup paths generally involves\n   repeated
    application of the simpler and widely deployed Shortest Path\n   First (SPF) algorithm,
    and backup paths themselves reuse the\n   forwarding state used for shortest path
    forwarding of normal traffic.\n   Section 13 provides operational guidance related
    to verification of\n   MRT forwarding paths.\n   In addition to supporting IP
    and LDP unicast fast reroute, the\n   diverse forwarding topologies and guarantee
    of 100% coverage permit\n   fast-reroute technology to be applied to multicast
    traffic as\n   described in [MRT-ARCH].  However, the current document does not\n
    \  address the multicast applications of MRTs.\n"
  - contents:
    - "1.1.  Importance of 100% Coverage\n   Fast reroute is based upon the single
      failure assumption: that the\n   time between single failures is long enough
      for a network to\n   reconverge and start forwarding on the new shortest paths.
      \ That does\n   not imply that the network will only experience one failure
      or\n   change.\n   It is straightforward to analyze a particular network topology
      for\n   coverage.  However, a real network does not always have the same\n   topology.
      \ For instance, maintenance events will take links or nodes\n   out of use.
      \ Simply costing out a link can have a significant effect\n   on what Loop-Free
      Alternates (LFAs) are available.  Similarly, after\n   a single failure has
      happened, the topology is changed and its\n   associated coverage has changed
      as well.  Finally, many networks have\n   new routers or links added and removed;
      each of those changes can\n   have an effect on the coverage for topology-sensitive
      methods such as\n   LFA and Remote LFA.  If fast reroute is important for the
      network\n   services provided, then a method that guarantees 100% coverage is\n
      \  important to accommodate natural network topology changes.\n   When a network
      needs to use Ordered FIB [RFC6976] or Nearside\n   Tunneling [RFC5715] as a
      micro-loop prevention mechanism [RFC5715],\n   then the whole IGP area needs
      to have alternates available.  This\n   allows the micro-loop prevention mechanism,
      which requires slower\n   network convergence, to take the necessary time without
      adversely\n   impacting traffic.  Without complete coverage, traffic to the\n
      \  unprotected destinations will be dropped for significantly longer\n   than
      with current convergence -- where routers individually converge\n   as fast
      as possible.  See Section 12.1 for more discussion of micro-\n   loop prevention
      and MRTs.\n"
    title: 1.1.  Importance of 100% Coverage
  - contents:
    - "1.2.  Partial Deployment and Backwards Compatibility\n   MRT-FRR supports partial
      deployment.  Routers advertise their ability\n   to support MRT.  Inside the
      MRT-capable connected group of routers\n   (referred to as an MRT Island), the
      MRTs are computed.  Alternates to\n   destinations outside the MRT Island are
      computed and depend upon the\n   existence of a loop-free neighbor of the MRT
      Island for that\n   destination.  MRT Islands are discussed in detail in Section
      7, and\n   partial deployment is discussed in more detail in Section 13.5.\n"
    title: 1.2.  Partial Deployment and Backwards Compatibility
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Language
- contents:
  - "3.  Terminology\n   network graph:   A graph that reflects the network topology
    where all\n      links connect exactly two nodes and broadcast links have been\n
    \     transformed into the standard pseudonode representation.\n   cut-link:   A
    link whose removal partitions the network.  A cut-link\n      by definition must
    be connected between two cut-vertices.  If\n      there are multiple parallel
    links, then they are referred to as\n      cut-links in this document if removing
    the set of parallel links\n      would partition the network graph.\n   cut-vertex:
    \  A vertex whose removal partitions the network graph.\n   2-connected:   A graph
    that has no cut-vertices.  This is a graph\n      that requires two nodes to be
    removed before the network is\n      partitioned.\n   2-connected cluster:   A
    maximal set of nodes that are 2-connected.\n   block:   Either a 2-connected cluster,
    a cut-edge, or a cut-vertex.\n   Redundant Trees (RT):   A pair of trees where
    the path from any node\n      X to the root R along the first tree is node-disjoint
    with the\n      path from the same node X to the root along the second tree.\n
    \     Redundant trees can always be computed in 2-connected graphs.\n   Maximally
    Redundant Trees (MRT):   A pair of trees where the path\n      from any node X
    to the root R along the first tree and the path\n      from the same node X to
    the root along the second tree share the\n      minimum number of nodes and the
    minimum number of links.  Each\n      such shared node is a cut-vertex.  Any shared
    links are cut-links.\n      In graphs that are not 2-connected, it is not possible
    to compute\n      RTs.  However, it is possible to compute MRTs.  MRTs are maximally\n
    \     redundant in the sense that they are as redundant as possible\n      given
    the constraints of the network graph.\n   Directed Acyclic Graph (DAG):   A graph
    where all links are directed\n      and there are no cycles in it.\n   Almost
    Directed Acyclic Graph (ADAG):   A graph with one node\n      designated as the
    root.  The graph has the property that if all\n      links incoming to the root
    were removed, then the resulting graph\n      would be a DAG.\n   Generalized
    ADAG (GADAG):   A graph that is the combination of the\n      ADAGs of all blocks.\n
    \  MRT-Red:   MRT-Red is used to describe one of the two MRTs; it is\n      used
    to describe the associated forwarding topology and MPLS\n      Multi-Topology
    IDentifier (MT-ID).  Specifically, MRT-Red is the\n      decreasing MRT where
    links in the GADAG are taken in the direction\n      from a higher topologically
    ordered node to a lower one.\n   MRT-Blue:   MRT-Blue is used to describe one
    of the two MRTs; it is\n      used to described the associated forwarding topology
    and MPLS\n      MT-ID.  Specifically, MRT-Blue is the increasing MRT where links\n
    \     in the GADAG are taken in the direction from a lower topologically\n      ordered
    node to a higher one.\n   Rainbow MRT:   It is useful to have an MPLS MT-ID that
    refers to the\n      multiple MRT forwarding topologies and to the default forwarding\n
    \     topology.  This is referred to as the Rainbow MRT MPLS MT-ID and\n      is
    used by LDP to reduce signaling and permit the same label to\n      always be
    advertised to all peers for the same (MT-ID, Prefix).\n   MRT Island:   The set
    of routers that support a particular MRT\n      profile and the links connecting
    them that support MRT.\n   Island Border Router (IBR):   A router in the MRT Island
    that is\n      connected to a router not in the MRT Island, both of which are
    in\n      a common area or level.\n   Island Neighbor (IN):   A router that is
    not in the MRT Island but is\n      adjacent to an IBR and in the same area/level
    as the IBR.\n   named proxy-node:   A proxy-node can represent a destination prefix\n
    \     that can be attached to the MRT Island via at least two routers.\n      It
    is named if there is a way that traffic can be encapsulated to\n      reach specifically
    that proxy node; this could be because there is\n      an LDP FEC (Forwarding
    Equivalence Class) for the associated\n      prefix or because MRT-Red and MRT-Blue
    IP addresses are advertised\n      in an undefined fashion for that proxy-node.\n"
  title: 3.  Terminology
- contents:
  - "4.  Maximally Redundant Trees (MRT)\n   A pair of Maximally Redundant Trees is
    a pair of directed spanning\n   trees that provides maximally disjoint paths towards
    their common\n   root.  Only links or nodes whose failure would partition the
    network\n   (i.e., cut-links and cut-vertices) are shared between the trees.  The\n
    \  MRT Lowpoint algorithm is given in [RFC7811].  This algorithm can be\n   computed
    in O(e + n log n); it is less than three SPFs.  This\n   document describes how
    the MRTs can be used and not how to compute\n   them.\n   MRT provides destination-based
    trees for each destination.  Each\n   router stores its normal primary next hop(s)
    as well as MRT-Blue next\n   hop(s) and MRT-Red next hop(s) toward each destination.
    \ The\n   alternate will be selected between the MRT-Blue and MRT-Red.\n   The
    most important thing to understand about MRTs is that for each\n   pair of destination-routed
    MRTs, there is a path from every node X to\n   the destination D on the Blue MRT
    that is as disjoint as possible\n   from the path on the Red MRT.\n   For example,
    in Figure 1, there is a network graph that is\n   2-connected in (a) and associated
    MRTs in (b) and (c).  One can\n   consider the paths from B to R; on the Blue
    MRT, the paths are\n   B->F->D->E->R or B->C->D->E->R.  On the Red MRT, the path
    is B->A->R.\n   These are clearly link and node-disjoint.  These MRTs are redundant\n
    \  trees because the paths are disjoint.\n   [E]---[D]---|           [E]<--[D]<--|
    \               [E]-->[D]---|\n    |     |    |            |     ^    |                       |
    \   |\n    |     |    |            V     |    |                       V    V\n
    \  [R]   [F]  [C]          [R]   [F]  [C]               [R]   [F]  [C]\n    |
    \    |    |                  ^    ^                 ^     |    |\n    |     |
    \   |                  |    |                 |     V    |\n   [A]---[B]---|           [A]-->[B]---|
    \               [A]<--[B]<--|\n         (a)                     (b)                         (c)\n
    \  a 2-connected graph     Blue MRT towards R          Red MRT towards R\n                      Figure
    1: A 2-Connected Network\n   By contrast, in Figure 2, the network in (a) is not
    2-connected.  If\n   C, G, or the link C<->G failed, then the network would be\n
    \  partitioned.  It is clearly impossible to have two link-disjoint or\n   node-disjoint
    paths from G, J, or H to R.  The MRTs given in (b) and\n   (c) offer paths that
    are as disjoint as possible.  For instance, the\n   paths from B to R are the
    same as in Figure 1 and the path from G to\n   R on the Blue MRT is G->C->D->E->R
    and on the Red MRT is\n   G->C->B->A->R.\n                        [E]---[D]---|
    \    |---[J]\n                         |     |    |     |    |\n                         |
    \    |    |     |    |\n                        [R]   [F]  [C]---[G]   |\n                         |
    \    |    |     |    |\n                         |     |    |     |    |\n                        [A]---[B]---|
    \    |---[H]\n                       (a) a graph that is not 2-connected\n         [E]<--[D]<--|
    \        [J]        [E]-->[D]---|     |---[J]\n          |     ^    |          |
    \               |    |     |    ^\n          V     |    |          |                V
    \   V     V    |\n         [R]   [F]  [C]<--[G]   |         [R]   [F]  [C]<--[G]
    \  |\n                ^    ^     ^    |          ^     |    |          |\n                |
    \   |     |    V          |     V    |          |\n         [A]-->[B]---|     |---[H]
    \       [A]<--[B]<--|         [H]\n          (b) Blue MRT towards R          (c)
    Red MRT towards R\n                Figure 2: A Network That Is Not 2-Connected\n"
  title: 4.  Maximally Redundant Trees (MRT)
- contents:
  - "5.  MRT and Fast Reroute\n   In normal IGP routing, each router has its Shortest
    Path Tree (SPT)\n   to all destinations.  From the perspective of a particular\n
    \  destination, D, this looks like a reverse SPT (rSPT).  To use MRT, in\n   addition,
    each destination D has two MRTs associated with it; by\n   convention these will
    be called the MRT-Blue and MRT-Red.  MRT-FRR is\n   realized by using multi-topology
    forwarding.  There is a MRT-Blue\n   forwarding topology and a MRT-Red forwarding
    topology.\n   Any IP/LDP fast-reroute technique beyond LFA requires an additional\n
    \  dataplane procedure, such as an additional forwarding mechanism.  The\n   well-known
    options are multi-topology forwarding (used by MRT-FRR),\n   tunneling (e.g.,
    [RFC6981] or [RFC7490]), and per-interface\n   forwarding (e.g., Loop-Free Failure
    Insensitive Routing in\n   [EnyediThesis]).\n   When there is a link or node failure
    affecting, but not partitioning,\n   the network, each node will still have at
    least one path via one of\n   the MRTs to reach the destination D.  For example,
    in Figure 2, B\n   would normally forward traffic to R across the path B->A->R.
    \ If the\n   B<->A link fails, then B could use the MRT-Blue path B->F->D->E->R.\n
    \  As is always the case with fast-reroute technologies, forwarding does\n   not
    change until a local failure is detected.  Packets are forwarded\n   along the
    shortest path.  The appropriate alternate to use is pre-\n   computed.  [RFC7811]
    describes exactly how to determine whether the\n   MRT-Blue next hops or the MRT-Red
    next hops should be the MRT\n   alternate next hops for a particular primary next
    hop to a particular\n   destination.\n   MRT alternates are always available to
    use.  It is a local decision\n   whether to use an MRT alternate, an LFA, or some
    other type of\n   alternate.\n   As described in [RFC5286], when a worse failure
    than is anticipated\n   happens, using LFAs that are not downstream neighbors
    can cause\n   looping among alternates.  Section 1.1 of [RFC5286] gives an example\n
    \  of link-protecting alternates causing a loop on node failure.  Even\n   if
    a worse failure than anticipated happens, the use of MRT\n   alternates will not
    cause looping.\n"
  title: 5.  MRT and Fast Reroute
- contents:
  - "6.  Unicast Forwarding with MRT Fast Reroute\n   There are three possible types
    of routers involved in forwarding a\n   packet along an MRT path.  At the MRT
    ingress router, the packet\n   leaves the shortest path to the destination and
    follows an MRT path\n   to the destination.  In an FRR application, the MRT ingress
    router is\n   the PLR.  An MRT transit router takes a packet that arrives already\n
    \  associated with the particular MRT, and forwards it on that same MRT.\n   In
    some situations (to be discussed later), the packet will need to\n   leave the
    MRT path and return to the shortest path.  This takes place\n   at the MRT egress
    router.  The MRT ingress and egress functionality\n   may depend on the underlying
    type of packet being forwarded (LDP or\n   IP).  The MRT transit functionality
    is independent of the type of\n   packet being forwarded.  We first consider several
    MRT transit\n   forwarding mechanisms.  Then, we look at how these forwarding\n
    \  mechanisms can be applied to carrying LDP and IP traffic.\n"
  - contents:
    - "6.1.  Introduction to MRT Forwarding Options\n   The following options for
      MRT forwarding mechanisms are considered.\n   1.  MRT LDP Labels\n       A.
      \ Topology-scoped FEC encoded using a single label\n       B.  Topology and
      FEC encoded using a two-label stack\n   2.  MRT IP Tunnels\n       A.  MRT IPv4
      Tunnels\n       B.  MRT IPv6 Tunnels\n"
    - contents:
      - "6.1.1.  MRT LDP Labels\n   We consider two options for the MRT forwarding
        mechanisms using MRT\n   LDP labels.\n"
      - contents:
        - "6.1.1.1.  Topology-Scoped FEC Encoded Using a Single Label (Option 1A)\n
          \  [RFC7307] provides a mechanism to distribute FEC-label bindings\n   scoped
          to a given MPLS topology (represented by MPLS MT-ID).  To use\n   multi-topology
          LDP to create MRT forwarding topologies, we associate\n   two MPLS MT-IDs
          with the MRT-Red and MRT-Blue forwarding topologies,\n   in addition to
          the default shortest path forwarding topology with\n   MT-ID=0.\n   With
          this forwarding mechanism, a single label is distributed for\n   each topology-scoped
          FEC.  For a given FEC in the default topology\n   (call it default-FEC-A),
          two additional topology-scoped FECs would be\n   created, corresponding
          to the Red and Blue MRT forwarding topologies\n   (call them red-FEC-A and
          blue-FEC-A).  A router supporting this MRT\n   transit forwarding mechanism
          advertises a different FEC-label binding\n   for each of the three topology-scoped
          FECs.  When a packet is\n   received with a label corresponding to red-FEC-A
          (for example), an\n   MRT transit router will determine the next hop for
          the MRT-Red\n   forwarding topology for that FEC, swap the incoming label
          with the\n   outgoing label corresponding to red-FEC-A learned from the
          MRT-Red\n   next-hop router, and forward the packet.\n   This forwarding
          mechanism has the useful property that the FEC\n   associated with the packet
          is maintained in the labels at each hop\n   along the MRT.  We will take
          advantage of this property when\n   specifying how to carry LDP traffic
          on MRT paths using multi-topology\n   LDP labels.\n   This approach is very
          simple for hardware to support.  However, it\n   reduces the label space
          for other uses, and it increases the memory\n   needed to store the labels
          and the communication required by LDP to\n   distribute FEC-label bindings.
          \ In general, this approach will also\n   increase the time needed to install
          the FRR entries in the Forwarding\n   Information Base (FIB) and, hence,
          the time needed before the next\n   failure can be protected.\n   This forwarding
          option uses the LDP signaling extensions described in\n   [RFC7307].  The
          MRT-specific LDP extensions required to support this\n   option will be
          described elsewhere.\n"
        title: 6.1.1.1.  Topology-Scoped FEC Encoded Using a Single Label (Option
          1A)
      - contents:
        - "6.1.1.2.  Topology and FEC Encoded Using a Two-Label Stack (Option 1B)\n
          \  With this forwarding mechanism, a two-label stack is used to encode\n
          \  the topology and the FEC of the packet.  The top label (topology-id\n
          \  label) identifies the MRT forwarding topology, while the second label\n
          \  (FEC label) identifies the FEC.  The top label would be a new FEC\n   type
          with two values corresponding to MRT Red and Blue topologies.\n   When an
          MRT transit router receives a packet with a topology-id\n   label, the router
          pops the top label and uses that it to guide the\n   next-hop selection
          in combination with the next label in the stack\n   (the FEC label).  The
          router then swaps the FEC label, using the FEC-\n   label bindings learned
          through normal LDP mechanisms.  The router\n   then pushes the topology-id
          label for the next hop.\n   As with Option 1A, this forwarding mechanism
          also has the useful\n   property that the FEC associated with the packet
          is maintained in the\n   labels at each hop along the MRT.\n   This forwarding
          mechanism has minimal usage of additional labels,\n   memory and LDP communication.
          \ It does increase the size of packets\n   and the complexity of the required
          label operations and lookups.\n   This forwarding option is consistent with
          context-specific label\n   spaces, as described in [RFC5331].  However,
          the precise LDP behavior\n   required to support this option for MRT has
          not been specified.\n"
        title: 6.1.1.2.  Topology and FEC Encoded Using a Two-Label Stack (Option
          1B)
      - contents:
        - "6.1.1.3.  Compatibility of MRT LDP Label Options 1A and 1B\n   MRT transit
          forwarding based on MRT LDP Label options 1A and 1B can\n   coexist in the
          same network, with a packet being forwarded along a\n   single MRT path
          using the single label of Option 1A for some hops and\n   the two-label
          stack of Option 1B for other hops.  However, to\n   simplify the process
          of MRT Island formation, we require that all\n   routers in the MRT Island
          support at least one common forwarding\n   mechanism.  As an example, the
          Default MRT Profile requires support\n   for the MRT LDP Label Option 1A
          forwarding mechanism.  This ensures\n   that the routers in an MRT island
          supporting the Default MRT Profile\n   will be able to establish MRT forwarding
          paths based on MRT LDP Label\n   Option 1A.  However, an implementation
          supporting Option 1A may also\n   support Option 1B.  If the scaling or
          performance characteristics for\n   the two options differ in this implementation,
          then it may be\n   desirable for a pair of adjacent routers to use Option
          1B labels\n   instead of the Option 1A labels.  If those routers successfully\n
          \  negotiate the use of Option 1B labels, they are free to use them.\n   This
          can occur without any of the other routers in the MRT Island\n   being made
          aware of it.\n   Note that this document only defines the Default MRT Profile,
          which\n   requires support for the MRT LDP Label Option 1A forwarding\n
          \  mechanism.\n"
        title: 6.1.1.3.  Compatibility of MRT LDP Label Options 1A and 1B
      - contents:
        - "6.1.1.4.  Required Support for MRT LDP Label Options\n   If a router supports
          a profile that includes the MRT LDP Label Option\n   1A for the MRT transit
          forwarding mechanism, then it MUST support\n   Option 1A, which encodes
          topology-scoped FECs using a single label.\n   The router MAY also support
          Option 1B.\n   If a router supports a profile that includes the MRT LDP
          Label Option\n   1B for the MRT transit forwarding mechanism, then it MUST
          support\n   Option 1B, which encodes the topology and FEC using a two-label\n
          \  stack.  The router MAY also support Option 1A.\n"
        title: 6.1.1.4.  Required Support for MRT LDP Label Options
      title: 6.1.1.  MRT LDP Labels
    - contents:
      - "6.1.2.  MRT IP Tunnels (Options 2A and 2B)\n   IP tunneling can also be used
        as an MRT transit forwarding mechanism.\n   Each router supporting this MRT
        transit forwarding mechanism\n   announces two additional loopback addresses
        and their associated MRT\n   color.  Those addresses are used as destination
        addresses for MRT-\n   blue and MRT-red IP tunnels, respectively.  The special
        loopback\n   addresses allow the transit nodes to identify the traffic as
        being\n   forwarded along either the MRT-blue or MRT-red topology to reach
        the\n   tunnel destination.  For example, an MRT ingress router can cause
        a\n   packet to be tunneled along the MRT-red path to router X by\n   encapsulating
        the packet using the MRT-red loopback address\n   advertised by router X.
        \ Upon receiving the packet, router X would\n   remove the encapsulation header
        and forward the packet based on the\n   original destination address.\n   Either
        IPv4 (Option 2A) or IPv6 (Option 2B) can be used as the\n   tunneling mechanism.\n
        \  Note that the two forwarding mechanisms using LDP Label options do\n   not
        require additional loopbacks per router, as is required by the IP\n   tunneling
        mechanism.  This is because LDP labels are used on a hop-\n   by-hop basis
        to identify MRT-blue and MRT-red forwarding topologies.\n"
      title: 6.1.2.  MRT IP Tunnels (Options 2A and 2B)
    title: 6.1.  Introduction to MRT Forwarding Options
  - contents:
    - "6.2.  Forwarding LDP Unicast Traffic over MRT Paths\n   In the previous section,
      we examined several options for providing\n   MRT transit forwarding functionality,
      which is independent of the\n   type of traffic being carried.  We now look
      at the MRT ingress\n   functionality, which will depend on the type of traffic
      being carried\n   (IP or LDP).  We start by considering LDP traffic.\n   We
      also simplify the initial discussion by assuming that the network\n   consists
      of a single IGP area, and that all routers in the network\n   participate in
      MRT.  Other deployment scenarios that require MRT\n   egress functionality are
      considered later in this document.\n   In principle, it is possible to carry
      LDP traffic in MRT IP tunnels.\n   However, for LDP traffic, it is desirable
      to avoid tunneling.\n   Tunneling LDP traffic to a remote node requires knowledge
      of remote\n   FEC-label bindings so that the LDP traffic can continue to be\n
      \  forwarded properly when it leaves the tunnel.  This requires targeted\n   LDP
      sessions, which can add management complexity.  As described\n   below, the
      two MRT forwarding mechanisms that use LDP labels do not\n   require targeted
      LDP sessions.\n"
    - contents:
      - "6.2.1.  Forwarding LDP Traffic Using MRT LDP Label Option 1A\n   The MRT
        LDP Label Option 1A forwarding mechanism uses topology-scoped\n   FECs encoded
        using a single label as described in Section 6.1.1.1.\n   When a PLR receives
        an LDP packet that needs to be forwarded on the\n   MRT-Red (for example),
        it does a label swap operation, replacing the\n   usual LDP label for the
        FEC with the MRT-Red label for that FEC\n   received from the next-hop router
        in the MRT-Red computed by the PLR.\n   When the next-hop router in the MRT-Red
        receives the packet with the\n   MRT-Red label for the FEC, the MRT transit
        forwarding functionality\n   continues as described in Section 6.1.1.1.  In
        this way, the original\n   FEC associated with the packet is maintained at
        each hop along the\n   MRT.\n"
      title: 6.2.1.  Forwarding LDP Traffic Using MRT LDP Label Option 1A
    - contents:
      - "6.2.2.  Forwarding LDP Traffic Using MRT LDP Label Option 1B\n   The MRT
        LDP Label Option 1B forwarding mechanism encodes the topology\n   and the
        FEC using a two-label stack as described in Section 6.1.1.2.\n   When a PLR
        receives an LDP packet that needs to be forwarded on the\n   MRT-Red, it first
        does a normal LDP label swap operation, replacing\n   the incoming normal
        LDP label associated with a given FEC with the\n   outgoing normal LDP label
        for that FEC learned from the next hop on\n   the MRT-Red.  In addition, the
        PLR pushes the topology-id label\n   associated with the MRT-Red, and forward
        the packet to the\n   appropriate next hop on the MRT-Red.  When the next-hop
        router in the\n   MRT-Red receives the packet with the MRT-Red label for the
        FEC, the\n   MRT transit forwarding functionality continues as described in\n
        \  Section 6.1.1.2.  As with Option 1A, the original FEC associated with\n
        \  the packet is maintained at each hop along the MRT.\n"
      title: 6.2.2.  Forwarding LDP Traffic Using MRT LDP Label Option 1B
    - contents:
      - "6.2.3.  Other Considerations for Forwarding LDP Traffic Using MRT LDP\n        Labels\n
        \  Note that forwarding LDP traffic using MRT LDP Labels can be done\n   without
        the use of targeted LDP sessions when an MRT path to the\n   destination FEC
        is used.  The alternates selected in [RFC7811] use\n   the MRT path to the
        destination FEC, so targeted LDP sessions are not\n   needed.  If instead
        one found it desirable to have the PLR use an MRT\n   to reach the primary
        next-next-hop for the FEC, and then continue\n   forwarding the LDP packet
        along the shortest path from the primary\n   next-next-hop, this would require
        tunneling to the primary next-next-\n   hop and a targeted LDP session for
        the PLR to learn the FEC-label\n   binding for primary next-next-hop to correctly
        forward the packet.\n"
      title: 6.2.3.  Other Considerations for Forwarding LDP Traffic Using MRT LDP
    - contents:
      - "6.2.4.  Required Support for LDP Traffic\n   For greatest hardware compatibility,
        routers implementing MRT fast\n   reroute of LDP traffic MUST support Option
        1A of encoding the MT-ID\n   in the labels (See Section 9).\n"
      title: 6.2.4.  Required Support for LDP Traffic
    title: 6.2.  Forwarding LDP Unicast Traffic over MRT Paths
  - contents:
    - "6.3.  Forwarding IP Unicast Traffic over MRT Paths\n   For IPv4 traffic, there
      is no currently practical alternative except\n   tunneling to gain the bits
      needed to indicate the MRT-Blue or MRT-Red\n   forwarding topology.  For IPv6
      traffic, in principle, one could\n   define bits in the IPv6 options header
      to indicate the MRT-Blue or\n   MRT-Red forwarding topology.  However, in this
      document, we have\n   chosen not to define a solution that would work for IPv6
      traffic but\n   not for IPv4 traffic.\n   The choice of tunnel egress is flexible
      since any router closer to\n   the destination than the next hop can work.  This
      architecture\n   assumes that the original destination in the area is selected
      (see\n   Section 11 for handling of multihomed prefixes); another possible\n
      \  choice is the next-next-hop towards the destination.  As discussed in\n   the
      previous section, for LDP traffic, using the MRT to the original\n   destination
      simplifies MRT-FRR by avoiding the need for targeted LDP\n   sessions to the
      next-next-hop.  For IP, that consideration doesn't\n   apply.\n   Some situations
      require tunneling IP traffic along an MRT to a tunnel\n   endpoint that is not
      the destination of the IP traffic.  These\n   situations will be discussed in
      detail later.  We note here that an\n   IP packet with a destination in a different
      IGP area/level from the\n   PLR should be tunneled on the MRT to the Area Border
      Router (ABR) or\n   Level Border Router (LBR) on the shortest path to the destination.\n
      \  For a destination outside of the PLR's MRT Island, the packet should\n   be
      tunneled on the MRT to a non-proxy-node immediately before the\n   named proxy-node
      on that particular color MRT.\n"
    - contents:
      - "6.3.1.  Tunneling IP Traffic Using MRT LDP Labels\n   An IP packet can be
        tunneled along an MRT path by pushing the\n   appropriate MRT LDP label(s).
        \ Tunneling using LDP labels, as opposed\n   to IP headers, has the advantage
        that more installed routers can do\n   line-rate encapsulation and decapsulation
        using LDP than using IP.\n   Also, no additional IP addresses would need to
        be allocated or\n   signaled.\n"
      - contents:
        - "6.3.1.1.  Tunneling IP Traffic Using MRT LDP Label Option 1A\n   The MRT
          LDP Label Option 1A forwarding mechanism uses topology-scoped\n   FECs encoded
          using a single label as described in Section 6.1.1.1.\n   When a PLR receives
          an IP packet that needs to be forwarded on the\n   MRT-Red to a particular
          tunnel endpoint, it does a label push\n   operation.  The label pushed is
          the MRT-Red label for a FEC\n   originated by the tunnel endpoint, learned
          from the next hop on the\n   MRT-Red.\n"
        title: 6.3.1.1.  Tunneling IP Traffic Using MRT LDP Label Option 1A
      - contents:
        - "6.3.1.2.  Tunneling IP Traffic Using MRT LDP Label Option 1B\n   The MRT
          LDP Label Option 1B forwarding mechanism encodes the topology\n   and the
          FEC using a two-label stack as described in Section 6.1.1.2.\n   When a
          PLR receives an IP packet that needs to be forwarded on the\n   MRT-Red
          to a particular tunnel endpoint, the PLR pushes two labels on\n   the IP
          packet.  The first (inner) label is the normal LDP label\n   learned from
          the next hop on the MRT-Red, associated with a FEC\n   originated by the
          tunnel endpoint.  The second (outer) label is the\n   topology-id label
          associated with the MRT-Red.\n   For completeness, we note here a potential
          variation that uses a\n   single label as opposed to two labels.  In order
          to tunnel an IP\n   packet over an MRT to the destination of the IP packet
          as opposed to\n   an arbitrary tunnel endpoint, one could just push a topology-id
          label\n   directly onto the packet.  An MRT transit router would need to
          pop\n   the topology-id label, do an IP route lookup in the context of that\n
          \  topology-id label, and push the topology-id label.\n"
        title: 6.3.1.2.  Tunneling IP Traffic Using MRT LDP Label Option 1B
      title: 6.3.1.  Tunneling IP Traffic Using MRT LDP Labels
    - contents:
      - "6.3.2.  Tunneling IP Traffic Using MRT IP Tunnels\n   In order to tunnel
        over the MRT to a particular tunnel endpoint, the\n   PLR encapsulates the
        original IP packet with an additional IP header\n   using the MRT-Blue or
        MRT-Red loopback address of the tunnel\n   endpoint.\n"
      title: 6.3.2.  Tunneling IP Traffic Using MRT IP Tunnels
    - contents:
      - "6.3.3.  Required Support for IP Traffic\n   For greatest hardware compatibility
        and ease in removing the MRT-\n   topology marking at area/level boundaries,
        routers that support MPLS\n   and implement IP MRT fast reroute MUST support
        tunneling of IP\n   traffic using MRT LDP Label Option 1A (topology-scoped
        FEC encoded\n   using a single label).\n"
      title: 6.3.3.  Required Support for IP Traffic
    title: 6.3.  Forwarding IP Unicast Traffic over MRT Paths
  title: 6.  Unicast Forwarding with MRT Fast Reroute
- contents:
  - "7.  MRT Island Formation\n   The purpose of communicating support for MRT is
    to indicate that the\n   MRT-Blue and MRT-Red forwarding topologies are created
    for transit\n   traffic.  The MRT architecture allows for different, potentially\n
    \  incompatible options.  In order to create consistent MRT forwarding\n   topologies,
    the routers participating in a particular MRT Island need\n   to use the same
    set of options.  These options are grouped into MRT\n   profiles.  In addition,
    the routers in an MRT Island all need to use\n   the same set of nodes and links
    within the Island when computing the\n   MRT forwarding topologies.  This section
    describes the information\n   used by a router to determine the nodes and links
    to include in a\n   particular MRT Island.  Some information already exists in
    the IGPs\n   and can be used by MRT in Island formation, subject to the\n   interpretation
    defined here.\n   Other information needs to be communicated between routers for
    which\n   there do not currently exist protocol extensions.  This new\n   information
    needs to be shared among all routers in an IGP area, so\n   defining extensions
    to existing IGPs to carry this information makes\n   sense.  These new protocol
    extensions will be defined elsewhere.\n   Deployment scenarios using multi-topology
    OSPF or IS-IS, or running\n   both IS-IS and OSPF on the same routers is out of
    scope for this\n   specification.  As with LFA, MRT-FRR does not support OSPF
    Virtual\n   Links.\n   At a high level, an MRT Island is defined as the set of
    routers\n   supporting the same MRT profile, in the same IGP area/level and with\n
    \  bidirectional links interconnecting those routers.  More detailed\n   descriptions
    of these criteria are given below.\n"
  - contents:
    - "7.1.  IGP Area or Level\n   All links in an MRT Island are bidirectional and
      belong to the same\n   IGP area or level.  For IS-IS, a link belonging to both
      Level-1 and\n   Level-2 would qualify to be in multiple MRT Islands.  A given
      ABR or\n   LBR can belong to multiple MRT Islands, corresponding to the areas
      or\n   levels in which it participates.  Inter-area forwarding behavior is\n
      \  discussed in Section 10.\n"
    title: 7.1.  IGP Area or Level
  - contents:
    - "7.2.  Support for a Specific MRT Profile\n   All routers in an MRT Island support
      the same MRT profile.  A router\n   advertises support for a given MRT profile
      using an 8-bit MRT Profile\n   ID value.  The \"MRT Profile Identifier Registry\"
      is defined in this\n   document.  The protocol extensions for advertising the
      MRT Profile ID\n   value will be defined in a future specification.  A given
      router can\n   support multiple MRT profiles and participate in multiple MRT\n
      \  Islands.  The options that make up an MRT Profile, as well as the\n   Default
      MRT Profile, are defined in Section 8.\n   The process of MRT Island formation
      takes place independently for\n   each MRT profile advertised by a given router.
      \ For example, consider\n   a network with 40 connected routers in the same
      area advertising\n   support for MRT Profile A and MRT Profile B.  Two distinct
      MRT\n   Islands will be formed corresponding to Profile A and Profile B, with\n
      \  each island containing all 40 routers.  A complete set of maximally\n   redundant
      trees will be computed for each island following the rules\n   defined for each
      profile.  If we add a third MRT Profile to this\n   example, with Profile C
      being advertised by a connected subset of 30\n   routers, there will be a third
      MRT Island formed corresponding to\n   those 30 routers, and a third set of
      maximally redundant trees will\n   be computed.  In this example, 40 routers
      would compute and install\n   two sets of MRT transit forwarding entries corresponding
      to Profiles\n   A and B, while 30 routers would compute and install three sets
      of MRT\n   transit forwarding entries corresponding to Profiles A, B, and C.\n"
    title: 7.2.  Support for a Specific MRT Profile
  - contents:
    - "7.3.  Excluding Additional Routers and Interfaces from the MRT Island\n   MRT
      takes into account existing IGP mechanisms for discouraging\n   traffic from
      using particular links and routers, and it introduces an\n   MRT-specific exclusion
      mechanism for links.\n"
    - contents:
      - "7.3.1.  Existing IGP Exclusion Mechanisms\n   Mechanisms for discouraging
        traffic from using particular links\n   already exist in IS-IS and OSPF.  In
        IS-IS, an interface configured\n   with a metric of 2^24-2 (0xFFFFFE) will
        only be used as a last\n   resort.  (An interface configured with a metric
        of 2^24-1 (0xFFFFFF)\n   will not be advertised into the topology.)  In OSPF,
        an interface\n   configured with a metric of 2^16-1 (0xFFFF) will only be
        used as a\n   last resort.  These metrics can be configured manually to enforce\n
        \  administrative policy or they can be set in an automated manner as\n   with
        LDP IGP synchronization [RFC5443].\n   Mechanisms also already exist in IS-IS
        and OSPF to discourage or\n   prevent transit traffic from using a particular
        router.  In IS-IS,\n   the overload bit is prevents transit traffic from using
        a router.\n   For OSPFv2 and OSPFv3, [RFC6987] specifies setting all outgoing\n
        \  interface metrics to 0xFFFF to discourage transit traffic from using\n
        \  a router.  ([RFC6987] defines the metric value 0xFFFF as\n   MaxLinkMetric,
        a fixed architectural value for OSPF.)  For OSPFv3,\n   [RFC5340] specifies
        that a router be excluded from the intra-area SPT\n   computation if the V6-bit
        or R-bit of the Link State Advertisement\n   (LSA) options is not set in the
        Router LSA.\n   The following rules for MRT Island formation ensure that MRT
        FRR\n   protection traffic does not use a link or router that is discouraged\n
        \  or prevented from carrying traffic by existing IGP mechanisms.\n   1.  A
        bidirectional link MUST be excluded from an MRT Island if\n       either the
        forward or reverse cost on the link is 0xFFFFFE (for\n       IS-IS) or 0xFFFF
        for OSPF.\n   2.  A router MUST be excluded from an MRT Island if it is advertised\n
        \      with the overload bit set (for IS-IS), or it is advertised with\n       metric
        values of 0xFFFF on all of its outgoing interfaces (for\n       OSPFv2 and
        OSPFv3).\n   3.  A router MUST be excluded from an MRT Island if it is advertised\n
        \      with either the V6-bit or R-bit of the LSA options not set in the\n
        \      Router LSA.\n"
      title: 7.3.1.  Existing IGP Exclusion Mechanisms
    - contents:
      - "7.3.2.  MRT-Specific Exclusion Mechanism\n   This architecture also defines
        a means of excluding an otherwise\n   usable link from MRT Islands.  The protocol
        extensions for\n   advertising that a link is MRT-Ineligible will be defined
        elsewhere.\n   A link with either interface advertised as MRT-Ineligible MUST
        be\n   excluded from an MRT Island.  Note that an interface advertised as\n
        \  MRT-Ineligible by a router is ineligible with respect to all profiles\n
        \  advertised by that router.\n"
      title: 7.3.2.  MRT-Specific Exclusion Mechanism
    title: 7.3.  Excluding Additional Routers and Interfaces from the MRT Island
  - contents:
    - "7.4.  Connectivity\n   All of the routers in an MRT Island MUST be connected
      by\n   bidirectional links with other routers in the MRT Island.\n   Disconnected
      MRT Islands will operate independently of one another.\n"
    title: 7.4.  Connectivity
  - contents:
    - "7.5.  Algorithm for MRT Island Identification\n   An algorithm that allows
      a computing router to identify the routers\n   and links in the local MRT Island
      satisfying the above rules is given\n   in Section 5.2 of [RFC7811].\n"
    title: 7.5.  Algorithm for MRT Island Identification
  title: 7.  MRT Island Formation
- contents:
  - "8.  MRT Profile\n   An MRT Profile is a set of values and options related to
    MRT\n   behavior.  The complete set of options is designated by the\n   corresponding
    8-bit Profile ID value.\n   This document specifies the values and options that
    correspond to the\n   Default MRT Profile (Profile ID = 0).  Future documents
    may define\n   other MRT Profiles by specifying the MRT Profile Options below.\n"
  - contents:
    - "8.1.  MRT Profile Options\n   Below is a description of the values and options
      that define an MRT\n   Profile.\n   MRT Algorithm:  This identifies the particular
      algorithm for\n      computing maximally redundant trees used by the router
      for this\n      profile.\n   MRT-Red MT-ID:  This specifies the MPLS MT-ID to
      be associated with\n      the MRT-Red forwarding topology.  It is allocated
      from the MPLS\n      Multi-Topology Identifiers Registry.\n   MRT-Blue MT-ID:
      \ This specifies the MPLS MT-ID to be associated with\n      the MRT-Blue forwarding
      topology.  It is allocated from the MPLS\n      Multi-Topology Identifiers Registry.\n
      \  GADAG Root Selection Policy:  This specifies the manner in which the\n      GADAG
      root is selected.  All routers in the MRT Island need to use\n      the same
      GADAG root in the calculations used construct the MRTs.\n      A valid GADAG
      Root Selection Policy MUST be such that each router\n      in the MRT Island
      chooses the same GADAG root based on information\n      available to all routers
      in the MRT Island.  GADAG Root Selection\n      Priority values, advertised
      as router-specific MRT parameters, MAY\n      be used in a GADAG Root Selection
      Policy.\n   MRT Forwarding Mechanism:  This specifies which forwarding mechanism\n
      \     the router uses to carry transit traffic along MRT paths.  A\n      router
      that supports a specific MRT forwarding mechanism must\n      program appropriate
      next hops into the forwarding plane.  The\n      current options are MRT LDP
      Label Option 1A, MRT LDP Label Option\n      1B, IPv4 Tunneling, IPv6 Tunneling,
      and None.  If IPv4 is\n      supported, then both MRT-Red and MRT-Blue IPv4
      loopback addresses\n      SHOULD be specified.  If IPv6 is supported, both MRT-Red
      and MRT-\n      Blue IPv6 loopback addresses SHOULD be specified.\n   Recalculation:
      \ Recalculation specifies the process and timing by\n      which new MRTs are
      computed after the topology has been modified.\n   Area/Level Border Behavior:
      \ This specifies how traffic traveling on\n      the MRT-Blue or MRT-Red in
      one area should be treated when it\n      passes into another area.\n   Other
      Profile-Specific Behavior:  Depending upon the use-case for the\n      profile,
      there may be additional profile-specific behavior.\n   When a new MRT Profile
      is defined, new and unique values should be\n   allocated from the \"MPLS Multi-Topology
      Identifiers Registry\",\n   corresponding to the MRT-Red and MRT-Blue MT-ID
      values for the new\n   MRT Profile.\n   If a router advertises support for multiple
      MRT profiles, then it\n   MUST create the transit forwarding topologies for
      each of those,\n   unless the profile specifies the None option for the MRT
      Forwarding\n   Mechanism.\n   The ability of MRT-FRR to support transit forwarding
      entries for\n   multiple profiles can be used to facilitate a smooth transition
      from\n   an existing deployed MRT Profile to a new MRT Profile.  The new\n   profile
      can be activated in parallel with the existing profile,\n   installing the transit
      forwarding entries for the new profile without\n   affecting the transit forwarding
      entries for the existing profile.\n   Once the new transit forwarding state
      has been verified, the router\n   can be configured to use the alternates computed
      by the new profile\n   in the event of a failure.\n"
    title: 8.1.  MRT Profile Options
  - contents:
    - "8.2.  Router-Specific MRT Parameters\n   For some profiles, additional router-specific
      MRT parameters may need\n   to be advertised.  While the set of options indicated
      by the MRT\n   Profile ID must be identical for all routers in an MRT Island,
      these\n   router-specific MRT parameters may differ between routers in the same\n
      \  MRT Island.  Several such parameters are described below.\n   GADAG Root
      Selection Priority:   A GADAG Root Selection Policy MAY\n      rely on the GADAG
      Root Selection Priority values advertised by\n      each router in the MRT Island.
      \ A GADAG Root Selection Policy may\n      use the GADAG Root Selection Priority
      to allow network operators\n      to configure a parameter to ensure that the
      GADAG root is selected\n      from a particular subset of routers.  An example
      of this use of\n      the GADAG Root Selection Priority value by the GADAG Root\n
      \     Selection Policy is given in the Default MRT Profile below.\n   MRT-Red
      Loopback Address:   This provides the router's loopback\n      address to reach
      the router via the MRT-Red forwarding topology.\n      It can be specified for
      either IPv4 or IPv6.  Note that this\n      parameter is not needed to support
      the Default MRT Profile.\n   MRT-Blue Loopback Address:   This provides the
      router's loopback\n      address to reach the router via the MRT-Blue forwarding
      topology.\n      It can be specified for either IPv4 and IPv6.  Note that this\n
      \     parameter is not needed to support the Default MRT Profile.\n   Protocol
      extensions for advertising a router's GADAG Root Selection\n   Priority value
      will be defined in other documents.  Protocol\n   extensions for the advertising
      a router's MRT-Red and MRT-Blue\n   loopback addresses will be defined elsewhere.\n"
    title: 8.2.  Router-Specific MRT Parameters
  - contents:
    - "8.3.  Default MRT Profile\n   The following set of options defines the Default
      MRT Profile.  The\n   Default MRT Profile is indicated by the MRT Profile ID
      value of 0.\n   MRT Algorithm:   MRT Lowpoint algorithm defined in [RFC7811].\n
      \  MRT-Red MPLS MT-ID:   This temporary registration has been allocated\n      from
      the \"MPLS Multi-Topology Identifiers\" registry.  The\n      registration request
      appears in [LDP-MRT].\n   MRT-Blue MPLS MT-ID:   This temporary registration
      has been allocated\n      from the \"MPLS Multi-Topology Identifiers\" registry.
      \ The\n      registration request appears in [LDP-MRT].\n   GADAG Root Selection
      Policy:   Among the routers in the MRT Island\n      with the lowest numerical
      value advertised for GADAG Root\n      Selection Priority, an implementation
      MUST pick the router with\n      the highest Router ID to be the GADAG root.
      \ Note that a lower\n      numerical value for GADAG Root Selection Priority
      indicates a\n      higher preference for selection.\n   Forwarding Mechanisms:
      \  MRT LDP Label Option 1A\n   Recalculation:   Recalculation of MRTs SHOULD
      occur as described in\n      Section 12.2.  This allows the MRT forwarding topologies
      to\n      support IP/LDP fast-reroute traffic.\n   Area/Level Border Behavior:
      \  As described in Section 10, ABRs/LBRs\n      SHOULD ensure that traffic leaving
      the area also exits the MRT-Red\n      or MRT-Blue forwarding topology.\n"
    title: 8.3.  Default MRT Profile
  title: 8.  MRT Profile
- contents:
  - "9.  LDP Signaling Extensions and Considerations\n   The protocol extensions for
    LDP will be defined in another document.\n   A router must indicate that it has
    the ability to support MRT; having\n   this explicit allows the use of MRT-specific
    processing, such as\n   special handling of FECs sent with the Rainbow MRT MT-ID.\n
    \  A FEC sent with the Rainbow MRT MT-ID indicates that the FEC applies\n   to
    all the MRT-Blue and MRT-Red MT-IDs in supported MRT profiles.\n   The FEC-label
    bindings for the default shortest-path-based MT-ID 0\n   MUST still be sent (even
    though it could be inferred from the Rainbow\n   FEC-label bindings) to ensure
    continuous operation of normal LDP\n   forwarding.  The Rainbow MRT MT-ID is defined
    to provide an easy way\n   to handle the special signaling that is needed at ABRs
    or LBRs.  It\n   avoids the problem of needing to signal different MPLS labels
    to\n   different LDP neighbors for the same FEC.  Because the Rainbow MRT\n   MT-ID
    is used only by ABRs/LBRs or an LDP egress router, it is not\n   MRT profile specific.\n
    \  The value of the Rainbow MRT MPLS MT-ID has been temporarily\n   allocated
    from the \"MPLS Multi-Topology Identifiers\" registry.  The\n   registration request
    appears in [LDP-MRT].\n"
  title: 9.  LDP Signaling Extensions and Considerations
- contents:
  - "10.  Inter-area Forwarding Behavior\n   An ABR/LBR has two forwarding roles.
    \ First, it forwards traffic\n   within areas.  Second, it forwards traffic from
    one area into\n   another.  These same two roles apply for MRT transit traffic.\n
    \  Traffic on MRT-Red or MRT-Blue destined inside the area needs to stay\n   on
    MRT-Red or MRT-Blue in that area.  However, it is desirable for\n   traffic leaving
    the area to also exit MRT-Red or MRT-Blue and return\n   to shortest path forwarding.\n
    \  For unicast MRT-FRR, the need to stay on an MRT forwarding topology\n   terminates
    at the ABR/LBR whose best route is via a different area/\n   level.  It is highly
    desirable to go back to the default forwarding\n   topology when leaving an area/level.
    \ There are three basic reasons\n   for this.  First, the default topology uses
    shortest paths; the\n   packet will thus take the shortest possible route to the
    destination.\n   Second, this allows a single router failure that manifests itself
    in\n   multiple areas (as would be the case with an ABR/LBR failure) to be\n   separately
    identified and repaired around.  Third, the packet can be\n   fast-rerouted again,
    if necessary, due to a second distinct failure\n   in a different area.\n   In
    OSPF, an ABR that receives a packet on MRT-Red or MRT-Blue towards\n   destination
    Z should continue to forward the packet along MRT-Red or\n   MRT-Blue only if
    the best route to Z is in the same OSPF area as the\n   interface that the packet
    was received on.  Otherwise, the packet\n   should be removed from MRT-Red or
    MRT-Blue and forwarded on the\n   shortest-path default forwarding topology.\n
    \  The above description applies to OSPF.  The same essential behavior\n   also
    applies to IS-IS if one substitutes IS-IS level for OSPF area.\n   However, the
    analogy with OSPF is not exact.  An interface in OSPF\n   can only be in one area,
    whereas an interface in IS-IS can be in both\n   Level-1 and Level-2.  Therefore,
    to avoid confusion and address this\n   difference, we explicitly describe the
    behavior for IS-IS in\n   Appendix A.  In the following sections, only the OSPF
    terminology is\n   used.\n"
  - contents:
    - "10.1.  ABR Forwarding Behavior with MRT LDP Label Option 1A\n   For LDP forwarding
      where a single label specifies (MT-ID, FEC), the\n   ABR is responsible for
      advertising the proper label to each neighbor.\n   Assume that an ABR has allocated
      three labels for a particular\n   destination: L_primary, L_blue, and L_red.
      \ To those routers in the\n   same area as the best route to the destination,
      the ABR advertises\n   the following FEC-label bindings: L_primary for the default
      topology,\n   L_blue for the MRT-Blue MT-ID, and L_red for the MRT-Red MT-ID,
      as\n   expected.  However, to routers in other areas, the ABR advertises the\n
      \  following FEC-label bindings: L_primary for the default topology and\n   L_primary
      for the Rainbow MRT MT-ID.  Associating L_primary with the\n   Rainbow MRT MT-ID
      causes the receiving routers to use L_primary for\n   the MRT-Blue MT-ID and
      for the MRT-Red MT-ID.\n   The ABR installs all next hops for the best area:
      primary next hops\n   for L_primary, MRT-Blue next hops for L_blue, and MRT-Red
      next hops\n   for L_red.  Because the ABR advertised (Rainbow MRT MT-ID, FEC)
      with\n   L_primary to neighbors not in the best area, packets from those\n   neighbors
      will arrive at the ABR with a label L_primary and will be\n   forwarded into
      the best area along the default topology.  By\n   controlling what labels are
      advertised, the ABR can thus enforce that\n   packets exiting the area do so
      on the shortest-path default topology.\n"
    - contents:
      - "10.1.1.  Motivation for Creating the Rainbow-FEC\n   The desired forwarding
        behavior could be achieved in the above\n   example without using the Rainbow-FEC.
        \ This could be done by having\n   the ABR advertise the following FEC-label
        bindings to neighbors not\n   in the best area: L1_primary for the default
        topology, L1_primary for\n   the MRT-Blue MT-ID, and L1_primary for the MRT-Red
        MT-ID.  Doing this\n   would require machinery to spoof the labels used in
        FEC-label binding\n   advertisements on a per-neighbor basis.  Such label-spoofing\n
        \  machinery does not currently exist in most LDP implementations and\n   doesn't
        have other obvious uses.\n   Many existing LDP implementations do however
        have the ability to\n   filter FEC-label binding advertisements on a per-neighbor
        basis.  The\n   Rainbow-FEC allows us to reuse the existing per-neighbor FEC\n
        \  filtering machinery to achieve the desired result.  By introducing\n   the
        Rainbow FEC, we can use per-neighbor FEC-filtering machinery to\n   advertise
        the FEC-label binding for the Rainbow-FEC (and filter those\n   for MRT-Blue
        and MRT-Red) to non-best-area neighbors of the ABR.\n   An ABR may choose
        to either distribute the Rainbow-FEC or distribute\n   separate MRT-Blue and
        MRT-Red advertisements.  This is a local\n   choice.  A router that supports
        the MRT LDP Label Option 1A\n   forwarding mechanism MUST be able to receive
        and correctly interpret\n   the Rainbow-FEC.\n"
      title: 10.1.1.  Motivation for Creating the Rainbow-FEC
    title: 10.1.  ABR Forwarding Behavior with MRT LDP Label Option 1A
  - contents:
    - "10.2.  ABR Forwarding Behavior with IP Tunneling (Option 2)\n   If IP tunneling
      is used, then the ABR behavior is dependent upon the\n   outermost IP address.
      \ If the outermost IP address is an MRT loopback\n   address of the ABR, then
      the packet is decapsulated and forwarded\n   based upon the inner IP address,
      which should go on the default SPT\n   topology.  If the outermost IP address
      is not an MRT loopback address\n   of the ABR, then the packet is simply forwarded
      along the associated\n   forwarding topology.  A PLR sending traffic to a destination
      outside\n   its local area/level will pick the MRT and use the associated MRT\n
      \  loopback address of the selected ABR advertising the lowest cost to\n   the
      external destination.\n   Thus, for these two MRT forwarding mechanisms (MRT
      LDP Label Option\n   1A and IP tunneling Option 2), there is no need for additional\n
      \  computation or per-area forwarding state.\n"
    title: 10.2.  ABR Forwarding Behavior with IP Tunneling (Option 2)
  - contents:
    - "10.3.  ABR Forwarding Behavior with MRT LDP Label Option 1B\n   The other MRT
      forwarding mechanism described in Section 6 uses two\n   labels: a topology-id
      label and a FEC-label.  This mechanism would\n   require that any router whose
      MRT-Red or MRT-Blue next hop is an ABR\n   would need to determine whether the
      ABR would forward the packet out\n   of the area/level.  If so, then that router
      should pop off the\n   topology-id label before forwarding the packet to the
      ABR.\n   For example, in Figure 3, if node H fails, node E has to put traffic\n
      \  towards prefix p onto MRT-Red.  But since node D knows that ABR1 will\n   use
      a best route from another area, it is safe for D to pop the\n   topology-id
      label and just forward the packet to ABR1 along the MRT-\n   Red next hop.  ABR1
      will use the shortest path in Area 10.\n   In all cases for IS-IS and most cases
      for OSPF, the penultimate\n   router can determine what decision the adjacent
      ABR will make.  The\n   one case where it can't be determined is when two ASBRs
      are in\n   different non-backbone areas attached to the same ABR, then the\n
      \  ASBR's Area ID may be needed for tie-breaking (prefer the route with\n   the
      largest OSPF area ID), and the Area ID isn't announced as part of\n   the ASBR
      LSA.  In this one case, suboptimal forwarding along the MRT\n   in the other
      area would happen.  If that becomes a realistic\n   deployment scenario, protocol
      extensions could be developed to\n   address this issue.\n       +----[C]----
      \    --[D]--[E]                --[D]--[E]\n       |           \\   /         \\
      \              /         \\\n   p--[A] Area 10 [ABR1]  Area 0 [H]--p   +-[ABR1]
      \ Area 0 [H]-+\n       |           /   \\         /        |      \\         /
      \  |\n       +----[B]----     --[F]--[G]        |       --[F]--[G]   |\n                                          |
      \                   |\n                                          | other              |\n
      \                                         +----------[p]-------+\n                                            area\n
      \        (a) Example topology        (b) Proxy node view in Area 0 nodes\n                   +----[C]<---
      \      [D]->[E]\n                   V           \\             \\\n                +-[A]
      Area 10 [ABR1]  Area 0 [H]-+\n                |  ^           /             /
      \  |\n                |  +----[B]<---       [F]->[G]   V\n                |
      \                               |\n                +------------->[p]<--------------+\n
      \                 (c) rSPT towards destination p\n             ->[D]->[E]                         -<[D]<-[E]\n
      \           /          \\                       /         \\\n       [ABR1]
      \ Area 0 [H]-+             +-[ABR1]         [H]\n                      /   |
      \            |      \\\n               [F]->[G]   V             V       -<[F]<-[G]\n
      \                         |             |\n                          |             |\n
      \               [p]<------+             +--------->[p]\n     (d) MRT-Blue in
      Area 0           (e) MRT-Red in Area 0\n                Figure 3: ABR Forwarding
      Behavior and MRTs\n"
    title: 10.3.  ABR Forwarding Behavior with MRT LDP Label Option 1B
  title: 10.  Inter-area Forwarding Behavior
- contents:
  - "11.  Prefixes Multiply Attached to the MRT Island\n   How a computing router
    S determines its local MRT Island for each\n   supported MRT profile is already
    discussed in Section 7.\n   There are two types of prefixes or FECs that may be
    multiply attached\n   to an MRT Island.  The first type are multihomed prefixes
    that\n   usually connect at a domain or protocol boundary.  The second type\n
    \  represent routers that do not support the profile for the MRT Island.\n   The
    key difference is whether the traffic, once out of the MRT\n   Island, might re-enter
    the MRT Island if a loop-free exit point is\n   not selected.\n   FRR using LFA
    has the useful property that it is able to protect\n   multihomed prefixes against
    ABR failure.  For instance, if a prefix\n   from the backbone is available via
    both ABR A and ABR B, if A fails,\n   then the traffic should be redirected to
    B.  This can be accomplished\n   with MRT FRR as well.\n   If ASBR protection
    is desired, this has additional complexities if\n   the ASBRs are in different
    areas.  Similarly, protecting labeled BGP\n   traffic in the event of an ASBR
    failure has additional complexities\n   due to the per-ASBR label spaces involved.\n
    \  As discussed in [RFC5286], a multihomed prefix could be:\n   o  An out-of-area
    prefix announced by more than one ABR,\n   o  An AS-External route announced by
    two or more ASBRs,\n   o  A prefix with iBGP multipath to different ASBRs,\n   o
    \ etc.\n   See Appendix B for a discussion of a general issue with multihomed\n
    \  prefixes connected in two different areas.\n   There are also two different
    approaches to protection.  The first is\n   tunnel endpoint selection where the
    PLR picks a router to tunnel to\n   where that router is loop-free with respect
    to the failure-point.\n   Conceptually, the set of candidate routers to provide
    LFAs expands to\n   all routers that can be reached via an MRT alternate, attached
    to the\n   prefix.\n   The second is to use a proxy-node, which can be named via
    MPLS label\n   or IP address, and pick the appropriate label or IP address to
    reach\n   it on either MRT-Blue or MRT-Red as appropriate to avoid the failure\n
    \  point.  A proxy-node can represent a destination prefix that can be\n   attached
    to the MRT Island via at least two routers.  It is termed a\n   named proxy-node
    if there is a way that traffic can be encapsulated\n   to reach specifically that
    proxy-node; this could be because there is\n   an LDP FEC for the associated prefix
    or because MRT-Red and MRT-Blue\n   IP addresses are advertised (in an as-yet
    undefined fashion) for that\n   proxy-node.  Traffic to a named proxy-node may
    take a different path\n   than traffic to the attaching router; traffic is also
    explicitly\n   forwarded from the attaching router along a predetermined interface\n
    \  towards the relevant prefixes.\n   For IP traffic, multihomed prefixes can
    use tunnel endpoint\n   selection.  For IP traffic that is destined to a router
    outside the\n   MRT Island, if that router is the egress for a FEC advertised
    into\n   the MRT Island, then the named proxy-node approach can be used.\n   For
    LDP traffic, there is always a FEC advertised into the MRT\n   Island.  The named
    proxy-node approach should be used, unless the\n   computing router S knows the
    label for the FEC at the selected tunnel\n   endpoint.\n   If a FEC is advertised
    from outside the MRT Island into the MRT\n   Island and the forwarding mechanism
    specified in the profile includes\n   LDP Label Option 1A, then the routers learning
    that FEC MUST also\n   advertise labels for (MRT-Red, FEC) and (MRT-Blue, FEC)
    to neighbors\n   inside the MRT Island.  Any router receiving a FEC corresponding
    to a\n   router outside the MRT Island or to a multihomed prefix MUST compute\n
    \  and install the transit MRT-Blue and MRT-Red next hops for that FEC.\n   The
    FEC-label bindings for the topology-scoped FECs ((MT-ID 0, FEC),\n   (MRT-Red,
    FEC), and (MRT-Blue, FEC)) MUST also be provided via LDP to\n   neighbors inside
    the MRT Island.\n"
  - contents:
    - "11.1.  Protecting Multihomed Prefixes Using Tunnel Endpoint Selection\n   Tunnel
      endpoint selection is a local matter for a router in the MRT\n   Island since
      it pertains to selecting and using an alternate and does\n   not affect the
      transit MRT-Red and MRT-Blue forwarding topologies.\n   Let the computing router
      be S and the next hop F be the node whose\n   failure is to be avoided.  Let
      the destination be prefix p.  Have A\n   be the router to which the prefix p
      is attached for S's shortest path\n   to p.\n   The candidates for tunnel endpoint
      selection are those to which the\n   destination prefix is attached in the area/level.
      \ For a particular\n   candidate B, it is necessary to determine if B is loop-free
      to reach\n   p with respect to S and F for node-protection or at least with\n
      \  respect to S and the link (S, F) for link-protection.  If B will\n   always
      prefer to send traffic to p via a different area/level, then\n   this is definitional.
      \ Otherwise, distance-based computations are\n   necessary and an SPF from B's
      perspective may be necessary.  The\n   following equations give the checks needed;
      the rationale is similar\n   to that given in [RFC5286].  In the inequalities
      below, D_opt(X,Y)\n   means the shortest distance from node X to node Y, and
      D_opt(X,p)\n   means the shortest distance from node X to prefix p.\n   Loop-Free
      for S: D_opt(B, p) < D_opt(B, S) + D_opt(S, p)\n   Loop-Free for F: D_opt(B,
      p) < D_opt(B, F) + D_opt(F, p)\n   The latter is equivalent to the following,
      which avoids the need to\n   compute the shortest path from F to p.\n  Loop-Free
      for F: D_opt(B, p) < D_opt(B, F) + D_opt(S, p) - D_opt(S, F)\n   Finally, the
      rules for Endpoint selection are given below.  The basic\n   idea is to repair
      to the prefix-advertising router selected for the\n   shortest-path and only
      to select and tunnel to a different endpoint\n   if necessary (e.g., A=F or
      F is a cut-vertex or the link (S,F) is a\n   cut-link).\n   1.  Does S have
      a node-protecting alternate to A?  If so, select\n       that.  Tunnel the packet
      to A along that alternate.  For example,\n       if LDP is the forwarding mechanism,
      then push the label (MRT-Red,\n       A) or (MRT-Blue, A) onto the packet.\n
      \  2.  If not, then is there a router B that is loop-free to reach p\n       while
      avoiding both F and S?  If so, select B as the endpoint.\n       Determine the
      MRT alternate to reach B while avoiding F.  Tunnel\n       the packet to B along
      that alternate.  For example, with LDP,\n       push the label (MRT-Red, B)
      or (MRT-Blue, B) onto the packet.\n   3.  If not, then does S have a link-protecting
      alternate to A?  If\n       so, select that.\n   4.  If not, then is there a
      router B that is loop-free to reach p\n       while avoiding S and the link
      from S to F?  If so, select B as\n       the endpoint and the MRT alternate
      for reaching B from S that\n       avoid the link (S,F).\n   The tunnel endpoint
      selected will receive a packet destined to itself\n   and, being the egress,
      will pop that MPLS label (or have signaled\n   Implicit Null) and forward based
      on what is underneath.  This\n   suffices for IP traffic since the tunnel endpoint
      can use the IP\n   header of the original packet to continue forwarding the
      packet.\n   However, tunneling of LDP traffic requires targeted LDP sessions
      for\n   learning the FEC-label binding at the tunnel endpoint.\n"
    title: 11.1.  Protecting Multihomed Prefixes Using Tunnel Endpoint Selection
  - contents:
    - "11.2.  Protecting Multihomed Prefixes Using Named Proxy-Nodes\n   Instead,
      the named proxy-node method works with LDP traffic without\n   the need for
      targeted LDP sessions.  It also has a clear advantage\n   over tunnel endpoint
      selection, in that it is possible to explicitly\n   forward from the MRT Island
      along an interface to a loop-free island\n   neighbor when that interface may
      not be a primary next hop.\n   A named proxy-node represents one or more destinations
      and, for LDP\n   forwarding, has a FEC associated with it that is signaled into
      the\n   MRT Island.  Therefore, it is possible to explicitly label packets to\n
      \  go to (MRT-Red, FEC) or (MRT-Blue, FEC); at the border of the MRT\n   Island,
      the label will swap to meaning (MT-ID 0, FEC).  It would be\n   possible to
      have named proxy-nodes for IP forwarding, but this would\n   require extensions
      to signal two IP addresses to be associated with\n   MRT-Red and MRT-Blue for
      the proxy-node.  A named proxy-node can be\n   uniquely represented by the two
      routers in the MRT Island to which it\n   is connected.  The extensions to signal
      such IP addresses will be\n   defined elsewhere.  The details of what label-bindings
      must be\n   originated will be described in another document.\n   Computing
      the MRT next hops to a named proxy-node and the MRT\n   alternate for the computing
      router S to avoid a particular failure\n   node F is straightforward.  The details
      of the simple constant-time\n   functions, Select_Proxy_Node_NHs() and\n   Select_Alternates_Proxy_Node(),
      are given in [RFC7811].  A key point\n   is that computing these MRT next hops
      and alternates can be done as\n   new named proxy-nodes are added or removed
      without requiring a new\n   MRT computation or impacting other existing MRT
      paths.  This maps\n   very well to, for example, how OSPFv2 (see [RFC2328],
      Section 16.5)\n   does incremental updates for new summary-LSAs.\n   The remaining
      question is how to attach the named proxy-node to the\n   MRT Island; all the
      routers in the MRT Island MUST do this\n   consistently.  No more than two routers
      in the MRT Island can be\n   selected; one should only be selected if there
      are no others that\n   meet the necessary criteria.  The named proxy-node is
      logically part\n   of the area/level.\n   There are two sources for candidate
      routers in the MRT Island to\n   connect to the named proxy-node.  The first
      set is made up of those\n   routers in the MRT Island that are advertising the
      prefix; the named-\n   proxy-cost assigned to each prefix-advertising router
      is the\n   announced cost to the prefix.  The second set is made up of those\n
      \  routers in the MRT Island that are connected to routers not in the\n   MRT
      Island but in the same area/level; such routers will be defined\n   as Island
      Border Routers (IBRs).  The routers connected to the IBRs\n   that are not in
      the MRT Island and are in the same area/level as the\n   MRT Island are Island
      Neighbors (INs).\n   Since packets sent to the named proxy-node along MRT-Red
      or MRT-Blue\n   may come from any router inside the MRT Island, it is necessary
      that\n   whatever router to which an IBR forwards the packet be loop-free with\n
      \  respect to the whole MRT Island for the destination.  Thus, an IBR is\n   a
      candidate router only if it possesses at least one IN whose\n   shortest path
      to the prefix does not enter the MRT Island.  A method\n   for identifying Loop-Free
      Island Neighbors (LFINs) is given in\n   [RFC7811].  The named-proxy-cost assigned
      to each (IBR, IN) pair is\n   cost(IBR, IN) + D_opt(IN, prefix).\n   From the
      set of prefix-advertising routers and the set of IBRs with\n   at least one
      LFIN, the two routers with the lowest named-proxy-cost\n   are selected.  Ties
      are broken based upon the lowest Router ID.  For\n   ease of discussion, the
      two selected routers will be referred to as\n   proxy-node attachment routers.\n
      \  A proxy-node attachment router has a special forwarding role.  When a\n   packet
      is received destined to (MRT-Red, prefix) or (MRT-Blue,\n   prefix), if the
      proxy-node attachment router is an IBR, it MUST swap\n   to the shortest path
      forwarding topology (e.g., swap to the label for\n   (MT-ID 0, prefix) or remove
      the outer IP encapsulation) and forward\n   the packet to the IN whose cost
      was used in the selection.  If the\n   proxy-node attachment router is not an
      IBR, then the packet MUST be\n   removed from the MRT forwarding topology and
      sent along the\n   interface(s) that caused the router to advertise the prefix;
      this\n   interface might be out of the area/level/AS.\n"
    title: 11.2.  Protecting Multihomed Prefixes Using Named Proxy-Nodes
  - contents:
    - "11.3.  MRT Alternates for Destinations outside the MRT Island\n   A natural
      concern with new functionality is how to have it be useful\n   when it is not
      deployed across an entire IGP area.  In the case of\n   MRT FRR, where it provides
      alternates when appropriate LFAs aren't\n   available, there are also deployment
      scenarios where it may make\n   sense to only enable some routers in an area
      with MRT FRR.  A simple\n   example of such a scenario would be a ring of six
      or more routers\n   that is connected via two routers to the rest of the area.\n
      \  Destinations inside the local island can obviously use MRT\n   alternates.
      \ Destinations outside the local island can be treated\n   like a multihomed
      prefix and either endpoint selection or Named\n   Proxy-Nodes can be used.  Named
      proxy-nodes MUST be supported when\n   LDP forwarding is supported and a label-binding
      for the destination\n   is sent to an IBR.\n   Naturally, there are more-complicated
      options to improve coverage,\n   such as connecting multiple MRT Islands across
      tunnels, but the need\n   for the additional complexity has not been justified.\n"
    title: 11.3.  MRT Alternates for Destinations outside the MRT Island
  title: 11.  Prefixes Multiply Attached to the MRT Island
- contents:
  - "12.  Network Convergence and Preparing for the Next Failure\n   After a failure,
    MRT detours ensure that packets reach their intended\n   destination while the
    IGP has not reconverged onto the new topology.\n   As link-state updates reach
    the routers, the IGP process calculates\n   the new shortest paths.  Two things
    need attention: micro-loop\n   prevention and MRT recalculation.\n"
  - contents:
    - "12.1.  Micro-loop Prevention and MRTs\n   A micro-loop is a transient packet-forwarding
      loop among two or more\n   routers that can occur during convergence of IGP
      forwarding state.\n   [RFC5715] discusses several techniques for preventing
      micro-loops.\n   This section discusses how MRT-FRR relates to two of the micro-loop\n
      \  prevention techniques discussed in [RFC5715]: Nearside and Farside\n   Tunneling.\n
      \  In Nearside Tunneling, a router (PLR) adjacent to a failure performs\n   local
      repair and informs remote routers of the failure.  The remote\n   routers initially
      tunnel affected traffic to the nearest PLR, using\n   tunnels that are unaffected
      by the failure.  Once the forwarding\n   state for normal shortest path routing
      has converged, the remote\n   routers return the traffic to shortest path forwarding.
      \ MRT-FRR is\n   relevant for Nearside Tunneling for the following reason.  The\n
      \  process of tunneling traffic to the PLRs and waiting a sufficient\n   amount
      of time for IGP forwarding state convergence with Nearside\n   Tunneling means
      that traffic will generally rely on the local repair\n   at the PLR for longer
      than it would in the absence of Nearside\n   Tunneling.  Since MRT-FRR provides
      100% coverage for single link and\n   node failure, it may be an attractive
      option to provide the local\n   repair paths when Nearside Tunneling is deployed.\n
      \  MRT-FRR is also relevant for the Farside Tunneling micro-loop\n   prevention
      technique.  In Farside Tunneling, remote routers tunnel\n   traffic affected
      by a failure to a node downstream of the failure\n   with respect to traffic
      destination.  This node can be viewed as\n   being on the farside of the failure
      with respect to the node\n   initiating the tunnel.  Note that the discussion
      of Farside Tunneling\n   in [RFC5715] focuses on the case where the farside
      node is\n   immediately adjacent to a failed link or node.  However, the farside\n
      \  node may be any node downstream of the failure with respect to\n   traffic
      destination, including the destination itself.  The tunneling\n   mechanism
      used to reach the farside node must be unaffected by the\n   failure.  The alternative
      forwarding paths created by MRT-FRR have\n   the potential to be used to forward
      traffic from the remote routers\n   upstream of the failure all the way to the
      destination.  In the event\n   of failure, either the MRT-Red or MRT-Blue path
      from the remote\n   upstream router to the destination is guaranteed to avoid
      a link\n   failure or inferred node failure.  The MRT forwarding paths are also\n
      \  guaranteed to not be subject to micro-loops because they are locked\n   to
      the topology before the failure.\n   We note that the computations in [RFC7811]
      address the case of a PLR\n   adjacent to a failure determining which choice
      of MRT-Red or MRT-Blue\n   will avoid a failed link or node.  More computation
      may be required\n   for an arbitrary remote upstream router to determine whether
      to\n   choose MRT-Red or MRT-Blue for a given destination and failure.\n"
    title: 12.1.  Micro-loop Prevention and MRTs
  - contents:
    - "12.2.  MRT Recalculation for the Default MRT Profile\n   This section describes
      how the MRT recalculation SHOULD be performed\n   for the Default MRT Profile.
      \ This is intended to support FRR\n   applications.  Other approaches are possible,
      but they are not\n   specified in this document.\n   When a failure event happens,
      traffic is put by the PLRs onto the MRT\n   topologies.  After that, each router
      recomputes its SPT and moves\n   traffic over to that.  Only after all the PLRs
      have switched to using\n   their SPTs and traffic has drained from the MRT topologies
      should\n   each router install the recomputed MRTs into the FIBs.\n   At each
      router, therefore, the sequence is as follows:\n   1.  Receive failure notification\n
      \  2.  Recompute SPT.\n   3.  Install the new SPT in the FIB.\n   4.  If the
      network was stable before the failure occurred, wait a\n       configured (or
      advertised) period for all routers to be using\n       their SPTs and traffic
      to drain from the MRTs.\n   5.  Recompute MRTs.\n   6.  Install new MRTs in
      the FIB.\n   While the recomputed MRTs are not installed in the FIB, protection\n
      \  coverage is lowered.  Therefore, it is important to recalculate the\n   MRTs
      and install them quickly.\n   New protocol extensions for advertising the time
      needed to recompute\n   shortest path routes and install them in the FIB will
      be defined\n   elsewhere.\n"
    title: 12.2.  MRT Recalculation for the Default MRT Profile
  title: 12.  Network Convergence and Preparing for the Next Failure
- contents:
  - "13.  Operational Considerations\n   The following aspects of MRT-FRR are useful
    to consider when\n   deploying the technology in different operational environments
    and\n   network topologies.\n"
  - contents:
    - "13.1.  Verifying Forwarding on MRT Paths\n   The forwarding paths created by
      MRT-FRR are not used by normal (non-\n   FRR) traffic.  They are only used to
      carry FRR traffic for a short\n   period of time after a failure has been detected.
      \ It is RECOMMENDED\n   that an operator proactively monitor the MRT forwarding
      paths in\n   order to be certain that the paths will be able to carry FRR traffic\n
      \  when needed.  Therefore, an implementation SHOULD provide an operator\n   with
      the ability to test MRT paths with Operations, Administration,\n   and Maintenance
      (OAM) traffic.  For example, when MRT paths are\n   realized using LDP labels
      distributed for topology-scoped FECs, an\n   implementation can use the MPLS
      ping and traceroute as defined in\n   [RFC4379] and extended in [RFC7307] for
      topology-scoped FECs.\n"
    title: 13.1.  Verifying Forwarding on MRT Paths
  - contents:
    - "13.2.  Traffic Capacity on Backup Paths\n   During a fast-reroute event initiated
      by a PLR in response to a\n   network failure, the flow of traffic in the network
      will generally\n   not be identical to the flow of traffic after the IGP forwarding\n
      \  state has converged, taking the failure into account.  Therefore,\n   even
      if a network has been engineered to have enough capacity on the\n   appropriate
      links to carry all traffic after the IGP has converged\n   after the failure,
      the network may still not have enough capacity on\n   the appropriate links
      to carry the flow of traffic during a fast-\n   reroute event.  This can result
      in more traffic loss during the fast-\n   reroute event than might otherwise
      be expected.\n   Note that there are two somewhat distinct aspects to this phenomenon.\n
      \  The first is that the path from the PLR to the destination during the\n   fast-reroute
      event may be different from the path after the IGP\n   converges.  In this case,
      any traffic for the destination that\n   reaches the PLR during the fast-reroute
      event will follow a different\n   path from the PLR to the destination than
      will be followed after IGP\n   convergence.\n   The second aspect is that the
      amount of traffic arriving at the PLR\n   for affected destinations during the
      fast-reroute event may be larger\n   than the amount of traffic arriving at
      the PLR for affected\n   destinations after IGP convergence.  Immediately after
      a failure, any\n   non-PLR routers that were sending traffic to the PLR before
      the\n   failure will continue sending traffic to the PLR, and that traffic\n
      \  will be carried over backup paths from the PLR to the destinations.\n   After
      IGP convergence, upstream non-PLR routers may direct some\n   traffic away from
      the PLR.\n   In order to reduce or eliminate the potential for transient traffic\n
      \  loss due to inadequate capacity during fast-reroute events, an\n   operator
      can model the amount of traffic taking different paths\n   during a fast-reroute
      event.  If it is determined that there is not\n   enough capacity to support
      a given fast-reroute event, the operator\n   can address the issue either by
      augmenting capacity on certain links\n   or modifying the backup paths themselves.\n
      \  The MRT Lowpoint algorithm produces a pair of diverse paths to each\n   destination.
      \ These paths are generated by following the directed\n   links on a common
      GADAG.  The decision process for constructing the\n   GADAG in the MRT Lowpoint
      algorithm takes into account individual IGP\n   link metrics.  At any given
      node, links are explored in order from\n   lowest IGP metric to highest IGP
      metric.  Additionally, the process\n   for constructing the MRT-Red and Blue
      trees uses SPF traversals of\n   the GADAG.  Therefore, the IGP link metric
      values affect the computed\n   backup paths.  However, adjusting the IGP link
      metrics is not a\n   generally applicable tool for modifying the MRT backup
      paths.\n   Achieving a desired set of MRT backup paths by adjusting IGP metrics\n
      \  while at the same time maintaining the desired flow of traffic along\n   the
      shortest paths is not possible in general.\n   MRT-FRR allows an operator to
      exclude a link from the MRT Island, and\n   thus the GADAG, by advertising it
      as MRT-Ineligible.  Such a link\n   will not be used on the MRT forwarding path
      for any destination.\n   Advertising links as MRT-Ineligible is the main tool
      provided by MRT-\n   FRR for keeping backup traffic off of lower bandwidth links
      during\n   fast-reroute events.\n   Note that all of the backup paths produced
      by the MRT Lowpoint\n   algorithm are closely tied to the common GADAG computed
      as part of\n   that algorithm.  Therefore, it is generally not possible to modify
      a\n   subset of paths without affecting other paths.  This precludes more\n
      \  fine-grained modification of individual backup paths when using only\n   paths
      computed by the MRT Lowpoint algorithm.\n   However, it may be desirable to
      allow an operator to use MRT-FRR\n   alternates together with alternates provided
      by other FRR\n   technologies.  A policy-based alternate selection process can
      allow\n   an operator to select the best alternate from those provided by MRT\n
      \  and other FRR technologies.  As a concrete example, it may be\n   desirable
      to implement a policy where a downstream LFA (if it exists\n   for a given failure
      mode and destination) is preferred over a given\n   MRT alternate.  This combination
      gives the operator the ability to\n   affect where traffic flows during a fast-reroute
      event, while still\n   producing backup paths that use no additional labels
      for LDP traffic\n   and will not loop under multiple failures.  This and other
      choices of\n   alternate selection policy can be evaluated in the context of
      their\n   effect on fast-reroute traffic flow and available capacity, as well\n
      \  as other deployment considerations.\n   Note that future documents may define
      MRT profiles in addition to the\n   default profile defined here.  Different
      MRT profiles will generally\n   produce alternate paths with different properties.
      \ An implementation\n   may allow an operator to use different MRT profiles
      instead of or in\n   addition to the default profile.\n"
    title: 13.2.  Traffic Capacity on Backup Paths
  - contents:
    - "13.3.  MRT IP Tunnel Loopback Address Management\n   As described in Section
      6.1.2, if an implementation uses IP tunneling\n   as the mechanism to realize
      MRT forwarding paths, each node must\n   advertise an MRT-Red and an MRT-Blue
      loopback address.  These IP\n   addresses must be unique within the routing
      domain to the extent that\n   they do not overlap with each other or with any
      other routing table\n   entries.  It is expected that operators will use existing
      tools and\n   processes for managing infrastructure IP addresses to manage these\n
      \  additional MRT-related loopback addresses.\n"
    title: 13.3.  MRT IP Tunnel Loopback Address Management
  - contents:
    - "13.4.  MRT-FRR in a Network with Degraded Connectivity\n   Ideally, routers
      in a service provider network using MRT-FRR will be\n   initially deployed in
      a 2-connected topology, allowing MRT-FRR to\n   find completely diverse paths
      to all destinations.  However, a\n   network can differ from an ideal 2-connected
      topology for many\n   possible reasons, including network failures and planned
      maintenance\n   events.\n   MRT-FRR is designed to continue to function properly
      when network\n   connectivity is degraded.  When a network contains cut-vertices
      or\n   cut-links dividing the network into different 2-connected blocks,\n   MRT-FRR
      will continue to provide completely diverse paths for\n   destinations within
      the same block as the PLR.  For a destination in\n   a different block from
      the PLR, the redundant paths created by MRT-\n   FRR will be link and node diverse
      within each block, and the paths\n   will only share links and nodes that are
      cut-links or cut-vertices in\n   the topology.\n   If a network becomes partitioned
      with one set of routers having no\n   connectivity to another set of routers,
      MRT-FRR will function\n   independently in each set of connected routers, providing
      redundant\n   paths to destinations in same set of connected routers as a given\n
      \  PLR.\n"
    title: 13.4.  MRT-FRR in a Network with Degraded Connectivity
  - contents:
    - "13.5.  Partial Deployment of MRT-FRR in a Network\n   A network operator may
      choose to deploy MRT-FRR only on a subset of\n   routers in an IGP area.  MRT-FRR
      is designed to accommodate this\n   partial deployment scenario.  Only routers
      that advertise support for\n   a given MRT profile will be included in a given
      MRT Island.  For a\n   PLR within the MRT Island, MRT-FRR will create redundant
      forwarding\n   paths to all destinations with the MRT Island using maximally\n
      \  redundant trees all the way to those destinations.  For destinations\n   outside
      of the MRT Island, MRT-FRR creates paths to the destination\n   that use forwarding
      state created by MRT-FRR within the MRT Island\n   and shortest path forwarding
      state outside of the MRT Island.  The\n   paths created by MRT-FRR to non-Island
      destinations are guaranteed to\n   be diverse within the MRT Island (if topologically
      possible).\n   However, the part of the paths outside of the MRT Island may
      not be\n   diverse.\n"
    title: 13.5.  Partial Deployment of MRT-FRR in a Network
  title: 13.  Operational Considerations
- contents:
  - "14.  IANA Considerations\n   IANA has created the \"MRT Profile Identifier Registry\".
    \ The range is\n   0 to 255.  The Default MRT Profile defined in this document
    has value\n   0.  Values 1-200 are allocated by Standards Action.  Values 201-220\n
    \  are for Experimental Use.  Values 221-254 are for Private Use.  Value\n   255
    is reserved for future registry extension.  (The allocation and\n   use policies
    are described in [RFC5226].)\n   The initial registry is shown below.\n      Value
    \   Description                               Reference\n      -------  ----------------------------------------
    \ ------------\n      0        Default MRT Profile                       RFC 7812\n
    \     1-200    Unassigned\n      201-220  Experimental Use\n      221-254  Private
    Use\n      255      Reserved (for future registry extension)\n   The \"MRT Profile
    Identifier Registry\" is a new registry in the IANA\n   Matrix.  Following existing
    conventions, http://www.iana.org/\n   protocols displays a new header: \"Maximally
    Redundant Tree (MRT)\n   Parameters\".  Under that header, there is an entry for
    \"MRT Profile\n   Identifier Registry\", which links to the registry itself at\n
    \  http://www.iana.org/assignments/mrt-parameters.\n"
  title: 14.  IANA Considerations
- contents:
  - "15.  Security Considerations\n   In general, MRT forwarding paths do not follow
    shortest paths.  The\n   transit forwarding state corresponding to the MRT paths
    is created\n   during normal operations (before a failure occurs).  Therefore,
    a\n   malicious packet with an appropriate header injected into the network\n
    \  from a compromised location would be forwarded to a destination along\n   a
    non-shortest path.  When this technology is deployed, a network\n   security design
    should not rely on assumptions about potentially\n   malicious traffic only following
    shortest paths.\n   It should be noted that the creation of non-shortest forwarding
    paths\n   is not unique to MRT.\n   MRT-FRR requires that routers advertise information
    used in the\n   formation of MRT backup paths.  While this document does not specify\n
    \  the protocol extensions used to advertise this information, we\n   discuss
    security considerations related to the information itself.\n   Injecting false
    MRT-related information could be used to direct some\n   MRT backup paths over
    compromised transmission links.  Combined with\n   the ability to generate network
    failures, this could be used to send\n   traffic over compromised transmission
    links during a fast-reroute\n   event.  In order to prevent this potential exploit,
    a receiving\n   router needs to be able to authenticate MRT-related information
    that\n   claims to have been advertised by another router.\n"
  title: 15.  Security Considerations
- contents:
  - '16.  References

    '
  - contents:
    - "16.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,
      May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC7307]
      \ Zhao, Q., Raza, K., Zhou, C., Fang, L., Li, L., and D.\n              King,
      \"LDP Extensions for Multi-Topology\", RFC 7307,\n              DOI 10.17487/RFC7307,
      July 2014,\n              <http://www.rfc-editor.org/info/rfc7307>.\n   [RFC7811]
      \ Enyedi, G., Ed., Csaszar, A., Atlas, A., Ed., Bowers, C.,\n              and
      A. Gopalan, \"An Algorithm for Computing IP/LDP Fast\n              Reroute
      Using Maximally Redundant Trees (MRT-FRR)\",\n              RFC 7811, DOI 10.17487/RFC7811,
      June 2016,\n              <http://www.rfc-editor.org/info/rfc7811>.\n"
    title: 16.1.  Normative References
  - contents:
    - "16.2.  Informative References\n   [EnyediThesis]\n              Enyedi, G.,
      \"Novel Algorithms for IP Fast Reroute\",\n              Department of Telecommunications
      and Media Informatics,\n              Budapest University of Technology and
      Economics Ph.D.\n              Thesis, February 2011,\n              <https://repozitorium.omikk.bme.hu/bitstream/\n
      \             handle/10890/1040/ertekezes.pdf>.\n   [LDP-MRT]  Atlas, A., Tiruveedhula,
      K., Bowers, C., Tantsura, J., and\n              IJ. Wijnands, \"LDP Extensions
      to Support Maximally\n              Redundant Trees\", Work in Progress, draft-ietf-mpls-ldp-\n
      \             mrt-03, May 2016.\n   [MRT-ARCH]\n              Atlas, A., Kebler,
      R., Wijnands, IJ., Csaszar, A., and G.\n              Enyedi, \"An Architecture
      for Multicast Protection Using\n              Maximally Redundant Trees\", Work
      in Progress, draft-atlas-\n              rtgwg-mrt-mc-arch-02, July 2013.\n
      \  [RFC2328]  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328,\n              DOI
      10.17487/RFC2328, April 1998,\n              <http://www.rfc-editor.org/info/rfc2328>.\n
      \  [RFC4379]  Kompella, K. and G. Swallow, \"Detecting Multi-Protocol\n              Label
      Switched (MPLS) Data Plane Failures\", RFC 4379,\n              DOI 10.17487/RFC4379,
      February 2006,\n              <http://www.rfc-editor.org/info/rfc4379>.\n   [RFC5286]
      \ Atlas, A., Ed. and A. Zinin, Ed., \"Basic Specification for\n              IP
      Fast Reroute: Loop-Free Alternates\", RFC 5286,\n              DOI 10.17487/RFC5286,
      September 2008,\n              <http://www.rfc-editor.org/info/rfc5286>.\n   [RFC5331]
      \ Aggarwal, R., Rekhter, Y., and E. Rosen, \"MPLS Upstream\n              Label
      Assignment and Context-Specific Label Space\",\n              RFC 5331, DOI
      10.17487/RFC5331, August 2008,\n              <http://www.rfc-editor.org/info/rfc5331>.\n
      \  [RFC5340]  Coltun, R., Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n              for
      IPv6\", RFC 5340, DOI 10.17487/RFC5340, July 2008,\n              <http://www.rfc-editor.org/info/rfc5340>.\n
      \  [RFC5443]  Jork, M., Atlas, A., and L. Fang, \"LDP IGP\n              Synchronization\",
      RFC 5443, DOI 10.17487/RFC5443, March\n              2009, <http://www.rfc-editor.org/info/rfc5443>.\n
      \  [RFC5714]  Shand, M. and S. Bryant, \"IP Fast Reroute Framework\",\n              RFC
      5714, DOI 10.17487/RFC5714, January 2010,\n              <http://www.rfc-editor.org/info/rfc5714>.\n
      \  [RFC5715]  Shand, M. and S. Bryant, \"A Framework for Loop-Free\n              Convergence\",
      RFC 5715, DOI 10.17487/RFC5715, January\n              2010, <http://www.rfc-editor.org/info/rfc5715>.\n
      \  [RFC6976]  Shand, M., Bryant, S., Previdi, S., Filsfils, C.,\n              Francois,
      P., and O. Bonaventure, \"Framework for Loop-Free\n              Convergence
      Using the Ordered Forwarding Information Base\n              (oFIB) Approach\",
      RFC 6976, DOI 10.17487/RFC6976, July\n              2013, <http://www.rfc-editor.org/info/rfc6976>.\n
      \  [RFC6981]  Bryant, S., Previdi, S., and M. Shand, \"A Framework for IP\n
      \             and MPLS Fast Reroute Using Not-Via Addresses\", RFC 6981,\n              DOI
      10.17487/RFC6981, August 2013,\n              <http://www.rfc-editor.org/info/rfc6981>.\n
      \  [RFC6987]  Retana, A., Nguyen, L., Zinin, A., White, R., and D.\n              McPherson,
      \"OSPF Stub Router Advertisement\", RFC 6987,\n              DOI 10.17487/RFC6987,
      September 2013,\n              <http://www.rfc-editor.org/info/rfc6987>.\n   [RFC7490]
      \ Bryant, S., Filsfils, C., Previdi, S., Shand, M., and N.\n              So,
      \"Remote Loop-Free Alternate (LFA) Fast Reroute (FRR)\",\n              RFC
      7490, DOI 10.17487/RFC7490, April 2015,\n              <http://www.rfc-editor.org/info/rfc7490>.\n"
    title: 16.2.  Informative References
  title: 16.  References
- contents:
  - "Appendix A.  Inter-level Forwarding Behavior for IS-IS\n   In the description
    below, we use the terms \"Level-1-only interface\",\n   \"Level-2-only interface\",
    and \"Level-1-and-Level-2 interface\" to mean\n   an interface that has formed
    only a Level-1 adjacency, only a Level-2\n   adjacency, or both Level-1 and Level-2
    adjacencies.  Note that IS-IS\n   also defines the concept of areas.  A router
    is configured with an\n   IS-IS area identifier, and a given router may be configured
    with\n   multiple IS-IS area identifiers.  For an IS-IS Level-1 adjacency to\n
    \  form between two routers, at least one IS-IS area identifier must\n   match.
    \ IS-IS Level-2 adjacencies do not require any area identifiers\n   to match.
    \ The behavior described below does not explicitly refer to\n   IS-IS area identifiers.
    \ However, IS-IS area identifiers will\n   indirectly affect the behavior by affecting
    the formation of Level-1\n   adjacencies.\n   First, consider a packet destined
    to Z on MRT-Red or MRT-Blue\n   received on a Level-1-only interface.  If the
    best shortest path\n   route to Z was learned from a Level-1 advertisement, then
    the packet\n   should continue to be forwarded along MRT-Red or MRT-Blue.  If,\n
    \  instead, the best route was learned from a Level-2 advertisement,\n   then
    the packet should be removed from MRT-Red or MRT-Blue and\n   forwarded on the
    shortest-path default forwarding topology.\n   Now consider a packet destined
    to Z on MRT-Red or MRT-Blue received\n   on a Level-2-only interface.  If the
    best route to Z was learned from\n   a Level-2 advertisement, then the packet
    should continue to be\n   forwarded along MRT-Red or MRT-Blue.  If, instead, the
    best route was\n   learned from a Level-1 advertisement, then the packet should
    be\n   removed from MRT-Red or MRT-Blue and forwarded on the shortest-path\n   default
    forwarding topology.\n   Finally, consider a packet destined to Z on MRT-Red or
    MRT-Blue\n   received on a Level-1-and-Level-2 interface.  This packet should\n
    \  continue to be forwarded along MRT-Red or MRT-Blue, regardless of\n   which
    level the route was learned from.\n   An implementation may simplify the decision-making
    process above by\n   using the interface of the next hop for the route to Z to
    determine\n   the level from which the best route to Z was learned.  If the next\n
    \  hop points out a Level-1-only interface, then the route was learned\n   from
    a Level-1 advertisement.  If the next hop points out a Level-\n   2-only interface,
    then the route was learned from a Level-2\n   advertisement.  A next hop that
    points out a Level-1-and-Level-2\n   interface does not provide enough information
    to determine the source\n   of the best route.  With this simplification, an implementation
    would\n   need to continue forwarding along MRT-Red or MRT-Blue when the next-\n
    \  hop points out a Level-1-and-Level-2 interface.  Therefore, a packet\n   on
    MRT-Red or MRT-Blue going from Level-1 to Level-2 (or vice versa)\n   that traverses
    a Level-1-and-Level-2 interface in the process will\n   remain on MRT-Red or MRT-Blue.
    \ This simplification may not always\n   produce the optimal forwarding behavior,
    but it does not introduce\n   interoperability problems.  The packet will stay
    on an MRT backup\n   path longer than necessary, but it will still reach its destination.\n"
  title: Appendix A.  Inter-level Forwarding Behavior for IS-IS
- contents:
  - "Appendix B.  General Issues with Area Abstraction\n   When a multihomed prefix
    is connected in two different areas, it may\n   be impractical to protect them
    without adding the complexity of\n   explicit tunneling.  This is also a problem
    for LFA and Remote-LFA.\n          50\n        |----[ASBR Y]---[B]---[ABR 2]---[C]
    \     Backbone Area 0:\n        |                                |           ABR
    1, ABR 2, C, D\n        |                                |\n        |                                |
    \      Area 20:  A, ASBR X\n        |                                |\n        p
    ---[ASBR X]---[A]---[ABR 1]---[D]      Area 10: B, ASBR Y\n           5                                  p
    is a Type 1 AS-external\n             Figure 4: AS External Prefixes in Different
    Areas\n   Consider the network in Figure 4 and assume there is a richer\n   connective
    topology that isn't shown, where the same prefix is\n   announced by ASBR X and
    ASBR Y, which are in different non-backbone\n   areas.  If the link from A to
    ASBR X fails, then an MRT alternate\n   could forward the packet to ABR 1 and
    ABR 1 could forward it to D,\n   but then D would find the shortest route is back
    via ABR 1 to Area\n   20.  This problem occurs because the routers, including
    the ABR, in\n   one area are not yet aware of the failure in a different area.\n
    \  The only way to get it from A to ASBR Y is to explicitly tunnel it to\n   ASBR
    Y.  If the traffic is unlabeled or the appropriate MPLS labels\n   are known,
    then explicit tunneling MAY be used as long as the\n   shortest path of the tunnel
    avoids the failure point.  In that case,\n   A must determine that it should use
    an explicit tunnel instead of an\n   MRT alternate.\n"
  title: Appendix B.  General Issues with Area Abstraction
- contents:
  - "Acknowledgements\n   The authors would like to thank Mike Shand for his valuable
    review\n   and contributions.\n   The authors would like to thank Joel Halpern,
    Hannes Gredler, Ted\n   Qian, Kishore Tiruveedhula, Shraddha Hegde, Santosh Esale,
    Nitin\n   Bahadur, Harish Sitaraman, Raveendra Torvi, Anil Kumar SN, Bruno\n   Decraene,
    Eric Wu, Janos Farkas, Rob Shakir, Stewart Bryant, and\n   Alvaro Retana for their
    suggestions and review.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   Robert Kebler\n   Juniper Networks\n   10 Technology Park Drive\n
    \  Westford, MA  01886\n   United States\n   Email: rkebler@juniper.net\n   Andras
    Csaszar\n   Ericsson\n   Konyves Kalman krt 11\n   Budapest  1097\n   Hungary\n
    \  Email: Andras.Csaszar@ericsson.com\n   Jeff Tantsura\n   Ericsson\n   300 Holger
    Way\n   San Jose, CA  95134\n   United States\n   Email: jeff.tantsura@ericsson.com\n
    \  Russ White\n   VCE\n   Email: russw@riw.us\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Alia Atlas\n   Juniper Networks\n   10 Technology Park
    Drive\n   Westford, MA  01886\n   United States\n   Email: akatlas@juniper.net\n
    \  Chris Bowers\n   Juniper Networks\n   1194 N. Mathilda Ave.\n   Sunnyvale,
    CA  94089\n   United States\n   Email: cbowers@juniper.net\n   Gabor Sandor Enyedi\n
    \  Ericsson\n   Konyves Kalman krt 11.\n   Budapest  1097\n   Hungary\n   Email:
    Gabor.Sandor.Enyedi@ericsson.com\n"
  title: Authors' Addresses
