Abstract A standard method for storing US Government Digital Signature Algorithm keys and signatures in the Domain Name System is described which utilizes DNS KEY and SIG resource records.
The Domain Name System (DNS) is the global hierarchical replicated distributed database system for Internet addressing, mail proxy, and other information.
The DNS has been extended to include digital signatures and cryptographic keys as described in [RFC 2535].
Thus the DNS can now be secured and can be used for secure key distribution.
This document describes how to store US Government Digital Signature Algorithm (DSA) keys and signatures in the DNS.
Familiarity with the US Digital Signature Algorithm is assumed [Schneier].
Implementation of DSA is mandatory for DNS security.
DSA KEY Resource Records DSA public keys are stored in the DNS as KEY RRs using algorithm number 3 [RFC 2535].
The structure of the algorithm specific portion of the RDATA part of this RR is as shown below.
These fields, from Q through Y are the "public key" part of the DSA KEY RR.
The period of key validity is not in the KEY RR but is indicated by the SIG RR(s)
which signs and authenticates the KEY RR(s) at that domain name.
octets As described in [FIPS 186]
: T is a key size parameter chosen such that 0 <  T <  8.
(The meaning for algorithm 3 if the T octet is greater than 8 is reserved and the remainder of the RDATA portion may have a different format in that case.)
Q is a prime number selected at key generation time such that 2
159 < Q < 2
so Q is always 20 octets long and, as with all other fields, is stored in "big endian" network order.
P, G, and Y are calculated as directed by the FIPS 186 key generation algorithm [Schneier].
P is in the range 2
< P < 2  (512 64T)
and so is 64   8 T octets long.
G and Y are quantities modulus P
and so can be up to the same length as P and are allocated fixed size fields with the same number of octets as P.
During the key generation process, a random number X must be generated such that 1 <  X <  Q 1.
X is the private key and is used in the final step of public key generation where Y is computed as Y   G
The signature portion of the SIG RR RDATA area, when using the US Digital Signature Algorithm, is shown below with fields in the order they occur.
See [RFC 2535] for fields in the SIG RR RDATA which precede the signature itself.
20 octets The data signed is determined as specified in [RFC 2535].
Then the following steps are taken, as specified in [FIPS 186], where Q, P, G, and Y are as specified in the public key [Schneier]
( data ) Generate a random K such that 0 < K < Q. R
( G  K mod P ) mod Q S
Since Q is 160 bits long, R and S can not be larger than 20 octets, which is the space allocated.
T is copied from the public key.
It is not logically necessary in the SIG but is present so that values of T > 8 can more conveniently be used as an escape for extended versions of DSA or other algorithms as later specified.
Performance Considerations General signature generation speeds are roughly the same for RSA [RFC 2537] and DSA.
With sufficient pre computation, signature generation with DSA is faster than RSA.
Key generation is also faster for DSA.
However, signature verification is an order of magnitude slower than RSA when the RSA public exponent is chosen to be small as is recommended for KEY RRs used in domain name system (DNS) data authentication.
Current DNS implementations are optimized for small transfers, typically less than 512 bytes including overhead.
While larger transfers will perform correctly and work is underway to make larger transfers more efficient, it is still advisable at this time to make reasonable efforts to minimize the size of KEY RR sets stored within the DNS consistent with adequate security.
Keep in mind that in a secure zone, at least one authenticating SIG RR will also be returned.
Many of the general security consideration in [RFC 2535] apply.
Keys retrieved from the DNS should not be trusted unless (1) they have been securely obtained from a secure resolver or independently verified by the user and (2) this secure resolver and secure obtainment or independent verification conform to security policies acceptable to the user.
As with all cryptographic algorithms, evaluating the necessary strength of the key is essential and dependent on local policy.
The key size limitation of a maximum of 1024 bits ( T   8 ) in the current DSA standard may limit the security of DSA.
For particularly critical applications, implementors are encouraged to consider the range of available algorithms and key sizes.
DSA assumes the ability to frequently generate high quality random numbers.
See [RFC 1750] for guidance.
DSA is designed so that if manipulated rather than random numbers are used, very high bandwidth covert channels are possible.
See [Schneier] and more recent research.
The leakage of an entire DSA private key in only two DSA signatures has been demonstrated.
DSA provides security only if trusted implementations, including trusted random number generation, are used.
IANA Considerations Allocation of meaning to values of the T parameter that are not defined herein requires an IETF standards actions.
It is intended that values unallocated herein be used to cover future extensions of the DSS standard.
