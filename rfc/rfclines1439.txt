Abstract This RFC provides information that may be useful when selecting a method to use for assigning unique identifiers to people.
The Issue Computer systems require a way to identify the people associated with them.
These identifiers have been called "user names" or "account names.
The identifers are typically short, alphanumeric strings.
In general, these identifiers must be unique.
The uniqueness is usually achieved in one of three ways: 1)
The identifiers are assigned in a unique manner without using information associated with the individual.
Example identifiers are: ax54tv cs00034
This method was often used by large timesharing systems.
While it achieved the uniqueness property, there was no way of guessing the identifier without knowing it through other means.
The identifiers are assigned in a unique manner where the bulk of the identifier is algorithmically derived from the individual's name.
Finseth1 caf 1 fins0001 3)
The identifiers are in general not assigned in a unique manner: the identifier is algorithmically derived from the individual's name and duplicates are handled in an ad hoc manner.
Now that we have widespread electronic mail, an important feature of an identifier system is the ability to predict the identifier based on other information associated with the individual.
This other information is typically the person's name.
Methods two and three make such predictions possible, especially if you have one example mapping from a person's name to the identifier.
Method two relies on using some or all of the name and algorithmically varying it to ensure uniqueness (for example, by appending an integer).
Method three relies on using some or all of the name and selects an alternate identifier in the case of a duplication.
For both methods, it is important to minimize the need for making the adjustments required to ensure uniqueness (i.e., an integer that is not 1 or an alternate identifier).
The probability that an adjustment will be required depends on the format of the identifer and the size of the organization.
There are a number of popular identifier formats.
This section will list some of them and supply both typical and maximum values for the number of possible identifiers.
A "typical" value is the number that you are likely to run into in real life.
A "maximum" value is the largest number of possible (without getting extreme about it) values.
All ranges are expressed as a number of bits.
There are three popular formats based on initials: those with one, two, or three letters.
(The number of people with more than three initials is assumed to be small.)
Here are all possible combinations of nothing, initial, and full name for first, middle, and last.
The number of Middle names is assumed to be the same as the number of First names.
As can be seen, the information content in these identifiers in no case exceeds 40 bits and the typical information content never exceeds 26 bits.
The content of most of them is in the 8 to 20 bit range.
Duplicates are thus not only possible but likely.
The method used to compute the probability of duplicates is the same as that of the well known "birthday" problem.
For a universe of N items, the probability of duplicates in X members is expressed by: N   N 1
N A program to compute this function for selected values of N is given in the appendix, as is its complete output.
The "1%" column is the number of items (people) before an organization of that (universe) size has a 1% chance of a duplicate.
Similarly for 2%, 5%, 10%, and 20%.
For example, assume an organization were to select the "First Last" form.
This form has 17 bits (typical) and 27 bits (maximum) of information.
The relevant line is: 17
For an organization with 100 people, the probability of a duplicate would be between 2% and 5% (probably around 4%).
If the organization had 1,000 people, the probability of a duplicate would be much greater than 20%.
Appendix: Reuse of Identifiers and Privacy Issues
Let's say that an organization were to select the format:
# as my own organization has.
Is the  # required, or can one simply do: Craig.
A.Finseth for the first one and Craig.
A.Finseth 2 (or  1) for the second?
The answer is "no," although for non obvious reasons.
Assume that the organization has made this selection and a third party wants to send e mail to Craig.
Because of the Electronic Communications Privacy Act of 1987, an organization must treat electronic mail with care.
In this case, there is no way for the third party user to reliably know that sending to Craig.
A.Finseth is (may be) the wrong party.
On the other hand, if the  # suffix is always present and attempts to send mail to the non suffix form are rejected, the third party user will realize that they must have the suffix in order to have a unique identifier.
For similar reasons, identifiers in this form should not be re used in the life of the mail system.
Appendix: Perl Program to Compute Probabilities #!/usr
Perl Program Output bits 6  number 64
0.78916761796439427457 bits 10 number 1024:
0.89997049960675035152 2737    0.79996700222056416063 bits 25 number 33554432: 822
0.79992328289672998132 bits 26 number 67108864: 1162
0.89999748465616635773 5474    0.79993922903192515861 bits 27 number 134217728:
0.89998552434244594167 7740    0.79999591580103557309 bits 28 number 268435456:
0.97999828329325222587 5249    0.94998397932368705554 7522    0.89998576049206902017 10946   0.79999058777500076101 bits 29 number 536870912: 3286
0.97999160965267329004 7422    0.94999720388831232487 10637   0.89999506567702891591 15480   0.7999860979665908145 bits 30 number 1073741824: 4647
0.94999806770951356061 15043   0.89999250738244507275 21891   0.79999995570982085358 bits 31 number 2147483648:
0.79999272222201334159 Security Considerations Security issues are not discussed in this memo.
Author's  Address Craig A. Finseth Networking Services Computer and Information Services University of Minnesota 130 Lind Hall 207 Church St. SE Minneapolis, MN 55455
624 3375 Fax:  1 612 626 1002
