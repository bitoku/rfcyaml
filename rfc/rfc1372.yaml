- title: __initial_text__
  contents:
  - '                   Telnet Remote Flow Control Option

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   This document specifies an extended version of the Telnet Remote\
    \ Flow\n   Control Option, RFC 1080, with the addition of the RESTART-ANY and\n\
    \   RESTART-XON suboptions.\n"
- title: 1.  Command Names and Codes
  contents:
  - "1.  Command Names and Codes\n   TOGGLE-FLOW-CONTROL   33\n       OFF        \
    \            0\n       ON                     1\n       RESTART-ANY          \
    \  2\n       RESTART-XON            3\n"
- title: 2.  Command Meanings
  contents:
  - "2.  Command Meanings\n   IAC WILL TOGGLE-FLOW-CONTROL\n      Sender is willing\
    \ to enable and disable flow control upon command.\n   IAC WONT TOGGLE-FLOW-CONTROL\n\
    \      Sender refuses to enable and disable flow control.  Nothing is\n      implied\
    \ about whether sender does or does not use flow control.\n      It is simply\
    \ unwilling to enable and disable it using this\n      protocol.\n   IAC DO TOGGLE-FLOW-CONTROL\n\
    \      Sender is willing to send commands to enable and disable flow\n      control.\n\
    \   IAC DONT TOGGLE-FLOW-CONTROL\n      Sender refuses to send command to enable\
    \ and disable flow control.\n   IAC SB TOGGLE-FLOW-CONTROL OFF IAC SE\n      Sender\
    \ requests receiver to disable flow control.\n   IAC SB TOGGLE-FLOW-CONTROL ON\
    \ IAC SE\n      Sender requests receiver to enable flow control.\n   IAC SB TOGGLE-FLOW-CONTROL\
    \ RESTART-ANY IAC SE\n      Sender requests that when flow control is enabled,\
    \ the receiver\n      allow any character (except another XOFF) to restart output.\n\
    \   IAC SB TOGGLE-FLOW-CONTROL RESTART-XON IAC SE\n      Sender requests that\
    \ when flow control is enabled, the receiver\n      allows only the XON character\
    \ to restart output.\n"
- title: 3.  Default Specification
  contents:
  - "3.  Default Specification\n   The default specification for this option is\n\
    \      WONT TOGGLE-FLOW-CONTROL DONT TOGGLE-FLOW-CONTROL\n   meaning flow control\
    \ information will not be exchanged in either\n   direction.\n"
- title: 4.  Motivation
  contents:
  - "4.  Motivation\n   This memo describes a method of remotely toggling flow control\n\
    \   between a user telnet process and the attached terminal.  Only flow\n   control\
    \ of data being transmitted from the telnet process to the\n   terminal is considered.\
    \  Many systems will also allow flow control of\n   data from the terminal to\
    \ the telnet process, however there is seldom\n   need to change this behavior\
    \ repeatedly during the session.\n   There are two common ways of doing flow control:\
    \ hardware and\n   software.  Hardware flow control uses signals on wires dedicated\
    \ for\n   this purpose.  Software flow control uses one or two specific\n   characters\
    \ sent along the same path as normal input data.  Most\n   commonly, XOFF (control-S)\
    \ and XON (control-Q) are used to stop and\n   start output, respectively.  The\
    \ option described herein is useful\n   primarily where software flow control\
    \ is being used.  (Since hardware\n   flow control does not preempt any characters,\
    \ there is normally no\n   need to disable it.)  It should also be noted that\
    \ flow control can\n   either be generated automatically by the terminal when\
    \ its buffers\n   are close to overflowing, or manually by the user, when he/she\
    \ cannot\n   read the information as fast as it is being displayed, and unread\n\
    \   information will start scrolling off the screen.\n   The primary difficulty\
    \ with software flow control is that it preempts\n   one or two characters.  Host\
    \ software often requires the user to be\n   able to input every possible ASCII\
    \ character.  (Certain editors are\n   notorious for having XOFF and XON as commonly-used\
    \ commands.)  For\n   this reason, operating systems often allow programs to disable\
    \ flow\n   control.  While it is disabled, the characters that normally signal\n\
    \   flow control may be read as normal input.  In a telnet environment,\n   flow\
    \ control is normally done by the user telnet process, not by the\n   host computer.\
    \  In addition, many operating systems, when flow\n   control is enabled, the\
    \ user may specify whether the XOFF character\n   is the only character that is\
    \ allowed to re-enable the output of\n   data, or whether any typed character\
    \ should re-enable the flow of\n   data.  Thus this RFC defines a way to propagate\
    \ flow control status\n   from the host computer to the user telnet process.\n"
- title: 5.  Description of the Option
  contents:
  - "5.  Description of the Option\n   Use of the option requires two phases.  In\
    \ the first phase, the\n   telnet processes agree that one of them will TOGGLE-FLOW-CONTROL.\n\
    \   WILL and DO are used only in this first phase.  In general there will\n  \
    \ be only one exchange of WILL and DO for a session.  Subnegotiations\n   must\
    \ not be issued until DO and WILL have been exchanged.  It is\n   permissible\
    \ for either side to turn off the option by sending a WONT\n   or DONT.  Should\
    \ this happen, no more subnegotiations may be sent,\n   unless the option is re-enabled\
    \ by another exchange of DO and WILL.\n   Once the hosts have exchanged a WILL\
    \ and a DO, the sender of the DO\n   TOGGLE-FLOW-CONTROL is free to send subnegotiations\
    \ to enable and\n   disable flow control in the other process, and to send\n \
    \  subnegotiations for recommendations on when to restart output.\n   Normally,\
    \ the sender of the DO will be a host, and the other end will\n   be a user telnet\
    \ process, which is connected to a terminal.  Thus the\n   protocol is normally\
    \ asymmetric, however it may be used in both\n   directions without confusion\
    \ should need for this arise.\n   As soon as the DO and WILL have been exchanged,\
    \ the sender of the\n   WILL must enable flow control.  This allows flow control\
    \ to begin in\n   a known state.  The decision of whether to restart output only\
    \ when\n   the XON character is received, or when any character received, starts\n\
    \   in a system dependent state.  (This is to make it consistent with\n   older\
    \ implementations of the TOGGLE-FLOW-CONTROL option that do not\n   understand\
    \ the RESTART-ANY and RESTART-XON suboptions.)  The sender\n   of the DO should\
    \ send either a RESTART-ANY or RESTART-XON suboption\n   to put the restart characteristics\
    \ to a know state.  Some clients\n   might not be able to support both of the\
    \ RESTART-ANY and RESTART-XON\n   modes due to system limitations, and would then\
    \ choose to ignore\n   these commands.  There is no way for the server to be notified\
    \ of\n   this condition, but a client should make every attempt to honor the\n\
    \   state requested by the RESTART-ANY and RESTART-XON modes.  Should the\n  \
    \ option be disabled by exchange of DONT and WONT, flow control may\n   revert\
    \ to an implementation-defined default state.  It is not safe to\n   assume that\
    \ flow control will remain in the state requested by the\n   most recent subnegotiation.\n\
    \   In most implementations of software flow control, when enabled, the\n   XOFF\
    \ and XON characters are never propagated to the server; they are\n   typically\
    \ eaten by the terminal driver between the telnet client and\n   the attached\
    \ terminal.  In most implementations that support the\n   RESTART-ANY functionality,\
    \ the typed character that re-enables the\n   output is not eaten by the terminal\
    \ driver, unless it is the XON\n   character.\n   Currently, only four command\
    \ codes are defined for the\n   subnegotiations: flow control off (code 0), flow\
    \ control on (code 1),\n   restart output on any character (code 2) and restart\
    \ output only on\n   XON (code 3).  None of these codes requires any additional\
    \ data,\n   however it is possible that additional commands may be added.  Thus\n\
    \   subnegotiations having command codes other than those defined in this\n  \
    \ document should be silently ignored.\n   This option does not deal with the\
    \ issue of allowing the DO side of\n   the connection to inform the WILL side\
    \ which characters should be\n   used for XON and XOFF.  That functionality is\
    \ already supplied by the\n   LINEMODE [1] option.\n"
- title: 6.  Example
  contents:
  - "6.  Example\n   Here is an example of the use of this option:\n       Client\
    \                           Server\n                                        IAC\
    \ DO TOGGLE-FLOW-CONTROL\n       IAC WILL TOGGLE-FLOW-CONTROL\n       [ The server\
    \ is now free to send commands to change flow control.\n         Note that the\
    \ client must now have enabled flow control, but\n         that whether it is\
    \ restart on XON only or on any character is\n         client specific.  ]\n \
    \                                       IAC SB TOGGLE-FLOW-CONTROL\n         \
    \                               RESTART-ANY IAC SE\n       [ The client should\
    \ now switch to allowing output to restart when\n         the user types any character,\
    \ if the client is able to support\n         that functionality.  ]\n        \
    \                                IAC SB TOGGLE-FLOW-CONTROL OFF\n            \
    \                            IAC SE\n                                        IAC\
    \ SB TOGGLE-FLOW-CONTROL ON\n                                        IAC SE\n"
- title: References
  contents:
  - "References\n   [1] Internet Engineering Task Force, Telnet Working Group,\n \
    \      D. Borman, Editor, \"Telnet Linemode Option\", RFC 1184,\n       Cray Research,\
    \ Inc., October 1990.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The original specification for this option was written by\
    \ Charles\n   Hedrick, and published as RFC 1080.  The RESTART-ANY and RESTART-XON\n\
    \   suboptions were defined and added to this version of the document by\n   David\
    \ Borman.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David Borman\n   Cray Research, Inc.\n   655F Lone Oak\
    \ Drive\n   Eagan, MN 55121\n   Phone: (612) 452-6650\n   Email: dab@CRAY.COM\n\
    \   Charles Hedrick\n   Director, LCSR Computing Facility\n   Rutgers University\n\
    \   227 CORE Building\n   P.O. Box 879\n   Piscataway, NJ  08855-0879\n   Phone:\
    \ (908) 932-3088\n   Email: hedrick@cs.rutgers.edu\n   Mailing List: telnet-ietf@CRAY.COM\n"
