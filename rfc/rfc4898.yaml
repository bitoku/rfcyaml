- title: __initial_text__
  contents:
  - '                      TCP Extended Statistics MIB

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes extended performance statistics for TCP.\n\
    \   They are designed to use TCP's ideal vantage point to diagnose\n   performance\
    \ problems in both the network and the application.  If a\n   network-based application\
    \ is performing poorly, TCP can determine if\n   the bottleneck is in the sender,\
    \ the receiver, or the network itself.\n   If the bottleneck is in the network,\
    \ TCP can provide specific\n   information about its nature.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. The Internet-Standard Management Framework ......................2\n  \
    \ 3. Overview ........................................................2\n    \
    \  3.1. MIB Initialization and Persistence .........................4\n      3.2.\
    \ Relationship to TCP Standards ..............................4\n      3.3. Diagnosing\
    \ SYN-Flood Denial-of-Service Attacks .............6\n   4. TCP Extended Statistics\
    \ MIB .....................................7\n   5. Security Considerations ........................................69\n\
    \   6. IANA Considerations ............................................70\n  \
    \ 7. Normative References ...........................................70\n   8.\
    \ Informative References .........................................72\n   9. Contributors\
    \ ...................................................73\n   10. Acknowledgments\
    \ ...............................................73\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes extended performance statistics\
    \ for TCP.\n   They are designed to use TCP's ideal vantage point to diagnose\n\
    \   performance problems in both the network and the application.  If a\n   network-based\
    \ application is performing poorly, TCP can determine if\n   the bottleneck is\
    \ in the sender, the receiver, or the network itself.\n   If the bottleneck is\
    \ in the network, TCP can provide specific\n   information about its nature.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\"\
    \ in this\n   document are to be interpreted as described in RFC 2119.\n   The\
    \ Simple Network Management Protocol (SNMP) objects defined in this\n   document\
    \ extend TCP MIB, as specified in RFC 4022 [RFC4022].  In\n   addition to several\
    \ new scalars and other objects, it augments two\n   tables and makes one clarification\
    \ to RFC 4022.  Existing management\n   stations for the TCP MIB are expected\
    \ to be fully compatible with\n   these clarifications.\n"
- title: 2.  The Internet-Standard Management Framework
  contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   The TCP-ESTATS-MIB defined in this memo consists of two groups\
    \ of\n   scalars, seven tables, and two notifications:\n   *  The first group\
    \ of scalars contain statistics of the TCP protocol\n      engine not covered\
    \ in RFC 4022.  This group consists of the single\n      scalar tcpEStatsListenerTableLastChange,\
    \ which provides management\n      stations with an easier mechanism to validate\
    \ their listener\n      caches.\n   *  The second group of scalars consist of\
    \ knobs to enable and disable\n      information collection by the tables containing\
    \ connection-related\n      statistics/information.  For example, the tcpEStatsControlPath\n\
    \      object controls the activation of the tcpEStatsPathTable.  The\n      tcpEStatsConnTableLatency\
    \ object determines how long connection\n      table rows are retained after a\
    \ TCP connection transitions into\n      the closed state.\n   *  The tcpEStatsListenerTable\
    \ augments tcpListenerTable in TCP-MIB\n      [RFC4022] to provide additional\
    \ information on the active TCP\n      listeners on a device.  It supports objects\
    \ to monitor and\n      diagnose SYN-flood denial-of-service attacks as described\
    \ below.\n   *  The tcpEStatsConnectIdTable augments the tcpConnectionTable in\n\
    \      TCP-MIB [RFC4022] to provide a mapping between connection 4-tuples\n  \
    \    (which index tcpConnectionTable) and an integer connection index,\n     \
    \ tcpEStatsConnectIndex.  The connection index is used to index into\n      the\
    \ five remaining tables in this MIB module, and is designed to\n      facilitate\
    \ rapid polling of multiple objects associated with one\n      TCP connection.\n\
    \   *  The tcpEStatsPerfTable contains objects that are useful for\n      measuring\
    \ TCP performance and first check problem diagnosis.\n   *  The tcpEStatsPathTable\
    \ contains objects that can be used to infer\n      detailed behavior of the Internet\
    \ path, such as the extent that\n      there are segment losses or reordering,\
    \ etc.\n   *  The tcpEStatsStackTable contains objects that are most useful for\n\
    \      determining how well the TCP control algorithms are coping with\n     \
    \ this particular path.\n   *  The tcpEStatsAppTable provides objects that are\
    \ useful for\n      determining if the application using TCP is limiting TCP\n\
    \      performance.\n   *  The tcpEStatsTuneTable provides per-connection controls\
    \ that can\n      be used to work around a number of common problems that plague\
    \ TCP\n      over some paths.\n   *  The two notifications defined in this MIB\
    \ module are\n      tcpEStatsEstablishNotification, indicating that a new connection\n\
    \      has been accepted (or established, see below), and\n      tcpEStatsCloseNotification,\
    \ indicating that an existing connection\n      has recently closed.\n"
- title: 3.1.  MIB Initialization and Persistence
  contents:
  - "3.1.  MIB Initialization and Persistence\n   The TCP protocol itself is specifically\
    \ designed not to preserve any\n   state whatsoever across system reboots, and\
    \ enforces this by\n   requiring randomized Initial Sequence numbers and ephemeral\
    \ ports\n   under any conditions where segments from old connections might\n \
    \  corrupt new connections following a reboot.\n   All of the objects in the MIB\
    \ MUST have the same persistence\n   properties as the underlying TCP implementation.\
    \  On a reboot, all\n   zero-based counters MUST be cleared, all dynamically created\
    \ table\n   rows MUST be deleted, and all read-write objects MUST be restored\
    \ to\n   their default values.  It is assumed that all TCP implementation have\n\
    \   some initialization code (if nothing else, to set IP addresses) that\n   has\
    \ the opportunity to adjust tcpEStatsConnTableLatency and other\n   read-write\
    \ scalars controlling the creation of the various tables,\n   before establishing\
    \ the first TCP connection.  Implementations MAY\n   also choose to make these\
    \ control scalars persist across reboots.\n   The ZeroBasedCounter32 and ZeroBasedCounter64\
    \ objects in the listener\n   and connection tables are initialized to zero when\
    \ the table row is\n   created.\n   The tcpEStatsConnTableLatency object determines\
    \ how long connection\n   table rows are retained after a TCP connection transitions\
    \ into the\n   closed state, to permit reading final connection completion\n \
    \  statistics.  In RFC 4022 (TCP-MIB), the discussion of\n   tcpConnectionTable\
    \ row latency (page 9) the words \"soon after\" are\n   understood to mean after\
    \ tcpEStatsConnTableLatency, such that all\n   rows of all tables associated with\
    \ one connection are retained at\n   least tcpEStatsConnTableLatency after connection\
    \ close.  This\n   clarification to RFC 4022 only applies when TCP-ESTATS-MIB\
    \ is\n   implemented.  If TCP-ESTATS-MIB is not implemented, RFC 4022 permits\n\
    \   an unspecified delay between connection close and row deletion.\n"
- title: 3.2.  Relationship to TCP Standards
  contents:
  - "3.2.  Relationship to TCP Standards\n   There are more than 70 RFCs and other\
    \ documents that specify various\n   aspects of the Transmission Control Protocol\
    \ (TCP) [RFC4614].  While\n   most protocols are completely specified in one or\
    \ two documents, this\n   has not proven to be feasible for TCP.  TCP implements\
    \ a reliable\n   end-to-end data transport service over a very weakly constrained\
    \ IP\n   datagram service.  The essential problem that TCP has to solve is\n \
    \  balancing the applications need for fast and reliable data transport\n   against\
    \ the need to make fair, efficient, and equitable use of\n   network resources,\
    \ with only sparse information about the state of\n   the network or its capabilities.\n\
    \   TCP maintains this balance through the use of many estimators and\n   heuristics\
    \ that regulate various aspects of the protocol.  For\n   example, RFC 2988 describes\
    \ how to calculate the retransmission timer\n   (RTO) from the average and variance\
    \ of the network round-trip-time\n   (RTT), as estimated from the round-trip time\
    \ sampled on some data\n   segments.  Although these algorithms are standardized,\
    \ they are a\n   compromise which is optimal for only common Internet environments.\n\
    \   Other estimators might yield better results (higher performance or\n   more\
    \ efficient use of the network) in some environments, particularly\n   under uncommon\
    \ conditions.\n   It is the consensus of the community that nearly all of the\n\
    \   estimators and heuristics used in TCP might be improved through\n   further\
    \ research and development.  For this reason, nearly all TCP\n   documents leave\
    \ some latitude for future improvements, for example,\n   by the use of \"SHOULD\"\
    \ instead of \"MUST\" [RFC2119].  Even standard\n   algorithms that are required\
    \ because they critically effect fairness\n   or the dynamic stability of Internet\
    \ congestion control, include some\n   latitude for evolution.  As a consequence,\
    \ there is considerable\n   diversity in the details of the TCP implementations\
    \ actually in use\n   today.\n   The fact that the underlying algorithms are not\
    \ uniform makes it\n   difficult to tightly specify a MIB.  We could have chosen\
    \ the point\n   of view that the MIB should publish precisely defined metrics\
    \ of the\n   network path, even if they are different from the estimators in use\n\
    \   by TCP.  This would make the MIB more useful as a measurement tool,\n   but\
    \ less useful for understanding how any specific TCP implementation\n   is interacting\
    \ with the network path and upper protocol layers.  We\n   chose instead to have\
    \ the MIB expose the estimators and important\n   states variables of the algorithms\
    \ in use, without constraining the\n   TCP implementation.\n   As a consequence,\
    \ the MIB objects are defined in terms of fairly\n   abstract descriptions (e.g.,\
    \ round-trip time), but are intended to\n   expose the actual estimators or other\
    \ state variables as they are\n   used in TCP implementations, possibly transformed\
    \ (e.g., scaled or\n   otherwise adjusted) to match the spirit of the object descriptions\
    \ in\n   this document.\n   This may mean that MIB objects may not be exactly\
    \ comparable between\n   two different TCP implementations.  A general management\
    \ station can\n   only assume the abstract descriptions, which are useful for\
    \ a general\n   assessment of how TCP is functioning.  To a TCP implementer with\n\
    \   detailed knowledge about the TCP implementation on a specific host,\n   this\
    \ MIB might be useful for debugging or evaluating the algorithms\n   in their\
    \ implementation.\n   Under no conditions is this MIB intended to constrain TCP\
    \ to use (or\n   exclude) any particular estimator, heuristic, algorithm, or\n\
    \   implementation.\n"
- title: 3.3.  Diagnosing SYN-Flood Denial-of-Service Attacks
  contents:
  - "3.3.  Diagnosing SYN-Flood Denial-of-Service Attacks\n   The tcpEStatsListenerTable\
    \ is specifically designed to provide\n   information that is useful for diagnosing\
    \ SYN-flood Denial-of-Service\n   attacks, where a server is overwhelmed by forged\
    \ or otherwise\n   malicious connection attempts.  There are several different\n\
    \   techniques that can be used to defend against SYN-flooding but none\n   are\
    \ standardized [Edd06].  These different techniques all have the\n   same basic\
    \ characteristics that are instrumentable with a common set\n   of objects, even\
    \ though the techniques differ greatly in the details.\n   All SYN-flood defenses\
    \ avoid allocating significant resources (memory\n   or CPU) to incoming (passive\
    \ open) connections until the connections\n   meet some liveness criteria (to\
    \ defend against forged IP source\n   addresses) and the server has sufficient\
    \ resources to process the\n   incoming request.  Note that allocating resources\
    \ is an\n   implementation-specific event that may not correspond to an\n   observable\
    \ protocol event (e.g., segments on the wire).  There are\n   two general concepts\
    \ that can be applied to all known SYN-flood\n   defenses.  There is generally\
    \ a well-defined event when a connection\n   is allocated full resources, and\
    \ a \"backlog\" -- a queue of embryonic\n   connections that have been allocated\
    \ only partial resources.\n   In many implementations, incoming TCP connections\
    \ are allocated\n   resources as a side effect of the POSIX [POSIX] accept() call.\
    \  For\n   this reason we use the terminology \"accepting a connection\" to refer\n\
    \   to this event: committing sufficient network resources to process the\n  \
    \ incoming request.  Accepting a connection typically entails\n   allocating memory\
    \ for the protocol control block [RFC793], the per-\n   connection table rows\
    \ described in this MIB and CPU resources, such\n   as process table entries or\
    \ threads.\n   Note that it is not useful to accept connections before they are\n\
    \   ESTABLISHED, because this would create an easy opportunity for\n   Denial-of-Service\
    \ attacks, using forged source IP addresses.\n   The backlog consists of connections\
    \ that are in SYN-RCVD or\n   ESTABLISHED states, that have not been accepted.\
    \  For purposes of\n   this MIB, we assume that these connections have been allocated\
    \ some\n   resources (e.g., an embryonic protocol control block), but not full\n\
    \   resources (e.g., do not yet have MIB table rows).\n   Note that some SYN-Flood\
    \ defenses dispense with explicit SYN-RCVD\n   state by cryptographically encoding\
    \ the state in the ISS (initial\n   sequence number sent) of the SYN-ACK (sometimes\
    \ called a syn-cookie),\n   and then using the sequence number of the first ACK\
    \ to reconstruct\n   the SYN-RCVD state before transitioning to the ESTABLISHED\
    \ state.\n   For these implementations there is no explicit representation of\
    \ the\n   SYN-RCVD state, and the backlog only consists of connections that are\n\
    \   ESTABLISHED and are waiting to be ACCEPTED.\n   Furthermore, most SYN-flood\
    \ defenses have some mechanism to throttle\n   connections that might otherwise\
    \ overwhelm this endpoint.  They\n   generally use some combination of discarding\
    \ incoming SYNs and\n   discarding connections already in the backlog.  This does\
    \ not cause\n   all connections from legitimate clients to fail, as long as the\n\
    \   clients retransmit the SYN or first ACK as specified in RFC 793.\n   Most\
    \ diversity in SYN flood defenses arise from variations in these\n   algorithms\
    \ to limit load, and therefore cannot be instrumented with a\n   common standard\
    \ MIB.\n   The Listen Table instruments all passively opened TCP connections in\n\
    \   terms of observable protocol events (e.g., sent and received\n   segments)\
    \ and resource allocation events (entering the backlog and\n   being accepted).\
    \  This approach eases generalization to SYN-flood\n   mechanisms that use alternate\
    \ TCP state transition diagrams and\n   implicit mechanisms to encode some states.\n"
- title: 4.  TCP Extended Statistics MIB
  contents:
  - "4.  TCP Extended Statistics MIB\n   This MIB module IMPORTS definitions from\
    \ [RFC2578], [RFC2579],\n   [RFC2580], [RFC2856], [RFC4022], and [RFC4502].  It\
    \ uses REFERENCE\n   clauses to refer to [RFC791], [RFC793], [RFC1122], [RFC1191],\n\
    \   [RFC1323], [RFC2018], [RFC2581], [RFC2861], [RFC2883], [RFC2988],\n   [RFC3168],\
    \ [RFC3260], [RFC3517], [RFC3522], and [RFC3742].\n   TCP-ESTATS-MIB DEFINITIONS\
    \ ::= BEGIN\n   IMPORTS\n          MODULE-IDENTITY, Counter32, Integer32, Unsigned32,\n\
    \          Gauge32, OBJECT-TYPE, mib-2,\n          NOTIFICATION-TYPE\n       \
    \       FROM SNMPv2-SMI                 -- [RFC2578]\n          MODULE-COMPLIANCE,\
    \ OBJECT-GROUP, NOTIFICATION-GROUP\n              FROM SNMPv2-CONF           \
    \     -- [RFC2580]\n          ZeroBasedCounter32\n              FROM RMON2-MIB\
    \                  -- [RFC4502]\n          ZeroBasedCounter64\n              FROM\
    \ HCNUM-TC                   -- [RFC2856]\n          TEXTUAL-CONVENTION,\n   \
    \       DateAndTime, TruthValue, TimeStamp\n              FROM SNMPv2-TC     \
    \             -- [RFC2579]\n          tcpListenerEntry, tcpConnectionEntry\n \
    \             FROM TCP-MIB;                   -- [RFC4022]\n   tcpEStatsMIB MODULE-IDENTITY\n\
    \       LAST-UPDATED \"200705180000Z\"    -- 18 May 2007\n       ORGANIZATION\
    \ \"IETF TSV Working Group\"\n       CONTACT-INFO\n           \"Matt Mathis\n\
    \           John Heffner\n           Web100 Project\n           Pittsburgh Supercomputing\
    \ Center\n           300 S. Craig St.\n           Pittsburgh, PA 15213\n     \
    \      Email: mathis@psc.edu, jheffner@psc.edu\n           Rajiv Raghunarayan\n\
    \           Cisco Systems Inc.\n           San Jose, CA 95134\n           Phone:\
    \ 408 853 9612\n           Email: raraghun@cisco.com\n           Jon Saperia\n\
    \           84 Kettell Plain Road\n           Stow, MA 01775\n           Phone:\
    \ 617-201-2655\n           Email: saperia@jdscons.com \"\n       DESCRIPTION\n\
    \           \"Documentation of TCP Extended Performance Instrumentation\n    \
    \        variables from the Web100 project.  [Web100]\n            All of the\
    \ objects in this MIB MUST have the same\n            persistence properties as\
    \ the underlying TCP implementation.\n            On a reboot, all zero-based\
    \ counters MUST be cleared, all\n            dynamically created table rows MUST\
    \ be deleted, and all\n            read-write objects MUST be restored to their\
    \ default values.\n            It is assumed that all TCP implementation have\
    \ some\n            initialization code (if nothing else to set IP addresses)\n\
    \            that has the opportunity to adjust tcpEStatsConnTableLatency\n  \
    \          and other read-write scalars controlling the creation of the\n    \
    \        various tables, before establishing the first TCP\n            connection.\
    \  Implementations MAY also choose to make these\n            control scalars\
    \ persist across reboots.\n            Copyright (C) The IETF Trust (2007).  This\
    \ version\n            of this MIB module is a part of RFC 4898; see the RFC\n\
    \            itself for full legal notices.\"\n       REVISION \"200705180000Z\"\
    \    -- 18 May 2007\n       DESCRIPTION\n           \"Initial version, published\
    \ as RFC 4898.\"\n           ::= { mib-2 156 }\n   tcpEStatsNotifications OBJECT\
    \ IDENTIFIER ::= { tcpEStatsMIB 0 }\n   tcpEStatsMIBObjects    OBJECT IDENTIFIER\
    \ ::= { tcpEStatsMIB 1 }\n   tcpEStatsConformance   OBJECT IDENTIFIER ::= { tcpEStatsMIB\
    \ 2 }\n   tcpEStats             OBJECT IDENTIFIER ::= { tcpEStatsMIBObjects 1\
    \ }\n   tcpEStatsControl      OBJECT IDENTIFIER ::= { tcpEStatsMIBObjects 2 }\n\
    \   tcpEStatsScalar       OBJECT IDENTIFIER ::= { tcpEStatsMIBObjects 3 }\n  \
    \ --\n   -- Textual Conventions\n   --\n   TcpEStatsNegotiated  ::= TEXTUAL-CONVENTION\n\
    \      STATUS             current\n      DESCRIPTION\n          \"Indicates if\
    \ some optional TCP feature was negotiated.\n           Enabled(1) indicates that\
    \ the feature was successfully\n           negotiated on, which generally requires\
    \ both hosts to agree\n           to use the feature.\n           selfDisabled(2)\
    \ indicates that the local host refused the\n           feature because it is\
    \ not implemented, configured off, or\n           refused for some other reason,\
    \ such as the lack of\n           resources.\n           peerDisabled(3) indicates\
    \ that the local host was willing\n           to negotiate the feature, but the\
    \ remote host did not\n           do so.\"\n      SYNTAX INTEGER {\n         \
    \          enabled(1),\n                   selfDisabled(2),\n                \
    \   peerDisabled(3)\n           }\n   --\n   -- TCP Extended statistics scalars\n\
    \   --\n   tcpEStatsListenerTableLastChange OBJECT-TYPE\n       SYNTAX     TimeStamp\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \              \"The value of sysUpTime at the time of the last\n            \
    \   creation or deletion of an entry in the tcpListenerTable.\n              \
    \ If the number of entries has been unchanged since the\n               last re-initialization\
    \ of the local network management\n               subsystem, then this object\
    \ contains a zero value.\"\n       ::= { tcpEStatsScalar 3 }\n   -- ================================================================\n\
    \   --\n   -- The tcpEStatsControl Group\n   --\n   -- The scalar objects in this\
    \ group are used to control the\n   -- activation and deactivation of the TCP\
    \ Extended Statistics\n   -- tables and notifications in this module.\n   --\n\
    \   tcpEStatsControlPath  OBJECT-TYPE\n       SYNTAX          TruthValue\n   \
    \    MAX-ACCESS      read-write\n       STATUS          current\n       DESCRIPTION\n\
    \           \"Controls the activation of the TCP Path Statistics\n           table.\n\
    \           A value 'true' indicates that the TCP Path Statistics\n          \
    \ table is active, while 'false' indicates that the\n           table is inactive.\"\
    \n       DEFVAL          { false }\n       ::= { tcpEStatsControl 1 }\n   tcpEStatsControlStack\
    \  OBJECT-TYPE\n       SYNTAX          TruthValue\n       MAX-ACCESS      read-write\n\
    \       STATUS          current\n       DESCRIPTION\n           \"Controls the\
    \ activation of the TCP Stack Statistics\n           table.\n           A value\
    \ 'true' indicates that the TCP Stack Statistics\n           table is active,\
    \ while 'false' indicates that the\n           table is inactive.\"\n       DEFVAL\
    \          { false }\n       ::= { tcpEStatsControl 2 }\n   tcpEStatsControlApp\
    \  OBJECT-TYPE\n       SYNTAX          TruthValue\n       MAX-ACCESS      read-write\n\
    \       STATUS          current\n       DESCRIPTION\n           \"Controls the\
    \ activation of the TCP Application\n           Statistics table.\n          \
    \ A value 'true' indicates that the TCP Application\n           Statistics table\
    \ is active, while 'false' indicates\n           that the table is inactive.\"\
    \n       DEFVAL          { false }\n       ::= { tcpEStatsControl 3 }\n   tcpEStatsControlTune\
    \  OBJECT-TYPE\n       SYNTAX          TruthValue\n       MAX-ACCESS      read-write\n\
    \       STATUS          current\n       DESCRIPTION\n           \"Controls the\
    \ activation of the TCP Tuning table.\n           A value 'true' indicates that\
    \ the TCP Tuning\n           table is active, while 'false' indicates that the\n\
    \           table is inactive.\"\n       DEFVAL          { false }\n       ::=\
    \ { tcpEStatsControl 4 }\n   tcpEStatsControlNotify  OBJECT-TYPE\n       SYNTAX\
    \          TruthValue\n       MAX-ACCESS      read-write\n       STATUS      \
    \    current\n       DESCRIPTION\n           \"Controls the generation of all\
    \ notifications defined in\n           this MIB.\n           A value 'true' indicates\
    \ that the notifications\n           are active, while 'false' indicates that\
    \ the\n           notifications are inactive.\"\n       DEFVAL          { false\
    \ }\n       ::= { tcpEStatsControl 5 }\n   tcpEStatsConnTableLatency OBJECT-TYPE\n\
    \       SYNTAX          Unsigned32\n       UNITS           \"seconds\"\n     \
    \  MAX-ACCESS      read-write\n       STATUS          current\n       DESCRIPTION\n\
    \           \"Specifies the number of seconds that the entity will\n         \
    \   retain entries in the TCP connection tables, after the\n            connection\
    \ first enters the closed state.  The entity\n            SHOULD provide a configuration\
    \ option to enable\n            customization of this value.  A value of 0\n \
    \           results in entries being removed from the tables as soon as\n    \
    \        the connection enters the closed state.  The value of\n            this\
    \ object pertains to the following tables:\n              tcpEStatsConnectIdTable\n\
    \              tcpEStatsPerfTable\n              tcpEStatsPathTable\n        \
    \      tcpEStatsStackTable\n              tcpEStatsAppTable\n              tcpEStatsTuneTable\"\
    \n       DEFVAL { 0 }\n       ::= { tcpEStatsControl 6 }\n   -- ================================================================\n\
    \   --\n   -- Listener Table\n   --\n   tcpEStatsListenerTable OBJECT-TYPE\n \
    \      SYNTAX      SEQUENCE OF TcpEStatsListenerEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \"This table contains\
    \ information about TCP Listeners,\n           in addition to the information\
    \ maintained by the\n           tcpListenerTable RFC 4022.\"\n       ::= { tcpEStats\
    \ 1 }\n   tcpEStatsListenerEntry OBJECT-TYPE\n       SYNTAX       TcpEStatsListenerEntry\n\
    \       MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n\
    \           \"Each entry in the table contains information about\n           a\
    \ specific TCP Listener.\"\n       AUGMENTS { tcpListenerEntry }\n       ::= {\
    \ tcpEStatsListenerTable 1 }\n   TcpEStatsListenerEntry ::= SEQUENCE {\n     \
    \      tcpEStatsListenerStartTime         TimeStamp,\n           tcpEStatsListenerSynRcvd\
    \           ZeroBasedCounter32,\n           tcpEStatsListenerInitial         \
    \  ZeroBasedCounter32,\n           tcpEStatsListenerEstablished       ZeroBasedCounter32,\n\
    \           tcpEStatsListenerAccepted          ZeroBasedCounter32,\n         \
    \  tcpEStatsListenerExceedBacklog     ZeroBasedCounter32,\n           tcpEStatsListenerHCSynRcvd\
    \         ZeroBasedCounter64,\n           tcpEStatsListenerHCInitial         ZeroBasedCounter64,\n\
    \           tcpEStatsListenerHCEstablished     ZeroBasedCounter64,\n         \
    \  tcpEStatsListenerHCAccepted        ZeroBasedCounter64,\n           tcpEStatsListenerHCExceedBacklog\
    \   ZeroBasedCounter64,\n           tcpEStatsListenerCurConns          Gauge32,\n\
    \           tcpEStatsListenerMaxBacklog        Unsigned32,\n           tcpEStatsListenerCurBacklog\
    \        Gauge32,\n           tcpEStatsListenerCurEstabBacklog   Gauge32\n   }\n\
    \   tcpEStatsListenerStartTime   OBJECT-TYPE\n       SYNTAX     TimeStamp\n  \
    \     MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n  \
    \         \"The value of sysUpTime at the time this listener was\n           established.\
    \  If the current state was entered prior to\n           the last re-initialization\
    \ of the local network management\n           subsystem, then this object contains\
    \ a zero value.\"\n       ::= { tcpEStatsListenerEntry 1 }\n   tcpEStatsListenerSynRcvd\
    \ OBJECT-TYPE\n       SYNTAX     ZeroBasedCounter32\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n           \"The number of SYNs\
    \ which have been received for this\n           listener.  The total number of\
    \ failed connections for\n           all reasons can be estimated to be tcpEStatsListenerSynRcvd\n\
    \           minus tcpEStatsListenerAccepted and\n           tcpEStatsListenerCurBacklog.\"\
    \n       ::= { tcpEStatsListenerEntry 2 }\n   tcpEStatsListenerInitial     OBJECT-TYPE\n\
    \      SYNTAX     ZeroBasedCounter32\n      MAX-ACCESS read-only\n      STATUS\
    \     current\n      DESCRIPTION\n         \"The total number of connections for\
    \ which the Listener\n          has allocated initial state and placed the\n \
    \         connection in the backlog.  This may happen in the\n          SYN-RCVD\
    \ or ESTABLISHED states, depending on the\n          implementation.\"\n     \
    \  ::= { tcpEStatsListenerEntry 3 }\n   tcpEStatsListenerEstablished OBJECT-TYPE\n\
    \       SYNTAX     ZeroBasedCounter32\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n           \"The number of connections that\
    \ have been established to\n           this endpoint (e.g., the number of first\
    \ ACKs that have\n           been received for this listener).\"\n       ::= {\
    \ tcpEStatsListenerEntry 4 }\n   tcpEStatsListenerAccepted    OBJECT-TYPE\n  \
    \    SYNTAX     ZeroBasedCounter32\n      MAX-ACCESS read-only\n      STATUS \
    \    current\n      DESCRIPTION\n         \"The total number of connections for\
    \ which the Listener\n          has successfully issued an accept, removing the\
    \ connection\n          from the backlog.\"\n       ::= { tcpEStatsListenerEntry\
    \ 5 }\n   tcpEStatsListenerExceedBacklog OBJECT-TYPE\n      SYNTAX     ZeroBasedCounter32\n\
    \      MAX-ACCESS read-only\n      STATUS     current\n      DESCRIPTION\n   \
    \      \"The total number of connections dropped from the\n         backlog by\
    \ this listener due to all reasons.  This\n         includes all connections that\
    \ are allocated initial\n         resources, but are not accepted for some reason.\"\
    \n       ::= { tcpEStatsListenerEntry 6 }\n   tcpEStatsListenerHCSynRcvd OBJECT-TYPE\n\
    \       SYNTAX     ZeroBasedCounter64\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n           \"The number of SYNs that have been\
    \ received for this\n           listener on systems that can process (or reject)\
    \ more\n           than 1 million connections per second.  See\n           tcpEStatsListenerSynRcvd.\"\
    \n       ::= { tcpEStatsListenerEntry 7 }\n   tcpEStatsListenerHCInitial     OBJECT-TYPE\n\
    \      SYNTAX     ZeroBasedCounter64\n      MAX-ACCESS read-only\n      STATUS\
    \     current\n      DESCRIPTION\n         \"The total number of connections for\
    \ which the Listener\n          has allocated initial state and placed the connection\n\
    \          in the backlog on systems that can process (or reject)\n          more\
    \ than 1 million connections per second.  See\n          tcpEStatsListenerInitial.\"\
    \n       ::= { tcpEStatsListenerEntry 8 }\n   tcpEStatsListenerHCEstablished OBJECT-TYPE\n\
    \       SYNTAX     ZeroBasedCounter64\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n           \"The number of connections that\
    \ have been established to\n           this endpoint on systems that can process\
    \ (or reject) more\n           than 1 million connections per second.  See\n \
    \          tcpEStatsListenerEstablished.\"\n       ::= { tcpEStatsListenerEntry\
    \ 9 }\n   tcpEStatsListenerHCAccepted    OBJECT-TYPE\n      SYNTAX     ZeroBasedCounter64\n\
    \      MAX-ACCESS read-only\n      STATUS     current\n      DESCRIPTION\n   \
    \      \"The total number of connections for which the Listener\n          has\
    \ successfully issued an accept, removing the connection\n          from the backlog\
    \ on systems that can process (or reject)\n          more than 1 million connections\
    \ per second.  See\n          tcpEStatsListenerAccepted.\"\n       ::= { tcpEStatsListenerEntry\
    \ 10 }\n   tcpEStatsListenerHCExceedBacklog OBJECT-TYPE\n      SYNTAX     ZeroBasedCounter64\n\
    \      MAX-ACCESS read-only\n      STATUS     current\n      DESCRIPTION\n   \
    \      \"The total number of connections dropped from the\n         backlog by\
    \ this listener due to all reasons on\n         systems that can process (or reject)\
    \ more than\n         1 million connections per second.  See\n         tcpEStatsListenerExceedBacklog.\"\
    \n       ::= { tcpEStatsListenerEntry 11 }\n   tcpEStatsListenerCurConns   OBJECT-TYPE\n\
    \      SYNTAX     Gauge32\n      MAX-ACCESS read-only\n      STATUS     current\n\
    \      DESCRIPTION\n         \"The current number of connections in the ESTABLISHED\n\
    \          state, which have also been accepted.  It excludes\n          connections\
    \ that have been established but not accepted\n          because they are still\
    \ subject to being discarded to\n          shed load without explicit action by\
    \ either endpoint.\"\n       ::= { tcpEStatsListenerEntry 12 }\n   tcpEStatsListenerMaxBacklog\
    \ OBJECT-TYPE\n      SYNTAX     Unsigned32\n      MAX-ACCESS read-only\n     \
    \ STATUS     current\n      DESCRIPTION\n         \"The maximum number of connections\
    \ allowed in the\n          backlog at one time.\"\n       ::= { tcpEStatsListenerEntry\
    \ 13 }\n   tcpEStatsListenerCurBacklog OBJECT-TYPE\n      SYNTAX     Gauge32\n\
    \      MAX-ACCESS read-only\n      STATUS     current\n      DESCRIPTION\n   \
    \      \"The current number of connections that are in the backlog.\n        \
    \  This gauge includes connections in ESTABLISHED or\n          SYN-RECEIVED states\
    \ for which the Listener has not yet\n          issued an accept.\n          If\
    \ this listener is using some technique to implicitly\n          represent the\
    \ SYN-RECEIVED states (e.g., by\n          cryptographically encoding the state\
    \ information in the\n          initial sequence number, ISS), it MAY elect to\
    \ exclude\n          connections in the SYN-RECEIVED state from the backlog.\"\
    \n       ::= { tcpEStatsListenerEntry 14 }\n   tcpEStatsListenerCurEstabBacklog\
    \ OBJECT-TYPE\n      SYNTAX     Gauge32\n      MAX-ACCESS read-only\n      STATUS\
    \     current\n      DESCRIPTION\n         \"The current number of connections\
    \ in the backlog that are\n          in the ESTABLISHED state, but for which the\
    \ Listener has\n          not yet issued an accept.\"\n       ::= { tcpEStatsListenerEntry\
    \ 15 }\n   -- ================================================================\n\
    \   --\n   -- TCP Connection ID Table\n   --\n   tcpEStatsConnectIdTable    OBJECT-TYPE\n\
    \       SYNTAX      SEQUENCE OF TcpEStatsConnectIdEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \"This table maps\
    \ information that uniquely identifies\n           each active TCP connection\
    \ to the connection ID used by\n           other tables in this MIB Module.  It\
    \ is an extension of\n           tcpConnectionTable in RFC 4022.\n           Entries\
    \ are retained in this table for the number of\n           seconds indicated by\
    \ the tcpEStatsConnTableLatency\n           object, after the TCP connection first\
    \ enters the closed\n           state.\"\n       ::= { tcpEStats 2 }\n   tcpEStatsConnectIdEntry\
    \  OBJECT-TYPE\n       SYNTAX       TcpEStatsConnectIdEntry\n       MAX-ACCESS\
    \   not-accessible\n       STATUS       current\n       DESCRIPTION\n        \
    \   \"Each entry in this table maps a TCP connection\n           4-tuple to a\
    \ connection index.\"\n       AUGMENTS { tcpConnectionEntry }\n       ::= { tcpEStatsConnectIdTable\
    \ 1 }\n   TcpEStatsConnectIdEntry ::= SEQUENCE {\n           tcpEStatsConnectIndex\
    \             Unsigned32\n   }\n   tcpEStatsConnectIndex  OBJECT-TYPE\n      \
    \ SYNTAX          Unsigned32 (1..4294967295)\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n           \"A unique integer\
    \ value assigned to each TCP Connection\n           entry.\n           The RECOMMENDED\
    \ algorithm is to begin at 1 and increase to\n           some implementation-specific\
    \ maximum value and then start\n           again at 1 skipping values already\
    \ in use.\"\n       ::= { tcpEStatsConnectIdEntry 1 }\n   -- ================================================================\n\
    \   --\n   -- Basic TCP Performance Statistics\n   --\n   tcpEStatsPerfTable \
    \   OBJECT-TYPE\n       SYNTAX      SEQUENCE OF TcpEStatsPerfEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \"This table contains objects that are useful for\n           measuring TCP\
    \ performance and first line problem\n           diagnosis.  Most objects in this\
    \ table directly expose\n           some TCP state variable or are easily implemented\
    \ as\n           simple functions (e.g., the maximum value) of TCP\n         \
    \  state variables.\n           Entries are retained in this table for the number\
    \ of\n           seconds indicated by the tcpEStatsConnTableLatency\n        \
    \   object, after the TCP connection first enters the closed\n           state.\"\
    \n       ::= { tcpEStats 3 }\n   tcpEStatsPerfEntry  OBJECT-TYPE\n       SYNTAX\
    \       TcpEStatsPerfEntry\n       MAX-ACCESS   not-accessible\n       STATUS\
    \       current\n       DESCRIPTION\n           \"Each entry in this table has\
    \ information about the\n           characteristics of each active and recently\
    \ closed TCP\n           connection.\"\n      INDEX { tcpEStatsConnectIndex }\n\
    \      ::= { tcpEStatsPerfTable 1 }\n   TcpEStatsPerfEntry ::= SEQUENCE {\n  \
    \         tcpEStatsPerfSegsOut                ZeroBasedCounter32,\n          \
    \ tcpEStatsPerfDataSegsOut            ZeroBasedCounter32,\n           tcpEStatsPerfDataOctetsOut\
    \          ZeroBasedCounter32,\n           tcpEStatsPerfHCDataOctetsOut      \
    \  ZeroBasedCounter64,\n           tcpEStatsPerfSegsRetrans            ZeroBasedCounter32,\n\
    \           tcpEStatsPerfOctetsRetrans          ZeroBasedCounter32,\n        \
    \   tcpEStatsPerfSegsIn                 ZeroBasedCounter32,\n           tcpEStatsPerfDataSegsIn\
    \             ZeroBasedCounter32,\n           tcpEStatsPerfDataOctetsIn      \
    \     ZeroBasedCounter32,\n           tcpEStatsPerfHCDataOctetsIn         ZeroBasedCounter64,\n\
    \           tcpEStatsPerfElapsedSecs            ZeroBasedCounter32,\n        \
    \   tcpEStatsPerfElapsedMicroSecs       ZeroBasedCounter32,\n           tcpEStatsPerfStartTimeStamp\
    \         DateAndTime,\n           tcpEStatsPerfCurMSS                 Gauge32,\n\
    \           tcpEStatsPerfPipeSize               Gauge32,\n           tcpEStatsPerfMaxPipeSize\
    \            Gauge32,\n           tcpEStatsPerfSmoothedRTT            Gauge32,\n\
    \           tcpEStatsPerfCurRTO                 Gauge32,\n           tcpEStatsPerfCongSignals\
    \            ZeroBasedCounter32,\n           tcpEStatsPerfCurCwnd            \
    \    Gauge32,\n           tcpEStatsPerfCurSsthresh            Gauge32,\n     \
    \      tcpEStatsPerfTimeouts               ZeroBasedCounter32,\n           tcpEStatsPerfCurRwinSent\
    \            Gauge32,\n           tcpEStatsPerfMaxRwinSent            Gauge32,\n\
    \           tcpEStatsPerfZeroRwinSent           ZeroBasedCounter32,\n        \
    \   tcpEStatsPerfCurRwinRcvd            Gauge32,\n           tcpEStatsPerfMaxRwinRcvd\
    \            Gauge32,\n           tcpEStatsPerfZeroRwinRcvd           ZeroBasedCounter32,\n\
    \           tcpEStatsPerfSndLimTransRwin        ZeroBasedCounter32,\n        \
    \   tcpEStatsPerfSndLimTransCwnd        ZeroBasedCounter32,\n           tcpEStatsPerfSndLimTransSnd\
    \         ZeroBasedCounter32,\n           tcpEStatsPerfSndLimTimeRwin        \
    \ ZeroBasedCounter32,\n           tcpEStatsPerfSndLimTimeCwnd         ZeroBasedCounter32,\n\
    \           tcpEStatsPerfSndLimTimeSnd          ZeroBasedCounter32\n       }\n\
    \   --\n   --  The following objects provide statistics on aggregate\n   --  segments\
    \ and data sent on a connection.  These provide a\n   --  direct measure of the\
    \ Internet capacity consumed by a\n   --  connection.\n   --\n   tcpEStatsPerfSegsOut\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The total number of segments sent.\"\n       ::= { tcpEStatsPerfEntry 1 }\n\
    \   tcpEStatsPerfDataSegsOut  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of segments sent containing a positive length\n      \
    \     data segment.\"\n       ::= { tcpEStatsPerfEntry 2 }\n   tcpEStatsPerfDataOctetsOut\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets of data contained in transmitted\n\
    \           segments, including retransmitted data.  Note that this does\n   \
    \        not include TCP headers.\"\n       ::= { tcpEStatsPerfEntry 3 }\n   tcpEStatsPerfHCDataOctetsOut\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter64\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets of data contained in transmitted\n\
    \           segments, including retransmitted data, on systems that can\n    \
    \       transmit more than 10 million bits per second.  Note that\n          \
    \ this does not include TCP headers.\"\n       ::= { tcpEStatsPerfEntry 4 }\n\
    \   tcpEStatsPerfSegsRetrans  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of segments transmitted containing at least some\n   \
    \        retransmitted data.\"\n       REFERENCE\n          \"RFC 793, Transmission\
    \ Control Protocol\"\n       ::= { tcpEStatsPerfEntry 5 }\n   tcpEStatsPerfOctetsRetrans\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets retransmitted.\"\n     \
    \  REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n       ::=\
    \ { tcpEStatsPerfEntry 6 }\n   tcpEStatsPerfSegsIn  OBJECT-TYPE\n       SYNTAX\
    \          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The total number of segments\
    \ received.\"\n       ::= { tcpEStatsPerfEntry 7 }\n   tcpEStatsPerfDataSegsIn\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of segments received containing a positive\n           length\
    \ data segment.\"\n       ::= { tcpEStatsPerfEntry 8 }\n   tcpEStatsPerfDataOctetsIn\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets contained in received data\
    \ segments,\n           including retransmitted data.  Note that this does not\n\
    \           include TCP headers.\"\n       ::= { tcpEStatsPerfEntry 9 }\n   tcpEStatsPerfHCDataOctetsIn\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter64\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets contained in received data\
    \ segments,\n           including retransmitted data, on systems that can receive\n\
    \           more than 10 million bits per second.  Note that this does\n     \
    \      not include TCP headers.\"\n       ::= { tcpEStatsPerfEntry 10 }\n   tcpEStatsPerfElapsedSecs\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"seconds\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The seconds part of the time elapsed between\n\
    \           tcpEStatsPerfStartTimeStamp and the most recent protocol\n       \
    \    event (segment sent or received).\"\n       ::= { tcpEStatsPerfEntry 11 }\n\
    \   tcpEStatsPerfElapsedMicroSecs  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       UNITS           \"microseconds\"\n       MAX-ACCESS      read-only\n \
    \      STATUS          current\n       DESCRIPTION\n          \"The micro-second\
    \ part of time elapsed between\n           tcpEStatsPerfStartTimeStamp to the\
    \ most recent protocol\n           event (segment sent or received).  This may\
    \ be updated in\n           whatever time granularity is the system supports.\"\
    \n       ::= { tcpEStatsPerfEntry 12 }\n   tcpEStatsPerfStartTimeStamp  OBJECT-TYPE\n\
    \       SYNTAX          DateAndTime\n       MAX-ACCESS      read-only\n      \
    \ STATUS          current\n       DESCRIPTION\n          \"Time at which this\
    \ row was created and all\n           ZeroBasedCounters in the row were initialized\
    \ to zero.\"\n       ::= { tcpEStatsPerfEntry 13 }\n   --\n   --  The following\
    \ objects can be used to fit minimal\n   --  performance models to the TCP data\
    \ rate.\n   --\n   tcpEStatsPerfCurMSS  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The current maximum segment\
    \ size (MSS), in octets.\"\n       REFERENCE\n          \"RFC 1122, Requirements\
    \ for Internet Hosts - Communication\n           Layers\"\n       ::= { tcpEStatsPerfEntry\
    \ 14 }\n   tcpEStatsPerfPipeSize  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The TCP senders current estimate\
    \ of the number of\n           unacknowledged data octets in the network.\n  \
    \         While not in recovery (e.g., while the receiver is not\n           reporting\
    \ missing data to the sender), this is precisely the\n           same as 'Flight\
    \ size' as defined in RFC 2581, which can be\n           computed as SND.NXT minus\
    \ SND.UNA. [RFC793]\n           During recovery, the TCP sender has incomplete\
    \ information\n           about the state of the network (e.g., which segments\
    \ are\n           lost vs reordered, especially if the return path is also\n \
    \          dropping TCP acknowledgments).  Current TCP standards do not\n    \
    \       mandate any specific algorithm for estimating the number of\n        \
    \   unacknowledged data octets in the network.\n           RFC 3517 describes\
    \ a conservative algorithm to use SACK\n           information to estimate the\
    \ number of unacknowledged data\n           octets in the network. tcpEStatsPerfPipeSize\
    \ object SHOULD\n           be the same as 'pipe' as defined in RFC 3517 if it\
    \ is\n           implemented. (Note that while not in recovery the pipe\n    \
    \       algorithm yields the same values as flight size).\n           If RFC 3517\
    \ is not implemented, the data octets in flight\n           SHOULD be estimated\
    \ as SND.NXT minus SND.UNA adjusted by\n           some measure of the data that\
    \ has left the network and\n           retransmitted data.  For example, with\
    \ Reno or NewReno style\n           TCP, the number of duplicate acknowledgment\
    \ is used to\n           count the number of segments that have left the network.\n\
    \           That is,\n           PipeSize=SND.NXT-SND.UNA+(retransmits-dupacks)*CurMSS\"\
    \n       REFERENCE\n          \"RFC 793, RFC 2581, RFC 3517\"\n       ::= { tcpEStatsPerfEntry\
    \ 15 }\n   tcpEStatsPerfMaxPipeSize  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The maximum value of tcpEStatsPerfPipeSize,\
    \ for this\n           connection.\"\n       REFERENCE\n          \"RFC 793, RFC\
    \ 2581, RFC 3517\"\n       ::= { tcpEStatsPerfEntry 16 }\n   tcpEStatsPerfSmoothedRTT\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"milliseconds\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The smoothed round trip time used in calculation of the\n       \
    \    RTO. See SRTT in [RFC2988].\"\n       REFERENCE\n          \"RFC 2988, Computing\
    \ TCP's Retransmission Timer\"\n       ::= { tcpEStatsPerfEntry 17 }\n   tcpEStatsPerfCurRTO\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"milliseconds\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The current value of the retransmit timer RTO.\"\n       REFERENCE\n\
    \          \"RFC 2988, Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsPerfEntry\
    \ 18 }\n   tcpEStatsPerfCongSignals  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of multiplicative downward congestion window\n       \
    \    adjustments due to all forms of congestion signals,\n           including\
    \ Fast Retransmit, Explicit Congestion Notification\n           (ECN), and timeouts.\
    \  This object summarizes all events that\n           invoke the MD portion of\
    \ Additive Increase Multiplicative\n           Decrease (AIMD) congestion control,\
    \ and as such is the best\n           indicator of how a cwnd is being affected\
    \ by congestion.\n           Note that retransmission timeouts multiplicatively\
    \ reduce\n           the window implicitly by setting ssthresh, and SHOULD be\n\
    \           included in tcpEStatsPerfCongSignals.  In order to minimize\n    \
    \       spurious congestion indications due to out-of-order\n           segments,\
    \ tcpEStatsPerfCongSignals SHOULD be incremented in\n           association with\
    \ the Fast Retransmit algorithm.\"\n       REFERENCE\n          \"RFC 2581, TCP\
    \ Congestion Control\"\n       ::= { tcpEStatsPerfEntry 19 }\n   tcpEStatsPerfCurCwnd\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The current congestion window, in octets.\"\n       REFERENCE\n \
    \         \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsPerfEntry\
    \ 20 }\n   tcpEStatsPerfCurSsthresh  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The current slow start threshold\
    \ in octets.\"\n       REFERENCE\n          \"RFC 2581, TCP Congestion Control\"\
    \n       ::= { tcpEStatsPerfEntry 21 }\n   tcpEStatsPerfTimeouts  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The number of\
    \ times the retransmit timeout has expired when\n           the RTO backoff multiplier\
    \ is equal to one.\"\n       REFERENCE\n          \"RFC 2988, Computing TCP's\
    \ Retransmission Timer\"\n       ::= { tcpEStatsPerfEntry 22 }\n   --\n   -- \
    \ The following objects instrument receiver window updates\n   --  sent by the\
    \ local receiver to the remote sender.  These can\n   --  be used to determine\
    \ if the local receiver is exerting flow\n   --  control back pressure on the\
    \ remote sender.\n   --\n   tcpEStatsPerfCurRwinSent  OBJECT-TYPE\n       SYNTAX\
    \          Gauge32\n       UNITS           \"octets\"\n       MAX-ACCESS     \
    \ read-only\n       STATUS          current\n       DESCRIPTION\n          \"\
    The most recent window advertisement sent, in octets.\"\n       REFERENCE\n  \
    \        \"RFC 793, Transmission Control Protocol\"\n       ::= { tcpEStatsPerfEntry\
    \ 23 }\n   tcpEStatsPerfMaxRwinSent  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The maximum window advertisement\
    \ sent, in octets.\"\n       REFERENCE\n          \"RFC 793, Transmission Control\
    \ Protocol\"\n       ::= { tcpEStatsPerfEntry 24 }\n   tcpEStatsPerfZeroRwinSent\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of acknowledgments sent announcing a zero\n           receive\
    \ window, when the previously announced window was\n           not zero.\"\n \
    \      REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n     \
    \  ::= { tcpEStatsPerfEntry 25 }\n   --\n   --  The following objects instrument\
    \ receiver window updates\n   --  from the far end-system to determine if the\
    \ remote receiver\n   --  has sufficient buffer space or is exerting flow-control\n\
    \   --  back pressure on the local sender.\n   --\n   tcpEStatsPerfCurRwinRcvd\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The most recent window advertisement received, in octets.\"\n   \
    \    REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n       ::=\
    \ { tcpEStatsPerfEntry 26 }\n   tcpEStatsPerfMaxRwinRcvd  OBJECT-TYPE\n      \
    \ SYNTAX          Gauge32\n       UNITS           \"octets\"\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The maximum window advertisement received, in octets.\"\n       REFERENCE\n\
    \          \"RFC 793, Transmission Control Protocol\"\n       ::= { tcpEStatsPerfEntry\
    \ 27 }\n   tcpEStatsPerfZeroRwinRcvd  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of acknowledgments received announcing a zero\n      \
    \     receive window, when the previously announced window was\n           not\
    \ zero.\"\n       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\
    \n       ::= { tcpEStatsPerfEntry 28 }\n   --\n   --  The following optional objects\
    \ can be used to quickly\n   --  identify which subsystems are limiting TCP performance.\n\
    \   --  There are three parallel pairs of instruments that measure\n   --  the\
    \ extent to which TCP performance is limited by the\n   --  announced receiver\
    \ window (indicating a receiver\n   --  bottleneck), the current congestion window\
    \ or\n   --  retransmission timeout (indicating a path bottleneck) and\n   --\
    \  all others events (indicating a sender bottleneck).\n   --\n   --  These instruments\
    \ SHOULD be updated every time the TCP\n   --  output routine stops sending data.\
    \  The elapsed time since\n   --  the previous stop is accumulated into the appropriate\n\
    \   --  object as determined by the previous stop reason (e.g.,\n   --  stop state).\
    \  The current stop reason determines which timer\n   --  will be updated the\
    \ next time TCP output stops.\n   --\n   --  Since there is no explicit stop at\
    \ the beginning of a\n   --  timeout, it is necessary to retroactively reclassify\
    \ the\n   --  previous stop as 'Congestion Limited'.\n   --\n   tcpEStatsPerfSndLimTransRwin\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of transitions into the 'Receiver Limited' state\n           from\
    \ either the 'Congestion Limited' or 'Sender Limited'\n           states.  This\
    \ state is entered whenever TCP transmission\n           stops because the sender\
    \ has filled the announced receiver\n           window, i.e., when SND.NXT has\
    \ advanced to SND.UNA +\n           SND.WND - 1 as described in RFC 793.\"\n \
    \      REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n     \
    \  ::= { tcpEStatsPerfEntry 31 }\n   tcpEStatsPerfSndLimTransCwnd  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The number of\
    \ transitions into the 'Congestion Limited'\n           state from either the\
    \ 'Receiver Limited' or 'Sender\n           Limited' states.  This state is entered\
    \ whenever TCP\n           transmission stops because the sender has reached some\n\
    \           limit defined by congestion control (e.g., cwnd) or other\n      \
    \     algorithms (retransmission timeouts) designed to control\n           network\
    \ traffic.  See the definition of 'CONGESTION WINDOW'\n           in RFC 2581.\"\
    \n       REFERENCE\n          \"RFC 2581, TCP Congestion Control\"\n       ::=\
    \ { tcpEStatsPerfEntry 32 }\n   tcpEStatsPerfSndLimTransSnd  OBJECT-TYPE\n   \
    \    SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n  \
    \     STATUS          current\n       DESCRIPTION\n          \"The number of transitions\
    \ into the 'Sender Limited' state\n           from either the 'Receiver Limited'\
    \ or 'Congestion Limited'\n           states.  This state is entered whenever\
    \ TCP transmission\n           stops due to some sender limit such as running\
    \ out of\n           application data or other resources and the Karn algorithm.\n\
    \           When TCP stops sending data for any reason, which cannot be\n    \
    \       classified as Receiver Limited or Congestion Limited, it\n           MUST\
    \ be treated as Sender Limited.\"\n       ::= { tcpEStatsPerfEntry 33 }\n   tcpEStatsPerfSndLimTimeRwin\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"milliseconds\"\n       MAX-ACCESS      read-only\n       STATUS      \
    \    current\n       DESCRIPTION\n          \"The cumulative time spent in the\
    \ 'Receiver Limited' state.\n           See tcpEStatsPerfSndLimTransRwin.\"\n\
    \       ::= { tcpEStatsPerfEntry 34 }\n   tcpEStatsPerfSndLimTimeCwnd  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       UNITS           \"milliseconds\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The cumulative time spent in the 'Congestion Limited'\n         \
    \  state.  See tcpEStatsPerfSndLimTransCwnd.  When there is a\n           retransmission\
    \ timeout, it SHOULD be counted in\n           tcpEStatsPerfSndLimTimeCwnd (and\
    \ not the cumulative time\n           for some other state.)\"\n       ::= { tcpEStatsPerfEntry\
    \ 35 }\n   tcpEStatsPerfSndLimTimeSnd  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       UNITS           \"milliseconds\"\n       MAX-ACCESS      read-only\n \
    \      STATUS          current\n       DESCRIPTION\n          \"The cumulative\
    \ time spent in the 'Sender Limited' state.\n           See tcpEStatsPerfSndLimTransSnd.\"\
    \n       ::= { tcpEStatsPerfEntry 36 }\n   -- ================================================================\n\
    \   --\n   -- Statistics for diagnosing path problems\n   --\n   tcpEStatsPathTable\
    \    OBJECT-TYPE\n       SYNTAX      SEQUENCE OF TcpEStatsPathEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \"This table contains objects that can be used to infer\n           detailed\
    \ behavior of the Internet path, such as the\n           extent that there is\
    \ reordering, ECN bits, and if\n           RTT fluctuations are correlated to\
    \ losses.\n           Entries are retained in this table for the number of\n \
    \          seconds indicated by the tcpEStatsConnTableLatency\n           object,\
    \ after the TCP connection first enters the closed\n           state.\"\n    \
    \   ::= { tcpEStats 4 }\n   tcpEStatsPathEntry  OBJECT-TYPE\n       SYNTAX   \
    \    TcpEStatsPathEntry\n       MAX-ACCESS   not-accessible\n       STATUS   \
    \    current\n       DESCRIPTION\n           \"Each entry in this table has information\
    \ about the\n           characteristics of each active and recently closed TCP\n\
    \           connection.\"\n      INDEX { tcpEStatsConnectIndex }\n      ::= {\
    \ tcpEStatsPathTable 1 }\n   TcpEStatsPathEntry ::= SEQUENCE {\n           tcpEStatsPathRetranThresh\
    \           Gauge32,\n           tcpEStatsPathNonRecovDAEpisodes     ZeroBasedCounter32,\n\
    \           tcpEStatsPathSumOctetsReordered     ZeroBasedCounter32,\n        \
    \   tcpEStatsPathNonRecovDA             ZeroBasedCounter32,\n           tcpEStatsPathSampleRTT\
    \              Gauge32,\n           tcpEStatsPathRTTVar                 Gauge32,\n\
    \           tcpEStatsPathMaxRTT                 Gauge32,\n           tcpEStatsPathMinRTT\
    \                 Gauge32,\n           tcpEStatsPathSumRTT                 ZeroBasedCounter32,\n\
    \           tcpEStatsPathHCSumRTT               ZeroBasedCounter64,\n        \
    \   tcpEStatsPathCountRTT               ZeroBasedCounter32,\n           tcpEStatsPathMaxRTO\
    \                 Gauge32,\n           tcpEStatsPathMinRTO                 Gauge32,\n\
    \           tcpEStatsPathIpTtl                  Unsigned32,\n           tcpEStatsPathIpTosIn\
    \                OCTET STRING,\n           tcpEStatsPathIpTosOut             \
    \  OCTET STRING,\n           tcpEStatsPathPreCongSumCwnd         ZeroBasedCounter32,\n\
    \           tcpEStatsPathPreCongSumRTT          ZeroBasedCounter32,\n        \
    \   tcpEStatsPathPostCongSumRTT         ZeroBasedCounter32,\n           tcpEStatsPathPostCongCountRTT\
    \       ZeroBasedCounter32,\n           tcpEStatsPathECNsignals             ZeroBasedCounter32,\n\
    \           tcpEStatsPathDupAckEpisodes         ZeroBasedCounter32,\n        \
    \   tcpEStatsPathRcvRTT                 Gauge32,\n           tcpEStatsPathDupAcksOut\
    \             ZeroBasedCounter32,\n           tcpEStatsPathCERcvd            \
    \     ZeroBasedCounter32,\n           tcpEStatsPathECESent                ZeroBasedCounter32\n\
    \       }\n   --\n   --  The following optional objects can be used to infer segment\n\
    \   --  reordering on the path from the local sender to the remote\n   --  receiver.\n\
    \   --\n   tcpEStatsPathRetranThresh  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of duplicate acknowledgments required to trigger\n   \
    \        Fast Retransmit.  Note that although this is constant in\n          \
    \ traditional Reno TCP implementations, it is adaptive in\n           many newer\
    \ TCPs.\"\n       REFERENCE\n          \"RFC 2581, TCP Congestion Control\"\n\
    \       ::= { tcpEStatsPathEntry 1 }\n   tcpEStatsPathNonRecovDAEpisodes  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The number of\
    \ duplicate acknowledgment episodes that did\n           not trigger a Fast Retransmit\
    \ because ACK advanced prior to\n           the number of duplicate acknowledgments\
    \ reaching\n           RetranThresh.\n           In many implementations this\
    \ is the number of times the\n           'dupacks' counter is set to zero when\
    \ it is non-zero but\n           less than RetranThresh.\n           Note that\
    \ the change in tcpEStatsPathNonRecovDAEpisodes\n           divided by the change\
    \ in tcpEStatsPerfDataSegsOut is an\n           estimate of the frequency of data\
    \ reordering on the forward\n           path over some interval.\"\n       REFERENCE\n\
    \          \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsPathEntry\
    \ 2 }\n   tcpEStatsPathSumOctetsReordered  OBJECT-TYPE\n       SYNTAX        \
    \  ZeroBasedCounter32\n       UNITS           \"octets\"\n       MAX-ACCESS  \
    \    read-only\n       STATUS          current\n       DESCRIPTION\n         \
    \ \"The sum of the amounts SND.UNA advances on the\n           acknowledgment\
    \ which ends a dup-ack episode without a\n           retransmission.\n       \
    \    Note the change in tcpEStatsPathSumOctetsReordered divided\n           by\
    \ the change in tcpEStatsPathNonRecovDAEpisodes is an\n           estimates of\
    \ the average reordering distance, over some\n           interval.\"\n       ::=\
    \ { tcpEStatsPathEntry 3 }\n   tcpEStatsPathNonRecovDA  OBJECT-TYPE\n       SYNTAX\
    \          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"Duplicate acks (or SACKS)\
    \ that did not trigger a Fast\n           Retransmit because ACK advanced prior\
    \ to the number of\n           duplicate acknowledgments reaching RetranThresh.\n\
    \           In many implementations, this is the sum of the 'dupacks'\n      \
    \     counter, just before it is set to zero because ACK advanced\n          \
    \ without a Fast Retransmit.\n           Note that the change in tcpEStatsPathNonRecovDA\
    \ divided by\n           the change in tcpEStatsPathNonRecovDAEpisodes is an\n\
    \           estimate of the average reordering distance in segments\n        \
    \   over some interval.\"\n       REFERENCE\n          \"RFC 2581, TCP Congestion\
    \ Control\"\n       ::= { tcpEStatsPathEntry 4 }\n   --\n   --  The following\
    \ optional objects instrument the round trip\n   --  time estimator and the retransmission\
    \ timeout timer.\n   --\n   tcpEStatsPathSampleRTT  OBJECT-TYPE\n       SYNTAX\
    \          Gauge32\n       UNITS           \"milliseconds\"\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The most recent raw round trip time measurement used in\n           calculation\
    \ of the RTO.\"\n       REFERENCE\n          \"RFC 2988, Computing TCP's Retransmission\
    \ Timer\"\n       ::= { tcpEStatsPathEntry 11 }\n   tcpEStatsPathRTTVar  OBJECT-TYPE\n\
    \       SYNTAX          Gauge32\n       UNITS           \"milliseconds\"\n   \
    \    MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The round trip time variation used in calculation of the\n      \
    \     RTO.  See RTTVAR in [RFC2988].\"\n       REFERENCE\n          \"RFC 2988,\
    \ Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry 12 }\n\
    \   tcpEStatsPathMaxRTT  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS\
    \           \"milliseconds\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The maximum sampled round\
    \ trip time.\"\n       REFERENCE\n          \"RFC 2988, Computing TCP's Retransmission\
    \ Timer\"\n       ::= { tcpEStatsPathEntry 13 }\n   tcpEStatsPathMinRTT  OBJECT-TYPE\n\
    \       SYNTAX          Gauge32\n       UNITS           \"milliseconds\"\n   \
    \    MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The minimum sampled round trip time.\"\n       REFERENCE\n      \
    \    \"RFC 2988, Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry\
    \ 14 }\n   tcpEStatsPathSumRTT  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       UNITS           \"milliseconds\"\n       MAX-ACCESS      read-only\n \
    \      STATUS          current\n       DESCRIPTION\n          \"The sum of all\
    \ sampled round trip times.\n           Note that the change in tcpEStatsPathSumRTT\
    \ divided by the\n           change in tcpEStatsPathCountRTT is the mean RTT,\
    \ uniformly\n           averaged over an enter interval.\"\n       REFERENCE\n\
    \          \"RFC 2988, Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry\
    \ 15 }\n   tcpEStatsPathHCSumRTT  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter64\n\
    \       UNITS           \"milliseconds\"\n       MAX-ACCESS      read-only\n \
    \      STATUS          current\n       DESCRIPTION\n          \"The sum of all\
    \ sampled round trip times, on all systems\n           that implement multiple\
    \ concurrent RTT measurements.\n           Note that the change in tcpEStatsPathHCSumRTT\
    \ divided by\n           the change in tcpEStatsPathCountRTT is the mean RTT,\n\
    \           uniformly averaged over an enter interval.\"\n       REFERENCE\n \
    \         \"RFC 2988, Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry\
    \ 16 }\n   tcpEStatsPathCountRTT  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of round trip time samples included in\n           tcpEStatsPathSumRTT\
    \ and tcpEStatsPathHCSumRTT.\"\n       REFERENCE\n          \"RFC 2988, Computing\
    \ TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry 17 }\n   tcpEStatsPathMaxRTO\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"milliseconds\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The maximum value of the retransmit timer RTO.\"\n       REFERENCE\n\
    \          \"RFC 2988, Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry\
    \ 18 }\n   tcpEStatsPathMinRTO  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"milliseconds\"\n       MAX-ACCESS      read-only\n \
    \      STATUS          current\n       DESCRIPTION\n          \"The minimum value\
    \ of the retransmit timer RTO.\"\n       REFERENCE\n          \"RFC 2988, Computing\
    \ TCP's Retransmission Timer\"\n       ::= { tcpEStatsPathEntry 19 }\n   --\n\
    \   --  The following optional objects provide information about\n   --  how TCP\
    \ is using the IP layer.\n   --\n   tcpEStatsPathIpTtl  OBJECT-TYPE\n       SYNTAX\
    \          Unsigned32\n       MAX-ACCESS      read-only\n       STATUS       \
    \   current\n       DESCRIPTION\n          \"The value of the TTL field carried\
    \ in the most recently\n           received IP header.  This is sometimes useful\
    \ to detect\n           changing or unstable routes.\"\n       REFERENCE\n   \
    \       \"RFC 791, Internet Protocol\"\n       ::= { tcpEStatsPathEntry 20 }\n\
    \   tcpEStatsPathIpTosIn  OBJECT-TYPE\n       SYNTAX          OCTET STRING (SIZE(1))\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The value of the IPv4 Type of Service octet, or the IPv6\n      \
    \     traffic class octet, carried in the most recently received\n           IP\
    \ header.\n           This is useful to diagnose interactions between TCP and\
    \ any\n           IP layer packet scheduling and delivery policy, which might\n\
    \           be in effect to implement Diffserv.\"\n       REFERENCE\n        \
    \  \"RFC 3260, New Terminology and Clarifications for Diffserv\"\n       ::= {\
    \ tcpEStatsPathEntry 21 }\n   tcpEStatsPathIpTosOut  OBJECT-TYPE\n       SYNTAX\
    \          OCTET STRING (SIZE(1))\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The value of the IPv4 Type\
    \ Of Service octet, or the IPv6\n           traffic class octet, carried in the\
    \ most recently\n           transmitted IP header.\n           This is useful\
    \ to diagnose interactions between TCP and any\n           IP layer packet scheduling\
    \ and delivery policy, which might\n           be in effect to implement Diffserv.\"\
    \n       REFERENCE\n          \"RFC 3260, New Terminology and Clarifications for\
    \ Diffserv\"\n       ::= { tcpEStatsPathEntry 22 }\n   --\n   --  The following\
    \ optional objects characterize the congestion\n   --  feedback signals by collecting\
    \ statistics on how the\n   --  congestion events are correlated to losses, changes\
    \ in RTT\n   --  and other protocol events.\n   --\n   tcpEStatsPathPreCongSumCwnd\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The sum of the values of the congestion window,\
    \ in octets,\n           captured each time a congestion signal is received. \
    \ This\n           MUST be updated each time tcpEStatsPerfCongSignals is\n   \
    \        incremented, such that the change in\n           tcpEStatsPathPreCongSumCwnd\
    \ divided by the change in\n           tcpEStatsPerfCongSignals is the average\
    \ window (over some\n           interval) just prior to a congestion signal.\"\
    \n       ::= { tcpEStatsPathEntry 23 }\n   tcpEStatsPathPreCongSumRTT  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       UNITS           \"milliseconds\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"Sum of the last sample of the RTT (tcpEStatsPathSampleRTT)\n    \
    \       prior to the received congestion signals.  This MUST be\n           updated\
    \ each time tcpEStatsPerfCongSignals is incremented,\n           such that the\
    \ change in tcpEStatsPathPreCongSumRTT divided by\n           the change in tcpEStatsPerfCongSignals\
    \ is the average RTT\n           (over some interval) just prior to a congestion\
    \ signal.\"\n       ::= { tcpEStatsPathEntry 24 }\n   tcpEStatsPathPostCongSumRTT\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"Sum of the first sample of the RTT (tcpEStatsPathSampleRTT)\n\
    \           following each congestion signal.  Such that the change in\n     \
    \      tcpEStatsPathPostCongSumRTT divided by the change in\n           tcpEStatsPathPostCongCountRTT\
    \ is the average RTT (over some\n           interval) just after a congestion\
    \ signal.\"\n       ::= { tcpEStatsPathEntry 25 }\n   tcpEStatsPathPostCongCountRTT\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"milliseconds\"\n       MAX-ACCESS      read-only\n       STATUS      \
    \    current\n       DESCRIPTION\n          \"The number of RTT samples included\
    \ in\n           tcpEStatsPathPostCongSumRTT such that the change in\n       \
    \    tcpEStatsPathPostCongSumRTT divided by the change in\n           tcpEStatsPathPostCongCountRTT\
    \ is the average RTT (over some\n           interval) just after a congestion\
    \ signal.\"\n       ::= { tcpEStatsPathEntry 26 }\n   --\n   --  The following\
    \ optional objects can be used to detect other\n   --  types of non-loss congestion\
    \ signals such as source quench\n   --  or ECN.\n   --\n   tcpEStatsPathECNsignals\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of congestion signals delivered to the TCP\n           sender\
    \ via explicit congestion notification (ECN).  This is\n           typically the\
    \ number of segments bearing Echo Congestion\n           Experienced (ECE) bits,\
    \ but\n           should also include segments failing the ECN nonce check or\n\
    \           other explicit congestion signals.\"\n       REFERENCE\n         \
    \ \"RFC 3168, The Addition of Explicit Congestion Notification\n           (ECN)\
    \ to IP\"\n       ::= { tcpEStatsPathEntry 27 }\n   --\n   --  The following optional\
    \ objects are receiver side\n   --  instruments of the path from the sender to\
    \ the receiver.  In\n   --  general, the receiver has less information about the\
    \ state\n   --  of the path because the receiver does not have a robust\n   --\
    \  mechanism to infer the sender's actions.\n   --\n   tcpEStatsPathDupAckEpisodes\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of Duplicate Acks Sent when prior Ack was not\n           duplicate.\
    \  This is the number of times that a contiguous\n           series of duplicate\
    \ acknowledgments have been sent.\n           This is an indication of the number\
    \ of data segments lost\n           or reordered on the path from the remote TCP\
    \ endpoint to\n           the near TCP endpoint.\"\n       REFERENCE\n       \
    \   \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsPathEntry 28 }\n\
    \   tcpEStatsPathRcvRTT  OBJECT-TYPE\n       SYNTAX          Gauge32\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The receiver's estimate of the Path RTT.\n           Adaptive receiver window\
    \ algorithms depend on the receiver\n           to having a good estimate of the\
    \ path RTT.\"\n       ::= { tcpEStatsPathEntry 29 }\n   tcpEStatsPathDupAcksOut\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of duplicate ACKs sent.  The ratio of the change\n           in\
    \ tcpEStatsPathDupAcksOut to the change in\n           tcpEStatsPathDupAckEpisodes\
    \ is an indication of reorder or\n           recovery distance over some interval.\"\
    \n       REFERENCE\n          \"RFC 2581, TCP Congestion Control\"\n       ::=\
    \ { tcpEStatsPathEntry 30 }\n   tcpEStatsPathCERcvd  OBJECT-TYPE\n       SYNTAX\
    \          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The number of segments received\
    \ with IP headers bearing\n           Congestion Experienced (CE) markings.\"\n\
    \       REFERENCE\n          \"RFC 3168, The Addition of Explicit Congestion Notification\n\
    \           (ECN) to IP\"\n       ::= { tcpEStatsPathEntry 31 }\n   tcpEStatsPathECESent\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"Number of times the Echo Congestion Experienced (ECE) bit\n           in\
    \ the TCP header has been set (transitioned from 0 to 1),\n           due to a\
    \ Congestion Experienced (CE) marking on an IP\n           header.  Note that\
    \ ECE can be set and reset only once per\n           RTT, while CE can be set\
    \ on many segments per RTT.\"\n       REFERENCE\n          \"RFC 3168, The Addition\
    \ of Explicit Congestion Notification\n           (ECN) to IP\"\n       ::= {\
    \ tcpEStatsPathEntry 32 }\n   -- ================================================================\n\
    \   --\n   -- Statistics for diagnosing stack algorithms\n   --\n   tcpEStatsStackTable\
    \    OBJECT-TYPE\n       SYNTAX      SEQUENCE OF TcpEStatsStackEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \"This table contains objects that are most useful for\n           determining\
    \ how well some of the TCP control\n           algorithms are coping with this\
    \ particular\n           path.\n           Entries are retained in this table\
    \ for the number of\n           seconds indicated by the tcpEStatsConnTableLatency\n\
    \           object, after the TCP connection first enters the closed\n       \
    \    state.\"\n       ::= { tcpEStats 5 }\n   tcpEStatsStackEntry  OBJECT-TYPE\n\
    \       SYNTAX       TcpEStatsStackEntry\n       MAX-ACCESS   not-accessible\n\
    \       STATUS       current\n       DESCRIPTION\n           \"Each entry in this\
    \ table has information about the\n           characteristics of each active and\
    \ recently closed TCP\n           connection.\"\n      INDEX { tcpEStatsConnectIndex\
    \ }\n      ::= { tcpEStatsStackTable 1 }\n   TcpEStatsStackEntry ::= SEQUENCE\
    \ {\n           tcpEStatsStackActiveOpen            TruthValue,\n           tcpEStatsStackMSSSent\
    \               Unsigned32,\n           tcpEStatsStackMSSRcvd               Unsigned32,\n\
    \           tcpEStatsStackWinScaleSent          Integer32,\n           tcpEStatsStackWinScaleRcvd\
    \          Integer32,\n           tcpEStatsStackTimeStamps            TcpEStatsNegotiated,\n\
    \           tcpEStatsStackECN                   TcpEStatsNegotiated,\n       \
    \    tcpEStatsStackWillSendSACK          TcpEStatsNegotiated,\n           tcpEStatsStackWillUseSACK\
    \           TcpEStatsNegotiated,\n           tcpEStatsStackState             \
    \    INTEGER,\n           tcpEStatsStackNagle                 TruthValue,\n  \
    \         tcpEStatsStackMaxSsCwnd             Gauge32,\n           tcpEStatsStackMaxCaCwnd\
    \             Gauge32,\n           tcpEStatsStackMaxSsthresh           Gauge32,\n\
    \           tcpEStatsStackMinSsthresh           Gauge32,\n           tcpEStatsStackInRecovery\
    \            INTEGER,\n           tcpEStatsStackDupAcksIn             ZeroBasedCounter32,\n\
    \           tcpEStatsStackSpuriousFrDetected    ZeroBasedCounter32,\n        \
    \   tcpEStatsStackSpuriousRtoDetected   ZeroBasedCounter32,\n           tcpEStatsStackSoftErrors\
    \            ZeroBasedCounter32,\n           tcpEStatsStackSoftErrorReason   \
    \    INTEGER,\n           tcpEStatsStackSlowStart             ZeroBasedCounter32,\n\
    \           tcpEStatsStackCongAvoid             ZeroBasedCounter32,\n        \
    \   tcpEStatsStackOtherReductions       ZeroBasedCounter32,\n           tcpEStatsStackCongOverCount\
    \         ZeroBasedCounter32,\n           tcpEStatsStackFastRetran           \
    \ ZeroBasedCounter32,\n           tcpEStatsStackSubsequentTimeouts    ZeroBasedCounter32,\n\
    \           tcpEStatsStackCurTimeoutCount       Gauge32,\n           tcpEStatsStackAbruptTimeouts\
    \        ZeroBasedCounter32,\n           tcpEStatsStackSACKsRcvd             ZeroBasedCounter32,\n\
    \           tcpEStatsStackSACKBlocksRcvd        ZeroBasedCounter32,\n        \
    \   tcpEStatsStackSendStall             ZeroBasedCounter32,\n           tcpEStatsStackDSACKDups\
    \             ZeroBasedCounter32,\n           tcpEStatsStackMaxMSS           \
    \     Gauge32,\n           tcpEStatsStackMinMSS                Gauge32,\n    \
    \       tcpEStatsStackSndInitial            Unsigned32,\n           tcpEStatsStackRecInitial\
    \            Unsigned32,\n           tcpEStatsStackCurRetxQueue          Gauge32,\n\
    \           tcpEStatsStackMaxRetxQueue          Gauge32,\n           tcpEStatsStackCurReasmQueue\
    \         Gauge32,\n           tcpEStatsStackMaxReasmQueue         Gauge32\n \
    \      }\n   --\n   --  The following objects reflect TCP options carried on the\n\
    \   --  SYN or SYN-ACK.  These options are used to provide\n   --  additional\
    \ protocol parameters or to enable various\n   --  optional TCP features or algorithms.\n\
    \   --\n   --  Except as noted, the TCP protocol does not permit these\n   --\
    \  options to change after the SYN exchange.\n   --\n   tcpEStatsStackActiveOpen\
    \  OBJECT-TYPE\n       SYNTAX          TruthValue\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"True(1) if the\
    \ local connection traversed the SYN-SENT\n           state, else false(2).\"\n\
    \       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n    \
    \   ::= { tcpEStatsStackEntry 1 }\n   tcpEStatsStackMSSSent  OBJECT-TYPE\n   \
    \    SYNTAX          Unsigned32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The value sent in an MSS option,\
    \ or zero if none.\"\n       REFERENCE\n          \"RFC 1122, Requirements for\
    \ Internet Hosts - Communication\n           Layers\"\n       ::= { tcpEStatsStackEntry\
    \ 2 }\n   tcpEStatsStackMSSRcvd  OBJECT-TYPE\n       SYNTAX          Unsigned32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The value received in an MSS option, or zero if none.\"\n       REFERENCE\n\
    \          \"RFC 1122, Requirements for Internet Hosts - Communication\n     \
    \      Layers\"\n       ::= { tcpEStatsStackEntry 3 }\n   tcpEStatsStackWinScaleSent\
    \  OBJECT-TYPE\n       SYNTAX          Integer32 (-1..14)\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The value of the transmitted window scale option if one was\n           sent;\
    \ otherwise, a value of -1.\n           Note that if both tcpEStatsStackWinScaleSent\
    \ and\n           tcpEStatsStackWinScaleRcvd are not -1, then Rcv.Wind.Scale\n\
    \           will be the same as this value and used to scale receiver\n      \
    \     window announcements from the local host to the remote\n           host.\"\
    \n       REFERENCE\n          \"RFC 1323, TCP Extensions for High Performance\"\
    \n       ::= { tcpEStatsStackEntry 4 }\n   tcpEStatsStackWinScaleRcvd  OBJECT-TYPE\n\
    \       SYNTAX          Integer32 (-1..14)\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The value of\
    \ the received window scale option if one was\n           received; otherwise,\
    \ a value of -1.\n           Note that if both tcpEStatsStackWinScaleSent and\n\
    \           tcpEStatsStackWinScaleRcvd are not -1, then Snd.Wind.Scale\n     \
    \      will be the same as this value and used to scale receiver\n           window\
    \ announcements from the remote host to the local\n           host.\"\n      \
    \ REFERENCE\n          \"RFC 1323, TCP Extensions for High Performance\"\n   \
    \    ::= { tcpEStatsStackEntry 5 }\n   tcpEStatsStackTimeStamps  OBJECT-TYPE\n\
    \       SYNTAX          TcpEStatsNegotiated\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"Enabled(1) if\
    \ TCP timestamps have been negotiated on,\n           selfDisabled(2) if they\
    \ are disabled or not implemented on\n           the local host, or peerDisabled(3)\
    \ if not negotiated by the\n           remote hosts.\"\n       REFERENCE\n   \
    \       \"RFC 1323, TCP Extensions for High Performance\"\n       ::= { tcpEStatsStackEntry\
    \ 6 }\n   tcpEStatsStackECN  OBJECT-TYPE\n       SYNTAX          TcpEStatsNegotiated\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"Enabled(1) if Explicit Congestion Notification (ECN) has\n      \
    \     been negotiated on, selfDisabled(2) if it is disabled or\n           not\
    \ implemented on the local host, or peerDisabled(3) if\n           not negotiated\
    \ by the remote hosts.\"\n       REFERENCE\n          \"RFC 3168, The Addition\
    \ of Explicit Congestion Notification\n           (ECN) to IP\"\n       ::= {\
    \ tcpEStatsStackEntry 7 }\n   tcpEStatsStackWillSendSACK  OBJECT-TYPE\n      \
    \ SYNTAX          TcpEStatsNegotiated\n       MAX-ACCESS      read-only\n    \
    \   STATUS          current\n       DESCRIPTION\n          \"Enabled(1) if the\
    \ local host will send SACK options,\n           selfDisabled(2) if SACK is disabled\
    \ or not implemented on\n           the local host, or peerDisabled(3) if the\
    \ remote host did\n           not send the SACK-permitted option.\n          \
    \ Note that SACK negotiation is not symmetrical.  SACK can\n           enabled\
    \ on one side of the connection and not the other.\"\n       REFERENCE\n     \
    \     \"RFC 2018, TCP Selective Acknowledgement Options\"\n       ::= { tcpEStatsStackEntry\
    \ 8 }\n   tcpEStatsStackWillUseSACK  OBJECT-TYPE\n       SYNTAX          TcpEStatsNegotiated\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"Enabled(1) if the local host will process SACK options,\n       \
    \    selfDisabled(2) if SACK is disabled or not implemented on\n           the\
    \ local host, or peerDisabled(3) if the remote host sends\n           duplicate\
    \ ACKs without SACK options, or the local host\n           otherwise decides not\
    \ to process received SACK options.\n           Unlike other TCP options, the\
    \ remote data receiver cannot\n           explicitly indicate if it is able to\
    \ generate SACK options.\n           When sending data, the local host has to\
    \ deduce if the\n           remote receiver is sending SACK options.  This object\
    \ can\n           transition from Enabled(1) to peerDisabled(3) after the SYN\n\
    \           exchange.\n           Note that SACK negotiation is not symmetrical.\
    \  SACK can\n           enabled on one side of the connection and not the other.\"\
    \n       REFERENCE\n          \"RFC 2018, TCP Selective Acknowledgement Options\"\
    \n       ::= { tcpEStatsStackEntry 9 }\n   --\n   --  The following two objects\
    \ reflect the current state of the\n   --  connection.\n   --\n   tcpEStatsStackState\
    \  OBJECT-TYPE\n       SYNTAX          INTEGER {\n          tcpESStateClosed(1),\n\
    \          tcpESStateListen(2),\n          tcpESStateSynSent(3),\n          tcpESStateSynReceived(4),\n\
    \          tcpESStateEstablished(5),\n          tcpESStateFinWait1(6),\n     \
    \     tcpESStateFinWait2(7),\n          tcpESStateCloseWait(8),\n          tcpESStateLastAck(9),\n\
    \          tcpESStateClosing(10),\n          tcpESStateTimeWait(11),\n       \
    \   tcpESStateDeleteTcb(12)\n       }\n       MAX-ACCESS      read-only\n    \
    \   STATUS          current\n       DESCRIPTION\n          \"An integer value\
    \ representing the connection state from the\n           TCP State Transition\
    \ Diagram.\n           The value listen(2) is included only for parallelism to\
    \ the\n           old tcpConnTable, and SHOULD NOT be used because the listen\n\
    \           state in managed by the tcpListenerTable.\n           The value DeleteTcb(12)\
    \ is included only for parallelism to\n           the tcpConnTable mechanism for\
    \ terminating connections,\n           although this table does not permit writing.\"\
    \n       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n   \
    \    ::= { tcpEStatsStackEntry 10 }\n   tcpEStatsStackNagle  OBJECT-TYPE\n   \
    \    SYNTAX          TruthValue\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"True(1) if the Nagle algorithm\
    \ is being used, else\n           false(2).\"\n       REFERENCE\n          \"\
    RFC 1122, Requirements for Internet Hosts - Communication\n           Layers\"\
    \n       ::= { tcpEStatsStackEntry 11 }\n   --\n   --  The following objects instrument\
    \ the overall operation of\n   --  TCP congestion control and data retransmissions.\
    \  These\n   --  instruments are sufficient to fit the actual performance to\n\
    \   --  an updated macroscopic performance model [RFC2581] [Mat97]\n   --  [Pad98].\n\
    \   --\n   tcpEStatsStackMaxSsCwnd  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The maximum congestion window\
    \ used during Slow Start, in\n           octets.\"\n       REFERENCE\n       \
    \   \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 12\
    \ }\n   tcpEStatsStackMaxCaCwnd  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The maximum congestion window\
    \ used during Congestion\n           Avoidance, in octets.\"\n       REFERENCE\n\
    \          \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry\
    \ 13 }\n   tcpEStatsStackMaxSsthresh  OBJECT-TYPE\n       SYNTAX          Gauge32\n\
    \       UNITS           \"octets\"\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The maximum slow start threshold,\
    \ excluding the initial\n           value.\"\n       REFERENCE\n          \"RFC\
    \ 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 14 }\n   tcpEStatsStackMinSsthresh\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The minimum slow start threshold.\"\n       REFERENCE\n         \
    \ \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 15 }\n\
    \   tcpEStatsStackInRecovery  OBJECT-TYPE\n       SYNTAX          INTEGER {\n\
    \          tcpESDataContiguous(1),\n          tcpESDataUnordered(2),\n       \
    \   tcpESDataRecovery(3)\n       }\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"An integer value representing\
    \ the state of the loss\n           recovery for this connection.\n          \
    \ tcpESDataContiguous(1) indicates that the remote receiver\n           is reporting\
    \ contiguous data (no duplicate acknowledgments\n           or SACK options) and\
    \ that there are no unacknowledged\n           retransmissions.\n           tcpESDataUnordered(2)\
    \ indicates that the remote receiver is\n           reporting missing or out-of-order\
    \ data (e.g., sending\n           duplicate acknowledgments or SACK options) and\
    \ that there\n           are no unacknowledged retransmissions (because the missing\n\
    \           data has not yet been retransmitted).\n           tcpESDataRecovery(3)\
    \ indicates that the sender has\n           outstanding retransmitted data that\
    \ is still\n           unacknowledged.\"\n       REFERENCE\n          \"RFC 2581,\
    \ TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 16 }\n   tcpEStatsStackDupAcksIn\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of duplicate ACKs received.\"\n       REFERENCE\n          \"\
    RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 17 }\n  \
    \ tcpEStatsStackSpuriousFrDetected  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of acknowledgments reporting out-of-order\n          \
    \ segments after the Fast Retransmit algorithm has already\n           retransmitted\
    \ the segments. (For example as detected by the\n           Eifel algorithm).'\"\
    \n       REFERENCE\n          \"RFC 3522, The Eifel Detection Algorithm for TCP\"\
    \n       ::= { tcpEStatsStackEntry 18 }\n   tcpEStatsStackSpuriousRtoDetected\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of acknowledgments reporting segments that have\n           already\
    \ been retransmitted due to a Retransmission Timeout.\"\n       ::= { tcpEStatsStackEntry\
    \ 19 }\n   --\n   --  The following optional objects instrument unusual protocol\n\
    \   --  events that probably indicate implementation problems in\n   --  the protocol\
    \ or path.\n   --\n   tcpEStatsStackSoftErrors  OBJECT-TYPE\n       SYNTAX   \
    \       ZeroBasedCounter32\n       MAX-ACCESS      read-only\n       STATUS  \
    \        current\n       DESCRIPTION\n          \"The number of segments that\
    \ fail various consistency tests\n           during TCP input processing.  Soft\
    \ errors might cause the\n           segment to be discarded but some do not.\
    \  Some of these soft\n           errors cause the generation of a TCP acknowledgment,\
    \ while\n           others are silently discarded.\"\n       REFERENCE\n     \
    \     \"RFC 793, Transmission Control Protocol\"\n       ::= { tcpEStatsStackEntry\
    \ 21 }\n   tcpEStatsStackSoftErrorReason  OBJECT-TYPE\n       SYNTAX         \
    \ INTEGER {\n          belowDataWindow(1),\n          aboveDataWindow(2),\n  \
    \        belowAckWindow(3),\n          aboveAckWindow(4),\n          belowTSWindow(5),\n\
    \          aboveTSWindow(6),\n          dataCheckSum(7),\n          otherSoftError(8)\n\
    \       }\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"This object identifies which consistency test\
    \ most recently\n           failed during TCP input processing.  This object SHOULD\
    \ be\n           set every time tcpEStatsStackSoftErrors is incremented.  The\n\
    \           codes are as follows:\n           belowDataWindow(1) - All data in\
    \ the segment is below\n           SND.UNA. (Normal for keep-alives and zero window\
    \ probes).\n           aboveDataWindow(2) - Some data in the segment is above\n\
    \           SND.WND. (Indicates an implementation bug or possible\n          \
    \ attack).\n           belowAckWindow(3) - ACK below SND.UNA. (Indicates that\
    \ the\n           return path is reordering ACKs)\n           aboveAckWindow(4)\
    \ - An ACK for data that we have not sent.\n           (Indicates an implementation\
    \ bug or possible attack).\n           belowTSWindow(5) - TSecr on the segment\
    \ is older than the\n           current TS.Recent (Normal for the rare case where\
    \ PAWS\n           detects data reordered by the network).\n           aboveTSWindow(6)\
    \ - TSecr on the segment is newer than the\n           current TS.Recent. (Indicates\
    \ an implementation bug or\n           possible attack).\n           dataCheckSum(7)\
    \ - Incorrect checksum.  Note that this value\n           is intrinsically fragile,\
    \ because the header fields used to\n           identify the connection may have\
    \ been corrupted.\n           otherSoftError(8) - All other soft errors not listed\n\
    \           above.\"\n       REFERENCE\n          \"RFC 793, Transmission Control\
    \ Protocol\"\n       ::= { tcpEStatsStackEntry 22 }\n   --\n   --  The following\
    \ optional objects expose the detailed\n   --  operation of the congestion control\
    \ algorithms.\n   --\n   tcpEStatsStackSlowStart  OBJECT-TYPE\n       SYNTAX \
    \         ZeroBasedCounter32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The number of times the congestion\
    \ window has been\n           increased by the Slow Start algorithm.\"\n     \
    \  REFERENCE\n          \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry\
    \ 23 }\n   tcpEStatsStackCongAvoid  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of times the congestion window has been\n           increased\
    \ by the Congestion Avoidance algorithm.\"\n       REFERENCE\n          \"RFC\
    \ 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 24 }\n   tcpEStatsStackOtherReductions\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of congestion window reductions made as a result\n           of\
    \ anything other than AIMD congestion control algorithms.\n           Examples\
    \ of non-multiplicative window reductions include\n           Congestion Window\
    \ Validation [RFC2861] and experimental\n           algorithms such as Vegas [Bra94].\n\
    \           All window reductions MUST be counted as either\n           tcpEStatsPerfCongSignals\
    \ or tcpEStatsStackOtherReductions.\"\n       REFERENCE\n          \"RFC 2861,\
    \ TCP Congestion Window Validation\"\n       ::= { tcpEStatsStackEntry 25 }\n\
    \   tcpEStatsStackCongOverCount  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of congestion events that were 'backed out' of\n     \
    \      the congestion control state machine such that the\n           congestion\
    \ window was restored to a prior value.  This can\n           happen due to the\
    \ Eifel algorithm [RFC3522] or other\n           algorithms that can be used to\
    \ detect and cancel spurious\n           invocations of the Fast Retransmit Algorithm.\n\
    \           Although it may be feasible to undo the effects of spurious\n    \
    \       invocation of the Fast Retransmit congestion events cannot\n         \
    \  easily be backed out of tcpEStatsPerfCongSignals and\n           tcpEStatsPathPreCongSumCwnd,\
    \ etc.\"\n       REFERENCE\n          \"RFC 3522, The Eifel Detection Algorithm\
    \ for TCP\"\n       ::= { tcpEStatsStackEntry 26 }\n   tcpEStatsStackFastRetran\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of invocations of the Fast Retransmit algorithm.\"\n       REFERENCE\n\
    \          \"RFC 2581, TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry\
    \ 27 }\n   tcpEStatsStackSubsequentTimeouts  OBJECT-TYPE\n       SYNTAX      \
    \    ZeroBasedCounter32\n       MAX-ACCESS      read-only\n       STATUS     \
    \     current\n       DESCRIPTION\n          \"The number of times the retransmit\
    \ timeout has expired after\n           the RTO has been doubled.  See Section\
    \ 5.5 of RFC 2988.\"\n       REFERENCE\n          \"RFC 2988, Computing TCP's\
    \ Retransmission Timer\"\n       ::= { tcpEStatsStackEntry 28 }\n   tcpEStatsStackCurTimeoutCount\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The current number\
    \ of times the retransmit timeout has\n           expired without receiving an\
    \ acknowledgment for new data.\n           tcpEStatsStackCurTimeoutCount is reset\
    \ to zero when new\n           data is acknowledged and incremented for each invocation\
    \ of\n           Section 5.5 of RFC 2988.\"\n       REFERENCE\n          \"RFC\
    \ 2988, Computing TCP's Retransmission Timer\"\n       ::= { tcpEStatsStackEntry\
    \ 29 }\n   tcpEStatsStackAbruptTimeouts  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of timeouts that occurred without any\n           immediately\
    \ preceding duplicate acknowledgments or other\n           indications of congestion.\
    \  Abrupt Timeouts indicate that\n           the path lost an entire window of\
    \ data or acknowledgments.\n           Timeouts that are preceded by duplicate\
    \ acknowledgments or\n           other congestion signals (e.g., ECN) are not\
    \ counted as\n           abrupt, and might have been avoided by a more sophisticated\n\
    \           Fast Retransmit algorithm.\"\n       REFERENCE\n          \"RFC 2581,\
    \ TCP Congestion Control\"\n       ::= { tcpEStatsStackEntry 30 }\n   tcpEStatsStackSACKsRcvd\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS \
    \     read-only\n       STATUS          current\n       DESCRIPTION\n        \
    \  \"The number of SACK options received.\"\n       REFERENCE\n          \"RFC\
    \ 2018, TCP Selective Acknowledgement Options\"\n       ::= { tcpEStatsStackEntry\
    \ 31 }\n   tcpEStatsStackSACKBlocksRcvd  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of SACK blocks received (within SACK options).\"\n   \
    \    REFERENCE\n          \"RFC 2018, TCP Selective Acknowledgement Options\"\n\
    \       ::= { tcpEStatsStackEntry 32 }\n   tcpEStatsStackSendStall  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The number of\
    \ interface stalls or other sender local\n           resource limitations that\
    \ are treated as congestion\n           signals.\"\n       ::= { tcpEStatsStackEntry\
    \ 33 }\n   tcpEStatsStackDSACKDups  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of duplicate segments reported to the local host\n   \
    \        by D-SACK blocks.\"\n       REFERENCE\n          \"RFC 2883, An Extension\
    \ to the Selective Acknowledgement\n           (SACK) Option for TCP\"\n     \
    \  ::= { tcpEStatsStackEntry 34 }\n   --\n   --  The following optional objects\
    \ instrument path MTU\n   --  discovery.\n   --\n   tcpEStatsStackMaxMSS  OBJECT-TYPE\n\
    \       SYNTAX          Gauge32\n       UNITS           \"octets\"\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The maximum MSS, in octets.\"\n       REFERENCE\n          \"RFC 1191, Path\
    \ MTU discovery\"\n       ::= { tcpEStatsStackEntry 35 }\n   tcpEStatsStackMinMSS\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The minimum MSS, in octets.\"\n       REFERENCE\n          \"RFC\
    \ 1191, Path MTU discovery\"\n       ::= { tcpEStatsStackEntry 36 }\n   --\n \
    \  --  The following optional initial value objects are useful for\n   --  conformance\
    \ testing instruments on application progress and\n   --  consumed network resources.\n\
    \   --\n   tcpEStatsStackSndInitial  OBJECT-TYPE\n       SYNTAX          Unsigned32\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"Initial send sequence number.  Note that by definition\n        \
    \   tcpEStatsStackSndInitial never changes for a given\n           connection.\"\
    \n       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n   \
    \    ::= { tcpEStatsStackEntry 37 }\n   tcpEStatsStackRecInitial  OBJECT-TYPE\n\
    \       SYNTAX          Unsigned32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"Initial receive sequence number.\
    \  Note that by definition\n           tcpEStatsStackRecInitial never changes\
    \ for a given\n           connection.\"\n       REFERENCE\n          \"RFC 793,\
    \ Transmission Control Protocol\"\n       ::= { tcpEStatsStackEntry 38 }\n   --\n\
    \   --  The following optional objects instrument the senders\n   --  buffer usage,\
    \ including any buffering in the application\n   --  interface to TCP and the\
    \ retransmit queue.  All 'buffer\n   --  memory' instruments are assumed to include\
    \ OS data\n   --  structure overhead.\n   --\n   tcpEStatsStackCurRetxQueue  OBJECT-TYPE\n\
    \       SYNTAX          Gauge32\n       UNITS           \"octets\"\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The current number of octets of data occupying the\n           retransmit\
    \ queue.\"\n       ::= { tcpEStatsStackEntry 39 }\n   tcpEStatsStackMaxRetxQueue\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The maximum number of octets of data occupying the\n           retransmit\
    \ queue.\"\n       ::= { tcpEStatsStackEntry 40 }\n   tcpEStatsStackCurReasmQueue\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The current number of octets of sequence space spanned by\n     \
    \      the reassembly queue.  This is generally the difference\n           between\
    \ rcv.nxt and the sequence number of the right most\n           edge of the reassembly\
    \ queue.\"\n       ::= { tcpEStatsStackEntry 41 }\n   tcpEStatsStackMaxReasmQueue\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       MAX-ACCESS      read-only\n\
    \       STATUS          current\n       DESCRIPTION\n          \"The maximum value\
    \ of tcpEStatsStackCurReasmQueue\"\n       ::= { tcpEStatsStackEntry 42 }\n  \
    \ -- ================================================================\n   --\n\
    \   -- Statistics for diagnosing interactions between\n   -- applications and\
    \ TCP.\n   --\n   tcpEStatsAppTable    OBJECT-TYPE\n       SYNTAX      SEQUENCE\
    \ OF TcpEStatsAppEntry\n       MAX-ACCESS  not-accessible\n       STATUS     \
    \ current\n       DESCRIPTION\n           \"This table contains objects that are\
    \ useful for\n           determining if the application using TCP is\n       \
    \    limiting TCP performance.\n           Entries are retained in this table\
    \ for the number of\n           seconds indicated by the tcpEStatsConnTableLatency\n\
    \           object, after the TCP connection first enters the closed\n       \
    \    state.\"\n       ::= { tcpEStats 6 }\n   tcpEStatsAppEntry  OBJECT-TYPE\n\
    \       SYNTAX       TcpEStatsAppEntry\n       MAX-ACCESS   not-accessible\n \
    \      STATUS       current\n       DESCRIPTION\n           \"Each entry in this\
    \ table has information about the\n           characteristics of each active and\
    \ recently closed TCP\n           connection.\"\n      INDEX { tcpEStatsConnectIndex\
    \ }\n      ::= { tcpEStatsAppTable 1 }\n   TcpEStatsAppEntry ::= SEQUENCE {\n\
    \           tcpEStatsAppSndUna                  Counter32,\n           tcpEStatsAppSndNxt\
    \                  Unsigned32,\n           tcpEStatsAppSndMax                \
    \  Counter32,\n           tcpEStatsAppThruOctetsAcked         ZeroBasedCounter32,\n\
    \           tcpEStatsAppHCThruOctetsAcked       ZeroBasedCounter64,\n        \
    \   tcpEStatsAppRcvNxt                  Counter32,\n           tcpEStatsAppThruOctetsReceived\
    \      ZeroBasedCounter32,\n           tcpEStatsAppHCThruOctetsReceived    ZeroBasedCounter64,\n\
    \           tcpEStatsAppCurAppWQueue            Gauge32,\n           tcpEStatsAppMaxAppWQueue\
    \            Gauge32,\n           tcpEStatsAppCurAppRQueue            Gauge32,\n\
    \           tcpEStatsAppMaxAppRQueue            Gauge32\n       }\n   --\n   --\
    \  The following objects provide throughput statistics for the\n   --  connection\
    \ including sequence numbers and elapsed\n   --  application data.  These permit\
    \ direct observation of the\n   --  applications progress, in terms of elapsed\
    \ data delivery\n   --  and elapsed time.\n   --\n   tcpEStatsAppSndUna  OBJECT-TYPE\n\
    \       SYNTAX          Counter32\n       MAX-ACCESS      read-only\n       STATUS\
    \          current\n       DESCRIPTION\n          \"The value of SND.UNA, the\
    \ oldest unacknowledged sequence\n           number.\n           Note that SND.UNA\
    \ is a TCP state variable that is congruent\n           to Counter32 semantics.\"\
    \n       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n   \
    \    ::= { tcpEStatsAppEntry 1 }\n   tcpEStatsAppSndNxt  OBJECT-TYPE\n       SYNTAX\
    \          Unsigned32\n       MAX-ACCESS      read-only\n       STATUS       \
    \   current\n       DESCRIPTION\n          \"The value of SND.NXT, the next sequence\
    \ number to be sent.\n           Note that tcpEStatsAppSndNxt is not monotonic\
    \ (and thus not\n           a counter) because TCP sometimes retransmits lost\
    \ data by\n           pulling tcpEStatsAppSndNxt back to the missing data.\"\n\
    \       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n    \
    \   ::= { tcpEStatsAppEntry 2 }\n   tcpEStatsAppSndMax  OBJECT-TYPE\n       SYNTAX\
    \          Counter32\n       MAX-ACCESS      read-only\n       STATUS        \
    \  current\n       DESCRIPTION\n          \"The farthest forward (right most or\
    \ largest) SND.NXT value.\n           Note that this will be equal to tcpEStatsAppSndNxt\
    \ except\n           when tcpEStatsAppSndNxt is pulled back during recovery.\"\
    \n       REFERENCE\n          \"RFC 793, Transmission Control Protocol\"\n   \
    \    ::= { tcpEStatsAppEntry 3 }\n   tcpEStatsAppThruOctetsAcked  OBJECT-TYPE\n\
    \       SYNTAX          ZeroBasedCounter32\n       UNITS           \"octets\"\n\
    \       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The number of octets for which cumulative acknowledgments\n     \
    \      have been received.  Note that this will be the sum of\n           changes\
    \ to tcpEStatsAppSndUna.\"\n       ::= { tcpEStatsAppEntry 4 }\n   tcpEStatsAppHCThruOctetsAcked\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter64\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets for which cumulative acknowledgments\n\
    \           have been received, on systems that can receive more than\n      \
    \     10 million bits per second.  Note that this will be the sum\n          \
    \ of changes in tcpEStatsAppSndUna.\"\n       ::= { tcpEStatsAppEntry 5 }\n  \
    \ tcpEStatsAppRcvNxt  OBJECT-TYPE\n       SYNTAX          Counter32\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The value of RCV.NXT.  The next sequence number expected on\n          \
    \ an incoming segment, and the left or lower edge of the\n           receive window.\n\
    \           Note that RCV.NXT is a TCP state variable that is congruent\n    \
    \       to Counter32 semantics.\"\n       REFERENCE\n          \"RFC 793, Transmission\
    \ Control Protocol\"\n       ::= { tcpEStatsAppEntry 6 }\n   tcpEStatsAppThruOctetsReceived\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter32\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets for which cumulative acknowledgments\n\
    \           have been sent.  Note that this will be the sum of changes\n     \
    \      to tcpEStatsAppRcvNxt.\"\n       ::= { tcpEStatsAppEntry 7 }\n   tcpEStatsAppHCThruOctetsReceived\
    \  OBJECT-TYPE\n       SYNTAX          ZeroBasedCounter64\n       UNITS      \
    \     \"octets\"\n       MAX-ACCESS      read-only\n       STATUS          current\n\
    \       DESCRIPTION\n          \"The number of octets for which cumulative acknowledgments\n\
    \           have been sent, on systems that can transmit more than 10\n      \
    \     million bits per second.  Note that this will be the sum of\n          \
    \ changes in tcpEStatsAppRcvNxt.\"\n       ::= { tcpEStatsAppEntry 8 }\n   tcpEStatsAppCurAppWQueue\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The current number of octets of application data buffered\n     \
    \      by TCP, pending first transmission, i.e., to the left of\n           SND.NXT\
    \ or SndMax.  This data will generally be transmitted\n           (and SND.NXT\
    \ advanced to the left) as soon as there is an\n           available congestion\
    \ window (cwnd) or receiver window\n           (rwin).  This is the amount of\
    \ data readily available for\n           transmission, without scheduling the\
    \ application.  TCP\n           performance may suffer if there is insufficient\
    \ queued\n           write data.\"\n       ::= { tcpEStatsAppEntry 11 }\n   tcpEStatsAppMaxAppWQueue\
    \  OBJECT-TYPE\n       SYNTAX          Gauge32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-only\n       STATUS          current\n       DESCRIPTION\n\
    \          \"The maximum number of octets of application data buffered\n     \
    \      by TCP, pending first transmission.  This is the maximum\n           value\
    \ of tcpEStatsAppCurAppWQueue.  This pair of objects can\n           be used to\
    \ determine if insufficient queued data is steady\n           state (suggesting\
    \ insufficient queue space) or transient\n           (suggesting insufficient\
    \ application performance or\n           excessive CPU load or scheduler latency).\"\
    \n       ::= { tcpEStatsAppEntry 12 }\n   tcpEStatsAppCurAppRQueue  OBJECT-TYPE\n\
    \       SYNTAX          Gauge32\n       UNITS           \"octets\"\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The current number of octets of application data that has\n           been\
    \ acknowledged by TCP but not yet delivered to the\n           application.\"\n\
    \       ::= { tcpEStatsAppEntry 13 }\n   tcpEStatsAppMaxAppRQueue  OBJECT-TYPE\n\
    \       SYNTAX          Gauge32\n       UNITS           \"octets\"\n       MAX-ACCESS\
    \      read-only\n       STATUS          current\n       DESCRIPTION\n       \
    \   \"The maximum number of octets of application data that has\n           been\
    \ acknowledged by TCP but not yet delivered to the\n           application.\"\n\
    \       ::= { tcpEStatsAppEntry 14 }\n   -- ================================================================\n\
    \   --\n   -- Controls for Tuning TCP\n   --\n   tcpEStatsTuneTable    OBJECT-TYPE\n\
    \       SYNTAX      SEQUENCE OF TcpEStatsTuneEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \"This table contains\
    \ per-connection controls that can\n           be used to work around a number\
    \ of common problems that\n           plague TCP over some paths.  All can be\
    \ characterized as\n           limiting the growth of the congestion window so\
    \ as to\n           prevent TCP from overwhelming some component in the\n    \
    \       path.\n           Entries are retained in this table for the number of\n\
    \           seconds indicated by the tcpEStatsConnTableLatency\n           object,\
    \ after the TCP connection first enters the closed\n           state.\"\n    \
    \   ::= { tcpEStats 7 }\n   tcpEStatsTuneEntry  OBJECT-TYPE\n       SYNTAX   \
    \    TcpEStatsTuneEntry\n       MAX-ACCESS   not-accessible\n       STATUS   \
    \    current\n       DESCRIPTION\n           \"Each entry in this table is a control\
    \ that can be used to\n           place limits on each active TCP connection.\"\
    \n      INDEX { tcpEStatsConnectIndex }\n      ::= { tcpEStatsTuneTable 1 }\n\
    \   TcpEStatsTuneEntry ::= SEQUENCE {\n           tcpEStatsTuneLimCwnd       \
    \         Unsigned32,\n           tcpEStatsTuneLimSsthresh            Unsigned32,\n\
    \           tcpEStatsTuneLimRwin                Unsigned32,\n           tcpEStatsTuneLimMSS\
    \                 Unsigned32\n       }\n   tcpEStatsTuneLimCwnd  OBJECT-TYPE\n\
    \       SYNTAX          Unsigned32\n       UNITS           \"octets\"\n      \
    \ MAX-ACCESS      read-write\n       STATUS          current\n       DESCRIPTION\n\
    \          \"A control to set the maximum congestion window that may be\n    \
    \       used, in octets.\"\n       REFERENCE\n          \"RFC 2581, TCP Congestion\
    \ Control\"\n       ::= { tcpEStatsTuneEntry 1 }\n   tcpEStatsTuneLimSsthresh\
    \  OBJECT-TYPE\n       SYNTAX          Unsigned32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-write\n       STATUS          current\n       DESCRIPTION\n\
    \          \"A control to limit the maximum queue space (in octets) that\n   \
    \        this TCP connection is likely to occupy during slowstart.\n         \
    \  It can be implemented with the algorithm described in\n           RFC 3742\
    \ by setting the max_ssthresh parameter to twice\n           tcpEStatsTuneLimSsthresh.\n\
    \           This algorithm can be used to overcome some TCP performance\n    \
    \       problems over network paths that do not have sufficient\n           buffering\
    \ to withstand the bursts normally present during\n           slowstart.\"\n \
    \      REFERENCE\n          \"RFC 3742, Limited Slow-Start for TCP with Large\
    \ Congestion\n           Windows\"\n       ::= { tcpEStatsTuneEntry 2 }\n   tcpEStatsTuneLimRwin\
    \  OBJECT-TYPE\n       SYNTAX          Unsigned32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-write\n       STATUS          current\n       DESCRIPTION\n\
    \          \"A control to set the maximum window advertisement that may\n    \
    \       be sent, in octets.\"\n       REFERENCE\n          \"RFC 793, Transmission\
    \ Control Protocol\"\n       ::= { tcpEStatsTuneEntry 3 }\n   tcpEStatsTuneLimMSS\
    \  OBJECT-TYPE\n       SYNTAX          Unsigned32\n       UNITS           \"octets\"\
    \n       MAX-ACCESS      read-write\n       STATUS          current\n       DESCRIPTION\n\
    \          \"A control to limit the maximum segment size in octets, that\n   \
    \        this TCP connection can use.\"\n       REFERENCE\n          \"RFC 1191,\
    \ Path MTU discovery\"\n       ::= { tcpEStatsTuneEntry 4 }\n   -- ================================================================\n\
    \   --\n   -- TCP Extended Statistics Notifications Group\n   --\n   tcpEStatsEstablishNotification\
    \ NOTIFICATION-TYPE\n       OBJECTS     {\n                     tcpEStatsConnectIndex\n\
    \                   }\n       STATUS      current\n       DESCRIPTION\n      \
    \     \"The indicated connection has been accepted\n           (or alternatively\
    \ entered the established state).\"\n       ::= { tcpEStatsNotifications 1 }\n\
    \   tcpEStatsCloseNotification NOTIFICATION-TYPE\n       OBJECTS     {\n     \
    \                tcpEStatsConnectIndex\n                   }\n       STATUS  \
    \    current\n       DESCRIPTION\n           \"The indicated connection has left\
    \ the\n           established state\"\n       ::= { tcpEStatsNotifications 2 }\n\
    \   -- ================================================================\n   --\n\
    \   -- Conformance Definitions\n   --\n      tcpEStatsCompliances   OBJECT IDENTIFIER\n\
    \           ::= { tcpEStatsConformance 1 }\n      tcpEStatsGroups        OBJECT\
    \ IDENTIFIER\n           ::= { tcpEStatsConformance 2 }\n   --\n   -- Compliance\
    \ Statements\n   --\n     tcpEStatsCompliance MODULE-COMPLIANCE\n        STATUS\
    \ current\n        DESCRIPTION\n            \"Compliance statement for all systems\
    \ that implement TCP\n            extended statistics.\"\n        MODULE -- this\
    \ module\n            MANDATORY-GROUPS {\n                               tcpEStatsListenerGroup,\n\
    \                               tcpEStatsConnectIdGroup,\n                   \
    \            tcpEStatsPerfGroup,\n                               tcpEStatsPathGroup,\n\
    \                               tcpEStatsStackGroup,\n                       \
    \        tcpEStatsAppGroup\n                             }\n            GROUP\
    \ tcpEStatsListenerHCGroup\n            DESCRIPTION\n                \"This group\
    \ is mandatory for all systems that can\n                 wrap the values of the\
    \ 32-bit counters in\n                 tcpEStatsListenerGroup in less than one\
    \ hour.\"\n            GROUP tcpEStatsPerfOptionalGroup\n            DESCRIPTION\n\
    \                \"This group is optional for all systems.\"\n            GROUP\
    \ tcpEStatsPerfHCGroup\n            DESCRIPTION\n                \"This group\
    \ is mandatory for systems that can\n                wrap the values of the 32-bit\
    \ counters in\n                tcpEStatsPerfGroup in less than one hour.\n   \
    \             Note that any system that can attain 10 Mb/s\n                can\
    \ potentially wrap 32-Bit Octet counters in\n                under one hour.\"\
    \n            GROUP tcpEStatsPathOptionalGroup\n            DESCRIPTION\n    \
    \            \"This group is optional for all systems.\"\n            GROUP tcpEStatsPathHCGroup\n\
    \            DESCRIPTION\n                \"This group is mandatory for systems\
    \ that can\n                wrap the values of the 32-bit counters in\n      \
    \          tcpEStatsPathGroup in less than one hour.\n                Note that\
    \ any system that can attain 10 Mb/s\n                can potentially wrap 32-Bit\
    \ Octet counters in\n                under one hour.\"\n            GROUP tcpEStatsStackOptionalGroup\n\
    \            DESCRIPTION\n                \"This group is optional for all systems.\"\
    \n            GROUP tcpEStatsAppHCGroup\n            DESCRIPTION\n           \
    \     \"This group is mandatory for systems that can\n                wrap the\
    \ values of the 32-bit counters in\n                tcpEStatsStackGroup in less\
    \ than one hour.\n                Note that any system that can attain 10 Mb/s\n\
    \                can potentially wrap 32-Bit Octet counters in\n             \
    \   under one hour.\"\n            GROUP tcpEStatsAppOptionalGroup\n         \
    \   DESCRIPTION\n                \"This group is optional for all systems.\"\n\
    \            GROUP tcpEStatsTuneOptionalGroup\n            DESCRIPTION\n     \
    \           \"This group is optional for all systems.\"\n            GROUP tcpEStatsNotificationsGroup\n\
    \            DESCRIPTION\n                \"This group is optional for all systems.\"\
    \n            GROUP tcpEStatsNotificationsCtlGroup\n            DESCRIPTION\n\
    \                \"This group is mandatory for systems that include the\n    \
    \             tcpEStatsNotificationGroup.\"\n      ::= { tcpEStatsCompliances\
    \ 1 }\n   -- ================================================================\n\
    \   --\n   -- Units of Conformance\n   --\n       tcpEStatsListenerGroup  OBJECT-GROUP\n\
    \            OBJECTS {\n                 tcpEStatsListenerTableLastChange,\n \
    \                tcpEStatsListenerStartTime,\n                 tcpEStatsListenerSynRcvd,\n\
    \                 tcpEStatsListenerInitial,\n                 tcpEStatsListenerEstablished,\n\
    \                 tcpEStatsListenerAccepted,\n                 tcpEStatsListenerExceedBacklog,\n\
    \                 tcpEStatsListenerCurConns,\n                 tcpEStatsListenerMaxBacklog,\n\
    \                 tcpEStatsListenerCurBacklog,\n                 tcpEStatsListenerCurEstabBacklog\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsListener group includes objects that\n              \
    \   provide valuable statistics and debugging\n                 information for\
    \ TCP Listeners.\"\n         ::= { tcpEStatsGroups 1 }\n       tcpEStatsListenerHCGroup\
    \  OBJECT-GROUP\n            OBJECTS {\n                 tcpEStatsListenerHCSynRcvd,\n\
    \                 tcpEStatsListenerHCInitial,\n                 tcpEStatsListenerHCEstablished,\n\
    \                 tcpEStatsListenerHCAccepted,\n                 tcpEStatsListenerHCExceedBacklog\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsListenerHC group includes 64-bit\n                  counters\
    \ in tcpEStatsListenerTable.\"\n         ::= { tcpEStatsGroups 2 }\n       tcpEStatsConnectIdGroup\
    \  OBJECT-GROUP\n            OBJECTS {\n                 tcpEStatsConnTableLatency,\n\
    \                 tcpEStatsConnectIndex\n            }\n            STATUS current\n\
    \            DESCRIPTION\n                 \"The tcpEStatsConnectId group includes\
    \ objects that\n                 identify TCP connections and control how long\
    \ TCP\n                 connection entries are retained in the tables.\"\n   \
    \      ::= { tcpEStatsGroups 3 }\n       tcpEStatsPerfGroup  OBJECT-GROUP\n  \
    \          OBJECTS {\n                 tcpEStatsPerfSegsOut, tcpEStatsPerfDataSegsOut,\n\
    \                 tcpEStatsPerfDataOctetsOut,\n                 tcpEStatsPerfSegsRetrans,\n\
    \                 tcpEStatsPerfOctetsRetrans, tcpEStatsPerfSegsIn,\n         \
    \        tcpEStatsPerfDataSegsIn,\n                 tcpEStatsPerfDataOctetsIn,\n\
    \                 tcpEStatsPerfElapsedSecs,\n                 tcpEStatsPerfElapsedMicroSecs,\n\
    \                 tcpEStatsPerfStartTimeStamp, tcpEStatsPerfCurMSS,\n        \
    \         tcpEStatsPerfPipeSize, tcpEStatsPerfMaxPipeSize,\n                 tcpEStatsPerfSmoothedRTT,\
    \ tcpEStatsPerfCurRTO,\n                 tcpEStatsPerfCongSignals, tcpEStatsPerfCurCwnd,\n\
    \                 tcpEStatsPerfCurSsthresh, tcpEStatsPerfTimeouts,\n         \
    \        tcpEStatsPerfCurRwinSent,\n                 tcpEStatsPerfMaxRwinSent,\n\
    \                 tcpEStatsPerfZeroRwinSent,\n                 tcpEStatsPerfCurRwinRcvd,\n\
    \                 tcpEStatsPerfMaxRwinRcvd,\n                 tcpEStatsPerfZeroRwinRcvd\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsPerf group includes those objects that\n            \
    \     provide basic performance data for a TCP connection.\"\n         ::= { tcpEStatsGroups\
    \ 4 }\n       tcpEStatsPerfOptionalGroup  OBJECT-GROUP\n            OBJECTS {\n\
    \                 tcpEStatsPerfSndLimTransRwin,\n                 tcpEStatsPerfSndLimTransCwnd,\n\
    \                 tcpEStatsPerfSndLimTransSnd,\n                 tcpEStatsPerfSndLimTimeRwin,\n\
    \                 tcpEStatsPerfSndLimTimeCwnd,\n                 tcpEStatsPerfSndLimTimeSnd\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsPerf group includes those objects that\n            \
    \     provide basic performance data for a TCP connection.\"\n         ::= { tcpEStatsGroups\
    \ 5 }\n       tcpEStatsPerfHCGroup  OBJECT-GROUP\n            OBJECTS {\n    \
    \             tcpEStatsPerfHCDataOctetsOut,\n                 tcpEStatsPerfHCDataOctetsIn\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsPerfHC group includes 64-bit\n                 counters\
    \ in the tcpEStatsPerfTable.\"\n         ::= { tcpEStatsGroups 6 }\n       tcpEStatsPathGroup\
    \  OBJECT-GROUP\n            OBJECTS {\n                 tcpEStatsControlPath,\n\
    \                 tcpEStatsPathRetranThresh,\n                 tcpEStatsPathNonRecovDAEpisodes,\n\
    \                 tcpEStatsPathSumOctetsReordered,\n                 tcpEStatsPathNonRecovDA\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsPath group includes objects that\n                 control\
    \ the creation of the tcpEStatsPathTable,\n                 and provide information\
    \ about the path\n                 for each TCP connection.\"\n         ::= {\
    \ tcpEStatsGroups 7 }\n       tcpEStatsPathOptionalGroup  OBJECT-GROUP\n     \
    \       OBJECTS {\n                 tcpEStatsPathSampleRTT, tcpEStatsPathRTTVar,\n\
    \                 tcpEStatsPathMaxRTT, tcpEStatsPathMinRTT,\n                \
    \ tcpEStatsPathSumRTT, tcpEStatsPathCountRTT,\n                 tcpEStatsPathMaxRTO,\
    \ tcpEStatsPathMinRTO,\n                 tcpEStatsPathIpTtl, tcpEStatsPathIpTosIn,\n\
    \                 tcpEStatsPathIpTosOut,\n                 tcpEStatsPathPreCongSumCwnd,\n\
    \                 tcpEStatsPathPreCongSumRTT,\n                 tcpEStatsPathPostCongSumRTT,\n\
    \                 tcpEStatsPathPostCongCountRTT,\n                 tcpEStatsPathECNsignals,\n\
    \                 tcpEStatsPathDupAckEpisodes, tcpEStatsPathRcvRTT,\n        \
    \         tcpEStatsPathDupAcksOut, tcpEStatsPathCERcvd,\n                 tcpEStatsPathECESent\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsPath group includes objects that\n                 provide\
    \ additional information about the path\n                 for each TCP connection.\"\
    \n         ::= { tcpEStatsGroups 8 }\n     tcpEStatsPathHCGroup  OBJECT-GROUP\n\
    \            OBJECTS {\n                 tcpEStatsPathHCSumRTT\n            }\n\
    \            STATUS current\n            DESCRIPTION\n                 \"The tcpEStatsPathHC\
    \ group includes 64-bit\n                 counters in the tcpEStatsPathTable.\"\
    \n         ::= { tcpEStatsGroups 9 }\n       tcpEStatsStackGroup  OBJECT-GROUP\n\
    \            OBJECTS {\n                 tcpEStatsControlStack,\n            \
    \     tcpEStatsStackActiveOpen, tcpEStatsStackMSSSent,\n                 tcpEStatsStackMSSRcvd,\
    \ tcpEStatsStackWinScaleSent,\n                 tcpEStatsStackWinScaleRcvd,\n\
    \                 tcpEStatsStackTimeStamps, tcpEStatsStackECN,\n             \
    \    tcpEStatsStackWillSendSACK,\n                 tcpEStatsStackWillUseSACK,\
    \ tcpEStatsStackState,\n                 tcpEStatsStackNagle, tcpEStatsStackMaxSsCwnd,\n\
    \                 tcpEStatsStackMaxCaCwnd,\n                 tcpEStatsStackMaxSsthresh,\n\
    \                 tcpEStatsStackMinSsthresh,\n                 tcpEStatsStackInRecovery,\
    \ tcpEStatsStackDupAcksIn,\n                 tcpEStatsStackSpuriousFrDetected,\n\
    \                 tcpEStatsStackSpuriousRtoDetected\n            }\n         \
    \   STATUS current\n            DESCRIPTION\n                 \"The tcpEStatsConnState\
    \ group includes objects that\n                 control the creation of the tcpEStatsStackTable,\n\
    \                 and provide information about the operation of\n           \
    \      algorithms used within TCP.\"\n         ::= { tcpEStatsGroups 10 }\n  \
    \     tcpEStatsStackOptionalGroup  OBJECT-GROUP\n            OBJECTS {\n     \
    \            tcpEStatsStackSoftErrors,\n                 tcpEStatsStackSoftErrorReason,\n\
    \                 tcpEStatsStackSlowStart, tcpEStatsStackCongAvoid,\n        \
    \         tcpEStatsStackOtherReductions,\n                 tcpEStatsStackCongOverCount,\n\
    \                 tcpEStatsStackFastRetran,\n                 tcpEStatsStackSubsequentTimeouts,\n\
    \                 tcpEStatsStackCurTimeoutCount,\n                 tcpEStatsStackAbruptTimeouts,\n\
    \                 tcpEStatsStackSACKsRcvd,\n                 tcpEStatsStackSACKBlocksRcvd,\n\
    \                 tcpEStatsStackSendStall, tcpEStatsStackDSACKDups,\n        \
    \         tcpEStatsStackMaxMSS, tcpEStatsStackMinMSS,\n                 tcpEStatsStackSndInitial,\n\
    \                 tcpEStatsStackRecInitial,\n                 tcpEStatsStackCurRetxQueue,\n\
    \                 tcpEStatsStackMaxRetxQueue,\n                 tcpEStatsStackCurReasmQueue,\n\
    \                 tcpEStatsStackMaxReasmQueue\n            }\n            STATUS\
    \ current\n            DESCRIPTION\n                 \"The tcpEStatsConnState\
    \ group includes objects that\n                 provide additional information\
    \ about the operation of\n                 algorithms used within TCP.\"\n   \
    \      ::= { tcpEStatsGroups 11 }\n       tcpEStatsAppGroup  OBJECT-GROUP\n  \
    \          OBJECTS {\n                 tcpEStatsControlApp,\n                \
    \ tcpEStatsAppSndUna, tcpEStatsAppSndNxt,\n                 tcpEStatsAppSndMax,\
    \ tcpEStatsAppThruOctetsAcked,\n                 tcpEStatsAppRcvNxt,\n       \
    \          tcpEStatsAppThruOctetsReceived\n            }\n            STATUS current\n\
    \            DESCRIPTION\n                 \"The tcpEStatsConnState group includes\
    \ objects that\n                 control the creation of the tcpEStatsAppTable,\n\
    \                 and provide information about the operation of\n           \
    \      algorithms used within TCP.\"\n         ::= { tcpEStatsGroups 12 }\n  \
    \   tcpEStatsAppHCGroup  OBJECT-GROUP\n            OBJECTS {\n               \
    \  tcpEStatsAppHCThruOctetsAcked,\n                 tcpEStatsAppHCThruOctetsReceived\n\
    \            }\n            STATUS current\n            DESCRIPTION\n        \
    \         \"The tcpEStatsStackHC group includes 64-bit\n                 counters\
    \ in the tcpEStatsStackTable.\"\n         ::= { tcpEStatsGroups 13 }\n       tcpEStatsAppOptionalGroup\
    \  OBJECT-GROUP\n            OBJECTS {\n                 tcpEStatsAppCurAppWQueue,\n\
    \                 tcpEStatsAppMaxAppWQueue,\n                 tcpEStatsAppCurAppRQueue,\n\
    \                 tcpEStatsAppMaxAppRQueue\n            }\n            STATUS\
    \ current\n            DESCRIPTION\n                 \"The tcpEStatsConnState\
    \ group includes objects that\n                 provide additional information\
    \ about how applications\n                 are interacting with each TCP connection.\"\
    \n         ::= { tcpEStatsGroups 14 }\n       tcpEStatsTuneOptionalGroup  OBJECT-GROUP\n\
    \            OBJECTS {\n                 tcpEStatsControlTune,\n             \
    \    tcpEStatsTuneLimCwnd, tcpEStatsTuneLimSsthresh,\n                 tcpEStatsTuneLimRwin,\
    \ tcpEStatsTuneLimMSS\n            }\n            STATUS current\n           \
    \ DESCRIPTION\n                 \"The tcpEStatsConnState group includes objects\
    \ that\n                 control the creation of the tcpEStatsConnectionTable,\n\
    \                 which can be used to set tuning parameters\n               \
    \  for each TCP connection.\"\n         ::= { tcpEStatsGroups 15 }\n       tcpEStatsNotificationsGroup\
    \      NOTIFICATION-GROUP\n            NOTIFICATIONS {\n                     \
    \     tcpEStatsEstablishNotification,\n                          tcpEStatsCloseNotification\n\
    \            }\n            STATUS   current\n            DESCRIPTION\n      \
    \          \"Notifications sent by a TCP extended statistics agent.\"\n      \
    \   ::= { tcpEStatsGroups 16 }\n       tcpEStatsNotificationsCtlGroup  OBJECT-GROUP\n\
    \            OBJECTS {\n                          tcpEStatsControlNotify\n   \
    \         }\n            STATUS   current\n            DESCRIPTION\n         \
    \       \"The tcpEStatsNotificationsCtl group includes the\n                 object\
    \ that controls the creation of the events\n                 in the tcpEStatsNotificationsGroup.\"\
    \n         ::= { tcpEStatsGroups 17 }\n      END\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects may be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\
    \  These are the tables and objects and their\n   sensitivity/vulnerability:\n\
    \   *  Changing tcpEStatsConnTableLatency or any of the control objects\n    \
    \  in the tcpEStatsControl group (tcpEStatsControlPath,\n      tcpEStatsControlStack,\
    \ tcpEStatsControlApp, tcpEStatsControlTune)\n      may affect the correctness\
    \ of other management applications\n      accessing this MIB.  Generally, local\
    \ policy should only permit\n      limited write access to these controls (e.g.,\
    \ only by one\n      management station or only during system configuration).\n\
    \   *  The objects in the tcpEStatsControlTune group\n      (tcpEStatsTuneLimCwnd,\
    \ tcpEStatsTuneLimSsthresh,\n      tcpEStatsTuneLimRwin) can be used to limit\
    \ resources consumed by\n      TCP connections or to limit TCP throughput.  An\
    \ attacker might\n      manipulate these objects to reduce performance to levels\
    \ below the\n      minimum acceptable for a particular application.\n   Some of\
    \ the readable objects in this MIB module (i.e., objects with a\n   MAX-ACCESS\
    \ other than not-accessible) may be considered sensitive or\n   vulnerable in\
    \ some network environments.  It is thus important to\n   control even GET and/or\
    \ NOTIFY access to these objects and possibly\n   to even encrypt the values of\
    \ these objects when sending them over\n   the network via SNMP.  These are the\
    \ tables and objects and their\n   sensitivity/vulnerability:\n   *  All objects\
    \ which expose TCP sequence numbers (tcpEStatsAppSndUna,\n      tcpEStatsAppSndNxt,\
    \ tcpEStatsAppSndMax, tcpEStatsStackSndInitial,\n      tcpEStatsAppRcvNxt, and\
    \ tcpEStatsStackRecInitial) might make it\n      easier for an attacker to forge\
    \ in sequence TCP segments to\n      disrupt TCP connections.\n   *  Nearly all\
    \ objects in this (or any other) MIB may be used to\n      estimate traffic volumes,\
    \ which may reveal unanticipated\n      information about an organization to the\
    \ outside world.\n   SNMP versions prior to SNMPv3 did not include adequate security.\n\
    \   Even if the network itself is secure (for example by using IPsec),\n   even\
    \ then, there is no control as to who on the secure network is\n   allowed to\
    \ access and GET/SET (read/change/create/delete) the objects\n   in this MIB module.\n\
    \   It is RECOMMENDED that implementers consider the security features as\n  \
    \ provided by the SNMPv3 framework (see [RFC3410], section 8),\n   including full\
    \ support for the SNMPv3 cryptographic mechanisms (for\n   authentication and\
    \ privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n\
    \   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable\
    \ cryptographic security.  It is then a customer/operator\n   responsibility to\
    \ ensure that the SNMP entity giving access to an\n   instance of this MIB module\
    \ is properly configured to give access to\n   the objects only to those principals\
    \ (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)\
    \ them.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   The MIB module in this document uses the following\
    \ IANA-assigned\n   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:\n\
    \          Descriptor        OBJECT IDENTIFIER value\n          ------------ \
    \     -----------------------\n          tcpEStatsMIB      { mib-2 156 }\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [RFC791]   Postel, J., \"Internet Protocol\", STD\
    \ 5, RFC 791, September\n              1981.\n   [RFC793]   Postel, J., \"Transmission\
    \ Control Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC1122]\
    \  Braden, R., Ed., \"Requirements for Internet Hosts -\n              Communication\
    \ Layers\", STD 3, RFC 1122, October 1989.\n   [RFC1191]  Mogul, J. and S. Deering,\
    \ \"Path MTU discovery\", RFC 1191,\n              November 1990.\n   [RFC1323]\
    \  Jacobson, V., Braden, R., and D. Borman, \"TCP Extensions\n              for\
    \ High Performance\", RFC 1323, May 1992.\n   [RFC2018]  Mathis, M., Mahdavi,\
    \ J., Floyd, S., and A. Romanow, \"TCP\n              Selective Acknowledgment\
    \ Options\", RFC 2018, October 1996.\n   [RFC2119]  Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2578]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,\
    \ J.,\n              Rose, M., and S. Waldbusser, \"Structure of Management\n\
    \              Information Version 2 (SMIv2)\", STD 58, RFC 2578, April\n    \
    \          1999.\n   [RFC2579]  McCloghrie, K., Perkins, D., Schoenwaelder, J.,\
    \ Case, J.,\n              Rose, M., and S. Waldbusser, \"Textual Conventions\
    \ for\n              SMIv2\", RFC 2579, STD 58, April 1999.\n   [RFC2580]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n              Rose, M., and S.\
    \ Waldbusser, \"Conformance Statements for\n              SMIv2\", RFC 2580, STD\
    \ 58, April 1999.\n   [RFC2581]  Allman, M., Paxson, V., and W. Stevens, \"TCP\
    \ Congestion\n              Control\", RFC 2581, April 1999.\n   [RFC2856]  Bierman,\
    \ A., McCloghrie, K., and R. Presuhn, \"Textual\n              Conventions for\
    \ Additional High Capacity Data Types\", RFC\n              2856, June 2000.\n\
    \   [RFC2883]  Floyd, S., Mahdavi, J., Mathis, M., and M. Podolsky, \"An\n   \
    \           Extension to the Selective Acknowledgement (SACK) Option\n       \
    \       for TCP\", RFC 2883, July 2000.\n   [RFC2988]  Paxson, V. and M. Allman,\
    \ \"Computing TCP's Retransmission\n              Timer\", RFC 2988, November\
    \ 2000.\n   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n\
    \              of Explicit Congestion Notification (ECN) to IP\", RFC\n      \
    \        3168, September 2001.\n   [RFC3517]  Blanton, E., Allman, M., Fall, K.,\
    \ and L. Wang, \"A\n              Conservative Selective Acknowledgment (SACK)-based\
    \ Loss\n              Recovery Algorithm for TCP\", RFC 3517, April 2003.\n  \
    \ [RFC4022]  Raghunarayan, R., Ed., \"Management Information Base for\n      \
    \        the Transmission Control Protocol (TCP)\", RFC 4022, March\n        \
    \      2005.\n   [RFC4502]  Waldbusser, S., \"Remote Network Monitoring Management\n\
    \              Information Base Version 2\", RFC 4502, May 2006.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [Mat97]    M. Mathis, J. Semke, J. Mahdavi, T.\
    \ Ott, \"The Macroscopic\n              Behavior of the TCP Congestion Avoidance\
    \ Algorithm\",\n              Computer Communication Review, volume 27, number\
    \ 3, July\n              1997.\n   [Bra94]    Brakmo, L., O'Malley, S., \"TCP\
    \ Vegas, New Techniques for\n              Congestion Detection and Avoidance\"\
    , SIGCOMM'94, London,\n              pp 24-35, October 1994.\n   [Edd06]    Eddy,\
    \ W., \"TCP SYN Flooding Attacks and Common\n              Mitigations\", Work\
    \ in Progress, May 2007.\n   [POSIX]    Portable Operating System Interface, IEEE\
    \ Std 1003.1\n   [Pad98]    Padhye, J., Firoiu, V., Towsley, D., Kurose, J., \"\
    Modeling\n              TCP Throughput: A Simple Model and its Empirical\n   \
    \           Validation\", SIGCOMM'98.\n   [Web100]   Mathis, M., J. Heffner, R.\
    \ Reddy, \"Web100: Extended TCP\n              Instrumentation for Research, Education\
    \ and Diagnosis\",\n              ACM Computer Communications Review, Vol 33,\
    \ Num 3, July\n              2003.\n   [RFC2861]  Handley, M., Padhye, J., and\
    \ S. Floyd, \"TCP Congestion\n              Window Validation\", RFC 2861, June\
    \ 2000.\n   [RFC3260]  Grossman, D., \"New Terminology and Clarifications for\n\
    \              Diffserv\", RFC 3260, April 2002.\n   [RFC3410]  Case, J., Mundy,\
    \ R., Partain, D. and B. Stewart,\n              \"Introduction and Applicability\
    \ Statements for Internet-\n              Standard Management Framework\", RFC\
    \ 3410, December 2002.\n   [RFC3522]  Ludwig, R. and M. Meyer, \"The Eifel Detection\
    \ Algorithm\n              for TCP\", RFC 3522, April 2003.\n   [RFC3742]  Floyd,\
    \ S., \"Limited Slow-Start for TCP with Large\n              Congestion Windows\"\
    , RFC 3742, March 2004.\n   [RFC4614]  Duke M., Braden, R., Eddy, W., Blanton,\
    \ E.  \"A Roadmap for\n              Transmission Control Protocol (TCP) Specification\n\
    \              Documents\", RFC 4614, September 2006.\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   The following people contributed text that was incorporated\
    \ into this\n   document:\n   Jon Saperia <saperia@jdscons.com> converted Web100\
    \ internal\n   documentation into a true MIB.\n   Some of the objects in this\
    \ document were moved from an early version\n   of the TCP-MIB by Bill Fenner,\
    \ et al.\n   Some of the object descriptions are based on an earlier unpublished\n\
    \   document by Jeff Semke.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   This document is a product of the Web100 project (www.web100.org),\
    \ a\n   joint effort of Pittsburgh Supercomputing Center (www.psc.edu),\n   National\
    \ Center for Atmospheric Research (www.ncar.ucar.edu), and\n   National Center\
    \ for Supercomputer Applications (www.ncsa.edu).\n   It would not have been possible\
    \ without all of the hard work by the\n   entire Web100 team, especially Peter\
    \ O'Neal, who read and reread the\n   entire document several times; Janet Brown\
    \ and Marla Meehl, who\n   patiently managed the unmanageable.  The Web100 project\
    \ would not\n   have been successful without all of the early adopters who suffered\n\
    \   our bugs to provide many good suggestions and insights into their\n   needs\
    \ for TCP instrumentation.\n   Web100 was supported by the National Science Foundation\
    \ under Grant\n   No. 0083285 and a research grant from Cisco Systems.\n   We\
    \ would also like to thank all of the people who built experimental\n   implementations\
    \ of this MIB from early versions and provided us with\n   constructive feedback:\
    \  Glenn Turner at AARnet, Kristine Adamson at\n   IBM, and Xinyan Zan at Microsoft.\n\
    \   And last, but not least, we would like to thank Dan Romascanu, our\n   \"\
    MIB Doctor\" and Bert Wijnen, the Operations Area Director, for\n   patiently\
    \ steering us through the MIB review process.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Matt Mathis\n   Pittsburgh Supercomputing Center\n   300\
    \ S. Craig St.\n   Pittsburgh, PA 15213\n   Phone: 412-268-4960\n   EMail: mathis@psc.edu\n\
    \   John Heffner\n   Pittsburgh Supercomputing Center\n   300 S. Craig St.\n \
    \  Pittsburgh, PA 15213\n   Phone: 412-268-4960\n   EMail: jheffner@psc.edu\n\
    \   Rajiv Raghunarayan\n   Cisco Systems Inc.\n   San Jose, CA 95134\n   Phone:\
    \ 408 853 9612\n   EMail: raraghun@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
