- contents:
  - "          Aggregation of Resource ReSerVation Protocol (RSVP)\n                Reservations
    over MPLS TE/DS-TE Tunnels\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   RFC 3175 specifies aggregation of Resource ReSerVation Protocol\n
    \  (RSVP) end-to-end reservations over aggregate RSVP reservations.\n   This document
    specifies aggregation of RSVP end-to-end reservations\n   over MPLS Traffic Engineering
    (TE) tunnels or MPLS Diffserv-aware\n   MPLS Traffic Engineering (DS-TE) tunnels.
    \ This approach is based on\n   RFC 3175 and simply modifies the corresponding
    procedures for\n   operations over MPLS TE tunnels instead of aggregate RSVP\n
    \  reservations.  This approach can be used to achieve admission control\n   of
    a very large number of flows in a scalable manner since the\n   devices in the
    core of the network are unaware of the end-to-end RSVP\n   reservations and are
    only aware of the MPLS TE tunnels.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Specification of Requirements ...................................7\n   3.
    Definitions .....................................................7\n   4. Operations
    of RSVP Aggregation over TE with\n      Pre-established Tunnels .........................................8\n
    \     4.1. Reference Model ............................................9\n      4.2.
    Receipt of E2E Path Message by the Aggregator ..............9\n      4.3. Handling
    of E2E Path Message by Transit LSRs ..............11\n      4.4. Receipt of E2E
    Path Message by the Deaggregator ...........11\n      4.5. Handling of E2E Resv
    Message by the Deaggregator ..........12\n      4.6. Handling of E2E Resv Message
    by the Aggregator ............12\n      4.7. Forwarding of E2E Traffic by the
    Aggregator ...............14\n      4.8. Removal of E2E Reservations ...............................14\n
    \     4.9. Removal of the TE Tunnel ..................................14\n      4.10.
    Example Signaling Flow ...................................15\n   5. IPv4 and IPv6
    Applicability ....................................16\n   6. E2E Reservations Applicability
    .................................16\n   7. Example Deployment Scenarios ...................................16\n
    \     7.1. Voice and Video Reservations Scenario .....................16\n      7.2.
    PSTN/3G Voice Trunking Scenario ...........................17\n   8. Security
    Considerations ........................................18\n   9. Acknowledgments
    ................................................20\n   10. Normative References
    ..........................................20\n   11. Informative References ........................................21\n
    \  Appendix A - Optional Use of RSVP Proxy on RSVP Aggregator ........23\n   Appendix
    B - Example Usage of RSVP Aggregation over DSTE Tunnels\n                for VoIP
    Call Admission Control (CAC) ................25\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Integrated Services (Intserv) [INT-SERV] architecture
    provides a\n   means for the delivery of end-to-end Quality of Service (QoS) to\n
    \  applications over heterogeneous networks.\n   [RSVP] defines the Resource reSerVation
    Protocol that can be used by\n   applications to request resources from the network.
    \ The network\n   responds by explicitly admitting or rejecting these RSVP requests.\n
    \  Certain applications that have quantifiable resource requirements\n   express
    these requirements using Intserv parameters as defined in the\n   appropriate
    Intserv service specifications ([GUARANTEED],\n   [CONTROLLED]).\n   The Differentiated
    Services (DiffServ) architecture ([DIFFSERV]) was\n   then developed to support
    the differentiated treatment of packets in\n   very large scale environments.
    \ In contrast to the per-flow\n   orientation of Intserv and RSVP, Diffserv networks
    classify packets\n   into one of a small number of aggregated flows or \"classes\",
    based on\n   the Diffserv codepoint (DSCP) in the packet IP header.  At each\n
    \  Diffserv router, packets are subjected to a \"per-hop behavior\" (PHB),\n   which
    is invoked by the DSCP.  The primary benefit of Diffserv is its\n   scalability.
    \ Diffserv eliminates the need for per-flow state and\n   per-flow processing,
    and therefore scales well to large networks.\n   However, DiffServ does not include
    any mechanism for communication\n   between applications and the network.  Thus,
    as detailed in\n   [INT-DIFF], significant benefits can be achieved by using Intserv\n
    \  over Diffserv including resource-based admission control, policy-\n   based
    admission control, assistance in traffic\n   identification/classification, and
    traffic conditioning.  As\n   discussed in [INT-DIFF], Intserv can operate over
    Diffserv in\n   multiple ways.  For example, the Diffserv region may be statically\n
    \  provisioned or RSVP aware.  When it is RSVP aware, several mechanisms\n   may
    be used to support dynamic provisioning and topology-aware\n   admission control,
    including aggregate RSVP reservations, per-flow\n   RSVP, or a bandwidth broker.
    \ The advantage of using aggregate RSVP\n   reservations is that it offers dynamic,
    topology-aware admission\n   control over the Diffserv region without per-flow
    reservations and\n   the associated level of RSVP signaling in the Diffserv core.
    \ In\n   turn, this allows dynamic, topology-aware admission control of flows\n
    \  requiring QoS reservations over the Diffserv core even when the total\n   number
    of such flows carried over the Diffserv core is extremely\n   large.\n   [RSVP-AGG]
    and [RSVP-GEN-AGG] describe in detail how to perform such\n   aggregation of end-to-end
    RSVP reservations over aggregate RSVP\n   reservations in a Diffserv cloud.  They
    establish an architecture\n   where multiple end-to-end RSVP reservations sharing
    the same ingress\n   router (Aggregator) and egress router (Deaggregator) at the
    edges of\n   an \"aggregation region\" can be mapped onto a single aggregate\n
    \  reservation within the aggregation region.  This considerably reduces\n   the
    amount of reservation state that needs to be maintained by\n   routers within
    the aggregation region.  Furthermore, traffic\n   belonging to aggregate reservations
    is classified in the data path\n   purely using Diffserv marking.\n   [MPLS-TE]
    describes how MPLS Traffic Engineering (TE) tunnels can be\n   used to carry arbitrary
    aggregates of traffic for the purposes of\n   traffic engineering.  [RSVP-TE]
    specifies how such MPLS TE tunnels\n   can be established using RSVP-TE signaling.
    \ MPLS TE uses\n   Constraint-Based Routing to compute the path for a TE tunnel.
    \ Then,\n   Admission Control is performed during the establishment of TE tunnels\n
    \  to ensure they are granted their requested resources.\n   [DSTE-REQ] presents
    the Service Providers requirements for support of\n   Diffserv-aware MPLS Traffic
    Engineering (DS-TE).  With DS-TE,\n   separate DS-TE tunnels can be used to carry
    different Diffserv\n   classes of traffic, and different resource constraints
    can be\n   enforced for these different classes.  [DSTE-PROTO] specifies RSVP-TE\n
    \  signaling extensions as well as OSPF and Intermediate System to\n   Intermediate
    System (IS-IS) extensions for support of DS-TE.\n   In the rest of this document
    we will refer to both TE tunnels and\n   DS-TE tunnels simply as \"TE tunnels\".\n
    \  TE tunnels have much in common with the aggregate RSVP reservations\n   used
    in [RSVP-AGG] and [RSVP-GEN-AGG]:\n      - A TE tunnel is subject to Admission
    Control and thus is\n        effectively an aggregate bandwidth reservation.\n
    \     - In the data plane, packet scheduling relies exclusively on\n        Diffserv
    classification and PHBs.\n      - Both TE tunnels and aggregate RSVP reservations
    are controlled\n        by \"intelligent\" devices on the edge of the \"aggregation
    core\"\n        (Head-end and Tail-end in the case of TE tunnels; Aggregator and\n
    \       Deaggregator in the case of aggregate RSVP reservations.\n      - Both
    TE tunnels and aggregate RSVP reservations are signaled\n        using the RSVP
    protocol (with some extensions defined in\n        [RSVP-TE] and [DSTE-PROTO]
    respectively for TE tunnels and DS-TE\n        tunnels).\n   This document provides
    a detailed specification for performing\n   aggregation of end-to-end RSVP reservations
    over MPLS TE tunnels\n   (which act as aggregate reservations in the core).  This
    document\n   builds on the RSVP Aggregation procedures defined in [RSVP-AGG] and\n
    \  [RSVP-GEN-AGG], and only changes those where necessary to operate\n   over
    TE tunnels.  With [RSVP-AGG] and [RSVP-GEN-AGG], a lot of\n   responsibilities
    (such as mapping end-to-end reservations to\n   Aggregate reservations and resizing
    the Aggregate reservations) are\n   assigned to the Deaggregator (which is the
    equivalent of the tunnel\n   Tail-end) while with TE, the tunnels are controlled
    by the tunnel\n   Head-end.  Hence, the main change over the RSVP Aggregations\n
    \  procedures defined in [RSVP-AGG] and [RSVP-GEN-AGG] is to modify\n   these
    procedures to reassign responsibilities from the Deaggregator\n   to the Aggregator
    (i.e., the tunnel Head-end).\n   [LSP-HIER] defines how to aggregate MPLS TE Label
    Switched Paths\n   (LSPs) by creating a hierarchy of such LSPs.  This involves
    nesting\n   of end-to-end LSPs into an aggregate LSP in the core (by using the\n
    \  label stack construct).  Since end-to-end TE LSPs are themselves\n   signaled
    with RSVP-TE and reserve resources at every hop, this can be\n   looked at as
    a form of aggregation of RSVP(-TE) reservations over\n   MPLS TE tunnels.  This
    document capitalizes on the similarities\n   between nesting of TE LSPs over TE
    tunnels and RSVP aggregation over\n   TE tunnels, and reuses the procedures of
    [LSP-HIER] wherever\n   possible.\n   This document also builds on the \"RSVP
    over Tunnels\" concepts of RFC\n   2746 [RSVP-TUN].  It differs from that specification
    in the following\n   ways:\n      - This document describes operation over MPLS
    tunnels, whereas RFC\n        2746 describes operation with IP tunnels.  One consequence
    of\n        this difference is the need to deal with penultimate hop popping\n
    \       (PHP).\n      - MPLS-TE tunnels inherently reserve resources, whereas
    the\n        tunnels in RFC 2746 do not have resource reservations by\n        default.
    \ This leads to some simplifications in the current\n        document.\n      -
    This document builds on the fact that there is exactly one\n        aggregate
    reservation per MPLS-TE tunnel, whereas RFC 2746\n        permits a model where
    one reservation is established on the\n        tunnel path for each end-to-end
    flow.\n      - We have assumed in the current document that a given MPLS-TE\n
    \       tunnel will carry reserved traffic and nothing but reserved\n        traffic,
    which negates the requirement of RFC 2746 to\n        distinguish reserved and
    non-reserved traffic traversing the\n        same tunnel by using distinct encapsulations.\n
    \     - There may be several MPLS-TE tunnels that share common Head-end\n        and
    Tail-end routers, with the Head-end policy determining which\n        tunnel is
    appropriate for a particular flow.  This scenario does\n        not appear to
    be addressed in RFC 2746.\n   At the same time, this document does have many similarities
    with RFC\n   2746.  MPLS-TE tunnels are \"type 2 tunnels\" in the nomenclature
    of\n   RFC 2746:\n      \"The (logical) link may be able to promise that some
    overall level\n      of resources is available to carry traffic, but not to allocate\n
    \     resources specifically to individual data flows\".\n   Aggregation of end-to-end
    RSVP reservations over TE tunnels combines\n   the benefits of [RSVP-AGG] and
    [RSVP-GEN-AGG] with the benefits of\n   MPLS, including the following:\n      -
    Applications can benefit from dynamic, topology-aware,\n        resource-based
    admission control over any segment of the end-\n        to-end path, including
    the core.\n      - As per regular RSVP behavior, RSVP does not impose any burden
    on\n        routers where such admission control is not needed (for example,\n
    \       if the links upstream and downstream of the MPLS TE core are\n        vastly
    over-engineered compared to the core capacity, admission\n        control is not
    required on these over-engineered links and RSVP\n        need not be processed
    on the corresponding router hops).\n      - The core scalability is not affected
    (relative to the\n        traditional MPLS TE deployment model) since the core
    remains\n        unaware of end-to-end RSVP reservations and only has to maintain\n
    \       aggregate TE tunnels since the datapath classification and\n        scheduling
    in the core relies purely on the Diffserv mechanism\n        (or more precisely
    the MPLS Diffserv mechanisms, as specified in\n        [DIFF-MPLS]).\n      -
    The aggregate reservation (and thus the traffic from the\n        corresponding
    end to end reservations) can be network engineered\n        via the use of Constraint
    based routing (e.g., affinity,\n        optimization on different metrics) and
    when needed can take\n        advantage of resources on other paths than the shortest
    path.\n      - The aggregate reservations (and thus the traffic from the\n        corresponding
    end-to-end reservations) can be protected against\n        failure through the
    use of MPLS Fast Reroute.\n   This document, like [RSVP-AGG] and [RSVP-GEN-AGG],
    covers aggregation\n   of unicast sessions.  Aggregation of multicast sessions
    is for\n   further study.\n"
  title: 1.  Introduction
- contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [KEYWORDS].\n"
  title: 2.  Specification of Requirements
- contents:
  - "3.  Definitions\n   For readability, a number of definitions from [RSVP-AGG]
    as well as\n   definitions for commonly used MPLS TE terms are provided here:\n
    \  Aggregator       This is the process in (or associated with) the\n                    router
    at the ingress edge of the aggregation region\n                    (with respect
    to the end-to-end RSVP reservation)\n                    and behaving in accordance
    with [RSVP-AGG].  In this\n                    document, it is also the TE tunnel
    Head-end.\n   Deaggregator     This is the process in (or associated with) the\n
    \                   router at the egress edge of the aggregation region\n                    (with
    respect to the end-to-end RSVP reservation)\n                    and behaving
    in accordance with [RSVP-AGG].  In this\n                    document, it is also
    the TE tunnel Tail-end\n   E2E              End to end\n   E2E Reservation  This
    is an RSVP reservation such that:\n                    (i)   corresponding Path
    messages are initiated\n                          upstream of the Aggregator and
    terminated\n                          downstream of the Deaggregator, and\n                    (ii)
    \ corresponding Resv messages are initiated\n                          downstream
    of the Deaggregator and terminated\n                          upstream of the
    Aggregator, and\n                    (iii) this RSVP reservation is aggregated
    over an\n                          MPLS TE tunnel between the Aggregator and\n
    \                         Deaggregator.\n                    An E2E RSVP reservation
    may be a per-flow\n                    reservation.  Alternatively, the E2E reservation
    may\n                    itself be an aggregate reservation of various types\n
    \                   (e.g., Aggregate IP reservation, Aggregate IPsec\n                    reservation).
    \ See Section 5 and 6 for more details\n                    on the types of E2E
    RSVP reservations.  As per\n                    regular RSVP operations, E2E RSVP
    reservations are\n                    unidirectional.\n   Head-end         This
    is the Label Switch Router responsible for\n                    establishing,
    maintaining, and tearing down a given\n                    TE tunnel.\n   Tail-end
    \        This is the Label Switch Router responsible for\n                    terminating
    a given TE tunnel.\n   Transit LSR      This is a Label Switch Router that is
    on the path of\n                    a given TE tunnel and is neither the Head-end
    nor\n                    the Tail-end.\n"
  title: 3.  Definitions
- contents:
  - "4.  Operations of RSVP Aggregation over TE with Pre-established Tunnels\n   [RSVP-AGG]
    and [RSVP-GEN-AGG] support operations both in the case\n   where aggregate RSVP
    reservations are pre-established and where\n   Aggregators and Deaggregators have
    to dynamically discover each other\n   and dynamically establish the necessary
    aggregate RSVP reservations.\n   Similarly, RSVP Aggregation over TE tunnels could
    operate both in the\n   case where the TE tunnels are pre-established and where
    the tunnels\n   need to be dynamically established.\n   In this document we provide
    a detailed description of the procedures\n   in the case where TE tunnels are
    already established.  These\n   procedures are based on those defined in [LSP-HIER].
    \ The routing\n   aspects discussed in Section 3 of [LSP-HIER] are not relevant
    here\n   because those aim at allowing the constraint based routing of end-\n
    \  to-end TE LSPs to take into account the (aggregate) TE tunnels.  In\n   the
    present document, the end-to-end RSVP reservations to be\n   aggregated over the
    TE tunnels rely on regular SPF routing.  However,\n   as already mentioned in
    [LSP-HIER], we note that a TE tunnel may be\n   advertised into IS-IS or OSPF,
    to be used in normal SPF by nodes\n   upstream of the Aggregator.  This would
    affect SPF routing and thus\n   routing of end-to-end RSVP reservations.  The
    control of aggregation\n   boundaries discussed in Section 6 of [LSP-HIER] is
    also not relevant\n   here.  This uses information exchanged in GMPLS protocols
    to\n   dynamically discover the aggregation boundary.  In this document, TE\n
    \  tunnels are pre-established, so that the aggregation boundary can be\n   easily
    inferred.  The signaling aspects discussed in Section 6.2 of\n   [LSP-HIER] apply
    to the establishment/termination of the aggregate TE\n   tunnels when this is
    triggered by GMPLS mechanisms (e.g., as a result\n   of an end-to-end TE LSP establishment
    request received at the\n   aggregation boundary).  As this document assumes pre-established\n
    \  tunnels, those aspects are not relevant here.  The signaling aspects\n   discussed
    in Section 6.1 of [LSP-HIER] relate to the\n   establishment/maintenance of the
    end-to-end TE LSPs over the\n   aggregate TE tunnel.  This document describes
    how to use the same\n   procedures as those specified in Section 6.1 of [LSP-HIER],
    but for\n   the establishment of end-to-end RSVP reservations (instead of end-\n
    \  to-end TE LSPs) over the TE tunnels.  This is covered further in\n   Section
    4 of the present document.\n   Pre-establishment of the TE tunnels may be triggered
    by any\n   mechanisms including; for example, manual configuration or automatic\n
    \  establishment of a TE tunnel mesh through dynamic discovery of TE\n   Mesh
    membership as allowed in [AUTOMESH].\n   Procedures in the case of dynamically
    established TE tunnels are for\n   further studies.\n"
  - contents:
    - "4.1.  Reference Model\n      |----|                                          |----|\n
      \  H--| R  |\\ |-----|                       |------| /| R  |--H\n   H--|    |\\\\|
      \    |       |---|           |      |//|    |--H\n      |----| \\| He/ |       |
      T |           | Te/  |/ |----|\n              | Agg |=======================|
      Deag |\n             /|     |       |   |           |      |\\\n   H--------//|
      \    |       |---|           |      |\\\\--------H\n   H--------/ |-----|                       |------|
      \\--------H\n   H       = Host requesting end-to-end RSVP reservations\n   R
      \      = RSVP router\n   He/Agg  = TE tunnel Head-end/Aggregator\n   Te/Deag
      = TE tunnel Tail-end/Deaggregator\n   T       = Transit LSR\n   --    = E2E
      RSVP reservation\n   ==    = TE tunnel\n"
    title: 4.1.  Reference Model
  - contents:
    - "4.2.  Receipt of E2E Path Message by the Aggregator\n   The first event is
      the arrival of the E2E Path message at the\n   Aggregator.  The Aggregator MUST
      follow traditional RSVP procedures\n   for the processing of this E2E path message
      augmented with the\n   extensions documented in this section.\n   The Aggregator
      MUST first attempt to map the E2E reservation onto a\n   TE tunnel.  This decision
      is made in accordance with routing\n   information as well as any local policy
      information that may be\n   available at the Aggregator.  Examples of such policies
      appear in the\n   following paragraphs.  Just for illustration purposes, among
      many\n   other criteria, such mapping policies might take into account the\n
      \  Intserv service type, the Application Identity [RSVP-APPID], and/or\n   the
      signaled preemption [RSVP-PREEMP] of the E2E reservation (for\n   example, the
      aggregator may take into account the E2E reservations\n   RSVP preemption priority
      and the MPLS TE tunnel setup and/or hold\n   priorities when mapping the E2E
      reservation onto an MPLS TE tunnel).\n   There are situations where the Aggregator
      is able to make a final\n   mapping decision.  That would be the case, for example,
      if there is a\n   single TE tunnel toward the destination and if the policy
      is to map\n   any E2E RSVP reservation onto TE tunnels.\n   There are situations
      where the Aggregator is not able to make a final\n   determination.  That would
      be the case, for example, if routing\n   identifies two DS-TE tunnels toward
      the destination, one belonging to\n   DS-TE Class-Type 1 and one to Class-Type
      0, if the policy is to map\n   Intserv Guaranteed Services reservations to a
      Class-Type 1 tunnel and\n   Intserv Controlled Load reservations to a Class-Type
      0 tunnel, and if\n   the E2E RSVP Path message advertises both Guaranteed Service
      and\n   Controlled Load.\n   Whether final or tentative, the Aggregator makes
      a mapping decision\n   and selects a TE tunnel.  Before forwarding the E2E Path
      message\n   toward the receiver, the Aggregator SHOULD update the ADSPEC inside\n
      \  the E2E Path message to reflect the impact of the MPLS TE cloud onto\n   the
      QoS achievable by the E2E flow.  This update is a local matter\n   and may be
      based on configured information, on the information\n   available in the MPLS
      TE topology database, on the current TE tunnel\n   path, on information collected
      via RSVP-TE signaling, or a\n   combination thereof.  Updating the ADSPEC allows
      receivers that take\n   into account the information collected in the ADSPEC
      within the\n   network (such as delay and bandwidth estimates) to make more
      informed\n   reservation decisions.\n   The Aggregator MUST then forward the
      E2E Path message to the\n   Deaggregator (which is the Tail-end of the selected
      TE tunnel).  In\n   accordance with [LSP-HIER], the Aggregator MUST send the
      E2E Path\n   message with an IF_ID RSVP_HOP object instead of an RSVP_HOP object.\n
      \  The data interface identification MUST identify the TE tunnel.\n   To send
      the E2E Path message, the Aggregator MUST address it directly\n   to the Deaggregator
      by setting the destination address in the IP\n   Header of the E2E Path message
      to the Deaggregator address.  The\n   Router Alert is not set in the E2E Path
      message.\n   Optionally, the Aggregator MAY also encapsulate the E2E Path message\n
      \  in an IP tunnel or in the TE tunnel itself.\n   Regardless of the encapsulation
      method, the Router Alert is not set.\n   Thus, the E2E Path message will not
      be visible to routers along the\n   path from the Aggregator to the Deaggregator.
      \ Therefore, in contrast\n   to the procedures of [RSVP-AGG] and [RSVP-GEN-AGG],
      the IP Protocol\n   number does not need to be modified to \"RSVP-E2E-IGNORE\";
      it MUST be\n   left as is (indicating \"RSVP\") by the Aggregator.\n   In some
      environments, the Aggregator and Deaggregator MAY also act as\n   IPsec Security
      Gateways in order to provide IPsec protection to E2E\n   traffic when it transits
      between the Aggregator and the Deaggregator.\n   In that case, to transmit the
      E2E Path message to the Deaggregator,\n   the Aggregator MUST send the E2E Path
      message into the relevant IPsec\n   tunnel terminating on the Deaggregator.\n
      \  E2E PathTear and ResvConf messages MUST be forwarded by the\n   Aggregator
      to the Deaggregator exactly like Path messages.\n"
    title: 4.2.  Receipt of E2E Path Message by the Aggregator
  - contents:
    - "4.3.  Handling of E2E Path Message by Transit LSRs\n   Since the E2E Path message
      is addressed directly to the Deaggregator\n   and does not have Router Alert
      set, it is hidden from all transit\n   LSRs.\n"
    title: 4.3.  Handling of E2E Path Message by Transit LSRs
  - contents:
    - "4.4.  Receipt of E2E Path Message by the Deaggregator\n   Upon receipt of the
      E2E Path message addressed to it, the\n   Deaggregator will notice that the
      IP Protocol number is set to \"RSVP\"\n   and will thus perform RSVP processing
      of the E2E Path message.\n   As with [LSP-HIER], the IP TTL vs. RSVP TTL check
      MUST NOT be made.\n   The Deaggregator is informed that this check is not to
      be made\n   because of the presence of the IF_ID RSVP HOP object.\n   The Deaggregator
      MAY support the option to perform the following\n   checks (defined in [LSP-HIER])
      by the receiver Y of the IF_ID\n   RSVP_HOP object:\n   1.  Make sure that the
      data interface identified in the IF_ID\n       RSVP_HOP object actually terminates
      on Y.\n   2.  Find the \"other end\" of the above data interface, i.e., X.  Make\n
      \      sure that the PHOP in the IF_ID RSVP_HOP object is a control\n       channel
      address that belongs to the same node as X.\n   The information necessary to
      perform these checks may not always be\n   available to the Deaggregator.  Hence,
      the Deaggregator MUST support\n   operations in such environments where the
      checks cannot be made.\n   The Deaggregator MUST forward the E2E Path downstream
      toward the\n   receiver.  In doing so, the Deaggregator sets the destination
      address\n   in the IP header of the E2E Path message to the IP address found
      in\n   the destination address field of the Session object.  The\n   Deaggregator
      also sets the Router Alert.\n   An E2E PathErr sent by the Deaggregator in response
      to the E2E Path\n   message (which contains an IF_ID RSVP_HOP object) SHOULD
      contain an\n   IF_ID RSVP_HOP object.\n"
    title: 4.4.  Receipt of E2E Path Message by the Deaggregator
  - contents:
    - "4.5.  Handling of E2E Resv Message by the Deaggregator\n   As per regular RSVP
      operations, after receipt of the E2E Path, the\n   receiver generates an E2E
      Resv message which travels upstream hop-\n   by-hop towards the sender.\n   Upon
      receipt of the E2E Resv, the Deaggregator MUST follow\n   traditional RSVP procedures
      on receipt of the E2E Resv message.  This\n   includes performing admission
      control for the segment downstream of\n   the Deaggregator and forwarding the
      E2E Resv message to the PHOP\n   signaled earlier in the E2E Path message and
      which identifies the\n   Aggregator.  Since the E2E Resv message is directly
      addressed to the\n   Aggregator and does not carry the Router Alert option (as
      per\n   traditional RSVP Resv procedures), the E2E Resv message is hidden\n
      \  from the routers between the Deaggregator and the Aggregator which,\n   therefore,
      handle the E2E Resv message as a regular IP packet.\n   If the Aggregator and
      Deaggregator are also acting as IPsec Security\n   Gateways, the Deaggregator
      MUST send the E2E Resv message into the\n   relevant IPsec tunnel terminating
      on the Aggregator.\n"
    title: 4.5.  Handling of E2E Resv Message by the Deaggregator
  - contents:
    - "4.6.  Handling of E2E Resv Message by the Aggregator\n   The Aggregator is
      responsible for ensuring that there is sufficient\n   bandwidth available and
      reserved over the appropriate TE tunnel to\n   the Deaggregator for the E2E
      reservation.\n   On receipt of the E2E Resv message, the Aggregator MUST first
      perform\n   the final mapping onto the final TE tunnel (if the previous mapping\n
      \  was only a tentative one).\n   If the tunnel did not change during the final
      mapping, the Aggregator\n   continues the processing of the E2E Resv as described
      in the four\n   following paragraphs.\n   The aggregator calculates the size
      of the resource request using\n   traditional RSVP procedures.  That is, it
      follows the procedures in\n   [RSVP] to determine the resource requirements
      from the Sender Tspec\n   and the Flowspec contained in the Resv.  Then it compares
      the\n   resource request with the available resources of the selected TE\n   tunnel.\n
      \  If sufficient bandwidth is available on the final TE tunnel, the\n   Aggregator
      MUST update its internal understanding of how much of the\n   TE tunnel is in
      use and MUST forward the E2E Resv messages to the\n   corresponding PHOP.\n
      \  As noted in [RSVP-AGG], a range of policies MAY be applied to the\n   re-sizing
      of the aggregate reservation (in this case, the TE tunnel).\n   For example,
      the policy may be that the reserved bandwidth of the\n   tunnel can only be
      changed by configuration.  More dynamic policies\n   are also possible, whereby
      the aggregator may attempt to increase the\n   reserved bandwidth of the tunnel
      in response to the amount of\n   allocated bandwidth that has been used by E2E
      reservations.\n   Furthermore, to avoid the delay associated with the increase
      of the\n   tunnel size, the Aggregator may attempt to anticipate the increases\n
      \  in demand and adjust the TE tunnel size ahead of actual needs by E2E\n   reservations.
      \ In order to reduce disruptions, the Aggregator SHOULD\n   use \"make-before-break\"
      procedures as described in [RSVP-TE] to alter\n   the TE tunnel bandwidth.\n
      \  If sufficient bandwidth is not available on the final TE tunnel, the\n   Aggregator
      MUST follow the normal RSVP procedure for a reservation\n   being placed with
      insufficient bandwidth to support it.  That is, the\n   reservation is not installed
      and a ResvError is sent back toward the\n   receiver.\n   If the tunnel did
      change during the final mapping, the Aggregator\n   MUST first resend to the
      Deaggregator an E2E Path message with the\n   IF_ID RSVP_HOP data interface
      identification identifying the final TE\n   tunnel.  If needed, the ADSPEC information
      in this E2E Path message\n   SHOULD be updated.  Then the Aggregator MUST\n
      \     - either drop the E2E Resv message\n      - or proceed with the processing
      of the E2E Resv in the same\n        manner as in the case where the tunnel
      did not change (described\n        above).\n   In the former case, admission
      control over the final TE tunnel (and\n   forwarding of E2E Resv message upstream
      toward the sender) would only\n   occur when the Aggregator received the subsequent
      E2E Resv message\n   (that will be sent by the Deaggregator in response to the
      resent E2E\n   Path).  In the latter case, admission control over the final
      tunnel\n   is carried out immediately by the Aggregator, and if successful the\n
      \  E2E Resv message is generated upstream toward the sender.\n   Upon receipt
      of an E2E ResvConf from the Aggregator, the Deaggregator\n   MUST forward the
      E2E ResvConf downstream toward the receiver.  In\n   doing so, the Deaggregator
      sets the destination address in the IP\n   header of the E2E ResvConf message
      to the IP address found in the\n   RESV_CONFIRM object of the corresponding
      Resv.  The Deaggregator also\n   sets the Router Alert.\n"
    title: 4.6.  Handling of E2E Resv Message by the Aggregator
  - contents:
    - "4.7.  Forwarding of E2E Traffic by the Aggregator\n   When the Aggregator receives
      a data packet belonging to an E2E\n   reservations currently mapped over a given
      TE tunnel, the Aggregator\n   MUST encapsulate the packet into that TE tunnel.\n
      \  If the Aggregator and Deaggregator are also acting as IPsec Security\n   Gateways,
      the Aggregator MUST also encapsulate the data packet into\n   the relevant IPsec
      tunnel terminating on the Deaggregator before\n   transmission into the MPLS
      TE tunnel.\n"
    title: 4.7.  Forwarding of E2E Traffic by the Aggregator
  - contents:
    - "4.8.  Removal of E2E Reservations\n   E2E reservations are removed in the usual
      way via PathTear, ResvTear,\n   timeout, or as the result of an error condition.
      \ When a reservation\n   is removed, the Aggregator MUST update its local view
      of the\n   resources available on the corresponding TE tunnel accordingly.\n"
    title: 4.8.  Removal of E2E Reservations
  - contents:
    - "4.9.  Removal of the TE Tunnel\n   Should a TE tunnel go away (presumably due
      to a configuration change,\n   route change, or policy event), the Aggregator
      behaves much like a\n   conventional RSVP router in the face of a link failure.
      \ That is, it\n   may try to forward the Path messages onto another tunnel,
      if routing\n   and policy permit, or it may send Path_Error messages to the
      sender\n   if a suitable tunnel does not exist.  In case the Path messages are\n
      \  forwarded onto another tunnel, which terminates on a different\n   Deaggregator,
      or the reservation is torn down via Path Error\n   messages, the reservation
      state established on the router acting as\n   the Deaggregator before the TE
      tunnel went away, will time out since\n   it will no longer be refreshed.\n"
    title: 4.9.  Removal of the TE Tunnel
  - contents:
    - "4.10.  Example Signaling Flow\n               Aggregator                      Deaggregator\n
      \                 (*)\n                             RSVP-TE Path\n                       =========================>\n
      \                            RSVP-TE Resv\n                       <=========================\n
      \                (**)\n   E2E Path\n     -------------->\n                  (1)\n
      \                            E2E Path\n                    ------------------------------->\n
      \                                                  (2)\n                                                       E2E
      Path\n                                                       ----------->\n
      \                                                          E2E Resv\n                                                       <-----------\n
      \                                                   (3)\n                             E2E
      Resv\n                     <-----------------------------\n                  (4)\n
      \        E2E Resv\n     <-------------\n     (*)  Aggregator is triggered to
      pre-establish the TE tunnel(s)\n     (**) TE tunnel(s) are pre-established\n
      \    (1)  Aggregator tentatively selects the TE tunnel and forwards\n          E2E
      path to Deaggregator\n     (2)  Deaggregator forwards the E2E Path toward the
      receiver\n     (3)  Deaggregator forwards the E2E Resv to the Aggregator\n     (4)
      \ Aggregator selects final TE tunnel, checks that there is\n          sufficient
      bandwidth on TE tunnel, and forwards E2E Resv to\n          PHOP.  If final
      tunnel is different from tunnel tentatively\n          selected, the Aggregator
      re-sends an E2E Path with an updated\n          IF_ID RSVP_HOP and possibly
      an updated ADSPEC.\n"
    title: 4.10.  Example Signaling Flow
  title: 4.  Operations of RSVP Aggregation over TE with Pre-established Tunnels
- contents:
  - "5.  IPv4 and IPv6 Applicability\n   The procedures defined in this document are
    applicable to all the\n   following cases:\n      (1)  Aggregation of E2E IPv4
    RSVP reservations over IPv4 TE\n           tunnels.\n      (2)  Aggregation of
    E2E IPv6 RSVP reservations over IPv6 TE\n           tunnels.\n      (3)  Aggregation
    of E2E IPv6 RSVP reservations over IPv4 TE\n           tunnels, provided a mechanism
    such as [6PE] is used by the\n           Aggregator and Deaggregator for routing
    of IPv6 traffic over\n           an IPv4 MPLS core.\n      (4)  Aggregation of
    E2E IPv4 RSVP reservations over IPv6 TE\n           tunnels, provided a mechanism
    is used by the Aggregator and\n           Deaggregator for routing IPv4 traffic
    over IPv6 MPLS.\n"
  title: 5.  IPv4 and IPv6 Applicability
- contents:
  - "6.  E2E Reservations Applicability\n   The procedures defined in this document
    are applicable to many types\n   of E2E RSVP reservations including the following
    cases:\n      (1)  The E2E RSVP reservation is a per-flow reservation where the\n
    \          flow is characterized by the usual 5-tuple\n      (2)  The E2E reservation
    is an aggregate reservation for multiple\n           flows as described in [RSVP-AGG]
    or [RSVP-GEN-AGG] where the\n           set of flows is characterized by the <source
    address,\n           destination address, DSCP>\n      (3)  The E2E reservation
    is a reservation for an IPsec protected\n           flow.  For example, where
    the flow is characterized by the\n           <source address, destination address,
    SPI> as described in\n           [RSVP-IPSEC].\n"
  title: 6.  E2E Reservations Applicability
- contents:
  - '7.  Example Deployment Scenarios

    '
  - contents:
    - "7.1.  Voice and Video Reservations Scenario\n   An example application of the
      procedures specified in this document\n   is admission control of voice and
      video in environments with a very\n   high number of hosts.  In the example
      illustrated below, hosts\n   generate E2E per-flow reservations for each of
      their video streams\n   associated with a video-conference, each of their audio
      streams\n   associated with a video-conference and each of their voice calls.\n
      \  These reservations are aggregated over MPLS DS-TE tunnels over the\n   packet
      core.  The mapping policy defined by the user may be that all\n   the reservations
      for audio and voice streams are mapped onto DS-TE\n   tunnels of Class-Type
      1, while reservations for video streams are\n   mapped onto DS-TE tunnels of
      Class-Type 0.\n   ------                                             ------\n
      \  | H  |# -------                          -------- #| H  |\n   |    |\\#|
      \    |          -----           |      |#/|    |\n   -----| \\| Agg |          |
      T |           | Deag |/ ------\n           |     |==========================|
      \     |\n   ------ /|     |::::::::::::::::::::::::::|      |\\ ------\n   |
      H  |/#|     |          -----           |      |#\\| H  |\n   |    |# -------
      \                         -------- #|    |\n   ------                                             ------\n
      \  H     = Host\n   Agg   = Aggregator (TE tunnel Head-end)\n   Deagg = Deaggregator
      (TE tunnel Tail-end)\n   T     = Transit LSR\n   /     = E2E RSVP reservation
      for a Voice flow\n   #     = E2E RSVP reservation for a Video flow\n   ==    =
      DS-TE tunnel from Class-Type 1\n   ::    = DS-TE tunnel from Class-Type 0\n"
    title: 7.1.  Voice and Video Reservations Scenario
  - contents:
    - "7.2.  PSTN/3G Voice Trunking Scenario\n   An example application of the procedures
      specified in this document\n   is voice call admission control in large-scale
      telephony trunking\n   environments.  A Trunk VoIP Gateway may generate one
      aggregate RSVP\n   reservation for all the calls in place toward another given
      remote\n   Trunk VoIP Gateway (with resizing of this aggregate reservation in
      a\n   step function depending on the current number of calls).  In turn,\n   these
      reservations may be aggregated over MPLS TE tunnels over the\n   packet core
      so that tunnel Head-ends act as Aggregators and perform\n   admission control
      of Trunk Gateway reservations into MPLS TE tunnels.\n   The MPLS TE tunnels
      may be protected by MPLS Fast Reroute.  This\n   scenario is illustrated below:\n
      \  ------                                             ------\n   | GW |\\ -------
      \                         -------- /| GW |\n   |    |\\\\|     |          -----
      \          |      |//|    |\n   -----| \\| Agg |          | T |           |
      Deag |/ ------\n           |     |==========================|      |\n   ------
      /|     |          |   |           |      |\\ ------\n   | GW |//|     |          -----
      \          |      |\\\\| GW |\n   |    |/ -------                          --------
      \\|    |\n   ------                                             ------\n   GW
      \   = VoIP Gateway\n   Agg   = Aggregator (TE tunnel Head-end)\n   Deagg = Deaggregator
      (TE tunnel Tail-end)\n   T     = Transit LSR\n   /     = Aggregate Gateway to
      Gateway E2E RSVP reservation\n   ==    = TE tunnel\n"
    title: 7.2.  PSTN/3G Voice Trunking Scenario
  title: 7.  Example Deployment Scenarios
- contents:
  - "8.  Security Considerations\n   In the environments concerned by this document,
    RSVP messages are\n   used to control resource reservations for E2E flows outside
    the MPLS\n   region as well as to control resource reservations for MPLS TE\n
    \  tunnels inside the MPLS region.  To ensure the integrity of the\n   associated
    reservation and admission control mechanisms, the\n   mechanisms defined in [RSVP-CRYPTO1]
    and [RSVP-CRYPTO2] can be used.\n   The mechanisms protect the integrity of RSVP
    messages hop-by-hop and\n   provide node authentication, thereby protecting against
    corruption\n   and spoofing of RSVP messages.  These hop-by-hop integrity mechanisms\n
    \  can naturally be used to protect the RSVP messages used for E2E\n   reservations
    outside the MPLS region, to protect RSVP messages used\n   for MPLS TE tunnels
    inside the MPLS region, or for both.  These hop-\n   by-hop RSVP integrity mechanisms
    can also be used to protect RSVP\n   messages used for E2E reservations when those
    transit through the\n   MPLS region.  This is because the Aggregator and Deaggregator
    behave\n   as RSVP neighbors from the viewpoint of the E2E flows (even if they\n
    \  are not necessarily IP neighbors nor RSVP-TE neighbors).  In that\n   case,
    the Aggregator and Deaggregator need to use a pre-shared\n   secret.\n   As discussed
    in Section 6 of [RSVP-TE], filtering of traffic\n   associated with an MPLS TE
    tunnel can only be done on the basis of an\n   MPLS label, instead of the 5-tuple
    of conventional RSVP reservation\n   as per [RSVP].  Thus, as explained in [RSVP-TE],
    an administrator may\n   wish to limit the domain over which TE tunnels (which
    are used for\n   aggregation of RSVP E2E reservations as per this specification)
    can\n   be established.  See Section 6 of [RSVP-TE] for a description of how\n
    \  filtering of RSVP messages associated with MPLS TE tunnels can be\n   deployed
    to that end.\n   This document is based in part on [RSVP-AGG], which specifies\n
    \  aggregation of RSVP reservations.  Section 5 of [RSVP-AGG] raises the\n   point
    that because many E2E flows may share an aggregate reservation,\n   if the security
    of an aggregate reservation is compromised, there is\n   a multiplying effect
    in the sense that it can in turn compromise the\n   security of many E2E reservations
    whose quality of service depends on\n   the aggregate reservation.  This concern
    applies also to RSVP\n   Aggregation over TE tunnels as specified in the present
    document.\n   However, the integrity of MPLS TE tunnels operation can be protected\n
    \  using the mechanisms discussed in the previous paragraphs.  Also,\n   while
    [RSVP-AGG] specifies RSVP Aggregation over dynamically\n   established aggregate
    reservations, the present document restricts\n   itself to RSVP Aggregation over
    pre-established TE tunnels.  This\n   further reduces the security risks.\n   In
    the case where the Aggregators dynamically resize the TE tunnels\n   based on
    the current level of reservation, there are risks that the\n   TE tunnels used
    for RSVP aggregation hog resources in the core, which\n   could prevent other
    TE tunnels from being established.  There are\n   also potential risks that such
    resizing results in significant\n   computation and signaling as well as churn
    on tunnel paths.  Such\n   risks can be mitigated by configuration options allowing
    control of\n   TE tunnel dynamic resizing (maximum TE tunnel size, maximum resizing\n
    \  frequency, etc.), and/or possibly by the use of TE preemption.\n   Section
    5 of [RSVP-AGG] also discusses a security issue specific to\n   RSVP aggregation
    related to the necessary modification of the IP\n   Protocol number in RSVP E2E
    Path messages that traverses the\n   aggregation region.  This security issue
    does not apply to the\n   present document since aggregation of RSVP reservation
    over TE\n   tunnels does not use this approach of changing the protocol number
    in\n   RSVP messages.\n   Section 7 of [LSP-HIER] discusses security considerations
    stemming\n   from the fact that the implicit assumption of a binding between data\n
    \  interface and the interface over which a control message is sent is\n   no
    longer valid.  These security considerations are equally\n   applicable to the
    present document.\n   If the Aggregator and Deaggregator are also acting as IPsec
    Security\n   Gateways, the Security Considerations of [SEC-ARCH] apply.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Acknowledgments\n   This document builds on the [RSVP-AGG], [RSVP-TUN], and
    [LSP-HIER]\n   specifications.  We would like to thank Tom Phelan, John Drake,
    Arthi\n   Ayyangar, Fred Baker, Subha Dhesikan, Kwok-Ho Chan, Carol Iturralde,\n
    \  and James Gibson for their input into this document.\n"
  title: 9.  Acknowledgments
- contents:
  - "10.  Normative References\n   [CONTROLLED]   Wroclawski, J., \"Specification
    of the Controlled-Load\n                  Network Element Service\", RFC 2211,
    September 1997.\n   [DIFFSERV]     Blake, S., Black, D., Carlson, M., Davies,
    E., Wang,\n                  Z., and W. Weiss, \"An Architecture for Differentiated\n
    \                 Service\", RFC 2475, December 1998.\n   [DSTE-PROTO]   Le Faucheur,
    F., \"Protocol Extensions for Support of\n                  Diffserv-aware MPLS
    Traffic Engineering\", RFC 4124,\n                  June 2005.\n   [GUARANTEED]
    \  Shenker, S., Partridge, C., and R. Guerin,\n                  \"Specification
    of Guaranteed Quality of Service\", RFC\n                  2212, September 1997.\n
    \  [INT-DIFF]     Bernet, Y., Ford, P., Yavatkar, R., Baker, F., Zhang,\n                  L.,
    Speer, M., Braden, R., Davie, B., Wroclawski, J.,\n                  and E. Felstaine,
    \"A Framework for Integrated Services\n                  Operation over Diffserv
    Networks\", RFC 2998, November\n                  2000.\n   [INT-SERV]     Braden,
    R., Clark, D., and S. Shenker, \"Integrated\n                  Services in the
    Internet Architecture: an Overview\",\n                  RFC 1633, June 1994.\n
    \  [KEYWORDS]     Bradner, S., \"Key words for use in RFCs to Indicate\n                  Requirement
    Levels\", BCP 14, RFC 2119, March 1997.\n   [LSP-HIER]     Kompella, K. and Y.
    Rekhter, \"Label Switched Paths\n                  (LSP) Hierarchy with Generalized
    Multi-Protocol Label\n                  Switching (GMPLS) Traffic Engineering
    (TE)\", RFC 4206,\n                  October 2005.\n   [MPLS-TE]      Awduche,
    D., Malcolm, J., Agogbua, J., O'Dell, M., and\n                  J. McManus, \"Requirements
    for Traffic Engineering Over\n                  MPLS\", RFC 2702, September 1999.\n
    \  [RSVP]         Braden, R., Zhang, L., Berson, S., Herzog, S., and S.\n                  Jamin,
    \"Resource ReSerVation Protocol (RSVP) --\n                  Version 1 Functional
    Specification\", RFC 2205,\n                  September 1997.\n   [RSVP-AGG]     Baker,
    F., Iturralde, C., Le Faucheur, F., and B.\n                  Davie, \"Aggregation
    of RSVP for IPv4 and IPv6\n                  Reservations\", RFC 3175, September
    2001.\n   [RSVP-CRYPTO1] Baker, F., Lindell, B., and M. Talwar, \"RSVP\n                  Cryptographic
    Authentication\", RFC 2747, January 2000.\n   [RSVP-CRYPTO2] Braden, R. and L.
    Zhang, \"RSVP Cryptographic\n                  Authentication -- Updated Message
    Type Value\", RFC\n                  3097, April 2001.\n   [RSVP-TE]      Awduche,
    D., Berger, L., Gan, D., Li, T., Srinivasan,\n                  V., and G. Swallow,
    \"RSVP-TE: Extensions to RSVP for\n                  LSP Tunnels\", RFC 3209,
    December 2001.\n   [SEC-ARCH]     Kent, S. and K. Seo, \"Security Architecture
    for the\n                  Internet Protocol\", RFC 4301, December 2005.\n"
  title: 10.  Normative References
- contents:
  - "11.  Informative References\n   [6PE]          De Clercq, J., Ooms, D., Prevost,
    S., and F. Le\n                  Faucheur, \"Connecting IPv6 Islands over IPv4
    MPLS\n                  using IPv6 Provider Edge Routers (6PE)\", RFC 4798,\n
    \                 February 2007.\n   [AUTOMESH]     Vasseur and Leroux, \"Routing
    extensions for discovery\n                  of Multiprotocol (MPLS) Label Switch
    Router (LSR)\n                  Traffic Engineering (TE) mesh membership\", Work
    in\n                  Progress.\n   [DIFF-MPLS]    Le Faucheur, F., Wu, L., Davie,
    B., Davari, S.,\n                  Vaananen, P., Krishnan, R., Cheval, P., and
    J.\n                  Heinanen, \"Multi-Protocol Label Switching (MPLS)\n                  Support
    of Differentiated Services\", RFC 3270, May\n                  2002.\n   [DSTE-REQ]
    \    Le Faucheur, F. and W. Lai, \"Requirements for Support\n                  of
    Differentiated Services-aware MPLS Traffic\n                  Engineering\", RFC
    3564, July 2003.\n   [L-RSVP]       Manner, et al., Localized RSVP for Controlling
    RSVP\n                  Proxies, Work in Progress.\n   [RSVP-APPID]   Yadav, S.,
    Yavatkar, R., Pabbati, R., Ford, P., Moore,\n                  T., Herzog, S.,
    and R. Hess, \"Identity Representation\n                  for RSVP\", RFC 3182,
    October 2001.\n   [RSVP-GEN-AGG] Le Faucheur, R., Davie, B., Bose, P., Martin,
    L.,\n                  Christou, C., Davenport, M., and A. Hamilton, \"Generic\n
    \                 Aggregate Resource ReSerVation Protocol (RSVP)\n                  Reservations\",
    Work in Progress, January 2007.\n   [RSVP-IPSEC]   Berger, L. and T. O'Malley,
    \"RSVP Extensions for IPSEC\n                  Data Flows\", RFC 2207, September
    1997.\n   [RSVP-PREEMP]  Herzog, S., \"Signaled Preemption Priority Policy\n                  Element\",
    RFC 3181, October 2001.\n   [RSVP-PROXY1]  Gai, et al., RSVP Proxy, Work in Progress.\n
    \  [RSVP-PROXY2]  Le Faucheur, et al., RSVP Proxy Approaches, Work in\n                  Progress.\n
    \  [RSVP-TUN]     Terzis, A., Krawczyk, J., Wroclawski, J., and L.\n                  Zhang,
    \"RSVP Operation Over IP Tunnels\", RFC 2746,\n                  January 2000.\n
    \  [SIP-RSVP]     Camarillo, G., Marshall, W., and J. Rosenberg,\n                  \"Integration
    of Resource Management and Session\n                  Initiation Protocol (SIP)\",
    RFC 3312, October 2002.\n"
  title: 11.  Informative References
- contents:
  - "Appendix A - Optional Use of RSVP Proxy on RSVP Aggregator\n   A number of approaches
    ([RSVP-PROXY1],[RSVP-PROXY2], [L-RSVP]) have\n   been, or are being, discussed
    in the IETF in order to allow a network\n   node to behave as an RSVP proxy which:\n
    \     - originates the Resv Message (in response to the Path message) on\n        behalf
    of the destination node\n      - originates the Path message (in response to some
    trigger) on\n        behalf of the source node.\n   We observe that such approaches
    may optionally be used in conjunction\n   with the aggregation of RSVP reservations
    over MPLS TE tunnels as\n   specified in this document.  In particular, we consider
    the case\n   where the RSVP Aggregator/Deaggregator also behaves as the RSVP\n
    \  proxy.\n   The information in this Appendix is purely informational and\n   illustrative.\n
    \  As discussed in [RSVP-PROXY1]:\n   \"The proxy functionality does not imply
    merely generating a single\n   Resv message.  Proxying the Resv involves installing
    state in the\n   node doing the proxy i.e. the proxying node should act as if
    it had\n   received a Resv from the true endpoint.  This involves reserving\n
    \  resources (if required), sending periodic refreshes of the Resv\n   message
    and tearing down the reservation if the Path is torn down.\"\n   Hence, when behaving
    as the RSVP Proxy, the RSVP Aggregator may\n   effectively perform resource reservation
    over the MPLS TE tunnel (and\n   hence over the whole segment between the RSVP
    Aggregator and the RSVP\n   Deaggregator) even if the RSVP signaling only takes
    place upstream of\n   the MPLS TE tunnel (i.e., between the host and the RSVP
    aggregator).\n   Also, the RSVP Proxy can generate the Path message on behalf
    of the\n   remote source host in order to achieve reservation in the return\n
    \  direction (i.e., from RSVP aggregator/Deaggregator to host).\n   The resulting
    Signaling Flow is illustrated below, covering\n   reservations for both directions:\n
    \  |----|       |--------------|  |------|   |--------------|     |----|\n   |
    \   |       | Aggregator/  |  | MPLS |   | Aggregator/  |     |    |\n   |Host|
    \      | Deaggregator/|  | cloud|   | Deaggregator/|     |Host|\n   |    |       |
    RSVP Proxy   |  |      |   | RSVP Proxy   |     |    |\n   |----|       |--------------|
    \ |------|   |--------------|     |----|\n                      ==========TE Tunnel==========>\n
    \                     <========= TE Tunnel==========\n     Path                                                      Path\n
    \   ------------> (1)-\\                          /-(i)  <----------\n           Resv
    \      |                         |        Resv\n    <------------ (2)-/                          \\-(ii)
    ------------>\n           Path                                            Path\n
    \   <------------ (3)                              (iii) ------------>\n     Resv
    \                                                       Resv\n    ------------>
    \                                       <------------\n   (1)(i)  : Aggregator/Deaggregator/Proxy
    receives Path message,\n             selects the TE tunnel, performs admission
    control over the\n             TE tunnel.  (1) and (i) happen independently of
    each other.\n   (2)(ii)  : Aggregator/Deaggregator/Proxy generates the Resv message\n
    \            toward Host.  (2) is triggered by (1) and (ii) is triggered\n             by
    (i).  Before generating this Resv message, the\n             Aggregator/Proxy
    performs admission control of the\n             corresponding reservation over
    the TE tunnel that will\n             eventually carry the corresponding traffic.\n
    \  (3)(iii) : Aggregator/Deaggregator/Proxy generates the Path message\n             toward
    Host for reservation in return direction.  The\n             actual trigger for
    this depends on the actual RSVP proxy\n             solution.  As an example,
    (3) and (iii) may simply be\n             triggered respectively by (1) and (i).\n
    \  Note that the details of the signaling flow may vary slightly\n   depending
    on the actual approach used for RSVP Proxy.  For example,\n   if the [L-RSVP]
    approach was used instead of [RSVP-PROXY1], an\n   additional PathRequest message
    would be needed from host to\n   Aggregator/Deaggregator/Proxy in order to trigger
    the generation of\n   the Path message for return direction.\n   But regardless
    of the details of the call flow and of the actual RSVP\n   Proxy approach, RSVP
    proxy may optionally be deployed in combination\n   with RSVP Aggregation over
    MPLS TE tunnels, in such a way that\n   ensures (when used on both the Host-Aggregator
    and Deaggregator-Host\n   sides, and when both end systems support RSVP):\n      (i)
    \  admission control and resource reservation is performed on\n            every
    segment of the end-to-end path (i.e., between source\n            host and Aggregator,
    over the TE tunnel between the\n            Aggregator and Deaggregator that itself
    has been subject to\n            admission control by MPLS TE, between Deaggregator
    and\n            destination host).\n      (ii)  this is achieved in both directions.\n
    \     (iii) RSVP signaling is localized between hosts and\n            Aggregator/Deaggregator,
    which may result in significant\n            reduction in reservation establishment
    delays (and in turn\n            in post-dial delay in the case where these reservations
    are\n            pre-conditions for voice call establishment), particularly\n
    \           in the case where the MPLS TE tunnels span long distances\n            with
    high propagation delays.\n"
  title: Appendix A - Optional Use of RSVP Proxy on RSVP Aggregator
- contents:
  - "Appendix B - Example Usage of RSVP Aggregation over DSTE Tunnels for\n             VoIP
    Call Admission Control (CAC)\n   This Appendix presents an example scenario where
    the mechanisms\n   described in this document are used, in combination with other\n
    \  mechanisms specified by the IETF, to achieve Call Admission Control\n   (CAC)
    of Voice over IP (VoIP) traffic over the packet core.\n   The information in this
    Appendix is purely informational and\n   illustrative.\n   Consider the scenario
    depicted in Figure B1.  VoIP Gateways GW1 and\n   GW2 are both signaling and media
    gateways.  They are connected to an\n   MPLS network via edge routers PE1 and
    PE2, respectively.  In each\n   direction, a DSTE tunnel passes from the Head-end
    edge router,\n   through core network P routers, to the Tail-end edge router.
    \ GW1 and\n   GW2 are RSVP-enabled.  The RSVP reservations established by GW1
    and\n   GW2 are aggregated by PE1 and PE2 over the DS-TE tunnels.  For\n   reservations
    going from GW1 to GW2, PE1 serves as the\n   Aggregator/Head-end and PE2 serves
    as the Deaggregator/Tail-end.  For\n   reservations going from GW2 to GW2, PE2
    serves as the\n   Aggregator/Head-end and PE1 serves as the Deaggregator/Tail-end.\n
    \  To determine whether there is sufficient bandwidth in the MPLS core\n   to
    complete a connection, the originating and destination GWs each\n   send for each
    connection a Resource Reservation Protocol (RSVP)\n   bandwidth request to the
    network PE router to which it is connected.\n   As part of its Aggregator role,
    the PE router effectively performs\n   admission control of the bandwidth request
    generated by the GW onto\n   the resources of the corresponding DS-TE tunnel.\n
    \  In this example, in addition to behaving as Aggregator/Deaggregator,\n   PE1
    and PE2 behave as RSVP proxy.  So when a PE receives a Path\n   message from a
    GW, it does not propagate the Path message any\n   further.  Rather, the PE performs
    admission control of the bandwidth\n   signaled in the Path message over the DSTE
    tunnel toward the\n   destination.  Assuming there is enough bandwidth available
    on that\n   tunnel, the PE adjusts its bookkeeping of remaining available\n   bandwidth
    on the tunnel and generates a Resv message back toward the\n   GW to confirm resources
    have been reserved over the DSTE tunnel.\n                               ,-.     ,-.\n
    \                        _.---'   `---'   `-+\n                     ,-''   +------------+
    \ :\n                    (       |            |   `.\n                     \\
    \    ,'    CCA     `.    :\n                      \\  ,' |            | `.  ;\n
    \                      ;'   +------------+   `._\n                     ,'+                     ;
    `.\n                   ,' -+   Application Layer'    `.\n              SIP,'     `---+
    \      |    ;         `.SIP\n               ,'            `------+---'            `.\n
    \            ,'                                        `.\n           ,'                                            `.\n
    \        ,'                  ,-.        ,-.                `.\n       ,'                ,--+
    \  `--+--'-   --'\\              `._\n    +-`--+_____+------+  {   +----+   +----+
    \  `. +------+_____+----+\n    |GW1 | RSVP|      |______| P  |___| P  |______|
    \     | RSVP|GW2 |\n    |    |-----| PE1  |  {   +----+   +----+    /+| PE2  |-----|
    \   |\n    |    |     |      |==========================>|      |     |    |\n
    \   +-:--+ RTP |      |<==========================|      | RTP +-:--+\n     _|..__
    \   +------+  {     DSTE Tunnels    ;  +------+ __----|--.\n   _,'    \\-|          ./
    \                   -'._          /         |\n   | Access  \\         /        +----+
    \          \\,        |_ Access |\n   | Network   |       \\_       | P  |             |
    \      /  Network |\n   |          /          `|     +----+            /        |
    \        '\n   `--.  ,.__,|           |    IP/MPLS Network   /         '---'-
    ----'\n      '`'  ''             ' .._,,'`.__   _/ '---'                |\n       |
    \                            '`'''                       |\n       C1                                                        C2\n
    \         Figure B1.  Integration of SIP Resource Management and\n                   RSVP
    Aggregation over MPLS TE Tunnels\n   [SIP-RSVP] discusses how network quality
    of service can be made a\n   precondition for establishment of sessions initiated
    by the Session\n   Initiation Protocol (SIP).  These preconditions require that
    the\n   participant reserve network resources before continuing with the\n   session.
    \ The reservation of network resources are performed through\n   a signaling protocol
    such as RSVP.\n   Through the collaboration between SIP resource management, RSVP\n
    \  signaling, RSVP Aggregation and DS-TE as described above, we see\n   that:\n
    \     a) the PE and GW collaborate to determine whether there is enough\n         bandwidth
    on the tunnel between the calling and called GWs to\n         accommodate the
    connection,\n      b) the corresponding accept/reject decision is communicated
    to the\n         GWs on a connection-by-connection basis, and\n      c) the PE
    can optimize network resources by dynamically adjusting\n         the bandwidth
    of each tunnel according to the load over that\n         tunnel.  For example,
    if a tunnel is operating at near\n         capacity, the network may dynamically
    adjust the tunnel size\n         within a set of parameters.\n   We note that
    admission Control of voice calls over the core network\n   capacity is achieved
    in a hierarchical manner whereby:\n      - DSTE tunnels are subject to Admission
    Control over the resources\n        of the MPLS TE core\n      - Voice calls are
    subject to CAC over the DSTE tunnel bandwidth\n   This hierarchy is a key element
    in the scalability of this CAC\n   solution for voice calls over an MPLS Core.\n
    \  It is also possible for the GWs to use aggregate RSVP reservations\n   themselves
    instead of per-call RSVP reservations.  For example,\n   instead of setting one
    reservation for each call GW1 has in place\n   toward GW2, GW1 may establish one
    (or a small number of) aggregate\n   reservations as defined in [RSVP-AGG] or
    [RSVP-GEN-AGG], which is\n   used for all (or a subset of all) the calls toward
    GW2.  This\n   effectively provides an additional level of hierarchy whereby:\n
    \     - DSTE tunnels are subject to Admission Control over the resources\n        of
    the MPLS TE core\n      - Aggregate RSVP reservations (for the calls from one
    GW to\n        another GW) are subject to Admission Control over the DSTE\n        tunnels
    (as per the \"RSVP Aggregation over TE Tunnels\"\n        procedures defined in
    this document)\n      - Voice calls are subject to CAC by the GW over the aggregate\n
    \       reservation toward the appropriate destination GW.\n   This pushes even
    further the scalability limits of this voice CAC\n   architecture.\n"
  title: Appendix B - Example Usage of RSVP Aggregation over DSTE Tunnels for
- contents:
  - "Contributing Authors\n   This document was the collective work of several authors.
    \ The text\n   and content were contributed by the editor and the co-authors listed\n
    \  below.\n   Michael DiBiasio\n   Cisco Systems, Inc.\n   300 Beaver Brook Road\n
    \  Boxborough, MA 01719\n   USA\n   EMail: dibiasio@cisco.com\n   Bruce Davie\n
    \  Cisco Systems, Inc.\n   300 Beaver Brook Road\n   Boxborough, MA 01719\n   USA\n
    \  EMail: bdavie@cisco.com\n   Christou Christou\n   Booz Allen Hamilton\n   8283
    Greensboro Drive\n   McLean, VA 22102\n   USA\n   EMail: christou_chris@bah.com\n
    \  Michael Davenport\n   Booz Allen Hamilton\n   8283 Greensboro Drive\n   McLean,
    VA 22102\n   USA\n   EMail: davenport_michael@bah.com\n   Jerry Ash\n   AT&T\n
    \  200 Laurel Avenue\n   Middletown, NJ 07748\n   USA\n   EMail: gash@att.com\n
    \  Bur Goode\n   AT&T\n   32 Old Orchard Drive\n   Weston, CT 06883\n   USA\n
    \  EMail: bgoode@att.com\n"
  title: Contributing Authors
- contents:
  - "Editor's Address\n   Francois Le Faucheur\n   Cisco Systems, Inc.\n   Village
    d'Entreprise Green Side - Batiment T3\n   400, Avenue de Roumanille\n   06410
    Biot Sophia-Antipolis\n   France\n   EMail: flefauch@cisco.com\n"
  title: Editor's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
