- title: __initial_text__
  contents:
  - "          PKCS #10: Certification Request Syntax Specification\n            \
    \                  Version 1.7\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo represents a republication of PKCS #10 v1.7 from RSA\n\
    \   Laboratories' Public-Key Cryptography Standards (PKCS) series, and\n   change\
    \ control is retained within the PKCS process.  The body of this\n   document,\
    \ except for the security considerations section, is taken\n   directly from the\
    \ PKCS #9 v2.0 or the PKCS #10 v1.7 document.\n   This memo describes a syntax\
    \ for certification requests.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes syntax for certification requests.\
    \  A\n   certification request consists of a distinguished name, a public key,\n\
    \   and optionally a set of attributes, collectively signed by the entity\n  \
    \ requesting certification.  Certification requests are sent to a\n   certification\
    \ authority, which transforms the request into an X.509\n   [9] public-key certificate.\
    \  (In what form the certification\n   authority returns the newly signed certificate\
    \ is outside the scope\n   of this document.  A PKCS #7 [2] message is one possibility.)\n\
    \   The intention of including a set of attributes is twofold: to provide\n  \
    \ other information about a given entity , or a \"challenge password\" by\n  \
    \ which the entity may later request certificate revocation; and to\n   provide\
    \ attributes for inclusion in X.509 certificates.  A non-\n   exhaustive list\
    \ of attributes is given in PKCS #9 [3].\n   Certification authorities may also\
    \ require non-electronic forms of\n   request and may return non-electronic replies.\
    \  It is expected that\n   descriptions of such forms, which are outside the scope\
    \ of this\n   document, will be available from certification authorities.\n  \
    \ The preliminary intended application of this document is to support\n   PKCS\
    \ #7 cryptographic messages, but it is expected that other\n   applications will\
    \ be developed (see e.g. [4]).\n"
- title: 2. Definitions and notation
  contents:
  - "2. Definitions and notation\n 2.1 Definitions\n   For the purposes of this document,\
    \ the following definitions apply.\n   ALGORITHM       An information object class\
    \ defined in X.509 to\n                   describe objects composed of an algorithm\
    \ (a unique\n                   object identifier) and its parameters (any ASN.1\n\
    \                   type).  The values of objects in this class can be\n     \
    \              represented by the ASN.1 type AlgorithmIdentifier{}.\n        \
    \           ALGORITHM is defined as the \"useful\" information\n             \
    \      object class TYPE-IDENTIFIER, specified in [11],\n                   Annex\
    \ A.\n   AlgorithmIdentifier{}\n                   A useful parameterized version\
    \ of X.509 type\n                   AlgorithmIdentifier is defined in this document.\n\
    \                   This type tightly binds pairs of algorithm object\n      \
    \             identifiers to their associated parameter types.\n             \
    \      When referenced, the single parameter of\n                   AlgorithmIdentifier{}\
    \ specifies a constraint on the\n                   pairs of values that may appear\
    \ in that instance of\n                   the type.  The encoded values of\n \
    \                  AlgorithmIdentifier{} are equivalent to those of type\n   \
    \                AlgorithmIdentifier.\n   ASN.1           Abstract Syntax Notation\
    \ One, as defined in the ASN.1\n                   standards ([10], [11], [12],\
    \ and [13]).\n   ATTRIBUTE       This class describes objects composed of an attribute\n\
    \                   (a unique object identifier) and an associated set of\n  \
    \                 attribute values (any ASN.1 type).  The values of\n        \
    \           objects in this class can be represented by type\n               \
    \    Attribute{}.\n   Attribute{}     A useful parameterized version of X.501\
    \ [8] type\n                   Attribute is defined in this document.  This type\n\
    \                   tightly binds pairs of attribute type object\n           \
    \        identifiers to one or more attribute values types.\n                \
    \   In the ASN.1 open type notation, an attribute type is\n                  \
    \ defined as ATTRIBUTE.&id and an attribute value as\n                   ATTRIBUTE.&Type.\
    \  When referenced, the single\n                   parameter of Attribute{} specifies\
    \ a constraint on\n                   the pairs of values that may appear in an\
    \ instance of\n                   the type.  The encoded values of Attribute{}\
    \ are\n                   equivalent to those of type Attribute.\n   BER     \
    \        Basic Encoding Rules for ASN.1, as defined in X.690\n               \
    \    ([14]).\n   Certificate     A type that binds a subject entity's distinguished\n\
    \                   name to a public key with a digital signature.  This\n   \
    \                type is defined in X.509.  This type also contains\n        \
    \           the distinguished name of the certificate issuer (the\n          \
    \         signer), an issuer-specific serial number, the\n                   issuer's\
    \ signature algorithm identifier, a validity\n                   period, and an\
    \ optional set of certificate\n                   extensions.\n   DER        \
    \     Distinguished Encoding Rules for ASN.1, as defined in\n                \
    \   X.690.  DER is a subset of BER.\n   Name            A type that uniquely identifies\
    \ or \"distinguishes\"\n                   objects in an X.500 [7] directory.\
    \  This type is\n                   defined in X.501.  In an X.509 certificate,\
    \ the type\n                   identifies the certificate issuer and the certificate\n\
    \                   subject, the entity whose public key is certified.\n  2.2\
    \ Notation\n   No special notation is used in this document.\n"
- title: 3. Overview
  contents:
  - "3. Overview\n   A certification request consists of three parts: \"certification\n\
    \   request information,\" a signature algorithm identifier, and a digital\n \
    \  signature on the certification request information.  The\n   certification\
    \ request information consists of the entity's\n   distinguished name, the entity's\
    \ public key, and a set of attributes\n   providing other information about the\
    \ entity.\n   The process by which a certification request is constructed involves\n\
    \   the following steps:\n        1. A CertificationRequestInfo value containing\
    \ a subject\n           distinguished name, a subject public key, and optionally\
    \ a\n           set of attributes is constructed by an entity requesting\n   \
    \        certification.\n        2. The CertificationRequestInfo value is signed\
    \ with the subject\n           entity's private key.  (See Section 4.2.)\n   \
    \     3. The CertificationRequestInfo value, a signature algorithm\n         \
    \  identifier, and the entity's signature are collected together\n           into\
    \ a CertificationRequest value, defined below.\n   A certification authority fulfills\
    \ the request by authenticating the\n   requesting entity and verifying the entity's\
    \ signature, and, if the\n   request is valid, constructing an X.509 certificate\
    \ from the\n   distinguished name and public key, the issuer name, and the\n \
    \  certification authority's choice of serial number, validity period,\n   and\
    \ signature algorithm.  If the certification request contains any\n   PKCS #9\
    \ attributes, the certification authority may also use the\n   values in these\
    \ attributes as well as other information known to the\n   certification authority\
    \ to construct X.509 certificate extensions.\n   In what form the certification\
    \ authority returns the new certificate\n   is outside the scope of this document.\
    \  One possibility is a PKCS #7\n   cryptographic message with content type signedData,\
    \ following the\n   degenerate case where there are no signers.  The return message\
    \ may\n   include a certification path from the new certificate to the\n   certification\
    \ authority.  It may also include other certificates such\n   as cross-certificates\
    \ that the certification authority considers\n   helpful, and it may include certificate-revocation\
    \ lists (CRLs).\n   Another possibility is that the certification authority inserts\
    \ the\n   new certificate into a central database.\n   Note 1 - An entity would\
    \ typically send a certification request after\n   generating a public-key/private-key\
    \ pair, but may also do so after a\n   change in the entity's distinguished name.\n\
    \   Note 2 - The signature on the certification request prevents an\n   entity\
    \ from requesting a certificate with another party's public key.\n   Such an attack\
    \ would give the entity the minor ability to pretend to\n   be the originator\
    \ of any message signed by the other party.  This\n   attack is significant only\
    \ if the entity does not know the message\n   being signed and the signed part\
    \ of the message does not identify the\n   signer.  The entity would still not\
    \ be able to decrypt messages\n   intended for the other party, of course.\n \
    \  Note 3 - How the entity sends the certification request to a\n   certification\
    \ authority is outside the scope of this document.  Both\n   paper and electronic\
    \ forms are possible.\n   Note 4 - This document is not compatible with the certification\n\
    \   request syntax for Privacy-Enhanced Mail, as described in RFC 1424\n   [5].\
    \  The syntax here differs in three respects: It allows a set of\n   attributes;\
    \ it does not include issuer name, serial number, or\n   validity period; and\
    \ it does not require an \"innocuous\" message to be\n   signed.  This document\
    \ is designed to minimize request size, an\n   important feature for certification\
    \ authorities accepting requests on\n   paper.\n"
- title: 4. Certification request syntax
  contents:
  - "4. Certification request syntax\n   This section is divided into two parts. \
    \ The first part describes the\n   certification-request-information type CertificationRequestInfo,\
    \ and\n   the second part describes the top-level type CertificationRequest.\n\
    \ 4.1 CertificationRequestInfo\n   Certification request information shall have\
    \ ASN.1 type\n   CertificationRequestInfo:\n   CertificationRequestInfo ::= SEQUENCE\
    \ {\n        version       INTEGER { v1(0) } (v1,...),\n        subject      \
    \ Name,\n        subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n \
    \       attributes    [0] Attributes{{ CRIAttributes }}\n   }\n   SubjectPublicKeyInfo\
    \ { ALGORITHM : IOSet} ::= SEQUENCE {\n        algorithm        AlgorithmIdentifier\
    \ {{IOSet}},\n        subjectPublicKey BIT STRING\n   }\n   PKInfoAlgorithms ALGORITHM\
    \ ::= {\n        ...  -- add any locally defined algorithms here -- }\n   Attributes\
    \ { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n   CRIAttributes  ATTRIBUTE\
    \  ::= {\n        ... -- add any locally defined attributes here -- }\n   Attribute\
    \ { ATTRIBUTE:IOSet } ::= SEQUENCE {\n        type   ATTRIBUTE.&id({IOSet}),\n\
    \        values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n   }\n  \
    \ The components of type CertificationRequestInfo have the following\n   meanings:\n\
    \        version is the version number, for compatibility with future\n      \
    \    revisions of this document.  It shall be 0 for this version of\n        \
    \  the standard.\n        subject is the distinguished name of the certificate\
    \ subject\n          (the entity whose public key is to be certified).\n     \
    \   subjectPublicKeyInfo contains information about the public key\n         \
    \ being certified.  The information identifies the entity's\n          public-key\
    \ algorithm (and any associated parameters); examples\n          of public-key\
    \ algorithms include the rsaEncryption object\n          identifier from PKCS\
    \ #1 [1].  The information also includes a\n          bit-string representation\
    \ of the entity's public key.  For the\n          public-key algorithm just mentioned,\
    \ the bit string contains\n          the DER encoding of a value of PKCS #1 type\
    \ RSAPublicKey.  The\n          values of type SubjectPublicKeyInfo{} allowed\
    \ for\n          subjectPKInfo are constrained to the values specified by the\n\
    \          information object set PKInfoAlgorithms, which includes the\n     \
    \     extension marker (...).  Definitions of specific algorithm\n          objects\
    \ are left to specifications that reference this\n          document.  Such specifications\
    \ will be interoperable with\n          their future versions if any additional\
    \ algorithm objects are\n          added after the extension marker.\n       \
    \ attributes is a collection of attributes providing additional\n          information\
    \ about the subject of the certificate.  Some\n          attribute types that\
    \ might be useful here are defined in PKCS\n          #9.  An example is the challenge-password\
    \ attribute, which\n          specifies a password by which the entity may request\n\
    \          certificate revocation.  Another example is information to\n      \
    \    appear in X.509 certificate extensions (e.g. the\n          extensionRequest\
    \ attribute from PKCS #9).  The values of type\n          Attributes{} allowed\
    \ for attributes are constrained to the\n          values specified by the information\
    \ object set CRIAttributes.\n          Definitions of specific attribute objects\
    \ are left to\n          specifications that reference this document.  Such\n\
    \          specifications will be interoperable with their future\n          versions\
    \ if any additional attribute objects are added after\n          the extension\
    \ marker.\n 4.2 CertificationRequest\n   A certification request shall have ASN.1\
    \ type CertificationRequest:\n   CertificationRequest ::= SEQUENCE {\n       \
    \ certificationRequestInfo CertificationRequestInfo,\n        signatureAlgorithm\
    \ AlgorithmIdentifier{{ SignatureAlgorithms }},\n        signature          BIT\
    \ STRING\n   }\n   AlgorithmIdentifier {ALGORITHM:IOSet } ::= SEQUENCE {\n   \
    \     algorithm          ALGORITHM.&id({IOSet}),\n        parameters         ALGORITHM.&Type({IOSet}{@algorithm})\
    \ OPTIONAL\n   }\n   SignatureAlgorithms ALGORITHM ::= {\n        ... -- add any\
    \ locally defined algorithms here -- }\n   The components of type CertificationRequest\
    \ have the following\n   meanings:\n        certificateRequestInfo is the \"certification\
    \ request\n          information.\" It is the value being signed.\n        signatureAlgorithm\
    \ identifies the signature algorithm (and any\n          associated parameters)\
    \ under which the certification-request\n          information is signed.  For\
    \ example, a specification might\n          include an ALGORITHM object for PKCS\
    \ #1's\n          md5WithRSAEncryption in the information object set\n       \
    \   SignatureAlgorithms:\n          SignatureAlgorithms ALGORITHM ::= {\n    \
    \           ...,\n               { NULL IDENTIFIED BY md5WithRSAEncryption }\n\
    \          }\n        signature is the result of signing the certification request\n\
    \          information with the certification request subject's private\n    \
    \      key.\n   The signature process consists of two steps:\n        1. The value\
    \ of the certificationRequestInfo component is DER\n           encoded, yielding\
    \ an octet string.\n        2. The result of step 1 is signed with the certification\
    \ request\n           subject's private key under the specified signature\n  \
    \         algorithm, yielding a bit string, the signature.\n   Note - An equivalent\
    \ syntax for CertificationRequest could be\n   written:\n   CertificationRequest\
    \ ::= SIGNED { EncodedCertificationRequestInfo }\n        (CONSTRAINED BY { --\
    \ Verify or sign encoded\n         -- CertificationRequestInfo -- })\n   EncodedCertificationRequestInfo\
    \ ::=\n        TYPE-IDENTIFIER.&Type(CertificationRequestInfo)\n   SIGNED { ToBeSigned\
    \ } ::= SEQUENCE {\n        toBeSigned ToBeSigned,\n        algorithm  AlgorithmIdentifier\
    \ { {SignatureAlgorithms} },\n        signature  BIT STRING\n   }\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   Security issues are discussed throughout this\
    \ memo.\n"
- title: 6. Authors' Addresses
  contents:
  - "6. Authors' Addresses\n   Magnus Nystrom\n   RSA Security\n   Box 10704\n   S-121\
    \ 29 Stockholm\n   Sweden\n   EMail: magnus@rsasecurity.com\n   Burt Kaliski\n\
    \   RSA Security\n   20 Crosby Drive\n   Bedford, MA 01730 USA\n   EMail: bkaliski@rsasecurity.com\n"
- title: APPENDICES
  contents:
  - 'APPENDICES

    '
- title: A. ASN.1 Module
  contents:
  - "A. ASN.1 Module\n   This appendix includes all of the ASN.1 type and value definitions\n\
    \   contained in this document in the form of the ASN.1 module PKCS-10.\n   PKCS-10\
    \ {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n   pkcs-10(10) modules(1)\
    \ pkcs-10(1)}\n   DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n   -- EXPORTS All --\n\
    \   -- All types and values defined in this module are exported for use\n   --\
    \ in other ASN.1 modules.\n   IMPORTS\n   informationFramework, authenticationFramework\n\
    \        FROM UsefulDefinitions {joint-iso-itu-t(2) ds(5) module(1)\n        usefulDefinitions(0)\
    \ 3}\n   ATTRIBUTE, Name\n        FROM InformationFramework informationFramework\n\
    \   ALGORITHM\n        FROM AuthenticationFramework authenticationFramework;\n\
    \   -- Certificate requests\n   CertificationRequestInfo ::= SEQUENCE {\n    \
    \    version       INTEGER { v1(0) } (v1,...),\n        subject       Name,\n\
    \        subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n        attributes\
    \    [0] Attributes{{ CRIAttributes }}\n   }\n   SubjectPublicKeyInfo {ALGORITHM:\
    \ IOSet} ::= SEQUENCE {\n        algorithm        AlgorithmIdentifier {{IOSet}},\n\
    \        subjectPublicKey BIT STRING\n   }\n   PKInfoAlgorithms ALGORITHM ::=\
    \ {\n        ...  -- add any locally defined algorithms here -- }\n   Attributes\
    \ { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n   CRIAttributes  ATTRIBUTE\
    \  ::= {\n        ... -- add any locally defined attributes here -- }\n   Attribute\
    \ { ATTRIBUTE:IOSet } ::= SEQUENCE {\n        type   ATTRIBUTE.&id({IOSet}),\n\
    \        values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n   }\n  \
    \ CertificationRequest ::= SEQUENCE {\n        certificationRequestInfo CertificationRequestInfo,\n\
    \        signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n  \
    \      signature          BIT STRING\n   }\n   AlgorithmIdentifier {ALGORITHM:IOSet\
    \ } ::= SEQUENCE {\n        algorithm  ALGORITHM.&id({IOSet}),\n        parameters\
    \ ALGORITHM.&Type({IOSet}{@algorithm}) OPTIONAL\n   }\n   SignatureAlgorithms\
    \ ALGORITHM ::= {\n        ... -- add any locally defined algorithms here -- }\n\
    \   END\n"
- title: B. Intellectual property considerations
  contents:
  - "B. Intellectual property considerations\n   RSA Security makes no patent claims\
    \ on the general constructions\n   described in this document, although specific\
    \ underlying techniques\n   may be covered.\n   License to copy this document\
    \ is granted provided that it is\n   identified as \"RSA Security Inc.  Public-Key\
    \ Cryptography Standards\n   (PKCS)\" in all material mentioning or referencing\
    \ this document.\n   RSA Security makes no representations regarding intellectual\
    \ property\n   claims by other parties.  Such determination is the responsibility\
    \ of\n   the user.\n"
- title: C. Revision history
  contents:
  - "C. Revision history\n   Version 1.0\n         Version 1.0 was the previous version\
    \ of this document (also\n         published as \"version 1.5\" in [6]).\n   Version\
    \ 1.7\n         This version incorporates several editorial changes, including\n\
    \         updates to the references, and changes to ASN.1 type\n         definitions.\
    \  The following substantive changes have been made:\n         - This version\
    \ refers to X.680-X.690, the current international\n           standards for ASN.1\
    \ and its encoding rules.  All references\n           to X.208 and X.209 have\
    \ been eliminated.\n         - The X.690 standard requires that the encoded values\
    \ of SET OF\n           components be sorted in ascending order under DER.\n \
    \          Regardless of this, applications should not rely on the\n         \
    \  ordering of attribute components.\n         - All references to PKCS #6 Extended-Certificate\
    \ Syntax\n           Standard have been removed.  With the addition of extensions\n\
    \           to X.509 version 3 certificates, RSA Laboratories is\n           withdrawing\
    \ support for PKCS #6.\n   Note - The reason for using version 1.7 for this document\
    \ is to avoid\n   confusion with [6], which is named version 1.5, and an unsupported\n\
    \   PKCS #10 version named Version 1.6.\n"
- title: D. References
  contents:
  - "D. References\n   [1]  RSA Laboratories. PKCS #1: RSA Encryption Standard. Version\
    \ 2.0,\n        October 1998.\n   [2]  RSA Laboratories. PKCS #7: Cryptographic\
    \ Message Syntax\n        Standard.  Version 1.5, November 1993.\n   [3]  RSA\
    \ Laboratories. PKCS #9: Selected Attribute Types. Version\n        2.0, February\
    \ 2000.\n   [4]  Adams, C. and S. Farrell, \"Internet X.509 Public Key\n     \
    \   Infrastructure - Certificate Management Protocols\", RFC 2510,\n        March\
    \ 1999.\n   [5]  Kaliski, B., \"Privacy Enhancement for Internet Electronic Mail:\n\
    \        Part IV: Key Certification and Related Services\", RFC 1424,\n      \
    \  February 1993.\n   [6]  Kaliski, B., \"PKCS #10: Certification Request Syntax\
    \ Version\n        1.5\", RFC 2314, March 1998.\n   [7]  ITU-T Recommendation\
    \ X.500 (1997) | ISO/IEC 9594-1:1998,\n        Information technology - Open Systems\
    \ Interconnection - The\n        Directory: Overview of concepts, models and services.\n\
    \   [8]  ITU-T Recommendation X.501 (1993) | ISO/IEC 9594-2:1995,\n        Information\
    \ technology - Open Systems Interconnection - The\n        Directory: Models.\n\
    \   [9]  ITU-T Recommendation X.509 (1997) | ISO/IEC 9594-8:1998,\n        Information\
    \ technology - Open Systems Interconnection -The\n        Directory:  Authentication\
    \ framework.\n   [10] ITU-T Recommendation X.680 (1997) | ISO/IEC 8824-1:1998,\n\
    \        Information Technology - Abstract Syntax Notation One (ASN.1):\n    \
    \    Specification of Basic Notation.\n   [11] ITU-T Recommendation X.681 (1997)\
    \ | ISO/IEC 8824-2:1998,\n        Information Technology - Abstract Syntax Notation\
    \ One (ASN.1):\n        Information Object Specification.\n   [12] ITU-T Recommendation\
    \ X.682 (1997) | ISO/IEC 8824-3:1998,\n        Information Technology - Abstract\
    \ Syntax Notation One (ASN.1):\n        Constraint Specification.\n   [13] ITU-T\
    \ Recommendation X.683 (1997) | ISO/IEC 8824-4:1998,\n        Information Technology\
    \ - Abstract Syntax Notation One (ASN.1):\n        Parameterization of ASN.1 Specifications.\n\
    \   [14] ITU-T Recommendation X.690 (1997) | ISO/IEC 8825-1:1998,\n        Information\
    \ Technology - ASN.1 Encoding Rules: Specification of\n        Basic Encoding\
    \ Rules (BER), Canonical Encoding Rules (CER) and\n        Distinguished Encoding\
    \ Rules (DER).\n"
- title: E. Contact Information & About PKCS
  contents:
  - "E. Contact Information & About PKCS\n   The Public-Key Cryptography Standards\
    \ are specifications produced by\n   RSA Laboratories in cooperation with secure\
    \ systems developers\n   worldwide for the purpose of accelerating the deployment\
    \ of public-\n   key cryptography.  First published in 1991 as a result of meetings\n\
    \   with a small group of early adopters of public-key technology, the\n   PKCS\
    \ documents have become widely referenced and implemented.\n   Contributions from\
    \ the PKCS series have become part of many formal\n   and de facto standards,\
    \ including ANSI X9 documents, PKIX, SET,\n   S/MIME, and SSL.\n   Further development\
    \ of PKCS occurs through mailing list discussions\n   and occasional workshops,\
    \ and suggestions for improvement are\n   welcome.  For more information, contact:\n\
    \        PKCS Editor\n        RSA Laboratories\n        20 Crosby Drive\n    \
    \    Bedford, MA  01730 USA\n        pkcs-editor@rsasecurity.com\n        http://www.rsasecurity.com/rsalabs/pkcs\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society 2000. All Rights\
    \ Reserved.\n   This document and translations of it may be copied and furnished\
    \ to\n   others provided that the above copyright notice and this paragraph\n\
    \   are included on all such copies.  However, this document itself may\n   not\
    \ be modified in any way, such as by removing the copyright notice\n   or references\
    \ to the Internet Society or other Internet\n   organizations, except as required\
    \ to translate it into languages\n   other than English.\n   The limited permissions\
    \ granted above are perpetual and will not be\n   revoked by the Internet Society\
    \ or its successors or assigns.\n   This document and the information contained\
    \ herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY AND THE\
    \ INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR  IMPLIED,\
    \ INCLUDING\n   BUT NOT  LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n\
    \   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY  IMPLIED WARRANTIES OF\n   MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
