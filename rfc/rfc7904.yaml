- title: __initial_text__
  contents:
  - '        A SIP Usage for REsource LOcation And Discovery (RELOAD)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a SIP Usage for REsource LOcation And Discovery\n\
    \   (RELOAD).  The SIP Usage provides the functionality of a SIP proxy or\n  \
    \ registrar in a fully distributed system and includes a lookup service\n   for\
    \ Address of Records (AORs) stored in the overlay.  It also defines\n   Globally\
    \ Routable User Agent URIs (GRUUs) that allow the\n   registrations to map an\
    \ AOR to a specific node reachable through the\n   overlay.  After such initial\
    \ contact of a Peer, the RELOAD AppAttach\n   method is used to establish a direct\
    \ connection between nodes through\n   which SIP messages are exchanged.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7904.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   6\n   3.  Registering AORs in the Overlay . . . . . . . . . . . .\
    \ . . .   6\n     3.1.  Overview  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   6\n     3.2.  Data Structure  . . . . . . . . . . . . . . . . . . . .\
    \ .   7\n     3.3.  Access Control  . . . . . . . . . . . . . . . . . . . . .\
    \   9\n     3.4.  Overlay Configuration Document Extension  . . . . . . . .  10\n\
    \   4.  Looking Up an AOR . . . . . . . . . . . . . . . . . . . . . .  11\n  \
    \   4.1.  Finding a Route to an AOR . . . . . . . . . . . . . . . .  11\n    \
    \ 4.2.  Resolving an AOR  . . . . . . . . . . . . . . . . . . . .  12\n   5. \
    \ Forming a Direct Connection . . . . . . . . . . . . . . . . .  12\n     5.1.\
    \  Setting Up a Connection . . . . . . . . . . . . . . . . .  12\n     5.2.  Keeping\
    \ a Connection Alive  . . . . . . . . . . . . . . .  13\n   6.  Using GRUUs .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .  13\n   7.  SIP-REGISTRATION\
    \ Kind Definition  . . . . . . . . . . . . . .  14\n   8.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  14\n     8.1.  RELOAD-Specific Issues\
    \  . . . . . . . . . . . . . . . . .  14\n     8.2.  SIP-Specific Issues . . .\
    \ . . . . . . . . . . . . . . . .  15\n       8.2.1.  Fork Explosion  . . . .\
    \ . . . . . . . . . . . . . . .  15\n       8.2.2.  Malicious Retargeting . .\
    \ . . . . . . . . . . . . . .  15\n       8.2.3.  Misuse of AORs  . . . . . .\
    \ . . . . . . . . . . . . .  15\n       8.2.4.  Privacy Issues  . . . . . . .\
    \ . . . . . . . . . . . .  16\n   9.  IANA Considerations . . . . . . . . . .\
    \ . . . . . . . . . . .  16\n     9.1.  Data Kind-ID  . . . . . . . . . . . .\
    \ . . . . . . . . . .  16\n     9.2.  XML Namespace Registration  . . . . . .\
    \ . . . . . . . . .  16\n   10. References  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  16\n     10.1.  Normative References . . . . . . . . . . .\
    \ . . . . . . .  16\n     10.2.  Informative References . . . . . . . . . . .\
    \ . . . . . .  18\n   Appendix A.  Third-Party Registration . . . . . . . . .\
    \ . . . . .  19\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  19\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   REsource LOcation And Discovery (RELOAD) [RFC6940] specifies\
    \ a peer-\n   to-peer (P2P) signaling protocol for general use on the Internet.\n\
    \   This document defines a SIP Usage of RELOAD that allows SIP [RFC3261]\n  \
    \ user agents (UAs) to establish peer-to-peer SIP (or SIPS) sessions\n   without\
    \ the requirement for a permanent proxy or registration\n   servers, e.g., a fully\
    \ distributed telephony service.  This service\n   transparently supports SIP\
    \ addressing including telephone numbers.\n   In such a network, the RELOAD overlay\
    \ itself performs the\n   registration and rendezvous functions ordinarily associated\
    \ with such\n   servers.\n   The SIP Usage involves two basic functions:\n   Registration:\
    \  SIP UAs can use the RELOAD data storage functionality\n      to store a mapping\
    \ from their Address of Record (AOR) to their\n      Node-ID in the overlay and\
    \ to retrieve the Node-ID of other UAs.\n   Rendezvous:  Once a SIP UA has identified\
    \ the Node-ID for an AOR it\n      wishes to call, it can use the RELOAD message\
    \ routing system to\n      set up a direct connection for exchanging SIP messages.\n\
    \   Mappings are stored in the SipRegistration Resource Record defined in\n  \
    \ this document.  All operations required to perform a SIP registration\n   or\
    \ rendezvous are standard RELOAD protocol methods.\n   For example, Bob registers\
    \ his AOR, \"bob@dht.example.com\", for his\n   Node-ID \"1234\".  When Alice\
    \ wants to call Bob, she queries the\n   overlay for \"bob@dht.example.com\" and\
    \ receives Node-ID \"1234\" in\n   return.  She then uses the overlay routing\
    \ to establish a direct\n   connection with Bob and can directly transmit a standard\
    \ SIP INVITE.\n   In detail, this works along the following steps:\n   1.  Bob,\
    \ operating Node-ID \"1234\", stores a mapping from his AOR to\n       his Node-ID\
    \ in the overlay by applying a Store request for\n       \"bob@dht.example.com\
    \ -> 1234\".\n   2.  Alice, operating Node-ID \"5678\", decides to call Bob. She\n\
    \       retrieves Node-ID \"1234\" by performing a Fetch request on\n       \"\
    bob@dht.example.com\".\n   3.  Alice uses the overlay to route an AppAttach message\
    \ to Bob's\n       Peer (ID \"1234\").  Bob responds with his own AppAttach and\
    \ they\n       set up a direct connection, as shown in Figure 1.  Note that\n\
    \       mutual Interactive Connectivity Establishment (ICE) checks are\n     \
    \  invoked automatically from the AppAttach message exchange.\n              \
    \          Overlay\n   Alice       Peer1     ...          PeerN      Bob\n   (5678)\
    \                                     (1234)\n   -------------------------------------------------\n\
    \   AppAttach ->\n               AppAttach ->\n                         AppAttach\
    \ ->\n                                     AppAttach ->\n                    \
    \                    <- AppAttach\n                               <- AppAttach\n\
    \                    <- AppAttach\n        <- AppAttach\n   <------------------\
    \ ICE Checks ----------------->\n   INVITE ----------------------------------------->\n\
    \   <--------------------------------------------- OK\n   ACK -------------------------------------------->\n\
    \   <------------ ICE Checks for media ------------->\n   <--------------------\
    \ RTP ---------------------->\n      Figure 1: Connection Setup in P2P SIP Using\
    \ the RELOAD Overlay\n   It is important to note that the only role of RELOAD\
    \ in this example\n   is to set up the direct SIP connection between Alice and\
    \ Bob.  As\n   soon as the ICE checks complete and the connection is established,\n\
    \   ordinary SIP or SIPS is used.  In particular, the establishment of\n   the\
    \ media channel for a phone call happens via the usual SIP\n   mechanisms, and\
    \ RELOAD is not involved.  Media never traverses the\n   overlay.  After the successful\
    \ exchange of SIP messages,\n   communicating Peers run ICE connectivity checks\
    \ for media.\n   In addition to mappings from AORs to Node-IDs, the SIP Usage\
    \ also\n   allows mappings from AORs to other AORs.  This enables an indirection\n\
    \   useful for call forwarding.  For instance, if Bob wants his phone\n   calls\
    \ temporarily forwarded to Charlie, he can store the mapping\n   \"bob@dht.example.com\
    \ -> charlie@dht.example.com\".  When Alice wants\n   to call Bob, she retrieves\
    \ this mapping and can then fetch Charlie's\n   AOR to retrieve his Node-ID. \
    \ These mechanisms are described in\n   Section 3.\n   Alternatively, Globally\
    \ Routable User Agent URIs (GRUUs) [RFC5627]\n   can be used for directly accessing\
    \ Peers.  They are handled via a\n   separate mechanism, as described in Section\
    \ 6.\n   Concepts used in this document can be extended to include tel URIs\n\
    \   [RFC3966], but this will require further specifications to ensure\n   semantic\
    \ interoperability of implementations.\n   The SIP Usage for RELOAD addresses\
    \ a fully distributed deployment of\n   session-based services among overlay Peers.\
    \  This RELOAD Usage may be\n   relevant in a variety of environments, including\
    \ a tightly controlled\n   environment of a single provider that admits parties\
    \ using AORs with\n   domains from controlled namespace(s) only, or an open, multi-party\n\
    \   infrastructure that liberally allows a registration and rendezvous\n   for\
    \ various or any domain namespace.  It is noteworthy in this\n   context that\
    \ -- in contrast to regular SIP -- domain names play no\n   role in routing to\
    \ a proxy server.  Once connectivity to an overlay\n   is given, the technology\
    \ allows any name registration, possibly\n   constrained by overlay domain restrictions.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   We use the terminology and definitions from \"Concepts and\
    \ Terminology\n   for Peer-to-Peer SIP (P2PSIP)\" [RFC7890] and the RELOAD Base\
    \ Protocol\n   [RFC6940] extensively in this document.\n   In addition, terms\
    \ defined by SIP [RFC3261] apply to this memo.  The\n   term AOR is the SIP \"\
    Address of Record\" used to identify a user in\n   SIP.  For example, \"alice@example.com\"\
    \ could be the AOR for Alice.\n   For the purposes of this specification, an AOR\
    \ is considered not to\n   include the scheme (e.g., sip:), as the AOR needs to\
    \ match the\n   rfc822Name in the X.509 v3 certificates [RFC5280].  It is worth\n\
    \   noting that SIP and SIPS are distinguished in P2PSIP by the\n   Application-ID.\n"
- title: 3.  Registering AORs in the Overlay
  contents:
  - '3.  Registering AORs in the Overlay

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   In ordinary SIP, a UA registers the user's AOR and its network\n\
    \   location with a registrar.  In RELOAD, this registrar function is\n   provided\
    \ by the overlay as a whole.  To register its location, a\n   RELOAD peer stores\
    \ a SipRegistration Resource Record under its own\n   AOR using the SIP-REGISTRATION\
    \ Kind, which is formally defined in\n   Section 7.  Note that the registration\
    \ lifetime known from the\n   regular SIP REGISTER method is inherited from the\
    \ lifetime attribute\n   of the basic RELOAD StoredData structure (see Section\
    \ 7 in\n   [RFC6940]).\n   A RELOAD overlay MAY restrict the storage of AORs.\
    \  Namespaces (i.e.,\n   the right-hand side of the AOR) that are supported for\
    \ registration\n   and lookup can be configured for each RELOAD deployment as\
    \ described\n   in Section 3.4.\n   As a simple example, consider Alice with an\
    \ AOR\n   \"alice@dht.example.org\" at Node-ID \"1234\".  She might store the\n\
    \   mapping \"alice@dht.example.org -> 1234\" telling anyone who wants to\n  \
    \ call her to contact node \"1234\".\n   RELOAD peers can store two kinds of SIP\
    \ mappings,\n   o  from an AOR to a destination list (a single Node-ID is just\
    \ a\n      trivial destination list), or\n   o  from one AOR to another.\n   The\
    \ meaning of the first kind of mapping is \"in order to contact me,\n   form a\
    \ connection with this Peer.\"  The meaning of the second kind of\n   mapping\
    \ is \"in order to contact me, dereference this AOR\".  The\n   latter allows\
    \ for forwarding.  For instance, if Alice wants her calls\n   to be forwarded\
    \ to her secretary, Sam, she might insert the following\n   mapping, \"alice@dht.example.org\
    \ -> sam@dht.example.org\".\n"
- title: 3.2.  Data Structure
  contents:
  - "3.2.  Data Structure\n   This section defines the SipRegistration Resource Record\
    \ as follows:\n          enum {\n              sip_registration_uri(1),\n    \
    \          sip_registration_route(2),\n              (255)\n          } SipRegistrationType;\n\
    \          select (SipRegistration.type) {\n            case sip_registration_uri:\n\
    \              opaque               uri<0..2^16-1>;\n            case sip_registration_route:\n\
    \              opaque               contact_prefs<0..2^16-1>;\n              Destination\
    \          destination_list<3..2^16-1>;\n            /* This type can be extended\
    \ */\n          } SipRegistrationData;\n          struct {\n             SipRegistrationType\
    \   type;\n             uint16                length;\n             SipRegistrationData\
    \   data;\n         } SipRegistration;\n   The contents of the SipRegistration\
    \ Resource Record are:\n   type\n      the type of the registration\n   length\n\
    \      the length of the rest of the PDU\n   data\n      the registration data\n\
    \   o  If the registration is of type \"sip_registration_uri\", then the\n   \
    \   contents are an opaque string containing the AOR.\n   o  If the registration\
    \ is of type \"sip_registration_route\", then the\n      contents are an opaque\
    \ string containing the registrant's contact\n      preferences and a destination\
    \ list for the Peer.\n   The callee expresses its capabilities within the contact\
    \ preferences\n   as specified in [RFC3840].  It encodes a media feature set comprised\n\
    \   of its capabilities as a contact predicate, i.e., a string of feature\n  \
    \ parameters that appear as part of the Contact header field.  Feature\n   parameters\
    \ are derived from the media feature set syntax of [RFC2533]\n   (see also [RFC2738])\
    \ as described in [RFC3840].\n   This encoding covers all SIP User Agent capabilities,\
    \ as defined in\n   [RFC3840] and registered in the SIP feature tag registration\
    \ tree.\n   In particular, a callee can indicate that it prefers contact via a\n\
    \   particular SIP scheme -- SIP or SIPS -- by using one of the following\n  \
    \ contact_prefs attributes:\n         (sip.schemes=SIP)\n         (sip.schemes=SIPS)\n\
    \   RELOAD explicitly supports multiple registrations for a single AOR.\n   The\
    \ registrations are stored in a dictionary with Node-IDs as the\n   dictionary\
    \ keys.  Consider, for instance, the case where Alice has\n   two Peers:\n   o\
    \  her desk phone (1234)\n   o  her cell phone (5678)\n   Alice might store the\
    \ following in the overlay at resource\n   \"alice@dht.example.com\":\n   o  a\
    \ SipRegistration of type \"sip_registration_route\" with dictionary\n      key\
    \ \"1234\" and value \"1234\", both referring to Node-IDs\n   o  a SipRegistration\
    \ of type \"sip_registration_route\" with dictionary\n      key \"5678\" and value\
    \ \"5678\"\n   Note that this structure explicitly allows one Node-ID to forward\
    \ to\n   another Node-ID.  For instance, Alice could set calls to her desk\n \
    \  phone to ring at her cell phone by storing a SipRegistration of type\n   \"\
    sip_registration_route\" with a dictionary key \"1234\" and a value\n   \"5678\"\
    .\n"
- title: 3.3.  Access Control
  contents:
  - "3.3.  Access Control\n   In order to prevent hijacking or other misuse, registrations\
    \ are\n   subject to access control rules.  Two kinds of restrictions apply:\n\
    \   o  A Store is permitted only for AORs with domain names that fall\n      into\
    \ the namespaces supported by the RELOAD Overlay Instance.\n   o  Storing requests\
    \ are performed according to the USER-NODE-MATCH\n      access control policy\
    \ of RELOAD.\n   Before issuing a Store request to the overlay, any Peer SHOULD\
    \ verify\n   that the AOR of the request is a valid Resource Name with respect\
    \ to\n   its domain name and the namespaces defined in the overlay\n   configuration\
    \ document (see Section 3.4).\n   Before a Store is permitted, the Storing Peer\
    \ MUST check that:\n   o  The AOR of the request is a valid Resource Name with\
    \ respect to\n      the namespaces defined in the overlay configuration document.\n\
    \   o  The certificate contains a username that is a SIP AOR that hashes\n   \
    \   to the Resource-ID it is being stored at.\n   o  The certificate contains\
    \ a Node-ID that is the same as the\n      dictionary key it is being stored at.\n\
    \   If any of these checks fail, the request MUST be rejected with an\n   Error_Forbidden\
    \ error.\n   Note that these rules permit Alice to forward calls to Bob without\n\
    \   his permission.  However, they do not permit Alice to forward Bob's\n   calls\
    \ to her.  See Section 8.2.2 for additional details.\n"
- title: 3.4.  Overlay Configuration Document Extension
  contents:
  - "3.4.  Overlay Configuration Document Extension\n   The use of a SIP-enabled overlay\
    \ MAY be restricted to users with AORs\n   from specific domains.  When deploying\
    \ an overlay service, providers\n   can implement such restrictions by defining\
    \ a set of namespaces for\n   admissible domain names.  This section extends the\
    \ overlay\n   configuration document by defining new elements for patterns that\n\
    \   describe a corresponding domain name syntax.\n   A RELOAD overlay can be configured\
    \ to accept store requests for any\n   AOR, or to apply domain name restrictions.\
    \  To apply restrictions,\n   the overlay configuration document needs to contain\
    \ a <domain-\n   restrictions> element.  The <domain-restrictions> element serves\
    \ as a\n   container for zero to multiple <pattern> sub-elements.  A <pattern>\n\
    \   element MAY be present if the \"enable\" attribute of its parent\n   element\
    \ is set to true.  Each <pattern> element defines a pattern for\n   constructing\
    \ admissible resource names.  It is of type xsd:string and\n   interpreted as\
    \ a regular expression according to \"POSIX Extended\n   Regular Expression\"\
    \ (see the specifications in [IEEE-Posix]).\n   Encoding of the domain name adheres\
    \ to the restricted ASCII character\n   set without character escaping as defined\
    \ in Section 19.1 of\n   [RFC3261].\n   Inclusion of a <domain-restrictions> element\
    \ in an overlay\n   configuration document is OPTIONAL.  If the element is not\
    \ included,\n   the default behavior is to accept any AOR.  If the element is\n\
    \   included and the \"enable\" attribute is not set or set to false, the\n  \
    \ overlay MUST only accept AORs that match the domain name of the\n   overlay.\
    \  If the element is included and the \"enable\" attribute is\n   set to true,\
    \ the overlay MUST only accept AORs that match patterns\n   specified in the <domain-restrictions>\
    \ element.\n   Example of Domain Patterns:\n   dht\\.example\\.com\n   .*\\.my\\\
    .example\n   In this example, any AOR will be accepted that is either of the form\n\
    \   <user>@dht.example.com, or ends with the domain \"my.example\".\n   The RELAX\
    \ NG grammar for the AOR Domain Restriction reads:\n   # AOR DOMAIN RESTRICTION\
    \ URN SUB-NAMESPACE\n   namespace sip = \"urn:ietf:params:xml:ns:p2p:config-base:sip\"\
    \n   # AOR DOMAIN RESTRICTION ELEMENT\n   Kind-parameter &= element sip:domain-restriction\
    \ {\n       attribute enable { xsd:boolean }\n       # PATTERN ELEMENT\n     \
    \  element sip:pattern { xsd:string }*\n   }?\n"
- title: 4.  Looking Up an AOR
  contents:
  - '4.  Looking Up an AOR

    '
- title: 4.1.  Finding a Route to an AOR
  contents:
  - "4.1.  Finding a Route to an AOR\n   A RELOAD user, member of an overlay, who\
    \ wishes to call another user\n   with a given AOR SHALL proceed in the following\
    \ way:\n   AOR is a GRUU?  If the AOR is a GRUU for this overlay, the callee can\n\
    \      be contacted directly as described in Section 6.\n   AOR domain is hosted\
    \ in overlay?  If the domain part of the AOR\n      matches a domain pattern configured\
    \ in the overlay, the user can\n      continue to resolve the AOR in this overlay.\
    \  The user MAY choose\n      to query the DNS service records to search for additional\
    \ support\n      of this domain name.\n   AOR domain not supported by overlay?\
    \  If the domain part of the AOR\n      is not supported in the current overlay,\
    \ the user might query the\n      DNS (or other discovery services at hand) to\
    \ search for an\n      alternative overlay that services the AOR under request.\n\
    \      Alternatively, standard SIP procedures for contacting the callee\n    \
    \  might be used.\n   AOR inaccessible?  If all of the above contact attempts\
    \ fail, the\n      call fails.\n   The procedures described above likewise apply\
    \ when nodes are\n   simultaneously connected to several overlays.\n"
- title: 4.2.  Resolving an AOR
  contents:
  - "4.2.  Resolving an AOR\n   A RELOAD user that has discovered a route to an AOR\
    \ in the current\n   overlay SHALL execute the following steps:\n   1.  Perform\
    \ a Fetch for Kind SIP-REGISTRATION at the Resource-ID\n       corresponding to\
    \ the AOR.  This Fetch SHOULD NOT indicate any\n       dictionary keys, so that\
    \ it will fetch all the stored values.\n   2.  If any of the results of the Fetch\
    \ are non-GRUU AORs, then repeat\n       step 1 for that AOR.\n   3.  Once only\
    \ GRUUs and destination lists remain, the Peer removes\n       duplicate destination\
    \ lists and GRUUs from the list and initiates\n       SIP or SIPS connections\
    \ to the appropriate Peers as described in\n       the following sections.  If\
    \ there are also external AORs, the\n       Peer follows the appropriate procedure\
    \ for contacting them as\n       well.\n"
- title: 5.  Forming a Direct Connection
  contents:
  - '5.  Forming a Direct Connection

    '
- title: 5.1.  Setting Up a Connection
  contents:
  - "5.1.  Setting Up a Connection\n   Once the Peer has translated the AOR into a\
    \ set of destination lists,\n   it then uses the overlay to route AppAttach messages\
    \ to each of those\n   Peers.  The \"application\" field MUST be either 5060 to\
    \ indicate SIP\n   or 5061 to indicate SIPS.  If certificate-based authentication\
    \ is in\n   use, the responding Peer MUST present a certificate with a Node-ID\n\
    \   matching the terminal entry in the destination list.  Otherwise, the\n   connection\
    \ MUST NOT be used and MUST be closed.  Note that it is\n   possible that the\
    \ Peers already have a RELOAD connection mutually\n   established.  This MUST\
    \ NOT be used for SIP messages unless it is a\n   SIP connection.  A previously\
    \ established SIP connection MAY be used\n   for a new call.\n   Once the AppAttach\
    \ succeeds, the Peer sends plain or (D)TLS-encrypted\n   SIP messages over the\
    \ connection as in normal SIP.  A caller MAY\n   choose to contact the callee\
    \ using SIP or SIPS, but SHOULD follow a\n   preference indicated by the callee\
    \ in its contact_prefs attribute\n   (see Section 3.2).  A callee MAY choose to\
    \ listen on both SIP and\n   SIPS ports and accept calls from either SIP scheme,\
    \ or select a\n   single one.  However, a callee that decides to accept SIPS calls\n\
    \   only, SHOULD indicate its choice by setting the corresponding\n   attribute\
    \ in its contact_prefs.  It is noteworthy that, according to\n   [RFC6940], all\
    \ overlay links are built on (D)TLS-secured transport.\n   SIP messages carry\
    \ the SIP URIs of actual overlay endpoints (e.g.,\n   \"sip:alice@dht.example.com\"\
    ) in the Via and Contact headers, while\n   the communication continues via the\
    \ RELOAD connection.  However, a UA\n   can redirect its communication path by\
    \ setting an alternate Contact\n   header field like in ordinary SIP.\n"
- title: 5.2.  Keeping a Connection Alive
  contents:
  - "5.2.  Keeping a Connection Alive\n   In many cases, RELOAD connections established\
    \ from ICE [RFC5245]\n   negotiations will traverse stateful NATs and firewalls.\
    \  It is the\n   responsibility of the Peers to send messages with a frequency\n\
    \   sufficient to maintain the necessary state in these NATs and\n   firewalls\
    \ and thus keep the connection alive.  Keepalives are a\n   mandatory component\
    \ of ICE (see Section 10 of [RFC5245]) and no\n   further operations are required.\
    \  Applications that want to assure\n   maintenance of sessions individually need\
    \ to follow regular SIP\n   means.  Accordingly, a SIP Peer MAY apply keep-alive\
    \ techniques in\n   agreement with its transport binding as defined in Section\
    \ 3.5 of\n   [RFC5626].\n"
- title: 6.  Using GRUUs
  contents:
  - "6.  Using GRUUs\n   Globally Routable User Agent URIs (GRUUs) [RFC5627] have\
    \ been\n   designed to allow direct routing to a specific UA instance without\n\
    \   the need for dereferencing by a domain-specific SIP proxy function.\n   The\
    \ concept is transferred to RELOAD overlays as follows.  GRUUs in\n   RELOAD are\
    \ constructed by embedding a base64-encoded destination list\n   in the \"gr\"\
    \ URI parameter of the GRUU.  The base64 encoding is done\n   with the alphabet\
    \ specified in Table 1 of [RFC4648] with the\n   exception that \"~\" is used\
    \ in place of \"=\".\n   Example of a RELOAD GRUU:\n   alice@example.com;gr=MDEyMzQ1Njc4OTAxMjM0NTY3ODk~\n\
    \   GRUUs do not require storing data in the Overlay Instance.  Rather,\n   when\
    \ a Peer needs to route a message to a GRUU in the same P2P\n   overlay, it simply\
    \ uses the destination list and connects to that\n   Peer.  Because a GRUU contains\
    \ a destination list, it can have the\n   same contents as a destination list\
    \ stored elsewhere in the resource\n   dictionary.\n   Anonymous GRUUs [RFC5767]\
    \ are constructed analogously, but require\n   either that the enrollment server\
    \ issues a different Node-ID for each\n   anonymous GRUU required, or that a destination\
    \ list be used that\n   includes a Peer that compresses the destination list to\
    \ stop the\n   Node-ID from being revealed.\n"
- title: 7.  SIP-REGISTRATION Kind Definition
  contents:
  - "7.  SIP-REGISTRATION Kind Definition\n   This section defines the SIP-REGISTRATION\
    \ Kind.\n   Name:  SIP-REGISTRATION\n   Kind IDs:  The Resource Name for the SIP-REGISTRATION\
    \ Kind-ID is the\n      AOR of the user as specified in Section 2.  The data stored\
    \ is a\n      SipRegistration, which can contain either another URI or a\n   \
    \   destination list to the Peer that is acting for the user.\n   Data Model:\
    \  The data model for the SIP-REGISTRATION Kind-ID is a\n      dictionary.  The\
    \ dictionary key is the Node-ID of the Storing\n      Peer.  This allows each\
    \ Peer (presumably corresponding to a single\n      device) to store a single\
    \ route mapping.\n   Access Control:  USER-NODE-MATCH.  Note that this matches\
    \ the SIP AOR\n      against the rfc822Name in the X.509 v3 certificate.  The\n\
    \      rfc822Name does not include the scheme so that the \"sip:\" prefix\n  \
    \    needs to be removed from the SIP AOR before matching.  Escaped\n      characters\
    \ ('%' encoding) in the SIP AOR also need to be decoded\n      prior to matching\
    \ (see [RFC3986]).\n   Data stored under the SIP-REGISTRATION Kind is of type\n\
    \   SipRegistration, containing one of two data types:\n   sip_registration_uri\n\
    \      A URI that the user can be reached at.\n   sip_registration_route\n   \
    \   A destination list that can be used to reach the user's Peer.\n"
- title: 8.  Security Considerations
  contents:
  - '8.  Security Considerations

    '
- title: 8.1.  RELOAD-Specific Issues
  contents:
  - "8.1.  RELOAD-Specific Issues\n   This Usage for RELOAD does not define new protocol\
    \ elements or\n   operations.  Hence, no new threats arrive from message exchanges\
    \ in\n   RELOAD.\n   This document introduces an AOR domain restriction function\
    \ that must\n   be compared against the registration attempt by the Storing Peer.\
    \  A\n   misconfigured or malicious Peer could cause frequent rejects of\n   illegitimate\
    \ storing requests.  However, domain name control relies\n   on a lightweight\
    \ pattern matching and can be processed prior to\n   validating certificates.\
    \  Hence, no extra burden is introduced for\n   RELOAD peers beyond loads already\
    \ present in the base protocol.\n"
- title: 8.2.  SIP-Specific Issues
  contents:
  - '8.2.  SIP-Specific Issues

    '
- title: 8.2.1.  Fork Explosion
  contents:
  - "8.2.1.  Fork Explosion\n   Because SIP includes a forking capability (the ability\
    \ to retarget to\n   multiple recipients), fork bombs (i.e., attacks using SIP\
    \ forking to\n   amplify the effect on the intended victims) are a potential DoS\n\
    \   concern.  However, in the SIP Usage of RELOAD, fork bombs are a much\n   lower\
    \ concern than in a conventional SIP Proxy infrastructure,\n   because the calling\
    \ party is involved in each retargeting event.  It\n   can therefore directly\
    \ measure the number of forks and throttle at\n   some reasonable number.\n"
- title: 8.2.2.  Malicious Retargeting
  contents:
  - "8.2.2.  Malicious Retargeting\n   To launch a DoS attack, the owner of a popular\
    \ AOR could retarget all\n   calls to the victim.  This attack is common to SIP\
    \ and is difficult\n   to ameliorate without requiring the target of a SIP registration\
    \ to\n   authorize all stores.  The overhead of that requirement would be\n  \
    \ excessive and, in addition, there are good use cases for retargeting\n   to\
    \ a Peer without its explicit cooperation.\n"
- title: 8.2.3.  Misuse of AORs
  contents:
  - "8.2.3.  Misuse of AORs\n   A RELOAD overlay and enrollment service that liberally\
    \ accepts\n   registrations for AORs of domain names unrelated to the overlay\n\
    \   instance and without further authorization could store presence state\n  \
    \ for AORs without the consent of the owner of the AOR.  An attacker\n   could\
    \ hijack names, register a bogus presence, and attract calls\n   dedicated to\
    \ a victim that resides within or outside the Overlay\n   Instance.\n   A hijacking\
    \ of AORs can be mitigated by restricting the name spaces\n   admissible in the\
    \ Overlay Instance, or by additional verification\n   actions of the enrollment\
    \ service.  To prevent an (exclusive) routing\n   to a bogus registration, a caller\
    \ can in addition query the DNS (or\n   other discovery services at hand), search\
    \ for an alternative presence\n   of the callee in another overlay or a SIP infrastructure\
    \ using\n   [RFC3263] for name resolution.\n"
- title: 8.2.4.  Privacy Issues
  contents:
  - "8.2.4.  Privacy Issues\n   All RELOAD SIP registration data is visible to all\
    \ nodes in the\n   overlay.  Location privacy can be gained from using anonymous\
    \ GRUUs.\n   Methods of providing anonymity or deploying pseudonyms exist, but\
    \ are\n   beyond the scope of this document.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  Data Kind-ID
  contents:
  - "9.1.  Data Kind-ID\n   IANA has registered the following code point in the \"\
    RELOAD Data\n   Kind-ID\" Registry (cf., [RFC6940]) to represent the SIP-REGISTRATION\n\
    \   Kind, as described in Section 7.\n             +---------------------+------------+-----------+\n\
    \             | Kind                |    Kind-ID | Reference |\n             +---------------------+------------+-----------+\n\
    \             | SIP-REGISTRATION    |        0x1 | RFC 7904  |\n             +---------------------+------------+-----------+\n"
- title: 9.2.  XML Namespace Registration
  contents:
  - "9.2.  XML Namespace Registration\n   This document registers the following URI\
    \ for the config XML\n   namespace in the IETF XML registry defined in [RFC3688]:\n\
    \   URI:  urn:ietf:params:xml:ns:p2p:config-base:sip\n   Registrant Contact: \
    \ The IESG\n   XML:  N/A; the requested URI is an XML namespace\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC6940]  Jennings, C., Lowekamp, B., Ed., Rescorla, E., Baset, S.,\n   \
    \           and H. Schulzrinne, \"REsource LOcation And Discovery\n          \
    \    (RELOAD) Base Protocol\", RFC 6940, DOI 10.17487/RFC6940,\n             \
    \ January 2014, <http://www.rfc-editor.org/info/rfc6940>.\n   [RFC3261]  Rosenberg,\
    \ J., Schulzrinne, H., Camarillo, G., Johnston,\n              A., Peterson, J.,\
    \ Sparks, R., Handley, M., and E.\n              Schooler, \"SIP: Session Initiation\
    \ Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261, June 2002,\n    \
    \          <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC2533]  Klyne, G.,\
    \ \"A Syntax for Describing Media Feature Sets\",\n              RFC 2533, DOI\
    \ 10.17487/RFC2533, March 1999,\n              <http://www.rfc-editor.org/info/rfc2533>.\n\
    \   [RFC2738]  Klyne, G., \"Corrections to \"A Syntax for Describing Media\n \
    \             Feature Sets\"\", RFC 2738, DOI 10.17487/RFC2738, December\n   \
    \           1999, <http://www.rfc-editor.org/info/rfc2738>.\n   [RFC3688]  Mealling,\
    \ M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI 10.17487/RFC3688,\
    \ January 2004,\n              <http://www.rfc-editor.org/info/rfc3688>.\n   [RFC3840]\
    \  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\n              \"Indicating\
    \ User Agent Capabilities in the Session\n              Initiation Protocol (SIP)\"\
    , RFC 3840,\n              DOI 10.17487/RFC3840, August 2004,\n              <http://www.rfc-editor.org/info/rfc3840>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n        \
    \      Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006,\n          \
    \    <http://www.rfc-editor.org/info/rfc4648>.\n   [RFC5245]  Rosenberg, J., \"\
    Interactive Connectivity Establishment\n              (ICE): A Protocol for Network\
    \ Address Translator (NAT)\n              Traversal for Offer/Answer Protocols\"\
    , RFC 5245,\n              DOI 10.17487/RFC5245, April 2010,\n              <http://www.rfc-editor.org/info/rfc5245>.\n\
    \   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n         \
    \     Housley, R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure\
    \ Certificate and Certificate Revocation List\n              (CRL) Profile\",\
    \ RFC 5280, DOI 10.17487/RFC5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC5626]  Jennings, C., Ed., Mahy, R., Ed., and F. Audet, Ed.,\n        \
    \      \"Managing Client-Initiated Connections in the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 5626,\n              DOI 10.17487/RFC5626, October 2009,\n\
    \              <http://www.rfc-editor.org/info/rfc5626>.\n   [RFC5627]  Rosenberg,\
    \ J., \"Obtaining and Using Globally Routable User\n              Agent URIs (GRUUs)\
    \ in the Session Initiation Protocol\n              (SIP)\", RFC 5627, DOI 10.17487/RFC5627,\
    \ October 2009,\n              <http://www.rfc-editor.org/info/rfc5627>.\n   [IEEE-Posix]\n\
    \              IEEE, \"International Standard - Information technology\n     \
    \         Portable Operating System Interface (POSIX) Base\n              Specifications,\
    \ Issue 7\", ISO/IEC/IEEE 9945:2009,\n              DOI 10.1109/IEEESTD.2009.5393893,\
    \ September 2009.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC3263]  Rosenberg, J. and H. Schulzrinne,\
    \ \"Session Initiation\n              Protocol (SIP): Locating SIP Servers\",\
    \ RFC 3263,\n              DOI 10.17487/RFC3263, June 2002,\n              <http://www.rfc-editor.org/info/rfc3263>.\n\
    \   [RFC3966]  Schulzrinne, H., \"The tel URI for Telephone Numbers\",\n     \
    \         RFC 3966, DOI 10.17487/RFC3966, December 2004,\n              <http://www.rfc-editor.org/info/rfc3966>.\n\
    \   [RFC7890]  Bryan, D., Matthews, P., Shim, E., Willis, D., and S.\n       \
    \       Dawkins, \"Concepts and Terminology for Peer-to-Peer SIP\n           \
    \   (P2PSIP)\", RFC 7890, DOI 10.17487/RFC7890, June 2016,\n              <http://www.rfc-editor.org/info/rfc7890>.\n\
    \   [RFC5767]  Munakata, M., Schubert, S., and T. Ohba, \"User-Agent-\n      \
    \        Driven Privacy Mechanism for SIP\", RFC 5767,\n              DOI 10.17487/RFC5767,\
    \ April 2010,\n              <http://www.rfc-editor.org/info/rfc5767>.\n   [SHARE]\
    \    Knauf, A., Schmidt, T., Hege, G., and M. Waehlisch, \"A\n              Usage\
    \ for Shared Resources in RELOAD (ShaRe)\", Work in\n              Progress, draft-ietf-p2psip-share-08,\
    \ March 2016.\n"
- title: Appendix A.  Third-Party Registration
  contents:
  - "Appendix A.  Third-Party Registration\n   Non-peer-to-peer SIP defines third-party\
    \ registration (e.g., an\n   assistant acting for a manager or a changing set\
    \ of users registering\n   under a role-based AOR) in Section 10.2 of [RFC3261].\
    \  This is a\n   REGISTER that uses the URI of the third party in its From header\
    \ and\n   cannot be translated directly into a P2PSIP registration because only\n\
    \   the owner of the certificate can store a SIP-REGISTRATION in a RELOAD\n  \
    \ overlay.\n   Third-party registration can be implemented by using the extended\n\
    \   access control mechanism USER-CHAIN-ACL defined in [SHARE].  Creating\n  \
    \ a new Kind \"SIP-3P-REGISTRATION\" that is ruled by USER-CHAIN-ACL\n   allows\
    \ the owner of the certificate to delegate the right for\n   registration to individual\
    \ third parties.  This way, the SIP third-\n   party registration functionality\
    \ can be regained without weakening\n   the security controls of RELOAD.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document was generated in parts from initial drafts\
    \ and\n   discussions in the early specification phase of the P2PSIP base\n  \
    \ protocol.  We gratefully acknowledge the significant contributions\n   made\
    \ by (in alphabetical order) David A. Bryan, James Deverick,\n   Marcin Matuszewski,\
    \ Jonathan Rosenberg, and Marcia Zangrilli.\n   Additional thanks go to all those\
    \ who helped with ideas, discussions,\n   and reviews, in particular (in alphabetical\
    \ order) Roland Bless,\n   Michael Chen, Alissa Cooper, Marc Petit-Huguenin, Brian\
    \ Rosen, Meral\n   Shirazipour, and Matthias Waehlisch.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cullen Jennings\n   Cisco\n   170 West Tasman Drive\n\
    \   MS: SJC-21/2\n   San Jose, CA  95134\n   United States of America\n   Phone:\
    \ +1 408 421-9990\n   Email: fluffy@cisco.com\n   Bruce B. Lowekamp\n   Skype\n\
    \   Palo Alto, CA\n   United States of America\n   Email: bbl@lowekamp.net\n \
    \  Eric Rescorla\n   RTFM, Inc.\n   2064 Edgewood Drive\n   Palo Alto, CA  94303\n\
    \   United States of America\n   Phone: +1 650 678 2350\n   Email: ekr@rtfm.com\n\
    \   Salman A. Baset\n   IBM T. J. Watson Research Center\n   1101 Kitchawan Road\n\
    \   Yorktown Heights, NY  10598\n   United States of America\n   Email: sabaset@us.ibm.com\n\
    \   Henning Schulzrinne\n   Columbia University\n   1214 Amsterdam Avenue\n  \
    \ New York, NY  10027\n   United States of America\n   Email: hgs@cs.columbia.edu\n\
    \   Thomas C. Schmidt (editor)\n   HAW Hamburg\n   Berliner Tor 7\n   Hamburg\
    \  20099\n   Germany\n   Email: t.schmidt@haw-hamburg.de\n"
