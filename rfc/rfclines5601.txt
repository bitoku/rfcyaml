Abstract This memo defines a Standards Track portion of the Management Information Base for use with network management protocols in the Internet community.
In particular, it describes managed objects for modeling of Pseudowire Edge to Edge services carried over a general Packet Switched Network.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines a MIB module that can be used to manage pseudowire (PW) services for transmission over a Packet Switched Network (PSN)
This MIB module provides generic management of PWs that is common to all types of PSN and PW services defined by the IETF PWE3 Working Group.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [BCP14].
This document adopts the definitions, acronyms, and mechanisms described in [RFC3985] and [RFC3916].
Unless otherwise stated, the mechanisms of [RFC3985] apply and will not be re described here.
The PWE3 MIB modules architecture provides a layered modular model into which any supported emulated service can be connected to any supported PSN type.
This specific MIB module provides the glue for mapping between the emulated service onto the native PSN service.
As such, the defining of a PW emulated service requires the use of at least three types of MIB modules.
Starting from the emulated service, the first type is a service  specific module, which is dependent on the emulated signal type.
These modules are defined in other documents.
The second type is this module, the PW STD MIB module, which configures general parameters of the PW that are common to all types of emulated services and PSN types.
The third type of module is a PSN specific module.
There is a different module for each type of PSN.
These modules associate the PW with one or more "tunnels" that carry the service over the PSN.
These modules are defined in other documents.
Structure of the MIB Module
The MIB module consists of six tables: The generic configuration and status monitoring objects that are common to all service types and PSN types (pwTable).
The PW Performance Current Table (pwPerfCurrentTable) contains PW statistics for the current 15 minute period.
The PW Performance Interval Table (pwPerfIntervalTable) contains PW statistics for historical intervals (usually 96 15 minute entries to cover a 24 hour period).
The PW Performance 1 day Interval Table (pwPerf1DayIntervalTable) contains PW statistics for historical intervals accumulated per day.
Usually 30 1 day entries to cover a monthly period.
The mapping table (pwIndexMappingTable) enables the reverse mapping of the unique PWid parameters [peer IP, PW type, and PW ID] and the pwIndex.
The mapping table (pwGenFecIndexMappingTable) enables the reverse mapping of unique PWid parameters used in genFecSignaling [pwGroupAttachmentID, pwLocalAttachmentID, and pwPeerAttachmentID] and the pwIndex.
This MIB module uses Textual Conventions from [RFC2578], [RFC2579], [RFC2580], [RFC2863], [RFC3411], [RFC3593], [RFC3705], [RFC4001], and [RFC5542], and references [RFC3413], [RFC4623], and [RFC4720].
PW STD MIB Module Usage
An entry in the PW table (pwTable) MUST exist for all PW types (ATM, FR, Ethernet, SONET, etc.).
This table holds generic parameters related to the PW creation and monitoring.
A conceptual row can be created in the pwTable in one of the following ways: 1)
The operator creates a row in the pwTable when configuring the node for a new service.
This mode MUST be supported by the agent, and MUST be used when creating a non signaled (manually assigned) PW.
The agent MAY create a row in the pwTable if a signaling message has been received from a peer node with signaling identification parameters that are not already known to the local node (i.e., there is no related entry created by the operator with matching parameters).
The agent MAY create a row in the pwTable automatically due to some auto discovery application, or based on configuration that is done through non SNMP applications.
The agent then creates the rows in the (locally supported) performance tables and reverse mapping tables in PW STD MIB module.
Relations to Other PWE3 MIB Modules
Based on the PSN type defined for the PW, a row is created in the PSN specific module (for example, [RFC5602]) and associated to the PW table by the common pwIndex.
Based on the PW type defined for the PW, a row is created in the service specific module (for example, [CEPMIB]) and associated to the PW table by the common pwIndex.
Unless all the necessary entries in the applicable tables have been created and all the parameters have been consistently configured in those tables, signaling cannot be performed from the local node, and the pwVcOperStatus should report 'notPresent'.
Relations to the IF MIB The PW in general is not an ifIndex [RFC2863] on its own, for agent scalability reasons.
The PW is typically associated via the PWE3 MIB modules to an ifIndex the PW is emulating.
This ifIndex may represent a physical entity   for example, a PW emulating a SONET path as in Circuit Emulation Service over Packet (CEP).
In that case, the PW itself is not an ifIndex; however, the PW STD CEP MIB module associates the PW to the ifIndex of the path to be emulated.
In some cases, the PW will be associated to an ifIndex representing a virtual interface.
An example is Virtual Private LAN Service (VPLS) where the PW emulates a logical interface of a (logical) bridge.
The physical ports' association to the VPLS instance is defined in the non PW MIB modules in this case.
Exception to the above MAY exist in some implementations where it is convenient to manage the PW as an ifIndex in the ifTable.
A special ifType to represent a PW virtual interface (246) will be used in the ifTable in this case.
When the PW is managed as an ifIndex, by default it SHOULD NOT be stacked, i.e., this ifIndex SHOULD NOT be layered above the respective PSN tunnel ifIndex or the attachment circuit ifIndex or the interface carrying the attachment circuit.
Note that the ifIndex that carries the PW toward/from the PSN is not explicitly configured via PWE3 MIB modules except in rare cases.
In most cases, the PW is carried inside a PSN tunnel, and the interfaces carrying the tunnel are specified in the related MIB modules that control the PSN tunnels.
This MIB module includes notifications for PW entering the up or down state, in accordance with the guidelines for interface notifications as described in [RFC2863].
Implementers should be aware that in many systems, it is desired to correlate notifications, such that notifications will not be emitted if notifications from a higher level (such as ports or tunnels) are already in effect.
Specifically for PWs, it is anticipated that most network's equipment failures turn into lowerLayerDown state at the PW level, where a notification has already been emitted from a higher level.
When a PW is represented as an ifIndex, it is RECOMMENDED that PW notifications be turned off, to avoid duplication with the ifIndex status change notifications.
Example of the PW MIB Modules Usage
In this section, we provide an example of using the MIB objects described in section 7 to set up a CEP PW over Multiprotocol Label Switching (MPLS) PSN.
While this example is not meant to illustrate every permutation of the MIB, it is intended as an aid to understanding some of the key concepts.
It is meant to be read after going through the MIB itself.
In this example, a PW service for CEP is configured over an MPLS PSN (MPLS TE tunnel).
It uses LDP as in [RFC4447] for service setup.
For the operation in the service specific MIB modules and the PSN  specific MIB modules, see the specific MIB module memo.
This example is continued in the memo describing the PW CEP STD MIB module (for example, [CEPMIB]) and the PW MPLS STD MIB module [RFC5602].
In the PW STD MIB module:
Will be set by signaling   protocol pwName
This section contains the initial version of the IANA PWE3 MIB.
IANA has updated this MIB module based on expert review as defined in [RFC5226].
Each new assignment of PW type or PW PSN type made by IANA based on the procedures described in [RFC4446] should be documented in the online version of IANA PWE3 MIB.
The current IANA PWE3 MIB contains PW types as requested in [RFC4446] and [RFC4863].
IANA PWE3 MIB DEFINITIONS ::
BEGIN IMPORTS MODULE IDENTITY, mib 2
TEXTUAL CONVENTION FROM SNMPv2 TC;
310 823 9358 EMail: iana@iana.org
This MIB module defines the IANAPwTypeTC and IANAPwPsnTypeTC textual conventions for use in PWE3 MIB modules.
Any additions or changes to the contents of this MIB module require either publication of an RFC, Designated Expert Review as defined in RFC 5226, Guidelines for Writing an IANA Considerations Section in RFCs, and should be based on the procedures defined in [RFC4446].
The Designated Expert will be selected by the IESG Area Director(s) of the internet Area.
Copyright (c) 2009 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
Neither the name of Internet Society, IETF or IETF Trust, nor the names of specific contributors, may be used to endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS '
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. "
"Indicates the PW type (i.e., the carried service).
SYNTAX   INTEGER { other(0), frameRelayDlciMartiniMode(1), atmAal5SduVcc(2), atmTransparent(3), ethernetTagged(4),
, atmCell1to1Vcc(12), atmCell1to1Vpc(13), atmAal5PduVcc(14), frameRelayPortMode(15), cep(16), e1Satop(17), t1Satop(18), e3Satop(19), t3Satop(20), basicCesPsn(21), basicTdmIp(22), tdmCasCesPsn(23), tdmCasTdmIp(24), frDlci(25), wildcard (32767)
Identifies the PSN type that the PW will use over the network."
"This TC describes a collection of capabilities related to a specific PW.
Values may be added in the future based on new capabilities introduced in IETF documents. "
IMPORTS NOTIFICATION TYPE, MODULE IDENTITY, OBJECT TYPE, Integer32, Unsigned32,
Counter32, Counter64, TimeTicks, transmission FROM SNMPv2
MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
] TruthValue, RowStatus, StorageType, TimeStamp FROM SNMPv2
[RFC2579] SnmpAdminString FROM SNMP FRAMEWORK
[RFC4001] PerfCurrentCount, PerfIntervalCount FROM PerfHist TC
[RFC3593] HCPerfCurrentCount, HCPerfIntervalCount, HCPerfTimeElapsed, HCPerfValidIntervals FROM HC
PwIndexType, PwIndexOrZeroType, PwGroupID, PwIDType, PwOperStatusTC, PwAttachmentIdentifierType, PwCwStatusTC, PwStatus, PwFragSize, PwFragStatus, PwGenIdType FROM PW TC STD
IANAPwTypeTC, IANAPwPsnTypeTC, IANAPwCapabilities FROM IANA PWE3 MIB
GMT ORGANIZATION "Pseudowire Edge to Edge Emulation (PWE3) Working Group" CONTACT INFO "
The PWE3 Working Group (
email distribution pwe3@ietf.org, http://www.ietf.org/html.charters/pwe3 charter.html) " DESCRIPTION "
This MIB module contains managed object definitions for pseudowire operation as in Bryant, S. and P. Pate, 'Pseudo Wire Emulation Edge to
Edge (PWE3) Architecture' [RFC3985], Martini, L., et al, 'Pseudowire Setup and Maintenance Using the Label Distribution Protocol (LDP)' [RFC4447], and Townsley, M., et al, 'Layer Two Tunneling Protocol (Version 3)'
This MIB module enables the use of any underlying packet switched network (PSN).
MIB nodules that will support PW operations over specific PSN types are defined in separate memos.
The indexes for this MIB module are also used to index the PSN specific tables and the PW specific tables.
The PW Type dictates which PW specific MIB module to use.
Copyright (c) 2009 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
Neither the name of Internet Society, IETF or IETF Trust, nor the names of specific contributors, may be used to endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS '
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
This version of this MIB module is part of RFC 5601; see the RFC itself for full legal notices. "
Initial version published as part of RFC 5601."
PW Virtual Connection Table pwIndexNext OBJECT
"This object contains an appropriate value to be used for pwIndex when creating entries in the pwTable.
The value 0 indicates that no unassigned entries are available.
To obtain the value of pwIndex for a new entry in the pwTable, the manager issues a management protocol retrieval operation.
The agent will determine through its local policy when this index value will be made available for reuse."
"This table specifies information for configuring and status monitoring that is common to all service types and PSN types."
{ pwObjects 2 } pwEntry   OBJECT TYPE SYNTAX
A row in this table represents a pseudowire (PW) virtual connection across a packet network.
It is indexed by pwIndex, which uniquely identifies a singular connection.
A row can be created by an operator command from a management plan of a PE, by signaling, or due to auto  discovery process.
An operator's command can be issued via a non SNMP application; in such case, a row will be created implicitly by the agent.
The read create objects in this table are divided into three categories:
1) Objects that MUST NOT be changed after row activation.
These are objects that define basic properties of the PW (for example type, destination, etc.).
2) Objects that MAY be changed when the PW is defined as not active.
A change of these objects involves re signaling of the PW or it might be traffic affecting.
PW not active is defined as one of the following conditions: a)
If the operator needs to change one of the values for an active row, the operator can either set the pwRowStatus to notInService(2) or set pwAdminStatus to down(2).
Signaling (or traffic) is initiated again upon setting the pwRowStatus to active(1) or setting the pwAdminStatus to up(1) or testing(3), respectively.
3) Objects that MAY be changed at any time.
A PW MAY have an entry in the ifTable in addition to the entry in this table.
In this case, a special ifType for PW will be set in the ifTable, and the ifIndex in the ifTable of the PW will be set in the pwIfIndex object in this table.
By default, all the read create objects MUST NOT be changed after row activation, unless specifically indicated in the individual object description.
Manual entries in this table SHOULD be preserved after a reboot; the agent MUST ensure the integrity of those entries.
If the set of entries of a specific row are found to be inconsistent after reboot, the PW pwOperStatus MUST be declared as notPresent(5).
PwGenIdType } pwIndex OBJECT TYPE SYNTAX
A unique index for the conceptual row identifying a PW within this table."
"This value indicates the emulated service to be carried over this PW. "
"This object is set by the operator to indicate the protocol responsible for establishing this PW. '
manual' is used in all cases where no maintenance protocol (PW signaling) is used to set up the PW, i.e., configuration of entries in the PW tables including PW labels, etc., is done by setting the MIB fields manually. '
pwIdFecSignaling' is used in case of signaling with the Pwid FEC element with LDP signaling. '
genFecSignaling' is used in case of LDP signaling with the generalized FEC. '
l2tpControlProtocol' indicates the use of the L2TP control protocol. '
other' is used for other types of signaling."
"This object is set by the operator to indicate the PSN type.
Based on this object, the relevant PSN table's entry is created in the PSN specific MIB modules. "
"This object defines the relative priority of the PW during set up in a lowest to highest fashion, where 0 is the highest priority.
PWs with the same priority are treated with equal priority.
PWs that have not yet completed setup will report 'dormant' in the pwOperStatus.
This value is significant if there are competing resources among PWs and the implementation supports this feature.
Equal priority handling with competing resources is implementation specific.
This object MAY be changed at any time.
"This object defines the relative holding priority of the PW in a lowest to highest fashion, where 0 is the highest priority.
PWs with the same priority are treated equally.
This value is significant if there are competing resources among PWs and the implementation supports this feature.
Equal priority handling with competing resources is implementation specific.
This object MAY be changed only if the PW is not active."
"Denotes the address type of the peer node.
It should be set to 'unknown' if PE/PW maintenance protocol is not used and the address is unknown.
"This object contains the value of the peer node address of the PW/PE maintenance protocol entity.
This object SHOULD contain a value of all zeroes if not applicable (pwPeerAddrType is 'unknown')."
{ pwEntry 9 } pwAttachedPwIndex OBJECT
"If the PW is attached to another PW instead of a local native service, this item indicates the pwIndex of the attached PW.
Otherwise, this object MUST be set to zero.
Attachment to another PW will have no PW specific entry in any of the service MIB modules.
"This object indicates the ifIndex of the PW if the PW is represented in the ifTable.
Otherwise, it MUST be set to zero.
If the pwOwner object is 'pwIdFecSignaling' or 'l2tpControlProtocol', then this object is signaled in the outgoing PW ID field within the 'Virtual Circuit FEC Element'.
For other values of pwOwner, this object is not signaled and it MAY be set to zero.
For implementations that support the pwIndexMappingTable, a non zero value is RECOMMENDED, even if this identifier is not signaled.
This is so that reverse mappings can be provided by pwIndexMappingTable and pwPeerMappingTable.
It is therefore RECOMMENDED that the value of this pwID be unique (or if pwPeerAddrType is not 'unknown', at least [pwType, pwID, pwPeerAddrType, pwPeerAddr] is unique.)
" REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447."
Used in the Group ID field sent to the peer PW End Service within the maintenance protocol used for PW setup.
It SHOULD be set to zero if a maintenance protocol is not used."
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447."
"This object is an octet string representing the attachment group identifier (AGI) that this PW belongs to, which typically identifies the VPN ID.
Applicable if pwOwner equals 'genFecSignaling'.
"This object is an octet string representing the local forwarder attachment individual identifier (AII) to be used by this PW.
It is used as the Source AII (SAII) for outgoing signaling messages and the Target AII (TAII) in the incoming messages from the peer.
Applicable if pwOwner equal 'genFecSignaling'.
"This object is an octet string representing the remote forwarder attachment individual identifier (AII) to be used by this PW.
It is used as the TAII for outgoing signaling messages and the SAII in the incoming messages from the peer.
Applicable if pwOwner equals 'genFecSignaling'.
Some PW types mandate the use of a control word, and in such cases, the value configured for this object has no effect on the existence of the control word.
This object MAY be changed only if the PW is not active."
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol.', RFC 4447.
"If not equal to zero, the optional IfMtu object in the signaling protocol will be sent with this value, which represents the locally supported MTU size over the interface (or the virtual interface) associated with the PW.
This object MAY be changed only if the PW is not active."
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447.
A PW MAY be associated to an interface (or a virtual interface) in the ifTable of the node as part of the service configuration.
This object defines if the maintenance protocol will send the interface's name (ifAlias) as it appears in the ifTable.
If set to false, the optional element will not be sent.
This object MAY be changed only if the PW is not active."
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447, section 5.5."
"If a maintenance protocol is used, it indicates the capabilities the local node will advertise to the peer.
The operator MAY selectively assign a partial set of capabilities.
In case of manual configuration of the PW, the operator SHOULD set non conflicting options (for example, only a single type of Operations, Administration, and Management (OAM))
out of the available options in the implementation.
It is possible to change the value of this object when the PW is not active.
The agent MUST reject any attempt to set a capability that is not supported.
The default value MUST be the full set of local node capabilities.
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447."
"This object is obtained from the Group ID field as received via the maintenance protocol used for PW setup.
Value of zero will be reported if not used.
Value of 0xFFFFFFFF shall be used if the object is yet to be defined by the PW maintenance protocol."
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447."
If signaling is used for PW establishment, this object indicates the status of the control word negotiation.
For either signaling or manual configuration, it indicates if the control word (CW) is to be present for this PW.
The remote interface MTU as (optionally) received from the remote node via the maintenance protocol.
The object SHOULD report zero if the MTU is not available."
REFERENCE "Martini, et al, 'Pseudowire Setup and Maintenance using the Label Distribution Protocol', RFC 4447."
{ pwEntry 23 } pwRemoteIfString OBJECT
"Indicates the interface description string as received by the maintenance protocol.
It MUST be a NULL string if a maintenance protocol is not used or the value is not known yet.
"Indicates the capabilities as received from the peer.
"If set to a value other than zero, indicates that fragmentation is desired for this PW.
This object MAY be changed only if the PW is not active."
REFERENCE "Malis A., Townsley M., 'PWE3 Fragmentation and Reassembly', RFC 4623."
The status of the fragmentation based on the local configuration and the peer capabilities as received from the peer when a control protocol is used."
REFERENCE "Malis A., Townsley M., 'PWE3 Fragmentation and Reassembly', RFC 4623."
"The local configuration of Frame Check Sequence (FCS) retention for this PW.
FCS retention can be configured for PW types High Level Data Link Control (HDLC), Point to Point Protocol (PPP), and Ethernet only.
If the implementation does not support FCS retention, an error MUST be reported in pwFcsRetentionStatus.
This object MAY be changed only if the PW is not active."
REFERENCE "Malis A., et al., 'PWE3 Frame Check Sequence Retention', RFC 4720.
The status of the FCS retention negotiation process based on local configuration and the remote advertisement.
remoteIndicationUnknown set if a FEC has not been received from the remote.
remoteRequestFcsRetention indicates that the peer has requested FCS retention.
FCS retention will be used if the local node is capable and configured to use it for this PW.
fcsRetentionEnabled FCS retention is enabled (both peers were configured for FCS retention for signaled PW, or the local node is configured and capable of FCS retention for manually assigned PWs).
fcsRetentionDisabled FCS retention is disabled (not configured locally or not advertised by the peer).
localFcsRetentionCfgErr set if the local node has been configured for FCS retention but is not capable to support it.
fcsRetentionFcsSizeMismatch set if there is an FCS size mismatch between the local and the peer node.
The PW label used in the outbound direction (i.e., toward the PSN).
It might be set manually if pwOwner is 'manual'; otherwise, it is set automatically.
For MPLS, MPLS over IP, or MPLS over Generic Routing Encapsulation (GRE) PSN, it represents the 20 bit PW tag; for L2TP, it represents the 32 bit Session ID; and for IP PSN, it represents the destination UDP port number.
If the label is not yet known (signaling in process), the object SHOULD return a value of 0xFFFFFFFF.
For manual configuration, this object MAY be changed only if the PW is not active."
{ pwEntry 30 } pwInboundLabel OBJECT
The PW label used in the inbound direction (i.e., packets received from the PSN).
It may be set manually if pwOwner is 'manual'; otherwise, it is set automatically.
For MPLS, MPLS over IP, or MPLS over GRE PSN, it represents the 20 bit PW tag; for L2TP, it represents the 32 bit Session ID; and for IP PSN, it represents the source UDP port number.
If the label is not yet known (signaling in process), the object SHOULD return a value of 0xFFFFFFFF.
For manual configuration, this object MAY be changed only if the PW is not active."
{ pwEntry 31 } pwName  OBJECT
"The canonical name assigned to the PW.
This object MAY be changed at any time."
If there is no description, this object contains a zero  length string.
This object MAY be changed at any time."
"The value of sysUpTime at the time this PW was created."
"Specifies the time since last change of pwOperStatus to Up(1)."
"The value of sysUpTime at the time the PW entered its current operational state.
If the current state was entered prior to the last re initialization of the local network management subsystem, then this object contains a zero value."
"The desired operational status of this PW.
This object MAY be set at any time."
"This object indicates the operational status of the PW; it does not reflect the status of the Customer Edge (CE) bound interface.
It is set to down only if pwNotForwarding, psnFacingPwRxFault, or
psnFacingPwTxFault indications are set in pwLocalStatus or pwRemoteStatus.
It indicates 'lowerLayerDown' if the only reason for not being in the 'up' state is that either the outer tunnel or physical layer of the network side is in the 'down' state.
"Indicates the status of the PW in the local node.
The various indications in this object SHOULD be available independent of the ability of the local node to advertise them or the remote node to accept these status indications through the control protocol. "
notApplicable SHOULD be reported for a manually set PW, or if the local node is not capable of accepting the status notification object.
notYetKnown SHOULD be reported if the signaling protocol has not yet finished the process of capability determination.
remoteCapable and remoteNotcapable SHOULD be reported based on the initial signaling exchange that has determined the remote node capability. "
"Indicates the status of the PW as was advertised by the remote.
If the remote is not capable of advertising the status object, or the local node is not able to accept the status object through signaling, then the applicable bit is 'pwNotForwarding', which is set if the remote has sent label release or label withdraw for this PW. "
read only STATUS  current DESCRIPTION
"The number of seconds, including partial seconds, that have elapsed since the beginning of the current interval measurement period."
read only STATUS  current DESCRIPTION
For creating, modifying, and deleting this row.
This object MAY be changed at any time."
"This variable indicates the storage type for this object.
"This variable indicates if OAM is enabled for this PW.
It MAY be changed at any time.
"This variable indicates the AGI type if generalized FEC (129) is used for PW signaling or configuration.
It SHOULD return the value of zero otherwise.
"This object is the type of the local forwarder attachment individual identifier (AII) to be used by this PW if generalized FEC (129) is used for PW signaling or configuration."
"This object is the type of the remote forwarder attachment individual identifier (AII) to be used by this PW if generalized FEC (129) is used for PW signaling or configuration."
"This table provides per PW performance information for the current interval."
An entry in this table is created by the agent for every PW.
High capacity counter for number of packets received by the PW (from the PSN) in the current 15 minute interval.
This is the 64 bit version of pwPerfCurrentInPackets, if pwPerfCurrentInHCPackets is supported according to the rules spelled out in RFC 2863."
High capacity counter for number of bytes received by the PW (from the PSN) in the current 15 minute interval.
High capacity counter for number of packets forwarded by the PW (to the PSN) in the current 15 minute interval.
High capacity counter for number of bytes forwarded by the PW (to the PSN) in the current 15 minute interval.
The counter for number of packets received by the PW (from the PSN) in the current 15 minute interval.
{ pwPerfCurrentEntry 5 } pwPerfCurrentInBytes OBJECT TYPE
The counter for number of bytes received by the PW (from the PSN) in the current 15 minute interval.
It MUST be equal to the least significant 32 bits of pwPerfCurrentInHCBytes, if pwPerfCurrentInHCBytes is supported according to the rules spelled out in RFC 2863."
The counter for number of packets forwarded by the PW (to the PSN) in the current 15 minute interval.
It MUST be equal to the least significant 32 bits of pwPerfCurrentOutHCPackets, if pwPerfCurrentOutHCPackets is supported according to the rules spelled out in RFC 2863."
The counter for number of bytes forwarded by the PW (to the PSN) in the current 15 minute interval.
It MUST be equal to the least significant 32 bits of pwPerfCurrentOutHCBytes, if pwPerfCurrentOutHCBytes is supported according to the rules spelled out in RFC 2863."
SEQUENCE OF PwPerfIntervalEntry MAX ACCESS
"This table provides per PW performance information for each interval."
"An entry in this table is created by the agent for every PW.
"A number N, between 1 and 96, which identifies the interval for which the set of statistics is available.
The interval identified by 1 is the most recently completed 15 minute interval, and the interval identified by N is the interval immediately preceding the one identified by N 1.
The minimum range of N is 1 through 4.
The default range is 1 to 32.
The maximum range of N is 1 through 96."
"This variable indicates if the data for this interval is valid."
The duration of this interval in seconds."
High capacity counter for number of packets received by the PW (from the PSN) during the interval.
This is the 64 bit version of pwPerfIntervalInPackets, if pwPerfIntervalInHCPackets is supported according to the rules spelled out in RFC 2863."
High capacity counter for number of bytes received by the PW (from the PSN) during the interval.
High capacity counter for number of packets forwarded by the PW (to the PSN) during the interval.
High capacity counter for number of bytes forwarded by the PW (to the PSN) during the interval.
"This value represents the number of packets received by this PW during the interval.
It MUST be equal to the least significant 32 bits of pwPerfIntervalInHCPackets, if pwPerfIntervalInHCPackets is supported according to the rules spelled out in RFC 2863."
"This value represents the number of bytes received by this PW during the interval.
It MUST be equal to the least significant 32 bits of pwPerfIntervalInHCBytes, if pwPerfIntervalInHCBytes is supported according to the rules spelled out in RFC 2863."
"This value represents the number of packets sent by this PW during the interval.
It MUST be equal to the least significant 32 bits of pwPerfIntervalOutHCPackets, if pwPerfIntervalOutHCPackets is supported according to the rules spelled out in RFC 2863."
"This value represents the number of bytes sent by this PW during the interval.
It MUST be equal to the least significant 32 bits of pwPerfIntervalOutHCBytes, if pwPerfIntervalOutHCBytes is supported according to the rules spelled out in RFC 2863."
Performance 1 day Interval Table
"This table provides per PW performance information for the current day's measurement and the previous day's interval."
"An entry in this table is created by the agent for every PW.
current DESCRIPTION "History Data Interval number.
Interval 1 is the current day's measurement period, interval 2 is the most recent previous day, and interval 30 is 31 days ago.
"This variable indicates if the data for this interval is valid."
"The number of seconds in the 1 day interval over which the performance monitoring information is actually counted.
This value will be the same as the interval duration except in a situation where performance monitoring data could not be collected for any reason or where agent clock adjustments have been made."
{ pwPerf1DayIntervalEntry 3 } pwPerf1DayIntervalInHCPackets OBJECT TYPE SYNTAX
High capacity counter for the total number of packets received by the PW (from the PSN).
High capacity counter for the total number of packets forwarded by the PW (to the PSN).
High capacity counter for the total number of bytes forwarded by the PW (to the PSN).
Counter for number of errors at the PW processing level, for example, packets received with unknown PW label."
"This table enables the reverse mapping of the unique PWid parameters [peer IP, PW type, and PW ID] and the pwIndex.
The table is not applicable for PWs created manually or by using the generalized FEC."
An entry in this table MUST be created by the agent for every PW created by the pwTable for which pwOwner equals pwIdFecSignaling and pwID is not zero.
Implementers need to be aware that if the value of the pwIndexMappingPeerAddr (an OID) has more than 113 sub identifiers, then OIDs of column instances in this table will have more than 128 sub identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.
The PW type (indicates the service) of this PW."
The PW ID of this PW.
if the PW is configured manually."
The peer mapping table pwPeerMappingTable
"This table provides reverse mapping of the existing PW based on PW type and PW ID ordering.
This table is typically useful for the element management system (EMS) ordered query of existing PWs."
"An entry in this table is created by the agent for every PW entry in the pwTable.
Implementers need to be aware that if the value of the pwPeerMappingPeerAddr (an OID) has more than 113 sub identifiers, then OIDs of column instances in this table will have more than 128 sub identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.
The PW type (indicates the emulated service) of this PW."
The PW ID of this PW.
if the PW is configured manually."
End of the peer mapping table
End of the reverse mapping tables pwUpDownNotifEnable
"If this object is set to true(1), then it enables the emission of pwUp and pwDown notifications; otherwise, these notifications are not emitted.
REFERENCE "See also [RFC3413] for explanation that notifications are under the ultimate control of the MIB module in this document."
"If this object is set to true(1), then it enables the emission of pwDeleted notification; otherwise, this notification is not emitted.
REFERENCE "See also [RFC3413] for explanation that notifications are under the ultimate control of the MIB module in this document."
"This object defines the maximum number of PW notifications that can be emitted from the device per second."
"This table enables the reverse mapping of the unique PWid parameters [GroupAttachmentID, LocalAttachmentID, and PeerAttachmentID] and the pwIndex.
The table is only applicable for PW using the generalized FEC."
"An entry in this table MUST be created by the agent for every PW created by the pwTable for which pwOwner equals genFecSignaling.
Implementers need to be aware that if the combined value of pwGenFecIndexMappingAGI, pwGenFecIndexMappingLocalAII, and pwGenFecIndexMappingRemoteAII (OIDs) has more than 113 sub identifiers, then OIDs of column instances in this table will have more than 128 sub identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.
"This object is the type of the attachment group identifier (AGI) that this PW belongs to."
"This object is an octet string representing the attachment group identifier (AGI) that this PW belongs to, which typically identifies the VPN ID."
"This object is the type of the local forwarder attachment individual identifier (AII) to be used by this PW."
"This object is an octet string representing the local forwarder attachment individual identifier (AII) to be used by this PW.
It is used as the SAII for outgoing signaling messages and the TAII in the incoming messages from the peer."
"This object is the type of the remote forwarder attachment individual identifier (AII) to be used by this PW."
"This object is an octet string representing the peer forwarder attachment individual identifier (AII) to be used by this PW.
It is used as the TAII for outgoing signaling messages and the SAII in the incoming messages from the peer."
pwDown NOTIFICATION TYPE OBJECTS { pwOperStatus,  start of range
pwOperStatus   end of range } STATUS  current DESCRIPTION
"This notification is generated when the pwOperStatus object for one or more contiguous entries in the pwTable are about to enter the down(2) or lowerLayerDown(6) state from any other state, except for transition from the notPresent(5) state.
For the purpose of deciding when these notifications occur, the lowerLayerDown(6) state and the down(2) state are considered to be equivalent; i.e., there is no notification on transition from lowerLayerDown(6) into down(2), and there is a trap on transition from any other state except down(2) (and notPresent) into lowerLayerDown(6).
The included values of pwOperStatus MUST each be equal to down(2) or lowerLayerDown(6).
The two instances of pwOperStatus in this notification indicate the range of indexes that are affected.
Note that all the indexes of the two ends of the range can be derived from the instance identifiers of these two objects.
For cases where a contiguous range of cross connects have transitioned into the down(2) and lowerLayerDown(6) states at roughly the same time, the device SHOULD issue a single notification for each range of contiguous indexes in an effort to minimize the emission of a large number of notifications.
If a notification has to be issued for just a single cross connect entry, then the instance identifier (and values) of the two pwOperStatus objects MUST be identical."
{ pwNotifications  1 } pwUp NOTIFICATION TYPE OBJECTS { pwOperStatus,  start of range pwOperStatus   end of range } STATUS  current DESCRIPTION
"This notification is generated when the pwOperStatus object for one or more contiguous entries in the pwTable are about to enter the up(1) state from some other state except the notPresent(5) state and given that the pwDown notification been issued for these entries.
The included values of pwOperStatus MUST both be set equal to this new state (i.e., up(1)).
The two instances of pwOperStatus in this notification indicate the range of indexes that are affected.
Note that all the indexes of the two ends of the range can be derived from the instance identifiers of these two objects.
For cases where a contiguous range of cross connects have transitioned into the up(1) state at roughly the same time, the device SHOULD issue a single notification for each range of contiguous indexes in an effort to minimize the emission of a large number of notifications.
If a notification has to be issued for just a single cross connect entry, then the instance identifier (and values) of the two pwOperStatus objects MUST be identical."
"This notification is generated when the PW has been deleted, i.e., when the pwRowStatus has been set to destroy(6) or the PW has been deleted by a non MIB application or due to an auto discovery process. "
Compliance requirement for fully compliant implementations
pwModuleFullCompliance MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for agents that provide full support for the PW MIB module.
Such devices can then be monitored and configured using this MIB module."
MODULE    this module MANDATORY GROUPS { pwBasicGroup, pwPerformanceGeneralGroup } GROUP pwNotificationGroup DESCRIPTION "This group is only mandatory for implementations that can efficiently implement the notifications contained in this group. "
This group is only mandatory for implementations that support the PW ID FEC. "
This group is only mandatory for implementations that support the generalized PW FEC. "
This group is only mandatory for implementations that support FCS retention."
This group is only mandatory for implementations that support PW fragmentation. "
This group is only mandatory for implementations that support PW status notification. "
This group is only mandatory for implementations where the pwIndex may be any arbitrary value and the EMS would require retrieval of the next free index."
This group is only mandatory for implementations that support the controlling the PW setup and holding priority."
This group is only mandatory for implementations that support attachment of two PWs (PW stitching)."
This group is only mandatory for implementations that support PW performance gathering in 1 day intervals."
This group is only mandatory for implementations that support PW performance gathering in 15  minute intervals."
This group is only mandatory for implementations that support PW performance gathering in 15  minute intervals."
This group is only mandatory for implementations where at least one of the interval performance counters wraps around too quickly based on the criteria specified in RFC 2863 for high capacity counters."
This group is only mandatory for implementations that support reverse mapping of PW indexes to the pwIndex and the peer mapping table."
This group is only mandatory for implementations that support the PW signaling."
This group is only mandatory for implementations that support the PW notifications."
) } DESCRIPTION "Support of the value testing(3) is not required."
} DESCRIPTION "Support of the values
and dormant(4) is not required."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait is not required.
Support of notReady is not required for implementations that do not support signaling, or if it is guaranteed that the conceptual row has all the required information to create the PW when the row has been created by the agent or written by the operator."
MIN ACCESS   read only DESCRIPTION "Only unknown(0) and ipv4(1) are required.
only IPv4 MAY support read only access."
An implementation is only required to support 0, 4 address sizes."
pwStorageType MIN ACCESS   read only DESCRIPTION
"Write access is not required."
pwNotifRate MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for agents that provide read  only support for the PW MIB module.
Such devices can then be monitored but cannot be configured using this MIB module."
This group is only mandatory for implementations that can efficiently implement the notifications contained in this group."
This group is only mandatory for implementations that support the PW ID FEC. "
This group is only mandatory for implementations that support the generalized PW FEC. "
This group is only mandatory for implementations that support FCS retention."
This group is only mandatory for implementations that support PW fragmentation. "
This group is only mandatory for implementations that support PW status notification. "
This group is only mandatory for implementations where the pwIndex may be any arbitrary value and the EMS would require retrieval of the next free index."
This group is only mandatory for implementations that support the controlling the PW setup and holding priority."
This group is only mandatory for implementations that support attachment of two PWs (PW stitching)."
This group is only mandatory for implementations that support PW performance gathering in 1 day intervals."
This group is only mandatory for implementations that support PW performance gathering in 15  minute intervals."
This group is only mandatory for implementations that support PW performance gathering in 15  minute intervals."
This group is only mandatory for implementations where at least one of the interval performance counters wraps around too quickly based on the criteria specified in RFC 2863 for high capacity counters."
This group is only mandatory for implementations that support reverse mapping of PW indexes to the pwIndex and the peer mapping table."
This group is only mandatory for implementations that support the PW signaling."
This group is only mandatory for implementations that support the PW notifications."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required.
Only unknown(0) and ipv4(1) are required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required.
An implementation is only required to support 0, 4 address sizes."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
"Write access is not required."
"Write access is not required."
"Write access is not required."
pwRemoteAttachmentID MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required.
The support of value testing(3) is not required."
The support of the values testing(3) and dormant(4) is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
pwStorageType MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
pwNotifRate MIN ACCESS   read only DESCRIPTION
"Write access is not required."
OBJECT GROUP OBJECTS { pwType, pwOwner, pwPsnType, pwIfIndex, pwCwPreference, pwLocalIfMtu, pwOutboundLabel, pwInboundLabel, pwName, pwDescr, pwCreateTime, pwUpTime, pwLastChange, pwAdminStatus, pwOperStatus, pwLocalStatus, pwRowStatus, pwStorageType, pwOamEnable } STATUS
current DESCRIPTION "Collection of objects that are required in all implementations that support the PW MIB module."
current DESCRIPTION "Collection of objects required for PW ID configuration and signaling."
GROUP OBJECTS { pwGroupAttachmentID, pwLocalAttachmentID, pwRemoteAttachmentID, pwGenAGIType, pwGenLocalAIIType, pwGenRemoteAIIType } STATUS
current DESCRIPTION "Collection of objects required for generalized FEC configuration and signaling."
GROUP OBJECTS { pwFcsRetentionCfg, pwFcsRetentionStatus } STATUS
current DESCRIPTION "Collection of objects required for FCS retention configuration and signaling."
GROUP OBJECTS { pwFragmentCfgSize, pwRmtFragCapability } STATUS
current DESCRIPTION "Collection of objects required for fragmentation configuration and signaling."
GROUP OBJECTS { pwRemoteCapabilities, pwRemoteStatusCapable, pwRemoteStatus } STATUS
current DESCRIPTION "Collection of objects required for PW status configuration and signaling."
GROUP OBJECTS { pwSetUpPriority, pwHoldingPriority } STATUS
current DESCRIPTION "Collection of objects for controlling the PW setup and holding priority."
OBJECT GROUP OBJECTS { pwAttachedPwIndex } STATUS
current DESCRIPTION "Collection of objects for PW configuration as ifIndex."
current DESCRIPTION "Collection of general objects needed for managing the total running performance parameters."
current DESCRIPTION "Collection of objects needed for a PW running 1 day interval performance collection."
current DESCRIPTION "Collection of general objects needed for managing the interval performance parameters."
current DESCRIPTION "Collection of HC objects needed for PW performance collection in 15 minute intervals."
current DESCRIPTION "Collection of objects contained in the reverse mapping tables."
It is clear that this MIB module is potentially useful for monitoring PW capable PEs.
This MIB module can also be used for configuration of certain objects, and anything that can be configured can be incorrectly configured, with potentially disastrous results.
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
the pwTable contains objects to configure PW parameters on a Provider Edge (PE) device.
Unauthorized access to objects in this table could result in disruption of traffic on the network.
The objects pwUpDownNotifEnable and pwNotifRate control the reports from the network element to the EMS.
Unauthorized access to these objects could result in disruption of configuration and status change reporting, resulting mis view of the network conditions.
The use of stronger mechanisms such as SNMPv3 security should be considered where possible.
Specifically, SNMPv3 VACM and USM MUST be used with any v3 agent that implements this MIB module.
Administrators should consider whether read access to these objects should be allowed, since read access may be undesirable under certain circumstances.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:  the pwTable, pwPerfCurrentTable, pwPerfIntervalTable, pwPerf1DayIntervalTable, pwIndexMappingTable, pwPeerMappingTable, and pwGenFecIndexMappingTable collectively show the pseudowire connectivity topology and its performance characteristics.
If an administrator does not want to reveal this information, then these tables should be considered sensitive/vulnerable.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
ifType for PW IANA has assigned a value (246) for PW in the IANAifType MIB called ifPwType. 14.2.
MIB Modules OBJECT IDENTIFIER Values
A PW may appear as ifIndex in the ifTable, and therefore the pwStdMIB OBJECT IDENTIFIER has been assigned under the 'transmission' subtree, as the common practice in assigning OBJECT IDENTIFIERs for MIB modules representing entities in the ifTable.
All other MIB modules related to PW management SHOULD be assigned under the 'mib 2' subtree; individual requests will appear in the MIB module memo's IANA Considerations section.
IANA Considerations for PW STD MIB
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:
{ transmission 246 } 14.4.
IANA Considerations for IANA PWE3 MIB
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:
{ mib 2 174 }
