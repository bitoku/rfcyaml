- contents:
  - '              Graceful Restart Mechanism for BGP with MPLS

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   A mechanism for BGP that helps minimize the negative effects on\n
    \  routing caused by BGP restart has already been developed and is\n   described
    in a separate document (\"Graceful Restart Mechanism for\n   BGP\").  This document
    extends this mechanism to minimize the negative\n   effects on MPLS forwarding
    caused by the Label Switching Router's\n   (LSR's) control plane restart, and
    specifically by the restart of its\n   BGP component when BGP is used to carry
    MPLS labels and the LSR is\n   capable of preserving the MPLS forwarding state
    across the restart.\n   The mechanism described in this document is agnostic with
    respect to\n   the types of the addresses carried in the BGP Network Layer\n   Reachability
    Information (NLRI) field.  As such, it works in\n   conjunction with any of the
    address families that could be carried in\n   BGP (e.g., IPv4, IPv6, etc.).\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Specification of Requirements ..............................3\n   2.
    General Requirements ............................................3\n   3. Capability
    Advertisement ........................................4\n   4. Procedures for
    the Restarting LSR ...............................4\n      4.1. Case 1 .....................................................4\n
    \     4.2. Case 2 .....................................................5\n      4.3.
    Case 3 .....................................................5\n   5. Alternative
    Procedures for the Restarting LSR ...................6\n   6. Procedures for a
    Neighbor of a Restarting LSR ...................6\n   7. Comparison between Alternative
    Procedures for the\n      Restarting LSR ..................................................7\n
    \  8. Security Considerations .........................................8\n   9.
    Acknowledgments .................................................9\n   10. References
    .....................................................9\n      10.1. Normative
    References ......................................9\n      10.2. Informative References
    ....................................9\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In the case where a Label Switching Router (LSR) could preserve
    its\n   MPLS forwarding state across restart of its control plane, and\n   specifically
    its BGP component, and BGP is used to carry MPLS labels\n   (e.g., as specified
    in [RFC3107]), it may be desirable not to perturb\n   the LSPs going through that
    LSR (and specifically, the LSPs\n   established by BGP) after failure or restart
    of the BGP component of\n   the control plane.  In this document, we describe
    a mechanism that\n   allows this goal to be accomplished.  The mechanism described
    in this\n   document works in conjunction with the mechanism specified in\n   [RFC4724].
    \ The mechanism described in this document places no\n   restrictions on the types
    of addresses (address families) that it can\n   support.\n   The mechanism described
    in this document is applicable to all LSRs,\n   both those with the ability to
    preserve forwarding state during BGP\n   restart and those without it (although
    the latter need to implement\n   only a subset of this mechanism).  Supporting
    a subset of the\n   mechanism described here by the LSRs that cannot preserve
    their MPLS\n   forwarding state across the restart would not reduce the negative\n
    \  impact on MPLS traffic caused by their control plane restart.\n   However,
    the impact would be minimized if their neighbor(s) are\n   capable of preserving
    the forwarding state across the restart of\n   their control plane, and if they
    implement the mechanism described\n   here.  The subset includes all the procedures
    described in this\n   document, except the procedures in Sections 4.1, 4.2, 4.3,
    and 5.\n   For the sake of brevity, by \"MPLS forwarding state\" we mean one of\n
    \  the following mappings:\n      <incoming label -> (outgoing label, next hop)>\n
    \     <Forwarding Equivalence Class (FEC) -> (outgoing label, next hop)>\n      <incoming
    label -> label pop, next hop>\n      <incoming label, label pop>\n   In the context
    of this document, the forwarding state that is\n   referred to in [RFC4724] means
    MPLS forwarding state, as defined\n   above.  The term \"next hop\" refers to
    the next hop as advertised in\n   BGP.\n"
  - contents:
    - "1.1.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
      in RFC 2119 [RFC2119].\n"
    title: 1.1.  Specification of Requirements
  title: 1.  Introduction
- contents:
  - "2.  General Requirements\n   First of all, an LSR MUST implement the Graceful
    Restart Mechanism\n   for BGP, as specified in [RFC4724].  Second, the LSR SHOULD
    be\n   capable of preserving its MPLS forwarding state across the restart of\n
    \  its control plane (including the restart of BGP).  Third, for the\n   <Forwarding
    Equivalence Class (FEC) -> label> bindings distributed\n   via BGP, the LSR SHOULD
    be able either (a) to reconstruct the same\n   bindings as the LSR had prior to
    the restart (see Section 4), or (b)\n   to create new <FEC -> label> bindings
    after restart, while\n   temporarily maintaining MPLS forwarding state corresponding
    to both\n   the bindings prior to the restart, as well as to the newly created\n
    \  bindings (see Section 5).  Fourth, as long as the LSR retains the\n   MPLS
    forwarding state that the LSR preserved across the restart, the\n   labels from
    that state cannot be used to create new local label\n   bindings (but could be
    used to reconstruct the existing bindings, as\n   per procedures in Section 4).
    \ Finally, for each next hop, if the\n   next hop is reachable via a Label Switched
    Path (LSP), then the\n   restarting LSR MUST be able to preserve the MPLS forwarding
    state\n   associated with that LSP across the restart.\n   In the scenario where
    label binding on an LSR is created/maintained\n   not only by the BGP component
    of the control plane, but also by other\n   protocol components (e.g., LDP, RSVP-TE),
    and where the LSR supports\n   restart of the individual components of the control
    plane that\n   create/maintain label binding (e.g., restart of BGP, but no restart\n
    \  of LDP), the LSR MUST be able to preserve across the restart the\n   information
    about which protocol has assigned which labels.\n   After the LSR restarts, it
    MUST follow the procedures as specified in\n   [RFC4724].  In addition, if the
    LSR is able to preserve its MPLS\n   forwarding state across the restart, the
    LSR SHOULD advertise this to\n   its neighbors by appropriately setting the Flag
    for Address Family\n   field in the Graceful Restart Capability for all applicable
    AFI/SAFI\n   pairs.\n"
  title: 2.  General Requirements
- contents:
  - "3.  Capability Advertisement\n   An LSR that supports the mechanism described
    in this document\n   advertises this to its peer by using the Graceful Restart
    Capability,\n   as specified in [RFC4724].  The Subsequent Address Family Identifier\n
    \  (SAFI) in the advertised capability MUST indicate that the Network\n   Layer
    Reachability Information (NLRI) field carries not only\n   addressing Information,
    but also labels (see [RFC3107] for an example\n   of where NLRI carries labels).\n"
  title: 3.  Capability Advertisement
- contents:
  - "4.  Procedures for the Restarting LSR\n   Procedures in this section apply when
    a restarting LSR is able to\n   reconstruct the same <FEC -> label> bindings as
    the LSR had prior to\n   the restart.\n   The procedures described in this section
    are conceptual and do not\n   have to be implemented precisely as described, as
    long as the\n   implementations support the described functionality and their\n
    \  externally visible behavior is the same.\n   Once the LSR completes its route
    selection (as specified in Section\n   4.1, \"Procedures for the Restarting Speaker\",
    of [RFC4724]), then in\n   addition to the those procedures, the LSR performs
    one of the\n   following:\n"
  - contents:
    - "4.1.  Case 1\n   The following applies when (a) the best route selected by
      the LSR was\n   received with a label, (b) that label is not an Implicit NULL,
      and\n   (c) the LSR advertises this route with itself as the next hop.\n   In
      this case, the LSR searches its MPLS forwarding state (the one\n   preserved
      across the restart) for an entry with <outgoing label, next\n   hop> equal to
      the one in the received route.  If such an entry is\n   found, the LSR no longer
      marks the entry as stale.  In addition, if\n   the entry is of type <incoming
      label, (outgoing label, next hop)>\n   rather than <Forwarding Equivalence Class
      (FEC), (outgoing label,\n   next hop)>, the LSR uses the incoming label from
      the entry when\n   advertising the route to its neighbors.  If the found entry
      has no\n   incoming label, or if no such entry is found, the LSR allocates a
      new\n   label when advertising the route to its neighbors (assuming that\n   there
      are neighbors to which the LSR has to advertise the route with\n   a label).\n"
    title: 4.1.  Case 1
  - contents:
    - "4.2.  Case 2\n   The following applies when (a) the best route selected by
      the LSR was\n   received either without a label, with an Implicit NULL label,
      or the\n   route is originated by the LSR; (b) the LSR advertises this route\n
      \  with itself as the next hop; and (c) the LSR has to generate a (non-\n   Implicit
      NULL) label for the route.\n   In this case, the LSR searches its MPLS forwarding
      state for an entry\n   that indicates that the LSR has to perform label pop,
      and the next\n   hop equal to the next hop of the route in consideration.  If
      such an\n   entry is found, then the LSR uses the incoming label from the entry\n
      \  when advertising the route to its neighbors.  If no such entry is\n   found,
      the LSR allocates a new label when advertising the route to\n   its neighbors.\n
      \  The description in the above paragraph assumes that the LSR generates\n   the
      same label for all the routes with the same next hop.  If this is\n   not the
      case and the LSR generates a unique label per each such\n   route, then the
      LSR needs to preserve across the restart not only\n   <incoming label, (outgoing
      label, next hop)> mapping, but also the\n   Forwarding Equivalence Class (FEC)
      associated with this mapping.  In\n   such a case the LSR would search its MPLS
      forwarding state for an\n   entry that (a) indicates label pop (means no outgoing
      label), (b)\n   indicates that the next hop equal to the next hop of the route,
      and\n   (c) has the same FEC as the route.  If such an entry is found, then\n
      \  the LSR uses the incoming label from the entry when advertising the\n   route
      to its neighbors.  If no such entry is found, the LSR allocates\n   a new label
      when advertising the route to its neighbors.\n"
    title: 4.2.  Case 2
  - contents:
    - "4.3.  Case 3\n   The following applies when the LSR does not set BGP next hop
      to self.\n   In this case, the LSR, when advertising its best route for a\n
      \  particular NLRI, just uses the label that was received with that\n   route.
      \ And if the route was received with no label, the LSR\n   advertises the route
      with no label as well.  Either way, the LSR does\n   not allocate a label for
      that route.\n"
    title: 4.3.  Case 3
  title: 4.  Procedures for the Restarting LSR
- contents:
  - "5.  Alternative Procedures for the Restarting LSR\n   In this section, we describe
    an alternative to the procedures\n   described in Section \"Procedures for the
    restarting LSR\".\n   Procedures in this section apply when a restarting LSR does
    not\n   reconstruct the same <FEC -> label> bindings as the LSR had prior to\n
    \  the restart, but instead creates new <FEC -> label> bindings after\n   restart,
    while temporarily maintaining MPLS forwarding state\n   corresponding to both
    the bindings prior to the restart, as well as\n   to the newly created bindings.\n
    \  The procedures described in this section require that for the use by\n   BGP
    graceful restart, the LSR SHOULD have (at least) as many\n   unallocated labels
    as labels allocated for the <FEC -> label>\n   bindings distributed by BGP.  The
    latter forms the MPLS forwarding\n   state that the LSR managed to preserve across
    the restart.  The\n   former is used for allocating labels after the restart.\n
    \  To create (new) local label bindings after the restart, the LSR uses\n   unallocated
    labels (this is pretty much the normal procedure).\n   The LSR SHOULD retain the
    MPLS forwarding state that the LSR\n   preserved across the restart at least until
    the LSR sends an\n   End-of-RIB marker to all of its neighbors (by that time the
    LSR\n   already completed its route selection process, and also advertised\n   its
    Adj-RIB-Out to its neighbors).  The LSR MAY retain the forwarding\n   state even
    a bit longer (the amount of extra time MAY be controlled\n   by configuration
    on the LSR), so as to allow the neighbors to receive\n   and process the routes
    that have been advertised by the LSR.  After\n   that, the LSR SHOULD delete the
    MPLS forwarding state that it\n   preserved across the restart.\n   Note that
    while an LSR is in the process of restarting, the LSR may\n   have not one, but
    two local label bindings for a given BGP route --\n   one that was retained from
    prior to restart, and another that was\n   created after the restart.  Once the
    LSR completes its restart, the\n   former will be deleted.  However, both of these
    bindings would have\n   the same outgoing label (and the same next hop).\n"
  title: 5.  Alternative Procedures for the Restarting LSR
- contents:
  - "6.  Procedures for a Neighbor of a Restarting LSR\n   The neighbor of a restarting
    LSR (the receiving router terminology\n   used in [RFC4724]) follows the procedures
    specified in [RFC4724].  In\n   addition, the neighbor treats the MPLS labels
    received from the\n   restarting LSR the same way that it treats the routes received
    from\n   the restarting LSR (both prior and after the restart).\n   Replacing
    the stale routes by the routing updates received from the\n   restarting LSR involves
    replacing/updating the appropriate MPLS\n   labels.\n   In addition, if the Flags
    in the Graceful Restart Capability received\n   from the restarting LSR indicate
    that the LSR wasn't able to retain\n   its MPLS state across the restart, the
    neighbor SHOULD immediately\n   remove all the NLRI and the associated MPLS labels
    that it previously\n   acquired via BGP from the restarting LSR.\n   An LSR, once
    it creates a binding between a label and a Forwarding\n   Equivalence Class (FEC),
    SHOULD keep the value of the label in this\n   binding for as long as the LSR
    has a route to the FEC in the binding.\n   If the route to the FEC disappears
    and then re-appears again later,\n   then this may result in using a different
    label value, as when the\n   route re-appears, the LSR would create a new <label,
    FEC> binding.\n   To minimize the potential misrouting caused by the label change,
    when\n   creating a new <label, FEC> binding, the LSR SHOULD pick up the least\n
    \  recently used label.  Once an LSR releases a label, the LSR SHALL NOT\n   re-use
    this label for advertising a <label, FEC> binding to a\n   neighbor that supports
    graceful restart for at least the Restart\n   Time, as advertised by the neighbor
    to the LSR.  This rule SHALL\n   apply to any label release at any time.\n"
  title: 6.  Procedures for a Neighbor of a Restarting LSR
- contents:
  - "7.  Comparison between Alternative Procedures for the Restarting LSR\n   Procedures
    described in Section 4 involve more computational overhead\n   on the restarting
    router than do the procedures described in Section\n   5.\n   Procedures described
    in Section 5 require twice as many labels as\n   those described in Section 4.\n
    \  Procedures described in Section 4 cause fewer changes to the MPLS\n   forwarding
    state in the neighbors of the restarting router than the\n   procedures described
    in Section 5.\n   In principle, it is possible for an LSR to use procedures described\n
    \  in Section 4 for some AFI/SAFI(s) and procedures described in Section\n   5
    for other AFI/SAFI(s).\n"
  title: 7.  Comparison between Alternative Procedures for the Restarting LSR
- contents:
  - "8.  Security Considerations\n   The security considerations pertaining to the
    BGP protocol [RFC4271]\n   remain relevant.\n   In addition, the mechanism described
    here renders LSRs that implement\n   it vulnerable to additional denial-of-service
    attacks as follows:\n      An intruder may impersonate a BGP peer in order to
    force a failure\n      and reconnection of the TCP connection, where the intruder
    sets\n      the Forwarding State (F) bit (as defined in [RFC4724]) to 0 on\n      reconnection.
    \ This forces all labels received from the peer to be\n      released.\n      An
    intruder could intercept the traffic between BGP peers and\n      override the
    setting of the Forwarding State (F) bit to be set to\n      0.  This forces all
    labels received from the peer to be released.\n   All of these attacks may be
    countered by use of an authentication\n   scheme between BGP peers, such as the
    scheme outlined in [RFC2385].\n   As with BGP carrying labels, a security issue
    may exist if a BGP\n   implementation continues to use labels after expiration
    of the BGP\n   session that first caused them to be used.  This may arise if the\n
    \  upstream LSR detects the session failure after the downstream LSR has\n   released
    and re-used the label.  The problem is most obvious with the\n   platform-wide
    label space and could result in misrouting of data to\n   destinations other than
    those intended; and it is conceivable that\n   these behaviors may be deliberately
    exploited, either to obtain\n   services without authorization or to deny services
    to others.\n   In this document, the validity of the BGP session may be extended
    by\n   the Restart Time, and the session may be re-established in this\n   period.
    \ After the expiry of the Restart Time, the session must be\n   considered to
    have failed, and the same security issue applies as\n   described above.\n   However,
    the downstream LSR may declare the session as failed before\n   the expiration
    of its Restart Time.  This increases the period during\n   which the downstream
    LSR might reallocate the label while the\n   upstream LSR continues to transmit
    data using the old usage of the\n   label.  To reduce this issue, this document
    requires that labels are\n   not re-used until at least the Restart Time.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Acknowledgments\n   We would like to thank Chaitanya Kodeboyina and Loa Andersson
    for\n   their review and comments.  The approach described in Section 5 is\n   based
    on the idea suggested by Manoj Leelanivas.\n"
  title: 9.  Acknowledgments
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use
      in RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2385] Heffernan, A., \"Protection of BGP Sessions via the TCP
      MD5\n             Signature Option\", RFC 2385, August 1998.\n   [RFC4271] Rekhter,
      Y., Li, T., and S. Hares, \"A Border Gateway\n             Protocol 4 (BGP-4)\",
      RFC 4271, January 2006.\n   [RFC4724] Sangli, S., Chen, E., Fernando, R., Scudder,
      J., and Y.\n             Rekhter, \"Graceful Restart Mechanism for BGP\", RFC
      4724,\n             January 2007.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3107] Rekhter, Y. and E. Rosen, \"Carrying
      Label Information in\n             BGP-4\", RFC 3107, May 2001.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Authors' Addresses\n   Yakov Rekhter\n   Juniper Networks\n   1194 N.Mathilda
    Ave\n   Sunnyvale, CA 94089\n   EMail: yakov@juniper.net\n   Rahul Aggarwal\n
    \  Juniper Networks\n   1194 N.Mathilda Ave\n   Sunnyvale, CA 94089\n   EMail:
    rahul@juniper.net\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
