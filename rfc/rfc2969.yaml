- title: __initial_text__
  contents:
  - '        Wide Area Directory Deployment - Experiences from TISDAG

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The TISDAG (Technical Infrastructure for Swedish Directory Access\n\
    \   Gateway) project provided valuable insight into the current reality\n   of\
    \ deploying a wide-scale directory service.  This document\n   catalogues some\
    \ of the experiences gained in developing the necessary\n   infrastructure for\
    \ a national (i.e., multi-organizational) directory\n   service and pilot deployment\
    \ of the service in an environment with\n   off-the-shelf directory service products.\
    \  A perspective on the\n   project's relationship to other directory deployment\
    \ projects is\n   provided, along with some proposals for future extensions of\
    \ the work\n   (larger scale deployment, other application areas).\n   These are\
    \ our own observations, based on work done and general\n   project discussions.\
    \  No doubt, other project participants have their\n   own list of project experiences;\
    \ we don't claim this document is\n   exhaustive!\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.0 Introduction ................................................\
    \  2\n   1.1 Overview of the TISDAG project ..............................  2\n\
    \   1.2 Organization of this document ...............................  3\n   2.0\
    \ The TISDAG project itself ...................................  3\n   2.1  TISDAG\
    \ overview ............................................  3\n   2.2 Some successes\
    \ ..............................................  4\n   2.3 Some surprises ..............................................\
    \  5\n   2.3.1 LDAP objectclasses and the \"o\" attribute .................. \
    \ 6\n   2.3.1 The Tagged Index Object ...................................  6\n\
    \   2.3.3  Handling Status Messages .................................  7\n   2.3.4\
    \  Deployment with Commercial Software ......................  7\n   2.4 Some\
    \ observations ...........................................  7\n   2.4.1 Participation\
    \ of the WDSPs ................................  7\n   2.4.2 Index Objects and\
    \ Referral Index size .....................  8\n   2.4.3 Index Object and Query\
    \ Performance ........................  8\n   2.5 Some evolutions .............................................\
    \  9\n   3.0 Related Projects ............................................ 11\n\
    \   3.1 The Norwegian Directory of Directories (NDD) ................ 11\n   3.2\
    \ DESIRE Directory Services ................................... 11\n   4.0 Some\
    \ Directions for TISDAG Next Steps ....................... 12\n   4.1 Security\
    \ support ............................................ 12\n   4.2 WDSPs attributes\
    \ and schemas  ............................... 12\n   5.0 Some conclusions ............................................\
    \ 13\n   6.0 Security Considerations ..................................... 13\n\
    \   7.0 Acknowledgements ............................................ 13\n   8.0\
    \ Authors' Addresses .......................................... 13\n   9.0 References\
    \ .................................................. 14\n   Appendix -- Specific\
    \ Software Issues and Deployment Experiences.. 15\n   Full Copyright Statement\
    \ ........................................ 18\n"
- title: 1.0 Introduction
  contents:
  - '1.0 Introduction

    '
- title: 1.1 Overview of the TISDAG project
  contents:
  - "1.1 Overview of the TISDAG project\n   As described in more detail in [TISDAG],\
    \ the original intention of\n   the TISDAG project was to provide the infrastructure\
    \ for a national\n   whitepages directory service.  To be effective, such an\n\
    \   infrastructure needed to address the concrete realities of end-users'\n  \
    \ existing client software, as well as the needs of information\n   providers\
    \ (\"Whitepages Directory Service Providers\" -- WDSPs).  These\n   realities\
    \ include the existence of multiple protocols (so-called\n   directory service\
    \ access protocols, as well as more general Internet\n   application protocols\
    \ such as HTTP and SMTP).  The project was also\n   sensitive to the fact that\
    \ WDSPs have many good reasons for being\n   reluctant to relinquish copies of\
    \ their subscribers' personal data.\n"
- title: 1.2 Organization of this document
  contents:
  - "1.2 Organization of this document\n   In an effort to communicate the experiences\
    \ with this project, from\n   conception through implementation and pilot deployment,\
    \ this document\n   is divided into 3 major sections.  The first section reviews\
    \ specific\n   lessons learned by the authors through the TISDAG project and\n\
    \   implementation of one conformant system.  Next, some perspectives are\n  \
    \ offered on the relationship of the TISDAG work to other large-scale\n   directory\
    \ projects that are currently on-going, to give a sense of\n   how these efforts\
    \ might possibly interact.  Finally, some preliminary\n   thoughts on applying\
    \ the DAG system to other applications and\n   deployment environments are outlined.\
    \  Further suggestions for\n   deploying networked DAG servers (meshes) can be\
    \ found in [DAG-Mesh].\n   More discussion of useful development of architectural\
    \ principles is\n   provided in a separate document ([DAG++]).\n"
- title: 2.0 The TISDAG project itself
  contents:
  - '2.0 The TISDAG project itself

    '
- title: 2.1  TISDAG overview
  contents:
  - "2.1  TISDAG overview\n   Briefly, the technical infrastructure proposed for the\
    \ TISDAG project\n   (see [TISDAG] for the complete overview and technical specification)\n\
    \   provides end-user client software with connection points to perform\n   basic\
    \ whitepages queries.  Different connection points are provided\n   for the various\
    \ protocols end-users are likely to wish to use to\n   access the information\
    \ -- WWW (http), e-mail (SMTP), Whois++, LDAPv2\n   and LDAPv3.  For each client,\
    \ a transaction will be carried out\n   within the bounds of the protocol's syntax\
    \ and semantics.  However,\n   since the TISDAG system does not maintain a replicated\
    \ copy of all\n   whitepages information, but rather an index over the data that\
    \ allows\n   redirection (referrals) to services that are likely to contain\n\
    \   responses that match the client's query, a fair bit of background\n   work\
    \ must be done by the DAG system in order to fulfill the client's\n   query.\n\
    \   The first, and most important step, is for the system to make a query\n  \
    \ against the DAG Referral Index -- a server containing index\n   information\
    \ (obtained by the Common Indexing Protocol (see [CIP1,\n   CIP2, CIP3]) in the\
    \ Tagged Index Object format (see [TIO]).  This\n   index contains sufficient\
    \ information to indicate which of the many\n   participating WDSPs should be\
    \ contacted to complete the query.\n   Wherever possible, these referrals are\
    \ passed back to the querying\n   client so that it can contact relevant WDSPs\
    \ directly.  This\n   minimizes the amount of work done by the DAG system itself,\
    \ and\n   allows WDSPs greater visibility (which is an incentive for\n   participating\
    \ in the system).  Protocols which support referrals\n   natively include Whois++\
    \ and LDAPv3 -- although these may only be\n   referred to servers of the same\
    \ protocol.\n   Since many protocols do not support referrals (e.g., LDAPv2),\
    \ and in\n   order to address referrals to servers using a protocol other than\
    \ the\n   calling client's own, a secondary step of \"query chaining\" is\n  \
    \ provided to pursue these extra referrals within the DAG system\n   itself. \
    \ For example, if an LDAPv2 client connects to the system, a\n   query is made\
    \ against the Referral Index to determine which WDSPs may\n   have answers for\
    \ the query, and then resources within the DAG system\n   are used to pursue the\
    \ query at the designated WDSPs' servers.  The\n   results from these different\
    \ services are packaged into a single\n   response set for the client that made\
    \ the query.\n   The architecture that was developed in order to support the required\n\
    \   functionality separated the system into distinct components to handle\n  \
    \ incoming queries from client software (\"Client Access Points\", or\n   CAPs),\
    \ a referral index (RI) to maintain an index over the collected\n   whitepages\
    \ information and provide referrals, based on actual data\n   queries, to WDSPs\
    \ that might have relevant information, and finally\n   components that mediate\
    \ access to WDSP whitepages servers to perform\n   queries and retrieve results\
    \ for the client's query (\"Service Access\n   Points\", or SAPs).  Several CAPs\
    \ and SAPs exist within the system --\n   at least one for every protocol supported\
    \ for incoming queries and\n   WDSP servers, respectively.\n   Designed to be\
    \ implementable as separate programs, these components\n   interact with each\
    \ other through the use of an internal protocol --\n   the DAG/IP.  Pragmatically,\
    \ the use of the protocol means that\n   different components can reside on different\
    \ machines, for reasons of\n   load-balancing and performance enhancement.  It\
    \ also acts as a\n   \"common language\" for the CAPs, SAPs and RI to express\
    \ queries and\n   receive results.\n   This outlines the planned or ideal behaviour\
    \ of the system; once\n   designed, a pilot phase was started for the project\
    \ to compare\n   reality against expectations.  Two independent implementations\
    \ of the\n   software were created, and a test deployment was set up within the\n\
    \   Swedish University Network (SUNET).  More detail on the project and\n   its\
    \ current status can be found at http://tisdag.sunet.se/.\n   The rest of this\
    \ section outlines some conclusions drawn from making\n   a reality of the proposed\
    \ architecture -- both successes and\n   surprises.\n"
- title: 2.2 Some successes
  contents:
  - "2.2 Some successes\n   Implementation and pilot deployment of software meeting\
    \ the TISDAG\n   technical specification did demonstrate some important successes\
    \ of\n   the approach.\n   Most notably, the system works pretty much as expected\
    \ (see\n   exceptions below) to provide transparent middleware for whitepages\n\
    \   directory services.  That is, client software and WDSP servers were\n   minimally\
    \ affected -- from the point of view of behaviour and\n   configuration, the DAG\
    \ system looked like a server to clients, and a\n   client to servers.\n   The\
    \ goal of the TISDAG project, operationally, was to be able to\n   provide responses\
    \ to end-user queries in reasonable response times\n   (although not \"an addressbook\
    \ replacement\").  The prototype systems\n   demonstrated some success in achieving\
    \ responses within 10 seconds,\n   at least with the limited testbed of a configuration\
    \ with 10 WDSP's\n   providing directory service information.  More observations\
    \ on system\n   performance are provided below.\n   The DAG system does demonstrate\
    \ that it is possible to build\n   referral-level services at a national level\
    \ (although the deployment\n   has yet to prove conclusively that it can, in its\
    \ current\n   formulation, operate as a transparent query-fulfillment proxy\n\
    \   service).\n   The success of the implementation demonstrated that it is possible,\n\
    \   in some sense, to do (semantic) protocol mapping with N+M complexity\n   instead\
    \ of NxM mappings.  That is, protocol translations had to be\n   defined for \"\
    N\" allowable end-user query access protocols to/from the\n   DAG/IP, and \"M\"\
    \ supported WDSP server protocols, instead of requiring\n   each of the N input\
    \ components to individually map to the M output\n   protocols.\n   As a correlated\
    \ issue, the prototype system demonstrated some\n   successes with mapping between\
    \ schema representations in the\n   different protocol paradigms -- in a large\
    \ part because system's\n   schemas were kept simple and focused on the minimal\
    \ needs to support\n   the base service requirements.\n"
- title: 2.3 Some surprises
  contents:
  - "2.3 Some surprises\n   Over the span of a dozen months from the first \"final\"\
    \ document of\n   the specification through the implementation and first deployment\
    \ of\n   the software system, a few surprises did surface.  These fell into\n\
    \   two categories:  those that surfaced when the theoretical\n   specification\
    \ was put into practice, and others that became apparent\n   when the resulting\
    \ system was put into operation with commercial\n   software clients and servers.\n\
    \   More detail is provided in the Appendix concerning specific software\n   issues\
    \ encountered, but some of the larger issues that surfaced\n   during the implementation\
    \ phase are describe below.\n"
- title: 2.3.1 LDAP objectclasses and the "o" attribute
  contents:
  - "2.3.1 LDAP objectclasses and the \"o\" attribute\n   It came as a considerable\
    \ surprise, some months into the project,\n   that none of the \"standard\" LDAP\
    \ person objectclasses   included\n   organization (\"o\") as an attribute. The\
    \ basic assumption seems to be\n   that \"o\" will be part of the distinguished\
    \ name for an entry, and\n   therefore there is little (if any) cause to list\
    \ it out separately.\n   This does make it trickier to store information for people\
    \ across\n   multiple organizations (e.g., at an ISP's directory server) and use\n\
    \   the organization name in query refinement. (Roland Hedberg caught\n   this\
    \ issue, and has flagged it to the authors of the \"inetorgperson\"\n   objectclass\
    \ document).\n"
- title: 2.3.1 The Tagged Index Object
  contents:
  - "2.3.1 The Tagged Index Object\n   The Tagged Index Object (\"TIO\"), used to\
    \ carry indexes of WDSP\n   information to the RI, is designed to have record\
    \ (entry) tags to\n   reduce the number of false positive referrals generated\
    \ when doing a\n   search in the RI.  One of the features of the first index object\n\
    \   type, Whois++'s centroid (see [centroid]) was the fact that the index\n  \
    \ object size did not grow linearly with the size of data indexed --\n   i.e.,\
    \ at some point the growth of the index object slowed as compared\n   to that\
    \ of the underlying data set.  At first glance, this also seems\n   to be the\
    \ case for the TIO.  However, as the index grows in size the\n   compression factor\
    \ of the TIO may not achieve the same efficiency as\n   the centroids.  One reason\
    \ for this is that the tagged lists can get\n   quite long, depending on the ordering\
    \ of the assignment of tags to\n   the underlying data.  That is, the tagging\
    \ as defined allows for a\n   compressed expression of tag \"ranges\" -- e.g.,\
    \ \"1-500\" instead of\n   \"1,2,3,[...]500\".  Thus, it might be interesting\
    \ to explore an\n   optimal \"sorting\" of underlying data, before applying tags,\
    \ in order\n   to arrange the most common tokens have consecutive tags (maximal\n\
    \   compression of the tag lists).  It's not clear if this can be done\n   efficiently\
    \ over the entire set of records, attributes, and tokens,\n   but it would bear\
    \ some investigation, to produce the most compressed\n   TIO for transmission.\n\
    \   Additionally, in order to make (time) efficient use of the tags in\n   the\
    \ RI in practice, it is almost necessary to \"reinflate\" the index\n   object\
    \ to be able to do joins on tag lists associated with tokens\n   that match. \
    \ Alternatively, the compressed tag list can be stored,\n   and there is an additional\
    \ cost associated with comparing the tag\n   lists for matching tokens -- i.e.,\
    \ list comparison operations done\n   outside the scope of a base database management\
    \ system.  There was an\n   unexpected tradeoff to be made.\n"
- title: 2.3.3  Handling Status Messages
  contents:
  - "2.3.3  Handling Status Messages\n   Mapping of status messages from multiple\
    \ sub-transactions into a\n   single status communication for the end-user client\
    \ software became\n   something of a challenge.  When chaining a query to multiple\
    \ WDSPs\n   (though the SAPs), it is not uncommon for at least one of the WDSP\n\
    \   servers to return an error code or be unavailable.  If one WDSP\n   cannot\
    \ be reached, out of several referrals, should the client\n   software be given\
    \ the impression that the query was completed\n   successfully, or not?  Most\
    \ client protocol error handling models are\n   not sophisticated enough to make\
    \ this level of distinction clear.\n"
- title: 2.3.4  Deployment with Commercial Software
  contents:
  - "2.3.4  Deployment with Commercial Software\n   When it then was time to test\
    \ the resulting software with standard\n   commercial client and server software,\
    \ a few more surprises came to\n   light (primarily in terms of these softwares'\
    \ expected worldview and\n   occasional implementation shortcuts).  Again, more\
    \ detail is provided\n   in the Appendix, but highlights included client software\
    \ that could\n   only handle a very small subset of a protocol's defined status\n\
    \   message lexicon (e.g., 2 system messages supported), and client\n   software\
    \ that automatically appended additional terms to a query\n   specified by the\
    \ user (e.g., adding \"or email=<what the user typed in\n   to the query>\").\n"
- title: 2.4 Some observations
  contents:
  - '2.4 Some observations

    '
- title: 2.4.1 Participation of the WDSPs
  contents:
  - "2.4.1 Participation of the WDSPs\n   One of the things that came to light was\
    \ that the nature of the index\n   object generated by the WDSPs has an important\
    \ impact on performance\n   -- both in terms of integrating the index object into\
    \ the Referral\n   Index, and in terms of efficiency of handling queries.  A proposal\n\
    \   might be either to define more clearly how the WDSPs should generate\n   the\
    \ CIP index object (currently left to their discretion), or to\n   alert individual\
    \ WDSPs when their index objects are considered\n   substandard.\n   On another\
    \ front, when chaining referrals to WDSP servers, some\n   servers perform more\
    \ efficiently than others, affecting the overall\n   response time of the DAG\
    \ system.  From a service point of view, it\n   should also be possible to suggest\
    \ to WDSP's that are consistently\n   slow (longer than some selected response\
    \ time) that they are\n   substandard.\n"
- title: 2.4.2 Index Objects and Referral Index size
  contents:
  - "2.4.2 Index Objects and Referral Index size\n   As described in more detail [complex],\
    \ there are many factors that\n   can influence the growth factor of index objects\
    \ (as more data is\n   indexed).  That work dealt specifically with tokenized\
    \ data for\n   Whois++ centroids, and is not immediately generalizable to all\
    \ forms\n   of the Tagged Index Object.  However, the particular structure of\
    \ the\n   TIO used for the TISDAG project is similar enough in structure to a\n\
    \   centroid that the same \"order of magnitude\" and growth\n   characteristics\
    \ are applicable.\n   Factors that affects the size of the data (\"number of entries\"\
    ):\n       .  Number of generated tokens\n          The number of tokens generated\
    \ from the directory data depends\n          on what is tokenized. If data is\
    \ tokenized on names and\n          addresses (i.e. not unique data like phone\
    \ numbers) a rough\n          estimation is that the number_of_tokens = 0.2 *\n\
    \          number_of_data_records. The growth is linear in the span from\n   \
    \       a few thousand to at least 1.2 million records. The growth\n         \
    \ should then level off since the sets of names and addresses\n          are finite,\
    \ but the current tests have not shown a break\n          point.\n          If\
    \ data is tokenized on something that is unique, e.g. phone\n          numbers,\
    \ then a rough estimation is that the number_of_tokens\n          = number_of_data_records.\
    \ Note that it is possible to tokenize\n          in different ways, for example\
    \ divide the phone numbers in\n          parts. This would result in fewer tokens.\n\
    \       .  Number of directories\n          Since the tokens are generated individually\
    \ for each\n          directory, the data size depends on the number of directories.\n\
    \          10 directories with 100.000 records will generate the same\n      \
    \    amount of tokens as one directory with 1.000.000 records.\n"
- title: 2.4.3 Index Object and Query Performance
  contents:
  - "2.4.3 Index Object and Query Performance\n   Factors that affects the performance\
    \ (\"queries/second\"):\n       .  Type of query (exact, substring, etc.)\n  \
    \        A 'substring' query is slower than an 'exact' query due to:\n       \
    \   1) somewhat slower look-up in the internal DAG database than\n           \
    \  an exact query.\n          2) Mostly, a larger amount of data is fetched from\
    \ the\n             internal DAG database due to more hits, which generates\n\
    \             more index processing.\n          3) Substring queries are sent\
    \ to the directory servers which\n             also results in more hits and more\
    \ data fetched. The\n             directory servers may also be more or less effective\
    \ in\n             handling substring queries.\n       .  Number of search attributes\n\
    \          A query with one or few attributes will most of the time\n        \
    \  result in many hits, which results in a lot of data, both\n          internally\
    \ in DAG and from the directory servers. On the other\n          hand, a query\
    \ with many attributes will result in a somewhat\n          slower look-up in\
    \ the internal DAG database.\n       .  Number of directories\n          A larger\
    \ number of directories may result in many referrals,\n          but it depends\
    \ on the query. A simple query will generate a\n          lot of referrals, which\
    \ means a lot of data from the\n          directories has to be fetched. It will\
    \ also result in a\n          somewhat slower look-up in the internal DAG database.\n\
    \       .  Number of chained referrals\n          Queries that are not chained\
    \ are faster, since the result data\n          does not have to be sent through\
    \ the DAG system. Chained\n          queries to several directories can be processed\
    \ in parallel in\n          the SAPs, but all data has to be processed in the\
    \ CAP before\n          sent to the client.\n       .  Response time in the directory\
    \ servers\n          The response time from the directory servers are of course\n\
    \          critical. The total response time for DAG is never faster than\n  \
    \        the slowest involved directory server.\n       .  Number of tokens (size\
    \ of Tagged Index Objects)\n          The number of tokens has little impact on\
    \ the look-up time in\n          the internal DAG database.\n"
- title: 2.5 Some evolutions
  contents:
  - "2.5 Some evolutions\n   To date, the TISDAG project has been \"alive\" for just\
    \ over two years.\n   During that time, there have been a number of evolutions\
    \ -- in terms\n   of technologies and ideas outside the project (e.g., user and\
    \ service\n   provider expectations, deployment of related software, etc) as well\n\
    \   as goals and understanding within the scope of the project.\n   Chief among\
    \ these last is the fact that the project set out to\n   primarily fulfill the\
    \ role of a national referral service, and\n   gradually evolved towards becoming\
    \ more of a transparent protocol\n   proxy service, fulfilling client queries\
    \ as completely as possible,\n   within the client protocol's semantics.  This\
    \ evolution was probably\n   provoked by a number of reasons -- existing client\
    \ & server software\n   has a narrower range of accepted (expected) behaviour\
    \ than their\n   protocol specs may describe, once the technology was there for\
    \ some\n   proxying, going all the way seemed to be within reach, etc.\n   >From\
    \ the point of view of providing a national whitepages service,\n   this is a\
    \ very positive evolution.  However, it did place some\n   strains on the original\
    \ system architecture, for which some\n   adjustments have been proposed (more\
    \ detail below).  What is less\n   clear is the impact this evolution will have\
    \ on the flexibility of\n   the system architecture -- in terms of addressing\
    \ other applications,\n   different protocols (and protocol paradigms), etc. \
    \ That is, the\n   original intention of the system was to very simply fulfill\
    \ an\n   unsophisticated role -- \"find things that sort of match the input\n\
    \   query and let the client itself determine if the match is close\n   enough\"\
    .  As the requirements become more sophisticated, the\n   simplicity of the system\
    \ is impacted, and perhaps more brittle.\n   (Some proposals for avoiding this\
    \ are outlined in [DAG++], which\n   attempts to return to the underlying principles\
    \ and propose steps\n   forward at that level).\n   In terms of impact within\
    \ the TISDAG project, this evolution lead to\n   the following technical adjustments:\n\
    \       .  The latest version of the technical specification makes a\n       \
    \   distinction (in the internal protocol grammar) between queries\n         \
    \ directed at the Referral Index, and those passed to SAPs to\n          fulfill\
    \ a query.  This distinction keeps the query-routing\n          queries simple,\
    \ but allows more sophistication in expressing a\n          query designed to\
    \ fulfill the client's original semantic\n          expression.\n       .  The\
    \ additional constraints in the SAP query language is still\n          not enough\
    \ to allow the internal protocol to express very\n          sophisticated queries.\
    \  Originally intended only for query-\n          routing queries, the DAG/IP\
    \ expects all queries to be token-\n          based (whereas LDAP queries are\
    \ phrase-oriented).  This means\n          that SAPs have to do a good deal of\
    \ \"post-pruning\" of WDSP\n          result sets to match the DAG/IP query sent\
    \ by a CAP for query\n          fulfillment.  And, CAPs must in turn do more post-pruning\
    \ to\n          match the DAG/IP results (from the SAPs) to the original query\n\
    \          semantics.\n   The real strength of the TISDAG project was that it\
    \ separated the\n   technical framework needed to support the service from the\n\
    \   configuration required in order to support a particular application\n   or\
    \ service -- query & schema mapping, configuration for protocols,\n   etc.  Future\
    \ improvements should focus on evolving that framework,\n   maintaining the separation\
    \ from the specific applications, services,\n   and protocols that may use it.\n"
- title: 3.0 Related Projects
  contents:
  - "3.0 Related Projects\n   The TISDAG project is not alone in attempting to solve\
    \ the problems\n   of providing coordinated access to resources managed by multiple,\n\
    \   disparate services.\n"
- title: 3.1 The Norwegian Directory of Directories (NDD)
  contents:
  - "3.1 The Norwegian Directory of Directories (NDD)\n   Described in [NDD], the\
    \ Norwegian Directory of Directories project\n   also aims to provide necessary\
    \ infrastructure for a national\n   directory service.  It assumes LDAP (v2 or\
    \ v3) accessibility of WDSP\n   information (provided by the WDSP itself, or through\
    \ other\n   arrangements), and aims to resolve some of the trickier issues\n \
    \  associated with hooking together already-operational LDAP servers\n   into\
    \ a coherent network:  uniform distinguished naming scheme, and\n   content-based\
    \ referrals.  It also addresses some of the pragmatic\n   realities of being compatible\
    \ with different versions of LDAP clients\n   -- e.g., v2, which does not support\
    \ referrals, and v3, which does.\n   At the heart of the system is the \"Referral\
    \ Index and Organizational\n   information\" (RIO) server, which provides a searchable\
    \ catalogue over\n   Norwegian organization. This facilitates the location of\
    \ whitepages\n   servers for individual organizations (assuming the query includes\n\
    \   information about which organization(s) is(are) interesting).\n   This work\
    \ can be seen as being complementary to the TISDAG work, in\n   that it provides\
    \ a more focused service for integrating LDAP\n   directory servers.  However,\
    \ there is still some requirement that one\n   knows the organization to which\
    \ a person belongs before doing a\n   search for their e-mail address. This may\
    \ be reasonable for seeking\n   mail addresses associated with a person's work\
    \ organization, but is\n   less often successful when it comes to finding a personal\
    \ e-mail\n   address -- in an age where ISPs abound, a priori knowledge of a\n\
    \   user's ISP identification is unlikely.\n"
- title: 3.2 DESIRE Directory Services
  contents:
  - "3.2 DESIRE Directory Services\n   The EC funded project DESIRE II (http://www.desire.org)\
    \ is developing\n   a distributed European indexing system for information on\
    \ Research\n   and Education. The Directory Services work undertaken by DANTE\
    \ and\n   SURFnet proposes an architecture applied to a server mesh structure\n\
    \   to create a wide-area directory service infrastructure.\n   This service is\
    \ intended to support both whitepages information with\n   LDAP servers at WDSPs,\
    \ as well as a Web-search meshes at various\n   places using Whois++ for information\
    \ about resources and routing of\n   queries to other index-based services.\n\
    \   Like the TISDAG project, the DESIRE directory services project aims\n   to\
    \ act as a focal point for queries, allowing client software to\n   access appropriate\
    \ resources from a wide range of disparate services.\n   There are architectural\
    \ differences between the approach used in the\n   TISDAG project and the DESIRE\
    \ directory service project, but many of\n   the driving needs are the same, and\
    \ the approach of using content-\n   based indexing and referrals was also selected.\n"
- title: 4.0 Some Directions for TISDAG Next Steps
  contents:
  - "4.0 Some Directions for TISDAG Next Steps\n   The fun thing with technology is\
    \ that there are always more tweaks\n   and changes that can be made.  However,\
    \ a service should evolve in\n   response to specific customer needs, and there\
    \ are several ways in\n   which the TISDAG service itself could advance. Some\
    \ of them are\n   outlined below, in terms of possibilities perceived at this\
    \ time,\n   rather than specific recommendations for underlying technology\n \
    \  changes that would be necessary to fulfill them.  A related topic,\n   networking\
    \ DAG servers (meshes), is discussed in [DAG-Mesh].\n"
- title: 4.1 Security support
  contents:
  - "4.1 Security support\n   There is a need for security considerations when making\
    \ use of a\n   wide-scaled directory system in other application areas than the\n\
    \   public white-pages application of the TISDAG project.  There are\n   issues\
    \ whether the directory service is distributed across the\n   Internet, or even\
    \ if it functions completely within an internal,\n   closed network.\n"
- title: 4.2 WDSPs attributes and schemas
  contents:
  - "4.2 WDSPs attributes and schemas\n   Today the DAG system makes use of 2 information\
    \ schemas -- the\n   DAGPERSON schema for information about specific people, and\
    \ the\n   DAGORGROLE schema for organizational roles. The technical\n   specification\
    \ includes a definition of the schema, as well as an\n   understood mapping to\
    \ (and from) some standard schemas used in the\n   supported protocols.  Nevertheless,\
    \ to include new WDSPs which may\n   not have all attributes in schemas, may use\
    \ different schemas as well\n   as query attributes, it should be possible to\
    \ provide creation and\n   use of new customized/standardized schemas and perform\
    \ schema mapping\n   if it's necessary. It might also be possible to constrain\
    \ queries to\n   desired query attributes, templates, or object classes.\n   In\
    \ practice, this means that different WDSP's may choose to use\n   different subparts\
    \ of one defined schema, or even implement local\n   customizations.\n"
- title: 5.0 Some conclusions
  contents:
  - "5.0 Some conclusions\n   Although fewer people now hold out the hope of a unified\
    \ global\n   directory service, based on standardize protocols,  it is interesting\n\
    \   to see more projects providing infrastructure that permits unified\n   access\
    \ to what is otherwise an unforgivingly diverse and dislocated\n   set of information\
    \ servers.  What cannot be dictated (in standardized\n   protocols and schemas)\
    \ may yet be accommodated through service\n   infrastructure.  The right approach\
    \ seems to be to build better and\n   better frameworks for supporting such diversified\
    \ services, without\n   making the framework architecture dependent on specific\
    \ technologies.\n"
- title: 6.0 Security Considerations
  contents:
  - "6.0 Security Considerations\n   To date, the TISDAG project has focused on serving\
    \ only publicly-\n   sharable information.  As noted in Section 4.1, any future\
    \ work will\n   have to provide additional facilities for providing authentication,\n\
    \   authorization, encryption, and otherwise handling sensitive data in\n   an\
    \ open environment.\n"
- title: 7.0 Acknowledgements
  contents:
  - "7.0 Acknowledgements\n   This document outlines the perspectives and opinions\
    \ of the authors,\n   based on experience as well as many fruitful and enlightening\n\
    \   discussions with others:  Roland Hedberg, Torbjorn Granat, Patrik\n   Granholm,\
    \ Rikard Wessblad and Sandro Mazzucato.\n   The work described in this document\
    \ was carried out as part of an\n   on-going project of Ericsson.  For further\
    \ information regarding that\n   project, contact:\n      Bjorn Larsson\n    \
    \  bjorn.x.larsson@era.ericsson.se\n"
- title: 8.0 Authors' Addresses
  contents:
  - "8.0 Authors' Addresses\n   Thommy Eklof\n   Hotsip AB\n   EMail: thommy.eklof@hotsip.com\n\
    \   Leslie L. Daigle\n   Thinking Cat Enterprises\n   EMail:  leslie@thinkingcat.com\n"
- title: 9.0 References
  contents:
  - "9.0 References\n   Request For Comments (RFC) and Internet Draft documents are\
    \ available\n   from numerous mirror sites.\n   [CIP1]     Allen, J. and M. Mealling,\
    \ \"The Architecture of the Common\n              Indexing Protocol (CIP)\", RFC\
    \ 2651, August 1999.\n   [CIP2]     Allen, J. and M. Mealling, \"MIME Object Definitions\
    \ for\n              the Common Indexing Protocol (CIP)\", RFC 2652, August\n\
    \              1999.\n   [CIP3]     Allen, J., Leach, P. and R. Hedberg, \"CIP\
    \ Transport\n              Protocols\", RFC 2653, August 1999.\n   [DAG++]   \
    \ Daigle, L. and T. Eklof, \"An Architecture for Integrated\n              Directory\
    \ Services\", RFC 2970, October 2000.\n   [DAG-Mesh] Daigle, L. and T. Eklof,\
    \ \"Networking Multiple DAG servers:\n              Meshes\", RFC 2968, October\
    \ 2000.\n   [TISDAG]   Daigle, L. and R. Hedberg \"Technical Infrastructure for\n\
    \              Swedish Directory Access Gateways (TISDAG),\" RFC 2967,\n     \
    \         October 2000.\n   [centroid] Deutsch, P., Schoultz, R., Faltstrom, P.\
    \ and C. Weider,\n              \"Architecture of the WHOIS++ service\", RFC 1835,\
    \ August\n              1995.\n   [NDD]      Hedberg, R. and H. Alvestrand, \"\
    Technical Specification,\n              The Norwegian Directory of Directories\
    \ (NDD)\", Work in\n              Progress.\n   [TIO]      Hedberg, R., Greenblatt,\
    \ B., Moats, R. and M. Wahl, \"A\n              Tagged Index Object for use in\
    \ the Common Indexing\n              Protocol\", RFC 2654, August 1999.\n   [complex]\
    \  P.  Panotzki, \"Complexity of the Common Indexing Protocol:\n             \
    \ Predicting Search Times in Index Server Meshes\",  Master's\n              Thesis,\
    \ KTH, September 1996.\n   [WAP]      The Wireless Application Protocol, http://www.wapforum.org\n"
- title: Appendix -- Specific Software Issues and Deployment Experiences
  contents:
  - "Appendix -- Specific Software Issues and Deployment Experiences\n   The following\
    \ paragraphs outline practical deployment experiences in\n   an anecdotal fashion.\
    \  This is not meant to be construed as an\n   exhaustive, authoritative evaluation\
    \ of existing client software, but\n   rather an indication of the types of challenges\
    \ the average\n   implementation team may expect to encounter in a development\
    \ and\n   deployment effort.\n   Character encoding\n   ------------------\n \
    \  One client's addressbook sends iso-8859 encoding (depending on the\n   font\
    \ configuration in the browser) when querying a directory server\n   but the directory\
    \ server responds with Unicode (UTF-8) encoding.\n   This means that the LDAP\
    \ CAP would have to handle different character\n   set encodings for request and\
    \ response.\n   Referrals\n   ---------\n   Today there appears to be only one\
    \ commercial addressbook supporting\n   LDAPv3.  All the others support only LDAPv2.\
    \  However, this LDAPv3\n   client software does not handle referrals correctly\
    \ -- the client\n   couldn't handle server the result contains \"response code\
    \ 10\"\n   (designated for referrals).  From what was observed, there was now\n\
    \   way for the client or the end-user to decide if, or which, referrals\n   to\
    \ follow-up.   It is therefore not clear how the LDAP clients handle\n   a combination\
    \ of both referrals and results  -- but the supposition\n   is that it doesn't\
    \ work.\n   Objectclasses in LDAP\n   ---------------------\n   No objectclass\
    \ is defined in the query to the DAG-system from the\n   LDAP-clients. This means\
    \ that the DAG-system doesn't see any\n   differences between \"inetOrgPerson\"\
    \ and \"organisationalRole\" when\n   attribute \"cn\" is representing both \"\
    name\" and \"role\".  This is not\n   so much a problem as that it has interesting\
    \ side effects.  Namely,\n   although most directory user interfaces (found in\
    \ browsers, mail\n   programs) claim only to support person-related queries, in\
    \ practise a\n   user of the client could use the interface to send a query with\
    \ role\n   in the name entry.\n   Query with attribute Organisation\n   ---------------------------------\n\
    \   It is possible to send a query with attribute \"organisation\" but it\n  \
    \ would result in no hits because of that the organisation attribute is\n   not\
    \ included in the objectclass \"inetOrgPerson\".  Roland Hedberg has\n   proposed\
    \ a change for the latest release of the objectclass\n   definition document.\n\
    \   To provide the desired ability to narrow search focus to some range\n   of\
    \ organization names (attribute values), there are three possible\n   approaches\
    \ with differing merits/detractions:\n      Recommend the use of the \"locality\"\
    \ attribute -- although a more\n      standard definition would be required (locality\
    \ is currently used\n      for everything from organization to county to map coordinates).\n\
    \      Recommend or require that the attribute organisation should be\n      inherited\
    \ in objectclass \"inetOrgPerson\".\n      Build the LDAP DAG-SAP to submit 2\
    \ query to the WDSP. The second\n      is the same as the first, with only cn\
    \ filters if the entire query\n      including \"o\" results in no hits (i.e.,\
    \ back off from the\n      organization filtering if it doesn't seem to be supported).\n\
    \   Configuration\n   -------------\n   It is not possible to see what character\
    \ set a LDAP clients want to\n   use.  The recommendation so far in he project\
    \ has been to define a\n   unique port for each character set.  This requires\
    \ extra end-user\n   configuration of client software, and proper advertising\
    \ of the port\n   number-charset mapping provided in the service.\n   DN\n   --\n\
    \   When the user wants to look-up more information about a person found\n   in\
    \ a preliminary search, the  LDAP client uses the entry's DN\n   together with\
    \ host and port to the DAG system.  Not only does that\n   mean that the client\
    \ submits a non-compliant query to the DAG system,\n   as DNs are not part of\
    \ any of the defined queries for the service, it\n   simply does not provide the\
    \ desired effect of getting to the user's\n   entry.\n   Response Codes\n   --------------\n\
    \   The LDAPv3 client that was used does not support more than 2 response\n  \
    \ codes -- \"success\" and \"size limit exceeded\".  All the other response\n\
    \   codes are translated to \"size limit exceeded\", although no results\n   are\
    \ returned.   That is, if the error was in fact that the size limit\n   was exceeded,\
    \ the results up to the size limit are presented.  If it\n   was another response\
    \ code mapped to that one, no results are\n   presented.\n   Sending and loading\
    \ CIP Index Objects\n   -------------------------------------\n   At least one\
    \ server is quoting the CIP-object incorrectly for the\n   Swedish characters\
    \ A-Ring, A-Umlaut and O-Umlaut.  Sending quoted\n   printable CIP-objects with\
    \ PINE mail software works.\n   Source - Labeled URI\n   --------------------\n\
    \   The original plan for the use of the labeled-URI attribute was to use\n  \
    \ it to return a pointer to the WDSP that provided the user\n   information. \
    \ However, the standard use of the labeled-URI attribute,\n   which may in fact\
    \ be populated in the data returned by a WDSP, is to\n   contain the URI for more\
    \ private related homepages.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
