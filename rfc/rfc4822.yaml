- title: __initial_text__
  contents:
  - '                   RIPv2 Cryptographic Authentication

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: IESG Note
  contents:
  - "IESG Note\n   In the interests of encouraging rapid migration away from Keyed-MD5\n\
    \   and its known weakness, the IESG has approved this document even\n   though\
    \ it does not meet the guidelines in BCP 107 (RFC 4107).\n   However, the IESG\
    \ stresses that automated key management should be\n   used to establish session\
    \ keys and urges that the future work on key\n   management described in Section\
    \ 5.6 of this document should be\n   performed as soon as possible.\n"
- title: Abstract
  contents:
  - "Abstract\n   This note describes a revision to the RIPv2 Cryptographic\n   Authentication\
    \ mechanism originally specified in RFC 2082.  This\n   document obsoletes RFC\
    \ 2082 and updates RFC 2453.  This document adds\n   details of how the SHA family\
    \ of hash algorithms can be used with\n   RIPv2 Cryptographic Authentication,\
    \ whereas the original document\n   only specified the use of Keyed-MD5.  Also,\
    \ this document clarifies a\n   potential issue with an active attack on this\
    \ mechanism and adds\n   significant text to the Security Considerations section.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Growth in the Internet has made us aware of the need for\
    \ improved\n   authentication of routing information.  RIPv2 provides for\n  \
    \ unauthenticated service (as in classical RIP), or password\n   authentication.\
    \  Both are vulnerable to passive attacks currently\n   widespread in the Internet.\
    \  Well-understood security issues exist in\n   routing protocols [Bell89].  Cleartext\
    \ passwords, originally\n   specified for use with RIPv2, are widely understood\
    \ to be vulnerable\n   to easily deployed passive attacks [HA94].\n   The original\
    \ RIPv2 cryptographic authentication specification, RFC\n   2082 [AB97], used\
    \ the Keyed-MD5 cryptographic mechanism.  While there\n   are no openly published\
    \ attacks on that mechanism, some reports\n   [Dobb96a, Dobb96b] create concern\
    \ about the ultimate strength of the\n   MD5 cryptographic hash function.  Further,\
    \ some end users,\n   particularly several different governments, require the\
    \ use of the\n   SHA hash function family rather than any other such function\
    \ for\n   policy reasons.  Finally, the original specification uses a hashing\n\
    \   construction widely believed to be weaker than the HMAC construction\n   used\
    \ with the algorithms added in this revision of the specification.\n   This document\
    \ obsoletes the original specification, RFC 2082 [AB97].\n   This specification\
    \ differs from RFC 2082 by adding support for the\n   SHA family of hash algorithms\
    \ and the HMAC technique, while retaining\n   the original Keyed-MD5 algorithm\
    \ and mode.  As the original RIPv2\n   Cryptographic Authentication mechanism\
    \ was algorithm-independent,\n   backwards compatibility is retained.  This requirement\
    \ for backwards\n   compatibility precludes making significant protocol changes.\
    \  So,\n   this document limits changes to the addition of support for an\n  \
    \ additional family of cryptographic algorithms.  The original\n   specification\
    \ has been very widely implemented, is known to be widely\n   interoperable, and\
    \ is also widely deployed.\n   The authors do NOT believe that this specification\
    \ is the final\n   answer to RIPv2 authentication and encourage the reader to\
    \ consult\n   the Security Considerations section of this document for more\n\
    \   details.\n   If RIPv2 authentication is disabled, then only simple\n   misconfigurations\
    \ are detected.  The original RIPv2 authentication\n   mechanism relied upon reused\
    \ cleartext passwords.  Use of cleartext\n   password authentication can protect\
    \ against accidental\n   misconfigurations if that were the only concern, but\
    \ is not helpful\n   from a security perspective.  By simply capturing information\
    \ on the\n   wire -- straightforward even in a remote environment -- a hostile\n\
    \   entity can read the cleartext RIPv2 password and use that knowledge\n   to\
    \ inject false information into the routing system via the RIPv2\n   routing protocol.\n\
    \   This mechanism is intended to reduce the risk of a successful passive\n  \
    \ attack upon RIPv2 deployments.  That is, deployment of this mechanism\n   greatly\
    \ reduces the vulnerability of the RIPv2-based routing system\n   from a passive\
    \ attack.  When cryptographic authentication is enabled,\n   we transmit the output\
    \ of a keyed cryptographic one-way function in\n   the authentication field of\
    \ the RIPv2 packet, instead of sending a\n   cleartext reusable password in the\
    \ RIPv2 packet.  The RIPv2\n   Authentication Key is known only to the authorized\
    \ parties of the\n   RIPv2 session.  The RIPv2 Authentication Key is never sent\
    \ over the\n   network in the clear.\n   In this way, protection is afforded against\
    \ forgery or message\n   modification.  While it is possible to replay a message\
    \ until the\n   sequence number changes, a sequence number can be used to reduce\n\
    \   replay risks.  The mechanism does not provide confidentiality, since\n   messages\
    \ stay in the clear.  Since the objective of a routing\n   protocol is to advertise\
    \ the routing topology, confidentiality is not\n   normally required for routing\
    \ protocols.\n   Other relevant rationales for the approach are that MD5 and SHA-1\
    \ are\n   both being used for other purposes and are therefore generally\n   already\
    \ present in IP routers, as is some form of password\n   management.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   In this document, the words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\",\n   \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT\n   RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as\n\
    \   described in [BCP14] and indicate requirement levels for compliant or\n  \
    \ conformant implementations.\n"
- title: 2.  Implementation Approach
  contents:
  - "2.  Implementation Approach\n   Implementation requires use of a special packet\
    \ format, special\n   authentication procedures, and also management controls.\n\
    \   Implementers need to remember that the Security Considerations\n   section\
    \ is an integral part of this specification and contains\n   important parts of\
    \ this specification.\n"
- title: 2.1.  RIPv2 PDU Format
  contents:
  - "2.1.  RIPv2 PDU Format\n   The basic RIPv2 message format provides for an 8-octet\
    \ header with an\n   array of 20-octet records as its data content.  When RIPv2\n\
    \   Cryptographic Authentication is enabled, the same header and content\n   are\
    \ used as with the original RIPv2 specification, but the 16-octet\n   \"Authentication\"\
    \ password field of the original RIPv2 specification\n   is reused to contain\
    \ a packet offset to the Authentication Data, a\n   Key Identifier, the Authentication\
    \ Data Length, and a non-decreasing\n   sequence number.\n      AUTHENTICATION\
    \ TYPE\n         The \"Authentication Type\" is Cryptographic Hash Function, which\n\
    \         is indicated by the value 3.\n      RIPv2 PACKET LENGTH\n         An\
    \ unsigned 16-bit offset from the start of the RIPv2 header to\n         the end\
    \ of the regular RIPv2 packet (not including the\n         authentication trailer).\n\
    \      KEY IDENTIFIER\n         An unsigned 8-bit field that contains the Key\
    \ Identifier or\n         Key-ID.  This, in combination with the network interface,\n\
    \         identifies the RIPv2 Security Association in use for this\n        \
    \ packet.  The RIPv2 Security Association, which is defined in\n         Section\
    \ 2.2 below, includes the Authentication Key that was\n         used to create\
    \ the Authentication Data for this RIPv2 message\n         and other parameters.\
    \  In implementations supporting more than\n         one authentication algorithm,\
    \ the RIPv2 Security Association\n         also includes information about which\
    \ authentication algorithm\n         is in use for this message.  A RIPv2 Security\
    \ Association is\n         always associated with an interface, rather than with\
    \ a router.\n         The actual cryptographic key is part of the RIPv2 Security\n\
    \         Association.\n      AUTHENTICATION DATA LENGTH\n         An unsigned\
    \ 8-bit field that contains the length in octets of\n         the trailing Authentication\
    \ Data field.  The presence of this\n         field helps provide cryptographic\
    \ algorithm independence.\n      AUTHENTICATION DATA\n         This field contains\
    \ the cryptographic Authentication Data used\n         to validate this packet.\
    \  The length of this field is stored in\n         the AUTHENTICATION DATA LENGTH\
    \ field above.\n      SEQUENCE NUMBER\n         An unsigned 32-bit sequence number.\
    \  The sequence number MUST\n         be non-decreasing for all messages sent\
    \ from a given source\n         router with a given Key ID value.\n   The authentication\
    \ trailer contains the Authentication Data, which is\n   the output of the keyed\
    \ cryptographic hash function.  See later\n   subsections of this section for\
    \ details on computing this field.\n    0                   1                \
    \   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +---------------+---------------+-------------------------------+\n\
    \   |  Command (1)  | Version (1)   |        Routing Domain (2)     |\n   +---------------+---------------+-------------------------------+\n\
    \   |             0xFFFF            |  Authentication Type=0x0003   |\n   +---------------+---------------+---------------+---------------+\n\
    \   |     RIPv2 Packet Length       |   Key ID      | Auth Data Len |\n   +---------------+---------------+---------------+---------------+\n\
    \   |               Sequence Number (non-decreasing)                |\n   +---------------+---------------+---------------+---------------+\n\
    \   |                      reserved must be zero                    |\n   +---------------+---------------+---------------+---------------+\n\
    \   |                      reserved must be zero                    |\n   +---------------+---------------+---------------+---------------+\n\
    \   |                                                               |\n   ~  \
    \          (RIPv2 Packet Length - 24) bytes of Data           ~\n   |        \
    \                                                       |\n   +---------------+---------------+---------------+---------------+\n\
    \   |             0xFFFF            |            0x0001             |\n   +---------------+---------------+---------------+---------------+\n\
    \   | Authentication Data (variable length; 20 bytes with HMAC-SHA1)|\n   +---------------+---------------+---------------+---------------+\n"
- title: 2.2.  RIPv2 Security Association
  contents:
  - "2.2.  RIPv2 Security Association\n   Understanding the RIPv2 Security Association\
    \ concept is central to\n   understanding this specification.  A RIPv2 Security\
    \ Association\n   contains the set of shared authentication configuration parameters\n\
    \   needed by the legitimate sender or any legitimate receiver.\n   An implementation\
    \ MUST be able to support at least 2 concurrent RIPv2\n   Security Associations\
    \ on each RIP interface.  This is a functional\n   requirement for supporting\
    \ key rollover.  Support for key rollover is\n   mandatory.\n   The RIPv2 Security\
    \ Association, defined below, is selected by the\n   sender based on the outgoing\
    \ router interface.  Each RIPv2 Security\n   Association has a lifetime and other\
    \ configuration parameters\n   associated with it.  In normal operation, a RIPv2\
    \ Security\n   Association is never used outside its lifetime.  Certain abnormal\n\
    \   cases are discussed later in this document.\n   The minimum data items in\
    \ a RIPv2 Security Association are as\n   follows:\n      KEY-IDENTIFIER (KEY-ID)\n\
    \         The unsigned 8-bit KEY-ID value is used to identify the RIPv2\n    \
    \     Security Association in use for this packet.\n         The receiver uses\
    \ the combination of the interface the packet\n         was received upon and\
    \ the KEY-ID value to uniquely identify the\n         appropriate Security Association.\n\
    \         The sender selects which RIPv2 Security Association to use\n       \
    \  based on the outbound interface for this RIPv2 packet and then\n         places\
    \ the correct KEY-ID value into that packet.  If multiple\n         valid and\
    \ active RIPv2 Security Associations exist for a given\n         outbound interface\
    \ at the time a RIPv2 packet is sent, the\n         sender may use any of those\
    \ security associations to protect\n         the packet.\n      AUTHENTICATION\
    \ ALGORITHM\n         This specifies the cryptographic algorithm and algorithm\
    \ mode\n         used with the RIPv2 Security Association.  This information is\n\
    \         never sent in cleartext over the wire.  Because this\n         information\
    \ is not sent on the wire, the implementer chooses an\n         implementation\
    \ specific representation for this information.\n         At present, the following\
    \ values are possible: KEYED-MD5,\n         HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-384,\
    \ and HMAC-SHA-512.\n      AUTHENTICATION KEY\n         This is the value of the\
    \ cryptographic authentication key used\n         with the associated Authentication\
    \ Algorithm.  It MUST NOT ever\n         be sent over the network in cleartext\
    \ via any protocol.  The\n         length of this key will depend on the Authentication\
    \ Algorithm\n         in use.  Operators should take care to select unpredictable\
    \ and\n         strong keys, avoiding any keys known to be weak for the\n    \
    \     algorithm in use. [ESC05] contains helpful information on both\n       \
    \  key generation techniques and cryptographic randomness.\n      SEQUENCE NUMBER\n\
    \         This is an unsigned 32-bit number.  For a given KEY-ID value\n     \
    \    and sender, this number MUST NOT decrease.  In normal\n         operation,\
    \ the operator should rekey the RIPv2 session prior to\n         reaching the\
    \ maximum value.  The initial value used in the\n         sequence number is arbitrary.\
    \  Receivers SHOULD keep track of\n         the most recent sequence number received\
    \ from a given sender.\n      START TIME\n         This is a local representation\
    \ of the day and time that this\n         Security Association first becomes valid.\n\
    \      STOP TIME\n         This is a local representation of the day and time\
    \ that this\n         Security Association becomes invalid (i.e., when it expires).\n\
    \         It is permitted, but not recommended, for an operator to\n         configure\
    \ this to \"never expire\".  The \"never expire\" value is\n         not recommended\
    \ operational practice because it reduces\n         security as compared with\
    \ periodic rekeying.  Normally, a RIPv2\n         Security Association is deleted\
    \ at its STOP TIME.  However,\n         there are certain pathological cases,\
    \ which are discussed in\n         Section 5.1.\n   The authentication trailer\
    \ consists of the Authentication Data, which\n   is the output of the keyed cryptographic\
    \ hash function.  See later\n   subsections of this section for details on computing\
    \ this field.\n"
- title: 2.3.  Basic Authentication Processing
  contents:
  - "2.3.  Basic Authentication Processing\n   When the authentication type is \"\
    Cryptographic Hash Function\",\n   message processing is changed in message creation\
    \ and reception as\n   compared with the original RIPv2 specification in [Mal94].\n\
    \   This section describes the message processing generically.\n   Additional\
    \ algorithm-dependent processing that is required is\n   described in separate,\
    \ subsequent sections of this document.  As of\n   this writing, there are 2 kinds\
    \ of algorithm-dependent processing.\n   One covers the \"Keyed-MD5\" algorithm.\
    \  The other covers the\n   \"HMAC-SHA1\" family of algorithms.\n"
- title: 2.3.1.  Message Generation
  contents:
  - "2.3.1.  Message Generation\n   The RIPv2 Packet is created as usual, with these\
    \ exceptions:\n   (1) The UDP checksum SHOULD be calculated, but MAY be set to\
    \ zero\n       because any of the cryptographic authentication mechanisms in\n\
    \       this specification will provide stronger integrity protection\n      \
    \ than the standard UDP checksum.\n   (2) The Authentication Type field indicates\
    \ Cryptographic\n       Authentication (3).\n   (3) The Authentication \"password\"\
    \ field is reused to store a packet\n       offset to the Authentication Data,\
    \ a Key Identifier, the\n       Authentication Data Length, and a non-decreasing\
    \ sequence number.\n   See also Section 2.2 above on RIPv2 Security Association\
    \ for other\n   important background information.\n   When creating the RIPv2\
    \ Packet, the following process is followed:\n   (1) The Packet Length field of\
    \ the RIPv2 header indicates the size of\n       the main body of the RIPv2 packet.\n\
    \   (2) An appropriate RIPv2 Security Association is selected for use\n      \
    \ with this packet, based on the outbound interface for the packet.\n       Any\
    \ valid RIPv2 Security Association for that outbound interface\n       may be\
    \ used.  The Authentication Data Offset, Key Identifier, and\n       Authentication\
    \ Data Length fields are filled in appropriately.\n   (3) Algorithm-dependent\
    \ processing occurs now, either for the\n       \"Keyed-MD5\" algorithm or for\
    \ the \"HMAC-SHA1\" algorithm family.\n       See the respective sub-sections\
    \ (below) for details of this\n       algorithm-dependent processing.\n   (4)\
    \ The resulting Authentication Data value is written into the\n       Authentication\
    \ Data field.  The trailing pad (if any) is not\n       actually transmitted,\
    \ as it is entirely predictable from the\n       message length and Authentication\
    \ Algorithm in use.\n"
- title: 2.3.2.  Message Reception
  contents:
  - "2.3.2.  Message Reception\n   When the message is received, the process is reversed:\n\
    \   (1) The received Authentication Data is set aside and stored for\n       later\
    \ use,\n   (2) The appropriate RIPv2 Security Association is determined from the\n\
    \       value of the Key Identifier field and the interface the packet\n     \
    \  was received on.  If there is no valid RIPv2 Security Association\n       for\
    \ the received Key Identifier on the interface that the packet\n       was received\
    \ on, then:\n       (a) all processing of the incoming packet ceases, and\n  \
    \     (b) a security event SHOULD be logged by the RIPv2 subsystem of\n      \
    \     the receiving system.  That security event should indicate at\n        \
    \   least the day/time that the bad packet was received, the\n           Source\
    \ IP Address of the received RIPv2 packet, the Key-ID\n           field value,\
    \ the interface the bad packet arrived upon, and\n           the fact that no\
    \ valid RIPv2 Security Association was found\n           for that interface and\
    \ Key-ID combination.\n   (3) Algorithm-dependent processing is performed, using\
    \ the algorithm\n       specified by the appropriate RIPv2 Security Association\
    \ for this\n       packet.  This results in calculation of the Authentication\
    \ Data\n       based on the information in the received RIPv2 packet and\n   \
    \    information from the appropriate RIPv2 Security Association for\n       that\
    \ packet.\n   (4) The calculated Authentication Data result is compared with the\n\
    \       received Authentication Data.\n   (5) If the calculated authentication\
    \ data result does not match the\n       received Authentication Data field, then:\n\
    \       (a) the message MUST be discarded without being processed, and\n     \
    \  (b) a security event SHOULD be logged by the RIPv2 subsystem of\n         \
    \  the receiving system.  That security event SHOULD indicate at\n           least\
    \ the day/time that the bad packet was received, the\n           Source IP Address\
    \ of the received RIPv2 packet, the Key-ID\n           field value, the interface\
    \ the bad packet arrived upon, and\n           the fact that RIPv2 Authentication\
    \ failed upon receipt of the\n           packet.\n   (6) If the neighbor has been\
    \ heard from recently enough to have\n       viable routes in the local routing\
    \ table, and the received\n       sequence number is less than the last sequence\
    \ number received,\n       then the message MUST be discarded unprocessed.  If\
    \ the received\n       sequence number is less than the last sequence number received,\n\
    \       that fact SHOULD be logged as a security event.  This logged\n       security\
    \ event SHOULD indicate at least the day/time that the bad\n       packet was\
    \ received, the Source IP Address of the received RIPv2\n       packet, the Key-ID\
    \ field value, and the fact that an out-of-order\n       RIPv2 sequence number\
    \ was received.\n       When connectivity to the neighbor has been lost, the receiver\n\
    \       SHOULD be ready to accept either:\n         - a message with a sequence\
    \ number of zero.\n         - a message with a higher sequence number than the\
    \ last\n           received sequence number.\n   (7) Acceptable messages are now\
    \ truncated to the RIPv2 message\n       itself, minus the authentication trailer,\
    \ and are processed\n       normally (i.e., in accordance with the RIPv2 base\
    \ specification\n       in RFC 2453 [Mal98]).  The last received sequence number\
    \ for this\n       RIPv2 Security Association and sender is also updated.\n  \
    \ NOTA BENE: A router that has forgotten its current sequence number\n   but remembers\
    \ its Security Association MUST send its first packet\n   with a sequence number\
    \ of zero.  This leaves a small opening for a\n   replay attack.  To reduce the\
    \ risk of such attacks by precluding the\n   situation where a router has forgotten\
    \ its current sequence number,\n   implementers SHOULD provide non-volatile storage\
    \ for all components\n   of a RIPv2 Security Association, and receiving systems\
    \ SHOULD provide\n   non-volatile storage for the last received sequence number\
    \ from each\n   sender.  See also the Security Considerations section of this\n\
    \   document.\n"
- title: 2.4.  Keyed-MD5 Algorithm-Dependent Processing
  contents:
  - "2.4.  Keyed-MD5 Algorithm-Dependent Processing\n   This section describes the\
    \ algorithm-dependent processing steps\n   applicable when the \"Keyed-MD5\" authentication\
    \ algorithm is in use.\n   The RIPv2 Authentication Key is always 16 octets when\
    \ \"Keyed-MD5\" is\n   in use.\n   (1) The RIPv2 Authentication Key is appended\
    \ to the RIPv2 packet in\n       memory.\n   (2) The Trailing Pad for MD5 and\
    \ message length fields are added in\n       memory.  The diagram below shows\
    \ how these additions appear when\n       appended in memory:\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Authentication Key                        |\n   \
    \   /                      (16 octets long)                         /\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       zero or more pad octets (as defined by RFC 1321)        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                   64-bit message length MSW                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                   64-bit message length LSW                   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   (3)\
    \ The Authentication Data is then calculated according to the MD5\n       algorithm\
    \ defined by RFC 1321 [Rivest92].\n"
- title: 2.5.  HMAC-SHA1 Algorithm-Dependent Processing
  contents:
  - "2.5.  HMAC-SHA1 Algorithm-Dependent Processing\n   This section describes the\
    \ processing steps for HMAC Authentication.\n   While HMAC was originally documented\
    \ in [KMC97], for this\n   specification, the terminology used in [FIPS-198] is\
    \ used.  While the\n   current specification only provides full details for HMAC\n\
    \   Authentication using the National Institute of Standards and\n   Technology\
    \ (NIST) SHA-1 algorithm (and its direct derivatives), this\n   same basic process\
    \ could be used with other cryptographic hash\n   functions in the future.  Because\
    \ the RIPv2 packet is only hashed\n   once, the overhead of the double hashing\
    \ in this process is\n   negligible.\n   The US NIST Secure Hash Standard (SHS),\
    \ defined by [FIPS-180-2],\n   includes specifications for SHA-1, SHA-256, SHA-384,\
    \ and SHA-512.\n   This specification defines processing for each of these.\n\
    \   The output of the cryptographic computations (e.g., HMAC-SHA1) is NOT\n  \
    \ truncated for RIPv2 Cryptographic Authentication.\n   The Authentication Data\
    \ Length is equal to the Message Digest Size\n   for the hash algorithm in use.\n\
    \   Any key value known to be weak with an algorithm defined by the NIST\n   Secure\
    \ Hash Standard MUST NOT be used with such an algorithm in an\n   implementation\
    \ of this specification.  US NIST is the authoritative\n   source for public information\
    \ on weak keys for those algorithms.\n   In the algorithm description below, the\
    \ following nomenclature, which\n   is consistent with [FIPS-198], is used:\n\
    \         H    is the specific hashing algorithm,\n              for example,\
    \ SHA-1 or SHA-256.\n         Ko   is the cryptographic key used with the hash\
    \ algorithm.\n         B    is the block-size of H, measured in octets, not bits.\n\
    \              Note that B is the internal block size, not the hash size.\n  \
    \            For SHA-1   and SHA-256:  B == 64.\n              For SHA-384 and\
    \ SHA-512:  B == 128\n         L    is the length of the hash, measured in octets,\
    \ not bits.\n              For example, with SHA-1, L == 20.\n         XOR  is\
    \ the exclusive-or operation.\n         Opad is the hexadecimal value 0x5c repeated\
    \ B times.\n         Ipad is the hexadecimal value 0x36 repeated B times.\n  \
    \       Apad is the hexadecimal value 0x878FE1F3 repeated (L/4) times.\n   (1)\
    \ PREPARATION OF KEY\n       In this application, Ko is always L octets long.\n\
    \       If the Authentication Key is L octets long, then Ko is set equal\n   \
    \    to the Authentication Key.  If the Authentication Key is more\n       than\
    \ L octets long, then Ko is set to H(Authentication Key).  If\n       the Authentication\
    \ Key is less than L octets long, then Ko is set\n       to the Authentication\
    \ Key with zeros appended to the end of the\n       Authentication Key such that\
    \ Ko is L octets long.\n   (2) FIRST HASH\n       First, the RIPv2 packet's Authentication\
    \ Data field is filled\n       with the value Apad.\n       Then, a first hash,\
    \ also known as the inner hash, is computed as\n       follows:\n            \
    \   First-Hash = H(Ko XOR Ipad || (RIPv2 Packet))\n   (3) SECOND HASH\n      \
    \ Then a second hash, also known as the outer hash, is computed as\n       follows:\n\
    \               Second-Hash = H(Ko XOR Opad || First-Hash)\n   (4) RESULT\n  \
    \     The result Second-Hash becomes the authentication data that is\n       sent\
    \ in the Authentication Data field of the RIPv2 packet.  The\n       length of\
    \ the Authentication Data field is always identical to\n       the message digest\
    \ size of the hash function H that is being\n       used.\n       This also implies\
    \ that use of hash functions with larger output\n       sizes will also increase\
    \ the size of the packet as transmitted on\n       the wire.\n"
- title: 3.  Management Procedures
  contents:
  - "3.  Management Procedures\n   Key management is an important component of this\
    \ mechanism and proper\n   implementation is central to providing the intended\
    \ level of risk\n   reduction.\n"
- title: 3.1.  Key Management Requirements
  contents:
  - "3.1.  Key Management Requirements\n   It is strongly desirable that a hypothetical\
    \ security breach in one\n   Internet protocol not automatically compromise other\
    \ Internet\n   protocols.  The Authentication Key of this specification SHOULD\
    \ NOT\n   be configured or stored using protocols (e.g., RADIUS) or\n   cryptographic\
    \ algorithms that have known flaws.\n   Implementations MUST support the storage\
    \ of more than one key at the\n   same time, although it is recognized that only\
    \ one key will normally\n   be active on an interface.  Implementations MUST associate\
    \ a specific\n   Security Association lifetime (i.e., date/time first valid and\n\
    \   date/time no longer valid) and a key identifier with each key.\n   Implementations\
    \ also MUST support manual key distribution.  An\n   example of manual key distribution\
    \ is having the privileged user\n   typing in the key, key lifetime, and key identifier\
    \ on the router\n   console.  An operator may configure the Security Association\
    \ lifetime\n   to infinite, which means that the session is never rekeyed.  However,\n\
    \   instead, it is strongly recommended that operators rekey regularly,\n   using\
    \ a moderately short Security Association lifetime (e.g., 24\n   hours).\n   This\
    \ specification requires support for at least two authentication\n   algorithms,\
    \ so the implementation MUST require that the\n   authentication algorithm be\
    \ specified for each key when the other key\n   information is entered.  Manual\
    \ deletion of active Security\n   Associations MUST be supported.\n   It is likely\
    \ that the IETF will define a standard key management\n   protocol for use with\
    \ routing protocols.  It is strongly desirable to\n   use an IETF standards-track\
    \ key management protocol to distribute\n   RIPv2 Authentication Keys among communicating\
    \ RIPv2 implementations.\n   Such a protocol would provide scalability and significantly\
    \ reduce\n   the human administrative burden.  The Key-ID field can be used as\
    \ a\n   hook between RIPv2 and such a future protocol.\n   Key management protocols\
    \ have a long history of subtle flaws that are\n   often discovered long after\
    \ the protocol was first described in\n   public.  To avoid having to change all\
    \ RIPv2 implementations should\n   such a flaw be discovered, integrated key management\
    \ protocol\n   techniques were deliberately omitted from this specification.\n"
- title: 3.2.  Key Management Procedures
  contents:
  - "3.2.  Key Management Procedures\n   As with all security methods using keys,\
    \ it is necessary to change\n   the RIPv2 Authentication Key on a regular basis.\
    \  To maintain routing\n   stability during such changes, implementations MUST\
    \ be able to store\n   and use more than one RIPv2 Authentication Key on a given\
    \ interface\n   at the same time.\n   Each key will have its own Key Identifier\
    \ (KEY-ID), which is stored\n   locally.  The combination of the Key Identifier\
    \ and the interface\n   associated with the message uniquely identifies the Authentication\n\
    \   Algorithm and RIPv2 Authentication Key in use.\n   As noted above in Section\
    \ 2.3.1, the party creating the RIPv2 message\n   will select a valid RIPv2 Security\
    \ Association from the set of valid\n   RIPv2 Security Associations for that interface.\
    \  The receiver MUST\n   use the Key Identifier and receiving interface to determine\
    \ which\n   RIPv2 Security Association to use for authentication of the received\n\
    \   message.  More than one RIPv2 Security Association MAY be associated\n   with\
    \ an interface at the same time.  The receiver MUST NOT simply try\n   all RIPv2\
    \ Security Associations (i.e., keys) that might be configured\n   for RIPv2 on\
    \ the receiving interface, as that creates an easily\n   exploited denial-of-service\
    \ attack on the RIP subsystem of the\n   receiver.  (At least one widely used\
    \ implementation of the previous\n   version of this specification violates these\
    \ requirements as of the\n   publication date of this document and has consequent\
    \ security\n   vulnerabilities.)\n   Hence, it is possible to have fairly smooth\
    \ RIPv2 Security\n   Association (i.e., key) rollovers, without losing legitimate\
    \ RIPv2\n   messages due to an invalid shared key and without requiring people\
    \ to\n   change all the keys at once.  To ensure a smooth rollover, each\n   communicating\
    \ RIPv2 system must be updated with the new RIPv2\n   Security Association (including\
    \ the new key) several minutes before\n   the current RIPv2 Security Association\
    \ will expire and several\n   minutes before the new RIPv2 Security Association\
    \ lifetime begins.\n   Also, the new RIPv2 Security Association should have a\
    \ lifetime that\n   starts several minutes before the old RIPv2 Security Association\n\
    \   expires.  This gives time for each system to learn of the new\n   security\
    \ association before that security association will be used.\n   It also ensures\
    \ that the new security association will begin use and\n   the current security\
    \ association will go out of use before the\n   current security association's\
    \ lifetime expires.  For the duration of\n   the overlap in security association\
    \ lifetimes, a system may receive\n   messages corresponding to either security\
    \ association and\n   successfully authenticate the message.  The Key-ID in the\
    \ received\n   message is used to select the appropriate security association\
    \ (i.e.,\n   key) to be used for authentication.\n"
- title: 4.  Conformance Requirements
  contents:
  - "4.  Conformance Requirements\n   For this specification, the term \"conformance\"\
    \ has identical meaning\n   to the phrase \"full compliance\".\n   The Keyed MD5\
    \ authentication algorithm and the HMAC-SHA1 algorithm\n   MUST be implemented\
    \ by all conforming implementations.  In addition,\n   the HMAC-SHA-256, HMAC-SHA-384,\
    \ and HMAC-SHA-512 algorithms SHOULD be\n   implemented.  MD5 is defined in [Rivest92].\
    \  SHA-1, SHA-256, SHA-384,\n   and SHA-512 have been defined by the US NIST in\
    \ [FIPS-180-2].\n   A conforming implementation MAY also support additional\n\
    \   authentication algorithms, provided those additional algorithms are\n   publicly\
    \ and openly specified.\n   Manual key distribution as described above MUST be\
    \ supported by all\n   conforming implementations.  All implementations MUST support\
    \ the\n   smooth key rollover described under \"Key Management Procedures\".\n\
    \   This also means that implementations MUST support at least 2\n   concurrent\
    \ RIPv2 Security Associations.\n   The user documentation provided with the implementation\
    \ ought to\n   contain clear instructions on how to configure the implementation\n\
    \   such that smooth key rollover occurs successfully.\n   Implementations SHOULD\
    \ support a standard key management protocol for\n   secure distribution of RIPv2\
    \ Authentication Keys once such a key\n   management protocol is standardized\
    \ by the IETF.\n   The Security Considerations section of this document is an\
    \ integral\n   part of the specification, not just a discussion of the protocol.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This entire memo describes and specifies an authentication\
    \ mechanism\n   for the RIPv2 routing protocol that is believed to be secure against\n\
    \   passive attacks.  The term \"passive attack\" is defined in RFC 1704\n   [HA94].\
    \  The analysis contained in RFC 1704 motivated this work.\n   Passive attacks\
    \ are clearly widespread in the Internet at present\n   [HA94].\n   Protection\
    \ against active attacks is incomplete in this current\n   specification.  The\
    \ main issue relative to active attacks lies in the\n   need to support the case\
    \ where another router has recently rebooted\n   and that router lacks the non-volatile\
    \ storage needed to remember the\n   RIPv2 Security Association(s) and last received\
    \ RIPv2 sequence\n   number(s) across that reboot.\n"
- title: 5.1.  Known Pathological Cases
  contents:
  - "5.1.  Known Pathological Cases\n   Two known pathological cases exist that MUST\
    \ be handled by\n   implementations.  Both of these are failures of the network\
    \ manager.\n   Each of these should be exceedingly rare in normal operation.\n\
    \   (1) During key rollover, devices might exist that have not yet been\n    \
    \   successfully configured with the new key.  Therefore, routers\n       SHOULD\
    \ implement an algorithm that detects the set of RIPv2\n       Security Associations\
    \ being used by its neighbors, and transmit\n       its messages using both the\
    \ new and old RIPv2 Security\n       Associations (i.e., keys) until all of the\
    \ neighbors are using\n       the new security association or the lifetime of\
    \ the old security\n       association expires.  Under normal circumstances, this\
    \ elevated\n       transmission rate will exist for a single RIP update interval.\n\
    \   (2) In the event that the last RIPv2 Security Association of an\n       interface\
    \ expires, it is unacceptable to revert to an\n       unauthenticated condition,\
    \ and not advisable to disrupt routing.\n       Therefore, the router MUST send\
    \ a \"last RIPv2 Security\n       Association expiration\" notification to the\
    \ network manager\n       (e.g., via SYSLOG, SNMP, and/or other means) and SHOULD\
    \ treat\n       that last Security Association as having an infinite lifetime\n\
    \       until the lifetime is extended, the Security Association is\n       deleted\
    \ by network management, or a new security association is\n       configured.\n\
    \   In some circumstances, the practice described in (2) can leave an\n   opening\
    \ to an active attack on the RIPv2 routing subsystem.\n   Therefore, any actual\
    \ occurrence of a RIPv2 Security Association\n   expiration MUST cause a security\
    \ event to be logged by the\n   implementation.  This log item MUST include at\
    \ least a note that the\n   RIPv2 Authentication Key expired, the RIP routing\
    \ protocol\n   instance(s) affected, the routing interfaces affected, the Key-ID\n\
    \   that is affected, and the current date/time.  Operators are\n   encouraged\
    \ to check such logs as an operational security practice to\n   help detect active\
    \ attacks on the RIPv2 routing subsystem.  Further,\n   implementations SHOULD\
    \ provide a configuration knob (\"fail secure\")\n   to let a network operator\
    \ prefer to have the RIPv2 routing fail when\n   the last key expires, rather\
    \ than continue using RIPv2 in an insecure\n   manner.\n"
- title: 5.2 Network Management Considerations
  contents:
  - "5.2 Network Management Considerations\n   Also, the use of SNMP, even SNMPv3\
    \ with cryptographic authentication\n   and cryptographic confidentiality enabled,\
    \ to modify or configure the\n   RIPv2 Security Associations, or any component\
    \ of the security\n   association (for example, the cryptographic key), is NOT\
    \ RECOMMENDED.\n   This practice would create a potential for a cascading vulnerability,\n\
    \   whereby a compromise in the SNMP security implementation would\n   necessarily\
    \ lead to a compromise not only of the local routing table\n   (which could be\
    \ accessed via SNMP) but also of all other routers that\n   receive RIPv2 packets\
    \ (directly or indirectly) from the compromised\n   router.\n   Similarly, the\
    \ use of protocols not designed and evaluated for use in\n   key management (e.g.,\
    \ RADIUS, Diameter) to configure the security\n   association is also NOT RECOMMENDED.\
    \  Reading the Security\n   Associations via SNMP is allowed, but the information\
    \ is to be\n   treated as security-sensitive and protected by using the priv mode.\n\
    \   Also, the use of SNMP to configure which form of RIPv2 authentication\n  \
    \ is in use is also NOT RECOMMENDED because of a similar cascading\n   failure\
    \ issue.  Any future revision of the RIPv2 Management\n   Information Base (MIB)\
    \ [MB94] should consider making the\n   rip2IfConfAuthType object read-only. \
    \ Further, this object would need\n   a new enum value to accommodate the RIPv2\
    \ cryptographic\n   authentication type.  In addition, the compliance statement\
    \ for this\n   MIB does not have a MIN-ACCESS for this object.  At a minimum,\
    \ if the\n   MIB is updated, a new compliance statement SHOULD be written for\
    \ this\n   object that allows this object to be implemented as read-only.  For\n\
    \   the rip2ifConfAuthKey object, since this object always returns ''H\n   when\
    \ read, the object's MIN-ACCESS in any revised compliance\n   statement SHOULD\
    \ be not-accessible if the MIB is updated.\n   Further, for similar reasons, any\
    \ future revisions to the RIPv2\n   Management Information Base (MIB) SHOULD deprecate\
    \ or omit any\n   objects that would permit the writing of any RIPv2 Security\n\
    \   Association or RIPv2 Security Association component (e.g., the\n   cryptographic\
    \ key).\n   Also, it is RECOMMENDED that any future revisions to the RIPv2\n \
    \  Management Information Base (MIB) consider adding MIB objects to hold\n   information\
    \ about any RIPv2 security events that might have occurred,\n   and MIB objects\
    \ that could be used to read the set of security events\n   that have been logged\
    \ by the RIPv2 subsystem.  For each security\n   event mentioned in this document,\
    \ it is also RECOMMENDED that\n   appropriate notifications be included, with\
    \ a MAX-ACCESS of\n   Accessible-for-notify, in any future versions of the RIPv2\
    \ MIB\n   module.\n"
- title: 5.3.  Key Management Considerations
  contents:
  - "5.3.  Key Management Considerations\n   For the past several years, manual configuration\
    \ (e.g., via a\n   console) has been commonly used to create and modify RIPv2\
    \ Security\n   Associations.  There are a number of large-scale RIP deployments\n\
    \   today that successfully use manual configuration of RIPv2 Security\n   Associations.\
    \  There are also sites that use scripts (e.g., combining\n   Tcl/Expect, PERL,\
    \ and SSHv2) with a site-specific configuration\n   database and secure console\
    \ connections to dynamically manage all\n   aspects of their router configurations,\
    \ including their RIPv2\n   Security Associations.  This last approach is similar\
    \ to the current\n   IETF approach to Network Configuration (NetConf) standards.\n\
    \   Recent IETF Multicast Security (MSEC) working group efforts into\n   multicast\
    \ key management appear promising.  Several large RIPv2\n   deployments happen\
    \ to also have deployed the Kerberos authentication\n   system.  Recent IETF work\
    \ into the use of Kerberos for Internet Key\n   Negotiation (KINK) also seems\
    \ relevant; one might use Kerberos to\n   support RIPv2 key management functions\
    \ for use at sites that have\n   already deployed Kerberos.  It is hoped that\
    \ in the future the IETF\n   will standardize a key management protocol suitable\
    \ for managing\n   RIPv2 Security Associations.\n"
- title: 5.4.  Assurance Considerations
  contents:
  - "5.4.  Assurance Considerations\n   Users need to understand that the quality\
    \ of the security provided by\n   this mechanism depends completely on the strength\
    \ of the implemented\n   authentication algorithms, the strength of the key being\
    \ used, and\n   the correct implementation of the security mechanism in all\n\
    \   communicating RIPv2 implementations.  This mechanism also depends on\n   the\
    \ RIPv2 Authentication Key being kept confidential by all parties.\n   If any\
    \ of these are incorrect or insufficiently secure, then no real\n   security will\
    \ be provided to the users of this mechanism.\n   Use of high-assurance development\
    \ methods is RECOMMENDED for\n   implementations of this specification, in order\
    \ to reduce the risk of\n   subtle implementation flaws that might adversely impact\
    \ the\n   operational risk reduction that this specification seeks to provide.\n"
- title: 5.5.  Confidentiality and Traffic Analysis Considerations
  contents:
  - "5.5.  Confidentiality and Traffic Analysis Considerations\n   Confidentiality\
    \ is not provided by this mechanism.  It is generally\n   considered that an IP\
    \ routing protocol does not require\n   confidentiality, as the purpose of any\
    \ routing protocols is to\n   disseminate information about the topology of the\
    \ network.\n   Protection against traffic analysis is also not provided.  Mechanisms\n\
    \   such as bulk link encryption SHOULD be used when protection against\n   traffic\
    \ analysis is required [CKHD89].\n"
- title: 5.6.  Other Security Considerations
  contents:
  - "5.6.  Other Security Considerations\n   Separately, the receipt of a RIPv2 packet\
    \ using cryptographic\n   authentication but containing an invalid or unknown\
    \ Key-ID value\n   might indicate an active attack on the RIP routing subsystem\
    \ and is a\n   significant security event.  Therefore, any actual receipt of a\
    \ RIPv2\n   packet using cryptographic authentication and containing an unknown,\n\
    \   expired, or otherwise invalid KEY-ID value SHOULD cause a security\n   event\
    \ to be logged by the implementation.  This log item SHOULD\n   include at least\
    \ the fact that the invalid KEY-ID was received, the\n   source IP address of\
    \ the packet containing the invalid KEY-ID, the\n   interface(s) the packet was\
    \ received on, the KEY-ID received, and the\n   current date/time.\n   A subtle\
    \ user-interface consideration also should be noted.  If a\n   user interface\
    \ only permits the entry of human-readable text (e.g., a\n   password in US-ASCII\
    \ format) for use as a cryptographic key,\n   significant numbers of bits of the\
    \ cryptographic key in use become\n   predictable, thereby reducing the strength\
    \ of the key in this\n   context.  For this reason, implementations of this specification\n\
    \   SHOULD support the entry of RIPv2 cryptographic authentication keys\n   in\
    \ hexadecimal format.\n"
- title: 5.7.  Future Security Directions
  contents:
  - "5.7.  Future Security Directions\n   Specification and deployment of a standards-track\
    \ key management\n   protocol that supports this RIPv2 cryptographic authentication\n\
    \   mechanism would be a significant next step in operational risk\n   reduction\
    \ and might actually increase the ease of deployment and\n   operation of this\
    \ mechanism.  Such specification is beyond the scope\n   of this document.  Recent\
    \ IETF work in MSEC and KINK working groups\n   appears promising in this regard.\
    \  Recent IETF work in the NETCONF\n   working group towards standardizing methods\
    \ for secure configuration\n   management of routers is also relevant.\n   Finally,\
    \ we observe that this mechanism is not the final word on\n   RIPv2 authentication.\
    \  Rather, it is believed that this particular\n   mechanism represents a significant\
    \ risk reduction over previous\n   methods (e.g., plaintext passwords), while\
    \ remaining straightforward\n   to implement correctly and also straightforward\
    \ to deploy.\n   User communities that believe this mechanism is not adequate\
    \ to their\n   needs are encouraged to consider using digital signatures with\
    \ RIPv2.\n   [MBW97] specifies the use of OSPF with Digital signatures; that\n\
    \   document might be a starting point for creating such a specification\n   for\
    \ the RIPv2 protocol.  Digital signatures are significantly more\n   expensive\
    \ computationally and are also significantly more difficult\n   to deploy operationally,\
    \ as compared with the mechanism specified\n   here.  However, it appears likely\
    \ that much of the mechanism in this\n   document could be reused with digital\
    \ signatures.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Fred Baker was co-author of the earlier RIPv2 MD5 Authentication\n\
    \   document [AB97].  This document is a direct derivative of that\n   earlier\
    \ document, though it has been significantly reworked.  The\n   current authors\
    \ would like to thank Bill Burr, Tim Polk, John Kelsey,\n   and Morris Dworkin\
    \ of (US) NIST for review of versions of this\n   document.\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [BCP14]      Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [Mal98]      Malkin, G., \"RIP Version 2\", STD 56, RFC 2453, November\n\
    \                1998.\n   [FIPS-180-2] National Institute of Standards and Technology,\
    \ \"Secure\n                Hash Standard\", FIPS PUB 180-2, August 2002,\n  \
    \              <http://csrc.nist.gov/publications/fips/fips180-2/\n          \
    \      fips180-2.pdf>.\n   [FIPS-198]   National Institute of Standards and Technology,\
    \ \"The\n                Keyed-Hash Message Authentication Code (HMAC)\", FIPS\
    \ PUB\n                198, March 2002, <http://csrc.nist.gov/publications/\n\
    \                fips/fips198/fips-198a.pdf>.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [AB97]       Baker, F. and R. Atkinson, \"RIP-2\
    \ MD5 Authentication\",\n                RFC 2082, January 1997.\n   [Bell89]\
    \     S. Bellovin, \"Security Problems in the TCP/IP Protocol\n              \
    \  Suite\", ACM Computer Communications Review, Volume 19,\n                Number\
    \ 2, pp. 32-48, April 1989.\n   [CKHD89]     Cole Jr, Raymond, Donald Kallgren,\
    \ Richard Hale, and\n                John R. Davis, \"Multilevel Secure Mixed-Media\n\
    \                Communication Networks\", Proceedings of the IEEE\n         \
    \       Military Communications Conference (MILCOM '89), IEEE,\n             \
    \   1989.\n   [Dobb96a]    Dobbertin, H., \"Cryptanalysis of MD5 Compress\",\n\
    \                Technical Report, 2 May 1996.  (Presented at Rump\n         \
    \       Session of EuroCrypt 1996.)\n   [Dobb96b]    Dobbertin, H., \"The Status\
    \ of MD5 After a Recent\n                Attack\", CryptoBytes, Vol. 2, No. 2,\
    \ Summer 1996.\n   [ESC05]      Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n\
    \                \"Randomness Requirements for Security\", BCP 106, RFC\n    \
    \            4086, June 2005.\n   [HA94]       Haller, N. and R. Atkinson, \"\
    On Internet\n                Authentication\", RFC 1704, October 1994.\n   [KMC97]\
    \      Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC:\n                Keyed-Hashing\
    \ for Message Authentication\", RFC 2104,\n                February 1997.\n  \
    \ [Mal94]      Malkin, G., \"RIP Version 2 - Carrying Additional\n           \
    \     Information\", RFC 1723, November 1994.\n   [MB94]       Malkin, G. and\
    \ F. Baker, \"RIP Version 2 MIB Extension\",\n                RFC 1724, November\
    \ 1994.\n   [MBW97]      Murphy, S., Badger, M., and B. Wellington, \"OSPF with\n\
    \                Digital Signatures\", RFC 2154, June 1997.\n   [Rivest92]   Rivest,\
    \ R., \"The MD5 Message-Digest Algorithm\", RFC\n                1321, April 1992.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   R. Atkinson\n   Extreme Networks\n   3585 Monroe Street\n\
    \   Santa Clara, CA 95051\n   USA\n   Phone: +1 (408) 579-2800\n   EMail: rja@extremenetworks.com\n\
    \   M. Fanto\n   (US) National Institute of Standards and Technology\n   Gaithersburg,\
    \ MD 20878\n   USA\n   Phone: +1 (301) 975-2000\n   EMail: mattjf@umd.edu\n  \
    \ Web:   http://csrc.nist.gov\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
