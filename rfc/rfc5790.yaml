- title: __initial_text__
  contents:
  - " Lightweight Internet Group Management Protocol Version 3 (IGMPv3) and\n    \
    \    Multicast Listener Discovery Version 2 (MLDv2) Protocols\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes lightweight IGMPv3 and MLDv2 protocols (LW-\n\
    \   IGMPv3 and LW-MLDv2), which simplify the standard (full) versions of\n   IGMPv3\
    \ and MLDv2.  The interoperability with the full versions and\n   the previous\
    \ versions of IGMP and MLD is also taken into account.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5790.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Simplification Method Overview ..................................4\n    \
    \  3.1. Behavior of Group Members ..................................5\n      3.2.\
    \ Behavior of Multicast Routers ..............................5\n   4. LW-IGMPv3\
    \ Protocol for Group Members ............................6\n      4.1. Query and\
    \ Report Messages ..................................6\n      4.2. Action on Change\
    \ of Interface State ........................6\n      4.3. Action on Reception\
    \ of a Query .............................7\n      4.4. LW-IGMPv3 Group Record\
    \ Types ...............................7\n   5. LW-IGMPv3 Protocol for Multicast\
    \ Routers ........................9\n      5.1. Group Timers and Source Timers\
    \ in the Lightweight Version ..9\n      5.2. Source-Specific Forwarding Rules\
    \ ..........................10\n      5.3. Reception of Current-State Records\
    \ ........................10\n      5.4. Reception of Source-List-Change and\n\
    \           Filter-Mode-Change Records ................................12\n  \
    \ 6. Interoperability ...............................................13\n    \
    \  6.1. Interoperation with the Full Version of IGMPv3/MLDv2 ......13\n      \
    \     6.1.1. Behavior of Group Members ..........................13\n        \
    \   6.1.2. Behavior of Multicast Routers ......................13\n      6.2.\
    \ Interoperation with IGMPv1/IGMPv2 .........................14\n           6.2.1.\
    \ Behavior of Group Members ..........................14\n           6.2.2. Behavior\
    \ of Multicast Routers ......................14\n      6.3. Interoperation with\
    \ MLDv1 .................................15\n   7. Implementation Considerations\
    \ ..................................15\n      7.1. Implementation of Source-Specific\
    \ Multicast ...............15\n      7.2. Implementation of Multicast Source Filter\
    \ (MSF) APIs ......16\n   8. Security Considerations ........................................16\n\
    \   9. Acknowledgements ...............................................16\n  \
    \ 10. References ....................................................16\n    \
    \  10.1. Normative References .....................................16\n      10.2.\
    \ Informative References ...................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IGMP version 3 [2] and MLD version 2 [3] implement source\
    \ filtering\n   capabilities that are not supported by their earlier versions,\
    \ IGMPv1\n   [4], IGMPv2 [5], and MLDv1 [6].  An IGMPv3- or MLDv2-capable host\
    \ can\n   tell its upstream router which group it would like to join by\n   specifying\
    \ which sources it does or does not intend to receive\n   multicast traffic from.\
    \  IGMPv3 and MLDv2 add the capability for a\n   multicast router to learn sources\
    \ that are of interest or that are\n   not of interest for a particular multicast\
    \ address.  This information\n   is used during forwarding of multicast data packets.\n\
    \   INCLUDE and EXCLUDE filter-modes are introduced to support the source\n  \
    \ filtering function.  If a host wants to receive from specific\n   sources, it\
    \ sends an IGMPv3 or MLDv2 report with filter-mode set to\n   INCLUDE.  If the\
    \ host does not want to receive from some sources, it\n   sends a report with\
    \ filter-mode set to EXCLUDE.  A source-list for\n   the given sources shall be\
    \ included in the Report message.\n   INCLUDE and EXCLUDE filter-modes are also\
    \ defined in a multicast\n   router to process the IGMPv3 or MLDv2 reports.  When\
    \ a multicast\n   router receives the Report messages from its downstream hosts,\
    \ it\n   forwards the corresponding multicast traffic by managing requested\n\
    \   group and source addresses.  Group timers and source timers are used\n   to\
    \ maintain the forwarding state of desired groups and sources under\n   certain\
    \ filter-modes.  When a group report arrives or a certain timer\n   expires, a\
    \ multicast router may update the desired or undesired\n   source-lists, reset\
    \ related timer values, change filter-mode, or\n   trigger group queries.  With\
    \ all of the above factors correlating\n   with each other, the determination\
    \ rules become relatively complex,\n   as the interface states could be frequently\
    \ changed.\n   The multicast filter-mode improves the ability of the multicast\n\
    \   receiver to express its desires.  It is useful to support Source-\n   Specific\
    \ Multicast (SSM) [7] by specifying interesting source\n   addresses with INCLUDE\
    \ mode.  However, practical applications do not\n   use EXCLUDE mode to block\
    \ sources very often, because a user or\n   application usually wants to specify\
    \ desired source addresses, not\n   undesired source addresses.  Even if a user\
    \ explicitly refuses\n   traffic from some sources in a group, when other users\
    \ in the same\n   shared network have an interest in these sources, the corresponding\n\
    \   multicast traffic will still be forwarded to the network.  It is\n   generally\
    \ unnecessary to support the filtering function that blocks\n   sources.\n   This\
    \ document proposes simplified versions of IGMPv3 and MLDv2, named\n   Lightweight\
    \ IGMPv3 and Lightweight MLDv2 (or LW-IGMPv3 and LW-MLDv2).\n   LW-IGMPv3 and\
    \ LW-MLDv2 are subsets of the standard IGMPv3 and MLDv2.\n   They support both\
    \ Any-Source Multicast (ASM) and SSM communications\n   without a filtering function\
    \ that blocks sources.  Not only are they\n   compatible with the standard IGMPv3\
    \ and MLDv2, but also the protocol\n   operations made by hosts and routers (or\
    \ switches performing IGMPv3/\n   MLDv2 snooping) are simplified to reduce the\
    \ complicated operations.\n   Since LW-IGMPv3 and LW-MLDv2 are fully compatible\
    \ with IGMPv3 and\n   MLDv2, hosts or routers that have implemented the full version\
    \ do not\n   need to implement or modify anything to cooperate with LW-IGMPv3/\n\
    \   LW-MLDv2 hosts or routers.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL\n   NOT\",\"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in\n   this document are to be interpreted as described in RFC\
    \ 2119 [1].\n   In addition, the following terms are used in this document.\n\
    \   (*,G) join:\n   An operation triggered by a host that wants to join a group\
    \ G.  In\n   this case, the host receives from all sources sending to group G.\n\
    \   This is typical in ASM communication.\n   (S,G) join:\n   An operation triggered\
    \ by a host that wants to join a group G,\n   specifying a desired source S. \
    \ In this case, the host receives\n   traffic only from source S sending to group\
    \ G.\n   INCLUDE (S,G) join:\n   An operation triggered by a host that wants to\
    \ join a group G under\n   INCLUDE filter-mode, specifying a desired source S.\
    \  Same meaning as\n   (S,G) join.\n   EXCLUDE (*,G) join:\n   An operation triggered\
    \ by a host that wants to join a group G under\n   EXCLUDE filter-mode.  Same\
    \ meaning as (*,G) join.\n   EXCLUDE (S,G) join:\n   An operation triggered by\
    \ a host that wants to join a group G under\n   EXCLUDE filter-mode, specifying\
    \ an undesired source S.  This\n   operation is not supported by LW-IGMPv3/LW-MLDv2.\n"
- title: 3.  Simplification Method Overview
  contents:
  - "3.  Simplification Method Overview\n   The principle is to simplify the host's\
    \ and router's behavior as much\n   as possible to improve efficiency, while guaranteeing\n\
    \   interoperability with the full versions, and introducing no side\n   effects\
    \ on applications.\n   For convenience, this document mainly discusses IGMPv3,\
    \ since MLDv2\n   inherits the same source filtering mechanism, but this document\n\
    \   additionally shows MLDv2's unique specifications when needed.\n"
- title: 3.1.  Behavior of Group Members
  contents:
  - "3.1.  Behavior of Group Members\n   LW-IGMPv3 inherits the service interface\
    \ model of IGMPv3.\n     IPMulticastListen ( socket, interface, multicast-address,\n\
    \                         filter-mode, source-list )\n   In the lightweight protocol,\
    \ INCLUDE mode on the host part has the\n   same usage as the full version for\
    \ INCLUDE (S,G) join, while EXCLUDE\n   mode on the host part is preserved only\
    \ for excluding null source-\n   lists, which denotes a (*,G) join as used by\
    \ IGMPv2/IGMPv1/MLDv1.\n   The detailed host operation of LW-IGMPv3/LW-MLDv2 is\
    \ described in\n   Section 4.\n"
- title: 3.2.  Behavior of Multicast Routers
  contents:
  - "3.2.  Behavior of Multicast Routers\n   In IGMPv3, router filter-mode is defined\
    \ to optimize the state\n   description of a group membership [2].  As a rule,\
    \ once a member\n   report is in EXCLUDE mode, the router filter-mode for the\
    \ group will\n   be set to EXCLUDE.  When all systems cease sending EXCLUDE mode\n\
    \   reports, the filter-mode for that group may transit back to INCLUDE\n   mode.\
    \  The group timer is used to identify such a transition.\n   In LW-IGMPv3, hosts\
    \ primarily send INCLUDE requests, and also can\n   request an EXCLUDE (*,G) join,\
    \ which can be interpreted by the router\n   as a request to include all sources.\
    \  Without the more general form\n   of EXCLUDE requests, it is unnecessary for\
    \ the router to maintain the\n   EXCLUDE filter-mode, and the state model for\
    \ multicast routers can be\n   simplified as:\n      (multicast address, group\
    \ timer, (source records))\n   Here a group timer is kept to represent a (*,G)\
    \ join.  Its basic\n   behavior is: when a router receives a (*,G) join, it will\
    \ set its\n   group timer and keep the source-list for sources specified in the\n\
    \   previously received source records.  When the group timer expires,\n   the\
    \ router may change to reception of the listed sources only.  The\n   definition\
    \ of the source record is the same as in the full version.\n   The elimination\
    \ of the filter-mode will greatly simplify the router\n   behavior.  The details\
    \ of router operation are described in\n   Section 5.\n"
- title: 4.  LW-IGMPv3 Protocol for Group Members
  contents:
  - '4.  LW-IGMPv3 Protocol for Group Members

    '
- title: 4.1.  Query and Report Messages
  contents:
  - "4.1.  Query and Report Messages\n   LW-IGMPv3 uses the same two sets of messages,\
    \ Query and Report\n   messages, as the full version protocols.  There is no difference\n\
    \   between the definition and usage of the Query message.  But the\n   report\
    \ types in lightweight protocols are reduced because an\n   operation that triggers\
    \ EXCLUDE (S,G) join is omitted.\n   There are three Group Record Types defined\
    \ in the full IGMPv3: the\n   Current-State Record denoted by MODE_IS_INCLUDE\
    \ (referred to as\n   IS_IN) or MODE_IS_EXCLUDE (IS_EX), the Filter-Mode-Change\
    \ Record\n   denoted by CHANGE_TO_INCLUDE_MODE (TO_IN) or CHANGE_TO_EXCLUDE_MODE\n\
    \   (TO_EX), and the Source-List-Change Record denoted by\n   ALLOW_NEW_SOURCES\
    \ (ALLOW) or BLOCK_OLD_SOURCES (BLOCK).  LW-IGMPv3\n   inherits the actions on\
    \ change of interface state and on reception of\n   a query, but the IS_IN and\
    \ IS_EX record types are eliminated and\n   Current-State Records are replaced\
    \ by other records.  The following\n   sections explain the details.\n"
- title: 4.2.  Action on Change of Interface State
  contents:
  - "4.2.  Action on Change of Interface State\n   When the state of an interface\
    \ of a group member host is changed, a\n   State-Change Report for that interface\
    \ is immediately transmitted\n   from that interface.  The type and contents of\
    \ the Group Record(s) in\n   that report are determined by comparing the filter-mode\
    \ and source-\n   list for the affected multicast address before and after the\
    \ change.\n   While the requirements for the computation are the same as for the\n\
    \   full version, in a lightweight version host the interface state\n   change\
    \ rules are simplified due to the reduction of message types.\n   The contents\
    \ of the new transmitted report are calculated as follows\n   (Group Record Types\
    \ are described in Section 4.4):\n         Old State        New State        State-Change\
    \ Report Sent\n         -----------      -----------      ------------------------\n\
    \         INCLUDE (A)      INCLUDE (B)      ALLOW(B-A), BLOCK(A-B)\n         INCLUDE\
    \ (A)      EXCLUDE ({})     TO_EX({})\n         INCLUDE ({})     EXCLUDE ({})\
    \     TO_EX({})\n         EXCLUDE ({})     INCLUDE (B)      TO_IN(B)\n   As in\
    \ the full version, to cover the possibility of the State-Change\n   Report being\
    \ missed by one or more multicast routers, it is\n   retransmitted [Robustness\
    \ Variable]-1 more times, at intervals chosen\n   at random from the range (0,\
    \ [Unsolicited Report Interval]).  (These\n   values are defined in [2][3].)\n"
- title: 4.3.  Action on Reception of a Query
  contents:
  - "4.3.  Action on Reception of a Query\n   As in the full version, when a lightweight\
    \ version host receives a\n   query, it does not respond immediately.  Instead,\
    \ it delays its\n   response by a random amount of time, bounded by the Max Resp\
    \ Time\n   value derived from the Max Resp Code in the received Query message\n\
    \   [2][3].  The system may receive a variety of queries on different\n   interfaces\
    \ and of different kinds (e.g., General Queries, Group-\n   Specific Queries,\
    \ and Group-and-Source-Specific Queries), each of\n   which may require its own\
    \ delayed response.\n   Before scheduling a response to a query, the system must\
    \ first\n   consider previously scheduled pending responses and in many cases\n\
    \   schedule a combined response.  Therefore, the lightweight version\n   host\
    \ must be able to maintain the following state:\n    o A timer per interface for\
    \ scheduling responses to General Queries.\n    o A per-group and interface timer\
    \ for scheduling responses to Group-\n     Specific and Group-and-Source-Specific\
    \ Queries.\n    o A per-group and interface list of sources to be reported in\
    \ the\n     response to a Group-and-Source-Specific Query.\n   LW-IGMPv3 inherits\
    \ the full version's rules that are used to\n   determine if a report needs to\
    \ be scheduled.  The difference is\n   regarding the simplification of EXCLUDE\
    \ filter-mode and the type of\n   report as detailed in Section 4.4.\n"
- title: 4.4.  LW-IGMPv3 Group Record Types
  contents:
  - "4.4.  LW-IGMPv3 Group Record Types\n   Among the Group Record Types defined in\
    \ the full IGMPv3, several\n   record types are not used in LW-IGMPv3 as some\
    \ of the processes\n   related to the filter-mode change to the EXCLUDE mode are\
    \ eliminated\n   and some of the Report messages are converged into a record having\
    \ a\n   null source address list.  All of the record types of Report messages\n\
    \   used by the full and lightweight version protocols are shown as\n   follows:\n\
    \      IGMPv3       LW-IGMPv3    Comments\n      ---------    ---------    -------------------------------------\n\
    \      IS_EX({})    TO_EX({})    Query response for (*,G) join\n      IS_EX(x)\
    \     N/A          Query response for EXCLUDE (x,G) join\n      IS_IN(x)     ALLOW(x)\
    \     Query response for INCLUDE (x,G) join\n      ALLOW(x)     ALLOW(x)     INCLUDE\
    \ (x,G) join\n      BLOCK(x)     BLOCK(x)     INCLUDE (x,G) leave\n      TO_IN(x)\
    \     TO_IN(x)     Change to INCLUDE (x,G) join\n      TO_IN({})    TO_IN({})\
    \    (*,G) leave\n      TO_EX(x)     N/A          Change to EXCLUDE (x,G) join\n\
    \      TO_EX({})    TO_EX({})    (*,G) join\n   where \"x\" represents a non-null\
    \ source address list and \"({})\"\n   represents a null source address list.\
    \  For instance, IS_EX({}) means\n   a report whose record type is IS_EX with\
    \ a null source address list.\n   \"N/A\" represents not applicable (or no use)\
    \ because the corresponding\n   operation should not occur in the lightweight\
    \ version protocols.\n   LW-IGMPv3 does not use EXCLUDE filter-mode with a non-null\
    \ source\n   address list.  A multicast router creates the same state when it\n\
    \   receives a Report message containing either IS_EX({}) or TO_EX({})\n   record\
    \ types.  Therefore, LW-IGMPv3 integrates the IS_EX({})\n   operation with the\
    \ TO_EX({}) operation.\n   When an LW-IGMPv3 host needs to make a query response\
    \ for the state\n   of INCLUDE (x,G) join, it makes a response whose message type\
    \ is\n   expressed with ALLOW(x), instead of using the IS_IN record type.\n  \
    \ Because the router's processing of the two messages is exactly the\n   same,\
    \ the IS_IN(x) type is eliminated for simplification.\n   An LW-IGMPv3 host does\
    \ not use EXCLUDE mode, while TO_IN and TO_EX\n   records are used for example\
    \ in the following situation: the host\n   first launches an application (AP1)\
    \ that requests INCLUDE (x,G) join,\n   and sends ALLOW(x).  Then the host launches\
    \ another application (AP2)\n   that joins (*,G), and it sends TO_EX({}).  In\
    \ this condition, when\n   AP2 terminates but AP1 keeps working on the lightweight\
    \ version host,\n   the host sends a report with TO_IN(x) record type for [Robustness\n\
    \   Variable] times.\n   Although an LW-IGMPv3 host adopts the four message types\
    \ (ALLOW,\n   BLOCK, TO_IN, and TO_EX) for simplification, using IS_EX({}) and\n\
    \   IS_IN(x) (respectively, instead of TO_EX({}) and ALLOW(x)) in\n   response\
    \ to queries is not inhibited.  This will not introduce the\n   interoperation\
    \ problem because the router process is, respectively,\n   the same for the mentioned\
    \ two message set, as long as the router\n   implementation follows the rules\
    \ given by full IGMPv3.\n"
- title: 5.  LW-IGMPv3 Protocol for Multicast Routers
  contents:
  - "5.  LW-IGMPv3 Protocol for Multicast Routers\n   The major difference between\
    \ the full and lightweight version\n   protocols on the router part is that in\
    \ the lightweight version\n   filter-mode is discarded and the function of the\
    \ group timer is\n   redefined.  The states maintained by the lightweight router\
    \ are\n   reduced and the protocol operation is greatly simplified.\n"
- title: 5.1.  Group Timers and Source Timers in the Lightweight Version
  contents:
  - "5.1.  Group Timers and Source Timers in the Lightweight Version\n   In lightweight\
    \ and full IGMPv3 routers, a source timer is kept for\n   each source record and\
    \ it is updated when the source is present in a\n   received report.  It indicates\
    \ the validity of the source and needs\n   to be referred to when the router takes\
    \ its forwarding decision.\n   The group timer being used in the full version\
    \ of IGMPv3 for\n   transitioning the router's filter-mode from EXCLUDE to INCLUDE\
    \ is\n   redefined in the lightweight protocols to identify the non-source-\n\
    \   specific receiving state maintained for (*,G) join.  Once a group\n   record\
    \ of TO_EX({}) is received, the group timer is set to represent\n   this (*,G)\
    \ group join.  The expiration of the group timer indicates\n   that there are\
    \ no more listeners on the attached network for this\n   (*,G) group.  Then if\
    \ at this moment there are unexpired sources\n   (whose source timers are greater\
    \ than zero), the router will change\n   to receiving traffic for those sources\
    \ only.  The role of the group\n   timer can be summarized as follows:\n     \
    \  Group Timer Value      Actions/Comments\n       ------------------     --------------------------------------\n\
    \       G_Timer > 0            All members in this group.\n       G_Timer == 0\
    \           No more listeners to this (*,G) group.\n                         \
    \     If all source timers have expired, then\n                              delete\
    \ group record.  If there are\n                              still source record\
    \ timers running,\n                              use those source records with\
    \ running\n                              timers as the source record state.\n\
    \   The operation related to the group and source timers has some\n   differences\
    \ compared to the full IGMPv3.  In the full version, if a\n   source timer expires\
    \ under the EXCLUDE router filter-mode, its\n   corresponding source record is\
    \ not deleted until the group timer\n   expires for indicating undesired sources.\
    \  In the lightweight\n   version, since there is no need to keep such records\
    \ for blocking\n   specific sources, if a source timer expires, its source record\
    \ should\n   be deleted immediately, not waiting for the time-out of the group\n\
    \   timer.\n"
- title: 5.2.  Source-Specific Forwarding Rules
  contents:
  - "5.2.  Source-Specific Forwarding Rules\n   A full version multicast router needs\
    \ to consult IGMPv3 state\n   information when it makes decisions on forwarding\
    \ a datagram from a\n   source, based on the router filter-mode and source timer.\
    \  In LW-\n   IGMPv3, because of the absence of the router filter-mode, the group\n\
    \   timer and source timer could be used for such decisions.  The\n   forwarding\
    \ suggestion made by LW-IGMPv3 to the routing protocols is\n   summarized as follows:\n\
    \       Group Timer    Source Timer          Action\n       ------------   ------------------\
    \    -----------------------\n       G_Timer == 0   S_Timer > 0           Suggest\
    \ forwarding\n                                            traffic from source\n\
    \       G_Timer == 0   S_Timer == 0          Suggest stopping\n              \
    \                              forwarding traffic from\n                     \
    \                       source and remove\n                                  \
    \          source record.  If there\n                                        \
    \    are no more source\n                                            records for\
    \ the group,\n                                            delete group record\n\
    \       G_Timer == 0   No Source Elements    Suggest not forwarding\n        \
    \                                    traffic from source\n       G_Timer > 0 \
    \   S_Timer >= 0          Suggest forwarding\n                               \
    \             traffic from source\n       G_Timer > 0    No Source Elements  \
    \  Suggest forwarding\n                                            traffic from\
    \ source\n"
- title: 5.3.  Reception of Current-State Records
  contents:
  - "5.3.  Reception of Current-State Records\n   When receiving Current-State Records,\
    \ the LW-IGMPv3 router resets its\n   group or source timers and updates its source-list\
    \ within the group.\n   For source-specific group reception state (when G_Timer\
    \ == 0 and\n   S_Timer > 0), the source-list contains sources whose traffic will\
    \ be\n   forwarded by the router, while in non-source-specific group reception\n\
    \   (when G_Timer > 0), the source-list remembers the valid sources to\n   receive\
    \ traffic from after toggling to source-specific reception\n   state.\n   Although\
    \ the LW-IGMPv3 host only sends a subset of the messages of\n   the full version,\
    \ the LW-IGMPv3 router should be able to process as\n   many messages as possible\
    \ to be compatible with the full version\n   host.  Note that if the report type\
    \ is IS_EX(x) with a non-empty\n   source-list, the router will treat it as the\
    \ same type of report with\n   an empty source-list.  The following table describes\
    \ the action taken\n   by a multicast router after receiving Current-State Records.\
    \  The\n   notations have the same meaning as those in the full IGMPv3 protocol.\n\
    \                       Old                     New\n                       Source-\
    \                 Source-\n        Group Timer    List     Report Rec'd   List\
    \     Actions\n        ------------   ------   ------------   ------   -----------\n\
    \        G_Timer == 0     A       IS_IN(B)       A+B     (B)=GMI\n        G_Timer\
    \ == 0     A       IS_EX({})       A      G_Timer=GMI\n        G_Timer > 0   \
    \   A       IS_IN(B)       A+B     (B)=GMI\n        G_Timer > 0      A       IS_EX({})\
    \       A      G_Timer=GMI\n   The above table could be further simplified since\
    \ the processes are\n   exactly the same for the two values of the G_Timer:\n\
    \               Old                      New\n               Source-         \
    \         Source-\n               List     Report Rec'd    List     Actions\n\
    \               ------   ------------    ------   -----------\n              \
    \   A       IS_IN(B)        A+B     (B)=GMI\n                 A       IS_EX({})\
    \        A      G_Timer=GMI\n   Without EXCLUDE filter-mode, a router's process\
    \ on receiving a\n   Current-State Record is simple: when a router receives an\
    \ IS_IN\n   report, it appends the reported source addresses to the previous\n\
    \   source-list with their source timers set to GMI.  Upon receiving an\n   IS_EX({})\
    \ report, the router sets the non-source-specific receiving\n   states by resetting\
    \ the group timer value and keeps the previous\n   source-list without modification.\n"
- title: 5.4.  Reception of Source-List-Change and Filter-Mode-Change Records
  contents:
  - "5.4.  Reception of Source-List-Change and Filter-Mode-Change Records\n   On receiving\
    \ Source-List-Change and Filter-Mode-Change Records, the\n   LW-IGMPv3 router\
    \ needs to reset its group and source timers, update\n   its source-list within\
    \ the group, or trigger group queries.  The\n   queries are sent by the router\
    \ for the sources that are requested to\n   be no longer forwarded to a group.\
    \  Note that if the report type is\n   TO_EX(x) with a non-empty source-list,\
    \ the router will treat it as\n   the same type of report with an empty source-list.\
    \  The table below\n   describes the state change and the actions that should\
    \ be taken.\n                      Old                     New\n             \
    \         Source-                 Source-\n       Group Timer    List     Report\
    \ Rec'd   List     Actions\n       ------------   ------   ------------   ------\
    \   -------------\n       G_Timer == 0     A       ALLOW(B)       A+B     (B)=GMI\n\
    \       G_Timer == 0     A       BLOCK(B)        A      Send Q(G,A*B)\n      \
    \ G_Timer == 0     A       TO_IN(B)       A+B     (B)=GMI\n                  \
    \                                     Send Q(G,A-B)\n       G_Timer == 0     A\
    \       TO_EX({})       A      G_Timer=GMI\n       G_Timer > 0      A       ALLOW(B)\
    \       A+B     (B)=GMI\n       G_Timer > 0      A       BLOCK(B)        A   \
    \   Send Q(G,A*B)\n       G_Timer > 0      A       TO_IN(B)       A+B     (B)=GMI\n\
    \                                                       SendQ(G,A-B)\n       \
    \                                                Send Q(G)\n       G_Timer > 0\
    \      A       TO_EX({})       A      G_Timer=GMI\n   The table could be further\
    \ simplified by merging duplicate lines:\n          Old                     New\n\
    \          Source-                 Source-\n          List     Report Rec'd  \
    \ List     Actions\n          ------   ------------   ------   ----------------------\n\
    \            A       ALLOW(B)       A+B     (B)=GMI\n            A       BLOCK(B)\
    \        A      Send Q(G,A*B)\n            A       TO_IN(B)       A+B     (B)=GMI\n\
    \                                           Send Q(G,A-B)\n                  \
    \                         If G_Timer>0 Send Q(G)\n            A       TO_EX({})\
    \       A      G_Timer=GMI\n"
- title: 6.  Interoperability
  contents:
  - "6.  Interoperability\n   LW-IGMPv3/LW-MLDv2 hosts and routers must interoperate\
    \ with hosts and\n   routers of the full version [2][3].  Also, LW-IGMPv3/LW-MLDv2\
    \ hosts\n   and routers must interoperate gracefully with hosts and routers\n\
    \   running IGMPv1/v2 or MLDv1.\n"
- title: 6.1.  Interoperation with the Full Version of IGMPv3/MLDv2
  contents:
  - "6.1.  Interoperation with the Full Version of IGMPv3/MLDv2\n   LW-IGMPv3/LW-MLDv2\
    \ do not introduce any change on the message formats\n   of the group Query and\
    \ Report messages that the full version\n   protocols use.\n"
- title: 6.1.1.  Behavior of Group Members
  contents:
  - "6.1.1.  Behavior of Group Members\n   An LW-IGMPv3 host's compatibility mode\
    \ is determined from the Host\n   Compatibility Mode variable, which can be in\
    \ one of three states:\n   IGMPv1, IGMPv2, or IGMPv3.  When a lightweight host\
    \ behaves on its\n   interface as LW-IGMPv3, its Host Compatibility Mode of that\
    \ interface\n   is set to IGMPv3, and the host sends a subset of IGMPv3 Report\n\
    \   messages, which can be recognized by a multicast router running the\n   full\
    \ or the lightweight IGMPv3 protocol on the same LAN.\n"
- title: 6.1.2.  Behavior of Multicast Routers
  contents:
  - "6.1.2.  Behavior of Multicast Routers\n   An LW-IGMPv3 or LW-MLDv2 router does\
    \ not process directly IS_EX(x)\n   and TO_EX(x) reports that are used by the\
    \ full version.  When an LW-\n   IGMPv3/LW-MLDv2 router receives these Report\
    \ messages from full\n   version hosts, it MUST translate them internally to IS_EX({})\
    \ and\n   TO_EX({}) respectively and behave accordingly.\n"
- title: 6.2.  Interoperation with IGMPv1/IGMPv2
  contents:
  - "6.2.  Interoperation with IGMPv1/IGMPv2\n   Since the lightweight protocols can\
    \ be treated as a parallel version\n   of the full version of IGMPv3/MLDv2, its\
    \ compatibility principle and\n   method with the older version are generally\
    \ the same as that of full\n   IGMPv3/MLDv2.\n"
- title: 6.2.1.  Behavior of Group Members
  contents:
  - "6.2.1.  Behavior of Group Members\n   The Host Compatibility Mode of an interface\
    \ is set to IGMPv2 and its\n   IGMPv2 Querier Present timer is set to Older Version\
    \ Querier Present\n   Timeout seconds (defined in [2]) whenever an IGMPv2 General\
    \ Query is\n   received on that interface.  The Host Compatibility Mode of an\n\
    \   interface is set to IGMPv1 and its IGMPv1 Querier Present timer is\n   set\
    \ to Older Version Querier Present Timeout seconds whenever an\n   IGMPv1 Membership\
    \ Query is received on that interface.\n   In the presence of older version group\
    \ members, LW-IGMPv3 hosts may\n   allow its Report message to be suppressed by\
    \ either an IGMPv1 or\n   IGMPv2 membership report.  However, because the transmission\
    \ of\n   IGMPv1 or v2 packets reduces the capability of the LW-IGMPv3 system,\n\
    \   as a potential protection mechanism, the choice to enable or disable\n   the\
    \ use of backward compatibility may be configurable.\n"
- title: 6.2.2.  Behavior of Multicast Routers
  contents:
  - "6.2.2.  Behavior of Multicast Routers\n   The behavior of an LW-IGMPv3 router\
    \ when placed on a network where\n   there are routers that have not been upgraded\
    \ to IGMPv3 is exactly\n   the same as for a full IGMPv3 router in this situation\
    \ [2].\n   A full IGMPv3 router uses Group Compatibility Mode (whose value is\n\
    \   either of IGMPv1, IGMPv2, or IGMPv3) per group record to indicate\n   which\
    \ version of IGMP protocol it applies to the group.  This value\n   is set according\
    \ to the version of the received IGMP reports.  When\n   Group Compatibility Mode\
    \ is IGMPv3, the lightweight router performs\n   the LW-IGMPv3 protocol for that\
    \ group.\n   When Group Compatibility Mode is IGMPv2, an LW-IGMPv3 router inherits\n\
    \   this compatibility mechanism with the following rules:\n                 IGMP\
    \ Message          LW-IGMPv3 Equivalent\n                --------------      \
    \   --------------------\n                  v2 Report                 TO_EX({})\n\
    \                  v2 Leave                  TO_IN({})\n   When Group Compatibility\
    \ Mode is IGMPv1, an LW-IGMPv3 router\n   internally translates the following\
    \ IGMPv1 and IGMPv2 messages for\n   that group to their LW-IGMPv3 equivalents:\n\
    \                 IGMP Message          LW-IGMPv3 Equivalent\n               \
    \ --------------         --------------------\n                  v1 Report   \
    \              TO_EX({})\n                  v2 Report                 TO_EX({})\n"
- title: 6.3.  Interoperation with MLDv1
  contents:
  - "6.3.  Interoperation with MLDv1\n   LW-MLDv2 hosts and routers MUST interoperate\
    \ with hosts and routers\n   running MLDv1.  The method is the same as described\
    \ in Section 6.2.\n   The difference is that when an LW-MLDv2 router has a MLDv1\
    \ listener\n   on its network, it translates the following MLDv1 messages to their\n\
    \   LW-MLDv2 equivalents:\n                 MLDv1 Message         LW-MLDv2 Equivalent\n\
    \                 -------------         -------------------\n                \
    \   Report                  TO_EX({})\n                   Done               \
    \     TO_IN({})\n"
- title: 7.  Implementation Considerations
  contents:
  - "7.  Implementation Considerations\n   The lightweight protocols require no additional\
    \ procedure for the\n   implementation of the related protocols or systems, e.g.,\
    \ IGMP/MLD\n   snooping, multicast routing protocol, and operation of application\n\
    \   sockets, while the processing loads on the switches and routers that\n   run\
    \ IGMPv3/MLDv2 (snooping) and multicast routing protocols may be\n   greatly decreased.\n"
- title: 7.1.  Implementation of Source-Specific Multicast
  contents:
  - "7.1.  Implementation of Source-Specific Multicast\n   [8] specifies the requirements\
    \ for the implementation of Source-\n   Specific Multicast (SSM) on IGMPv3/MLDv2\
    \ hosts and routers.  The\n   lightweight protocol follows the same rules as given\
    \ in [8] except\n   for the change of the message types due to the simplification.\n\
    \   An LW-IGMPv3/LW-MLDv2 host should not invoke (*,G) join (i.e.,\n   TO_EX({}))\
    \ and (*,G) leave (i.e., TO_IN({})) for applications whose\n   multicast addresses\
    \ are in the SSM address range.  An upstream LW-\n   IGMPv3/LW-MLDv2 router MUST\
    \ NOT establish forwarding state and MAY\n   log an error on reception of them\
    \ as described in [7].\n"
- title: 7.2.  Implementation of Multicast Source Filter (MSF) APIs
  contents:
  - "7.2.  Implementation of Multicast Source Filter (MSF) APIs\n   [9] defines the\
    \ following Multicast Source Filter (MSF) APIs: (1)\n   IPv4 Basic MSF APIs, (2)\
    \ IPv4 Advanced MSF APIs, (3) Protocol-\n   Independent Basic MSF APIs, and (4)\
    \ Protocol-Independent Advanced MSF\n   APIs.\n   According to the MSF API definition,\
    \ an LW-IGMPv3 host should\n   implement either the IPv4 Basic MSF API or the\
    \ Protocol-Independent\n   Basic MSF API, and an LW-MLDv2 host should implement\
    \ the Protocol-\n   Independent Basic MSF API.  Other APIs, IPv4 Advanced MSF\
    \ API and\n   Protocol-Independent Advanced MSF API, are optional to implement\
    \ in\n   an LW-IGMPv3/LW-MLDv2 host.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security considerations are the same as that\
    \ of the full version\n   of IGMPv3/MLDv2.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank MBONED and MAGMA working\
    \ group\n   members.  Special thanks is given to Marshall Eubanks, Guo Feng, Mark\n\
    \   Fine, Alfred Hoenes, Prashant Jhingran, Bharat Joshi, Guo Tao, Wang\n   Wendong,\
    \ and Gong Xiangyang for their valuable suggestions and\n   comments on this document.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Cain, B., Deering, S., Kouvelas, I., Fenner, B., and A.\n        Thyagarajan,\
    \ \"Internet Group Management Protocol, Version 3\",\n        RFC 3376, October\
    \ 2002.\n   [3]  Vida, R. and L. Costa, \"Multicast Listener Discovery Version\
    \ 2\n        (MLDv2) for IPv6\", RFC 3810, June 2004.\n   [4]  Deering, S., \"\
    Host extensions for IP multicasting\", STD 5,\n        RFC 1112, August 1989.\n\
    \   [5]  Fenner, W., \"Internet Group Management Protocol, Version 2\",\n    \
    \    RFC 2236, November 1997.\n   [6]  Deering, S., Fenner, W., and B. Haberman,\
    \ \"Multicast Listener\n        Discovery (MLD) for IPv6\", RFC 2710, October\
    \ 1999.\n   [7]  Holbrook, H. and B. Cain, \"Source-Specific Multicast for IP\"\
    ,\n        RFC 4607, August 2006.\n   [8]  Holbrook, H., Cain, B., and B. Haberman,\
    \ \"Using Internet Group\n        Management Protocol Version 3 (IGMPv3) and Multicast\
    \ Listener\n        Discovery Protocol Version 2 (MLDv2) for Source-Specific\n\
    \        Multicast\", RFC 4604, August 2006.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [9]  Thaler, D., Fenner, B., and B. Quinn,\
    \ \"Socket Interface\n        Extensions for Multicast Source Filters\", RFC 3678,\n\
    \        January 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hui Liu\n   Huawei Technologies Co., Ltd.\n   Huawei Bld.,\
    \ No.3 Xinxi Rd.\n   Shang-Di Information Industry Base\n   Hai-Dian Distinct,\
    \ Beijing  100085\n   China\n   EMail: Liuhui47967@huawei.com\n   Wei Cao\n  \
    \ Huawei Technologies Co., Ltd.\n   Huawei Bld., No.3 Xinxi Rd.\n   Shang-Di Information\
    \ Industry Base\n   Hai-Dian Distinct, Beijing  100085\n   China\n   EMail: caowayne@huawei.com\n\
    \   Hitoshi Asaeda\n   Keio University\n   Graduate School of Media and Governance\n\
    \   5322 Endo\n   Fujisawa, Kanagawa  252-8520\n   Japan\n   EMail: asaeda@wide.ad.jp\n"
