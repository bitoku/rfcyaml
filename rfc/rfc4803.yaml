- contents:
  - "           Generalized Multiprotocol Label Switching (GMPLS)\n        Label Switching
    Router (LSR) Management Information Base\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes managed objects to configure and/or\n   monitor a Generalized
    Multiprotocol Label Switching (GMPLS) Label\n   Switching Router (LSR).\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Migration Strategy .........................................2\n   2.
    Terminology .....................................................3\n   3. The
    Internet-Standard Management Framework ......................4\n   4. Outline
    .........................................................5\n      4.1. MIB Modules
    ................................................5\n           4.1.1. Summary of
    the GMPLS-LSR-STD-MIB Module .............5\n           4.1.2. Summary of the
    GMPLS-LABEL-STD-MIB Module ...........5\n      4.2. Configuring Statically Provisioned
    LSPs ....................5\n   5. Bidirectional LSPs ..............................................6\n
    \  6. Example of LSP Setup ............................................7\n   7.
    GMPLS Label Switching Router MIB Definitions ...................11\n   8. GMPLS
    Label MIB Definitions ....................................22\n   9. Security Considerations
    ........................................36\n   10. Acknowledgments ...............................................37\n
    \  11. IANA Considerations ...........................................38\n   12.
    References ....................................................38\n      12.1.
    Normative References .....................................38\n      12.2. Informative
    References ...................................40\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information
    Base (MIB)\n   for use with network management protocols in the Internet community.\n
    \  In particular, it describes managed objects for modeling a\n   Generalized
    Multiprotocol Label Switching (GMPLS) [RFC3945] Label\n   Switching Router (LSR).\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n
    \  document are to be interpreted as described in BCP 14, RFC 2119\n   [RFC2119].\n"
  - contents:
    - "1.1.  Migration Strategy\n   MPLS LSRs may be modeled and managed using the
      MPLS-LSR-STD-MIB\n   module [RFC3813].\n   LSRs may be migrated to be modeled
      and managed using the MIB modules\n   in this document in order to migrate the
      LSRs to GMPLS support, or to\n   take advantage of additional MIB objects defined
      in these MIB modules\n   that are applicable to MPLS-TE.\n   The GMPLS LSR MIB
      module (GMPLS-LSR-STD-MIB), defined in this\n   document, extends the MPLS-LSR-STD-MIB
      module [RFC3813] through a\n   series of sparse augmentations of the MIB tables.
      \ The only additions\n   are for support of GMPLS or to support the increased
      complexity of\n   MPLS and GMPLS systems.\n   In order to migrate from MPLS-LSR-STD-MIB
      support to GMPLS-LSR-STD-\n   MIB support, an implementation needs only to add
      support for the\n   additional tables and objects defined in GMPLS-LSR-STD-MIB.
      \ The\n   gmplsInterfaceSignalingCaps object allows an implementation to use\n
      \  the objects and tables of GMPLS-LSR-STD-MIB without supporting the\n   GMPLS
      protocols.\n   The GMPLS Label MIB module (GMPLS-LABEL-STD-MIB), also defined
      in\n   this document, allows labels to be configured and examined, and it\n
      \  supports more varieties of labels as appropriate for GMPLS.  Labels\n   may
      be referenced using a row pointer from objects within the GMPLS-\n   LSR-STD-MIB
      module.  MPLS implementations (MPLS-LSR-STD-MIB) may also\n   reference labels
      held in the GMPLS-LABEL-STD-MIB module through the\n   various label pointer
      objects in the MPLS-LSR-STD-MIB module (such as\n   mplsInSegmentLabelPtr),
      and may do so without implementing the\n   GMPLS-LSR-STD-MIB module.\n   The
      companion document modeling and managing GMPLS-based traffic\n   engineering
      [RFC4802] extends the MPLS-TE-STD-MIB module [RFC3812]\n   with the same intentions.\n
      \  Textual conventions are defined in [RFC4801], which extends the set\n   of
      textual conventions originally defined in [RFC3811].\n"
    title: 1.1.  Migration Strategy
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   This document uses terminology from the document describing
    the MPLS\n   architecture [RFC3031] and the GMPLS architecture [RFC3945].\n   A
    Label Switched Path (LSP) is modeled as a connection consisting of\n   one or
    more incoming segments (in-segments) and/or one or more\n   outgoing segments
    (out-segments) at an LSR.  The association or\n   interconnection of the in-segments
    and out-segments is accomplished\n   by using a cross-connect.  We use the terminology
    \"connection\" and\n   \"LSP\" interchangeably where the meaning is clear from
    the context.\n   in-segment     This is analogous to a GMPLS Label on an interface.\n
    \  out-segment    This is analogous to a GMPLS Label on an interface.\n   cross-connect
    \ This describes the conceptual connection between a set\n                  of
    in-segments and out-segments.  Note that either set\n                  may be
    empty; for example, a cross-connect may connect\n                  only out-segments
    together with no in-segments in the\n                  case where an LSP originates
    on an LSR.\n   The terms 'ingress' and 'head-end' (or 'head') are used in this\n
    \  document to indicate the signaling source of an LSP.  This is\n   sometimes
    also referred to as the 'sender'.\n   The terms 'egress' and 'tail-end' (or 'tail')
    are used in this\n   document to indicate the signaling destination of an LSP.\n
    \  The term 'upstream' is used in this document to refer to the part of\n   an
    LSP that is closer to the ingress than the current point of\n   reference.\n   The
    term 'downstream' is used in this document to refer to the part\n   of an LSP
    that is closer to the egress than the current point of\n   reference.\n   The
    term 'forward' is used in this document to indicate the direction\n   of data
    flow from the ingress toward the egress.\n   The term 'reverse' is used in this
    document to indicate the direction\n   of data flow from the egress toward the
    ingress.\n"
  title: 2.  Terminology
- contents:
  - "3.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 3.  The Internet-Standard Management Framework
- contents:
  - '4.  Outline

    '
  - contents:
    - "4.1.  MIB Modules\n   There are two MIB modules defined in this document.\n
      \  The GMPLS-LSR-STD-MIB module contains tables that sparse augment\n   tables
      defined in the MPLS-LSR-STD-MIB module [RFC3813].  This MIB\n   module is used
      in conjunction with the MPLS-LSR-STD-MIB module\n   [RFC3813] in systems that
      support GMPLS.\n   The GMPLS-LABEL-STD-MIB module contains objects for managing
      GMPLS\n   Labels when they cannot be represented using the textual conventions\n
      \  of the MPLS-TC-STD-MIB module [RFC3811], or when more detailed access\n   to
      the sub-fields of the labels is required.\n"
    - contents:
      - "4.1.1.  Summary of the GMPLS-LSR-STD-MIB Module\n   The MIB tables in the
        GMPLS-LSR-STD-MIB module are as follows:\n   -  The interface configuration
        table (gmplsInterfaceTable) sparse\n      augments the mplsInterfaceTable
        [RFC3813] to enable the GMPLS\n      protocol on MPLS-capable interfaces.\n
        \  -  The in-segment (gmplsInSegmentTable) and out-segment\n      (gmplsOutSegmentTable)
        tables sparse augment mplsInSegmentTable\n      and mplsOutSegmentTable [RFC3813]
        to enable configuration of\n      GMPLS-specific parameters for LSP segments
        at an LSR.\n   These tables are described in the subsequent sections.\n"
      title: 4.1.1.  Summary of the GMPLS-LSR-STD-MIB Module
    - contents:
      - "4.1.2.  Summary of the GMPLS-LABEL-STD-MIB Module\n   There is one MIB table
        in the GMPLS-LABEL-STD-MIB module as follows:\n   -  The gmplsLabelTable allows
        Generalized Labels to be defined and\n      managed in a central location.
        \ Generalized Labels can be of\n      variable length and have distinct bit-by-bit
        interpretations\n      depending upon how they are defined for the specific
        technology in\n      which they are used.  For example, labels used for MPLS
        packet\n      switching are different in length and content from labels used
        in\n      Time Division Multiplexer (TDM) timeslot switching.\n"
      title: 4.1.2.  Summary of the GMPLS-LABEL-STD-MIB Module
    title: 4.1.  MIB Modules
  - contents:
    - "4.2.  Configuring Statically Provisioned LSPs\n   Configuring statically provisioned
      GMPLS LSPs through an LSR involves\n   the following steps:\n   -  Configuring
      an interface using the MPLS-LSR-STD-MIB module\n      [RFC3813].\n   -  Enabling
      GMPLS on GMPLS-capable interfaces using the GMPLS-LSR-\n      STD-MIB module
      in this document.\n   -  Configuring in-segments and out-segments using the
      MPLS-LSR-STD-\n      MIB module [RFC3813].\n   -  Configuring GMPLS extensions
      to the in-segments and out-segments\n      using the GMPLS-LSR-STD-MIB module
      in this document.\n   -  Setting up the cross-connect table in the MPLS-LSR-STD-MIB
      module\n      [RFC3813] to associate segments and/or to indicate connection\n
      \     origination and termination.\n   -  Optionally setting up labels in the
      label table in the GMPLS-\n      LABEL-STD-MIB module in this document if the
      textual convention\n      MplsLabel [RFC3811] is not capable of holding the
      required label\n      (for example, if the label requires more than 32 bits
      to encode\n      it), or if the operator wishes to disambiguate GMPLS Label
      types.\n   -  Optionally specifying label stack actions in the MPLS-LSR-STD-MIB\n
      \     module [RFC3813].\n   -  Optionally specifying segment traffic parameters
      in the MPLS-LSR-\n      STD-MIB module [RFC3813].\n"
    title: 4.2.  Configuring Statically Provisioned LSPs
  title: 4.  Outline
- contents:
  - "5.  Bidirectional LSPs\n   The GMPLS-LSR-STD-MIB module supports bidirectional
    LSPs as required\n   for GMPLS.  A single value of mplsXCIndex is shared by all
    of the\n   segments for the entire bidirectional LSP.  This facilitates a simple\n
    \  reference from [RFC3812] and [RFC4802] and makes fate-sharing more\n   obvious.\n
    \  It is, however, important that the direction of segments is\n   understood
    to avoid connecting all in-segments to all out-segments.\n   This is achieved
    by an object in each segment that indicates the\n   direction of the segment with
    respect to data flow.\n   A segment that is marked as 'forward' carries data from
    the 'head' of\n   the LSP to the 'tail'.  A segment marked as 'reverse' carries
    data in\n   the reverse direction.\n   Where an LSP is signaled using a conventional
    signaling protocol, the\n   'head' of the LSP is the source of the signaling (also
    known as the\n   ingress) and the 'tail' is the destination (also known as the\n
    \  egress).  For manually configured LSPs, an arbitrary decision must be\n   made
    about which segments are 'forward' and which 'reverse'.  For\n   consistency,
    this decision should be made across all LSRs that\n   participate in the LSP by
    assigning 'head' and 'tail' ends to the\n   LSP.\n"
  title: 5.  Bidirectional LSPs
- contents:
  - "6.  Example of LSP Setup\n   In this section, we provide a brief example of using
    the MIB objects\n   described in sections 7 and 8 to set up an LSP.  While this
    example\n   is not meant to illustrate every nuance of the MIB modules, it is\n
    \  intended as an aid to understanding some of the key concepts.  It is\n   meant
    to be read after going through the MIB modules themselves.  A\n   prerequisite
    is an understanding of the MPLS-LSR-STD-MIB module\n   [RFC3813].\n   Suppose
    that one would like to manually create a best-effort,\n   bidirectional LSP.  Assume
    that, in the forward direction, the LSP\n   enters the LSR via MPLS interface
    A with ifIndex 12 and exits the LSR\n   via MPLS interface B with ifIndex 13.
    \ For the reverse direction, we\n   assume that the LSP enters via interface B
    and leaves via interface A\n   (i.e., the forward and reverse directions use the
    same bidirectional\n   interfaces).  Let us also assume that we do not wish to
    have a label\n   stack beneath the top label on the outgoing labeled packets.
    \ The\n   following example illustrates which rows and corresponding objects\n
    \  might be created to accomplish this.\n   We must first create rows in the gmplsLabelTable
    corresponding to the\n   labels required for each of the forward- and reverse-direction
    in-\n   and out-segments.  For the purpose of this example, the forward and\n
    \  reverse labels on each interface will be the same, hence we need to\n   create
    just two rows in the gmplsLabelTable - one for each interface.\n   In gmplsLabelTable:\n
    \  {\n     gmplsLabelInterface           = 12,\n     gmplsLabelIndex               =
    1,\n     gmplsLabelSubindex            = 0,\n     gmplsLabelType                =
    gmplsFreeformLabel(3),\n     gmplsLabelFreeform            = 0x123456789ABCDEF0\n
    \    gmplsLabelRowStatus           = createAndGo(4)\n   }\n   In gmplsLabelTable:\n
    \  {\n     gmplsLabelInterface           = 13,\n     gmplsLabelIndex               =
    1,\n     gmplsLabelSubindex            = 0,\n     gmplsLabelType                =
    gmplsFreeformLabel(3),\n     gmplsLabelFreeform            = 0xFEDCBA9876543210\n
    \    gmplsLabelRowStatus           = createAndGo(4)\n   }\n   We must next create
    the appropriate in-segment and out-segment\n   entries.  These are done in [RFC3813]
    using the mplsInSegmentTable\n   and mplsOutSegmentTable.  Note that we use a
    row pointer to the two\n   rows in the gmplsLabelTable rather than specify the
    labels explicitly\n   in the in- and out-segment tables.  Also note that the row
    status for\n   each row is set to createAndWait(5) to allow corresponding entries
    in\n   the gmplsInSegmentTable and gmplsOutSegmentTable to be created.\n   For
    the forward direction.\n   In mplsInSegmentTable:\n   {\n      mplsInSegmentIndex
    \          = 0x00000015\n      mplsInSegmentLabel           = 0, -- incoming label
    in label table\n      mplsInSegmentNPop            = 1,\n      mplsInSegmentInterface
    \      = 12, -- incoming interface\n      -- RowPointer MUST point to the first
    accessible column.\n      mplsInSegmentTrafficParamPtr    = 0.0,\n      mplsInSegmentLabelPtr
    \          = gmplsLabelTable(12,1,0)\n      mplsInSegmentRowStatus          =
    createAndWait(5)\n   }\n   In mplsOutSegmentTable:\n   {\n      mplsOutSegmentIndex
    \         = 0x00000012,\n      mplsOutSegmentInterface      = 13, -- outgoing
    interface\n      mplsOutSegmentPushTopLabel   = true(1),\n      mplsOutSegmentTopLabel
    \      = 0, -- outgoing label in label table\n      -- RowPointer MUST point to
    the first accessible column.\n      mplsOutSegmentTrafficParamPtr   = 0.0,\n      mplsOutSegmentLabelPtr
    \         = gmplsLabelTable(13,1,0)\n      mplsOutSegmentRowStatus         = createAndWait(5)\n
    \  }\n   For the reverse direction.\n   In mplsInSegmentTable:\n   {\n      mplsInSegmentIndex
    \          = 0x00000016\n      mplsInSegmentLabel           = 0, -- incoming label
    in label table\n      mplsInSegmentNPop            = 1,\n      mplsInSegmentInterface
    \      = 13, -- incoming interface\n      -- RowPointer MUST point to the first
    accessible column.\n      mplsInSegmentTrafficParamPtr    = 0.0,\n      mplsInSegmentLabelPtr
    \          = gmplsLabelTable(13,1,0)\n      mplsInSegmentRowStatus          =
    createAndWait(5)\n   }\n   In mplsOutSegmentTable:\n   {\n      mplsOutSegmentIndex
    \         = 0x00000013,\n      mplsOutSegmentInterface      = 12, -- outgoing
    interface\n      mplsOutSegmentPushTopLabel   = true(1),\n      mplsOutSegmentTopLabel
    \      = 0, -- outgoing label in label table\n      -- RowPointer MUST point to
    the first accessible column.\n      mplsOutSegmentTrafficParamPtr   = 0.0,\n      mplsOutSegmentLabelPtr
    \         = gmplsLabelTable(12,1,0)\n      mplsOutSegmentRowStatus         = createAndWait(5)\n
    \  }\n   These table entries are extended by entries in the\n   gmplsInSegmentTable
    and gmplsOutSegmentTable.  Note that the nature\n   of the 'extends' relationship
    is a sparse augmentation so that the\n   entry in the gmplsInSegmentTable has
    the same index values as the\n   entry in the mplsInSegmentTable.  Similarly,
    the entry in the\n   gmplsOutSegmentTable has the same index values as the entry
    in the\n   mplsOutSegmentTable.\n   First for the forward direction:\n   In gmplsInSegmentTable(0x00000015)\n
    \  {\n     gmplsInSegmentDirection          = forward(1)\n   }\n   In gmplsOutSegmentTable(0x00000012)\n
    \  {\n     gmplsOutSegmentDirection         = forward(1)\n   }\n   Next for the
    reverse direction:\n   In gmplsInSegmentTable(0x00000016)\n   {\n     gmplsInSegmentDirection
    \         = reverse(2)\n   }\n   In gmplsOutSegmentTable(0x00000013)\n   {\n     gmplsOutSegmentDirection
    \        = reverse(2)\n   }\n   Next, two cross-connect entries are created in
    the mplsXCTable of the\n   MPLS-LSR-STD-MIB [RFC3813], thereby associating the
    newly created\n   segments together.\n   In mplsXCTable:\n   {\n      mplsXCIndex
    \               = 0x01,\n      mplsXCInSegmentIndex       = 0x00000015,\n      mplsXCOutSegmentIndex
    \     = 0x00000012,\n      mplsXCLspId                = 0x0102 -- unique ID\n
    \     mplsXCLabelStackIndex      = 0x00, -- only a single outgoing label\n      mplsXCRowStatus
    \           = createAndGo(4)\n   }\n   In mplsXCTable:\n   {\n      mplsXCIndex
    \               = 0x02,\n      mplsXCInSegmentIndex       = 0x00000016,\n      mplsXCOutSegmentIndex
    \     = 0x00000013,\n      mplsXCLspId                = 0x0102 -- unique ID\n
    \     mplsXCLabelStackIndex      = 0x00, -- only a single outgoing label\n      mplsXCRowStatus
    \           = createAndGo(4)\n   }\n   Finally, the in-segments and out-segments
    are activated.\n   In mplsInSegmentTable(0x00000015):\n   {\n      mplsInSegmentRowStatus
    \         = active(1)\n   }\n   In mplsInSegmentTable(0x00000016):\n   {\n      mplsInSegmentRowStatus
    \         = active(1)\n   }\n   In mplsOutSegmentTable(0x00000012):\n   {\n      mplsOutSegmentRowStatus
    \        = active(1)\n   }\n   In mplsOutSegmentTable(0x00000013):\n   {\n      mplsOutSegmentRowStatus
    \        = active(1)\n   }\n"
  title: 6.  Example of LSP Setup
- contents:
  - "7.  GMPLS Label Switching Router MIB Definitions\n   This MIB module makes reference
    to the following documents:\n   [RFC2578], [RFC2579], [RFC2580], [RFC2863], [RFC3209],
    [RFC3443],\n   [RFC3468], [RFC3472], [RFC3473], [RFC3811], [RFC3813], and [RFC4801].\n"
  - 'GMPLS-LSR-STD-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n  MODULE-IDENTITY, OBJECT-TYPE, Unsigned32, zeroDotZero\n    FROM SNMPv2-SMI
    \                                  -- RFC 2578\n  MODULE-COMPLIANCE, OBJECT-GROUP\n
    \   FROM SNMPv2-CONF                                  -- RFC 2580\n  RowPointer\n
    \   FROM SNMPv2-TC                                    -- RFC 2579\n  GmplsSegmentDirectionTC\n
    \   FROM GMPLS-TC-STD-MIB                             -- RFC 4801\n  mplsInterfaceIndex,
    mplsInSegmentIndex, mplsOutSegmentIndex,\n  mplsInterfaceGroup, mplsInSegmentGroup,
    mplsOutSegmentGroup,\n  mplsXCGroup, mplsPerfGroup, mplsLsrNotificationGroup\n
    \   FROM MPLS-LSR-STD-MIB                             -- RFC 3813\n  ifGeneralInformationGroup,
    ifCounterDiscontinuityGroup\n    FROM IF-MIB                                       --
    RFC 2863\n  mplsStdMIB\n    FROM MPLS-TC-STD-MIB                              --
    RFC 3811\n"
  - ';

    '
  - "gmplsLsrStdMIB MODULE-IDENTITY\n  LAST-UPDATED\n    \"200702270000Z\" -- 27 February
    2007 00:00:00 GMT\n  ORGANIZATION\n    \"IETF Common Control And Measurement Plane
    (CCAMP) Working Group\"\n  CONTACT-INFO\n    \"       Thomas D. Nadeau\n            Cisco
    Systems, Inc.\n     Email: tnadeau@cisco.com\n            Adrian Farrel\n            Old
    Dog Consulting\n     Email: adrian@olddog.co.uk\n     Comments about this document
    should be emailed directly to the\n     CCAMP working group mailing list at ccamp@ops.ietf.org.\"\n
    \ DESCRIPTION\n    \"Copyright (C) The IETF Trust (2007).  This version of\n     this
    MIB module is part of RFC 4803; see the RFC itself for\n     full legal notices.\n
    \    This MIB module contains managed object definitions for the\n     Generalized
    Multiprotocol (GMPLS) Label Switching Router as\n     defined in Generalized Multi-Protocol
    Label Switching (GMPLS)\n     Architecture, Mannie et al., RFC 3945, October 2004.\"\n
    \ REVISION\n    \"200702270000Z\" -- 27 February 2007 00:00:00 GMT\n  DESCRIPTION\n
    \   \"Initial version issued as part of RFC 4803.\"\n  ::= { mplsStdMIB 15 }\n"
  - '-- no notifications are currently defined.

    '
  - 'gmplsLsrObjects       OBJECT IDENTIFIER ::= { gmplsLsrStdMIB 1 }

    '
  - 'gmplsLsrConformance   OBJECT IDENTIFIER ::= { gmplsLsrStdMIB 2 }

    '
  - "gmplsInterfaceTable OBJECT-TYPE\n  SYNTAX        SEQUENCE OF GmplsInterfaceEntry\n
    \ MAX-ACCESS    not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"This
    table specifies per-interface GMPLS capability and\n     associated information.
    \ It extends the information in the\n     mplsInterfaceTable of MPLS-LSR-STD-MIB
    through a\n     sparse augmentation relationship.\"\n  REFERENCE\n    \"1. Multiprotocol
    Label Switching (MPLS) Label Switching\n        Router (LSR) Management Information
    Base (MIB), RFC 3813.\"\n  ::= { gmplsLsrObjects 1 }\n"
  - "gmplsInterfaceEntry OBJECT-TYPE\n  SYNTAX        GmplsInterfaceEntry\n  MAX-ACCESS
    \   not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"A conceptual
    row in this table is created automatically by an\n     LSR for each interface
    that is both capable of supporting\n     GMPLS and configured to support GMPLS.
    \ Note that\n     support of GMPLS is not limited to control plane signaling,\n
    \    but may include data-plane-only function configured through\n     SNMP SET
    commands performed on this MIB module.\n     A conceptual row in this table may
    also be created via SNMP\n     SET commands or automatically by the LSR to supplement
    a\n     conceptual row in the mplsInterfaceTable where the interface\n     is
    not capable of GMPLS but where the other objects carried\n     in this row provide
    useful additional information for an\n     MPLS interface.\n     A conceptual
    row in this table will exist if and only if a\n     corresponding entry in the
    mplsInterfaceTable exists, and a\n     corresponding entry in the ifTable exists
    with ifType = mpls(166).\n     If the associated entry in the ifTable is operationally
    disabled\n     (thus removing the GMPLS capabilities on the interface) or the\n
    \    entry in the mplsInterfaceTable is deleted, the corresponding entry\n     in
    this table MUST be deleted shortly thereafter.\n     The indexes are the same
    as for the mplsInterfaceTable.  Thus, the\n     entry with index 0 represents
    the per-platform label space and\n     contains parameters that apply to all interfaces
    that\n     participate in the per-platform label space.\"\n  REFERENCE\n    \"1.
    Multiprotocol Label Switching (MPLS) Label Switching\n        Router (LSR) Management
    Information Base (MIB), RFC 3813.\"\n  INDEX { mplsInterfaceIndex }\n"
  - '::= { gmplsInterfaceTable 1 }

    '
  - "GmplsInterfaceEntry ::= SEQUENCE {\n  gmplsInterfaceSignalingCaps      BITS,\n
    \ gmplsInterfaceRsvpHelloPeriod    Unsigned32\n"
  - '}

    '
  - "gmplsInterfaceSignalingCaps OBJECT-TYPE\n  SYNTAX  BITS {\n    unknown(0),\n
    \   rsvpGmpls(1),\n    crldpGmpls(2), -- note the use of CR-LDP is deprecated\n
    \   otherGmpls(3)\n  }\n  MAX-ACCESS   read-create\n  STATUS       current\n  DESCRIPTION\n
    \   \"Defines the signaling capabilities on this interface.  Multiple\n     bits
    may legitimately be set at once, but if 'unknown' is set\n     then no other bit
    may be set.  Setting no bits implies that GMPLS\n     signaling cannot be performed
    on this interface and all LSPs\n     must be manually provisioned or that this
    table entry is only\n     present to supplement an entry in the mplsInterfaceTable
    by\n     providing the information carried in other objects in this row.\"\n  REFERENCE\n
    \   \"1. Generalized MPLS Signaling - CR-LDP Extensions, RFC 3472.\n     2. The
    Multiprotocol Label Switching (MPLS) Working Group\n        decision on MPLS signaling
    protocols, RFC 3468.\n     3. Generalized MPLS Signaling - RSVP-TE Extensions,
    RFC 3473.\"\n  DEFVAL { { rsvpGmpls } }\n"
  - '::= { gmplsInterfaceEntry 1 }

    '
  - "gmplsInterfaceRsvpHelloPeriod OBJECT-TYPE\n  SYNTAX       Unsigned32\n  UNITS
    \       \"milliseconds\"\n  MAX-ACCESS   read-create\n  STATUS       current\n
    \ DESCRIPTION\n    \"Period, in milliseconds, between sending Resource Reservation\n
    \    Protocol (RSVP) Hello messages on this interface.  A value of 0\n     indicates
    that no Hello messages should be sent on this\n     interface.\n     This object
    is only valid if gmplsInterfaceSignalingCaps has no\n     bits set or includes
    the rsvpGmpls bit.\"\n  REFERENCE\n    \"1. RSVP-TE: Extensions to RSVP for LSP
    Tunnels, RFC 3209,\n        section 5.\n     2. Generalized MPLS Signaling - RSVP-TE
    Extensions, RFC 3473,\n        section 9.3.\"\n  DEFVAL { 3000 }\n"
  - '::= { gmplsInterfaceEntry 2 }

    '
  - "gmplsInSegmentTable  OBJECT-TYPE\n  SYNTAX        SEQUENCE OF GmplsInSegmentEntry\n
    \ MAX-ACCESS    not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"This
    table sparse augments the mplsInSegmentTable of\n     MPLS-LSR-STD-MIB to provide
    GMPLS-specific information about\n     incoming segments to an LSR.\"\n  REFERENCE\n
    \   \"1. Multiprotocol Label Switching (MPLS) Label Switching\n        Router
    (LSR) Management Information Base (MIB), RFC 3813.\"\n"
  - '::= { gmplsLsrObjects 2 }

    '
  - "gmplsInSegmentEntry  OBJECT-TYPE\n  SYNTAX        GmplsInSegmentEntry\n  MAX-ACCESS
    \   not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"An entry in
    this table extends the representation of an incoming\n     segment represented
    by an entry in the mplsInSegmentTable in\n     MPLS-LSR-STD-MIB through a sparse
    augmentation.  An entry can be\n     created by a network administrator via SNMP
    SET commands, or in\n     response to signaling protocol events.\n     Note that
    the storage type for this entry is given by the value\n     of mplsInSegmentStorageType
    in the corresponding entry of the\n     mplsInSegmentTable.\"\n  REFERENCE\n    \"1.
    Multiprotocol Label Switching (MPLS) Label Switching\n        Router (LSR) Management
    Information Base (MIB), RFC 3813.\"\n  INDEX { mplsInSegmentIndex }\n"
  - '::= { gmplsInSegmentTable 1 }

    '
  - "GmplsInSegmentEntry ::= SEQUENCE {\n  gmplsInSegmentDirection        GmplsSegmentDirectionTC,\n
    \ gmplsInSegmentExtraParamsPtr   RowPointer\n"
  - '}

    '
  - "gmplsInSegmentDirection OBJECT-TYPE\n  SYNTAX        GmplsSegmentDirectionTC\n
    \ MAX-ACCESS    read-create\n  STATUS        current\n  DESCRIPTION\n    \"This
    object indicates the direction of data flow on this\n     segment.  This object
    cannot be modified if\n     mplsInSegmentRowStatus for the corresponding entry
    in the\n     mplsInSegmentTable is active(1).\"\n  REFERENCE\n    \"1. Multiprotocol
    Label Switching (MPLS) Label Switching\n        Router (LSR) Management Information
    Base (MIB), RFC 3813.\"\n  DEFVAL        { forward }\n"
  - '::= { gmplsInSegmentEntry 1 }

    '
  - "gmplsInSegmentExtraParamsPtr  OBJECT-TYPE\n  SYNTAX       RowPointer\n  MAX-ACCESS
    \  read-create\n  STATUS       current\n  DESCRIPTION\n    \"Some tunnels will
    run over transports that can usefully support\n     technology-specific additional
    parameters (for example,\n     Synchronous Optical Network (SONET) resource usage).
    \ Such can be\n     supplied from an external table and referenced from here.
    \ A value\n     of zeroDotZero in this attribute indicates that there is no such\n
    \    additional information.\"\n  DEFVAL      { zeroDotZero }\n  ::= { gmplsInSegmentEntry
    2 }\n"
  - "gmplsOutSegmentTable  OBJECT-TYPE\n  SYNTAX        SEQUENCE OF GmplsOutSegmentEntry\n
    \ MAX-ACCESS    not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"This
    table sparse augments the mplsOutSegmentTable of\n     MPLS-LSR-STD-MIB to provide
    GMPLS-specific information about\n     outgoing segments from an LSR.\"\n  REFERENCE\n
    \   \"1. Multiprotocol Label Switching (MPLS) Label Switching\n        Router
    (LSR) Management Information Base (MIB), RFC 3813.\"\n"
  - '::= { gmplsLsrObjects 3 }

    '
  - "gmplsOutSegmentEntry  OBJECT-TYPE\n  SYNTAX        GmplsOutSegmentEntry\n  MAX-ACCESS
    \   not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"An entry in
    this table extends the representation of an outgoing\n     segment represented
    by an entry in the mplsOutSegmentTable of\n     MPLS-LSR-STD-MIB through a sparse
    augmentation.  An entry can be\n     created by a network administrator via SNMP
    SET commands, or in\n     response to signaling protocol events.\n     Note that
    the storage type for this entry is given by the value\n     of mplsOutSegmentStorageType
    in the corresponding entry of the\n     mplsOutSegmentTable.\"\n  REFERENCE\n
    \   \"1. Multiprotocol Label Switching (MPLS) Label Switching\n        Router
    (LSR) Management Information Base (MIB), RFC 3813.\"\n  INDEX  { mplsOutSegmentIndex
    }\n"
  - '::= { gmplsOutSegmentTable 1 }

    '
  - "GmplsOutSegmentEntry ::= SEQUENCE {\n  gmplsOutSegmentDirection       GmplsSegmentDirectionTC,\n
    \ gmplsOutSegmentTTLDecrement    Unsigned32,\n  gmplsOutSegmentExtraParamsPtr
    \ RowPointer\n"
  - '}

    '
  - "gmplsOutSegmentDirection OBJECT-TYPE\n  SYNTAX        GmplsSegmentDirectionTC\n
    \ MAX-ACCESS    read-create\n  STATUS        current\n  DESCRIPTION\n    \"This
    object indicates the direction of data flow on this\n     segment.  This object
    cannot be modified if\n     mplsOutSegmentRowStatus for the corresponding entry
    in the\n     mplsOutSegmentTable is active(1).\"\n  REFERENCE\n    \"1. Multiprotocol
    Label Switching (MPLS) Label Switching\n        Router (LSR) Management Information
    Base (MIB), RFC 3813.\"\n  DEFVAL  { forward }\n"
  - '::= { gmplsOutSegmentEntry 1 }

    '
  - "gmplsOutSegmentTTLDecrement OBJECT-TYPE\n  SYNTAX        Unsigned32\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"This object indicates
    the amount by which to decrement the Time\n     to Live (TTL) of any payload packets
    forwarded on this segment if\n     per-hop decrementing is being done.\n     A
    value of zero indicates that no decrement should be made or\n     that per-hop
    decrementing is not in use.\n     See the gmplsTunnelTTLDecrement object in the
    gmplsTunnelTable\n     of GMPLS-TE-STD-MIB for a value by which to decrement the
    TTL\n     for the whole of a tunnel.\n     This object cannot be modified if mplsOutSegmentRowStatus
    for\n     the associated entry in the mplsOutSegmentTable is active(1).\"\n  REFERENCE\n
    \   \"1. Time To Live (TTL) Processing in Multi-Protocol Label\n        Switching
    (MPLS) Networks, RFC 3443.\n     2. Generalized Multiprotocol Label Switching
    (GMPLS) Traffic\n        Engineering Management Information Base, RFC 4802.\"\n
    \ DEFVAL  { 0 }\n"
  - '::= { gmplsOutSegmentEntry 2 }

    '
  - "gmplsOutSegmentExtraParamsPtr  OBJECT-TYPE\n  SYNTAX       RowPointer\n  MAX-ACCESS
    \  read-create\n  STATUS       current\n  DESCRIPTION\n    \"Some tunnels will
    run over transports that can usefully support\n     technology-specific additional
    parameters (for example, SONET\n     resource usage).  Such can be supplied from
    an external table and\n     referenced from here.\n     A value of zeroDotZero
    in this attribute indicates that there is\n     no such additional information.\"\n
    \ DEFVAL      { zeroDotZero }\n  ::= { gmplsOutSegmentEntry 3 }\n"
  - "gmplsLsrGroups\n  OBJECT IDENTIFIER ::= { gmplsLsrConformance 1 }\n"
  - "gmplsLsrCompliances\n  OBJECT IDENTIFIER ::= { gmplsLsrConformance 2 }\n"
  - '-- Compliance requirement for fully compliant implementations.

    '
  - "gmplsLsrModuleFullCompliance MODULE-COMPLIANCE\n  STATUS current\n  DESCRIPTION\n
    \   \"Compliance statement for agents that provide full support for\n     GMPLS-LSR-STD-MIB.\n
    \    The mandatory group has to be implemented by all LSRs that\n     originate,
    terminate, or act as transit for TE-LSPs/tunnels.\n     In addition, depending
    on the type of tunnels supported, other\n     groups become mandatory as explained
    below.\"\n  MODULE IF-MIB -- The Interfaces Group MIB, RFC 2863.\n  MANDATORY-GROUPS
    {\n    ifGeneralInformationGroup,\n    ifCounterDiscontinuityGroup\n  }\n  MODULE
    MPLS-LSR-STD-MIB -- The MPLS-LSR-STD-MIB, RFC3813\n  MANDATORY-GROUPS {\n    mplsInterfaceGroup,\n
    \   mplsInSegmentGroup,\n    mplsOutSegmentGroup,\n    mplsXCGroup,\n    mplsPerfGroup,\n
    \   mplsLsrNotificationGroup\n  }\n  MODULE -- this module\n  MANDATORY-GROUPS
    \   {\n    gmplsInterfaceGroup,\n    gmplsInSegmentGroup,\n    gmplsOutSegmentGroup\n
    \ }\n  OBJECT      gmplsInSegmentDirection\n  SYNTAX      GmplsSegmentDirectionTC\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"The only valid value for unidirectional
    LSPs is forward(1).\"\n  OBJECT      gmplsOutSegmentDirection\n  SYNTAX      GmplsSegmentDirectionTC\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"The only valid value for unidirectional
    LSPs is forward(1).\"\n  OBJECT      gmplsOutSegmentTTLDecrement\n  MIN-ACCESS
    \ read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n  OBJECT      gmplsInSegmentExtraParamsPtr\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n
    \ OBJECT      gmplsOutSegmentExtraParamsPtr\n  MIN-ACCESS  read-only\n  DESCRIPTION\n
    \   \"Write access is not required.\"\n"
  - '::= { gmplsLsrCompliances 1 }

    '
  - '-- Compliance requirement for implementations that provide read-only

    '
  - '-- access.

    '
  - "gmplsLsrModuleReadOnlyCompliance MODULE-COMPLIANCE\n  STATUS current\n  DESCRIPTION\n
    \   \"Compliance requirement for implementations that only provide\n     read-only
    support for GMPLS-LSR-STD-MIB.  Such devices can then\n     be monitored but cannot
    be configured using this MIB module.\"\n  MODULE IF-MIB -- The interfaces Group
    MIB, RFC 2863\n  MANDATORY-GROUPS {\n    ifGeneralInformationGroup,\n    ifCounterDiscontinuityGroup\n
    \ }\n  MODULE MPLS-LSR-STD-MIB\n  MANDATORY-GROUPS {\n    mplsInterfaceGroup,\n
    \   mplsInSegmentGroup,\n    mplsOutSegmentGroup,\n    mplsXCGroup,\n    mplsPerfGroup\n
    \ }\n  MODULE -- this module\n  MANDATORY-GROUPS {\n    gmplsInterfaceGroup,\n
    \   gmplsInSegmentGroup,\n    gmplsOutSegmentGroup\n  }\n  OBJECT      gmplsInterfaceSignalingCaps\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n
    \ OBJECT      gmplsInterfaceRsvpHelloPeriod\n  MIN-ACCESS  read-only\n  DESCRIPTION\n
    \   \"Write access is not required.\"\n  OBJECT      gmplsInSegmentDirection\n
    \ SYNTAX      GmplsSegmentDirectionTC\n  MIN-ACCESS  read-only\n  DESCRIPTION\n
    \   \"The only valid value for unidirectional LSPs is forward(1).\"\n  OBJECT
    \     gmplsInSegmentExtraParamsPtr\n  MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write
    access is not required.\"\n  OBJECT      gmplsOutSegmentDirection\n  MIN-ACCESS
    \ read-only\n  DESCRIPTION\n    \"The only valid value for unidirectional LSPs
    is forward(1).\"\n  OBJECT      gmplsOutSegmentTTLDecrement\n  MIN-ACCESS  read-only\n
    \ DESCRIPTION\n    \"Write access is not required.\"\n  OBJECT      gmplsOutSegmentExtraParamsPtr\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n"
  - '::= { gmplsLsrCompliances 2 }

    '
  - "gmplsInterfaceGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsInterfaceSignalingCaps,\n
    \   gmplsInterfaceRsvpHelloPeriod\n  }\n  STATUS  current\n  DESCRIPTION\n   \"Collection
    of objects that provide additional\n    information for an MPLS interface and
    are needed\n    for GMPLS interface configuration and performance\n    information.\"\n"
  - '::= { gmplsLsrGroups 1 }

    '
  - "gmplsInSegmentGroup  OBJECT-GROUP\n  OBJECTS {\n    gmplsInSegmentDirection,\n
    \   gmplsInSegmentExtraParamsPtr\n  }\n  STATUS  current\n  DESCRIPTION\n    \"Collection
    of objects that provide additional\n     information for an MPLS in-segment and
    are needed\n     for GMPLS in-segment configuration and performance\n     information.\"\n"
  - '::= { gmplsLsrGroups 2 }

    '
  - "gmplsOutSegmentGroup  OBJECT-GROUP\n  OBJECTS {\n    gmplsOutSegmentDirection,\n
    \   gmplsOutSegmentTTLDecrement,\n    gmplsOutSegmentExtraParamsPtr\n  }\n  STATUS
    \ current\n  DESCRIPTION\n    \"Collection of objects that provide additional\n
    \    information for an MPLS out-segment and are needed\n     for GMPLS out-segment
    configuration and performance\n     information.\"\n"
  - '::= { gmplsLsrGroups 3 }

    '
  - 'END

    '
  title: 7.  GMPLS Label Switching Router MIB Definitions
- contents:
  - "8.  GMPLS Label MIB Definitions\n   This MIB module makes reference to the following
    documents:\n   [RFC2578], [RFC2579], [RFC2580], [RFC2863], [RFC3032], [RFC3289],\n
    \  [RFC3471], [RFC3811], and [RFC4801].\n"
  - 'GMPLS-LABEL-STD-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n  MODULE-IDENTITY, OBJECT-TYPE, Unsigned32, Integer32\n    FROM SNMPv2-SMI
    \                                  -- RFC 2578\n  MODULE-COMPLIANCE, OBJECT-GROUP\n
    \   FROM SNMPv2-CONF                                  -- RFC 2580\n  RowStatus,
    StorageType\n    FROM SNMPv2-TC                                    -- RFC 2579\n
    \ InterfaceIndexOrZero\n    FROM IF-MIB                                       --
    RFC 2863\n  IndexIntegerNextFree\n    FROM DIFFSERV-MIB                                 --
    RFC 3289\n  MplsLabel, mplsStdMIB\n    FROM MPLS-TC-STD-MIB                              --
    RFC 3811\n  GmplsLabelTypeTC, GmplsFreeformLabelTC\n    FROM GMPLS-TC-STD-MIB
    \                            -- RFC 4801\n"
  - ';

    '
  - "gmplsLabelStdMIB MODULE-IDENTITY\n  LAST-UPDATED\n    \"200702270000Z\" -- 27
    February 2007 00:00:00 GMT\n  ORGANIZATION\n    \"IETF Common Control and Measurement
    Plane (CCAMP) Working Group\"\n  CONTACT-INFO\n    \"       Thomas D. Nadeau\n
    \           Cisco Systems, Inc.\n     Email: tnadeau@cisco.com\n            Adrian
    Farrel\n            Old Dog Consulting\n     Email: adrian@olddog.co.uk\n     Comments
    about this document should be emailed directly to the\n     CCAMP working group
    mailing list at ccamp@ops.ietf.org.\"\n  DESCRIPTION\n    \"Copyright (C) The
    IETF Trust (2007).  This version of\n     this MIB module is part of RFC 4803;
    see the RFC itself for\n     full legal notices.\n     This MIB module contains
    managed object definitions for labels\n     within GMPLS systems as defined in\n
    \    Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n     Functional
    Description, Berger, L. (Editor), RFC 3471,\n     January 2003.\"\n  REVISION\n
    \   \"200702270000Z\" -- 27 February 2007 00:00:00 GMT\n  DESCRIPTION\n    \"Initial
    version issued as part of RFC 4803.\"\n  ::= { mplsStdMIB 16 }\n"
  - '-- no notifications are currently defined.

    '
  - 'gmplsLabelObjects        OBJECT IDENTIFIER ::= { gmplsLabelStdMIB 1 }

    '
  - 'gmplsLabelConformance    OBJECT IDENTIFIER ::= { gmplsLabelStdMIB 2 }

    '
  - "gmplsLabelIndexNext OBJECT-TYPE\n  SYNTAX        IndexIntegerNextFree\n  MAX-ACCESS
    \   read-only\n  STATUS        current\n  DESCRIPTION\n      \"This object contains
    an unused value for gmplsLabelIndex,\n       or a zero to indicate that no unused
    value exists or is\n       available.\n       A management application wishing
    to create a row in the\n       gmplsLabelTable may read this object and then attempt
    to\n       create a row in the table.  If row creation fails (because\n       another
    application has already created a row with the\n       supplied index), the management
    application should read this\n       object again to get a new index value.\n
    \      When a row is created in the gmplsLabelTable with the\n       gmplsLabelIndex
    value held by this object, an implementation\n       MUST change the value in
    this object.\"\n  ::= { gmplsLabelObjects 1 }\n"
  - "gmplsLabelTable OBJECT-TYPE\n  SYNTAX        SEQUENCE OF GmplsLabelEntry\n  MAX-ACCESS
    \   not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"Table of GMPLS
    Labels.  This table allows the representation\n     of the more complex label
    forms required for GMPLS that cannot\n     be held within the TEXTUAL-CONVENTION
    MplsLabel; that is, labels\n     that cannot be encoded within 32 bits.  It is,
    nevertheless, also\n     capable of holding 32-bit labels or regular MPLS Labels
    if\n     desired.\n     Each entry in this table represents an individual GMPLS
    Label\n     value.  The representation of Labels in tables in other MIB\n     modules
    may be achieved by a referrence to an entry in this\n     table by means of a
    row pointer into this table.  The indexing\n     of this table provides for arbitrary
    indexing and also for\n     concatenation of labels.\n     For an example of label
    concatenation, see RFC 3945, section 7.1.\n     In essence, a GMPLS Label may
    be composite in order to identify\n     a set of resources in the data plane.
    \ Practical examples are\n     timeslots and wavelength sets (which are not contiguous
    like\n     wavebands).\n     The indexing mechanism allows multiple entries in
    this table to\n     be seen as a sequence of labels that should be concatenated.\n
    \    Ordering is potentially very sensitive for concatenation.\"\n   REFERENCE\n
    \    \"1. Generalized Multiprotocol Label Switching (GMPLS)\n         Architecture,
    RFC 3945, section 7.1.\"\n"
  - '::= { gmplsLabelObjects 2 }

    '
  - "gmplsLabelEntry OBJECT-TYPE\n  SYNTAX        GmplsLabelEntry\n  MAX-ACCESS    not-accessible\n
    \ STATUS        current\n  DESCRIPTION\n    \"An entry in this table represents
    a single label value.  There\n     are three indexes into the table.\n     -  The
    interface index may be helpful to distinguish which\n        labels are in use
    on which interfaces or to handle cases\n        where there are a very large number
    of labels in use in the\n        system.  When label representation is desired
    to apply to the\n        whole system or when it is not important to distinguish\n
    \       labels by their interfaces, this index MAY be set to zero.\n     -  The
    label index provides a way of identifying the label.\n     -  The label sub-index
    is only used for concatenated labels.  It\n        identifies each component label.
    \ When non-concatenated labels\n        are used, this index SHOULD be set to
    zero.\n     A storage type object is supplied to control the storage type\n     for
    each entry, but implementations should note that the storage\n     type of conceptual
    rows in other tables that include row\n     pointers to an entry in this table
    SHOULD dictate the storage\n     type of the rows in this table where the row
    in the other table\n     is more persistent.\"\n  INDEX {\n    gmplsLabelInterface,\n
    \   gmplsLabelIndex,\n    gmplsLabelSubindex }\n"
  - '::= { gmplsLabelTable 1 }

    '
  - "GmplsLabelEntry ::= SEQUENCE {\n  gmplsLabelInterface           InterfaceIndexOrZero,\n
    \ gmplsLabelIndex               Unsigned32,\n  gmplsLabelSubindex            Unsigned32,\n
    \ gmplsLabelType                GmplsLabelTypeTC,\n  gmplsLabelMplsLabel           MplsLabel,\n
    \ gmplsLabelPortWavelength      Unsigned32,\n  gmplsLabelFreeform            GmplsFreeformLabelTC,\n
    \ gmplsLabelSonetSdhSignalIndex Integer32,\n  gmplsLabelSdhVc               Integer32,\n
    \ gmplsLabelSdhVcBranch         Integer32,\n  gmplsLabelSonetSdhBranch      Integer32,\n
    \ gmplsLabelSonetSdhGroupBranch Integer32,\n  gmplsLabelWavebandId          Unsigned32,\n
    \ gmplsLabelWavebandStart       Unsigned32,\n  gmplsLabelWavebandEnd         Unsigned32,\n
    \ gmplsLabelStorageType         StorageType,\n  gmplsLabelRowStatus           RowStatus\n"
  - '}

    '
  - "gmplsLabelInterface OBJECT-TYPE\n  SYNTAX        InterfaceIndexOrZero\n  MAX-ACCESS
    \   not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"The interface
    on which this label is used.  If this object is set\n     to zero, the label MUST
    have applicability across the\n     whole system and not be limited to a single
    interface.\"\n"
  - '::= { gmplsLabelEntry 1 }

    '
  - "gmplsLabelIndex OBJECT-TYPE\n  SYNTAX        Unsigned32 (0..4294967295)\n  MAX-ACCESS
    \   not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"An arbitrary
    index into the table to identify a label.\n     Note that implementations that
    are representing 32-bit labels\n     within this table MAY choose to align this
    index with the value\n     of the label, and this may result in the use of the
    value zero\n     since it represents a valid label value.  Such implementation\n
    \    should be aware of the implications of sparsely populated\n     tables.\n
    \    A management application may read the gmplsLabelIndexNext\n     object to
    find a suitable value for this object.\"\n"
  - '::= { gmplsLabelEntry 2 }

    '
  - "gmplsLabelSubindex OBJECT-TYPE\n  SYNTAX        Unsigned32 (0..4294967295)\n
    \ MAX-ACCESS    not-accessible\n  STATUS        current\n  DESCRIPTION\n    \"In
    conjunction with gmplsLabelInterface and gmplsLabelIndex,\n     this object uniquely
    identifies this row.  This sub-index allows\n     a single GMPLS Label to be defined
    as a concatenation of labels.\n     This is particularly useful in TDM.\n     The
    ordering of sub-labels is strict with the sub-label with\n     the lowest gmplsLabelSubindex
    appearing first.  Note that all\n     sub-labels of a single GMPLS Label must
    share the same\n     gmplsLabelInterface and gmplsLabelIndex values.  For labels
    that\n     are not composed of concatenated sub-labels, this value SHOULD\n     be
    set to zero.\"\n"
  - '::= { gmplsLabelEntry 3 }

    '
  - "gmplsLabelType OBJECT-TYPE\n  SYNTAX        GmplsLabelTypeTC\n  MAX-ACCESS    read-create\n
    \ STATUS        current\n  DESCRIPTION\n    \"Identifies the type of this label.
    \ Note that this object does\n     not determine whether MPLS or GMPLS signaling
    is in use: a value\n     of gmplsMplsLabel(1) denotes that an MPLS Packet Label
    is\n     present in the gmplsLabelMplsLabel object and encoded using the\n     MplsLabel
    TEXTUAL-CONVENTION (may be a 20-bit MPLS Label, a 10-\n     or 23-bit Frame Relay
    Label, or an Asynchronous Transfer Mode\n     (ATM) Label), but does not describe
    whether this is signaled\n     using MPLS or GMPLS.\n     The value of this object
    helps determine which of the following\n     objects are valid.  This object cannot
    be modified if\n     gmplsLabelRowStatus is active(1).\"\n   REFERENCE\n     \"1.
    Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n         Functional
    Description, RFC 3471, section 3.\"\n"
  - '::= { gmplsLabelEntry 4 }

    '
  - "gmplsLabelMplsLabel OBJECT-TYPE\n  SYNTAX         MplsLabel\n  MAX-ACCESS     read-create\n
    \ STATUS         current\n  DESCRIPTION\n    \"The value of an MPLS Label (that
    is a Packet Label) if this\n     table is used to store it.  This may be used
    in MPLS systems even\n     though the label values can be adequately stored in
    the MPLS MIB\n     modules (MPLS-LSR-STD-MIB and MPLS-TE-STD-MIB).  Furthermore,
    in\n     mixed MPLS and GMPLS systems, it may be advantageous to store all\n     labels
    in a single label table.  Lastly, in GMPLS systems where\n     Packet Labels are
    used (that is in systems that use GMPLS\n     signaling and GMPLS Labels for packet
    switching), it may be\n     desirable to use this table.\n     This object is
    only valid if gmplsLabelType is set\n     to gmplsMplsLabel(1).  This object cannot
    be modified if\n     gmplsLabelRowStatus is active(1).\"\n  REFERENCE\n    \"1.
    MPLS Label Stack Encoding, RFC 3032.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 5 }

    '
  - "gmplsLabelPortWavelength OBJECT-TYPE\n  SYNTAX        Unsigned32\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"The value of a
    Port or Wavelength Label when carried as a\n     Generalized Label.  Only valid
    if gmplsLabelType is set to\n     gmplsPortWavelengthLabel(2).  This object cannot
    be modified if\n     gmplsLabelRowStatus is active(1).\"\n  REFERENCE\n    \"1.
    Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n        Functional
    Description, RFC 3471, section 3.2.1.1.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 6 }

    '
  - "gmplsLabelFreeform OBJECT-TYPE\n  SYNTAX        GmplsFreeformLabelTC\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"The value of a
    Freeform Generalized Label that does not conform\n     to one of the standardized
    label encodings or that an\n     implementation chooses to represent as an octet
    string without\n     further decoding.  Only valid if gmplsLabelType is set to\n
    \    gmplsFreeformLabel(3).  This object cannot be modified\n     if gmplsLabelRowStatus
    is active(1).\"\n  REFERENCE\n    \"1. Generalized Multi-Protocol Label Switching
    (GMPLS) Signaling\n        Functional Description, RFC 3471, section 3.2.\"\n
    \ DEFVAL { '00'h }\n"
  - '::= { gmplsLabelEntry 7 }

    '
  - "gmplsLabelSonetSdhSignalIndex OBJECT-TYPE\n  SYNTAX        Integer32 (0..4095)\n
    \ MAX-ACCESS    read-create\n  STATUS        current\n  DESCRIPTION\n    \"The
    Signal Index value (S) of a SONET or SDH Generalized Label.\n     Zero indicates
    that this field is non-significant.  Only valid if\n     gmplsLabelType is set
    to gmplsSonetLabel(4) or gmplsSdhLabel(5).\n     This object cannot be modified
    if gmplsLabelRowStatus is\n     active(1).\"\n  REFERENCE\n    \"1. Generalized
    Multi-Protocol Label Switching (GMPLS) Extensions\n        for Synchronous Optical
    Network (SONET) and Synchronous\n        Digital Hierarchy (SDH) Control, RFC
    4606, section 3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 8 }

    '
  - "gmplsLabelSdhVc OBJECT-TYPE\n  SYNTAX        Integer32 (0..15)\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"The VC Indicator
    (U) of an SDH Generalized Label.  Zero indicates\n     that this field is non-significant.
    \ Only valid if gmplsLabelType\n     is set to gmplsSdhLabel(5).  This object
    cannot be modified if\n     gmplsLabelRowStatus is active(1).\"\n  REFERENCE\n
    \   \"1. Generalized Multi-Protocol Label Switching (GMPLS) Extensions\n        for
    Synchronous Optical Network (SONET) and Synchronous\n        Digital Hierarchy
    (SDH) Control, RFC 4606, section 3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 9 }

    '
  - "gmplsLabelSdhVcBranch OBJECT-TYPE\n  SYNTAX        Integer32 (0..15)\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"The VC Branch Indicator
    (K) of an SDH Generalized Label.  Zero\n     indicates that this field is non-significant.
    \ Only valid if\n     gmplsLabelType is set to gmplsSdhLabel(5).  This\n     object
    cannot be modified if gmplsLabelRowStatus is active(1).\"\n  REFERENCE\n    \"1.
    Generalized Multi-Protocol Label Switching (GMPLS) Extensions\n        for Synchronous
    Optical Network (SONET) and Synchronous\n        Digital Hierarchy (SDH) Control,
    RFC 4606, section 3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 10 }

    '
  - "gmplsLabelSonetSdhBranch OBJECT-TYPE\n  SYNTAX        Integer32 (0..15)\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"The Branch Indicator
    (L) of a SONET or SDH Generalized Label.\n     Zero indicates that this field
    is non-significant.  Only valid\n     gmplsLabelType is set to gmplsSonetLabel(4)
    or\n     gmplsSdhLabel(5).  This object cannot be modified if\n     gmplsLabelRowStatus
    is active(1).\"\n  REFERENCE\n    \"1. Generalized Multi-Protocol Label Switching
    (GMPLS) Extensions\n        for Synchronous Optical Network (SONET) and Synchronous\n
    \       Digital Hierarchy (SDH) Control, RFC 4606, section 3.\"\n  DEFVAL { 0
    }\n"
  - '::= { gmplsLabelEntry 11 }

    '
  - "gmplsLabelSonetSdhGroupBranch OBJECT-TYPE\n  SYNTAX        Integer32 (0..15)\n
    \ MAX-ACCESS    read-create\n  STATUS        current\n  DESCRIPTION\n    \"The
    Group Branch Indicator (M) of a SONET or SDH Generalized\n     Label.  Zero indicates
    that this field is non-significant.\n     Only valid if gmplsLabelType is set
    to gmplsSonetLabel(4) or\n     gmplsSdhLabel(5).  This object cannot be modified
    if\n     gmplsLabelRowStatus is active(1).\"\n  REFERENCE\n    \"1. Generalized
    Multi-Protocol Label Switching (GMPLS) Extensions\n        for Synchronous Optical
    Network (SONET) and Synchronous\n        Digital Hierarchy (SDH) Control, RFC
    4606, section 3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 12 }

    '
  - "gmplsLabelWavebandId OBJECT-TYPE\n  SYNTAX        Unsigned32\n  MAX-ACCESS    read-create\n
    \ STATUS        current\n  DESCRIPTION\n    \"The waveband identifier component
    of a Waveband Label.  Only\n     valid if gmplsLabelType is set to gmplsWavebandLabel(6).
    \ This\n     object cannot be modified if gmplsLabelRowStatus is active(1).\"\n
    \ REFERENCE\n    \"1. Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n
    \       Functional Description, RFC 3471, section 3.3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 13 }

    '
  - "gmplsLabelWavebandStart OBJECT-TYPE\n  SYNTAX        Unsigned32\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"The starting label
    component of a Waveband Label.  Only valid if\n     gmplsLabelType is set to gmplsWavebandLabel(6).
    \ This object\n     cannot be modified if gmplsLabelRowStatus is active(1).\"\n
    \ REFERENCE\n    \"1. Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n
    \       Functional Description, RFC 3471, section 3.3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 14 }

    '
  - "gmplsLabelWavebandEnd OBJECT-TYPE\n  SYNTAX        Unsigned32\n  MAX-ACCESS    read-create\n
    \ STATUS        current\n  DESCRIPTION\n    \"The end label component of a Waveband
    Label.  Only valid if\n     gmplsLabelType is set to gmplsWavebandLabel(6).  This
    object\n     cannot be modified if gmplsLabelRowStatus is active(1).\"\n  REFERENCE\n
    \   \"1. Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n        Functional
    Description, RFC 3471, section 3.3.\"\n  DEFVAL { 0 }\n"
  - '::= { gmplsLabelEntry 15 }

    '
  - "gmplsLabelStorageType OBJECT-TYPE\n  SYNTAX        StorageType\n  MAX-ACCESS
    \   read-create\n  STATUS        current\n  DESCRIPTION\n    \"This variable indicates
    the storage type for this row.  The\n     agent MUST ensure that this object's
    value remains consistent\n     with the storage type of any rows in other tables
    that contain\n     pointers to this row.  In particular, the storage type of this\n
    \    row must be at least as permanent as that of any row that points\n     to
    it.\n     Conceptual rows having the value 'permanent' need not\n     allow write-access
    to any columnar objects in the row.\"\n  REFERENCE\n    \"1. Textual Conventions
    for SMIv2, STD 58, RFC 2579, section 2.\"\n  DEFVAL { volatile }\n"
  - '::= { gmplsLabelEntry 16 }

    '
  - "gmplsLabelRowStatus OBJECT-TYPE\n  SYNTAX        RowStatus\n  MAX-ACCESS    read-create\n
    \ STATUS        current\n  DESCRIPTION\n    \"This variable is used to create,
    modify, and/or delete a row in\n     this table.  When a row in this table has
    a row in the active(1)\n     state, no objects in this row can be modified except
    the\n     gmplsLabelRowStatus and gmplsLabelStorageType.\n     The gmplsLabelType
    object does not have a default and must be\n     set before a row can become active.
    \ The corresponding label\n     objects (dependent on the value of gmplsLabelType)
    should also\n     be set unless they happen to need to use the specified default\n
    \    values as follows:\n     gmplsLabelType setting             objects to be
    set\n     --------------------------------------------------------------\n     gmplsMplsLabel(1)
    \                 gmplsLabelMplsLabel\n     gmplsPortWavelengthLabel(2)        gmplsLabelPortWavelength\n
    \    gmplsFreeformLabel(3)              gmplsLabelFreeform\n     gmplsSonetLabel(4)
    \                gmplsLabelSonetSdhSignalIndex\n                                        gmplsLabelSdhVc\n
    \                                       gmplsLabelSdhVcBranch\n                                        gmplsLabelSonetSdhBranch\n
    \                                       gmplsLabelSonetSdhGroupBranch\n     gmplsSdhLabel(5)
    \                  gmplsLabelSonetSdhSignalIndex\n                                        gmplsLabelSdhVc\n
    \                                       gmplsLabelSdhVcBranch\n                                        gmplsLabelSonetSdhBranch\n
    \                                       gmplsLabelSonetSdhGroupBranch\n     gmplsWavebandLabel(6)
    \             gmplsLabelWavebandId\n                                        gmplsLabelWavebandStart\n
    \                                       gmplsLabelWavebandEnd\"\n"
  - '::= { gmplsLabelEntry 17 }

    '
  - "gmplsLabelGroups\n  OBJECT IDENTIFIER ::= { gmplsLabelConformance 1 }\n"
  - "gmplsLabelCompliances\n  OBJECT IDENTIFIER ::= { gmplsLabelConformance 2 }\n"
  - "gmplsLabelModuleReadOnlyCompliance MODULE-COMPLIANCE\n  STATUS current\n  DESCRIPTION\n
    \   \"Compliance requirement for implementations that only provide\n     read-only
    support for GMPLS-LABEL-STD-MIB.  Such devices can then\n     be monitored but
    cannot be configured using this MIB module.\"\n  MODULE -- this module\n  -- The
    mandatory groups have to be implemented by LSRs claiming\n  -- support for this
    MIB module.  This MIB module is, however, not\n  -- mandatory for a working implementation
    of a GMPLS LSR with full\n  -- MIB support if the GMPLS Labels in use can be represented
    within\n  -- a 32-bit quantity.\n  MANDATORY-GROUPS {\n    gmplsLabelTableGroup\n
    \ }\n  GROUP gmplsLabelPacketGroup\n  DESCRIPTION\n    \"This group extends gmplsLabelTableGroup
    for implementations that\n     support Packet Labels.  It is optional for implementations
    that\n     do not support Packet Labels.\"\n  GROUP gmplsLabelPortWavelengthGroup\n
    \ DESCRIPTION\n    \"This group extends gmplsLabelTableGroup for implementations
    that\n     support Port and Wavelength Labels.  It is optional for\n     implementations
    that do not support Wavelength Labels.\"\n  GROUP gmplsLabelFreeformGroup\n  DESCRIPTION\n
    \   \"This group extends gmplsLabelTableGroup for implementations that\n     support
    Freeform Labels.  It is optional for implementations that\n     do not support
    Freeform Labels.\"\n  GROUP gmplsLabelSonetSdhGroup\n  DESCRIPTION\n    \"This
    group extends gmplsLabelTableGroup for implementations that\n     support SONET
    or SDH Labels.  It is optional for implementations\n     that do not support SONET
    or SDH Labels.\"\n  GROUP gmplsLabelWavebandGroup\n  DESCRIPTION\n    \"This group
    extends gmplsLabelTableGroup for implementations that\n     support Waveband Labels.
    \ It is optional for implementations that\n     do not support Waveband Labels.\"\n
    \ OBJECT      gmplsLabelType\n  MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write
    access is not required.\"\n  OBJECT      gmplsLabelMplsLabel\n  MIN-ACCESS  read-only\n
    \ DESCRIPTION\n    \"Write access is not required.\"\n  OBJECT      gmplsLabelPortWavelength\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n
    \ OBJECT      gmplsLabelFreeform\n  MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write
    access is not required.\"\n  OBJECT      gmplsLabelSonetSdhSignalIndex\n  MIN-ACCESS
    \ read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n  OBJECT      gmplsLabelSdhVc\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n
    \ OBJECT      gmplsLabelSdhVcBranch\n  MIN-ACCESS  read-only\n  DESCRIPTION\n
    \   \"Write access is not required.\"\n  OBJECT      gmplsLabelSonetSdhBranch\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n
    \ OBJECT      gmplsLabelSonetSdhGroupBranch\n  MIN-ACCESS  read-only\n  DESCRIPTION\n
    \   \"Write access is not required.\"\n  OBJECT      gmplsLabelWavebandId\n  MIN-ACCESS
    \ read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n  OBJECT      gmplsLabelWavebandStart\n
    \ MIN-ACCESS  read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n
    \ OBJECT      gmplsLabelWavebandEnd\n  MIN-ACCESS  read-only\n  DESCRIPTION\n
    \   \"Write access is not required.\"\n  OBJECT      gmplsLabelStorageType\n  MIN-ACCESS
    \ read-only\n  DESCRIPTION\n    \"Write access is not required.\"\n  OBJECT       gmplsLabelRowStatus\n
    \ SYNTAX       RowStatus { active(1) }\n  MIN-ACCESS   read-only\n  DESCRIPTION\n
    \   \"Write access is not required, and active(1) is\n     the only status that
    needs to be supported.\"\n"
  - '::= { gmplsLabelCompliances 1 }

    '
  - "gmplsLabelModuleFullCompliance MODULE-COMPLIANCE\n  STATUS current\n  DESCRIPTION\n
    \   \"Compliance statement for agents that support the complete\n     GMPLS-LABEL-STD-MIB
    module.\n     The mandatory groups have to be implemented by GMPLS LSRs\n     claiming
    support for this MIB module.  This MIB module is,\n     however, not mandatory
    for a working implementation of a GMPLS\n     LSR with full MIB support if the
    GMPLS Labels in use can be\n     represented within a 32-bit quantity.\"\n  MODULE
    -- this module\n  MANDATORY-GROUPS {\n    gmplsLabelTableGroup\n  }\n"
  - '::= { gmplsLabelCompliances 2 }

    '
  - "gmplsLabelTableGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsLabelIndexNext,\n    gmplsLabelType,\n
    \   gmplsLabelStorageType,\n    gmplsLabelRowStatus\n  }\n  STATUS  current\n
    \ DESCRIPTION\n    \"Necessary, but not sufficient, set of objects to implement
    label\n     table support.  In addition, depending on the type of labels\n     supported,
    the following other groups defined below are\n     mandatory:\n       gmplsLabelWavebandGroup
    and/or\n       gmplsLabelPacketGroup and/or\n       gmplsLabelPortWavelengthGroup
    and/or\n       gmplsLabelFreeformGroup and/or\n       gmplsLabelSonetSdhGroup.\"\n"
  - '::= { gmplsLabelGroups 1 }

    '
  - "gmplsLabelPacketGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsLabelMplsLabel\n  }\n
    \ STATUS  current\n  DESCRIPTION\n    \"Object needed to implement Packet (MPLS)
    Labels.\"\n"
  - '::= { gmplsLabelGroups 2 }

    '
  - "gmplsLabelPortWavelengthGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsLabelPortWavelength\n
    \ }\n  STATUS  current\n  DESCRIPTION\n    \"Object needed to implement Port and
    Wavelength Labels.\"\n"
  - '::= { gmplsLabelGroups 3 }

    '
  - "gmplsLabelFreeformGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsLabelFreeform\n  }\n
    \ STATUS  current\n  DESCRIPTION\n    \"Object needed to implement Freeform Labels.\"\n"
  - '::= { gmplsLabelGroups 4 }

    '
  - "gmplsLabelSonetSdhGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsLabelSonetSdhSignalIndex,\n
    \   gmplsLabelSdhVc,\n    gmplsLabelSdhVcBranch,\n    gmplsLabelSonetSdhBranch,\n
    \   gmplsLabelSonetSdhGroupBranch\n  }\n  STATUS  current\n  DESCRIPTION\n    \"Objects
    needed to implement SONET and SDH Labels.\"\n"
  - '::= { gmplsLabelGroups 5 }

    '
  - "gmplsLabelWavebandGroup OBJECT-GROUP\n  OBJECTS {\n    gmplsLabelWavebandId,\n
    \   gmplsLabelWavebandStart,\n    gmplsLabelWavebandEnd\n  }\n  STATUS  current\n
    \ DESCRIPTION\n    \"Objects needed to implement Waveband Labels.\"\n"
  - '::= { gmplsLabelGroups 6 }

    '
  - 'END

    '
  title: 8.  GMPLS Label MIB Definitions
- contents:
  - "9.  Security Considerations\n   It is clear that the MIB modules described in
    this document in\n   association with MPLS-LSR-STD-MIB [RFC3813] are potentially
    useful\n   for monitoring of GMPLS LSRs.  These MIB modules can also be used for\n
    \  configuration of certain objects, and anything that can be configured\n   can
    be incorrectly configured, with potentially disastrous results.\n   There are
    a number of management objects defined in these MIB modules\n   with a MAX-ACCESS
    clause of read-write and/or read-create.  Such\n   objects may be considered sensitive
    or vulnerable in some network\n   environments.  The support for SET operations
    in a non-secure\n   environment without proper protection can have a negative
    effect on\n   network operations.  These are the tables and objects and their\n
    \  sensitivity/vulnerability:\n   o  the gmplsInterfaceTable, gmplsInSegmentTable,\n
    \     gmplsOutSegmentTable, and gmplsLabelTable collectively contain\n      objects
    to provision GMPLS interfaces, LSPs, and their associated\n      parameters on
    a Label Switching Router (LSR).  Unauthorized write\n      access to objects in
    these tables could result in disruption of\n      traffic on the network.  This
    is especially true if an LSP has\n      already been established.\n   Some of
    the readable objects in these MIB modules (i.e., objects with\n   a MAX-ACCESS
    other than not-accessible) may be considered sensitive\n   or vulnerable in some
    network environments.  It is thus important to\n   control even GET and/or NOTIFY
    access to these objects and possibly\n   to even encrypt the values of these objects
    when sending them over\n   the network via SNMP.  These are the tables and objects
    and their\n   sensitivity/vulnerability:\n   o  the gmplsInterfaceTable, gmplsInSegmentTable,\n
    \     gmplsOutSegmentTable, and gmplsLabelTable collectively show the\n      LSP
    network topology and its capabilities.  If an administrator\n      does not want
    to reveal this information, then these tables should\n      be considered sensitive/vulnerable.\n
    \  SNMP versions prior to SNMPv3 did not include adequate security.\n   Even if
    the network itself is secure (for example by using IPsec),\n   even then, there
    is no control as to who on the secure network is\n   allowed to access and GET/SET
    (read/change/create/delete) the objects\n   in these MIB modules.\n   It is RECOMMENDED
    that implementers consider the security features as\n   provided by the SNMPv3
    framework (see [RFC3410], section 8),\n   including full support for the SNMPv3
    cryptographic mechanisms (for\n   authentication and privacy).\n   Further, deployment
    of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED
    to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of this MIB module, is properly configured to give access to\n   the objects only
    to those principals (users) that have legitimate\n   rights to indeed GET or SET
    (change/create/delete) them.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Acknowledgments\n   This document is a product of the CCAMP Working Group.\n
    \  This document extends the MIB tables in [RFC3813].  The authors would\n   like
    to express their gratitude to all those who worked on that\n   earlier MIB document.\n
    \  The authors would like to express their thanks to Dan Joyle for his\n   careful
    review and comments on early versions of the label table.\n   Special thanks to
    Joan Cucchiara and Len Nieman for their help with\n   compilation issues.  Lars
    Eggert, Tom Petch, Dan Romascanu, and Bert\n   Wijnen provided useful input in
    the final stages of review.\n   Joan Cucchiara provided a helpful and very thorough
    MIB Doctor\n   review.\n"
  title: 10.  Acknowledgments
- contents:
  - "11.  IANA Considerations\n   IANA has rooted MIB objects in the two MIB modules
    contained in this\n   document under the mplsStdMIB subtree.\n   IANA has made
    the following assignments in the \"NETWORK MANAGEMENT\n   PARAMETERS\" registry
    located at http://www.iana.org/assignments/\n   smi-numbers in table:\n   ...mib-2.transmission.mplsStdMIB
    (1.3.6.1.2.1.10.166)\n      Decimal  Name                  References\n      -------
    \ -----                 ----------\n      15       GMPLS-LSR-STD-MIB     [RFC4803]\n
    \     16       GMPLS-LABEL-STD-MIB   [RFC4803]\n   In the future, GMPLS-related
    standards-track MIB modules should be\n   rooted under the mplsStdMIB (sic) subtree.
    \ IANA has been requested\n   to manage that namespace in the SMI Numbers registry
    [RFC3811].  New\n   assignments can only be made via a Standards Action as specified
    in\n   [RFC2434].\n"
  title: 11.  IANA Considerations
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use
      in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC2434]    Narten, T. and H. Alvestrand, \"Guidelines for
      Writing an\n                IANA Considerations Section in RFCs\", BCP 26, RFC
      2434,\n                October 1998.\n   [RFC2578]    McCloghrie, K., Perkins,
      D., and J. Schoenwaelder,\n                \"Structure of Management Information
      Version 2 (SMIv2)\",\n                STD 58, RFC 2578, April 1999.\n   [RFC2579]
      \   McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n                \"Textual
      Conventions for SMIv2\", STD 58, RFC 2579, April\n                1999.\n   [RFC2580]
      \   McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n                \"Conformance
      Statements for SMIv2\", STD 58, RFC 2580,\n                April 1999.\n   [RFC2863]
      \   McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n                MIB\",
      RFC 2863, June 2000.\n   [RFC3031]    Rosen, E., Viswanathan, A., and R. Callon,\n
      \               \"Multiprotocol Label Switching Architecture\", RFC 3031,\n
      \               January 2001.\n   [RFC3032]    Rosen, E., Tappan, D., Fedorkow,
      G., Rekhter, Y.,\n                Farinacci, D., Li, T., and A. Conta, \"MPLS
      Label Stack\n                Encoding\", RFC 3032, January 2001.\n   [RFC3209]
      \   Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan,\n                V.,
      and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n                Tunnels\",
      RFC 3209, December 2001.\n   [RFC3289]    Baker, F., Chan, K., and A. Smith,
      \"Management\n                Information Base for the Differentiated Services\n
      \               Architecture\", RFC 3289, May 2002.\n   [RFC3443]    Agarwal,
      P. and B. Akyol, \"Time To Live (TTL) Processing\n                in Multi-Protocol
      Label Switching (MPLS) Networks\", RFC\n                3443, January 2003.\n
      \  [RFC3471]    Berger, L., \"Generalized Multi-Protocol Label Switching\n                (GMPLS)
      Signaling Functional Description\", RFC 3471,\n                January 2003.\n
      \  [RFC3473]    Berger, L., \"Generalized Multi-Protocol Label Switching\n                (GMPLS)
      Signaling Resource ReserVation Protocol-Traffic\n                Engineering
      (RSVP-TE) Extensions\", RFC 3473, January\n                2003.\n   [RFC3811]
      \   Nadeau, T. and J. Cucchiara, \"Definitions of Textual\n                Conventions
      (TCs) for Multiprotocol Label Switching\n                (MPLS) Management\",
      RFC 3811, June 2004.\n   [RFC3813]    Srinivasan, C., Viswanathan, A., and T.
      Nadeau,\n                \"Multiprotocol Label Switching (MPLS) Label Switching\n
      \               Router (LSR) Management Information Base (MIB)\", RFC\n                3813,
      June 2004.\n   [RFC3945]    Mannie, E., \"Generalized Multi-Protocol Label Switching\n
      \               (GMPLS) Architecture\", RFC 3945, October 2004.\n   [RFC4606]
      \   Mannie, E. and D. Papadimitriou, \"Generalized Multi-\n                Protocol
      Label Switching (GMPLS) Extensions for\n                Synchronous Optical
      Network (SONET) and Synchronous\n                Digital Hierarchy (SDH) Control\",
      RFC 4606, August 2006.\n   [RFC4801]    Nadeau, T., Ed. and A. Farrel, Ed.,
      \"Definitions of\n                Textual Conventions for Multiprotocol Label
      Switching\n                (MPLS) Management\", RFC 4801, February 2007.\n   [RFC4802]
      \   Nadeau, T., Ed. and A. Farrel, Ed., \"Generalized\n                Multiprotocol
      Label Switching (GMPLS) Traffic\n                Engineering Management Information
      Base\", RFC 4802,\n                February 2007.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [RFC3410]    Case, J., Mundy, R., Partain,
      D., and B. Stewart,\n                \"Introduction and Applicability Statements
      for\n                Internet-Standard Management Framework\", RFC 3410,\n                December
      2002.\n   [RFC3468]    Andersson, L. and G. Swallow, \"The Multiprotocol Label\n
      \               Switching (MPLS) Working Group decision on MPLS\n                signaling
      protocols\", RFC 3468, February 2003.\n   [RFC3472]    Ashwood-Smith, P. and
      L. Berger, \"Generalized Multi-\n                Protocol Label Switching (GMPLS)
      Signaling Constraint-\n                based Routed Label Distribution Protocol
      (CR-LDP)\n                Extensions\", RFC 3472, January 2003.\n   [RFC3812]
      \   Srinivasan, C., Viswanathan, A., and T. Nadeau,\n                \"Multiprotocol
      Label Switching (MPLS) Traffic\n                Engineering (TE) Management
      Information Base (MIB)\", RFC\n                3812, June 2004.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Contact Information\n   Thomas D. Nadeau\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Ave.\n   Boxborough, MA 01719\n   EMail: tnadeau@cisco.com\n   Adrian Farrel\n
    \  Old Dog Consulting\n   Phone: +44-(0)-1978-860944\n   EMail: adrian@olddog.co.uk\n
    \  Cheenu Srinivasan\n   Bloomberg L.P.\n   731 Lexington Ave.\n   New York, NY
    10022\n   Phone: +1-212-617-3682\n   EMail: cheenu@bloomberg.net\n   Tim Hall\n
    \  Data Connection Ltd.\n   100 Church Street\n   Enfield, Middlesex, EN2 6BQ,
    UK\n   Phone: +44 20 8366 1177\n   EMail: tim.hall@dataconnection.com\n   Ed Harrison\n
    \  Data Connection Ltd.\n   100 Church Street\n   Enfield, Middlesex, EN2 6BQ,
    UK\n   Phone: +44 20 8366 1177\n   EMail: ed.harrison@dataconnection.com\n"
  title: Contact Information
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
