- title: __initial_text__
  contents:
  - "                  ENUM Validation Information Mapping\n                for the\
    \ Extensible Provisioning Protocol\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an Extensible Provisioning Protocol (EPP)\n\
    \   extension framework for mapping information about the validation\n   process\
    \ that has been applied for the E.164 number (or number range)\n   that the E.164\
    \ Number Mapping (ENUM) domain name is based on.\n   Specified in the Extensible\
    \ Markup Language (XML), this mapping\n   extends the EPP domain name mapping\
    \ to provide an additional feature\n   required for the provisioning of ENUM Domain\
    \ Names.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Requirements ....................................................4\n   4.\
    \ Object Attributes ...............................................4\n      4.1.\
    \ ENUM Domain Names ..........................................4\n      4.2. Validation\
    \ Information Commands ............................4\n      4.3. Id .........................................................4\n\
    \      4.4. Validation Information .....................................5\n  \
    \    4.5. Validation Elements in the Example .........................5\n    \
    \       4.5.1. Method Identifier ...................................5\n      \
    \     4.5.2. Validation Entity Identifier ........................5\n        \
    \   4.5.3. Registrar Identifier ................................5\n          \
    \ 4.5.4. Execution Date ......................................6\n           4.5.5.\
    \ Expiration Date .....................................6\n   5. EPP Command Mapping\
    \ .............................................6\n      5.1. EPP Query Commands\
    \ .........................................6\n           5.1.1. EPP <check> Command\
    \ .................................6\n           5.1.2. EPP <info> Command ..................................6\n\
    \           5.1.3. EPP <transfer> Command ..............................8\n  \
    \    5.2. EPP Transform Commands .....................................9\n    \
    \       5.2.1. EPP <create> Command ................................9\n      \
    \     5.2.2. EPP <delete> Command ...............................11\n        \
    \   5.2.3. EPP <renew> Command ................................11\n          \
    \ 5.2.4. EPP <transfer> Command .............................13\n           5.2.5.\
    \ EPP <update> Command ...............................15\n   6. Formal Syntax\
    \ ..................................................16\n   7. IANA Considerations\
    \ ............................................21\n   8. Security Considerations\
    \ ........................................21\n   9. Acknowledgements ...............................................22\n\
    \   10. References ....................................................22\n  \
    \    10.1. Normative References .....................................22\n    \
    \  10.2. Informative References ...................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes a framework for an ENUM [2] validation\n\
    \   information mapping for version 1.0 of EPP [3].  This mapping, an\n   extension\
    \ of the EPP domain name mapping described in [4], is\n   specified using XML\
    \ 1.0, as described in [5], and XML Schema\n   notation, as described in [6] and\
    \ [7].\n   The EPP core protocol specification [3] provides a complete\n   description\
    \ of EPP command and response structures.  A thorough\n   understanding of the\
    \ base protocol specification is necessary to\n   understand the mapping described\
    \ in this document.\n   ENUM [2] describes how the Domain Name System (DNS) can\
    \ be used to\n   identify services associated with an E.164 number.\n   As described\
    \ in RFC 4725 [9], usually only the Assignee of the E.164\n   number (or number\
    \ range) has the right to register the corresponding\n   ENUM domain name.  Therefore,\
    \ an ENUM validation process has to be\n   applied before the ENUM domain name\
    \ can be inserted into the DNS.\n   The validation process shall ensure that the\
    \ holder of the ENUM\n   domain name coincides with the Assignee of the corresponding\
    \ E.164\n   number (or number range).  However, the details of the ENUM\n   validation\
    \ methods are beyond the scope of this document.\n   The EPP extension described\
    \ in this document specifies a framework\n   for the mapping of information about\
    \ the ENUM validation process.  As\n   the local legislation or the validation\
    \ procedures may vary, the\n   content of the validation information itself is\
    \ not part of this\n   specification.\n   However, this document contains a working\
    \ example (including XML\n   schema) to show how the validation information could\
    \ look.  This\n   example could even be used for a lightweight validation process.\
    \  In\n   fact, it has been an integral part of the Swiss ENUM trial.\n   Using\
    \ this extension framework, the content of the validation\n   information can\
    \ be specified according to the local requirements.\n   Such an extension is specified\
    \ in [10].\n   More background information concerning the validation can be found\
    \ in\n   RFC 4725 [9], which also describes a typical basic role model for the\n\
    \   ENUM registration process.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [1].\n   In examples, \"C:\" represents lines sent by a protocol client\
    \ and \"S:\"\n   represents lines returned by a protocol server.  Indentation\
    \ and\n   white space in examples are provided only to illustrate element\n  \
    \ relationships and are not REQUIRED features of this specification.\n   XML is\
    \ case sensitive.  Unless stated otherwise, XML specifications\n   and examples\
    \ provided in this document MUST be interpreted in the\n   character case presented\
    \ to develop a conforming implementation.\n"
- title: 3.  Requirements
  contents:
  - "3.  Requirements\n   The following requirements are the basis for this work:\n\
    \   1. The design shall allow multiple policies and validation\n      procedures.\n\
    \   2. It shall be possible to transmit validation information with EPP\n    \
    \  domain object requests and responses.\n   3. It shall be possible to add, modify,\
    \ and remove validation\n      information.\n   4. It shall be possible to retrieve\
    \ validation information stored in\n      the ENUM Registry.\n"
- title: 4.  Object Attributes
  contents:
  - "4.  Object Attributes\n   This extension adds additional elements to the EPP\
    \ domain name\n   mapping [4].  Only new element descriptions are listed here.\n"
- title: 4.1.  ENUM Domain Names
  contents:
  - "4.1.  ENUM Domain Names\n   An ENUM Domain Name is a representation of an E.164\
    \ number that has\n   been translated to conform to domain name syntax as described\
    \ in the\n   ENUM specification [2].\n"
- title: 4.2.  Validation Information Commands
  contents:
  - "4.2.  Validation Information Commands\n   The following commands are defined\
    \ for handling validation\n   information at the registry:\n   o  add: to add\
    \ new validation information\n   o  rem: to revoke validation information\n  \
    \ o  chg: to change stored validation information\n   o  inf: to get information\
    \ about stored validation information\n"
- title: 4.3.  Id
  contents:
  - "4.3.  Id\n   The \"id\" attribute, used to identify the validation, is represented\n\
    \   in this mapping using a character string.  It MUST be unique at least\n  \
    \ within the same ENUM Domain Name.  To ensure uniqueness even after a\n   transfer\
    \ of an ENUM Domain Name, it is RECOMMENDED that the \"id\"\n   attribute be unique\
    \ per ENUM Registry.\n   The \"id\" attribute, usually assigned by the ENUM Registrar,\
    \ is\n   required for revoking or changing stored validation information and\n\
    \   appears in the Validation Information Command elements (see Section\n   4.2).\n"
- title: 4.4.  Validation Information
  contents:
  - "4.4.  Validation Information\n   The <validationInfo> element can contain any\
    \ element containing\n   validation information that is documented adequately.\
    \  It is\n   represented in this mapping using the XML schema <any> element and\n\
    \   therefore, is extensible.\n   The number of <validationInfo> elements permitted\
    \ per domain object\n   is subject to local policy.\n"
- title: 4.5.  Validation Elements in the Example
  contents:
  - "4.5.  Validation Elements in the Example\n   As described above, this document\
    \ includes an example for a possible\n   content of validation information that\
    \ is used in the EPP examples\n   throughout this document.\n   This example is\
    \ an optional part of this specification, i.e., a fully\n   compliant RFC 5076\
    \ implementation does not need to implement this\n   example.\n"
- title: 4.5.1.  Method Identifier
  contents:
  - "4.5.1.  Method Identifier\n   The <methodID> element is represented in this mapping\
    \ using a\n   character string with a maximum length of 63 characters.  It contains\n\
    \   an identifier for the method used for the validation.  As stated in\n   Section\
    \ 1, the details of the ENUM validation methods are beyond the\n   scope of this\
    \ document.\n"
- title: 4.5.2.  Validation Entity Identifier
  contents:
  - "4.5.2.  Validation Entity Identifier\n   The <validationEntityID> element is\
    \ represented in this mapping using\n   a character string with a length of 3\
    \ to 16 characters.  It contains\n   an identifier assigned to the ENUM Validation\
    \ Entity, e.g., by the\n   ENUM Registry.\n"
- title: 4.5.3.  Registrar Identifier
  contents:
  - "4.5.3.  Registrar Identifier\n   The <registrarID> element is represented in\
    \ this mapping using a\n   character string with a length of 3 to 16 characters.\
    \  It contains an\n   identifier assigned to the ENUM Registrar by the ENUM Registry.\n"
- title: 4.5.4.  Execution Date
  contents:
  - "4.5.4.  Execution Date\n   The <executionDate> element, the execution date of\
    \ the validation, is\n   represented in this mapping using the XML Schema 'date'\
    \ data type.\n"
- title: 4.5.5.  Expiration Date
  contents:
  - "4.5.5.  Expiration Date\n   The <expirationDate> element, the expiration date\
    \ of the validation,\n   is represented in this mapping using the XML Schema 'date'\
    \ data type.\n"
- title: 5.  EPP Command Mapping
  contents:
  - "5.  EPP Command Mapping\n   A detailed description of the EPP syntax and semantics\
    \ can be found\n   in the EPP core protocol specification [3], and the EPP domain\
    \ name\n   mapping is described in [4].  The command mappings described here are\n\
    \   specifically for use in implementing ENUM validation information\n   provisioning\
    \ processes via EPP.\n   Note: Whether or not this extension is included into\
    \ an EPP request\n   or response depends on local policy.  For example, a local\
    \ Registry\n   policy might require the use of this extension for EPP <create>,\n\
    \   <update>, and <info> commands, but not support it for EPP <transfer>\n   and\
    \ <renew> commands.  Therefore, this is beyond the scope of this\n   document.\n"
- title: 5.1.  EPP Query Commands
  contents:
  - "5.1.  EPP Query Commands\n   EPP provides three commands to retrieve object information:\
    \ <check>\n   to determine if an object is known to the server, <info> to retrieve\n\
    \   detailed information associated with an object, and <transfer> to\n   retrieve\
    \ object transfer status information.\n"
- title: 5.1.1.  EPP <check> Command
  contents:
  - "5.1.1.  EPP <check> Command\n   This extension does not add any elements to the\
    \ EPP <check> command\n   or <check> response described in the EPP domain mapping\
    \ [4].\n"
- title: 5.1.2.  EPP <info> Command
  contents:
  - "5.1.2.  EPP <info> Command\n   This extension does not add any elements to the\
    \ EPP <info> command\n   described in the EPP domain mapping [4].  Additional\
    \ elements are\n   defined for the <info> response.\n   When an <info> command\
    \ has been processed successfully, the EPP\n   <resData> element MUST contain\
    \ child elements as described in the EPP\n   domain mapping [4].  In addition,\
    \ the EPP <extension> element MUST\n   contain an <e164val:infData> element that\
    \ identifies the extension\n   namespace.  The <e164val:infData> element contains\
    \ one or more\n   <e164val:inf> elements, each with an \"id\" attribute identifying\
    \ the\n   validation.  Each <e164val:inf> element contains an <e164val:\n   validationInfo>\
    \ element, which contains the validation information as\n   child element.\n \
    \  In the example below, the validation information consists of a\n   <valex:simpleVal>\
    \ element that identifies the extension namespace.\n   The <valex:simpleVal> element\
    \ contains the following child elements:\n   o  An <e164val:methodID> element\
    \ that contains an identifier of the\n      validation method.\n   o  An OPTIONAL\
    \ <e164val:validationEntityID> element that contains an\n      identifier assigned\
    \ to the ENUM Validation Entity.\n   o  An OPTIONAL <e164val:registrarID> element\
    \ that contains an\n      identifier assigned to the ENUM Registrar by the ENUM\
    \ Registry.\n   o  An <e164val:executionDate> element that contains the date that\
    \ the\n      validation was performed.\n   o  An OPTIONAL <e164val:expirationDate>\
    \ element that contains the\n      date that the validation expires.\n   Example\
    \ for <info> response:\n   S:<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
    no\"?>\n   S:<epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\n   S:     xmlns:xsi=\"\
    http://www.w3.org/2001/XMLSchema-instance\">\n   S: <response>\n   S:  <result\
    \ code=\"1000\">\n   S:   <msg>Command completed successfully</msg>\n   S:  </result>\n\
    \   S:  <resData>\n   S:   <domain:infData\n   S:    xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\"\
    >\n   S:    <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>\n   S:\
    \    <domain:roid>EXAMPLE1-REP</domain:roid>\n   S:    <domain:status s=\"ok\"\
    />\n   S:    <domain:registrant>jd1234</domain:registrant>\n   S:    <domain:contact\
    \ type=\"admin\">sh8013</domain:contact>\n   S:    <domain:contact type=\"tech\"\
    >sh8013</domain:contact>\n   S:    <domain:ns>\n   S:     <domain:hostObj>ns1.example.com</domain:hostObj>\n\
    \   S:     <domain:hostObj>ns2.example.com</domain:hostObj>\n   S:    </domain:ns>\n\
    \   S:    <domain:clID>ClientX</domain:clID>\n   S:    <domain:crID>ClientY</domain:crID>\n\
    \   S:    <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>\n   S:    <domain:upID>ClientX</domain:upID>\n\
    \   S:    <domain:upDate>1999-12-03T09:00:00.0Z</domain:upDate>\n   S:    <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>\n\
    \   S:    <domain:trDate>2000-04-08T09:00:00.0Z</domain:trDate>\n   S:    <domain:authInfo>\n\
    \   S:     <domain:pw>2fooBAR</domain:pw>\n   S:    </domain:authInfo>\n   S:\
    \   </domain:infData>\n   S:  </resData>\n   S:  <extension>\n   S:   <e164val:infData\n\
    \   S:    xmlns:e164val=\"urn:ietf:params:xml:ns:e164val-1.0\">\n   S:    <e164val:inf\
    \ id=\"EK77\">\n   S:     <e164val:validationInfo>\n   S:      <valex:simpleVal\n\
    \   S:       xmlns:valex=\"urn:ietf:params:xml:ns:e164valex-1.1\">\n   S:    \
    \   <valex:methodID>Validation-X</valex:methodID>\n   S:       <valex:validationEntityID>VE-NMQ</valex:validationEntityID>\n\
    \   S:       <valex:registrarID>Client-X</valex:registrarID>\n   S:       <valex:executionDate>2004-04-08</valex:executionDate>\n\
    \   S:       <valex:expirationDate>2004-10-07</valex:expirationDate>\n   S:  \
    \    </valex:simpleVal>\n   S:     </e164val:validationInfo>\n   S:    </e164val:inf>\n\
    \   S:   </e164val:infData>\n   S:  </extension>\n   S:  <trID>\n   S:   <clTRID>ABC-23456</clTRID>\n\
    \   S:   <svTRID>54321-XYZ</svTRID>\n   S:  </trID>\n   S: </response>\n   S:</epp>\n\
    \                                 Figure 1\n"
- title: 5.1.3.  EPP <transfer> Command
  contents:
  - "5.1.3.  EPP <transfer> Command\n   This extension does not add any elements to\
    \ the EPP <transfer>\n   command or <transfer> response described in the EPP domain\
    \ mapping\n   [4].\n"
- title: 5.2.  EPP Transform Commands
  contents:
  - "5.2.  EPP Transform Commands\n   EPP provides five commands to transform objects:\
    \ <create> to create\n   an instance of an object, <delete> to delete an instance\
    \ of an\n   object, <renew> to extend the validity period of an object,\n   <transfer>\
    \ to manage object sponsorship changes, and <update> to\n   change information\
    \ associated with an object.\n"
- title: 5.2.1.  EPP <create> Command
  contents:
  - "5.2.1.  EPP <create> Command\n   This extension defines additional elements for\
    \ the EPP <create>\n   command described in the EPP domain mapping [4].  No additional\n\
    \   elements are defined for the EPP <create> response.\n   The EPP <create> command\
    \ provides a transform operation that allows a\n   client to create a domain object.\
    \  In addition to the EPP command\n   elements described in the EPP domain mapping\
    \ [4], the command MUST\n   contain an <extension> element.  The <extension> element\
    \ MUST contain\n   an <e164val:create> element that identifies the extension namespace.\n\
    \   The <e164val:create> element contains one or more <e164val:add>\n   elements,\
    \ each with an \"id\" attribute identifying the validation.\n   Each <e164val:add>\
    \ element contains an <e164val:validationInfo>\n   element, which contains the\
    \ validation information as child element.\n   In the example below, the validation\
    \ information consists of a\n   <valex:simpleVal> element that identifies the\
    \ extension namespace.\n   The <valex:simpleVal> element contains the following\
    \ child elements:\n   o  An <e164val:methodID> element that contains an identifier\
    \ of the\n      validation method.\n   o  An OPTIONAL <e164val:validationEntityID>\
    \ element that contains an\n      identifier assigned to the ENUM Validation Entity.\n\
    \   o  An OPTIONAL <e164val:registrarID> element that contains an\n      identifier\
    \ assigned to the ENUM Registrar by the ENUM Registry.\n   o  An <e164val:executionDate>\
    \ element that contains the date that the\n      validation was performed.\n \
    \  o  An OPTIONAL <e164val:expirationDate> element that contains the\n      date\
    \ that the validation expires.\n   Example for <create> command:\n   C:<?xml version=\"\
    1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n   C:<epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\
    \n   C:     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   C: <command>\n\
    \   C:  <create>\n   C:   <domain:create\n   C:    xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\"\
    >\n   C:     <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>\n   C:\
    \     <domain:period unit=\"y\">1</domain:period>\n   C:     <domain:ns>\n   C:\
    \      <domain:hostObj>ns1.example.com</domain:hostObj>\n   C:      <domain:hostObj>ns2.example.com</domain:hostObj>\n\
    \   C:     </domain:ns>\n   C:     <domain:registrant>jd1234</domain:registrant>\n\
    \   C:     <domain:contact type=\"admin\">sh8013</domain:contact>\n   C:     <domain:contact\
    \ type=\"tech\">sh8013</domain:contact>\n   C:     <domain:authInfo>\n   C:  \
    \    <domain:pw>2fooBAR</domain:pw>\n   C:     </domain:authInfo>\n   C:   </domain:create>\n\
    \   C:  </create>\n   C:  <extension>\n   C:   <e164val:create\n   C:    xmlns:e164val=\"\
    urn:ietf:params:xml:ns:e164val-1.0\">\n   C:    <e164val:add id=\"EK77\">\n  \
    \ C:     <e164val:validationInfo>\n   C:      <valex:simpleVal\n   C:       xmlns:valex=\"\
    urn:ietf:params:xml:ns:e164valex-1.1\">\n   C:       <valex:methodID>Validation-X</valex:methodID>\n\
    \   C:       <valex:validationEntityID>VE-NMQ</valex:validationEntityID>\n   C:\
    \       <valex:registrarID>Client-X</valex:registrarID>\n   C:       <valex:executionDate>2004-04-08</valex:executionDate>\n\
    \   C:       <valex:expirationDate>2004-10-07</valex:expirationDate>\n   C:  \
    \    </valex:simpleVal>\n   C:     </e164val:validationInfo>\n   C:    </e164val:add>\n\
    \   C:   </e164val:create>\n   C:  </extension>\n   C:  <clTRID>ABC-12345</clTRID>\n\
    \   C: </command>\n   C:</epp>\n                                 Figure 2\n  \
    \ When an extended <create> command has been processed successfully,\n   the EPP\
    \ response is as described in the EPP domain mapping [4].\n"
- title: 5.2.2.  EPP <delete> Command
  contents:
  - "5.2.2.  EPP <delete> Command\n   This extension does not add any elements to\
    \ the EPP <delete> command\n   or <delete> response described in the EPP domain\
    \ mapping [4].\n"
- title: 5.2.3.  EPP <renew> Command
  contents:
  - "5.2.3.  EPP <renew> Command\n   This extension defines additional elements for\
    \ the EPP <renew>\n   command described in the EPP domain mapping [4].  No additional\n\
    \   elements are defined for the EPP <renew> response.\n   The EPP <renew> command\
    \ provides a transform operation that allows a\n   client to extend the validity\
    \ period of a domain object.  In addition\n   to the EPP command elements described\
    \ in the EPP domain mapping [4],\n   the <renew> command MUST contain an <extension>\
    \ element.  The\n   <extension> element MUST contain an <e164val:renew> element\
    \ that\n   identifies the extension namespace.  The <e164val:renew> element\n\
    \   contains one or more <e164val:add> elements, each with an \"id\"\n   attribute\
    \ identifying the validation.  Each <e164val:add> element\n   contains an <e164val:validationInfo>\
    \ element, which contains the\n   validation information as child element.\n \
    \  In the example below, the validation information consists of a\n   <valex:simpleVal>\
    \ element that identifies the extension namespace.\n   The <valex:simpleVal> contains\
    \ the following child elements:\n   o  An <e164val:methodID> element that contains\
    \ an identifier of the\n      validation method.\n   o  An OPTIONAL <e164val:validationEntityID>\
    \ element that contains an\n      identifier assigned to the ENUM Validation Entity.\n\
    \   o  An OPTIONAL <e164val:registrarID> element that contains an\n      identifier\
    \ assigned to the ENUM Registrar by the ENUM Registry.\n   o  An <e164val:executionDate>\
    \ element that contains the date that the\n      validation was performed.\n \
    \  o  An OPTIONAL <e164val:expirationDate> element that contains the\n      date\
    \ that the validation expires.\n   Example for <renew> command:\n   C:<?xml version=\"\
    1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n   C:<epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\
    \n   C:     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   C: <command>\n\
    \   C:  <renew>\n   C:   <domain:renew\n   C:    xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\"\
    >\n   C:    <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>\n   C:\
    \    <domain:curExpDate>2005-04-09</domain:curExpDate>\n   C:    <domain:period\
    \ unit=\"y\">1</domain:period>\n   C:   </domain:renew>\n   C:  </renew>\n   C:\
    \  <extension>\n   C:   <e164val:renew\n   C:    xmlns:e164val=\"urn:ietf:params:xml:ns:e164val-1.0\"\
    >\n   C:    <e164val:add id=\"CAB176\">\n   C:     <e164val:validationInfo>\n\
    \   C:      <valex:simpleVal\n   C:       xmlns:valex=\"urn:ietf:params:xml:ns:e164valex-1.1\"\
    >\n   C:       <valex:methodID>Validation-X</valex:methodID>\n   C:       <valex:validationEntityID>VE-NMQ</valex:validationEntityID>\n\
    \   C:       <valex:registrarID>Client-X</valex:registrarID>\n   C:       <valex:executionDate>2005-03-30</valex:executionDate>\n\
    \   C:       <valex:expirationDate>2005-09-29</valex:expirationDate>\n   C:  \
    \    </valex:simpleVal>\n   C:     </e164val:validationInfo>\n   C:    </e164val:add>\n\
    \   C:   </e164val:renew>\n   C:  </extension>\n   C:  <clTRID>ABC-45678</clTRID>\n\
    \   C: </command>\n   C:</epp>\n                                 Figure 3\n  \
    \ When an extended <renew> command has been processed successfully, the\n   EPP\
    \ response is as described in the EPP domain mapping [4].\n"
- title: 5.2.4.  EPP <transfer> Command
  contents:
  - "5.2.4.  EPP <transfer> Command\n   This extension defines additional elements\
    \ for the EPP <transfer>\n   command described in the EPP domain mapping [4].\
    \  No additional\n   elements are defined for the EPP <transfer> response.\n \
    \  The EPP <transfer> command provides a transform operation that allows\n   a\
    \ client to manage requests to transfer the sponsorship of a domain\n   object.\
    \  Clients can initiate, cancel, approve, and reject a transfer\n   request.\n\
    \   In case of a transfer request, in addition to the EPP command\n   elements\
    \ described in the EPP domain mapping [4], the command MUST\n   contain an <extension>\
    \ element.  The <extension> element MUST contain\n   an <e164val:transfer> element\
    \ that identifies the extension\n   namespace.  The <e164val:transfer> element\
    \ contains one or more\n   <e164val:add> elements, each with an \"id\" attribute\
    \ identifying the\n   validation.  Each <e164val:add> element contains an <e164val:\n\
    \   validationInfo> element, which contains the validation information as\n  \
    \ child element.\n   In the example below, the validation information consists\
    \ of a\n   <valex:simpleVal> element that identifies the extension namespace.\n\
    \   The <valex:simpleVal> contains the following child elements:\n   o  An <e164val:methodID>\
    \ element that contains an identifier of the\n      validation method.\n   o \
    \ An OPTIONAL <e164val:validationEntityID> element that contains an\n      identifier\
    \ assigned to the ENUM Validation Entity.\n   o  An OPTIONAL <e164val:registrarID>\
    \ element that contains an\n      identifier assigned to the ENUM Registrar by\
    \ the ENUM Registry.\n   o  An <e164val:executionDate> element that contains the\
    \ date that the\n      validation was performed.\n   o  An OPTIONAL <e164val:expirationDate>\
    \ element that contains the\n      date that the validation expires.\n   Example\
    \ for <transfer> command:\n   C:<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
    no\"?>\n   C:<epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\n   C:     xmlns:xsi=\"\
    http://www.w3.org/2001/XMLSchema-instance\">\n   C: <command>\n   C:  <transfer\
    \ op=\"request\">\n   C:   <domain:transfer\n   C:    xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\"\
    >\n   C:    <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>\n   C:\
    \    <domain:authInfo>\n   C:     <domain:pw roid=\"HB1973-ZUE\">2fooBAR</domain:pw>\n\
    \   C:    </domain:authInfo>\n   C:   </domain:transfer>\n   C:  </transfer>\n\
    \   C:  <extension>\n   C:   <e164val:transfer\n   C:    xmlns:e164val=\"urn:ietf:params:xml:ns:e164val-1.0\"\
    >\n   C:    <e164val:add id=\"LJ1126\">\n   C:     <e164val:validationInfo>\n\
    \   C:      <valex:simpleVal\n   C:       xmlns:valex=\"urn:ietf:params:xml:ns:e164valex-1.1\"\
    >\n   C:       <valex:methodID>Validation-Y</valex:methodID>\n   C:       <valex:validationEntityID>VE2-LMQ</valex:validationEntityID>\n\
    \   C:       <valex:registrarID>Client-Y</valex:registrarID>\n   C:       <valex:executionDate>2005-01-22</valex:executionDate>\n\
    \   C:       <valex:expirationDate>2005-07-21</valex:expirationDate>\n   C:  \
    \    </valex:simpleVal>\n   C:     </e164val:validationInfo>\n   C:    </e164val:add>\n\
    \   C:   </e164val:transfer>\n   C:  </extension>\n   C:  <clTRID>XYZ-54789</clTRID>\n\
    \   C: </command>\n   C:</epp>\n                                 Figure 4\n  \
    \ When an extended <transfer> command has been processed successfully,\n   the\
    \ EPP response is as described in the EPP domain mapping [4].\n"
- title: 5.2.5.  EPP <update> Command
  contents:
  - "5.2.5.  EPP <update> Command\n   This extension defines additional elements for\
    \ the EPP <update>\n   command described in the EPP domain mapping [4].  No additional\n\
    \   elements are defined for the EPP <update> response.  The EPP <update>\n  \
    \ command provides a transform operation that allows a client to change\n   the\
    \ state of a domain object.  In addition to the EPP command\n   elements described\
    \ in the EPP domain mapping [4], the <update>\n   command MUST contain an <extension>\
    \ element.  The <extension> element\n   MUST contain an <e164val:update> element\
    \ that identifies the\n   extension namespace.  The <e164val:update> element contains\
    \ one or\n   more <e164val:add>, <e164val:rem>, or <e164val:chg> elements, each\n\
    \   with an \"id\" attribute identifying the validation.  Each\n   <e164val:add>\
    \ and <e164val:chg> element contains an <e164val:\n   validationInfo> element,\
    \ which contains the validation information as\n   child element. <e164val:rem>\
    \ elements do not have child elements.\n   In the example below, the validation\
    \ information consists of a\n   <valex:simpleVal> element that identifies the\
    \ extension namespace.\n   The <valex:simpleVal> contains the following child\
    \ elements:\n   o  An <e164val:methodID> element that contains an identifier of\
    \ the\n      validation method.\n   o  An OPTIONAL <e164val:validationEntityID>\
    \ element that contains an\n      identifier assigned to the ENUM Validation Entity.\n\
    \   o  An OPTIONAL <e164val:registrarID> element that contains an\n      identifier\
    \ assigned to the ENUM Registrar by the ENUM Registry.\n   o  An <e164val:executionDate>\
    \ element that contains the date that the\n      validation was performed.\n \
    \  o  An OPTIONAL <e164val:expirationDate> element that contains the\n      date\
    \ that the validation expires.\n   Example for <update> command:\n   C:<?xml version=\"\
    1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n   C:<epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\
    \n   C:     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   C: <command>\n\
    \   C:  <update>\n   C:   <domain:update\n   C:    xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\"\
    >\n   C:    <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>\n   C:\
    \   </domain:update>\n   C:  </update>\n   C:  <extension>\n   C:   <e164val:update\n\
    \   C:    xmlns:e164val=\"urn:ietf:params:xml:ns:e164val-1.0\">\n   C:    <e164val:add\
    \ id=\"EK2510\">\n   C:     <e164val:validationInfo>\n   C:      <valex:simpleVal\n\
    \   C:       xmlns:valex=\"urn:ietf:params:xml:ns:e164valex-1.1\">\n   C:    \
    \   <valex:methodID>Validation-X</valex:methodID>\n   C:       <valex:validationEntityID>VE-NMQ</valex:validationEntityID>\n\
    \   C:       <valex:registrarID>Client-X</valex:registrarID>\n   C:       <valex:executionDate>2004-10-02</valex:executionDate>\n\
    \   C:       <valex:expirationDate>2005-04-01</valex:expirationDate>\n   C:  \
    \    </valex:simpleVal>\n   C:     </e164val:validationInfo>\n   C:    </e164val:add>\n\
    \   C:    <e164val:rem id=\"EK77\"/>\n   C:   </e164val:update>\n   C:  </extension>\n\
    \   C:  <clTRID>ABC-34567</clTRID>\n   C: </command>\n   C:</epp>\n          \
    \                       Figure 5\n   When an extended <update> command has been\
    \ processed successfully,\n   the EPP response is as described in the EPP domain\
    \ mapping [4].\n"
- title: 6.  Formal Syntax
  contents:
  - "6.  Formal Syntax\n   An EPP object mapping is specified in XML Schema notation.\
    \  The\n   formal syntax presented here is a complete schema representation of\n\
    \   the object mapping suitable for automated validation of EPP XML\n   instances.\
    \  The BEGIN and END tags are not part of the schemas; they\n   are used to note\
    \ the beginning and ending of the schema for URI\n   registration purposes.\n\
    \   Formal syntax for Framework:\n   BEGIN\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <schema targetNamespace=\"urn:ietf:params:xml:ns:e164val-1.0\"\n\
    \           xmlns:e164val=\"urn:ietf:params:xml:ns:e164val-1.0\"\n           xmlns:eppcom=\"\
    urn:ietf:params:xml:ns:eppcom-1.0\"\n           xmlns=\"http://www.w3.org/2001/XMLSchema\"\
    \n           elementFormDefault=\"qualified\">\n   <!--\n   Import common element\
    \ types.\n   -->\n     <import namespace=\"urn:ietf:params:xml:ns:eppcom-1.0\"\
    \n             schemaLocation=\"eppcom-1.0.xsd\"/>\n     <annotation>\n      \
    \ <documentation>\n         Extensible Provisioning Protocol v1.0\n         domain\
    \ name extension schema for framework for\n         provisioning of E.164 number\
    \ validation information.\n       </documentation>\n     </annotation>\n   <!--\n\
    \   Child elements found in EPP commands.\n   -->\n     <element name=\"create\"\
    \ type=\"e164val:insertType\"/>\n     <element name=\"update\" type=\"e164val:updateType\"\
    />\n     <element name=\"renew\" type=\"e164val:insertType\"/>\n     <element\
    \ name=\"transfer\" type=\"e164val:insertType\"/>\n   <!--\n   Child elements\
    \ of the <create>, <renew>, and <update> commands.\n   -->\n     <complexType\
    \ name=\"insertType\">\n       <sequence>\n         <element name=\"add\" type=\"\
    e164val:addType\"\n          maxOccurs=\"unbounded\" />\n       </sequence>\n\
    \     </complexType>\n   <!--\n   Child elements of the <update> command.\n  \
    \ -->\n     <complexType name=\"updateType\">\n       <sequence>\n         <element\
    \ name=\"add\" type=\"e164val:addType\"\n          minOccurs=\"0\"\n         \
    \ maxOccurs=\"unbounded\"/>\n         <element name=\"rem\" type=\"e164val:remType\"\
    \n          minOccurs=\"0\"\n          maxOccurs=\"unbounded\"/>\n         <element\
    \ name=\"chg\" type=\"e164val:chgType\"\n          minOccurs=\"0\"\n         \
    \ maxOccurs=\"unbounded\"/>\n       </sequence>\n     </complexType>\n   <!--\n\
    \   Data elements for add, chg and rem.\n   -->\n     <complexType name=\"addType\"\
    >\n       <sequence>\n         <element ref=\"e164val:validationInfo\"/>\n   \
    \    </sequence>\n       <attribute name=\"id\" type=\"eppcom:minTokenType\"\n\
    \        use=\"required\"/>\n     </complexType>\n     <complexType name=\"chgType\"\
    >\n       <sequence>\n         <element ref=\"e164val:validationInfo\"/>\n   \
    \    </sequence>\n       <attribute name=\"id\" type=\"eppcom:minTokenType\"\n\
    \        use=\"required\"/>\n     </complexType>\n     <complexType name=\"remType\"\
    >\n       <attribute name=\"id\" type=\"eppcom:minTokenType\"\n        use=\"\
    required\"/>\n     </complexType>\n   <!--\n   Child elements found in EPP responses\n\
    \   -->\n     <element name=\"infData\" type=\"e164val:infDataType\"/>\n   <!--\n\
    \   child elements of the <info> response.\n   -->\n     <complexType name=\"\
    infDataType\">\n       <sequence>\n         <element name=\"inf\" type=\"e164val:infType\"\
    \n          minOccurs=\"0\"\n          maxOccurs=\"unbounded\"/>\n       </sequence>\n\
    \     </complexType>\n   <!--\n   Data elements for inf\n   -->\n     <complexType\
    \ name=\"infType\">\n       <sequence>\n         <element ref=\"e164val:validationInfo\"\
    />\n       </sequence>\n       <attribute name=\"id\" type=\"eppcom:minTokenType\"\
    \n        use=\"required\"/>\n     </complexType>\n   <!--\n   Global elements.\n\
    \   -->\n     <element name=\"validationInfo\" type=\"e164val:ValidationInfoType\"\
    \ />\n   <!--\n   Extension framework types.\n   -->\n     <complexType name=\"\
    ValidationInfoType\">\n       <sequence>\n         <any namespace=\"##other\"\
    />\n       </sequence>\n     </complexType>\n   <!--\n   End of schema.\n   -->\n\
    \   </schema>\n   END\n                                 Figure 6\n   Formal syntax\
    \ for a simple validation (example):\n   BEGIN\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <schema targetNamespace=\"urn:ietf:params:xml:ns:e164valex-1.1\"\
    \n           xmlns:e164valex=\"urn:ietf:params:xml:ns:e164valex-1.1\"\n      \
    \     xmlns:eppcom=\"urn:ietf:params:xml:ns:eppcom-1.0\"\n           xmlns=\"\
    http://www.w3.org/2001/XMLSchema\"\n           elementFormDefault=\"qualified\"\
    >\n   <!--\n   Import common element types.\n   -->\n     <import namespace=\"\
    urn:ietf:params:xml:ns:eppcom-1.0\"\n             schemaLocation=\"eppcom-1.0.xsd\"\
    />\n     <annotation>\n       <documentation>\n         Example for E.164 number\
    \ validation information.\n       </documentation>\n     </annotation>\n     <element\
    \ name=\"simpleVal\" type=\"e164valex:simpleValType\"/>\n     <complexType name=\"\
    simpleValType\">\n       <sequence>\n         <element name=\"methodID\" type=\"\
    e164valex:methodIdType\"/>\n         <element name=\"validationEntityID\" type=\"\
    eppcom:clIDType\"\n          minOccurs=\"0\"/>\n         <element name=\"registrarID\"\
    \ type=\"eppcom:clIDType\"\n          minOccurs=\"0\"/>\n         <element name=\"\
    executionDate\" type=\"date\"/>\n         <element name=\"expirationDate\" type=\"\
    date\"\n          minOccurs=\"0\"/>\n       </sequence>\n     </complexType>\n\
    \     <simpleType name=\"methodIdType\">\n       <restriction base=\"token\">\n\
    \         <minLength value=\"1\"/>\n         <maxLength value=\"63\"/>\n     \
    \  </restriction>\n     </simpleType>\n   <!--\n   End of schema.\n   -->\n  \
    \ </schema>\n   END\n                                 Figure 7\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document uses Uniform Resource Names (URNs)\
    \ to describe XML\n   namespaces and XML schemas conforming to the registry mechanism\n\
    \   described in RFC 3688 [8].  Four URI assignments have been made:\n   1. Registration\
    \ for the extension namespace:\n      *  URI: urn:ietf:params:xml:ns:e164val-1.0\n\
    \      *  Registrant Contact: See the \"Author's Address\" section of this\n \
    \        document.\n      *  XML: None.  Namespace URIs do not represent an XML\n\
    \         specification.\n   2. Registration for the extension XML schema:\n \
    \     *  URI: urn:ietf:params:xml:schema:e164val-1.0\n      *  Registrant Contact:\
    \ See the \"Author's Address\" section of this\n         document.\n      *  XML:\
    \ See Section 6, \"Formal Syntax\", of this document.\n   3. Registration for\
    \ the extension namespace:\n      *  URI: urn:ietf:params:xml:ns:e164valex-1.1\n\
    \      *  Registrant Contact: See the \"Author's Address\" section of this\n \
    \        document.\n      *  XML: None.  Namespace URIs do not represent an XML\n\
    \         specification.\n   4. Registration for the extension XML schema:\n \
    \     *  URI: urn:ietf:params:xml:schema:e164valex-1.1\n      *  Registrant Contact:\
    \ See the \"Author's Address\" section of this\n         document.\n      *  XML:\
    \ See Section 6, \"Formal Syntax\", of this document.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The mapping extensions described in this document\
    \ do not provide any\n   security services beyond those described by EPP [3],\
    \ the EPP domain\n   name mapping [4], and protocol layers used by EPP.  Security\n\
    \   considerations related to ENUM are described in the \"Security\n   Considerations\"\
    \ section of the ENUM specification [2].  The security\n   considerations described\
    \ in these other specifications apply to this\n   specification as well.\n   Validation\
    \ information often contains sensitive personal information.\n   It is RECOMMENDED\
    \ that validation information in the <info> response\n   is only provided to the\
    \ sponsoring client.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The author would like to thank the following people\
    \ who have provided\n   feedback or significant contributions to the development\
    \ of this\n   document: Alfred Hoenes, Helena Malmborg, Alexander Mayrhofer, Andrew\n\
    \   Newton, Marcel Parodi, Patrik Schaefer, and Patrick Zenklusen.\n   RFC 4114\
    \ [11] has been used as a template for this document.  The\n   structure and those\
    \ paragraphs that apply to both documents have\n   been taken over from [11].\
    \  The author would like to thank Scott\n   Hollenbeck for this great spadework.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]    Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n          Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]    Faltstrom, P. and M. Mealling, \"The E.164 to Uniform Resource\n  \
    \        Identifiers (URI) Dynamic Delegation Discovery System (DDDS)\n      \
    \    Application (ENUM)\", RFC 3761, April 2004.\n   [3]    Hollenbeck, S., \"\
    Extensible Provisioning Protocol (EPP)\", RFC\n          3730, March 2004.\n \
    \  [4]    Hollenbeck, S., \"Extensible Provisioning Protocol (EPP) Domain\n  \
    \        Name Mapping\", RFC 3731, March 2004.\n   [5]    Paoli, J., Maler, E.,\
    \ Bray, T., and C. Sperberg-McQueen,\n          \"Extensible Markup Language (XML)\
    \ 1.0 (Second Edition)\", World\n          Wide Web Consortium FirstEdition REC-xml-20001006,\
    \ October\n          2000, <http://www.w3.org/TR/2000/REC-xml-20001006>.\n   [6]\
    \    Thompson, H., Maloney, M., Mendelsohn, N., and D. Beech, \"XML\n        \
    \  Schema Part 1: Structures Second Edition\", World Wide Web\n          Consortium\
    \ Recommendation REC-xmlschema-1-20041028, October\n          2004, <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>.\n\
    \   [7]    Biron, P. and A. Malhotra, \"XML Schema Part 2: Datatypes\n       \
    \   Second Edition\", World Wide Web Consortium Recommendation REC-\n        \
    \  xmlschema-2-20041028, October 2004,\n          <http://www.w3.org/TR/2004/REC-xmlschema-2-20041028>.\n\
    \   [8]    Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n      \
    \    January 2004.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [9]    Mayrhofer, A. and B. Hoeneisen, \"ENUM\
    \ Validation\n          Architecture\", RFC 4725, November 2006.\n   [10]   Lendl,\
    \ O., \"ENUM Validation Token Format Definition\", Work in\n          Progress.\n\
    \   [11]   Hollenbeck, S., \"E.164 Number Mapping for the Extensible\n       \
    \   Provisioning Protocol (EPP)\", RFC 4114, June 2005.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Bernie Hoeneisen\n   SWITCH\n   Werdstrasse 2\n   CH-8004\
    \ Zuerich\n   Switzerland\n   Phone: +41 44 268 1515\n   EMail: bernhard.hoeneisen@switch.ch,\
    \ bernie@ietf.hoeneisen.ch\n   URI:   http://www.switch.ch/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
