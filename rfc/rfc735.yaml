- title: __initial_text__
  contents:
  - '                    Revised TELNET Byte Macro Option

    '
- title: '1. Command name and code:'
  contents:
  - "1. Command name and code:\n   BM 19\n"
- title: '2. Command Meanings:'
  contents:
  - "2. Command Meanings:\n   IAC WILL BM\n      The sender of this command REQUESTS\
    \ or AGREES to use the BM\n      option, and will send single data characters\
    \ which are to be\n      interpreted as if replacement data strings had been sent.\n\
    \   IAC WON'T BM\n      The sender of this option REFUSES to send single data\
    \ characters\n      which are to be interpreted as if replacement data strings\
    \ had\n      been sent. Any existing BM <macro byte> definitions are discarded\n\
    \      (i.e., reset to their original data interpretations).\n   IAC DO BM\n \
    \     The sender REQUESTS or AGREES to have the other side (sender of\n      WILL\
    \ BM) send single data characters which are to be interpreted\n      as if replacement\
    \ data strings had been sent.\n   IAC DON'T BM\n      The sender REFUSES to allow\
    \ the other side to send single data\n      characters which are to be interpreted\
    \ as if replacement data\n      strings had been sent. Any existing BM <macro\
    \ byte> definitions\n      are to be discarded.\n"
- title: Telnet Byte Macro Option
  contents:
  - "Telnet Byte Macro Option\n   IAC SB BM <DEFINE> <macro byte> <count>\n      where:\n\
    \         <macro byte> is the data byte actually to be sent across the\n     \
    \    network; it may NOT be Telnet IAC (decimal 255, but may be any\n        \
    \ other 8-bit character.\n         <count> is one 8-bit byte binary number, indicating\
    \ how many\n         <replacement string> characters follow, up to the ending\
    \ IAC\n         SE, but not including it. Note that doubled IACs in the\n    \
    \     definition should only be counted as one character per pair.\n         <replacement\
    \ string> is a string of zero or more Telnet ASCII\n         characters and/or\
    \ commands, which the <macro byte> is to\n         represent; any character may\
    \ occur within a <replacement\n         string>. Note, however, that an IAC in\
    \ the string must be\n         doubled, to be interpreted later as an IAC; to\
    \ be interpreted\n         later as data byte 255, it must be quadrupled in the\
    \ original\n         <replacement string> specification.\n      The indicated\
    \ <macro byte> will be sent instead of the indicated\n      <replacement string>.\
    \ The receiver of the <macro byte> (the sender\n      of the DO BM) is to behave\
    \ EXACTLY as if the <replacement string>\n      string of bytes had instead been\
    \ received from the network. This\n      interpretation is to occur before any\
    \ other Telnet\n      interpretations, unless the <macro byte> occurs as part\
    \ of a\n      Telnet command; in this case no special interpretation is to be\n\
    \      made. In particular, an entire Telnet subnegotiation (i.e. from\n     \
    \ IAC SB through IAC SE) is to be considered a Telnet command in\n      which\
    \ NO replacement should be done.\n      The effect of a particular <macro byte>\
    \ may be negated by reseting\n      it to \"expand\" into itself.\n      IAC SB\
    \ BM <DEFINE> X <0> IAC SE may be used to cause X to be\n      ignored in the\
    \ data stream.\n      <DEFINE> is decimal 1.\n   IAC SB BM <ACCEPT> <macro byte>\
    \ IAC SE\n      The receiver of the <DEFINE> for <macro byte> accepts the\n  \
    \    requested definition and will perform the indicated replacement\n      whenever\
    \ a <macro byte> is received and is not part of any IAC\n      Telnet command\
    \ sequence.\n"
- title: Telnet Byte Macro Option
  contents:
  - "Telnet Byte Macro Option\n      <ACCEPT> is decimal 2.\n   IAC SB BM <REFUSE>\
    \ <macro byte> <REASON> IAC SE\n      The receiver of the <DEFINE> for <macro\
    \ byte> refuses to perform\n      the indicated translation from <macro byte>\
    \ to <replacement\n      string> because the particular <macro byte> is not an\
    \ acceptable\n      choice, the length of the <replacement string> exceeds available\n\
    \      storage, the length of the actual <replacement string> did not\n      match\
    \ the length predicted in the <count>, or for some unspecified\n      reason.\n\
    \      <REFUSE> is decimal 3.\n      <REASON> may be\n         <BAD-CHOICE>  \
    \      which is decimal 1;\n         <TOO-LONG>          (for receiver's storage)\
    \ which is decimal\n                             2;\n         <WRONG-LENGTH> \
    \     (of actual string compared with promised\n                             length\
    \ in <count>) which is decimal 3; or\n         <OTHER-REASON>      (intended for\
    \ use only until this document\n                             can be updated to\
    \ include reasons not\n                             anticipated by the authors)\
    \ which is\n                             decimal zero (0).\n   IAC SB BM <LITERAL>\
    \ <macro byte> IAC SE\n      The <macro byte> is to be treated as real data, rather\
    \ than as\n      representative of the <replacement string>\n      Note that this\
    \ subcommand cannot be used during Telnet\n      subcommands, since subcommands\
    \ are defined to end with the next\n      occurrence of \"IAC SE\". Including\
    \ this BM subcommand within any\n      Telnet subcommand would therefore prematurely\
    \ terminate the\n      containing subcommand.\n      <LITERAL> is decimal 4.\n\
    \   IAC SB BM <PLEASE CANCEL> <macro byte> <REASON> IAC SE\n      The RECEIVER\
    \ of the defined <macro byte> (i.e., the sender of IAC\n      DO BM) requests\
    \ the sender of <macro byte> to cancel its\n      definition. <REASON> is the\
    \ same as for the <REFUSE> subcommand.\n"
- title: Telnet Byte Macro Option
  contents:
  - "Telnet Byte Macro Option\n      The <macro byte> sender should (but is not required\
    \ to) respond by\n      resetting <macro byte> (i.e., sending an IAC SB BM <DEFINE>\
    \ <macro\n      byte> <1> <macro byte> IAC SE).\n      If the receiver absolutely\
    \ insists on cancelling a given macro,\n      the best it can do is to turn off\
    \ the entire option, with IAC DONT\n      BM, wait for an acknowledging IAC WONT\
    \ BM and then restart the\n      option, with IAC DO BM. This will reset all other\
    \ macroes as well\n      but it will allow the receiver to REFUSE with code BAD\
    \ CHOICE\n      if/when the foreign site attempts to redefine the macro in\n \
    \     question.\n"
- title: '3. Default:'
  contents:
  - "3. Default:\n   WON'T BM -- DON'T BM\n      No reinterpretation of data bytes\
    \ is done.\n"
- title: '4. Motivation for the option:'
  contents:
  - "4. Motivation for the option:\n   Subcommands for Telnet options currently require\
    \ a minimum of five\n   characters to be sent over the network (i.e., IAC SB <Option\
    \ name>\n   IAC SE). For subcommands which are employed infrequently, in absolute\n\
    \   numbers and in relation to normal data, this overhead is tolerable.\n   In\
    \ other cases, however, it is not. For example, data which is sent\n   in a block-\
    \ oriented fashion may need a \"block separator\" mark. If\n   blocks are commonly\
    \ as small as five or ten bytes, then most of the\n   cross-net data will be control\
    \ information. The BM option is intended\n   as a simple data compression technique,\
    \ to remove this overhead from\n   the communication channel.\n"
- title: 5. Description of the option
  contents:
  - "5. Description of the option\n   The option is enabled through the standard Telnet\
    \ Option negotiation\n   process. Afterwards, the SENDER of data (the side which\
    \ sends the IAC\n   WILL BM) is free to define and use mappings between single\
    \ and\n   replacement NVT characters. Except for the ability to refuse\n   particular\
    \ definitions, the receiver of data has no control over the\n   definition and\
    \ use of mappings.\n   The sender (of the WILL BM) is prohibited from using or\
    \ redefining a\n   <macro byte> until it has received an <ACCEPT> <REFUSE>, or\
    \ DONT BM,\n   in reply to a <DEFINE>.\n   NOTE: The Telnet command character\
    \ IAC (decimal 255) may be a member\n   of a <replacement string> but is the ONLY\
    \ character which may NOT be\n   defined as a <macro byte>.\n"
- title: Telnet Byte Macro Option
  contents:
  - "Telnet Byte Macro Option\n   Within any Telnet command (i.e., any sequence beginning\
    \ with IAC)\n   macro replacement may NOT take place. Data are to be interpreted\
    \ only\n   as their normal character values. This avoids the problem of\n   distinguishing\
    \ between a character which is to be taken as a <macro\n   byte>, and interpreted\
    \ as its corresponding <replacement string>, and\n   one which is to be taken\
    \ as its usual Telnet NVT value. In all other\n   cases, however, <macro byte>s\
    \ are to be interpreted immediately, as\n   if their corresponding <replacement\
    \ string>s had actually been sent\n   across the network. Expanded strings are\
    \ not subject to\n   reinterpretation, so that recursive definitions cannot be\
    \ made.\n   Telnet commands may be included in <replacement strings>; however,\n\
    \   they must be totally contained within the macro or must begin within\n   the\
    \ macro and terminate outside of it. In particular, they may NOT\n   begin outside\
    \ a macro and continue or terminate inside one, since no\n   macro replacement\
    \ takes place while processing any Telnet command.\n   Note that when skipping\
    \ data due to Telnet SYNCH (INS/DM) processing,\n   BM macro replacement should\
    \ still take place, since (for example)\n   \"IAC DM\" would be a valid <replacement\
    \ string>.\n   The <count> in the <DEFINE> subcommand is intended to allow the\n\
    \   receiver to allocate storage. IAC interpretation is not over-ridden\n   during\
    \ BM subcommands so that IAC SE will continue to safely\n   terminate malformed\
    \ subcommands.\n   The BM option is notably inefficient with regard to problems\
    \ during\n   <macro byte> definition and use of <macro byte>s as real data. It\
    \ is\n   expected that relatively few <macro byte>s will be defined and that\n\
    \   they will represent relatively short strings. Since the Telnet data\n   space\
    \ between decimal 128 and decimal 254 is not normally used,\n   except by implementations\
    \ employing the original (obsolete) Telnet\n   protocol, it is recommended that\
    \ <macro byte>s normally be drawn from\n   that pool.\n"
