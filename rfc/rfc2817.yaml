- title: __initial_text__
  contents:
  - '                    Upgrading to TLS Within HTTP/1.1

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo explains how to use the Upgrade mechanism in HTTP/1.1\
    \ to\n   initiate Transport Layer Security (TLS) over an existing TCP\n   connection.\
    \ This allows unsecured and secured HTTP traffic to share\n   the same well known\
    \ port (in this case, http: at 80 rather than\n   https: at 443). It also enables\
    \ \"virtual hosting\", so a single HTTP +\n   TLS server can disambiguate traffic\
    \ intended for several hostnames at\n   a single IP address.\n   Since HTTP/1.1\
    \ [1] defines Upgrade as a hop-by-hop mechanism, this\n   memo also documents\
    \ the HTTP CONNECT method for establishing end-to-\n   end tunnels across HTTP\
    \ proxies. Finally, this memo establishes new\n   IANA registries for public HTTP\
    \ status codes, as well as public or\n   private Upgrade product tokens.\n   This\
    \ memo does NOT affect the current definition of the 'https' URI\n   scheme, which\
    \ already defines a separate namespace\n   (http://example.org/ and https://example.org/\
    \ are not equivalent).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Motivation . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Introduction . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   2.1 Requirements Terminology . . . . . . . . . . . . . . .\
    \ . . . .  4\n   3.  Client Requested Upgrade to HTTP over TLS  . . . . . . .\
    \ . . .  4\n   3.1 Optional Upgrade . . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   3.2 Mandatory Upgrade  . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n   3.3 Server Acceptance of Upgrade Request . . . . . . . . . . . . .\
    \  4\n   4.  Server Requested Upgrade to HTTP over TLS  . . . . . . . . . .  5\n\
    \   4.1 Optional Advertisement . . . . . . . . . . . . . . . . . . . .  5\n  \
    \ 4.2 Mandatory Advertisement  . . . . . . . . . . . . . . . . . . .  5\n   5.\
    \  Upgrade across Proxies . . . . . . . . . . . . . . . . . . . .  6\n   5.1 Implications\
    \ of Hop By Hop Upgrade . . . . . . . . . . . . . .  6\n   5.2 Requesting a Tunnel\
    \ with CONNECT . . . . . . . . . . . . . . .  6\n   5.3 Establishing a Tunnel\
    \ with CONNECT . . . . . . . . . . . . . .  7\n   6.  Rationale for the use of\
    \ a 4xx (client error) Status Code  . .  7\n   7.  IANA Considerations  . . .\
    \ . . . . . . . . . . . . . . . . . .  8\n   7.1 HTTP Status Code Registry  .\
    \ . . . . . . . . . . . . . . . . .  8\n   7.2 HTTP Upgrade Token Registry  .\
    \ . . . . . . . . . . . . . . . .  8\n   8.  Security Considerations  . . . .\
    \ . . . . . . . . . . . . . . .  9\n   8.1 Implications for the https: URI Scheme\
    \ . . . . . . . . . . . . 10\n   8.2 Security Considerations for CONNECT  . .\
    \ . . . . . . . . . . . 10\n       References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 10\n       Authors' Addresses . . . . . . . . . . . . .\
    \ . . . . . . . . . 11\n   A.  Acknowledgments  . . . . . . . . . . . . . . .\
    \ . . . . . . . . 12\n       Full Copyright Statement . . . . . . . . . . . .\
    \ . . . . . . . 13\n"
- title: 1. Motivation
  contents:
  - "1. Motivation\n   The historical practice of deploying HTTP over SSL3 [3] has\n\
    \   distinguished the combination from HTTP alone by a unique URI scheme\n   and\
    \ the TCP port number. The scheme 'http' meant the HTTP protocol\n   alone on\
    \ port 80, while 'https' meant the HTTP protocol over SSL on\n   port 443.  Parallel\
    \ well-known port numbers have similarly been\n   requested -- and in some cases,\
    \ granted -- to distinguish between\n   secured and unsecured use of other application\
    \ protocols (e.g.\n   snews, ftps). This approach effectively halves the number\
    \ of\n   available well known ports.\n   At the Washington DC IETF meeting in\
    \ December 1997, the Applications\n   Area Directors and the IESG reaffirmed that\
    \ the practice of issuing\n   parallel \"secure\" port numbers should be deprecated.\
    \ The HTTP/1.1\n   Upgrade mechanism can apply Transport Layer Security [6] to\
    \ an open\n   HTTP connection.\n   In the nearly two years since, there has been\
    \ broad acceptance of the\n   concept behind this proposal, but little interest\
    \ in implementing\n   alternatives to port 443 for generic Web browsing. In fact,\
    \ nothing\n   in this memo affects the current interpretation of https: URIs.\n\
    \   However, new application protocols built atop HTTP, such as the\n   Internet\
    \ Printing Protocol [7], call for just such a mechanism in\n   order to move ahead\
    \ in the IETF standards process.\n   The Upgrade mechanism also solves the \"\
    virtual hosting\" problem.\n   Rather than allocating multiple IP addresses to\
    \ a single host, an\n   HTTP/1.1 server will use the Host: header to disambiguate\
    \ the\n   intended web service. As HTTP/1.1 usage has grown more prevalent,\n\
    \   more ISPs are offering name-based virtual hosting, thus delaying IP\n   address\
    \ space exhaustion.\n   TLS (and SSL) have been hobbled by the same limitation\
    \ as earlier\n   versions of HTTP: the initial handshake does not specify the\
    \ intended\n   hostname, relying exclusively on the IP address. Using a cleartext\n\
    \   HTTP/1.1 Upgrade: preamble to the TLS handshake -- choosing the\n   certificates\
    \ based on the initial Host: header -- will allow ISPs to\n   provide secure name-based\
    \ virtual hosting as well.\n"
- title: 2. Introduction
  contents:
  - "2. Introduction\n   TLS, a.k.a., SSL (Secure Sockets Layer), establishes a private\
    \ end-\n   to-end connection, optionally including strong mutual authentication,\n\
    \   using a variety of cryptosystems. Initially, a handshake phase uses\n   three\
    \ subprotocols to set up a record layer, authenticate endpoints,\n   set parameters,\
    \ as well as report errors.  Then, there is an ongoing\n   layered record protocol\
    \ that handles encryption, compression, and\n   reassembly for the remainder of\
    \ the connection. The latter is\n   intended to be completely transparent. For\
    \ example, there is no\n   dependency between TLS's record markers and or certificates\
    \ and\n   HTTP/1.1's chunked encoding or authentication.\n   Either the client\
    \ or server can use the HTTP/1.1 [1] Upgrade\n   mechanism (Section 14.42) to\
    \ indicate that a TLS-secured connection\n   is desired or necessary. This memo\
    \ defines the \"TLS/1.0\" Upgrade\n   token, and a new HTTP Status Code, \"426\
    \ Upgrade Required\".\n   Section 3 and Section 4 describe the operation of a\
    \ directly\n   connected client and server. Intermediate proxies must establish\
    \ an\n   end-to-end tunnel before applying those operations, as explained in\n\
    \   Section 5.\n"
- title: 2.1 Requirements Terminology
  contents:
  - "2.1 Requirements Terminology\n   Keywords \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHOULD\", \"SHOULD NOT\" and\n   \"MAY\" that appear in this document are\
    \ to be interpreted as described\n   in RFC 2119 [11].\n"
- title: 3. Client Requested Upgrade to HTTP over TLS
  contents:
  - "3. Client Requested Upgrade to HTTP over TLS\n   When the client sends an HTTP/1.1\
    \ request with an Upgrade header\n   field containing the token \"TLS/1.0\", it\
    \ is requesting the server to\n   complete the current HTTP/1.1 request after\
    \ switching to TLS/1.0.\n"
- title: 3.1 Optional Upgrade
  contents:
  - "3.1 Optional Upgrade\n   A client MAY offer to switch to secured operation during\
    \ any clear\n   HTTP request when an unsecured response would be acceptable:\n\
    \       GET http://example.bank.com/acct_stat.html?749394889300 HTTP/1.1\n   \
    \    Host: example.bank.com\n       Upgrade: TLS/1.0\n       Connection: Upgrade\n\
    \   In this case, the server MAY respond to the clear HTTP operation\n   normally,\
    \ OR switch to secured operation (as detailed in the next\n   section).\n   Note\
    \ that HTTP/1.1 [1] specifies \"the upgrade keyword MUST be\n   supplied within\
    \ a Connection header field (section 14.10) whenever\n   Upgrade is present in\
    \ an HTTP/1.1 message\".\n"
- title: 3.2 Mandatory Upgrade
  contents:
  - "3.2 Mandatory Upgrade\n   If an unsecured response would be unacceptable, a client\
    \ MUST send an\n   OPTIONS request first to complete the switch to TLS/1.0 (if\n\
    \   possible).\n       OPTIONS * HTTP/1.1\n       Host: example.bank.com\n   \
    \    Upgrade: TLS/1.0\n       Connection: Upgrade\n"
- title: 3.3 Server Acceptance of Upgrade Request
  contents:
  - "3.3 Server Acceptance of Upgrade Request\n   As specified in HTTP/1.1 [1], if\
    \ the server is prepared to initiate\n   the TLS handshake, it MUST send the intermediate\
    \ \"101 Switching\n   Protocol\" and MUST include an Upgrade response header specifying\
    \ the\n   tokens of the protocol stack it is switching to:\n       HTTP/1.1 101\
    \ Switching Protocols\n       Upgrade: TLS/1.0, HTTP/1.1\n       Connection: Upgrade\n\
    \   Note that the protocol tokens listed in the Upgrade header of a 101\n   Switching\
    \ Protocols response specify an ordered 'bottom-up' stack.\n   As specified in\
    \  HTTP/1.1 [1], Section 10.1.2: \"The server will\n   switch protocols to those\
    \ defined by the response's Upgrade header\n   field immediately after the empty\
    \ line which terminates the 101\n   response\".\n   Once the TLS handshake completes\
    \ successfully, the server MUST\n   continue with the response to the original\
    \ request. Any TLS handshake\n   failure MUST lead to disconnection, per the TLS\
    \ error alert\n   specification.\n"
- title: 4. Server Requested Upgrade to HTTP over TLS
  contents:
  - "4. Server Requested Upgrade to HTTP over TLS\n   The Upgrade response header\
    \ field advertises possible protocol\n   upgrades a server MAY accept. In conjunction\
    \ with the \"426 Upgrade\n   Required\" status code, a server can advertise the\
    \ exact protocol\n   upgrade(s) that a client MUST accept to complete the request.\n"
- title: 4.1 Optional Advertisement
  contents:
  - "4.1 Optional Advertisement\n   As specified in HTTP/1.1 [1], the server MAY include\
    \ an Upgrade\n   header in any response other than 101 or 426 to indicate a\n\
    \   willingness to switch to any (combination) of the protocols listed.\n"
- title: 4.2 Mandatory Advertisement
  contents:
  - "4.2 Mandatory Advertisement\n   A server MAY indicate that a client request can\
    \ not be completed\n   without TLS using the \"426 Upgrade Required\" status code,\
    \ which MUST\n   include an an Upgrade header field specifying the token of the\n\
    \   required TLS version.\n       HTTP/1.1 426 Upgrade Required\n       Upgrade:\
    \ TLS/1.0, HTTP/1.1\n       Connection: Upgrade\n   The server SHOULD include\
    \ a message body in the 426 response which\n   indicates in human readable form\
    \ the reason for the error and\n   describes any alternative courses which may\
    \ be available to the user.\n   Note that even if a client is willing to use TLS,\
    \ it must use the\n   operations in Section 3 to proceed; the TLS handshake cannot\
    \ begin\n   immediately after the 426 response.\n"
- title: 5. Upgrade across Proxies
  contents:
  - "5. Upgrade across Proxies\n   As a hop-by-hop header, Upgrade is negotiated between\
    \ each pair of\n   HTTP counterparties.  If a User Agent sends a request with\
    \ an Upgrade\n   header to a proxy, it is requesting a change to the protocol\
    \ between\n   itself and the proxy, not an end-to-end change.\n   Since TLS, in\
    \ particular, requires end-to-end connectivity to provide\n   authentication and\
    \ prevent man-in-the-middle attacks, this memo\n   specifies the CONNECT method\
    \ to establish a tunnel across proxies.\n   Once a tunnel is established, any\
    \ of the operations in Section 3 can\n   be used to establish a TLS connection.\n"
- title: 5.1 Implications of Hop By Hop Upgrade
  contents:
  - "5.1 Implications of Hop By Hop Upgrade\n   If an origin server receives an Upgrade\
    \ header from a proxy and\n   responds with a 101 Switching Protocols response,\
    \ it is changing the\n   protocol only on the connection between the proxy and\
    \ itself.\n   Similarly, a proxy might return a 101 response to its client to\n\
    \   change the protocol on that connection independently of the protocols\n  \
    \ it is using to communicate toward the origin server.\n   These scenarios also\
    \ complicate diagnosis of a 426 response.  Since\n   Upgrade is a hop-by-hop header,\
    \ a proxy that does not recognize 426\n   might remove the accompanying Upgrade\
    \ header and prevent the client\n   from determining the required protocol switch.\
    \  If a client receives\n   a 426 status without an accompanying Upgrade header,\
    \ it will need to\n   request an end to end tunnel connection as described in\
    \ Section 5.2\n   and repeat the request in order to obtain the required upgrade\n\
    \   information.\n   This hop-by-hop definition of Upgrade was a deliberate choice.\
    \  It\n   allows for incremental deployment on either side of proxies, and for\n\
    \   optimized protocols between cascaded proxies without the knowledge of\n  \
    \ the parties that are not a part of the change.\n"
- title: 5.2 Requesting a Tunnel with CONNECT
  contents:
  - "5.2 Requesting a Tunnel with CONNECT\n   A CONNECT method requests that a proxy\
    \ establish a tunnel connection\n   on its behalf. The Request-URI portion of\
    \ the Request-Line is always\n   an 'authority' as defined by URI Generic Syntax\
    \ [2], which is to say\n   the host name and port number destination of the requested\
    \ connection\n   separated by a colon:\n      CONNECT server.example.com:80 HTTP/1.1\n\
    \      Host: server.example.com:80\n   Other HTTP mechanisms can be used normally\
    \ with the CONNECT method --\n   except end-to-end protocol Upgrade requests,\
    \ of course, since the\n   tunnel must be established first.\n   For example,\
    \ proxy authentication might be used to establish the\n   authority to create\
    \ a tunnel:\n      CONNECT server.example.com:80 HTTP/1.1\n      Host: server.example.com:80\n\
    \      Proxy-Authorization: basic aGVsbG86d29ybGQ=\n   Like any other pipelined\
    \ HTTP/1.1 request, data to be tunneled may be\n   sent immediately after the\
    \ blank line. The usual caveats also apply:\n   data may be discarded if the eventual\
    \ response is negative, and the\n   connection may be reset with no response if\
    \ more than one TCP segment\n   is outstanding.\n"
- title: 5.3 Establishing a Tunnel with CONNECT
  contents:
  - "5.3 Establishing a Tunnel with CONNECT\n   Any successful (2xx) response to a\
    \ CONNECT request indicates that the\n   proxy has established a connection to\
    \ the requested host and port,\n   and has switched to tunneling the current connection\
    \ to that server\n   connection.\n   It may be the case that the proxy itself\
    \ can only reach the requested\n   origin server through another proxy.  In this\
    \ case, the first proxy\n   SHOULD make a CONNECT request of that next proxy,\
    \ requesting a tunnel\n   to the authority.  A proxy MUST NOT respond with any\
    \ 2xx status code\n   unless it has either a direct or tunnel connection established\
    \ to the\n   authority.\n   An origin server which receives a CONNECT request\
    \ for itself MAY\n   respond with a 2xx status code to indicate that a connection\
    \ is\n   established.\n   If at any point either one of the peers gets disconnected,\
    \ any\n   outstanding data that came from that peer will be passed to the other\n\
    \   one, and after that also the other connection will be terminated by\n   the\
    \ proxy. If there is outstanding data to that peer undelivered,\n   that data\
    \ will be discarded.\n"
- title: 6. Rationale for the use of a 4xx (client error) Status Code
  contents:
  - "6. Rationale for the use of a 4xx (client error) Status Code\n   Reliable, interoperable\
    \ negotiation of Upgrade features requires an\n   unambiguous failure signal.\
    \ The 426 Upgrade Required status code\n   allows a server to definitively state\
    \ the precise protocol extensions\n   a given resource must be served with.\n\
    \   It might at first appear that the response should have been some form\n  \
    \ of redirection (a 3xx code), by analogy to an old-style redirection\n   to an\
    \ https: URI.  User agents that do not understand Upgrade:\n   preclude this.\n\
    \   Suppose that a 3xx code had been assigned for \"Upgrade Required\"; a\n  \
    \ user agent that did not recognize it would treat it as 300.  It would\n   then\
    \ properly look for a \"Location\" header in the response and\n   attempt to repeat\
    \ the request at the URL in that header field. Since\n   it did not know to Upgrade\
    \ to incorporate the TLS layer, it would at\n   best fail again at the new URL.\n"
- title: 7. IANA Considerations
  contents:
  - "7. IANA Considerations\n   IANA shall create registries for two name spaces,\
    \ as described in BCP\n   26 [10]:\n   o  HTTP Status Codes\n   o  HTTP Upgrade\
    \ Tokens\n"
- title: 7.1 HTTP Status Code Registry
  contents:
  - "7.1 HTTP Status Code Registry\n   The HTTP Status Code Registry defines the name\
    \ space for the Status-\n   Code token in the Status line of an HTTP response.\
    \  The initial\n   values for this name space are those specified by:\n   1. \
    \ Draft Standard for HTTP/1.1 [1]\n   2.  Web Distributed Authoring and Versioning\
    \ [4] [defines 420-424]\n   3.  WebDAV Advanced Collections [5] (Work in Progress)\
    \ [defines 425]\n   4.  Section 6 [defines 426]\n   Values to be added to this\
    \ name space SHOULD be subject to review in\n   the form of a standards track\
    \ document within the IETF Applications\n   Area.  Any such document SHOULD be\
    \ traceable through statuses of\n   either 'Obsoletes' or 'Updates' to the Draft\
    \ Standard for\n   HTTP/1.1 [1].\n"
- title: 7.2 HTTP Upgrade Token Registry
  contents:
  - "7.2 HTTP Upgrade Token Registry\n   The HTTP Upgrade Token Registry defines the\
    \ name space for product\n   tokens used to identify protocols in the Upgrade\
    \ HTTP header field.\n   Each registered token should be associated with one or\
    \ a set of\n   specifications, and with contact information.\n   The Draft Standard\
    \ for HTTP/1.1 [1] specifies that these tokens obey\n   the production for 'product':\n\
    \      product         = token [\"/\" product-version]\n      product-version\
    \ = token\n   Registrations should be allowed on a First Come First Served basis\
    \ as\n   described in BCP 26 [10]. These specifications need not be IETF\n   documents\
    \ or be subject to IESG review, but should obey the following\n   rules:\n   1.\
    \  A token, once registered, stays registered forever.\n   2.  The registration\
    \ MUST name a responsible party for the\n       registration.\n   3.  The registration\
    \ MUST name a point of contact.\n   4.  The registration MAY name the documentation\
    \ required for the\n       token.\n   5.  The responsible party MAY change the\
    \ registration at any time.\n       The IANA will keep a record of all such changes,\
    \ and make them\n       available upon request.\n   6.  The responsible party\
    \ for the first registration of a \"product\"\n       token MUST approve later\
    \ registrations of a \"version\" token\n       together with that \"product\"\
    \ token before they can be registered.\n   7.  If absolutely required, the IESG\
    \ MAY reassign the responsibility\n       for a token. This will normally only\
    \ be used in the case when a\n       responsible party cannot be contacted.\n\
    \   This specification defines the protocol token \"TLS/1.0\" as the\n   identifier\
    \ for the protocol specified by The TLS Protocol [6].\n   It is NOT required that\
    \ specifications for upgrade tokens be made\n   publicly available, but the contact\
    \ information for the registration\n   SHOULD be.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   The potential for a man-in-the-middle attack (deleting\
    \ the Upgrade\n   header) remains the same as current, mixed http/https practice:\n\
    \   o  Removing the Upgrade header is similar to rewriting web pages to\n    \
    \  change https:// links to http:// links.\n   o  The risk is only present if\
    \ the server is willing to vend such\n      information over both a secure and\
    \ an insecure channel in the\n      first place.\n   o  If the client knows for\
    \ a fact that a server is TLS-compliant, it\n      can insist on it by only sending\
    \ an Upgrade request with a no-op\n      method like OPTIONS.\n   o  Finally,\
    \ as the https: specification warns, \"users should\n      carefully examine the\
    \ certificate presented by the server to\n      determine if it meets their expectations\"\
    .\n   Furthermore, for clients that do not explicitly try to invoke TLS,\n   servers\
    \ can use the Upgrade header in any response other than 101 or\n   426 to advertise\
    \ TLS compliance. Since TLS compliance should be\n   considered a feature of the\
    \ server and not the resource at hand, it\n   should be sufficient to send it\
    \ once, and let clients cache that\n   fact.\n"
- title: '8.1 Implications for the https: URI Scheme'
  contents:
  - "8.1 Implications for the https: URI Scheme\n   While nothing in this memo affects\
    \ the definition of the 'https' URI\n   scheme, widespread adoption of this mechanism\
    \ for HyperText content\n   could use 'http' to identify both secure and non-secure\
    \ resources.\n   The choice of what security characteristics are required on the\n\
    \   connection is left to the client and server.  This allows either\n   party\
    \ to use any information available in making this determination.\n   For example,\
    \ user agents may rely on user preference settings or\n   information about the\
    \ security of the network such as 'TLS required\n   on all POST operations not\
    \ on my local net', or servers may apply\n   resource access rules such as 'the\
    \ FORM on this page must be served\n   and submitted using TLS'.\n"
- title: 8.2 Security Considerations for CONNECT
  contents:
  - "8.2 Security Considerations for CONNECT\n   A generic TCP tunnel is fraught with\
    \ security risks. First, such\n   authorization should be limited to a small number\
    \ of known ports.\n   The Upgrade: mechanism defined here only requires onward\
    \ tunneling at\n   port 80. Second, since tunneled data is opaque to the proxy,\
    \ there\n   are additional risks to tunneling to other well-known or reserved\n\
    \   ports. A putative HTTP client CONNECTing to port 25 could relay spam\n   via\
    \ SMTP, for example.\n"
- title: References
  contents:
  - "References\n   [1]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter,\
    \ L.,\n        Leach, P. and T. Berners-Lee, \"Hypertext Transfer Protocol --\n\
    \        HTTP/1.1\", RFC 2616, June 1999.\n   [2]  Berners-Lee, T., Fielding,\
    \ R. and L. Masinter, \"URI Generic\n        Syntax\", RFC 2396, August 1998.\n\
    \   [3]  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.\n   [4]  Goland,\
    \ Y., Whitehead, E., Faizi, A., Carter, S. and D. Jensen,\n        \"Web Distributed\
    \ Authoring and Versioning\", RFC 2518, February\n        1999.\n   [5]  Slein,\
    \ J., Whitehead, E.J., et al., \"WebDAV Advanced Collections\n        Protocol\"\
    ,  Work In Progress.\n   [6]  Dierks, T. and C. Allen, \"The TLS Protocol\", RFC\
    \ 2246, January\n        1999.\n   [7]  Herriot, R., Butler, S., Moore, P. and\
    \ R. Turner, \"Internet\n        Printing Protocol/1.0: Encoding and Transport\"\
    , RFC 2565, April\n        1999.\n   [8]  Luotonen, A., \"Tunneling TCP based\
    \ protocols through Web proxy\n        servers\",  Work In Progress.  (Also available\
    \ in: Luotonen, Ari.\n        Web Proxy Servers, Prentice-Hall, 1997 ISBN:0136806120.)\n\
    \   [9]  Rose, M., \"Writing I-Ds and RFCs using XML\", RFC 2629, June\n     \
    \   1999.\n   [10] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA\n\
    \        Considerations Section in RFCs\", BCP 26, RFC 2434, October 1998.\n \
    \  [11] Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n   \
    \     Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rohit Khare\n   4K Associates / UC Irvine\n   3207 Palo\
    \ Verde\n   Irvine, CA  92612\n   US\n   Phone: +1 626 806 7574\n   EMail: rohit@4K-associates.com\n\
    \   URI:   http://www.4K-associates.com/\n   Scott Lawrence\n   Agranat Systems,\
    \ Inc.\n   5 Clocktower Place\n   Suite 400\n   Maynard, MA  01754\n   US\n  \
    \ Phone: +1 978 461 0888\n   EMail: lawrence@agranat.com\n   URI:   http://www.agranat.com/\n"
- title: Appendix A. Acknowledgments
  contents:
  - "Appendix A. Acknowledgments\n   The CONNECT method was originally described in\
    \ a Work in Progress\n   titled, \"Tunneling TCP based protocols through Web proxy\
    \ servers\",\n   [8] by Ari Luotonen of Netscape Communications Corporation. \
    \ It was\n   widely implemented by HTTP proxies, but was never made a part of\
    \ any\n   IETF Standards Track document. The method name CONNECT was reserved,\n\
    \   but not defined in [1].\n   The definition provided here is derived directly\
    \ from that earlier\n   memo, with some editorial changes and conformance to the\
    \ stylistic\n   conventions since established in other HTTP specifications.\n\
    \   Additional Thanks to:\n   o  Paul Hoffman for his work on the STARTTLS command\
    \ extension for\n      ESMTP.\n   o  Roy Fielding for assistance with the rationale\
    \ behind Upgrade:\n      and its interaction with OPTIONS.\n   o  Eric Rescorla\
    \ for his work on standardizing the existing https:\n      practice to compare\
    \ with.\n   o  Marshall Rose, for the xml2rfc document type description and tools\n\
    \      [9].\n   o  Jim Whitehead, for sorting out the current range of available\
    \ HTTP\n      status codes.\n   o  Henrik Frystyk Nielsen, whose work on the Mandatory\
    \ extension\n      mechanism pointed out a hop-by-hop Upgrade still requires\n\
    \      tunneling.\n   o  Harald Alvestrand for improvements to the token registration\n\
    \      rules.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
