- title: __initial_text__
  contents:
  - '               RTP Payload Format for Uncompressed Video

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies a packetization scheme for encapsulating\n \
    \  uncompressed video into a payload format for the Real-time Transport\n   Protocol,\
    \ RTP.  It supports a range of standard- and high-definition\n   video formats,\
    \ including common television formats such as ITU\n   BT.601, and standards from\
    \ the Society of Motion Picture and\n   Television Engineers (SMPTE), such as\
    \ SMPTE 274M and SMPTE 296M.  The\n   format is designed to be applicable and\
    \ extensible to new video\n   formats as they are developed.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a scheme to packetize uncompressed, studio-quality\n\
    \   video streams for transport using RTP [RTP].  It supports a range of\n   standard\
    \ and high-definition video formats, including ITU-R BT.601\n   [601], SMPTE 274M\
    \ [274] and SMPTE 296M [296].\n   Formats for uncompressed standard definition\
    \ television are defined\n   by ITU Recommendation BT.601 [601] along with bit-serial\
    \ and parallel\n   interfaces in Recommendation BT.656 [656].  These formats allow\
    \ both\n   625-line and 525-line operation, with 720 samples per digital active\n\
    \   line, 4:2:2 color sub-sampling, and 8- or 10-bit digital\n   representation.\n\
    \   The representation of uncompressed high-definition television is\n   specified\
    \ in SMPTE standards 274M [274] and 296M [296].  SMPTE 274M\n   defines a family\
    \ of scanning systems with an image format of\n   1920x1080 pixels with progressive\
    \ and interlaced scanning, while\n   SMPTE 296M defines systems with an image\
    \ size of 1280x720 pixels and\n   progressive scanning.  In progressive scanning,\
    \ scan lines are\n   displayed in sequence from top to bottom of a full frame.\
    \  In\n   interlaced scanning, a frame is divided into its odd and even scan\n\
    \   lines (called fields) and the two fields are displayed in succession.\n  \
    \ SMPTE 274M and 296M define images with aspect ratios of 16:9, and\n   define\
    \ the digital representation for RGB and YCbCr components.  In\n   the case of\
    \ YCbCr components, the Cb and Cr components are\n   horizontally sub-sampled\
    \ by a factor of two (4:2:2 color encoding).\n   Although these formats differ\
    \ in their details, they are structurally\n   very similar.  This memo specifies\
    \ a payload format to encapsulate\n   these and other similar video formats for\
    \ transport within RTP.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [2119].\n"
- title: 3.  Payload Design
  contents:
  - "3.  Payload Design\n   Each scan line of digital video is packetized into one\
    \ or more RTP\n   packets.  If the data for a complete scan line exceeds the network\n\
    \   MTU, the scan line SHOULD be fragmented into multiple RTP packets,\n   each\
    \ smaller than the MTU.  A single RTP packet MAY contain data for\n   more than\
    \ one scan line.  Only the active samples are included in the\n   RTP payload:\
    \ inactive samples and the contents of horizontal and\n   vertical blanking SHOULD\
    \ NOT be transported.  In instances where\n   ancillary data is being transmitted,\
    \ the sender and receiver can\n   disambiguate between ancillary and video data\
    \ via scan line numbers.\n   That is, the ancillary data will use scan line numbers\
    \ that are not\n   within the scope of the video frame.\n   Scan line numbers\
    \ are included in the RTP payload header, along with\n   a field identifier for\
    \ interlaced video.\n      For SMPTE 296M format video, valid scan line numbers\
    \ are from 26\n      through 745, inclusive.  For progressive scan SMPTE 274M\
    \ format\n      video, valid scan lines are from scan line 42 through 1121,\n\
    \      inclusive.  For interlaced scan SMPTE 274M format video, valid\n      scan\
    \ line numbers for field one (F=0) are from 21 to 560 and valid\n      scan line\
    \ numbers for the second field (F=1) are from 584 to 1123.\n      For ITU-R BT.601\
    \ format video, the blanking intervals defined in\n      BT.656 are used: for\
    \ 625 line video, lines 24 to 310 of field one\n      (F=0) and 337 to 623 of\
    \ the second field (F=1) are valid; for 525\n      line video, lines 21 to 263\
    \ of the first field, and 284 to 525 of\n      the second field are valid.  Other\
    \ formats (e.g., [372]) may\n      define different ranges of active lines.\n\
    \   The payload header contains a 16-bit extension to the standard 16-bit\n  \
    \ RTP sequence number, thereby extending the sequence number to 32 bits\n   and\
    \ enabling the payload format to accommodate high data rates\n   without ambiguity.\
    \  This is necessary as the 16-bit RTP sequence\n   number will roll over very\
    \ quickly for high data rates.  For example,\n   for a 1-Gbps video stream with\
    \ packet sizes of at least 1000 octets,\n   the standard RTP packet will roll\
    \ over in 0.5 seconds, which can be a\n   problem for detecting loss and out-of-order\
    \ packets particularly in\n   instances where the round-trip time is greater than\
    \ half a second.\n   The extended 32-bit number allows for a longer wrap-around\
    \ time of\n   approximately nine hours.\n   Each scan line comprises an integer\
    \ number of pixels.  Each pixel is\n   represented by a number of samples.  Samples\
    \ may be coded as 8-, 10-,\n   12-, or 16-bit values.  A sample may represent\
    \ a color component or a\n   luminance component of the video.  Color samples\
    \ may be shared\n   between adjacent pixels.  The sharing of color samples between\n\
    \   adjacent pixels is known as color sub-sampling.  This is typically\n   done\
    \ in the YCbCr color space for the purpose of reducing the size of\n   the image\
    \ data.\n   Pixels that share sample values MUST be transported together as a\n\
    \   \"pixel group\".  If 10-bit or 12-bit samples are used, each pixel may\n \
    \  also comprise a non-integer number of octets.  In this case, several\n   pixels\
    \ MUST be combined into an octet-aligned pixel group for\n   transmission.  These\
    \ restrictions simplify the operation of receivers\n   by ensuring that the complete\
    \ payload is octet aligned, and that\n   samples relating to a single pixel are\
    \ not fragmented across multiple\n   packets [ALF].\n   For example, in YCbCr\
    \ video with 4:1:1 color sub-sampling, each group\n   of 4 adjacent pixels comprises\
    \ 6 samples, Y1 Y2 Y3 Y4 Cr Cb, with the\n   Cr and Cb values being shared between\
    \ all 4 pixels.  If samples are\n   8-bit values, the result is a group of 4 pixels\
    \ comprising 6 octets.\n   If, however, samples are 10-bit values, the resulting\
    \ 60-bit group is\n   not octet aligned.  To be both octet aligned and appropriately\n\
    \   framed, two groups of 4 adjacent pixels must be collected, thereby\n   becoming\
    \ octet aligned on a 15-octet boundary.  This length is\n   referred to as the\
    \ pixel group size (\"pgroup\").\n   Formally, the \"pgroup\" parameter is the\
    \ size in octets of the\n   smallest grouping of pixels such that 1) the grouping\
    \ comprises an\n   integer number of octets; and 2) if color sub-sampling is used,\n\
    \   samples are only shared within the grouping.  When packetizing\n   digital\
    \ active line content, video data MUST NOT be fragmented within\n   a pgroup.\n\
    \   Video content is almost always associated with additional information\n  \
    \ such as audio tracks, time code, etc.  In professional digital video\n   applications,\
    \ this data is commonly embedded in non-active portions\n   of the video stream\
    \ (horizontal and vertical blanking periods) so\n   that precise and robust synchronization\
    \ is maintained.  This payload\n   format requires that applications using such\
    \ synchronized ancillary\n   data SHOULD deliver it in separate RTP sessions that\
    \ operate\n   concurrently with the video session.  The normal RTP mechanisms\n\
    \   SHOULD be used to synchronize the media.\n"
- title: 4.  RTP Packetization
  contents:
  - "4.  RTP Packetization\n   The standard RTP header is followed by a 2-octet payload\
    \ header that\n   extends the RTP Sequence Number, and by a 6-octet payload header\
    \ for\n   each line (or partial line) of video included.  One or more lines, or\n\
    \   partial lines, of video data follow.  This format makes the payload\n   header\
    \ 32-bit aligned in the common case, where one scan line (or\n   fragment) of\
    \ video is included in each RTP packet.\n   For example, if two lines of video\
    \ are encapsulated, the payload\n   format will be as shown in Figure 1.\n   \
    \    0                   1                   2                   3\n       0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | V |P|X|   CC  |M|    PT       |       Sequence Number         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           Time Stamp                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             SSRC                              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   Extended Sequence Number    |            Length             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |F|          Line No            |C|           Offset            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \            Length             |F|          Line No            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |C|           Offset            |                               .\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               .\n      .\
    \                                                               .\n      .   \
    \              Two (partial) lines of video data             .\n      .      \
    \                                                         .\n      +---------------------------------------------------------------+\n\
    \     Figure 1: RTP Payload Format showing two (partial) lines of video\n"
- title: 4.1.  The RTP Header
  contents:
  - "4.1.  The RTP Header\n   The fields of the fixed RTP header have their usual\
    \ meaning, with the\n   following additional notes:\n   Payload Type (PT): 7 bits\n\
    \     A dynamically allocated payload type field that designates the\n     payload\
    \ as uncompressed video.\n   Timestamp: 32 bits\n     For progressive scan video,\
    \ the timestamp denotes the sampling\n     instant of the frame to which the RTP\
    \ packet belongs.  Packets MUST\n     NOT include data from multiple frames, and\
    \ all packets belonging to\n     the same frame MUST have the same timestamp.\n\
    \     For interlaced video, the timestamp denotes the sampling instant of\n  \
    \   the field to which the RTP packet belongs.  Packets MUST NOT\n     include\
    \ data from multiple fields, and all packets belonging to the\n     same field\
    \ MUST have the same timestamp.  Use of field timestamps,\n     rather than a\
    \ frame timestamp and field indicator bit, is needed to\n     support reverse\
    \ 3-2 pulldown.\n     A 90-kHz timestamp SHOULD be used in both cases.  If the\
    \ sampling\n     instant does not correspond to an integer value of the clock\
    \ (as\n     may be the case when interleaving), the value SHALL be truncated to\n\
    \     the next lowest integer, with no ambiguity.\n   Marker bit (M): 1 bit\n\
    \     If progressive scan video is being transmitted, the marker bit\n     denotes\
    \ the end of a video frame.  If interlaced video is being\n     transmitted, it\
    \ denotes the end of the field.  The marker bit MUST\n     be set to 1 for the\
    \ last packet of the video frame/field.  It MUST\n     be set to 0 for other packets.\n\
    \   Sequence Number: 16 bits\n     The low-order bits for RTP sequence number.\
    \  The standard 16-bit\n     sequence number is augmented with another 16 bits\
    \ in the payload\n     header in order avoid problems due to wrap-around when\
    \ operating at\n     high rate rates.\n"
- title: 4.2.  Payload Header
  contents:
  - "4.2.  Payload Header\n   Extended Sequence Number: 16 bits\n     The high order\
    \ bits of the extended 32-bit sequence number, in\n     network byte order.\n\
    \   Length: 16 bits\n     Number of octets of data included from this scan line,\
    \ in network\n     byte order.  This MUST be a multiple of the pgroup value.\n\
    \   Line No.: 15 bits\n     Scan line number of encapsulated data, in network\
    \ byte order.\n     Successive RTP packets MAY contains parts of the same scan\
    \ line\n     (with an incremented RTP sequence number, but the same timestamp),\n\
    \     if it is necessary to fragment a line.\n   Offset: 15 bits\n     Offset\
    \ of the first pixel of the payload data within the scan line.\n     If YCbCr\
    \ format data is being transported, this is the pixel offset\n     of the luminance\
    \ sample; if RGB format data is being transported,\n     it is the pixel offset\
    \ of the red sample; if BGR format data is\n     being transported, it is the\
    \ pixel offset of the blue sample.  The\n     value is in network byte order.\
    \  The offset has a value of zero if\n     the first sample in the payload corresponds\
    \ to the start of the\n     line, and increments by one for each pixel.\n   Field\
    \ Identification (F): 1 bit\n     Identifies which field the scan line belongs\
    \ to, for interlaced\n     data.  F=0 identifies the first field and F=1 the second\
    \ field.\n     For progressive scan data (e.g., SMPTE 296M format video), F MUST\n\
    \     always be set to zero.\n   Continuation (C): 1 bit\n     Determines if an\
    \ additional scan line header follows the current\n     scan line header in the\
    \ RTP packet.  Set to 1 if an additional\n     header follows, implying that the\
    \ RTP packet is carrying data for\n     more than one scan line.  Set to 0 otherwise.\
    \  Several scan lines\n     MAY be included in a single packet, up to the path\
    \ MTU limit.  The\n     only way to determine the number of scan lines included\
    \ per packet\n     is to parse the payload headers.\n"
- title: 4.3.  Payload Data
  contents:
  - "4.3.  Payload Data\n   Depending on the video format, each RTP packet can include\
    \ either a\n   single complete scan line, a single fragment of a scan line, or\
    \ one\n   (or more) complete scan lines and scan line fragments.  The length of\n\
    \   each scan line or scan line fragment MUST be an integer multiple of\n   the\
    \ pgroup size in octets.  Scan lines SHOULD be fragmented so that\n   the resulting\
    \ RTP packet is smaller than the path MTU.\n   It is possible that the scan line\
    \ length is not evenly divisible by\n   the number of pixels in a pgroup, so the\
    \ final pixel data of a scan\n   line does not align to either an octet or a pgroup\
    \ boundary.\n   Nonetheless, the payload MUST contain a whole number of pgroups;\
    \ the\n   sender MUST fill the remaining bits of the final pgroup with zero and\n\
    \   the receiver MUST ignore the fill data. (In effect, the trailing edge\n  \
    \ of the image is black-filled to a pgroup boundary.)\n   For RGB format video,\
    \ samples are packed in order Red-Green-Blue.\n   For BGR format video, samples\
    \ are packed in order Blue-Green-Red.\n   For both formats, if 8-bit samples are\
    \ used, the pgroup is 3 octets.\n   If 10-bit samples are used, samples from 4\
    \ adjacent pixels form 15-\n   octet pgroups.  If 12-bit samples are used, samples\
    \ from 2 adjacent\n   pixels form 9-octet pgroups.  If 16-bit samples are used,\
    \ each pixel\n   forms a separate 6-octet pgroup.\n   For RGBA format video, samples\
    \ are packed in order Red-Green-Blue-\n   Alpha.  For BGRA format video, samples\
    \ are packed in order Blue-\n   Green-Red-Alpha.  For 8-, 10-, 12-, or 16-bit\
    \ samples, each pixel\n   forms its own pgroup, with octet sizes of 4, 5, 6, and\
    \ 8,\n   respectively.\n   If the video is in YCbCr format, the packing of samples\
    \ into the\n   payload depends on the color sub-sampling used.\n   For YCbCr 4:4:4\
    \ format video, samples are packed in order Cb-Y-Cr for\n   both interlaced and\
    \ progressive frames.  If 8-bit samples are used,\n   the pgroup is 3 octets.\
    \  If 10-bit samples are used, samples from 4\n   adjacent pixels form 15-octet\
    \ pgroups.  If 12-bit samples are used,\n   samples from 2 adjacent pixels form\
    \ 9-octet pgroups.  If 16-bit\n   samples are used, each pixel forms a separate\
    \ 6-octet pgroup.\n   For YCbCr 4:2:2 format video, the Cb and Cr components are\n\
    \   horizontally sub-sampled by a factor of two (each Cb and Cr sample\n   corresponds\
    \ to two Y components).  Samples are packed in order Cb0-\n   Y0-Cr0-Y1 for both\
    \ interlaced and progressive scan lines.  For 8-,\n   10-, 12-, or 16-bit samples,\
    \ the pgroup is formed from two adjacent\n   pixels (4, 5, 6, or 8 octets, respectively).\n\
    \   For YCbCr 4:1:1 format video, the Cb and Cr components are\n   horizontally\
    \ sub-sampled by a factor of four (each Cb and Cr sample\n   corresponds to four\
    \ Y components).  Samples are packed in order Cb0-\n   Y0-Y1-Cr0-Y2-Y3 for both\
    \ interlaced and progressive scan lines.  For\n   8-, 10-, 12-, or 16-bit samples,\
    \ the pgroup is formed from four\n   adjacent pixels (6, 15, 9, or 12 octets,\
    \ respectively).\n   For YCbCr 4:2:0 video, the Cb and Cr components are sub-sampled\
    \ by a\n   factor of two both horizontally and vertically.  Therefore,\n   chrominance\
    \ samples are shared between certain adjacent lines.\n   Figure 2 shows the composition\
    \ of luminance and chrominance samples\n   for a 6x6 pixel grid of 4:2:0 YCbCr\
    \ video.  The pixel group is a\n   group of four pixels arranged in a 2x2 matrix.\
    \  The octet size of the\n   pgroup for progressive scan 4:2:0 video with samples\
    \ sizes of 8, 10,\n   12, and 16 bits is 6, 15, 9, and 12 octets, respectively.\
    \  For\n   interlaced 4:2:0 video, the corresponding pgroups are 4, 5, 6, and\
    \ 8\n   octets.\n       line 0:  Y00   Y01   Y02   Y03   Y04   Y05\n         \
    \       Cb00 Cr00   Cb01 Cr01   Cb02 Cr02\n       line 1:  Y10   Y11   Y12   Y13\
    \   Y14   Y15\n       line 2:  Y20   Y21   Y22   Y23   Y24   Y25\n           \
    \     Cb10 Cr10   Cb11 Cr11   Cb12 Cr12\n       line 3:  Y30   Y31   Y32   Y33\
    \   Y34   Y35\n       line 4:  Y40   Y41   Y42   Y43   Y44   Y45\n           \
    \     Cb20 Cr20   Cb21 Cr21   Cb22 Cr22\n       line 5:  Y50   Y51   Y52   Y53\
    \   Y54   Y55\n     Figure 2: Chrominance/luminance composition in 4:2:0 YCbCr\
    \ video\n   When packetizing progressive scan 4:2:0 YCbCr video, samples from\
    \ two\n   consecutive scan lines are included in each packet.  The scan line\n\
    \   number in the payload header is set to that of the first scan line of\n  \
    \ the pair:\n     line 0/1:\n     Y00-Y01-Y10-Y11-Cb00-Cr00 Y02-Y03-Y12-Y13-Cb01-Cr01\n\
    \                                           Y04-Y05-Y14-Y15-Cb02-Cr02\n     line\
    \ 2/3:\n     Y20-Y21-Y30-Y31-Cb10-Cr10 Y22-Y23-Y32-Y33-Cb11-Cr11\n           \
    \                                Y24-Y25-Y34-Y35-Cb12-Cr12\n     line 4/5:\n \
    \    Y40-Y41-Y50-Y51-Cb20-Cr20 Y42-Y43-Y52-Y53-Cb21-Cr21\n                   \
    \                        Y44-Y45-Y54-Y55-Cb22-Cr22\n     Figure 3: Packetization\
    \ of progressive 4:2:0 YCbCr video\n   For interlaced transport, chrominance samples\
    \ are transported with\n   every other line.  The first set of chrominance samples\
    \ may be\n   transported with either the first line of field 0, or the first line\n\
    \   of field 1.  Figure 4 illustrates the transport of chrominance\n   samples\
    \ starting with the first line of field 0 (signaled by the\n   \"top-field-first\"\
    \ MIME parameter).\n     field 0:\n        line 0: Y00-Y01-Cb00-Cr00 Y02-Y03-Cb01-Cr01\
    \ Y04-Y05-Cb02-Cr02\n        line 2: Y20-Y21 Y22-Y23 Y24-Y25\n        line 4:\
    \ Y40-Y41-Cb20-Cr20 Y42-Y43-Cb21-Cr21 Y44-Y45-Cb22-Cr22\n     field 1:\n     \
    \   line 1: Y10-Y11 Y12-Y13 Y14-Y15\n        line 3: Y30-Y31-Cb10-Cr10 Y32-Y33-Cb11\
    \ Cr11 Y34-Y35-Cb12-Cr12\n        line 5: Y50-Y51 Y52-Y53 Y54-Y55\n     Figure\
    \ 4: Packetization of interlaced 4:2:0 YCbCr video with\n               top-field-first.\n\
    \   Chrominance values may be sampled with different offsets relative to\n   luminance\
    \ values.  For instance, in Figure 2, chrominance values are\n   sampled at the\
    \ same distance from neighboring luminance samples.  It\n   is also possible for\
    \ a chrominance sample to be co-sited with a\n   luminance sample, as in Figure\
    \ 5:\n       line 0:  Y00-C   Y01   Y02-C   Y03   Y04-C   Y05\n       line 1:\
    \  Y10     Y11   Y12     Y13   Y14     Y15\n       line 2:  Y20-C   Y21   Y22-C\
    \   Y23   Y24-C   Y25\n       line 3:  Y30     Y31   Y32     Y33   Y34     Y35\n\
    \       line 4:  Y40-C   Y41   Y42-C   Y43   Y44-C   Y45\n       line 5:  Y50\
    \     Y51   Y52     Y53   Y54     Y55\n     Figure 5: Co-sited video sampling\
    \ in 4:2:0 YCbCr video where C\n               designates a CbCr pair\n   In general,\
    \ chrominance values may be placed between luminance\n   samples or co-sited.\
    \  Positions can be designated by an integer\n   numbering system starting from\
    \ left to right and top to bottom.  The\n   position matrices shown in Figures\
    \ 6, 7, and 8 apply for 4:2:0,\n   4:2:2, and 4:1:1 video, respectively:\n   \
    \    line N:    Y[0] [1] Y[2]   Y[0] [1] Y[2]\n                   [3] [4] Y[5]\
    \    [3] [4]  [5]\n       line N+1:  Y[6] [7] Y[8]   Y[6] [7] Y[8]\n     Figure\
    \ 6: Chrominance position matrix for 4:2:0 YCbCr video\n       line N:    Y[0]\
    \ [1] Y[2] [3]  Y[0] [1] Y[2] [3]\n       line N+1:  Y[0] [1] Y[2] [3]  Y[0] [1]\
    \ Y[2] [3]\n     Figure 7: Chrominance position matrix for 4:2:2 YCbCr video\n\
    \       line N:    Y[0] [1] Y[2] [3] Y[4] [5] Y[6]\n       line N+1:  Y[0] [1]\
    \ Y[2] [3] Y[4] [5] Y[6]\n     Figure 8: Chrominance position matrix for 4:1:1\
    \ YCbCr video\n   Although these positions do not affect the packetization order\
    \ of\n   chrominance and luminance samples, the information is needed for\n  \
    \ interpolation prior to display and therefore should be signaled to\n   the receiver.\n"
- title: 5.  RTCP Considerations
  contents:
  - "5.  RTCP Considerations\n   RTCP SHOULD be used as specified in RFC 3550 [RTP].\
    \  It is to be\n   noted that the sender's octet count in SR packets and the cumulative\n\
    \   number of packets lost will wrap around quickly for high data rate\n   streams.\
    \  This means that these two fields may not accurately\n   represent octet count\
    \ and number of packets lost since the beginning\n   of transmission, as defined\
    \ in RFC 3550.  Therefore, for network\n   monitoring purposes, other means of\
    \ keeping track of these variables\n   SHOULD be used.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   The IANA has registered one new MIME subtype along\
    \ with an associated\n   RTP Payload Format, and has created two sub-parameter\
    \ registries, as\n   described in the following.\n"
- title: 6.1.  MIME type registration
  contents:
  - "6.1.  MIME type registration\n   MIME media type name: video\n   MIME subtype\
    \ name: raw\n   Required parameters:\n     rate: The RTP timestamp clock rate.\
    \  Applications using this\n     payload format SHOULD use a value of 90000.\n\
    \     sampling: Determines the color (sub-)sampling mode of the video\n     stream.\
    \  Currently defined values are RGB, RGBA, BGR, BGRA,\n     YCbCr-4:4:4, YCbCr-4:2:2,\
    \ YCbCr-4:2:0, and YCbCr-4:1:1.  New values\n     may be registered as described\
    \ in section 6.2 of RFC 4175.\n     width: Determines the number of pixels per\
    \ line.  This is an\n     integer between 1 and 32767.\n     height: Determines\
    \ the number of lines per frame.  This is an\n     integer between 1 and 32767.\n\
    \     depth: Determines the number of bits per sample.  This is an\n     integer\
    \ with typical values including 8, 10, 12, and 16.\n     colorimetry: This parameter\
    \ defines the set of colorimetric\n     specifications and other transfer characteristics\
    \ for the video\n     source, by reference to an external specification.  Valid\
    \ values\n     and their specification are:\n          BT601-5      ITU Recommendation\
    \ BT.601-5 [601]\n          BT709-2      ITU Recommendation BT.709-2 [709]\n \
    \         SMPTE240M    SMPTE standard 240M [240]\n     New values may be registered\
    \ as described in section 6.2 of RFC\n     4175.\n   Optional parameters:\n  \
    \   Interlace: If this OPTIONAL parameter is present, it indicates that\n    \
    \ the video stream is interlaced.  If absent, progressive scan is\n     implied.\n\
    \     Top-field-first: If this OPTIONAL parameter is present, it\n     indicates\
    \ that chrominance samples are packetized starting with the\n     first line of\
    \ field 0.  Its absence implies that chrominance\n     samples are packetized\
    \ starting with the first line of field 1.\n     chroma-position: This OPTIONAL\
    \ parameter defines the position of\n     chrominance samples relative to luminance\
    \ samples.  It is either a\n     single integer or a comma separated pair of integers.\
    \  Integer\n     values range from 0 to 8, as specified in Figures 6-8 of RFC\
    \ 4175.\n     A single integer implies that Cb and Cr are co-sited.  A comma\n\
    \     separated pair of integers designates the locations of Cb and Cr\n     samples,\
    \ respectively.  In its absence, a single value of zero is\n     assumed for color-subsampled\
    \ video (chroma-position=0).\n     gamma: An OPTIONAL floating point gamma correction\
    \ value.\n   Encoding considerations:\n     Uncompressed video is only transmitted\
    \ over RTP as specified in RFC\n     4175.  No file format media type has been\
    \ defined to go with this\n     transmission media type at this time.\n   Security\
    \ considerations: See section 9 of RFC 4175.\n   Interoperability considerations:\
    \ NONE.\n   Published specification: RFC 4175.\n   Applications which use this\
    \ media type: Video communication.\n   Additional information: None\n   Person\
    \ & email address to contact for further information:\n     Ladan Gharai <ladan@isi.edu>\n\
    \     IETF Audio/Video Transport working group.\n   Intended usage: COMMON\n \
    \  Author: Ladan Gharai <ladan@isi.edu>\n   Change controller: IETF AVT Working\
    \ Group\n         delegated from the IESG\n"
- title: 6.2.  Parameter Registration
  contents:
  - "6.2.  Parameter Registration\n   New values of the \"sampling\" parameter MAY\
    \ be registered with the\n   IANA provided they reference an RFC or other permanent\
    \ and readily\n   available specification (the Specification Required policy of\
    \ RFC\n   2434 [2434]).  A new registration MUST define the packing order of\n\
    \   samples and a valid combinations of color and sub-sampling modes.\n   New\
    \ values of the \"colorimetry\" parameter MAY be registered with the\n   IANA\
    \ provided they reference an RFC or other permanent and readily\n   available\
    \ specification if colorimetric parameters and other\n   applicable transfer characteristics\
    \ (the Specification Required\n   policy of RFC 2434 [2434]).\n"
- title: 7.  Mapping MIME Parameters into SDP
  contents:
  - "7.  Mapping MIME Parameters into SDP\n   The information carried in the MIME\
    \ media type specification has a\n   specific mapping to fields in the Session\
    \ Description Protocol (SDP)\n   [SDP], which is commonly used to describe RTP\
    \ sessions.  When SDP is\n   used to specify sessions transporting uncompressed\
    \ video, the mapping\n   is as follows:\n   -  The MIME type (\"video\") goes\
    \ in SDP \"m=\" as the media name.\n   -  The MIME subtype (payload format name)\
    \ goes in SDP \"a=rtpmap\" as\n      the encoding name.\n   -  Remaining parameters\
    \ go in the SDP \"a=fmtp\" attribute by copying\n      them directly from the\
    \ MIME media type string as a semicolon-\n      separated list of parameter=value\
    \ pairs.\n   A sample SDP mapping for uncompressed video is as follows:\n    \
    \ m=video 30000 RTP/AVP 112\n     a=rtpmap:112 raw/90000\n     a=fmtp:112 sampling=YCbCr-4:2:2;\
    \ width=1280; height=720; depth=10;\n                              colorimetry=BT.709-2;\
    \ chroma-position=1\n   In this example, a dynamic payload type 112 is used for\
    \ uncompressed\n   video.  The RTP sampling clock is 90 kHz.  Note that the \"\
    a=fmtp:\"\n   line has been wrapped to fit this page, and will be a single long\n\
    \   line in the SDP file.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [RTP] and any appropriate RTP profile.  This implies\n\
    \   that confidentiality of the media streams is achieved by encryption.\n   This\
    \ payload type does not exhibit any significant non-uniformity in\n   the receiver\
    \ side computational complexity for packet processing to\n   cause a potential\
    \ denial-of-service threat.\n   It is important to note that uncompressed video\
    \ can have immense\n   bandwidth requirements (up to 270 Mbps for standard-definition\
    \ video,\n   and approximately 1 Gbps for high-definition video).  This is\n \
    \  sufficient to cause potential for denial-of-service if transmitted\n   onto\
    \ most currently available Internet paths.\n   Accordingly, if best-effort service\
    \ is being used, users of this\n   payload format MUST monitor packet loss to\
    \ ensure that the packet\n   loss rate is within acceptable parameters.  Packet\
    \ loss is considered\n   acceptable if a TCP flow across the same network path,\
    \ and\n   experiencing the same network conditions, would achieve an average\n\
    \   throughput, measured on a reasonable timescale, that is not less than\n  \
    \ the RTP flow is achieving.  This condition can be satisfied by\n   implementing\
    \ congestion control mechanisms to adapt the transmission\n   rate (or the number\
    \ of layers subscribed for a layered multicast\n   session), or by arranging for\
    \ a receiver to leave the session if the\n   loss rate is unacceptably high.\n\
    \   This payload format may also be used in networks that provide\n   quality-of-service\
    \ guarantees.  If enhanced service is being used,\n   receivers SHOULD monitor\
    \ packet loss to ensure that the service that\n   was requested is actually being\
    \ delivered.  If it is not, then they\n   SHOULD assume that they are receiving\
    \ best-effort service and behave\n   accordingly.\n"
- title: 9.  Relation to RFC 2431
  contents:
  - "9.  Relation to RFC 2431\n   In comparison with RFC 2431, this memo specifies\
    \ support for a wider\n   variety of uncompressed video, in terms of frame size,\
    \ color sub-\n   sampling and sample sizes.  Although [BT656] can transport up\
    \ to 4096\n   scan lines and 2048 pixels per line, our payload type can support\
    \ up\n   to 32768 scan lines and pixels per line.  Also, RFC 2431 only address\n\
    \   4:2:2 YCbCr data, while this memo covers YCbCr, RGB, RGBA, BGR, BGRA,\n  \
    \ and most common color sub-sampling schemes.  Given the variety of\n   video\
    \ types that we cover, this memo also assumes out-of-band\n   signaling for sample\
    \ size and data types (RFC 2431 uses in band\n   signaling).\n"
- title: 10.  Relation to RFC 3497
  contents:
  - "10.  Relation to RFC 3497\n   RFC 3497 [292RTP] specifies a RTP payload format\
    \ for encapsulating\n   SMPTE 292M video.  The SMPTE 292M standard defines a bit-serial\n\
    \   digital interface for local area High-Definition Television (HDTV)\n   transport.\
    \  As a transport medium, SMPTE 292M utilizes 10-bit words\n   and a fixed 1.485\
    \ Gbps (and 1.485/1.001 Gbps) data rate.  SMPTE 292M\n   is typically used in\
    \ the broadcast industry for the transport of\n   other video formats such as\
    \ SMPTE 260M, SMPTE 295M, SMPTE 274M, and\n   SMPTE 296M.\n   RFC 3497 defines\
    \ a circuit emulation for the transport of SMPTE 292M\n   over RTP.  It is very\
    \ specific to SMPTE 292 and has been designed to\n   be interoperable with existing\
    \ broadcast equipment with a constant\n   rate of 1.485 Gbps.\n   This memo defines\
    \ a flexible native packetization scheme that can\n   packetize any uncompressed\
    \ video, at varying data rates.  In\n   addition, unlike RFC 3497, this memo only\
    \ transports active video\n   pixels (i.e., horizontal and vertical blanking are\
    \ not transported).\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The authors are grateful to Philippe Gentric, Chuck\
    \ Harrison, Stephan\n   Wenger, and Dave Singer for their feedback.\n   This memo\
    \ is based upon work supported by the U.S. National Science\n   Foundation (NSF)\
    \ under Grant No. 0230738.  Any opinions, findings,\n   and conclusions or recommendations\
    \ expressed in this material are\n   those of the authors and do not necessarily\
    \ reflect the views of NSF.\n"
- title: Normative References
  contents:
  - "Normative References\n   [RTP]    Schulzrinne, H., Casner, S., Frederick, R.,\
    \ and V. Jacobson,\n            \"RTP: A Transport Protocol for Real-Time Applications\"\
    , STD\n            64, RFC 3550, July 2003.\n   [2119]   Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n            Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [2434]   Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n            IANA Considerations Section in RFCs\", BCP 26, RFC 2434,\n \
    \           October 1998.\n   [601]    International Telecommunication Union,\
    \ \"Studio encoding\n            parameters of digital television for standard\
    \ 4:3 and wide\n            screen 16:9 aspect ratios\", Recommendation BT.601,\
    \ October\n            1995.\n   [709]    International Telecommunication Union,\
    \ \"Parameter Values for\n            HDTV Standards for Production and International\
    \ Programme\n            Exchange\", Recommendation BT.709-2\n   [240]    Society\
    \ of Motion Picture and Television Engineers,\n            \"Television - Signal\
    \ Parameters - 1125-Line High-Definition\n            Production\", SMPTE 240M-1999.\n"
- title: Informative References
  contents:
  - "Informative References\n   [274]    Society of Motion Picture and Television\
    \ Engineers,\n            \"1920x1080 Scanning and Analog and Parallel Digital\n\
    \            Interfaces for Multiple Picture Rates\", SMPTE 274M-1998.\n   [296]\
    \    Society of Motion Picture and Television Engineers,\n            \"1280x720\
    \ Scanning, Analog and Digital Representation and\n            Analog Interfaces\"\
    , SMPTE 296M-1998.\n   [372]    Society of Motion Picture and Television Engineers,\
    \ \"Dual\n            Link 292M Interface for 1920 x 1080 Picture Raster\", SMPTE\n\
    \            372M-2002.\n   [ALF]    Clark, D. D., and Tennenhouse, D. L., \"\
    Architectural\n            Considerations for a New Generation of Protocols\"\
    , In\n            Proceedings of SIGCOMM '90 (Philadelphia, PA, Sept. 1990),\n\
    \            ACM.\n   [SDP]    Handley, M. and V. Jacobson, \"SDP: Session Description\n\
    \            Protocol\", RFC 2327, April 1998.\n   [BT656]  Tynan, D., \"RTP Payload\
    \ Format for BT.656 Video Encoding\",\n            RFC 2431, October 1998.\n \
    \  [292RTP] Gharai, L., Perkins, C., Goncher, G., and A. Mankin, \"RTP\n     \
    \       Payload Format for Society of Motion Picture and Television\n        \
    \    Engineers (SMPTE) 292M Video\", RFC 3497, March 2003.\n   [656]    International\
    \ Telecommunication Union, \"Interfaces for\n            Digital Component Video\
    \ Signals in 525-line and 625-line\n            Television Systems Operating at\
    \ the 4:2:2 Level of\n            Recommendation ITU-R BT.601 (Part A)\", Recommendation\n\
    \            BT.656, April 1998.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ladan Gharai\n   USC Information Sciences Institute\n\
    \   3811 N. Fairfax Drive, #200\n   Arlington, VA 22203\n   USA\n   EMail: ladan@isi.edu\n\
    \   Colin Perkins\n   University of Glasgow\n   Department of Computing Science\n\
    \   17 Lilybank Gardens\n   Glasgow G12 8QQ\n   United Kingdom\n   EMail: csp@csperkins.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
