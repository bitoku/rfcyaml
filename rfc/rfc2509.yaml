- title: __initial_text__
  contents:
  - '                     IP Header Compression over PPP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an option for negotiating the use of header\n\
    \   compression on IP datagrams transmitted over the Point-to-Point\n   Protocol\
    \ [RFC1661]. It defines extensions to the PPP Control\n   Protocols for IPv4 and\
    \ IPv6 [RFC1332, RFC2023]. Header compression\n   may be applied to IPv4 and IPv6\
    \ datagrams in combination with TCP,\n   UDP and RTP transport protocols as specified\
    \ in [IPHC] and [CRTP].\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The IP Header Compression (IPHC) defined in [IPHC] may be\
    \ used for\n   compression of both IPv4 and IPv6 datagrams or packets encapsulated\n\
    \   with multiple IP headers. IPHC is also capable of compressing both\n   TCP\
    \ and UDP transport protocol headers.  The IP/UDP/RTP header\n   compression defined\
    \ in [CRTP] fits within the framework defined by\n   IPHC so that it may also\
    \ be applied to both IPv4 and IPv6 packets.\n   In order to establish compression\
    \ of IP datagrams sent over a PPP\n   link each end of the link must agree on\
    \ a set of configuration\n   parameters for the compression. The process of negotiating\
    \ link\n   parameters for network layer protocols is handled in PPP by a family\n\
    \   of network control protocols (NCPs).  Since there are separate NCPs\n   for\
    \ IPv4 and IPv6, this document defines configuration options to be\n   used in\
    \ both NCPs to negotiate parameters for the compression scheme.\n   IPHC relies\
    \ on the link layer's ability to indicate the types of\n   datagrams carried in\
    \ the link layer frames. In this document nine new\n   types for the PPP Data\
    \ Link Layer Protocol Field are defined along\n   with their meaning.\n   In general,\
    \ header compression schemes that use delta encoding of\n   compressed packets\
    \ require that the lower layer does not reorder\n   packets between compressor\
    \ and decompressor. IPHC uses delta encoding\n   of compressed packets for TCP\
    \ and RTP.  The IPHC specification [IPHC]\n   includes methods that allow link\
    \ layers that may reorder packets to\n   be used with IPHC.  Since PPP does not\
    \ reorder packets these\n   mechanisms are disabled by default.  When using reordering\
    \ mechanisms\n   such as multiclass multilink PPP [MCML], care must be taken so\
    \ that\n   packets that share the same compression context are not reordered.\n"
- title: 2. Configuration Option
  contents:
  - "2. Configuration Option\n   This document specifies a new compression protocol\
    \ value for the IPCP\n   IP-Compression-Protocol option as specified in [RFC1332].\
    \  The new\n   value and the associated option format are described in section\
    \ 2.1.\n   The option format is structured to allow future extensions to the\n\
    \   IPHC scheme.\n      NOTE: The specification of link and network layer parameter\n\
    \      negotiation for PPP [RFC1661], [RFC1331], [RFC1332] does not\n      prohibit\
    \ multiple instances of one configuration option but states\n      that the specification\
    \ of a configuration option must explicitly\n      allow multiple instances. \
    \ From the current specification of the\n      IPCP IP-Compression-Protocol configuration\
    \ option [RFC1332, p 6]\n      it follows that it can only be used to select a\
    \ single compression\n      protocol at any time.\n      NOTE: [RFC1332] is not\
    \ explicit about whether the option\n      negotiates the capabilities of the\
    \ receiver or of the sender.  In\n      keeping with current practice, we assume\
    \ that the option describes\n      the capabilities of the decompressor (receiving\
    \ side) of the peer\n      that sends the Config-Req.\n"
- title: 2.1. Configuration Option Format
  contents:
  - "2.1. Configuration Option Format\n   Both the network control protocol for IPv4,\
    \ IPCP [RFC1332] and the\n   IPv6 NCP, IPV6CP [RFC2023] may be used to negotiate\
    \ IP Header\n   Compression parameters for their respective protocols.  The format\
    \ of\n   the configuration option is the same for both IPCP and IPV6CP.\n   Description\n\
    \      This NCP configuration option is used to negotiate parameters for\n   \
    \   IP Header Compression.  The option format is summarized below.\n      The\
    \ fields are transmitted from left to right.\n       0                   1   \
    \                2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |    IP-Compression-Protocol    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           TCP_SPACE           |         NON_TCP_SPACE         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         F_MAX_PERIOD          |          F_MAX_TIME           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           MAX_HEADER          |          suboptions...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      2\n   Length\n      >= 14\n      The length may be increased if\
    \ the presence of additional\n      parameters is indicated by additional suboptions.\n\
    \   IP-Compression-Protocol\n      0061 (hex)\n   TCP_SPACE\n      The TCP_SPACE\
    \ field is two octets and indicates the maximum value\n      of a context identifier\
    \ in the space of context identifiers\n      allocated for TCP.\n         Suggested\
    \ value: 15\n      TCP_SPACE must be at least 0 and at most 255 (The value 0 implies\n\
    \      having one context).\n   NON_TCP_SPACE\n      The NON_TCP_SPACE field is\
    \ two octets and indicates the maximum\n      value of a context identifier in\
    \ the space of context identifiers\n      allocated for non-TCP. These context\
    \ identifiers are carried in\n      COMPRESSED_NON_TCP, COMPRESSED_UDP and COMPRESSED_RTP\
    \ packet\n      headers.\n         Suggested value: 15\n      NON_TCP_SPACE must\
    \ be at least 0 and at most 65535 (The value 0\n      implies having one context).\n\
    \   F_MAX_PERIOD\n      Maximum interval between full headers.  No more than F_MAX_PERIOD\n\
    \      COMPRESSED_NON_TCP headers may be sent between FULL_HEADER\n      headers.\n\
    \         Suggested value: 256\n      A value of zero implies infinity, i.e. there\
    \ is no limit to the\n      number of consecutive COMPRESSED_NON_TCP headers.\n\
    \   F_MAX_TIME\n      Maximum time interval between full headers.  COMPRESSED_NON_TCP\n\
    \      headers may not be sent more than F_MAX_TIME seconds after sending\n  \
    \    the last FULL_HEADER header.\n         Suggested value: 5 seconds\n     \
    \ A value of zero implies infinity.\n   MAX_HEADER\n      The largest header size\
    \ in octets that may be compressed.\n         Suggested value: 168 octets\n  \
    \    The value of MAX_HEADER should be large enough so that at least\n      the\
    \ outer network layer header can be compressed.  To increase\n      compression\
    \ efficiency MAX_HEADER should be set to a value large\n      enough to cover\
    \ common combinations of network and transport layer\n      headers.\n   suboptions\n\
    \      The suboptions field consists of zero or more suboptions.  Each\n     \
    \ suboption consists of a type field, a length field and zero or\n      more parameter\
    \ octets, as defined by the suboption type.  The\n      value of the length field\
    \ indicates the length of the suboption in\n      its entirety, including the\
    \ lengths of the type and length fields.\n             0                   1 \
    \                  2\n             0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       \
    \     |     Type      |    Length     |  Parameters...\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 2.2 RTP-Compression Suboption
  contents:
  - "2.2 RTP-Compression Suboption\n   The RTP-Compression suboption is included in\
    \ the NCP\n   IP-Compression-Protocol option for IPHC if IP/UDP/RTP compression\
    \ is\n   to be enabled.\n   After successful negotiation of parameters for IP\
    \ Header Compression\n   the use of Protocol Identifiers FULL_HEADER, COMPRESSED_TCP,\n\
    \   COMPRESSED_TCP_NODELTA and COMPRESSED_NON_TCP is enabled, regardless\n   of\
    \ the prescence of an RTP-Compression suboption.\n   Description\n      Enable\
    \ use of Protocol Identifiers COMPRESSED_RTP, COMPRESSED_UDP and\n      CONTEXT_STATE\
    \ as specified in [CRTP].\n             0                   1\n             0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            |     Type      |    Length     |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Type\n            1\n         Length\n            2\n"
- title: 3. Multiple Network Control Protocols
  contents:
  - "3. Multiple Network Control Protocols\n   The IPHC protocol is able to compress\
    \ both IPv6 and IPv4 datagrams.\n   Both IPCP and IPV6CP are able to negotiate\
    \ option parameter values\n   for IPHC.  These values apply to the compression\
    \ of packets where the\n   outer header is an IPv4 header and an IPv6 header,\
    \ respectively.\n"
- title: 3.1. Sharing Context Identifier Space
  contents:
  - "3.1. Sharing Context Identifier Space\n   For the compression and decompression\
    \ of IPv4 and IPv6 datagram\n   headers the context identifier space is shared.\
    \  While the parameter\n   values are independently negotiated, sharing the context\
    \ identifier\n   spaces becomes more complex when the parameter values differ.\
    \  Since\n   the compressed packets share context identifier space, the\n   compression\
    \ engine must allocate context identifiers out of a common\n   pool; for compressed\
    \ packets, the decompressor has to examine the\n   context state to determine\
    \ what parameters to use for decompression.\n   Context identifier spaces are\
    \ not shared between TCP and non-\n   TCP/UDP/RTP.  Doing so would require additional\
    \ mechanisms to ensure\n   that no error can occur when switching from using a\
    \ context\n   identifier for TCP to non-TCP.\n"
- title: 4. Demultiplexing of Datagrams
  contents:
  - "4. Demultiplexing of Datagrams\n   The IPHC specification [IPHC] defines four\
    \ header formats for\n   different types of compressed headers.  They are compressed\
    \ TCP,\n   compressed TCP with no delta encoding, compressed non-TCP with 8 bit\n\
    \   CID and compressed non-TCP with 16 bit CID. The two non-TCP formats\n   may\
    \ be distinguished by their contents so both may use the same\n   link-level identifier.\
    \  A fifth header format, the full header is\n   distinct from a regular header\
    \ in that it carries additional\n   information to establish shared context between\
    \ the compressor and\n   decompressor.\n   The specification of IP/UDP/RTP Header\
    \ Compression [CRTP] defines\n   four additional formats of compressed headers.\
    \  They are for\n   compressed UDP and compressed RTP (on top of UDP), both with\
    \ either\n   8- or 16-bit CIDs.  In addition, there is an explicit error message\n\
    \   from the decompressor to the compressor.\n   The link layer must be able to\
    \ indicate these header formats with\n   distinct values.  Nine PPP Data Link\
    \ Layer Protocol Field values are\n   specified below.\n      FULL_HEADER\n  \
    \       The frame contains a full header as specified in [CRTP] Section\n    \
    \     3.3.1.  This is the same as the FULL_HEADER specified in [IPHC]\n      \
    \   Section 5.3.\n            Value: 0061 (hex)\n      COMPRESSED_TCP\n      \
    \   The frame contains a datagram with a compressed header with the\n        \
    \ format as specified in [IPHC] Section 6a.\n            Value: 0063 (hex)\n \
    \     COMPRESSED_TCP_NODELTA\n         The frame contains a datagram with a compressed\
    \ header with the\n         format as specified in [IPHC] Section 6b.\n      \
    \      Value: 2063 (hex)\n      COMPRESSED_NON_TCP\n         The frame contains\
    \ a datagram with a compressed header with the\n         format as specified in\
    \ either Section 6c or Section 6d of\n         [IPHC].\n            Value: 0065\
    \ (hex)\n      COMPRESSED_RTP_8\n         The frame contains a datagram with a\
    \ compressed header with the\n         format as specified in [CRTP] Section 3.3.2,\
    \ using 8-bit CIDs.\n            Value: 0069 (hex)\n      COMPRESSED_RTP_16\n\
    \         The frame contains a datagram with a compressed header with the\n  \
    \       format as specified in [CRTP] Section 3.3.2, using 16-bit CIDs.\n    \
    \        Value: 2069 (hex)\n      COMPRESSED_UDP_8\n         The frame contains\
    \ a datagram with a compressed header with the\n         format as specified in\
    \ [CRTP] Section 3.3.3, using 8-bit CIDs.\n            Value: 0067 (hex)\n   \
    \   COMPRESSED_UDP_16\n         The frame contains a datagram with a compressed\
    \ header with the\n         format as specified in [CRTP] Section 3.3.3, using\
    \ 16-bit CIDs.\n            Value: 2067 (hex)\n      CONTEXT_STATE\n         The\
    \ frame is a link-level message sent from the decompressor to\n         the compressor\
    \ as specified in [CRTP] Section 3.3.5.\n            Value: 2065 (hex)\n"
- title: 5. References
  contents:
  - "5. References\n   [CRTP]     Casner, S. and V. Jacobson, \"Compressing IP/UDP/RTP\n\
    \              Headers for Low-Speed Serial Links\", RFC 2508, February\n    \
    \          1999.\n   [IPHC]     Degermark, M., Nordgren, B. and S. Pink, \"Header\n\
    \              Compression for IP\", RFC 2507, February 1999.\n   [RFC2023]  Haskin,\
    \ E. and E. Allan, \"IP Version 6 over PPP\", RFC\n              2023, October\
    \ 1996.\n   [RFC1144]  Jacobson, V., \"Compressing TCP/IP Headers for Low- Speed\n\
    \              Serial Links\", RFC 1144, February 1990.\n   [RFC1332]  McGregor,\
    \ G., \"The PPP Internet Protocol Control Protocol\n              (IPCP)\", RFC\
    \ 1332, May 1992.\n   [RFC1889]  Schulzrinne, H., Casner, S., Frederick, R. and\
    \ V.\n              Jacobson, \"RTP: A Transport Protocol for real-time\n    \
    \          applications\", RFC 1889, January 1996.\n   [RFC1661]  Simpson, W.,\
    \ Ed., \"The Point-To-Point Protocol (PPP)\", STD\n              51, RFC 1661,\
    \ July 1994.\n   [MCML]     Bormann, C., \"The Multi-Class Extension to Multi-Link\n\
    \              PPP\", Work in Progress.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   Negotiation of the option defined here imposes\
    \ no additional security\n   considerations beyond those that otherwise apply\
    \ to PPP [RFC1661].\n   The use of header compression can, in rare cases, cause\
    \ the\n   misdelivery of packets. If necessary, confidentiality of packet\n  \
    \ contents should be assured by encryption.\n   Encryption applied at the IP layer\
    \ (e.g., using IPSEC mechanisms)\n   precludes header compression of the encrypted\
    \ headers, though\n   compression of the outer IP header and authentication/security\n\
    \   headers is still possible as described in [IPHC].  For RTP packets,\n   full\
    \ header compression is possible if the RTP payload is encrypted\n   by itself\
    \ without encrypting the UDP or RTP headers, as described in\n   [RFC1889].  This\
    \ method is appropriate when the UDP and RTP header\n   information need not be\
    \ kept confidential.\n"
- title: 7. Authors' Addresses
  contents:
  - "7. Authors' Addresses\n   Mathias Engan\n   Effnet\n   Aurorum 2\n   SE-977 75\
    \ Lulea, Sweden\n   Phone: +46 920 75600\n   Mobile: +46 70 833 8932\n   Fax:\
    \ +46 920 75610\n   EMail: engan@effnet.com\n   Stephen L. Casner\n   Cisco Systems,\
    \ Inc.\n   170 West Tasman Drive\n   San Jose, CA 95134-1706\n   United States\n\
    \   EMail: casner@cisco.com\n   Carsten Bormann\n   Universitaet Bremen FB3 TZI\n\
    \   Postfach 330440\n   D-28334 Bremen, GERMANY\n   Phone: +49.421.218-7024\n\
    \   Fax: +49.421.218-7000\n   EMail: cabo@tzi.org\n"
- title: 8.  Full Copyright Statement
  contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
