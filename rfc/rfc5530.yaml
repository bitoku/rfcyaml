- title: __initial_text__
  contents:
  - '                          IMAP Response Codes

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   IMAP responses consist of a response type (OK, NO, BAD), an optional\n\
    \   machine-readable response code, and a human-readable text.\n   This document\
    \ collects and documents a variety of machine-readable\n   response codes, for\
    \ better interoperation and error reporting.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Section 7.1 of [RFC3501] defines a number of response codes\
    \ that can\n   help tell an IMAP client why a command failed.  However, experience\n\
    \   has shown that more codes are useful.  For example, it is useful for\n   a\
    \ client to know that an authentication attempt failed because of a\n   server\
    \ problem as opposed to a password problem.\n   Currently, many IMAP servers use\
    \ English-language, human-readable\n   text to describe these errors, and a few\
    \ IMAP clients attempt to\n   translate this text into the user's language.\n\
    \   This document names a variety of errors as response codes.  It is\n   based\
    \ on errors that have been checked and reported on in some IMAP\n   server implementations,\
    \ and on the needs of some IMAP clients.\n   This document doesn't require any\
    \ servers to test for these errors or\n   any clients to test for these names.\
    \  It only names errors for better\n   reporting and handling.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   Formal syntax is defined by [RFC5234]\
    \ as modified by [RFC3501].\n   Example lines prefaced by \"C:\" are sent by the\
    \ client and ones\n   prefaced by \"S:\" by the server.  \"[...]\" means elision.\n"
- title: 3.  Response Codes
  contents:
  - "3.  Response Codes\n   This section defines all the new response codes.  Each\
    \ definition is\n   followed by one or more examples.\n   UNAVAILABLE\n      \
    \   Temporary failure because a subsystem is down.  For example, an\n        \
    \ IMAP server that uses a Lightweight Directory Access Protocol\n         (LDAP)\
    \ or Radius server for authentication might use this\n         response code when\
    \ the LDAP/Radius server is down.\n         C: a LOGIN \"fred\" \"foo\"\n    \
    \     S: a NO [UNAVAILABLE] User's backend down for maintenance\n   AUTHENTICATIONFAILED\n\
    \         Authentication failed for some reason on which the server is\n     \
    \    unwilling to elaborate.  Typically, this includes \"unknown\n         user\"\
    \ and \"bad password\".\n         This is the same as not sending any response\
    \ code, except that\n         when a client sees AUTHENTICATIONFAILED, it knows\
    \ that the\n         problem wasn't, e.g., UNAVAILABLE, so there's no point in\n\
    \         trying the same login/password again later.\n         C: b LOGIN \"\
    fred\" \"foo\"\n         S: b NO [AUTHENTICATIONFAILED] Authentication failed\n\
    \   AUTHORIZATIONFAILED\n         Authentication succeeded in using the authentication\
    \ identity,\n         but the server cannot or will not allow the authentication\n\
    \         identity to act as the requested authorization identity.  This\n   \
    \      is only applicable when the authentication and authorization\n        \
    \ identities are different.\n         C: c1 AUTHENTICATE PLAIN\n         [...]\n\
    \         S: c1 NO [AUTHORIZATIONFAILED] No such authorization-ID\n         C:\
    \ c2 AUTHENTICATE PLAIN\n         [...]\n         S: c2 NO [AUTHORIZATIONFAILED]\
    \ Authenticator is not an admin\n   EXPIRED\n         Either authentication succeeded\
    \ or the server no longer had the\n         necessary data; either way, access\
    \ is no longer permitted using\n         that passphrase.  The client or user\
    \ should get a new\n         passphrase.\n         C: d login \"fred\" \"foo\"\
    \n         S: d NO [EXPIRED] That password isn't valid any more\n   PRIVACYREQUIRED\n\
    \         The operation is not permitted due to a lack of privacy.  If\n     \
    \    Transport Layer Security (TLS) is not in use, the client could\n        \
    \ try STARTTLS (see Section 6.2.1 of [RFC3501]) and then repeat\n         the\
    \ operation.\n         C: d login \"fred\" \"foo\"\n         S: d NO [PRIVACYREQUIRED]\
    \ Connection offers no privacy\n         C: d select inbox\n         S: d NO [PRIVACYREQUIRED]\
    \ Connection offers no privacy\n   CONTACTADMIN\n         The user should contact\
    \ the system administrator or support\n         desk.\n         C: e login \"\
    fred\" \"foo\"\n         S: e OK [CONTACTADMIN]\n   NOPERM\n         The access\
    \ control system (e.g., Access Control List (ACL), see\n         [RFC4314]) does\
    \ not permit this user to carry out an operation,\n         such as selecting\
    \ or creating a mailbox.\n         C: f select \"/archive/projects/experiment-iv\"\
    \n         S: f NO [NOPERM] Access denied\n   INUSE\n         An operation has\
    \ not been carried out because it involves\n         sawing off a branch someone\
    \ else is sitting on.  Someone else\n         may be holding an exclusive lock\
    \ needed for this operation, or\n         the operation may involve deleting a\
    \ resource someone else is\n         using, typically a mailbox.\n         The\
    \ operation may succeed if the client tries again later.\n         C: g delete\
    \ \"/archive/projects/experiment-iv\"\n         S: g NO [INUSE] Mailbox in use\n\
    \   EXPUNGEISSUED\n         Someone else has issued an EXPUNGE for the same mailbox.\
    \  The\n         client may want to issue NOOP soon.  [RFC2180] discusses this\n\
    \         subject in depth.\n         C: h search from fred@example.com\n    \
    \     S: * SEARCH 1 2 3 5 8 13 21 42\n         S: h OK [EXPUNGEISSUED] Search\
    \ completed\n   CORRUPTION\n         The server discovered that some relevant\
    \ data (e.g., the\n         mailbox) are corrupt.  This response code does not\
    \ include any\n         information about what's corrupt, but the server can write\
    \ that\n         to its logfiles.\n         C: i select \"/archive/projects/experiment-iv\"\
    \n         S: i NO [CORRUPTION] Cannot open mailbox\n   SERVERBUG\n         The\
    \ server encountered a bug in itself or violated one of its\n         own invariants.\n\
    \         C: j select \"/archive/projects/experiment-iv\"\n         S: j NO [SERVERBUG]\
    \ This should not happen\n   CLIENTBUG\n         The server has detected a client\
    \ bug.  This can accompany all\n         of OK, NO, and BAD, depending on what\
    \ the client bug is.\n         C: k1 select \"/archive/projects/experiment-iv\"\
    \n         [...]\n         S: k1 OK [READ-ONLY] Done\n         C: k2 status \"\
    /archive/projects/experiment-iv\" (messages)\n         [...]\n         S: k2 OK\
    \ [CLIENTBUG] Done\n   CANNOT\n         The operation violates some invariant\
    \ of the server and can\n         never succeed.\n         C: l create \"///////\"\
    \n         S: l NO [CANNOT] Adjacent slashes are not supported\n   LIMIT\n   \
    \      The operation ran up against an implementation limit of some\n        \
    \ kind, such as the number of flags on a single message or the\n         number\
    \ of flags used in a mailbox.\n         C: m STORE 42 FLAGS f1 f2 f3 f4 f5 ...\
    \ f250\n         S: m NO [LIMIT] At most 32 flags in one mailbox supported\n \
    \  OVERQUOTA\n         The user would be over quota after the operation.  (The\
    \ user\n         may or may not be over quota already.)\n         Note that if\
    \ the server sends OVERQUOTA but doesn't support the\n         IMAP QUOTA extension\
    \ defined by [RFC2087], then there is a\n         quota, but the client cannot\
    \ find out what the quota is.\n         C: n1 uid copy 1:* oldmail\n         S:\
    \ n1 NO [OVERQUOTA] Sorry\n         C: n2 uid copy 1:* oldmail\n         S: n2\
    \ OK [OVERQUOTA] You are now over your soft quota\n   ALREADYEXISTS\n        \
    \ The operation attempts to create something that already exists,\n         such\
    \ as when the CREATE or RENAME directories attempt to create\n         a mailbox\
    \ and there is already one of that name.\n         C: o RENAME this that\n   \
    \      S: o NO [ALREADYEXISTS] Mailbox \"that\" already exists\n   NONEXISTENT\n\
    \         The operation attempts to delete something that does not exist.\n  \
    \       Similar to ALREADYEXISTS.\n         C: p RENAME this that\n         S:\
    \ p NO [NONEXISTENT] No such mailbox\n"
- title: 4.  Formal Syntax
  contents:
  - "4.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n\
    \   Form (ABNF) notation as specified in [RFC5234].  [RFC3501] defines\n   the\
    \ non-terminal \"resp-text-code\".\n   Except as noted otherwise, all alphabetic\
    \ characters are case-\n   insensitive.  The use of upper or lowercase characters\
    \ to define\n   token strings is for editorial clarity only.\n        resp-text-code\
    \ =/ \"UNAVAILABLE\" / \"AUTHENTICATIONFAILED\" /\n                         \"\
    AUTHORIZATIONFAILED\" / \"EXPIRED\" /\n                         \"PRIVACYREQUIRED\"\
    \ / \"CONTACTADMIN\" / \"NOPERM\" /\n                         \"INUSE\" / \"EXPUNGEISSUED\"\
    \ / \"CORRUPTION\" /\n                         \"SERVERBUG\" / \"CLIENTBUG\" /\
    \ \"CANNOT\" /\n                         \"LIMIT\" / \"OVERQUOTA\" / \"ALREADYEXISTS\"\
    \ /\n                         \"NONEXISTENT\"\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Revealing information about a passphrase to unauthenticated\
    \ IMAP\n   clients causes bad karma.\n   Response codes are easier to parse than\
    \ human-readable text.  This\n   can amplify the consequences of an information\
    \ leak.  For example,\n   selecting a mailbox can fail because the mailbox doesn't\
    \ exist,\n   because the user doesn't have the \"l\" right (right to know the\n\
    \   mailbox exists) or \"r\" right (right to read the mailbox).  If the\n   server\
    \ sent different responses in the first two cases in the past,\n   only malevolent\
    \ clients would discover it.  With response codes it's\n   possible, perhaps probable,\
    \ that benevolent clients will forward the\n   leaked information to the user.\
    \  Server authors are encouraged to be\n   particularly careful with the NOPERM\
    \ and authentication-related\n   responses.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   The IANA has created the IMAP Response Codes registry.\
    \  The registry\n   has been populated with the following codes:\n      NEWNAME\
    \              RFC 2060 (obsolete)\n      REFERRAL             RFC 2221\n    \
    \  ALERT                RFC 3501\n      BADCHARSET           RFC 3501\n      PARSE\
    \                RFC 3501\n      PERMANENTFLAGS       RFC 3501\n      READ-ONLY\
    \            RFC 3501\n      READ-WRITE           RFC 3501\n      TRYCREATE  \
    \          RFC 3501\n      UIDNEXT              RFC 3501\n      UIDVALIDITY  \
    \        RFC 3501\n      UNSEEN               RFC 3501\n      UNKNOWN-CTE    \
    \      RFC 3516\n      UIDNOTSTICKY         RFC 4315\n      APPENDUID        \
    \    RFC 4315\n      COPYUID              RFC 4315\n      URLMECH            \
    \  RFC 4467\n      TOOBIG               RFC 4469\n      BADURL               RFC\
    \ 4469\n      HIGHESTMODSEQ        RFC 4551\n      NOMODSEQ             RFC 4551\n\
    \      MODIFIED             RFC 4551\n      COMPRESSIONACTIVE    RFC 4978\n  \
    \    CLOSED               RFC 5162\n      NOTSAVED             RFC 5182\n    \
    \  BADCOMPARATOR        RFC 5255\n      ANNOTATE             RFC 5257\n      ANNOTATIONS\
    \          RFC 5257\n      TEMPFAIL             RFC 5259\n      MAXCONVERTMESSAGES\
    \   RFC 5259\n      MAXCONVERTPARTS      RFC 5259\n      NOUPDATE            \
    \ RFC 5267\n      METADATA             RFC 5464\n      NOTIFICATIONOVERFLOW RFC\
    \ 5465\n      BADEVENT             RFC 5465\n      UNDEFINED-FILTER     RFC 5466\n\
    \      UNAVAILABLE          RFC 5530\n      AUTHENTICATIONFAILED RFC 5530\n  \
    \    AUTHORIZATIONFAILED  RFC 5530\n      EXPIRED              RFC 5530\n    \
    \  PRIVACYREQUIRED      RFC 5530\n      CONTACTADMIN         RFC 5530\n      NOPERM\
    \               RFC 5530\n      INUSE                RFC 5530\n      EXPUNGEISSUED\
    \        RFC 5530\n      CORRUPTION           RFC 5530\n      SERVERBUG      \
    \      RFC 5530\n      CLIENTBUG            RFC 5530\n      CANNOT           \
    \    RFC 5530\n      LIMIT                RFC 5530\n      OVERQUOTA          \
    \  RFC 5530\n      ALREADYEXISTS        RFC 5530\n      NONEXISTENT          RFC\
    \ 5530\n   The new registry can be extended by sending a registration request\
    \ to\n   IANA.  IANA will forward this request to a Designated Expert,\n   appointed\
    \ by the responsible IESG Area Director, CCing it to the IMAP\n   Extensions mailing\
    \ list at <ietf-imapext@imc.org> (or a successor\n   designated by the Area Director).\
    \  After either allowing 30 days for\n   community input on the IMAP Extensions\
    \ mailing list or a successful\n   IETF Last Call, the expert will determine the\
    \ appropriateness of the\n   registration request and either approve or disapprove\
    \ the request by\n   sending a notice of the decision to the requestor, CCing\
    \ the IMAP\n   Extensions mailing list and IANA.  A denial notice must be justified\n\
    \   by an explanation, and, in cases where it is possible, concrete\n   suggestions\
    \ on how the request can be modified so as to become\n   acceptable should be\
    \ provided.\n   For each response code, the registry contains a list of relevant\
    \ RFCs\n   that describe (or extend) the response code and an optional response\n\
    \   code status description, such as \"obsolete\" or \"reserved to prevent\n \
    \  collision with deployed software\".  (Note that in the latter case,\n   the\
    \ RFC number can be missing.)  Presence of the response code status\n   description\
    \ means that the corresponding response code is NOT\n   RECOMMENDED for widespread\
    \ use.\n   The intention is that any future allocation will be accompanied by\
    \ a\n   published RFC (including direct submissions to the RFC Editor).  But\n\
    \   in order to allow for the allocation of values prior to the RFC being\n  \
    \ approved for publication, the Designated Expert can approve\n   allocations\
    \ once it seems clear that an RFC will be published, for\n   example, before requesting\
    \ IETF LC for the document.\n   The Designated Expert can also approve registrations\
    \ for response\n   codes used in deployed software when no RFC exists.  Such\n\
    \   registrations must be marked as \"reserved to prevent collision with\n   deployed\
    \ software\".\n   Response code registrations may not be deleted; response codes\
    \ that\n   are no longer believed appropriate for use (for example, if there is\n\
    \   a problem with the syntax of said response code or if the\n   specification\
    \ describing it was moved to Historic) should be marked\n   \"obsolete\" in the\
    \ registry, clearly marking the lists published by\n   IANA.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Peter Coates, Mark Crispin, Philip Guenther, Alexey\
    \ Melnikov, Ken\n   Murchison, Chris Newman, Timo Sirainen, Philip Van Hoof, Dale\n\
    \   Wiggins, and Sarah Wilkin helped with this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS\
    \ PROTOCOL - VERSION\n              4rev1\", RFC 3501, March 2003.\n   [RFC5234]\
    \  Crocker, D., Ed., and P. Overell, \"Augmented BNF for\n              Syntax\
    \ Specifications: ABNF\", STD 68, RFC 5234, January\n              2008.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [RFC2087]  Myers, J., \"IMAP4 QUOTA extension\"\
    , RFC 2087, January\n              1997.\n   [RFC2180]  Gahrns, M., \"IMAP4 Multi-Accessed\
    \ Mailbox Practice\", RFC\n              2180, July 1997.\n   [RFC4314]  Melnikov,\
    \ A., \"IMAP4 Access Control List (ACL) Extension\",\n              RFC 4314,\
    \ December 2005.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Arnt Gulbrandsen\n   Oryx Mail Systems GmbH\n   Schweppermannstr.\
    \ 8\n   D-81671 Muenchen\n   Germany\n   Fax: +49 89 4502 9758\n   EMail: arnt@oryx.com\n"
