- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                             J. Wu
  contents:
  - "Independent Submission                                             J. Wu\n  4over6\
    \ Transit Solution Using IP Encapsulation and MP-BGP Extensions\n"
- title: Abstract
  contents:
  - "Abstract\n   The emerging and growing deployment of IPv6 networks will introduce\n\
    \   cases where connectivity with IPv4 networks crossing IPv6 transit\n   backbones\
    \ is desired.  This document describes a mechanism for\n   automatic discovery\
    \ and creation of IPv4-over-IPv6 tunnels via\n   extensions to multiprotocol BGP.\
    \  It is targeted at connecting\n   islands of IPv4 networks across an IPv6-only\
    \ backbone without the\n   need for a manually configured overlay of tunnels.\
    \  The mechanisms\n   described in this document have been implemented, tested,\
    \ and\n   deployed on the large research IPv6 network in China.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This is a contribution to the RFC Series, independently\n   of any other RFC\
    \ stream.  The RFC Editor has chosen to publish this\n   document at its discretion\
    \ and makes no statement about its value for\n   implementation or deployment.\
    \  Documents approved for publication by\n   the RFC Editor are not a candidate\
    \ for any level of Internet\n   Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5747.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The mechanisms and techniques described in this document are related\n\
    \   to specifications developed by the IETF softwire working group and\n   published\
    \ as Standards Track documents by the IETF, but the\n   relationship does not\
    \ prevent publication of this document.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. 4over6 Framework Overview .......................................3\n  \
    \ 3. Prototype Implementation ........................................5\n    \
    \  3.1. 4over6 Packet Forwarding ...................................5\n      3.2.\
    \ Encapsulation Table ........................................6\n      3.3. MP-BGP\
    \ 4over6 Protocol Extensions ..........................7\n           3.3.1. Receiving\
    \ Routing Information from Local CE .........8\n           3.3.2. Receiving 4over6\
    \ Routing Information from a\n                  Remote 4over6 PE ....................................8\n\
    \   4. 4over6 Deployment Experience ....................................9\n  \
    \    4.1. CNGI-CERNET2 ...............................................9\n    \
    \  4.2. 4over6 Testbed on the CNGI-CERNET2 IPv6 Network ............9\n      4.3.\
    \ Deployment Experiences ....................................10\n   5. Ongoing\
    \ Experiment .............................................11\n   6. Relationship\
    \ to Softwire Mesh Effort ...........................12\n   7. IANA Considerations\
    \ ............................................12\n   8. Security Considerations\
    \ ........................................13\n   9. Conclusion .....................................................13\n\
    \   10. Acknowledgements ..............................................13\n  \
    \ 11. Normative References ..........................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Due to the lack of IPv4 address space, more and more IPv6\
    \ networks\n   have been deployed not only on edge networks but also on backbone\n\
    \   networks.  However, there are still a large number of legacy IPv4\n   hosts\
    \ and applications.  As a result, IPv6 networks and IPv4\n   applications/hosts\
    \ will have to coexist for a long period of time.\n   The emerging and growing\
    \ deployment of IPv6 networks will introduce\n   cases where connectivity with\
    \ IPv4 networks is desired.  Some IPv6\n   backbones will need to offer transit\
    \ services to attached IPv4 access\n   networks.  The method to achieve this would\
    \ be to encapsulate and\n   then transport the IPv4 payloads inside IPv6 tunnels\
    \ spanning the\n   backbone.  There are some IPv6/IPv4-related tunneling protocols\
    \ and\n   mechanisms defined in the literature.  But at the time that the\n  \
    \ mechanism described in this document was introduced, most of these\n   existing\
    \ techniques focused on the problem of IPv6 over IPv4, rather\n   than the case\
    \ of IPv4 over IPv6.  Encapsulation methods alone, such\n   as those defined in\
    \ [RFC2473], require manual configuration in order\n   to operate.  When a large\
    \ number of tunnels are necessary, manual\n   configuration can become burdensome.\
    \  To the above problem, this\n   document describes an approach, referred to\
    \ as \"4over6\".\n   The 4over6 mechanism concerns two aspects: the control plane\
    \ and the\n   data plane.  The control plane needs to address the problem of how\
    \ to\n   set up an IPv4-over-IPv6 tunnel in an automatic and scalable fashion\n\
    \   between a large number of edge routers.  This document describes\n   experimental\
    \ extensions to Multiprotocol Extension for BGP (MP-BGP)\n   [RFC4271] [RFC4760]\
    \ employed to communicate tunnel endpoint\n   information and establish 4over6\
    \ tunnels between dual-stack Provider\n   Edge (PE) routers positioned at the\
    \ edge of the IPv6 backbone\n   network.  Once the 4over6 tunnel is in place,\
    \ the data plane focuses\n   on the packet forwarding processes of encapsulation\
    \ and\n   decapsulation.\n"
- title: 2.  4over6 Framework Overview
  contents:
  - "2.  4over6 Framework Overview\n   In the topology shown in Figure 1, a number\
    \ of IPv6-only P routers\n   compose a native IPv6 backbone.  The PE routers are\
    \ dual stack and\n   referred to as 4over6 PE routers.  The IPv6 backbone acts\
    \ as a\n   transit core to transport IPv4 packets across the IPv6 backbone.\n\
    \   This enables each of the IPv4 access islands to communicate with one\n   another\
    \ via 4over6 tunnels spanning the IPv6 transit core.\n                       _._._._._\
    \            _._._._._\n                      |  IPv4   |          |  IPv4   |\n\
    \                      | access  |          | access  |\n                    \
    \  | island  |          | island  |\n                       _._._._._        \
    \    _._._._._\n                           |                    |\n          \
    \             Dual-Stack           Dual-Stack\n                       \"4over6\
    \ PE\"          \"4over6 PE\"\n                           |                  \
    \  |\n                           |                    |\n                    \
    \     __+____________________+__\n            4over6      /   :   :          \
    \ :   :  \\    IPv6 only\n            Tunnels    |    :      :      :     :  \
    \ |  transit core\n            between    |    :        [P]        :   |  with\
    \ multiple\n              PEs      |    :     :       :     :   |   [P routers]\n\
    \                       |    :   :            :  :   |\n                     \
    \   \\_._._._._._._._._._._._._./\n                           | /            \
    \    \\ |\n                           |                    |\n               \
    \         Dual-Stack          Dual-Stack\n                        \"4over6 PE\"\
    \         \"4over6 PE\"\n                          |  |                  |\n \
    \                      _._._._._            _._._._._\n                      |\
    \  IPv4   |          |  IPv4   |\n                      | access  |          |\
    \ access  |\n                      | island  |          | island  |\n        \
    \               _._._._._            _._._._._\n                  Figure 1: IPv4\
    \ over IPv6 Network Topology\n   As shown in Figure 1, there are multiple dual-stack\
    \ PE routers\n   connected to the IPv6 transit core.  In order for the ingress\
    \ 4over6\n   PE router to forward an IPv4 packet across the IPv6 backbone to the\n\
    \   correct egress 4over6 PE router, the ingress 4over6 PE router must\n   learn\
    \ which IPv4 destination prefixes are reachable through each\n   egress 4over6\
    \ PE router.  MP-BGP will be extended to distribute the\n   destination IPv4 prefix\
    \ information between peering dual-stack PE\n   routers.  Section 4 of this document\
    \ presents the definition of the\n   4over6 protocol field in MP-BGP, and Section\
    \ 5 describes MP-BGP's\n   extended behavior in support of this capability.\n\
    \   After the ingress 4over6 PE router learns the correct egress 4over6\n   PE\
    \ router via MP-BGP, it will forward the packet across the IPv6\n   backbone using\
    \ IP encapsulation.  The egress 4over6 PE router will\n   receive the encapsulated\
    \ packet, remove the IPv6 header, and then\n   forward the original IPv4 packet\
    \ to its final IPv4 destination.\n   Section 6 describes the procedure of packet\
    \ forwarding.\n"
- title: 3.  Prototype Implementation
  contents:
  - "3.  Prototype Implementation\n   An implementation of the 4over6 mechanisms described\
    \ in this document\n   was developed, tested, and deployed on Linux with kernel\
    \ version 2.4.\n   The prototype system is composed of three components: packet\n\
    \   forwarding, the encapsulation table, and MP-BGP extensions.  The\n   packet\
    \ forwarding and encapsulation table are Linux kernel modules,\n   and the MP-BGP\
    \ extension was developed by extending Zebra routing\n   software.\n   The following\
    \ sections will discuss these parts in detail.\n"
- title: 3.1.  4over6 Packet Forwarding
  contents:
  - "3.1.  4over6 Packet Forwarding\n   Forwarding an IPv4 packet through the IPv6\
    \ transit core includes\n   three parts: encapsulation of the incoming IPv4 packet\
    \ with the IPv6\n   tunnel header, transmission of the encapsulated packet over\
    \ the IPv6\n   transit backbone, and decapsulation of the IPv6 header and forwarding\n\
    \   of the original IPv4 packet.  Native IPv6 routing and forwarding are\n   employed\
    \ in the backbone network since the P routers take the 4over6\n   tunneled packets\
    \ as just native IPv6 packets.  Therefore, 4over6\n   packet forwarding involves\
    \ only the encapsulation process and the\n   decapsulation process, both of which\
    \ are performed on the 4over6 PE\n   routers.\n                Tunnel from Ingress\
    \ PE to Egress PE\n                   ---------------------------->\n        \
    \         Tunnel                      Tunnel\n                 Entry-Point   \
    \              Exit-Point\n                 Node                        Node\n\
    \   +-+    IPv4    +--+   IPv6 Transit Core    +--+    IPv4    +-+\n   |S|-->--//-->--|PE|=====>=====//=====>=====|PE|-->--//-->--|D|\n\
    \   +-+            +--+                        +--+            +-+\n   Original\
    \    Ingress PE                   Egress PE        Original\n   Packet    (Encapsulation)\
    \              (Decapsulation)    Packet\n   Source                          \
    \                          Destination\n   Node                              \
    \                        Node\n              Figure 2: Packet Forwarding along\
    \ 4over6 Tunnel\n   As shown in Figure 2, packet encapsulation and decapsulation\
    \ are both\n   on the dual-stack 4over6 PE routers.  Figure 3 shows the format\
    \ of\n   packet encapsulation and decapsulation.\n                           +----------------------------------//-----+\n\
    \                           | IPv4 Header |   Packet Payload          |\n    \
    \                       +----------------------------------//-----+\n        \
    \                    <         Original IPv4 Packet           >\n            \
    \                             |\n                                         |(Encapsulation\
    \ on ingress PE)\n                                         |\n               \
    \                          v\n    < Tunnel IPv6 Headers > <         Original IPv4\
    \ Packet           >\n   +-----------+ - - - - - +-------------+-----------//--------------+\n\
    \   |   IPv6    | IPv6      |   IPv4      |                           |\n   |\
    \           | Extension |             |      Packet Payload       |\n   |   Header\
    \  | Headers   |  Header     |                           |\n   +-----------+ -\
    \ - - - - +-------------+-----------//--------------+\n    <                 \
    \     Tunnel IPv6 Packet                       >\n                           \
    \              |\n                                         |(Decapsulation on\
    \ egress PE)\n                                         |\n                   \
    \                      v\n                           +----------------------------------//-----+\n\
    \                           | IPv4 Header |   Packet Payload          |\n    \
    \                       +----------------------------------//-----+\n        \
    \                    <         Original IPv4 Packet           >\n   Figure 3:\
    \ Packet Encapsulation and Decapsulation on Dual-Stack 4over6\n             PE\
    \ Router\n   The encapsulation format to apply is IPv4 encapsulated in IPv6, as\n\
    \   outlined in [RFC2473].\n"
- title: 3.2.  Encapsulation Table
  contents:
  - "3.2.  Encapsulation Table\n   Each 4over6 PE router maintains an encapsulation\
    \ table as depicted in\n   Figure 4.  Each entry in the encapsulation table consists\
    \ of an IPv4\n   prefix and its corresponding IPv6 address.  The IPv4 prefix is\
    \ a\n   particular network located in an IPv4 access island network.  The\n  \
    \ IPv6 address is the 4over6 virtual interface (VIF) address of the\n   4over6\
    \ PE router that the IPv4 prefix is reachable through.  The\n   encapsulation\
    \ table is built and maintained using local configuration\n   information and\
    \ MP-BGP advertisements received from remote 4over6 PE\n   routers.\n   The 4over6\
    \ VIF is an IPv6 /128 address that is locally configured on\n   each 4over6 router.\
    \  This address, as an ordinary global IPv6\n   address, must also be injected\
    \ into the IPv6 IGP so that it is\n   reachable across the IPv6 backbone.\n  \
    \      +-------------+------------------------------------------------+\n    \
    \    | IPv4 Prefix | IPv6 Advertising Address Family Border Router  |\n      \
    \  +-------------+------------------------------------------------+\n        \
    \              Figure 4: Encapsulation Table\n   When an IPv4 packet arrives at\
    \ the ingress 4over6 PE router, a lookup\n   in the local IPv4 routing table will\
    \ result in a pointer to the local\n   encapsulation table entry with the matching\
    \ destination IPv4 prefix.\n   There is a corresponding IPv6 address in the encapsulation\
    \ table.\n   The IPv4 packet is encapsulated in an IPv6 header.  The source\n\
    \   address in the IPv6 header is the IPv6 VIF address of the local\n   4over6\
    \ PE router and the destination address is the IPv6 VIF address\n   of the remote\
    \ 4over6 PE router contained in the local encapsulation\n   table.  The packet\
    \ is then subjected to normal IPv6 forwarding for\n   transport across the IPv6\
    \ backbone.\n   When the encapsulated packet arrives at the egress 4over6 PE router,\n\
    \   the IPv6 header is removed and the original IPv4 packet is forwarded\n   to\
    \ the destination IPv4 network based on the outcome of the lookup in\n   the IPv4\
    \ routing table contained in the egress 4over6 PE router.\n"
- title: 3.3.  MP-BGP 4over6 Protocol Extensions
  contents:
  - "3.3.  MP-BGP 4over6 Protocol Extensions\n   Each 4over6 PE router possesses an\
    \ IPv4 interface connected to an\n   IPv4 access network(s).  It can peer with\
    \ other IPv4 routers using\n   IGP or BGP routing protocols to exchange local\
    \ IPv4 routing\n   information.  Routing information can also be installed on\
    \ the 4over6\n   PE router using static configuration methods.\n   Each 4over6\
    \ PE also possesses at least one IPv6 interface to connect\n   it into the IPv6\
    \ transit backbone.  The 4over6 PE typically uses IGP\n   routing protocols to\
    \ exchange IPv6 backbone routing information with\n   other IPv6 P routers.  The\
    \ 4over6 PE router will also form an MP-iBGP\n   (Internal BGP) peering relationship\
    \ with other 4over6 PE routers\n   connected to the IPv6 backbone network.\n \
    \  The use of MP-iBGP suggests that the participating 4over6 PE routers\n   that\
    \ share a route reflector or form a full mesh of TCP connections\n   are contained\
    \ in the same autonomous system (AS).  This\n   implementation is in fact only\
    \ deployed over a single AS.  This was\n   not an intentional design constraint\
    \ but rather reflected the single\n   AS topology of the CNGI-CERNET2 (China Next\
    \ Generation Internet -\n   China Education and Research Network) national IPv6\
    \ backbone used in\n   the testing and deployment of this solution.\n"
- title: 3.3.1.  Receiving Routing Information from Local CE
  contents:
  - "3.3.1.  Receiving Routing Information from Local CE\n   When a 4over6 PE router\
    \ learns routing information from the locally\n   attached IPv4 access networks,\
    \ the 4over6 MP-iBGP entity should\n   process the information as follows:\n \
    \  1.  Install and maintain local IPv4 routing information in the IPv4\n     \
    \  routing database.\n   2.  Install and maintain new entries in the encapsulation\
    \ table.\n       Each entry should consist of the IPv4 prefix and the local IPv6\n\
    \       VIF address.\n   3.  Advertise the new contents of the local encapsulation\
    \ table in\n       the form of MP_REACH_NLRI update information to remote 4over6\
    \ PE\n       routers.  The format of these updates is as follows:\n       *  AFI\
    \ = 1 (IPv4)\n       *  SAFI = 67 (4over6)\n       *  NLRI = IPv4 network prefix\n\
    \       *  Network Address of Next Hop = IPv6 address of its 4over6 VIF\n   4.\
    \  A new Subsequent Address Family Identifier (SAFI) BGP 4over6 (67)\n       has\
    \ been assigned by IANA.  We call a BGP update with a SAFI of\n       67 as 4over6\
    \ routing information.\n"
- title: 3.3.2.  Receiving 4over6 Routing Information from a Remote 4over6 PE
  contents:
  - "3.3.2.  Receiving 4over6 Routing Information from a Remote 4over6 PE\n   A local\
    \ 4over6 PE router will receive MP_REACH_NLRI updates from\n   remote 4over6 routers\
    \ and use that information to populate the local\n   encapsulation table and the\
    \ BGP routing database.  After validating\n   the correctness of the received\
    \ attribute, the following procedures\n   are used to update the local encapsulation\
    \ table and redistribute new\n   information to the local IPv4 routing table:\n\
    \   1.  Validate the received BGP update packet as 4over6 routing\n       information\
    \ by AFI = 1 (IPv4) and SAFI = 67 (4over6).\n   2.  Extract the IPv4 network address\
    \ from the NLRI field and install\n       as the IPv4 network prefix.\n   3. \
    \ Extract the IPv6 address from the Network Address of the Next Hop\n       field\
    \ and place that as an associated entry next to the IPv4\n       network index.\
    \  (Note, this describes the update of the local\n       encapsulation table.)\n\
    \   4.  Install and maintain a new entry in the encapsulation table with\n   \
    \    the extracted IPv4 prefix and its corresponding IPv6 address.\n   5.  Redistribute\
    \ the new 4over6 routing information to the local IPv4\n       routing table.\
    \  Set the destination network prefix as the\n       extracted IPv4 prefix, set\
    \ the Next Hop as Null, and Set the\n       OUTPUT Interface as the 4over6 VIF\
    \ on the local 4over6 PE router.\n   Therefore, when an ingress 4over6 PE router\
    \ receives an IPv4 packet,\n   the lookup in its IPv4 routing table will have\
    \ a result of the output\n   interface as the local 4over6 VIF, where the incoming\
    \ IPv4 packet\n   will be encapsulated with a new IPv6 header, as indicated in\
    \ the\n   encapsulation table.\n"
- title: 4.  4over6 Deployment Experience
  contents:
  - '4.  4over6 Deployment Experience

    '
- title: 4.1.  CNGI-CERNET2
  contents:
  - "4.1.  CNGI-CERNET2\n   A prototype of the 4over6 solution is implemented and\
    \ deployed on\n   CNGI-CERNET2.  CNGI-CERNET2 is one of the China Next Generation\n\
    \   Internet (CNGI) backbones, operated by the China Education and\n   Research\
    \ Network (CERNET).  CNGI-CERNET2 connects approximately 25\n   core nodes distributed\
    \ in 20 cities in China at speeds of 2.5-10\n   Gb/s.  The CNGI-CERNET2 backbone\
    \ is IPv6-only with some attached\n   customer premise networks (CPNs) being dual\
    \ stack.  The CNGI-CERNET2\n   backbone, attached CNGI-CERNET2 CPNs, and CNGI-6IX\
    \ Exchange all have\n   globally unique AS numbers.  This IPv6 backbone is used\
    \ to provide\n   transit IPv4 services for customer IPv4 networks connected via\
    \ 4over6\n   PE routers to the backbone.\n"
- title: 4.2.  4over6 Testbed on the CNGI-CERNET2 IPv6 Network
  contents:
  - "4.2.  4over6 Testbed on the CNGI-CERNET2 IPv6 Network\n   Figure 5 shows 4over6\
    \ deployment network topology.\n         +-----------------------------------------------------+\n\
    \         |                    IPv6 (CERNET2)                   |\n         |\
    \                                                     |\n         +-----------------------------------------------------+\n\
    \         |                  |                   |              |\n Tsinghua|Univ.\
    \       Peking|Univ.          SJTU|     Southeast|Univ.\n      +------+      \
    \     +------+           +------+        +------+\n      |4over6|    ...    |4over6|\
    \           |4over6|   ...  |4over6|\n      |router|           |router|      \
    \     |router|        |router|\n      +------+           +------+           +------+\
    \        +------+\n         |                  |                  |          \
    \      |\n         |                  |                  |                |\n\
    \         |                  |                  |                |\n   +-----------+\
    \      +-----------+      +-----------+     +-----------+\n   |IPv4 access| ...\
    \  |IPv4 access|      |IPv4 access| ... |IPv4 access|\n   |  network  |      |\
    \  network  |      |  network  |     |  network  |\n   +-----------+      +-----------+\
    \      +-----------+     +-----------+\n         |\n   +----------------------+\n\
    \   |    IPv4 (Internet)   |\n   |                      |\n   +----------------------+\n\
    \              Figure 5: 4over6 Deployment Network Topology\n   The IPv4-only\
    \ access networks are equipped with servers and clients\n   running different\
    \ applications.  The 4over6 PE routers are deployed\n   at 8 x IPv6 nodes of CNGI-CERNET2,\
    \ located in seven universities and\n   five cities across China.  As suggested\
    \ in Figure 5, some of the IPv4\n   access networks are connected to both IPv6\
    \ and IPv4 networks, and\n   others are only connected to the IPv6 backbone. \
    \ In the deployment,\n   users in different IPv4 networks can communicate with\
    \ each other\n   through 4over6 tunnels.\n"
- title: 4.3.  Deployment Experiences
  contents:
  - "4.3.  Deployment Experiences\n   A number of 4over6 PE routers were deployed\
    \ and configured to support\n   the 4over6 transit solution.  MP-BGP peerings\
    \ were established, and\n   successful distribution of 4over6 SAFI information\
    \ occurred.\n   Inspection of the BGP routing and encapsulation tables confirmed\
    \ that\n   the correct entries were sent and received.  ICMP ping traffic\n  \
    \ indicated that IPv4 packets were successfully transiting the IPv6\n   backbone.\n\
    \   In addition, other application protocols were successfully tested per\n  \
    \ the following:\n   o  HTTP.  A client running Internet Explorer in one IPv4\
    \ client\n      network was able to access and download multiple objects from\
    \ an\n      HTTP server located in another IPv4 client network.\n   o  P2P. BitComet\
    \ software running on several PCs placed in different\n      IPv4 client networks\
    \ were able to find each other and share files.\n   Other protocols, including\
    \ FTP, SSH, IM (e.g., MSN, Google Talk), and\n   Multimedia Streaming, all functioned\
    \ correctly.\n"
- title: 5.  Ongoing Experiment
  contents:
  - "5.  Ongoing Experiment\n   Based on the above successful experiment, we are going\
    \ to have\n   further experiments in the following two aspects.\n   1.  Inter-AS\
    \ 4over6\n      The above experiment is only deployed over a single AS.  With\
    \ the\n      growth of the network, there could be multiple ASes between the\n\
    \      edge networks.  Specifically, the Next Hop field in MP-BGP\n      indicates\
    \ the tunnel endpoint in the current 4over6 technology.\n      However, in the\
    \ Inter-AS scenario, the tunnel endpoint needs to be\n      separated from the\
    \ field of Next Hop.  Moreover, since the\n      technology of 4over6 is deployed\
    \ on the router running MP-BGP, the\n      supportability of 4over6 on each Autonomous\
    \ System Border Router\n      (ASBR) will be a main concern in the Inter-AS experiment.\
    \  We may\n      consider different situations: (1) Some ASBRs do not support\n\
    \      4over6; (2) ASBRs only support the 4over6 control plane (i.e., MP-\n  \
    \    BGP extension of 4over6) rather than 4over6 data plane; (3) ASBRs\n     \
    \ support both the control plane and the data plane for 4over6.\n   2.  Multicast\
    \ 4over6\n      The current 4over6 technology only supports unicast routing and\n\
    \      data forwarding.  With the deployment of network-layer multicast\n    \
    \  in multiple IPv4 edge networks, we need to extend the 4over6\n      technology\
    \ to support multicast including both multicast tree\n      manipulation on the\
    \ control plane and multicast traffic forwarding\n      on the data plane.  Based\
    \ on the current unicast 4over6 technology\n      providing the unicast connectivity\
    \ of edge networks over the\n      backbone in another address family, the multicast\
    \ 4over6 will\n      focus on the mapping technologies between the multicast groups\
    \ in\n      the different address families.\n"
- title: 6.  Relationship to Softwire Mesh Effort
  contents:
  - "6.  Relationship to Softwire Mesh Effort\n   The 4over6 solution was presented\
    \ at the IETF Softwires Working Group\n   Interim meeting in Hong Kong in January\
    \ 2006.  The existence of this\n   large-scale implementation and deployment clearly\
    \ showed that MP-BGP\n   could be employed to support tunnel setup in a scalable\
    \ fashion\n   across an IPv6 backbone.  Perhaps most important was the use-case\n\
    \   presented -- an IPv6 backbone that offers transit to attached client\n   IPv4\
    \ networks.\n   The 4over6 solution can be viewed as a precursor to the Softwire\
    \ Mesh\n   Framework proposed in the softwire problem statement [RFC4925].\n \
    \  However, there are several differences with this solution and the\n   effort\
    \ that emerged from the Softwires Working Group called \"softwire\n   Mesh Framework\"\
    \ [RFC5565] and the related solutions [RFC5512]\n   [RFC5549].\n   o  MP-BGP Extensions.\
    \ 4over6 employs a new SAFI (BGP 4over6) to\n      convey client IPv4 prefixes\
    \ between 4over6 PE routers.  Softwire\n      Mesh retains the original AFI-SAFI\
    \ designations, but it uses a\n      modified MP_REACH_NLRI format to convey IPv4\
    \ Network Layer\n      Reachability Information (NLRI) prefix information with\
    \ an IPv6\n      next_hop address [RFC5549].\n   o  Encapsulation. 4over6 assumes\
    \ IP-in-IP or it is possible to\n      configure Generic Routing Encapsulation\
    \ (GRE).  Softwires uses\n      those two scenarios configured locally or for\
    \ IP headers that\n      require dynamic updating.  As a result, the BGP encapsulation\
    \ SAFI\n      is introduced in [RFC5512].\n   o  Multicast.  The basic 4over6\
    \ solution only implemented unicast\n      communications.  The multicast communications\
    \ are specified in the\n      Softwire Mesh Framework and are also supported by\
    \ the multicast\n      extension of 4over6.\n   o  Use-Cases.  The 4over6 solution\
    \ in this document specifies the\n      4over6 use-case, which is also pretty\
    \ easy to extend for the use-\n      case of 6over4.  The Softwire Mesh Framework\
    \ supports both 4over6\n      and 6over4.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   A new SAFI value (67) has been assigned by IANA for\
    \ the BGP 4over6\n   SAFI.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Tunneling mechanisms, especially automatic ones,\
    \ often have potential\n   problems of Distributed Denial of Service (DDoS) attacks\
    \ on the\n   tunnel entry-point or tunnel exit-point.  As the advantage, the BGP\n\
    \   4over6 extension doesn't allocate resources to a single flow or\n   maintain\
    \ the state for a flow.  However, since the IPv6 tunnel\n   endpoints are globally\
    \ reachable IPv6 addresses, it would be trivial\n   to spoof IPv4 packets by encapsulating\
    \ and sending them over IPv6 to\n   the tunnel interface.  This could bypass IPv4\
    \ Reverse Path Forwarding\n   (RPF) or other antispoofing techniques.  Also, any\
    \ IPv4 filters may\n   be bypassed.\n   An iBGP peering relationship may be maintained\
    \ over IPsec or other\n   secure communications.\n"
- title: 9.  Conclusion
  contents:
  - "9.  Conclusion\n   The emerging and growing deployment of IPv6 networks, in particular,\n\
    \   IPv6 backbone networks, will introduce cases where connectivity with\n   IPv4\
    \ networks is desired.  Some IPv6 backbones will need to offer\n   transit services\
    \ to attached IPv4 access networks.  The 4over6\n   solution outlined in this\
    \ document supports such a capability through\n   an extension to MP-BGP to convey\
    \ IPv4 routing information along with\n   an associated IPv6 address.  Basic IP\
    \ encapsulation is used in the\n   data plane as IPv4 packets are tunneled through\
    \ the IPv6 backbone.\n   An actual implementation has been developed and deployed\
    \ on the CNGI-\n   CERNET2 IPv6 backbone.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   During the design procedure of the 4over6 framework\
    \ and definition of\n   BGP-MP 4over6 extension, Professor Ke Xu gave the authors\
    \ many\n   valuable comments.  The support of the IETF Softwires WG is also\n\
    \   gratefully acknowledged with special thanks to David Ward, Alain\n   Durand,\
    \ and Mark Townsley for their rich experience and knowledge in\n   this field.\
    \  Yakov Rekhter provided helpful comments and advice.\n   Mark Townsley reviewed\
    \ this document carefully and gave the authors a\n   lot of valuable comments,\
    \ which were very important for improving\n   this document.\n   The deployment\
    \ and test for the prototype system was conducted among\n   seven universities\
    \ -- namely, Tsinghua University, Peking University,\n   Beijing University of\
    \ Post and Telecommunications, Shanghai Jiaotong\n   University, Huazhong University\
    \ of Science and Technology, Southeast\n   University, and South China University\
    \ of Technology.  The authors\n   would like to thank everyone involved in this\
    \ effort at these\n   universities.\n"
- title: 11.  Normative References
  contents:
  - "11.  Normative References\n   [RFC2473]  Conta, A. and S. Deering, \"Generic\
    \ Packet Tunneling in\n              IPv6 Specification\", RFC 2473, December\
    \ 1998.\n   [RFC4271]  Rekhter, Y., Li, T., and S. Hares, \"A Border Gateway\n\
    \              Protocol 4 (BGP-4)\", RFC 4271, January 2006.\n   [RFC4760]  Bates,\
    \ T., Chandra, R., Katz, D., and Y. Rekhter,\n              \"Multiprotocol Extensions\
    \ for BGP-4\", RFC 4760,\n              January 2007.\n   [RFC4925]  Li, X., Dawkins,\
    \ S., Ward, D., and A. Durand, \"Softwire\n              Problem Statement\",\
    \ RFC 4925, July 2007.\n   [RFC5512]  Mohapatra, P. and E. Rosen, \"The BGP Encapsulation\n\
    \              Subsequent Address Family Identifier (SAFI) and the BGP\n     \
    \         Tunnel Encapsulation Attribute\", RFC 5512, April 2009.\n   [RFC5549]\
    \  Le Faucheur, F. and E. Rosen, \"Advertising IPv4 Network\n              Layer\
    \ Reachability Information with an IPv6 Next Hop\",\n              RFC 5549, May\
    \ 2009.\n   [RFC5565]  Wu, J., Cui, Y., Metz, C., and E. Rosen, \"Softwire Mesh\n\
    \              Framework\", RFC 5565, June 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jianping Wu\n   Tsinghua University\n   Department of\
    \ Computer Science, Tsinghua University\n   Beijing  100084\n   P.R. China\n \
    \  Phone: +86-10-6278-5983\n   EMail: jianping@cernet.edu.cn\n   Yong Cui\n  \
    \ Tsinghua University\n   Department of Computer Science, Tsinghua University\n\
    \   Beijing  100084\n   P.R. China\n   Phone: +86-10-6278-5822\n   EMail: cy@csnet1.cs.tsinghua.edu.cn\n\
    \   Xing Li\n   Tsinghua University\n   Department of Electronic Engineering,\
    \ Tsinghua University\n   Beijing  100084\n   P.R. China\n   Phone: +86-10-6278-5983\n\
    \   EMail: xing@cernet.edu.cn\n   Mingwei Xu\n   Tsinghua University\n   Department\
    \ of Computer Science, Tsinghua University\n   Beijing  100084\n   P.R. China\n\
    \   Phone: +86-10-6278-5822\n   EMail: xmw@csnet1.cs.tsinghua.edu.cn\n   Chris\
    \ Metz\n   Cisco Systems, Inc.\n   3700 Cisco Way\n   San Jose, CA  95134\n  \
    \ USA\n   EMail: chmetz@cisco.com\n"
