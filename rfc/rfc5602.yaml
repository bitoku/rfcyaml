- contents:
  - '    Pseudowire (PW) over MPLS PSN Management Information Base (MIB)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes a MIB module for PW operation over\n   Multiprotocol
    Label Switching (MPLS) Label Switching Routers (LSRs).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. The Internet-Standard Management Framework ......................2\n   3.
    Terminology .....................................................3\n   4. Overview
    ........................................................3\n   5. Features Checklist
    ..............................................4\n   6. MIB Module Usage ................................................5\n
    \  7. PW-MPLS-STD-MIB Example .........................................7\n   8.
    Object Definitions ..............................................8\n   9. Security
    Considerations ........................................28\n   10. IANA Considerations
    ...........................................29\n   11. References ....................................................29\n
    \     11.1. Normative References .....................................29\n      11.2.
    Informative References ...................................30\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes a model for managing pseudowire
    services for\n   transmission over different flavors of MPLS tunnels.  The general
    PW\n   MIB module [RFC5601] defines the parameters global to the PW\n   regardless
    of the underlying Packet Switched Network (PSN) and\n   emulated service.  This
    document is applicable for PWs that use MPLS\n   PSN type in the PW-STD-MIB.\n
    \  This document describes the MIB objects that define pseudowire\n   association
    to the MPLS PSN, in a way that is not specific to the\n   carried service.\n   Together,
    [RFC3811] and [RFC3812] describe the modeling of an MPLS\n   tunnel, and a tunnel's
    underlying cross-connects.  This MIB module\n   supports MPLS-TE PSN, non-TE MPLS
    PSN (an outer tunnel created by the\n   Label Distribution Protocol (LDP) or manually),
    and MPLS PW label\n   only (no outer tunnel).\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Terminology\n   This document uses terminology from the document describing
    the PW\n   architecture [RFC3985], [RFC3916], and [RFC4447].\n   The terms \"outbound\"
    and \"inbound\" in this MIB module are based on\n   the common practice in the
    MPLS standards; i.e. \"outbound\" is toward\n   the PSN.  However, where these
    terms are used in an object name, the\n   object description clarifies the exact
    packet direction to prevent\n   confusion with these terms in other documents.\n
    \  \"PSN tunnel\" is a general term indicating a virtual connection\n   between
    the two Pseudowire Emulation Edge-to-Edge (PWE3) edge\n   devices.  Each tunnel
    may potentially carry multiple PWs inside.  An\n   MPLS tunnel is within the scope
    of this document.\n   This document uses terminology from the document describing
    the MPLS\n   architecture [RFC3031] for MPLS PSN.  A Label Switched Path (LSP)
    is\n   modeled as described in [RFC3811] and [RFC3812] via a series of\n   cross-connects
    through one or more Label Switching Routers (LSRs).\n   In MPLS PSN, a PW connection
    typically uses a PW label within a\n   tunnel label [RFC4447].  Multiple pseudowires
    each with a unique PW\n   label can share the same tunnel.  For PW transport over
    MPLS, the\n   tunnel label is known as the \"outer\" label, while the PW label
    is\n   known as the \"inner\" label.  An exception to this is with adjacent\n
    \  LSRs or the use of a Penultimate Hop Popping (PHP).  In this case,\n   there
    is an option for PWs to connect directly without an outer\n   label.\n   The key
    words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",
    \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document
    are to be interpreted as described in RFC 2119 [BCP14].\n"
  title: 3.  Terminology
- contents:
  - "4.  Overview\n   The MIB module structure for defining a PW service consists
    of three\n   layers of MIB modules functioning together.  This general model is\n
    \  defined in the PWE3 architecture [RFC3985].  The layering model is\n   intended
    to sufficiently isolate PW services from the underlying PSN\n   layer that carries
    the emulated service.  This is done at the same\n   time as providing a standard
    means for connecting any supported\n   services to any supported PSNs.\n   The
    first layer, known as the service layer, contains service-\n   specific modules.
    \ These modules define service-specific management\n   objects that interface
    or collaborate with existing MIB modules for\n   the native version of the service.
    \ The service-specific module\n   \"glues\" the standard modules to the PWE3 MIB
    modules.\n   The next layer of the PWE3 MIB structure is the PW MIB module\n   [RFC5601].
    \ This module is used to configure general parameters of\n   PWs that are common
    to all types of emulated services and PSNs.  This\n   layer is connected to the
    service-specific layer above and the PSN\n   layer below.\n   The PSN layer provides
    PSN-specific modules for each type of PSN.\n   These modules associate the PW
    with one or more \"tunnels\" that carry\n   the service over the PSN.  These modules
    are used to \"glue\" the PW\n   service to the underlying PSN-specific MIB modules.
    \ This document\n   defines the MIB module for PW over MPLS PSN.\n   [RFC5542]
    defines some of the object types used in these modules.\n"
  title: 4.  Overview
- contents:
  - "5.  Features Checklist\n   The PW-MPLS-STD-MIB module is designed to satisfy
    the following\n   requirements and constraints:\n   -  The MIB module supports
    both manually configured and signaled PWs.\n   -  The MIB module supports point-to-point
    PW connections.\n   -  The MIB module enables the use of any emulated service.\n
    \  -  The MIB module supports MPLS-TE outer tunnel, non-TE MPLS outer\n      tunnel
    (an outer tunnel signaled by LDP or set up manually), and\n      no outer tunnel
    (where the PW label is the only label in the MPLS\n      stack).  The latter case
    is applicable for manual configuration of\n      PW over a single hop, as for
    signaled MPLS PSN even across a\n      single hop there is an MPLS tunnel -- even
    though the actual\n      packet may not contain the MPLS tunnel label due to PHP.\n
    \  The MIB module uses Textual Conventions (TCs) from [RFC2578],\n   [RFC2579],
    [RFC2580], [RFC2863], [RFC3811], [RFC3813], [RFC5542], and\n   [RFC5601].\n"
  title: 5.  Features Checklist
- contents:
  - "6.  MIB Module Usage\n   -  The PW table (pwTable) in [RFC5601] is used for all
    PW types (ATM,\n      FR, Ethernet, SONET, etc.).  This table contains high-level\n
    \     generic parameters related to the PW creation.  The operator or\n      the
    agent creates a row for each PW.\n   -  If the selected PSN type in the pwTable
    is MPLS, the agent creates\n      a row in the MPLS-specific parameters table
    (pwMplsTable) in this\n      module, which contains MPLS-specific parameters such
    as EXP bits\n      handling and outer tunnel configuration.\n   -  The operator
    configures the association to the desired MPLS tunnel\n      (required for MPLS-TE
    tunnels or for manually configured PWs)\n      through the pwMplsTeOutboundTable.
    \ For the LDP-based outer\n      tunnel, there is no need for manual configuration
    since there is\n      only a single tunnel toward the peer.\n   -  The agent creates
    rows in the MPLS mapping table in order to allow\n      quick retrieval of information
    based on the tunnel indexes.\n   The relation to the MPLS network is by configuration
    of the edge LSR\n   only -- i.e., the LSR that provides the PW function.  Since
    tunnels\n   are unidirectional, a pair of tunnels MUST exist (one for inbound,\n
    \  one for outbound).  Figure 1 depicts a PW that originates and\n   terminates
    at LSR-M.  It uses tunnels A and B formed by cross-\n   connects (XCs) Ax and
    Bx continuing through LSR-N to LSR-P.  The\n   concatenations of XCs create the
    tunnels.  Note: 'X' denotes a\n   tunnel's cross-connect.\n                                   Tunnel
    A\n           <- - - - - - - - - - - - - - - - - - - - - - - - - - - -\n       +----
    (edge) LSR-M ---+   +--------- LSR-N ---------+   + LSR-P\n       |---+                 |
    \  |                         |   |\n       |   |      XC         |   |           XC
    \           |   |\n       +   |  A1 (M<-N) +----+   +----+   A2 (M<-P)   +----+
    \  +----+\n       |   |     <------|    |   |    |<--------------|    |   |    |\n
    \  <-->| N |PWin  inSeg |MPLS|   |MPLS| outSeg  inSeg |MPLS|   |MPLS|\n   N S
    |   | <---X<-----| IF |   | IF |<------X<------| IF |   | IF |\n   A E | S |       |
    \   |<-->|   |    |               |<-->|   |    |\n   T R |   | --->X----->|    |
    \  |    |------>X------>|    |   |    |\n   I V | P |PWout outSeg|    |   |    |
    inSeg  outSeg |    |   |    |\n   V I |   |     ------>|    |   |    |-------------->|
    \   |   |    |\n   E C +   |     XC     +----+   +----+      XC       +----+   +----+\n
    \    E |---+  B1 (M->N)      |   |        B2 (M->P)        |   |\n       |                     |
    \  |                         |   |\n       +---------------------+   +-------------------------+
    \  +-----\n           - - - - - - - - - - - - - - - - - - - - - - - - - - - ->\n
    \                                  Tunnel B\n                      Figure 1: PW
    modeling over MPLS\n   The PW-MPLS-STD-MIB supports three options for an MPLS
    network:\n   (1)  In the MPLS-TE case, tunnels A and B are created via the MPLS-\n
    \       TE-STD-MIB [RFC3812].  The tunnels are associated (in each peer\n        independently)
    to the PW by the four indexes that uniquely\n        identify the tunnel at the
    MPLS-TE-STD-MIB.\n   (2)  In the non-TE case, tunnels A1 and B1 are either manually\n
    \       configured or set up with LDP.  The tunnels are associated to\n        the
    PW by the XC index in the MPLS-LSR-STD-MIB [RFC3813].\n   (3)  In the PW-label-only
    case, there is no outer tunnel on top of\n        the PW label.  This case is
    useful in the case of adjacent\n        Provider Edges (PEs) in manual configuration
    mode.  Note that\n        for signaled tunnels, when LSR-N acts as PHP for the
    outer\n        tunnel label, there are still entries for the outer tunnel in\n
    \       the relevant MPLS MIB modules, so even for the case of adjacent\n        LSRs,
    the relevant mode is either MPLS-TE or non-TE.\n   A combination of MPLS-TE outer
    tunnel(s) and LDP outer tunnel for the\n   same PW is allowed through the pwMplsOutboundTunnel.
    \ The current\n   tunnel that is used to forward traffic is indicated in the object\n
    \  pwMplsOutboundTunnelTypeInUse.\n   The PW-MPLS-STD-MIB module reports through
    the inbound table the XC\n   entry in the LDP-STD-MIB [RFC3815] of the PW that
    was signaled\n   through LDP.\n   This MIB module assumes that a PW can be associated
    to one MPLS-TE\n   tunnel at a time.  This tunnel may be composed of multiple
    instances\n   (i.e., LSP), each represented by a separate instance index.  The\n
    \  selection of the active LSP out of the possible LSPs in the tunnel is\n   out
    of the scope of this MIB module as it is part of the MPLS PSN\n   functionality.
    \ The current active LSP is reported through this MIB\n   module.\n   It is important
    to note that inbound (tunnel originated in the remote\n   PE) mapping is not configured
    or reported through the PW-MPLS-STD-\n   MIB module since the local PE does not
    know the inbound association\n   between specific PW and MPLS tunnels.\n"
  title: 6.  MIB Module Usage
- contents:
  - "7.  PW-MPLS-STD-MIB Example\n   The following example (supplement the example
    provided in [RFC5601])\n   assumes that the node has already established the LDP
    tunnel to the\n   peer node and that a PW has been configured in the pwTable in\n
    \  [RFC5601] with pwPsnType equal 'mpls'.\n   The agent creates an entry in pwMplsTable
    with the following\n   parameters:\n         pwMplsMplsType             mplsNonTe(1),
    -- LDP tunnel\n         pwMplsExpBitsMode          outerTunnel(1), -- Default\n
    \        pwMplsExpBits              0, -- Default\n         pwMplsTtl                  2,
    -- Default\n         pwMplsLocalLdpID           192.0.2.200:0,\n         pwMplsLocalLdpEntityIndex
    \ 1,\n         pwMplsPeerLdpID            192.0.2.5:0,\n         pwMplsStorageType
    \         nonVolatile(3)\n   The agent also creates an entry in pwMplsOutboundTable
    for reporting\n   the mapping of the PW on the LDP tunnel:\n         pwMplsOutboundLsrXcIndex
    \          100, - The XC number for the\n                                                 --
    LDP tunnel\n         pwMplsOutboundTunnelIndex          0, -- No TE tunnel\n         pwMplsOutboundTunnelInstance
    \      0, -- No TE tunnel\n         pwMplsOutboundTunnelLclLSR         0, -- No
    TE tunnel\n         pwMplsOutboundTunnelPeerLSR        0, -- No TE tunnel\n         pwMplsOutboundIfIndex
    \             0, -- Not applicable\n         pwMplsOutboundTunnelTypeInUse      mplsNonTe(3)\n
    \        The agent now creates entries for the PW in the following\n         tables:\n
    \        -  pwMplsInboundTable\n         -  pwMplsNonTeMappingTable (2 entries)\n
    \        To create an MPLS-TE tunnel to carry this PW, the operator\n         takes
    the following steps:\n   -  Set pwMplsMplsType in pwMplsTable to both mplsNonTe(1)
    and\n      mplsTe(0).\n   -  Set pwMplsOutboundTunnelIndex, pwMplsOutboundTunnelInstance,\n
    \     pwMplsOutboundTunnelLclLSR, and pwMplsOutboundTunnelPeerLSR in\n      pwMplsOutboundTable
    to the MPLS-TE tunnel that will carry this PW.\n   The agent will report the tunnel
    that the PW is currently using\n   through pwMplsOutboundTunnelTypeInUse, and
    will report the PW to\n   MPLS-TE tunnel/LSP mapping in pwMplsTeMappingTable.\n"
  title: 7.  PW-MPLS-STD-MIB Example
- contents:
  - "8.  Object Definitions\n   PW-MPLS-STD-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n
    \     MODULE-IDENTITY, OBJECT-TYPE, Unsigned32, mib-2\n         FROM SNMPv2-SMI
    \                  -- [RFC2578]\n      MODULE-COMPLIANCE, OBJECT-GROUP\n         FROM
    SNMPv2-CONF                  -- [RFC2580]\n      StorageType\n         FROM SNMPv2-TC
    \                   -- [RFC2579]\n      InterfaceIndexOrZero\n         FROM IF-MIB
    \                      -- [RFC2863]\n      MplsTunnelIndex, MplsTunnelInstanceIndex,\n
    \     MplsLdpIdentifier, MplsLsrIdentifier\n         FROM MPLS-TC-STD-MIB              --
    [RFC3811]\n      MplsIndexType\n         FROM MPLS-LSR-STD-MIB             --
    [RFC3813]\n      PwIndexType\n         FROM PW-TC-STD-MIB                -- [RFC5542]\n
    \     pwIndex                              -- [RFC5601]\n         FROM PW-STD-MIB\n
    \  ;\n   pwMplsStdMIB MODULE-IDENTITY\n      LAST-UPDATED \"200906120000Z\"  --
    \ 12 June 2009 00:00:00 GMT\n      ORGANIZATION \"Pseudowire Emulation Edge-to-Edge
    (PWE3) Working\n                    Group.\"\n      CONTACT-INFO\n          \"\n
    \          David Zelig, Editor\n           Email: davidz@corrigent.com\n           Thomas
    D. Nadeau, Editor\n           Email:  tom.nadeau@bt.com\n           The PWE3 Working
    Group (email distribution pwe3@ietf.org,\n           http://www.ietf.org/html.charters/pwe3-charter.html)\n
    \         \"\n      DESCRIPTION\n          \"This MIB module complements the PW-STD-MIB
    module for PW\n           operation over MPLS.\n           Copyright (c) 2009
    IETF Trust and the persons identified as\n           authors of the code.  All
    rights reserved.\n           Redistribution and use in source and binary forms,
    with or\n           without modification, are permitted provided that the\n           following
    conditions are met:\n           - Redistributions of source code must retain the
    above\n             copyright notice, this list of conditions and the\n             following
    disclaimer.\n           - Redistributions in binary form must reproduce the above\n
    \            copyright notice, this list of conditions and the following\n             disclaimer
    in the documentation and/or other materials\n             provided with the distribution.\n
    \          - Neither the name of Internet Society, IETF or IETF Trust,\n             nor
    the names of specific contributors, may be used to\n             endorse or promote
    products derived from this software\n             without specific prior written
    permission.\n           THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n
    \          CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n           INCLUDING,
    BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n           MERCHANTABILITY AND
    FITNESS FOR A PARTICULAR PURPOSE ARE\n           DISCLAIMED.  IN NO EVENT SHALL
    THE COPYRIGHT OWNER OR\n           CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL,\n           SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT\n           NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n
    \          LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n           HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n           CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n           OTHERWISE) ARISING IN
    ANY WAY OUT OF THE USE OF THIS\n           SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
    OF SUCH DAMAGE.\n           This version of this MIB module is part of RFC 5602;\n
    \          see the RFC itself for full legal notices.\n          \"\n      --
    Revision history.\n       REVISION \"200906120000Z\"  -- 12 June 2009 00:00:00
    GMT\n       DESCRIPTION\n           \"First published as RFC 5602. \"\n     ::=
    { mib-2 181 }\n   -- Top-level components of this MIB.\n    -- Notifications\n
    \   pwMplsNotifications OBJECT IDENTIFIER\n                                  ::=
    { pwMplsStdMIB 0 }\n   -- Tables, Scalars\n   pwMplsObjects       OBJECT IDENTIFIER\n
    \                                ::= { pwMplsStdMIB 1 }\n   -- Conformance\n   pwMplsConformance
    \  OBJECT IDENTIFIER\n                                 ::= { pwMplsStdMIB 2 }\n
    \  -- PW MPLS table\n   pwMplsTable   OBJECT-TYPE\n      SYNTAX        SEQUENCE
    OF PwMplsEntry\n      MAX-ACCESS    not-accessible\n      STATUS        current\n
    \     DESCRIPTION\n          \"This table controls MPLS-specific parameters when
    the PW is\n           going to be carried over MPLS PSN.\"\n      ::= { pwMplsObjects
    1 }\n   pwMplsEntry   OBJECT-TYPE\n      SYNTAX        PwMplsEntry\n      MAX-ACCESS
    \   not-accessible\n      STATUS        current\n      DESCRIPTION\n           \"A
    row in this table represents parameters specific to MPLS\n            PSN for
    a pseudowire (PW).  The row is created\n            automatically by the local
    agent if the pwPsnType is\n            mpls(1).  It is indexed by pwIndex, which
    uniquely\n            identifies a singular PW.\n            Manual entries in
    this table SHOULD be preserved after a\n            reboot, and the agent MUST
    ensure the integrity of those\n            entries.\n            If the set of
    entries of a specific row were found to be\n            nonconsistent after reboot,
    the PW pwOperStatus MUST be\n            declared as down(2).\n            Any
    read-write object in this table MAY be changed at any\n            time; however,
    change of some objects (for example,\n            pwMplsMplsType) during PW forwarding
    state MAY cause traffic\n            disruption.\"\n      INDEX  { pwIndex }\n
    \        ::= { pwMplsTable 1 }\n   PwMplsEntry ::= SEQUENCE {\n         pwMplsMplsType
    \            BITS,\n         pwMplsExpBitsMode          INTEGER,\n         pwMplsExpBits
    \             Unsigned32,\n         pwMplsTtl                  Unsigned32,\n         pwMplsLocalLdpID
    \          MplsLdpIdentifier,\n         pwMplsLocalLdpEntityIndex  Unsigned32,\n
    \        pwMplsPeerLdpID            MplsLdpIdentifier,\n         pwMplsStorageType
    \         StorageType\n      }\n   pwMplsMplsType OBJECT-TYPE\n      SYNTAX   BITS
    {\n          mplsTe    (0),\n          mplsNonTe (1),\n          pwOnly    (2)\n
    \              }\n      MAX-ACCESS    read-write\n      STATUS        current\n
    \     DESCRIPTION\n           \"This object is set by the operator to indicate
    the outer\n            tunnel types, if existing.  mplsTe(0) is used if the outer\n
    \           tunnel is set up by MPLS-TE, and mplsNonTe(1) is used if the\n            outer
    tunnel is set up by LDP or manually.  A combination of\n            mplsTe(0)
    and mplsNonTe(1) MAY exist.\n            pwOnly(2) is used if there is no outer
    tunnel label, i.e.,\n            in static provisioning without an MPLS tunnel.
    \ pwOnly(2)\n            cannot be combined with mplsNonTe(1) or mplsTe(0).\n
    \           An implementation that can identify automatically that the\n            peer
    node is directly connected MAY support the bit\n            pwOnly(2) as read-only.\n
    \          \"\n      DEFVAL { { mplsNonTe } }\n      ::= { pwMplsEntry 1 }\n   pwMplsExpBitsMode
    OBJECT-TYPE\n      SYNTAX   INTEGER {\n          outerTunnel      (1),\n          specifiedValue
    \  (2),\n          serviceDependant (3)\n               }\n      MAX-ACCESS    read-write\n
    \     STATUS        current\n      DESCRIPTION\n          \"This object is set
    by the operator to determine the PW shim\n           label EXP bits.  The value
    of outerTunnel(1) is used where\n           there is an outer tunnel -- pwMplsMplsType
    equals to\n           mplsTe(0) or mplsNonTe(1).  Note that in this case, there\n
    \          is no need to mark the PW label with the EXP bits, since the\n           PW
    label is not visible to the intermediate nodes.\n           If there is no outer
    tunnel, specifiedValue(2) SHOULD be used\n           to indicate that the value
    is specified by pwMplsExpBits.\n           Setting serviceDependant(3) indicates
    that the EXP bits are\n           set based on a rule that is implementation specific.\"\n
    \     DEFVAL { outerTunnel }\n      ::= { pwMplsEntry 2 }\n   pwMplsExpBits OBJECT-TYPE\n
    \     SYNTAX        Unsigned32 (0..7)\n      MAX-ACCESS    read-write\n      STATUS
    \       current\n      DESCRIPTION\n           \"This object is set by the operator
    if pwMplsExpBitsMode is\n            set to specifiedValue(2) to indicate the
    MPLS EXP bits to\n            be used on the PW shim label.  Otherwise, it SHOULD
    be set\n            to zero.\"\n      DEFVAL { 0 }\n      ::= { pwMplsEntry 3
    }\n   pwMplsTtl OBJECT-TYPE\n      SYNTAX        Unsigned32 (0..255)\n      MAX-ACCESS
    \   read-write\n      STATUS        current\n      DESCRIPTION\n           \"This
    object is set by the operator to indicate the PW TTL\n            value to be
    used on the PW shim label.\"\n      DEFVAL { 2 }\n      ::= { pwMplsEntry 4 }\n
    \  pwMplsLocalLdpID OBJECT-TYPE\n      SYNTAX        MplsLdpIdentifier\n      MAX-ACCESS
    \   read-write\n      STATUS        current\n      DESCRIPTION\n           \"The
    LDP identifier of the LDP entity that creates\n            this PW in the local
    node.  As the PW labels are always\n            set from the per-platform label
    space, the last two octets\n            in the LDP ID MUST always both be zeros.\"\n
    \     REFERENCE\n           \"'LDP specifications', RFC 3036, section 2.2.2.\"\n
    \     ::= { pwMplsEntry 5 }\n   pwMplsLocalLdpEntityIndex OBJECT-TYPE\n      SYNTAX
    \       Unsigned32 (1..4294967295)\n      MAX-ACCESS    read-write\n      STATUS
    \       current\n      DESCRIPTION\n           \"The local node LDP Entity Index
    of the LDP entity creating\n            this PW.\"\n      ::= { pwMplsEntry 6
    }\n   pwMplsPeerLdpID OBJECT-TYPE\n      SYNTAX        MplsLdpIdentifier\n      MAX-ACCESS
    \   read-only\n      STATUS        current\n      DESCRIPTION\n           \"The
    peer LDP identifier of the LDP session.  This object\n            SHOULD return
    the value zero if LDP is not used or if the\n            value is not yet known.\"\n
    \     ::= { pwMplsEntry 7 }\n   pwMplsStorageType OBJECT-TYPE\n      SYNTAX        StorageType\n
    \     MAX-ACCESS    read-write\n      STATUS        current\n      DESCRIPTION\n
    \         \"This variable indicates the storage type for this row.\"\n      DEFVAL
    { nonVolatile }\n      ::= { pwMplsEntry 8 }\n   -- End of PW MPLS Table\n   --
    Pseudowire MPLS Outbound Tunnel Table\n   pwMplsOutboundTable   OBJECT-TYPE\n
    \     SYNTAX        SEQUENCE OF PwMplsOutboundEntry\n      MAX-ACCESS    not-accessible\n
    \     STATUS        current\n      DESCRIPTION\n          \"This table reports
    and configures the current outbound MPLS\n           tunnels (i.e., toward the
    PSN) or the physical interface in\n           the case of a PW label only that
    carries the PW traffic.  It\n           also reports the current outer tunnel
    and LSP that forward\n           the PW traffic.\"\n      ::= { pwMplsObjects
    2 }\n   pwMplsOutboundEntry OBJECT-TYPE\n      SYNTAX        PwMplsOutboundEntry\n
    \     MAX-ACCESS    not-accessible\n      STATUS        current\n      DESCRIPTION\n
    \         \"A row in this table configures the outer tunnel used for\n           carrying
    the PW traffic toward the PSN.\n           In the case of PW label only, it configures
    the interface\n           that will carry the PW traffic.\n           An entry
    in this table augments the pwMplsEntry, and is\n           created automatically
    when the corresponding row has been\n           created by the agent in the pwMplsEntry.\n
    \          This table points to the appropriate MPLS MIB module:\n           In
    the MPLS-TE case, the three objects relevant to the\n           indexing of a
    TE tunnel head-end (as used in the\n           MPLS-TE-STD-MIB) are to be configured,
    and the tunnel\n           instance indicates the LSP that is currently in use
    for\n           forwarding the traffic.\n           In the case of signaled non-TE
    MPLS (an outer tunnel label\n           assigned by LDP), the table points to
    the XC entry in the\n           LSR-STD-MIB.  If the non-TE MPLS tunnel is manually\n
    \          configured, the operator configures the XC pointer to this\n           tunnel.\n
    \          In the case of PW label only (no outer tunnel), the ifIndex\n           of
    the port to carry the PW is configured here.\n           It is possible to associate
    a PW to one TE tunnel head-end\n           and a non-TE tunnel together.  An indication
    in this table\n           will report the currently active one.  In addition,
    in the\n           TE case, the table reports the active tunnel instance\n           (i.e.,
    the specific LSP in use).\n           Any read-write object in this table MAY
    be changed at any\n           time; however, change of some objects (for example,\n
    \          MPLS-TE indexes) during PW forwarding state MAY cause traffic\n           disruption.\"\n
    \     AUGMENTS { pwMplsEntry }\n         ::= { pwMplsOutboundTable 1 }\n   PwMplsOutboundEntry
    ::= SEQUENCE {\n         pwMplsOutboundLsrXcIndex           MplsIndexType,\n         pwMplsOutboundTunnelIndex
    \         MplsTunnelIndex,\n         pwMplsOutboundTunnelInstance       MplsTunnelInstanceIndex,\n
    \        pwMplsOutboundTunnelLclLSR         MplsLsrIdentifier,\n         pwMplsOutboundTunnelPeerLSR
    \       MplsLsrIdentifier,\n         pwMplsOutboundIfIndex              InterfaceIndexOrZero,\n
    \        pwMplsOutboundTunnelTypeInUse      INTEGER\n         }\n   pwMplsOutboundLsrXcIndex
    \     OBJECT-TYPE\n      SYNTAX        MplsIndexType\n      MAX-ACCESS    read-write\n
    \     STATUS        current\n      DESCRIPTION\n          \"This object is applicable
    if the pwMplsMplsType mplsNonTe(1)\n           bit is set, and MUST return a value
    of zero otherwise.\n           If the outer tunnel is signaled, the object is
    read-only\n           and indicates the XC index in the MPLS-LSR-STD-MIB of the\n
    \          outer tunnel toward the peer.  Otherwise (tunnel is set up\n           manually),
    the operator defines the XC index of the manually\n           created outer tunnel
    through this object.\n          \"\n      ::= { pwMplsOutboundEntry 1 }\n   pwMplsOutboundTunnelIndex
    \        OBJECT-TYPE\n      SYNTAX        MplsTunnelIndex\n      MAX-ACCESS    read-write\n
    \     STATUS        current\n      DESCRIPTION\n          \"This object is applicable
    if the pwMplsMplsType mplsTe(0)\n           bit is set, and MUST return a value
    of zero otherwise.\n           It is part of the set of indexes for the outbound
    tunnel.\n           The operator sets this object to represent the desired\n           tunnel
    head-end toward the peer for carrying the PW\n           traffic.\n          \"\n
    \     ::= { pwMplsOutboundEntry  2 }\n   pwMplsOutboundTunnelInstance      OBJECT-TYPE\n
    \     SYNTAX        MplsTunnelInstanceIndex\n      MAX-ACCESS    read-only\n      STATUS
    \       current\n      DESCRIPTION\n          \"This object is applicable if the
    pwMplsMplsType mplsTe(0)\n           bit is set, and MUST return a value of zero
    otherwise.\n           It indicates the actual tunnel instance that is currently\n
    \          active and carrying the PW traffic.  It SHOULD return the\n           value
    zero if the information from the MPLS-TE\n           application is not yet known.\n
    \         \"\n      ::= { pwMplsOutboundEntry   3 }\n   pwMplsOutboundTunnelLclLSR
    \       OBJECT-TYPE\n      SYNTAX        MplsLsrIdentifier\n      MAX-ACCESS    read-write\n
    \     STATUS        current\n      DESCRIPTION\n          \"This object is applicable
    if the pwMplsMplsType mplsTe(0)\n           bit is set, and MUST return a value
    of all zeros otherwise.\n           It is part of the set of indexes for the outbound
    tunnel.\n           The operator sets this object to represent the desired\n           tunnel
    head-end toward the peer for carrying the PW\n           traffic.\n          \"\n
    \     ::= { pwMplsOutboundEntry   4 }\n   pwMplsOutboundTunnelPeerLSR       OBJECT-TYPE\n
    \     SYNTAX        MplsLsrIdentifier\n      MAX-ACCESS    read-write\n      STATUS
    \       current\n      DESCRIPTION\n          \"This object is applicable if the
    pwMplsMplsType mplsTe(0)\n           bit is set, and MUST return a value of zero
    otherwise.\n           It is part of the set of indexes for the outbound tunnel.\n
    \          Note that in most cases, it equals to pwPeerAddr.\n          \"\n      ::=
    { pwMplsOutboundEntry   5 }\n   pwMplsOutboundIfIndex       OBJECT-TYPE\n      SYNTAX
    \        InterfaceIndexOrZero\n      MAX-ACCESS     read-write\n      STATUS         current\n
    \     DESCRIPTION\n          \"This object is applicable if the pwMplsMplsType
    pwOnly(0)\n           bit is set, and MUST return a value of zero otherwise.\n
    \          The operator configures the ifIndex of the outbound port\n           in
    this case.\n          \"\n      ::= { pwMplsOutboundEntry   6 }\n   pwMplsOutboundTunnelTypeInUse
    OBJECT-TYPE\n      SYNTAX         INTEGER {\n                     notYetKnown
    (1),\n                     mplsTe      (2),\n                     mplsNonTe   (3),\n
    \                    pwOnly      (4)\n      }\n      MAX-ACCESS     read-only\n
    \     STATUS         current\n      DESCRIPTION\n          \"This object indicates
    the current tunnel that is carrying\n           the PW traffic.\n           The
    value of notYetKnown(1) should be used if the agent is\n           currently unable
    to determine which tunnel or interface is\n           carrying the PW, for example,
    because both tunnels are in\n           operational status down.\n          \"\n
    \     ::= { pwMplsOutboundEntry   7 }\n   -- End of PW MPLS Outbound Tunnel table\n
    \  -- PW MPLS inbound table\n   pwMplsInboundTable OBJECT-TYPE\n      SYNTAX           SEQUENCE
    OF PwMplsInboundEntry\n      MAX-ACCESS       not-accessible\n      STATUS           current\n
    \     DESCRIPTION\n          \"This table indicates the PW LDP XC entry in the\n
    \          MPLS-LSR-STD-MIB for signaled PWs.\n          \"\n      ::= { pwMplsObjects
    3 }\n   pwMplsInboundEntry OBJECT-TYPE\n      SYNTAX           PwMplsInboundEntry\n
    \     MAX-ACCESS       not-accessible\n      STATUS           current\n      DESCRIPTION\n
    \          \"A row in this table is created by the agent\n            for each
    signaled PW, and shows the XC index related to\n            the PW signaling in
    the inbound direction in the\n            MPLS-LSR-STD-MIB that controls and display
    the information\n            for all the LDP signaling processes in the local
    node.\n           \"\n      INDEX  { pwIndex }\n         ::= { pwMplsInboundTable
    1 }\n   PwMplsInboundEntry ::= SEQUENCE {\n         pwMplsInboundXcIndex           MplsIndexType\n
    \     }\n   pwMplsInboundXcIndex OBJECT-TYPE\n      SYNTAX        MplsIndexType\n
    \     MAX-ACCESS    read-only\n      STATUS        current\n      DESCRIPTION\n
    \         \"The XC index representing this PW in the inbound\n           direction.
    \ It MUST return the value zero if the\n           information is not yet known.\"\n
    \     ::= { pwMplsInboundEntry 1 }\n   -- End of PW MPLS inbound table\n   --
    PW to Non-TE mapping Table.\n   pwMplsNonTeMappingTable OBJECT-TYPE\n      SYNTAX
    \          SEQUENCE OF PwMplsNonTeMappingEntry\n      MAX-ACCESS       not-accessible\n
    \     STATUS           current\n      DESCRIPTION\n          \"This table indicates
    the PW association to the outbound\n           tunnel in non-TE applications,
    maps the PW to its (inbound)\n           XC entry, and indicates the PW-to-physical
    interface mapping\n           for a PW without an outer tunnel.\n          \"\n
    \     ::= { pwMplsObjects 4 }\n   pwMplsNonTeMappingEntry OBJECT-TYPE\n      SYNTAX
    \          PwMplsNonTeMappingEntry\n      MAX-ACCESS       not-accessible\n      STATUS
    \          current\n      DESCRIPTION\n           \"A row in this table displays
    the association\n            between the PW and\n            - its non-TE MPLS
    outbound outer tunnel,\n            - its XC entry in the MPLS-LSR-STD-MIB, or\n
    \           - its physical interface if there is no outer tunnel\n              (PW
    label only) and manual configuration.\n            Rows are created in this table
    by the agent depending on\n            the setting of pwMplsMplsType:\n            -
    If the pwMplsMplsType mplsNonTe(1) bit is set, the agent\n            creates
    a row for the outbound direction\n            (pwMplsNonTeMappingDirection set
    to psnBound(1)).\n            The pwMplsNonTeMappingXcIndex holds the XC index
    in the\n            MPLS-LSR-STD-MIB of the PSN-bound outer tunnel.\n            pwMplsNonTeMappingIfIndex
    MUST be zero for this row.\n            - If the pwMplsMplsType pwOnly(2) bit
    is set, the agent\n            creates a row for the outbound direction\n            (pwMplsNonTeMappingDirection
    set to psnBound(1)).\n            The pwMplsNonTeMappingIfIndex holds the ifIndex
    of the\n            physical port this PW will use in the outbound direction.\n
    \           pwMplsNonTeMappingXcIndex MUST be zero for this row.\n            -
    If the PW has been set up by a signaling protocol (i.e.,\n            pwOwner
    equal pwIdFecSignaling(2) or\n            genFecSignaling(3)), the agent creates
    a row for the\n            inbound direction (pwMplsNonTeMappingDirection set
    to\n            fromPsn(2)).\n            The pwMplsNonTeMappingXcIndex holds
    the XC index in the\n            MPLS-LSR-STD-MIB of the PW LDP-generated XC entry.\n
    \           pwMplsNonTeMappingIfIndex MUST be zero for this row.\n            An
    application can use this table to quickly retrieve the\n            PW carried
    over specific non-TE MPLS outer tunnel or\n            physical interface.\n            \"\n
    \     INDEX  { pwMplsNonTeMappingDirection,\n               pwMplsNonTeMappingXcIndex,\n
    \              pwMplsNonTeMappingIfIndex,\n               pwMplsNonTeMappingPwIndex
    }\n         ::= { pwMplsNonTeMappingTable 1 }\n   PwMplsNonTeMappingEntry ::=
    SEQUENCE {\n         pwMplsNonTeMappingDirection         INTEGER,\n         pwMplsNonTeMappingXcIndex
    \          MplsIndexType,\n         pwMplsNonTeMappingIfIndex           InterfaceIndexOrZero,\n
    \        pwMplsNonTeMappingPwIndex           PwIndexType\n      }\n   pwMplsNonTeMappingDirection
    OBJECT-TYPE\n      SYNTAX        INTEGER {\n                    psnBound (1),\n
    \                   fromPsn  (2)\n      }\n      MAX-ACCESS    not-accessible\n
    \     STATUS        current\n      DESCRIPTION\n          \"Index for the conceptual
    XC row identifying the tunnel-to-PW\n           mappings, indicating the direction
    of the packet flow for\n           this entry.\n           psnBound(1) indicates
    that the entry is related to\n           packets toward the PSN.\n           fromPsn(2)
    indicates that the entry is related to\n           packets coming from the PSN.\n
    \         \"\n      ::= { pwMplsNonTeMappingEntry 1 }\n   pwMplsNonTeMappingXcIndex
    OBJECT-TYPE\n      SYNTAX        MplsIndexType\n      MAX-ACCESS    not-accessible\n
    \     STATUS        current\n      DESCRIPTION\n          \"See the description
    clause of pwMplsNonTeMappingEntry for\n           the usage guidelines of this
    object.\"\n      ::= { pwMplsNonTeMappingEntry 2 }\n   pwMplsNonTeMappingIfIndex
    \ OBJECT-TYPE\n      SYNTAX        InterfaceIndexOrZero\n      MAX-ACCESS    not-accessible\n
    \     STATUS        current\n      DESCRIPTION\n          \"See the description
    clause of pwMplsNonTeMappingEntry for\n           the usage guidelines of this
    object.\"\n      ::= { pwMplsNonTeMappingEntry 3 }\n   pwMplsNonTeMappingPwIndex
    \ OBJECT-TYPE\n      SYNTAX        PwIndexType\n      MAX-ACCESS    read-only\n
    \     STATUS        current\n      DESCRIPTION\n          \"The value that represents
    the PW in the pwTable.\"\n      ::= { pwMplsNonTeMappingEntry 4 }\n   -- End of
    PW to Non-TE mapping Table.\n   -- PW to TE MPLS tunnels mapping Table.\n   pwMplsTeMappingTable
    OBJECT-TYPE\n      SYNTAX           SEQUENCE OF PwMplsTeMappingEntry\n      MAX-ACCESS
    \      not-accessible\n      STATUS           current\n      DESCRIPTION\n          \"This
    table reports the PW association to the\n           outbound MPLS tunnel for MPLS-TE
    applications.\"\n      ::= { pwMplsObjects 5 }\n   pwMplsTeMappingEntry OBJECT-TYPE\n
    \     SYNTAX           PwMplsTeMappingEntry\n      MAX-ACCESS       not-accessible\n
    \     STATUS           current\n      DESCRIPTION\n           \"A row in this
    table represents the association\n            between a PW and its MPLS-TE outer
    (head-end) tunnel.\n            An application can use this table to quickly retrieve
    the\n            list of the PWs that are configured on a specific MPLS-TE\n            outer
    tunnel.\n            The pwMplsTeMappingTunnelInstance reports the actual\n            LSP
    out of the tunnel head-end that is currently\n            forwarding the traffic.\n
    \           The table is indexed by the head-end indexes of a TE\n            tunnel
    and the PW index.\n           \"\n      INDEX  { pwMplsTeMappingTunnelIndex,\n
    \              pwMplsTeMappingTunnelInstance,\n               pwMplsTeMappingTunnelPeerLsrID,\n
    \              pwMplsTeMappingTunnelLocalLsrID,\n               pwMplsTeMappingPwIndex
    }\n         ::= { pwMplsTeMappingTable 1 }\n   PwMplsTeMappingEntry ::= SEQUENCE
    {\n         pwMplsTeMappingTunnelIndex       MplsTunnelIndex,\n         pwMplsTeMappingTunnelInstance
    \   MplsTunnelInstanceIndex,\n         pwMplsTeMappingTunnelPeerLsrID   MplsLsrIdentifier,\n
    \        pwMplsTeMappingTunnelLocalLsrID  MplsLsrIdentifier,\n         pwMplsTeMappingPwIndex
    \          PwIndexType\n      }\n   pwMplsTeMappingTunnelIndex OBJECT-TYPE\n      SYNTAX
    \       MplsTunnelIndex\n      MAX-ACCESS    not-accessible\n      STATUS        current\n
    \     DESCRIPTION\n          \"Primary index for the conceptual row identifying
    the\n           MPLS-TE tunnel that is carrying the PW traffic.\"\n      ::= {
    pwMplsTeMappingEntry 1 }\n   pwMplsTeMappingTunnelInstance OBJECT-TYPE\n      SYNTAX
    \       MplsTunnelInstanceIndex\n      MAX-ACCESS    not-accessible\n      STATUS
    \       current\n      DESCRIPTION\n          \"This object identifies the MPLS-TE
    LSP that is carrying the\n           PW traffic.  It MUST return the value zero
    if the\n           information of the specific LSP is not yet known.\n           Note
    that based on the recommendation in the\n           MPLS-TC-STD-MIB, instance
    index 0 should refer to the\n           configured tunnel interface.\"\n      ::=
    { pwMplsTeMappingEntry 2 }\n   pwMplsTeMappingTunnelPeerLsrID  OBJECT-TYPE\n      SYNTAX
    \       MplsLsrIdentifier\n      MAX-ACCESS    not-accessible\n      STATUS        current\n
    \     DESCRIPTION\n          \"This object identifies the peer LSR when the outer
    tunnel\n           is MPLS-TE.\"\n      ::= { pwMplsTeMappingEntry 3 }\n   pwMplsTeMappingTunnelLocalLsrID
    \ OBJECT-TYPE\n      SYNTAX        MplsLsrIdentifier\n      MAX-ACCESS    not-accessible\n
    \     STATUS        current\n      DESCRIPTION\n          \"This object identifies
    the local LSR.\"\n      ::= { pwMplsTeMappingEntry 4 }\n   pwMplsTeMappingPwIndex
    \ OBJECT-TYPE\n      SYNTAX        PwIndexType\n      MAX-ACCESS    read-only\n
    \     STATUS        current\n      DESCRIPTION\n          \"This object returns
    the value that represents the PW in the\n           pwTable.\"\n      ::= { pwMplsTeMappingEntry
    5 }\n   -- End of PW to TE MPLS tunnels mapping Table.\n   -- conformance information\n
    \  pwMplsGroups      OBJECT IDENTIFIER ::= { pwMplsConformance 1 }\n   pwMplsCompliances
    OBJECT IDENTIFIER ::= { pwMplsConformance 2 }\n   -- Compliance requirement for
    fully compliant implementations.\n   pwMplsModuleFullCompliance MODULE-COMPLIANCE\n
    \      STATUS  current\n       DESCRIPTION\n               \"The compliance statement
    for agents that provide full\n                support for the PW-MPLS-STD-MIB
    module.  Such devices\n                can then be monitored and also be configured
    using\n                this MIB module.\"\n      MODULE  -- this module\n      MANDATORY-GROUPS
    { pwMplsGroup,\n                         pwMplsOutboundMainGroup,\n                         pwMplsInboundGroup,\n
    \                        pwMplsMappingGroup\n                        }\n      GROUP
    \       pwMplsOutboundTeGroup\n      DESCRIPTION \"This group MUST be supported
    if the implementation\n                   allows MPLS-TE tunnels to carry PW traffic.\n
    \                  \"\n      OBJECT       pwMplsMplsType\n      DESCRIPTION \"Support
    of pwOnly(2) is not required.  At least one\n                   of mplsTe(0) or
    mplsNonTe(1) MUST be supported if\n                   signaling of PW is supported.\n
    \                  \"\n      OBJECT       pwMplsExpBitsMode\n      DESCRIPTION
    \"Support of specifiedValue(2) and\n                   serviceDependant(3) is
    optional.\n                   \"\n      OBJECT       pwMplsLocalLdpID\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"A read-write access is required if the\n                   implementation
    supports more than one LDP entity\n                   identifier for PW signaling.\n
    \                  \"\n      OBJECT       pwMplsLocalLdpEntityIndex\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"A read-write access is required if the\n                   implementation
    supports more than one LDP entity\n                   index for PW signaling.\n
    \                  \"\n      OBJECT       pwMplsOutboundLsrXcIndex\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"A value other than zero MUST be supported if
    the\n                   implementation supports non-TE signaling of the\n                   outer
    tunnel.\n                   A read-write access MUST be supported if the\n                   implementation
    supports PW label manual setting\n                   and carrying them over non-TE
    tunnels.\n                   \"\n      OBJECT       pwMplsOutboundIfIndex\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"A value other than zero and read-write operations\n
    \                  MUST be supported if the implementation supports\n                   manually
    configured PW without MPLS outer tunnel.\n                   \"\n       ::= {
    pwMplsCompliances 1 }\n   -- Compliance requirement for Read Only compliant implementations.\n
    \  pwMplsModuleReadOnlyCompliance MODULE-COMPLIANCE\n       STATUS  current\n
    \      DESCRIPTION\n               \"The compliance statement for agents that
    provide read-\n                only support for the PW-MPLS-STD-MIB module.  Such\n
    \               devices can then be monitored but cannot be configured\n                using
    this MIB module.\"\n      MODULE  -- this module\n      MANDATORY-GROUPS { pwMplsGroup,\n
    \                        pwMplsOutboundMainGroup,\n                         pwMplsInboundGroup,\n
    \                        pwMplsMappingGroup\n                        }\n      GROUP
    \       pwMplsOutboundTeGroup\n      DESCRIPTION \"This group MUST be supported
    if the implementation\n                   allows MPLS-TE tunnels to carry PW traffic.\n
    \                  \"\n      OBJECT       pwMplsMplsType\n      MIN-ACCESS   read-only\n
    \     DESCRIPTION \"Write access is not required.\n                   Support
    of pwOnly(2) is not required.  At least one\n                   of mplsTe(0) or
    mplsNonTe(1) MUST be supported if\n                   signaling of PW is supported.\n
    \                  \"\n      OBJECT       pwMplsExpBitsMode\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"Write access is not required.\n                   Support
    of specifiedValue(2) and serviceDependant(3)\n                   is optional.\n
    \                  \"\n      OBJECT       pwMplsExpBits\n      MIN-ACCESS   read-only\n
    \     DESCRIPTION \"Write access is not required.\n                   \"\n      OBJECT
    \      pwMplsTtl\n      MIN-ACCESS   read-only\n      DESCRIPTION \"Write access
    is not required.\n                   \"\n      OBJECT       pwMplsLocalLdpID\n
    \     MIN-ACCESS   read-only\n      DESCRIPTION \"Write access is not required.\n
    \                  \"\n      OBJECT       pwMplsLocalLdpEntityIndex\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"Write access is not required.\n                   \"\n
    \     OBJECT       pwMplsStorageType\n      MIN-ACCESS   read-only\n      DESCRIPTION
    \"Write access is not required.\n                   \"\n      OBJECT       pwMplsOutboundLsrXcIndex\n
    \     MIN-ACCESS   read-only\n      DESCRIPTION \"Write access is not required.\n
    \                  A value other than zero MUST be supported if the\n                   implementation
    supports non-TE signaling of the\n                   outer tunnel.\n                   \"\n
    \     OBJECT       pwMplsOutboundTunnelIndex\n      MIN-ACCESS   read-only\n      DESCRIPTION
    \"Write access is not required.\n                   \"\n      OBJECT       pwMplsOutboundTunnelLclLSR\n
    \     MIN-ACCESS   read-only\n      DESCRIPTION \"Write access is not required.\n
    \                  \"\n      OBJECT       pwMplsOutboundTunnelPeerLSR\n      MIN-ACCESS
    \  read-only\n      DESCRIPTION \"Write access is not required.\n                   \"\n
    \     OBJECT       pwMplsOutboundIfIndex\n      MIN-ACCESS   read-only\n      DESCRIPTION
    \"Write access is not required.\n                   A value other than zero MUST
    be supported if the\n                   implementation supports manually configured
    PW\n                   without MPLS outer tunnel.\n                   \"\n       ::=
    { pwMplsCompliances 2 }\n   -- Units of conformance.\n   pwMplsGroup OBJECT-GROUP\n
    \     OBJECTS {\n               pwMplsMplsType,\n               pwMplsExpBitsMode,\n
    \              pwMplsExpBits,\n               pwMplsTtl,\n               pwMplsLocalLdpID,\n
    \              pwMplsLocalLdpEntityIndex,\n               pwMplsPeerLdpID,\n               pwMplsStorageType\n
    \            }\n      STATUS  current\n      DESCRIPTION\n          \"Collection
    of objects needed for PW over MPLS PSN\n           configuration.\"\n      ::=
    { pwMplsGroups 1 }\n   pwMplsOutboundMainGroup OBJECT-GROUP\n      OBJECTS {\n
    \              pwMplsOutboundLsrXcIndex,\n               pwMplsOutboundIfIndex,\n
    \              pwMplsOutboundTunnelTypeInUse\n             }\n      STATUS  current\n
    \     DESCRIPTION\n          \"Collection of objects needed for outbound association
    of\n           PW and MPLS tunnel.\"\n      ::= { pwMplsGroups 2 }\n   pwMplsOutboundTeGroup
    OBJECT-GROUP\n      OBJECTS {\n               pwMplsOutboundTunnelIndex,\n               pwMplsOutboundTunnelInstance,\n
    \              pwMplsOutboundTunnelLclLSR,\n               pwMplsOutboundTunnelPeerLSR\n
    \            }\n      STATUS  current\n      DESCRIPTION\n          \"Collection
    of objects needed for outbound association of\n           PW and MPLS-TE tunnel.\"\n
    \     ::= { pwMplsGroups 3 }\n   pwMplsInboundGroup OBJECT-GROUP\n      OBJECTS
    {\n               pwMplsInboundXcIndex\n             }\n      STATUS  current\n
    \     DESCRIPTION\n          \"Collection of objects needed for inbound PW presentation.\n
    \          This group MUST be supported if PW signaling through LDP is\n           used.\"\n
    \     ::= { pwMplsGroups 4 }\n   pwMplsMappingGroup OBJECT-GROUP\n      OBJECTS
    {\n               pwMplsNonTeMappingPwIndex,\n               pwMplsTeMappingPwIndex\n
    \            }\n      STATUS  current\n      DESCRIPTION\n          \"Collection
    of objects needed for mapping association of\n           PW and MPLS tunnel.\"\n
    \     ::= { pwMplsGroups 5 }\n   END\n"
  title: 8.  Object Definitions
- contents:
  - "9.  Security Considerations\n   It is clear that this MIB module is potentially
    useful for monitoring\n   PW-capable PEs.  This MIB module can also be used for
    configuration\n   of certain objects, and anything that can be configured can
    be\n   incorrectly configured, with potentially disastrous results.\n   There
    are number of management objects defined in this MIB module\n   with a MAX-ACCESS
    clause of read-write and/or read-create.  Such\n   objects may be considered sensitive
    or vulnerable in some network\n   environments.  The support for SET operations
    in a non-secure\n   environment without proper protection can have a negative
    effect on\n   network operations.  These are the tables and objects and their\n
    \  sensitivity/vulnerability:\n   o  the pwMplsTable, pwMplsNonTeMappingTable
    and pwMplsTeMappingTable\n      collectively contain objects to provision PW over
    MPLS tunnels.\n      Unauthorized access to objects in these tables, could result
    in\n      disruption of traffic on the network.  The use of stronger\n      mechanisms
    such as SNMPv3 security should be considered where\n      possible.  Specifically,
    SNMPv3 VACM and USM MUST be used with any\n      v3 agent which implements this
    MIB module.  Administrators should\n      consider whether read access to these
    objects should be allowed,\n      since read access may be undesirable under certain
    circumstances.\n   Some of the readable objects in this MIB module (i.e., objects
    with a\n   MAX-ACCESS other than not-accessible) may be considered sensitive or\n
    \  vulnerable in some network environments.  It is thus important to\n   control
    even GET and/or NOTIFY access to these objects and possibly\n   to even encrypt
    the values of these objects when sending them over\n   the network via SNMP.  These
    are the tables and objects and their\n   sensitivity/vulnerability:\n   o  the
    pwMplsTable, pwMplsNonTeMappingTable, pwMplsTeMappingTable and\n      pwMplsOutboundTable
    collectively show the PW over MPLS\n      association.  If an Administrator does
    not want to reveal this\n      information, then these tables should be considered
    sensitive/\n      vulnerable.\n   SNMP versions prior to SNMPv3 did not include
    adequate security.\n   Even if the network itself is secure (for example by using
    IPsec),\n   even then, there is no control as to who on the secure network is\n
    \  allowed to access and GET/SET (read/change/create/delete) the objects\n   in
    this MIB module.\n   It is RECOMMENDED that implementers consider the security
    features as\n   provided by the SNMPv3 framework (see [RFC3410], section 8),\n
    \  including full support for the SNMPv3 cryptographic mechanisms (for\n   authentication
    and privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n
    \  RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable
    cryptographic security.  It is then a customer/operator\n   responsibility to
    ensure that the SNMP entity giving access to an\n   instance of this MIB module,
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)
    them.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   The MIB module in this document uses the following
    IANA-assigned\n   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:\n
    \     Descriptor        OBJECT IDENTIFIER value\n      ----------        -----------------------\n
    \     pwMplsStdMIB       { mib-2 181 }\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [BCP14]    Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2578]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n              \"Structure
      of Management Information Version 2 (SMIv2)\",\n              STD 58, RFC 2578,
      April 1999.\n   [RFC2579]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n
      \             \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April\n              1999.\n
      \  [RFC2580]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n              \"Conformance
      Statements for SMIv2\", STD 58, RFC 2580,\n              April 1999.\n   [RFC2863]
      \ McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n              MIB\",
      RFC 2863, June 2000.\n   [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon,
      \"Multiprotocol\n              Label Switching Architecture\", RFC 3031, January
      2001.\n   [RFC3811]  Nadeau, T., Ed., and J. Cucchiara, Ed., \"Definitions of\n
      \             Textual Conventions (TCs) for Multiprotocol Label\n              Switching
      (MPLS) Management\", RFC 3811, June 2004.\n   [RFC3812]  Srinivasan, C., Viswanathan,
      A., and T. Nadeau,\n              \"Multiprotocol Label Switching (MPLS) Traffic
      Engineering\n              (TE) Management Information Base (MIB)\", RFC 3812,
      June\n              2004.\n   [RFC3813]  Srinivasan, C., Viswanathan, A., and
      T. Nadeau,\n              \"Multiprotocol Label Switching (MPLS) Label Switching\n
      \             Router (LSR) Management Information Base (MIB)\", RFC 3813,\n
      \             June 2004.\n   [RFC4447]  Martini, L., Ed., Rosen, E., El-Aawar,
      N., Smith, T., and\n              G. Heron, \"Pseudowire Setup and Maintenance
      Using the\n              Label Distribution Protocol (LDP)\", RFC 4447, April
      2006.\n   [RFC5542]  Nadeau, T., Ed., Zelig, D., Ed., and O. Nicklass, Ed.,\n
      \             \"Definitions of Textual Conventions for Pseudowire (PW)\n              Management\",
      RFC 5542, May 2009.\n   [RFC5601]  Nadeau, T., Ed. and D. Zelig, Ed. \"Pseudowire
      (PW)\n              Management Information Base (MIB)\", RFC 5601, July 2009.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC3410]  Case, J., Mundy, R., Partain,
      D., and B. Stewart,\n              \"Introduction and Applicability Statements
      for Internet-\n              Standard Management Framework\", RFC 3410, December
      2002.\n   [RFC3815]  Cucchiara, J., Sjostrand, H., and J. Luciani, \"Definitions\n
      \             of Managed Objects for the Multiprotocol Label Switching\n              (MPLS),
      Label Distribution Protocol (LDP)\", RFC 3815, June\n              2004.\n   [RFC3916]
      \ Xiao, X., Ed., McPherson, D., Ed., and P. Pate, Ed.,\n              \"Requirements
      for Pseudo-Wire Emulation Edge-to-Edge\n              (PWE3)\", RFC 3916, September
      2004.\n   [RFC3985]  Bryant, S., Ed., and P. Pate, Ed., \"Pseudo Wire Emulation\n
      \             Edge-to-Edge (PWE3) Architecture\", RFC 3985, March 2005.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   David Zelig (editor)\n   Oversi Networks\n   1 Rishon
    Letzion St.\n   Petah Tikva\n   Israel\n   Phone: +972 77 3337 750\n   EMail:
    davidz@oversi.com\n   Thomas D. Nadeau (editor)\n   BT\n   BT Centre\n   81 Newgate
    Street\n   London  EC1A 7AJ\n   United Kingdom\n   EMail: tom.nadeau@bt.com\n"
  title: Authors' Addresses
