- title: __initial_text__
  contents:
  - '              Explicit Subscriptions for the REFER Method

    '
- title: Abstract
  contents:
  - "Abstract\n   The Session Initiation Protocol (SIP) REFER request, as defined\
    \ by\n   RFC 3515, triggers an implicit SIP-Specific Event Notification\n   framework\
    \ subscription.  Conflating the start of the subscription\n   with handling the\
    \ REFER request makes negotiating SUBSCRIBE\n   extensions impossible and complicates\
    \ avoiding SIP dialog sharing.\n   This document defines extensions to REFER that\
    \ remove the implicit\n   subscription and, if desired, replace it with an explicit\
    \ one.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7614.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions .....................................................3\n  \
    \ 3. Overview ........................................................4\n    \
    \  3.1. Explicit Subscriptions .....................................4\n      3.2.\
    \ No Subscriptions ...........................................5\n   4. The Explicit\
    \ Subscription Extension .............................5\n      4.1. Sending a\
    \ REFER ............................................5\n      4.2. Processing a\
    \ REFER Response ................................5\n      4.3. Processing a Received\
    \ REFER ................................6\n      4.4. Subscribing to the 'refer'\
    \ Event ...........................7\n      4.5. Processing a Received SUBSCRIBE\
    \ ............................7\n      4.6. Sending a NOTIFY ...........................................7\n\
    \      4.7. Managing 'refer' Event State ...............................8\n  \
    \    4.8. The Refer-Events-At Header Field ...........................8\n   5.\
    \ The No Subscription Extension ...................................9\n      5.1.\
    \ Sending a REFER ............................................9\n      5.2. Processing\
    \ a REFER Response ................................9\n      5.3. Processing a\
    \ Received REFER ................................9\n   6. The 'explicitsub' and\
    \ 'nosub' Option Tags ......................10\n   7. Updates to RFC 3515 ............................................10\n\
    \   8. Security Considerations ........................................10\n  \
    \ 9. IANA Considerations ............................................12\n    \
    \  9.1. Register the 'explicitsub' Option Tag .....................12\n      9.2.\
    \ Register the 'nosub' Option Tag ...........................12\n      9.3. Register\
    \ the Refer-Events-At Header Field .................12\n   10. References ....................................................13\n\
    \      10.1. Normative References .....................................13\n  \
    \    10.2. Informative References ...................................13\n   Author's\
    \ Address ..................................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   REFER, as defined by [RFC3515], triggers an implicit SIP-Specific\n\
    \   Event Framework subscription.  Sending a REFER within a dialog\n   established\
    \ by an INVITE results in dialog reuse and the associated\n   problems described\
    \ in [RFC5057].  The SIP-Specific Event Notification\n   framework definition\
    \ [RFC6665] disallows such dialog reuse.  Call\n   transfer, as defined in [RFC5589],\
    \ thus requires sending a REFER\n   request on a new dialog, associating it with\
    \ an existing dialog using\n   the 'Target-Dialog' mechanism defined in [RFC4538].\n\
    \   Because there is no explicit SUBSCRIBE request, the tools for\n   negotiating\
    \ subscription details are unavailable for REFER\n   subscriptions.  This includes\
    \ negotiating subscription duration and\n   providing information through Event\
    \ header field parameters.  The use\n   of the SIP 'Supported' and 'Require' extension\
    \ mechanisms [RFC3261]\n   is complicated by the implicit subscription.  It is\
    \ unclear whether\n   or not the extension applies to handling the REFER request\
    \ itself, to\n   the messages in the subscription created by the REFER, or to\
    \ both.\n   Avoiding this confusion requires careful specification in each\n \
    \  extension.  Existing extensions do not provide this clarity.\n   This document\
    \ defines two mechanisms that remove the implicit\n   subscription, one of which\
    \ replaces it with an explicit one.  The\n   benefits of doing so include:\n \
    \  o  Allowing REFER to be used within INVITE-created dialogs without\n      creating\
    \ dialog reuse.\n   o  Allowing standard subscription parameter negotiation.\n\
    \   o  Allowing standard negotiation of SIP extensions.\n   There are limitations\
    \ on when it is appropriate to use the extension\n   that allows an explicit subscription,\
    \ related directly to definition\n   of non-INVITE transaction handling SIP. \
    \ These limitations are\n   discussed in Section 4.1.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   This section provides a non-normative overview of the behaviors\n\
    \   defined in subsequent sections.\n"
- title: 3.1.  Explicit Subscriptions
  contents:
  - "3.1.  Explicit Subscriptions\n   A SIP User Agent (UA) that wishes to issue a\
    \ REFER request that will\n   not create an implicit subscription, but will allow\
    \ an explicit one,\n   will include a new option tag, 'explicitsub', in the Require\
    \ header\n   field of the REFER request.  This REFER could be sent either within\n\
    \   an existing dialog or as an out-of-dialog request.\n   If the recipient of\
    \ the REFER accepts the request, it will begin\n   managing the 'refer' event\
    \ state described in RFC 3515 and will\n   provide a URI that will reach an event\
    \ server that will service\n   subscriptions to that state.  (In many cases, the\
    \ recipient of the\n   REFER will perform the role of event server itself.)  That\
    \ URI is\n   returned in a new header field in the REFER response named 'Refer-\n\
    \   Events-At'.\n   The UA that issued the REFER can now subscribe to the 'refer'\
    \ event\n   at the provided URI, using a SUBSCRIBE request with a new dialog\n\
    \   identifier.  The full range of negotiation mechanisms is available\n   for\
    \ its use in that request.  As detailed in RFCs 6665 and 3515, the\n   event server\
    \ accepting the subscription will send an immediate NOTIFY\n   with the current\
    \ refer event state, additional NOTIFY messages as the\n   refer state changes,\
    \ and a terminal NOTIFY message when the referred\n   action is complete.  It\
    \ is, of course, possible that the initial\n   NOTIFY is also the terminal NOTIFY.\n\
    \   It is possible that the referred action is completed before the\n   SUBSCRIBE\
    \ arrives at the event server.  The server needs to retain\n   the final refer\
    \ event state for some period of time to include in the\n   terminal NOTIFY that\
    \ will be sent for such subscriptions.  It is also\n   possible that a SUBSCRIBE\
    \ will never arrive.\n   This extension makes it possible to separate the event\
    \ server that\n   will handle subscriptions from the UA that accepted the REFER.\
    \  Such\n   a UA could use mechanisms such as PUBLISH [RFC3903] to convey the\n\
    \   refer event state to the event server.  This extension also makes it\n   possible\
    \ to allow more than one subscription to the refer event\n   state.\n"
- title: 3.2.  No Subscriptions
  contents:
  - "3.2.  No Subscriptions\n   A UA that wishes to issue a REFER request that will\
    \ not create an\n   implicit subscription and wishes to tell the recipient that\
    \ it is not\n   interested in creating an explicit subscription will include a\
    \ new\n   option tag, 'nosub', in the Require header field of the REFER\n   request.\
    \  This REFER could be sent either within an existing dialog\n   or as an out-of-dialog\
    \ request.\n   If the recipient of the REFER accepts the request, it knows not\
    \ to\n   create an implicit subscription and knows that no explicit\n   subscription\
    \ will be forthcoming.  The recipient will continue to\n   process the request\
    \ indicated in the Refer-To header field as\n   specified in RFC 3515, but it\
    \ can avoid the cost of preparing to\n   handle any 'refer' event subscriptions\
    \ related to this REFER request.\n"
- title: 4.  The Explicit Subscription Extension
  contents:
  - '4.  The Explicit Subscription Extension

    '
- title: 4.1.  Sending a REFER
  contents:
  - "4.1.  Sending a REFER\n   To suppress the creation of any implicit subscription,\
    \ and allow for\n   an explicit one, a UA forming a REFER request will include\
    \ the option\n   tag 'explicitsub' in the Require header field of the request.\
    \  The\n   REFER request is otherwise formed following the requirements of\n \
    \  [RFC3515].  Since this REFER has no chance of creating an implicit\n   subscription,\
    \ the UA MAY send the REFER request within an existing\n   dialog or out-of-dialog.\n\
    \   Note that if the REFER forks (see [RFC3261]), only one final response\n  \
    \ will be returned to the issuing UA.  If it is important that the UA\n   be able\
    \ to subscribe to any refer state generated by accepting this\n   request, the\
    \ UA needs to form the request so that it will only be\n   accepted in one place.\
    \  This can be achieved by sending the REFER\n   request within an existing dialog\
    \ or by using the 'Target-Dialog'\n   mechanism defined in [RFC4538].  If it is\
    \ possible for the request to\n   be accepted in more than one location, and things\
    \ would go wrong if\n   the UA did not learn about each location that the request\
    \ was\n   accepted, using this extension is not appropriate.\n"
- title: 4.2.  Processing a REFER Response
  contents:
  - "4.2.  Processing a REFER Response\n   The UA will process responses to the REFER\
    \ request as specified in\n   [RFC3515] (and, consequently, [RFC3261]).  In particular,\
    \ if the\n   REFER was sent to an element that does not support or is unwilling\
    \ to\n   use this extension, the response will contain a 420 (Bad Extension)\n\
    \   response code (see Section 8.1.3.5 of [RFC3261]).  As that document\n   states,\
    \ the UA can retry the request without using this extension.\n   If the UA receives\
    \ a 2xx-class response, it will contain a Refer-\n   Events-At header field (Section\
    \ 4.8) with a single URI as its value.\n   If the UA is interested in the state\
    \ of the referenced action, it\n   will subscribe to the 'refer' event at that\
    \ URI.\n"
- title: 4.3.  Processing a Received REFER
  contents:
  - "4.3.  Processing a Received REFER\n   An element receiving a REFER request requiring\
    \ the 'explicitsub'\n   extension will use the same admissions policies that are\
    \ used without\n   the extension, with the addition that it is acceptable to admit\
    \ an\n   in-dialog REFER request requiring this extension since it cannot\n  \
    \ create another usage inside that dialog.  In particular, see\n   Section 5.2\
    \ of [RFC3515].\n   Accepting a REFER request that requires 'explicitsub' does\
    \ not create\n   a dialog or a new usage within an existing dialog.  The element\
    \ MUST\n   NOT create an implicit subscription when accepting the REFER request.\n\
    \   If the REFER request was received within an existing dialog, the\n   accepting\
    \ element will not be acting as a SIP-Events notifier in the\n   context of that\
    \ dialog.  If it is not otherwise subject to becoming a\n   notifier in the context\
    \ of the dialog, none of the requirements in\n   [RFC6665], particularly the requirement\
    \ to provide a Globally\n   Routable User Agent URI (GRUU) as the local contact,\
    \ apply to the\n   message accepting the REFER request.\n   An element that accepts\
    \ a REFER request with 'explicitsub' in its\n   Require header field MUST return\
    \ a 200 response containing a sip: or\n   sips: URI in the Refer-Events-At header\
    \ field that can be used to\n   subscribe to the refer event state associated\
    \ with this REFER\n   request.  This URI MUST uniquely identify this refer event\
    \ state.\n   The URI needs to reach the event server when used in a SUBSCRIBE\n\
    \   request from the element that sent the REFER.  One good way to ensure\n  \
    \ the URI provided has that property is to use a GRUU [RFC5627] for the\n   event\
    \ server.  As discussed in Section 8, possession of this URI is\n   often the\
    \ only requirement for authorizing a subscription to it.\n   Implementations SHOULD\
    \ provide a URI constructed in a way that is\n   hard to guess.  Again, using\
    \ a GRUU (specifically, a temporary GRUU)\n   is one good way to achieve this\
    \ property.\n   The accepting element will otherwise proceed with the processing\n\
    \   defined in [RFC3515].\n   The event server identified by the Refer-Events-At\
    \ URI could receive\n   SUBSCRIBE requests at any point after the response containing\
    \ the\n   Refer-Events-At header field is sent.  Implementations should take\n\
    \   care to ensure the event server is ready to receive those SUBSCRIBE\n   requests\
    \ before sending the REFER response, but as with all non-\n   INVITE responses,\
    \ the response should be sent as soon as possible\n   (see [RFC4321]).  It is\
    \ also possible that the referred action may\n   complete before any SUBSCRIBE\
    \ request arrives.  The event server will\n   need to maintain the final refer\
    \ event state for a period of time\n   after the action completes in order to\
    \ serve such subscriptions (see\n   Section 4.7).\n"
- title: 4.4.  Subscribing to the 'refer' Event
  contents:
  - "4.4.  Subscribing to the 'refer' Event\n   A UA that possesses a URI obtained\
    \ from a Refer-Events-At header\n   field MAY subscribe to the refer event state\
    \ at that URI.  It does so\n   following the requirements of [RFC6665], placing\
    \ the token 'refer' in\n   the Event header field and the URI in the Request-URI\
    \ of the\n   SUBSCRIBE request.  The SUBSCRIBE request MUST NOT reuse any existing\n\
    \   dialog identifiers.\n   Subsequent handling of the subscription MUST follow\
    \ the requirements\n   of [RFC6665] and [RFC3515].  In particular, as discussed\
    \ in\n   Section 2.4.6 of [RFC3515], the NOTIFY messages in the subscription\n\
    \   might include an id parameter in their Event header fields.\n   Subsequent\
    \ SUBSCRIBE requests used to refresh or terminate this\n   subscription MUST contain\
    \ this id parameter.  Note that the rationale\n   for the id parameter provided\
    \ in that section is not relevant when\n   this extension is used.  The URI returned\
    \ in the Refer-Events-At\n   header field uniquely identifies appropriate state,\
    \ making the id\n   parameter redundant.  However, this behavioral requirement\
    \ is\n   preserved to reduce the number of changes to existing implementations\n\
    \   in order to support this extension and to make it more likely that\n   existing\
    \ diagnostic tools will work with little or no modification.\n"
- title: 4.5.  Processing a Received SUBSCRIBE
  contents:
  - "4.5.  Processing a Received SUBSCRIBE\n   An event server receiving a SUBSCRIBE\
    \ request will process it\n   according to the requirements of [RFC6665].  The\
    \ event server MAY\n   choose to authorize the SUBSCRIBE request based on the\
    \ Request-URI\n   corresponding to existing refer event state.  It MAY also require\n\
    \   further authorization as discussed in Section 8.\n   When accepting a subscription,\
    \ the event server will establish the\n   initial subscription duration using\
    \ the guidance in Section 3.4 of\n   [RFC3515].\n"
- title: 4.6.  Sending a NOTIFY
  contents:
  - "4.6.  Sending a NOTIFY\n   NOTIFY messages within a subscription are formed and\
    \ sent following\n   the requirements in [RFC3515].  See, in particular, Section\
    \ 2.4.5 of\n   that document.\n"
- title: 4.7.  Managing 'refer' Event State
  contents:
  - "4.7.  Managing 'refer' Event State\n   As described in [RFC3515], an element\
    \ creates the state for event\n   'refer' when it accepts a REFER request.  It\
    \ updates that state as\n   the referred request proceeds, ultimately reaching\
    \ a state where the\n   request has completed and the final state is known.\n\
    \   In RFC 3515 implementations, it was a reasonable design choice to\n   destroy\
    \ the refer event state immediately after sending the NOTIFY\n   that terminated\
    \ the implicit subscription.  This is not the case when\n   using this extension.\
    \  It is possible for the referenced request to\n   complete very quickly, perhaps\
    \ sooner than the time it takes the\n   response to the REFER to traverse the\
    \ network to the UA that sent the\n   request and the time it takes that agent\
    \ to send the SUBSCRIBE\n   request for the event state to the URI the response\
    \ provides.  Thus,\n   the event server MUST retain the final refer event state\
    \ for a\n   reasonable period of time, which SHOULD be at least 2*64*T1 (that\
    \ is,\n   64 seconds), representing an upper-bound estimate of the time it\n \
    \  would take to complete two non-INVITE transactions: the REFER and an\n   immediate\
    \ SUBSCRIBE.\n   If an otherwise acceptable SUBSCRIBE arrives during this retention\n\
    \   period, the subscription would be accepted and immediately terminated\n  \
    \ with a NOTIFY containing the final event state with a Subscription-\n   State\
    \ of terminated with a reason value of \"noresource\".\n"
- title: 4.8.  The Refer-Events-At Header Field
  contents:
  - "4.8.  The Refer-Events-At Header Field\n   The Refer-Events-At header field is\
    \ an extension-header as defined by\n   [RFC3261].  Its ABNF [RFC5234] is as follows:\n\
    \   Refer-Events-At = \"Refer-Events-At\" HCOLON\n                       LAQUOT\
    \ ( SIP-URI / SIPS-URI ) RAQUOT\n                       *( SEMI generic-param\
    \ )\n   See [RFC3261] for the definition of the elements used in that\n   production.\n\
    \   Note that this rule does not allow a full addr-spec as defined in RFC\n  \
    \ 3261, and it mandates the use of the angle brackets.  That is:\n   Refer-Events-At:\
    \ <sips:vPT3izGmo8NTxaPADRZvEAY22BKx@example.com;gr>\n   is well formed, but\n\
    \   Refer-Events-At: sip:wsXa9mkHtPcGu8@example.com\n   is invalid.\n   The Refer-Events-At\
    \ header field is only meaningful in a 2xx-class\n   response to a REFER request.\
    \  If it appears in the header of any\n   other SIP message, its meaning is undefined,\
    \ and it MUST be ignored.\n"
- title: 5.  The No Subscription Extension
  contents:
  - '5.  The No Subscription Extension

    '
- title: 5.1.  Sending a REFER
  contents:
  - "5.1.  Sending a REFER\n   To suppress the creation of any implicit subscription\
    \ and signal that\n   no explicit subscription will be forthcoming, a UA forming\
    \ a REFER\n   request will include the option tag 'nosub' in the Require header\n\
    \   field of the request.  The REFER request is otherwise formed\n   following\
    \ the requirements of [RFC3515].  Since this REFER has no\n   chance of creating\
    \ an implicit subscription, the UA MAY send the\n   REFER request within an existing\
    \ dialog or out-of-dialog.\n"
- title: 5.2.  Processing a REFER Response
  contents:
  - "5.2.  Processing a REFER Response\n   The UA will process responses to the REFER\
    \ request as specified in\n   [RFC3515] (and, consequently, [RFC3261]).  In particular,\
    \ if the\n   REFER was sent to an element that does not support or is unwilling\
    \ to\n   use this extension, the response will contain a 420 (Bad Extension)\n\
    \   response code (see Section 8.1.3.5 of [RFC3261]).  As that document\n   states,\
    \ the UA can retry the request without using this extension.\n"
- title: 5.3.  Processing a Received REFER
  contents:
  - "5.3.  Processing a Received REFER\n   An element receiving a REFER request requiring\
    \ the 'nosub' extension\n   will use the same admissions policies that would be\
    \ used without the\n   extension, with the addition that it is acceptable to admit\
    \ an in-\n   dialog REFER request requiring this extension since it cannot create\n\
    \   another usage inside that dialog.  In particular, see Section 5.2 of\n   [RFC3515].\n\
    \   Accepting a REFER request that requires 'nosub' does not create a\n   dialog\
    \ or a new usage within an existing dialog.  The element MUST\n   NOT create an\
    \ implicit subscription when accepting the REFER request.\n   Furthermore, the\
    \ element accepting the REFER request is not required\n   to maintain any state\
    \ for serving refer event subscriptions.\n   If the REFER is received within an\
    \ existing dialog, the accepting\n   element will not be acting as a SIP-Events\
    \ notifier in the context of\n   that dialog.  If it is not otherwise subject\
    \ to becoming a notifier\n   in the context of the dialog, none of the requirements\
    \ in [RFC6665],\n   particularly the requirement to provide a GRUU as the local\
    \ contact,\n   apply to the message accepting the REFER request.\n   The accepting\
    \ element will otherwise proceed with the processing\n   defined in [RFC3515].\n"
- title: 6.  The 'explicitsub' and 'nosub' Option Tags
  contents:
  - "6.  The 'explicitsub' and 'nosub' Option Tags\n   This document defines the 'explicitsub'\
    \ option tag, used to signal\n   the use of the extension defined in Section 4,\
    \ and the 'nosub' option\n   tag, used to signal the use of the extension defined\
    \ in Section 5.\n   The use of either option tag in a Require header field is\
    \ only\n   defined when it appears in a REFER request or a response to a REFER\n\
    \   request.  A UA MUST NOT include the 'explicitsub' or 'nosub' option\n   tag\
    \ in the Require header field of any request other than REFER.  A\n   UA MUST\
    \ NOT include the 'explicitsub' or 'nosub' option tag in the\n   Require header\
    \ field of any SIP response other than a 200 or 421\n   response to a REFER request.\n\
    \   The 'explicitsub' and 'nosub' option tags MAY appear in the Supported\n  \
    \ header field of SIP messages and in the sip.extensions feature tag\n   defined\
    \ in [RFC3840].  This signals only that the UA including the\n   value is aware\
    \ of the extensions.  In particular, a UA can only\n   invoke the use of one of\
    \ the extensions in a request.  A UA MUST NOT\n   include either option tag in\
    \ the Require header field of a 200\n   response to a REFER request if that tag\
    \ was not present in the\n   Require header field of the request.  A User Agent\
    \ Server (UAS) that\n   is processing a REFER request that lists 'explicitsub'\
    \ or 'nosub' in\n   its Supported header field and wishes to use one of those\
    \ extensions\n   will return a 421 response indicating which extension is required.\n"
- title: 7.  Updates to RFC 3515
  contents:
  - "7.  Updates to RFC 3515\n   The requirement in Section 2.4.4 of [RFC3515] to\
    \ reject out-of-dialog\n   SUBSCRIBE requests to event 'refer' is removed.  An\
    \ element MAY\n   accept a SUBSCRIBE request to event 'refer', following the\n\
    \   requirements and guidance in this document.  REFER is no longer the\n   only\
    \ mechanism that can create a subscription to event 'refer'.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security considerations of [RFC3515] all\
    \ still apply to a REFER\n   request using this extension.  The security considerations\
    \ there for\n   the implicit subscription apply to any explicit subscription for\
    \ the\n   'refer' event.\n   This update to RFC 3515 introduces a new authorization\
    \ consideration.\n   An element receiving an initial SUBSCRIBE request to the\
    \ 'refer'\n   event needs to decide whether the subscriber should be allowed to\
    \ see\n   the refer event state.  In RFC 3515, this decision was conflated with\n\
    \   accepting the REFER request, and the only possible subscriber was the\n  \
    \ element that sent the REFER.  With this update, there may be multiple\n   subscribers\
    \ to any given refer event state.\n   This document allows an element to accept\
    \ an initial SUBSCRIBE\n   request based on having a Request-URI that identifies\
    \ existing refer\n   event state.  (Such a URI will have previously been sent\
    \ in the\n   Refer-Events-At header field in a successful REFER response).  The\n\
    \   element retrieving that URI from the response and any elements that\n   element\
    \ shares the URI with are authorized to SUBSCRIBE to the event\n   state.  Consequently,\
    \ the URI should be constructed so that it is not\n   easy to guess and should\
    \ be protected against eavesdroppers when\n   transmitted.  [RFC3261] details\
    \ mechanisms for providing such\n   protection, such as sending SIP messages over\
    \ Transport Layer\n   Security (TLS) or Datagram TLS (DTLS).  See the Security\n\
    \   Considerations section of [RFC3261] for considerations when using\n   other\
    \ security mechanisms.  An event server receiving a REFER request\n   over an\
    \ unprotected transport can redirect the requester to use a\n   protected transport\
    \ before accepting the request.  A good way to\n   ensure that subscriptions use\
    \ a protected transport is to only\n   construct sips: URIs.  The event server\
    \ can also require any of the\n   additional authorization mechanisms allowed\
    \ for any SIP request.  For\n   example, the event server could require a valid\
    \ assertion of the\n   subscriber's identity using [RFC4474].\n   The URI provided\
    \ in a Refer-Events-At header field will be used as\n   the Request-URI of SUBSCRIBE\
    \ requests.  A malicious agent could take\n   advantage of being able to choose\
    \ this URI in ways similar to the\n   ways an agent sending a REFER request can\
    \ take advantage of the\n   Refer-To URI, as described in the Security Considerations\
    \ section of\n   [RFC3515].  In particular, the malicious agent could cause a\
    \ SIP\n   SUBSCRIBE to be sent as raw traffic towards a victim.  If the victim\n\
    \   is not SIP aware and the SUBSCRIBE is sent over UDP, there is (at\n   most)\
    \ a factor of 11 amplification due to retransmissions of the\n   request.  The\
    \ potential for abuse in this situation is lower than\n   that of the Refer-To\
    \ URI, since the URI can only have a sip: or sips:\n   scheme, and is only provided\
    \ in a REFER response.  A malicious agent\n   would have to first receive a REFER\
    \ request to take advantage of\n   providing a Refer-Events-At URI.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  Register the 'explicitsub' Option Tag
  contents:
  - "9.1.  Register the 'explicitsub' Option Tag\n   The option tag 'explicitsub'\
    \ has been registered in the 'Option Tags'\n   subregistry of the 'Session Initiation\
    \ Protocol (SIP) Parameters'\n   registry by adding a row with these values:\n\
    \   Name: explicitsub\n   Description: This option tag identifies an extension\
    \ to REFER to\n   suppress the implicit subscription and provide a URI for an\
    \ explicit\n   subscription.\n   Reference: RFC 7614 (this document)\n"
- title: 9.2.  Register the 'nosub' Option Tag
  contents:
  - "9.2.  Register the 'nosub' Option Tag\n   The option tag 'nosub' has been registered\
    \ in the 'Option Tags'\n   subregistry of the 'Session Initiation Protocol (SIP)\
    \ Parameters'\n   registry by adding a row with these values:\n   Name: nosub\n\
    \   Description: This option tag identifies an extension to REFER to\n   suppress\
    \ the implicit subscription and indicate that no explicit\n   subscription is\
    \ forthcoming.\n   Reference: RFC 7614 (this document)\n"
- title: 9.3.  Register the Refer-Events-At Header Field
  contents:
  - "9.3.  Register the Refer-Events-At Header Field\n   The header field described\
    \ in Section 4.8 has been registered in the\n   'Header Fields' subregistry of\
    \ the 'Session Initiation Protocol (SIP)\n   Parameters' registry by adding a\
    \ row with these values:\n   Header Name: Refer-Events-At\n   compact: none\n\
    \   Reference: RFC 7614 (this document)\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,\
    \ June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC3515]\
    \  Sparks, R., \"The Session Initiation Protocol (SIP) Refer\n              Method\"\
    , RFC 3515, DOI 10.17487/RFC3515, April 2003,\n              <http://www.rfc-editor.org/info/rfc3515>.\n\
    \   [RFC3840]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\n             \
    \ \"Indicating User Agent Capabilities in the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 3840,\n              DOI 10.17487/RFC3840, August 2004,\n\
    \              <http://www.rfc-editor.org/info/rfc3840>.\n   [RFC5234]  Crocker,\
    \ D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:\
    \ ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC6665]  Roach,\
    \ A., \"SIP-Specific Event Notification\", RFC 6665,\n              DOI 10.17487/RFC6665,\
    \ July 2012,\n              <http://www.rfc-editor.org/info/rfc6665>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC3903]  Niemi, A., Ed., \"Session Initiation\
    \ Protocol (SIP)\n              Extension for Event State Publication\", RFC 3903,\n\
    \              DOI 10.17487/RFC3903, October 2004,\n              <http://www.rfc-editor.org/info/rfc3903>.\n\
    \   [RFC4321]  Sparks, R., \"Problems Identified Associated with the\n       \
    \       Session Initiation Protocol's (SIP) Non-INVITE\n              Transaction\"\
    , RFC 4321, DOI 10.17487/RFC4321, January\n              2006, <http://www.rfc-editor.org/info/rfc4321>.\n\
    \   [RFC4474]  Peterson, J. and C. Jennings, \"Enhancements for\n            \
    \  Authenticated Identity Management in the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 4474,\n              DOI 10.17487/RFC4474, August 2006,\n\
    \              <http://www.rfc-editor.org/info/rfc4474>.\n   [RFC4538]  Rosenberg,\
    \ J., \"Request Authorization through Dialog\n              Identification in\
    \ the Session Initiation Protocol (SIP)\",\n              RFC 4538, DOI 10.17487/RFC4538,\
    \ June 2006,\n              <http://www.rfc-editor.org/info/rfc4538>.\n   [RFC5057]\
    \  Sparks, R., \"Multiple Dialog Usages in the Session\n              Initiation\
    \ Protocol\", RFC 5057, DOI 10.17487/RFC5057,\n              November 2007, <http://www.rfc-editor.org/info/rfc5057>.\n\
    \   [RFC5589]  Sparks, R., Johnston, A., Ed., and D. Petrie, \"Session\n     \
    \         Initiation Protocol (SIP) Call Control - Transfer\",\n             \
    \ BCP 149, RFC 5589, DOI 10.17487/RFC5589, June 2009,\n              <http://www.rfc-editor.org/info/rfc5589>.\n\
    \   [RFC5627]  Rosenberg, J., \"Obtaining and Using Globally Routable User\n \
    \             Agent URIs (GRUUs) in the Session Initiation Protocol\n        \
    \      (SIP)\", RFC 5627, DOI 10.17487/RFC5627, October 2009,\n              <http://www.rfc-editor.org/info/rfc5627>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Robert Sparks\n   Oracle\n   7460 Warren Parkway, Suite\
    \ 300\n   Frisco, Texas  75034\n   United States\n   Email: rjsparks@nostrum.com\n"
