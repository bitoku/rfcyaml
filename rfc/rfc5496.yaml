- title: __initial_text__
  contents:
  - '              The Reverse Path Forwarding (RPF) Vector TLV

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a use of the Protocol Independent Multicast\n\
    \   (PIM) Join Attribute as defined in RFC 5384, which enables PIM to\n   build\
    \ multicast trees through an MPLS-enabled network, even if that\n   network's\
    \ IGP does not have a route to the source of the tree.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Specification of Requirements ...................................3\n  \
    \ 3. Use of the RPF Vector TLV .......................................3\n    \
    \  3.1. Attribute and Shared Tree Joins ............................4\n      3.2.\
    \ Attribute and Bootstrap Messages ...........................4\n      3.3. The\
    \ Vector Attribute .......................................4\n           3.3.1.\
    \ Inserting a Vector Attribute in a Join ..............4\n           3.3.2. Processing\
    \ a Received Vector Attribute ..............5\n           3.3.3. Vector Attribute\
    \ and Asserts ........................5\n           3.3.4. Vector Attribute and\
    \ Join Suppression ...............6\n   4. Vector Attribute TLV Format .....................................6\n\
    \   5. IANA Considerations .............................................7\n  \
    \ 6. Security Considerations .........................................7\n   7.\
    \ Acknowledgments .................................................7\n   8. Normative\
    \ References ............................................7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   It is sometimes convenient to distinguish the routers of\
    \ a particular\n   network into two categories: \"edge routers\" and \"core routers\"\
    .  The\n   edge routers attach directly to users or to other networks, but the\n\
    \   core routers attach only to other routers of the same network.  If\n   the\
    \ network is MPLS-enabled, then any unicast packet that needs to\n   travel outside\
    \ the network can be \"tunneled\" via MPLS from one edge\n   router to another.\
    \  To handle a unicast packet that must travel\n   outside the network, an edge\
    \ router needs to know which of the other\n   edge routers is the best exit point\
    \ from the network for that\n   packet's destination IP address.  The core routers,\
    \ however, do not\n   need to have any knowledge of routes that lead outside the\
    \ network;\n   as they handle only tunneled packets, they only need to know how\
    \ to\n   reach the edge routers and the other core routers.\n   Consider, for\
    \ example, the case where the network is an Autonomous\n   System (AS), the edge\
    \ routers are External Border Gateway Protocol\n   (EBGP) speakers, the core routers\
    \ may be said to constitute a \"BGP-\n   free core\".  The edge routers distribute\
    \ BGP routes to each other,\n   but not to the core routers.\n   However, when\
    \ multicast packets are considered, the strategy of\n   keeping the core routers\
    \ free of \"external\" routes is more\n   problematic.  When using PIM Sparse-Mode\
    \ (PIM-SM) [RFC4601], PIM\n   Source-Specific Mode (PIM-SSM) [RFC4607], or Bidirectional\
    \ PIM\n   (BIDIR-PIM) [RFC5015] to create a multicast distribution tree for a\n\
    \   particular multicast group, one wants the core routers to be full\n   participants\
    \ in the PIM protocol, so that multicasting can be done\n   efficiently in the\
    \ core.  This means that the core routers must be\n   able to correctly process\
    \ PIM Join messages for the group, which in\n   turn means that the core routers\
    \ must be able to send the Join\n   messages towards the root of the distribution\
    \ tree.  If the root of\n   the tree lies outside the network's borders (e.g.,\
    \ is in a different\n   AS), and the core routers do not maintain routes to external\n\
    \   destinations, then the PIM Join messages cannot be processed, and the\n  \
    \ multicast distribution tree cannot be created.\n   In order to allow PIM to\
    \ work properly in an environment where the\n   core routers do not maintain external\
    \ routes, a PIM extension is\n   needed.  When an edge router sends a PIM Join\
    \ message into the core,\n   it MUST include in that message a \"Vector\" that\
    \ specifies the IP\n   address of the next edge router along the path to the root\
    \ of the\n   multicast distribution tree.  The core routers can then process the\n\
    \   Join message by sending it towards the specified edge router (i.e.,\n   toward\
    \ the Vector).  In effect, the Vector serves as an attribute,\n   within a particular\
    \ network, for the root of the tree.\n   This document defines a new TLV in the\
    \ PIM Join Attribute message\n   [RFC5384].  It consists of a single Vector that\
    \ identifies the exit\n   point of the network.\n"
- title: 2.  Specification of Requirements
  contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Use of the RPF Vector TLV
  contents:
  - "3.  Use of the RPF Vector TLV\n   Before a router can start forwarding multicast\
    \ packets, it is\n   necessary to build a forwarding tree by sending PIM Joins\
    \ hop-by-hop.\n   Each router in the path creates a forwarding state and propagates\
    \ the\n   Join towards the root of the forwarding tree.  The building of this\n\
    \   tree is receiver driven.  See Figure 1.\n               ------------------\
    \ BGP -----------------\n              |                                     \
    \   |\n   [S]---( Edge 1)--(Core 1)---( Core )--(Core 2)---( Edge 2 )---[R]\n\
    \                  <--- (S,G) Join\n                                 Figure 1\n\
    \   In this example, the two edge routers are BGP speakers.  The core\n   routers\
    \ are not BGP speakers and do not have any BGP distributed\n   routes.  The route\
    \ to S is a BGP distributed route; hence, it is\n   known to the edge but not\
    \ to the core.  The Edge 2 router determines\n   the interface leading to S, and\
    \ sends a PIM Join to the upstream\n   router.  In this example, though, the upstream\
    \ router is a core\n   router, with no route to S.  Without the PIM extensions\
    \ specified in\n   this document, the core router cannot determine where the send\
    \ the\n   Join, so the tree cannot be constructed.\n   To allow the core router\
    \ to participate in the construction of the\n   tree, the Edge 2 router includes\
    \ an \"RPF (Reverse Path Forwarding)\n   Vector\" TLV in the PIM Join Attribute\
    \ [RFC5384] of the PIM Join.  In\n   this example, the RPF Vector TLV will contain\
    \ the IP address of Edge\n   1.  Edge 2 forwards the PIM Join towards Edge 1.\
    \  Each intermediate\n   core router does its RPF check [RFC4601] on the address\
    \ contained in\n   the RPF Vector TLV (i.e., on the IP address of Edge 1), instead\
    \ of\n   doing the RPF check on the address S.  This allows the tree to be\n \
    \  constructed.\n"
- title: 3.1.  Attribute and Shared Tree Joins
  contents:
  - "3.1.  Attribute and Shared Tree Joins\n   In the example above, we build a source\
    \ tree to illustrate the\n   attribute behavior.  Use of the attribute is, however,\
    \ not restricted\n   to the construction of source trees.  It may also be used\
    \ to\n   construct a shared tree.  In this case, the RPF Vector TLV contains\n\
    \   the IP address of a Rendezvous Point (RP).  Procedures defined in\n   this\
    \ document for (S,G) Joins are equally applicable to (*,G) and\n   (*,*,RP) Joins\
    \ unless otherwise noted.\n"
- title: 3.2.  Attribute and Bootstrap Messages
  contents:
  - "3.2.  Attribute and Bootstrap Messages\n   There is no way to carry an RPF Vector\
    \ TLV in a Bootstrap Router\n   (BSR) bootstrap message.  The procedures in this\
    \ document do not\n   define a way for BSR messages to be forwarded across a core\
    \ in which\n   the BSP IP address is not routable.\n"
- title: 3.3.  The Vector Attribute
  contents:
  - '3.3.  The Vector Attribute

    '
- title: 3.3.1.  Inserting a Vector Attribute in a Join
  contents:
  - "3.3.1.  Inserting a Vector Attribute in a Join\n   In the example of Figure 1,\
    \ when the Edge 2 router looks up the route\n   to the source of the multicast\
    \ distribution tree, it will find a\n   BGP-distributed route whose \"BGP next-hop\"\
    \ is Edge 1.  Edge 2 then\n   looks up the route to Edge 1 to find the next hop\
    \ to the source,\n   namely Core 2.\n   When Edge 2 sends a PIM Join to Core 2,\
    \ it includes a Vector\n   Attribute specifying the address of Edge 1.  Core 2,\
    \ and subsequent\n   core routers, will forwarding the Join along the Vector (i.e.,\n\
    \   towards Edge 1) instead of trying to forward it towards S.\n   Whether an\
    \ attribute is actually needed depends on whether the Core\n   routers have a\
    \ route to the source of the multicast tree.  How the\n   Edge router knows whether\
    \ or not this is the case (and thus how the\n   Edge router determines whether\
    \ or not to insert an attribute field)\n   is outside the scope of this document.\n"
- title: 3.3.2.  Processing a Received Vector Attribute
  contents:
  - "3.3.2.  Processing a Received Vector Attribute\n   When processing a received\
    \ PIM Join that contains a Vector Attribute,\n   a router MUST first check to\
    \ see if the Vector IP address is one of\n   its own IP addresses.  If so, the\
    \ Vector Attribute is discarded, and\n   not passed further upstream.  Otherwise,\
    \ the Vector Attribute is used\n   to find the route to the source, and is passed\
    \ along when a PIM Join\n   is sent upstream.  Note that a router that receives\
    \ a Vector\n   Attribute MUST use it, even if that router happens to have a route\
    \ to\n   the source.  A router that discards a Vector Attribute MAY of course\n\
    \   insert a new Vector Attribute.  This would typically happen if a PIM\n   Join\
    \ needed to pass through a sequence of Edge routers, each pair of\n   which is\
    \ separated by a core that does not have external routes.  In\n   the absence\
    \ of periodic refreshment, Vectors expire along with the\n   corresponding (S,G)\
    \ state.\n"
- title: 3.3.3.  Vector Attribute and Asserts
  contents:
  - "3.3.3.  Vector Attribute and Asserts\n   A PIM Assert message includes the routing\
    \ protocol's \"metric\" to the\n   source of the tree.  This information is used\
    \ in the selection of the\n   Assert winner.  If a PIM Join is being sent towards\
    \ a Vector, rather\n   than towards the source, the Assert message MUST have the\
    \ metric to\n   the Vector instead of the metric to the source.  The Assert message\n\
    \   however does not have an attribute field and does not mention the\n   Vector.\n\
    \   A router may change its upstream neighbor on a particular multicast\n   tree\
    \ as the result of receiving Assert messages.  However, a Vector\n   Attribute\
    \ MUST NOT be sent in a PIM Join to an upstream neighbor that\n   is chosen as\
    \ the result of Assert processing, if that neighbor is\n   different than the\
    \ original upstream neighbor.  Reachability of the\n   Vector is only guaranteed\
    \ by the router that advertises reachability\n   to the Vector in its IGP.  If\
    \ the Assert winner upstream is not the\n   real preferred next-hop, it is possible\
    \ that the Assert winner does\n   not know the path to the Vector.  In the worst\
    \ case the Assert winner\n   has a route to the Vector that is on the same interface\
    \ where the\n   Assert was won.  That will point the RPF interface to that interface\n\
    \   and will result in the O-list being NULL.  The Vector Attribute\n   therefore\
    \ MUST NOT be inserted if the RPF neighbor was chosen via an\n   Assert process\
    \ and the RPF neighbor is different from the RPF\n   neighbor that would have\
    \ been selected via the local routing table.\n   In all other cases, the Vector\
    \ MUST be included in the Join message.\n"
- title: 3.3.4.  Vector Attribute and Join Suppression
  contents:
  - "3.3.4.  Vector Attribute and Join Suppression\n   If a router receives a PIM\
    \ Join on the upstream LAN interface for a\n   particular multicast state, Join\
    \ suppression may be applied if that\n   PIM Join is targeted to the same upstream\
    \ neighbor.  Which router(s)\n   will suppress their PIM Join is dependent on\
    \ timing and is\n   unpredictable.  Downstream routers on a LAN MAY include different\
    \ RPF\n   Vectors in the PIM Joins.  Therefore, an upstream router on that LAN\n\
    \   may receive and use different RPF Vectors over time to reach the\n   destination\
    \ (depending on which downstream router(s) suppressed their\n   Join).  To make\
    \ the upstream router behavior more predictable, the\n   RPF Vector address MUST\
    \ be used as additional condition to the Join\n   suppression logic.  Only if\
    \ the RPF Vector in the PIM Join matches\n   the RPF Vector in the multicast state,\
    \ the suppression logic is\n   applied.  It is also possible to disable Join suppression\
    \ on that\n   LAN.\n"
- title: 4.  Vector Attribute TLV Format
  contents:
  - "4.  Vector Attribute TLV Format\n   0                   1                   2\
    \                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |F|S| Type      | Length        |        Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-.......\n\
    \   F bit\n      Forward Unknown TLV.  If this bit is set, the TLV is forwarded\n\
    \      regardless of whether the router understands the Type.  If the TLV\n  \
    \    is known, the F bit is ignored.\n   S bit\n      Bottom of Stack.  If this\
    \ bit is set, then this is the last TLV in\n      the stack.\n   Type\n      The\
    \ Vector Attribute type is 0.\n   Length\n      Length depending on Address Family\
    \ of Encoded-Unicast address.\n   Value\n      Encoded-Unicast address.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has assigned the value 0 to the RPF Vector in\
    \ the \"PIM Join\n   Attribute Types\" registry.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security of the RPF Vector Attribute is only\
    \ guaranteed by the\n   security of the PIM packet, so the security considerations\
    \ for PIM\n   Join packets as described in PIM-SM [RFC4601] apply here.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The authors would like to thank Yakov Rekhter and Dino\
    \ Farinacci for\n   their initial ideas on this topic and Su Haiyang for the comments\
    \ on\n   the document.\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC4601]  Fenner, B., Handley, M., Holbrook, H., and I. Kouvelas,\n     \
    \         \"Protocol Independent Multicast - Sparse Mode (PIM-SM):\n         \
    \     Protocol Specification (Revised)\", RFC 4601, August 2006.\n   [RFC4607]\
    \  Holbrook, H. and B. Cain, \"Source-Specific Multicast for\n              IP\"\
    , RFC 4607, August 2006.\n   [RFC5015]  Handley, M., Kouvelas, I., Speakman, T.,\
    \ and L. Vicisano,\n              \"Bidirectional Protocol Independent Multicast\
    \ (BIDIR-\n              PIM)\", RFC 5015, October 2007.\n   [RFC5384]  Boers,\
    \ A., Wijnands, I., and E. Rosen, \"The Protocol\n              Independent Multicast\
    \ (PIM) Join Attribute Format\", RFC\n              5384, November 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   IJsbrand Wijnands\n   Cisco Systems, Inc.\n   De kleetlaan\
    \ 6a\n   Diegem  1831\n   Belgium\n   EMail: ice@cisco.com\n   Arjen Boers\n \
    \  Cisco Systems, Inc.\n   Avda. Diagonal, 682\n   Barcelona  08034\n   Spain\n\
    \   EMail: aboers@cisco.com\n   Eric Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Avenue\n   Boxborough, Ma  01719\n   EMail: erosen@cisco.com\n"
