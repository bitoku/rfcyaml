- title: __initial_text__
  contents:
  - "                     Exclude Routes - Extension to\n      Resource ReserVation\
    \ Protocol-Traffic Engineering (RSVP-TE)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies ways to communicate route exclusions during\n\
    \   path setup using Resource ReserVation Protocol-Traffic Engineering\n   (RSVP-TE).\n\
    \   The RSVP-TE specification, \"RSVP-TE: Extensions to RSVP for LSP\n   Tunnels\"\
    \ (RFC 3209) and GMPLS extensions to RSVP-TE, \"Generalized\n   Multi-Protocol\
    \ Label Switching (GMPLS) Signaling Resource ReserVation\n   Protocol-Traffic\
    \ Engineering (RSVP-TE) Extensions\" (RFC 3473) allow\n   abstract nodes and resources\
    \ to be explicitly included in a path\n   setup, but not to be explicitly excluded.\n\
    \   In some networks where precise explicit paths are not computed at the\n  \
    \ head end, it may be useful to specify and signal abstract nodes and\n   resources\
    \ that are to be explicitly excluded from routes.  These\n   exclusions may apply\
    \ to the whole path, or to parts of a path between\n   two abstract nodes specified\
    \ in an explicit path.  How Shared Risk\n   Link Groups (SRLGs) can be excluded\
    \ is also specified in this\n   document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements Notation ......................................4\n  \
    \    1.2. Scope of Exclude Routes ....................................4\n    \
    \  1.3. Relationship to MPLS TE MIB ................................5\n   2. Shared\
    \ Risk Link Groups .........................................6\n      2.1. SRLG\
    \ Subobject .............................................6\n   3. Exclude Route\
    \ List ..............................................7\n      3.1. EXCLUDE_ROUTE\
    \ Object (XRO) .................................7\n           3.1.1. IPv4 Prefix\
    \ Subobject ...............................8\n           3.1.2. IPv6 Prefix Subobject\
    \ ...............................9\n           3.1.3. Unnumbered Interface ID\
    \ Subobject ..................10\n           3.1.4. Autonomous System Number Subobject\
    \ .................10\n           3.1.5. SRLG Subobject .....................................11\n\
    \      3.2. Processing Rules for the EXCLUDE_ROUTE Object (XRO) .......11\n  \
    \ 4. Explicit Exclusion Route .......................................13\n    \
    \  4.1. Explicit Exclusion Route Subobject (EXRS) .................13\n      4.2.\
    \ Processing Rules for the Explicit Exclusion Route\n           Subobject (EXRS)\
    \ ..........................................15\n   5. Processing of XRO together\
    \ with EXRS ...........................16\n   6. Minimum Compliance .............................................16\n\
    \   7. Security Considerations ........................................16\n  \
    \ 8. IANA Considerations ............................................17\n    \
    \  8.1. New ERO Subobject Type ....................................17\n      8.2.\
    \ New RSVP-TE Class Numbers .................................18\n      8.3. New\
    \ Error Codes ...........................................18\n   9. Acknowledgments\
    \ ................................................19\n   10. References ....................................................19\n\
    \      10.1. Normative References .....................................19\n  \
    \    10.2. Informative References ...................................19\n   Appendix\
    \ A. Applications ..........................................21\n      A.1. Inter-Area\
    \ LSP Protection .................................21\n      A.2. Inter-AS LSP\
    \ Protection ...................................22\n      A.3. Protection in the\
    \ GMPLS Overlay Model .....................24\n      A.4. LSP Protection inside\
    \ a Single Area .......................25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RSVP-TE specification [RFC3209] and GMPLS extensions\
    \ [RFC3473]\n   allow abstract nodes and resources to be explicitly included in\
    \ a\n   path setup, using the Explicit Route Object (ERO).\n   In some systems,\
    \ it may be useful to specify and signal abstract\n   nodes and resources that\
    \ are to be explicitly excluded from routes.\n   This may be because loose hops\
    \ or abstract nodes need to be prevented\n   from selecting a route through a\
    \ specific resource.  This is a\n   special case of distributed path calculation\
    \ in the network.\n   For example, route exclusion could be used in the case where\
    \ two\n   non-overlapping Label Switched Paths (LSPs) are required.  In this\n\
    \   case, one option might be to set up one path and collect its route\n   using\
    \ route recording, and then to exclude the routers on that first\n   path from\
    \ the setup for the second path.  Another option might be to\n   set up two parallel\
    \ backbones, dual home the provider edge (PE)\n   routers to both backbones, and\
    \ then exclude the local router on\n   backbone A the first time that you set\
    \ up an LSP (to a particular\n   distant PE), and exclude the local router on\
    \ backbone B the second\n   time that you set up an LSP.\n   Two types of exclusions\
    \ are required:\n   1. Exclusion of certain abstract nodes or resources on the\
    \ whole\n      path.  This set of abstract nodes is referred to as the Exclude\n\
    \      Route list.\n   2. Exclusion of certain abstract nodes or resources between\
    \ a\n      specific pair of abstract nodes present in an ERO.  Such specific\n\
    \      exclusions are referred to as Explicit Exclusion Route.\n   To convey these\
    \ constructs within the signaling protocol, a new RSVP\n   object and a new ERO\
    \ subobject are introduced respectively.\n   - A new RSVP-TE object is introduced\
    \ to convey the Exclude Route\n     list.  This object is the EXCLUDE_ROUTE object\
    \ (XRO).\n   - The second type of exclusion is achieved through a modification\
    \ to\n     the existing ERO.  A new ERO subobject type the Explicit Exclusion\n\
    \     Route Subobject (EXRS) is introduced to indicate an exclusion\n     between\
    \ a pair of included abstract nodes.\n   The knowledge of SRLGs, as defined in\
    \ [RFC4216], may be used to\n   compute diverse paths that can be used for protection.\
    \  In systems\n   where it is useful to signal exclusions, it may be useful to\
    \ signal\n   SRLGs to indicate groups of resources that should be excluded on\
    \ the\n   whole path or between two abstract nodes specified in an explicit\n\
    \   path.\n   This document introduces a subobject to indicate an SRLG to be\n\
    \   signaled in either of the two exclusion methods described above.\n   This\
    \ document does not assume or preclude any other usage for this\n   subobject.\
    \  This subobject might also be appropriate for use within\n   an Explicit Route\
    \ object (ERO) or Record Route object (RRO), but this\n   is outside the scope\
    \ of this document.\n"
- title: 1.1.  Requirements Notation
  contents:
  - "1.1.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.2.  Scope of Exclude Routes
  contents:
  - "1.2.  Scope of Exclude Routes\n   This document does not preclude a route exclusion\
    \ from listing\n   arbitrary nodes or network elements to avoid.  The intent is,\n\
    \   however, to indicate only the minimal number of subobjects to be\n   explicitly\
    \ avoided.  For instance, it may be necessary to signal only\n   the SRLGs (or\
    \ Shared Risk Link Groups) to avoid.  That is, the route\n   exclusion is not\
    \ intended to define the actual route by listing all\n   of the choices to exclude\
    \ at each hop, but rather to constrain the\n   normal route selection process\
    \ where loose hops or abstract nodes are\n   to be expanded by listing certain\
    \ elements to be avoided.\n   It is envisaged that most of the conventional inclusion\
    \ subobjects\n   are specified in the signaled ERO only for the area where they\
    \ are\n   pertinent.  The number of subobjects to be avoided, specified in the\n\
    \   signaled XRO, may be constant throughout the whole path setup, or the\n  \
    \ subobjects to be avoided may be removed from the XRO as they become\n   irrelevant\
    \ in the subsequent hops of the path setup.\n   For example, consider an LSP that\
    \ traverses multiple computation\n   domains.  A computation domain may be an\
    \ area in the administrative\n   or IGP sense, or may be an arbitrary division\
    \ of the network for\n   active management and path computational purposes.  Let\
    \ the primary\n   path be (Ingress, A1, A2, AB1, B1, B2, BC1, C1, C2, Egress)\
    \ where:\n   - Xn denotes a node in domain X, and\n   - XYn denotes a node on\
    \ the border of domain X and domain Y.\n   Note that Ingress is a node in domain\
    \ A, and Egress is a node in\n   domain C.  This is shown in Figure 1 where the\
    \ domains correspond\n   with areas.\n           area A               area B \
    \             area C\n    <-------------------> <----------------> <------------------>\n\
    \   Ingress-----A1----A2----AB1----B1----B2----BC1----C1----C2----Egress\n   ^\
    \  \\                / | \\              / | \\                /\n   |   \\  \
    \            /  |  \\            /  |  \\              /\n   |    A3----------A4--AB2--B3--------B4--BC2--C3----------C4\n\
    \   |                     ^                  ^\n   |                     |   \
    \               |\n   |                     |                  |\n   |       \
    \              |              ERO: (C3-strict, C4-strict,\n   |              \
    \       |                    Egress-strict)\n   |                     |      \
    \        XRO: Not needed\n   |                     |\n   |               ERO:\
    \ (B3-strict, B4-strict, BC2-strict, Egress-loose)\n   |               XRO: (BC1,\
    \ C1, C2)\n   |\n   ERO: (A3-strict, A4-strict, AB2-strict, Egress-loose)\n  \
    \ XRO: (AB1, B1, B2, BC1, C1, C2, Egress)\n           Figure 1: Domains Corresponding\
    \ to IGP Areas\n   Consider the establishment of a node-diverse protection path\
    \ in the\n   example above.  The protection path must avoid all nodes on the\n\
    \   primary path.  The exclusions for area A are handled during\n   Constrained\
    \ Shortest Path First (CSPF) computation at Ingress, so the\n   ERO and XRO signaled\
    \ at Ingress could be (A3-strict, A4-strict,\n   AB2-strict, Egress-loose) and\
    \ (AB1, B1, B2, BC1, C1, C2),\n   respectively.  At AB2, the ERO and XRO could\
    \ be (B3-strict, B4-\n   strict, BC2-strict, Egress-loose) and (BC1, C1, C2),\
    \ respectively.\n   At BC2, the ERO could be (C3-strict, C4-strict, Egress-strict)\
    \ and an\n   XRO is not needed from BC2 onwards.\n   In general, consideration\
    \ SHOULD be given (as with explicit route) to\n   the size of signaled data and\
    \ the impact on the signaling protocol.\n"
- title: 1.3.  Relationship to MPLS TE MIB
  contents:
  - "1.3.  Relationship to MPLS TE MIB\n   [RFC3812] defines managed objects for managing\
    \ and modeling MPLS-\n   based traffic engineering.  Included in [RFC3812] is\
    \ a means to\n   configure explicit routes for use on specific LSPs.  This\n \
    \  configuration allows the exclusion of certain resources.\n   In systems where\
    \ the full explicit path is not computed at the\n   ingress (or at a path computation\
    \ site for use at the ingress), it\n   may be necessary to signal those exclusions.\
    \  This document offers a\n   means of doing this signaling.\n"
- title: 2.  Shared Risk Link Groups
  contents:
  - "2.  Shared Risk Link Groups\n   The identifier of an SRLG is defined as a 32-bit\
    \ quantity in\n   [RFC4202].  An SRLG subobject is introduced such that it can\
    \ be used\n   in the exclusion methods as described in the following sections.\n\
    \   This document does not assume or preclude any other usage for this\n   subobject.\
    \  This subobject might also be appropriate for use within\n   Explicit Route\
    \ object (ERO) or Record Route object (RRO), but this is\n   outside the scope\
    \ of this document.\n"
- title: 2.1.  SRLG Subobject
  contents:
  - "2.1.  SRLG Subobject\n   The new SRLG subobject is defined by this document as\
    \ follows.  Its\n   format is modeled on the ERO subobjects defined in [RFC3209].\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|    Type     |     Length    |       SRLG Id (4 bytes)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      SRLG Id (continued)      |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      L\n         The L bit is an attribute of the subobject.  The L bit is set\n\
    \         if the subobject represents a loose hop in the explicit route.\n   \
    \      If the bit is not set, the subobject represents a strict hop in\n     \
    \    the explicit route.\n         For exclusions (as used by XRO and EXRS defined\
    \ in this\n         document), the L bit SHOULD be set to zero and ignored.\n\
    \      Type\n         The type of the subobject (34)\n      Length\n         The\
    \ Length contains the total length of the subobject in bytes,\n         including\
    \ the Type and Length fields.  The Length is always 8.\n      SRLG Id\n      \
    \   The 32-bit identifier of the SRLG.\n      Reserved\n         This field is\
    \ reserved.  It SHOULD be set to zero on\n         transmission and MUST be ignored\
    \ on receipt.\n"
- title: 3.  Exclude Route List
  contents:
  - "3.  Exclude Route List\n   The exclude route identifies a list of abstract nodes\
    \ that should not\n   be traversed along the path of the LSP being established.\
    \  It is\n   RECOMMENDED that the size of the exclude route list be limited to\
    \ a\n   value local to the node originating the exclude route list.\n"
- title: 3.1.  EXCLUDE_ROUTE Object (XRO)
  contents:
  - "3.1.  EXCLUDE_ROUTE Object (XRO)\n   Abstract nodes to be excluded from the path\
    \ are specified via the\n   EXCLUDE_ROUTE object (XRO).\n   Currently, one C_Type\
    \ is defined, Type 1 EXCLUDE_ROUTE.  The\n   EXCLUDE_ROUTE object has the following\
    \ format:\n         Class = 232, C_Type = 1\n        0                   1   \
    \                2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \     //                        (Subobjects)                         //\n    \
    \   |                                                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   The contents\
    \ of an EXCLUDE_ROUTE object are a series of variable-\n   length data items called\
    \ subobjects.  This specification adapts ERO\n   subobjects as defined in [RFC3209],\
    \ [RFC3473], and [RFC3477] for use\n   in route exclusions.  The SRLG subobject\
    \ as defined in Section 2 of\n   this document has not been defined before.  The\
    \ SRLG subobject is\n   defined here for use with route exclusions.\n   The following\
    \ subobject types are supported.\n        Type           Subobject\n        -------------+-------------------------------\n\
    \        1              IPv4 prefix\n        2              IPv6 prefix\n    \
    \    4              Unnumbered Interface ID\n        32             Autonomous\
    \ system number\n        34             SRLG\n   The defined values for Type above\
    \ are specified in [RFC3209] and in\n   this document.\n   The concept of loose\
    \ or strict hops has no meaning in route\n   exclusion.  The L bit, defined for\
    \ ERO subobjects in [RFC3209], is\n   reused here to indicate that an abstract\
    \ node MUST be excluded (value\n   0) or SHOULD be avoided (value 1).  The distinction\
    \ is that the path\n   of an LSP must not traverse an abstract node listed in\
    \ the XRO with\n   the L bit clear, but may traverse one with the L bit set. \
    \ A node\n   responsible for routing an LSP (for example, for expanding a loose\n\
    \   hop) should attempt to minimize the number of abstract nodes listed\n   in\
    \ the XRO with the L bit set that are traversed by the LSP according\n   to local\
    \ policy.  A node generating XRO subobjects with the L bit set\n   must be prepared\
    \ to accept an LSP that traverses one, some, or all of\n   the corresponding abstract\
    \ nodes.\n   Subobjects 1, 2, and 4 refer to an interface or a set of interfaces.\n\
    \   An Attribute octet is introduced in these subobjects to indicate the\n   attribute\
    \ (e.g., interface, node, SRLG) associated with the\n   interfaces that should\
    \ be excluded from the path.  For instance, the\n   attribute node allows a whole\
    \ node to be excluded from the path by\n   specifying an interface of that node\
    \ in the XRO subobject, in\n   contrast to the attribute interface, which allows\
    \ a specific\n   interface (or multiple interfaces) to be excluded from the path\n\
    \   without excluding the whole node.  The attribute SRLG allows all\n   SRLGs\
    \ associated with an interface to be excluded from the path.\n"
- title: 3.1.1.  IPv4 Prefix Subobject
  contents:
  - "3.1.1.  IPv4 Prefix Subobject\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|    Type     |     Length    | IPv4 address (4 bytes)        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | IPv4 address (continued)      | Prefix Length |   Attribute   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      L\n         0 indicates that the attribute specified MUST be excluded.\n\
    \         1 indicates that the attribute specified SHOULD be avoided.\n      Attribute\n\
    \         Interface attribute values\n            0 indicates that the interface\
    \ or set of interfaces\n            associated with the IPv4 prefix should be\
    \ excluded or\n            avoided.\n         Node attribute value\n         \
    \   1 indicates that the node or set of nodes associated with\n            the\
    \ IPv4 prefix should be excluded or avoided.\n         SRLG attribute values\n\
    \            2 indicates that all the SRLGs associated with the IPv4\n       \
    \     prefix should be excluded or avoided.\n   The rest of the fields are as\
    \ defined in [RFC3209].\n"
- title: 3.1.2.  IPv6 Prefix Subobject
  contents:
  - "3.1.2.  IPv6 Prefix Subobject\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|    Type     |     Length    | IPv6 address (16 bytes)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | IPv6 address (continued)                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | IPv6 address (continued)                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | IPv6 address (continued)                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | IPv6 address (continued)      | Prefix Length |   Attribute   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      L\n         0 indicates that the attribute specified MUST be excluded.\n\
    \         1 indicates that the attribute specified SHOULD be avoided.\n      Attribute\n\
    \         Interface attribute value\n            0 indicates that the interface\
    \ or set of interfaces\n            associated with the IPv6 prefix should be\
    \ excluded or\n            avoided.\n         Node attribute value\n         \
    \   1 indicates that the node or set of nodes associated with\n            the\
    \ IPv6 prefix should be excluded or avoided.\n         SRLG attribute value\n\
    \            2 indicates that all the SRLGs associated with the IPv6\n       \
    \     prefix should be excluded or avoided.\n   The rest of the fields are as\
    \ defined in [RFC3209].\n"
- title: 3.1.3.  Unnumbered Interface ID Subobject
  contents:
  - "3.1.3.  Unnumbered Interface ID Subobject\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|    Type     |     Length    |    Reserved   |  Attribute    |\n   | |\
    \             |               |(must be zero) |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        TE Router ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Interface ID (32 bits)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      L\n         0 indicates that the attribute specified MUST be excluded.\n\
    \         1 indicates that the attribute specified SHOULD be avoided.\n      Attribute\n\
    \         Interface attribute value\n            0 indicates that the Interface\
    \ ID specified should be\n            excluded or avoided.\n         Node attribute\
    \ value\n            1 indicates that the node with the Router ID should be\n\
    \            excluded or avoided (this can be achieved using an IPv4/v6\n    \
    \        subobject as well, but is included here because it may be\n         \
    \   convenient to use information from subobjects of an RRO, as\n            defined\
    \ in [RFC3477], in specifying the exclusions).\n         SRLG attribute value\n\
    \            2 indicates that all the SRLGs associated with the interface\n  \
    \          should be excluded or avoided.\n      Reserved\n         This field\
    \ is reserved.  It SHOULD be set to zero on\n         transmission and MUST be\
    \ ignored on receipt.\n   The rest of the fields are as defined in [RFC3477].\n"
- title: 3.1.4.  Autonomous System Number Subobject
  contents:
  - "3.1.4.  Autonomous System Number Subobject\n   The meaning of the L bit is as\
    \ follows:\n      0 indicates that the abstract node specified MUST be excluded.\n\
    \      1 indicates that the abstract node specified SHOULD be avoided.\n   The\
    \ rest of the fields are as defined in [RFC3209].  There is no\n   Attribute octet\
    \ defined.\n"
- title: 3.1.5.  SRLG Subobject
  contents:
  - "3.1.5.  SRLG Subobject\n   The meaning of the L bit is as follows:\n      0 indicates\
    \ that the SRLG specified MUST be excluded\n      1 indicates that the SRLG specified\
    \ SHOULD be avoided\n   The Attribute octet is not present.  The rest of the fields\
    \ are as\n   defined in the \"SRLG Subobject\" section of this document.\n"
- title: 3.2.  Processing Rules for the EXCLUDE_ROUTE Object (XRO)
  contents:
  - "3.2.  Processing Rules for the EXCLUDE_ROUTE Object (XRO)\n   The exclude route\
    \ list is encoded as a series of subobjects contained\n   in an EXCLUDE_ROUTE\
    \ object.  Each subobject identifies an abstract\n   node in the exclude route\
    \ list.\n   Each abstract node may be a precisely specified IP address belonging\n\
    \   to a node, or an IP address with prefix identifying interfaces of a\n   group\
    \ of nodes, an Autonomous System, or an SRLG.\n   The Explicit Route and routing\
    \ processing is unchanged from the\n   description in [RFC3209] with the following\
    \ additions:\n   1. When a Path message is received at a node, the node MUST check\n\
    \      that it is not a member of any of the abstract nodes in the XRO if\n  \
    \    it is present in the Path message.  If the node is a member of any\n    \
    \  of the abstract nodes in the XRO with the L-flag set to \"exclude\",\n    \
    \  it SHOULD return a PathErr with the error code \"Routing Problem\"\n      and\
    \ error value of \"Local node in Exclude Route\".  If there are\n      SRLGs in\
    \ the XRO, the node SHOULD check that the resources the\n      node uses are not\
    \ part of any SRLG with the L-flag set to\n      \"exclude\" that is specified\
    \ in the XRO.  If it is, it SHOULD\n      return a PathErr with error code \"\
    Routing Problem\" and error value\n      of \"Local node in Exclude Route\".\n\
    \   2. Each subobject MUST be consistent.  If a subobject is not\n      consistent\
    \ then the node SHOULD return a PathErr with error code\n      \"Routing Problem\"\
    \ and error value \"Inconsistent Subobject\".  An\n      example of an inconsistent\
    \ subobject is an IPv4 Prefix subobject\n      containing the IP address of a\
    \ node and the attribute field is set\n      to \"interface\" or \"SRLG\".\n \
    \  3. The subobjects in the ERO and XRO SHOULD NOT contradict each\n      other.\
    \  If a Path message is received that contains contradicting\n      ERO and XRO\
    \ subobjects, then:\n      - Subobjects in the XRO with the L flag not set (zero)\
    \ MUST take\n        precedence over the subobjects in the ERO -- that is, a\n\
    \        mandatory exclusion expressed in the XRO MUST be honored and an\n   \
    \     implementation MUST reject such a Path message.  This means that\n     \
    \   a PathErr with error code \"Routing Problem\" and error value of\n       \
    \ \"Route blocked by Exclude Route\" is returned.\n      - Subobjects in the XRO\
    \ with the L flag set do not take precedence\n        over ERO subobjects -- that\
    \ is, an implementation MAY choose to\n        reject a Path message because of\
    \ such a contradiction, but MAY\n        continue and set up the LSP (ignoring\
    \ the XRO subobjects that\n        contradict the ERO subobjects).\n   4. When\
    \ choosing a next hop or expanding an explicit route to include\n      additional\
    \ subobjects, a node:\n      a. MUST NOT introduce an explicit node or an abstract\
    \ node that\n         equals or is a member of any abstract node that is specified\
    \ in\n         the EXCLUDE_ROUTE object with the L-flag set to \"exclude\".  The\n\
    \         number of introduced explicit nodes or abstract nodes with the\n   \
    \      L flag set to \"avoid\", which indicates that it is not mandatory\n   \
    \      to be excluded but that it is less preferred, SHOULD be\n         minimized\
    \ in the computed path.\n      b. MUST NOT introduce links, nodes, or resources\
    \ identified by the\n         SRLG Id specified in the SRLG subobjects(s).  The\
    \ number of\n         introduced SRLGs with the L flag set to \"avoid\" SHOULD\
    \ be\n         minimized.\n      If these rules preclude further forwarding of\
    \ the Path message,\n      the node SHOULD return a PathErr with the error code\
    \ \"Routing\n      Problem\" and error value of \"Route blocked by Exclude Route\"\
    .\n      Note that the subobjects in the XRO is an unordered list of\n      subobjects.\n\
    \   A node receiving a Path message carrying an XRO MAY reject the\n   message\
    \ if the XRO is too large or complicated for the local\n   implementation or the\
    \ rules of local policy.  In this case, the node\n   MUST send a PathErr message\
    \ with the error code \"Routing Error\" and\n   error value \"XRO Too Complex\"\
    .  An ingress LSR receiving this error\n   code/value combination MAY reduce the\
    \ complexity of the XRO or route\n   around the node that rejected the XRO.\n\
    \   The XRO Class-Num is of the form 11bbbbbb so that nodes that do not\n   support\
    \ the XRO forward it uninspected and do not apply the\n   extensions to ERO processing\
    \ described above.  This approach is\n   chosen to allow route exclusion to traverse\
    \ parts of the network that\n   are not capable of parsing or handling the new\
    \ function.  Note that\n   Record Route may be used to allow computing nodes to\
    \ observe\n   violations of route exclusion and attempt to re-route the LSP\n\
    \   accordingly.\n   If a node supports the XRO, but not a particular subobject\
    \ or part of\n   that subobject, then that particular subobject is ignored.  Examples\n\
    \   of a part of a subobject that can be supported are: (1) only prefix\n   32\
    \ of the IPv4 prefix subobject could be supported, or (2) a\n   particular subobject\
    \ is supported but not the particular attribute\n   field.\n   When a node forwards\
    \ a Path message, it can do the following three\n   operations related to XRO\
    \ besides the processing rules mentioned\n   above:\n   1. If no XRO was present,\
    \ an XRO may be included.\n   2. If an XRO was present, it may remove the XRO\
    \ if it is sure that\n      the next nodes do not need this information anymore.\
    \  An example\n      is where a node can expand the ERO to a full strict path\
    \ towards\n      the destination.  See Figure 1 where BC2 is removing the XRO\
    \ from\n      the Path message.\n   3. If an XRO was present, the content of the\
    \ XRO can be modified.\n      Subobjects can be added or removed.  See Figure\
    \ 1 for an example\n      where AB2 is stripping off some subobjects.\n   In any\
    \ case, a node MUST NOT introduce any explicit or abstract node\n   in the XRO\
    \ (irrespective of the value of the L flag) that it also has\n   introduced in\
    \ the ERO.\n"
- title: 4.  Explicit Exclusion Route
  contents:
  - "4.  Explicit Exclusion Route\n   The Explicit Exclusion Route defines abstract\
    \ nodes or resources\n   (such as links, unnumbered interfaces, or labels) that\
    \ must not or\n   should not be used on the path between two inclusive abstract\
    \ nodes\n   or resources in the explicit route.\n"
- title: 4.1.  Explicit Exclusion Route Subobject (EXRS)
  contents:
  - "4.1.  Explicit Exclusion Route Subobject (EXRS)\n   A new ERO subobject type\
    \ is defined.  The Explicit Exclusion Route\n   Subobject (EXRS) has type 33.\
    \  Although the EXRS is an ERO subobject\n   and the XRO is reusing the ERO subobject,\
    \ an EXRS MUST NOT be present\n   in an XRO.  An EXRS is an ERO subobject that\
    \ contains one or more\n   subobjects of its own, called EXRS subobjects.\n  \
    \ The format of the EXRS is as follows:\n    0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|    Type     |     Length    |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   // \
    \               one or more EXRS subobjects                  //\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      L\n         It MUST be set to zero on transmission and MUST be ignored\
    \ on\n         receipt.  (Note: The L bit in an EXRS subobject is as defined\n\
    \         for the XRO subobjects.)\n      Type\n         The type of the subobject\
    \ (33).\n      Reserved\n         This field is reserved.  It SHOULD be set to\
    \ zero on\n         transmission and MUST be ignored on receipt.\n      EXRS subobjects\n\
    \         An EXRS subobject indicates the abstract node or resource to be\n  \
    \       excluded.  The format of an EXRS subobject is exactly the same\n     \
    \    as the format of a subobject in the XRO.  An EXRS may include\n         all\
    \ subobjects defined in this document for the XRO.\n   Thus, an EXRS for an IP\
    \ hop may look as follows:\n     0                   1                   2   \
    \                3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |L|    Type     |     Length    |           Reserved            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |L|    Type     |     Length    | IPv4 address (4 bytes)        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | IPv4 address (continued)      | Prefix Length |   Attribute   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.2.  Processing Rules for the Explicit Exclusion Route Subobject (EXRS)
  contents:
  - "4.2.  Processing Rules for the Explicit Exclusion Route Subobject (EXRS)\n  \
    \ Each EXRS may carry multiple exclusions.  The exclusion is encoded\n   exactly\
    \ as for XRO subobjects and prefixed by an additional Type and\n   Length.\n \
    \  The scope of the exclusion is the step between the previous ERO\n   subobject\
    \ that identifies an abstract node, and the subsequent ERO\n   subobject that\
    \ identifies an abstract node.  The processing rules of\n   the EXRS are the same\
    \ as the processing rule of the XRO within this\n   scope.  Multiple exclusions\
    \ may be present between any pair of\n   abstract nodes.\n   Exclusions may indicate\
    \ explicit nodes, abstract nodes, or Autonomous\n   Systems that must not be traversed\
    \ on the path to the next abstract\n   node indicated in the ERO.\n   Exclusions\
    \ may also indicate resources (such as unnumbered\n   interfaces, link ids, and\
    \ labels) that must not be used on the path\n   to the next abstract node indicated\
    \ in the ERO.\n   SRLGs may also be indicated for exclusion from the path to the\
    \ next\n   abstract node in the ERO by the inclusion of an EXRS containing an\n\
    \   SRLG subobject.  If the L bit in the SRLG subobject is zero, the\n   resources\
    \ (nodes, links, etc.) identified by the SRLG MUST NOT be\n   used on the path\
    \ to the next abstract node indicated in the ERO.  If\n   the L bit is set, the\
    \ resources identified by the SRLG SHOULD be\n   avoided.\n   If a node is called\
    \ upon to process an EXRS and does not support\n   handling of exclusions it will\
    \ behave as described in [RFC3209] when\n   an unrecognized ERO subobject is encountered.\
    \  This means that this\n   node will return a PathErr with error code \"Routing\
    \ Error\" and error\n   value \"Bad EXPLICIT_ROUTE object\" with the EXPLICIT_ROUTE\
    \ object\n   included, truncated (on the left) to the offending EXRS.\n   If the\
    \ presence of EXRS precludes further forwarding of the Path\n   message, the node\
    \ SHOULD return a PathErr with the error code\n   \"Routing Problem\" and error\
    \ value \"Route Blocked by Exclude Route\".\n   A node MAY reject a Path message\
    \ if the EXRS is too large or\n   complicated for the local implementation or\
    \ as governed by local\n   policy.  In this case, the node MUST send a PathErr\
    \ message with the\n   error code \"Routing Error\" and error value \"EXRS Too\
    \ Complex\".  An\n   ingress LSR receiving this error code/value combination MAY\
    \ reduce\n   the complexity of the EXRS or route around the node that rejected\
    \ the\n   EXRS.\n"
- title: 5.  Processing of XRO together with EXRS
  contents:
  - "5.  Processing of XRO together with EXRS\n   When an LSR performs ERO expansion\
    \ and finds both the XRO in the Path\n   message and EXRS in the ERO, it MUST\
    \ exclude all the SRLGs, nodes,\n   links, and resources listed in both places.\
    \  Where some elements\n   appear in both lists, it MUST be handled according\
    \ to the stricter\n   exclusion request.  That is, if one list says that an SRLG,\
    \ node,\n   link, or resource must be excluded, and the other says only that it\n\
    \   should be avoided, then the element MUST be excluded.\n"
- title: 6.  Minimum Compliance
  contents:
  - "6.  Minimum Compliance\n   An implementation MUST be at least compliant with\
    \ the following:\n   1. The XRO MUST be supported with the following restrictions:\n\
    \      - The IPv4 Prefix subobject MUST be supported with a prefix length\n  \
    \      of 32, and an attribute value of \"interface\" and \"node\".  Other\n \
    \       prefix values and attribute values MAY be supported.\n      - The IPv6\
    \ Prefix subobject MUST be supported with a prefix length\n        of 128, and\
    \ an attribute value of \"interface\" and \"node\".  Other\n        prefix values\
    \ and attribute values MAY be supported.\n   2. The EXRS MAY be supported.  If\
    \ supported, the same restrictions as\n      for the XRO apply.  If not supported,\
    \ an EXRS encountered during\n      normal ERO processing MUST be rejected as\
    \ an unknown ERO subobject\n      as described in Section 4.2.  Note that a node\
    \ SHOULD NOT parse\n      ahead into an ERO, and if it does, it MUST NOT reject\
    \ the ERO if\n      it discovers an EXRS that applies to another node.\n   3.\
    \ If XRO or EXRS are supported, the implementation MUST be compliant\n      with\
    \ the processing rules of the supported, not supported, or\n      partially supported\
    \ subobjects as specified within this document.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security considerations for MPLS-TE and GMPLS\
    \ signaling are covered\n   in [RFC3209] and [RFC3473].  This document does not\
    \ introduce any new\n   messages or any substantive new processing, and so those\
    \ security\n   considerations continue to apply.\n   Note that any security concerns\
    \ that exist with explicit routes\n   should be considered with regard to route\
    \ exclusions.  For example,\n   some administrative boundaries may consider explicit\
    \ routes to be\n   security violations and may strip EROs from the Path messages\
    \ that\n   they process.  In this case, the XRO should also be considered for\n\
    \   removal from the Path message.\n   It is possible that an arbitrarily complex\
    \ XRO or EXRS sequence could\n   be introduced as a form of denial-of-service\
    \ attack since its\n   presence will potentially cause additional processing at\
    \ each node on\n   the path of the LSP.  It should be noted that such an attack\
    \ assumes\n   that an otherwise trusted LSR (i.e., one that has been authenticated\n\
    \   by its neighbors) is misbehaving.  A node that receives an XRO or\n   EXRS\
    \ sequence that it considers too complex according to its local\n   policy may\
    \ respond with a PathErr message carrying the error code\n   \"Routing Error\"\
    \ and error value \"XRO Too Complex\" or \"EXRS Too\n   Complex\".\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   It might be considered that an alternative approach\
    \ would be to\n   assign one of the bits of the ERO subobject type field (perhaps\
    \ the\n   top bit) to identify that a subobject is intended for inclusion\n  \
    \ rather than exclusion.  However, [RFC3209] states that the type field\n   (seven\
    \ bits) should be assigned as 0 - 63 through IETF consensus\n   action, 64 - 95\
    \ as first come first served, and 96 - 127 are reserved\n   for private use. \
    \ It would not be acceptable to disrupt existing\n   implementations, so the only\
    \ option would be to split the IETF\n   consensus range leaving only 32 subobject\
    \ types.  It is felt that 32\n   would be an unacceptably small number for future\
    \ expansion of the\n   protocol.\n"
- title: 8.1.  New ERO Subobject Type
  contents:
  - "8.1.  New ERO Subobject Type\n   IANA registry: RSVP PARAMETERS\n   Subsection:\
    \ Class Names, Class Numbers, and Class Types\n   A new subobject has been added\
    \ to the existing entry for:\n   20  EXPLICIT_ROUTE\n   The registry reads:\n\
    \               33  Explicit Exclusion Route subobject (EXRS)\n   The Explicit\
    \ Exclusion Route subobject (EXRS) is defined in Section\n   4.1, \"Explicit Exclusion\
    \ Route Subobject (EXRS)\".  This subobject may\n   be present in the Explicit\
    \ Route Object, but not in the Route Record\n   Object or in the new EXCLUDE_ROUTE\
    \ object, and it should not be\n   listed among the subobjects for those objects.\n"
- title: 8.2.  New RSVP-TE Class Numbers
  contents:
  - "8.2.  New RSVP-TE Class Numbers\n   IANA registry: RSVP PARAMETERS\n   Subsection:\
    \ Class Names, Class Numbers, and Class Types\n   A new class number has been\
    \ added for EXCLUDE_ROUTE object (XRO) as\n   defined in Section 3.1, \"EXCLUDE_ROUTE\
    \ Object (XRO)\".\n   EXCLUDE_ROUTE\n   Class-Num of type 11bbbbbb\n   Value:\
    \ 232\n   Defined CType: 1 (EXCLUDE_ROUTE)\n   Subobjects 1, 2, 4, and 32 are\
    \ as defined for Explicit Route Object.\n   An additional subobject has been registered\
    \ as requested in Section\n   8.1, \"New ERO Subobject Type\".  The text should\
    \ appear as:\n   Sub-object type\n                1   IPv4 address           \
    \   [RFC3209]\n                2   IPv6 address              [RFC3209]\n     \
    \           4   Unnumbered Interface ID   [RFC3477]\n               32   Autonomous\
    \ system number  [RFC3209]\n               33   Explicit Exclusion Route subobject\
    \ (EXRS) [RFC4874]\n               34   SRLG                      [RFC4874]\n\
    \   The SRLG subobject is defined in Section 3.1.5, \"SRLG Subobject\".\n   The\
    \ value 34 has been assigned.\n"
- title: 8.3.  New Error Codes
  contents:
  - "8.3.  New Error Codes\n   IANA registry: RSVP PARAMETERS\n   Subsection: Error\
    \ Codes and Globally-Defined Error Value Sub-Codes\n   New Error Values sub-codes\
    \ have been registered for the Error Code\n   'Routing Problem' (24).\n     64\
    \ = Unsupported Exclude Route Subobject Type\n     65 = Inconsistent Subobject\n\
    \     66 = Local Node in Exclude Route\n     67 = Route Blocked by Exclude Route\n\
    \     68 = XRO Too Complex\n     69 = EXRS Too Complex\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   This document reuses text from [RFC3209] for the description\
    \ of\n   EXCLUDE_ROUTE.\n   The authors would like to express their thanks to\
    \ Lou Berger, Steffen\n   Brockmann, Igor Bryskin, Dimitri Papadimitriou, Cristel\
    \ Pelsser, and\n   Richard Rabbat for their considered opinions on this document.\
    \  Also\n   thanks to Yakov Rekhter for reminding us about SRLGs!\n   Thanks to\
    \ Eric Gray for providing GenArt review and to Ross Callon\n   for his comments.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC3209]   Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan,\
    \ V.,\n               and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n\
    \               Tunnels\", RFC 3209, December 2001.\n   [RFC3473]   Berger, L.,\
    \ \"Generalized Multi-Protocol Label Switching\n               (GMPLS) Signaling\
    \ Resource ReserVation Protocol-Traffic\n               Engineering (RSVP-TE)\
    \ Extensions\", RFC 3473, January\n               2003.\n   [RFC3477]   Kompella,\
    \ K. and Y. Rekhter, \"Signalling Unnumbered Links\n               in Resource\
    \ ReSerVation Protocol - Traffic Engineering\n               (RSVP-TE)\", RFC\
    \ 3477, January 2003.\n   [RFC4202]   Kompella, K. and Y. Rekhter, \"Routing Extensions\
    \ in\n               Support of Generalized Multi-Protocol Label Switching\n \
    \              (GMPLS)\", RFC 4202, October 2005.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [CRANKBACK] Farrel, A., Satyanarayana, A.,\
    \ Iwata, A., Ash, G., and S.\n               Marshall-Unitt, \"Crankback Signaling\
    \ Extensions for MPLS\n               Signaling\", Work in Progress, January 2007.\n\
    \   [RFC3630]   Katz, D., Kompella, K., and D. Yeung, \"Traffic\n            \
    \   Engineering (TE) Extensions to OSPF Version 2\", RFC 3630,\n             \
    \  September 2003.\n   [RFC3784]   Smit, H. and T. Li, \"Intermediate System to\
    \ Intermediate\n               System (IS-IS) Extensions for Traffic Engineering\
    \ (TE)\",\n               RFC 3784, June 2004.\n   [RFC3812]   Srinivasan, C.,\
    \ Viswanathan, A., and T. Nadeau,\n               \"Multiprotocol Label Switching\
    \ (MPLS) Traffic Engineering\n               (TE) Management Information Base\
    \ (MIB)\", RFC 3812, June\n               2004.\n   [RFC4208]   Swallow, G., Drake,\
    \ J., Ishimatsu, H., and Y. Rekhter,\n               \"Generalized Multiprotocol\
    \ Label Switching (GMPLS) User-\n               Network Interface (UNI): Resource\
    \ ReserVation Protocol-\n               Traffic Engineering (RSVP-TE) Support\
    \ for the Overlay\n               Model\", RFC 4208, October 2005.\n   [RFC4216]\
    \   Zhang, R. and JP. Vasseur, \"MPLS Inter-Autonomous System\n              \
    \ (AS) Traffic Engineering (TE) Requirements\", RFC 4216,\n               November\
    \ 2005.\n"
- title: Appendix A.  Applications
  contents:
  - "Appendix A.  Applications\n   This section describes some applications that can\
    \ make use of the\n   XRO.  The intention is to show that the XRO is not an application-\n\
    \   specific object, but that it can be used for multiple purposes.  In a\n  \
    \ few examples, other solutions might be possible for that particular\n   case,\
    \ but the intention is to show that a single object can be used\n   for all the\
    \ examples, hence making the XRO a rather generic object\n   without having to\
    \ define a solution and new objects for each new\n   application.\n"
- title: A.1.  Inter-Area LSP Protection
  contents:
  - "A.1.  Inter-Area LSP Protection\n   One method to establish an inter-area LSP\
    \ is where the ingress router\n   selects an ABR, and then the ingress router\
    \ computes a path towards\n   this selected ABR such that the configured constraints\
    \ of the LSP are\n   fulfilled.  In the example of Figure A.1, an LSP has to be\n\
    \   established from node A in area 1 to node C in area 2.  If no loose\n   hops\
    \ are configured, then the computed ERO at A could look as\n   follows: (A1-strict,\
    \ A2-strict, ABR1-strict, C-loose).  When the Path\n   message arrives at ABR1,\
    \ then the ERO is (ABR1-strict, C-loose), and\n   it can be expanded by ABR1 to\
    \ (B1-strict, ABR3-strict, C-loose).\n   Similarly, at ABR3 the received ERO is\
    \ (ABR3-strict, C-loose), and it\n   can be expanded to (C1-strict, C2-strict,\
    \ C-strict).  If a backup LSP\n   also has to be established, then A takes another\
    \ ABR (ABR2 in this\n   case) and computes a path towards this ABR that fulfills\
    \ the\n   constraints of the LSP and that is disjoint from the path of the\n \
    \  primary LSP.  The ERO generated by A looks as follows for this\n   example:\
    \ (A3-strict, A4-strict, ABR2-strict, C-loose).\n   In order to let ABR2 expand\
    \ the ERO, it also needs to know the path\n   of the primary LSP so that the ERO\
    \ expansion is disjoint from the\n   path of the primary LSP.  Therefore, A also\
    \ includes an XRO that at\n   least contains (ABR1, B1, ABR3, C1, C2).  Based\
    \ on these constraints,\n   ABR2 can expand the ERO such that it is disjoint from\
    \ the primary\n   LSP.  In this example, the ERO computed by ABR2 would be (B2-strict,\n\
    \   ABR4-strict, C-loose), and the XRO generated by B contains at least\n   (ABR3,\
    \ C1, C2).  The latter information is needed for ABR4 to expand\n   the ERO so\
    \ that the path is disjoint from the primary LSP in area 2.\n            Area\
    \ 1           Area 0          Area 2\n       <---------------><--------------><--------------->\n\
    \       +---A1---A2----ABR1-----B1-----ABR3----C1---C2---+\n       |        |\
    \              |              |         |\n       |        |              |  \
    \            |         |\n       A        |              |              |    \
    \     C\n       |        |              |              |         |\n       | \
    \       |              |              |         |\n       +---A3---A4----ABR2-----B2-----ABR4----C3---C4---+\n\
    \                 Figure A.1: Inter-area LSPs\n   In this example, a node performing\
    \ the path computation first selects\n   an ABR and then computes a strict path\
    \ towards this ABR.  For the\n   backup LSP, all nodes of the primary LSP in the\
    \ next areas have to be\n   put in the XRO (with the exception of the destination\
    \ node if node\n   protection and no link protection is required).  When an ABR\
    \ computes\n   the next path segment, i.e., the path over the next area, it may\n\
    \   remove the nodes from the XRO that are located in that area with the\n   exception\
    \ of the ABR where the primary LSP is exiting the area.  The\n   latter information\
    \ is still required because when the selected ABR\n   (ABR4 in this example) further\
    \ expands the ERO, it has to exclude the\n   ABR on which the primary LSP is entering\
    \ that area (ABR3 in this\n   example).  This means that when ABR2 generates an\
    \ XRO, it may remove\n   the nodes in area 0 from the XRO but not ABR3.  Note\
    \ that not doing\n   this would not cause harm in this example because there is\
    \ no path\n   from ABR4 to C via ABR3 in area 2.  If there is a link between ABR4-\n\
    \   ABR3 and ABR3-C, then it is required to have ABR3 in the XRO\n   generated\
    \ by ABR2.\n   Discussion on the length of the XRO: When link or node protection\
    \ is\n   requested, the length of the XRO is bounded by the length of the RRO\n\
    \   of the primary LSP.  It can be made shorter by removing nodes by the\n   ingress\
    \ node and the ABRs.  In the example above, the RRO of the\n   primary LSP contains\
    \ 8 subobjects, while the maximum XRO length can\n   be bounded by 6 subobjects\
    \ (nodes A1 and A2 do not have to be in the\n   XRO).  For SRLG protection, the\
    \ XRO has to list all SRLGs that are\n   crossed by the primary LSP.\n"
- title: A.2.  Inter-AS LSP Protection
  contents:
  - "A.2.  Inter-AS LSP Protection\n   When an inter-AS LSP (which has to be protected\
    \ by a backup LSP to\n   provide link or node protection) is established, the\
    \ same method as\n   for the inter-area LSP case can be used.  The difference\
    \ is when the\n   backup LSP is not following the same AS-path as the primary\
    \ LSP\n   because then the XRO should always contain the full path of the\n  \
    \ primary LSP.  In case the backup LSP is following the same AS-path\n   (but\
    \ with different ASBRs -- at least in case of node protection), it\n   is similar\
    \ to the inter-area case: ASBRs expanding the ERO over the\n   next AS may remove\
    \ the XRO subobjects located in that AS.  Note that\n   this can only be done\
    \ by an ingress ASBR (the ASBR where the LSP is\n   entering the AS).\n   Discussion\
    \ on the length of the XRO: the XRO is bounded by the length\n   of the RRO of\
    \ the primary LSP.\n   Suppose that SRLG protection is required, and the ASs crossed\
    \ by the\n   main LSP use a consistent way of allocating SRLG-ids to the links\n\
    \   (i.e., the ASs use a single SRLG space).  In this case, the SRLG-ids\n   of\
    \ each link used by the main LSP can be recorded by means of the\n   RRO; the\
    \ SRLG-ids are then used by the XRO.  If the SRLG-ids are only\n   meaningful\
    \ when local to the AS, putting SRLG-ids in the XRO crossing\n   many ASs makes\
    \ no sense.  To provide SRLG protection for inter-AS\n   LSPs the link IP address\
    \ of the inter-AS link used by the primary LSP\n   can be put into the XRO of\
    \ the Path message of the detour LSP or\n   bypass tunnel.  The ASBR where the\
    \ detour LSP or bypass tunnel is\n   entering the AS can translate this into the\
    \ list of SRLG-ids known to\n   the local AS.\n   Discussion on the length of\
    \ the XRO: the XRO only contains 1\n   subobject, which contains the IP address\
    \ of the inter-AS link\n   traversed by the primary LSP (assuming that the primary\
    \ LSP and\n   detour LSP or bypass tunnel are leaving the AS in the same area,\
    \ and\n   that they are also entering the next AS in the same area).\n"
- title: A.3.  Protection in the GMPLS Overlay Model
  contents:
  - "A.3.  Protection in the GMPLS Overlay Model\n   When an edge-node wants to establish\
    \ an LSP towards another edge-node\n   over an optical core network as described\
    \ in [RFC4208] (see Figure\n   A.2), the XRO can be used for multiple purposes.\n\
    \     Overlay                                                  Overlay\n     Network\
    \        +--------------------------------+        Network\n   +----------+  \
    \   |                                |     +----------+\n   |   +----+ |     |\
    \  +-----+   +-----+   +-----+   |     | +----+   |\n   |   |    | |     |  |\
    \     |   |     |   |     |   |     | |    |   |\n   | --+ EN1+-+-----+--+ CN1\
    \ +---+ CN2 +---+ CN3 +---+-----+-+ EN3+-- |\n   |   |    | |  +--+--+     | \
    \  |     |   |     +---+--+  | |    |   |\n   |   +----+ |  |  |  +--+--+   +--+--+\
    \   +--+--+   |  |  | +----+   |\n   |          |  |  |     |         |      \
    \   |      |  |  |          |\n   +----------+  |  |     |         |         |\
    \      |  |  +----------+\n                 |  |     |         |         |   \
    \   |  |\n   +----------+  |  |     |         |         |      |  |  +----------+\n\
    \   |          |  |  |  +--+--+      |      +--+--+   |  |  |          |\n   |\
    \   +----+ |  |  |  |     |      +------+     |   |  |  | +----+   |\n   |   |\
    \    +-+--+  |  | CN4 +-------------+ CN5 |   |  +--+-+    |   |\n   | --+ EN2+-+-----+--+\
    \     |             |     +---+-----+-+ EN4+-- |\n   |   |    | |     |  +-----+\
    \             +-----+   |     | |    |   |\n   |   +----+ |     |            \
    \                    |     | +----+   |\n   |          |     +--------------------------------+\
    \     |          |\n   +----------+                 Core Network             \
    \  +----------+\n        Overlay                                             \
    \    Overlay\n        Network                                                \
    \ Network\n    Legend:\n         EN - Edge-Node\n         CN - Core-Node\n   \
    \                              Figure A.2\n   A first application is where an\
    \ edge-node wants to establish multiple\n   LSPs towards the same destination\
    \ edge-node, and these LSPs need to\n   have few or no SRLGs in common.  In this\
    \ case EN1 could establish an\n   LSP towards EN3, and then it can establish a\
    \ second LSP listing all\n   links used by the first LSP with the indication to\
    \ avoid the SRLGs of\n   these links.  This information can be used by CN1 to\
    \ compute a path\n   for the second LSP.  If the core network consists of multiple\
    \ areas,\n   then the SRLG-ids have to be listed in the XRO.  The same example\n\
    \   applies to nodes and links.\n   Another application is where the edge-node\
    \ wants to set up a backup\n   LSP that is also protecting the links between the\
    \ edge-nodes and\n   core-nodes.  For instance, when EN2 establishes an LSP to\
    \ EN4, it\n   sends a Path message to CN4, which computes a path towards EN4 over\n\
    \   (for instance) CN5.  When EN2 gets back the RRO of that LSP, it can\n   signal\
    \ a new LSP to CN1 with EN4 as the destination and the XRO\n   computed based\
    \ on the RRO of the first LSP.  Based on this\n   information, CN1 can compute\
    \ a path that has the requested diversity\n   properties (e.g., a path going over\
    \ CN2 and CN3, and then to EN4).\n   It is clear that in these examples, the core-node\
    \ may not alter the\n   RRO in a Resv message to make its only contents be the\
    \ subobjects\n   from the egress core-node through the egress edge-node.\n"
- title: A.4.  LSP Protection inside a Single Area
  contents:
  - "A.4.  LSP Protection inside a Single Area\n   The XRO can also be used inside\
    \ a single area.  Take for instance a\n   network where the TE extensions of the\
    \ IGPs as described in [RFC3630]\n   and [RFC3784] are not used.  Hence, each\
    \ node has to select a next-\n   hop and possibly crankback [CRANKBACK] has to\
    \ be used when there is\n   no viable next-hop.  In this case, when signaling\
    \ a backup LSP, the\n   XRO can be put in the Path message to exclude the links,\
    \ nodes, or\n   SRLGs of the primary LSP.  An alternative way to provide this\n\
    \   functionality would be to indicate the following in the Path message\n   of\
    \ the backup LSP: the primary LSP and which type of protection is\n   required.\
    \  This latter solution would work for link and node\n   protection, but not for\
    \ SRLG protection.\n   When link or node protection is requested, the XRO is of\
    \ the same\n   length as the RRO of the primary LSP.  For SRLG protection, the\
    \ XRO\n   has to list all SRLGs that are crossed by the primary LSP.  Note that\n\
    \   for SRLG protection, the link IP address to reference the SRLGs of\n   that\
    \ link cannot be used since the TE extensions of the IGPs are not\n   used in\
    \ this example.  Hence, a node cannot translate any link IP\n   address located\
    \ in that area to its SRLGs.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cheng-Yin Lee\n   EMail: c.yin.lee@gmail.com\n   Adrian\
    \ Farrel\n   Old Dog Consulting\n   Phone: +44 (0) 1978 860944\n   EMail: adrian@olddog.co.uk\n\
    \   Stefaan De Cnodder\n   Alcatel-Lucent\n   Copernicuslaan 50\n   B-2018 Antwerp\n\
    \   Belgium\n   Phone: +32 3 240 85 15\n   EMail: stefaan.de_cnodder@alcatel-lucent.be\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
