- contents:
  - '                LDAP Password Modify Extended Operation

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The integration of the Lightweight Directory Access Protocol (LDAP)\n
    \  and external authentication services has introduced non-DN\n   authentication
    identities and allowed for non-directory storage of\n   passwords.  As such, mechanisms
    which update the directory (e.g.,\n   Modify) cannot be used to change a user's
    password.  This document\n   describes an LDAP extended operation to allow modification
    of user\n   passwords which is not dependent upon the form of the authentication\n
    \  identity nor the password storage mechanism used.\n   The key words \"MUST\",
    \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD
    NOT\", \"RECOMMENDED\", and \"MAY\" in this document are\n   to be interpreted
    as described in RFC 2119.\n"
  title: Abstract
- contents:
  - "1.  Background and Intent of Use\n   Lightweight Directory Access Protocol (LDAP)
    [RFC2251] is designed to\n   support an number of authentication mechanisms including
    simple user\n   name/password pairs.  Traditionally, LDAP users where identified
    by\n   the Distinguished Name [RFC2253] of a directory entry and this entry\n
    \  contained a userPassword [RFC2256] attribute containing one or more\n   passwords.\n
    \  The protocol does not mandate that passwords associated with a user\n   be
    stored in the directory server.  The server may use any attribute\n   suitable
    for password storage (e.g., userPassword), or use non-\n   directory storage.\n
    \  The integration [RFC2829] of application neutral SASL [RFC2222]\n   services
    which support simple username/password mechanisms (such as\n   DIGEST-MD5) has
    introduced non-LDAP DN authentication identity forms\n   and made storage of passwords
    the responsibility of the SASL service\n   provider.\n   LDAP update operations
    are designed to act upon attributes of an\n   entry within the directory.  LDAP
    update operations cannot be used to\n   modify a user's password when the user
    is not represented by a DN,\n   does not have a entry, or when that password used
    by the server is\n   not stored as an attribute of an entry.  An alternative mechanism
    is\n   needed.\n   This document describes an LDAP Extended Operation intended
    to allow\n   directory clients to update user passwords.  The user may or may
    not\n   be associated with a directory entry.  The user may or may not be\n   represented
    as an LDAP DN.  The user's password may or may not be\n   stored in the directory.\n
    \  The operation SHOULD NOT be used without adequate security protection\n   as
    the operation affords no privacy or integrity protect itself.\n   This operation
    SHALL NOT be used anonymously.\n"
  title: 1.  Background and Intent of Use
- contents:
  - "2.  Password Modify Request and Response\n   The Password Modify operation is
    an LDAPv3 Extended Operation\n   [RFC2251, Section 4.12] and is identified by
    the OBJECT IDENTIFIER\n   passwdModifyOID.  This section details the syntax of
    the protocol\n   request and response.\n   passwdModifyOID OBJECT IDENTIFIER ::=
    1.3.6.1.4.1.4203.1.11.1\n   PasswdModifyRequestValue ::= SEQUENCE {\n     userIdentity
    \   [0]  OCTET STRING OPTIONAL\n     oldPasswd       [1]  OCTET STRING OPTIONAL\n
    \    newPasswd       [2]  OCTET STRING OPTIONAL }\n   PasswdModifyResponseValue
    ::= SEQUENCE {\n     genPasswd       [0]     OCTET STRING OPTIONAL }\n"
  - contents:
    - "2.1.  Password Modify Request\n   A Password Modify request is an ExtendedRequest
      with the requestName\n   field containing passwdModifyOID OID and optionally
      provides a\n   requestValue field.  If the requestValue field is provided, it
      SHALL\n   contain a PasswdModifyRequestValue with one or more fields present.\n
      \  The userIdentity field, if present, SHALL contain an octet string\n   representation
      of the user associated with the request.  This string\n   may or may not be
      an LDAPDN [RFC2253].  If no userIdentity field is\n   present, the request acts
      up upon the password of the user currently\n   associated with the LDAP session.\n
      \  The oldPasswd field, if present, SHALL contain the user's current\n   password.\n
      \  The newPasswd field, if present, SHALL contain the desired password\n   for
      this user.\n"
    title: 2.1.  Password Modify Request
  - contents:
    - "2.2.  Password Modify Response\n   A Password Modify response is an ExtendedResponse
      where the\n   responseName field is absent and the response field is optional.
      \ The\n   response field, if present, SHALL contain a PasswdModifyResponseValue\n
      \  with genPasswd field present.\n   The genPasswd field, if present, SHALL
      contain a generated password\n   for the user.\n   If an resultCode other than
      success (0) is indicated in the response,\n   the response field MUST be absent.\n"
    title: 2.2.  Password Modify Response
  title: 2.  Password Modify Request and Response
- contents:
  - "3.  Operation Requirements\n   Clients SHOULD NOT submit a Password Modification
    request without\n   ensuring adequate security safeguards are in place.  Servers
    SHOULD\n   return a non-success resultCode if sufficient security protection are\n
    \  not in place.\n   Servers SHOULD indicate their support for this extended operation
    by\n   providing PasswdModifyOID as a value of the supportedExtension\n   attribute
    type in their root DSE.  A server MAY choose to advertise\n   this extension only
    when the client is authorized and/or has\n   established the necessary security
    protections to use this operation.\n   Clients SHOULD verify the server implements
    this extended operation\n   prior to attempting the operation by asserting the
    supportedExtension\n   attribute contains a value of PasswdModifyOID.\n   The
    server SHALL only return success upon successfully changing the\n   user's password.
    \ The server SHALL leave the password unmodified and\n   return a non-success
    resultCode otherwise.\n   If the server does not recognize provided fields or
    does not support\n   the combination of fields provided, it SHALL NOT change the
    user\n   password.\n   If oldPasswd is present and the provided value cannot be
    verified or\n   is incorrect, the server SHALL NOT change the user password.  If\n
    \  oldPasswd is not present, the server MAY use other policy to\n   determine
    whether or not to change the password.\n   The server SHALL NOT generate a password
    on behalf of the client if\n   the client has provided a newPasswd.  In absence
    of a client provided\n   newPasswd, the server SHALL either generate a password
    on behalf of\n   the client or return a non-success result code.  The server MUST\n
    \  provide the generated password upon success as the value of the\n   genPasswd
    field.\n   The server MAY return adminLimitExceeded, busy,\n   confidentialityRequired,
    operationsError, unavailable,\n   unwillingToPerform, or other non-success resultCode
    as appropriate to\n   indicate that it was unable to successfully complete the
    operation.\n   Servers MAY implement administrative policies which restrict this\n
    \  operation.\n"
  title: 3.  Operation Requirements
- contents:
  - "4.  Security Considerations\n   This operation is used to modify user passwords.
    \ The operation\n   itself does not provide any security protection to ensure
    integrity\n   and/or confidentiality of the information.  Use of this operation
    is\n   strongly discouraged when privacy protections are not in place to\n   guarantee
    confidentiality and may result in the disclosure of the\n   password to unauthorized
    parties.  This extension MUST be used with\n   confidentiality protection, such
    as Start TLS [RFC 2830].  The NULL\n   cipher suite MUST NOT be used.\n"
  title: 4.  Security Considerations
- contents:
  - "5. Bibliography\n   [RFC2219]  Bradner, S., \"Key words for use in RFCs to Indicate\n
    \             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2222]
    \ Myers, J., \"Simple Authentication and Security Layer\n              (SASL)\",
    RFC 2222, October 1997.\n   [RFC2251]  Wahl, M., Howes, T. and S. Kille, \"Lightweight
    Directory\n              Access Protocol (v3)\", RFC 2251, December 1997.\n   [RFC2252]
    \ Wahl, M., Coulbeck, A., Howes, T. and S. Kille,\n              \"Lightweight
    Directory Access Protocol (v3): Attribute\n              Syntax Definitions\",
    RFC 2252, December 1997.\n   [RFC2253]  Wahl, M., Kille,S. and T. Howes, \"Lightweight
    Directory\n              Access Protocol (v3): UTF-8 String Representation of\n
    \             Distinguished Names\", RFC 2253, December 1997.\n   [RFC2256]  Wahl,
    M., \"A Summary of the X.500(96) User Schema for use\n              with LDAPv3\",
    RFC 2256, December 1997.\n   [RFC2829]  Wahl, M., Alvestrand, H., Hodges, J. and
    R. Morgan,\n              \"Authentication Methods for LDAP\", RFC 2829, May 2000.\n
    \  [RFC2830]  Hodges, J., Morgan, R. and M. Wahl, \"Lightweight Directory\n              Access
    Protocol (v3): Extension for Transport Layer\n              Security\", RFC 2830,
    May 2000.\n"
  title: 5. Bibliography
- contents:
  - "6.  Acknowledgment\n   This document borrows from a number of IETF documents
    and is based\n   upon input from the IETF LDAPext working group.\n"
  title: 6.  Acknowledgment
- contents:
  - "7.  Author's Address\n   Kurt D. Zeilenga\n   OpenLDAP Foundation\n   EMail:
    Kurt@OpenLDAP.org\n"
  title: 7.  Author's Address
- contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 8.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
