- title: __initial_text__
  contents:
  - ' Location-to-Service Translation (LoST) Service List Boundary Extension

    '
- title: Abstract
  contents:
  - "Abstract\n   Location-to-Service Translation (LoST) maps service identifiers\
    \ and\n   location information to service contact URIs.  If a LoST client wants\n\
    \   to discover available services for a particular location, it will\n   perform\
    \ a <listServicesByLocation> query to the LoST server.\n   However, the LoST server,\
    \ in its response, does not provide context\n   information; that is, it does\
    \ not provide any additional information\n   about the geographical region within\
    \ which the returned list of\n   services is considered valid.  Therefore, this\
    \ document defines a\n   Service List Boundary that returns a local context along\
    \ with the\n   list of services returned, in order to assist the client in not\n\
    \   missing a change in available services when moving.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6197.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. LoST Extensions .................................................4\n    \
    \  3.1. Extensions to <listServicesByLocation> .....................4\n      3.2.\
    \ Retrieving the <serviceListBoundary> via\n           <getServiceListBoundary>\
    \ ...................................7\n      3.3. <serviceListBoundary> ......................................8\n\
    \      3.4. Implementation Considerations ..............................9\n  \
    \         3.4.1. Server Side .........................................9\n    \
    \       3.4.2. Client Side .........................................9\n   4. Security\
    \ and Privacy Considerations ............................10\n   5. IANA Considerations\
    \ ............................................10\n      5.1. Relax NG Schema Registration\
    \ ..............................10\n      5.2. Namespace Registration ....................................13\n\
    \   6. Acknowledgements ...............................................14\n  \
    \ 7. References .....................................................14\n    \
    \  7.1. Normative References ......................................14\n      7.2.\
    \ Informative References ....................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Since the LoST protocol [RFC5222] employs the Service Boundary\n\
    \   concept in order to avoid having clients continuously trying to\n   refresh\
    \ the mapping of a specific service, a Service List Boundary\n   mechanism provides\
    \ similar advantages for Service Lists.\n   Location-based service providers,\
    \ as well as Public Safety Answering\n   Points (PSAPs), only serve a specific\
    \ geographic region.  Therefore,\n   the LoST protocol defines the Service Boundary,\
    \ which indicates the\n   service region for a specific service URL.  However,\
    \ not all services\n   are available everywhere.  Clients can discover available\
    \ services\n   for a particular location via the <listServicesByLocation> query\
    \ in\n   LoST.  The LoST server returns a list of services that are available\n\
    \   at this particular location, but the server does not provide any\n   additional\
    \ information about the geographical region within which the\n   returned Service\
    \ List is considered valid.  This may lead to the\n   situation where a client\
    \ initially discovers all available services\n   via the <listServicesByLocation>\
    \ query, and then moves to a different\n   location (while refreshing the service\
    \ mappings), but without\n   noticing the availability of other services.  The\
    \ following imaginary\n   example illustrates the problem for emergency calling:\n\
    \   The client is powered-up, does location determination (resulting in\n   location\
    \ A), and performs an initial <listServicesByLocation> query\n   with location\
    \ A requesting urn:services:sos.\n   The LoST server returns the following list\
    \ of services:\n      urn:service:sos.police\n      urn:service:sos.ambulance\n\
    \      urn:service:sos.fire\n   The client does the initial LoST mapping and discovers\
    \ the\n   dialstrings for each service.  Then the client moves, refreshing the\n\
    \   individual service mappings when necessary as specified by the\n   Service\
    \ Boundary.  However, when arriving in location B (close to a\n   mountain), service\
    \ sos.mountainrescue, which was not available in\n   location A, becomes available.\
    \  Since the client is only required to\n   refresh the mappings for the initially\
    \ discovered services, the new\n   service is not detected.  Consequently, the\
    \ dialstring for the\n   mountain-rescue service is not known by the client. \
    \ Hence, the\n   client is unable to recognize an emergency call when the user\
    \ enters\n   the dialstring of the mountain-rescue service, and the emergency\
    \ call\n   may fail altogether.\n   Note that the Service Boundary (service region\
    \ for an individual\n   service) cannot be considered as an indicator for the\
    \ region for\n   which a specific Service List is valid.  The Service List may\
    \ even\n   change within the Service Boundary of another service.  For example,\n\
    \   the ambulance mapping is valid for a whole state, but for a part of\n   the\
    \ state there is an additional mountain-rescue service.\n   Consequently, there\
    \ are two ways to tackle this issue:\n   o  Clients continuously poll for the\
    \ Service List, although it may\n      not have changed.\n   o  The server sends\
    \ a message containing boundary information that\n      tells the client that\
    \ the Service List does not change inside this\n      area.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  LoST Extensions
  contents:
  - "3.  LoST Extensions\n   This section describes the necessary extensions to the\
    \ LoST protocol\n   in order to support the Service List Boundary in a similar\
    \ way as the\n   Service Boundary.  Extensions defined in this document are declared\n\
    \   in the new XML namespace urn:ietf:params:xml:ns:lost1:slb.\n"
- title: 3.1.  Extensions to <listServicesByLocation>
  contents:
  - "3.1.  Extensions to <listServicesByLocation>\n   The query <listServicesByLocation>\
    \ may contain an additional\n   <serviceListBoundaryRequest> element to additionally\
    \ request the\n   boundary for the Service List based on the location provided,\
    \ with\n   the resulting location for the list presented either by value or by\n\
    \   reference.  In the example below, the value of the 'type' attribute\n   of\
    \ the <serviceListBoundaryRequest> element is set to \"value\":\n      <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n      <listServicesByLocation\n           xmlns=\"\
    urn:ietf:params:xml:ns:lost1\"\n           xmlns:gml=\"http://www.opengis.net/gml\"\
    \n           xmlns:slb=\"urn:ietf:params:xml:ns:lost1:slb\"\n           recursive=\"\
    true\">\n        <location id=\"5415203asdf548\" profile=\"civic\">\n        \
    \  <civicAddress xml:lang=\"en\"\n             xmlns=\"urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr\"\
    >\n            <country>AT</country>\n            <A1>Lower Austria</A1>\n   \
    \         <A2>Bruck an der Leitha</A2>\n            <A3>Wolfsthal</A3>\n     \
    \       <RD>Hauptplatz</RD>\n            <HNO>1</HNO>\n            <PC>2412</PC>\n\
    \          </civicAddress>\n        </location>\n        <service>urn:service:sos</service>\n\
    \        <slb:serviceListBoundaryRequest type=\"value\"/>\n      </listServicesByLocation>\n\
    \   A <listServicesByLocationResponse> with the addition of one\n   <serviceListBoundary>\
    \ element is shown below:\n     <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \
    \    <listServicesByLocationResponse\n           xmlns=\"urn:ietf:params:xml:ns:lost1\"\
    \n           xmlns:slb=\"urn:ietf:params:xml:ns:lost1:slb\">\n       <serviceList>\n\
    \          urn:service:sos.ambulance\n          urn:service:sos.fire\n       \
    \   urn:service:sos.gas\n          urn:service:sos.mountain\n          urn:service:sos.poison\n\
    \          urn:service:sos.police\n       </serviceList>\n       <path>\n    \
    \     <via source=\"resolver.example\"/>\n         <via source=\"authoritative.example\"\
    />\n       </path>\n         <locationUsed id=\"5415203asdf548\"/>\n         <slb:serviceListBoundary\
    \ profile=\"civic\"\n            expires=\"2012-01-01T00:00:00Z\">\n         \
    \  <civicAddress xml:lang=\"en\"\n              xmlns=\"urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr\"\
    >\n             <country>AT</country>\n             <A1>Lower Austria</A1>\n \
    \          </civicAddress>\n         </slb:serviceListBoundary>\n     </listServicesByLocationResponse>\n\
    \   The response above indicates that the Service List is valid for Lower\n  \
    \ Austria.  The <listServicesByLocation> request needs to be repeated\n   by the\
    \ client only when moving out of Lower Austria.  However, the\n   mappings of\
    \ the services themselves may have other service\n   boundaries.  Additionally,\
    \ the 'expires' attribute indicates the\n   absolute time when this Service List\
    \ becomes invalid.\n   The response MAY contain multiple <serviceListBoundary>\
    \ elements for\n   alternative representation, each representing the boundary\
    \ in a\n   specific location profile.  However, multiple locations inside a\n\
    \   <serviceListBoundary> element are considered to be additive.\n   The boundary\
    \ can also be requested by reference when setting the\n   value of the 'type'\
    \ attribute of the <serviceListBoundaryRequest>\n   element to \"reference\" (which\
    \ is the default in case the attribute is\n   omitted).  The response will contain\
    \ a <serviceListBoundaryReference>\n   element with a 'serviceListKey' attribute\
    \ (described in Section 3.2),\n   as shown below.\n     <?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\n     <listServicesByLocationResponse\n           xmlns=\"\
    urn:ietf:params:xml:ns:lost1\"\n           xmlns:slb=\"urn:ietf:params:xml:ns:lost1:slb\"\
    >\n       <serviceList>\n          urn:service:sos.ambulance\n          urn:service:sos.fire\n\
    \          urn:service:sos.gas\n          urn:service:sos.mountain\n         \
    \ urn:service:sos.poison\n          urn:service:sos.police\n        </serviceList>\n\
    \        <path>\n          <via source=\"resolver.example\"/>\n          <via\
    \ source=\"authoritative.example\"/>\n        </path>\n        <locationUsed id=\"\
    5415203asdf548\"/>\n        <slb:serviceListBoundaryReference\n           source=\"\
    authoritative.example\"\n           serviceListKey=\"123567890123567890123567890\"\
    \ />\n     </listServicesByLocationResponse>\n"
- title: 3.2.  Retrieving the <serviceListBoundary> via <getServiceListBoundary>
  contents:
  - "3.2.  Retrieving the <serviceListBoundary> via <getServiceListBoundary>\n   In\
    \ order to retrieve the boundary corresponding to a specific\n   'serviceListKey',\
    \ the client issues a <getServiceListBoundary>\n   request to the server identified\
    \ in the 'source' attribute of the\n   <serviceListBoundaryReference> element,\
    \ similar to the\n   <getServiceBoundary> request.\n   An example is shown below:\n\
    \     <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     <getServiceListBoundary\n\
    \           xmlns=\"urn:ietf:params:xml:ns:lost1:slb\"\n             serviceListKey=\"\
    123567890123567890123567890\"/>\n   The LoST server response is shown below:\n\
    \  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <getServiceListBoundaryResponse\n\
    \        xmlns=\"urn:ietf:params:xml:ns:lost1:slb\">\n    <serviceListBoundary\
    \ profile=\"civic\" expires=\"2012-01-01T00:00:00Z\">\n      <civicAddress xml:lang=\"\
    en\"\n          xmlns=\"urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr\">\n \
    \       <country>AT</country>\n        <A1>Lower Austria</A1>\n      </civicAddress>\n\
    \    </serviceListBoundary>\n    <path xmlns=\"urn:ietf:params:xml:ns:lost1\"\
    >\n      <via source=\"resolver.example\"/>\n      <via source=\"authoritative.example\"\
    />\n    </path>\n  </getServiceListBoundaryResponse>\n   The 'serviceListKey'\
    \ uniquely identifies a Service List Boundary, as\n   the 'key' does for the Service\
    \ Boundary (see Section 5.6 of\n   RFC 5222).  Therefore, the 'serviceListKey'\
    \ is a random token with at\n   least 128 bits of entropy [RFC4086] and can be\
    \ assumed globally\n   unique.  Whenever the boundary changes, a new 'serviceListKey'\
    \ MUST\n   be assigned.\n      Note: Since LoST does not define an attribute to\
    \ indicate which\n      location profile the client understands in a <getServiceBoundary>\n\
    \      request, this document also does not define one for the\n      <getServiceListBoundary>\
    \ request.\n"
- title: 3.3.  <serviceListBoundary>
  contents:
  - "3.3.  <serviceListBoundary>\n   For a particular <listServicesByLocation> query,\
    \ the Service List\n   Boundary information that gets returned indicates that\
    \ all the\n   service identifiers returned in the <serviceList> element are the\n\
    \   same within this geographic region.  A Service List Boundary may\n   consist\
    \ of geometric shapes (both in civic and geodetic location\n   format), and may\
    \ be non-contiguous, like the Service Boundary.\n   The mapping of the specific\
    \ services within the Service List Boundary\n   may be different at different\
    \ locations.\n   The server MAY return the boundary information in multiple location\n\
    \   profiles, but MUST use at least one profile that the client used in\n   the\
    \ request in order to ensure that the client is able to process the\n   boundary\
    \ information.\n   There is no need to include boundary information in a\n   <listServicesResponse>.\
    \  The <listServices> request is purely for\n   diagnostic purposes and does not\
    \ contain location information at all,\n   so boundary information cannot be calculated.\n\
    \   Also note that the Service List Boundary is OPTIONAL, and the LoST\n   server\
    \ may return it or not, based on its local policy -- as is the\n   case with the\
    \ Service Boundary.  However, especially for emergency\n   services, the Service\
    \ List Boundary might be crucial to ensure that\n   moving clients do not miss\
    \ changes in the available services.\n"
- title: 3.4.  Implementation Considerations
  contents:
  - "3.4.  Implementation Considerations\n   The subsections below discuss implementation\
    \ issues for the LoST\n   server and client for Service List Boundary support.\n"
- title: 3.4.1.  Server Side
  contents:
  - "3.4.1.  Server Side\n   The mapping architecture and framework [RFC5582] states\
    \ that each\n   tree announces its coverage region (for one type of service, e.g.,\n\
    \   sos.police) to one or more forest guides.  Forest guides peer with\n   each\
    \ other and synchronize their data.  Hence, a forest guide has\n   sufficient\
    \ knowledge (it knows all the services and their coverage\n   regions) to answer\
    \ a <listServicesByLocation> query and to add the\n   <serviceListBoundary> or\
    \ <serviceListBoundaryReference> as well.\n   The calculation of the largest possible\
    \ area for which the Service\n   List stays the same might be a complex task.\
    \  An alternative would be\n   to return smaller areas that are easier to compute.\
    \  In such a case,\n   some unnecessary queries to the LoST server will be a consequence,\n\
    \   but the main purpose of the Service List Boundary is still achieved:\n   to\
    \ never miss a change of available services.  Thus, the server\n   operator may\
    \ specify a reasonable trade-off between the effort to\n   generate the boundary\
    \ information and the saved queries to the LoST\n   server.\n   For example, in\
    \ some countries the offered services may differ in\n   adjacent counties (or\
    \ districts, cantons, states, etc.).  Their\n   borders may be suitable as a Service\
    \ List Boundary as well, even\n   though some adjacent counties offer the same\
    \ services.\n   Other countries might have different structures, and the generation\n\
    \   of the Service List Boundary might follow other rules as long as it\n   is\
    \ ensured that a client is able to notice any change in the Service\n   List when\
    \ moving.\n"
- title: 3.4.2.  Client Side
  contents:
  - "3.4.2.  Client Side\n   A mobile client that already implements LoST and evaluates\
    \ the\n   <serviceBoundary> has almost everything that is needed to make use of\n\
    \   the Service List Boundary.  Since the integration into LoST follows\n   the\
    \ concept of the <serviceBoundary> (and also makes use of the same\n   location\
    \ profiles), only the additional <serviceListBoundary> needs\n   to be evaluated.\
    \  Whenever moving outside a Service List Boundary,\n   the client performs a\
    \ new <listServicesByLocation> query with the new\n   location information in\
    \ order to determine a change in available\n   services.\n"
- title: 4.  Security and Privacy Considerations
  contents:
  - "4.  Security and Privacy Considerations\n   Security considerations for LoST\
    \ are discussed in [RFC5222].  This\n   document extends LoST to also carry Service\
    \ List Boundaries (and\n   requests for them).  These Service List Boundaries\
    \ are calculated by\n   the server based on the individual Service Boundaries\
    \ and sent to\n   clients in case the local policy allows this.  Therefore, it\
    \ is\n   generally considered to have the same level of sensitivity as for the\n\
    \   Service Boundary and thus the same access control and confidentiality\n  \
    \ requirements as the base LoST protocol.  As a result, the security\n   measures\
    \ incorporated in the base LoST specification [RFC5222]\n   provide sufficient\
    \ protection for LoST messages that use the Service\n   List Boundary extension.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has taken two actions: an XML schema registration\
    \ and a\n   namespace registration, according to the description in the following\n\
    \   sections.\n"
- title: 5.1.  Relax NG Schema Registration
  contents:
  - "5.1.  Relax NG Schema Registration\n   IANA has registered the following Relax\
    \ NG Schema in the IETF XML\n   Registry [RFC3688]:\n   URI: urn:ietf:params:xml:schema:lost1:slb\n\
    \   Registrant Contact: IETF ECRIT Working Group, Karl Heinz Wolf\n   (karlheinz.wolf@nic.at)\n\
    \   Relax NG Schema:\n   BEGIN\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\
    \   <grammar\n       xmlns=\"http://relaxng.org/ns/structure/1.0\"\n       xmlns:a=\"\
    http://relaxng.org/ns/compatibility/annotations/1.0\"\n       xmlns:slb=\"urn:ietf:params:xml:ns:lost1:slb\"\
    \n       ns=\"urn:ietf:params:xml:ns:lost1\"\n       datatypeLibrary=\"http://www.w3.org/2001/XMLSchema-datatypes\"\
    >\n     <include href=\"lost.rng\">\n     <!-- redefinition of LoST elements -->\n\
    \       <start>\n         <choice>\n           <ref name=\"findService\"/>\n \
    \          <ref name=\"listServices\"/>\n           <ref name=\"listServicesByLocation\"\
    />\n           <ref name=\"getServiceBoundary\"/>\n           <ref name=\"findServiceResponse\"\
    />\n           <ref name=\"listServicesResponse\"/>\n           <ref name=\"listServicesByLocationResponse\"\
    />\n           <ref name=\"getServiceBoundaryResponse\"/>\n           <ref name=\"\
    errors\"/>\n           <ref name=\"redirect\"/>\n           <!-- New in RFC 6197\
    \ -->\n           <ref name=\"getServiceListBoundary\"/>\n           <ref name=\"\
    getServiceListBoundaryResponse\"/>\n         </choice>\n       </start>\n    \
    \   <define name=\"listServicesByLocation\">\n         <element name=\"listServicesByLocation\"\
    >\n           <ref name=\"requestLocation\"/>\n           <ref name=\"commonRequestPattern\"\
    />\n           <optional>\n             <attribute name=\"recursive\">\n     \
    \          <data type=\"boolean\"/>\n               <a:defaultValue>true</a:defaultValue>\n\
    \             </attribute>\n           </optional>\n           <!-- New in RFC\
    \ 6197 -->\n           <optional>\n             <ref name=\"serviceListBoundaryRequest\"\
    />\n           </optional>\n         </element>\n       </define>\n       <define\
    \ name=\"listServicesByLocationResponse\">\n         <element name=\"listServicesByLocationResponse\"\
    >\n           <ref name=\"serviceList\"/>\n           <ref name=\"commonResponsePattern\"\
    />\n           <ref name=\"locationUsed\"/>\n           <!-- New in RFC 6197 -->\n\
    \           <optional>\n             <choice>\n               <ref name=\"serviceListBoundary\"\
    />\n               <ref name=\"serviceListBoundaryReference\"/>\n            \
    \ </choice>\n           </optional>\n         </element>\n       </define>\n \
    \    </include>\n     <define name=\"serviceListBoundaryRequest\">\n       <element\
    \ name=\"slb:serviceListBoundaryRequest\">\n         <optional>\n           <attribute\
    \ name=\"type\">\n             <choice>\n               <value>value</value>\n\
    \               <value>reference</value>\n             </choice>\n           \
    \  <a:defaultValue>reference</a:defaultValue>\n           </attribute>\n     \
    \    </optional>\n       </element>\n     </define>\n     <define name=\"serviceListBoundary\"\
    >\n      <oneOrMore>\n       <element name=\"slb:serviceListBoundary\">\n    \
    \     <optional>\n           <ref name=\"expires\"/>\n         </optional>\n \
    \        <ref name=\"locationInformation\"/>\n         <ref name=\"extensionPoint\"\
    />\n       </element>\n      </oneOrMore>\n     </define>\n     <define name=\"\
    serviceListBoundaryReference\">\n       <element name=\"slb:serviceListBoundaryReference\"\
    >\n         <ref name=\"source\"/>\n         <attribute name=\"serviceListKey\"\
    >\n           <data type=\"token\"/>\n         </attribute>\n       <ref name=\"\
    extensionPoint\"/>\n       </element>\n     </define>\n     <define name=\"getServiceListBoundary\"\
    >\n       <element name=\"slb:getServiceListBoundary\">\n         <attribute name=\"\
    serviceListKey\">\n           <data type=\"token\"/>\n         </attribute>\n\
    \       <ref name=\"extensionPoint\"/>\n       </element>\n     </define>\n  \
    \   <define name=\"getServiceListBoundaryResponse\">\n       <element name=\"\
    slb:getServiceListBoundaryResponse\">\n        <ref name=\"serviceListBoundary\"\
    />\n        <ref name=\"path\"/>\n        <ref name=\"extensionPoint\"/>\n   \
    \    </element>\n     </define>\n   </grammar>\n   END\n"
- title: 5.2.  Namespace Registration
  contents:
  - "5.2.  Namespace Registration\n   IANA has registered the following namespace\
    \ (below the LoST namespace\n   defined in [RFC5222]) in the IETF XML Registry\
    \ [RFC3688]:\n   URI: urn:ietf:params:xml:ns:lost1:slb\n   Registrant Contact:\
    \ IETF ECRIT Working Group, Karl Heinz Wolf\n   (karlheinz.wolf@nic.at)\n   XML:\n\
    \   BEGIN\n   <?xml version=\"1.0\"?>\n   <!DOCTYPE html PUBLIC \"-//W3C//DTD\
    \ XHTML Basic 1.0//EN\"\n     \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\"\
    >\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n   <head>\n     <meta http-equiv=\"\
    content-type\"\n           content=\"text/html;charset=iso-8859-1\"/>\n     <title>LoST\
    \ Service List Boundary Namespace</title>\n   </head>\n   <body>\n     <h1>Namespace\
    \ for the LoST Service List Boundary</h1>\n     <h2>urn:ietf:params:xml:ns:lost1:slb</h2>\n\
    \   <p>See <a href=\"http://www.rfc-editor.org/rfc/rfc6197.txt\">\n      RFC 6197</a>.</p>\n\
    \   </body>\n   </html>\n   END\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The author would like to thank Henning Schulzrinne for\
    \ discussion of\n   the document, and Martin Thomson, Richard Barnes, and Roger\
    \ Marshall\n   for their valuable input and text suggestions during the working\n\
    \   group Last Call.  Further thanks go to Joshua Bell from the\n   Applications\
    \ Area Review Team for his help with Relax NG.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC5222]  Hardie, T., Newton, A., Schulzrinne,\
    \ H., and H.\n              Tschofenig, \"LoST: A Location-to-Service Translation\n\
    \              Protocol\", RFC 5222, August 2008.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC3688]  Mealling, M., \"The IETF XML Registry\"\
    , BCP 81, RFC 3688,\n              January 2004.\n   [RFC4086]  Eastlake 3rd,\
    \ D., Schiller, J., and S. Crocker,\n              \"Randomness Requirements for\
    \ Security\", BCP 106, RFC 4086,\n              June 2005.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC5582]  Schulzrinne, H., \"Location-to-URL\
    \ Mapping Architecture and\n              Framework\", RFC 5582, September 2009.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Karl Heinz Wolf\n   nic.at GmbH\n   Karlsplatz 1/2/9\n \
    \  Wien  A-1010\n   Austria\n   Phone: +43 1 5056416 37\n   EMail: karlheinz.wolf@nic.at\n\
    \   URI:   http://www.nic.at/\n"
