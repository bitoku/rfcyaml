- title: __initial_text__
  contents:
  - '                DHCP Options and BOOTP Vendor Extensions

    '
- title: Status of this memo
  contents:
  - "Status of this memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Dynamic Host Configuration Protocol (DHCP) [1] provides a\n\
    \   framework for passing configuration information to hosts on a TCP/IP\n   network.\
    \  Configuration parameters and other control information are\n   carried in tagged\
    \ data items that are stored in the 'options' field\n   of the DHCP message. \
    \ The data items themselves are also called\n   \"options.\"\n   This document\
    \ specifies the current set of DHCP options.  Future\n   options will be specified\
    \ in separate RFCs.  The current list of\n   valid options is also available in\
    \ ftp://ftp.isi.edu/in-\n   notes/iana/assignments [22].\n   All of the vendor\
    \ information extensions defined in RFC 1497 [2] may\n   be used as DHCP options.\
    \  The definitions given in RFC 1497 are\n   included in this document, which\
    \ supersedes RFC 1497.  All of the\n   DHCP options defined in this document,\
    \ except for those specific to\n   DHCP as defined in section 9, may be used as\
    \ BOOTP vendor information\n   extensions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1.  Introduction ..............................................\
    \  2\n    2.  BOOTP Extension/DHCP Option Field Format ..................  4\n\
    \    3.  RFC 1497 Vendor Extensions ................................  5\n    4.\
    \  IP Layer Parameters per Host .............................. 11\n    5.  IP\
    \ Layer Parameters per Interface ........................  13\n    6.  Link Layer\
    \ Parameters per Interface ....................... 16\n    7.  TCP Parameters\
    \ ............................................ 17\n    8.  Application and Service\
    \ Parameters ........................ 18\n    9.  DHCP Extensions ...........................................\
    \ 25\n   10.  Defining new extensions ................................... 31\n\
    \   11.  Acknowledgements .......................................... 31\n   12.\
    \  References ................................................ 32\n   13.  Security\
    \ Considerations ................................... 33\n   14.  Authors' Addresses\
    \ ........................................ 34\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document specifies options for use with both the Dynamic\
    \ Host\n   Configuration Protocol and the Bootstrap Protocol.\n   The full description\
    \ of DHCP packet formats may be found in the DHCP\n   specification document [1],\
    \ and the full description of BOOTP packet\n   formats may be found in the BOOTP\
    \ specification document [3].  This\n   document defines the format of information\
    \ in the last field of DHCP\n   packets ('options') and of BOOTP packets ('vend').\
    \  The remainder of\n   this section defines a generalized use of this area for\
    \ giving\n   information useful to a wide class of machines, operating systems\
    \ and\n   configurations. Sites with a single DHCP or BOOTP server that is\n \
    \  shared among heterogeneous clients may choose to define other, site-\n   specific\
    \ formats for the use of the 'options' field.\n   Section 2 of this memo describes\
    \ the formats of DHCP options and\n   BOOTP vendor extensions.  Section 3 describes\
    \ options defined in\n   previous documents for use with BOOTP (all may also be\
    \ used with\n   DHCP).  Sections 4-8 define new options intended for use with\
    \ both\n   DHCP and BOOTP. Section 9 defines options used only in DHCP.\n   References\
    \ further describing most of the options defined in sections\n   2-6 can be found\
    \ in section 12.  The use of the options defined in\n   section 9 is described\
    \ in the DHCP specification [1].\n   Information on registering new options is\
    \ contained in section 10.\n   This document updates the definition of DHCP/BOOTP\
    \ options that\n   appears in RFC1533.  The classing mechanism has been extended\
    \ to\n   include vendor classes as described in section 8.4 and 9.13.  The new\n\
    \   procedure for defining new DHCP/BOOTP options in described in section\n  \
    \ 10.  Several new options, including NIS+ domain and servers, Mobile\n   IP home\
    \ agent, SMTP server, TFTP server and Bootfile server, have\n   been added.  Text\
    \ giving definitions used throughout the document has\n   been added in section\
    \ 1.1.  Text emphasizing the need for uniqueness\n   of client-identifiers has\
    \ been added to section 9.14.\n"
- title: 1.1 Requirements
  contents:
  - "1.1 Requirements\n   Throughout this document, the words that are used to define\
    \ the\n   significance of particular requirements are capitalized.  These words\n\
    \   are:\n      o \"MUST\"\n       This word or the adjective \"REQUIRED\" means\
    \ that the item is an\n       absolute requirement of this specification.\n  \
    \    o \"MUST NOT\"\n       This phrase means that the item is an absolute prohibition\
    \ of\n       this specification.\n      o \"SHOULD\"\n       This word or the\
    \ adjective \"RECOMMENDED\" means that there may\n       exist valid reasons in\
    \ particular circumstances to ignore this\n       item, but the full implications\
    \ should be understood and the case\n       carefully weighed before choosing\
    \ a different course.\n      o \"SHOULD NOT\"\n       This phrase means that there\
    \ may exist valid reasons in\n       particular circumstances when the listed\
    \ behavior is acceptable\n       or even useful, but the full implications should\
    \ be understood\n       and the case carefully weighed before implementing any\
    \ behavior\n       described with this label.\n      o \"MAY\"\n       This word\
    \ or the adjective \"OPTIONAL\" means that this item is\n       truly optional.\
    \  One vendor may choose to include the item\n       because a particular marketplace\
    \ requires it or because it\n       enhances the product, for example; another\
    \ vendor may omit the\n       same item.\n"
- title: 1.2 Terminology
  contents:
  - "1.2 Terminology\n   This document uses the following terms:\n      o \"DHCP client\"\
    \n       A DHCP client or \"client\" is an Internet host using DHCP to\n     \
    \  obtain configuration parameters such as a network address.\n      o \"DHCP\
    \ server\"\n       A DHCP server of \"server\"is an Internet host that returns\n\
    \       configuration parameters to DHCP clients.\n      o \"binding\"\n     \
    \  A binding is a collection of configuration parameters, including\n       at\
    \ least an IP address, associated with or \"bound to\" a DHCP\n       client.\
    \  Bindings are managed by DHCP servers.\n"
- title: 2. BOOTP Extension/DHCP Option Field Format
  contents:
  - "2. BOOTP Extension/DHCP Option Field Format\n   DHCP options have the same format\
    \ as the BOOTP 'vendor extensions'\n   defined in RFC 1497 [2].  Options may be\
    \ fixed length or variable\n   length.  All options begin with a tag octet, which\
    \ uniquely\n   identifies the option.  Fixed-length options without data consist\
    \ of\n   only a tag octet.  Only options 0 and 255 are fixed length.  All\n  \
    \ other options are variable-length with a length octet following the\n   tag\
    \ octet.  The value of the length octet does not include the two\n   octets specifying\
    \ the tag and length.  The length octet is followed\n   by \"length\" octets of\
    \ data.  Options containing NVT ASCII data SHOULD\n   NOT include a trailing NULL;\
    \ however, the receiver of such options\n   MUST be prepared to delete trailing\
    \ nulls if they exist.  The\n   receiver MUST NOT require that a trailing null\
    \ be included in the\n   data.  In the case of some variable-length options the\
    \ length field\n   is a constant but must still be specified.\n   Any options\
    \ defined subsequent to this document MUST contain a length\n   octet even if\
    \ the length is fixed or zero.\n   All multi-octet quantities are in network byte-order.\n\
    \   When used with BOOTP, the first four octets of the vendor information\n  \
    \ field have been assigned to the \"magic cookie\" (as suggested in RFC\n   951).\
    \  This field identifies the mode in which the succeeding data is\n   to be interpreted.\
    \  The value of the magic cookie is the 4 octet\n   dotted decimal 99.130.83.99\
    \ (or hexadecimal number 63.82.53.63) in\n   network byte order.\n   All of the\
    \ \"vendor extensions\" defined in RFC 1497 are also DHCP\n   options.\n   Option\
    \ codes 128 to 254 (decimal) are reserved for site-specific\n   options.\n   Except\
    \ for the options in section 9, all options may be used with\n   either DHCP or\
    \ BOOTP.\n   Many of these options have their default values specified in other\n\
    \   documents.  In particular, RFC 1122 [4] specifies default values for\n   most\
    \ IP and TCP configuration parameters.\n   Many options supply one or more 32-bit\
    \ IP address.  Use of IP\n   addresses rather than fully-qualified Domain Names\
    \ (FQDNs) may make\n   future renumbering of IP hosts more difficult.  Use of\
    \ these\n   addresses is discouraged at sites that may require renumbering.\n"
- title: 3. RFC 1497 Vendor Extensions
  contents:
  - "3. RFC 1497 Vendor Extensions\n   This section lists the vendor extensions as\
    \ defined in RFC 1497.\n   They are defined here for completeness.\n"
- title: 3.1. Pad Option
  contents:
  - "3.1. Pad Option\n   The pad option can be used to cause subsequent fields to\
    \ align on\n   word boundaries.\n   The code for the pad option is 0, and its\
    \ length is 1 octet.\n    Code\n   +-----+\n   |  0  |\n   +-----+\n"
- title: 3.2. End Option
  contents:
  - "3.2. End Option\n   The end option marks the end of valid information in the\
    \ vendor\n   field.  Subsequent octets should be filled with pad options.\n  \
    \ The code for the end option is 255, and its length is 1 octet.\n    Code\n \
    \  +-----+\n   | 255 |\n   +-----+\n"
- title: 3.3. Subnet Mask
  contents:
  - "3.3. Subnet Mask\n   The subnet mask option specifies the client's subnet mask\
    \ as per RFC\n   950 [5].\n   If both the subnet mask and the router option are\
    \ specified in a DHCP\n   reply, the subnet mask option MUST be first.\n   The\
    \ code for the subnet mask option is 1, and its length is 4 octets.\n    Code\
    \   Len        Subnet Mask\n   +-----+-----+-----+-----+-----+-----+\n   |  1\
    \  |  4  |  m1 |  m2 |  m3 |  m4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 3.4. Time Offset
  contents:
  - "3.4. Time Offset\n   The time offset field specifies the offset of the client's\
    \ subnet in\n   seconds from Coordinated Universal Time (UTC).  The offset is\n\
    \   expressed as a two's complement 32-bit integer.  A positive offset\n   indicates\
    \ a location east of the zero meridian and a negative offset\n   indicates a location\
    \ west of the zero meridian.\n   The code for the time offset option is 2, and\
    \ its length is 4 octets.\n    Code   Len        Time Offset\n   +-----+-----+-----+-----+-----+-----+\n\
    \   |  2  |  4  |  n1 |  n2 |  n3 |  n4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 3.5. Router Option
  contents:
  - "3.5. Router Option\n   The router option specifies a list of IP addresses for\
    \ routers on the\n   client's subnet.  Routers SHOULD be listed in order of preference.\n\
    \   The code for the router option is 3.  The minimum length for the\n   router\
    \ option is 4 octets, and the length MUST always be a multiple\n   of 4.\n   \
    \ Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  3  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.6. Time Server Option
  contents:
  - "3.6. Time Server Option\n   The time server option specifies a list of RFC 868\
    \ [6] time servers\n   available to the client.  Servers SHOULD be listed in order\
    \ of\n   preference.\n   The code for the time server option is 4.  The minimum\
    \ length for\n   this option is 4 octets, and the length MUST always be a multiple\
    \ of\n   4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  4  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.7. Name Server Option
  contents:
  - "3.7. Name Server Option\n   The name server option specifies a list of IEN 116\
    \ [7] name servers\n   available to the client.  Servers SHOULD be listed in order\
    \ of\n   preference.\n   The code for the name server option is 5.  The minimum\
    \ length for\n   this option is 4 octets, and the length MUST always be a multiple\
    \ of\n   4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  5  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.8. Domain Name Server Option
  contents:
  - "3.8. Domain Name Server Option\n   The domain name server option specifies a\
    \ list of Domain Name System\n   (STD 13, RFC 1035 [8]) name servers available\
    \ to the client.  Servers\n   SHOULD be listed in order of preference.\n   The\
    \ code for the domain name server option is 6.  The minimum length\n   for this\
    \ option is 4 octets, and the length MUST always be a multiple\n   of 4.\n   \
    \ Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  6  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.9. Log Server Option
  contents:
  - "3.9. Log Server Option\n   The log server option specifies a list of MIT-LCS\
    \ UDP log servers\n   available to the client.  Servers SHOULD be listed in order\
    \ of\n   preference.\n   The code for the log server option is 7.  The minimum\
    \ length for this\n   option is 4 octets, and the length MUST always be a multiple\
    \ of 4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  7  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.10. Cookie Server Option
  contents:
  - "3.10. Cookie Server Option\n   The cookie server option specifies a list of RFC\
    \ 865 [9] cookie\n   servers available to the client.  Servers SHOULD be listed\
    \ in order\n   of preference.\n   The code for the log server option is 8.  The\
    \ minimum length for this\n   option is 4 octets, and the length MUST always be\
    \ a multiple of 4.\n    Code   Len         Address 1               Address 2\n\
    \   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   |  8  |  n  |  a1\
    \ |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.11. LPR Server Option
  contents:
  - "3.11. LPR Server Option\n   The LPR server option specifies a list of RFC 1179\
    \ [10] line printer\n   servers available to the client.  Servers SHOULD be listed\
    \ in order\n   of preference.\n   The code for the LPR server option is 9.  The\
    \ minimum length for this\n   option is 4 octets, and the length MUST always be\
    \ a multiple of 4.\n    Code   Len         Address 1               Address 2\n\
    \   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   |  9  |  n  |  a1\
    \ |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.12. Impress Server Option
  contents:
  - "3.12. Impress Server Option\n   The Impress server option specifies a list of\
    \ Imagen Impress servers\n   available to the client.  Servers SHOULD be listed\
    \ in order of\n   preference.\n   The code for the Impress server option is 10.\
    \  The minimum length for\n   this option is 4 octets, and the length MUST always\
    \ be a multiple of\n   4.\n    Code   Len         Address 1               Address\
    \ 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   |  10 |  n  |\
    \  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.13. Resource Location Server Option
  contents:
  - "3.13. Resource Location Server Option\n   This option specifies a list of RFC\
    \ 887 [11] Resource Location\n   servers available to the client.  Servers SHOULD\
    \ be listed in order\n   of preference.\n   The code for this option is 11.  The\
    \ minimum length for this option\n   is 4 octets, and the length MUST always be\
    \ a multiple of 4.\n    Code   Len         Address 1               Address 2\n\
    \   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   |  11 |  n  |  a1\
    \ |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.14. Host Name Option
  contents:
  - "3.14. Host Name Option\n   This option specifies the name of the client.  The\
    \ name may or may\n   not be qualified with the local domain name (see section\
    \ 3.17 for the\n   preferred way to retrieve the domain name).  See RFC 1035 for\n\
    \   character set restrictions.\n   The code for this option is 12, and its minimum\
    \ length is 1.\n    Code   Len                 Host Name\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  12 |  n  |  h1 |  h2 |  h3 |  h4 |  h5 |  h6 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 3.15. Boot File Size Option
  contents:
  - "3.15. Boot File Size Option\n   This option specifies the length in 512-octet\
    \ blocks of the default\n   boot image for the client.  The file length is specified\
    \ as an\n   unsigned 16-bit integer.\n   The code for this option is 13, and its\
    \ length is 2.\n    Code   Len   File Size\n   +-----+-----+-----+-----+\n   |\
    \  13 |  2  |  l1 |  l2 |\n   +-----+-----+-----+-----+\n"
- title: 3.16. Merit Dump File
  contents:
  - "3.16. Merit Dump File\n   This option specifies the path-name of a file to which\
    \ the client's\n   core image should be dumped in the event the client crashes.\
    \  The\n   path is formatted as a character string consisting of characters from\n\
    \   the NVT ASCII character set.\n   The code for this option is 14.  Its minimum\
    \ length is 1.\n    Code   Len      Dump File Pathname\n   +-----+-----+-----+-----+-----+-----+---\n\
    \   |  14 |  n  |  n1 |  n2 |  n3 |  n4 | ...\n   +-----+-----+-----+-----+-----+-----+---\n"
- title: 3.17. Domain Name
  contents:
  - "3.17. Domain Name\n   This option specifies the domain name that client should\
    \ use when\n   resolving hostnames via the Domain Name System.\n   The code for\
    \ this option is 15.  Its minimum length is 1.\n    Code   Len        Domain Name\n\
    \   +-----+-----+-----+-----+-----+-----+--\n   |  15 |  n  |  d1 |  d2 |  d3\
    \ |  d4 |  ...\n   +-----+-----+-----+-----+-----+-----+--\n"
- title: 3.18. Swap Server
  contents:
  - "3.18. Swap Server\n   This specifies the IP address of the client's swap server.\n\
    \   The code for this option is 16 and its length is 4.\n    Code   Len    Swap\
    \ Server Address\n   +-----+-----+-----+-----+-----+-----+\n   |  16 |  n  | \
    \ a1 |  a2 |  a3 |  a4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 3.19. Root Path
  contents:
  - "3.19. Root Path\n   This option specifies the path-name that contains the client's\
    \ root\n   disk.  The path is formatted as a character string consisting of\n\
    \   characters from the NVT ASCII character set.\n   The code for this option\
    \ is 17.  Its minimum length is 1.\n    Code   Len      Root Disk Pathname\n \
    \  +-----+-----+-----+-----+-----+-----+---\n   |  17 |  n  |  n1 |  n2 |  n3\
    \ |  n4 | ...\n   +-----+-----+-----+-----+-----+-----+---\n"
- title: 3.20. Extensions Path
  contents:
  - "3.20. Extensions Path\n   A string to specify a file, retrievable via TFTP, which\
    \ contains\n   information which can be interpreted in the same way as the 64-octet\n\
    \   vendor-extension field within the BOOTP response, with the following\n   exceptions:\n\
    \          - the length of the file is unconstrained;\n          - all references\
    \ to Tag 18 (i.e., instances of the\n            BOOTP Extensions Path field)\
    \ within the file are\n            ignored.\n   The code for this option is 18.\
    \  Its minimum length is 1.\n    Code   Len      Extensions Pathname\n   +-----+-----+-----+-----+-----+-----+---\n\
    \   |  18 |  n  |  n1 |  n2 |  n3 |  n4 | ...\n   +-----+-----+-----+-----+-----+-----+---\n"
- title: 4. IP Layer Parameters per Host
  contents:
  - "4. IP Layer Parameters per Host\n   This section details the options that affect\
    \ the operation of the IP\n   layer on a per-host basis.\n"
- title: 4.1. IP Forwarding Enable/Disable Option
  contents:
  - "4.1. IP Forwarding Enable/Disable Option\n   This option specifies whether the\
    \ client should configure its IP\n   layer for packet forwarding.  A value of\
    \ 0 means disable IP\n   forwarding, and a value of 1 means enable IP forwarding.\n\
    \   The code for this option is 19, and its length is 1.\n    Code   Len  Value\n\
    \   +-----+-----+-----+\n   |  19 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 4.2. Non-Local Source Routing Enable/Disable Option
  contents:
  - "4.2. Non-Local Source Routing Enable/Disable Option\n   This option specifies\
    \ whether the client should configure its IP\n   layer to allow forwarding of\
    \ datagrams with non-local source routes\n   (see Section 3.3.5 of [4] for a discussion\
    \ of this topic).  A value\n   of 0 means disallow forwarding of such datagrams,\
    \ and a value of 1\n   means allow forwarding.\n   The code for this option is\
    \ 20, and its length is 1.\n    Code   Len  Value\n   +-----+-----+-----+\n  \
    \ |  20 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 4.3. Policy Filter Option
  contents:
  - "4.3. Policy Filter Option\n   This option specifies policy filters for non-local\
    \ source routing.\n   The filters consist of a list of IP addresses and masks\
    \ which specify\n   destination/mask pairs with which to filter incoming source\
    \ routes.\n   Any source routed datagram whose next-hop address does not match\
    \ one\n   of the filters should be discarded by the client.\n   See [4] for further\
    \ information.\n   The code for this option is 21.  The minimum length of this\
    \ option is\n   8, and the length MUST be a multiple of 8.\n    Code   Len   \
    \      Address 1                  Mask 1\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   |  21 |  n  |  a1 |  a2 |  a3 |  a4 |  m1 |  m2 |  m3 |  m4 |\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \           Address 2                  Mask 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n\
    \   |  a1 |  a2 |  a3 |  a4 |  m1 |  m2 |  m3 |  m4 | ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n"
- title: 4.4. Maximum Datagram Reassembly Size
  contents:
  - "4.4. Maximum Datagram Reassembly Size\n   This option specifies the maximum size\
    \ datagram that the client\n   should be prepared to reassemble.  The size is\
    \ specified as a 16-bit\n   unsigned integer.  The minimum value legal value is\
    \ 576.\n   The code for this option is 22, and its length is 2.\n    Code   Len\
    \      Size\n   +-----+-----+-----+-----+\n   |  22 |  2  |  s1 |  s2 |\n   +-----+-----+-----+-----+\n"
- title: 4.5. Default IP Time-to-live
  contents:
  - "4.5. Default IP Time-to-live\n   This option specifies the default time-to-live\
    \ that the client should\n   use on outgoing datagrams.  The TTL is specified\
    \ as an octet with a\n   value between 1 and 255.\n   The code for this option\
    \ is 23, and its length is 1.\n    Code   Len   TTL\n   +-----+-----+-----+\n\
    \   |  23 |  1  | ttl |\n   +-----+-----+-----+\n"
- title: 4.6. Path MTU Aging Timeout Option
  contents:
  - "4.6. Path MTU Aging Timeout Option\n   This option specifies the timeout (in\
    \ seconds) to use when aging Path\n   MTU values discovered by the mechanism defined\
    \ in RFC 1191 [12].  The\n   timeout is specified as a 32-bit unsigned integer.\n\
    \   The code for this option is 24, and its length is 4.\n    Code   Len     \
    \      Timeout\n   +-----+-----+-----+-----+-----+-----+\n   |  24 |  4  |  t1\
    \ |  t2 |  t3 |  t4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 4.7. Path MTU Plateau Table Option
  contents:
  - "4.7. Path MTU Plateau Table Option\n   This option specifies a table of MTU sizes\
    \ to use when performing\n   Path MTU Discovery as defined in RFC 1191.  The table\
    \ is formatted as\n   a list of 16-bit unsigned integers, ordered from smallest\
    \ to largest.\n   The minimum MTU value cannot be smaller than 68.\n   The code\
    \ for this option is 25.  Its minimum length is 2, and the\n   length MUST be\
    \ a multiple of 2.\n    Code   Len     Size 1      Size 2\n   +-----+-----+-----+-----+-----+-----+---\n\
    \   |  25 |  n  |  s1 |  s2 |  s1 |  s2 | ...\n   +-----+-----+-----+-----+-----+-----+---\n"
- title: 5. IP Layer Parameters per Interface
  contents:
  - "5. IP Layer Parameters per Interface\n   This section details the options that\
    \ affect the operation of the IP\n   layer on a per-interface basis.  It is expected\
    \ that a client can\n   issue multiple requests, one per interface, in order to\
    \ configure\n   interfaces with their specific parameters.\n"
- title: 5.1. Interface MTU Option
  contents:
  - "5.1. Interface MTU Option\n   This option specifies the MTU to use on this interface.\
    \  The MTU is\n   specified as a 16-bit unsigned integer.  The minimum legal value\
    \ for\n   the MTU is 68.\n   The code for this option is 26, and its length is\
    \ 2.\n    Code   Len      MTU\n   +-----+-----+-----+-----+\n   |  26 |  2  |\
    \  m1 |  m2 |\n   +-----+-----+-----+-----+\n"
- title: 5.2. All Subnets are Local Option
  contents:
  - "5.2. All Subnets are Local Option\n   This option specifies whether or not the\
    \ client may assume that all\n   subnets of the IP network to which the client\
    \ is connected use the\n   same MTU as the subnet of that network to which the\
    \ client is\n   directly connected.  A value of 1 indicates that all subnets share\n\
    \   the same MTU.  A value of 0 means that the client should assume that\n   some\
    \ subnets of the directly connected network may have smaller MTUs.\n   The code\
    \ for this option is 27, and its length is 1.\n    Code   Len  Value\n   +-----+-----+-----+\n\
    \   |  27 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 5.3. Broadcast Address Option
  contents:
  - "5.3. Broadcast Address Option\n   This option specifies the broadcast address\
    \ in use on the client's\n   subnet.  Legal values for broadcast addresses are\
    \ specified in\n   section 3.2.1.3 of [4].\n   The code for this option is 28,\
    \ and its length is 4.\n    Code   Len     Broadcast Address\n   +-----+-----+-----+-----+-----+-----+\n\
    \   |  28 |  4  |  b1 |  b2 |  b3 |  b4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 5.4. Perform Mask Discovery Option
  contents:
  - "5.4. Perform Mask Discovery Option\n   This option specifies whether or not the\
    \ client should perform subnet\n   mask discovery using ICMP.  A value of 0 indicates\
    \ that the client\n   should not perform mask discovery.  A value of 1 means that\
    \ the\n   client should perform mask discovery.\n   The code for this option is\
    \ 29, and its length is 1.\n    Code   Len  Value\n   +-----+-----+-----+\n  \
    \ |  29 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 5.5. Mask Supplier Option
  contents:
  - "5.5. Mask Supplier Option\n   This option specifies whether or not the client\
    \ should respond to\n   subnet mask requests using ICMP.  A value of 0 indicates\
    \ that the\n   client should not respond.  A value of 1 means that the client\
    \ should\n   respond.\n   The code for this option is 30, and its length is 1.\n\
    \    Code   Len  Value\n   +-----+-----+-----+\n   |  30 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 5.6. Perform Router Discovery Option
  contents:
  - "5.6. Perform Router Discovery Option\n   This option specifies whether or not\
    \ the client should solicit\n   routers using the Router Discovery mechanism defined\
    \ in RFC 1256\n   [13].  A value of 0 indicates that the client should not perform\n\
    \   router discovery.  A value of 1 means that the client should perform\n   router\
    \ discovery.\n   The code for this option is 31, and its length is 1.\n    Code\
    \   Len  Value\n   +-----+-----+-----+\n   |  31 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 5.7. Router Solicitation Address Option
  contents:
  - "5.7. Router Solicitation Address Option\n   This option specifies the address\
    \ to which the client should transmit\n   router solicitation requests.\n   The\
    \ code for this option is 32, and its length is 4.\n    Code   Len           \
    \ Address\n   +-----+-----+-----+-----+-----+-----+\n   |  32 |  4  |  a1 |  a2\
    \ |  a3 |  a4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 5.8. Static Route Option
  contents:
  - "5.8. Static Route Option\n   This option specifies a list of static routes that\
    \ the client should\n   install in its routing cache.  If multiple routes to the\
    \ same\n   destination are specified, they are listed in descending order of\n\
    \   priority.\n   The routes consist of a list of IP address pairs.  The first\
    \ address\n   is the destination address, and the second address is the router\
    \ for\n   the destination.\n   The default route (0.0.0.0) is an illegal destination\
    \ for a static\n   route.  See section 3.5 for information about the router option.\n\
    \   The code for this option is 33.  The minimum length of this option is\n  \
    \ 8, and the length MUST be a multiple of 8.\n    Code   Len         Destination\
    \ 1           Router 1\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   |  33 |  n  |  d1 |  d2 |  d3 |  d4 |  r1 |  r2 |  r3 |  r4 |\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \           Destination 2           Router 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n\
    \   |  d1 |  d2 |  d3 |  d4 |  r1 |  r2 |  r3 |  r4 | ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n"
- title: 6. Link Layer Parameters per Interface
  contents:
  - "6. Link Layer Parameters per Interface\n   This section lists the options that\
    \ affect the operation of the data\n   link layer on a per-interface basis.\n"
- title: 6.1. Trailer Encapsulation Option
  contents:
  - "6.1. Trailer Encapsulation Option\n   This option specifies whether or not the\
    \ client should negotiate the\n   use of trailers (RFC 893 [14]) when using the\
    \ ARP protocol.  A value\n   of 0 indicates that the client should not attempt\
    \ to use trailers.  A\n   value of 1 means that the client should attempt to use\
    \ trailers.\n   The code for this option is 34, and its length is 1.\n    Code\
    \   Len  Value\n   +-----+-----+-----+\n   |  34 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 6.2. ARP Cache Timeout Option
  contents:
  - "6.2. ARP Cache Timeout Option\n   This option specifies the timeout in seconds\
    \ for ARP cache entries.\n   The time is specified as a 32-bit unsigned integer.\n\
    \   The code for this option is 35, and its length is 4.\n    Code   Len     \
    \      Time\n   +-----+-----+-----+-----+-----+-----+\n   |  35 |  4  |  t1 |\
    \  t2 |  t3 |  t4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 6.3. Ethernet Encapsulation Option
  contents:
  - "6.3. Ethernet Encapsulation Option\n   This option specifies whether or not the\
    \ client should use Ethernet\n   Version 2 (RFC 894 [15]) or IEEE 802.3 (RFC 1042\
    \ [16]) encapsulation\n   if the interface is an Ethernet.  A value of 0 indicates\
    \ that the\n   client should use RFC 894 encapsulation.  A value of 1 means that\
    \ the\n   client should use RFC 1042 encapsulation.\n   The code for this option\
    \ is 36, and its length is 1.\n    Code   Len  Value\n   +-----+-----+-----+\n\
    \   |  36 |  1  | 0/1 |\n   +-----+-----+-----+\n"
- title: 7. TCP Parameters
  contents:
  - "7. TCP Parameters\n   This section lists the options that affect the operation\
    \ of the TCP\n   layer on a per-interface basis.\n"
- title: 7.1. TCP Default TTL Option
  contents:
  - "7.1. TCP Default TTL Option\n   This option specifies the default TTL that the\
    \ client should use when\n   sending TCP segments.  The value is represented as\
    \ an 8-bit unsigned\n   integer.  The minimum value is 1.\n   The code for this\
    \ option is 37, and its length is 1.\n    Code   Len   TTL\n   +-----+-----+-----+\n\
    \   |  37 |  1  |  n  |\n   +-----+-----+-----+\n"
- title: 7.2. TCP Keepalive Interval Option
  contents:
  - "7.2. TCP Keepalive Interval Option\n   This option specifies the interval (in\
    \ seconds) that the client TCP\n   should wait before sending a keepalive message\
    \ on a TCP connection.\n   The time is specified as a 32-bit unsigned integer.\
    \  A value of zero\n   indicates that the client should not generate keepalive\
    \ messages on\n   connections unless specifically requested by an application.\n\
    \   The code for this option is 38, and its length is 4.\n    Code   Len     \
    \      Time\n   +-----+-----+-----+-----+-----+-----+\n   |  38 |  4  |  t1 |\
    \  t2 |  t3 |  t4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 7.3. TCP Keepalive Garbage Option
  contents:
  - "7.3. TCP Keepalive Garbage Option\n   This option specifies the whether or not\
    \ the client should send TCP\n   keepalive messages with a octet of garbage for\
    \ compatibility with\n   older implementations.  A value of 0 indicates that a\
    \ garbage octet\n   should not be sent. A value of 1 indicates that a garbage\
    \ octet\n   should be sent.\n   The code for this option is 39, and its length\
    \ is 1.\n    Code   Len  Value\n   +-----+-----+-----+\n   |  39 |  1  | 0/1 |\n\
    \   +-----+-----+-----+\n"
- title: 8. Application and Service Parameters
  contents:
  - "8. Application and Service Parameters\n   This section details some miscellaneous\
    \ options used to configure\n   miscellaneous applications and services.\n"
- title: 8.1. Network Information Service Domain Option
  contents:
  - "8.1. Network Information Service Domain Option\n   This option specifies the\
    \ name of the client's NIS [17] domain.  The\n   domain is formatted as a character\
    \ string consisting of characters\n   from the NVT ASCII character set.\n   The\
    \ code for this option is 40.  Its minimum length is 1.\n    Code   Len      NIS\
    \ Domain Name\n   +-----+-----+-----+-----+-----+-----+---\n   |  40 |  n  | \
    \ n1 |  n2 |  n3 |  n4 | ...\n   +-----+-----+-----+-----+-----+-----+---\n"
- title: 8.2. Network Information Servers Option
  contents:
  - "8.2. Network Information Servers Option\n   This option specifies a list of IP\
    \ addresses indicating NIS servers\n   available to the client.  Servers SHOULD\
    \ be listed in order of\n   preference.\n   The code for this option is 41.  Its\
    \ minimum length is 4, and the\n   length MUST be a multiple of 4.\n    Code \
    \  Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  41 |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.3. Network Time Protocol Servers Option
  contents:
  - "8.3. Network Time Protocol Servers Option\n   This option specifies a list of\
    \ IP addresses indicating NTP [18]\n   servers available to the client.  Servers\
    \ SHOULD be listed in order\n   of preference.\n   The code for this option is\
    \ 42.  Its minimum length is 4, and the\n   length MUST be a multiple of 4.\n\
    \    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  42 |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.4. Vendor Specific Information
  contents:
  - "8.4. Vendor Specific Information\n   This option is used by clients and servers\
    \ to exchange vendor-\n   specific information.  The information is an opaque\
    \ object of n\n   octets, presumably interpreted by vendor-specific code on the\
    \ clients\n   and servers.  The definition of this information is vendor specific.\n\
    \   The vendor is indicated in the vendor class identifier option.\n   Servers\
    \ not equipped to interpret the vendor-specific information\n   sent by a client\
    \ MUST ignore it (although it may be reported).\n   Clients which do not receive\
    \ desired vendor-specific information\n   SHOULD make an attempt to operate without\
    \ it, although they may do so\n   (and announce they are doing so) in a degraded\
    \ mode.\n   If a vendor potentially encodes more than one item of information\
    \ in\n   this option, then the vendor SHOULD encode the option using\n   \"Encapsulated\
    \ vendor-specific options\" as described below:\n   The Encapsulated vendor-specific\
    \ options field SHOULD be encoded as a\n   sequence of code/length/value fields\
    \ of identical syntax to the DHCP\n   options field with the following exceptions:\n\
    \      1) There SHOULD NOT be a \"magic cookie\" field in the encapsulated\n \
    \        vendor-specific extensions field.\n      2) Codes other than 0 or 255\
    \ MAY be redefined by the vendor within\n         the encapsulated vendor-specific\
    \ extensions field, but SHOULD\n         conform to the tag-length-value syntax\
    \ defined in section 2.\n      3) Code 255 (END), if present, signifies the end\
    \ of the\n         encapsulated vendor extensions, not the end of the vendor\n\
    \         extensions field. If no code 255 is present, then the end of\n     \
    \    the enclosing vendor-specific information field is taken as the\n       \
    \  end of the encapsulated vendor-specific extensions field.\n   The code for\
    \ this option is 43 and its minimum length is 1.\n   Code   Len   Vendor-specific\
    \ information\n   +-----+-----+-----+-----+---\n   |  43 |  n  |  i1 |  i2 | ...\n\
    \   +-----+-----+-----+-----+---\n   When encapsulated vendor-specific extensions\
    \ are used, the\n   information bytes 1-n have the following format:\n    Code\
    \   Len   Data item        Code   Len   Data item       Code\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   |  T1 |  n  |  d1 |  d2 | ... |  T2 |  n  |  D1 |  D2 | ... | ... |\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n"
- title: 8.5. NetBIOS over TCP/IP Name Server Option
  contents:
  - "8.5. NetBIOS over TCP/IP Name Server Option\n   The NetBIOS name server (NBNS)\
    \ option specifies a list of RFC\n   1001/1002 [19] [20] NBNS name servers listed\
    \ in order of preference.\n   The code for this option is 44.  The minimum length\
    \ of the option is\n   4 octets, and the length must always be a multiple of 4.\n\
    \    Code   Len           Address 1              Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----\n\
    \   |  44 |  n  |  a1 |  a2 |  a3 |  a4 |  b1 |  b2 |  b3 |  b4 | ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----\n"
- title: 8.6. NetBIOS over TCP/IP Datagram Distribution Server Option
  contents:
  - "8.6. NetBIOS over TCP/IP Datagram Distribution Server Option\n   The NetBIOS\
    \ datagram distribution server (NBDD) option specifies a\n   list of RFC 1001/1002\
    \ NBDD servers listed in order of preference. The\n   code for this option is\
    \ 45.  The minimum length of the option is 4\n   octets, and the length must always\
    \ be a multiple of 4.\n    Code   Len           Address 1              Address\
    \ 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----\n  \
    \ |  45 |  n  |  a1 |  a2 |  a3 |  a4 |  b1 |  b2 |  b3 |  b4 | ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----\n"
- title: 8.7. NetBIOS over TCP/IP Node Type Option
  contents:
  - "8.7. NetBIOS over TCP/IP Node Type Option\n   The NetBIOS node type option allows\
    \ NetBIOS over TCP/IP clients which\n   are configurable to be configured as described\
    \ in RFC 1001/1002.  The\n   value is specified as a single octet which identifies\
    \ the client type\n   as follows:\n      Value         Node Type\n      -----\
    \         ---------\n      0x1           B-node\n      0x2           P-node\n\
    \      0x4           M-node\n      0x8           H-node\n   In the above chart,\
    \ the notation '0x' indicates a number in base-16\n   (hexadecimal).\n   The code\
    \ for this option is 46.  The length of this option is always\n   1.\n    Code\
    \   Len  Node Type\n   +-----+-----+-----------+\n   |  46 |  1  | see above |\n\
    \   +-----+-----+-----------+\n"
- title: 8.8. NetBIOS over TCP/IP Scope Option
  contents:
  - "8.8. NetBIOS over TCP/IP Scope Option\n   The NetBIOS scope option specifies\
    \ the NetBIOS over TCP/IP scope\n   parameter for the client as specified in RFC\
    \ 1001/1002. See [19],\n   [20], and [8] for character-set restrictions.\n   The\
    \ code for this option is 47.  The minimum length of this option is\n   1.\n \
    \   Code   Len       NetBIOS Scope\n   +-----+-----+-----+-----+-----+-----+----\n\
    \   |  47 |  n  |  s1 |  s2 |  s3 |  s4 | ...\n   +-----+-----+-----+-----+-----+-----+----\n"
- title: 8.9. X Window System Font Server Option
  contents:
  - "8.9. X Window System Font Server Option\n   This option specifies a list of X\
    \ Window System [21] Font servers\n   available to the client. Servers SHOULD\
    \ be listed in order of\n   preference.\n   The code for this option is 48.  The\
    \ minimum length of this option is\n   4 octets, and the length MUST be a multiple\
    \ of 4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n\
    \   |  48 |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |   ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n"
- title: 8.10. X Window System Display Manager Option
  contents:
  - "8.10. X Window System Display Manager Option\n   This option specifies a list\
    \ of IP addresses of systems that are\n   running the X Window System Display\
    \ Manager and are available to the\n   client.\n   Addresses SHOULD be listed\
    \ in order of preference.\n   The code for the this option is 49. The minimum\
    \ length of this option\n   is 4, and the length MUST be a multiple of 4.\n  \
    \  Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n\
    \   |  49 |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |   ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+---\n"
- title: 8.11. Network Information Service+ Domain Option
  contents:
  - "8.11. Network Information Service+ Domain Option\n   This option specifies the\
    \ name of the client's NIS+ [17] domain.  The\n   domain is formatted as a character\
    \ string consisting of characters\n   from the NVT ASCII character set.\n   The\
    \ code for this option is 64.  Its minimum length is 1.\n    Code   Len      NIS\
    \ Client Domain Name\n   +-----+-----+-----+-----+-----+-----+---\n   |  64 |\
    \  n  |  n1 |  n2 |  n3 |  n4 | ...\n   +-----+-----+-----+-----+-----+-----+---\n"
- title: 8.12. Network Information Service+ Servers Option
  contents:
  - "8.12. Network Information Service+ Servers Option\n   This option specifies a\
    \ list of IP addresses indicating NIS+ servers\n   available to the client.  Servers\
    \ SHOULD be listed in order of\n   preference.\n   The code for this option is\
    \ 65.  Its minimum length is 4, and the\n   length MUST be a multiple of 4.\n\
    \    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   |  65 |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.13. Mobile IP Home Agent option
  contents:
  - "8.13. Mobile IP Home Agent option\n   This option specifies a list of IP addresses\
    \ indicating mobile IP\n   home agents available to the client.  Agents SHOULD\
    \ be listed in\n   order of preference.\n   The code for this option is 68.  Its\
    \ minimum length is 0 (indicating\n   no home agents are available) and the length\
    \ MUST be a multiple of 4.\n   It is expected that the usual length will be four\
    \ octets, containing\n   a single home agent's address.\n    Code Len    Home\
    \ Agent Addresses (zero or more)\n   +-----+-----+-----+-----+-----+-----+--\n\
    \   | 68  |  n  | a1  | a2  | a3  | a4  | ...\n   +-----+-----+-----+-----+-----+-----+--\n"
- title: 8.14. Simple Mail Transport Protocol (SMTP) Server Option
  contents:
  - "8.14. Simple Mail Transport Protocol (SMTP) Server Option\n   The SMTP server\
    \ option specifies a list of SMTP servers available to\n   the client.  Servers\
    \ SHOULD be listed in order of preference.\n   The code for the SMTP server option\
    \ is 69.  The minimum length for\n   this option is 4 octets, and the length MUST\
    \ always be a multiple of\n   4.\n    Code   Len         Address 1           \
    \    Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   | 69\
    \  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.15. Post Office Protocol (POP3) Server Option
  contents:
  - "8.15. Post Office Protocol (POP3) Server Option\n   The POP3 server option specifies\
    \ a list of POP3 available to the\n   client.  Servers SHOULD be listed in order\
    \ of preference.\n   The code for the POP3 server option is 70.  The minimum length\
    \ for\n   this option is 4 octets, and the length MUST always be a multiple of\n\
    \   4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   | 70  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.16. Network News Transport Protocol (NNTP) Server Option
  contents:
  - "8.16. Network News Transport Protocol (NNTP) Server Option\n   The NNTP server\
    \ option specifies a list of NNTP available to the\n   client.  Servers SHOULD\
    \ be listed in order of preference.\n   The code for the NNTP server option is\
    \ 71. The minimum length for\n   this option is 4 octets, and the length MUST\
    \ always be a multiple of\n   4.\n    Code   Len         Address 1           \
    \    Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   | 71\
    \  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.17. Default World Wide Web (WWW) Server Option
  contents:
  - "8.17. Default World Wide Web (WWW) Server Option\n   The WWW server option specifies\
    \ a list of WWW available to the\n   client.  Servers SHOULD be listed in order\
    \ of preference.\n   The code for the WWW server option is 72.  The minimum length\
    \ for\n   this option is 4 octets, and the length MUST always be a multiple of\n\
    \   4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   | 72  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.18. Default Finger Server Option
  contents:
  - "8.18. Default Finger Server Option\n   The Finger server option specifies a list\
    \ of Finger available to the\n   client.  Servers SHOULD be listed in order of\
    \ preference.\n   The code for the Finger server option is 73.  The minimum length\
    \ for\n   this option is 4 octets, and the length MUST always be a multiple of\n\
    \   4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   | 73  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.19. Default Internet Relay Chat (IRC) Server Option
  contents:
  - "8.19. Default Internet Relay Chat (IRC) Server Option\n   The IRC server option\
    \ specifies a list of IRC available to the\n   client.  Servers SHOULD be listed\
    \ in order of preference.\n   The code for the IRC server option is 74.  The minimum\
    \ length for\n   this option is 4 octets, and the length MUST always be a multiple\
    \ of\n   4.\n    Code   Len         Address 1               Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \   | 74  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.20. StreetTalk Server Option
  contents:
  - "8.20. StreetTalk Server Option\n   The StreetTalk server option specifies a list\
    \ of StreetTalk servers\n   available to the client.  Servers SHOULD be listed\
    \ in order of\n   preference.\n   The code for the StreetTalk server option is\
    \ 75.  The minimum length\n   for this option is 4 octets, and the length MUST\
    \ always be a multiple\n   of 4.\n    Code   Len         Address 1           \
    \    Address 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   | 75\
    \  |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 8.21. StreetTalk Directory Assistance (STDA) Server Option
  contents:
  - "8.21. StreetTalk Directory Assistance (STDA) Server Option\n   The StreetTalk\
    \ Directory Assistance (STDA) server option specifies a\n   list of STDA servers\
    \ available to the client.  Servers SHOULD be\n   listed in order of preference.\n\
    \   The code for the StreetTalk Directory Assistance server option is 76.\n  \
    \ The minimum length for this option is 4 octets, and the length MUST\n   always\
    \ be a multiple of 4.\n    Code   Len         Address 1               Address\
    \ 2\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n   | 76  |  n  |\
    \  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n   +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 9. DHCP Extensions
  contents:
  - "9. DHCP Extensions\n   This section details the options that are specific to\
    \ DHCP.\n"
- title: 9.1. Requested IP Address
  contents:
  - "9.1. Requested IP Address\n   This option is used in a client request (DHCPDISCOVER)\
    \ to allow the\n   client to request that a particular IP address be assigned.\n\
    \   The code for this option is 50, and its length is 4.\n    Code   Len     \
    \     Address\n   +-----+-----+-----+-----+-----+-----+\n   |  50 |  4  |  a1\
    \ |  a2 |  a3 |  a4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 9.2. IP Address Lease Time
  contents:
  - "9.2. IP Address Lease Time\n   This option is used in a client request (DHCPDISCOVER\
    \ or DHCPREQUEST)\n   to allow the client to request a lease time for the IP address.\
    \  In a\n   server reply (DHCPOFFER), a DHCP server uses this option to specify\n\
    \   the lease time it is willing to offer.\n   The time is in units of seconds,\
    \ and is specified as a 32-bit\n   unsigned integer.\n   The code for this option\
    \ is 51, and its length is 4.\n    Code   Len         Lease Time\n   +-----+-----+-----+-----+-----+-----+\n\
    \   |  51 |  4  |  t1 |  t2 |  t3 |  t4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 9.3. Option Overload
  contents:
  - "9.3. Option Overload\n   This option is used to indicate that the DHCP 'sname'\
    \ or 'file'\n   fields are being overloaded by using them to carry DHCP options.\
    \ A\n   DHCP server inserts this option if the returned parameters will\n   exceed\
    \ the usual space allotted for options.\n   If this option is present, the client\
    \ interprets the specified\n   additional fields after it concludes interpretation\
    \ of the standard\n   option fields.\n   The code for this option is 52, and its\
    \ length is 1.  Legal values\n   for this option are:\n           Value   Meaning\n\
    \           -----   --------\n             1     the 'file' field is used to hold\
    \ options\n             2     the 'sname' field is used to hold options\n    \
    \         3     both fields are used to hold options\n    Code   Len  Value\n\
    \   +-----+-----+-----+\n   |  52 |  1  |1/2/3|\n   +-----+-----+-----+\n"
- title: 9.4 TFTP server name
  contents:
  - "9.4 TFTP server name\n   This option is used to identify a TFTP server when the\
    \ 'sname' field\n   in the DHCP header has been used for DHCP options.\n   The\
    \ code for this option is 66, and its minimum length is 1.\n       Code  Len \
    \  TFTP server\n      +-----+-----+-----+-----+-----+---\n      | 66  |  n  |\
    \  c1 |  c2 |  c3 | ...\n      +-----+-----+-----+-----+-----+---\n"
- title: 9.5 Bootfile name
  contents:
  - "9.5 Bootfile name\n   This option is used to identify a bootfile when the 'file'\
    \ field in\n   the DHCP header has been used for DHCP options.\n   The code for\
    \ this option is 67, and its minimum length is 1.\n       Code  Len   Bootfile\
    \ name\n      +-----+-----+-----+-----+-----+---\n      | 67  |  n  |  c1 |  c2\
    \ |  c3 | ...\n      +-----+-----+-----+-----+-----+---\n"
- title: 9.6. DHCP Message Type
  contents:
  - "9.6. DHCP Message Type\n   This option is used to convey the type of the DHCP\
    \ message.  The code\n   for this option is 53, and its length is 1.  Legal values\
    \ for this\n   option are:\n           Value   Message Type\n           -----\
    \   ------------\n             1     DHCPDISCOVER\n             2     DHCPOFFER\n\
    \             3     DHCPREQUEST\n             4     DHCPDECLINE\n            \
    \ 5     DHCPACK\n             6     DHCPNAK\n             7     DHCPRELEASE\n\
    \             8     DHCPINFORM\n    Code   Len  Type\n   +-----+-----+-----+\n\
    \   |  53 |  1  | 1-9 |\n   +-----+-----+-----+\n"
- title: 9.7. Server Identifier
  contents:
  - "9.7. Server Identifier\n   This option is used in DHCPOFFER and DHCPREQUEST messages,\
    \ and may\n   optionally be included in the DHCPACK and DHCPNAK messages.  DHCP\n\
    \   servers include this option in the DHCPOFFER in order to allow the\n   client\
    \ to distinguish between lease offers.  DHCP clients use the\n   contents of the\
    \ 'server identifier' field as the destination address\n   for any DHCP messages\
    \ unicast to the DHCP server.  DHCP clients also\n   indicate which of several\
    \ lease offers is being accepted by including\n   this option in a DHCPREQUEST\
    \ message.\n   The identifier is the IP address of the selected server.\n   The\
    \ code for this option is 54, and its length is 4.\n    Code   Len           \
    \ Address\n   +-----+-----+-----+-----+-----+-----+\n   |  54 |  4  |  a1 |  a2\
    \ |  a3 |  a4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 9.8. Parameter Request List
  contents:
  - "9.8. Parameter Request List\n   This option is used by a DHCP client to request\
    \ values for specified\n   configuration parameters.  The list of requested parameters\
    \ is\n   specified as n octets, where each octet is a valid DHCP option code\n\
    \   as defined in this document.\n   The client MAY list the options in order\
    \ of preference.  The DHCP\n   server is not required to return the options in\
    \ the requested order,\n   but MUST try to insert the requested options in the\
    \ order requested\n   by the client.\n   The code for this option is 55.  Its\
    \ minimum length is 1.\n    Code   Len   Option Codes\n   +-----+-----+-----+-----+---\n\
    \   |  55 |  n  |  c1 |  c2 | ...\n   +-----+-----+-----+-----+---\n"
- title: 9.9. Message
  contents:
  - "9.9. Message\n   This option is used by a DHCP server to provide an error message\
    \ to a\n   DHCP client in a DHCPNAK message in the event of a failure. A client\n\
    \   may use this option in a DHCPDECLINE message to indicate the why the\n   client\
    \ declined the offered parameters.  The message consists of n\n   octets of NVT\
    \ ASCII text, which the client may display on an\n   available output device.\n\
    \   The code for this option is 56 and its minimum length is 1.\n    Code   Len\
    \     Text\n   +-----+-----+-----+-----+---\n   |  56 |  n  |  c1 |  c2 | ...\n\
    \   +-----+-----+-----+-----+---\n"
- title: 9.10. Maximum DHCP Message Size
  contents:
  - "9.10. Maximum DHCP Message Size\n   This option specifies the maximum length\
    \ DHCP message that it is\n   willing to accept.  The length is specified as an\
    \ unsigned 16-bit\n   integer.  A client may use the maximum DHCP message size\
    \ option in\n   DHCPDISCOVER or DHCPREQUEST messages, but should not use the option\n\
    \   in DHCPDECLINE messages.\n   The code for this option is 57, and its length\
    \ is 2.  The minimum\n   legal value is 576 octets.\n    Code   Len     Length\n\
    \   +-----+-----+-----+-----+\n   |  57 |  2  |  l1 |  l2 |\n   +-----+-----+-----+-----+\n"
- title: 9.11. Renewal (T1) Time Value
  contents:
  - "9.11. Renewal (T1) Time Value\n   This option specifies the time interval from\
    \ address assignment until\n   the client transitions to the RENEWING state.\n\
    \   The value is in units of seconds, and is specified as a 32-bit\n   unsigned\
    \ integer.\n   The code for this option is 58, and its length is 4.\n    Code\
    \   Len         T1 Interval\n   +-----+-----+-----+-----+-----+-----+\n   |  58\
    \ |  4  |  t1 |  t2 |  t3 |  t4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 9.12. Rebinding (T2) Time Value
  contents:
  - "9.12. Rebinding (T2) Time Value\n   This option specifies the time interval from\
    \ address assignment until\n   the client transitions to the REBINDING state.\n\
    \   The value is in units of seconds, and is specified as a 32-bit\n   unsigned\
    \ integer.\n   The code for this option is 59, and its length is 4.\n    Code\
    \   Len         T2 Interval\n   +-----+-----+-----+-----+-----+-----+\n   |  59\
    \ |  4  |  t1 |  t2 |  t3 |  t4 |\n   +-----+-----+-----+-----+-----+-----+\n"
- title: 9.13. Vendor class identifier
  contents:
  - "9.13. Vendor class identifier\n   This option is used by DHCP clients to optionally\
    \ identify the vendor\n   type and configuration of a DHCP client.  The information\
    \ is a string\n   of n octets, interpreted by servers.  Vendors may choose to\
    \ define\n   specific vendor class identifiers to convey particular configuration\n\
    \   or other identification information about a client.  For example, the\n  \
    \ identifier may encode the client's hardware configuration.  Servers\n   not\
    \ equipped to interpret the class-specific information sent by a\n   client MUST\
    \ ignore it (although it may be reported). Servers that\n   respond SHOULD only\
    \ use option 43 to return the vendor-specific\n   information to the client.\n\
    \   The code for this option is 60, and its minimum length is 1.\n   Code   Len\
    \   Vendor class Identifier\n   +-----+-----+-----+-----+---\n   |  60 |  n  |\
    \  i1 |  i2 | ...\n   +-----+-----+-----+-----+---\n"
- title: 9.14. Client-identifier
  contents:
  - "9.14. Client-identifier\n   This option is used by DHCP clients to specify their\
    \ unique\n   identifier.  DHCP servers use this value to index their database\
    \ of\n   address bindings.  This value is expected to be unique for all\n   clients\
    \ in an administrative domain.\n   Identifiers SHOULD be treated as opaque objects\
    \ by DHCP servers.\n   The client identifier MAY consist of type-value pairs similar\
    \ to the\n   'htype'/'chaddr' fields defined in [3]. For instance, it MAY consist\n\
    \   of a hardware type and hardware address. In this case the type field\n   SHOULD\
    \ be one of the ARP hardware types defined in STD2 [22].  A\n   hardware type\
    \ of 0 (zero) should be used when the value field\n   contains an identifier other\
    \ than a hardware address (e.g. a fully\n   qualified domain name).\n   For correct\
    \ identification of clients, each client's client-\n   identifier MUST be unique\
    \ among the client-identifiers used on the\n   subnet to which the client is attached.\
    \  Vendors and system\n   administrators are responsible for choosing client-identifiers\
    \ that\n   meet this requirement for uniqueness.\n   The code for this option\
    \ is 61, and its minimum length is 2.\n   Code   Len   Type  Client-Identifier\n\
    \   +-----+-----+-----+-----+-----+---\n   |  61 |  n  |  t1 |  i1 |  i2 | ...\n\
    \   +-----+-----+-----+-----+-----+---\n"
- title: 10. Defining new extensions
  contents:
  - "10. Defining new extensions\n   The author of a new DHCP option will follow these\
    \ steps to obtain\n   acceptance of the option as a part of the DHCP Internet\
    \ Standard:\n   1. The author devises the new option.\n   2. The author requests\
    \ a number for the new option from IANA by\n      contacting:\n      Internet\
    \ Assigned Numbers Authority (IANA)\n      USC/Information Sciences Institute\n\
    \      4676 Admiralty Way\n      Marina del Rey, California  90292-6695\n    \
    \  or by email as: iana@iana.org\n   3. The author documents the new option, using\
    \ the newly obtained\n      option number, as an Internet Draft.\n   4. The author\
    \ submits the Internet Draft for review through the IETF\n      standards process\
    \ as defined in \"Internet Official Protocol\n      Standards\" (STD 1).  The\
    \ new option will be submitted for eventual\n      acceptance as an Internet Standard.\n\
    \   5. The new option progresses through the IETF standards process; the\n   \
    \   new option will be reviewed by the Dynamic Host Configuration\n      Working\
    \ Group (if that group still exists), or as an Internet\n      Draft not submitted\
    \ by an IETF working group.\n   6. If the new option fails to gain acceptance\
    \ as an Internet\n      Standard, the assigned option number will be returned\
    \ to IANA for\n      reassignment.\n      This procedure for defining new extensions\
    \ will ensure that:\n      * allocation of new option numbers is coordinated from\
    \ a single\n        authority,\n      * new options are reviewed for technical\
    \ correctness and\n        appropriateness, and\n      * documentation for new\
    \ options is complete and published.\n"
- title: 11. Acknowledgements
  contents:
  - "11. Acknowledgements\n   The author thanks the many (and too numerous to mention!)\
    \ members of\n   the DHC WG for their tireless and ongoing efforts in the development\n\
    \   of DHCP and this document.\n   The efforts of J Allard, Mike Carney, Dave\
    \ Lapp, Fred Lien and John\n   Mendonca in organizing DHCP interoperability testing\
    \ sessions are\n   gratefully acknowledged.\n   The development of this document\
    \ was supported in part by grants from\n   the Corporation for National Research\
    \ Initiatives (CNRI), Bucknell\n   University and Sun Microsystems.\n"
- title: 12. References
  contents:
  - "12. References\n   [1] Droms, R., \"Dynamic Host Configuration Protocol\", RFC\
    \ 2131,\n       Bucknell University, March 1997.\n   [2] Reynolds, J., \"BOOTP\
    \ Vendor Information Extensions\", RFC 1497,\n       USC/Information Sciences\
    \ Institute, August 1993.\n   [3] Croft, W., and J. Gilmore, \"Bootstrap Protocol\"\
    , RFC 951,\n       Stanford University and Sun Microsystems, September 1985.\n\
    \   [4] Braden, R., Editor, \"Requirements for Internet Hosts -\n       Communication\
    \ Layers\", STD 3, RFC 1122, USC/Information Sciences\n       Institute, October\
    \ 1989.\n   [5] Mogul, J., and J. Postel, \"Internet Standard Subnetting\n   \
    \    Procedure\", STD 5, RFC 950, USC/Information Sciences Institute,\n      \
    \ August 1985.\n   [6] Postel, J., and K. Harrenstien, \"Time Protocol\", STD\
    \ 26, RFC\n       868, USC/Information Sciences Institute, SRI, May 1983.\n  \
    \ [7] Postel, J., \"Name Server\", IEN 116, USC/Information Sciences\n       Institute,\
    \ August 1979.\n   [8] Mockapetris, P., \"Domain Names - Implementation and\n\
    \       Specification\", STD 13, RFC 1035, USC/Information Sciences\n       Institute,\
    \ November 1987.\n   [9] Postel, J., \"Quote of the Day Protocol\", STD 23, RFC\
    \ 865,\n       USC/Information Sciences Institute, May 1983.\n   [10] McLaughlin,\
    \ L., \"Line Printer Daemon Protocol\", RFC 1179, The\n        Wollongong Group,\
    \ August 1990.\n   [11] Accetta, M., \"Resource Location Protocol\", RFC 887,\
    \ CMU,\n        December 1983.\n   [12] Mogul, J. and S. Deering, \"Path MTU Discovery\"\
    , RFC 1191,\n        DECWRL,  Stanford University, November 1990.\n   [13] Deering,\
    \ S., \"ICMP Router Discovery Messages\", RFC 1256,\n        Xerox PARC, September\
    \ 1991.\n   [14] Leffler, S. and M. Karels, \"Trailer Encapsulations\", RFC 893,\n\
    \        U. C. Berkeley, April 1984.\n   [15] Hornig, C., \"Standard for the Transmission\
    \ of IP Datagrams over\n        Ethernet Networks\", RFC 894, Symbolics, April\
    \ 1984.\n   [16] Postel, J. and J. Reynolds, \"Standard for the Transmission of\n\
    \        IP Datagrams Over IEEE 802 Networks\", RFC 1042,  USC/Information\n \
    \       Sciences Institute, February 1988.\n   [17] Sun Microsystems, \"System\
    \ and Network Administration\", March\n        1990.\n   [18] Mills, D., \"Internet\
    \ Time Synchronization: The Network Time\n        Protocol\", RFC 1305, UDEL,\
    \ March 1992.\n   [19] NetBIOS Working Group, \"Protocol Standard for a NetBIOS\
    \ Service\n        on a TCP/UDP transport: Concepts and Methods\", STD 19, RFC\
    \ 1001,\n        March 1987.\n   [20] NetBIOS Working Group, \"Protocol Standard\
    \ for a NetBIOS Service\n        on a TCP/UDP transport: Detailed Specifications\"\
    , STD 19, RFC\n        1002, March 1987.\n   [21] Scheifler, R., \"FYI On the\
    \ X Window System\", FYI 6, RFC 1198,\n        MIT Laboratory for Computer Science,\
    \ January 1991.\n   [22] Reynolds, J., and J. Postel, \"Assigned Numbers\", STD\
    \ 2, RFC 1700,\n        USC/Information Sciences Institute, July 1992.\n"
- title: 13. Security Considerations
  contents:
  - "13. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 14. Authors' Addresses
  contents:
  - "14. Authors' Addresses\n   Steve Alexander\n   Silicon Graphics, Inc.\n   2011\
    \ N. Shoreline Boulevard\n   Mailstop 510\n   Mountain View, CA 94043-1389\n \
    \  Phone: (415) 933-6172\n   EMail: sca@engr.sgi.com\n   Ralph Droms\n   Bucknell\
    \ University\n   Lewisburg, PA 17837\n   Phone: (717) 524-1145\n   EMail: droms@bucknell.edu\n"
