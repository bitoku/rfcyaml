- contents:
  - '          IPv6 Support for Generic Routing Encapsulation (GRE)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Generic Routing Encapsulation (GRE) can be used to carry any network-\n
    \  layer payload protocol over any network-layer delivery protocol.\n   Currently,
    GRE procedures are specified for IPv4, used as either the\n   payload or delivery
    protocol.  However, GRE procedures are not\n   specified for IPv6.\n   This document
    specifies GRE procedures for IPv6, used as either the\n   payload or delivery
    protocol.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7676.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   3\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    .   3\n   2.  GRE Header Fields . . . . . . . . . . . . . . . . . . . . . .   4\n
    \    2.1.  Checksum Present  . . . . . . . . . . . . . . . . . . . .   4\n   3.
    \ IPv6 as GRE Payload . . . . . . . . . . . . . . . . . . . . .   5\n     3.1.
    \ GRE Protocol Type Considerations  . . . . . . . . . . . .   5\n     3.2.  MTU
    Considerations  . . . . . . . . . . . . . . . . . . .   5\n     3.3.  Fragmentation
    Considerations  . . . . . . . . . . . . . .   5\n   4.  IPv6 as GRE Delivery Protocol
    . . . . . . . . . . . . . . . .   6\n     4.1.  Next Header Considerations  .
    . . . . . . . . . . . . . .   6\n     4.2.  Checksum Considerations . . . . .
    . . . . . . . . . . . .   6\n     4.3.  MTU Considerations  . . . . . . . . .
    . . . . . . . . . .   8\n   5.  Security Considerations . . . . . . . . . . .
    . . . . . . . .   8\n   6.  References  . . . . . . . . . . . . . . . . . . .
    . . . . . .   8\n     6.1.  Normative References  . . . . . . . . . . . . . .
    . . . .   8\n     6.2.  Informative References  . . . . . . . . . . . . . . .
    . .   9\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .
    \ 10\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Generic Routing Encapsulation (GRE) [RFC2784] [RFC2890]
    can be used\n   to carry any network-layer payload protocol over any network-layer\n
    \  delivery protocol.  Currently, GRE procedures are specified for IPv4\n   [RFC791],
    used as either the payload or delivery protocol.  However,\n   GRE procedures
    are not specified for IPv6 [RFC2460].\n   This document specifies GRE procedures
    for IPv6, used as either the\n   payload or delivery protocol.  Like RFC 2784,
    this document describes\n   how GRE has been implemented by several vendors.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 1.1.  Requirements Language
  - contents:
    - "1.2.  Terminology\n   The following terms are used in this document:\n   o
      \ GRE delivery header: An IPv4 or IPv6 header whose source address\n      represents
      the GRE ingress node and whose destination address\n      represents the GRE
      egress node.  The GRE delivery header\n      encapsulates a GRE header.\n   o
      \ GRE header: The GRE protocol header.  The GRE header is\n      encapsulated
      in the GRE delivery header and encapsulates the GRE\n      payload.\n   o  GRE
      payload: A network-layer packet that is encapsulated by the\n      GRE header.\n
      \  o  GRE overhead: The combined size of the GRE delivery header and the\n      GRE
      header, measured in octets.\n   o  Path MTU (PMTU): The minimum MTU of all the
      links in a path\n      between a source node and a destination node.  If the
      source and\n      destination node are connected through Equal-Cost Multipath\n
      \     (ECMP), the PMTU is equal to the minimum link MTU of all links\n      contributing
      to the multipath.\n   o  Path MTU Discovery (PMTUD): A procedure for dynamically\n
      \     discovering the PMTU between two nodes on the Internet.  PMTUD\n      procedures
      for IPv6 are defined in [RFC1981].\n   o  GRE MTU (GMTU): The maximum transmission
      unit, i.e., maximum\n      packet size in octets, that can be conveyed over
      a GRE tunnel\n      without fragmentation of any kind.  The GMTU is equal to
      the PMTU\n      associated with the path between the GRE ingress and the GRE\n
      \     egress, minus the GRE overhead.\n"
    title: 1.2.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  GRE Header Fields\n   This document does not change the GRE header format
    or any behaviors\n   specified by RFC 2784 or RFC 2890.\n"
  - contents:
    - "2.1.  Checksum Present\n   The GRE ingress node SHOULD set the Checksum Present
      field in the GRE\n   header to zero.  However, implementations MAY support a
      configuration\n   option that causes the GRE ingress node to set the Checksum
      Present\n   field to one.\n   As per Section 2.2 of RFC 2784, the GRE egress
      node uses the Checksum\n   Present field to calculate the length of the GRE
      header.  If the\n   Checksum Present field is set to one, the GRE egress node
      MUST use\n   the GRE Checksum to verify the integrity of the GRE header and\n
      \  payload.\n   Setting the Checksum Present field to zero reduces the computational\n
      \  cost of GRE encapsulation and decapsulation.  In many cases, the GRE\n   Checksum
      is partially redundant with other checksums.  For example:\n   o  If the payload
      protocol is IPv4, the IPv4 header is protected by\n      both the GRE Checksum
      and the IPv4 Checksum.\n   o  If the payload carries TCP [RFC793], the TCP pseudo
      header, TCP\n      header, and TCP payload are protected by both the GRE Checksum
      and\n      TCP Checksum.\n   o  If the payload carries UDP [RFC768], the UDP
      pseudo header, UDP\n      header, and UDP payload are protected by both the
      GRE Checksum and\n      UDP Checksum.\n   However, if the GRE Checksum Present
      field is set to zero, the GRE\n   header is not protected by any checksum.  Furthermore,
      depending on\n   which of the above-mentioned conditions are true, selected
      portions\n   of the GRE payload will not be protected by any checksum.\n   Network
      operators should evaluate risk factors in their networks and\n   configure GRE
      ingress nodes appropriately.\n"
    title: 2.1.  Checksum Present
  title: 2.  GRE Header Fields
- contents:
  - "3.  IPv6 as GRE Payload\n   The following considerations apply to GRE tunnels
    that carry an IPv6\n   payload.\n"
  - contents:
    - "3.1.  GRE Protocol Type Considerations\n   The Protocol Type field in the GRE
      header MUST be set to Ether Type\n   [RFC7042] 0x86DD (IPv6).\n"
    title: 3.1.  GRE Protocol Type Considerations
  - contents:
    - "3.2.  MTU Considerations\n   A GRE tunnel MUST be able to carry a 1280-octet
      IPv6 packet from\n   ingress to egress, without fragmenting the payload packet.
      \ All GRE\n   tunnels with a GMTU of 1280 octets or greater satisfy this\n   requirement.
      \ GRE tunnels that can fragment and reassemble delivery\n   packets also satisfy
      this requirement, regardless of their GMTU.\n   However, the ability to fragment
      and reassemble delivery packets is\n   not a requirement of this specification.
      \ This specification requires\n   only that GRE ingress nodes refrain from activating
      GRE tunnels that\n   do not satisfy the above-mentioned requirement.\n   Before
      activating a GRE tunnel and periodically thereafter, the GRE\n   ingress node
      MUST verify the tunnel's ability to carry a 1280-octet\n   IPv6 payload packet
      from ingress to egress, without fragmenting the\n   payload.  Having executed
      those procedures, the GRE ingress node MUST\n   activate or deactivate the tunnel
      accordingly.\n   Implementation details regarding the above-mentioned verification\n
      \  procedures are beyond the scope of this document.  However, a GRE\n   ingress
      node can verify tunnel capabilities by sending a 1280-octet\n   IPv6 packet
      addressed to itself through the tunnel under test.\n   Many existing implementations
      [RFC7588] do not support the above-\n   mentioned verification procedures.  Unless
      deployed in environments\n   where the GMTU is guaranteed to be greater than
      1280, these\n   implementations MUST be configured so that the GRE endpoints
      can\n   fragment and reassemble the GRE delivery packet.\n"
    title: 3.2.  MTU Considerations
  - contents:
    - "3.3.  Fragmentation Considerations\n   When the GRE ingress receives an IPv6
      payload packet whose length is\n   less than or equal to the GMTU, it can encapsulate
      and forward the\n   packet without fragmentation of any kind.  In this case,
      the GRE\n   ingress router MUST NOT fragment the payload or delivery packets.\n
      \  When the GRE ingress receives an IPv6 payload packet whose length is\n   greater
      than the GMTU, and the GMTU is greater than or equal to 1280\n   octets, the
      GRE ingress router MUST:\n   o  discard the IPv6 payload packet\n   o  send
      an ICMPv6 Packet Too Big (PTB) [RFC4443] message to the IPv6\n      payload
      packet source.  The MTU field in the ICMPv6 PTB message is\n      set to the
      GMTU.\n   When the GRE ingress receives an IPv6 payload packet whose length
      is\n   greater than the GMTU, and the GMTU is less than 1280 octets, the GRE\n
      \  ingress router MUST:\n   o  encapsulate the entire IPv6 packet in a single
      GRE header and IP\n      delivery header\n   o  fragment the delivery header,
      so that it can be reassembled by the\n      GRE egress\n"
    title: 3.3.  Fragmentation Considerations
  title: 3.  IPv6 as GRE Payload
- contents:
  - "4.  IPv6 as GRE Delivery Protocol\n   The following considerations apply when
    the delivery protocol is\n   IPv6.\n"
  - contents:
    - "4.1.  Next Header Considerations\n   When the GRE delivery protocol is IPv6,
      the GRE header MAY\n   immediately follow the GRE delivery header.  Alternatively,
      IPv6\n   extension headers MAY be inserted between the GRE delivery header and\n
      \  the GRE header.\n   If the GRE header immediately follows the GRE delivery
      header, the\n   Next Header field in the IPv6 header of the GRE delivery packet
      MUST\n   be set to 47.  If extension headers are inserted between the GRE\n
      \  delivery header and the GRE header, the Next Header field in the last\n   IPv6
      extension header MUST be set to 47.\n"
    title: 4.1.  Next Header Considerations
  - contents:
    - "4.2.  Checksum Considerations\n   As stated in [RFC2784], the GRE header can
      contain a checksum.  If\n   present, the GRE header checksum can be used to
      detect corruption of\n   the GRE header and GRE payload.\n   The GRE header
      checksum cannot be used to detect corruption of the\n   IPv6 delivery header.
      \ Furthermore, the IPv6 delivery header does not\n   contain a checksum of its
      own.  Therefore, no available checksum can\n   be used to detect corruption
      of the IPv6 delivery header.\n   In one failure scenario, the destination address
      in the IPv6 delivery\n   header is corrupted.  As a result, the IPv6 delivery
      packet is\n   delivered to a node other than the intended GRE egress node.\n
      \  Depending upon the state and configuration of that node, it will\n   either:\n
      \  a.  Drop the packet\n   b.  Decapsulate the payload and forward it to its
      intended\n       destination\n   c.  Decapsulate the payload and forward it
      to a node other than its\n       intended destination.\n   Behaviors a) and
      b) are acceptable.  Behavior c) is not acceptable.\n   Behavior c) is possible
      only when the following conditions are true:\n   1.  The intended GRE egress
      node is a Virtual Private Network (VPN)\n       Provider Edge (PE) router.\n
      \  2.  The node to which the GRE delivery packet is mistakenly delivered\n       is
      also a VPN PE router.\n   3.  VPNs are attached to both of the above-mentioned
      nodes.  At least\n       two of these VPN's number hosts are from a non-unique
      (e.g.,\n       [RFC1918]) address space.\n   4.  The intended GRE egress node
      maintains state that causes it to\n       decapsulate the packet and forward
      the payload to its intended\n       destination\n   5.  The node to which the
      GRE delivery packet is mistakenly delivered\n       maintains state that causes
      it to decapsulate the packet and\n       forward the payload to an identically
      numbered host in another\n       VPN.\n   While the failure scenario described
      above is extremely unlikely, a\n   single misdelivered packet can adversely
      impact applications running\n   on the node to which the packet is misdelivered.
      \ Furthermore,\n   leaking packets across VPN boundaries also constitutes a
      security\n   breach.  The risk associated with behavior c) could be mitigated
      with\n   end-to-end authentication of the payload.\n   Before deploying GRE
      over IPv6, network operators should consider the\n   likelihood of behavior
      c) in their network.  GRE over IPv6 MUST NOT\n   be deployed other than where
      the network operator deems the risk\n   associated with behavior c) to be acceptable.\n"
    title: 4.2.  Checksum Considerations
  - contents:
    - "4.3.  MTU Considerations\n   By default, the GRE ingress node cannot fragment
      the IPv6 delivery\n   header.  However, implementations MAY support an optional\n
      \  configuration in which the GRE ingress node can fragment the IPv6\n   delivery
      header.\n   Also by default, the GRE egress node cannot reassemble the IPv6\n
      \  delivery header.  However, implementations MAY support an optional\n   configuration
      in which the GRE egress node can reassemble the IPv6\n   delivery header.\n"
    title: 4.3.  MTU Considerations
  title: 4.  IPv6 as GRE Delivery Protocol
- contents:
  - "5.  Security Considerations\n   The Security Considerations section of [RFC4023]
    identifies threats\n   encountered when MPLS is delivered over GRE.  These threats
    apply to\n   any GRE payload.  As stated in RFC 4023, these various threats can
    be\n   mitigated through options such as authenticating and/or encrypting\n   the
    delivery packet using IPsec [RFC4301].  Alternatively, when the\n   payload is
    IPv6, these threats can also be mitigated by\n   authenticating and/or encrypting
    the payload using IPsec, instead of\n   the delivery packet.  Otherwise, the current
    specification introduces\n   no security considerations beyond those mentioned
    in RFC 2784.\n   More generally, security considerations for IPv6 are discussed
    in\n   [RFC4942].  Operational security for IPv6 is discussed in [OPSEC-V6],\n
    \  and security concerns for tunnels in general are discussed in\n   [RFC6169].\n"
  title: 5.  Security Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC768]   Postel, J., \"User Datagram Protocol\",
      STD 6, RFC 768,\n              DOI 10.17487/RFC0768, August 1980,\n              <http://www.rfc-editor.org/info/rfc768>.\n
      \  [RFC791]   Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n              DOI
      10.17487/RFC0791, September 1981,\n              <http://www.rfc-editor.org/info/rfc791>.\n
      \  [RFC793]   Postel, J., \"Transmission Control Protocol\", STD 7,\n              RFC
      793, DOI 10.17487/RFC0793, September 1981,\n              <http://www.rfc-editor.org/info/rfc793>.\n
      \  [RFC1981]  McCann, J., Deering, S., and J. Mogul, \"Path MTU Discovery\n
      \             for IP version 6\", RFC 1981, DOI 10.17487/RFC1981, August\n              1996,
      <http://www.rfc-editor.org/info/rfc1981>.\n   [RFC2119]  Bradner, S., \"Key
      words for use in RFCs to Indicate\n              Requirement Levels\", BCP 14,
      RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)
      Specification\", RFC 2460, DOI 10.17487/RFC2460,\n              December 1998,
      <http://www.rfc-editor.org/info/rfc2460>.\n   [RFC2784]  Farinacci, D., Li,
      T., Hanks, S., Meyer, D., and P.\n              Traina, \"Generic Routing Encapsulation
      (GRE)\", RFC 2784,\n              DOI 10.17487/RFC2784, March 2000,\n              <http://www.rfc-editor.org/info/rfc2784>.\n
      \  [RFC2890]  Dommety, G., \"Key and Sequence Number Extensions to GRE\",\n
      \             RFC 2890, DOI 10.17487/RFC2890, September 2000,\n              <http://www.rfc-editor.org/info/rfc2890>.\n
      \  [RFC4023]  Worster, T., Rekhter, Y., and E. Rosen, Ed.,\n              \"Encapsulating
      MPLS in IP or Generic Routing Encapsulation\n              (GRE)\", RFC 4023,
      DOI 10.17487/RFC4023, March 2005,\n              <http://www.rfc-editor.org/info/rfc4023>.\n
      \  [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n              Internet
      Protocol\", RFC 4301, DOI 10.17487/RFC4301,\n              December 2005, <http://www.rfc-editor.org/info/rfc4301>.\n
      \  [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n              Control
      Message Protocol (ICMPv6) for the Internet\n              Protocol Version 6
      (IPv6) Specification\", RFC 4443,\n              DOI 10.17487/RFC4443, March
      2006,\n              <http://www.rfc-editor.org/info/rfc4443>.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [OPSEC-V6] Chittimaneni, K., Kaeo, M., and
      E. Vyncke, \"Operational\n              Security Considerations for IPv6 Networks\",
      Work in\n              Progress, draft-ietf-opsec-v6-07, September 2015.\n   [RFC1918]
      \ Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot, G.,\n              and
      E. Lear, \"Address Allocation for Private Internets\",\n              BCP 5,
      RFC 1918, DOI 10.17487/RFC1918, February 1996,\n              <http://www.rfc-editor.org/info/rfc1918>.\n
      \  [RFC4942]  Davies, E., Krishnan, S., and P. Savola, \"IPv6 Transition/\n
      \             Co-existence Security Considerations\", RFC 4942,\n              DOI
      10.17487/RFC4942, September 2007,\n              <http://www.rfc-editor.org/info/rfc4942>.\n
      \  [RFC6169]  Krishnan, S., Thaler, D., and J. Hoagland, \"Security\n              Concerns
      with IP Tunneling\", RFC 6169,\n              DOI 10.17487/RFC6169, April 2011,\n
      \             <http://www.rfc-editor.org/info/rfc6169>.\n   [RFC7042]  Eastlake
      3rd, D. and J. Abley, \"IANA Considerations and\n              IETF Protocol
      and Documentation Usage for IEEE 802\n              Parameters\", BCP 141, RFC
      7042, DOI 10.17487/RFC7042,\n              October 2013, <http://www.rfc-editor.org/info/rfc7042>.\n
      \  [RFC7588]  Bonica, R., Pignataro, C., and J. Touch, \"A Widely\n              Deployed
      Solution to the Generic Routing Encapsulation\n              (GRE) Fragmentation
      Problem\", RFC 7588,\n              DOI 10.17487/RFC7588, July 2015,\n              <http://www.rfc-editor.org/info/rfc7588>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Fred Baker, Stewart Bryant,
    Benoit\n   Claise, Ben Campbell, Carlos Jesus Bernardos Cano, Spencer Dawkins,\n
    \  Dino Farinacci, David Farmer, Brian Haberman, Tom Herbert, Kathleen\n   Moriarty,
    Fred Templin, Joe Touch, Andrew Yourtchenko, and Lucy Yong\n   for their thorough
    review and useful comments.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Carlos Pignataro\n   Cisco Systems\n   7200-12 Kit Creek
    Road\n   Research Triangle Park, North Carolina  27709\n   United States\n   Email:
    cpignata@cisco.com\n   Ron Bonica\n   Juniper Networks\n   2251 Corporate Park
    Drive\n   Herndon, Virginia\n   United States\n   Email: rbonica@juniper.net\n
    \  Suresh Krishnan\n   Ericsson\n   8400 Decarie Blvd.\n   Town of Mount Royal,
    QC\n   Canada\n   Phone: +1 514 345 7900 x42871\n   Email: suresh.krishnan@ericsson.com\n"
  title: Authors' Addresses
