- title: __initial_text__
  contents:
  - '                   Message Submission BURL Extension

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The submission profile of Simple Mail Transfer Protocol (SMTP)\n\
    \   provides a standard way for an email client to submit a complete\n   message\
    \ for delivery.  This specification extends the submission\n   profile by adding\
    \ a new BURL command that can be used to fetch\n   submission data from an Internet\
    \ Message Access Protocol (IMAP)\n   server.  This permits a mail client to inject\
    \ content from an IMAP\n   server into the SMTP infrastructure without downloading\
    \ it to the\n   client and uploading it back to the server.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions Used in This Document ...............................2\n  \
    \ 3. BURL Submission Extension .......................................3\n    \
    \  3.1. SMTP Submission Extension Registration .....................3\n      3.2.\
    \ BURL Transaction ...........................................3\n      3.3. The\
    \ BURL IMAP Options ......................................4\n      3.4. Examples\
    \ ...................................................5\n      3.5. Formal Syntax\
    \ ..............................................6\n   4. 8-Bit and Binary ................................................7\n\
    \   5. Updates to RFC 3463 .............................................7\n  \
    \ 6. Response Codes ..................................................7\n   7.\
    \ IANA Considerations .............................................9\n   8. Security\
    \ Considerations .........................................9\n   9. References\
    \ .....................................................11\n      9.1. Normative\
    \ References ......................................11\n      9.2. Informative\
    \ References ....................................12\n   Appendix A.  Acknowledgements\
    \ .....................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This specification defines an extension to the standard\
    \ Message\n   Submission [RFC4409] protocol to permit data to be fetched from\
    \ an\n   IMAP server at message submission time.  This MAY be used in\n   conjunction\
    \ with the CHUNKING [RFC3030] mechanism so that chunks of\n   the message can\
    \ come from an external IMAP server.  This provides the\n   ability to forward\
    \ an email message without first downloading it to\n   the client.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"SHOULD\", \"SHOULD NOT\", and \"MAY\"\n   in this document are to be interpreted\
    \ as defined in \"Key words for\n   use in RFCs to Indicate Requirement Levels\"\
    \ [RFC2119].\n   The formal syntax uses the Augmented Backus-Naur Form (ABNF)\n\
    \   [RFC4234] notation including the core rules defined in Appendix B of\n   RFC\
    \ 4234.\n"
- title: 3.  BURL Submission Extension
  contents:
  - "3.  BURL Submission Extension\n   This section defines the BURL submission extension.\n"
- title: 3.1.  SMTP Submission Extension Registration
  contents:
  - "3.1.  SMTP Submission Extension Registration\n   1.  The name of this submission\
    \ extension is \"BURL\".  This extends\n       the Message Submission protocol\
    \ on port 587 and MUST NOT be\n       advertised by a regular SMTP [RFC2821] server\
    \ on port 25 that\n       acts as a relay for incoming mail from other SMTP relays.\n\
    \   2.  The EHLO keyword value associated with the extension is \"BURL\".\n  \
    \ 3.  The BURL EHLO keyword will have zero or more arguments.  The only\n    \
    \   argument defined at this time is the \"imap\" argument, which MUST\n     \
    \  be present in order to use IMAP URLs with BURL.  Clients MUST\n       ignore\
    \ other arguments after the BURL EHLO keyword unless they\n       are defined\
    \ by a subsequent IETF standards track specification.\n       The arguments that\
    \ appear after the BURL EHLO keyword may change\n       subsequent to the use\
    \ of SMTP AUTH [RFC2554], so a server that\n       advertises BURL with no arguments\
    \ prior to authentication\n       indicates that BURL is supported but authentication\
    \ is required\n       to use it.\n   4.  This extension adds the BURL SMTP verb.\
    \  This verb is used as a\n       replacement for the DATA command and is only\
    \ permitted during a\n       mail transaction after at least one successful RCPT\
    \ TO.\n"
- title: 3.2.  BURL Transaction
  contents:
  - "3.2.  BURL Transaction\n   A simple BURL transaction will consist of MAIL FROM,\
    \ one or more RCPT\n   TO headers, and a BURL command with the \"LAST\" tag. \
    \ The BURL command\n   will include an IMAP URL pointing to a fully formed message\
    \ ready for\n   injection into the SMTP infrastructure.  If PIPELINING [RFC2920]\
    \ is\n   advertised, the client MAY send the entire transaction in one round\n\
    \   trip.  If no valid RCPT TO address is supplied, the BURL command will\n  \
    \ simply fail, and no resolution of the BURL URL argument will be\n   performed.\
    \  If at least one valid RCPT TO address is supplied, then\n   the BURL URL argument\
    \ will be resolved before the server responds to\n   the command.\n   A more sophisticated\
    \ BURL transaction MAY occur when the server also\n   advertises CHUNKING [RFC3030].\
    \  In this case, the BURL and BDAT\n   commands may be interleaved until one of\
    \ them terminates the\n   transaction with the \"LAST\" argument.  If PIPELINING\
    \ [RFC2920] is\n   also advertised, then the client may pipeline the entire transaction\n\
    \   in one round-trip.  However, it MUST wait for the results of the\n   \"LAST\"\
    \ BDAT or BURL command prior to initiating a new transaction.\n   The BURL command\
    \ directs the server to fetch the data object to which\n   the URL refers and\
    \ include it in the message.  If the URL fetch\n   fails, the server will fail\
    \ the entire transaction.\n"
- title: 3.3.  The BURL IMAP Options
  contents:
  - "3.3.  The BURL IMAP Options\n   When \"imap\" is present in the space-separated\
    \ list of arguments\n   following the BURL EHLO keyword, it indicates that the\
    \ BURL command\n   supports the URLAUTH [RFC4467] extended form of IMAP URLs [RFC2192]\n\
    \   and that the submit server is configured with the necessary\n   credentials\
    \ to resolve \"urlauth=submit+\" IMAP URLs for the submit\n   server's domain.\n\
    \   Subsequent to a successful SMTP AUTH command, the submission server\n   MAY\
    \ indicate a prearranged trust relationship with a specific IMAP\n   server by\
    \ including a BURL EHLO keyword argument of the form\n   \"imap://imap.example.com\"\
    .  In this case, the submission server will\n   permit a regular IMAP URL referring\
    \ to messages or parts of messages\n   on imap.example.com that the user who authenticated\
    \ to the submit\n   server can access.  Note that this form does not imply that\
    \ the\n   submit server supports URLAUTH URLs; the submit server must advertise\n\
    \   both \"imap\" and \"imap://imap.example.com\" to indicate support for\n  \
    \ both extended and non-extended URL forms.\n   When the submit server connects\
    \ to the IMAP server, it acts as an\n   IMAP client and thus is subject to both\
    \ the mandatory-to-implement\n   IMAP capabilities in Section 6.1.1 of RFC 3501,\
    \ and the security\n   considerations in Section 11 of RFC 3501.  Specifically,\
    \ this\n   requires that the submit server implement a configuration that uses\n\
    \   STARTTLS followed by SASL PLAIN [SASL-PLAIN] to authenticate to the\n   IMAP\
    \ server.\n   When the submit server resolves a URLAUTH IMAP URL, it uses submit\n\
    \   server credentials when authenticating to the IMAP server.  The\n   authentication\
    \ identity and password used for submit credentials MUST\n   be configurable.\
    \  The string \"submit\" is suggested as a default value\n   for the authentication\
    \ identity, with no default for the password.\n   Typically, the authorization\
    \ identity is empty in this case; thus the\n   IMAP server will derive the authorization\
    \ identity from the\n   authentication identity.  If the IMAP URL uses the \"\
    submit+\" access\n   identifier prefix, the submit server MUST refuse the BURL\
    \ command\n   unless the userid in the URL's <access> token matches the submit\n\
    \   client's authorization identity.\n   When the submit server resolves a regular\
    \ IMAP URL, it uses the\n   submit client's authorization identity when authenticating\
    \ to the\n   IMAP server.  If both the submit client and the submit server's\n\
    \   embedded IMAP client use SASL PLAIN (or the equivalent), the submit\n   server\
    \ SHOULD forward the client's credentials if and only if the\n   submit server\
    \ knows that the IMAP server is in the same\n   administrative domain.  If the\
    \ submit server supports SASL mechanisms\n   other than PLAIN, it MUST implement\
    \ a configuration in which the\n   submit server's embedded IMAP client uses STARTTLS\
    \ and SASL PLAIN\n   with the submit server's authentication identity and password\
    \ (for\n   the respective IMAP server) and the submit client's authorization\n\
    \   identity.\n"
- title: 3.4.  Examples
  contents:
  - "3.4.  Examples\n   In examples, \"C:\" and \"S:\" indicate lines sent by the\
    \ client and\n   server, respectively.  If a single \"C:\" or \"S:\" label applies\
    \ to\n   multiple lines, then the line breaks between those lines are for\n  \
    \ editorial clarity only and are not part of the actual protocol\n   exchange.\n\
    \   Two successful submissions (without and with pipelining) follow:\n   <SSL/TLS\
    \ encryption layer negotiated>\n   C: EHLO potter.example.com\n   S: 250-owlry.example.com\n\
    \   S: 250-8BITMIME\n   S: 250-BURL imap\n   S: 250-AUTH PLAIN\n   S: 250-DSN\n\
    \   S: 250 ENHANCEDSTATUSCODES\n   C: AUTH PLAIN aGFycnkAaGFycnkAYWNjaW8=\n  \
    \ S: 235 2.7.0 PLAIN authentication successful.\n   C: MAIL FROM:<harry@gryffindor.example.com>\n\
    \   S: 250 2.5.0 Address Ok.\n   C: RCPT TO:<ron@gryffindor.example.com>\n   S:\
    \ 250 2.1.5 ron@gryffindor.example.com OK.\n   C: BURL imap://harry@gryffindor.example.com/outbox\n\
    \           ;uidvalidity=1078863300/;uid=25;urlauth=submit+harry\n           :internal:91354a473744909de610943775f92038\
    \ LAST\n   S: 250 2.5.0 Ok.\n   <SSL/TLS encryption layer negotiated>\n   C: EHLO\
    \ potter.example.com\n   S: 250-owlry.example.com\n   S: 250-8BITMIME\n   S: 250-PIPELINING\n\
    \   S: 250-BURL imap\n   S: 250-AUTH PLAIN\n   S: 250-DSN\n   S: 250 ENHANCEDSTATUSCODES\n\
    \   C: AUTH PLAIN aGFycnkAaGFycnkAYWNjaW8=\n   C: MAIL FROM:<harry@gryffindor.example.com>\n\
    \   C: RCPT TO:<ron@gryffindor.example.com>\n   C: BURL imap://harry@gryffindor.example.com/outbox\n\
    \           ;uidvalidity=1078863300/;uid=25;urlauth=submit+harry\n           :internal:91354a473744909de610943775f92038\
    \ LAST\n   S: 235 2.7.0 PLAIN authentication successful.\n   S: 250 2.5.0 Address\
    \ Ok.\n   S: 250 2.1.5 ron@gryffindor.example.com OK.\n   S: 250 2.5.0 Ok.\n \
    \  Note that PIPELINING of the AUTH command is only permitted if the\n   selected\
    \ mechanism can be completed in one round trip, a client\n   initial response\
    \ is provided, and no SASL security layer is\n   negotiated.  This is possible\
    \ for PLAIN and EXTERNAL, but not for\n   most other SASL mechanisms.\n   Some\
    \ examples of failure cases:\n   C: MAIL FROM:<harry@gryffindor.example.com>\n\
    \   C: RCPT TO:<malfoy@slitherin.example.com>\n   C: BURL imap://harry@gryffindor.example.com/outbox\n\
    \           ;uidvalidity=1078863300/;uid=25;urlauth=submit+harry\n           :internal:91354a473744909de610943775f92038\
    \ LAST\n   S: 250 2.5.0 Address Ok.\n   S: 550 5.7.1 Relaying not allowed: malfoy@slitherin.example.com\n\
    \   S: 554 5.5.0 No recipients have been specified.\n   C: MAIL FROM:<harry@gryffindor.example.com>\n\
    \   C: RCPT TO:<ron@gryffindor.example.com>\n   C: BURL imap://harry@gryffindor.example.com/outbox\n\
    \           ;uidvalidity=1078863300/;uid=25;urlauth=submit+harry\n           :internal:71354a473744909de610943775f92038\
    \ LAST\n   S: 250 2.5.0 Address Ok.\n   S: 250 2.1.5 ron@gryffindor.example.com\
    \ OK.\n   S: 554 5.7.0 IMAP URL authorization failed\n"
- title: 3.5.  Formal Syntax
  contents:
  - "3.5.  Formal Syntax\n   The following syntax specification inherits ABNF [RFC4234]\
    \ and\n   Uniform Resource Identifiers [RFC3986].\n      burl-param  = \"imap\"\
    \ / (\"imap://\" authority)\n                  ; parameter to BURL EHLO keyword\n\
    \      burl-cmd    = \"BURL\" SP absolute-URI [SP end-marker] CRLF\n      end-marker\
    \  = \"LAST\"\n"
- title: 4.  8-Bit and Binary
  contents:
  - "4.  8-Bit and Binary\n   A submit server that advertises BURL MUST also advertise\
    \ 8BITMIME\n   [RFC1652] and perform the down conversion described in that\n \
    \  specification on the resulting complete message if 8-bit data is\n   received\
    \ with the BURL command and passed to a 7-bit server.  If the\n   URL argument\
    \ to BURL refers to binary data, then the submit server\n   MAY refuse the command\
    \ or down convert as described in Binary SMTP\n   [RFC3030].\n   The Submit server\
    \ MAY refuse to accept a BURL command or combination\n   of BURL and BDAT commands\
    \ that result in un-encoded 8-bit data in\n   mail or MIME [RFC2045] headers.\
    \  Alternatively, the server MAY accept\n   such data and down convert to MIME\
    \ header encoding [RFC2047].\n"
- title: 5.  Updates to RFC 3463
  contents:
  - "5.  Updates to RFC 3463\n   SMTP or Submit servers that advertise ENHANCEDSTATUSCODES\
    \ [RFC2034]\n   use enhanced status codes defined in RFC 3463 [RFC3463].  The\
    \ BURL\n   extension introduces new error cases that that RFC did not consider.\n\
    \   The following additional enhanced status codes are defined by this\n   specification:\n\
    \   X.6.6 Message content not available\n      The message content could not be\
    \ fetched from a remote system.\n      This may be useful as a permanent or persistent\
    \ temporary\n      notification.\n   X.7.8 Trust relationship required\n     \
    \ The submission server requires a configured trust relationship\n      with a\
    \ third-party server in order to access the message content.\n"
- title: 6.  Response Codes
  contents:
  - "6.  Response Codes\n   This section includes example response codes to the BURL\
    \ command.\n   Other text may be used with the same response codes.  This list\
    \ is\n   not exhaustive, and BURL clients MUST tolerate any valid SMTP\n   response\
    \ code.  Most of these examples include the appropriate\n   enhanced status code\
    \ [RFC3463].\n   554 5.5.0 No recipients have been specified\n      This response\
    \ code occurs when BURL is used (for example, with\n      PIPELINING) and all\
    \ RCPT TOs failed.\n   503 5.5.0 Valid RCPT TO required before BURL\n      This\
    \ response code is an alternative to the previous one when BURL\n      is used\
    \ (for example, with PIPELINING) and all RCPT TOs failed.\n   554 5.6.3 Conversion\
    \ required but not supported\n      This response code occurs when the URL points\
    \ to binary data and\n      the implementation does not support down conversion\
    \ to base64.\n      This can also be used if the URL points to message data with\
    \ 8-bit\n      content in headers and the server does not down convert such\n\
    \      content.\n   554 5.3.4 Message too big for system\n      The message (subsequent\
    \ to URL resolution) is larger than the\n      per-message size limit for this\
    \ server.\n   554 5.7.8 URL resolution requires trust relationship\n      The\
    \ submit server does not have a trust relationship with the IMAP\n      server\
    \ specified in the URL argument to BURL.\n   552 5.2.2 Mailbox full\n      The\
    \ recipient is local, the submit server supports direct\n      delivery, and the\
    \ recipient has exceeded his quota and any grace\n      period for delivery attempts.\n\
    \   554 5.6.6 IMAP URL resolution failed\n      The IMAP URLFETCH command returned\
    \ an error or no data.\n   250 2.5.0 Waiting for additional BURL or BDAT commands\n\
    \      A BURL command without the \"LAST\" modifier was sent.  The URL for\n \
    \     this BURL command was successfully resolved, but the content will\n    \
    \  not necessarily be committed to persistent storage until the rest\n      of\
    \ the message content is collected.  For example, a Unix server\n      may have\
    \ written the content to a queue file buffer, but may not\n      yet have performed\
    \ an fsync() operation.  If the server loses\n      power, the content can still\
    \ be lost.\n   451 4.4.1 IMAP server unavailable\n      The connection to the\
    \ IMAP server to resolve the URL failed.\n   250 2.5.0 Ok.\n      The URL was\
    \ successfully resolved, and the complete message data\n      has been committed\
    \ to persistent storage.\n   250 2.6.4 MIME header conversion with loss performed\n\
    \      The URL pointed to message data that included mail or MIME headers\n  \
    \    with 8-bit data.  This data was converted to MIME header encoding\n     \
    \ [RFC2047], but the submit server may not have correctly guessed\n      the unlabeled\
    \ character set.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The \"BURL\" SMTP extension as described in Section\
    \ 3 has been\n   registered.  This registration has been marked for use by message\n\
    \   submission [RFC4409] only in the registry.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Modern SMTP submission servers often include\
    \ content-based security\n   and denial-of-service defense mechanisms such as\
    \ virus filtering,\n   size limits, server-generated signatures, spam filtering,\
    \ etc.\n   Implementations of BURL should fetch the URL content prior to\n   application\
    \ of such content-based mechanisms in order to preserve\n   their function.\n\
    \   Clients that generate unsolicited bulk email or email with viruses\n   could\
    \ use this mechanism to compensate for a slow link between the\n   client and\
    \ submit server.  In particular, this mechanism would make\n   it feasible for\
    \ a programmable cell phone or other device on a slow\n   link to become a significant\
    \ source of unsolicited bulk email and/or\n   viruses.  This makes it more important\
    \ for submit server vendors\n   implementing BURL to have auditing and/or defenses\
    \ against such\n   denial-of-service attacks including mandatory authentication,\
    \ logging\n   that associates unique client identifiers with mail transactions,\n\
    \   limits on reuse of the same IMAP URL, rate limits, recipient count\n   limits,\
    \ and content filters.\n   Transfer of the URLAUTH [RFC4467] form of IMAP URLs\
    \ in the clear can\n   expose the authorization token to network eavesdroppers.\n\
    \   Implementations that support such URLs can address this issue by\n   using\
    \ a strong confidentiality protection mechanism.  For example,\n   the SMTP STARTTLS\
    \ [RFC3207] and the IMAP STARTTLS [RFC3501]\n   extensions, in combination with\
    \ a configuration setting that requires\n   their use with such IMAP URLs, would\
    \ address this concern.\n   Use of a prearranged trust relationship between a\
    \ submit server and a\n   specific IMAP server introduces security considerations.\
    \  A\n   compromise of the submit server should not automatically compromise\n\
    \   all accounts on the IMAP server, so trust relationships involving\n   super-user\
    \ proxy credentials are strongly discouraged.  A system that\n   requires the\
    \ submit server to authenticate to the IMAP server with\n   submit credentials\
    \ and subsequently requires a URLAUTH URL to fetch\n   any content addresses this\
    \ concern.  A trusted third party model for\n   proxy credentials (such as that\
    \ provided by Kerberos 5 [RFC4120])\n   would also suffice.\n   When a client\
    \ uses SMTP STARTTLS to send a BURL command that\n   references non-public information,\
    \ there is a user expectation that\n   the entire message content will be treated\
    \ confidentially.  To\n   address this expectation, the message submission server\
    \ SHOULD use\n   STARTTLS or a mechanism providing equivalent data confidentiality\n\
    \   when fetching the content referenced by that URL.\n   A legitimate user of\
    \ a submit server may try to compromise other\n   accounts on the server by providing\
    \ an IMAP URLAUTH URL that points\n   to a server under that user's control that\
    \ is designed to undermine\n   the security of the submit server.  For this reason,\
    \ the IMAP client\n   code that the submit server uses must be robust with respect\
    \ to\n   arbitrary input sizes (including large IMAP literals) and arbitrary\n\
    \   delays from the IMAP server.  Requiring a prearranged trust\n   relationship\
    \ between a submit server and the IMAP server also\n   addresses this concern.\n\
    \   An authorized user of the submit server could set up a fraudulent\n   IMAP\
    \ server and pass a URL for that server to the submit server.  The\n   submit\
    \ server might then contact the fraudulent IMAP server to\n   authenticate with\
    \ submit credentials and fetch content.  There are\n   several ways to mitigate\
    \ this potential attack.  A submit server that\n   only uses submit credentials\
    \ with a fixed set of trusted IMAP servers\n   will not be vulnerable to exposure\
    \ of those credentials.  A submit\n   server can treat the IMAP server as untrusted\
    \ and include defenses\n   for buffer overflows, denial-of-service slowdowns,\
    \ and other\n   potential attacks.  Finally, because authentication is required\
    \ to\n   use BURL, it is possible to keep a secure audit trail and use that to\n\
    \   detect and punish the offending party.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC1652]     Klensin, J., Freed, N., Rose, M.,\
    \ Stefferud, E., and D.\n                 Crocker, \"SMTP Service Extension for\n\
    \                 8bit-MIMEtransport\", RFC 1652, July 1994.\n   [RFC2119]   \
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n                 Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2192]     Newman, C., \"IMAP\
    \ URL Scheme\", RFC 2192,\n                 September 1997.\n   [RFC2554]    \
    \ Myers, J., \"SMTP Service Extension for Authentication\",\n                \
    \ RFC 2554, March 1999.\n   [RFC2821]     Klensin, J., \"Simple Mail Transfer\
    \ Protocol\", RFC 2821,\n                 April 2001.\n   [RFC3207]     Hoffman,\
    \ P., \"SMTP Service Extension for Secure SMTP\n                 over Transport\
    \ Layer Security\", RFC 3207,\n                 February 2002.\n   [RFC3501] \
    \    Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL -\n                 VERSION\
    \ 4rev1\", RFC 3501, March 2003.\n   [RFC3986]     Berners-Lee, T., Fielding,\
    \ R., and L. Masinter,\n                 \"Uniform Resource Identifier (URI):\
    \ Generic Syntax\",\n                 STD 66, RFC 3986, January 2005.\n   [RFC4234]\
    \     Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n               \
    \  Specifications: ABNF\", RFC 4234, October 2005.\n   [RFC4409]     Gellens,\
    \ R. and J. Klensin, \"Message Submission for\n                 Mail\", RFC 4409,\
    \ April 2006.\n   [RFC4467]     Crispin, M., \"Internet Message Access Protocol\
    \ (IMAP) -\n                 URLAUTH Extension\", RFC 4467, May 2006.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC2034]     Freed, N., \"SMTP Service Extension\
    \ for Returning\n                 Enhanced Error Codes\", RFC 2034, October 1996.\n\
    \   [RFC2045]     Freed, N. and N. Borenstein, \"Multipurpose Internet\n     \
    \            Mail Extensions (MIME) Part One: Format of Internet\n           \
    \      Message Bodies\", RFC 2045, November 1996.\n   [RFC2047]     Moore, K.,\
    \ \"MIME (Multipurpose Internet Mail\n                 Extensions) Part Three:\
    \ Message Header Extensions for\n                 Non-ASCII Text\", RFC 2047,\
    \ November 1996.\n   [RFC2920]     Freed, N., \"SMTP Service Extension for Command\n\
    \                 Pipelining\", STD 60, RFC 2920, September 2000.\n   [RFC3030]\
    \     Vaudreuil, G., \"SMTP Service Extensions for\n                 Transmission\
    \ of Large and Binary MIME Messages\",\n                 RFC 3030, December 2000.\n\
    \   [RFC3463]     Vaudreuil, G., \"Enhanced Mail System Status Codes\",\n    \
    \             RFC 3463, January 2003.\n   [RFC4120]     Neuman, C., Yu, T., Hartman,\
    \ S., and K. Raeburn, \"The\n                 Kerberos Network Authentication\
    \ Service (V5)\", RFC\n                 4120, July 2005.\n   [SASL-PLAIN]  Zeilenga,\
    \ K., \"The Plain SASL Mechanism\", Work in\n                 Progress, March\
    \ 2005.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   This document is a product of the lemonade\
    \ WG.  Many thanks are due\n   to all the participants of that working group for\
    \ their input.  Mark\n   Crispin was instrumental in the conception of this mechanism.\
    \  Thanks\n   to Randall Gellens, Alexey Melnikov, Sam Hartman, Ned Freed, Dave\n\
    \   Cridland, Peter Coates, and Mark Crispin for review comments on the\n   document.\
    \  Thanks to the RFC Editor for correcting the author's\n   grammar mistakes.\
    \  Thanks to Ted Hardie, Randall Gellens, Mark\n   Crispin, Pete Resnick, and\
    \ Greg Vaudreuil for extremely interesting\n   debates comparing this proposal\
    \ and alternatives.  Thanks to the\n   lemonade WG chairs Eric Burger and Glenn\
    \ Parsons for concluding the\n   debate at the correct time and making sure this\
    \ document got\n   completed.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Chris Newman\n   Sun Microsystems\n   3401 Centrelake Dr.,\
    \ Suite 410\n   Ontario, CA  91761\n   US\n   EMail: chris.newman@sun.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
