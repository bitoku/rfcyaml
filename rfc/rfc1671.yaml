- title: __initial_text__
  contents:
  - '        IPng White Paper on Transition and Other Considerations

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document was submitted to the IETF IPng area in response to\
    \ RFC\n   1550.  Publication of this document does not imply acceptance by the\n\
    \   IPng area of any ideas expressed within.  Comments should be\n   submitted\
    \ to the big-internet@munnari.oz.au mailing list.\n"
- title: Summary
  contents:
  - "Summary\n   This white paper outlines some general requirements for IPng in\n\
    \   selected areas. It identifies the following requirements for stepwise\n  \
    \ transition:\n   A) Interworking at every stage and every layer.\n   B) Header\
    \ translation considered harmful\n   C) Coexistence.\n   D) IPv4 to IPng address\
    \ mapping.\n   E) Dual stack hosts.\n   F) DNS.\n   G) Smart dual-stack code.\n\
    \   H) Smart management tools.\n   Some remarks about phsysical and logical multicast\
    \ follow, and it is\n   suggested that a model of how IPng will run over ATM is\
    \ needed.\n   Finally, the paper suggests that the requirements for policy routing,\n\
    \   accounting, and security firewalls will in turn require all IPng\n   packets\
    \ to carry a trace of the type of transaction involved as well\n   as of their\
    \ source and destination.\n"
- title: Transition and deployment
  contents:
  - "Transition and deployment\n   It is clear that the transition will take years\
    \ and that every site\n   will have to decide its own staged transition plan.\
    \ Only the very\n   smallest sites could envisage a single step (\"flag day\"\
    ) transition,\n   presumably under pressure from their Internet service providers.\n\
    \   Furthermore, once the IPng decision is taken, the next decade (or\n   more)\
    \ of activity in the Internet and in all private networks using\n   the Internet\
    \ suite will be strongly affected by the process of IPng\n   deployment. User\
    \ sites will look at the decision whether to change\n   from IPv4 in the same\
    \ way as they have looked in the past at changes\n   of programming language or\
    \ operating system. It may not be a foregone\n   conclusion that what they change\
    \ to is IPng.  Their main concern will\n   be to minimise the cost of the change\
    \ and the risk of lost\n   production.\n   This concern immediately defines strong\
    \ constraints on the model for\n   transition and deployment of IPng. Some of\
    \ these constraints are\n   listed below, with a short explanation of each one.\n\
    \   Terminology: an \"IPv4 host\" is a host that runs exactly what it runs\n \
    \  today, with no maintenance releases and no configuration changes. An\n   \"\
    IPng host\" is a host that has a new version of IP, and has been\n   reconfigured.\
    \  Similarly for routers.\n   A) Interworking at every stage and every layer.\n\
    \   This is the major constraint. Vendors of computer systems, routers,\n   and\
    \ applications software will certainly not coordinate their product\n   release\
    \ dates. Users will go on running their old equipment and\n   software.  Therefore,\
    \ any combination of IPv4 and IPng hosts and\n   routers must be able to interwork\
    \ (i.e., participate in UDP and TCP\n   sessions). An IPv4 packet must be  able\
    \ to find its way from any IPv4\n   host, to any other IPv4 or IPng host, or vice\
    \ versa, through a\n   mixture of IPv4 and IPng routers, with no (zero, null)\
    \ modifications\n   to the IPv4 hosts. IPv4 routers must need no modifications\
    \ to\n   interwork with IPng routers.  Additionally, an application package\n\
    \   which is \"aware\" of IPv4 but still \"unaware\" of IPng must be able to\n\
    \   run on a computer system which is running IPv4, but communicating\n   with\
    \ an IPng host.  For example an old PC in Europe should be able to\n   access\
    \ a NIC server in the USA, even if the NIC server is running\n   IPng and the\
    \ transatlantic routing mechanisms are only partly\n   converted.  Or a Class\
    \ C network in one department of a company\n   should retain full access to corporate\
    \ servers which are running\n   IPng, even though nothing whatever has been changed\
    \ inside the Class\n   C network.\n   (This does NOT require an IPv4-only application\
    \ to run on an IPng\n   host; thus we accept that some hosts cannot be upgraded\
    \ until all\n   their applications are IPng-compatible. In other words we accept\
    \ that\n   the API may change to some extent. However, even this relaxation is\n\
    \   debatable and some vendors may want to strictly preserve the IPv4 API\n  \
    \ on an IPng host.)\n   B) Header translation considered harmful.\n   This author\
    \ believes that any transition scenario which REQUIRES\n   dynamic header translation\
    \ between IPv4 and IPng packets will create\n   almost insurmountable practical\
    \ difficulties:\n     B1) It is taken for granted for the purposes of this paper\
    \ that\n         IPng functionality will be a superset of IPv4 functionality.\n\
    \         However, successful translation between protocols requires\n       \
    \  that the functionalities of the two protocols which are to be\n         translated\
    \ are effectively identical. To achieve this,\n         applications will need\
    \ to know when they are interworking,\n         via the IPng API and a translator\
    \ somewhere in the network,\n         with an IPv4 host, so as to use only IPv4\
    \ functionality. This\n         is an unrealistic constraint.\n     B2) Administration\
    \ of translators will be quite impracticable for\n         large sites, unless\
    \ the translation mechanism is completely\n         blind and automatic. Specifically,\
    \ any translation mechanism\n         that requires special tags to be maintained\
    \ manually for each\n         host in tables (such as DNS tables or router tables)\
    \ to\n         indicate the need for translation will be impossible to\n     \
    \    administer. On a site with thousands of hosts running many\n         versions\
    \ and releases of several operating systems, hosts\n         move forwards and\
    \ even backwards between software releases in\n         such a way that continuously\
    \ tracking the required state of\n         such tags will be impossible. Multiplied\
    \ across the whole\n         Internet, this will lead to chaos, complex failure\
    \ modes, and\n         difficult diagnosis. In particular, it will make the\n\
    \         constraint of paragraph B1) impossible to respect.\n         In practice,\
    \ the knowledge that translation is needed should\n         never leak out of\
    \ the site concerned if chaos is to be\n         avoided, and yet without such\
    \ knowledge applications cannot\n         limit themselves to IPv4 functionality\
    \ when necessary.\n   To avoid confusion, note that header translation, as discussed\
    \ here,\n   is not the same thing as address translation (NAT). This paper does\n\
    \   not discuss NAT.\n   This paper does not tackle performance issues in detail,\
    \ but clearly\n   another disadvantage of translation is the consequent overhead.\n\
    \   C) Coexistence.\n   The Internet infrastructure (whether global or private)\
    \ must allow\n   coexistence of IPv4 and IPng in the same routers and on the same\n\
    \   physical paths.\n   This is a necessity, in order that the network infrastructure\
    \ can be\n   updated to IPng without requiring hosts to be updated in lock step\n\
    \   and without requiring translators.\n   Note that this requirement does NOT\
    \ impose a decision about a common\n   or separate (ships-in-the-night) approach\
    \ to routing.  Nor does it\n   exclude encapsulation as a coexistence mechanism.\n\
    \   D) IPv4 to IPng address mapping.\n   Human beings will have to understand\
    \ what is happening during\n   transition. Although auto-configuration of IPng\
    \ addresses may be a\n   desirable end point, management of the transition will\
    \ be greatly\n   simplified if there is an optional simple mapping, on a given\
    \ site,\n   between IPv4 and IPng addresses.\n   Therefore, the IPng address space\
    \ should include a mapping for IPv4\n   addresses, such that (if a site or service\
    \ provider wants to do this)\n   the IPv4 address of a system can be transformed\
    \ mechanically into its\n   IPng address, most likely by adding a prefix.  The\
    \ prefix does not\n   have to be the same for every site; it is likely to be at\
    \ least\n   service-provider specific.\n   This does not imply that such address\
    \ mapping will be used for\n   dynamic translation (although it could be) or to\
    \ embed IPv4 routing\n   within IPng routing (although it could be). Its main\
    \ purpose is to\n   simplify transition planning for network operators.\n   By\
    \ the way, this requirement does not actually assume that IPv4\n   addresses are\
    \ globally unique.\n   Neither does it help much in setting up the relationship,\
    \ if any,\n   between IPv4 and IPng routing domains and hierarchies. There is\
    \ no\n   reason to suppose these will be in 1:1 correspondence.\n   E) Dual stack\
    \ hosts.\n   Stepwise transition without translation is hard to imagine unless\
    \ a\n   large proportion of hosts are simultaneously capable of running IPng\n\
    \   and IPv4.  If A needs to talk to B (an IPng host) and to C (an IPv4\n   host)\
    \ then either A or B must be able to run both IPv4 and IPng. In\n   other words,\
    \ all hosts running IPng must still be able to run IPv4.\n   IPng-only hosts are\
    \ not allowed during transition.\n   This requirement does not imply that IPng\
    \ hosts really have two\n   completely separate IP implementations (dual stacks\
    \ and dual APIs),\n   but just that they behave as if they did.  It is compatible\
    \ with\n   encapsulation (i.e., one of the two stacks encapsulates packets for\n\
    \   the other).\n   Obviously, management of dual stack hosts will be simplified\
    \ by the\n   address mapping just mentioned. Only the site prefix has to be\n\
    \   configured (manually or dynamically) in addition to the IPv4 address.\n  \
    \ In a dual stack host the IPng API and the IPv4 API will be logically\n   distinguishable\
    \ even if they are implemented as a single entity.\n   Applications will know\
    \ from the API whether they are using IPng or\n   IPv4.\n   F) DNS.\n   The dual\
    \ stack requirement implies that DNS has to reply with both an\n   IPv4 and IPng\
    \ address for IPng hosts, or with a single reply that\n   encodes both.\n   If\
    \ a host is attributed an IPng address in DNS, but is not actually\n   running\
    \ IPng yet, it will appear as a black hole in IPng space - see\n   the next point.\n\
    \   G) Smart dual-stack code.\n   The dual-stack code may get two addresses back\
    \ from DNS; which does\n   it use?  During the many years of transition the Internet\
    \ will\n   contain black holes. For example, somewhere on the way from IPng host\n\
    \   A to IPng host B there will sometimes (unpredictably) be IPv4-only\n   routers\
    \ which discard IPng packets.  Also, the state of the DNS does\n   not necessarily\
    \ correspond to reality. A host for which DNS claims to\n   know an IPng address\
    \ may in fact not be running IPng at a particular\n   moment; thus an IPng packet\
    \ to that host will be discarded on\n   delivery.  Knowing that a host has both\
    \ IPv4 and IPng addresses gives\n   no information about black holes. A solution\
    \ to this must be proposed\n   and it must not depend on manually maintained information.\
    \  (If this\n   is not solved, the dual stack approach is no better than the packet\n\
    \   translation approach.)\n   H) Smart management tools.\n   A whole set of management\
    \ tools is going to be needed during the\n   transition. Why is my IPng route\
    \ different from my IPv4 route?  If\n   there is translation, where does it happen?\
    \  Where are the black\n   holes? (Cosmologists would like the same tool :-) Is\
    \ that host REALLY\n   IPng-capable today?...\n"
- title: Multicasts high and low
  contents:
  - "Multicasts high and low\n   It is taken for granted that multicast applications\
    \ must be supported\n   by IPng. One obvious architectural rule is that no multicast\
    \ packet\n   should ever travel twice over the same wire, whether it is a LAN\
    \ or\n   WAN wire. Failure to observe this would mean that the maximum number\n\
    \   of simultaneous multicast transactions would be halved.\n   A negative feature\
    \ of IPv4 on LANs is the cavalier use of physical\n   broadcast packets by protcols\
    \ such as ARP (and various non-IETF\n   copycats).  On large LANs this leads to\
    \ a number of undesirable\n   consequences (often caused by poor products or poor\
    \ users, not by the\n   protcol design itself).  The obvious architectural rule\
    \ is that\n   physical broadcast should be replaced by unicast (or at worst,\n\
    \   multicast) whenever possible.\n"
- title: ATM
  contents:
  - "ATM\n   The networking industry is investing heavily in ATM. No IPng proposal\n\
    \   will be plausible (in the sense of gaining management approval)\n   unless\
    \ it is \"ATM compatible\", i.e., there is a clear model of how it\n   will run\
    \ over an ATM network. Although a fully detailed document such\n   as RFC 1577\
    \ is not needed immediately, it must be shown that the\n   basic model works.\n\
    \   Similar remarks could be made about X.25, Frame Relay, SMDS etc. but\n   ATM\
    \ is the case with the highest management hype ratio today.\n"
- title: Policy routing and accounting
  contents:
  - "Policy routing and accounting\n   Unfortunately, this cannot be ignored, however\
    \ much one would like\n   to.  Funding agencies want traffic to flow over the\
    \ lines funded to\n   carry it, and they want to know afterwards how much traffic\
    \ there\n   was.  Accounting information can also be used for network planning\n\
    \   and for back-charging.\n   It is therefore necessary that IPng and its routing\
    \ procedures allow\n   traffic to be routed in a way that depends on its source\
    \ and\n   destination in detail. (As an example, traffic from the Physics\n  \
    \ department of MIT might be required to travel a different route to\n   CERN\
    \ than traffic from any other department.)\n   A simple approach to this requirement\
    \ is to insist that IPng must\n   support provider-based addressing and routing.\n\
    \   Accounting of traffic is required at the same level of detail (or\n   more,\
    \ for example how much of the traffic is ftp and how much is\n   www?).\n   Both\
    \ of these requirements will cost time or money and may impact\n   more than just\
    \ the IP layer, but IPng should not duck them.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Corporate network operators, and campus network operators\
    \ who have\n   been hacked a few times, take this more seriously than many protocol\n\
    \   experts.  Indeed many corporate network operators would see improved\n   security\
    \ as a more compelling argument for transition to IPng than\n   anything else.\n\
    \   Since IPng will presumably be a datagram protocol, limiting what can\n   be\
    \ done in terms of end-to-end security, IPng must allow more\n   effective firewalls\
    \ in routers than IPv4.  In particular efficient\n   traffic barring based on\
    \ source and destination addresses and types\n   of transaction is needed.\n \
    \  It seems likely that the same features needed to allow policy routing\n   and\
    \ detailed accounting would be needed for improved firewall\n   security.  It\
    \ is outside the scope of this document to discuss these\n   features in detail,\
    \ but it seems unlikely that they are limited to\n   implementation details in\
    \ the border routers.  Packets will have to\n   carry some authenticated trace\
    \ of the (source, destination,\n   transaction) triplet in order to check for\
    \ unwanted traffic, to allow\n   policy-based source routing, and/or to allow\
    \ detailed accounting.\n   Presumably any IPng will carry source and destination\
    \ identifiers in\n   some format in every packet, but identifying the type of\
    \ transaction,\n   or even the individual transaction, is an extra requirement.\n"
- title: Disclaimer and Acknowledgements
  contents:
  - "Disclaimer and Acknowledgements\n   This is a personal view and does not necessarily\
    \ represent that of my\n   employer.\n   CERN has been through three network transitions\
    \ in recent years (IPv4\n   renumbering managed by John Gamble, AppleTalk Phase\
    \ I to Phase II\n   transition managed by Mike Gerard, and DECnet Phase IV to\
    \ DECnet/OSI\n   routing transition managed by Denise Heagerty).  I could not\
    \ have\n   written this document without having learnt from them. I have also\n\
    \   benefitted greatly from discussions with or the writings of many\n   people,\
    \ especially various members of the IPng Directorate. Several\n   Directorate\
    \ members gave comments that helped clarify this paper, as\n   did Bruce L Hutfless\
    \ of Boeing.  However the opinions are mine and\n   are not shared by all Directorate\
    \ members.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Brian E. Carpenter\n   Group Leader, Communications Systems\n\
    \   Computing and Networks Division\n   CERN\n   European Laboratory for Particle\
    \ Physics\n   1211 Geneva 23, Switzerland\n   Phone:  +41 22 767-4967\n   Fax:\
    \    +41 22 767-7155\n   Telex:  419000 cer ch\n   EMail: brian@dxcoms.cern.ch\n"
