- title: __initial_text__
  contents:
  - '           RTP Payload Format for MPEG-4 Audio/Visual Streams

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes Real-time Transport Protocol (RTP) payload\n\
    \   formats for carrying each of MPEG-4 Audio and MPEG-4 Visual\n   bitstreams\
    \ without using MPEG-4 Systems.  This document obsoletes RFC\n   3016.  It contains\
    \ a summary of changes from RFC 3016 and discusses\n   backward compatibility\
    \ to RFC 3016.  It is a necessary revision of\n   RFC 3016 in order to correct\
    \ misalignments with the 3GPP Packet-\n   switched Streaming Service (PSS) specification\
    \ regarding the RTP\n   payload format for MPEG-4 Audio.\n   For the purpose of\
    \ directly mapping MPEG-4 Audio/Visual bitstreams\n   onto RTP packets, this document\
    \ provides specifications for the use\n   of RTP header fields and also specifies\
    \ fragmentation rules.  It also\n   provides specifications for Media Type registration\
    \ and the use of\n   the Session Description Protocol (SDP).  The audio payload\
    \ format\n   described in this document has some limitations related to the\n\
    \   signaling of audio codec parameters for the required multiplexing\n   format.\
    \  Therefore, new system designs should utilize RFC 3640, which\n   does not have\
    \ these restrictions.  Nevertheless, this revision of RFC\n   3016 is provided\
    \ to update and complete the specification and to\n   enable interoperable implementations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6416.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n     1.1.  MPEG-4 Visual RTP Payload Format . . . . . . . .\
    \ . . . . .  4\n     1.2.  MPEG-4 Audio RTP Payload Format  . . . . . . . . .\
    \ . . . .  5\n     1.3.  Interoperability with RFC 3016 . . . . . . . . . . .\
    \ . . .  6\n     1.4.  Relation with RFC 3640 . . . . . . . . . . . . . . . .\
    \ . .  6\n   2.  Definitions and Abbreviations  . . . . . . . . . . . . . . .\
    \ .  6\n   3.  Clarifications on Specifying Codec Configurations for\n       MPEG-4\
    \ Audio . . . . . . . . . . . . . . . . . . . . . . . . .  7\n   4.  LATM Restrictions\
    \ for RTP Packetization of MPEG-4 Audio\n       Bitstreams . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .  7\n   5.  RTP Packetization of MPEG-4 Visual\
    \ Bitstreams  . . . . . . . .  8\n     5.1.  Use of RTP Header Fields for MPEG-4\
    \ Visual . . . . . . . .  9\n     5.2.  Fragmentation of MPEG-4 Visual Bitstream\
    \ . . . . . . . . . 10\n     5.3.  Examples of Packetized MPEG-4 Visual Bitstream\
    \ . . . . . . 11\n   6.  RTP Packetization of MPEG-4 Audio Bitstreams . . . .\
    \ . . . . . 15\n     6.1.  RTP Packet Format  . . . . . . . . . . . . . . . .\
    \ . . . . 15\n     6.2.  Use of RTP Header Fields for MPEG-4 Audio  . . . . .\
    \ . . . 16\n     6.3.  Fragmentation of MPEG-4 Audio Bitstream  . . . . . . .\
    \ . . 17\n   7.  Media Type Registration for MPEG-4 Audio/Visual Streams  . .\
    \ . 17\n     7.1.  Media Type Registration for MPEG-4 Visual  . . . . . . . .\
    \ 17\n     7.2.  Mapping to SDP for MPEG-4 Visual . . . . . . . . . . . . . 20\n\
    \       7.2.1.  Declarative SDP Usage for MPEG-4 Visual  . . . . . . . 20\n  \
    \   7.3.  Media Type Registration for MPEG-4 Audio . . . . . . . . . 21\n    \
    \ 7.4.  Mapping to SDP for MPEG-4 Audio  . . . . . . . . . . . . . 24\n      \
    \ 7.4.1.  Declarative SDP Usage for MPEG-4 Audio . . . . . . . . 25\n        \
    \ 7.4.1.1.  Example: In-Band Configuration . . . . . . . . . . 25\n         7.4.1.2.\
    \  Example: 6 kbit/s CELP . . . . . . . . . . . . . . 25\n         7.4.1.3.  Example:\
    \ 64 kbit/s AAC LC Stereo . . . . . . . . . 26\n         7.4.1.4.  Example: Use\
    \ of the \"SBR-enabled\" Parameter  . . . 26\n         7.4.1.5.  Example: Hierarchical\
    \ Signaling of SBR . . . . . . 27\n         7.4.1.6.  Example: HE AAC v2 Signaling\
    \ . . . . . . . . . . . 27\n         7.4.1.7.  Example: Hierarchical Signaling\
    \ of PS  . . . . . . 28\n         7.4.1.8.  Example: MPEG Surround . . . . . .\
    \ . . . . . . . . 28\n         7.4.1.9.  Example: MPEG Surround with Extended\
    \ SDP\n                   Parameters . . . . . . . . . . . . . . . . . . . . 28\n\
    \         7.4.1.10. Example: MPEG Surround with Single-Layer\n               \
    \    Configuration  . . . . . . . . . . . . . . . . . . 29\n   8.  IANA Considerations\
    \  . . . . . . . . . . . . . . . . . . . . . 29\n   9.  Acknowledgements . . .\
    \ . . . . . . . . . . . . . . . . . . . . 30\n   10. Security Considerations \
    \ . . . . . . . . . . . . . . . . . . . 30\n   11. Differences to RFC 3016  .\
    \ . . . . . . . . . . . . . . . . . . 31\n   12. References . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 32\n     12.1. Normative References . . .\
    \ . . . . . . . . . . . . . . . . 32\n     12.2. Informative References . . .\
    \ . . . . . . . . . . . . . . . 33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RTP payload formats described in this document specify\
    \ how MPEG-4\n   Audio [14496-3] and MPEG-4 Visual streams [14496-2] are to be\n\
    \   fragmented and mapped directly onto RTP packets.\n   These RTP payload formats\
    \ enable transport of MPEG-4 Audio/Visual\n   streams without using the synchronization\
    \ and stream management\n   functionality of MPEG-4 Systems [14496-1].  Such RTP\
    \ payload formats\n   will be used in systems that have intrinsic stream management\n\
    \   functionality and thus require no such functionality from MPEG-4\n   Systems.\
    \  H.323 [H323] terminals are an example of such systems,\n   where MPEG-4 Audio/Visual\
    \ streams are not managed by MPEG-4 Systems\n   Object Descriptors but by H.245\
    \ [H245].  The streams are directly\n   mapped onto RTP packets without using\
    \ the MPEG-4 Systems Sync Layer.\n   Other examples are the Session Initiation\
    \ Protocol (SIP) [RFC3261]\n   and Real Time Streaming Protocol (RTSP) where media\
    \ type and SDP are\n   used.  Media type and SDP usages of the RTP payload formats\
    \ described\n   in this document are defined to directly specify the attribute\
    \ of\n   Audio/Visual streams (e.g., media type, packetization format, and\n \
    \  codec configuration) without using MPEG-4 Systems.  The obvious\n   benefit\
    \ is that these MPEG-4 Audio/Visual RTP payload formats can be\n   handled in\
    \ a unified way together with those formats defined for non-\n   MPEG-4 codecs.\
    \  The disadvantage is that interoperability with\n   environments using MPEG-4\
    \ Systems may be difficult; hence, other\n   payload formats may be better suited\
    \ to those applications.\n   The semantics of RTP headers in such cases need to\
    \ be clearly\n   defined, including the association with MPEG-4 Audio/Visual data\n\
    \   elements.  In addition, it is beneficial to define the fragmentation\n   rules\
    \ of RTP packets for MPEG-4 Video streams so as to enhance error\n   resiliency\
    \ by utilizing the error resiliency tools provided inside\n   the MPEG-4 Video\
    \ stream.\n"
- title: 1.1.  MPEG-4 Visual RTP Payload Format
  contents:
  - "1.1.  MPEG-4 Visual RTP Payload Format\n   MPEG-4 Visual is a visual coding standard\
    \ with many features,\n   including: high coding efficiency; high error resiliency;\
    \ and\n   multiple, arbitrary shape object-based coding [14496-2].  It covers\
    \ a\n   wide range of bitrates from scores of kbit/s to several Mbit/s.  It\n\
    \   also covers a wide variety of networks, ranging from those guaranteed\n  \
    \ to be almost error-free to mobile networks with high error rates.\n   With respect\
    \ to the fragmentation rules for an MPEG-4 Visual\n   bitstream defined in this\
    \ document, since MPEG-4 Visual is used for a\n   wide variety of networks, it\
    \ is desirable not to apply too much\n   restriction on fragmentation, and a fragmentation\
    \ rule such as \"a\n   single video packet shall always be mapped on a single\
    \ RTP packet\"\n   may be inappropriate.  On the other hand, careless, media-unaware\n\
    \   fragmentation may cause degradation in error resiliency and bandwidth\n  \
    \ efficiency.  The fragmentation rules described in this document are\n   flexible\
    \ but manage to define the minimum rules for preventing\n   meaningless fragmentation\
    \ while utilizing the error resiliency\n   functionalities of MPEG-4 Visual.\n\
    \   The fragmentation rule \"Different Video Object Planes (VOPs) SHOULD\n   be\
    \ fragmented into different RTP packets\" is made so that the RTP\n   timestamp\
    \ uniquely indicates the VOP time framing.  On the other\n   hand, MPEG-4 video\
    \ may generate VOPs of very small size, in cases\n   with an empty VOP (vop_coded=0)\
    \ containing only VOP header or an\n   arbitrary shaped VOP with a small number\
    \ of coding blocks.  To reduce\n   the overhead for such cases, the fragmentation\
    \ rule permits\n   concatenating multiple VOPs in an RTP packet.  (See fragmentation\n\
    \   rule (4) in Section 5.2 and the descriptions of marker bit and\n   timestamp\
    \ in Section 5.1.)\n   While the additional media-specific RTP header defined\
    \ for such video\n   coding tools as H.261 [H261] or MPEG-1/2 is effective in\
    \ helping to\n   recover picture headers corrupted by packet losses, MPEG-4 Visual\n\
    \   already has error resiliency functionalities for recovering corrupt\n   headers,\
    \ and these can be used on RTP/IP networks as well as on other\n   networks (H.223/mobile,\
    \ MPEG-2 Transport Stream, etc.).  Therefore,\n   no extra RTP header fields are\
    \ defined in this MPEG-4 Visual RTP\n   payload format.\n"
- title: 1.2.  MPEG-4 Audio RTP Payload Format
  contents:
  - "1.2.  MPEG-4 Audio RTP Payload Format\n   MPEG-4 Audio is an audio standard that\
    \ integrates many different\n   types of audio coding tools.  Low-overhead MPEG-4\
    \ Audio Transport\n   Multiplex (LATM) manages the sequences of audio data with\
    \ relatively\n   small overhead.  In audio-only applications, then, it is desirable\n\
    \   for LATM-based MPEG-4 Audio bitstreams to be directly mapped onto RTP\n  \
    \ packets without using MPEG-4 Systems.\n   For MPEG-4 Audio coding tools, as\
    \ is true for other audio coders, if\n   the payload is a single audio frame,\
    \ packet loss will not impair the\n   decodability of adjacent packets.  Therefore,\
    \ the additional media-\n   specific header for recovering errors will not be\
    \ required for MPEG-4\n   Audio.  Existing RTP protection mechanisms, such as\
    \ Generic Forward\n   Error Correction [RFC5109] and Redundant Audio Data [RFC2198],\
    \ MAY be\n   applied to improve error resiliency.\n"
- title: 1.3.  Interoperability with RFC 3016
  contents:
  - "1.3.  Interoperability with RFC 3016\n   This specification is not backwards\
    \ compatible with [RFC3016], as a\n   binary incompatible LATM version is mandated.\
    \  Existing\n   implementations of RFC 3016 that use a recent LATM version may\n\
    \   already comply to this specification and must be considered as not\n   compliant\
    \ with RFC 3016.  The 3GPP PSS service [3GPP] is such an\n   example, as a more\
    \ recent LATM version is mandated in the 3GPP PSS\n   specification.  Existing\
    \ implementations that use the LATM version as\n   specified in RFC 3016 MUST\
    \ be updated to comply with this\n   specification.\n"
- title: 1.4.  Relation with RFC 3640
  contents:
  - "1.4.  Relation with RFC 3640\n   In this document a payload format for the transport\
    \ of MPEG-4\n   Elementary Streams is specified.  For MPEG-4 Audio streams \"\
    out-of-\n   band\" signaling is defined such that a receiver is not obliged to\n\
    \   decode the payload data to determine the audio codec and its\n   configuration.\
    \  The signaling capabilities specified in this document\n   are less explicit\
    \ than those defined in [RFC3640].  But, the use of\n   the MPEG-4 LATM in various\
    \ transmission standards justifies its right\n   to exist; see also Section 1.2.\n"
- title: 2.  Definitions and Abbreviations
  contents:
  - "2.  Definitions and Abbreviations\n   This document makes use of terms, specified\
    \ in [14496-2], [14496-3],\n   and [23003-1].  In addition, the following terms\
    \ are used in this\n   document and have specific meaning within the context of\
    \ this\n   document.\n   Abbreviations:\n      AAC: Advanced Audio Coding\n  \
    \    ASC: AudioSpecificConfig\n      HE AAC: High Efficiency AAC\n      LATM:\
    \ Low-overhead MPEG-4 Audio Transport Multiplex\n      PS: Parametric Stereo\n\
    \      SBR: Spectral Band Replication\n      VOP: Video Object Plane\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Clarifications on Specifying Codec Configurations for MPEG-4 Audio
  contents:
  - "3.  Clarifications on Specifying Codec Configurations for MPEG-4 Audio\n   For\
    \ MPEG-4 Audio [14496-3] streams, the decoder output configuration\n   can differ\
    \ from the core codec configuration depending of use of the\n   SBR and PS tools.\n\
    \   The core codec sampling rate is the default audio codec sampling\n   rate.\
    \  When SBR is used, typically the double value of the core codec\n   sampling\
    \ rate will be regarded as the definitive sampling rate (i.e.,\n   the decoder's\
    \ output sampling rate)\n   Note: The exception is down-sampled SBR mode, in which\
    \ case the SBR\n   sampling rate and core codec sampling rate are identical.\n\
    \   The core codec channel configuration is the default audio codec\n   channel\
    \ configuration.  When PS is used, the core codec channel\n   configuration indicates\
    \ one channel (i.e., mono) whereas the\n   definitive channel configuration is\
    \ two channels (i.e. stereo).  When\n   MPEG Surround is used, the definitive\
    \ channel configuration depends\n   on the output of the MPEG Surround decoder.\n"
- title: 4.  LATM Restrictions for RTP Packetization of MPEG-4 Audio Bitstreams
  contents:
  - "4.  LATM Restrictions for RTP Packetization of MPEG-4 Audio Bitstreams\n   LATM\
    \ has several multiplexing features as follows:\n   o  carrying configuration\
    \ information with audio data,\n   o  concatenating multiple audio frames in one\
    \ audio stream,\n   o  multiplexing multiple objects (programs), and\n   o  multiplexing\
    \ scalable layers,\n   However, in RTP transmission, there is no need for the\
    \ last two\n   features.  Therefore, these two features MUST NOT be used in\n\
    \   applications based on RTP packetization specified by this document.\n   Since\
    \ LATM has been developed for only natural audio coding tools,\n   i.e., not for\
    \ synthesis tools, it seems difficult to transmit\n   Structured Audio (SA) data\
    \ and Text-to-Speech Interface (TTSI) data\n   by LATM.  Therefore, SA data and\
    \ TTSI data MUST NOT be transported by\n   the RTP packetization in this document.\n\
    \   For transmission of scalable streams, audio data of each layer SHOULD\n  \
    \ be packetized onto different RTP streams allowing for the different\n   layers\
    \ to be treated differently at the IP level, for example, via\n   some means of\
    \ differentiated service.  On the other hand, all\n   configuration data of the\
    \ scalable streams are contained in one LATM\n   configuration data \"StreamMuxConfig\"\
    , and every scalable layer shares\n   the StreamMuxConfig.  The mapping between\
    \ each layer and its\n   configuration data is achieved by LATM header information\
    \ attached to\n   the audio data.  In order to indicate the dependency information\
    \ of\n   the scalable streams, the signaling mechanism as specified in\n   [RFC5583]\
    \ SHOULD be used (see Section 6.2).\n"
- title: 5.  RTP Packetization of MPEG-4 Visual Bitstreams
  contents:
  - "5.  RTP Packetization of MPEG-4 Visual Bitstreams\n   This section specifies\
    \ RTP packetization rules for MPEG-4 Visual\n   content.  An MPEG-4 Visual bitstream\
    \ is mapped directly onto RTP\n   packets without the addition of extra header\
    \ fields or any removal of\n   Visual syntax elements.  The Combined Configuration/Elementary\
    \ stream\n   mode MUST be used so that configuration information will be carried\n\
    \   to the same RTP port as the elementary stream.  (See Subclause 6.2.1,\n  \
    \ \"Start codes\", of [14496-2].)  The configuration information MAY\n   additionally\
    \ be specified by some out-of-band means.  If needed by\n   systems using media\
    \ type parameters and SDP parameters, e.g., SIP and\n   RTSP, the optional parameter\
    \ \"config\" MUST be used to specify the\n   configuration information (see Sections\
    \ 7.1 and 7.2).\n   When the short video header mode is used, the RTP payload\
    \ format for\n   H.263 SHOULD be used.  (The format defined in [RFC4629] is\n\
    \   RECOMMENDED, but the [RFC4628] format MAY be used for compatibility\n   with\
    \ older implementations.)\n 0                   1                   2        \
    \           3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n"
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|V=2|P|X|  CC   |M|     PT      |       sequence number         | RTP'
  contents:
  - '|V=2|P|X|  CC   |M|     PT      |       sequence number         | RTP

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                           timestamp                           | Header'
  contents:
  - '|                           timestamp                           | Header

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|           synchronization source (SSRC) identifier            |'
  contents:
  - '|           synchronization source (SSRC) identifier            |

    '
- title: +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
  contents:
  - '+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

    '
- title: '|            contributing source (CSRC) identifiers             |'
  contents:
  - '|            contributing source (CSRC) identifiers             |

    '
- title: '|                             ....                              |'
  contents:
  - '|                             ....                              |

    '
- title: +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
  contents:
  - '+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

    '
- title: '|                                                               | RTP'
  contents:
  - '|                                                               | RTP

    '
- title: '|       MPEG-4 Visual stream (byte aligned)                     | Pay-'
  contents:
  - '|       MPEG-4 Visual stream (byte aligned)                     | Pay-

    '
- title: '|                                                               | load'
  contents:
  - '|                                                               | load

    '
- title: '|                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+'
  contents:
  - '|                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                               :...OPTIONAL RTP padding        |'
  contents:
  - '|                               :...OPTIONAL RTP padding        |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         \
    \    Figure 1: An RTP Packet for MPEG-4 Visual Stream\n"
- title: 5.1.  Use of RTP Header Fields for MPEG-4 Visual
  contents:
  - "5.1.  Use of RTP Header Fields for MPEG-4 Visual\n   Payload Type (PT): The assignment\
    \ of an RTP payload type for this\n   packet format is outside the scope of this\
    \ document and will not be\n   specified here.  It is expected that the RTP profile\
    \ for a particular\n   class of applications will assign a payload type for this\
    \ encoding,\n   or if that is not done, then a payload type in the dynamic range\n\
    \   SHALL be chosen by means of an out-of-band signaling protocol (e.g.,\n   H.245,\
    \ SIP).\n   Extension (X) bit: Defined by the RTP profile used.\n   Sequence Number:\
    \ Incremented by 1 for each RTP data packet sent,\n   starting, for security reasons,\
    \ with a random initial value.\n   Marker (M) bit: The marker bit is set to 1\
    \ to indicate the last RTP\n   packet (or only RTP packet) of a VOP.  When multiple\
    \ VOPs are carried\n   in the same RTP packet, the marker bit is set to 1.\n \
    \  Timestamp: The timestamp indicates the sampling instance of the VOP\n   contained\
    \ in the RTP packet.  A constant offset, which is random, is\n   added for security\
    \ reasons.\n   o  When multiple VOPs are carried in the same RTP packet, the\n\
    \      timestamp indicates the earliest of the VOP times within the VOPs\n   \
    \   carried in the RTP packet.  Timestamp information of the rest of\n      the\
    \ VOPs is derived from the timestamp fields in the VOP header\n      (modulo_time_base\
    \ and vop_time_increment).\n   o  If the RTP packet contains only configuration\
    \ information and/or\n      Group_of_VideoObjectPlane() fields, the timestamp\
    \ of the next VOP\n      in the coding order is used.\n   o  If the RTP packet\
    \ contains only visual_object_sequence_end_code\n      information, the timestamp\
    \ of the immediately preceding VOP in the\n      coding order is used.\n   The\
    \ resolution of the timestamp is set to its default value of 90\n   kHz, unless\
    \ specified by out-of-band means (e.g., SDP parameter or\n   media type parameter\
    \ as defined in Section 7).\n   Other header fields are used as described in [RFC3550].\n"
- title: 5.2.  Fragmentation of MPEG-4 Visual Bitstream
  contents:
  - "5.2.  Fragmentation of MPEG-4 Visual Bitstream\n   A fragmented MPEG-4 Visual\
    \ bitstream is mapped directly onto the RTP\n   payload without any addition of\
    \ extra header fields or any removal of\n   Visual syntax elements.\n   In the\
    \ following, header means one of the following:\n   o  Configuration information\
    \ (Visual Object Sequence Header, Visual\n      Object Header, and Video Object\
    \ Layer Header)\n   o  visual_object_sequence_end_code\n   o  The header of the\
    \ entry point function for an elementary stream\n      (Group_of_VideoObjectPlane()\
    \ or the header of VideoObjectPlane(),\n      video_plane_with_short_header(),\
    \ MeshObject(), or FaceObject())\n   o  The video packet header (video_packet_header()\
    \ excluding\n      next_resync_marker())\n   o  The header of gob_layer()\n  \
    \ o  See Subclause 6.2.1 (\"Start codes\") of [14496-2] for the\n      definition\
    \ of the configuration information and the entry point\n      functions.\n   The\
    \ Combined Configuration/Elementary streams mode is used.  The\n   following rules\
    \ apply for the fragmentation.\n   (1)  Configuration information and Group_of_VideoObjectPlane()\
    \ fields\n        SHALL be placed at the beginning of the RTP payload (just after\n\
    \        the RTP header) or just after the header of the syntactically\n     \
    \   upper-layer function.\n   (2)  If one or more headers exist in the RTP payload,\
    \ the RTP payload\n        SHALL begin with the header of the syntactically highest\n\
    \        function.  Note: The visual_object_sequence_end_code is regarded\n  \
    \      as the lowest function.\n   (3)  A header SHALL NOT be split into a plurality\
    \ of RTP packets.\n   (4)  Different VOPs SHOULD be fragmented into different\
    \ RTP packets\n        so that one RTP packet consists of the data bytes associated\n\
    \        with a unique VOP time instance (that is indicated in the\n        timestamp\
    \ field in the RTP packet header), with the exception\n        that multiple consecutive\
    \ VOPs MAY be carried within one RTP\n        packet in the decoding order if\
    \ the size of the VOPs is small.\n        Note: When multiple VOPs are carried\
    \ in one RTP payload, the\n        timestamp of the VOPs after the first one may\
    \ be calculated by\n        the decoder.  This operation is necessary only for\
    \ RTP packets\n        in which the marker bit equals to 1 and the beginning of\
    \ the RTP\n        payload corresponds to a start code.  (See the descriptions\
    \ of\n        timestamp and marker bit in Section 5.1.)\n   (5)  It is RECOMMENDED\
    \ that a single video packet is sent as a single\n        RTP packet.  The size\
    \ of a video packet SHOULD be adjusted in\n        such a way that the resulting\
    \ RTP packet is not larger than the\n        Path MTU.  If the video packet is\
    \ disabled by the coder\n        configuration (by setting resync_marker_disable\
    \ in the VOL\n        header to 1), or in coding tools where the video packet\
    \ is not\n        supported, a VOP MAY be split at arbitrary byte positions.\n\
    \        The video packet starts with the VOP header or the video packet\n   \
    \     header, followed by motion_shape_texture(), and ends with\n        next_resync_marker()\
    \ or next_start_code().\n"
- title: 5.3.  Examples of Packetized MPEG-4 Visual Bitstream
  contents:
  - "5.3.  Examples of Packetized MPEG-4 Visual Bitstream\n   Figure 2 shows examples\
    \ of RTP packets generated based on the\n   criteria described in Section 5.2\n\
    \   (a) is an example of the first RTP packet or the random access point\n   of\
    \ an MPEG-4 Visual bitstream containing the configuration\n   information.  According\
    \ to criterion (1), the Visual Object Sequence\n   Header (VS header) is placed\
    \ at the beginning of the RTP payload,\n   preceding the Visual Object Header\
    \ and the Video Object Layer Header\n   (VO header, VOL header).  Since the fragmentation\
    \ rule defined in\n   Section 5.2 guarantees that the configuration information,\
    \ starting\n   with visual_object_sequence_start_code, is always placed at the\n\
    \   beginning of the RTP payload, RTP receivers can detect the random\n   access\
    \ point by checking if the first 32-bit field of the RTP payload\n   is visual_object_sequence_start_code.\n\
    \   (b) is another example of the RTP packet containing the configuration\n  \
    \ information.  It differs from example (a) in that the RTP packet also\n   contains\
    \ a VOP header and a video packet in the VOP following the\n   configuration information.\
    \  Since the length of the configuration\n   information is relatively short (typically\
    \ scores of bytes) and an\n   RTP packet containing only the configuration information\
    \ may thus\n   increase the overhead, the configuration information and the\n\
    \   subsequent VOP can be packetized into a single RTP packet.\n   (c) is an example\
    \ of an RTP packet that contains\n   Group_of_VideoObjectPlane (GOV).  Following\
    \ criterion (1), the GOV is\n   placed at the beginning of the RTP payload.  It\
    \ would be a waste of\n   RTP/IP header overhead to generate an RTP packet containing\
    \ only a\n   GOV whose length is 7 bytes.  Therefore, the following VOP (or a\
    \ part\n   of it) can be placed in the same RTP packet as shown in (c).\n   (d)\
    \ is an example of the case where one video packet is packetized\n   into one\
    \ RTP packet.  When the packet-loss rate of the underlying\n   network is high,\
    \ this kind of packetization is recommended.  Even\n   when the RTP packet containing\
    \ the VOP header is discarded by a\n   packet loss, the other RTP packets can\
    \ be decoded by using the HEC\n   (Header Extension Code) information in the video\
    \ packet header.  No\n   extra RTP header field is necessary.\n   (e) is an example\
    \ of the case where more than one video packet is\n   packetized into one RTP\
    \ packet.  This kind of packetization is\n   effective to save the overhead of\
    \ RTP/IP headers when the bitrate of\n   the underlying network is low.  However,\
    \ it will decrease the packet-\n   loss resiliency because multiple video packets\
    \ are discarded by a\n   single RTP packet loss.  The optimal number of video\
    \ packets in an\n   RTP packet and the length of the RTP packet can be determined\
    \ by\n   considering the packet-loss rate and the bitrate of the underlying\n\
    \   network.\n   (f) is an example of the case when the video packet is disabled\
    \ by\n   setting resync_marker_disable in the VOL header to 1.  In this case,\n\
    \   a VOP may be split into a plurality of RTP packets at arbitrary byte\n   positions.\
    \  For example, it is possible to split a VOP into fixed-\n   length packets.\
    \  This kind of coder configuration and RTP packet\n   fragmentation may be used\
    \ when the underlying network is guaranteed\n   to be error-free.\n   Figure 3\
    \ shows examples of RTP packets prohibited by the criteria of\n   Section 5.2.\n\
    \   Fragmentation of a header into multiple RTP packets, as in Figure\n   3(a),\
    \ will not only increase the overhead of RTP/IP headers but also\n   decrease\
    \ the error resiliency.  Therefore, it is prohibited by\n   criterion (3).\n \
    \  When concatenating more than one video packet into an RTP packet, the\n   VOP\
    \ header or video_packet_header() is not allowed to be placed in\n   the middle\
    \ of the RTP payload.  The packetization as in Figure 2(b)\n   is not allowed\
    \ by criterion (2) due to the aspect of the error\n   resiliency.  Comparing this\
    \ example with Figure 2(d), although two\n   video packets are mapped onto two\
    \ RTP packets in both cases, the\n   packet-loss resiliency is not identical.\
    \  Namely, if the second RTP\n   packet is lost, both video packets 1 and 2 are\
    \ lost in the case of\n   Figure 3(b), whereas only video packet 2 is lost in\
    \ the case of\n   Figure 2(d).\n    +------+------+------+------+\n"
- title: (a) | RTP  |  VS  |  VO  | VOL  |
  contents:
  - "(a) | RTP  |  VS  |  VO  | VOL  |\n    |header|header|header|header|\n    +------+------+------+------+\n\
    \    +------+------+------+------+------+------------+\n"
- title: (b) | RTP  |  VS  |  VO  | VOL  | VOP  |Video Packet|
  contents:
  - "(b) | RTP  |  VS  |  VO  | VOL  | VOP  |Video Packet|\n    |header|header|header|header|header|\
    \            |\n    +------+------+------+------+------+------------+\n    +------+-----+------------------+\n"
- title: (c) | RTP  | GOV |Video Object Plane|
  contents:
  - "(c) | RTP  | GOV |Video Object Plane|\n    |header|     |                  |\n\
    \    +------+-----+------------------+\n    +------+------+------------+  +------+------+------------+\n"
- title: (d) | RTP  | VOP  |Video Packet|  | RTP  |  VP  |Video Packet|
  contents:
  - "(d) | RTP  | VOP  |Video Packet|  | RTP  |  VP  |Video Packet|\n    |header|header|\
    \    (1)     |  |header|header|    (2)     |\n    +------+------+------------+\
    \  +------+------+------------+\n    +------+------+------------+------+------------+------+------------+\n"
- title: (e) | RTP  |  VP  |Video Packet|  VP  |Video Packet|  VP  |Video Packet|
  contents:
  - "(e) | RTP  |  VP  |Video Packet|  VP  |Video Packet|  VP  |Video Packet|\n  \
    \  |header|header|     (1)    |header|    (2)     |header|    (3)     |\n    +------+------+------------+------+------------+------+------------+\n\
    \    +------+------+------------+  +------+------------+\n"
- title: (f) | RTP  | VOP  |VOP fragment|  | RTP  |VOP fragment|
  contents:
  - "(f) | RTP  | VOP  |VOP fragment|  | RTP  |VOP fragment|\n    |header|header|\
    \    (1)     |  |header|    (2)     | . . .\n    +------+------+------------+\
    \  +------+------------+\n       Figure 2: Examples of RTP Packetized MPEG-4 Visual\
    \ Bitstream\n      +------+-------------+  +------+------------+------------+\n\
    \  (a) | RTP  |First half of|  | RTP  |Last half of|Video Packet|\n      |header|\
    \  VP header  |  |header|  VP header |            |\n      +------+-------------+\
    \  +------+------------+------------+\n      +------+------+----------+  +------+---------+------+------------+\n\
    \  (b) | RTP  | VOP  |First half|  | RTP  |Last half|  VP  |Video Packet|\n  \
    \    |header|header| of VP(1) |  |header| of VP(1)|header|    (2)     |\n    \
    \  +------+------+----------+  +------+---------+------+------------+\n   Figure\
    \ 3: Examples of Prohibited RTP Packetization for MPEG-4 Visual\n"
- title: 6.  RTP Packetization of MPEG-4 Audio Bitstreams
  contents:
  - "6.  RTP Packetization of MPEG-4 Audio Bitstreams\n   This section specifies RTP\
    \ packetization rules for MPEG-4 Audio\n   bitstreams.  MPEG-4 Audio streams MUST\
    \ be formatted LATM (Low-\n   overhead MPEG-4 Audio Transport Multiplex) [14496-3]\
    \ streams, and the\n   LATM-based streams are then mapped onto RTP packets as\
    \ described in\n   the sections below.\n"
- title: 6.1.  RTP Packet Format
  contents:
  - "6.1.  RTP Packet Format\n   LATM-based streams consist of a sequence of audioMuxElements\
    \ that\n   include one or more PayloadMux elements that carry the audio frames.\n\
    \   A complete audioMuxElement or a part of one SHALL be mapped directly\n   onto\
    \ an RTP payload without any removal of audioMuxElement syntax\n   elements (see\
    \ Figure 4).  The first byte of each audioMuxElement\n   SHALL be located at the\
    \ first payload location in an RTP packet.\n 0                   1           \
    \        2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n"
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|V=2|P|X|  CC   |M|     PT      |       sequence number         |RTP'
  contents:
  - '|V=2|P|X|  CC   |M|     PT      |       sequence number         |RTP

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                           timestamp                           |Header'
  contents:
  - '|                           timestamp                           |Header

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|           synchronization source (SSRC) identifier            |'
  contents:
  - '|           synchronization source (SSRC) identifier            |

    '
- title: +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
  contents:
  - '+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

    '
- title: '|            contributing source (CSRC) identifiers             |'
  contents:
  - '|            contributing source (CSRC) identifiers             |

    '
- title: '|                             ....                              |'
  contents:
  - '|                             ....                              |

    '
- title: +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
  contents:
  - '+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

    '
- title: '|                                                               |RTP'
  contents:
  - '|                                                               |RTP

    '
- title: ':                 audioMuxElement (byte aligned)                :Payload'
  contents:
  - ':                 audioMuxElement (byte aligned)                :Payload

    '
- title: '|                                                               |'
  contents:
  - '|                                                               |

    '
- title: '|                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+'
  contents:
  - '|                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                               :...OPTIONAL RTP padding        |'
  contents:
  - '|                               :...OPTIONAL RTP padding        |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         \
    \    Figure 4 - An RTP packet for MPEG-4 Audio\n   In order to decode the audioMuxElement,\
    \ the following\n   muxConfigPresent information is required to be indicated by\
    \ out-of-\n   band means.  When SDP is utilized for this indication, the media\
    \ type\n   parameter \"cpresent\" corresponds to the muxConfigPresent information\n\
    \   (see Section 7.3).  The following restrictions apply:\n   o  In the out-of-band\
    \ configuration case, the number of PayloadMux\n      elements contained in each\
    \ audioMuxElement can only be set once.\n      If more than one PayloadMux element\
    \ is contained in each\n      audioMuxElement, special care is required to ensure\
    \ that the last\n      RTP packet remains decodable.\n   o  To construct the audioMuxElement\
    \ in the in-band configuration\n      case, non-octet-aligned configuration data\
    \ is inserted immediately\n      before the one or more PayloadMux elements. \
    \ Since the generation\n      of RTP payloads with non-octet-aligned data is not\
    \ possible with\n      RTP hint tracks, as defined by the MP4 file format [14496-12]\n\
    \      [14496-14], this document does not support RTP hint tracks for the\n  \
    \    in-band configuration case.\n   muxConfigPresent: If this value is set to\
    \ 1 (in-band mode), the\n   audioMuxElement SHALL include an indication bit \"\
    useSameStreamMux\"\n   and MAY include the configuration information for audio\
    \ compression\n   \"StreamMuxConfig\".  The useSameStreamMux bit indicates whether\
    \ the\n   StreamMuxConfig element in the previous frame is applied in the\n  \
    \ current frame.  If the useSameStreamMux bit indicates to use the\n   StreamMuxConfig\
    \ from the previous frame, but if the previous frame\n   has been lost, the current\
    \ frame may not be decodable.  Therefore, in\n   case of in-band mode, the StreamMuxConfig\
    \ element SHOULD be\n   transmitted repeatedly depending on the network condition.\
    \  On the\n   other hand, if muxConfigPresent is set to 0 (out-of-band mode),\
    \ the\n   StreamMuxConfig element is required to be transmitted by an out-of-\n\
    \   band means.  In case of SDP, the media type parameter \"config\" is\n   utilized\
    \ (see Section 7.3).\n"
- title: 6.2.  Use of RTP Header Fields for MPEG-4 Audio
  contents:
  - "6.2.  Use of RTP Header Fields for MPEG-4 Audio\n   Payload Type (PT): The assignment\
    \ of an RTP payload type for this\n   packet format is outside the scope of this\
    \ document and will only be\n   restricted here.  It is expected that the RTP\
    \ profile for a\n   particular class of applications will assign a payload type\
    \ for this\n   encoding, or if that is not done, then a payload type in the dynamic\n\
    \   range shall be chosen by means of an out-of-band signaling protocol\n   (e.g.,\
    \ H.245, SIP).  In the dynamic assignment of RTP payload types\n   for scalable\
    \ streams, the server SHALL assign a different value to\n   each layer.  The dependency\
    \ relationships between the enhanced layer\n   and the base layer MUST be signaled\
    \ as specified in [RFC5583].  An\n   example of the use of such signaling for\
    \ scalable audio streams can\n   be found in [RFC5691].\n   Marker (M) bit: The\
    \ marker bit indicates audioMuxElement boundaries.\n   It is set to 1 to indicate\
    \ that the RTP packet contains a complete\n   audioMuxElement or the last fragment\
    \ of an audioMuxElement.\n   Timestamp: The timestamp indicates the sampling instance\
    \ of the first\n   audio frame contained in the RTP packet.  Timestamps are RECOMMENDED\n\
    \   to start at a random value for security reasons.\n   Unless specified by an\
    \ out-of-band means, the resolution of the\n   timestamp is set to its default\
    \ value of 90 kHz.\n   Sequence Number: Incremented by 1 for each RTP packet sent,\
    \ starting,\n   for security reasons, with a random value.\n   Other header fields\
    \ are used as described in [RFC3550].\n"
- title: 6.3.  Fragmentation of MPEG-4 Audio Bitstream
  contents:
  - "6.3.  Fragmentation of MPEG-4 Audio Bitstream\n   It is RECOMMENDED to put one\
    \ audioMuxElement in each RTP packet.  If\n   the size of an audioMuxElement can\
    \ be kept small enough that the size\n   of the RTP packet containing it does\
    \ not exceed the size of the Path\n   MTU, this will be no problem.  If it cannot,\
    \ the audioMuxElement\n   SHALL be fragmented and spread across multiple packets.\n"
- title: 7.  Media Type Registration for MPEG-4 Audio/Visual Streams
  contents:
  - "7.  Media Type Registration for MPEG-4 Audio/Visual Streams\n   The following\
    \ sections describe the media type registrations for\n   MPEG-4 Audio/Visual streams,\
    \ which are registered in accordance with\n   [RFC4855] and use the template of\
    \ [RFC4288].  Media type registration\n   and SDP usage for the MPEG-4 Visual\
    \ stream are described in Sections\n   7.1 and 7.2, respectively, while media\
    \ type registration and SDP\n   usage for MPEG-4 Audio stream are described in\
    \ Sections 7.3 and 7.4,\n   respectively.\n"
- title: 7.1.  Media Type Registration for MPEG-4 Visual
  contents:
  - "7.1.  Media Type Registration for MPEG-4 Visual\n   The receiver MUST ignore\
    \ any unspecified parameter in order to ensure\n   that additional parameters\
    \ can be added in any future revision of\n   this specification.\n   Type name:\
    \ video\n   Subtype name: MP4V-ES\n   Required parameters: none\n   Optional parameters:\n\
    \      \"rate\": This parameter is used only for RTP transport.  It\n      indicates\
    \ the resolution of the timestamp field in the RTP header.\n      If this parameter\
    \ is not specified, its default value of 90000 (90\n      kHz) is used.\n    \
    \  \"profile-level-id\": A decimal representation of MPEG-4 Visual\n      Profile\
    \ and Level indication value (profile_and_level_indication)\n      defined in\
    \ Table G-1 of [14496-2].  This parameter MAY be used in\n      the capability\
    \ exchange or session setup procedure to indicate the\n      MPEG-4 Visual Profile\
    \ and Level combination of which the MPEG-4\n      Visual codec is capable.  If\
    \ this parameter is not specified by\n      the procedure, its default value of\
    \ 1 (Simple Profile/Level 1) is\n      used.\n      \"config\": This parameter\
    \ SHALL be used to indicate the\n      configuration of the corresponding MPEG-4\
    \ Visual bitstream.  It\n      SHALL NOT be used to indicate the codec capability\
    \ in the\n      capability exchange procedure.  It is a hexadecimal representation\n\
    \      of an octet string that expresses the MPEG-4 Visual configuration\n   \
    \   information, as defined in Subclause 6.2.1 (\"Start codes\") of\n      [14496-2].\
    \  The configuration information is mapped onto the octet\n      string most significant\
    \ bit (MSB) first.  The first bit of the\n      configuration information SHALL\
    \ be located at the MSB of the first\n      octet.  The configuration information\
    \ indicated by this parameter\n      SHALL be the same as the configuration information\
    \ in the\n      corresponding MPEG-4 Visual stream, except for\n      first_half_vbv_occupancy\
    \ and latter_half_vbv_occupancy (if they\n      exist), which may vary in the\
    \ repeated configuration information\n      inside an MPEG-4 Visual stream.  (See\
    \ Subclause 6.2.1, \"Start\n      codes\", of [14496-2].)\n   Published specification:\n\
    \      The specifications for MPEG-4 Visual streams are presented in\n      [14496-2].\
    \  The RTP payload format is described in [RFC6416].\n   Encoding considerations:\n\
    \      Video bitstreams MUST be generated according to MPEG-4 Visual\n      specifications\
    \ [14496-2].  A video bitstream is binary data and\n      MUST be encoded for\
    \ non-binary transport (for email, the Base64\n      encoding is sufficient).\
    \  This type is also defined for transfer\n      via RTP.  The RTP packets MUST\
    \ be packetized according to the\n      MPEG-4 Visual RTP payload format defined\
    \ in [RFC6416].\n   Security considerations:\n      See Section 10 of [RFC6416].\n\
    \   Interoperability considerations:\n      MPEG-4 Visual provides a large and\
    \ rich set of tools for the\n      coding of visual objects.  For effective implementation\
    \ of the\n      standard, subsets of the MPEG-4 Visual tool sets have been\n \
    \     provided for use in specific applications.  These subsets, called\n    \
    \  'Profiles', limit the size of the tool set a decoder is required\n      to\
    \ implement.  In order to restrict computational complexity, one\n      or more\
    \ Levels are set for each Profile.  A Profile@Level\n      combination allows:\n\
    \      *  a codec builder to implement only the subset of the standard he\n  \
    \       needs, while maintaining interworking with other MPEG-4 devices\n    \
    \     included in the same combination, and\n      *  checking whether MPEG-4\
    \ devices comply with the standard\n         ('conformance testing').\n      The\
    \ visual stream SHALL be compliant with the MPEG-4 Visual\n      Profile@Level\
    \ specified by the parameter \"profile-level-id\".\n      Interoperability between\
    \ a sender and a receiver may be achieved\n      by specifying the parameter \"\
    profile-level-id\" or by arranging a\n      capability exchange/announcement procedure\
    \ for this parameter.\n   Applications that use this media type:\n      Audio\
    \ and visual streaming and conferencing tools\n   Additional information: none\n\
    \   Person and email address to contact for further information:\n      See Authors'\
    \ Addresses section at the end of [RFC6416].\n   Intended usage: COMMON\n   Author:\n\
    \      See Authors' Addresses section at the end of [RFC6416].\n   Change controller:\n\
    \      IETF Audio/Video Transport Payloads working group delegated from\n    \
    \  the IESG.\n"
- title: 7.2.  Mapping to SDP for MPEG-4 Visual
  contents:
  - "7.2.  Mapping to SDP for MPEG-4 Visual\n   The media type video/MP4V-ES string\
    \ is mapped to fields in SDP\n   [RFC4566], as follows:\n   o  The media type\
    \ (video) goes in SDP \"m=\" as the media name.\n   o  The Media subtype (MP4V-ES)\
    \ goes in SDP \"a=rtpmap\" as the encoding\n      name.\n   o  The optional parameter\
    \ \"rate\" goes in \"a=rtpmap\" as the \"clock\n      rate\".\n   o  The optional\
    \ parameter \"profile-level-id\" and \"config\" go in the\n      \"a=fmtp\" line\
    \ to indicate the coder capability and configuration,\n      respectively.  These\
    \ parameters are expressed as a string, in the\n      form of a semicolon-separated\
    \ list of parameter=value pairs.\n      Example usages for the \"profile-level-id\"\
    \ parameter are:\n      1  : MPEG-4 Visual Simple Profile/Level 1\n      34 :\
    \ MPEG-4 Visual Core Profile/Level 2\n      145: MPEG-4 Visual Advanced Real Time\
    \ Simple Profile/Level 1\n"
- title: 7.2.1.  Declarative SDP Usage for MPEG-4 Visual
  contents:
  - "7.2.1.  Declarative SDP Usage for MPEG-4 Visual\n   The following are some examples\
    \ of media representations in SDP:\n   Simple Profile/Level 1, rate=90000(90 kHz),\
    \ \"profile-level-id\" and\n   \"config\" are present in \"a=fmtp\" line:\n  \
    \   m=video 49170/2 RTP/AVP 98\n     a=rtpmap:98 MP4V-ES/90000\n     a=fmtp:98\
    \ profile-level-id=1;config=000001B001000001B50900000100000\n        00120008440FA282C2090A21F\n\
    \   Core Profile/Level 2, rate=90000(90 kHz), \"profile-level-id\" is\n   present\
    \ in \"a=fmtp\" line:\n     m=video 49170/2 RTP/AVP 98\n     a=rtpmap:98 MP4V-ES/90000\n\
    \     a=fmtp:98 profile-level-id=34\n   Advance Real Time Simple Profile/Level\
    \ 1, rate=90000(90 kHz),\n   \"profile-level-id\" is present in \"a=fmtp\" line:\n\
    \     m=video 49170/2 RTP/AVP 98\n     a=rtpmap:98 MP4V-ES/90000\n     a=fmtp:98\
    \ profile-level-id=145\n"
- title: 7.3.  Media Type Registration for MPEG-4 Audio
  contents:
  - "7.3.  Media Type Registration for MPEG-4 Audio\n   The receiver MUST ignore any\
    \ unspecified parameter, to ensure that\n   additional parameters can be added\
    \ in any future revision of this\n   specification.\n   Type name: audio\n   Subtype\
    \ name: MP4A-LATM\n   Required parameters:\n      \"rate\": the \"rate\" parameter\
    \ indicates the RTP timestamp \"clock\n      rate\".  The default value is 90000.\
    \  Other rates MAY be indicated\n      only if they are set to the same value\
    \ as the audio sampling rate\n      (number of samples per second).\n      In\
    \ the presence of SBR, the sampling rates for the core encoder/\n      decoder\
    \ and the SBR tool are different in most cases.  Therefore,\n      this parameter\
    \ SHALL NOT be considered as the definitive sampling\n      rate.  If this parameter\
    \ is used, the server must follow the rules\n      below:\n      *  When the presence\
    \ of SBR is not explicitly signaled by the\n         optional SDP parameters such\
    \ as \"object\", \"profile-level-id\",\n         or \"config\", this parameter\
    \ SHALL be set to the core codec\n         sampling rate.\n      *  When the presence\
    \ of SBR is explicitly signaled by the optional\n         SDP parameters such\
    \ as \"object\", \"profile-level-id\", or\n         \"config\", this parameter\
    \ SHALL be set to the SBR sampling rate.\n      NOTE: The optional parameter \"\
    SBR-enabled\" in SDP \"a=fmtp\" is\n      useful for implicit HE AAC / HE AAC\
    \ v2 signaling.  But the\n      \"SBR-enabled\" parameter can also be used in\
    \ the case of explicit\n      HE AAC / HE AAC v2 signaling.  Therefore, its existence\
    \ (in\n      itself) is not the criteria to determine whether or HE AAC / HE\n\
    \      AAC v2 signaling is explicit.\n   Optional parameters:\n      \"profile-level-id\"\
    : a decimal representation of MPEG-4 Audio\n      Profile Level indication value\
    \ defined in [14496-3].  This\n      parameter indicates which MPEG-4 Audio tool\
    \ subsets the decoder is\n      capable of using.  If this parameter is not specified\
    \ in the\n      capability exchange or session setup procedure, its default value\n\
    \      of 30 (Natural Audio Profile/Level 1) is used.\n      \"MPS-profile-level-id\"\
    : a decimal representation of the MPEG\n      Surround Profile Level indication\
    \ as defined in [14496-3].  This\n      parameter indicates the support of the\
    \ MPEG Surround profile and\n      level by the decoder to be capable to decode\
    \ the stream.\n      \"object\": a decimal representation of the MPEG-4 Audio\
    \ Object Type\n      value defined in [14496-3].  This parameter specifies the\
    \ tool to\n      be used by the decoder.  It CAN be used to limit the capability\n\
    \      within the specified \"profile-level-id\".\n      \"bitrate\": the data\
    \ rate for the audio bitstream.\n      \"cpresent\": a boolean parameter that\
    \ indicates whether audio\n      payload configuration data has been multiplexed\
    \ into an RTP\n      payload (see Section 6.1).  A 0 indicates the configuration\
    \ data\n      has not been multiplexed into an RTP payload, and in that case,\n\
    \      the \"config\" parameter MUST be present; a 1 indicates that it has\n \
    \     been multiplexed.  The default if the parameter is omitted is 1.\n     \
    \ If this parameter is set to 1 and the \"config\" parameter is\n      present,\
    \ the multiplexed configuration data and the value of the\n      \"config\" parameter\
    \ SHALL be consistent.\n      \"config\": a hexadecimal representation of an octet\
    \ string that\n      expresses the audio payload configuration data \"StreamMuxConfig\"\
    ,\n      as defined in [14496-3].  Configuration data is mapped onto the\n   \
    \   octet string in an MSB-first basis.  The first bit of the\n      configuration\
    \ data SHALL be located at the MSB of the first octet.\n      In the last octet,\
    \ zero-padding bits, if necessary, SHALL follow\n      the configuration data.\
    \  Senders MUST set the StreamMuxConfig\n      elements taraBufferFullness and\
    \ latmBufferFullness to their\n      largest respective value, indicating that\
    \ buffer fullness measures\n      are not used in SDP.  Receivers MUST ignore\
    \ the value of these two\n      elements contained in the \"config\" parameter.\n\
    \      \"MPS-asc\": a hexadecimal representation of an octet string that\n   \
    \   expresses audio payload configuration data \"AudioSpecificConfig\",\n    \
    \  as defined in [14496-3].  If this parameter is not present, the\n      relevant\
    \ signaling is performed by other means (e.g., in-band or\n      contained in\
    \ the \"config\" string).\n      The same mapping rules as for the \"config\"\
    \ parameter apply.\n      \"ptime\": duration of each packet in milliseconds.\n\
    \      \"SBR-enabled\": a boolean parameter that indicates whether SBR-data\n\
    \      can be expected in the RTP-payload of a stream.  This parameter is\n  \
    \    relevant for an SBR-capable decoder if the presence of SBR cannot\n     \
    \ be detected from an out-of-band decoder configuration (e.g.,\n      contained\
    \ in the \"config\" string).\n      If this parameter is set to 0, a decoder MAY\
    \ expect that SBR is\n      not used.  If this parameter is set to 1, a decoder\
    \ CAN up-sample\n      the audio data with the SBR tool, regardless of whether\
    \ or not SBR\n      data is present in the stream.\n      If the presence of SBR\
    \ cannot be detected from out-of-band\n      configuration and the \"SBR-enabled\"\
    \ parameter is not present, the\n      parameter defaults to 1 for an SBR-capable\
    \ decoder.  If the\n      resulting output sampling rate or the computational\
    \ complexity is\n      not supported, the SBR tool can be disabled or run in down-sampled\n\
    \      mode.\n      The timestamp resolution at the RTP layer is determined by\
    \ the\n      \"rate\" parameter.\n   Published specification:\n      Encoding\
    \ specifications are provided in [14496-3].  The RTP\n      payload format specification\
    \ is described in [RFC6416].\n   Encoding considerations:\n      This type is\
    \ only defined for transfer via RTP.\n   Security considerations:\n      See Section\
    \ 10 of [RFC6416].\n   Interoperability considerations:\n      MPEG-4 Audio provides\
    \ a large and rich set of tools for the coding\n      of audio objects.  For effective\
    \ implementation of the standard,\n      subsets of the MPEG-4 Audio tool sets\
    \ similar to those used in\n      MPEG-4 Visual have been provided (see Section\
    \ 7.1).\n      The audio stream SHALL be compliant with the MPEG-4 Audio Profile@\n\
    \      Level specified by the parameters \"profile-level-id\" and\n      \"MPS-profile-level-id\"\
    .  Interoperability between a sender and a\n      receiver may be achieved by\
    \ specifying the parameters\n      \"profile-level-id\" and \"MPS-profile-level-id\"\
    \ or by arranging in\n      the capability exchange procedure to set this parameter\
    \ mutually\n      to the same value.  Furthermore, the \"object\" parameter can\
    \ be\n      used to limit the capability within the specified Profile@Level in\n\
    \      the capability exchange.\n   Applications that use this media type:\n \
    \     Audio and video streaming and conferencing tools.\n   Additional information:\
    \ none\n   Personal and email address to contact for further information:\n  \
    \    See Authors' Addresses section at the end of [RFC6416].\n   Intended usage:\
    \ COMMON\n   Author:\n      See Authors' Addresses section at the end of [RFC6416].\n\
    \   Change controller:\n      IETF Audio/Video Transport Payloads working group\
    \ delegated from\n      the IESG.\n"
- title: 7.4.  Mapping to SDP for MPEG-4 Audio
  contents:
  - "7.4.  Mapping to SDP for MPEG-4 Audio\n   The media type audio/MP4A-LATM string\
    \ is mapped to fields in SDP\n   [RFC4566], as follows:\n   o  The media type\
    \ (audio) goes in SDP \"m=\" as the media name.\n   o  The Media subtype (MP4A-LATM)\
    \ goes in SDP \"a=rtpmap\" as the\n      encoding name.\n   o  The required parameter\
    \ \"rate\" goes in \"a=rtpmap\" as the \"clock\n      rate\".\n   o  The optional\
    \ parameter \"ptime\" goes in SDP \"a=ptime\" attribute.\n   o  The optional parameters\
    \ \"profile-level-id\",\n      \"MPS-profile-level-id\", and \"object\" go in\
    \ the \"a=fmtp\" line to\n      indicate the coder capability.\n      The following\
    \ are some examples of the \"profile-level-id\" value:\n      1 : Main Audio Profile\
    \ Level 1\n      9 : Speech Audio Profile Level 1\n      15: High Quality Audio\
    \ Profile Level 2\n      30: Natural Audio Profile Level 1\n      44: High Efficiency\
    \ AAC Profile Level 2\n      48: High Efficiency AAC v2 Profile Level 2\n    \
    \  55: Baseline MPEG Surround Profile (see ISO/IEC 23003-1) Level 3\n   The optional\
    \ payload-format-specific parameters \"bitrate\",\n   \"cpresent\", \"config\"\
    , \"MPS-asc\", and \"SBR-enabled\" also go in the\n   \"a=fmtp\" line.  These\
    \ parameters are expressed as a string, in the\n   form of a semicolon-separated\
    \ list of parameter=value pairs.\n"
- title: 7.4.1.  Declarative SDP Usage for MPEG-4 Audio
  contents:
  - "7.4.1.  Declarative SDP Usage for MPEG-4 Audio\n   The following sections contain\
    \ some examples of the media\n   representation in SDP.\n   Note that the \"a=fmtp\"\
    \ line in some of the examples has been wrapped\n   to fit the page; they would\
    \ comprise a single line in the SDP file.\n"
- title: '7.4.1.1.  Example: In-Band Configuration'
  contents:
  - "7.4.1.1.  Example: In-Band Configuration\n   In this example, the audio configuration\
    \ data appears in the RTP\n   payload exclusively (i.e., the MPEG-4 audio configuration\
    \ is known\n   when a StreamMuxConfig element appears within the RTP payload).\n\
    \      m=audio 49230 RTP/AVP 96\n      a=rtpmap:96 MP4A-LATM/90000\n      a=fmtp:96\
    \ object=2; cpresent=1\n   The \"clock rate\" is set to 90 kHz.  This is the default\
    \ value, and\n   the real audio sampling rate is known when the audio configuration\n\
    \   data is received.\n"
- title: '7.4.1.2.  Example: 6 kbit/s CELP'
  contents:
  - "7.4.1.2.  Example: 6 kbit/s CELP\n   This example shows a 6 kbit/s CELP (Code-Excited\
    \ Linear Prediction)\n   bitstream (with an audio sampling rate of 8 kHz).\n \
    \    m=audio 49230 RTP/AVP 96\n     a=rtpmap:96 MP4A-LATM/8000\n     a=fmtp:96\
    \ profile-level-id=9; object=8; cpresent=0;\n       config=40008B18388380\n  \
    \   a=ptime:20\n   In this example, audio configuration data is not multiplexed\
    \ into the\n   RTP payload and is described only in SDP.  Furthermore, the \"\
    clock\n   rate\" is set to the audio sampling rate.\n"
- title: '7.4.1.3.  Example: 64 kbit/s AAC LC Stereo'
  contents:
  - "7.4.1.3.  Example: 64 kbit/s AAC LC Stereo\n   This example shows a 64 kbit/s\
    \ AAC LC stereo bitstream (with an audio\n   sampling rate of 24 kHz).\n     m=audio\
    \ 49230 RTP/AVP 96\n     a=rtpmap:96 MP4A-LATM/24000/2\n     a=fmtp:96 profile-level-id=1;\
    \ bitrate=64000; cpresent=0;\n       object=2; config=400026203fc0\n   In this\
    \ example, audio configuration data is not multiplexed into the\n   RTP payload\
    \ and is described only in SDP.  Furthermore, the \"clock\n   rate\" is set to\
    \ the audio sampling rate.\n   In this example, the presence of SBR cannot be\
    \ determined by the SDP\n   parameter set.  The \"clock rate\" represents the\
    \ core codec sampling\n   rate.  An SBR-enabled decoder can use the SBR tool to\
    \ up-sample the\n   audio data if the complexity and resulting output sampling\
    \ rate\n   permit.\n"
- title: '7.4.1.4.  Example: Use of the "SBR-enabled" Parameter'
  contents:
  - "7.4.1.4.  Example: Use of the \"SBR-enabled\" Parameter\n   These two examples\
    \ are identical to the example above with the\n   exception of the \"SBR-enabled\"\
    \ parameter.  The presence of SBR is not\n   signaled by the SDP parameters \"\
    object\", \"profile-level-id\", and\n   \"config\", but instead the \"SBR-enabled\"\
    \ parameter is present.  The\n   \"rate\" parameter and the StreamMuxConfig contain\
    \ the core codec\n   sampling rate.\n   This example shows \"SBR-enabled=0\",\
    \ with definitive and core codec\n   sampling rates of 24 kHz.\n     m=audio 49230\
    \ RTP/AVP 96\n     a=rtpmap:96 MP4A-LATM/24000/2\n     a=fmtp:96 profile-level-id=1;\
    \ bitrate=64000; cpresent=0;\n       SBR-enabled=0; config=400026203fc0\n   This\
    \ example shows \"SBR-enabled=1\", with core codec sampling rate of\n   24 kHz,\
    \ and definitive and SBR sampling rates of 48 kHz:\n     m=audio 49230 RTP/AVP\
    \ 96\n     a=rtpmap:96 MP4A-LATM/24000/2\n     a=fmtp:96 profile-level-id=1; bitrate=64000;\
    \ cpresent=0;\n       SBR-enabled=1; config=400026203fc0\n   In this example,\
    \ the \"clock rate\" is still 24000, and this\n   information is used for RTP\
    \ timestamp calculation.  The value of\n   24000 is used to support old AAC decoders.\
    \  This makes the decoder\n   supporting only AAC understand the HE AAC coded\
    \ data, although only\n   plain AAC is supported.  A HE AAC decoder is able to\
    \ generate output\n   data with the SBR sampling rate.\n"
- title: '7.4.1.5.  Example: Hierarchical Signaling of SBR'
  contents:
  - "7.4.1.5.  Example: Hierarchical Signaling of SBR\n   When the presence of SBR\
    \ is explicitly signaled by the SDP parameters\n   \"object\", \"profile-level-id\"\
    , or \"config\", as in the example below,\n   the StreamMuxConfig contains both\
    \ the core codec sampling rate and\n   the SBR sampling rate.\n     m=audio 49230\
    \ RTP/AVP 96\n     a=rtpmap:96 MP4A-LATM/48000/2\n     a=fmtp:96 profile-level-id=44;\
    \ bitrate=64000; cpresent=0;\n       config=40005623101fe0; SBR-enabled=1\n  \
    \ This \"config\" string uses the explicit signaling mode 2.A\n   (hierarchical\
    \ signaling; see [14496-3].  This means that the AOT\n   (Audio Object Type) is\
    \ SBR (5) and SFI (Sampling Frequency Index) is\n   6 (24000 Hz), which refers\
    \ to the underlying core codec sampling\n   frequency.  CC (Channel Configuration)\
    \ is stereo (2), and the ESFI\n   (Extension Sampling Frequency Index)=3 (48000)\
    \ is referring to the\n   sampling frequency of the extension tool (SBR).\n"
- title: '7.4.1.6.  Example: HE AAC v2 Signaling'
  contents:
  - "7.4.1.6.  Example: HE AAC v2 Signaling\n   HE AAC v2 decoders are required to\
    \ always produce a stereo signal\n   from a mono signal.  Hence, there is no parameter\
    \ necessary to signal\n   the presence of PS.\n   This example shows \"SBR-enabled=1\"\
    \ with 1 channel signaled in the\n   \"a=rtpmap\" line and within the \"config\"\
    \ parameter.  The core codec\n   sampling rate is 24 kHz; the definitive and SBR\
    \ sampling rates are 48\n   kHz.  The core codec channel configuration is mono;\
    \ the PS channel\n   configuration is stereo.\n     m=audio 49230 RTP/AVP 110\n\
    \     a=rtpmap:110 MP4A-LATM/24000/1\n     a=fmtp:110 profile-level-id=15; object=2;\
    \ cpresent=0;\n       config=400026103fc0; SBR-enabled=1\n"
- title: '7.4.1.7.  Example: Hierarchical Signaling of PS'
  contents:
  - "7.4.1.7.  Example: Hierarchical Signaling of PS\n   This example shows 48 kHz\
    \ stereo audio input.\n     m=audio 49230 RTP/AVP 110\n     a=rtpmap:110 MP4A-LATM/48000/2\n\
    \     a=fmtp:110 profile-level-id=48; cpresent=0; config=4001d613101fe0\n   The\
    \ \"config\" parameter indicates explicit hierarchical signaling of\n   PS and\
    \ SBR.  This configuration method is not supported by legacy AAC\n   an HE AAC\
    \ decoders, and these are therefore unable to decode the\n   coded data.\n"
- title: '7.4.1.8.  Example: MPEG Surround'
  contents:
  - "7.4.1.8.  Example: MPEG Surround\n   The following examples show how MPEG Surround\
    \ configuration data can\n   be signaled using SDP.  The configuration is carried\
    \ within the\n   \"config\" string in the first example by using two different\
    \ layers.\n   The general parameters in this example are: AudioMuxVersion=1;\n\
    \   allStreamsSameTimeFraming=1; numSubFrames=0; numProgram=0;\n   numLayer=1.\
    \  The first layer describes the HE AAC payload and signals\n   the following\
    \ parameters: ascLen=25; audioObjectType=2 (AAC LC);\n   extensionAudioObjectType=5\
    \ (SBR); samplingFrequencyIndex=6 (24 kHz);\n   extensionSamplingFrequencyIndex=3\
    \ (48 kHz); channelConfiguration=2\n   (2.0 channels).  The second layer describes\
    \ the MPEG Surround payload\n   and specifies the following parameters: ascLen=110;\n\
    \   AudioObjectType=30 (MPEG Surround); samplingFrequencyIndex=3 (48\n   kHz);\
    \ channelConfiguration=6 (5.1 channels); sacPayloadEmbedding=1;\n   SpatialSpecificConfig=(48\
    \ kHz; 32 slots; 525 tree; ResCoding=1;\n   ResBands=[7,7,7,7]).\n   In this example,\
    \ the signaling is carried by using two different LATM\n   layers.  The MPEG Surround\
    \ payload is carried together with the AAC\n   payload in a single layer as indicated\
    \ by the sacPayloadEmbedding\n   Flag.\n     m=audio 49230 RTP/AVP 96\n     a=rtpmap:96\
    \ MP4A-LATM/48000\n     a=fmtp:96 profile-level-id=1; bitrate=64000; cpresent=0;\n\
    \       SBR-enabled=1;\n       config=8FF8004192B11880FF0DDE3699F2408C00536C02313CF3CE0FF0\n"
- title: '7.4.1.9.  Example: MPEG Surround with Extended SDP Parameters'
  contents:
  - "7.4.1.9.  Example: MPEG Surround with Extended SDP Parameters\n   The following\
    \ example is an extension of the configuration given\n   above by the MPEG-Surround-specific\
    \ parameters.  The \"MPS-asc\"\n   parameter specifies the MPEG Surround Baseline\
    \ Profile at Level 3\n   (PLI55), and the \"MPS-asc\" string contains the hexadecimal\n\
    \   representation of the MPEG Surround ASC [audioObjectType=30 (MPEG\n   Surround);\
    \ samplingFrequencyIndex=0x3 (48 kHz);\n   channelConfiguration=6 (5.1 channels);\
    \ sacPayloadEmbedding=1;\n   SpatialSpecificConfig=(48 kHz; 32 slots; 525 tree;\
    \ ResCoding=1;\n   ResBands=[0,13,13,13])].\n     m=audio 49230 RTP/AVP 96\n \
    \    a=rtpmap:96 MP4A-LATM/48000\n     a=fmtp:96 profile-level-id=44; bitrate=64000;\
    \ cpresent=0;\n       config=40005623101fe0; MPS-profile-level-id=55;\n      \
    \ MPS-asc=F1B4CF920442029B501185B6DA00;\n"
- title: '7.4.1.10.  Example: MPEG Surround with Single-Layer Configuration'
  contents:
  - "7.4.1.10.  Example: MPEG Surround with Single-Layer Configuration\n   The following\
    \ example shows how MPEG Surround configuration data can\n   be signaled using\
    \ the SDP \"config\" parameter.  The configuration is\n   carried within the \"\
    config\" string using a single layer.  The general\n   parameters in this example\
    \ are: AudioMuxVersion=1;\n   allStreamsSameTimeFraming=1; numSubFrames=0; numProgram=0;\n\
    \   numLayer=0.  The single layer describes the combination of HE AAC and\n  \
    \ MPEG Surround payload and signals the following parameters:\n   ascLen=101;\
    \ audioObjectType=2 (AAC LC); extensionAudioObjectType=5\n   (SBR); samplingFrequencyIndex=7\
    \ (22.05 kHz);\n   extensionSamplingFrequencyIndex=7 (44.1 kHz); channelConfiguration=2\n\
    \   (2.0 channels).  A backward-compatible extension according to\n   [14496-3/Amd.1]\
    \ signals the presence of MPEG Surround payload data\n   and specifies the following\
    \ parameters: SpatialSpecificConfig=(44.1\n   kHz; 32 slots; 525 tree; ResCoding=0).\n\
    \   In this example, the signaling is carried by using a single LATM\n   layer.\
    \  The MPEG Surround payload is carried together with the HE AAC\n   payload in\
    \ a single layer.\n     m=audio 49230 RTP/AVP 96\n     a=rtpmap:96 MP4A-LATM/44100\n\
    \     a=fmtp:96 profile-level-id=44; bitrate=64000; cpresent=0;\n       SBR-enabled=1;\
    \ config=8FF8000652B920876A83A1F440884053620FF0;\n       MPS-profile-level-id=55\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document updates the media subtypes \"MP4A-LATM\"\
    \ and \"MP4V-ES\"\n   from RFC 3016.  The new registrations are in Sections 7.1\
    \ and 7.3 of\n   this document.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank Yoshihiro Kikuchi, Yoshinori\
    \ Matsui,\n   Toshiyuki Nomura, Shigeru Fukunaga, and Hideaki Kimata for their\
    \ work\n   on RFC 3016, and Ali Begen, Keith Drage, Roni Even, and Qin Wu for\n\
    \   their valuable input and comments on this document.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [RFC3550] and in any applicable RTP profile.  The\
    \ main\n   security considerations for the RTP packet carrying the RTP payload\n\
    \   format defined within this document are confidentiality, integrity,\n   and\
    \ source authenticity.  Confidentiality is achieved by encryption\n   of the RTP\
    \ payload, and integrity of the RTP packets is achieved\n   through a suitable\
    \ cryptographic integrity protection mechanism.  A\n   cryptographic system may\
    \ also allow the authentication of the source\n   of the payload.  A suitable\
    \ security mechanism for this RTP payload\n   format should provide confidentiality,\
    \ integrity protection, and (at\n   least) source authentication capable of determining\
    \ whether or not an\n   RTP packet is from a member of the RTP session.\n   Note\
    \ that most MPEG-4 codecs define an extension mechanism to\n   transmit extra\
    \ data within a stream that is gracefully skipped by\n   decoders that do not\
    \ support this extra data.  This may be used to\n   transmit unwanted data in\
    \ an otherwise valid stream.\n   The appropriate mechanism to provide security\
    \ to RTP and payloads\n   following this may vary.  It is dependent on the application,\
    \ the\n   transport, and the signaling protocol employed.  Therefore, a single\n\
    \   mechanism is not sufficient, although, if suitable, the usage of the\n   Secure\
    \ Real-time Transport Protocol (SRTP) [RFC3711] is recommended.\n   Other mechanisms\
    \ that may be used are IPsec [RFC4301] and Transport\n   Layer Security (TLS)\
    \ [RFC5246] (e.g., for RTP over TCP), but other\n   alternatives may also exist.\n\
    \   This RTP payload format and its media decoder do not exhibit any\n   significant\
    \ non-uniformity in the receiver-side computational\n   complexity for packet\
    \ processing, and thus are unlikely to pose a\n   denial-of-service threat due\
    \ to the receipt of pathological data.\n   The complete MPEG-4 System allows for\
    \ transport of a wide range of\n   content, including Java applets (MPEG-J) and\
    \ scripts.  Since this\n   payload format is restricted to audio and video streams,\
    \ it is not\n   possible to transport such active content in this format.\n"
- title: 11.  Differences to RFC 3016
  contents:
  - "11.  Differences to RFC 3016\n   The RTP payload format for MPEG-4 Audio as specified\
    \ in RFC 3016 is\n   used by the 3GPP PSS service [3GPP].  However, there are\
    \ some\n   misalignments between RFC 3016 and the 3GPP PSS specification that\n\
    \   are addressed by this update:\n   o  The audio payload format (LATM) referenced\
    \ in this document is the\n      newer format specified in [14496-3], which is\
    \ binary compatible to\n      the format used in [3GPP].  This newer format is\
    \ not binary\n      compatible with the LATM referenced in RFC 3016, which is\n\
    \      specified in [14496-3:1999/Amd.1:2000].\n   o  The audio signaling format\
    \ (StreamMuxConfig) referenced in this\n      document is binary compatible to\
    \ the format used in [3GPP].  The\n      StreamMuxConfig element has also been\
    \ revised by MPEG since RFC\n      3016.\n   o  The use of an audio parameter\
    \ \"SBR-enabled\" is now defined in this\n      document, which is used by 3GPP\
    \ implementations [3GPP].  RFC 3016\n      does not define this parameter.\n \
    \  o  The \"rate\" parameter is defined unambiguously in this document for\n \
    \     the case of presence of SBR (Spectral Band Replication).  In RFC\n     \
    \ 3016, the definition of the \"rate\" parameter is ambiguous.\n   o  The number\
    \ of audio channels parameter is defined unambiguously in\n      this document\
    \ for the case of presence of PS (Parametric Stereo).\n      At the time RFC 3016\
    \ was written, PS was not yet defined.\n   Furthermore, some comments have been\
    \ addressed and signaling support\n   for MPEG Surround [23003-1] was added.\n\
    \   Below is a summary of the changes in requirements by this update:\n   o  In\
    \ the dynamic assignment of RTP payload types for scalable MPEG-4\n      Audio\
    \ streams, the server SHALL assign a different value to each\n      layer.\n \
    \  o  The dependency relationships between the enhanced layer and the\n      base\
    \ layer for scalable MPEG-4 Audio streams MUST be signaled as\n      specified\
    \ in [RFC5583].\n   o  If the size of an audioMuxElement is so large that the\
    \ size of the\n      RTP packet containing it does exceed the size of the Path\
    \ MTU, the\n      audioMuxElement SHALL be fragmented and spread across multiple\n\
    \      packets.\n   o  The receiver MUST ignore any unspecified parameter in order\
    \ to\n      ensure that additional parameters can be added in any future\n   \
    \   revision of this specification.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [14496-2]  MPEG, \"ISO/IEC International Standard\
    \ 14496-2 - Coding of\n              audio-visual objects, Part 2: Visual\", 2003.\n\
    \   [14496-3]  MPEG, \"ISO/IEC International Standard 14496-3 - Coding of\n  \
    \            audio-visual objects, Part 3 Audio\", 2009.\n   [14496-3/Amd.1]\n\
    \              MPEG, \"ISO/IEC International Standard 14496-3 - Coding of\n  \
    \            audio-visual objects, Part 3: Audio, Amendment 1: HD-AAC\n      \
    \        profile and MPEG Surround signaling\", 2009.\n   [23003-1]  MPEG, \"\
    ISO/IEC International Standard 23003-1 - MPEG\n              Surround (MPEG D)\"\
    , 2007.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3550]\
    \  Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,\
    \ \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD\
    \ 64, RFC 3550, July 2003.\n   [RFC4288]  Freed, N. and J. Klensin, \"Media Type\
    \ Specifications and\n              Registration Procedures\", BCP 13, RFC 4288,\
    \ December 2005.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"\
    SDP: Session\n              Description Protocol\", RFC 4566, July 2006.\n   [RFC4629]\
    \  Ott, H., Bormann, C., Sullivan, G., Wenger, S., and R.\n              Even,\
    \ \"RTP Payload Format for ITU-T Rec\", RFC 4629,\n              January 2007.\n\
    \   [RFC4855]  Casner, S., \"Media Type Registration of RTP Payload\n        \
    \      Formats\", RFC 4855, February 2007.\n   [RFC5583]  Schierl, T. and S. Wenger,\
    \ \"Signaling Media Decoding\n              Dependency in the Session Description\
    \ Protocol (SDP)\",\n              RFC 5583, July 2009.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [14496-1]  MPEG, \"ISO/IEC International Standard\
    \ 14496-1 - Coding of\n              audio-visual objects, Part 1 Systems\", 2004.\n\
    \   [14496-12] MPEG, \"ISO/IEC International Standard 14496-12 - Coding of\n \
    \             audio-visual objects, Part 12 ISO base media file format\".\n  \
    \ [14496-14] MPEG, \"ISO/IEC International Standard 14496-14 - Coding of\n   \
    \           audio-visual objects, Part 12 MP4 file format\".\n   [14496-3:1999/Amd.1:2000]\n\
    \              MPEG, \"ISO/IEC International Standard 14496-3 - Coding of\n  \
    \            audio-visual objects, Part 3 Audio, Amendment 1: Audio\n        \
    \      extensions\", 2000.\n   [3GPP]     3GPP, \"3rd Generation Partnership Project;\
    \ Technical\n              Specification Group Services and System Aspects;\n\
    \              Transparent end-to-end Packet-switched Streaming Service\n    \
    \          (PSS); Protocols and codecs (Release 9)\", 3GPP TS 26.234\n       \
    \       V9.5.0, December 2010.\n   [H245]     International Telecommunication\
    \ Union, \"Control protocol\n              for multimedia communication\", ITU\
    \ Recommendation H.245,\n              December 2009.\n   [H261]     International\
    \ Telecommunication Union, \"Video codec for\n              audiovisual services\
    \ at p x 64 kbit/s\", ITU\n              Recommendation H.261, March 1993.\n \
    \  [H323]     International Telecommunication Union, \"Packet-based\n        \
    \      multimedia communications systems\", ITU\n              Recommendation\
    \ H.323, December 2009.\n   [RFC2198]  Perkins, C., Kouvelas, I., Hodson, O.,\
    \ Hardman, V.,\n              Handley, M., Bolot, J., Vega-Garcia, A., and S.\
    \ Fosse-\n              Parisis, \"RTP Payload for Redundant Audio Data\", RFC\
    \ 2198,\n              September 1997.\n   [RFC3016]  Kikuchi, Y., Nomura, T.,\
    \ Fukunaga, S., Matsui, Y., and H.\n              Kimata, \"RTP Payload Format\
    \ for MPEG-4 Audio/Visual\n              Streams\", RFC 3016, November 2000.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              June 2002.\n\
    \   [RFC3640]  van der Meer, J., Mackie, D., Swaminathan, V., Singer, D.,\n  \
    \            and P. Gentric, \"RTP Payload Format for Transport of\n         \
    \     MPEG-4 Elementary Streams\", RFC 3640, November 2003.\n   [RFC3711]  Baugher,\
    \ M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman, \"\
    The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711, March\
    \ 2004.\n   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n\
    \              Internet Protocol\", RFC 4301, December 2005.\n   [RFC4628]  Even,\
    \ R., \"RTP Payload Format for H.263 Moving RFC 2190 to\n              Historic\
    \ Status\", RFC 4628, January 2007.\n   [RFC5109]  Li, A., \"RTP Payload Format\
    \ for Generic Forward Error\n              Correction\", RFC 5109, December 2007.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5691]\
    \  de Bont, F., Doehla, S., Schmidt, M., and R.\n              Sperschneider,\
    \ \"RTP Payload Format for Elementary Streams\n              with MPEG Surround\
    \ Multi-Channel Audio\", RFC 5691,\n              October 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Malte Schmidt\n   Dolby Laboratories\n   Deutschherrnstr.\
    \ 15-19\n   90537 Nuernberg\n   DE\n   Phone: +49 911 928 91 42\n   EMail: malte.schmidt@dolby.com\n\
    \   Frans de Bont\n   Philips Electronics\n   High Tech Campus 36\n   5656 AE\
    \ Eindhoven\n   NL\n   Phone: +31 40 2740234\n   EMail: frans.de.bont@philips.com\n\
    \   Stefan Doehla\n   Fraunhofer IIS\n   Am Wolfmantel 33\n   91058 Erlangen\n\
    \   DE\n   Phone: +49 9131 776 6042\n   EMail: stefan.doehla@iis.fraunhofer.de\n\
    \   Jaehwan Kim\n   LG Electronics Inc.\n   VCS/HE, 16Fl. LG Twin Towers\n   Yoido-Dong,\
    \ YoungDungPo-Gu,\n   Seoul 150-721\n   Korea\n   Phone: +82 10 6225 0619\n  \
    \ EMail: kjh1905m@naver.com\n"
