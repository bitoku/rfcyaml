- title: __initial_text__
  contents:
  - '          Internet Printing Protocol/1.1: Implementor''s Guide

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a set of documents, which together describe\n\
    \   all aspects of a new Internet Printing Protocol (IPP).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   3.1.2.1   Suggested Operation Processing Steps for all\
    \ Operations. 17\n   3.1.2.1.4   Validate attribute group and attribute presence\
    \ and\n   3.1.2.1.4.1   Validate the presence and order of attribute groups. 20\n\
    \   3.1.2.1.4.2   Ignore unknown attribute groups in the expected\n   3.1.2.1.4.3\
    \   Validate the presence of a single occurrence of\n                 required\
    \ Operation attributes....................... 21\n   3.1.2.1.5   Validate the\
    \ values of the REQUIRED Operation\n               attributes............................................\
    \ 29\n   3.1.2.1.6   Validate the values of the OPTIONAL Operation\n         \
    \      attributes............................................ 33\n   3.1.2.2 \
    \  Suggested Additional Processing Steps for Operations\n             that Create/Validate\
    \ Jobs and Add Documents............. 37\n   3.1.2.2.1   Default \"ipp-attribute-fidelity\"\
    \ if not supplied...... 37\n   3.1.2.2.2   Check that the Printer object is accepting\
    \ jobs....... 38\n   3.1.2.2.3   Validate the values of the Job Template attributes....\
    \ 38\n   3.1.2.3   Algorithm for job validation............................ 39\n\
    \   3.1.2.3.1   Check for conflicting Job Template attributes values.. 45\n  \
    \ 3.1.2.3.2   Decide whether to REJECT the request.................. 46\n   3.1.2.3.3\
    \   For the Validate-Job operation, RETURN one of the\n               success\
    \ status codes.................................. 48\n   3.1.2.3.4   Create the\
    \ Job object with attributes to support...... 48\n   3.1.2.3.5   Return one of\
    \ the success status codes................ 50\n   3.1.2.3.6   Accept appended\
    \ Document Content...................... 50\n   3.1.2.3.7   Scheduling and Starting\
    \ to Process the Job............ 50\n   3.1.2.3.8   Completing the Job....................................\
    \ 50\n   3.1.2.3.9   Destroying the Job after completion................... 51\n\
    \   3.1.2.3.10  Interaction with \"ipp-attribute-fidelity\"............. 51\n\
    \   3.1.2.3.11  Character set code conversion support................. 51\n  \
    \ 3.1.2.3.12  What charset to return when an unsupported charset is\n        \
    \       requested (Issue 1.19)?....... ....................... 52\n   3.1.2.3.13\
    \  Natural Language Override (NLO)....................... 53\n   3.1.3  Status\
    \ codes returned by operation......................... 55\n   3.1.3.1   Printer\
    \ Operations...................................... 55\n   3.1.3.1.1   Print-Job.............................................\
    \ 55\n   3.1.3.1.2   Print-URI............................................. 58\n\
    \   3.1.3.1.3   Validate-Job.......................................... 58\n  \
    \ 3.1.3.1.4   Create-Job............................................ 58\n   3.1.3.1.5\
    \   Get-Printer-Attributes................................ 59\n   3.1.3.1.6  \
    \ Get-Jobs.............................................. 60\n   3.1.3.1.7   Pause-Printer.........................................\
    \ 61\n   3.1.3.1.8   Resume-Printer........................................ 62\n\
    \   3.1.3.1.8.1   What about Printers unable to change state due to\n        \
    \         an error condition?................................. 63\n   3.1.3.1.8.2\
    \   How is \"printer-state\" handled on Resume-Printer?... 63\n   3.1.3.1.9  \
    \ Purge-Printer......................................... 63\n   3.1.3.2   Job\
    \ Operations.......................................... 64\n   3.1.3.2.1   Send-Document.........................................\
    \ 64\n   3.1.3.2.2   Send-URI.............................................. 65\n\
    \   3.1.3.2.3   Cancel-Job............................................ 65\n  \
    \ 3.1.3.2.4   Get-Job-Attributes.................................... 67\n   3.1.3.2.5\
    \   Hold-Job.............................................. 68\n   3.1.3.2.6  \
    \ Release-Job........................................... 69\n   3.1.3.2.7   Restart-Job...........................................\
    \ 69\n   3.1.3.2.7.1   Can documents be added to a restarted job?.......... 69\n\
    \   3.1.4  Returning unsupported attributes in Get-Xxxx responses\n          (Issue\
    \ 1.18)............................................... 70\n   3.1.5  Sending empty\
    \ attribute groups............................. 70\n   3.2   Printer Operations..........................................\
    \ 71\n   3.2.1  Print-Job operation........................................ 71\n\
    \   3.2.1.1   Flow controlling the data portion of a Print-Job\n             request\
    \ (Issue 1.22).................................... 71\n   3.2.1.2   Returning\
    \ job-state in Print-Job response (Issue 1.30).. 71\n   3.2.2  Get-Printer-Attributes\
    \ operation........................... 72\n   3.2.3  Get-Jobs operation.........................................\
    \ 72\n   3.2.3.1   Get-Jobs, my-jobs='true', and 'requesting-user-name'\n    \
    \         (Issue 1.39)?..........................................  72\n   3.2.3.2\
    \   Why is there a \"limit\" attribute in the Get-Jobs\n             operation?..............................................\
    \ 73\n   3.2.4  Create-Job operation....................................... 73\n\
    \   3.3   Job Operations.............................................. 74\n  \
    \ 3.3.1  Validate-Job............................................... 74\n   3.3.2\
    \  Restart-Job................................................ 74\n   4  Object\
    \ Attributes.............................................. 74\n   4.1   Attribute\
    \ Syntax's.......................................... 74\n   4.1.1  The 'none'\
    \ value for empty sets (Issue 1.37)............... 74\n   4.1.2  Multi-valued\
    \ attributes (Issue 1.31)....................... 75\n   4.1.3  Case Sensitivity\
    \ in URIs (issue 1.6)....................... 75\n   4.1.4  Maximum length for\
    \ xxxWithLanguage and xxxWithoutLanguage.. 76\n   4.2   Job Template Attributes.....................................\
    \ 76\n   4.2.1  multiple-document-handling(type2 keyword).................. 76\n\
    \   4.2.1.1   Support of multiple document jobs....................... 76\n  \
    \ 4.3   Job Description Attributes.................................. 76\n   4.3.1\
    \  Getting the date and time of day........................... 76\n   4.4   Printer\
    \ Description Attributes.............................. 77\n   4.4.1  queued-job-count\
    \ (integer(0:MAX)).......................... 77\n   4.4.1.1   Why is \"queued-job-count\"\
    \ RECOMMENDED (Issue 1.14)?..... 77\n   4.4.1.2   Is \"queued-job-count\" a good\
    \ measure of how busy a\n             printer is (Issue 1.15)?................................\
    \ 77\n   4.4.2  printer-current-time (dateTime)............................ 78\n\
    \   4.4.3  Printer-uri................................................ 78\n  \
    \ 4.5   Empty Jobs.................................................. 79\n   5\
    \  Directory Considerations....................................... 79\n   5.1\
    \   General Directory Schema Considerations..................... 79\n   5.2  \
    \ IPP Printer with a DNS name................................. 79\n   6  Security\
    \ Considerations........................................ 80\n   6.1   Querying\
    \ jobs with IPP that were submitted using other job\n         submission protocols\
    \ (Issue 1.32)........................... 80\n   7  Encoding and Transport.........................................\
    \ 81\n   7.1   General Headers............................................. 83\n\
    \   7.2   Request  Headers............................................ 84\n  \
    \ 7.3   Response Headers............................................ 86\n   7.4\
    \   Entity  Headers............................................. 87\n   7.5  \
    \ Optional support for HTTP/1.0............................... 88\n   7.6   HTTP/1.1\
    \ Chunking........................................... 88\n   7.6.1  Disabling\
    \ IPP Server Response Chunking..................... 88\n   7.6.2  Warning About\
    \ the Support of Chunked Requests.............. 88\n   8  References.....................................................\
    \ 89\n   9  Authors' Addresses............................................. 91\n\
    \   10 Description of the Base IPP Documents.......................... 94\n  \
    \ 11 Full Copyright Statement....................................... 96\n"
- title: Tables
  contents:
  - "Tables\n   Table 1 - Summary of Printer operation attributes that sender MUST\n\
    \             supply .................................................  8\n  \
    \ Table 2 - Summary of Printer operation attributes that sender MAY\n        \
    \     supply ................................................. 10\n   Table 3\
    \ - Summary of Job operation attributes that sender MUST\n             supply..................................................\
    \ 12\n   Table 4 - Summary of Job operation attributes that sender MAY\n     \
    \        supply.................................................. 14\n   Table\
    \ 5 - Printer operation response attributes................... 16\n   Table 6\
    \ - Examples of validating IPP version...................... 19\n   Table 7 -\
    \ Rules for validating single values X against Z.......... 40\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   IPP is an application level protocol that can be used for\
    \ distributed\n   printing using Internet tools and technologies.  This document\n\
    \   contains information that supplements the IPP Model and Semantics\n   [RFC2911]\
    \ and the IPP Transport and Encoding [RFC2910] documents.  It\n   is intended\
    \ to help implementers understand IPP/1.1, as well as\n   IPP/1.0 [RFC2565, RFC2566],\
    \ and some of the considerations that may\n   assist them in the design of their\
    \ client and/or IPP object\n   implementation.  For example, a typical order of\
    \ processing requests\n   is given, including error checking.  Motivation for\
    \ some of the\n   specification decisions is also included.\n   This document\
    \ obsoletes RFC 2639 which was the Implementor's Guide\n   for IPP/1.0.  The IPP\
    \ Implementor's Guide (IIG) (this document)\n   contains information that supplements\
    \ the IPP Model and Semantics\n   [RFC2911] and the IPP Transport and Encoding\
    \ [RFC2910] documents.\n   This document is just one of a suite of documents that\
    \ fully define\n   IPP.  The base set of IPP documents includes:\n      Design\
    \ Goals for an Internet Printing Protocol [RFC2567]\n      Rationale for the Structure\
    \ and Model and Protocol for the\n      Internet Printing Protocol [RFC2568]\n\
    \      Internet Printing Protocol/1.1: Model and Semantics [RFC2911]\n      Internet\
    \ Printing Protocol/1.1: Encoding and Transport [RFC2910]\n      Internet Printing\
    \ Protocol/1.1: Implementor's Guide (this\n      document)\n      Mapping between\
    \ LPD and IPP Protocols [RFC2569]\n   See section 10 for a description of these\
    \ base IPP documents.  Anyone\n   reading these documents for the first time is\
    \ strongly encouraged to\n   read the IPP documents in the above order.\n   As\
    \ such the information in this document is not part of the formal\n   specification\
    \ of IPP/1.1.  Instead information is presented to help\n   implementers understand\
    \ IPP/1.1, as well as IPP/1.0 [RFC2565,\n   RFC2566], including some of the motivation\
    \ for decisions taken by the\n   committee in developing the specification.  Some\
    \ of the\n   implementation considerations are intended to help implementers\n\
    \   design their client and/or IPP object implementations.  If there are\n   any\
    \ contradictions between this document and [RFC2911] or [RFC2910],\n   those documents\
    \ take precedence over this document.\n   Platform-specific implementation considerations\
    \ will be included in\n   this guide as they become known.\n   Note:  In order\
    \ to help the reader of the IIG and the IPP Model and\n   Semantics document,\
    \ the sections in this document parallel the\n   corresponding sections in the\
    \ Model document and are numbered the\n   same for ease of cross reference.  The\
    \ sections that correspond to\n   the IPP Transport and Encoding are correspondingly\
    \ offset.\n"
- title: 1.1  Conformance language
  contents:
  - "1.1  Conformance language\n   Usually, this document does not contain the terminology\
    \ MUST, MUST\n   NOT, MAY, NEED NOT, SHOULD, SHOULD NOT, REQUIRED, and OPTIONAL.\n\
    \   However, when those terms do appear in this document, their intent is\n  \
    \ to repeat what the [RFC2911] and [RFC2910] documents require and\n   allow,\
    \ rather than specifying additional conformance requirements.\n   These terms\
    \ are defined in section 12 on conformance terminology in\n   [RFC2911], most\
    \ of which is taken from RFC 2119 [RFC2119].\n   Implementers should read section\
    \ 12 (APPENDIX A) in [RFC2911] in\n   order to understand these capitalized words.\
    \  The words MUST, MUST\n   NOT, and REQUIRED indicate what implementations are\
    \ required to\n   support in a client or IPP object in order to be conformant\
    \ to\n   [RFC2911] and [RFC2910].  MAY, NEED NOT, and OPTIONAL indicate was is\n\
    \   merely allowed as an implementer option.  The verbs SHOULD and SHOULD\n  \
    \ NOT indicate suggested behavior, but which is not required or\n   disallowed,\
    \ respectively, in order to conform to the specification.\n"
- title: 1.2  Other terminology
  contents:
  - "1.2  Other terminology\n   This document uses other terms, such as \"attributes\"\
    , \"operation\",\n   and \"Printer\" as defined in [RFC2911] section 12.  In addition,\
    \ the\n   term \"sender\" refers to the client that sends a request or an IPP\n\
    \   object that returns a response.  The term \"receiver\" refers to the\n   IPP\
    \ object that receives a request and to a client that receives a\n   response.\n"
- title: 1.3  Issues Raised from Interoperability Testing Events
  contents:
  - "1.3  Issues Raised from Interoperability Testing Events\n   The IPP WG has conducted\
    \ three open Interoperability Testing Events.\n   The first one was held in September\
    \ 1998, the second one was held in\n   March 1999, and the third one was held\
    \ in October 2000.  See the\n   summary reports in:\n      ftp://ftp.pwg.org/pub/pwg/ipp/new_TES/\n\
    \   The issues raised from the first Interoperability Testing Event are\n   numbered\
    \ 1.n in this document and have been incorporated into\n   \"IPP/1.0 Model and\
    \ Semantics\" [RFC2566] and the \"IPP/1.0 Encoding and\n   Transport\" [RFC2565]\
    \ documents.  However, some of the discussion is\n   left here in the Implementor's\
    \ Guide to help understanding.\n   The issues raised from the second Interoperability\
    \ Testing Event are\n   numbered 2.n in this document have been incorporated into\
    \ \"IPP/1.1\n   Model and Semantics\" [RFC2911] and the \"IPP/1.1 Encoding and\n\
    \   Transport\" [RFC2910] documents.  However, some of the discussion is\n   left\
    \ here in the Implementor's Guide to help understanding.\n   The issues raised\
    \ from the third Interoperability Testing Event are\n   numbered 3.n in this document\
    \ and are described in:\n      ftp://ftp.pwg.org/pub/pwg/ipp/Issues/Issues-raised-at-Bake-\n\
    \      Off3.pdf\n      ftp://ftp.pwg.org/pub/pwg/ipp/Issues/Issues-raised-at-Bake-\n\
    \      Off3.doc\n      ftp://ftp.pwg.org/pub/pwg/ipp/Issues/Issues-raised-at-Bake-\n\
    \      Off3.txt\n"
- title: 2.  IPP Objects
  contents:
  - "2.  IPP Objects\n   The term \"client\" in IPP is intended to mean any client\
    \ that issues\n   IPP operation requests and accepts IPP operation responses,\
    \ whether\n   it be a desktop or a server.  In other words, the term \"client\"\
    \ does\n   not just mean end-user clients, such as those associated with\n   desktops.\n\
    \   The term \"IPP Printer\" in IPP is intended to mean an object that\n   accepts\
    \ IPP operation requests and returns IPP operation responses,\n   whether implemented\
    \ in a server or a device.  An IPP Printer object\n   MAY, if implemented in a\
    \ server, turn around and forward received\n   jobs (and other requests) to other\
    \ devices and print\n   servers/services, either using IPP or some other protocol.\n"
- title: 3  IPP Operations
  contents:
  - "3  IPP Operations\n   This section  corresponds to Section 3 \"IPP Operations\"\
    \ in the\n   IPP/1.1 Model and Semantics document [RFC2911].\n"
- title: 3.1  Common Semantics
  contents:
  - "3.1  Common Semantics\n   This section discusses semantics common to all operations.\n"
- title: 3.1.1  Summary of Operation Attributes
  contents:
  - "3.1.1  Summary of Operation Attributes\n   Table 1 - Summary of Printer operation\
    \ attributes that sender MUST\n             supply\n"
- title: Printer Operations
  contents:
  - "Printer Operations\n                     Requests                           \
    \    Responses\n   Operation         PJ,    PU    CJ    GPA    GJ    PP,    All\n\
    \   Attributes        VJ     (O)   (O)   (R)    (R)   RP,    Operations\n    \
    \                 (R)                             PP\n                       \
    \                              (O+)\n   Operation parameters--REQUIRED to be supplied\
    \ by the sender:\n   operation-id      R      R     R     R      R     R\n   status-code\
    \                                              R\n   request-id        R     \
    \ R     R     R      R     R      R\n   version-number    R      R     R     R\
    \      R     R      R\n   Operation attributes--REQUIRED to be supplied by the\
    \ sender:\n   attributes-       R      R     R     R      R     R      R\n   \
    \  charset\n   attributes-       R      R     R     R      R     R      R\n  \
    \   natural-\n     language\n   document-uri             R\n   job-id*\n   job-uri*\n"
- title: Printer Operations
  contents:
  - "Printer Operations\n                     Requests                           \
    \    Responses\n   Operation         PJ,    PU    CJ    GPA    GJ    PP,    All\n\
    \   Attributes        VJ     (O)   (O)   (R)    (R)   RP,    Operations\n    \
    \                 (R)                             PP\n                       \
    \                              (O+)\n   last-document\n   printer-uri       R\
    \      R     R     R      R     R\n   Operation  attributes--RECOMMENDED   to\
    \  be  supplied   by  the\n     sender:\n   job-name          R      R     R\n\
    \   requesting-user-  R      R     R      R      R     R\n     name\n   Legend:\n\
    \   PJ, VJ:  Print-Job, Validate-Job\n   PU:  Print-URI\n   CJ:  Create-Job\n\
    \   GPA:  Get-Printer-Attributes\n   GJ:  Get-Jobs\n   PP, RP, PP:  Pause-Printer,\
    \ Resume-Printer, Purge-Printer\n   R  indicates a REQUIRED operation that MUST\
    \ be supported by the IPP\n      object (Printer or Job).  For attributes, R indicates\
    \ that the\n      attribute MUST be supported by the IPP object that supports\
    \ the\n      associated operation.\n   O  indicates an OPTIONAL operation or attribute\
    \ that MAY be supported\n      by the IPP object (Printer or Job).\n   +  indicates\
    \ that this is not an IPP/1.0 feature, but is only a part\n      of IPP/1.1 and\
    \ future versions of IPP.\n     Table 2 - Summary of Printer operation attributes\
    \ that sender MAY\n               supply\n"
- title: Printer Operations
  contents:
  - "Printer Operations\n                         Requests                       \
    \         Respon-\n                                                          \
    \       ses\n   Operation Attributes  PJ,    PU     CJ     GPA    GJ     PP, \
    \ All\n                         VJ     (O)    (O)    (R)    (R)    RP,  Opera\n\
    \                         (R)                                PP   tions\n    \
    \                                                        (O+)\n   Operation attributes--OPTIONAL\
    \ to be supplied by the sender:\n   status-message                           \
    \                      O\n   detailed-status-                                \
    \               O\n     message\n   document-access-                         \
    \                      O**\n     error\n   compression           R      R\n  \
    \ document-format       R      R             R\n   document-name         O   \
    \   O\n   document-natural-     O      O\n     language\n   ipp-attribute-   \
    \     R      R      R\n     fidelity\n   job-impressions       O      O      O\n\
    \   job-k-octets          O      O      O\n   job-media-sheets      O      O \
    \     O\n"
- title: Printer Operations
  contents:
  - "Printer Operations\n                         Requests                       \
    \         Respon-\n                                                          \
    \       ses\n   Operation Attributes  PJ,    PU     CJ     GPA    GJ     PP, \
    \ All\n                         VJ     (O)    (O)    (R)    (R)    RP,  Opera\n\
    \                         (R)                                PP   tions\n    \
    \                                                        (O+)\n   limit      \
    \                                       R\n   message\n   my-jobs            \
    \                               R\n   requested-attributes                   \
    \    R      R\n   which-jobs                                        R\n   Legend:\n\
    \   PJ, VJ:  Print-Job, Validate-Job\n   PU:  Print-URI\n   CJ:  Create-Job\n\
    \   GPA:  Get-Printer-Attributes\n   GJ:  Get-Jobs\n   PP, RP, PP:  Pause-Printer,\
    \ Resume-Printer, Purge-Printer\n   R  indicates a REQUIRED operation that MUST\
    \ be supported by the IPP\n      object (Printer or Job).  For attributes, R indicates\
    \ that the\n      attribute MUST be supported by the IPP object that supports\
    \ the\n      associated operation.\n   O  indicates an OPTIONAL operation or attribute\
    \ that MAY be supported\n      by the IPP object (Printer or Job).\n   +  indicates\
    \ that this is not an IPP/1.0 feature, but is only a part\n      of IPP/1.1 and\
    \ future versions of IPP.\n   *  \"job-id\" is REQUIRED only if used together\
    \ with \"printer-uri\" to\n      identify the target job; otherwise, \"job-uri\"\
    \ is REQUIRED.\n   ** \"document-access-error\" applies to the Print-URI response\
    \ only.\n   Table 3 - Summary of Job operation attributes that sender MUST supply\n"
- title: Job Operations
  contents:
  - "Job Operations\n                        Requests                            \
    \  Responses\n   Operation            SD     SU      CJ      GJA    HJ      All\n\
    \   Attributes           (O)    (O)     (R)     (R)    RJ, RJ Opera-\n       \
    \                                               (O+)   tions\n   Operation parameters--REQUIRED\
    \ to be supplied by the sender:\n   operation-id         R      R       R    \
    \   R      R\n   status-code                                                R\n\
    \   request-id           R      R       R       R      R       R\n   version-number\
    \       R      R       R       R      R       R\n   Operation attributes--REQUIRED\
    \ to be supplied by the sender:\n   attributes-charset   R      R       R    \
    \   R      R       R\n   attributes-natural-  R      R       R       R      R\
    \       R\n     language\n   document-uri                R\n   job-id*       \
    \       R      R       R       R      R\n   job-uri*             R      R    \
    \   R       R      R\n   last-document        R      R\n   printer-uri       \
    \   R      R       R       R      R\n   Operation attributes--RECOMMENDED to be\
    \ supplied by the sender:\n   job-name\n"
- title: Job Operations
  contents:
  - "Job Operations\n                        Requests                            \
    \  Responses\n   Operation            SD     SU      CJ      GJA    HJ      All\n\
    \   Attributes           (O)    (O)     (R)     (R)    RJ, RJ  Opera-\n      \
    \                                                (O+)    tions\n   requesting-user-\
    \     R      R       R       R      R\n     name\n   Legend:\n   SD:  Send-Document\n\
    \   SU:  Send-URI\n   CJ:  Cancel-Job\n   GJA:  Get-Job-Attributes\n   HJ, RJ,\
    \ RJ:  Hold-Job, Release-Job, Restart-Job\n   R  indicates a REQUIRED operation\
    \ that MUST be supported by the IPP\n      object (Printer or Job).  For attributes,\
    \ R indicates that the\n      attribute MUST be supported by the IPP object that\
    \ supports the\n      associated operation.\n   O  indicates an OPTIONAL operation\
    \ or attribute that MAY be supported\n      by the IPP object (Printer or Job).\n\
    \   +  indicates that this is not an IPP/1.0 feature, but is only a part\n   \
    \   of IPP/1.1 and future versions of IPP.\n   *  \"job-id\" is REQUIRED only\
    \ if used together with \"printer-uri\" to\n      identify the target job; otherwise,\
    \ \"job-uri\" is REQUIRED.\n   Table 4 - Summary of Job operation attributes that\
    \ sender MAY supply\n"
- title: Job Operations
  contents:
  - "Job Operations\n                      Requests                              \
    \   Responses\n   Operation          SD     SU     CJ     GJA    HJ,    SD   \
    \ All\n   Attributes         (O)    (O)    (R)    (R)    RJ,    (O)   Opera-\n\
    \                                                  RJ           tions\n      \
    \                                            (O+)\n   Operation attributes--OPTIONAL\
    \ to be supplied by the sender:\n   status-message                           \
    \                     O\n   detailed-status-                                 \
    \             O\n     message\n   document-access-                           \
    \                   O**\n     error\n   compression        R      R\n   document-format\
    \    R      R\n   document-name      O      O\n   document-natural-  O      O\n\
    \     language\n   ipp-attribute-\n     fidelity\n   job-impressions\n   job-k-octets\n\
    \   job-media-sheets\n"
- title: Job Operations
  contents:
  - "Job Operations\n                      Requests                              \
    \   Responses\n   Operation          SD     SU     CJ     GJA    HJ,    SD   \
    \ All\n   Attributes         (O)    (O)    (R)    (R)    RJ,    (O)   Opera-\n\
    \                                                  RJ           tions\n      \
    \                                            (O+)\n   limit\n   message      \
    \                    O             O      O\n   job-hold-until               \
    \                  R\n   my-jobs\n   requested-                              R\n\
    \     attributes\n   which-jobs\n   Legend:\n   SD:  Send-Document\n   SU:  Send-URI\n\
    \   CJ:  Cancel-Job\n   GJA:  Get-Job-Attributes\n   HJ, RJ, RJ:  Hold-Job, Release-Job,\
    \ Restart-Job\n   R  indicates a REQUIRED operation that MUST be supported by\
    \ the IPP\n      object (Printer or Job).  For attributes, R indicates that the\n\
    \      attribute MUST be supported by the IPP object that supports the\n     \
    \ associated operation.\n   O  indicates an OPTIONAL operation or attribute that\
    \ MAY be supported\n      by the IPP object (Printer or Job).\n   +  indicates\
    \ that this is not an IPP/1.0 feature, but is only a part\n      of IPP/1.1 and\
    \ future versions of IPP.\n   *  \"job-id\" is REQUIRED only if used together\
    \ with \"printer-uri\" to\n      identify the target job; otherwise, \"job-uri\"\
    \ is REQUIRED.\n   ** \"document-access-error\" applies to the Send-URI operation\
    \ only\n              Table 5 - Printer operation response attributes\n"
- title: Printer Operations
  contents:
  - "Printer Operations\n                  Response\n   Operation       PJ (R)  VJ\
    \ (R) PU (O)  CJ (O)  GPA     GJ (R) PP,\n   Attributes      SD (O)         SU\
    \ (O)          (R)            RP, PP\n                                       \
    \                          (O+)\n   job-uri         R              R       R\n\
    \   job-id          R              R       R\n   job-state       R           \
    \   R       R\n   job-state-      R+             R+      R+\n     reasons\n  \
    \ number-of-      O              O       O\n     intervening-\n     jobs\n   document-\
    \                      O\n     access-\n     error+\n   Legend:\n   PJ, SJ:  Print-Job,\
    \ Send-Document\n   VJ:  Validate-Job\n   PU, SU:  Print-URI, Send-URI\n   CJ:\
    \  Create-Job\n   GPA:  Get-Printer-Attributes\n   GJ:  Get-Jobs\n   PP, RP, PP:\
    \  Pause-Printer, Resume-Printer, Purge-Printer\n   R  indicates a REQUIRED operation\
    \ that MUST be supported by the IPP\n      object (Printer or Job).  For attributes,\
    \ R indicates that the\n      attribute MUST be supported by the IPP object that\
    \ supports the\n      associated operation.\n   O  indicates an OPTIONAL operation\
    \ or attribute that MAY be supported\n      by the IPP object (Printer or Job).\n"
- title: 3.1.2  Suggested Operation Processing Steps for IPP Objects
  contents:
  - "3.1.2  Suggested Operation Processing Steps for IPP Objects\n   This section\
    \ suggests the steps and error checks that an IPP object\n   MAY perform when\
    \ processing requests and returning responses.  An IPP\n   object MAY perform\
    \ some or all of the error checks.  However, some\n   implementations MAY choose\
    \ to be more forgiving than the error checks\n   shown here, in order to be able\
    \ to accept requests from non-\n   conforming clients.  Not performing all of\
    \ these error checks is a\n   so-called \"forgiving\" implementation.  On the\
    \ other hand, clients\n   that successfully submit requests to IPP objects that\
    \ do perform all\n   the error checks will be more likely to be able to interoperate\
    \ with\n   other IPP object implementations.  Thus an implementer of an IPP\n\
    \   object needs to decide whether to be a \"forgiving\" or a \"strict\"\n   implementation.\
    \  Therefore, the error status codes returned may\n   differ between implementations.\
    \  Consequentially, client SHOULD NOT\n   expect exactly the error code processing\
    \ described in this section.\n   When an IPP object receives a request, the IPP\
    \ object either accepts\n   or rejects the request. In order to determine whether\
    \ or not to\n   accept or reject the request, the IPP object SHOULD execute the\n\
    \   following steps.  The order of the steps may be rearranged and/or\n   combined,\
    \ including making one or multiple passes over the request.\n   A client MUST\
    \ supply requests that would pass all of the error checks\n   indicated here in\
    \ order to be a conforming client.  Therefore, a\n   client SHOULD supply requests\
    \ that are conforming, in order to avoid\n   being rejected by some IPP object\
    \ implementations and/or risking\n   different semantics by different implementations\
    \ of forgiving\n   implementations.  For example, a forgiving implementation that\n\
    \   accepts multiple occurrences of the same attribute, rather than\n   rejecting\
    \ the request might use the first occurrences, while another\n   might use the\
    \ last occurrence.  Thus such a non-conforming client\n   would get different\
    \ results from the two forgiving implementations.\n   In the following, processing\
    \ continues step by step until a \"RETURNS\n   the xxx status code ...\" statement\
    \ is encountered.  Error returns are\n   indicated by the verb: \"REJECTS\". \
    \ Since clients have difficulty\n   getting the status code before sending all\
    \ of the document data in a\n   Print-Job request, clients SHOULD use the Validate-Job\
    \ operation\n   before sending large documents to be printed, in order to validate\n\
    \   whether the IPP Printer will accept the job or not.\n   It is assumed that\
    \ security authentication and authorization has\n   already taken place at a lower\
    \ layer.\n"
- title: 3.1.2.1  Suggested Operation Processing Steps for all Operations
  contents:
  - "3.1.2.1  Suggested Operation Processing Steps for all Operations\n   This section\
    \ is intended to apply to all operations.  The next\n   section contains the additional\
    \ steps for the Print-Job, Validate-\n   Job, Print-URI, Create-Job, Send-Document,\
    \ and Send-URI operations\n   that create jobs, adds documents, and validates\
    \ jobs.\n   IIG Sect #         Flow                 IPP error status codes\n \
    \  ----------         ----                 ----------------------\n          \
    \              |\n                        v          err\n   3.1.2.1.1   <Validate\
    \ version>  --> server-error-version-not-\n                                  \
    \     supported\n                      ok|\n                        v        \
    \  err\n   3.1.2.1.2  <Validate operation> --> server-error-operation-not-\n \
    \                                      supported\n                      ok|\n\
    \                        v          err\n   3.1.2.1.4.1- <Validate presence> -->\
    \ client-error-bad-request\n   3.1.2.1.4.2    <of attributes>\n              \
    \        ok|\n                        v          err\n   3.1.2.1.4.3 <Validate\
    \ presence> --> client-error-bad-request\n               <of operation attr>\n\
    \                      ok|\n                        v          err\n   3.1.2.1.5\
    \  <Validate values of> --> client-error-bad-request\n               <operation\
    \ attrs>       client-error-request-value-\n                                 \
    \      too-long\n             <(length, tag, range,>\n                 <multi-value)>\n\
    \                      ok|\n                        v          err\n   3.1.2.1.5\
    \    <Validate values>  --> client-error-bad-request\n             <with supported\
    \ values>   client-error-charset-not-\n                                      \
    \ supported\n                      ok|              client-error-attributes-or-\n\
    \                                       values-\n                        |   \
    \                        not-supported\n                        v          err\n\
    \   3.1.2.1.6 <Validate optionally> --> client-error-bad-request\n           \
    \     <operation attr>       client-error-natural-language-\n                \
    \                       not-supported\n                        |             \
    \ client-error-request-value-\n                                       too-long\n\
    \                        |              client-error-attributes-or-\n        \
    \                               values-not-supported\n"
- title: 3.1.2.1.1   Validate version number
  contents:
  - "3.1.2.1.1   Validate version number\n   Every request and every response contains\
    \ the \"version-number\"\n   attribute.  The value of this attribute is the major\
    \ and minor\n   version number of the syntax and semantics that the client and\
    \ IPP\n   object is using, respectively.  The \"version-number\" attribute\n \
    \  remains in a fixed position across all future versions so that all\n   clients\
    \ and IPP object that support future versions can determine\n   which version\
    \ is being used.  The IPP object checks to see if the\n   major version number\
    \ supplied in the request is supported.  If not,\n   the Printer object REJECTS\
    \ the request and RETURNS the 'server-\n   error-version-not-supported' status\
    \ code in the response.  The IPP\n   object returns in the \"version-number\"\
    \ response attribute the major\n   and minor version for the error response. \
    \ Thus the client can learn\n   at least one major and minor version that the\
    \ IPP object supports.\n   The IPP object is encouraged to return the closest\
    \ version number to\n   the one supplied by the client.\n   The checking of the\
    \ minor version number is implementation dependent,\n   however if the client-supplied\
    \ minor version is explicitly supported,\n   the IPP object MUST respond using\
    \ that identical minor version\n   number.  If the major version number matches,\
    \ but the minor version\n   number does not, the Printer SHOULD accept and attempt\
    \ to process the\n   request, or MAY reject the request and return the 'server-error-\n\
    \   version-not-supported' status code.  In all cases, the Printer MUST\n   return\
    \ the nearest version number that it supports.  For example,\n   suppose that\
    \ an IPP/1.2 Printer supports versions '1.1' and '1.2'.\n   The following responses\
    \ are conforming:\n               Table 6 - Examples of validating IPP version\n\
    \      Client supplies   Printer Accept Request?   Printer returns\n      1.0\
    \               yes (SHOULD)              1.1\n      1.0               no (SHOULD\
    \ NOT)           1.1\n      1.1               yes (MUST)                1.1\n\
    \      1.2               yes (MUST)                1.2\n      1.3            \
    \   yes (SHOULD)              1.2\n      1.3               no (SHOULD NOT)   \
    \        1.2\n   It is advantageous for Printers to support both IPP/1.1 and IPP/1.0,\n\
    \   so that they can interoperate with either client implementations.\n   Some\
    \ implementations may allow an Administrator to explicitly disable\n   support\
    \ for one or the other by setting the \"ipp-versions-supported\"\n   Printer description\
    \ attribute.\n   Likewise, it is advantageous for clients to support both versions\
    \ to\n   allow interoperability with new and legacy Printers.\n"
- title: 3.1.2.1.2   Validate operation identifier
  contents:
  - "3.1.2.1.2   Validate operation identifier\n   The Printer object checks to see\
    \ if the \"operation-id\" attribute\n   supplied by the client is supported as\
    \ indicated in the Printer\n   object's \"operations-supported\" attribute.  If\
    \ not, the Printer\n   REJECTS the request and returns the 'server-error-operation-not-\n\
    \   supported' status code in the response.\n"
- title: 3.1.2.1.3   Validate the request identifier
  contents:
  - "3.1.2.1.3   Validate the request identifier\n   The Printer object SHOULD NOT\
    \ check to see if the \"request-id\"\n   attribute supplied by the client is in\
    \ range: between 1 and 2**31 - 1\n   (inclusive), but copies all 32 bits.\n  \
    \ Note: The \"version-number\", \"operation-id\", and the \"request-id\"\n   parameters\
    \ are in fixed octet positions in the IPP/1.1 encoding.  The\n   \"version-number\"\
    \ parameter will be the same fixed octet position in\n   all versions of the protocol.\
    \  These fields are validated before\n   proceeding with the rest of the validation.\n"
- title: 3.1.2.1.4   Validate attribute group and attribute presence and order
  contents:
  - "3.1.2.1.4   Validate attribute group and attribute presence and order\n   The\
    \ order of the following validation steps depends on\n   implementation.\n"
- title: 3.1.2.1.4.1   Validate the presence and order of attribute groups
  contents:
  - "3.1.2.1.4.1   Validate the presence and order of attribute groups\n   Client\
    \ requests and IPP object responses contain attribute groups\n   that Section\
    \ 3 requires to be present and in a specified order.  An\n   IPP object verifies\
    \ that the attribute groups are present and in the\n   correct order in requests\
    \ supplied by clients (attribute groups\n   without an * in the following tables).\n\
    \   If an IPP object receives a request with (1) required attribute\n   groups\
    \ missing, or (2) the attributes groups are out of order, or (3)\n   the groups\
    \ are repeated, the IPP object REJECTS the request and\n   RETURNS the 'client-error-bad-request'\
    \ status code.  For example, it\n   is an error for the Job Template Attributes\
    \ group to occur before the\n   Operation Attributes group, for the Operation\
    \ Attributes group to be\n   omitted, or for an attribute group to occur more\
    \ than once, except in\n   the Get-Jobs response.\n   Since this kind of attribute\
    \ group error is most likely to be an\n   error detected by a client developer\
    \ rather than by a customer, the\n   IPP object NEED NOT return an indication\
    \ of which attribute group was\n   in error in either the Unsupported Attributes\
    \ group or the Status\n   Message.  Also, the IPP object NEED NOT find all attribute\
    \ group\n   errors before returning this error.\n"
- title: 3.1.2.1.4.2   Ignore unknown attribute groups in the expected position
  contents:
  - "3.1.2.1.4.2   Ignore unknown attribute groups in the expected position\n   Future\
    \ attribute groups may be added to the specification at the end\n   of requests\
    \ just before the Document Content and at the end of\n   response, except for\
    \ the Get-Jobs response, where it maybe there or\n   before the first job attributes\
    \ returned.  If an IPP object receives\n   an unknown attribute group in these\
    \ positions, it ignores the entire\n   group, rather than returning an error,\
    \ since that group may be a new\n   group in a later minor version of the protocol\
    \ that can be ignored.\n   (If the new attribute group cannot be ignored without\
    \ confusing the\n   client, the major version number would have been increased\
    \ in the\n   protocol document and in the request).  If the unknown group occurs\n\
    \   in a different position, the IPP object REJECTS the request and\n   RETURNS\
    \ the 'client-error-bad-request' status code.\n   Clients also ignore unknown\
    \ attribute groups returned in a response.\n   Note:  By validating that requests\
    \ are in the proper form, IPP\n   objects force clients to use the proper form\
    \ which, in turn,\n   increases the chances that customers will be able to use\
    \ such clients\n   from multiple vendors with IPP objects from other vendors.\n"
- title: 3.1.2.1.4.3   Validate the presence of a single occurrence of required
  contents:
  - "3.1.2.1.4.3   Validate the presence of a single occurrence of required\n    \
    \          Operation attributes\n   Client requests and IPP object responses contain\
    \ Operation attributes\n   that [RFC2911] Section 3 requires to be present.  Attributes\
    \ within a\n   group may be in any order, except for the ordering of target,\n\
    \   charset, and natural languages attributes.  These attributes MUST be\n   first,\
    \ and MUST be supplied in the following order: charset, natural\n   language,\
    \ and then target.  An IPP object verifies that the\n   attributes that Section\
    \ 4 requires to be supplied by the client have\n   been supplied in the request\
    \ (attributes without an * in the\n   following tables).  An asterisk (*) indicates\
    \ groups and Operation\n   attributes that the client may omit in a request or\
    \ an IPP object may\n   omit in a response.\n   If an IPP object receives a request\
    \ with required attributes missing\n   or repeated from a group or in the wrong\
    \ position, the behavior of\n   the IPP object is IMPLEMENTATION DEPENDENT.  Some\
    \ of the possible\n   implementations are:\n      REJECTS the request and RETURNS\
    \ the 'client-error-bad-request'\n      status code\n      accepts the request\
    \ and uses the first occurrence of the attribute\n      no matter where it is\n\
    \      accepts the request and uses the last occurrence of the attribute\n   \
    \   no matter where it is\n      accept the request and assume some default value\
    \ for the missing\n      attribute\n   Therefore, client MUST send conforming\
    \ requests, if they want to\n   receive the same behavior from all IPP object\
    \ implementations.  For\n   example, it is an error for the \"attributes-charset\"\
    \ or \"attributes-\n   natural-language\" attribute to be omitted in any operation\
    \ request,\n   or for an Operation attribute to be supplied in a Job Template\
    \ group\n   or a Job Template attribute to be supplied in an Operation Attribute\n\
    \   group in a create request.  It is also an error to supply the\n   \"attributes-charset\"\
    \ attribute twice.\n   Since these kinds of attribute errors are most likely to\
    \ be detected\n   by a client developer rather than by a customer, the IPP object\
    \ NEED\n   NOT return an indication of which attribute was in error in either\n\
    \   the Unsupported Attributes group or the Status Message.  Also, the\n   IPP\
    \ object NEED NOT find all attribute errors before returning this\n   error.\n\
    \   The following tables list all the attributes for all the operations\n   by\
    \ attribute group in each request and each response.  The order of\n   the groups\
    \ is the order that the client supplies the groups as\n   specified in [RFC2911]\
    \ Section 3.  The order of the attributes within\n   a group is arbitrary, except\
    \ as noted for some of the special\n   operation attributes (charset, natural\
    \ language, and target).  The\n   tables below use the following notation:\n \
    \     R     indicates a REQUIRED attribute or operation that an IPP\n        \
    \    object MUST support\n      O     indicates an OPTIONAL attribute or operation\
    \ that an IPP\n            object NEED NOT support\n      *     indicates that\
    \ a client MAY omit the attribute in a request\n            and that an IPP object\
    \ MAY omit the attribute in a response.\n            The absence of an * means\
    \ that a client MUST supply the\n            attribute in a request and an IPP\
    \ object MUST supply the\n            attribute in a response.\n      +     indicates\
    \ that this is not a IPP/1.0 operation, but is only\n            a part of IPP/1.1\
    \ and future versions of IPP.\n   Operation Requests\n   The tables below show\
    \ the attributes in their proper attribute groups\n   for operation requests:\n\
    \   Note: All operation requests contain \"version-number\", \"operation-\n  \
    \ id\", and \"request-id\" parameters.\n   Print-Job Request (R):\n     Group\
    \ 1: Operation Attributes (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          printer-uri (R)\n          requesting-user-name (R*)\n      \
    \    job-name (R*)\n          ipp-attribute-fidelity (R*)\n          document-name\
    \ (R*)\n          document-format (R*)\n          document-natural-language (O*)\n\
    \          compression (R*)\n          job-k-octets (O*)\n          job-impressions\
    \ (O*)\n          job-media-sheets (O*)\n     Group 2: Job Template Attributes\
    \ (R*)\n          <Job Template attributes> (O*)\n               (see [RFC2911]\
    \ Section 4.2)\n     Group 3: Document Content (R)\n          <document content>\n\
    \   Validate-Job Request (R):\n     Group 1: Operation Attributes (R)\n      \
    \    attributes-charset (R)\n          attributes-natural-language (R)\n     \
    \     printer-uri (R)\n          requesting-user-name (R*)\n          job-name\
    \ (R*)\n          ipp-attribute-fidelity (R*)\n          document-name (R*)\n\
    \          document-format (R*)\n          document-natural-language (O*)\n  \
    \        compression (R*)\n          job-k-octets (O*)\n          job-impressions\
    \ (O*)\n          job-media-sheets (O*)\n     Group 2: Job Template Attributes\
    \ (R*)\n          <Job Template attributes> (O*)\n               (see [RFC2911]\
    \ Section 4.2)\n   Print-URI Request (O):\n     Group 1: Operation Attributes\
    \ (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          printer-uri (R)\n          document-uri (R)\n          requesting-user-name\
    \ (R*)\n          job-name (R*)\n          ipp-attribute-fidelity (R*)\n     \
    \     document-name (R*)\n          document-format (R*)\n          document-natural-language\
    \ (O*)\n          compression (R*)\n          job-k-octets (O*)\n          job-impressions\
    \ (O*)\n          job-media-sheets (O*)\n     Group 2: Job Template Attributes\
    \ (R*)\n          <Job Template attributes> (O*) (see\n               (see [RFC2911]\
    \ Section 4.2)\n   Create-Job Request (O):\n     Group 1: Operation Attributes\
    \ (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          printer-uri (R)\n          requesting-user-name (R*)\n      \
    \    job-name (R*)\n          ipp-attribute-fidelity (R*)\n          job-k-octets\
    \ (O*)\n          job-impressions (O*)\n          job-media-sheets (O*)\n    \
    \ Group 2: Job Template Attributes (R*)\n          <Job Template attributes> (O*)\
    \ (see\n               (see [RFC2911] Section 4.2)\n   Get-Printer-Attributes\
    \ Request (R):\n     Group 1: Operation Attributes (R)\n          attributes-charset\
    \ (R)\n          attributes-natural-language (R)\n          printer-uri (R)\n\
    \          requesting-user-name (R*)\n          requested-attributes (R*)\n  \
    \        document-format (R*)\n   Get-Jobs Request (R):\n     Group 1: Operation\
    \ Attributes (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          printer-uri (R)\n          requesting-user-name (R*)\n      \
    \    limit (R*)\n          requested-attributes (R*)\n          which-jobs (R*)\n\
    \          my-jobs (R*)\n   Send-Document Request (O):\n     Group 1: Operation\
    \ Attributes (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          (printer-uri & job-id) | job-uri (R)\n          last-document\
    \ (R)\n          requesting-user-name (R*)\n          document-name (R*)\n   \
    \       document-format (R*)\n          document-natural-language (O*)\n     \
    \     compression (R*)\n     Group 2: Document Content (R*)\n          <document\
    \ content>\n   Send-URI Request (O):\n     Group 1: Operation Attributes (R)\n\
    \          attributes-charset (R)\n          attributes-natural-language (R)\n\
    \          (printer-uri & job-id) | job-uri (R)\n          last-document (R)\n\
    \          document-uri (R)\n          requesting-user-name (R*)\n          document-name\
    \ (R*)\n          document-format (R*)\n          document-natural-language (O*)\n\
    \          compression (R*)\n   Cancel-Job Request (R):\n   Release-Job Request\
    \ (O+):\n     Group 1: Operation Attributes (R)\n          attributes-charset\
    \ (R)\n          attributes-natural-language (R)\n          (printer-uri & job-id)\
    \ | job-uri (R)\n          requesting-user-name (R*)\n          message (O*)\n\
    \   Get-Job-Attributes Request (R):\n     Group 1: Operation Attributes (R)\n\
    \          attributes-charset (R)\n          attributes-natural-language (R)\n\
    \          (printer-uri & job-id) | job-uri (R)\n          requesting-user-name\
    \ (R*)\n          requested-attributes (R*)\n   Pause-Printer Request (O+):\n\
    \   Resume-Printer Request (O+):\n   Purge-Printer Request (O+):\n     Group 1:\
    \ Operation Attributes (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          printer-uri (R)\n          requesting-user-name (R*)\n   Hold-Job\
    \ Request (O+):\n   Restart-Job Request (O+):\n     Group 1: Operation Attributes\
    \ (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          (printer-uri & job-id) | job-uri (R)\n          requesting-user-name\
    \ (R*)\n          job-hold-until (R*)\n          message (O*)\n   Operation Responses\n\
    \   The tables below show the response attributes in their proper\n   attribute\
    \ groups for responses.\n   Note: All operation responses contain \"version-number\"\
    , \"status-\n   code\", and \"request-id\" parameters.\n   Print-Job Response\
    \ (R):\n   Create-Job Response (O):\n   Send-Document Response (O):\n     Group\
    \ 1: Operation Attributes (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          status-message (O*)\n          detailed-status-message (O*)\n\
    \     Group 2: Unsupported Attributes (R*) (see Note 3)\n      n    <unsupported\
    \ attributes> (R*)\n     Group 3: Job Object Attributes(R*) (see Note 2)\n   \
    \       job-uri (R)\n          job-id (R)\n          job-state (R)\n         \
    \ job-state-reasons (O* | R+)\n          job-state-message (O*)\n          number-of-intervening-jobs\
    \ (O*)\n   Validate-Job Response (R):\n   Cancel-Job Response (R):\n   Hold-Job\
    \ Response (O+):\n   Release-Job Response (O+):\n   Restart-Job Response (O+):\n\
    \     Group 1: Operation Attributes (R)\n          attributes-charset (R)\n  \
    \        attributes-natural-language (R)\n          status-message (O*)\n    \
    \      detailed-status-message (O*)\n     Group 2: Unsupported Attributes (R*)\
    \ (see Note 3)\n          <unsupported attributes> (R*)\n   Print-URI Response\
    \ (O):\n   Send-URI Response (O):\n     Group 1: Operation Attributes (R)\n  \
    \        attributes-charset (R)\n          attributes-natural-language (R)\n \
    \         status-message (O*)\n          detailed-status-message (O*)\n      \
    \    document-access-error (O*)\n     Group 2: Unsupported Attributes (R*) (see\
    \ Note 3)\n          <unsupported attributes> (R*)\n     Group 3: Job Object Attributes(R*)\
    \ (see Note 2)\n          job-uri (R)\n          job-id (R)\n          job-state\
    \ (R)\n          job-state-reasons (O* | R+)\n          job-state-message (O*)\n\
    \          number-of-intervening-jobs (O*)\n   Get-Printer-Attributes Response\
    \ (R):\n     Group 1: Operation Attributes (R)\n          attributes-charset (R)\n\
    \          attributes-natural-language (R)\n          status-message (O*)\n  \
    \        detailed-status-message (O*)\n     Group 2: Unsupported Attributes (R*)\
    \ (see Note 4)\n          <unsupported attributes> (R*)\n     Group 3: Printer\
    \ Object Attributes(R*) (see Note 2)\n          <requested attributes> (R*)\n\
    \   Get-Jobs Response (R):\n     Group 1: Operation Attributes (R)\n         \
    \ attributes-charset (R)\n          attributes-natural-language (R)\n        \
    \  status-message (O*)\n          detailed-status-message (O*)\n     Group 2:\
    \ Unsupported Attributes (R*) (see Note 4)\n          <unsupported attributes>\
    \ (R*)\n     Group 3: Job Object Attributes(R*) (see Note 2, 5)\n          <requested\
    \ attributes> (R*)\n   Get-Job-Attributes Response (R):\n     Group 1: Operation\
    \ Attributes (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          status-message (O*)\n          detailed-status-message (O*)\n\
    \     Group 2: Unsupported Attributes (R*) (see Note 4)\n          <unsupported\
    \ attributes> (R*)\n     Group 3: Job Object Attributes(R*) (see Note 2)\n   \
    \       <requested attributes> (R*)\n   Pause-Printer Response (O+):\n   Resume-Printer\
    \ Response (O+):\n   Purge-Printer Response (O+):\n     Group 1: Operation Attributes\
    \ (R)\n          attributes-charset (R)\n          attributes-natural-language\
    \ (R)\n          status-message (O*)\n          detailed-status-message (O*)\n\
    \     Group 2: Unsupported Attributes (R*) (see Note 4)\n          <unsupported\
    \ attributes> (R*)\n   Note 2 - the Job Object Attributes and Printer Object Attributes\
    \ are\n   returned only if the IPP object returns one of the success status\n\
    \   codes.\n   Note 3 - the Unsupported Attributes Group is present only if the\n\
    \   client included some Operation and/or Job Template attributes or\n   values\
    \ that the Printer doesn't support whether a success or an error\n   return.\n\
    \   Note 4 - the Unsupported Attributes Group is present only if the\n   client\
    \ included some Operation attributes that the Printer doesn't\n   support whether\
    \ a success or an error return.\n   Note 5:  for the Get-Jobs operation the response\
    \ contains a separate\n   Job Object Attributes group 3 to N containing requested-attributes\n\
    \   for each job object in the response.\n"
- title: 3.1.2.1.5   Validate the values of the REQUIRED Operation attributes
  contents:
  - "3.1.2.1.5   Validate the values of the REQUIRED Operation attributes\n   An IPP\
    \ object validates the values supplied by the client of the\n   REQUIRED Operation\
    \ attribute that the IPP object MUST support.  The\n   next section specifies\
    \ the validation of the values of the OPTIONAL\n   Operation attributes that IPP\
    \ objects MAY support.\n   The IPP object performs the following syntactic validation\
    \ checks of\n   each Operation attribute value:\n      a) that the length of each\
    \ Operation attribute value is correct\n         for the attribute syntax tag\
    \ supplied by the client according\n         to [RFC2911] Section 4.1,\n     \
    \ b) that the attribute syntax tag is correct for that Operation\n         attribute\
    \ according to [RFC2911] Section 3,\n      c) that the value is in the range specified\
    \ for that Operation\n         attribute according to [RFC2911] Section 3,\n \
    \     d) that multiple values are supplied by the client only for\n         operation\
    \ attributes that are multi-valued, i.e., that are\n         1setOf X according\
    \ to [RFC2911] Section 3.\n   If any of these checks fail, the IPP object REJECTS\
    \ the request and\n   RETURNS the 'client-error-bad-request' or the 'client-error-request-\n\
    \   value-too-long' status code.  Since such an error is most likely to\n   be\
    \ an error detected by a client developer, rather than by an end-\n   user, the\
    \ IPP object NEED NOT return an indication of which attribute\n   had the error\
    \ in either the Unsupported Attributes Group or the\n   Status Message.  The description\
    \ for each of these syntactic checks\n   is explicitly expressed in the first\
    \ IF statement in the following\n   table.\n   In addition, the IPP object checks\
    \ each Operation attribute value\n   against some Printer object attribute or\
    \ some hard-coded value if\n   there is no \"xxx-supported\" Printer object attribute\
    \ defined.  If its\n   value is not among those supported or is not in the range\
    \ supported,\n   then the IPP object REJECTS the request and RETURNS the error\
    \ status\n   code indicated in the table by the second IF statement.  If the value\n\
    \   of the Printer object's \"xxx-supported\" attribute is 'no-value'\n   (because\
    \ the system administrator hasn't configured a value), the\n   check always fails.\n\
    \   -----------------------------------------------\n   attributes-charset (charset)\n\
    \      IF NOT a single non-empty 'charset' value, REJECT/RETURN 'client-\n   \
    \   error-bad-request'.\n      IF the value length is greater than 63 octets,\
    \ REJECT/RETURN\n      'client-error-request-value-too-long'.\n      IF NOT in\
    \ the Printer object's \"charset-supported\" attribute,\n      REJECT/RETURN \"\
    client-error-charset-not-supported\".\n   attributes-natural-language(naturalLanguage)\n\
    \      IF NOT a single non-empty 'naturalLanguage' value, REJECT/RETURN\n    \
    \  'client-error-bad-request'.\n      IF the value length is greater than 63 octets,\
    \ REJECT/RETURN\n      'client-error-request-value-too-long'.\n      ACCEPT the\
    \ request even if not a member of the set in the Printer\n      object's \"generated-natural-language-supported\"\
    \ attribute.  If the\n      supplied value is not a member of the Printer object's\n\
    \      \"generated-natural-language-supported\" attribute, use the Printer\n \
    \     object's \"natural-language- configured\" value.\n   requesting-user-name\n\
    \      IF NOT a single 'name' value, REJECT/RETURN 'client-error-bad-\n      request'.\n\
    \      IF the value length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF the IPP object can obtain a better-authenticated name, use it\n    \
    \  instead.\n   job-name(name)\n      IF NOT a single 'name' value, REJECT/RETURN\
    \ 'client-error-bad-\n      request'.\n      IF the value length is greater than\
    \ 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n  \
    \    IF NOT supplied by the client, the Printer object creates a name\n      from\
    \ the document-name or document-uri.\n   document-name (name)\n      IF NOT a\
    \ single 'name' value, REJECT/RETURN 'client-error-bad-\n      request'.\n   \
    \   IF the value length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \   ipp-attribute-fidelity (boolean)\n      IF NEITHER a single 'true' NOR a single\
    \ 'false' 'boolean' value,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF the value length is NOT equal to 1 octet, REJECT/RETURN\n      'client-error-request-value-too-long'\n\
    \      IF NOT supplied by the client, the IPP object assumes the value\n     \
    \ 'false'.\n   document-format (mimeMediaType)\n      IF NOT a single non-empty\
    \ 'mimeMediaType' value, REJECT/RETURN\n      'client-error-bad-request'.\n  \
    \    IF the value length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"document-format-supported\"\n      attribute,\
    \ REJECT/RETURN 'client-error-document-format-not-\n      supported'\n      IF\
    \ NOT supplied by the client, the IPP object assumes the value of\n      the Printer\
    \ object's \"document-format-default\" attribute.\n   document-uri (uri)\n   \
    \   IF NOT a single non-empty 'uri' value, REJECT/RETURN 'client-\n      error-bad-request'.\n\
    \      IF the value length is greater than 1023 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF the URI syntax is not valid, REJECT/RETURN 'client-error-bad-\n    \
    \  request'.\n      If the client-supplied URI scheme is not supported, i.e.,\
    \ the\n      value is not in the Printer object's referenced-uri-scheme-\n   \
    \   supported\" attribute, the Printer object MUST reject the request\n      and\
    \ return the 'client-error-uri-scheme-not-supported' status\n      code. The Printer\
    \ object MAY check to see if the document exists\n      and is accessible.  If\
    \ the document is not found or is not\n      accessible, REJECT/RETURN 'client-error-not\
    \ found'.\n   last-document (boolean)\n      IF NEITHER a single 'true' NOR a\
    \ single 'false' 'boolean' value,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF the value length is NOT equal to 1 octet, REJECT/RETURN\n      'client-error-request-value-too-long'\n\
    \   job-id (integer(1:MAX))\n      IF NOT an single 'integer' value equal to 4\
    \ octets AND in the\n      range 1 to MAX, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT a job-id of an existing Job object, REJECT/RETURN 'client-\n   \
    \   error-not-found' or 'client-error-gone' status code, if keep track\n     \
    \ of recently deleted jobs.\n   requested-attributes (1setOf keyword)\n      IF\
    \ NOT one or more 'keyword' values, REJECT/RETURN 'client-\n      error-bad-request'.\n\
    \      IF the value length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      Ignore unsupported values, which are the keyword names of\n      unsupported\
    \ attributes.  Don't bother to copy such requested\n      (unsupported) attributes\
    \ to the Unsupported Attribute response\n      group since the response will not\
    \ return them.\n   which-jobs (type2 keyword)\n      IF NOT a single 'keyword'\
    \ value, REJECT/RETURN 'client-error-bad-\n      request'.\n      IF the value\
    \ length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NEITHER 'completed' NOR 'not-completed', copy the attribute and\n  \
    \    the unsupported value to the Unsupported Attributes response group\n    \
    \  and REJECT/RETURN 'client-error-attributes-or-values-not-\n      supported'.\n\
    \      Note: a Printer still supports the 'completed' value even if it\n     \
    \ keeps no completed/canceled/aborted jobs:  by returning no jobs\n      when\
    \ so queried.\n      IF NOT supplied by the client, the IPP object assumes the\
    \ 'not-\n      completed' value.\n   my-jobs (boolean)\n      IF NEITHER a single\
    \ 'true' NOR a single 'false' 'boolean' value,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF the value length is NOT equal to 1 octet, REJECT/RETURN\n      'client-error-request-value-too-long'\n\
    \      IF NOT supplied by the client, the IPP object assumes the 'false'\n   \
    \   value.\n   limit (integer(1:MAX))\n      IF NOT a single 'integer' value equal\
    \ to 4 octets AND in the range\n      1 to MAX, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT supplied by the client, the IPP object returns all jobs, no\n  \
    \    matter how many.\n   -----------------------------------------------\n"
- title: 3.1.2.1.6   Validate the values of the OPTIONAL Operation attributes
  contents:
  - "3.1.2.1.6   Validate the values of the OPTIONAL Operation attributes\n   OPTIONAL\
    \ Operation attributes are those that an IPP object MAY\n   support.  An IPP object\
    \ validates the values of the OPTIONAL\n   attributes supplied by the client.\
    \  The IPP object performs the same\n   syntactic validation checks for each OPTIONAL\
    \ attribute value as in\n   Section 3.1.2.1.5.  As in Section 3.1.2.1.5, if any\
    \ fail, the IPP\n   object REJECTS the request and RETURNS the 'client-error-bad-request'\n\
    \   or the 'client-error-request-value-too-long' status code.\n   In addition,\
    \ the IPP object checks each Operation attribute value\n   against some Printer\
    \ attribute or some hard-coded value if there is\n   no \"xxx-supported\" Printer\
    \ attribute defined.  If its value is not\n   among those supported or is not\
    \ in the range supported, then the IPP\n   object REJECTS the request and RETURNS\
    \ the error status code\n   indicated in the table.  If the value of the Printer\
    \ object's \"xxx-\n   supported\" attribute is 'no-value' (because the system\
    \ administrator\n   hasn't configured a value), the check always fails.\n   If\
    \ the IPP object doesn't recognize/support an attribute, the IPP\n   object treats\
    \ the attribute as an unknown or unsupported attribute\n   (see the last row in\
    \ the table below).\n   -----------------------------------------------\n   document-natural-language\
    \ (naturalLanguage)\n      IF NOT a single non-empty 'naturalLanguage' value,\
    \ REJECT/RETURN\n      'client-error-bad-request'.\n      IF the value length\
    \ is greater than 63 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NOT a value that the Printer object supports in document\n      formats,\
    \ (no corresponding \"xxx-supported\" Printer attribute),\n      REJECT/RETURN\
    \ 'client-error-natural-language-not-supported'.\n   compression (type3 keyword)\n\
    \      IF NOT a single 'keyword' value, REJECT/RETURN 'client-error-bad-\n   \
    \   request'.\n      IF the value length is greater than 255 octets, REJECT/RETURN\n\
    \      'client-error-request-value-too-long'.\n      IF NOT in the Printer object's\
    \ \"compression-supported\" attribute,\n      REJECT/RETURN 'client-error-compression-not-supported'.\n\
    \      Note to IPP/1.0 implementers:  Support for the \"compression\"\n      attribute\
    \ was optional in IPP/1.0 and was changed to REQUIRED in\n      IPP/1.1.  However,\
    \ an IPP/1.0 object SHOULD at least check for the\n      \"compression\" attribute\
    \ being present and reject the create\n      request, if they don't support \"\
    compression\".  Not checking is a\n      bug, since the data will be unintelligible.\n\
    \   job-k-octets (integer(0:MAX))\n      IF NOT a single 'integer' value equal\
    \ to 4 octets, REJECT/RETURN\n      'client-error-bad-request'.\n      IF NOT\
    \ in the range of the Printer object's \"job-k-octets-\n      supported\" attribute,\
    \ copy the attribute and the unsupported value\n      to the Unsupported Attributes\
    \ response group and REJECT/RETURN\n      'client-error-attributes-or-values-not-supported'.\n\
    \   job-impressions (integer(0:MAX))\n      IF NOT a single 'integer' value equal\
    \ to 4 octets, REJECT/RETURN\n      'client-error-bad-request'.\n      IF NOT\
    \ in the range of the Printer object's \"job-impressions-\n      supported\" attribute,\
    \ copy the attribute and the unsupported value\n      to the Unsupported Attributes\
    \ response group and REJECT/RETURN\n      'client-error-attributes-or-values-not-supported'.\n\
    \   job-media-sheets (integer(0:MAX))\n      IF NOT a single 'integer' value equal\
    \ to 4 octets, REJECT/RETURN\n      'client-error-bad-request'.\n      IF NOT\
    \ in the range of the Printer object's \"job-media-sheets-\n      supported\"\
    \ attribute, copy the attribute and the unsupported value\n      to the Unsupported\
    \ Attributes response group and REJECT/RETURN\n      'client-error-attributes-or-values-not-supported'.\n\
    \   message (text(127))\n      IF NOT a single 'text' value, REJECT/RETURN 'client-error-bad-\n\
    \      request'.\n      IF the value length is greater than 127 octets, REJECT/RETURN\n\
    \      'client-error-request-value-too-long'.\n   unknown or unsupported attribute\n\
    \      IF the attribute syntax supplied by the client is supported but\n     \
    \ the length is not legal for that attribute syntax, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      ELSE copy the attribute and value to the Unsupported Attributes\n     \
    \ response group and change the attribute value to the \"out-of-band\"\n     \
    \ 'unsupported' value, but otherwise ignore the attribute.\n   Note: Future Operation\
    \ attributes may be added to the protocol\n   specification that may occur anywhere\
    \ in the specified group.  When\n   the operation is otherwise successful, the\
    \ IPP object returns the\n   'successful-ok-ignored-or-substituted-attributes'\
    \ status code.\n   Ignoring unsupported Operation attributes in all operations\
    \ is\n   analogous to the handling of unsupported Job Template attributes in\n\
    \   the create and Validate-Job operations when the client supplies the\n   \"\
    ipp-attribute-fidelity\" Operation attribute with the 'false' value.\n   This\
    \ last rule is so that we can add OPTIONAL Operation attributes to\n   future\
    \ versions of IPP so that older clients can inter-work with new\n   IPP objects\
    \ and newer clients can inter-work with older IPP objects.\n   (If the new attribute\
    \ cannot be ignored without performing\n   unexpectedly, the major version number\
    \ would have been increased in\n   the protocol document and in the request).\
    \  This rule for Operation\n   attributes is independent of the value of the \"\
    ipp-attribute-\n   fidelity\" attribute.  For example, if an IPP object doesn't\
    \ support\n   the OPTIONAL \"job-k-octets\" attribute', the IPP object treats\
    \ \"job-\n   k-octets\" as an unknown attribute and only checks the length for\
    \ the\n   'integer' attribute syntax supplied by the client.  If it is not four\n\
    \   octets, the IPP object REJECTS the request and RETURNS the 'client-\n   error-bad-request'\
    \ status code, else the IPP object copies the\n   attribute to the Unsupported\
    \ Attribute response group, setting the\n   value to the \"out-of-band\" 'unsupported'\
    \ value, but otherwise ignores\n   the attribute.\n"
- title: 3.1.2.2 Suggested Additional Processing Steps for Operations that
  contents:
  - "3.1.2.2 Suggested Additional Processing Steps for Operations that\n        Create/Validate\
    \ Jobs and Add Documents\n   This section in combination with the previous section\
    \ recommends the\n   processing steps for the Print-Job, Validate-Job, Print-URI,\
    \ Create-\n   Job, Send-Document, and Send-URI operations that IPP objects SHOULD\n\
    \   use.  These are the operations that create jobs, validate a Print-Job\n  \
    \ request, and add documents to a job.\n   IIG Sect #         Flow           \
    \      IPP error status codes\n   ----------         ----                 ----------------------\n\
    \                        |\n                        v             No\n   3.1.2.2.1\
    \ <ipp-attribute-fidelity> ------------------+\n                  <supplied?>\
    \                           |\n                     Yes|                     \
    \          |\n                        |  ipp-attribute-fidelity = no  |\n    \
    \                    |<------------------------------+\n                     \
    \   v          No\n   3.1.2.2.2       <Printer is>    --> server-error-not-accepting-jobs\n\
    \                <accepting jobs?>\n                     Yes|\n              \
    \          v          err\n   3.1.2.3    <Validate values of> --> client-error-bad-request\n\
    \           <Job template attributes>   client-error-request-value-too-\n    \
    \                                   long\n            <(length, tag, range,>\n\
    \                 <multi-value)>\n                      ok|\n                \
    \        v          err\n   3.1.2.3  <Validate values with> --> client-error-bad-request\n\
    \             <supported values>        client-error-attributes-or-\n        \
    \                |              values-not-supported\n                       \
    \ v          err\n   3.1.2.3.1   <Any conflicting>   --> client-error-conflicting-\n\
    \                                       attributes\n          <Job Template attr\
    \ values>   client-error-attributes-or-\n                                    \
    \   values-not-supported\n                           v\n"
- title: 3.1.2.2.1   Default "ipp-attribute-fidelity" if not supplied
  contents:
  - "3.1.2.2.1   Default \"ipp-attribute-fidelity\" if not supplied\n   The Printer\
    \ object checks to see if the client supplied an \"ipp-\n   attribute-fidelity\"\
    \ Operation attribute.  If the attribute is not\n   supplied by the client, the\
    \ IPP object assumes that the value is\n   'false'.\n"
- title: 3.1.2.2.2   Check that the Printer object is accepting jobs
  contents:
  - "3.1.2.2.2   Check that the Printer object is accepting jobs\n   If the value\
    \ of the Printer objects \"printer-is-accepting-jobs\" is\n   'false', the Printer\
    \ object REJECTS the request and RETURNS the\n   'server-error-not-accepting-jobs'\
    \ status code.\n"
- title: 3.1.2.2.3   Validate the values of the Job Template attributes
  contents:
  - "3.1.2.2.3   Validate the values of the Job Template attributes\n   An IPP object\
    \ validates the values of all Job Template attribute\n   supplied by the client.\
    \  The IPP object performs the analogous\n   syntactic validation checks of each\
    \ Job Template attribute value that\n   it performs for Operation attributes (see\
    \ Section 3.1.2.1.5.):\n      a) that the length of each value is correct for\
    \ the attribute\n         syntax tag supplied by the client according to [RFC2911]\n\
    \         Section 4.1.\n      b) that the attribute syntax tag is correct for\
    \ that attribute\n         according to [RFC2911] Sections 4.2 to 4.4.\n     \
    \ c) that multiple values are supplied only for multi-valued\n         attributes,\
    \ i.e., that are 1setOf  X according to [RFC2911]\n         Sections 4.2 to 4.4.\n\
    \   As in Section 3.1.2.1.5, if any of these syntactic checks fail, the\n   IPP\
    \ object REJECTS the request and RETURNS the 'client-error-bad-\n   request' or\
    \ 'client-error-request-value-too-long' status code as\n   appropriate, independent\
    \ of the value of the \"ipp-attribute-\n   fidelity\".  Since such an error is\
    \ most likely to be an error\n   detected by a client developer, rather than by\
    \ an end-user, the IPP\n   object NEED NOT return an indication of which attribute\
    \ had the error\n   in either the Unsupported Attributes Group or the Status Message.\n\
    \   The description for each of these syntactic checks is explicitly\n   expressed\
    \ in the first IF statement in the following table.\n   Each Job Template attribute\
    \ MUST occur no more than once.  If an IPP\n   Printer receives a create request\
    \ with multiple occurrences of a Job\n   Template attribute, it MAY:\n      1.\
    \ reject the operation and return the 'client-error-bad-request'\n         error\
    \ status code\n      2. accept the operation and use the first occurrence of the\n\
    \         attribute\n      3. accept the operation and use the last occurrence\
    \ of the\n         attribute\n   depending on implementation.  Therefore, clients\
    \ MUST NOT supply\n   multiple occurrences of the same Job Template attribute\
    \ in the Job\n   Attributes group in the request.\n"
- title: 3.1.2.3  Algorithm for job validation
  contents:
  - "3.1.2.3  Algorithm for job validation\n   The process of validating a Job-Template\
    \ attribute \"xxx\" against a\n   Printer attribute \"xxx-supported\" can use\
    \ the following validation\n   algorithm (see section 3.2.1.2 in [RFC2911]).\n\
    \   To validate the value U of Job-Template attribute \"xxx\" against the\n  \
    \ value V of Printer \"xxx-supported\", perform the following algorithm:\n   1.\
    \ If U is multi-valued, validate each value X of U by performing the\n      algorithm\
    \ in Table 7 with each value X. Each validation is\n      separate from the standpoint\
    \ of returning unsupported values.\n      Example:  If U is \"finishings\" that\
    \ the client supplies with\n      'staple', 'bind' values, then X takes on the\
    \ successive values:\n      'staple', then 'bind'\n   2. If V is multi-valued,\
    \ validate X against each Z of V by performing\n      the algorithm in Table 7\
    \ with each value Z.  If a value Z\n      validates, the validation for the attribute\
    \ value X succeeds. If\n      it fails, the algorithm is applied to the next value\
    \ Z of V. If\n      there are no more values Z of V, validation fails. Example\"\
    \  If V\n      is \"sides-supported\" with values: 'one- sided', 'two-sided-long',\n\
    \      and 'two-sided-short', then Z takes on the successive values:\n      'one-sided',\
    \ 'two-sided-long', and 'two-sided-short'.  If the\n      client supplies \"sides\"\
    \ with 'two-sided- long', the first\n      comparison fails ('one-sided' is not\
    \ equal to 'two-sided-long'),\n      the second comparison succeeds ('two-sided-long'\
    \ is equal to\n      'two-sided-long\"), and the third comparison ('two-sided-short'\n\
    \      with 'two-sided-long') is not even performed.\n   3. If both U and V are\
    \ single-valued, let X be U and Z be V and use\n      the validation rules in\
    \ Table 7.\n   Table 7 - Rules for validating single values X against Z\n   Attribute\
    \ syntax   attribute syntax validated if:\n   of X               of Z\n   integer\
    \            rangeOfInteger   X is within the range of Z\n   uri             \
    \   uriScheme        the uri scheme in X is equal to\n                       \
    \                Z\n   any                boolean          the value of Z is TRUE\n\
    \   any                any              X and Z are of the same type\n       \
    \                                and are equal.\n   If the value of the Printer\
    \ object's \"xxx-supported\" attribute is\n   'no-value' (because the system administrator\
    \ hasn't configured a\n   value), the check always fails.  If the check fails,\
    \ the IPP object\n   copies the attribute to the Unsupported Attributes response\
    \ group\n   with its unsupported value.  If the attribute contains more than one\n\
    \   value, each value is checked and each unsupported value is separately\n  \
    \ copied, while supported values are not copied.  If an IPP object\n   doesn't\
    \ recognize/support a Job Template attribute, i.e., there is no\n   corresponding\
    \ Printer object \"xxx-supported\" attribute, the IPP\n   object treats the attribute\
    \ as an unknown or unsupported attribute\n   (see the last row in the table below).\n\
    \   If some Job Template attributes are supported for some document\n   formats\
    \ and not for others or the values are different for different\n   document formats,\
    \ the IPP object SHOULD take that into account in\n   this validation using the\
    \ value of the \"document-format\" supplied by\n   the client (or defaulted to\
    \ the value of the Printer's \"document-\n   format-default\" attribute, if not\
    \ supplied by the client).  For\n   example, if \"number-up\" is supported for\
    \ the 'text/plain' document\n   format, but not for the 'application/postscript'\
    \ document format, the\n   check SHOULD (though it NEED NOT) depend on the value\
    \ of the\n   \"document-format\" operation attribute.  See \"document-format\"\
    \ in\n   [RFC2911] section 3.2.1.1 and 3.2.5.1.\n   Note: whether the request\
    \ is accepted or rejected is determined by\n   the value of the \"ipp-attribute-fidelity\"\
    \ attribute in a subsequent\n   step, so that all Job Template attribute supplied\
    \ are examined and\n   all unsupported attributes and/or values are copied to\
    \ the\n   Unsupported Attributes response group.\n   -----------------------------------------------\n\
    \   job-priority (integer(1:100))\n      IF NOT a single 'integer' value with\
    \ a length equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT supplied by the client, use the value of the Printer\n      object's\
    \ \"job-priority-default\" attribute at job submission time.\n      IF NOT in\
    \ the range 1 to 100, inclusive, copy the attribute and\n      the unsupported\
    \ value to the Unsupported Attributes response\n      group.\n      Map the value\
    \ to the nearest supported value in the range 1:100 as\n      specified by the\
    \ number of discrete values indicated by the value\n      of the Printer's \"\
    job-priority-supported\" attribute.  See the\n      formula in [RFC2911] Section\
    \ 4.2.1.\n   job-hold-until (type3 keyword | name)\n      IF NOT a single 'keyword'\
    \ or 'name' value, REJECT/RETURN 'client-\n      error-bad-request'.\n      IF\
    \ the value length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NOT supplied by the client, use the value of the Printer\n      object's\
    \ \"job-hold-until\" attribute at job submission time.\n      IF NOT in the Printer\
    \ object's \"job-hold-until-supported\"\n      attribute, copy the attribute and\
    \ the unsupported value to the\n      Unsupported Attributes response group.\n\
    \   job-sheets (type3 keyword | name)\n      IF NOT a single 'keyword' or 'name'\
    \ value, REJECT/RETURN 'client-\n      error-bad-request'.\n      IF the value\
    \ length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"job-sheets-supported\" attribute,\n  \
    \    copy the attribute and the unsupported value to the Unsupported\n      Attributes\
    \ response group.\n   multiple-document-handling (type2 keyword)\n      IF NOT\
    \ a single 'keyword' value, REJECT/RETURN 'client-error-bad-\n      request'.\n\
    \      IF the value length is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"multiple-document-handling-\n      supported\"\
    \ attribute, copy the attribute and the unsupported value\n      to the Unsupported\
    \ Attributes response group.\n   copies (integer(1:MAX))\n      IF NOT a single\
    \ 'integer' value with a length equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT in range of the Printer object's \"copies-supported\"\n      attribute\n\
    \      copy the attribute and the unsupported value to the Unsupported\n     \
    \ Attributes response group.\n   finishings (1setOf type2 enum)\n      IF NOT\
    \ an 'enum' value(s) each with a length equal to 4 octets,\n      REJECT/RETURN\
    \ 'client-error-bad-request'.\n      IF NOT in the Printer object's \"finishings-supported\"\
    \ attribute,\n      copy the attribute and the unsupported value(s), but not any\n\
    \      supported values, to the Unsupported Attributes response group.\n   page-ranges\
    \ (1setOf  rangeOfInteger(1:MAX))\n      IF NOT a 'rangeOfInteger' value(s) each\
    \ with a length equal to 8\n      octets, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF first value is greater than second value in any range, the\n      ranges\
    \ are not in ascending order, or ranges overlap,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF the value of the Printer object's \"page-ranges-supported\"\n      attribute\
    \ is 'false', copy the attribute to the Unsupported\n      Attributes response\
    \ group and set the value to the \"out-of-band\"\n      'unsupported' value.\n\
    \   sides (type2 keyword)\n      IF NOT a single 'keyword' value, REJECT/RETURN\
    \ 'client-error-bad-\n      request'.\n      IF the value length is greater than\
    \ 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n  \
    \    IF NOT in the Printer object's \"sides-supported\" attribute, copy\n    \
    \  the attribute and the unsupported value to the Unsupported\n      Attributes\
    \ response group.\n   number-up (integer(1:MAX))\n      IF NOT a single 'integer'\
    \ value with a length equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT a value or in the range of one of the values of the Printer\n  \
    \    object's \"number-up-supported\" attribute, copy the attribute and\n    \
    \  value to the Unsupported Attribute response group.\n   orientation-requested\
    \ (type2 enum)\n      IF NOT a single 'enum' value with a length equal to 4 octets,\n\
    \      REJECT/RETURN 'client-error-bad-request'.\n      IF NOT in the Printer\
    \ object's \"orientation-requested-supported\"\n      attribute, copy the attribute\
    \ and the unsupported value to the\n      Unsupported Attributes response group.\n\
    \   media (type3 keyword | name)\n      IF NOT a single 'keyword' or 'name' value,\
    \ REJECT/RETURN 'client-\n      error-bad-request'.\n      IF the value length\
    \ is greater than 255 octets, REJECT/RETURN\n      'client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"media-supported\" attribute, copy\n  \
    \    the attribute and the unsupported value to the Unsupported\n      Attributes\
    \ response group.\n   printer-resolution (resolution)\n      IF NOT a single 'resolution'\
    \ value with a length equal to 9\n      octets, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT in the Printer object's \"printer-resolution-supported\"\n     \
    \ attribute, copy the attribute and the unsupported value to the\n      Unsupported\
    \ Attributes response group.\n   print-quality (type2 enum)\n      IF NOT a single\
    \ 'enum' value with a length equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT in the Printer object's \"print-quality-supported\"\n      attribute,\
    \ copy the attribute and the unsupported value to the\n      Unsupported Attributes\
    \ response group.\n      unknown or unsupported attribute (i.e., there is no corresponding\n\
    \      Printer object \"xxx-supported\" attribute)\n      IF the attribute syntax\
    \ supplied by the client is supported but\n      the length is not legal for that\
    \ attribute syntax,\n      REJECT/RETURN 'client-error-bad-request' if the length\
    \ of the\n      attribute syntax is fixed or 'client-error-request-value-too-long'\n\
    \      if the length of the attribute syntax is variable.\n      ELSE copy the\
    \ attribute and value to the Unsupported Attributes\n      response group and\
    \ change the attribute value to the \"out-of-band\"\n      'unsupported' value.\
    \  Any remaining Job Template Attributes are\n      either unknown or unsupported\
    \ Job Template attributes and are\n      validated algorithmically according to\
    \ their attribute syntax for\n      proper length (see below).\n      -----------------------------------------------\n\
    \      If the attribute syntax is supported AND the length check fails,\n    \
    \  the IPP object REJECTS the request and RETURNS the 'client-error-\n      bad-request'\
    \ if the length of the attribute syntax is fixed or the\n      'client-error-request-value-too-long'\
    \ status code if the length of\n      the attribute syntax is variable. Otherwise,\
    \ the IPP object copies\n      the unsupported Job Template attribute to the Unsupported\n\
    \      Attributes response group and changes the attribute value to the\n    \
    \  \"out-of-band\" 'unsupported' value.  The following table shows the\n     \
    \ length checks for all attribute syntaxes.  In the following table:\n      \"\
    <=\" means less than or equal, \"=\" means equal to:\n   Name                \
    \    Octet length check for read-write attributes\n   ----------             \
    \ ---------------------------------------------\n   'textWithLanguage        \
    \  <= 1023 AND 'naturalLanguage' <= 63\n   'textWithoutLanguage'      <= 1023\n\
    \   'nameWithLanguage'         <= 255 AND 'naturalLanguage'  <= 63\n   'nameWithoutLanguage'\
    \      <= 255\n   'keyword'                  <= 255\n   'enum'               \
    \      = 4\n   'uri'                      <= 1023\n   'uriScheme'            \
    \    <= 63\n   'charset'                  <= 63\n   'naturalLanguage'        \
    \  <= 63\n   'mimeMediaType'            <= 255\n   'octetString'             \
    \ <= 1023\n   'boolean'                  = 1\n   'integer'                  =\
    \ 4\n   'rangeOfInteger'           = 8\n   'dateTime'                 = 11\n \
    \  'resolution'               = 9\n   '1setOf X'\n   Note:  It's possible for\
    \ a Printer to receive a zero length keyword\n   in a request.  Since this is\
    \ a keyword, its value needs to be\n   compared with the supported values.  Assuming\
    \ that the printer\n   doesn't have any values in its corresponding \"xxx-supported\"\
    \n   attribute that are keywords of zero length, the comparison will fail.\n \
    \  Then the request will be accepted or rejected depending on the value\n   of\
    \ \"ipp-attributes-fidelity\" being 'false' or 'true', respectively.\n   No special\
    \ handling is required for\n"
- title: 3.1.2.3.1   Check for conflicting Job Template attributes values
  contents:
  - "3.1.2.3.1   Check for conflicting Job Template attributes values\n   Once all\
    \ the Operation and Job Template attributes have been checked\n   individually,\
    \ the Printer object SHOULD check for any conflicting\n   values among all the\
    \ supported values supplied by the client.  For\n   example, a Printer object\
    \ might be able to staple and to print on\n   transparencies, however due to physical\
    \ stapling constraints, the\n   Printer object might not be able to staple transparencies.\
    \  The IPP\n   object copies the supported attributes and their conflicting\n\
    \   attribute values to the Unsupported Attributes response group.  The\n   Printer\
    \ object only copies over those attributes that the Printer\n   object either\
    \ ignores or substitutes in order to resolve the\n   conflict, and it returns\
    \ the original values which were supplied by\n   the client.  For example suppose\
    \ the client supplies \"finishings\"\n   equals 'staple' and \"media\" equals\
    \ 'transparency', but the Printer\n   object does not support stapling transparencies.\
    \  If the Printer\n   chooses to ignore the stapling request in order to resolve\
    \ the\n   conflict, the Printer objects returns \"finishings\" equal to 'staple'\n\
    \   in the Unsupported Attributes response group.  If any attributes are\n   multi-valued,\
    \ only the conflicting values of the attributes are\n   copied.\n   Note: The\
    \ decisions made to resolve the conflict (if there is a\n   choice) is implementation\
    \ dependent.\n"
- title: 3.1.2.3.2   Decide whether to REJECT the request
  contents:
  - "3.1.2.3.2   Decide whether to REJECT the request\n   If there were any unsupported\
    \ Job Template attributes or\n   unsupported/conflicting Job Template attribute\
    \ values and the client\n   supplied the \"ipp-attribute-fidelity\" attribute\
    \ with the 'true'\n   value, the Printer object REJECTS the request and return\
    \ the status\n   code:\n      1.'client-error-conflicting-attributes' status code,\
    \ if there were\n         any conflicts between attributes supplied by the client.\n\
    \      2.'client-error-attributes-or-values-not-supported' status code,\n    \
    \     otherwise.\n   Note:  Unsupported Operation attributes or values that are\
    \ returned\n   do not affect the status returned in this step.  If the unsupported\n\
    \   Operation attribute was a serious error, the above already rejected\n   the\
    \ request in a previous step.  If control gets to this step with\n   unsupported\
    \ Operation attributes being returned, they are not serious\n   errors.\n   In\
    \ general, the final results of Job processing are unknown at Job\n   submission\
    \ time.  The client has to rely on notifications or polling\n   to find out what\
    \ happens at Job processing time.  However, there are\n   cases in which some\
    \ Printers can determine at Job submission time\n   that Job processing is going\
    \ to fail.  As an optimization, we'd like\n   to have the Printer reject the Job\
    \ in these cases.\n   There are three types of \"processing\" errors that might\
    \ be detectable\n   at Job submission time:\n   1.  'client-error-document-format-not-supported'\
    \ :  For the Print-\n   Job, Send-Document, Print-URI, and Send-URI operations,\
    \ if  all these\n   conditions are true:\n      -  the Printer supports auto-sensing,\n\
    \      -  the request \"document-format\"  operation attribute is\n         'application/octet-stream',\n\
    \      -  the Printer receives document data before responding,\n      -  the\
    \ Printer auto-senses the document format before responding,\n      -  the sensed\
    \ document format is not supported by the Printer\n   then the  Printer should\
    \ respond with 'client-error-document-format-\n   not-supported' status.\n   2.\
    \  'client-error-compression-error':  For the Print-Job, Send-\n   Document, Print-URI,\
    \ and Send-URI operations, if  all these\n   conditions are true:\n      -  the\
    \ client supplies a supported value for the \"compression\"\n         operation\
    \ attribute in the request\n      -  the Printer receives document data before\
    \ responding,\n      -  the Printer attempts to decompress the document data before\n\
    \         responding,\n      -  the document data cannot be decompressed using\
    \ the algorithm\n         specified by the \"compression\" operation attribute\n\
    \   then the Printer should respond with 'client-error-compression-error'\n  \
    \ status.\n   3.  'client-error-document-access-error':  For the Print-URI, and\n\
    \   Send-URI operations, if the Printer attempts and fails to pull the\n   referenced\
    \ document data before responding, it should respond with\n   'client-error-document-access-error'\
    \ status.\n   Some Printers are not able to detect these errors until Job\n  \
    \ processing time.  In that case, the errors are recorded in the\n   corresponding\
    \ job-state and job-state reason attributes.  (There is\n   no standard way for\
    \ a client to determine whether a Printer can\n   detect these errors at Job submission\
    \ time.)  For example, if auto-\n   sensing happens AFTER the job is accepted\
    \ (as opposed to auto-sensing\n   at submit time before returning the response),\
    \ the implementation\n   aborts the job, puts the job in the 'aborted' state and\
    \ sets the\n   'unsupported-document-format' value in the job's \"job-state-reasons\"\
    .\n   A client should always provide a valid \"document-format\" operation\n \
    \  attribute whenever practical.  In the absence of other information, a\n   client\
    \ itself may sniff the document data to determine document\n   format.\n   Auto\
    \ sensing at Job submission time may be more difficult for the\n   Printer when\
    \ combined with compression.  For auto-sensed Jobs, a\n   client may be better\
    \ off  deferring compression to the transfer\n   protocol layer, e.g.; by using\
    \ the HTTP Content-Encoding header.\n"
- title: 3.1.2.3.3   For the Validate-Job operation, RETURN one of the success
  contents:
  - "3.1.2.3.3   For the Validate-Job operation, RETURN one of the success\n     \
    \       status codes\n   If the requested operation is the Validate-Job operation,\
    \ the Printer\n   object returns:\n      1. the \"successful-ok\" status code,\
    \ if there are no unsupported or\n         conflicting Job Template attributes\
    \ or values.\n      2. the \"successful-ok-conflicting-attributes, if there are\
    \ any\n         conflicting Job Template attribute or values.\n      3. the \"\
    successful-ok-ignored-or-substituted-attributes, if there\n         are only unsupported\
    \ Job Template attributes or values.\n   Note:  Unsupported Operation attributes\
    \ or values that are returned\n   do not affect the status returned in this step.\
    \  If the unsupported\n   Operation attribute was a serious error, the above already\
    \ rejected\n   the request in a previous step.  If control gets to this step with\n\
    \   unsupported Operation attributes being returned, they are not serious\n  \
    \ errors.\n"
- title: 3.1.2.3.4   Create the Job object with attributes to support
  contents:
  - "3.1.2.3.4   Create the Job object with attributes to support\n   If \"ipp-attribute-fidelity\"\
    \ is set to 'false' (or it was not supplied\n   by the client), the Printer object:\n\
    \      1. creates a Job object, assigns a unique value to the job's\n        \
    \ \"job-uri\" and \"job-id\" attributes, and initializes all of the\n        \
    \ job's other supported Job Description attributes.\n      2. removes all unsupported\
    \ attributes from the Job object.\n      3. for each unsupported value, removes\
    \ either the unsupported\n         value or substitutes the unsupported attribute\
    \ value with some\n         supported value.  If an attribute has no values after\
    \ removing\n         unsupported values from it, the attribute is removed from\
    \ the\n         Job object (so that the normal default behavior at job\n     \
    \    processing time will take place for that attribute).\n      4. for each conflicting\
    \ value, removes either the conflicting\n         value or substitutes the conflicting\
    \ attribute value with some\n         other supported value.  If an attribute\
    \ has no values after\n         removing conflicting values from it, the attribute\
    \ is removed\n         from the Job object (so that the normal default behavior\
    \ at job\n         processing time will take place for that attribute).\n   If\
    \ there were no attributes or values flagged as unsupported, or the\n   value\
    \ of 'ipp-attribute-fidelity\" was 'false', the Printer object is\n   able to\
    \ accept the create request and create a new Job object.  If\n   the \"ipp-attribute-fidelity\"\
    \ attribute is set to 'true', the Job\n   Template attributes that populate the\
    \ new Job object are necessarily\n   all the Job Template attributes supplied\
    \ in the create request.  If\n   the \"ipp-attribute-fidelity\" attribute is set\
    \ to 'false', the Job\n   Template attributes that populate the new Job object\
    \ are all the\n   client supplied Job Template attributes that are supported or\
    \ that\n   have value substitution.  Thus, some of the requested Job Template\n\
    \   attributes will not appear in the Job object because the Printer\n   object\
    \ did not support those attributes.  The attributes that\n   populate the Job\
    \ object are persistently stored with the Job object\n   for that Job.  A Get-Job-Attributes\
    \ operation on that Job object will\n   return only those attributes that are\
    \ persistently stored with the\n   Job object.\n   Note: All Job Template attributes\
    \ that are persistently stored with\n   the Job object are intended to be \"override\
    \ values\"; that is, they\n   that take precedence over whatever other embedded\
    \ instructions might\n   be in the document data itself.  However, it is not possible\
    \ for all\n   Printer objects to realize the semantics of \"override\".  End users\n\
    \   may query the Printer's \"pdl-override-supported\" attribute to\n   determine\
    \ if the Printer either attempts or does not attempt to\n   override document\
    \ data instructions with IPP attributes.\n   There are some cases, where a Printer\
    \ supports a Job Template\n   attribute and has an associated default value set\
    \ for that attribute.\n   In the case where a client does not supply the corresponding\n\
    \   attribute, the Printer does not use its default values to populate\n   Job\
    \ attributes when creating the new Job object; only Job Template\n   attributes\
    \ actually in the create request are used to populate the\n   Job object.  The\
    \ Printer's default values are only used later at Job\n   processing time if no\
    \ other IPP attribute or instruction embedded in\n   the document data is present.\n\
    \   Note: If the default values associated with Job Template attributes\n   that\
    \ the client did not supply were to be used to populate the Job\n   object, then\
    \ these values would become \"override values\" rather than\n   defaults.  If\
    \ the Printer supports the 'attempted' value of the\n   \"pdl-override-supported\"\
    \ attribute, then these override values could\n   replace values specified within\
    \ the document data.  This is not the\n   intent of the default value mechanism.\
    \  A default value for an\n   attribute is used only if the create request did\
    \ not specify that\n   attribute (or it was ignored when allowed by \"ipp-attribute-fidelity\"\
    \n   being 'false') and no value was provided within the content of the\n   document\
    \ data.\n   If the client does not supply a value for some Job Template\n   attribute,\
    \ and the Printer does not support that attribute, as far as\n   IPP is concerned,\
    \ the result of processing that Job (with respect to\n   the missing attribute)\
    \ is undefined.\n"
- title: 3.1.2.3.5   Return one of the success status codes
  contents:
  - "3.1.2.3.5   Return one of the success status codes\n   Once the Job object has\
    \ been created, the Printer object accepts the\n   request and returns to the\
    \ client:\n      1. the 'successful-ok' status code, if there are no unsupported\
    \ or\n         conflicting Job Template attributes or values.\n      2. the 'successful-ok-conflicting-attributes'\
    \ status code, if\n         there are any conflicting Job Template attribute or\
    \ values.\n      3. the 'successful-ok-ignored-or-substituted-attributes' status\n\
    \         code, if there are only unsupported Job Template attributes or\n   \
    \      values.\n   Note:  Unsupported Operation attributes or values that are\
    \ returned\n   do not affect the status returned in this step.  If the unsupported\n\
    \   Operation attribute was a serious error, the above already rejected\n   the\
    \ request in a previous step.  If control gets to this step with\n   unsupported\
    \ Operation attributes being returned, they are not serious\n   errors.\n   The\
    \ Printer object also returns Job status attributes that indicate\n   the initial\
    \ state of the Job ('pending', 'pending-held',\n   'processing', etc.), etc. \
    \ See Print-Job Response, [RFC2911] section\n   3.2.1.2.\n"
- title: 3.1.2.3.6   Accept appended Document Content
  contents:
  - "3.1.2.3.6   Accept appended Document Content\n   The Printer object accepts the\
    \ appended Document Content data and\n   either starts it printing, or spools\
    \ it for later processing.\n"
- title: 3.1.2.3.7   Scheduling and Starting to Process the Job
  contents:
  - "3.1.2.3.7   Scheduling and Starting to Process the Job\n   The Printer object\
    \ uses its own configuration and implementation\n   specific algorithms for scheduling\
    \ the Job in the correct processing\n   order.  Once the Printer object begins\
    \ processing the Job, the\n   Printer changes the Job's state to 'processing'.\
    \  If the Printer\n   object supports PDL override (the \"pdl-override-supported\"\
    \ attribute\n   set to 'attempted'), the implementation does its best to see that\
    \ IPP\n   attributes take precedence over embedded instructions in the document\n\
    \   data.\n"
- title: 3.1.2.3.8   Completing the Job
  contents:
  - "3.1.2.3.8   Completing the Job\n   The Printer object continues to process the\
    \ Job until it can move the\n   Job into the 'completed' state.  If an Cancel-Job\
    \ operation is\n   received, the implementation eventually moves the Job into\
    \ the\n   'canceled' state.  If the system encounters errors during processing\n\
    \   that do not allow it to progress the Job into a completed state, the\n   implementation\
    \ halts all processing, cleans up any resources, and\n   moves the Job into the\
    \ 'aborted' state.\n"
- title: 3.1.2.3.9   Destroying the Job after completion
  contents:
  - "3.1.2.3.9   Destroying the Job after completion\n   Once the Job moves to the\
    \ 'completed', 'aborted', or 'canceled'\n   state, it is an implementation decision\
    \ as to when to destroy the Job\n   object and release all associated resources.\
    \  Once the Job has been\n   destroyed, the Printer would return either the \"\
    client-error-not-\n   found\" or \"client-error-gone\" status codes for operations\
    \ directed at\n   that Job.\n   Note:  the Printer object SHOULD NOT re-use a\
    \ \"job-uri\" or \"job-id\"\n   value for a sufficiently long time after a job\
    \ has been destroyed, so\n   that stale references kept by clients are less likely\
    \ to access the\n   wrong (newer) job.\n"
- title: 3.1.2.3.10  Interaction with "ipp-attribute-fidelity"
  contents:
  - "3.1.2.3.10  Interaction with \"ipp-attribute-fidelity\"\n   Some Printer object\
    \ implementations may support \"ipp-attribute-\n   fidelity\" set to 'true' and\
    \ \"pdl-override-supported\" set to\n   'attempted' and yet still not be able\
    \ to realize exactly what the\n   client specifies in the create request.  This\
    \ is due to legacy\n   decisions and assumptions that have been made about the\
    \ role of job\n   instructions embedded within the document data and external\
    \ job\n   instructions that accompany the document data and how to handle\n  \
    \ conflicts between such instructions.  The inability to be 100%\n   precise about\
    \ how a given implementation will behave is also\n   compounded by the fact that\
    \ the two special attributes, \"ipp-\n   attribute-fidelity\" and \"pdl-\"override-supported\"\
    , apply to the whole\n   job rather than specific values for each attribute. For\
    \ example, some\n   implementations may be able to override almost all Job Template\n\
    \   attributes except for \"number-up\".  Character Sets, natural\n   languages,\
    \ and internationalization\n   This section discusses character set support, natural\
    \ language\n   support and internationalization.\n"
- title: 3.1.2.3.11  Character set code conversion support
  contents:
  - "3.1.2.3.11  Character set code conversion support\n   IPP clients and IPP objects\
    \ are REQUIRED to support UTF-8.  They MAY\n   support additional charsets.  It\
    \ is RECOMMENDED that an IPP object\n   also support US-ASCII, since many clients\
    \ support US-ASCII, and\n   indicate that UTF-8 and US-ASCII are supported by\
    \ populating the\n   Printer's \"charset-supported\" with 'utf-8' and 'us-ascii'\
    \ values.  An\n   IPP object is required to code covert with as little loss as\
    \ possible\n   between the charsets that it supports, as indicated in the Printer's\n\
    \   \"charsets-supported\" attribute.\n   How should the server handle the situation\
    \ where the \"attributes-\n   charset\" of the response itself is \"us-ascii\"\
    , but one or more\n   attributes in that response is in the \"utf-8\" format?\n\
    \   Example: Consider a case where a client sends a Print-Job request\n   with\
    \ \"utf-8\" as the value of \"attributes-charset\" and with the \"job-\n   name\"\
    \ attribute supplied.  Later another client submits a Get-Job-\n   Attribute or\
    \ Get-Jobs request.  This second request contains the\n   \"attributes-charset\"\
    \ with value \"us-ascii\" and \"requested-attributes\"\n   attribute with exactly\
    \ one value \"job-name\".\n   According to the RFC2911 document (section 3.1.4.2),\
    \ the value of the\n   \"attributes-charset\" for the response of the second request\
    \ must be\n   \"us-ascii\" since that is the charset specified in the request.\
    \  The\n   \"job-name\" value, however, is in \"utf-8\" format.  Should the request\n\
    \   be rejected even though both \"utf-8\" and \"us-ascii\" charsets are\n   supported\
    \ by the server? or should the \"job-name\" value be converted\n   to \"us-ascii\"\
    \ and return \"successful-ok-conflicting-attributes\"\n   (0x0002) as the status\
    \ code?\n   Answer: An IPP object that supports both utf-8 (REQUIRED) and us-\n\
    \   ascii, the second paragraph of section 3.1.4.2 applies so that the\n   IPP\
    \ object MUST accept the request, perform code set conversion\n   between these\
    \ two charsets with \"the highest fidelity possible\" and\n   return 'successful-ok',\
    \ rather than a warning 'successful-ok-\n   conflicting-attributes, or an error.\
    \  The printer will do the best it\n   can to convert between each of the character\
    \ sets that it supports --\n   even if that means providing a string of question\
    \ marks because none\n   of the characters are representable in US ASCII.  If\
    \ it can't perform\n   such conversion, it MUST NOT advertise us-ascii as a value\
    \ of its\n   \"attributes-charset-supported\" and MUST reject any request that\n\
    \   requests 'us-ascii'.\n   One IPP object implementation strategy is to convert\
    \ all request text\n   and name values to a Unicode internal representation. \
    \ This is 16-bit\n   and virtually universal.  Then convert to the specified operation\n\
    \   attributes-charset on output.\n   Also it would be smarter for a client to\
    \ ask for 'utf-8', rather than\n   'us-ascii' and throw away characters that it\
    \ doesn't understand,\n   rather than depending on the code conversion of the\
    \ IPP object.\n"
- title: 3.1.2.3.12  What charset to return when an unsupported charset is
  contents:
  - "3.1.2.3.12  What charset to return when an unsupported charset is\n         \
    \   requested (Issue 1.19)?\n   Section 3.1.4.1 Request Operation attributes was\
    \ clarified in\n   November 1998 as follows:\n   All clients and IPP objects MUST\
    \ support the 'utf-8' charset\n   [RFC2044] and MAY support additional charsets\
    \ provided that they are\n   registered with IANA [IANA-CS].  If the Printer object\
    \ does not\n   support the client supplied charset value, the Printer object MUST\n\
    \   reject the request, set the \"attributes-charset\" to 'utf-8' in the\n   response,\
    \ and return the 'client-error-charset-not-supported' status\n   code and any\
    \ 'text' or 'name' attributes using the 'utf-8' charset.\n   Since the client\
    \ and IPP object MUST support UTF-8, returning any\n   text or name attributes\
    \ in UTF-8 when the client requests a charset\n   that is not supported should\
    \ allow the client to display the text or\n   name.\n   Since such an error is\
    \ a client error, rather than a user error, the\n   client should check the status\
    \ code first so that it can avoid\n   displaying any other returned 'text' and\
    \ 'name' attributes that are\n   not in the charset requested.\n   Furthermore,\
    \ [RFC2911] section 14.1.4.14 client-error-charset-not-\n   supported (0x040D)\
    \ was clarified in November 1998 as follows:\n   For any operation, if the IPP\
    \ Printer does not support the charset\n   supplied by the client in the \"attributes-charset\"\
    \ operation\n   attribute, the Printer MUST reject the operation and return this\n\
    \   status and any 'text' or 'name' attributes using the 'utf-8' charset\n   (see\
    \ Section 3.1.4.1).\n"
- title: 3.1.2.3.13  Natural Language Override (NLO)
  contents:
  - "3.1.2.3.13  Natural Language Override (NLO)\n   The 'text' and 'name' attributes\
    \ each have two forms.  One has an\n   implicit natural language, and the other\
    \ has an explicit natural\n   language.  The 'textWithoutLanguage' and 'textWithLanguage'\
    \ are the\n   two 'text' forms.  The 'nameWithoutLanguage\" and 'nameWithLanguage\n\
    \   are the two 'name' forms.  If a receiver (IPP object or IPP client)\n   supports\
    \ an attribute with attribute syntax 'text', it MUST support\n   both forms in\
    \ a request and a response.  A sender (IPP client or IPP\n   object) MAY send\
    \ either form for any such attribute.  When a sender\n   sends a WithoutLanguage\
    \ form, the implicit natural language is\n   specified in the \"attributes-natural-language\"\
    \ operation attribute,\n   which all senders MUST include in every request and\
    \ response.\n   When a sender sends a WithLanguage form, it MAY be different from\
    \ the\n   implicit natural language supplied by the sender or it MAY be the\n\
    \   same.  The receiver MUST treat either form equivalently.\n   There is an implementation\
    \ decision for senders, whether to always\n   send the WithLanguage forms or use\
    \ the WithoutLanguage form when the\n   attribute's natural language is the same\
    \ as the request or response.\n   The former approach makes the sender implementation\
    \ simpler.  The\n   latter approach is more efficient on the wire and allows inter-\n\
    \   working with non-conforming receivers that fail to support the\n   WithLanguage\
    \ forms.  As each approach have advantages, the choice is\n   completely up to\
    \ the implementer of the sender.\n   Furthermore, when a client receives a 'text'\
    \ or 'name' job attribute\n   that it had previously supplied, that client MUST\
    \ NOT expect to see\n   the attribute in the same form, i.e., in the same WithoutLanguage\
    \ or\n   WithLanguage form as the client supplied when it created the job.\n \
    \  The IPP object is free to transform the attribute from the\n   WithLanguage\
    \ form to the WithoutLanguage form and vice versa, as long\n   as the natural\
    \ language is preserved.  However, in order to meet this\n   latter requirement,\
    \ it is usually simpler for the IPP object\n   implementation to store the natural\
    \ language explicitly with the\n   attribute value, i.e., to store using an internal\
    \ representation that\n   resembles the WithLanguage form.\n   The IPP Printer\
    \ MUST copy the natural language of a job, i.e., the\n   value of the \"attributes-natural-language\"\
    \ operation attribute\n   supplied by the client in the create operation, to the\
    \ Job object as\n   a Job Description attribute, so that a client is able to query\
    \ it.\n   In returning a Get-Job-Attributes response, the IPP object MAY return\n\
    \   one of three natural language values in the responses \"attributes-\n   natural-language\"\
    \ operation attribute: (1) that requested by the\n   requester, (2) the natural\
    \ language of the job, or (3) the configured\n   natural language of the IPP Printer,\
    \ if the requested language is not\n   supported by the IPP Printer.\n   This\
    \ \"attributes-natural-language\" Job Description attribute is\n   useful for\
    \ an IPP object implementation that prints start sheets in\n   the language of\
    \ the user who submitted the job.  This same Job\n   Description attribute is\
    \ useful to a multi-lingual operator who has\n   to communicate with different\
    \ job submitters in different natural\n   languages.  This same Job Description\
    \ attribute is expected to be\n   used in the future to generate notification\
    \ messages in the natural\n   language of the job submitter.\n   Early drafts\
    \ of [RFC2911] contained a job-level natural language\n   override (NLO) for the\
    \ Get-Jobs response.  A job-level (NLO) is an\n   (unrequested) Job Attribute\
    \ which then specified the implicit natural\n   language for any other WithoutLanguage\
    \ job attributes returned in the\n   response for that job.  Interoperability\
    \ testing of early\n   implementations showed that no one was implementing the\
    \ job-level NLO\n   in Get-Job responses.  So the job-level NLO was eliminated\
    \ from the\n   Get-Jobs response.  This simplification makes all requests and\n\
    \   responses consistent in that the implicit natural language for any\n   WithoutLanguage\
    \ 'text' or 'name' form is always supplied in the\n   request's or response's\
    \ \"attributes-natural-language\" operation\n   attribute.\n"
- title: 3.1.3  Status codes returned by operation
  contents:
  - "3.1.3  Status codes returned by operation\n   This section corresponds to [RFC2911]\
    \ section 3.1.6 \"Operation\n   Response Status Codes and Status Messages\". \
    \ This section lists all\n   status codes once in the first operation (Print-Job).\
    \  Then it lists\n   the status codes that are different or specialized for subsequent\n\
    \   operations under each operation.\n"
- title: 3.1.3.1  Printer Operations
  contents:
  - '3.1.3.1  Printer Operations

    '
- title: 3.1.3.1.1   Print-Job
  contents:
  - "3.1.3.1.1   Print-Job\n   The Printer object MUST return one of the following\
    \ \"status-code\"\n   values for the indicated reason.  Whether all of the document\
    \ data\n   has been accepted or not before returning the success or error\n  \
    \ response depends on implementation.  See Section 13 in [RFC2911] for\n   a more\
    \ complete description of each status code.\n   For the following success status\
    \ codes, the Job object has been\n   created and the \"job-id\", and \"job-uri\"\
    \ assigned and returned in the\n   response:\n      successful-ok:  no request\
    \ attributes were substituted or ignored.\n      successful-ok-ignored-or-substituted-attributes:\
    \  some supplied\n      (1) attributes were ignored or (2) unsupported attribute\
    \ syntaxes\n      or values were substituted with supported values or were ignored.\n\
    \      Unsupported attributes, attribute syntax's, or values MUST be\n      returned\
    \ in the Unsupported Attributes group of the response.\n      successful-ok-conflicting-attributes:\
    \  some supplied attribute\n      values conflicted with the values of other supplied\
    \ attributes and\n      were either substituted or ignored.  Attributes or values\
    \ which\n      conflict with other attributes and have been substituted or\n \
    \     ignored MUST be returned in the Unsupported Attributes group of\n      the\
    \ response as supplied by the client.\n   [RFC2911] section 3.1.6 Operation Status\
    \ Codes and Messages states:\n      If the Printer object supports the \"status-message\"\
    \ operation\n      attribute, it SHOULD use the REQUIRED 'utf-8' charset to return\
    \ a\n      status message for the following error status codes (see section\n\
    \      13 in [RFC2911]): 'client-error-bad-request', 'client-error-\n      charset-not-supported',\
    \ 'server-error-internal-error', 'server-\n      error-operation-not-supported',\
    \ and 'server-error-version-not-\n      supported'.  In this case, it MUST set\
    \ the value of the\n      \"attributes-charset\" operation attribute to 'utf-8'\
    \ in the error\n      response.\n      For the following error status codes, no\
    \ job is created and no\n      \"job-id\" or \"job-uri\" is returned:\n      \
    \   client-error-bad-request:  The request syntax does not conform\n         to\
    \ the specification.\n         client-error-forbidden:  The request is being refused\
    \ for\n         authorization or authentication reasons.  The implementation\n\
    \         security policy is to not reveal whether the failure is one of\n   \
    \      authentication or authorization.\n         client-error-not-authenticated:\
    \  Either the request requires\n         authentication information to be supplied\
    \ or the authentication\n         information is not sufficient for authorization.\n\
    \         client-error-not-authorized:  The requester is not authorized\n    \
    \     to perform the request on the target object.\n         client-error-not-possible:\
    \ The request cannot be carried out\n         because of the state of the system.\
    \  See also 'server-error-\n         not-accepting-jobs' status code, which MUST\
    \ take precedence if\n         the Printer object's \"printer-accepting-jobs\"\
    \ attribute is\n         'false'.\n         client-error-timeout:  not applicable.\n\
    \         client-error-not-found:  the target object does not exist.\n       \
    \  client-error-gone:  the target object no longer exists and no\n         forwarding\
    \ address is known.\n         client-error-request-entity-too-large:  the size\
    \ of the request\n         and/or print data exceeds the capacity of the IPP Printer\
    \ to\n         process it.\n         client-error-request-value-too-long:  the\
    \ size of request\n         variable length attribute values, such as 'text' and\
    \ 'name'\n         attribute syntax's, exceed the maximum length specified in\n\
    \         [RFC2911] for the attribute and MUST be returned in the\n         Unsupported\
    \ Attributes Group.\n         supplied is not supported.  The \"document-format\"\
    \ attribute\n         with the unsupported value MUST be returned in the Unsupported\n\
    \         Attributes Group.  This error SHOULD take precedence over any\n    \
    \     other 'xxx-not-supported' error, except 'client-error-charset-\n       \
    \  not-supported'.\n         client-error-attributes-or-values-not-supported:\
    \  one or more\n         supplied attributes, attribute syntax's, or values are\
    \ not\n         supported and the client supplied the \"ipp-attributes-\n    \
    \     fidelity\" operation attribute with a 'true' value.  They MUST\n       \
    \  be returned in the Unsupported Attributes Group as explained\n         below.\n\
    \         client-error-uri-scheme-not-supported:  not applicable.\n         client-error-charset-not-supported:\
    \  the charset supplied in\n         the \"attributes-charset\" operation attribute\
    \ is not supported.\n         The Printer's \"configured-charset\" MUST be returned\
    \ in the\n         response as the value of the \"attributes-charset\" operation\n\
    \         attribute and used for any 'text' and 'name' attributes\n         returned\
    \ in the error response.  This error SHOULD take\n         precedence over any\
    \ other error, unless the request syntax is\n         so bad that the client's\
    \ supplied \"attributes-charset\" cannot\n         be determined.\n         client-error-conflicting-attributes:\
    \  one or more supplied\n         attribute values conflicted with each other\
    \ and the client\n         supplied the \"ipp-attributes-fidelity\" operation\
    \ attribute with\n         a 'true' value.  They MUST be returned in the Unsupported\n\
    \         Attributes Group as explained below.\n         server-error-internal-error:\
    \  an unexpected condition prevents\n         the request from being fulfilled.\n\
    \         server-error-operation-not-supported:  not applicable (since\n     \
    \    Print-Job is REQUIRED).\n         server-error-service-unavailable:  the\
    \ service is temporarily\n         overloaded.\n         server-error-version-not-supported:\
    \  the version in the request\n         is not supported.  The \"closest\" version\
    \ number supported MUST\n         be returned in the response.\n         server-error-device-error:\
    \  a device error occurred while\n         receiving or spooling the request or\
    \ document data or the IPP\n         Printer object can only accept one job at\
    \ a time.\n         server-error-temporary-error:  a temporary error such as a\n\
    \         buffer full write error, a memory overflow, or a disk full\n       \
    \  condition occurred while receiving the request and/or the\n         document\
    \ data.\n         server-error-not-accepting-jobs: the Printer object's\n    \
    \     \"printer-is-not-accepting-jobs\" attribute is 'false'.\n         server-error-busy:\
    \  the Printer is too busy processing jobs to\n         accept another job at\
    \ this time.\n         server-error-job-canceled:  the job has been canceled by\
    \ an\n         operator or the system while the client was transmitting the\n\
    \         document data.\n"
- title: 3.1.3.1.2   Print-URI
  contents:
  - "3.1.3.1.2   Print-URI\n   All of the Print-Job status codes described in Section\
    \ 3.1.3.1.1\n   Print-Job Response are applicable to Print-URI with the following\n\
    \   specializations and differences.  See Section 14 for a more complete\n   description\
    \ of each status code.\n         client-error-uri-scheme-not-supported:  the URI\
    \ scheme supplied\n         in the \"document-uri\" operation attribute is not\
    \ supported and\n         is returned in the Unsupported Attributes group.\n \
    \        server-error-operation-not-supported: the Print-URI operation\n     \
    \    is not supported.\n"
- title: 3.1.3.1.3   Validate-Job
  contents:
  - "3.1.3.1.3   Validate-Job\n   All of the Print-Job status codes described in Section\
    \ 3.1.3.1.1\n   Print-Job Response are applicable to Validate-Job.  See Section\
    \ 13 in\n   [RFC2911] for a more complete description of each status code.\n"
- title: 3.1.3.1.4   Create-Job
  contents:
  - "3.1.3.1.4   Create-Job\n   All of the Print-Job status codes described in Section\
    \ 3.1.3.1.1\n   Print-Job Response are applicable to Create-Job with the following\n\
    \   specializations and differences.  See Section 13 in [RFC2911] for a\n   more\
    \ complete description of each status code.\n         server-error-operation-not-supported:\
    \  the Create-Job operation\n         is not supported.\n         client-error-multiple-document-jobs-not-supported:\
    \ while the\n         Create-Job and Send-Document operations are supported, this\n\
    \         implementation doesn't support more than one document with\n       \
    \  data.\n"
- title: 3.1.3.1.5   Get-Printer-Attributes
  contents:
  - "3.1.3.1.5   Get-Printer-Attributes\n         All of the Print-Job status codes\
    \ described in Section\n         3.1.3.1.1 Print-Job Response are applicable to\
    \ the Get-\n         Printer-Attributes operation with the following\n       \
    \  specialization's and differences.   See Section 13 in [RFC2911]\n         for\
    \ a more complete description of each status code.\n         For the following\
    \ success status codes, the requested\n         attributes are returned in Group\
    \ 3 in the response:\n         successful-ok:  no operation attributes or values\
    \ were\n         substituted or ignored (same as Print-Job) and no requested\n\
    \         attributes were unsupported.\n         successful-ok-ignored-or-substituted-attributes:\
    \ The\n         \"requested-attributes\" operation attribute MAY, but NEED NOT,\n\
    \         be returned with the unsupported values.\n         successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For the error status codes, Group 3 is returned containing\
    \ no\n   attributes or is not returned at all:\n         client-error-not-possible:\
    \  Same as Print-Job, in addition the\n         Printer object is not accepting\
    \ any requests.\n         client-error-request-entity-too-large:  same as Print-job,\n\
    \         except that no print data is involved.\n         client-error-attributes-or-values-not-supported:\
    \  not\n         applicable, since unsupported operation attributes and/or\n \
    \        values MUST be ignored and an appropriate success code returned\n   \
    \      (see above).\n         client-error-conflicting-attributes:  same as Print-Job,\
    \ except\n         that \"ipp-attribute-fidelity\" is not involved.\n        \
    \ server-error-operation-not-supported: not applicable (since\n         Get-Printer-Attributes\
    \ is REQUIRED).\n         server-error-device-error:  same as Print-Job, except\
    \ that no\n         document data is involved.\n         server-error-temporary-error:\
    \  same as Print-Job, except that\n         no document data is involved.\n  \
    \       server-error-not-accepting-jobs:  not applicable.\n         server-error-busy:\
    \  same as Print-Job, except the IPP object is\n         too busy to accept even\
    \ query requests.\n         server-error-job-canceled:  not applicable.\n"
- title: 3.1.3.1.6   Get-Jobs
  contents:
  - "3.1.3.1.6   Get-Jobs\n   All of the Print-Job status codes described in Section\
    \ 3.1.3.1.1\n   Print-Job Response are applicable to the Get-Jobs operation with\
    \ the\n   following specialization's and differences.   See Section 13 in\n  \
    \ [RFC2911] for a more complete description of each status code.\n   For the following\
    \ success status codes, the requested attributes are\n   returned in Group 3 in\
    \ the response:\n         successful-ok:  same as Get-Printer-Attributes (see\
    \ section\n         3.1.3.1.5).\n         successful-ok-ignored-or-substituted-attributes:\
    \ same as Get-\n         Printer-Attributes (see section 3.1.3.1.5).\n       \
    \  successful-ok-conflicting-attributes: same as Get-Printer-\n         Attributes\
    \ (see section 3.1.3.1.5).\n   For any error status codes, Group 3 is returned\
    \ containing no\n   attributes or is not returned at all.  The following brief\
    \ error\n   status code descriptions contain unique information for use with\n\
    \   Get-Jobs operation.  See section 14 for the other error status codes\n   that\
    \ apply uniformly to all operations:\n         client-error-not-possible:  Same\
    \ as Print-Job, in addition the\n         Printer object is not accepting any\
    \ requests.\n         client-error-request-entity-too-large:  same as Print-job,\n\
    \         except that no print data is involved.\n         client-error-document-format-not-supported:\
    \  not applicable.\n         client-error-attributes-or-values-not-supported:\
    \  not\n         applicable, since unsupported operation attributes and/or\n \
    \        values MUST be ignored and an appropriate success code returned\n   \
    \      (see above).\n         client-error-conflicting-attributes:  same as Print-Job,\
    \ except\n         that \"ipp-attribute-fidelity\" is not involved.\n        \
    \ server-error-operation-not-supported:  not applicable (since\n         Get-Jobs\
    \ is REQUIRED).\n         server-error-device-error:  same as Print-Job, except\
    \ that no\n         document data is involved.\n         server-error-temporary-error:\
    \  same as Print-Job, except that\n         no document data is involved.\n  \
    \       server-error-not-accepting-jobs:  not applicable.\n         server-error-job-canceled:\
    \  not applicable.\n"
- title: 3.1.3.1.7   Pause-Printer
  contents:
  - "3.1.3.1.7   Pause-Printer\n   All of the Print-Job status codes described in\
    \ Section 3.1.3.1.1\n   Print-Job Response are applicable to Pause-Printer with\
    \ the following\n   specializations and differences.  See Section 13 in [RFC2911]\
    \ for a\n   more complete description of each status code.\n   For the following\
    \ success status codes, the Printer object is being\n   stopped from scheduling\
    \ jobs on all its devices.\n         successful-ok:  no request attributes were\
    \ substituted or\n         ignored (same as Print-Job).\n         successful-ok-ignored-or-substituted-attributes:\
    \  same as\n         Print-Job.\n         successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For any of the error status codes, the Printer object\
    \ has not been\n   stopped from scheduling jobs on all its devices.\n        \
    \ client-error-not-possible: not applicable.\n         client-error-not-found:\
    \  the target Printer object does not\n         exist.\n         client-error-gone:\
    \  the target Printer object no longer exists\n         and no forwarding address\
    \ is known.\n         client-error-request-entity-too-large:  same as Print-Job,\n\
    \         except no document data is involved.\n         client-error-document-format-not-supported:\
    \  not applicable.\n         client-error-conflicting-attributes:  same as Print-Job,\
    \ except\n         that the Printer's \"printer-is-accepting-jobs\" attribute\
    \ is not\n         involved.\n         server-error-operation-not-supported: the\
    \ Pause-Printer\n         operation is not supported.\n         server-error-device-error:\
    \ not applicable.\n         server-error-temporary-error:  same as Print-Job,\
    \ except no\n         document data is involved.\n         server-error-not-accepting-jobs:\
    \  not applicable.\n         server-error-job-canceled:  not applicable.\n"
- title: 3.1.3.1.8   Resume-Printer
  contents:
  - "3.1.3.1.8   Resume-Printer\n   All of the Print-Job status code descriptions\
    \ in Section 3.1.3.1.1\n   Print-Job Response with the specialization's described\
    \ for Pause-\n   Printer are applicable to Resume-Printer.  See Section 13 in\n\
    \   [RFC2911] for a more complete description of each status code.\n   For the\
    \ following success status codes, the Printer object resumes\n   scheduling jobs\
    \ on all its devices.\n         successful-ok:  no request attributes were substituted\
    \ or\n         ignored (same as Print-Job).\n         successful-ok-ignored-or-substituted-attributes:\
    \   same as\n         Print-Job.\n         successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For any of the error status codes, the Printer object\
    \ does not resume\n   scheduling jobs.\n         server-error-operation-not-supported:\
    \ the Resume-Printer\n         operation is not supported.\n"
- title: 3.1.3.1.8.1   What about Printers unable to change state due to an error
  contents:
  - "3.1.3.1.8.1   What about Printers unable to change state due to an error\n  \
    \            condition?\n   If, in case, the IPP printer is unable to change its\
    \ state due to\n   some problem with the actual printer device (say, it is shut\
    \ down or\n   there is a media-jam as indicated in [RFC2911]), what should be\
    \ the\n   result of the \"Resume-Printer\" operation?  Should it still change\
    \ the\n   'printer-state-reasons' and return success or should it fail ?\n   The\
    \ Resume-Printer operation must clear the 'paused' or 'moving-to-\n   paused'\
    \ 'printer-state-message'.  The operation must return a\n   'successful-ok' status\
    \ code.\n"
- title: 3.1.3.1.8.2   How is "printer-state" handled on Resume-Printer?
  contents:
  - "3.1.3.1.8.2   How is \"printer-state\" handled on Resume-Printer?\n   If the\
    \ Resume-Printer operation succeeds, what should be the value of\n   \"printer-state\"\
    \ and  who should take care of the \"printer-state\"\n   attribute value later\
    \ on ?\n   The Resume-Printer operation may change the \"printer-state-reasons\"\
    \n   value.\n   The \"printer-state\" will change to one of three states:\n  \
    \    1. 'idle' - no additional jobs and no error conditions present\n      2.\
    \ 'processing' - job available and no error conditions present\n      3. current\
    \ state (i.e. no change) an error condition is present\n         (e.g. media jam)\n\
    \   In the third case the \"printer-state-reason\" will be cleared by\n   automata\
    \ when it detects the error condition no longer exists.  The\n   \"printer-state\"\
    \ will move to 'idle' or 'processing' when conditions\n   permit. (i.e. no more\
    \ error conditions)\n"
- title: 3.1.3.1.9   Purge-Printer
  contents:
  - "3.1.3.1.9   Purge-Printer\n   All of the Print-Job status code descriptions in\
    \ Section 3.1.3.1.1\n   Print-Job Response with the specialization's described\
    \ for Pause-\n   Printer are applicable to Purge-Printer.  See Section 13 in [RFC2911]\n\
    \   for a more complete description of each status code.\n   For the following\
    \ success status codes, the Printer object purges all\n   it's jobs.\n       \
    \  successful-ok:  no request attributes were substituted or\n         ignored\
    \ (same as Print-Job).\n         successful-ok-ignored-or-substituted-attributes:\
    \   same as\n         Print-Job.\n         successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For any of the error status codes, the Printer object\
    \ does not purge\n   any jobs.\n         server-error-operation-not-supported:\
    \ the Purge-Printer\n         operation is not supported.\n"
- title: 3.1.3.2  Job Operations
  contents:
  - '3.1.3.2  Job Operations

    '
- title: 3.1.3.2.1   Send-Document
  contents:
  - "3.1.3.2.1   Send-Document\n   All of the Print-Job status codes described in\
    \ Section 3.1.3.1.1\n   Print-Job Response are applicable to the Get-Printer-Attributes\n\
    \   operation with the following specialization's and differences.   See\n   Section\
    \ 13 in [RFC2911] for a more complete description of each\n   status code.\n \
    \  For the following success status codes, the document has been added\n   to\
    \ the specified Job object and the job's \"number-of-documents\"\n   attribute\
    \ has been incremented:\n         successful-ok:  no request attributes were substituted\
    \ or\n         ignored (same as Print-Job).\n         successful-ok-ignored-or-substituted-attributes:\
    \  same as\n         Print-Job.\n         successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For the error status codes, no document has been added\
    \ to the Job\n   object and the job's \"number-of-documents\" attribute has not\
    \ been\n   incremented:\n         client-error-not-possible: Same as Print-Job,\
    \ except that the\n         Printer's \"printer-is-accepting-jobs\" attribute\
    \ is not\n         involved, so that the client is able to finish submitting a\
    \ job\n         that was created with a Create-Job operation after this\n    \
    \     attribute has been set to 'true'.  Another condition is that\n         the\
    \ state of the job precludes Send-Document, i.e., the job has\n         already\
    \ been closed out by the client.  However, if the IPP\n         Printer closed\
    \ out the job due to timeout, the 'client-error-\n         timeout' error status\
    \ SHOULD  be returned instead.\n         client-error-timeout: This request was\
    \ sent after the Printer\n         closed the job, because it has not received\
    \ a Send-Document or\n         Send-URI operation within the Printer's \"multiple-operation-\n\
    \         time-out\" period .\n         client-error-request-entity-too-large:\
    \  same as Print-Job.\n         client-error-conflicting-attributes:  same as\
    \ Print-Job, except\n         that \"ipp-attributes-fidelity\" operation attribute\
    \ is not\n         involved..\n         server-error-operation-not-supported:\
    \  the Send-Document\n         request is not supported.\n         server-error-not-accepting-jobs:\
    \  not applicable.\n         server-error-job-canceled:  the job has been canceled\
    \ by an\n         operator or the system while the client was transmitting the\n\
    \         data.\n"
- title: 3.1.3.2.2   Send-URI
  contents:
  - "3.1.3.2.2   Send-URI\n   All of the Print-Job status code descriptions in Section\
    \ 3.1.3.1.1\n   Print-Job Response with the specialization's described for Send-\n\
    \   Document are applicable to Send-URI.  See Section 13 in [RFC2911] for\n  \
    \ a more complete description of each status code.\n         client-error-uri-scheme-not-supported:\
    \  the URI scheme supplied\n         in the \"document-uri\" operation attribute\
    \ is not supported and\n         the \"document-uri\" attribute MUST be returned\
    \ in the\n         Unsupported Attributes group.\n         server-error-operation-not-supported:\
    \ the Send-URI operation is\n         not supported.\n"
- title: 3.1.3.2.3   Cancel-Job
  contents:
  - "3.1.3.2.3   Cancel-Job\n   All of the Print-Job status codes described in Section\
    \ 3.1.3.1.1\n   Print-Job Response are applicable to Cancel-Job with the following\n\
    \   specializations and differences.  See Section 13 in [RFC2911] for a\n   more\
    \ complete description of each status code.\n   For the following success status\
    \ codes, the Job object is being\n   canceled or has been canceled:\n        \
    \ successful-ok:  no request attributes were substituted or\n         ignored\
    \ (same as Print-Job).\n         successful-ok-ignored-or-substituted-attributes:\
    \   same as\n         Print-Job.\n         successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For any of the error status codes, the Job object has\
    \ not been\n   canceled or was previously canceled.\n         client-error-not-possible:\
    \  The request cannot be carried out\n         because of the state of the Job\
    \ object ('completed',\n         'canceled', or 'aborted') or the state of the\
    \ system.\n         client-error-not-found:  the target Printer and/or Job object\n\
    \         does not exist.\n         client-error-gone:  the target Printer and/or\
    \ Job object no\n         longer exists and no forwarding address is known.\n\
    \         client-error-request-entity-too-large:  same as Print-Job,\n       \
    \  except no document data is involved.\n         client-error-document-format-not-supported:\
    \  not applicable.\n         client-error-attributes-or-values-not-supported:\
    \  not\n         applicable, since unsupported operation attributes and values\n\
    \         MUST be ignored.\n         client-error-conflicting-attributes:  same\
    \ as Print-Job, except\n         that the Printer's \"printer-is-accepting-jobs\"\
    \ attribute is not\n         involved.\n         server-error-operation-not-supported:\
    \  not applicable (Cancel-\n         Job is REQUIRED).\n         server-error-device-error:\
    \  same as Print-Job, except no\n         document data is involved.\n       \
    \  server-error-temporary-error:  same as Print-Job, except no\n         document\
    \ data is involved.\n         server-error-not-accepting-jobs:  not applicable.\n\
    \         server-error-job-canceled:  not applicable.\n"
- title: 3.1.3.2.4   Get-Job-Attributes
  contents:
  - "3.1.3.2.4   Get-Job-Attributes\n   All of the Print-Job status codes described\
    \ in Section 3.1.3.1.1\n   Print-Job Response are applicable to Get-Job-Attributes\
    \ with the\n   following specializations and differences.  See Section 13 in\n\
    \   [RFC2911] for a more complete description of each status code.\n   For the\
    \ following success status codes, the requested attributes are\n   returned in\
    \ Group 3 in the response:\n         successful-ok:  same as Get-Printer-Attributes\
    \ (see section\n         3.1.3.1.5).\n         successful-ok-ignored-or-substituted-attributes:\
    \  same as Get-\n         Printer-Attributes (see section 3.1.3.1.5).\n      \
    \   successful-ok-conflicting-attributes:  same as Get-Printer-\n         Attributes\
    \ (see section 3.1.3.1.5).\n   For the error status codes, Group 3 is returned\
    \ containing no\n   attributes or is not returned at all.\n         client-error-not-possible:\
    \  Same as Print-Job, in addition the\n         Printer object is not accepting\
    \ any requests.\n         client-error-document-format-not-supported:  not applicable.\n\
    \         client-error-attributes-or-values-not-supported:  not\n         applicable.\n\
    \         client-error-uri-scheme-not-supported:  not applicable.\n         client-error-attributes-or-values-not-supported:\
    \  not\n         applicable, since unsupported operation attributes and/or\n \
    \        values MUST be ignored and an appropriate success code returned\n   \
    \      (see above).\n         client-error-conflicting-attributes:  not applicable\n\
    \         server-error-operation-not-supported:  not applicable (since\n     \
    \    Get-Job-Attributes is REQUIRED).\n         server-error-device-error:  same\
    \ as Print-Job, except no\n         document data is involved.\n         server-error-temporary-error:\
    \  sane as Print-Job, except no\n         document data is involved..\n      \
    \   server-error-not-accepting-jobs:  not applicable.\n         server-error-job-canceled:\
    \  not applicable.\n"
- title: 3.1.3.2.5   Hold-Job
  contents:
  - "3.1.3.2.5   Hold-Job\n   All of the Print-Job status codes described in Section\
    \ 3.1.3.1.1\n   Print-Job Response are applicable to Hold-Job with the following\n\
    \   specializations and differences.  See Section 13 in [RFC2911] for a\n   more\
    \ complete description of each status code.\n   For the following success status\
    \ codes, the Job object is being held\n   or has been held:\n         successful-ok:\
    \  no request attributes were substituted or\n         ignored (same as Print-Job).\n\
    \         successful-ok-ignored-or-substituted-attributes:   same as\n       \
    \  Print-Job.\n         successful-ok-conflicting-attributes:  same as Print-Job.\n\
    \   For any of the error status codes, the Job object has not been held\n   or\
    \ was previously held.\n         client-error-not-possible:  The request cannot\
    \ be carried out\n         because of the state of the Job object ('completed',\n\
    \         'canceled', or 'aborted') or the state of the system.\n         client-error-not-found:\
    \  the target Printer and/or Job object\n         does not exist.\n         client-error-gone:\
    \  the target Printer and/or Job object no\n         longer exists and no forwarding\
    \ address is known.\n         client-error-request-entity-too-large:  same as\
    \ Print-Job,\n         except no document data is involved.\n         client-error-document-format-not-supported:\
    \  not applicable.\n         client-error-conflicting-attributes:  same as Print-Job,\
    \ except\n         that the Printer's \"printer-is-accepting-jobs\" attribute\
    \ is not\n         involved.\n         server-error-operation-not-supported: the\
    \ Hold-Job operation is\n         not supported.\n         server-error-device-error:\
    \ not applicable.\n         server-error-temporary-error:  same as Print-Job,\
    \ except no\n         document data is involved.\n         server-error-not-accepting-jobs:\
    \  not applicable.\n         server-error-job-canceled:  not applicable.\n"
- title: 3.1.3.2.6   Release-Job
  contents:
  - "3.1.3.2.6   Release-Job\n   All of the Print-Job status code descriptions in\
    \ Section 3.1.3.1.1\n   Print-Job Response with the specialization's described\
    \ for Hold-Job\n   are applicable to Release-Job.  See Section 13 in [RFC2911]\
    \ for a\n   more complete description of each status code.\n         server-error-operation-not-supported:\
    \ the Release-Job operation\n         is not supported.\n"
- title: 3.1.3.2.7   Restart-Job
  contents:
  - "3.1.3.2.7   Restart-Job\n   All of the Print-Job status code descriptions in\
    \ Section 3.1.3.1.1\n   Print-Job Response with the specialization's described\
    \ for Hold-Job\n   are applicable to Restart-Job.  See Section 13 in [RFC2911]\
    \ for a\n   more complete description of each status code.\n         server-error-operation-not-supported:\
    \ the Restart-Job operation\n         is not supported.\n"
- title: 3.1.3.2.7.1   Can documents be added to a restarted job?
  contents:
  - "3.1.3.2.7.1   Can documents be added to a restarted job?\n   Assume I give a\
    \ Create-Job request along with a set of 5 documents.\n   All the documents get\
    \ printed and the job state is moved to\n   completed.  I issue a Restart-Job\
    \ request on the job. Now the issue\n   is that, if I try to add new documents\
    \ to the restarted job, will the\n   IPP Server permit me to do so or  return\
    \ \"client-error-not-possible \"\n   and again print those 5 jobs?\n   A job can\
    \ not move to the 'completed' state until all the documents\n   have been processed.\
    \  The 'last-document' flag indicates when the\n   last document for a job is\
    \ being sent from the client.  This is the\n   semantic equivalent of closing\
    \ a job.  No documents may be added once\n   a job is closed. Section 3.3.7 of\
    \ the IPP/1.1 model states \"The job\n   is moved to the 'pending' job state and\
    \ restarts the beginning on the\n   same IPP Printer object with the same attribute\
    \ values.\"  'number-\n   of-documents' is a job attribute.\n"
- title: 3.1.4  Returning unsupported attributes in Get-Xxxx responses (Issue
  contents:
  - "3.1.4  Returning unsupported attributes in Get-Xxxx responses (Issue\n      \
    \ 1.18)\n   In the Get-Printer-Attributes, Get-Jobs, or Get-Job-Attributes\n \
    \  responses, the client cannot depend on getting unsupported attributes\n   returned\
    \ in the Unsupported Attributes group that the client\n   requested, but are not\
    \ supported by the IPP object.  However, such\n   unsupported requested attributes\
    \ will not be returned in the Job\n   Attributes or Printer Attributes group (since\
    \ they are unsupported).\n   Furthermore, the IPP object is REQUIRED to return\
    \ the 'successful-\n   ok-ignored-or-substituted-attributes' status code, so that\
    \ the client\n   knows that not all that was requested has been returned.\n"
- title: 3.1.5  Sending empty attribute groups
  contents:
  - "3.1.5  Sending empty attribute groups\n   The [RFC2911] and [RFC2910] specifications\
    \ RECOMMEND that a sender\n   not send an empty attribute group in a request or\
    \ a response.\n   However, they REQUIRE a receiver to accept an empty attribute\
    \ group\n   as equivalent to the omission of that group.  So a client SHOULD omit\n\
    \   the Job Template Attributes group entirely in a create operation that\n  \
    \ is not supplying any Job Template attributes.  Similarly, an IPP\n   object\
    \ SHOULD omit an empty Unsupported Attributes group if there are\n   no unsupported\
    \ attributes to be returned in a response.\n   The [RFC2910] specification REQUIRES\
    \ a receiver to be able to receive\n   either an empty attribute group or an omitted\
    \ attribute group and\n   treat them equivalently.  The term \"receiver\" means\
    \ an IPP object for\n   a request and a client for a response.  The term \"sender'\
    \ means a\n   client for a request and an IPP object for a response.\n   There\
    \ is an exception to the rule for Get-Jobs when there are no\n   attributes to\
    \ be returned.  [RFC2910] contains the following\n   paragraph:\n   The syntax\
    \ allows an xxx-attributes-tag to be present when the xxx-\n   attribute-sequence\
    \ that follows is empty. The syntax is defined this\n   way to allow for the response\
    \ of Get-Jobs where no attributes are\n   returned for some job-objects.  Although\
    \ it is RECOMMENDED that the\n   sender not send an xxx-attributes-tag if there\
    \ are no attributes\n   (except in the Get-Jobs response just mentioned), the\
    \ receiver MUST\n   be able to decode such syntax.\n"
- title: 3.2  Printer Operations
  contents:
  - '3.2  Printer Operations

    '
- title: 3.2.1  Print-Job operation
  contents:
  - '3.2.1  Print-Job operation

    '
- title: 3.2.1.1  Flow controlling the data portion of a Print-Job request (Issue
  contents:
  - "3.2.1.1  Flow controlling the data portion of a Print-Job request (Issue\n  \
    \       1.22)\n   A paused printer, or one that is stopped due to paper out or\
    \ jam or\n   spool space full or buffer space full, may flow control the data\
    \ of a\n   Print-Job operation (at the TCP/IP layer), so that the client is not\n\
    \   able to send all the document data.  Consequently, the Printer will\n   not\
    \ return a response until the condition is changed.\n   The Printer should not\
    \ return a Print-Job response with an error code\n   in any of these conditions,\
    \ since either the printer will be resumed\n   and/or the condition will be freed\
    \ either by human intervention or as\n   jobs print.\n   In writing test scripts\
    \ to test IPP Printers, the script must also be\n   written not to expect a response,\
    \ if the printer has been paused,\n   until the printer is resumed, in order to\
    \ work with all possible\n   implementations.\n"
- title: 3.2.1.2  Returning job-state in Print-Job response (Issue 1.30)
  contents:
  - "3.2.1.2  Returning job-state in Print-Job response (Issue 1.30)\n   An IPP client\
    \ submits a small job via Print-Job.  By the time the IPP\n   printer/print server\
    \ is putting together a response to the operation,\n   the job has finished printing\
    \ and been removed as an object from the\n   print system.  What should the job-state\
    \ be in the response?\n   The Model suggests that the Printer return a response\
    \ before it even\n   accepts the document content.  The Job Object Attributes\
    \ are returned\n   only if the IPP object returns one of the success status codes.\
    \ Then\n   the job-state would always be \"pending\" or \"pending-held\".\n  \
    \ This issue comes up for the implementation of an IPP Printer object\n   as a\
    \ server that forwards jobs to devices that do not provide job\n   status back\
    \ to the server.  If the server is reasonably certain that\n   the job completed\
    \ successfully, then it should return the job-state\n   as 'completed'.  Also\
    \ the server can keep the job in its \"job\n   history\" long after the job is\
    \ no longer in the device.  Then a user\n   could query the server and see that\
    \ the job was in the 'completed'\n   state and completed as specified by the jobs\
    \ \"time-at-completed\"\n   time, which would be the same as the server submitted\
    \ the job to the\n   device.\n   An alternative is for the server to respond to\
    \ the client before or\n   while sending the job to the device, instead of waiting\
    \ until the\n   server has finished sending the job to the device.  In this case,\
    \ the\n   server can return the job's state as 'pending' with the 'job-\n   outgoing'\
    \ value in the job's \"job-state-reasons\" attribute.\n   If the server doesn't\
    \ know for sure whether the job completed\n   successfully (or at all), it could\
    \ return the (out-of-band) 'unknown'\n   value.\n   On the other hand, if the\
    \ server is able to query the device and/or\n   setup some sort of event notification\
    \ that the device initiates when\n   the job makes state transitions, then the\
    \ server can return the\n   current job state in the Print-Job response and in\
    \ subsequent queries\n   because the server knows what the job state is in the\
    \ device (or can\n   query the device).\n   All of these alternatives depend on\
    \ implementation of the server and\n   the device.\n"
- title: 3.2.2  Get-Printer-Attributes operation
  contents:
  - "3.2.2  Get-Printer-Attributes operation\n   If a Printer supports the \"printer-make-and-model\"\
    \ attribute and\n   returns the .INF file model name of the printer in that attribute,\n\
    \   the Microsoft client will automatically install the correct driver\n   (if\
    \ available).\n   Clients which poll periodically for printer status or queued-job-\n\
    \   count should use the \"requested-attributes\" operation attribute  to\n  \
    \ limit the scope of the query in order to save Printer and network\n   resources.\n"
- title: 3.2.3  Get-Jobs operation
  contents:
  - '3.2.3  Get-Jobs operation

    '
- title: 3.2.3.1  Get-Jobs, my-jobs='true', and 'requesting-user-name' (Issue
  contents:
  - "3.2.3.1  Get-Jobs, my-jobs='true', and 'requesting-user-name' (Issue\n      \
    \   1.39)?\n   In [RFC2911] section 3.2.6.1 'Get-Jobs Request', if the attribute\n\
    \   'my-jobs' is present and set to TRUE, MUST the 'requesting-user-name'\n  \
    \ attribute be there too, and if it's not present what should the IPP\n   printer\
    \ do?\n   [RFC2911] Section 8.3 describes the various cases of \"requesting-\n\
    \   user-name\" being present or not for any operation.  If the client\n   does\
    \ not supply a value for \"requesting-user-name\", the printer MUST\n   assume\
    \ that the client is supplying some anonymous name, such as\n   \"anonymous\"\
    .\n"
- title: 3.2.3.2  Why is there a "limit" attribute in the Get-Jobs operation?
  contents:
  - "3.2.3.2  Why is there a \"limit\" attribute in the Get-Jobs operation?\n   When\
    \ using the Get-Jobs operation a client implementer might choose\n   to limit\
    \ the number of jobs that the client shows on the first\n   screenful.  For example,\
    \ if its UI can only display 50 jobs, it can\n   defend itself against a printer\
    \ that would otherwise return 500 jobs,\n   perhaps taking a long time on a slow\
    \ dial-up line. The client can\n   then go and ask for a larger number of jobs\
    \ in the background, while\n   showing the user the first 50 jobs. Since the job\
    \ history is returned\n   in reverse order, namely the most recently completed\
    \ jobs are\n   returned first, the user is most likely interested in the first\
    \ jobs\n   that are returned. Limiting the number of jobs may be especially\n\
    \   useful for a client that is requesting 'completed' jobs from a\n   printer\
    \ that keeps a long job history. Clients that don't mind\n   sometimes getting\
    \ very large responses, can omit the \"limit\"\n   attribute in their Get-Jobs\
    \ requests.\n"
- title: 3.2.4  Create-Job operation
  contents:
  - "3.2.4  Create-Job operation\n   A Printer may respond to a Create-Job operation\
    \ with \"job-state\"\n   'pending' or 'pending-held' and \" job-state-reason\"\
    \ 'job-data-\n   insufficient' to indicate that operation has been accepted by\
    \ the\n   Printer, but the Printer is expecting additional document data before\n\
    \   it can move the job into the 'processing' state.  Alternatively, it\n   may\
    \ respond with \"job-state\" 'processing' and \"job-state-reason\"\n   'job-incoming'\
    \  to indicate that the Create-Job operation has been\n   accepted by the Printer,\
    \ but the Printer is expecting additional\n   Send-Document and/or Send-URI operations\
    \ and/or is\n   accessing/accepting document data.  The second alternative is\
    \ for\n   non-spooling Printers that don't implement the 'pending' state.\n  \
    \ Should the server wait for the \"last-document\" operation attribute\n   set\
    \ to 'true' before starting to \"process\" the job?\n   It depends on implementation.\
    \ Some servers spool the entire job,\n   including all document data, before starting\
    \ to process, so such an\n   implementation would wait for the \"last-document\"\
    \ before starting to\n   process the job. If the time-out occurs without the \"\
    last-document\",\n   then the server takes one of the indicated actions in section\
    \ 3.3.1\n   in the [RFC2911] document. Other servers will start to process\n \
    \  document data as soon as they have some. These are the so-called\n   \"non-spooling\"\
    \ printers. Currently, there isn't a way for a client to\n   determine whether\
    \ the Printer will spool all the data or will start\n   to process (and print)\
    \ as soon as it has some data.\n"
- title: 3.3  Job Operations
  contents:
  - '3.3  Job Operations

    '
- title: 3.3.1  Validate-Job
  contents:
  - "3.3.1  Validate-Job\n   The Validate-Job operation has been designed so that\
    \ its\n   implementation may be a part of the Print-Job operation.  Therefore,\n\
    \   requiring Validate-Job is not a burden on implementers.  Also it is\n   useful\
    \ for client's to be able to count on its presence in all\n   conformance implementations,\
    \ so that the client can determine before\n   sending a long document, whether\
    \ the job will be accepted by the IPP\n   Printer or not.\n"
- title: 3.3.2   Restart-Job
  contents:
  - "3.3.2   Restart-Job\n   The Restart-Job operation allows the reprocessing of\
    \ a completed job.\n   Some jobs store the document data on the printer.  Jobs\
    \ created using\n   the Print-Job operation are an example.  It is required that\
    \ the\n   printer retains the job data after the job has moved to a 'completed\n\
    \   state' in order for the Restart-Job operation to succeed.\n   Some jobs contain\
    \ only a reference to the job data.  A job created\n   using the Print-URI is\
    \ an example of such a job.  When the Restart-\n   Job operation is issued the\
    \ job is reprocessed. The job data MUST be\n   retrieved again to print the job.\n\
    \   It is possible that a job fails while attempting to access the print\n   data.\
    \  When such a job is the target of a Restart-Job  the Printer\n   SHALL attempt\
    \ to retrieve the job data again.\n"
- title: 4  Object Attributes
  contents:
  - '4  Object Attributes

    '
- title: 4.1  Attribute Syntax's
  contents:
  - '4.1  Attribute Syntax''s

    '
- title: 4.1.1  The 'none' value for empty sets (Issue 1.37)
  contents:
  - "4.1.1  The 'none' value for empty sets (Issue 1.37)\n   [RFC2911] states that\
    \ the 'none' value should be used as the value of\n   a 1setOf when the set is\
    \ empty. In most cases, sets that are\n   potentially empty contain keywords so\
    \ the keyword 'none' is used, but\n   for the 3 finishings attributes, the values\
    \ are enums and thus the\n   empty set is represented by the enum 3.  Currently\
    \ there are no other\n   attributes with 1setOf values, which can be empty and\
    \ can contain\n   values that are not keywords.  This exception requires special\
    \ code\n   and is a potential place for bugs.  It would have been better if we\n\
    \   had chosen an out-of-band value, either \"no-value\" or some new value,\n\
    \   such as 'none'.  Since we didn't, implementations have to deal with\n   the\
    \ different representations of 'none', depending on the attribute\n   syntax.\n"
- title: 4.1.2  Multi-valued attributes (Issue 1.31)
  contents:
  - "4.1.2  Multi-valued attributes (Issue 1.31)\n   What is the attribute syntax\
    \ for a multi-valued attribute?  Since\n   some attributes support values in more\
    \ than one data type, such as\n   \"media\", \"job-hold-until\", and \"job-sheets\"\
    , IPP semantics associate\n   the attribute syntax with each value, not with the\
    \ attribute as a\n   whole.  The protocol associates the attribute syntax tag\
    \ with each\n   value.  Don't be fooled, just because the attribute syntax tag\
    \ comes\n   before the attribute keyword.  All attribute values after the first\n\
    \   have a zero length attribute keyword as the indication of a\n   subsequent\
    \ value of the same attribute.\n"
- title: 4.1.3  Case Sensitivity in URIs (issue 1.6)
  contents:
  - "4.1.3  Case Sensitivity in URIs (issue 1.6)\n   IPP client and server implementations\
    \ must be aware of the diverse\n   uppercase/lowercase nature of URIs.  RFC 2396\
    \ defines URL schemes and\n   Host names as case insensitive but reminds us that\
    \ the rest of the\n   URL may well demonstrate case sensitivity.  When creating\
    \ URL's for\n   fields where the choice is completely arbitrary, it is probably\
    \ best\n   to select lower case.  However, this cannot be guaranteed and\n   implementations\
    \ MUST NOT rely on any fields being case-sensitive or\n   case-insensitive in\
    \ the URL beyond the URL scheme and host name\n   fields.\n   The reason that\
    \ the IPP specification does not make any restrictions\n   on URIs, is so that\
    \ implementations of IPP may use off-the-shelf\n   components that conform to\
    \ the standards that define URIs, such as\n   RFC 2396 and the HTTP/1.1 specifications\
    \ [RFC2616].  See these\n   specifications for rules of matching, comparison,\
    \ and case-\n   sensitivity.\n   It is also recommended that System Administrators\
    \ and implementations\n   avoid creating URLs for different printers that differ\
    \ only in their\n   case.  For example, don't have Printer1 and printer1 as two\
    \ different\n   IPP Printers.\n   Example of equivalent URI's\n        http://abc.com:80/~smith/home.html\n\
    \        http://ABC.com/%7Esmith/home.html\n        http:/ABC.com:/%7esmith/home.html\n\
    \   Example of equivalent URI's using the IPP scheme\n        ipp://abc.com:631/~smith/home.html\n\
    \        ipp://ABC.com/%7Esmith/home.html\n        http:/ABC.com:631/%7esmith/home.html\n\
    \   The HTTP/1.1 specification [RFC2616] contains more details on\n   comparing\
    \ URLs.\n"
- title: 4.1.4  Maximum length for xxxWithLanguage and xxxWithoutLanguage
  contents:
  - "4.1.4  Maximum length for xxxWithLanguage and xxxWithoutLanguage\n   The 'textWithLanguage'\
    \ and 'nameWithLanguage' are compound syntaxes\n   that have two components. \
    \ The first component is the 'language'\n   component that can contain up to 63\
    \ octets.  The second component is\n   the 'text' or 'name' component.  The maximum\
    \ length of these are 1023\n   octets and 255 octets respectively.  The definition\
    \ of attributes\n   with either syntax may further restrict the length (e.g.,\
    \ printer-\n   name (name(127))).\n   The length of the 'language' component has\
    \ no effect on the allowable\n   length of 'text' in 'textWithLanguage' or the\
    \ length of 'name' in\n   'nameWithLanguage'\n"
- title: 4.2  Job Template Attributes
  contents:
  - '4.2  Job Template Attributes

    '
- title: 4.2.1  multiple-document-handling(type2 keyword)
  contents:
  - '4.2.1  multiple-document-handling(type2 keyword)

    '
- title: 4.2.1.1  Support of multiple document jobs
  contents:
  - "4.2.1.1  Support of multiple document jobs\n   IPP/1.0 is silent on which of\
    \ the four effects an implementation\n   would perform if it supports Create-Job,\
    \ but does not support\n   \"multiple-document-handling\" or multiple documents\
    \ per job.  IPP/1.1\n   was changed so that a Printer could support Create-Job\
    \ without having\n   to support multiple document jobs.  The \"multiple-document-jobs-\n\
    \   supported\" (boolean) Printer description attribute was added to\n   IPP/1.1\
    \ along with the 'server-error-multiple-document-jobs-not-\n   supported' status\
    \ code for a Printer to indicate whether or not it\n   supports multiple document\
    \ jobs, when it supports the Create-Job\n   operation.  Also IPP/1.1 was clarified\
    \ that the Printer MUST support\n   the \"multiple-document-handling\" (type2\
    \ keyword) Job Template\n   attribute with at least one value if the Printer supports\
    \ multiple\n   documents per job.\n"
- title: 4.3  Job Description Attributes
  contents:
  - '4.3  Job Description Attributes

    '
- title: 4.3.1  Getting the date and time of day
  contents:
  - "4.3.1  Getting the date and time of day\n   The \"date-time-at-creation\", \"\
    date-time-at-processing\", and \"date-\n   time-at-completed\" attributes are\
    \ returned as dateTime syntax.  These\n   attributes are OPTIONAL for a Printer\
    \ to support.  However, there are\n   various ways for a Printer to get the date\
    \ and time of day.  Some\n   suggestions:\n      1. A Printer can get time from\
    \ an NTP timeserver if there's one\n         reachable on the network .  See RFC\
    \ 1305.  Also DHCP option 32\n         in RFC 2132 returns the IP address of the\
    \ NTP server.\n      2. Get the date and time at startup from a human operator\n\
    \      3. Have an operator set the date and time using a web\n         administrative\
    \ interface\n      4. Get the date and time from incoming HTTP requests, though\
    \ the\n         problems of spoofing need to be considered.  Perhaps comparing\n\
    \         several HTTP requests could reduce the chances of spoofing.\n      5.\
    \ Internal date time clock battery driven.\n      6. Query \"http://tycho.usno.navy.mil/cgi-bin/timer.pl\"\
    \n"
- title: 4.4  Printer Description Attributes
  contents:
  - '4.4  Printer Description Attributes

    '
- title: 4.4.1  queued-job-count (integer(0:MAX))
  contents:
  - '4.4.1  queued-job-count (integer(0:MAX))

    '
- title: 4.4.1.1  Why is "queued-job-count" RECOMMENDED (Issue 1.14)?
  contents:
  - "4.4.1.1  Why is \"queued-job-count\" RECOMMENDED (Issue 1.14)?\n   The reason\
    \ that \"queued-job-count\" is RECOMMENDED, is that some\n   clients look at that\
    \ attribute alone when summarizing the status of a\n   list of printers, instead\
    \ of doing a Get-Jobs to determine the number\n   of jobs in the queue.  Implementations\
    \ that fail to support the\n   \"queued-job-count\" will cause that client to\
    \ display 0 jobs when\n   there are actually queued jobs.\n   We would have made\
    \ it a REQUIRED Printer attribute, but some\n   implementations had already been\
    \ completed before the issue was\n   raised, so making it a SHOULD was a compromise.\n"
- title: 4.4.1.2  Is "queued-job-count" a good measure of how busy a printer is
  contents:
  - "4.4.1.2  Is \"queued-job-count\" a good measure of how busy a printer is\n  \
    \       (Issue 1.15)?\n   The \"queued-job-count\" is not a good measure of how\
    \ busy the printer\n   is when there are held jobs.  A future registration could\
    \ be to add a\n   \"held-job-count\" (or an \"active-job-count\") Printer Description\n\
    \   attribute if experience shows that such an attribute (combination) is\n  \
    \ needed to quickly indicate how busy a printer really is.\n"
- title: 4.4.2  printer-current-time (dateTime)
  contents:
  - "4.4.2  printer-current-time (dateTime)\n   A Printer implementation MAY support\
    \ this attribute by obtaining the\n   date and time by any number of implementation-dependent\
    \ means at\n   startup or subsequently.  Examples include:\n      1. an internal\
    \ date time clock,\n      2. from the operator at startup using the console,\n\
    \      3. from an operator using an administrative web page,\n      4. from HTTP\
    \ headers supplied in client requests,\n      5. use HTTP to query \"http://tycho.usno.navy.mil/cgi-bin/timer.pl\"\
    \n      6. from the network, using NTP [RFC1305] or DHCP option 32\n         [RFC2132]\
    \ that returns the IP address of the NTP server.\n   If an implementation supports\
    \ this attribute by obtaining the current\n   time from the network (at startup\
    \ or later), but the time is not\n   available, then the implementation MUST return\
    \ the value of this\n   attribute using the out-of-band 'no-value' meaning not\
    \ configured.\n   See the beginning of section 4.1.\n   Since the new \"date-and-time-at-xxx\"\
    \ Job Description attributes refer\n   to the \"printer-current-time\", they will\
    \ be covered also.\n"
- title: 4.4.3  Printer-uri
  contents:
  - "4.4.3  Printer-uri\n   Must the operational attribute for printer-uri match one\
    \ of the\n   values in \"printer-uri-supported\"?\n   A forgiving printer implementation\
    \ would not reject the operation.\n   But the implementation has its rights to\
    \ reject a printer or job\n   operation if the operational attribute printer-uri\
    \ is not a value of\n   the printer-uri-supported.  The printer might not be improperly\n\
    \   configured.  The request obviously reached the printer. The printer\n   could\
    \ treat the printer-uri as the logical equivalent of a value in\n   the printer-uri-supported.\
    \  It would be implementation dependent for\n   which value, and associated security\
    \ policy, would apply. This does\n   also apply to a job object specified with\
    \ a printer-uri and job-id,\n   or with a job-uri. See section 4.1.3 for how to\
    \ compare URI's.\n"
- title: 4.5  Empty Jobs
  contents:
  - "4.5  Empty Jobs\n   The IPP object model does not prohibit a job that contains\
    \ no\n   documents.  Such a job may be created in a number of ways including a\n\
    \   'create-job' followed by an 'add-document' that contains no data and\n   has\
    \ the 'last-document' flag set.\n   An empty job is processed just as any other\
    \ job.  The operation that\n   \"closes\" an empty job is not rejected because\
    \ the job is empty.  If\n   no other conditions exist, other than the job is empty,\
    \ the response\n   to the operation will indicate success.  After the job is scheduled\n\
    \   and processed, the job state SHALL be 'completed'.\n   There will be some\
    \ variation in the value(s) of the \"job-state-\n   reasons\" attribute.  It is\
    \ required that if no conditions, other than\n   the job being empty, exist the\
    \ \"job-state-reasons\" SHALL include the\n   'completed-successfully'.  If other\
    \ conditions existed, the\n   'completed-with-warnings' or 'completed-with-errors'\
    \ values may be\n   used.\n"
- title: 5  Directory Considerations
  contents:
  - '5  Directory Considerations

    '
- title: 5.1  General Directory Schema Considerations
  contents:
  - "5.1  General Directory Schema Considerations\n   The [RFC2911] document lists\
    \ RECOMMENDED and OPTIONAL Printer object\n   attributes for directory schemas.\
    \  See [RFC2911] APPENDIX E: Generic\n   Directory Schema.\n   The SLP printer\
    \ template is defined in the \"Definition of the Printer\n   Abstract Service\
    \ Type v2.0\" document [svrloc-printer].  The LDAP\n   printer template is defined\
    \ in the \"Internet Printing Protocol (IPP):\n   LDAP Schema for Printer Services\"\
    \ document [ldap-printer].  Both\n   documents systematically add \"printer-\"\
    \ to any attribute that doesn't\n   already start with \"printer-\" in order to\
    \ keep the printer directory\n   attributes distinct from other directory attributes.\
    \  Also, instead\n   of using \"printer-uri-supported\", \"uri-authentication-supported\"\
    , and\n   \"uri-security-supported\", they use a \"printer-xri-supported\"\n \
    \  attribute with special syntax to contain all of the same information\n   in\
    \ a single attribute.\n"
- title: 5.2  IPP Printer with a DNS name
  contents:
  - "5.2  IPP Printer with a DNS name\n   If the IPP printer has a DNS name should\
    \ there be at least two values\n   for the printer-uri-supported attribute.  One\
    \ URL with the fully\n   qualified DNS name the other with the IP address in the\
    \ URL?\n   The printer may contain one or the other or both.  It's up to the\n\
    \   administrator to configure this attribute.\n"
- title: 6  Security Considerations
  contents:
  - "6  Security Considerations\n   The security considerations given in [RFC2911]\
    \ Section 8 \"Security\n   Considerations\" all apply to this document.  In addition,\
    \ the\n   following sub-sections describes security consideration that have\n\
    \   arisen as a result of implementation testing.\n"
- title: 6.1  Querying jobs with IPP that were submitted using other job
  contents:
  - "6.1  Querying jobs with IPP that were submitted using other job\n     submission\
    \ protocols (Issue 1.32)\n   The following clarification was added to [RFC2911]\
    \ section 8.5:\n      8.5 Queries on jobs submitted using non-IPP protocols If\
    \ the\n      device that an IPP Printer is representing is able to accept jobs\n\
    \      using other job submission protocols in addition to IPP, it is\n      RECOMMEND\
    \ that such an implementation at least allow such\n      \"foreign\" jobs to be\
    \ queried using Get-Jobs returning \"job-id\" and\n      \"job-uri\" as 'unknown'.\
    \  Such an implementation NEED NOT support\n      all of the same IPP job attributes\
    \ as for IPP jobs.  The IPP\n      object returns the 'unknown' out-of-band value\
    \ for any requested\n      attribute of a foreign job that is supported for IPP\
    \ jobs, but not\n      for foreign jobs.\n      It is further RECOMMENDED, that\
    \ the IPP Printer generate \"job-id\"\n      and \"job-uri\" values for such \"\
    foreign jobs\", if possible, so that\n      they may be targets of other IPP operations,\
    \ such as Get-Job-\n      Attributes and Cancel-Job.  Such an implementation also\
    \ needs to\n      deal with the problem of authentication of such foreign jobs.\
    \  One\n      approach would be to treat all such foreign jobs as belonging to\n\
    \      users other than the user of the IPP client.  Another approach\n      would\
    \ be for the foreign job to belong to 'anonymous'.  Only if\n      the IPP client\
    \ has been authenticated as an operator or\n      administrator of the IPP Printer\
    \ object, could the foreign jobs be\n      queried by an IPP request.  Alternatively,\
    \ if the security policy\n      were to allow users to query other users' jobs,\
    \ then the foreign\n      jobs would also be visible to an end-user IPP client\
    \ using Get-\n      Jobs and Get-Job- Attributes.\n      Thus IPP MAY be implemented\
    \ as a \"universal\" protocol that\n      provides access to jobs submitted with\
    \ any job submission\n      protocol.  As IPP becomes widely implemented, providing\
    \ a more\n      universal access makes sense.\n"
- title: 7  Encoding and Transport
  contents:
  - "7  Encoding and Transport\n   This section discusses various aspects of IPP/1.1\
    \ Encoding and\n   Transport [RFC2910].\n   A server is not required to send a\
    \ response until after it has\n   received the client's entire request.  Hence,\
    \ a client must not\n   expect a response until after it has sent the entire request.\n\
    \   However, we recommend that the server return a response as soon as\n   possible\
    \ if an error is detected while the client is still sending\n   the data, rather\
    \ than waiting until all of the data is received.\n   Therefore, we also recommend\
    \ that a client listen for an error\n   response that an IPP server MAY send before\
    \ it receives all the data.\n   In this case a client, if chunking the data, can\
    \ send a premature\n   zero-length chunk to end the request before sending all\
    \ the data (and\n   so the client can keep the connection open for other requests,\
    \ rather\n   than closing it).  If the request is blocked for some reason, a\n\
    \   client MAY determine the reason by opening another connection to\n   query\
    \ the server using Get-Printer-Attributes.\n   IPP, by design, uses TCP's built-in\
    \ flow control mechanisms [RFC 793]\n   to throttle clients when Printers are\
    \ busy.  Therefore, it is\n   perfectly normal for an IPP client transmitting\
    \ a Job to be blocked\n   for a really long time.  Accordingly, socket timeouts\
    \ must be\n   avoided.  Some socket implementations have a timeout option, which\n\
    \   specifies how long a write operation on a socket can be blocked\n   before\
    \ it times out and the blocking ends.  A client should set this\n   option for\
    \ infinite timeout when transmitting Job submissions.\n   Some IPP client applications\
    \ might be able to perform other useful\n   work while a Job transmission is blocked.\
    \  For example, the client\n   may have other jobs that it could transmit to other\
    \ Printers\n   simultaneously.  A client may have a GUI, which must remain\n \
    \  responsive to the user while the Job transmission is blocked.  These\n   clients\
    \ should be designed to spawn a thread to handle the Job\n   transmission at its\
    \ own pace, leaving the main application free to do\n   other work.  Alternatively,\
    \ single-threaded applications could use\n   non-blocking I/O.\n   Some Printer\
    \ conditions, such as jam or lack of paper, could cause a\n   client to be blocked\
    \ indefinitely.  Clients may open additional\n   connections to the Printer to\
    \ Get-Printer-Attributes, determine the\n   state of the device, alert a user\
    \ if the printer is stopped, and let\n   a user decide whether to abort the job\
    \ transmission or not.\n   In the following sections, there are tables of all\
    \ HTTP headers,\n   which describe their use in an IPP client or server.  The\
    \ following\n   is an explanation of each column in these tables.\n     - the\
    \ \"header\" column contains the name of a header\n     - the \"request/client\"\
    \ column indicates whether a client sends the\n       header.\n     - the \"request/\
    \ server\" column indicates whether a server supports\n       the header when\
    \ received.\n     - the \"response/ server\" column indicates whether a server\
    \ sends\n       the header.\n     - the \"response /client\" column indicates\
    \ whether a client\n       supports the header when received.\n     - the \"values\
    \ and conditions\" column specifies the allowed header\n       values and the\
    \ conditions for the header to be present in a\n       request/response.\n   The\
    \ table for \"request headers\" does not have columns for responses,\n   and the\
    \ table for \"response headers\" does not have columns for\n   requests.\n   The\
    \ following is an explanation of the values in the \"request/client\"\n   and\
    \ \"response/ server\" columns.\n     - must: the client or server MUST send the\
    \ header,\n     - must-if: the client or server MUST send the header when the\n\
    \       condition described in the \"values and conditions\" column is\n     \
    \  met,\n     - may: the client or server MAY send the header\n     - not: the\
    \ client or server SHOULD NOT send the header. It is not\n       relevant to an\
    \ IPP implementation.\n   The following is an explanation of the values in the\n\
    \   \"response/client\" and \"request/ server\" columns.\n     - must: the client\
    \ or server MUST support the header,\n     - may: the client or server MAY support\
    \ the header\n     - not: the client or server SHOULD NOT support the header.\
    \ It is\n       not relevant to an IPP implementation.\n"
- title: 7.1  General Headers
  contents:
  - "7.1  General Headers\n   The following is a table for the general headers.\n\
    \   General-    Request         Response       Values and Conditions\n   Header\n\
    \               Client  Server  Server Client\n   Cache-              not    \
    \ must   not     \"no-cache\" only\n     Control   must\n   Connection  must-\
    \   must    must-  must    \"close\" only.  Both\n                 if        \
    \      if             client and server\n                                    \
    \            SHOULD keep a\n                                                connection\
    \ for the\n                                                duration of a sequence\n\
    \                                                of operations.  The\n       \
    \                                         client and server MUST\n           \
    \                                     include this header\n                  \
    \                              for the last operation\n                      \
    \                          in such a sequence.\n   Date        may     may   \
    \  must   may     per RFC 1123 [RFC1123]\n                                   \
    \             from RFC 2616\n                                                [RFC2616]\n\
    \   Pragma      must    not     must   not     \"no-cache\" only\n   Transfer-\
    \   must-   must    must-  must    \"chunked\" only.  Header\n     Encoding  \
    \  if              if             MUST be present if\n                       \
    \                         Content-Length is\n                                \
    \                absent.\n   Upgrade     not     not     not    not\n   Via  \
    \       not     not     not    not\n"
- title: 7.2  Request  Headers
  contents:
  - "7.2  Request  Headers\n   The following is a table for the request headers.\n\
    \   Request-       Client   Server Request Values and Conditions\n   Header\n\
    \   Accept         may      must   \"application/ipp\" only.  This\n         \
    \                           value is the default if the\n                    \
    \                client omits it\n   Accept-        not      not     Charset information\
    \ is within the\n     Charset                        application/ipp entity\n\
    \   Accept-        may      must   empty and per RFC 2616 [RFC2616]\n     Encoding\
    \                       and IANA registry for content-\n                     \
    \               codings\n   Accept-        not      not    language information\
    \ is within the\n     Language                       application/ipp entity\n\
    \   Authorization  must-    must   per RFC 2616.  A client MUST send\n       \
    \             if              this header when it receives a\n               \
    \                     401 \"Unauthorized\" response and\n                    \
    \                does not receive a \"Proxy-\n                               \
    \     Authenticate\" header.\n   From           not      not    per RFC 2616.\
    \  Because RFC\n                                    recommends sending this header\n\
    \                                    only with the user's approval,\n        \
    \                            it is not very useful\n   Host           must   \
    \  must   per RFC 2616\n   If-Match       not      not\n   If-Modified-   not\
    \      not\n     Since\n   If-None-Match  not      not\n   If-Range       not\
    \      not\n   If-            not      not\n     Unmodified-\n     Since\n   Request-\
    \       Client   Server Request Values and Conditions\n   Header\n   Max-Forwards\
    \   not      not\n   Proxy-         must-    not    per RFC 2616.  A client MUST\
    \ send\n     Authorizati    if              this header when it receives a\n \
    \    on                             401 \"Unauthorized\" response and\n      \
    \                              a \"Proxy-Authenticate\" header.\n   Range    \
    \      not      not\n   Referrer       not      not\n   User-Agent     not   \
    \   not\n"
- title: 7.3  Response Headers
  contents:
  - "7.3  Response Headers\n   The following is a table for the request headers.\n\
    \   Response-       Server  Client Response Values and Conditions\n   Header\n\
    \   Accept-Ranges   not     not\n   Age             not     not\n   Location \
    \       must-   may    per RFC 2616.  When URI needs\n                     if\
    \             redirection.\n   Proxy-                  must   per RFC 2616\n \
    \    Authenticat\n     e             not\n   Public          may     may    per\
    \ RFC 2616\n   Retry-After     may     may    per RFC 2616\n   Server        \
    \  not     not\n   Vary            not     not\n   Warning         may     may\
    \    per RFC 2616\n   WWW-            must-   must   per RFC 2616.  When a server\
    \ needs\n     Authenticate    if             to authenticate a client.\n"
- title: 7.4  Entity  Headers
  contents:
  - "7.4  Entity  Headers\n   The following is a table for the entity headers.\n \
    \  Entity-Header   Request        Response        Values and\n               \
    \                                   Conditions\n                   Client  Server\
    \ Server  Client\n   Allow           not     not    not     not\n   Content-Base\
    \    not     not    not     not\n   Content-        may     must   must    must\
    \    per RFC 2616 and\n     Encoding                                       IANA\
    \ registry for\n                                                    content codings.\n\
    \   Content-        not     not    not     not     Application/ipp\n     Language\
    \                                       handles language\n   Content-        must-\
    \   must   must-   must    the length of the\n     Length          if        \
    \     if              message-body per\n                                     \
    \               RFC 2616.  Header\n                                          \
    \          MUST be present\n                                                 \
    \   if Transfer-\n                                                    Encoding\
    \ is\n                                                    absent..\n   Content-\
    \        not     not    not     not\n     Location\n   Content-MD5     may   \
    \  may    may     may     per RFC 2616\n   Content-Range   not     not    not\
    \     not\n   Content-Type    must    must   must    must    \"application/ipp\"\
    \n                                                    only\n   ETag          \
    \  not     not    not     not\n   Expires         not     not    not     not\n\
    \   Last-Modified   not     not    not     not\n"
- title: 7.5  Optional support for HTTP/1.0
  contents:
  - "7.5  Optional support for HTTP/1.0\n   IPP implementations consist of an HTTP\
    \ layer and an IPP layer.  In\n   the following discussion, the term \"client\"\
    \ refers to the HTTP client\n   layer and the term \"server\" refers to the HTTP\
    \ server layer.  The\n   Encoding and Transport document [RFC2910] requires that\
    \ HTTP 1.1 MUST\n   be supported by all clients and all servers.  However, a client\n\
    \   and/or a server implementation may choose to also support HTTP 1.0.\n   This\
    \ option means that a server may choose to communicate with a\n   (non-conforming)\
    \ client that only supports HTTP 1.0.  In such cases\n   the server should not\
    \ use any HTTP 1.1 specific parameters or\n   features and should respond using\
    \ HTTP version number 1.0.\n   This option also means that a client may choose\
    \ to communicate with a\n   (non-conforming) server that only supports HTTP 1.0.\
    \  In such cases,\n   if the server responds with an HTTP 'unsupported version\
    \ number' to\n   an HTTP 1.1 request, the client should retry using HTTP version\n\
    \   number 1.0.\n"
- title: 7.6  HTTP/1.1 Chunking
  contents:
  - '7.6  HTTP/1.1 Chunking

    '
- title: 7.6.1  Disabling IPP Server Response Chunking
  contents:
  - "7.6.1  Disabling IPP Server Response Chunking\n   Clients MUST anticipate that\
    \ the HTTP/1.1 server may chunk responses\n   and MUST accept them in responses.\
    \  However, a (non-conforming) HTTP\n   client that is unable to accept chunked\
    \ responses may attempt to\n   request an HTTP 1.1 server not to use chunking\
    \ in its response to an\n   operation by using the following HTTP header:\n  \
    \    TE: identity\n   This mechanism should not be used by a server to disable\
    \ a client\n   from chunking a request, since chunking of document data is an\n\
    \   important feature for clients to send long documents.\n"
- title: 7.6.2  Warning About the Support of Chunked Requests
  contents:
  - "7.6.2  Warning About the Support of Chunked Requests\n   This section describes\
    \ some problems with the use of chunked requests\n   and HTTP/1.1 servers.\n \
    \  The HTTP/1.1 standard [RFC2616] requires that conforming servers\n   support\
    \ chunked requests for any method.  However, in spite of this\n   requirement,\
    \ some HTTP/1.1 implementations support chunked responses\n   in the GET method,\
    \ but do not support chunked POST method requests.\n   Some HTTP/1.1 implementations\
    \ that support CGI scripts [CGI] and/or\n   servlets [Servlet] require that the\
    \ client supply a Content-Length.\n   These implementations might reject a chunked\
    \ POST method and return a\n   411 status code (Length Required), might attempt\
    \ to buffer the\n   request and run out of room returning a 413 status code (Request\n\
    \   Entity Too Large), or might successfully accept the chunked request.\n   Because\
    \ of this lack of conformance of HTTP servers to the HTTP/1.1\n   standard, the\
    \ IPP standard [RFC2910] REQUIRES that a conforming IPP\n   Printer object implementation\
    \ support chunked requests and that\n   conforming clients accept chunked responses.\
    \  Therefore, IPP object\n   implementers are warned to seek HTTP server implementations\
    \ that\n   support chunked POST requests in order to conform to the IPP standard\n\
    \   and/or use implementation techniques that support chunked POST\n   requests.\n"
- title: 8  References
  contents:
  - "8  References\n   [CGI]             CGI/1.1 (http://www.w3.org/CGI/).\n   [IANA-CS]\
    \         IANA Registry of Coded Character Sets:\n                     http://www.iana.org/assignments/character-sets\n\
    \   [ldap-printer]    Fleming, P., Jones, K., Lewis, H. and I. McDonald,\n   \
    \                  \"Internet Printing Protocol (IPP): LDAP Schema for\n     \
    \                Printer Services\", Work in Progress.\n   [RFC793]          Postel,\
    \ J., \"Transmission Control Protocol\", STD 7,\n                     RFC 793,\
    \ September 1981.\n   [RFC1123]         Braden, R., \"Requirements for Internet\
    \ Hosts -\n                     Application and Support\", RFC 1123, October,\
    \ 1989.\n   [RFC2026]         Bradner, S., \"The Internet Standards Process --\n\
    \                     Revision 3\", BCP 9, RFC 2026, October 1996.\n   [RFC2119]\
    \         Bradner, S., \"Key words for use in RFCs to Indicate\n             \
    \        Requirement Levels\", BCP 14, RFC 2119 , March 1997.\n   [RFC2396]  \
    \       Berners-Lee, T., Fielding, R. and L. Masinter,\n                     \"\
    Uniform Resource Identifiers (URI): Generic\n                     Syntax\", RFC\
    \ 2396, August 1998.\n   [RFC2565]         DeBry, R., Hastings, T., Herriot, R.,\
    \ Isaacson, S.\n                     and P. Powell, \"Internet Printing Protocol/1.0:\n\
    \                     Model and Semantics\", RFC 2566, April 1999.\n   [RFC2566]\
    \         Herriot, R., Butler, S., Moore, P. and R. Turner,\n                \
    \     \"Internet Printing Protocol/1.0: Encoding and\n                     Transport\"\
    , RFC 2565, April 1999.\n   [RFC2567]         Wright, D., \"Design Goals for an\
    \ Internet Printing\n                     Protocol\", RFC 2567, April 1999.\n\
    \   [RFC2568]         Zilles, S., \"Rationale for the Structure and Model\n  \
    \                   and Protocol for the Internet Printing Protocol\",\n     \
    \                RFC 2568, April 1999.\n   [RFC2569]         Herriot, R., Hastings,\
    \ T., Jacobs, N. and J.\n                     Martin, \"Mapping between LPD and\
    \ IPP Protocols\",\n                     RFC 2569, April 1999.\n   [RFC2616] \
    \        Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n                 \
    \    Masinter, L., Leach, P. and T. Berners-Lee,\n                     \"Hypertext\
    \ Transfer Protocol - HTTP/1.1\", RFC 2616,\n                     June 1999.\n\
    \   [RFC2910]         Herriot, R., Butler, S., Moore, P. and R. Turner,\n    \
    \                 \"Internet Printing Protocol/1.0: Encoding and\n           \
    \          Transport\", RFC 2910, September, 2000.\n   [RFC2911]         DeBry,\
    \ R., Hastings, T., Herriot, R., Isaacson, S.\n                     and P. Powell,\
    \ \"Internet Printing Protocol/1.0:\n                     Model and Semantics\"\
    , RFC 2911, September, 2000.\n   [Servlet]         Servlet Specification Version\
    \ 2.1\n                     (http://java.sun.com/products/servlet/2.1/\n     \
    \                index.html).\n   [svrloc-printer]  St. Pierre, P., Isaacson,\
    \ S., McDonald, I.,\n                     \"Definition of the Printer Abstract\
    \ Service Type\n                     v2.0\", http://www.isi.edu/in-\n        \
    \             notes/iana/assignments/svrloc-\n                     templates/printer.2.0.en\
    \ (IANA Registered, May 27,\n                     2000).\n   [SSL]           \
    \  Netscape, The SSL Protocol, Version 3, (Text\n                     version\
    \ 3.02), November 1996.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Thomas N. Hastings\n   Xerox Corporation\n   701 Aviation\
    \ Blvd.\n   El Segundo, CA 90245\n   EMail: hastings@cp10.es.xerox.com\n   Carl-Uno\
    \ Manros\n   Independent Consultant\n   1601 N. Sepulveda Blvd. #505\n   Manhattan\
    \ Beach, CA 90266\n   Email: carl@manros.com\n   Carl Kugler\n   Mail Stop 003G\n\
    \   IBM Printing Systems Co\n   6300 Diagonal Hwy\n   Boulder CO 80301\n   EMail:\
    \ Kugler@us.ibm.com\n   Henrik Holst\n   i-data Printing Systems\n   Vadstrupvej\
    \ 35-43\n   2880 Bagsvaerd, Denmark\n   EMail: hh@I-data.com\n   Peter Zehler\n\
    \   Xerox Corporation\n   800 Philips Road\n   Webster, NY 14580\n   EMail: PZehler@crt.xerox.com\n\
    \   IPP Web Page:  http://www.pwg.org/ipp/\n   IPP Mailing List:  ipp@pwg.org\n\
    \   To subscribe to the ipp mailing list, send the following email:\n      1)\
    \ send it to majordomo@pwg.org\n      2) leave the subject line blank\n      3)\
    \ put the following two lines in the message body:\n         subscribe ipp\n \
    \        end\n   Implementers of this specification document are encouraged to\
    \ join\n   the IPP Mailing List in order to participate in any discussions of\n\
    \   clarification issues and review of registration proposals for\n   additional\
    \ attributes and values.  In order to reduce spam the\n   mailing list rejects\
    \ mail from non-subscribers, so you must subscribe\n   to the mailing list in\
    \ order to send a question or comment to the\n   mailing list.\n   Other Participants:\n\
    \   Chuck Adams - Tektronix            Shivaun Albright - HP\n   Stefan Andersson\
    \ - Axis            Jeff Barnett - IBM\n   Ron Bergman - Hitachi Koki        \
    \ Dennis Carney - IBM\n   Imaging Systems\n   Keith Carter - IBM             \
    \    Angelo Caruso - Xerox\n   Rajesh Chawla - TR Computing       Nancy Chen -\
    \ Okidata\n   Solutions\n   Josh Cohen - Microsoft             Jeff Copeland -\
    \ QMS\n   Andy Davidson - Tektronix          Roger deBry - IBM\n   Maulik Desai\
    \ - Auco                Mabry Dozier - QMS\n   Lee Farrell - Canon Information\
    \    Satoshi Fujitami - Ricoh\n   Systems\n   Steve Gebert - IBM             \
    \    Sue Gleeson - Digital\n   Charles Gordon - Osicom            Brian Grimshaw\
    \ - Apple\n   Jerry Hadsell - IBM                Richard Hart - Digital\n   Tom\
    \ Hastings - Xerox               Henrik Holst - I-data\n   Stephen Holmstead \
    \                 Zhi-Hong Huang - Zenographics\n   Scott Isaacson - Novell  \
    \          Babek Jahromi - Microsoft\n   Swen Johnson - Xerox               David\
    \ Kellerman - Northlake\n                                      Software\n   Robert\
    \ Kline - TrueSpectra         Charles Kong - Panasonic\n   Carl Kugler - IBM \
    \                 Dave Kuntz - Hewlett-Packard\n   Takami Kurono - Brother   \
    \         Rick Landau - Digital\n   Scott Lawrence - Agranot Systems   Greg LeClair\
    \ - Epson\n   Dwight Lewis - Lexmark             Harry Lewis - IBM\n   Tony Liao\
    \ - Vivid Image            Roy Lomicka - Digital\n   Pete Loya - HP          \
    \           Ray Lutz - Cognisys\n   Mike MacKay - Novell, Inc.         David Manchala\
    \ - Xerox\n   Carl-Uno Manros - Xerox            Jay Martin - Underscore\n   Stan\
    \ McConnell - Xerox             Larry Masinter - Xerox\n   Sandra Matts - Hewlett\
    \ Packard     Peter Michalek - Shinesoft\n   Ira McDonald - High North Inc.  \
    \   Mike Moldovan - G3 Nova\n   Tetsuya Morita - Ricoh             Yuichi Niwa\
    \ - Ricoh\n   Pat Nogay - IBM                    Ron Norton - Printronics\n  \
    \ Hugo Parra, Novell                 Bob Pentecost - Hewlett-Packard\n   Patrick\
    \ Powell - Astart            Jeff Rackowitz - Intermec\n   Technologies\n   Eric\
    \ Random - Peerless             Rob Rhoads - Intel\n   Xavier Riley - Xerox  \
    \             Gary Roberts - Ricoh\n   David Roach - Unisys               Stuart\
    \ Rowley - Kyocera\n   Yuji Sasaki - Japan Computer       Richard Schneider -\
    \ Epson\n   Industry\n   Kris Schoff - HP                   Katsuaki Sekiguchi\
    \ - Canon\n   Bob Setterbo - Adobe               Gail Songer - Peerless\n   Hideki\
    \ Tanaka - Canon              Devon Taylor - Novell, Inc.\n   Mike Timperman -\
    \ Lexmark           Atsushi Uchino - Epson\n   Shigeru Ueda - Canon          \
    \     Bob Von Andel - Allegro Software\n   William Wagner - NetSilicon/DPI   \
    \ Jim Walker - DAZEL\n   Chris Wellens - Interworking Labs  Trevor Wells - Hewlett\
    \ Packard\n   Craig Whittle - Sharp Labs         Rob Whittle - Novell, Inc.\n\
    \   Jasper Wong - Xionics              Don Wright - Lexmark\n   Michael Wu - Heidelberg\
    \ Digital    Rick Yardumian - Xerox\n   Michael Yeung - Toshiba            Lloyd\
    \ Young - Lexmark\n   Atsushi Yuki - Kyocera             Peter Zehler - Xerox\n\
    \   William Zhang- Canon Information   Frank Zhao - Panasonic\n   Systems\n  \
    \ Steve Zilles - Adobe               Rob Zirnstein - Canon\n                 \
    \                     Information Systems\n"
- title: 10. Description of the Base IPP Documents
  contents:
  - "10. Description of the Base IPP Documents\n   In addition to this document, the\
    \ base set of IPP documents includes:\n      Design Goals for an Internet Printing\
    \ Protocol [RFC2567]\n      Rationale for the Structure and Model and Protocol\
    \ for the\n      Internet\n      Printing Protocol [RFC2568]\n      Internet Printing\
    \ Protocol/1.1: Model and Semantics [RFC2911]\n      Internet Printing Protocol/1.1:\
    \ Encoding and Transport [RFC2910]\n      Mapping between LPD and IPP Protocols\
    \ [RFC2569]\n   The \"Design Goals for an Internet Printing Protocol\" document\
    \ takes a\n   broad look at distributed printing functionality, and it enumerates\n\
    \   real-life scenarios that help to clarify the features that need to be\n  \
    \ included in a printing protocol for the Internet.  It identifies\n   requirements\
    \ for three types of users: end users, operators, and\n   administrators.  It\
    \ calls out a subset of end user requirements that\n   are satisfied in IPP/1.0\
    \ [RFC2566, RFC2565].  A few OPTIONAL operator\n   operations have been added\
    \ to IPP/1.1 [RFC2911, RFC2910].\n   The \"Rationale for the Structure and Model\
    \ and Protocol for the\n   Internet Printing Protocol\" document describes IPP\
    \ from a high level\n   view, defines a roadmap for the various documents that\
    \ form the suite\n   of IPP specification documents, and gives background and\
    \ rationale\n   for the IETF IPP working group's major decisions.\n   The \"Internet\
    \ Printing Protocol/1.1: Model and Semantics\" document\n   describes a simplified\
    \ model with abstract objects, their attributes,\n   and their operations.  The\
    \ model introduces a Printer and a Job.  The\n   Job supports multiple documents\
    \ per Job.  The model document also\n   addresses how security, internationalization,\
    \ and directory issues\n   are addressed.\n   The \"Internet Printing Protocol/1.1:\
    \ Encoding and Transport\" document\n   is a formal mapping of the abstract operations\
    \ and attributes defined\n   in the model document onto HTTP/1.1 [RFC2616].  It\
    \ also defines the\n   encoding rules for a new Internet MIME media type called\n\
    \   \"application/ipp\".  This document also defines the rules for\n   transporting\
    \ a message body over HTTP whose Content-Type is\n   \"application/ipp\".  This\
    \ document defines the 'ipp' scheme for\n   identifying IPP printers and jobs.\n\
    \   The \"Mapping between LPD and IPP Protocols\" document gives some\n   advice\
    \ to implementers of gateways between IPP and LPD (Line Printer\n   Daemon) implementations.\n"
- title: 11  Full Copyright Statement
  contents:
  - "11  Full Copyright Statement\n   Copyright (C) The Internet Society (2001). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
