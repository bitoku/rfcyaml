- title: __initial_text__
  contents:
  - "   Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 4.0\n      \
    \                    Certificate Handling\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies conventions for X.509 certificate usage\
    \ by\n   Secure/Multipurpose Internet Mail Extensions (S/MIME) v4.0 agents.\n\
    \   S/MIME provides a method to send and receive secure MIME messages,\n   and\
    \ certificates are an integral part of S/MIME agent processing.\n   S/MIME agents\
    \ validate certificates as described in RFC 5280\n   (\"Internet X.509 Public\
    \ Key Infrastructure Certificate and\n   Certificate Revocation List (CRL) Profile\"\
    ).  S/MIME agents must meet\n   the certificate-processing requirements in this\
    \ document as well as\n   those in RFC 5280.  This document obsoletes RFC 5750.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8550.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Definitions . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Conventions Used in This Document . . . . . . . . .\
    \ . . .   5\n     1.3.  Compatibility with Prior Practice of S/MIME . . . . .\
    \ . .   6\n     1.4.  Changes from S/MIME v3 to S/MIME v3.1 . . . . . . . . .\
    \ .   6\n     1.5.  Changes from S/MIME v3.1 to S/MIME v3.2 . . . . . . . . .\
    \   7\n     1.6.  Changes since S/MIME 3.2  . . . . . . . . . . . . . . . .  \
    \ 8\n   2.  CMS Options . . . . . . . . . . . . . . . . . . . . . . . . .   8\n\
    \     2.1.  Certificate Revocation Lists  . . . . . . . . . . . . . .   9\n  \
    \   2.2.  Certificate Choices . . . . . . . . . . . . . . . . . . .   9\n    \
    \   2.2.1.  Historical Note about CMS Certificates  . . . . . . .   9\n     2.3.\
    \  Included Certificates . . . . . . . . . . . . . . . . . .  10\n   3.  Using\
    \ Distinguished Names for Internet Mail . . . . . . . . .  11\n   4.  Certificate\
    \ Processing  . . . . . . . . . . . . . . . . . . .  12\n     4.1.  Certificate\
    \ Revocation Lists  . . . . . . . . . . . . . .  13\n     4.2.  Certificate Path\
    \ Validation . . . . . . . . . . . . . . .  13\n     4.3.  Certificate and CRL\
    \ Signing Algorithms, and Key Sizes . .  14\n     4.4.  PKIX Certificate Extensions\
    \ . . . . . . . . . . . . . . .  15\n       4.4.1.  Basic Constraints . . . .\
    \ . . . . . . . . . . . . . .  16\n       4.4.2.  Key Usage Extension . . . .\
    \ . . . . . . . . . . . . .  16\n       4.4.3.  Subject Alternative Name  . .\
    \ . . . . . . . . . . . .  17\n       4.4.4.  Extended Key Usage Extension  .\
    \ . . . . . . . . . . .  17\n   5.  IANA Considerations . . . . . . . . . . .\
    \ . . . . . . . . . .  18\n   6.  Security Considerations . . . . . . . . . .\
    \ . . . . . . . . .  18\n   7.  References  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  20\n     7.1.  Reference Conventions . . . . . . . . . . .\
    \ . . . . . . .  20\n     7.1.  Normative References  . . . . . . . . . . . .\
    \ . . . . . .  20\n     7.2.  Informative References  . . . . . . . . . . . .\
    \ . . . . .  23\n   Appendix A.  Historic Considerations  . . . . . . . . . .\
    \ . . . .  26\n     A.1.  Signature Algorithms and Key Sizes  . . . . . . . .\
    \ . . .  26\n   Appendix B.  Moving S/MIME v2 Certificate Handling to Historic\n\
    \                Status . . . . . . . . . . . . . . . . . . . . . . .  27\n  \
    \ Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  28\n   Authors'\
    \ Addresses  . . . . . . . . . . . . . . . . . . . . . . .  28\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   S/MIME (Secure/Multipurpose Internet Mail Extensions) v4.0,\
    \ described\n   in [RFC8551], provides a method to send and receive secure MIME\n\
    \   messages.  Before using a public key to provide security services,\n   the\
    \ S/MIME agent MUST verify that the public key is valid.  S/MIME\n   agents MUST\
    \ use PKIX certificates to validate public keys as\n   described in [RFC5280]\
    \ (\"Internet X.509 Public Key Infrastructure\n   Certificate and Certificate\
    \ Revocation List (CRL) Profile\").  S/MIME\n   agents MUST meet the certificate-processing\
    \ requirements specified in\n   this document in addition to those stated in [RFC5280].\n\
    \   This specification is compatible with the Cryptographic Message\n   Syntax\
    \ (CMS) [RFC5652] in that it uses the data types defined by CMS.\n   It also inherits\
    \ all the varieties of architectures for certificate-\n   based key management\
    \ supported by CMS.\n   This document obsoletes [RFC5750].  The most significant\
    \ changes\n   revolve around changes in recommendations around the cryptographic\n\
    \   algorithms used by the specification.  More details can be found in\n   Section\
    \ 1.6.\n   This specification contains a number of references to documents that\n\
    \   have been obsoleted or replaced.  This is intentional, as the updated\n  \
    \ documents often do not have the same information or protocol\n   requirements\
    \ in them.\n"
- title: 1.1.  Definitions
  contents:
  - "1.1.  Definitions\n   For the purposes of this document, the following definitions\
    \ apply.\n   ASN.1:\n      Abstract Syntax Notation One, as defined in ITU-T X.680\
    \ [X.680].\n   Attribute certificate (AC):\n      An X.509 AC is a separate structure\
    \ from a subject's public key\n      X.509 certificate.  A subject may have multiple\
    \ X.509 ACs\n      associated with each of its public key X.509 certificates.\
    \  Each\n      X.509 AC binds one or more attributes with one of the subject's\n\
    \      public key X.509 certificates.  The X.509 AC syntax is defined in\n   \
    \   [RFC5755].\n   Certificate:\n      A type that binds an entity's name to a\
    \ public key with a digital\n      signature.  This type is defined in [RFC5280].\
    \  This type also\n      contains the distinguished name of the certificate issuer\
    \ (the\n      signer), an issuer-specific serial number, the issuer's signature\n\
    \      algorithm identifier, a validity period, and extensions also\n      defined\
    \ in that document.\n   Certificate Revocation List (CRL):\n      A type that\
    \ contains information about certificates whose validity\n      an issuer has\
    \ revoked.  The information consists of an issuer\n      name, the time of issue,\
    \ the next scheduled time of issue, a list\n      of certificate serial numbers\
    \ and their associated revocation\n      times, and extensions as defined in [RFC5280].\
    \  The CRL is signed\n      by the issuer.  The type intended by this specification\
    \ is the one\n      defined in [RFC5280].\n   Receiving agent:\n      Software\
    \ that interprets and processes S/MIME CMS objects, MIME\n      body parts that\
    \ contain CMS objects, or both.\n   Sending agent:\n      Software that creates\
    \ S/MIME CMS objects, MIME body parts that\n      contain CMS objects, or both.\n\
    \   S/MIME agent:\n      User software that is a receiving agent, a sending agent,\
    \ or both.\n"
- title: 1.2.  Conventions Used in This Document
  contents:
  - "1.2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be\
    \ interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,\
    \ they appear in all\n   capitals, as shown here.\n   We define the additional\
    \ requirement levels:\n   SHOULD+   This term means the same as SHOULD.  However,\
    \ the authors\n             expect that a requirement marked as SHOULD+ will be\n\
    \             promoted at some future time to be a MUST.\n   SHOULD-   This term\
    \ means the same as SHOULD.  However, the authors\n             expect that a\
    \ requirement marked as SHOULD- will be demoted\n             to a MAY in a future\
    \ version of this document.\n   MUST-     This term means the same as MUST.  However,\
    \ the authors\n             expect that this requirement will no longer be a MUST\
    \ in a\n             future document.  Although its status will be determined\
    \ at\n             a later time, it is reasonable to expect that if a future\n\
    \             revision of a document alters the status of a MUST-\n          \
    \   requirement, it will remain at least a SHOULD or a SHOULD-.\n   The term \"\
    RSA\" in this document almost always refers to the\n   PKCS #1 v1.5 RSA signature\
    \ algorithm even when not qualified as such.\n   There are a couple of places\
    \ where it refers to the general RSA\n   cryptographic operation; these can be\
    \ determined from the context\n   where it is used.\n"
- title: 1.3.  Compatibility with Prior Practice of S/MIME
  contents:
  - "1.3.  Compatibility with Prior Practice of S/MIME\n   S/MIME version 4.0 agents\
    \ ought to attempt to have the greatest\n   interoperability possible with agents\
    \ for prior versions of S/MIME.\n   -  S/MIME version 2 is described in RFC 2311\
    \ through RFC 2315\n      inclusive [SMIMEv2].\n   -  S/MIME version 3 is described\
    \ in RFC 2630 through RFC 2634\n      inclusive and RFC 5035 [SMIMEv3].\n   -\
    \  S/MIME version 3.1 is described in RFC 2634, RFC 3850, RFC 3851,\n      RFC\
    \ 3852, and RFC 5035 [SMIMEv3.1].\n   -  S/MIME version 3.2 is described in RFC\
    \ 2634, RFC 5035, RFC 5652,\n      RFC 5750, and RFC 5751 [SMIMEv3.2].\n   - \
    \ RFC 2311 also has historical information about the development of\n      S/MIME.\n\
    \   Appendix A contains information about algorithms that were used for\n   prior\
    \ versions of S/MIME but are no longer considered to meet modern\n   security\
    \ standards.  Support of these algorithms may be needed to\n   support historic\
    \ S/MIME artifacts such as messages or files but\n   SHOULD NOT be used for new\
    \ artifacts.\n"
- title: 1.4.  Changes from S/MIME v3 to S/MIME v3.1
  contents:
  - "1.4.  Changes from S/MIME v3 to S/MIME v3.1\n   This section reflects the changes\
    \ that were made when S/MIME v3.1 was\n   released.  The language of RFC 2119\
    \ (\"MUST\", \"SHOULD\", etc.) used for\n   S/MIME v3 may have been superseded\
    \ in later versions.\n   -  Version 1 and version 2 CRLs MUST be supported.\n\
    \   -  Multiple certification authority (CA) certificates with the same\n    \
    \  subject and public key, but with overlapping validity periods,\n      MUST\
    \ be supported.\n   -  Version 2 ACs SHOULD be supported, and version 1 ACs MUST\
    \ NOT be\n      used.\n   -  The use of the MD2 digest algorithm for certificate\
    \ signatures is\n      discouraged, and security language was added.\n   -  Clarified\
    \ email address use in certificates.  Certificates that do\n      not contain\
    \ an email address have no requirements for verifying\n      the email address\
    \ associated with the certificate.\n   -  Receiving agents SHOULD display certificate\
    \ information when\n      displaying the results of signature verification.\n\
    \   -  Receiving agents MUST NOT accept a signature made with a\n      certificate\
    \ that does not have at least one of the\n      digitalSignature or nonRepudiation\
    \ bits set.\n   -  Added clarifications for the interpretation of the key usage\
    \ and\n      extended key usage extensions.\n"
- title: 1.5.  Changes from S/MIME v3.1 to S/MIME v3.2
  contents:
  - "1.5.  Changes from S/MIME v3.1 to S/MIME v3.2\n   This section reflects the changes\
    \ that were made when S/MIME v3.2 was\n   released.  The language of RFC 2119\
    \ (\"MUST\", \"SHOULD\", etc.) used for\n   S/MIME v3.1 may have been superseded\
    \ in later versions.\n   Note that the section numbers listed here (e.g., \"Section\
    \ 6\") are\n   from [RFC5750].\n   -  Moved \"Conventions Used in This Document\"\
    \ to Section 1.2.  Added\n      definitions for SHOULD+, SHOULD-, and MUST-.\n\
    \   -  Section 1.1: Updated ASN.1 definition and reference.\n   -  Section 1.3:\
    \ Added text about v3.1 RFCs.\n   -  Section 3: Aligned email address text with\
    \ RFC 5280.  Updated note\n      to indicate that the emailAddress IA5String upper\
    \ bound is\n      255 characters.  Added text about matching email addresses.\n\
    \   -  Section 4.2: Added text to indicate how S/MIME agents locate the\n    \
    \  correct user certificate.\n   -  Section 4.3: RSA with SHA-256 (PKCS #1 v1.5)\
    \ added as MUST; DSA\n      with SHA-256 added as SHOULD+; RSA with SHA-1, DSA\
    \ with SHA-1, and\n      RSA with MD5 changed to SHOULD-; and RSASSA-PSS with\
    \ SHA-256 added\n      as SHOULD+.  Updated key sizes and changed pointer to PKIX\
    \ RFCs.\n   -  Section 4.4.1: Aligned with PKIX on the use of a basicConstraints\n\
    \      extension in CA certificates.  Clarified which extension is used\n    \
    \  to constrain end entities from using their keys to perform\n      issuing-authority\
    \ operations.\n   -  Section 5: Updated security considerations.\n   -  Section\
    \ 6: Moved references from Appendix A of RFC 3850 to this\n      section.  Updated\
    \ the references.\n   -  Appendix A: Added Appendix A to move S/MIME v2 Certificate\n\
    \      Handling to Historic status.\n"
- title: 1.6.  Changes since S/MIME 3.2
  contents:
  - "1.6.  Changes since S/MIME 3.2\n   This section reflects the changes that were\
    \ made when S/MIME v4.0 was\n   released.  The language of RFC 2119 (\"MUST\"\
    , \"SHOULD\", etc.) used for\n   S/MIME v3.2 may have been superseded by S/MIME\
    \ v4.0 and may be\n   superseded by future versions.\n   -  Section 3: Support\
    \ for internationalized email addresses is\n      required.\n   -  Section 4.3:\
    \ Mandated support for the Elliptic Curve Digital\n      Signature Algorithm (ECDSA)\
    \ with P-256 and the Edwards-curve\n      Digital Signature Algorithm (EdDSA)\
    \ with curve25519 [RFC8410].\n      SHA-1 and MD5 algorithms are marked as historical,\
    \ as they are no\n      longer considered secure.  As the Digital Signature Algorithm\n\
    \      (DSA) has been replaced by elliptic curve versions, support for\n     \
    \ DSA is now considered historical.  Increased lower bounds on RSA\n      key\
    \ sizes.\n   -  Appendix A: Added Appendix A for algorithms that are now\n   \
    \   considered to be historical.\n"
- title: 2.  CMS Options
  contents:
  - "2.  CMS Options\n   The CMS message format allows for a wide variety of options\
    \ in\n   content and algorithm support.  This section puts forth a number of\n\
    \   support requirements and recommendations in order to achieve a base\n   level\
    \ of interoperability among all S/MIME implementations.  Most of\n   the CMS format\
    \ for S/MIME messages is defined in [RFC8551].\n"
- title: 2.1.  Certificate Revocation Lists
  contents:
  - "2.1.  Certificate Revocation Lists\n   Receiving agents MUST support the CRL\
    \ format defined in [RFC5280].\n   If sending agents include CRLs in outgoing\
    \ messages, the CRL format\n   defined in [RFC5280] MUST be used.  Receiving agents\
    \ MUST support\n   both v1 and v2 CRLs.\n   All agents MUST be capable of performing\
    \ revocation checks using CRLs\n   as specified in [RFC5280].  All agents MUST\
    \ perform revocation status\n   checking in accordance with [RFC5280].  Receiving\
    \ agents MUST\n   recognize CRLs in received S/MIME messages.\n   Agents SHOULD\
    \ store CRLs received in messages for use in processing\n   later messages.\n"
- title: 2.2.  Certificate Choices
  contents:
  - "2.2.  Certificate Choices\n   Receiving agents MUST support v1 X.509 and v3 X.509\
    \ certificates as\n   profiled in [RFC5280].  End-entity certificates MAY include\
    \ an\n   Internet mail address, as described in Section 3.\n   Receiving agents\
    \ SHOULD support X.509 version 2 ACs.  See [RFC5755]\n   for details about the\
    \ profile for ACs.\n"
- title: 2.2.1.  Historical Note about CMS Certificates
  contents:
  - "2.2.1.  Historical Note about CMS Certificates\n   The CMS message format supports\
    \ a choice of certificate formats for\n   public key content types: PKIX, PKCS\
    \ #6 extended certificates\n   [PKCS6], and PKIX ACs.\n   The PKCS #6 format is\
    \ not in widespread use.  In addition, PKIX\n   certificate extensions address\
    \ much of the same functionality and\n   flexibility as was intended in the PKCS\
    \ #6 certificate extensions.\n   Thus, sending and receiving agents MUST NOT use\
    \ PKCS #6 extended\n   certificates.  Receiving agents MUST be able to parse and\
    \ process a\n   message containing PKCS #6 extended certificates, although ignoring\n\
    \   those certificates is expected behavior.\n   X.509 version 1 ACs are also\
    \ not widely implemented and have\n   been superseded by version 2 ACs.  Sending\
    \ agents MUST NOT send\n   version 1 ACs.\n"
- title: 2.3.  Included Certificates
  contents:
  - "2.3.  Included Certificates\n   Receiving agents MUST be able to handle an arbitrary\
    \ number of\n   certificates of arbitrary relationship to the message sender and\
    \ to\n   each other in arbitrary order.  In many cases, the certificates\n   included\
    \ in a signed message may represent a chain of certification\n   from the sender\
    \ to a particular root.  There may be, however,\n   situations where the certificates\
    \ in a signed message may be\n   unrelated and included for convenience.\n   Sending\
    \ agents SHOULD include any certificates for the user's public\n   key(s) and\
    \ associated issuer certificates.  This increases the\n   likelihood that the\
    \ intended recipient can establish trust in the\n   originator's public key(s).\
    \  This is especially important when\n   sending a message to recipients that\
    \ may not have access to the\n   sender's public key through any other means or\
    \ when sending a signed\n   message to a new recipient.  The inclusion of certificates\
    \ in\n   outgoing messages can be omitted if S/MIME objects are sent within a\n\
    \   group of correspondents that have established access to each other's\n   certificates\
    \ by some other means such as a shared directory or manual\n   certificate distribution.\
    \  Receiving S/MIME agents SHOULD be able to\n   handle messages without certificates\
    \ by using a database or directory\n   lookup scheme to find them.\n   A sending\
    \ agent SHOULD include at least one chain of certificates up\n   to, but not including,\
    \ a CA that it believes that the recipient may\n   trust as authoritative.  A\
    \ receiving agent MUST be able to handle an\n   arbitrarily large number of certificates\
    \ and chains.\n   Agents MAY send CA certificates -- that is, cross-certificates,\n\
    \   self-issued certificates, and self-signed certificates.  Note that\n   receiving\
    \ agents SHOULD NOT simply trust any self-signed certificates\n   as valid CAs\
    \ but SHOULD use some other mechanism to determine if this\n   is a CA that should\
    \ be trusted.  Also note that when certificates\n   contain DSA public keys the\
    \ parameters may be located in the root\n   certificate.  This would require that\
    \ the recipient possess both the\n   end-entity certificate and the root certificate\
    \ to perform a\n   signature verification, and is a valid example of a case where\n\
    \   transmitting the root certificate may be required.\n   Receiving agents MUST\
    \ support chaining based on the distinguished\n   name fields.  Other methods\
    \ of building certificate chains MAY be\n   supported.\n   Receiving agents SHOULD\
    \ support the decoding of X.509 ACs included in\n   CMS objects.  All other issues\
    \ regarding the generation and use of\n   X.509 ACs are outside the scope of this\
    \ specification.  One\n   specification that addresses AC use is defined in [RFC3114].\n"
- title: 3.  Using Distinguished Names for Internet Mail
  contents:
  - "3.  Using Distinguished Names for Internet Mail\n   End-entity certificates MAY\
    \ contain an Internet mail address.\n   Email addresses restricted to 7-bit ASCII\
    \ characters use the\n   pkcs-9-at-emailAddress object identifier (OID) (see below)\
    \ and are\n   encoded as described in Section 4.2.1.6 of [RFC5280].\n   Internationalized\
    \ email address names use the OID defined in\n   [RFC8398] and are encoded as\
    \ described therein.  The email address\n   SHOULD be in the subjectAltName extension\
    \ and SHOULD NOT be in the\n   subject distinguished name.\n   Receiving agents\
    \ MUST recognize and accept certificates that contain\n   no email address.  Agents\
    \ are allowed to provide an alternative\n   mechanism for associating an email\
    \ address with a certificate that\n   does not contain an email address, such\
    \ as through the use of the\n   agent's address book, if available.  Receiving\
    \ agents MUST recognize\n   both ASCII and internationalized email addresses in\
    \ the\n   subjectAltName extension.  Receiving agents MUST recognize email\n \
    \  addresses in the distinguished name field in the PKCS #9 [RFC2985]\n   emailAddress\
    \ attribute:\n   pkcs-9-at-emailAddress OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 1 }\n   Note that this attribute MUST\
    \ be encoded as IA5String and has an\n   upper bound of 255 characters.  The comparing\
    \ of email addresses is\n   fraught with peril.  [RFC8398] defines the procedure\
    \ for doing the\n   comparison of internationalized email addresses.  For ASCII\
    \ email\n   addresses, the domain component (right-hand side of the '@') MUST\
    \ be\n   compared using a case-insensitive function.  The local name\n   component\
    \ (left-hand side of the '@') SHOULD be compared using a\n   case-insensitive\
    \ function.  Some localities may perform other\n   transformations on the local\
    \ name component before doing the\n   comparison; however, an S/MIME client cannot\
    \ know what specific\n   localities do.\n   Sending agents SHOULD make the address\
    \ in the From or Sender header\n   in a mail message match an Internet mail address\
    \ in the signer's\n   certificate.  Receiving agents MUST check that the address\
    \ in the\n   From or Sender header of a mail message matches an Internet mail\n\
    \   address in the signer's certificate, if mail addresses are present in\n  \
    \ the certificate.  A receiving agent SHOULD provide some explicit\n   alternate\
    \ processing of the message if this comparison fails; this\n   might be done by\
    \ displaying or logging a message that shows the\n   recipient the mail addresses\
    \ in the certificate or other certificate\n   details.\n   A receiving agent SHOULD\
    \ display a subject name or other certificate\n   details when displaying an indication\
    \ of successful or unsuccessful\n   signature verification.\n   All subject and\
    \ issuer names MUST be populated (i.e., not an empty\n   SEQUENCE) in S/MIME-compliant\
    \ X.509 certificates, except that the\n   subject distinguished name in a user's\
    \ (i.e., an end entity's)\n   certificate MAY be an empty SEQUENCE, in which case\
    \ the\n   subjectAltName extension will include the subject's identifier and\n\
    \   MUST be marked as critical.\n"
- title: 4.  Certificate Processing
  contents:
  - "4.  Certificate Processing\n   S/MIME agents need to provide some certificate\
    \ retrieval mechanism in\n   order to gain access to certificates for recipients\
    \ of digital\n   envelopes.  There are many ways to implement certificate retrieval\n\
    \   mechanisms.  [X.500] directory service is an excellent example of a\n   certificate\
    \ retrieval-only mechanism that is compatible with classic\n   X.500 distinguished\
    \ names.  The IETF has published [RFC8162], which\n   describes an experimental\
    \ protocol to retrieve certificates from the\n   Domain Name System (DNS).  Until\
    \ such mechanisms are widely used,\n   their utility may be limited by the small\
    \ number of the\n   correspondent's certificates that can be retrieved.  At a\
    \ minimum,\n   for initial S/MIME deployment, a user agent could automatically\n\
    \   generate a message to an intended recipient requesting the\n   recipient's\
    \ certificate in a signed return message.\n   Receiving and sending agents SHOULD\
    \ also provide a mechanism to allow\n   a user to \"store and protect\" certificates\
    \ for correspondents in such\n   a way as to guarantee their later retrieval.\
    \  In many environments,\n   it may be desirable to link the certificate retrieval/storage\n\
    \   mechanisms together in some sort of certificate database.  In its\n   simplest\
    \ form, a certificate database would be local to a particular\n   user and would\
    \ function in a way similar to an \"address book\" that\n   stores a user's frequent\
    \ correspondents.  In this way, the\n   certificate retrieval mechanism would\
    \ be limited to the certificates\n   that a user has stored (presumably from incoming\
    \ messages).  A\n   comprehensive certificate retrieval/storage solution might\
    \ combine\n   two or more mechanisms to allow the greatest flexibility and utility\n\
    \   to the user.  For instance, a secure Internet mail agent might resort\n  \
    \ to checking a centralized certificate retrieval mechanism for a\n   certificate\
    \ if it cannot be found in a user's local certificate\n   storage/retrieval database.\n\
    \   Receiving and sending agents SHOULD provide a mechanism for the\n   import\
    \ and export of certificates, using a CMS certs-only message.\n   This allows\
    \ for import and export of full certificate chains as\n   opposed to just a single\
    \ certificate.  This is described in\n   [RFC8551].\n   Agents MUST handle multiple\
    \ valid CA certificates containing the same\n   subject name and the same public\
    \ keys but with overlapping validity\n   intervals.\n"
- title: 4.1.  Certificate Revocation Lists
  contents:
  - "4.1.  Certificate Revocation Lists\n   In general, it is always better to get\
    \ the latest CRL information\n   from a CA than to get information stored in an\
    \ incoming message.  A\n   receiving agent SHOULD have access to some CRL retrieval\
    \ mechanism in\n   order to gain access to certificate revocation information\
    \ when\n   validating certification paths.  A receiving or sending agent SHOULD\n\
    \   also provide a mechanism to allow a user to store incoming\n   certificate\
    \ revocation information for correspondents in such a way\n   as to guarantee\
    \ its later retrieval.\n   Receiving and sending agents SHOULD retrieve and utilize\
    \ CRL\n   information every time a certificate is verified as part of a\n   certification\
    \ path validation even if the certificate was already\n   verified in the past.\
    \  However, in many instances (such as off-line\n   verification), access to the\
    \ latest CRL information may be difficult\n   or impossible.  The use of CRL information,\
    \ therefore, may be\n   dictated by the value of the information that is protected.\
    \  The\n   value of the CRL information in a particular context is beyond the\n\
    \   scope of this specification but may be governed by the policies\n   associated\
    \ with particular certification paths.\n   All agents MUST be capable of performing\
    \ revocation checks using CRLs\n   as specified in [RFC5280].  All agents MUST\
    \ perform revocation status\n   checking in accordance with [RFC5280].  Receiving\
    \ agents MUST\n   recognize CRLs in received S/MIME messages.\n"
- title: 4.2.  Certificate Path Validation
  contents:
  - "4.2.  Certificate Path Validation\n   In creating a user agent for secure messaging,\
    \ certificate, CRL, and\n   certification path validation should be highly automated\
    \ while still\n   acting in the best interests of the user.  Certificate, CRL,\
    \ and path\n   validation MUST be performed as per [RFC5280] when validating a\n\
    \   correspondent's public key.  This is necessary before using a public\n   key\
    \ to provide security services such as verifying a signature,\n   encrypting a\
    \ content-encryption key (e.g., RSA), or forming a\n   pairwise symmetric key\
    \ (e.g., Diffie-Hellman) to be used to encrypt\n   or decrypt a content-encryption\
    \ key.\n   Certificates and CRLs are made available to the path validation\n \
    \  procedure in two ways: a) incoming messages and b) certificate and\n   CRL\
    \ retrieval mechanisms.  Certificates and CRLs in incoming messages\n   are not\
    \ required to be in any particular order, nor are they required\n   to be in any\
    \ way related to the sender or recipient of the message\n   (although in most\
    \ cases they will be related to the sender).\n   Incoming certificates and CRLs\
    \ SHOULD be cached for use in path\n   validation and optionally stored for later\
    \ use.  This temporary\n   certificate and CRL cache SHOULD be used to augment\
    \ any other\n   certificate and CRL retrieval mechanisms for path validation on\n\
    \   incoming signed messages.\n   When verifying a signature and the certificates\
    \ that are included in\n   the message, if a signingCertificate attribute from\
    \ RFC 2634 [ESS] or\n   a signingCertificateV2 attribute from RFC 5035 [ESS] is\
    \ found in an\n   S/MIME message, it SHALL be used to identify the signer's\n\
    \   certificate.  Otherwise, the certificate is identified in an S/MIME\n   message,\
    \ using either (1) the issuerAndSerialNumber, which identifies\n   the signer's\
    \ certificate by the issuer's distinguished name and the\n   certificate serial\
    \ number or (2) the subjectKeyIdentifier, which\n   identifies the signer's certificate\
    \ by a key identifier.\n   When decrypting an encrypted message, if an\n   SMIMEEncryptionKeyPreference\
    \ attribute is found in an encapsulating\n   SignedData, it SHALL be used to identify\
    \ the originator's certificate\n   found in OriginatorInfo.  See [RFC5652] for\
    \ the CMS fields that\n   reference the originator's and recipient's certificates.\n"
- title: 4.3.  Certificate and CRL Signing Algorithms, and Key Sizes
  contents:
  - "4.3.  Certificate and CRL Signing Algorithms, and Key Sizes\n   Certificates\
    \ and CRLs are signed by the certificate issuer.\n   Receiving agents:\n   - \
    \ MUST support ECDSA with curve P-256 with SHA-256.\n   -  MUST support EdDSA\
    \ with curve25519 using PureEdDSA mode.\n   -  MUST- support RSA PKCS #1 v1.5\
    \ with SHA-256.\n   -  SHOULD support the RSA Probabilistic Signature Scheme (RSASSA-PSS)\n\
    \      with SHA-256.\n   Implementations SHOULD use deterministic generation for\
    \ the parameter\n   'k' for ECDSA as outlined in [RFC6979].  EdDSA is defined\
    \ to generate\n   this parameter deterministically.\n   The following are the\
    \ RSA and RSASSA-PSS key size requirements for\n   S/MIME receiving agents during\
    \ certificate and CRL signature\n   verification:\n           key size <= 2047\
    \ : SHOULD NOT (see Appendix A)\n   2048 <= key size <= 4096 : MUST (see Security\
    \ Considerations)\n   4096 <  key size         : MAY  (see Security Considerations)\n\
    \   The signature algorithm OIDs for RSA PKCS #1 v1.5 and RSASSA-PSS with\n  \
    \ SHA-256 using 1024-bit through 3072-bit public keys are specified in\n   [RFC4055],\
    \ and the signature algorithm definition is found in\n   [FIPS186-2] with Change\
    \ Notice 1.\n   The signature algorithm OIDs for RSA PKCS #1 v1.5 and RSASSA-PSS\
    \ with\n   SHA-256 using 4096-bit public keys are specified in [RFC4055], and\n\
    \   the signature algorithm definition is found in [RFC3447].\n   For RSASSA-PSS\
    \ with SHA-256, see [RFC4056].\n   For ECDSA, see [RFC5758] and [RFC6090].  The\
    \ first reference provides\n   the signature algorithm's OID, and the second provides\
    \ the signature\n   algorithm's definition.  Curves other than curve P-256 MAY\
    \ be used as\n   well.\n   For EdDSA, see [RFC8032] and [RFC8410].  The first\
    \ reference provides\n   the signature algorithm's OID, and the second provides\
    \ the signature\n   algorithm's definition.  Curves other than curve25519 MAY\
    \ be used as\n   well.\n"
- title: 4.4.  PKIX Certificate Extensions
  contents:
  - "4.4.  PKIX Certificate Extensions\n   PKIX describes an extensible framework\
    \ in which the basic certificate\n   information can be extended and describes\
    \ how such extensions can be\n   used to control the process of issuing and validating\
    \ certificates.\n   The LAMPS Working Group has ongoing efforts to identify and\
    \ create\n   extensions that have value in particular certification environments.\n\
    \   Further, there are active efforts underway to issue PKIX certificates\n  \
    \ for business purposes.  This document identifies the minimum required\n   set\
    \ of certificate extensions that have the greatest value in the\n   S/MIME environment.\
    \  The syntax and semantics of all the identified\n   extensions are defined in\
    \ [RFC5280].\n   Sending and receiving agents MUST correctly handle the basic\n\
    \   constraints, key usage, authority key identifier, subject key\n   identifier,\
    \ and subject alternative name certificate extensions when\n   they appear in\
    \ end-entity and CA certificates.  Some mechanism SHOULD\n   exist to gracefully\
    \ handle other certificate extensions when they\n   appear in end-entity or CA\
    \ certificates.\n   Certificates issued for the S/MIME environment SHOULD NOT\
    \ contain any\n   critical extensions (extensions that have the critical field\
    \ set to\n   TRUE) other than those listed here.  These extensions SHOULD be\n\
    \   marked as non-critical, unless the proper handling of the extension\n   is\
    \ deemed critical to the correct interpretation of the associated\n   certificate.\
    \  Other extensions may be included, but those extensions\n   SHOULD NOT be marked\
    \ as critical.\n   Interpretation and syntax for all extensions MUST follow [RFC5280],\n\
    \   unless otherwise specified here.\n"
- title: 4.4.1.  Basic Constraints
  contents:
  - "4.4.1.  Basic Constraints\n   The basicConstraints extension serves to delimit\
    \ the role and\n   position that an issuing-authority or end-entity certificate\
    \ plays in\n   a certification path.\n   For example, certificates issued to CAs\
    \ and subordinate CAs contain a\n   basicConstraints extension that identifies\
    \ them as issuing-authority\n   certificates.  End-entity certificates contain\
    \ the key usage\n   extension, which restrains end entities from using the key\
    \ when\n   performing issuing-authority operations (see Section 4.4.2).\n   As\
    \ per [RFC5280], certificates MUST contain a basicConstraints\n   extension in\
    \ CA certificates and SHOULD NOT contain that extension in\n   end-entity certificates.\n"
- title: 4.4.2.  Key Usage Extension
  contents:
  - "4.4.2.  Key Usage Extension\n   The key usage extension serves to limit the technical\
    \ purposes for\n   which a public key listed in a valid certificate may be used.\n\
    \   Issuing-authority certificates may contain a key usage extension that\n  \
    \ restricts the key to signing certificates, CRLs, and other data.\n   For example,\
    \ a CA may create subordinate issuer certificates that\n   contain a key usage\
    \ extension that specifies that the corresponding\n   public key can be used to\
    \ sign end-user certificates and CRLs.\n   If a key usage extension is included\
    \ in a PKIX certificate, then it\n   MUST be marked as critical.\n   S/MIME receiving\
    \ agents MUST NOT accept the signature of a message if\n   it was verified using\
    \ a certificate that contains a key usage\n   extension without at least one of\
    \ the digitalSignature or\n   nonRepudiation bits set.  Sometimes S/MIME is used\
    \ as a secure\n   message transport for applications beyond interpersonal messaging;\
    \ in\n   such cases, the S/MIME-enabled application can specify additional\n \
    \  requirements concerning the digitalSignature or nonRepudiation bits\n   within\
    \ this extension.\n   If the key usage extension is not specified, receiving clients\
    \ MUST\n   presume that both the digitalSignature and nonRepudiation bits\n  \
    \ are set.\n"
- title: 4.4.3.  Subject Alternative Name
  contents:
  - "4.4.3.  Subject Alternative Name\n   The subject alternative name extension is\
    \ used in S/MIME as the\n   preferred means to convey the email address or addresses\
    \ that\n   correspond to the entity for this certificate.  If the local portion\n\
    \   of the email address is ASCII, it MUST be encoded using the\n   rfc822Name\
    \ CHOICE of the GeneralName type as described in [RFC5280],\n   Section 4.2.1.6.\
    \  If the local portion of the email address is not\n   ASCII, it MUST be encoded\
    \ using the otherName CHOICE of the\n   GeneralName type as described in [RFC8398],\
    \ Section 3.  Since the\n   SubjectAltName type is a SEQUENCE OF GeneralName,\
    \ multiple email\n   addresses MAY be present.\n"
- title: 4.4.4.  Extended Key Usage Extension
  contents:
  - "4.4.4.  Extended Key Usage Extension\n   The extended key usage extension also\
    \ serves to limit the technical\n   purposes for which a public key listed in\
    \ a valid certificate may be\n   used.  The set of technical purposes for the\
    \ certificate therefore\n   are the intersection of the uses indicated in the\
    \ key usage and\n   extended key usage extensions.\n   For example, if the certificate\
    \ contains a key usage extension\n   indicating a digital signature and an extended\
    \ key usage extension\n   that includes the id-kp-emailProtection OID, then the\
    \ certificate may\n   be used for signing but not encrypting S/MIME messages.\
    \  If the\n   certificate contains a key usage extension indicating a digital\n\
    \   signature but no extended key usage extension, then the certificate\n   may\
    \ also be used to sign but not encrypt S/MIME messages.\n   If the extended key\
    \ usage extension is present in the certificate,\n   then interpersonal-message\
    \ S/MIME receiving agents MUST check that it\n   contains either the id-kp-emailProtection\
    \ OID or the\n   anyExtendedKeyUsage OID as defined in [RFC5280].  S/MIME uses\
    \ other\n   than interpersonal messaging MAY require the explicit presence of\
    \ the\n   extended key usage extension, the presence of other OIDs in the\n  \
    \ extension, or both.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   All of the security issues faced by any cryptographic\
    \ application\n   must be faced by an S/MIME agent.  Among these issues are protecting\n\
    \   the user's private key, preventing various attacks, and helping the\n   user\
    \ avoid mistakes such as inadvertently encrypting a message for\n   the wrong\
    \ recipient.  The entire list of security considerations is\n   beyond the scope\
    \ of this document, but some significant concerns are\n   listed here.\n   When\
    \ processing certificates, there are many situations where the\n   processing\
    \ might fail.  Because the processing may be done by a user\n   agent, a security\
    \ gateway, or some other program, there is no single\n   way to handle such failures.\
    \  Just because the methods to handle the\n   failures have not been listed, however,\
    \ the reader should not assume\n   that they are not important.  The opposite\
    \ is true: if a certificate\n   is not provably valid and associated with the\
    \ message, the processing\n   software should take immediate and noticeable steps\
    \ to inform the end\n   user about it.\n   Some of the many places where signature\
    \ and certificate checking\n   might fail include the following:\n   -  no Internet\
    \ mail addresses in a certificate match the sender of a\n      message, if the\
    \ certificate contains at least one mail address\n   -  no certificate chain leads\
    \ to a trusted CA\n   -  no ability to check the CRL for a certificate is implemented\n\
    \   -  an invalid CRL was received\n   -  the CRL being checked is expired\n \
    \  -  the certificate is expired\n   -  the certificate has been revoked\n   There\
    \ are certainly other instances where a certificate may be\n   invalid, and it\
    \ is the responsibility of the processing software to\n   check them all thoroughly\
    \ and decide what to do if the check fails.\n   It is possible for there to be\
    \ multiple unexpired CRLs for a CA.  If\n   an agent is consulting CRLs for certificate\
    \ validation, it SHOULD\n   make sure that the most recently issued CRL for that\
    \ CA is consulted,\n   since an S/MIME message sender could deliberately include\
    \ an older\n   unexpired CRL in an S/MIME message.  This older CRL might not include\n\
    \   recently revoked certificates; this scenario might lead an agent to\n   accept\
    \ a certificate that has been revoked in a subsequent CRL.\n   When determining\
    \ the time for a certificate validity check, agents\n   have to be careful to\
    \ use a reliable time.  In most cases, the time\n   used SHOULD be the current\
    \ time.  Some exceptions to this would be as\n   follows:\n   -  The time the\
    \ message was received is stored in a secure manner and\n      is used at a later\
    \ time to validate the message.\n   -  The time in a SigningTime attribute is\
    \ found in a countersignature\n      attribute [RFC5652] that has been successfully\
    \ validated.\n   The signingTime attribute could be deliberately set to a time\
    \ where\n   the receiving agent would (1) use a CRL that does not contain a\n\
    \   revocation for the signing certificate or (2) use a certificate that\n   has\
    \ expired or is not yet valid.  This could be done by either\n   (1) the sender\
    \ of the message or (2) an attacker that has compromised\n   the key of the sender.\n\
    \   In addition to the security considerations identified in [RFC5280],\n   caution\
    \ should be taken when processing certificates that have not\n   first been validated\
    \ to a trust anchor.  Certificates could be\n   manufactured by untrusted sources\
    \ for the purpose of mounting denial-\n   of-service attacks or other attacks.\
    \  For example, keys selected to\n   require excessive cryptographic processing,\
    \ or extensive lists of CRL\n   Distribution Point (CDP) and/or Authority Information\
    \ Access (AIA)\n   addresses in the certificate, could be used to mount denial-of-\n\
    \   service attacks.  Similarly, attacker-specified CDP and/or AIA\n   addresses\
    \ could be included in fake certificates to allow the\n   originator to detect\
    \ receipt of the message even if signature\n   verification fails.\n   RSA keys\
    \ of less than 2048 bits are now considered by many experts to\n   be cryptographically\
    \ insecure (due to advances in computing power)\n   and SHOULD no longer be used\
    \ to sign certificates or CRLs.  Such keys\n   were previously considered secure,\
    \ so processing previously received\n   signed and encrypted mail may require\
    \ processing certificates or CRLs\n   signed with weak keys.  Implementations\
    \ that wish to support previous\n   versions of S/MIME or process old messages\
    \ need to consider the\n   security risks that result from accepting certificates\
    \ and CRLs with\n   smaller key sizes (e.g., spoofed certificates) versus the\
    \ costs of\n   denial of service.  If an implementation supports verification\
    \ of\n   certificates or CRLs generated with RSA and DSA keys of less than\n \
    \  2048 bits, it MUST warn the user.  Implementers should consider\n   providing\
    \ a stronger warning for weak signatures on certificates and\n   CRLs associated\
    \ with newly received messages than the one provided\n   for certificates and\
    \ CRLs associated with previously stored messages.\n   Server implementations\
    \ (e.g., secure mail list servers) where user\n   warnings are not appropriate\
    \ SHOULD reject messages with weak\n   cryptography.\n   If an implementation\
    \ is concerned about compliance with National\n   Institute of Standards and Technology\
    \ (NIST) key size\n   recommendations, then see [SP800-57].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Reference Conventions
  contents:
  - "7.1.  Reference Conventions\n    [ESS] refers to [RFC2634] and [RFC5035].\n \
    \   [SMIMEv2] refers to [RFC2311], [RFC2312], [RFC2313], [RFC2314], and\n    [RFC2315].\n\
    \    [SMIMEv3] refers to [RFC2630], [RFC2631], [RFC2632], [RFC2633],\n    [RFC2634],\
    \ and [RFC5035].\n    [SMIMEv3.1] refers to [RFC2634], [RFC3850], [RFC3851], [RFC3852],\n\
    \    and [RFC5035].\n    [SMIMEv3.2] refers to [RFC2634], [RFC5035], [RFC5652],\
    \ [RFC5750],\n    and [RFC5751].\n    [SMIMEv4] refers to [RFC2634], [RFC5035],\
    \ [RFC5652], [RFC8551], and\n    this document.\n"
- title: 7.2.  Normative References
  contents:
  - "7.2.  Normative References\n   [FIPS186-2]\n              National Institute\
    \ of Standards and Technology (NIST),\n              \"Digital Signature Standard\
    \ (DSS) (also with Change\n              Notice 1)\", Federal Information Processing\
    \ Standards\n              Publication 186-2, January 2000,\n              <https://csrc.nist.gov/publications/detail/fips/186/2/\n\
    \              archive/2000-01-27>.\n   [FIPS186-3]\n              National Institute\
    \ of Standards and Technology (NIST),\n              \"Digital Signature Standard\
    \ (DSS)\", Federal Information\n              Processing Standards Publication\
    \ 186-3, June 2009,\n              <https://csrc.nist.gov/csrc/media/publications/fips/186/3/\n\
    \              archive/2009-06-25/documents/fips_186-3.pdf>.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2634]  Hoffman, P.,\
    \ Ed., \"Enhanced Security Services for S/MIME\",\n              RFC 2634, DOI\
    \ 10.17487/RFC2634, June 1999,\n              <https://www.rfc-editor.org/info/rfc2634>.\n\
    \   [RFC2985]  Nystrom, M. and B. Kaliski, \"PKCS #9: Selected Object\n      \
    \        Classes and Attribute Types Version 2.0\", RFC 2985,\n              DOI\
    \ 10.17487/RFC2985, November 2000,\n              <https://www.rfc-editor.org/info/rfc2985>.\n\
    \   [RFC3279]  Bassham, L., Polk, W., and R. Housley, \"Algorithms and\n     \
    \         Identifiers for the Internet X.509 Public Key\n              Infrastructure\
    \ Certificate and Certificate Revocation List\n              (CRL) Profile\",\
    \ RFC 3279, DOI 10.17487/RFC3279, April\n              2002, <https://www.rfc-editor.org/info/rfc3279>.\n\
    \   [RFC3447]  Jonsson, J. and B. Kaliski, \"Public-Key Cryptography\n       \
    \       Standards (PKCS) #1: RSA Cryptography Specifications\n              Version\
    \ 2.1\", RFC 3447, DOI 10.17487/RFC3447, February\n              2003, <https://www.rfc-editor.org/info/rfc3447>.\n\
    \   [RFC4055]  Schaad, J., Kaliski, B., and R. Housley, \"Additional\n       \
    \       Algorithms and Identifiers for RSA Cryptography for use in\n         \
    \     the Internet X.509 Public Key Infrastructure Certificate\n             \
    \ and Certificate Revocation List (CRL) Profile\", RFC 4055,\n              DOI\
    \ 10.17487/RFC4055, June 2005,\n              <https://www.rfc-editor.org/info/rfc4055>.\n\
    \   [RFC4056]  Schaad, J., \"Use of the RSASSA-PSS Signature Algorithm in\n  \
    \            Cryptographic Message Syntax (CMS)\", RFC 4056,\n              DOI\
    \ 10.17487/RFC4056, June 2005,\n              <https://www.rfc-editor.org/info/rfc4056>.\n\
    \   [RFC5035]  Schaad, J., \"Enhanced Security Services (ESS) Update:\n      \
    \        Adding CertID Algorithm Agility\", RFC 5035,\n              DOI 10.17487/RFC5035,\
    \ August 2007,\n              <https://www.rfc-editor.org/info/rfc5035>.\n   [RFC5280]\
    \  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,\
    \ R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI\
    \ 10.17487/RFC5280, May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC5652]  Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70,\n\
    \              RFC 5652, DOI 10.17487/RFC5652, September 2009,\n             \
    \ <https://www.rfc-editor.org/info/rfc5652>.\n   [RFC5750]  Ramsdell, B. and S.\
    \ Turner, \"Secure/Multipurpose Internet\n              Mail Extensions (S/MIME)\
    \ Version 3.2 Certificate\n              Handling\", RFC 5750, DOI 10.17487/RFC5750,\
    \ January 2010,\n              <https://www.rfc-editor.org/info/rfc5750>.\n  \
    \ [RFC5755]  Farrell, S., Housley, R., and S. Turner, \"An Internet\n        \
    \      Attribute Certificate Profile for Authorization\",\n              RFC 5755,\
    \ DOI 10.17487/RFC5755, January 2010,\n              <https://www.rfc-editor.org/info/rfc5755>.\n\
    \   [RFC5758]  Dang, Q., Santesson, S., Moriarty, K., Brown, D., and T.\n    \
    \          Polk, \"Internet X.509 Public Key Infrastructure:\n              Additional\
    \ Algorithms and Identifiers for DSA and ECDSA\",\n              RFC 5758, DOI\
    \ 10.17487/RFC5758, January 2010,\n              <https://www.rfc-editor.org/info/rfc5758>.\n\
    \   [RFC6979]  Pornin, T., \"Deterministic Usage of the Digital Signature\n  \
    \            Algorithm (DSA) and Elliptic Curve Digital Signature\n          \
    \    Algorithm (ECDSA)\", RFC 6979, DOI 10.17487/RFC6979, August\n           \
    \   2013, <https://www.rfc-editor.org/info/rfc6979>.\n   [RFC8174]  Leiba, B.,\
    \ \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\"\
    , BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\
    \   [RFC8398]  Melnikov, A., Ed. and W. Chuang, Ed., \"Internationalized\n   \
    \           Email Addresses in X.509 Certificates\", RFC 8398,\n             \
    \ DOI 10.17487/RFC8398, May 2018,\n              <https://www.rfc-editor.org/info/rfc8398>.\n\
    \   [RFC8551]  Schaad, J., Ramsdell, B., and S. Turner,\n              \"Secure/Multipurpose\
    \ Internet Mail Extensions (S/MIME)\n              Version 4.0 Message Specification\"\
    , RFC 8551,\n              DOI 10.17487/RFC8551, April 2019,\n              <https://www.rfc-editor.org/info/rfc8551>.\n\
    \   [X.680]    \"Information Technology - Abstract Syntax Notation One\n     \
    \         (ASN.1): Specification of basic notation\", ITU-T\n              Recommendation\
    \ X.680, ISO/IEC 8824-1:2015, August 2015,\n              <https://www.itu.int/rec/T-REC-X.680>.\n"
- title: 7.3  Informative References
  contents:
  - "7.3  Informative References\n   [PKCS6]    RSA Laboratories, \"PKCS #6: Extended-Certificate\
    \ Syntax\n              Standard\", November 1993.\n   [RFC2311]  Dusse, S., Hoffman,\
    \ P., Ramsdell, B., Lundblade, L., and\n              L. Repka, \"S/MIME Version\
    \ 2 Message Specification\",\n              RFC 2311, DOI 10.17487/RFC2311, March\
    \ 1998,\n              <https://www.rfc-editor.org/info/rfc2311>.\n   [RFC2312]\
    \  Dusse, S., Hoffman, P., Ramsdell, B., and J. Weinstein,\n              \"S/MIME\
    \ Version 2 Certificate Handling\", RFC 2312,\n              DOI 10.17487/RFC2312,\
    \ March 1998,\n              <https://www.rfc-editor.org/info/rfc2312>.\n   [RFC2313]\
    \  Kaliski, B., \"PKCS #1: RSA Encryption Version 1.5\",\n              RFC 2313,\
    \ DOI 10.17487/RFC2313, March 1998,\n              <https://www.rfc-editor.org/info/rfc2313>.\n\
    \   [RFC2314]  Kaliski, B., \"PKCS #10: Certification Request Syntax\n       \
    \       Version 1.5\", RFC 2314, DOI 10.17487/RFC2314, March 1998,\n         \
    \     <https://www.rfc-editor.org/info/rfc2314>.\n   [RFC2315]  Kaliski, B., \"\
    PKCS #7: Cryptographic Message Syntax\n              Version 1.5\", RFC 2315,\
    \ DOI 10.17487/RFC2315, March 1998,\n              <https://www.rfc-editor.org/info/rfc2315>.\n\
    \   [RFC2630]  Housley, R., \"Cryptographic Message Syntax\", RFC 2630,\n    \
    \          DOI 10.17487/RFC2630, June 1999,\n              <https://www.rfc-editor.org/info/rfc2630>.\n\
    \   [RFC2631]  Rescorla, E., \"Diffie-Hellman Key Agreement Method\",\n      \
    \        RFC 2631, DOI 10.17487/RFC2631, June 1999,\n              <https://www.rfc-editor.org/info/rfc2631>.\n\
    \   [RFC2632]  Ramsdell, B., Ed., \"S/MIME Version 3 Certificate\n           \
    \   Handling\", RFC 2632, DOI 10.17487/RFC2632, June 1999,\n              <https://www.rfc-editor.org/info/rfc2632>.\n\
    \   [RFC2633]  Ramsdell, B., Ed., \"S/MIME Version 3 Message\n              Specification\"\
    , RFC 2633, DOI 10.17487/RFC2633, June 1999,\n              <https://www.rfc-editor.org/info/rfc2633>.\n\
    \   [RFC3114]  Nicolls, W., \"Implementing Company Classification Policy\n   \
    \           with the S/MIME Security Label\", RFC 3114,\n              DOI 10.17487/RFC3114,\
    \ May 2002,\n              <https://www.rfc-editor.org/info/rfc3114>.\n   [RFC3850]\
    \  Ramsdell, B., Ed., \"Secure/Multipurpose Internet Mail\n              Extensions\
    \ (S/MIME) Version 3.1 Certificate Handling\",\n              RFC 3850, DOI 10.17487/RFC3850,\
    \ July 2004,\n              <https://www.rfc-editor.org/info/rfc3850>.\n   [RFC3851]\
    \  Ramsdell, B., Ed., \"Secure/Multipurpose Internet Mail\n              Extensions\
    \ (S/MIME) Version 3.1 Message Specification\",\n              RFC 3851, DOI 10.17487/RFC3851,\
    \ July 2004,\n              <https://www.rfc-editor.org/info/rfc3851>.\n   [RFC3852]\
    \  Housley, R., \"Cryptographic Message Syntax (CMS)\",\n              RFC 3852,\
    \ DOI 10.17487/RFC3852, July 2004,\n              <https://www.rfc-editor.org/info/rfc3852>.\n\
    \   [RFC5751]  Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet\n  \
    \            Mail Extensions (S/MIME) Version 3.2 Message\n              Specification\"\
    , RFC 5751, DOI 10.17487/RFC5751,\n              January 2010, <https://www.rfc-editor.org/info/rfc5751>.\n\
    \   [RFC6090]  McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic\n \
    \             Curve Cryptography Algorithms\", RFC 6090,\n              DOI 10.17487/RFC6090,\
    \ February 2011,\n              <https://www.rfc-editor.org/info/rfc6090>.\n \
    \  [RFC6151]  Turner, S. and L. Chen, \"Updated Security Considerations\n    \
    \          for the MD5 Message-Digest and the HMAC-MD5 Algorithms\",\n       \
    \       RFC 6151, DOI 10.17487/RFC6151, March 2011,\n              <https://www.rfc-editor.org/info/rfc6151>.\n\
    \   [RFC6194]  Polk, T., Chen, L., Turner, S., and P. Hoffman, \"Security\n  \
    \            Considerations for the SHA-0 and SHA-1 Message-Digest\n         \
    \     Algorithms\", RFC 6194, DOI 10.17487/RFC6194, March 2011,\n            \
    \  <https://www.rfc-editor.org/info/rfc6194>.\n   [RFC8032]  Josefsson, S. and\
    \ I. Liusvaara, \"Edwards-Curve Digital\n              Signature Algorithm (EdDSA)\"\
    , RFC 8032,\n              DOI 10.17487/RFC8032, January 2017,\n             \
    \ <https://www.rfc-editor.org/info/rfc8032>.\n   [RFC8162]  Hoffman, P. and J.\
    \ Schlyter, \"Using Secure DNS to\n              Associate Certificates with Domain\
    \ Names for S/MIME\",\n              RFC 8162, DOI 10.17487/RFC8162, May 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8162>.\n   [RFC8410]  Josefsson,\
    \ S. and J. Schaad, \"Algorithm Identifiers for\n              Ed25519, Ed448,\
    \ X25519, and X448 for Use in the Internet\n              X.509 Public Key Infrastructure\"\
    , RFC 8410,\n              DOI 10.17487/RFC8410, August 2018,\n              <https://www.rfc-editor.org/info/rfc8410>.\n\
    \   [SP800-57] National Institute of Standards and Technology (NIST),\n      \
    \        \"Recommendation for Key Management - Part 1: General\",\n          \
    \    NIST Special Publication 800-57 Revision 4,\n              DOI 10.6028/NIST.SP.800-57pt1r4,\
    \ January 2016,\n              <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/\n\
    \              NIST.SP.800-57pt1r4.pdf>.\n   [X.500]    \"Information technology\
    \ - Open Systems Interconnection -\n              The Directory - Part 1: Overview\
    \ of concepts, models and\n              services\", ITU-T Recommendation X.500,\n\
    \              ISO/IEC 9594-1:2017.\n"
- title: Appendix A.  Historic Considerations
  contents:
  - 'Appendix A.  Historic Considerations

    '
- title: A.1.  Signature Algorithms and Key Sizes
  contents:
  - "A.1.  Signature Algorithms and Key Sizes\n   There are a number of problems with\
    \ validating certificates on\n   sufficiently historic messages.  For this reason,\
    \ it is strongly\n   suggested that user agents treat these certificates differently\
    \ from\n   those on current messages.  These problems include the following:\n\
    \   -  CAs are not required to keep certificates on a CRL beyond one\n      update\
    \ after a certificate has expired.  This means that unless\n      CRLs are cached\
    \ as part of the message it is not always possible\n      to check to see if a\
    \ certificate has been revoked.  The same\n      problems exist with Online Certificate\
    \ Status Protocol (OCSP)\n      responses, as they may be based on a CRL rather\
    \ than on the\n      certificate database.\n   -  RSA and DSA keys of less than\
    \ 2048 bits are now considered by many\n      experts to be cryptographically\
    \ insecure (due to advances in\n      computing power).  Such keys were previously\
    \ considered secure, so\n      the processing of historic certificates will often\
    \ result in the\n      use of weak keys.  Implementations that wish to support\
    \ previous\n      versions of S/MIME or process old messages need to consider\
    \ the\n      security risks that result from smaller key sizes (e.g., spoofed\n\
    \      messages) versus the costs of denial of service.\n      [SMIMEv3.2] set\
    \ the lower limit on suggested key sizes for\n      creating and validation at\
    \ 1024 bits.  [SMIMEv3.1] set the lower\n      limit at 768 bits.  Prior to that,\
    \ the lower bound on key sizes\n      was 512 bits.\n   -  Hash functions used\
    \ to validate signatures on historic messages\n      may no longer be considered\
    \ to be secure (see below).  While there\n      are not currently any known practical\
    \ pre-image or second\n      pre-image attacks against MD5 or SHA-1, the fact\
    \ that they are no\n      longer considered to be collision resistant implies\
    \ that the\n      security level of any signature that is created with these hash\n\
    \      algorithms should also be considered as suspect.\n   The following algorithms\
    \ have been called out for some level of\n   support by previous S/MIME specifications:\n\
    \   -  RSA with MD5 was dropped in [SMIMEv4].  MD5 is no longer\n      considered\
    \ to be secure, as it is no longer collision resistant.\n      Details can be\
    \ found in [RFC6151].\n   -  RSA and DSA with SHA-1 were dropped in [SMIMEv4].\
    \  SHA-1 is no\n      longer considered to be secure, as it is no longer collision\n\
    \      resistant.  The IETF statement on SHA-1 can be found in [RFC6194],\n  \
    \    but it is out of date relative to the most recent advances.\n   -  DSA with\
    \ SHA-256 support was dropped in [SMIMEv4].  DSA was\n      dropped as part of\
    \ a general movement from finite fields to\n      elliptic curves.  Issues related\
    \ to dealing with non-deterministic\n      generation of the parameter 'k' have\
    \ come up (see [RFC6979]).\n   For 512-bit RSA with SHA-1, see [RFC3279] and [FIPS186-2]\
    \ without\n   Change Notice 1; for 512-bit RSA with SHA-256, see [RFC4055] and\n\
    \   [FIPS186-2] without Change Notice 1.  The first reference provides\n   the\
    \ signature algorithm's OID, and the second provides the signature\n   algorithm's\
    \ definition.\n   For 512-bit DSA with SHA-1, see [RFC3279] and [FIPS186-2] without\n\
    \   Change Notice 1; for 512-bit DSA with SHA-256, see [RFC5758] and\n   [FIPS186-2]\
    \ without Change Notice 1; for 1024-bit DSA with SHA-1, see\n   [RFC3279] and\
    \ [FIPS186-2] with Change Notice 1; and for 1024-bit\n   through 3072-bit DSA\
    \ with SHA-256, see [RFC5758] and [FIPS186-3].\n   The first reference provides\
    \ the signature algorithm's OID, and the\n   second provides the signature algorithm's\
    \ definition.\n"
- title: Appendix B.  Moving S/MIME v2 Certificate Handling to Historic Status
  contents:
  - "Appendix B.  Moving S/MIME v2 Certificate Handling to Historic Status\n   The\
    \ S/MIME v3 [SMIMEv3], v3.1 [SMIMEv3.1], v3.2 [SMIMEv3.2], and v4.0\n   (this\
    \ document) specifications are backward compatible with the\n   S/MIME v2 Certificate\
    \ Handling Specification [SMIMEv2], with the\n   exception of the algorithms (dropped\
    \ RC2/40 requirement, and added\n   DSA and RSASSA-PSS requirements).  Therefore,\
    \ RFC 2312 [SMIMEv2] was\n   moved to Historic status.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Many thanks go out to the other authors of the S/MIME v2\
    \ Certificate\n   Handling RFC: Steve Dusse, Paul Hoffman, and Jeff Weinstein.\
    \  Without\n   v2, there wouldn't be a v3, v3.1, v3.2, or v4.0.\n   A number of\
    \ the members of the S/MIME Working Group have also worked\n   very hard and contributed\
    \ to this document.  Any list of people is\n   doomed to omission, and for that\
    \ I apologize.  In alphabetical order,\n   the following people stand out in my\
    \ mind because they made direct\n   contributions to this document.\n   Bill Flanigan,\
    \ Trevor Freeman, Elliott Ginsburg, Alfred Hoenes, Paul\n   Hoffman, Russ Housley,\
    \ David P. Kemp, Michael Myers, John Pawling,\n   and Denis Pinkas.\n   The version\
    \ 4 update to the S/MIME documents was done under the\n   auspices of the LAMPS\
    \ Working Group.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jim Schaad\n   August Cellars\n   Email: ietf@augustcellars.com\n\
    \   Blake Ramsdell\n   Brute Squad Labs, Inc.\n   Email: blaker@gmail.com\n  \
    \ Sean Turner\n   sn3rd\n   Email: sean@sn3rd.com\n"
