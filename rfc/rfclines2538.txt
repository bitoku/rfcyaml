Abstract Cryptographic public key are frequently published and their authenticity demonstrated by certificates.
A CERT resource record (RR) is defined so that such certificates and related certificate revocation lists can be stored in the Domain Name System (DNS).
Introduction Public keys are frequently published in the form of a certificate and their authenticity is commonly demonstrated by certificates and related certificate revocation lists (CRLs).
A certificate is a binding, through a cryptographic digital signature, of a public key, a validity interval and/or conditions, and identity, authorization, or other information.
A certificate revocation list is a list of certificates that are revoked, and incidental information, all signed by the signer (issuer) of the revoked certificates.
Examples are X.509 certificates/CRLs in the X.500 directory system or PGP certificates/revocations used by PGP software.
Section 2 below specifies a CERT resource record (RR) for the storage of certificates in the Domain Name System.
Section 3 discusses appropriate owner names for CERT RRs.
Sections 4, 5, and 6 below cover performance, IANA, and security considerations, respectively.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The CERT resource record (RR) has the structure given below.
Its RR type code is 37.
1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
The algorithm field has the same meaning as the algorithm field in KEY and SIG RRs [RFC 2535] except that a zero algorithm field indicates the algorithm is unknown to a secure DNS, which may simply be the result of the algorithm not having been standardized for secure DNS.
The key tag field is the 16 bit value computed for the key embedded in the certificate as specified in the DNSSEC Standard [RFC 2535].
This field is used as an efficiency measure to pick which CERT RRs may be applicable to a particular key.
The key tag can be calculated for the key in question and then only CERT RRs with the same key tag need be examined.
However, the key must always be transformed to the format it would have as the public key portion of a KEY RR before the key tag is computed.
This is only possible if the key is applicable to an algorithm (and limits such as key size limits) defined for DNS security.
If it is not, the algorithm field MUST BE zero and the tag field is meaningless and SHOULD BE zero.
The certificate section will start with a one byte unsigned OID length and then an X.500 OID indicating the nature of the remainder of the certificate section (see 2.3 below).
X.509 certificates do not include their X.500 directory type designating OID as a prefix.)
The SPKI type is reserved to indicate a certificate formated as to be specified by the IETF SPKI working group.
The PGP type indicates a Pretty Good Privacy certificate as described in RFC 2440 and its extensions and successors.
The URI private type indicates a certificate format defined by an absolute URI.
The certificate portion of the CERT RR MUST begin with a null terminated URI [RFC 2396] and the data after the null is the private format certificate itself.
The URI SHOULD be such that a retrieval from it will lead to documentation on the format of the certificate.
Recognition of private certificate types need not be based on URI equality but can use various forms of pattern matching so that, for example, subtype or version information can also be encoded into the URI.
The OID private type indicates a private format certificate specified by a an ISO OID prefix.
The certificate section will start with a one byte unsigned OID length and
then a BER encoded OID indicating the nature of the remainder of the certificate section.
This can be an X.509 certificate format or some other format.
X.509 certificates that conform to the IETF PKIX profile SHOULD be indicated by the PKIX type, not the OID private type.
Recognition of private certificate types need not be based on OID equality but can use various forms of pattern matching such as OID prefix.
2.2 Text Representation of CERT RRs
The RDATA portion of a CERT RR has the type field as an unsigned integer or as a mnemonic symbol as listed in section 2.1 above.
The key tag field is represented as an unsigned integer.
The algorithm field is represented as an unsigned integer or a mnemonic symbol as listed in [RFC 2535].
The certificate / CRL portion is represented in base 64 and may be divided up into any number of white space separated substrings, down to single base 64 digits, which are concatenated to obtain the full signature.
These substrings can span lines using the standard parenthesis.
Note that the certificate / CRL portion may have internal sub fields but these do not appear in the master file representation.
For example, with type 254, there will be an OID size, an OID, and then the certificate / CRL proper.
But only a single logical base 64 string will appear in the text representation.
2.3 X.509 OIDs OIDs have been defined in connection with the X.500 directory for user certificates, certification authority certificates, revocations of certification authority, and revocations of user certificates.
The following table lists the OIDs, their BER encoding, and their length prefixed hex format for use in CERT RRs
{ joint iso ccitt(2) ds(5) at(4)
}   0x 03 55 04 25 id at authorityRevocationList
{ joint iso ccitt(2) ds(5) at(4)
{ joint iso ccitt(2) ds(5) at(4)
}   0x 03 55 04 27 3.
Appropriate Owner Names for CERT RRs
It is recommended that certificate CERT RRs be stored under a domain name related to their subject, i.e., the name of the entity intended to control the private key corresponding to the public key being certified.
It is recommended that certificate revocation list CERT RRs be stored under a domain name related to their issuer.
Following some of the guidelines below may result in the use in DNS names of characters that require DNS quoting which is to use a backslash followed by the octal representation of the ASCII code for the character such as \000 for NULL.
3.1 X.509 CERT RR Names
Some X.509 versions permit multiple names to be associated with subjects and issuers under "Subject Alternate Name" and "Issuer Alternate Name".
For example, x.509v3 has such Alternate Names with an ASN.1 specification as follows:
OBJECT IDENTIFIER } The recommended locations of CERT storage are as follows, in priority order:
If a domain name is included in the identification in the certificate or CRL, that should be used.
If a domain name is not included but an IP address is included, then the translation of that IP address into the appropriate inverse domain name should be used.
If neither of the above it used but a URI containing a domain name is present, that domain name should be used.
If none of the above is included but a character string name is included, then it should be treated as described for PGP names in 3.2 below.
If none of the above apply, then the distinguished name (DN) should be mapped into a domain name as specified in RFC 2247.
Example 1: Assume that an X.509v3 certificate is issued to /CN John Doe/DC Doe/DC com/DC xy/
O Doe Inc/C XY/ with Subject Alternative names of (a) string "John (the Man) Doe", (b) domain name john  doe.com, and (c) uri <https://www.secure.john doe.com:8080/
Then the storage locations recommended, in priority order, would be (1) john doe.com, (2) www.secure.john doe.com, and (3) Doe.com.xy.
Assume that an X.509v3 certificate is issued to /CN James Hacker/L Basingstoke/
O Widget Inc/C GB/ with Subject Alternate names of (a) domain name widget.foo.example, (b) IPv4 address 10.251.13.201, and (c) string "
Then the storage locations recommended, in priority order, would be (1) widget.foo.example,
(2) 201.13.251.10.in addr.arpa, and (3) hacker.mail.widget.foo.example.
3.2 PGP CERT RR Names PGP signed keys (certificates) use a general character string User ID [RFC 2440].
However, it is recommended by PGP that such names include the RFC 822 email address of the party, as in "Leslie Example <Leslie@host.example>".
If such a format is used, the CERT should be under the standard translation of the email address into a domain name, which would be leslie.host.example in this case.
If no RFC 822 name can be extracted from the string name no specific domain name is recommended.
Performance Considerations Current Domain Name System (DNS) implementations are optimized for small transfers, typically not more than 512 bytes including overhead.
While larger transfers will perform correctly and work is underway to make larger transfers more efficient, it is still advisable at this time to make every reasonable effort to minimize the size of certificates stored within the DNS.
Steps that can be taken may include using the fewest possible optional or extensions fields and using short field values for variable length fields that must be included.
IANA Considerations Certificate types 0x0000 through 0x00FF and 0xFF00
through 0xFFFF can only be assigned by an IETF standards action [RFC 2434] (and this document assigns 0x0001 through 0x0003
through 0xFEFF are assigned through IETF Consensus [RFC 2434] based on RFC documentation of the certificate type.
The availability of private types under 0x00FD and 0x00FE should satisfy most requirements for proprietary or private types.
By definition, certificates contain their own authenticating signature.
Thus it is reasonable to store certificates in non secure DNS zones or to retrieve certificates from DNS with DNS security checking not implemented or deferred for efficiency.
The results MAY be trusted if the certificate chain is verified back to a known trusted key and this conforms with the user's security policy.
Alternatively, if certificates are retrieved from a secure DNS zone with DNS security checking enabled and are verified by DNS security, the key within the retrieved certificate MAY be trusted without verifying the certificate chain if this conforms with the user's security policy.
CERT RRs are not used in connection with securing the DNS security additions so there are no security considerations related to CERT RRs and securing the DNS itself.
