- title: __initial_text__
  contents:
  - '           DomainKeys Identified Mail (DKIM) Service Overview

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides an overview of the DomainKeys Identified\
    \ Mail\n   (DKIM) service and describes how it can fit into a messaging service.\n\
    \   It also describes how DKIM relates to other IETF message signature\n   technologies.\
    \  It is intended for those who are adopting, developing,\n   or deploying DKIM.\
    \  DKIM allows an organization to take\n   responsibility for transmitting a message,\
    \ in a way that can be\n   verified by a recipient.  The organization can be the\
    \ author's, the\n   originating sending site, an intermediary, or one of their\
    \ agents.  A\n   message can contain multiple signatures from the same or different\n\
    \   organizations involved with the message.  DKIM defines a domain-level\n  \
    \ digital signature authentication framework for email, using public-\n   key\
    \ cryptography, with the domain name service as its key server\n   technology\
    \ (RFC 4871).  This permits verification of a responsible\n   organization, as\
    \ well as the integrity of the message contents.  DKIM\n   also enables a mechanism\
    \ that permits potential email signers to\n   publish information about their\
    \ email signing practices; this will\n   permit email receivers to make additional\
    \ assessments about messages.\n   DKIM's authentication of email identity can\
    \ assist in the global\n   control of \"spam\" and \"phishing\".\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. DKIM's Scope ...............................................4\n  \
    \    1.2. Prior Work .................................................5\n    \
    \  1.3. Internet Mail Background ...................................6\n   2. The\
    \ DKIM Value Proposition ......................................6\n      2.1. Identity\
    \ Verification ......................................7\n      2.2. Enabling Trust\
    \ Assessments .................................7\n      2.3. Establishing Message\
    \ Validity ..............................8\n   3. DKIM Goals ......................................................8\n\
    \      3.1. Functional Goals ...........................................9\n  \
    \    3.2. Operational Goals .........................................10\n   4.\
    \ DKIM Function ..................................................12\n      4.1.\
    \ Basic Signing .............................................12\n      4.2. Characteristics\
    \ of a DKIM Signature .......................12\n      4.3. The Selector Construct\
    \ ....................................13\n      4.4. Verification ..............................................13\n\
    \      4.5. Sub-Domain Assessment .....................................13\n  \
    \ 5. Service Architecture ...........................................14\n    \
    \  5.1. Administration and Maintenance ............................15\n      5.2.\
    \ Signing ...................................................16\n      5.3. Verifying\
    \ .................................................16\n      5.4. Unverified or\
    \ Unsigned Mail ...............................16\n      5.5. Assessing .................................................17\n\
    \      5.6. DKIM Processing within an ADMD ............................17\n  \
    \ 6. Considerations .................................................17\n    \
    \  6.1. Security Considerations ...................................17\n      6.2.\
    \ Acknowledgements ..........................................17\n   7. Informative\
    \ References .........................................18\n   Appendix A.  Internet\
    \ Mail Background .............................20\n     A.1.  Core Model ................................................20\n\
    \     A.2.  Trust Boundaries ..........................................20\n  \
    \ Index .............................................................22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document provides a description of the architecture\
    \ and\n   functionality for DomainKeys Identified Mail (DKIM), that is, the\n\
    \   core mechanism for signing and verifying messages.  It is intended\n   for\
    \ those who are adopting, developing, or deploying DKIM.  It will\n   also be\
    \ helpful for those who are considering extending DKIM, either\n   into other\
    \ areas of use or to support additional features.  This\n   overview does not\
    \ provide information on threats to DKIM or email or\n   details on the protocol\
    \ specifics, which can be found in [RFC4686]\n   and [RFC4871], respectively.\
    \  Because the scope of this overview is\n   restricted to the technical details\
    \ of signing and verifying using\n   DKIM, it does not explore operational issues,\
    \ the details of services\n   that DKIM uses, or those that, in turn, use DKIM.\
    \  Nor does it\n   discuss services that build upon DKIM for enforcement of policies\
    \ or\n   assessments.  The document assumes a background in basic email and\n\
    \   network security technology and services.\n   DKIM allows an organization\
    \ to take responsibility for a message in a\n   way that can be verified by a\
    \ recipient.  The organization can be a\n   direct handler of the message, such\
    \ as the author's, the originating\n   sending site's, or an intermediary's along\
    \ the transit path.\n   However, it can also be an indirect handler, such as an\
    \ independent\n   service that is providing assistance to a direct handler.  DKIM\n\
    \   defines a domain-level digital signature authentication framework for\n  \
    \ email through the use of public-key cryptography and using the domain\n   name\
    \ service as its key server technology [RFC4871].  It permits\n   verification\
    \ of the signer of a message, as well as the integrity of\n   its contents.  DKIM\
    \ will also provide a mechanism that permits\n   potential email signers to publish\
    \ information about their email\n   signing practices; this will permit email\
    \ receivers to make\n   additional assessments of unsigned messages.  DKIM's authentication\n\
    \   of email identity can assist in the global control of \"spam\" and\n   \"\
    phishing\".\n   Neither this document nor DKIM attempts to provide solutions to\
    \ the\n   world's problems with spam, phishing, viruses, worms, joe jobs, etc.\n\
    \   DKIM provides one basic tool, in what needs to be a large arsenal,\n   for\
    \ improving basic trust in the Internet mail service.  However, by\n   itself,\
    \ DKIM is not sufficient to that task and this overview does\n   not pursue the\
    \ issues of integrating DKIM into these larger efforts,\n   beyond a simple reference\
    \ within a system diagram.  Rather, it is a\n   basic introduction to the technology\
    \ and its use.\n"
- title: 1.1.  DKIM's Scope
  contents:
  - "1.1.  DKIM's Scope\n   A person or organization has an \"identity\" -- that is,\
    \ a\n   constellation of characteristics that distinguish them from any other\n\
    \   identity.  Associated with this abstraction can be a label used as a\n   reference,\
    \ or \"identifier\".  This is the distinction between a thing\n   and the name\
    \ of the thing.  DKIM uses a domain name as an identifier,\n   to refer to the\
    \ identity of a responsible person or organization.  In\n   DKIM, this identifier\
    \ is called the Signing Domain IDentifier (SDID)\n   and is contained in the DKIM-Signature\
    \ header fields \"d=\" tag.  Note\n   that the same identity can have multiple\
    \ identifiers.\n   A DKIM signature can be created by a direct handler of a message,\n\
    \   such as the message's author or by an intermediary.  A signature also\n  \
    \ can be created by an independent service that is providing assistance\n   to\
    \ a handler of the message.  Whoever does the signing chooses the\n   SDID to\
    \ be used as the basis for later assessments.  Hence, the\n   reputation associated\
    \ with that domain name might be an additional\n   basis for evaluating whether\
    \ to trust the message for delivery.  The\n   owner of the SDID is declaring that\
    \ they accept responsibility for\n   the message and can thus be held accountable\
    \ for it.\n   DKIM is intended as a value-added feature for email.  Mail that\
    \ is\n   not signed by DKIM is handled in the same way as it was before DKIM\n\
    \   was defined.  The message will be evaluated by established analysis\n   and\
    \ filtering techniques.  (A signing policy can provide additional\n   information\
    \ for that analysis and filtering.)  Over time, widespread\n   DKIM adoption could\
    \ permit stricter handling of messages that are not\n   signed.  However, early\
    \ benefits do not require this and probably do\n   not warrant this.\n   DKIM\
    \ has a narrow scope.  It is an enabling technology, intended for\n   use in the\
    \ larger context of determining message legitimacy.  This\n   larger context is\
    \ complex, so it is easy to assume that a component\n   like DKIM, which actually\
    \ provides only a limited service, instead\n   satisfies the broader set of requirements.\n\
    \   By itself, a DKIM signature:\n   o  Does not authenticate or verify the contents\
    \ of the message header\n      or body, such as the author From field, beyond\
    \ certifying data\n      integrity between the time of signing and the time of\
    \ verifying.\n   o  Does not offer any assertions about the behaviors of the signer.\n\
    \   o  Does not prescribe any specific actions for receivers to take upon\n  \
    \    successful signature verification.\n   o  Does not provide protection after\
    \ signature verification.\n   o  Does not protect against re-sending (replay of)\
    \ a message that\n      already has a verified signature; therefore, a transit\n\
    \      intermediary or a recipient can re-post the message -- that is,\n     \
    \ post it as a new message -- with the original signature remaining\n      verifiable,\
    \ even though the new recipient(s) might be different\n      from those who were\
    \ originally specified by the author.\n"
- title: 1.2.  Prior Work
  contents:
  - "1.2.  Prior Work\n   Historically, the IP Address of the system that directly\
    \ sent the\n   message -- that is, the previous email \"hop\" -- has been treated\
    \ as\n   an identity to use for making assessments.  For example, see\n   [RFC4408],\
    \ [RFC4406], and [RFC4407] for some current uses of the\n   sending system's IP\
    \ Address.  The IP Address is obtained via\n   underlying Internet information\
    \ mechanisms and is therefore trusted\n   to be accurate.  Besides having some\
    \ known security weaknesses, the\n   use of addresses presents a number of functional\
    \ and operational\n   problems.  Consequently, there is a widespread desire to\
    \ use an\n   identifier that has better correspondence to organizational\n   boundaries.\
    \  Domain names can satisfy this need.\n   There have been four previous IETF\
    \ Internet Mail signature standards.\n   Their goals have differed from those\
    \ of DKIM.  PEM and MOSS are only\n   of historical interest.\n   o  Privacy Enhanced\
    \ Mail (PEM) was first published in 1987 [RFC0989].\n   o  Pretty Good Privacy\
    \ (PGP) was developed by Phil Zimmermann and\n      first released in 1991.  A\
    \ later version was standardized as\n      OpenPGP [RFC1991] [RFC2440] [RFC3156]\
    \ [RFC4880].\n   o  PEM eventually transformed into MIME Object Security Services\n\
    \      (MOSS) in 1995 [RFC1848].\n   o  RSA Security independently developed Secure\
    \ MIME (S/MIME) to\n      transport a Public Key Cryptographic System (PKCS) #7\
    \ data object.\n      It was standardized as [RFC3851].\n   Development of both\
    \ S/MIME and OpenPGP has continued.  While each has\n   achieved a significant\
    \ user base, neither one has achieved ubiquity\n   in deployment or use.\n   To\
    \ the extent that other message-signing services might have been\n   adapted to\
    \ do the job that DKIM is designed to perform, it was felt\n   that repurposing\
    \ any of those would be more problematic than creating\n   a separate service.\
    \  That said, DKIM only uses cryptographic\n   components that have a long history,\
    \ including use within some of\n   those other messaging security services.\n\
    \   DKIM is differentiated by its reliance on an identifier that is\n   specific\
    \ to DKIM use.\n   DKIM also has a distinctive approach for distributing and vouching\n\
    \   for keys.  It uses a key-centric, public-key management scheme,\n   rather\
    \ than the more typical approaches based on a certificate in the\n   styles of\
    \ Kohnfelder (X.509) [Kohnfelder] or Zimmermann (web of\n   trust) [WebofTrust].\
    \  For DKIM, the owner of the SDID asserts the\n   validity of a key, rather than\
    \ having the validity of the key\n   attested to by a trusted third party, often\
    \ including other\n   assertions, such as a quality assessment of the key's owner.\
    \  DKIM\n   treats quality assessment as an independent, value-added service,\n\
    \   beyond the initial work of deploying a signature verification\n   service.\n\
    \   Further, DKIM's key management is provided by adding information\n   records\
    \ to the existing Domain Name System (DNS) [RFC1034], rather\n   than requiring\
    \ deployment of a new query infrastructure.  This\n   approach has significant\
    \ operational advantages.  First, it avoids\n   the considerable barrier of creating\
    \ a new global infrastructure;\n   hence, it leverages a global base of administrative\
    \ experience and\n   highly reliable distributed operation.  Second, the technical\
    \ aspect\n   of the DNS is already known to be efficient.  Any new service would\n\
    \   have to undergo a period of gradual maturation, with potentially\n   problematic\
    \ early-stage behaviors.  By (re-)using the DNS, DKIM\n   avoids these growing\
    \ pains.\n"
- title: 1.3.  Internet Mail Background
  contents:
  - "1.3.  Internet Mail Background\n   The basic Internet email service has evolved\
    \ extensively over its\n   several decades of continuous operation.  Its modern\
    \ architecture\n   comprises a number of specialized components.  A discussion\
    \ about\n   Mail User Agents (MUAs), Mail Handling Services (MHSs), Mail Transfer\n\
    \   Agents (MTAs), Mail Submission Agents (MSAs), Mail Delivery Agents\n   (MDAs),\
    \ Mail Service Providers (MSPs), Administrative Management\n   Domains (ADMDs),\
    \ Mediators, and their relationships can be found in\n   Appendix A.\n"
- title: 2.  The DKIM Value Proposition
  contents:
  - "2.  The DKIM Value Proposition\n   The nature and origins of a message often\
    \ are falsely stated.  Such\n   misrepresentations may be employed for legitimate\
    \ or nefarious\n   reasons.  DKIM provides a foundation for distinguishing legitimate\n\
    \   mail, and thus a means of associating a verifiable identifier with a\n   message.\
    \  Given the presence of that identifier, a receiver can make\n   decisions about\
    \ further handling of the message, based upon\n   assessments of the identity\
    \ that is associated with the identifier.\n   Receivers who successfully verify\
    \ a signature can use information\n   about the signer as part of a program to\
    \ limit spam, spoofing,\n   phishing, or other undesirable behaviors.  DKIM does\
    \ not, itself,\n   prescribe any specific actions by the recipient; rather, it\
    \ is an\n   enabling technology for services that do.\n   These services will\
    \ typically:\n   1.  Determine a verified identity as taking responsibility for\
    \ the\n       message, if possible.\n   2.  Evaluate the trustworthiness of this/these\
    \ identities.\n   The role of DKIM is to perform the first of these; DKIM is an\
    \ enabler\n   for the second.\n"
- title: 2.1.  Identity Verification
  contents:
  - "2.1.  Identity Verification\n   Consider an attack made against an organization\
    \ or against customers\n   of an organization.  The name of the organization is\
    \ linked to\n   particular Internet domain names (identifiers).  Attackers can\n\
    \   leverage using either a legitimate domain name, one without\n   authorization,\
    \ or a \"cousin\" name that is similar to one that is\n   legitimate, but is not\
    \ controlled by the target organization.  An\n   assessment service that uses\
    \ DKIM can differentiate between a domain\n   (SDID) used by a known organization\
    \ and a domain used by others.  As\n   such, DKIM performs the positive step of\
    \ identifying messages\n   associated with verifiable identities, rather than\
    \ the negative step\n   of identifying messages with problematic use of identities.\
    \  Whether\n   a verified identity belongs to a Good Actor or a Bad Actor is a\n\
    \   question for later stages of assessment.\n"
- title: 2.2.  Enabling Trust Assessments
  contents:
  - "2.2.  Enabling Trust Assessments\n   Email receiving services are faced with\
    \ a basic decision: whether to\n   accept and deliver a newly arrived message\
    \ to the indicated\n   recipient?  That is, does the receiving service trust that\
    \ the\n   message is sufficiently \"safe\" to be viewed?  For the modern\n   Internet,\
    \ most receiving services have an elaborate engine that\n   formulates this quality\
    \ assessment.  These engines take a variety of\n   information as input to the\
    \ decision, such as from reputation lists\n   and accreditation services.  As\
    \ the engine processes information, it\n   raises or lowers its trust assessment\
    \ for the message.\n   In order to formulate reputation information, an accurate,\
    \ stable\n   identifier is needed.  Otherwise, the information might not pertain\n\
    \   to the identified organization's own actions.  When using an IP\n   Address,\
    \ accuracy is based on the belief that the underlying Internet\n   infrastructure\
    \ supplies an accurate address.  When using domain-based\n   reputation data,\
    \ some other form of verification is needed, since it\n   is not supplied independently\
    \ by the infrastructure.\n   DKIM satisfies this requirement by declaring a valid\
    \ \"responsible\"\n   identity -- referenced through the SDID -- about which the\
    \ engine can\n   make quality assessments and by using a digital signature to\
    \ ensure\n   that use of the identifier is authorized.  However, by itself, a\n\
    \   valid DKIM signature neither lowers nor raises the level of trust\n   associated\
    \ with the message, but it enables other mechanisms to be\n   used for doing so.\n\
    \   An organization might build upon its use of DKIM by publishing\n   information\
    \ about its Signing Practices (SP).  This could permit\n   detecting some messages\
    \ that purport to be associated with a domain,\n   but which are not.  As such,\
    \ an SP can cause the trust assessment to\n   be reduced, or leave it unchanged.\n"
- title: 2.3.  Establishing Message Validity
  contents:
  - "2.3.  Establishing Message Validity\n   Though man-in-the-middle attacks are\
    \ historically rare in email, it\n   is nevertheless theoretically possible for\
    \ a message to be modified\n   during transit.  An interesting side effect of\
    \ the cryptographic\n   method used by DKIM is that it is possible to be certain\
    \ that a\n   signed message (or, if l= is used, the signed portion of a message)\n\
    \   has not been modified between the time of signing and the time of\n   verifying.\
    \  If it has been changed in any way, then the message will\n   not be verified\
    \ successfully with DKIM.\n   As described above, this validity neither lowers\
    \ nor raises the level\n   of trust associated with the message.  If it was an\
    \ untrustworthy\n   message when initially sent, the verifier can be certain that\
    \ the\n   message will be equally untrustworthy upon receipt and successful\n\
    \   verification.\n"
- title: 3.  DKIM Goals
  contents:
  - "3.  DKIM Goals\n   DKIM adds an end-to-end authentication capability to the existing\n\
    \   email transfer infrastructure.  That is, there can be multiple email\n   relaying\
    \ hops between signing and verifying.  Hence, it defines a\n   mechanism that\
    \ only needs to be supported by the signer and the\n   verifier, rather than any\
    \ of the functional components along the\n   handling path.  This motivates functional\
    \ goals about the\n   authentication itself and operational goals about its integration\n\
    \   with the rest of the Internet email service.\n"
- title: 3.1.  Functional Goals
  contents:
  - '3.1.  Functional Goals

    '
- title: 3.1.1.  Use Domain-Level Granularity for Assurance
  contents:
  - "3.1.1.  Use Domain-Level Granularity for Assurance\n   DKIM provides accountability\
    \ at the coarse granularity of an\n   organization or, perhaps, a department.\
    \  An existing construct that\n   enables this granularity is the Domain Name\
    \ [RFC1034].  DKIM binds a\n   signing key record to a Domain Name as the SDID.\
    \  Further benefits of\n   using domain names include simplifying key management,\
    \ enabling\n   signing by the infrastructure as opposed to the MUA, and reducing\n\
    \   privacy concerns.\n   Contrast this with OpenPGP and S/MIME, which associate\
    \ verification\n   with individual authors, using their full email addresses.\n"
- title: 3.1.2.  Implementation Locality
  contents:
  - "3.1.2.  Implementation Locality\n   Any party, anywhere along the transit path,\
    \ can implement DKIM\n   signing.  Its use is not confined to particular systems,\
    \ such as the\n   author's MUA or the inbound boundary MTA, and there can be more\
    \ than\n   one signature per message.\n"
- title: 3.1.3.  Allow Delegation of Signing to Independent Parties
  contents:
  - "3.1.3.  Allow Delegation of Signing to Independent Parties\n   Different parties\
    \ have different roles in the process of email\n   exchange.  Some are easily\
    \ visible to end users and others are\n   primarily visible to operators of the\
    \ service.  DKIM was designed to\n   support signing by any of these different\
    \ parties and to permit them\n   to sign with any domain name that they deem appropriate\
    \ (and for\n   which they hold authorized signing keys).  As an example, an\n\
    \   organization that creates email content often delegates portions of\n   its\
    \ processing or transmission to an outsourced group.  DKIM supports\n   this mode\
    \ of activity, in a manner that is not normally visible to\n   end users.  Similarly,\
    \ a reputation provider can delegate a signing\n   key for a domain under the\
    \ control of the provider, to be used by an\n   organization for which the provider\
    \ is prepared to vouch.\n"
- title: 3.1.4.  Distinguish the Core Authentication Mechanism from Its
  contents:
  - "3.1.4.  Distinguish the Core Authentication Mechanism from Its\n        Derivative\
    \ Uses\n   An authenticated identity can be subject to a variety of assessment\n\
    \   policies, either ad hoc or standardized.  DKIM separates basic\n   authentication\
    \ from assessment.  The only semantics inherent to a\n   DKIM signature are that\
    \ the signer is asserting some kind of\n   responsibility for the message.  Any\
    \ interpretation of this kind of\n   responsibility is the job of services building\
    \ on DKIM, but the\n   details are beyond the scope of that core.  One such mechanism\
    \ might\n   assert a relationship between the SDID and the author, as specified\n\
    \   in the rfc5322.From: header field's domain identity.  Another might\n   specify\
    \ how to treat an unsigned message with that rfc5322.From:\n   field domain.\n"
- title: 3.1.5.  Retain Ability to Have Anonymous Email
  contents:
  - "3.1.5.  Retain Ability to Have Anonymous Email\n   The ability to send a message\
    \ that does not identify its author is\n   considered to be a valuable quality\
    \ of the current email service that\n   needs to be retained.  DKIM is compatible\
    \ with this goal since it\n   permits authentication of the email system operator,\
    \ rather than the\n   content author.  If it is possible to obtain effectively\
    \ anonymous\n   accounts at example.com, knowing that a message definitely came\
    \ from\n   example.com does not threaten the anonymity of the user who authored\n\
    \   it.\n"
- title: 3.2.  Operational Goals
  contents:
  - '3.2.  Operational Goals

    '
- title: 3.2.1.  Make Presence of Signature Transparent to Non-Supporting
  contents:
  - "3.2.1.  Make Presence of Signature Transparent to Non-Supporting\n        Recipients\n\
    \   In order to facilitate incremental adoption, DKIM is designed to be\n   transparent\
    \ to recipients that do not support it.  A DKIM signature\n   does not \"get in\
    \ the way\" for such recipients.\n   Contrast this with S/MIME and OpenPGP, which\
    \ modify the message body.\n   Hence, their presence is potentially visible to\
    \ email recipients,\n   whose user software needs to process the associated constructs.\n"
- title: 3.2.2.  Treat Verification Failure the Same as No Signature Present
  contents:
  - "3.2.2.  Treat Verification Failure the Same as No Signature Present\n   DKIM\
    \ must also be transparent to existing assessment mechanisms.\n   Consequently,\
    \ a DKIM signature verifier is to treat messages with\n   signatures that fail\
    \ as if they were unsigned.  Hence, the message\n   will revert to normal handling,\
    \ through the receiver's existing\n   filtering mechanisms.  Thus, DKIM specifies\
    \ that an assessing site is\n   not to take a message that has a broken signature\
    \ and treat it any\n   differently than if the signature weren't there.\n   Contrast\
    \ this with OpenPGP and S/MIME, which were designed for strong\n   cryptographic\
    \ protection.  This included treating verification\n   failure as message failure.\n"
- title: 3.2.3.  Permit Incremental Adoption for Incremental Benefit
  contents:
  - "3.2.3.  Permit Incremental Adoption for Incremental Benefit\n   DKIM can be used\
    \ by any two organizations that exchange email and\n   implement DKIM; it does\
    \ not require adoption within the open\n   Internet's email infrastructure.  In\
    \ the usual manner of \"network\n   effects\", the benefits of DKIM increase as\
    \ its adoption increases.\n   Although this mechanism can be used in association\
    \ with independent\n   assessment services, such services are not essential in\
    \ order to\n   obtain initial benefit.  For example, DKIM allows (possibly large)\n\
    \   pairwise sets of email providers and spam filtering companies to\n   distinguish\
    \ mail that is associated with a known organization, versus\n   mail that might\
    \ deceptively purport to have the affiliation.  This in\n   turn allows the development\
    \ of \"whitelist\" schemes whereby\n   authenticated mail from a known source\
    \ with good reputation is\n   allowed to bypass some anti-abuse filters.\n   In\
    \ effect, the email receiver can use their set of known\n   relationships to generate\
    \ their own reputation data.  This works\n   particularly well for traffic between\
    \ large sending providers and\n   large receiving providers.  However, it also\
    \ works well for any\n   operator, public or private, that has mail traffic dominated\
    \ by\n   exchanges among a stable set of organizations.\n   Management of email\
    \ delivery problems currently represents a\n   significant pain point for email\
    \ administrators at every point on the\n   mail transit path.  Administrators\
    \ who have deployed DKIM\n   verification have an incentive to encourage senders\
    \ (who might\n   subsequently complain that their email is not being delivered)\
    \ to use\n   DKIM signatures.\n"
- title: 3.2.4.  Minimize the Amount of Required Infrastructure
  contents:
  - "3.2.4.  Minimize the Amount of Required Infrastructure\n   In order to allow\
    \ early adopters to gain early benefit, DKIM makes no\n   changes to the core\
    \ Internet Mail service and, instead, can provide a\n   useful benefit for any\
    \ individual pair of signers and verifiers who\n   are exchanging mail.  Similarly,\
    \ DKIM's reliance on the Domain Name\n   System greatly reduces the amount of\
    \ new administrative\n   infrastructure that is needed across the open Internet.\n"
- title: 3.2.5.  Permit a Wide Range of Deployment Choices
  contents:
  - "3.2.5.  Permit a Wide Range of Deployment Choices\n   DKIM can be deployed at\
    \ a variety of places within an organization's\n   email service.  This affords\
    \ flexibility in terms of who administers\n   its use, as well as what traffic\
    \ carries a DKIM signature.  For\n   example, employing DKIM at an outbound boundary\
    \ MTA will mean that it\n   is administered by the organization's central IT department\
    \ and that\n   internal messages are not signed.\n"
- title: 4.  DKIM Function
  contents:
  - "4.  DKIM Function\n   DKIM has a very constrained set of capabilities, primarily\
    \ targeting\n   email while it is in transit from an author to a set of recipients.\n\
    \   It associates verifiable information with a message, especially a\n   responsible\
    \ identity.  When a message does not have a valid signature\n   associated with\
    \ the author, a DKIM SP will permit the domain name of\n   the author to be used\
    \ for obtaining information about their signing\n   practices.\n"
- title: 4.1.  Basic Signing
  contents:
  - "4.1.  Basic Signing\n   With the DKIM signature mechanism, a signer chooses an\
    \ SDID, performs\n   digital signing on the message, and adds the signature information\n\
    \   using a DKIM header field.  A verifier obtains the domain name and\n   the\
    \ \"selector\" from the DKIM header field, obtains the public key\n   associated\
    \ with the name, and verifies the signature.\n   DKIM permits any domain name\
    \ to be used as the SDID, and supports\n   extensible choices for various algorithms.\
    \  As is typical for\n   Internet standards, there is a core set of algorithms\
    \ that all\n   implementations are required to support, in order to guarantee\
    \ basic\n   interoperability.\n   DKIM permits restricting the use of a signature\
    \ key to signing\n   messages for particular types of services, such as only for\
    \ a single\n   source of email.  This is intended to be helpful when delegating\n\
    \   signing authority, such as to a particular department or to a third-\n   party\
    \ outsourcing service.\n   With DKIM, the signer explicitly lists the headers\
    \ that are signed,\n   such as From:, Date:, and Subject:.  By choosing the minimal\
    \ set of\n   headers needed, the signature is likely to be considerably more\n\
    \   robust against the handling vagaries of intermediary MTAs.\n"
- title: 4.2.  Characteristics of a DKIM Signature
  contents:
  - "4.2.  Characteristics of a DKIM Signature\n   A DKIM signature applies to the\
    \ message body and selected header\n   fields.  The signer computes a hash of\
    \ the selected header fields and\n   another hash of the body.  The signer then\
    \ uses a private key to\n   cryptographically encode this information, along with\
    \ other signing\n   parameters.  Signature information is placed into DKIM-Signature:,\
    \ a\n   new [RFC5322] message header field.\n"
- title: 4.3.  The Selector Construct
  contents:
  - "4.3.  The Selector Construct\n   The key for a signature is associated with an\
    \ SDID.  That domain name\n   provides the complete identity used for making assessments\
    \ about the\n   signer.  (The DKIM specification does not give any guidance on\
    \ how to\n   do an assessment.)  However, this name is not sufficient for making\
    \ a\n   DNS query to obtain the key needed to verify the signature.\n   A single\
    \ SDID can have multiple signing keys and/or multiple\n   potential signers. \
    \ To support this, DKIM identifies a particular\n   signature as using a combination\
    \ of the SDID and an added field,\n   called the \"selector\", specified in a\
    \ separate DKIM-Signature: header\n   field parameter.\n   NOTE:   The semantics\
    \ of the selector (if any) are strictly reserved\n      to the signer and is to\
    \ be treated as an opaque string by all\n      other parties.  If verifiers were\
    \ to employ the selector as part\n      of an assessment mechanism, then there\
    \ would be no remaining\n      mechanism for making a transition from an old,\
    \ or compromised, key\n      to a new one.\n"
- title: 4.4.  Verification
  contents:
  - "4.4.  Verification\n   After a message has been signed, any agent in the message\
    \ transit\n   path can verify the signature to determine that the owner of the\
    \ SDID\n   took responsibility for the message.  Message recipients can verify\n\
    \   the signature by querying the DNS for the signer's domain directly,\n   to\
    \ retrieve the appropriate public key, and thereby confirm that the\n   message\
    \ was signed by a party in possession of the private key for\n   the SDID.  Typically,\
    \ verification will be done by an agent in the\n   Administrative Management Domain\
    \ (ADMD) of the message recipient.\n"
- title: 4.5.  Sub-Domain Assessment
  contents:
  - "4.5.  Sub-Domain Assessment\n   Signers often need to support multiple assessments\
    \ about their\n   organization, such as to distinguish one type of message from\n\
    \   another, or one portion of the organization from another.  To permit\n   assessments\
    \ that are independent, one method is for an organization\n   to use different\
    \ sub-domains as the SDID tag, such as\n   \"transaction.example.com\" versus\
    \ \"newsletter.example.com\", or\n   \"productA.example.com\" versus \"productB.example.com\"\
    .  These can be\n   entirely separate from the rfc5322.From header field domain.\n"
- title: 5.  Service Architecture
  contents:
  - "5.  Service Architecture\n   DKIM uses external service components, such as for\
    \ key retrieval and\n   relaying email.  This specification defines an initial\
    \ set, using DNS\n   and SMTP, for basic interoperability.\n                 \
    \                 |\n                                  |- RFC5322 Message\n  \
    \                                V\n     +--------+    +--------------------------------+\n\
    \     | Private|    |  ORIGINATING OR RELAYING ADMD  |\n     | Key    +...>| \
    \ Sign Message with SDID        |\n     | Store  |    +---------------+----------------+\n\
    \     +--------+                    |\n      (paired)                 [Internet]\n\
    \     +--------+                    |                     +-----------+\n    \
    \ | Public |    +--------------------------------+    | Remote    |\n     | Key\
    \    |    |  RELAYING OR DELIVERING ADMD   |    | Sender    |\n     | Store  |\
    \    |  Message Signed?               |    | Practices |\n     +----+---+    +-----+--------------------+-----+\
    \    +-----+-----+\n          .              |yes                 |no        \
    \      .\n          .              V                    |                .\n \
    \         .        +-------------+            |                .\n          +.......>|\
    \  Verify     +--------+   |                .\n                   |  Signature\
    \  |        |   |                .\n                   +------+------+       \
    \ |   |                .\n                      pass|           fail|   |    \
    \            .\n                          V               |   |              \
    \  .\n                   +-------------+        |   |                .\n     \
    \              |             |        |   |                .\n          +.......>|\
    \ Assessments |        |   |                .\n          .        |          \
    \   |        V   V                .\n          .        +-----+--+----+      +-------+\
    \              .\n          .              |  |          / Check   \\<............+\n\
    \          .              |  +-------->/  Signing  \\\n          .           \
    \   |           /   Practices \\<..........+\n          .              |     \
    \     +-------+-------+          .\n          .              |               \
    \   |                  .\n          .              |                  V      \
    \            .\n     +----+--------+     |            +-----------+     +------+-----+\n\
    \     |Reputation/  |     |            | Message   |     | Local Info |\n    \
    \ |Accreditation|     +----------->| Filtering |     | on Sender  |\n     |Info\
    \         |                  | Engine    |     | Practices  |\n     +-------------+\
    \                  +-----------+     +------------+\n                    Figure\
    \ 1: DKIM Service Architecture\n   As shown in Figure 1, basic message processing\
    \ is divided between a\n   signing Administrative Management Domain (ADMD) and\
    \ a verifying ADMD.\n   At its simplest, this is between the originating ADMD\
    \ and the\n   delivering ADMD, but can involve other ADMDs in the handling path.\n\
    \   signing:   Signing is performed by an authorized module within the\n     \
    \ signing ADMD and uses private information from the Key Store, as\n      discussed\
    \ below.  Within the originating ADMD, this might be\n      performed by the MUA,\
    \ MSA, or an MTA.\n   verifying:   verifying is performed by an authorized module\
    \ within\n      the verifying ADMD.  Within a delivering ADMD, verifying might\
    \ be\n      performed by an MTA, MDA, or MUA.  The module verifies the\n     \
    \ signature or determines whether a particular signature was\n      required.\
    \  Verifying the signature uses public information from\n      the Key Store.\
    \  If the signature passes, reputation information is\n      used to assess the\
    \ signer and that information is passed to the\n      message filtering system.\
    \  If the signature fails or there is no\n      signature using the author's domain,\
    \ information about signing\n      practices related to the author can be retrieved\
    \ remotely and/or\n      locally, and that information is passed to the message\
    \ filtering\n      system.\n   If a message has more than one valid signature,\
    \ the order in which\n   the signers are assessed and the interactions among the\
    \ assessments\n   are not defined by the DKIM specification.\n"
- title: 5.1.  Administration and Maintenance
  contents:
  - "5.1.  Administration and Maintenance\n   A number of tables and services are\
    \ used to provide external\n   information.  Each of these introduces administration\
    \ and maintenance\n   requirements.\n   Key Store:   DKIM uses public-/private-key\
    \ (asymmetric) cryptography.\n      The signer users a private key and the verifier\
    \ uses the\n      corresponding public key.  The current DKIM Signing specification\n\
    \      provides for querying the Domain Names Service (DNS), to permit a\n   \
    \   verifier to obtain the public key.  The signing organization\n      therefore\
    \ needs to have a means of adding a key to the DNS, for\n      every selector/SDID\
    \ combination.  Further, the signing\n      organization needs policies for distributing\
    \ and revising keys.\n   Reputation/Accreditation:   If a message contains a valid\
    \ signature,\n      then the verifier can evaluate the associated domain name's\n\
    \      reputation, in order to determine appropriate delivery or display\n   \
    \   options for that message.  Quality assessment information, which\n      is\
    \ associated with a domain name, comes in many forms and from\n      many sources.\
    \  DKIM does not define assessment services.  Its\n      relevance to them is\
    \ to provide a verified domain name, upon which\n      assessments can be made.\n\
    \   Signing Practices (SP):   Separate from determining the validity of a\n  \
    \    signature, and separate from assessing the reputation of the\n      organization\
    \ that is associated with the signed identity, there is\n      an opportunity\
    \ to determine any organizational practices\n      concerning a domain name. \
    \ Practices can range widely.  They can\n      be published by the owner of the\
    \ domain or they can be maintained\n      by the evaluating site.  They can pertain\
    \ to the use of the domain\n      name, such as whether it is used for signing\
    \ messages, whether all\n      mail having that domain name in the author rfc5322.From:\
    \ header\n      field is signed, or even whether the domain owner recommends\n\
    \      discarding messages in the absence of an appropriate signature.\n     \
    \ The statements of practice are made at the level of a domain name,\n      and\
    \ are distinct from assessments made about particular messages,\n      as occur\
    \ in a Message Filtering Engine.  Such assessments of\n      practices can provide\
    \ useful input for the Message Filtering\n      Engine's determination of message\
    \ handling.  As practices are\n      defined, each domain name owner needs to\
    \ consider what information\n      to publish.  The nature and degree of checking\
    \ practices, if any\n      are performed, is optional to the evaluating site and\
    \ is strictly\n      a matter of local policy.\n"
- title: 5.2.  Signing
  contents:
  - "5.2.  Signing\n   Signing can be performed by a component of the ADMD that creates\
    \ the\n   message, and/or within any ADMD along the relay path.  The signer\n\
    \   uses the appropriate private key that is associated with the SDID.\n"
- title: 5.3.  Verifying
  contents:
  - "5.3.  Verifying\n   Verification can be performed by any functional component\
    \ along the\n   relay and delivery path.  Verifiers retrieve the public key based\n\
    \   upon the parameters stored in the message.\n"
- title: 5.4.  Unverified or Unsigned Mail
  contents:
  - "5.4.  Unverified or Unsigned Mail\n   Messages lacking a valid author signature\
    \ (a signature associated\n   with the author of the message as opposed to a signature\
    \ associated\n   with an intermediary) can prompt a query for any published \"\
    signing\n   practices\" information, as an aid in determining whether the author\n\
    \   information has been used without authorization.\n"
- title: 5.5.  Assessing
  contents:
  - "5.5.  Assessing\n   Figure 1 shows the verified identity as being used to assess\
    \ an\n   associated reputation, but it could be applied to other tasks, such\n\
    \   as management tracking of mail.  Local policy guidelines may cause\n   signing\
    \ practices to be checked or the message may be sent directly\n   to the message\
    \ Filtering Engine.\n   A popular use of reputation information is as input to\
    \ a Filtering\n   Engine that decides whether to deliver -- and possibly whether\
    \ to\n   specially mark -- a message.  Filtering Engines have become complex\n\
    \   and sophisticated.  Their details are outside of the scope of DKIM,\n   other\
    \ than the expectation that the verified identity produced by\n   DKIM can accumulate\
    \ its own reputation, and will be added to the\n   varied soup of rules used by\
    \ the engines.  The rules can cover signed\n   messages and can deal with unsigned\
    \ messages from a domain, if the\n   domain has published information about its\
    \ practices.\n"
- title: 5.6.  DKIM Processing within an ADMD
  contents:
  - "5.6.  DKIM Processing within an ADMD\n   It is expected that the most common\
    \ venue for a DKIM implementation\n   will be within the infrastructures of the\
    \ authoring organization's\n   outbound service and the receiving organization's\
    \ inbound service,\n   such as a department or a boundary MTA.  DKIM can be implemented\
    \ in\n   an author's or recipient's MUA, but this is expected to be less\n   typical,\
    \ since it has higher administration and support costs.\n   A Mediator is an MUA\
    \ that receives a message and can repost a\n   modified version of it, such as\
    \ to a mailing list.  A DKIM signature\n   can survive some types of modifications\
    \ through this process.\n   Furthermore, the Mediator can add its own signature.\
    \  This can be\n   added by the Mediator software itself, or by any outbound component\n\
    \   in the Mediator's ADMD.\n"
- title: 6.  Considerations
  contents:
  - '6.  Considerations

    '
- title: 6.1.  Security Considerations
  contents:
  - "6.1.  Security Considerations\n   The security considerations of the DKIM protocol\
    \ are described in the\n   DKIM base specification [RFC4871], with [RFC4686] as\
    \ their basis.\n"
- title: 6.2.  Acknowledgements
  contents:
  - "6.2.  Acknowledgements\n   Many people contributed to the development of the\
    \ DomainKeys\n   Identified Mail and the effort of the DKIM Working Group is\n\
    \   gratefully acknowledged.  In particular, we would like to thank Jim\n   Fenton\
    \ for his extensive feedback diligently provided on every\n   version of this\
    \ document.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [Kohnfelder]  Kohnfelder, L., \"Towards a Practical\
    \ Public-key\n                 Cryptosystem\", May 1978.\n   [RFC0989]     Linn,\
    \ J. and IAB Privacy Task Force, \"Privacy\n                 enhancement for Internet\
    \ electronic mail: Part I:\n                 Message encipherment and authentication\
    \ procedures\",\n                 RFC 989, February 1987.\n   [RFC1034]     Mockapetris,\
    \ P., \"Domain names - concepts and\n                 facilities\", STD 13, RFC\
    \ 1034, November 1987.\n   [RFC1113]     Linn, J., \"Privacy enhancement for Internet\
    \ electronic\n                 mail: Part I - message encipherment and authentication\n\
    \                 procedures\", RFC 1113, August 1989.\n   [RFC1848]     Crocker,\
    \ S., Galvin, J., Murphy, S., and N. Freed,\n                 \"MIME Object Security\
    \ Services\", RFC 1848,\n                 October 1995.\n   [RFC1991]     Atkins,\
    \ D., Stallings, W., and P. Zimmermann, \"PGP\n                 Message Exchange\
    \ Formats\", RFC 1991, August 1996.\n   [RFC2440]     Callas, J., Donnerhacke,\
    \ L., Finney, H., and R. Thayer,\n                 \"OpenPGP Message Format\"\
    , RFC 2440, November 1998.\n   [RFC3156]     Elkins, M., Del Torto, D., Levien,\
    \ R., and T. Roessler,\n                 \"MIME Security with OpenPGP\", RFC 3156,\
    \ August 2001.\n   [RFC3851]     Ramsdell, B., \"Secure/Multipurpose Internet\
    \ Mail\n                 Extensions (S/MIME) Version 3.1 Message Specification\"\
    ,\n                 RFC 3851, July 2004.\n   [RFC4406]     Lyon, J. and M. Wong,\
    \ \"Sender ID: Authenticating\n                 E-Mail\", RFC 4406, April 2006.\n\
    \   [RFC4407]     Lyon, J., \"Purported Responsible Address in E-Mail\n      \
    \           Messages\", RFC 4407, April 2006.\n   [RFC4408]     Wong, M. and W.\
    \ Schlitt, \"Sender Policy Framework (SPF)\n                 for Authorizing Use\
    \ of Domains in E-Mail, Version 1\",\n                 RFC 4408, April 2006.\n\
    \   [RFC4686]     Fenton, J., \"Analysis of Threats Motivating DomainKeys\n  \
    \               Identified Mail (DKIM)\", RFC 4686, September 2006.\n   [RFC4871]\
    \     Allman, E., Callas, J., Delany, M., Libbey, M., Fenton,\n              \
    \   J., and M. Thomas, \"DomainKeys Identified Mail (DKIM)\n                 Signatures\"\
    , RFC 4871, May 2007.\n   [RFC4880]     Callas, J., Donnerhacke, L., Finney, H.,\
    \ Shaw, D., and\n                 R. Thayer, \"OpenPGP Message Format\", RFC 4880,\n\
    \                 November 2007.\n   [RFC5322]     Resnick, P., Ed., \"Internet\
    \ Message Format\", RFC 5322,\n                 October 2008.\n   [WebofTrust]\
    \  Network Associates, Inc. and its Affiliated Companies,\n                 \"\
    How PGP works, in Introduction to Cryptography\", 1999,\n                 <http://www.pgpi.org/doc/pgpintro/>.\n"
- title: Appendix A.  Internet Mail Background
  contents:
  - 'Appendix A.  Internet Mail Background

    '
- title: A.1.  Core Model
  contents:
  - "A.1.  Core Model\n   Internet Mail is split between the user world, in the form\
    \ of Mail\n   User Agents (MUA), and the transmission world, in the form of the\n\
    \   Mail Handling Service (MHS) composed of Mail Transfer Agents (MTA).\n   The\
    \ MHS is responsible for accepting a message from one user, the\n   author, and\
    \ delivering it to one or more other users, the recipients.\n   This creates a\
    \ virtual MUA-to-MUA exchange environment.  The first\n   component of the MHS\
    \ is called the Mail Submission Agent (MSA) and\n   the last is called the Mail\
    \ Delivery Agent (MDA).\n   An email Mediator is both an inbound MDA and outbound\
    \ MSA.  It takes\n   delivery of a message, makes changes appropriate to its service,\
    \ and\n   then reposts it for further distribution.  Typically, the new message\n\
    \   will retain the original rfc5322.From: header field.  A mailing list\n   is\
    \ a common example of a Mediator.\n   The modern Internet Mail service is marked\
    \ by many independent\n   operators, many different components for providing users\
    \ with service\n   and many other components for performing message transfer.\n\
    \   Consequently, it is necessary to distinguish administrative\n   boundaries\
    \ that surround sets of functional components, which are\n   subject to coherent\
    \ operational policies.\n   As elaborated on below, every MSA is a candidate for\
    \ signing using\n   DKIM, and every MDA is a candidate for doing DKIM verification.\n"
- title: A.2.  Trust Boundaries
  contents:
  - "A.2.  Trust Boundaries\n   Operation of Internet Mail services is apportioned\
    \ to different\n   providers (or operators).  Each can be composed of an independent\n\
    \   ADministrative Management Domain (ADMD).  An ADMD operates with an\n   independent\
    \ set of policies and interacts with other ADMDs according\n   to differing types\
    \ and amounts of trust.  Examples include an end\n   user operating a desktop\
    \ client that connects to an independent email\n   service, a department operating\
    \ a submission agent or a local Relay,\n   an organization's IT group that operates\
    \ enterprise Relays, and an\n   ISP operating a public shared email service.\n\
    \   Each of these can be configured into many combinations of\n   administrative\
    \ and operational relationships, with each ADMD\n   potentially having a complex\
    \ arrangement of functional components.\n   Figure 2 depicts the relationships\
    \ among ADMDs.  Perhaps the most\n   salient aspect of an ADMD is the differential\
    \ trust that determines\n   its policies for activities within the ADMD, versus\
    \ those involving\n   interactions with other ADMDs.\n   Basic types of ADMDs\
    \ include:\n      Edge:  Independent transfer services, in networks at the edge\
    \ of\n         the Internet Mail service.\n      User:  End-user services.  These\
    \ might be subsumed under an Edge\n         service, such as is common for web-based\
    \ email access.\n      Transit:  These are Mail Service Providers (MSP) offering\
    \ value-\n         added capabilities for Edge ADMDs, such as aggregation and\n\
    \         filtering.\n   Note that Transit services are quite different from packet-level\n\
    \   transit operation.  Whereas end-to-end packet transfers usually go\n   through\
    \ intermediate routers, email exchange across the open Internet\n   often is directly\
    \ between the Edge ADMDs, at the email level.\n       +--------+             \
    \               +--------+    +--------+\n       | ADMD#1 |                  \
    \          | ADMD#3 |    | ADMD#4 |\n       | ------ |                       \
    \     | ------ |    | ------ |\n       |        |   +----------------------->|\
    \        |    |        |\n       | User   |   |                        |--Edge--+--->|--User\
    \  |\n       |  |     |   |                   +--->|        |    |        |\n\
    \       |  V     |   |                   |    +--------+    +--------+\n     \
    \  | Edge---+---+                   |\n       |        |   |    +----------+ \
    \  |\n       +--------+   |    |  ADMD#2  |   |\n                    |    |  ------\
    \  |   |\n                    |    |          |   |\n                    +--->|-Transit--+---+\n\
    \                         |          |\n                         +----------+\n\
    \        Figure 2: ADministrative Management Domains (ADMD) Example\n   In Figure\
    \ 2, ADMD numbers 1 and 2 are candidates for doing DKIM\n   signing, and ADMD\
    \ numbers 2, 3, and 4 are candidates for doing DKIM\n   verification.\n   The\
    \ distinction between Transit network and Edge network transfer\n   services is\
    \ primarily significant because it highlights the need for\n   concern over interaction\
    \ and protection between independent\n   administrations.  The interactions between\
    \ functional components\n   within a single ADMD are subject to the policies of\
    \ that domain.\n   Although any pair of ADMDs can arrange for whatever policies\
    \ they\n   wish, Internet Mail is designed to permit inter-operation without\n\
    \   prior arrangement.\n   Common ADMD examples are:\n         Enterprise Service\
    \ Providers:\n            Operators of an organization's internal data and/or\
    \ mail\n            services.\n         Internet Service Providers:\n        \
    \    Operators of underlying data communication services that, in\n          \
    \  turn, are used by one or more Relays and Users.  It is not\n            necessarily\
    \ their job to perform email functions, but they\n            can, instead, provide\
    \ an environment in which those\n            functions can be performed.\n   \
    \      Mail Service Providers:\n            Operators of email services, such\
    \ as for end users, or\n            mailing lists.\n"
- title: Index
  contents:
  - "Index\n   A\n      ADMD  6\n      Administrative Management Domain  6\n     \
    \ assessment  7\n   D\n      DKIM-Signature  12-13\n      DNS  6, 13-15\n   I\n\
    \      identifier  4-8\n      identity  3-7, 9, 12\n      infrastructure  5-6,\
    \ 8-11, 17\n   M\n      Mail Delivery Agent  6\n      Mail Handling Service  6\n\
    \      Mail Service Provider  6\n      Mail Submission Agent  6\n      Mail Transfer\
    \ Agent  6\n      Mail User Agent  6\n      MDA  6\n      MHS  6\n      MIME Object\
    \ Security Services  5\n      MOSS  5\n      MSA  6\n      MSP  6\n      MTA \
    \ 6\n      MUA  6\n   O\n      OpenPGP  5\n   P\n      PEM  5\n      PGP  5\n\
    \      Pretty Good Privacy  5\n      Privacy Enhanced Mail  5\n   S\n      S/MIME\
    \  5\n   T\n      trust  3, 7-8, 20\n   V\n      verification  4, 7-8, 10-11,\
    \ 13, 16, 20-21\n   W\n      Web of Trust  6\n   X\n      X.509  6\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tony Hansen\n   AT&T Laboratories\n   200 Laurel Ave.\n\
    \   Middletown, NJ  07748\n   USA\n   EMail: tony+dkimov@maillennium.att.com\n\
    \   Dave Crocker\n   Brandenburg InternetWorking\n   675 Spruce Dr.\n   Sunnyvale,\
    \ CA  94086\n   USA\n   EMail: dcrocker@bbiw.net\n   Phillip Hallam-Baker\n  \
    \ Default Deny Security, Inc.\n   EMail: phillip@hallambaker.com\n"
