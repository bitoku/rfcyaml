- title: __initial_text__
  contents:
  - '         Remote Direct Memory Access (RDMA) Protocol Extensions

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies extensions to the IETF Remote Direct Memory\n\
    \   Access Protocol (RDMAP) as specified in RFC 5040.  RDMAP provides\n   read\
    \ and write services directly to applications and enables data to\n   be transferred\
    \ directly into Upper-Layer Protocol (ULP) Buffers\n   without intermediate data\
    \ copies.  The extensions specified in this\n   document provide the following\
    \ capabilities and/or improvements:\n   Atomic Operations and Immediate Data.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7306.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Discovery of RDMAP Extensions ..............................5\n  \
    \ 2. Requirements Language ...........................................5\n   3.\
    \ Glossary ........................................................6\n   4. Header\
    \ Format Extensions ........................................7\n      4.1. RDMAP\
    \ Control and Invalidate STag Fields ...................7\n      4.2. RDMA Message\
    \ Definitions ...................................9\n   5. Atomic Operations ...............................................9\n\
    \      5.1. Atomic Operation Details ..................................10\n  \
    \         5.1.1. FetchAdd ...........................................10\n    \
    \       5.1.2. CmpSwap ............................................12\n      5.2.\
    \ Atomic Operations .........................................13\n           5.2.1.\
    \ Atomic Operation Request Message ...................14\n           5.2.2. Atomic\
    \ Operation Response Message ..................17\n      5.3. Atomicity Guarantees\
    \ ......................................18\n      5.4. Atomic Operations Ordering\
    \ and Completion Rules ...........18\n   6. Immediate Data .................................................20\n\
    \      6.1. RDMAP Interactions with ULP for Immediate Data ............20\n  \
    \    6.2. Immediate Data Header Format ..............................21\n    \
    \  6.3. Immediate Data or Immediate Data with SE Message ..........21\n      6.4.\
    \ Ordering and Completions ..................................22\n   7. Ordering\
    \ and Completions Table .................................22\n   8. Error Processing\
    \ ...............................................25\n      8.1. Errors Detected\
    \ at the Local Peer .........................25\n      8.2. Errors Detected at\
    \ the Remote Peer ........................26\n   9. Security Considerations ........................................26\n\
    \   10. IANA Considerations ...........................................27\n  \
    \    10.1. RDMAP Message Atomic Operation Subcodes ..................27\n    \
    \  10.2. RDMAP Queue Numbers ......................................28\n   11.\
    \ References ....................................................29\n      11.1.\
    \ Normative References .....................................29\n      11.2. Informative\
    \ References ...................................29\n   12. Acknowledgments ...............................................30\n\
    \   Appendix A. DDP Segment Formats for RDMA Messages .................31\n  \
    \    A.1. DDP Segment for Atomic Operation Request ..................32\n    \
    \  A.2. DDP Segment for Atomic Response ...........................33\n      A.3.\
    \ DDP Segment for Immediate Data and Immediate Data with SE .33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RDMA Protocol [RFC5040] provides capabilities for zero-copy\
    \ data\n   communications that preserve memory protection semantics, enabling\n\
    \   more efficient network protocol implementations.  The RDMA Protocol\n   is\
    \ part of the iWARP family of specifications which also include RFC\n   5041 [RFC5041],\
    \ RFC 5044 [RFC5044], and RFC 6581 [RFC6581].  This\n   document specifies the\
    \ following extensions to the RDMA Protocol\n   (RDMAP):\n   o  Atomic Operations\
    \ can be performed on remote memory locations.\n      Support for Atomic Operations\
    \ enhances the usability of RDMAP in\n      distributed shared-memory environments.\n\
    \   o  Immediate Data messages allow the ULP at the sender to provide a\n    \
    \  small amount of data.  When an Immediate Data message is sent\n      following\
    \ an RDMA Write Message, the combination of the two\n      messages is an implementation\
    \ of RDMA Write with Immediate message\n      that is found in other RDMA transport\
    \ protocols.\n   Other RDMA transport protocols define the functionality added\
    \ by\n   these extensions leading to differences in RDMA applications and/or\n\
    \   Upper-Layer Protocols.  Removing these differences in the transport\n   protocols\
    \ simplifies these applications and ULPs, and that is the\n   main motivation\
    \ for the extensions specified in this document.\n   RSockets [RSOCKETS] is an\
    \ example of RDMA-enabled middleware that\n   provides a socket interface as the\
    \ upper-edge interface and utilizes\n   RDMA to provide more efficient networking\
    \ for socket-based\n   applications.  RSockets is aware of Immediate Data support\
    \ in\n   InfiniBand [IB].  RSockets cannot utilize the RDMA Write with\n   Immediate\
    \ Data operation from InfiniBand.  The addition of the\n   Immediate Data operation\
    \ specified in this document will alleviate\n   this difference in RSockets when\
    \ running on InfiniBand and iWARP.\n   Structured high-performance computing applications\
    \ based on the\n   Message-Passing Interface [MPI] may use Atomic Operations defined\
    \ in\n   this specification.  DAT Atomics [DAT_ATOMICS] is an example of RDMA-\n\
    \   enabled middleware that provides a portable RDMA programming\n   interface\
    \ for various RDMA transport protocols.  DAT Atomics includes\n   a primitive\
    \ for InfiniBand that is not supported by iWARP RDMA-\n   enabled Network Interface\
    \ Controllers or RNICs.  The addition of\n   Atomic Operations as specified in\
    \ this document will allow Atomic\n   Operations in DAT Atomics to work for both\
    \ InfiniBand and RNICs\n   interchangeably.\n   For more background on RDMA Protocol\
    \ applicability, see\n   \"Applicability of Remote Direct Memory Access Protocol\
    \ (RDMA) and\n   Direct Data Placement Protocol (DDP)\" [RFC5045].\n"
- title: 1.1.  Discovery of RDMAP Extensions
  contents:
  - "1.1.  Discovery of RDMAP Extensions\n   Today there are RDMA applications and/or\
    \ ULPs that are aware of the\n   existence of Atomic and Immediate Data operations\
    \ for RDMA transports\n   such as InfiniBand and application programming interfaces\
    \ such as\n   Open Fabrics Verbs [OFAVERBS].  Today, these applications need to\
    \ be\n   aware that RDMAP does not support certain of these operations.\n   Typically,\
    \ the availability of these capabilities is exposed to the\n   applications through\
    \ adapter query interfaces in software.\n   Applications then have to decide to\
    \ use or not use Immediate Data or\n   Atomic Operations based on the results\
    \ of the query interfaces.  Such\n   query interfaces typically return the scope\
    \ of atomicity guarantees,\n   not the individual Atomic Operations supported.\
    \  Therefore, this\n   specification requires all Atomic Operations defined within\
    \ to be\n   supported if an RNIC supports any Atomic Operations.\n   In cases\
    \ where heterogeneous hardware, with differing support for\n   Atomic Operations\
    \ and Immediate Data Operations, is deployed for use\n   by RDMA applications\
    \ and/or ULPs, applications are either statically\n   configured to use or not\
    \ use optional features or use application-\n   specific negotiation mechanisms.\
    \  For the extensions covered by this\n   document, it is RECOMMENDED that RDMA\
    \ applications and/or ULPs\n   negotiate at the application or ULP level the usage\
    \ of these\n   extensions.  The definition of such application-specific mechanisms\n\
    \   is outside the scope of this specification.  For backward\n   compatibility,\
    \ existing applications and/or ULPs should not assume\n   that these extensions\
    \ are supported.\n   In the absence of application-specific negotiation of the\
    \ features\n   defined within this specification, the new operations can be\n\
    \   attempted, and reported errors can be used to determine a remote\n   peer's\
    \ capabilities.  In the case of Atomics, a FetchAdd operation\n   with \"Add Data\"\
    \ set to 0 can safely be used to determine the\n   existence of Atomic Operations\
    \ without modifying the content of a\n   remote peer's memory.  A Remote Operation\
    \ Error or Unexpected OpCode\n   error will be reported by the remote peer if\
    \ there is an Immediate\n   Data or Atomic Operation that is not supported by\
    \ the remote peer.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Glossary
  contents:
  - "3.  Glossary\n   This document is an extension of RFC 5040, and key words are\
    \ defined\n   in the glossary of that document.\n   Atomic Operation - an operation\
    \ that results in an execution of a\n      memory operation at a specific ULP\
    \ Buffer address on a remote node\n      using the Tagged Buffer data transfer\
    \ model.  The consumer can use\n      Atomic Operations to read, modify, and write\
    \ memory at the\n      destination ULP Buffer address, while at the same time\n\
    \      guaranteeing that no other Atomic Operation read or write accesses\n  \
    \    to the ULP Buffer address targeted by the Atomic Operation will\n      occur\
    \ across any other RDMAP Streams on an RNIC at the Responder.\n   Atomic Operation\
    \ Request - an RDMA Message used by the Data Source to\n      perform an Atomic\
    \ Operation at the Responder.\n   Atomic Operation Response - an RDMA Message\
    \ used by the Responder to\n      describe the completion of an Atomic Operation\
    \ at the Responder.\n   CmpSwap - an Atomic Operation that is used to compare\
    \ and swap a\n      value at a specific address on a remote node.\n   FetchAdd\
    \ - an Atomic Operation that is used to atomically increment a\n      value at\
    \ a specific ULP Buffer address on a remote node.\n   Immediate Data - a small\
    \ fixed-size portion of data sent from the\n      Data Source to a Data Sink.\n\
    \   Immediate Data Message - an RDMA Message used by the Data Source to\n    \
    \  send Immediate Data to the Data Sink.\n   Immediate Data with Solicited Event\
    \ (SE) Message - an RDMA Message\n      used by the Data Source to send Immediate\
    \ Data with Solicited\n      Event to the Data Sink.\n   iWARP - a suite of wire\
    \ protocols comprised of RFC 5040, RFC 5041,\n      RFC 5044, and RFC 6581.\n\
    \   Requester - the sender of an RDMA Atomic Operation request.\n   Responder\
    \ - the receiver of an RDMA Atomic Operation request.\n   RNIC - RDMA-enabled\
    \ Network Interface Controller.  In this context,\n      this would be a network\
    \ I/O adapter or embedded controller with\n      iWARP functionality.\n   ULP\
    \ - Upper-Layer Protocol.  The protocol layer above the one\n      currently being\
    \ referenced.  The ULP for RFC 5040 / RFC 5041 is\n      expected to be an OS,\
    \ Application, adaptation layer, or\n      proprietary device.  The RFC 5040 /\
    \ RFC 5041 documents do not\n      specify a ULP -- they provide a set of semantics\
    \ that allow a ULP\n      to be designed to utilize RFC 5040 / RFC 5041.\n"
- title: 4.  Header Format Extensions
  contents:
  - "4.  Header Format Extensions\n   The control information of RDMA Messages is\
    \ included in header fields\n   defined in RFC 5041, the Direct Data Placement\
    \ (DDP) protocol.  RFC\n   5040 defines the RDMAP header formats layered on the\
    \ DDP header\n   definition.  This specification extends RFC 5040 with the following\n\
    \   new formats:\n   o  Four new RDMA Messages carry additional RDMAP headers.\
    \  The\n      Immediate Data operation and Immediate Data with Solicited Event\n\
    \      operation each include 8 bytes of data following the RDMAP header.\n  \
    \    Atomic Operations include Atomic Request or Atomic Response\n      headers\
    \ following the RDMAP header.  The RDMAP header for Atomic\n      Request messages\
    \ is 52 bytes long as specified in Figure 4.  The\n      RDMAP header for Atomic\
    \ Response Messages is 32 bytes long as\n      specified in Figure 5.\n   o  Introduction\
    \ of a new queue for untagged Buffers (QN=3) used for\n      Atomic Response tracking.\n"
- title: 4.1.  RDMAP Control and Invalidate STag Fields
  contents:
  - "4.1.  RDMAP Control and Invalidate STag Fields\n   For reference, Figure 1 depicts\
    \ the format of the DDP Control and\n   RDMAP Control Fields, in the style and\
    \ convention of RFC 5040:\n   0                   1                   2      \
    \             3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |T|L| Resrv | DV| RV|Rsv| Opcode|\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \                   Invalidate STag                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Figure 1: DDP Control and RDMAP Control Fields\n   The DDP Control\
    \ Field consists of the T (Tagged), L (Last), Resrv,\n   and DV (DDP protocol\
    \ Version) fields [RFC5041].  The RDMAP Control\n   Field consists of the RV (RDMA\
    \ Version), Rsv, and Opcode fields\n   [RFC5040].\n   This specification adds\
    \ values for the RDMA Opcode field to those\n   specified in RFC 5040.  Figure\
    \ 2 defines the new values of the RDMA\n   Opcode field that are used for the\
    \ RDMA Messages defined in this\n   specification.\n   As shown in Figure 2, STag\
    \ (Steering Tag) and Tagged Offset are not\n   applicable for the RDMA Messages\
    \ defined in this specification.\n   Figure 2 also shows the appropriate Queue\
    \ Number for each Opcode.\n   All RDMA Messages defined in this specification\
    \ MUST have:\n   The RDMA Version (RV) field: 01b.\n   Opcode field: Set to one\
    \ of the values in Figure 2.\n   Invalidate STag: Set to zero by the sender, ignored\
    \ by the receiver.\n   -------+-----------+-------+------+-------+---------+-------------\n\
    \   RDMA   | Message   | Tagged| STag | Queue | In-     | Message\n   Opcode |\
    \ Type      | Flag  | and  | Number| validate| Length\n          |           |\
    \       | TO   |       | STag    | Communicated\n          |           |     \
    \  |      |       |         | between DDP\n          |           |       |   \
    \   |       |         | and RDMAP\n   -------+-----------+-------+------+-------+---------+-------------\n\
    \   1000b  | Immediate | 0     | N/A  | 0     | N/A     | Yes\n          | Data\
    \      |       |      |       |         |\n   -------+-----------+----------------------------------------------\n\
    \   1001b  | Immediate | 0     | N/A  | 0     | N/A     | Yes\n          | Data\
    \ with |       |      |       |         |\n          | SE        |       |   \
    \   |       |         |\n   -------+-----------+----------------------------------------------\n\
    \   1010b  | Atomic    | 0     | N/A  | 1     | N/A     | Yes\n          | Request\
    \   |       |      |       |         |\n   -------+-----------+----------------------------------------------\n\
    \   1011b  | Atomic    | 0     | N/A  | 3     | N/A     | Yes\n          | Response\
    \  |       |      |       |         |\n   -------+-----------+----------------------------------------------\n\
    \              Figure 2: Additional RDMA Usage of DDP Fields\n   Note:  N/A means\
    \ Not Applicable.\n   This extension defines RDMAP use of Queue Number 3 for Untagged\n\
    \   Buffers for Atomic Responses.  This queue is used for tracking\n   outstanding\
    \ Atomic Requests.\n   All other DDP and RDMAP Control Fields are set as described\
    \ in RFC\n   5040.\n"
- title: 4.2.  RDMA Message Definitions
  contents:
  - "4.2.  RDMA Message Definitions\n   The following figure defines which RDMA Headers\
    \ are used on each new\n   RDMA Message and which new RDMA Messages are allowed\
    \ to carry ULP\n   payload.\n   -------+-----------+-------------------+-------------------------\n\
    \   RDMA   | Message   | RDMA Header Used  | ULP Message allowed in\n   Message|\
    \ Type      |                   | the RDMA Message\n   OpCode |           |  \
    \                 |\n          |           |                   |\n   -------+-----------+-------------------+-------------------------\n\
    \   1000b  | Immediate | Immediate Data    | No\n          | Data      | Header\
    \            |\n   -------+-----------+-------------------+-------------------------\n\
    \   1001b  | Immediate | Immediate Data    | No\n          | Data with | Header\
    \            |\n          | SE        |                   |\n   -------+-----------+-------------------+-------------------------\n\
    \   1010b  | Atomic    | Atomic Request    | No\n          | Request   | Header\
    \            |\n   -------+-----------+-------------------+-------------------------\n\
    \   1011b  | Atomic    | Atomic Response   | No\n          | Response  | Header\
    \            |\n   -------+-----------+-------------------+-------------------------\n\
    \                     Figure 3: RDMA Message Definitions\n"
- title: 5.  Atomic Operations
  contents:
  - "5.  Atomic Operations\n   The RDMA Protocol Specification in RFC 5040 does not\
    \ include support\n   for Atomic Operations, which are an important building block\
    \ for\n   implementing distributed shared memory.\n   This document extends the\
    \ RDMA Protocol specification with a set of\n   basic Atomic Operations and specifies\
    \ their resource and ordering\n   rules.  The Atomic Operations specified in this\
    \ document provide\n   equivalent functionality to the InfiniBand RDMA transport\
    \ as well as\n   extended Atomic Operations defined in Open Fabrics Verbs, to\
    \ allow\n   applications that use these primitives to work interchangeably over\n\
    \   iWARP.  Other operations are left for future consideration.\n   Atomic Operations\
    \ as specified in this document execute a 64-bit\n   memory operation at a specified\
    \ destination ULP Buffer address on a\n   Responder node using the Tagged Buffer\
    \ data transfer model.  The\n   operations atomically read, modify, and write\
    \ back the contents of\n   the destination ULP Buffer address and guarantee that\
    \ Atomic\n   Operations on this ULP Buffer address by other RDMAP Streams on the\n\
    \   same RNIC do not occur between the read and the write caused by the\n   Atomic\
    \ Operation.  Therefore, the Responder RNIC MUST implement\n   mechanisms to prevent\
    \ Atomic Operations to a memory registered for\n   Atomic Operations while an\
    \ Atomic Operation targeting the memory is\n   in progress.  The Requester of\
    \ an Atomic Operation cannot rely on\n   Atomic Operation behavior at the Responder\
    \ across multiple RNICs or\n   with respect to other applications/ULPs running\
    \ at the Responder that\n   can access the ULP Buffer.  It is OPTIONAL for an\
    \ RNIC to provide\n   such behavior when implementing the Atomic Operations specified\
    \ in\n   this document.  An RNIC that supports Atomic Operations as specified\n\
    \   in this document MUST implement both the FetchAdd operation as\n   specified\
    \ in Section 5.1.1 and the CmpSwap operation as specified in\n   Section 5.1.2.\
    \  The advertisement of Tagged Buffer information for\n   Atomic Operations is\
    \ outside the scope of this specification and is\n   handled by the ULPs.\n  \
    \ Implementation note: It is RECOMMENDED that the applications do not\n   use\
    \ the ULP Buffer addresses used for Atomic Operations for other\n   RDMA operations\
    \ due to the lack of atomicity guarantees between\n   operations other than Atomic\
    \ Operations.\n   Implementation note: Errors related to the alignment in the\
    \ following\n   sections cover Atomic Operations targeted at a ULP Buffer address\n\
    \   that is not aligned to a 64-bit boundary.\n   Atomic Operation Request Messages\
    \ use the same remote addressing\n   mechanism as RDMA Reads and Writes.  The\
    \ ULP Buffer address specified\n   in the request is in the address space of the\
    \ Remote Peer to which\n   the Atomic Operation is targeted.\n   Atomic Operation\
    \ Response Messages MUST use the Untagged Buffer model\n   with QN=3.  Queue number\
    \ 3 will be used to track outstanding Atomic\n   Operation Request messages at\
    \ the Requester.  When the Atomic\n   Operation Response message is received,\
    \ the Message Sequence Number\n   (MSN) will be used to locate the corresponding\
    \ Atomic Operation\n   request in order to complete the Atomic Operation request.\n"
- title: 5.1.  Atomic Operation Details
  contents:
  - "5.1.  Atomic Operation Details\n   The following subsections describe the Atomic\
    \ Operations in more\n   detail.\n"
- title: 5.1.1.  FetchAdd
  contents:
  - "5.1.1.  FetchAdd\n   The FetchAdd Atomic Operation requests the Responder to\
    \ read a 64-bit\n   Original Remote Data Value at a 64-bit aligned ULP Buffer\
    \ address in\n   the Responder's memory, perform the FetchAdd operation on multiple\n\
    \   fields of selectable length specified by 64-bit \"Add Mask\", and write\n\
    \   the result back to the same ULP Buffer address.  The Atomic addition\n   is\
    \ performed independently on each one of these fields.  A bit set in\n   the Add\
    \ Mask field specifies the field boundary; for each field, a\n   bit is set at\
    \ the most significant bit position for each field,\n   causing any carry out\
    \ of that bit position to be discarded when the\n   addition is performed.\n \
    \  FetchAdd Atomic Operations MUST target ULP Buffer addresses that are\n   64-bit\
    \ aligned.  FetchAdd Atomic Operations that target ULP Buffer\n   addresses that\
    \ are not 64-bit aligned MUST be surfaced as errors, and\n   the Responder's memory\
    \ MUST NOT be modified in such cases.\n   Additionally, an error MUST be surfaced\
    \ and a terminate message MUST\n   be generated.  The setting of the Add Mask\
    \ field to\n   0x0000000000000000 results in Atomic Add of 64-bit Original Remote\n\
    \   Data Value and 64-bit \"Add Data\".\n   The pseudocode below describes a masked\
    \ FetchAdd Atomic Operation.\n   bit_location = 1\n   carry = 0\n   Remote Data\
    \ Value = 0\n   for bit = 0 to 63\n   {\n      if (bit != 0 ) bit_location = bit_location\
    \ << 1\n      val1 = (Original Remote Data Value & bit_location) >> bit\n    \
    \  val2 = (Add Data & bit_location) >> bit\n      sum = carry + val1 + val2\n\
    \      carry = (sum & 2) >> 1\n      sum = sum & 1\n      if (sum)\n         Remote\
    \ Data Value |= bit_location\n      carry = ((carry) && (!(Add Mask & bit_location)))\n\
    \   }\n   The FetchAdd operation is performed in the endian format of the\n  \
    \ target memory.  The \"Original Remote Data Value\" is converted from\n   the\
    \ endian format of the target memory for return and returned to the\n   Requester.\
    \  The fields are in big-endian format on the wire.\n   The Requester specifies:\n\
    \   o  Remote STag\n   o  Remote Tagged Offset\n   o  Add Data\n   o  Add Mask\n\
    \   The Responder returns:\n   o  Original Remote Data\n"
- title: 5.1.2.  CmpSwap
  contents:
  - "5.1.2.  CmpSwap\n   The CmpSwap Atomic Operation requires the Responder to read\
    \ a 64-bit\n   value at a ULP Buffer address that is 64-bit aligned in the\n \
    \  Responder's memory, to perform an AND logical operation using the\n   64-bit\
    \ Compare Mask field in the Atomic Operation Request header,\n   then to compare\
    \ it with the result of a logical AND operation of the\n   Compare Mask and the\
    \ Compare Data fields in the header.  If the two\n   values are equal, the Responder\
    \ is required to swap masked bits in\n   the same ULP Buffer address with the\
    \ masked Swap Data.  If the two\n   masked compare values are not equal, the contents\
    \ of the Responder's\n   memory are not changed.  In either case, the original\
    \ value read from\n   the ULP Buffer address is converted from the endian format\
    \ of the\n   target memory for return and returned to the Requester.  The fields\n\
    \   are in big-endian format on the wire.\n   The Requester specifies:\n   o \
    \ Remote STag\n   o  Remote Tagged Offset\n   o  Swap Data\n   o  Swap Mask\n\
    \   o  Compare Data\n   o  Compare Mask\n   The Responder returns:\n   o  Original\
    \ Remote Data Value\n   The following pseudocode describes the masked CmpSwap\
    \ operation\n   result.\n      if (!((Compare Data ^ Original Remote Data Value)\
    \ &\n            Compare Mask))\n      then\n         Remote Data Value =\n  \
    \         (Original Remote Data Value & ~(Swap Mask))\n                      \
    \       | (Swap Data & Swap Mask)\n      else\n         Remote Data Value = Original\
    \ Remote Data Value\n   After the operation, the remote data Buffer MUST contain\
    \ the\n   \"Original Remote Data Value\" (if comparison did not match) or the\n\
    \   masked \"Swap Data\" (if the comparison did match).  CmpSwap Atomic\n   Operations\
    \ MUST target ULP Buffer addresses that are 64-bit aligned.\n   If a CmpSwap Atomic\
    \ Operation is attempted on a target ULP Buffer\n   address that is not 64-bit\
    \ aligned:\n   o  The operation MUST NOT be performed,\n   o  The Responder's\
    \ memory MUST NOT be modified,\n   o  The result MUST be surfaced as an error,\
    \ and\n   o  A terminate message MUST be generated.  (See Section 8.2 for the\n\
    \      contents of the terminate message.)\n"
- title: 5.2.  Atomic Operations
  contents:
  - "5.2.  Atomic Operations\n   The Atomic Operation Request and Response are RDMA\
    \ Messages.  An\n   Atomic Operation makes use of the DDP Untagged Buffer Model.\
    \  Atomic\n   Operation Request messages MUST use the same Queue Number as RDMA\n\
    \   Read Requests (QN=1).  Reusing the same Queue Number for Atomic\n   Request\
    \ messages allows the Atomic Operations to reuse the same\n   infrastructure (e.g.,\
    \ Outbound and Inbound RDMA Read Queue Depth\n   (ORD/IRD) flow control) as defined\
    \ for RDMA Read Requests.  Atomic\n   Operation Response messages MUST set Queue\
    \ Number (QN) to 3 in the\n   DDP header.\n   The RDMA Message OpCode for an Atomic\
    \ Request Message is 1010b.  The\n   RDMA Message OpCode for an Atomic Response\
    \ Message is 1011b.\n"
- title: 5.2.1.  Atomic Operation Request Message
  contents:
  - "5.2.1.  Atomic Operation Request Message\n   The Atomic Operation Request Message\
    \ carries an Atomic Operation\n   Header that describes the ULP Buffer address\
    \ in the Responder's\n   memory.  The Atomic Operation Request header immediately\
    \ follows the\n   DDP header.  The RDMAP layer passes to the DDP layer a RDMAP\
    \ Control\n   Field.  The following figure depicts the Atomic Operation Request\n\
    \   Header that is used for all Atomic Operation Request Messages:\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Reserved (Not Used)              |AOpCode|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Request Identifier                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Remote STag                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Remote Tagged Offset                     |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Add or Swap Data                        |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Add or Swap Mask                        |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Compare Data                          |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Compare Mask                          |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 4: Atomic Operation Request Header\n      Reserved (Not\
    \ Used): 28 bits\n         This field is set to zero on transmit, ignored on receive.\n\
    \      Atomic Operation Code (AOpCode): 4 bits.\n         See Figure 5.  All Atomic\
    \ Operation Codes from Figure 5 MUST be\n         implemented by an RNIC that\
    \ supports Atomic Operations.\n      Request Identifier: 32 bits.\n         The\
    \ Request Identifier specifies a number that is used to\n         identify the\
    \ Atomic Operation Request Message.  The value used\n         in this field is\
    \ selected by the RNIC that sends the message,\n         and it is reflected back\
    \ to the Local Peer in the Atomic\n         Operation Response message.\n    \
    \  Remote STag: 32 bits.\n         The Remote STag identifies the Remote Peer's\
    \ Tagged Buffer\n         targeted by the Atomic Operation.  The Remote STag is\n\
    \         associated with the RDMAP Stream through a mechanism that is\n     \
    \    outside the scope of the RDMAP specification.\n      Remote Tagged Offset:\
    \ 64 bits.\n         The Remote Tagged Offset specifies the starting offset, in\n\
    \         octets, from the base of the Remote Peer's Tagged Buffer\n         targeted\
    \ by the Atomic Operation.  The Remote Tagged Offset MAY\n         start at an\
    \ arbitrary offset but MUST represent a ULP Buffer\n         address that is 64-bit\
    \ aligned.\n      Add or Swap Data: 64 bits.\n         The Add or Swap Data field\
    \ specifies the 64-bit \"Add Data\"\n         value in an Atomic FetchAdd Operation\
    \ or the 64-bit \"Swap Data\"\n         value in an Atomic Swap or CmpSwap Operation.\n\
    \      Add or Swap Mask: 64 bits\n         This field is used in masked Atomic\
    \ Operations (FetchAdd and\n         CmpSwap) to perform a bitwise logical AND\
    \ operation as\n         specified in the definition of these operations.  For\
    \ non-\n         masked Atomic Operations (Swap), this field is set to\n     \
    \    ffffffffffffffffh on transmit and ignored by the receiver.\n      Compare\
    \ Data: 64 bits.\n         The Compare Data field specifies the 64-bit \"Compare\
    \ Data\"\n         value in an Atomic CmpSwap Operation.  For Atomic Operations\n\
    \         FetchAdd and Atomic Swap, the Compare Data field is set to zero\n  \
    \       on transmit and ignored by the receiver.\n      Compare Mask: 64 bits\n\
    \         This field is used in masked Atomic Operation CmpSwap to\n         perform\
    \ a bitwise logical AND operation as specified in the\n         definition of\
    \ these operations.  For Atomic Operations FetchAdd\n         and Swap, this field\
    \ is set to ffffffffffffffffh on transmit\n         and ignored by the receiver.\n\
    \   ---------+-----------+----------+----------+---------+---------\n   Atomic\
    \   | Atomic    | Add or   | Add or   | Compare | Compare\n   Operation| Operation\
    \ | Swap     | Swap     | Data    | Mask\n   Code     |           | Data     |\
    \ Mask     |         |\n   ---------+-----------+----------+----------+---------+---------\n\
    \   0000b    | FetchAdd  | Add Data | Add Mask | N/A     | N/A\n   ---------+-----------+----------+----------+---------+---------\n\
    \   0010b    | CmpSwap   | Swap Data| Swap Mask| Valid   | Valid\n   ---------+-----------+-----------------------------------------\n\
    \            Figure 5: Atomic Operation Message Definitions\n   The Atomic Operation\
    \ Request Message has the following semantics:\n   1. An Atomic Operation Request\
    \ Message MUST reference an Untagged\n      Buffer.  That is, the Local Peer's\
    \ RDMAP layer MUST request that\n      the DDP mark the Message as Untagged.\n\
    \   2. One Atomic Operation Request Message MUST consume one Untagged\n      Buffer.\n\
    \   3. The Responder's RDMAP layer MUST process an Atomic Operation\n      Request\
    \ Message.  A valid Atomic Operation Request Message MUST\n      NOT be delivered\
    \ to the Responder's ULP (i.e., it is processed by\n      the RDMAP layer).\n\
    \   4. At the Responder, an error MUST be surfaced in response to\n      delivery\
    \ to the Remote Peer's RDMAP layer of an Atomic Operation\n      Request Message\
    \ with an Atomic Operation Code that the RNIC does\n      not support.\n   5.\
    \ An Atomic Operation Request Message MUST reference the RDMA Read\n      Request\
    \ Queue.  That is, the Requester's RDMAP layer MUST request\n      that the DDP\
    \ layer set the Queue Number field to one.\n   6. The Requester MUST pass to the\
    \ DDP layer Atomic Operation Request\n      Messages in the order they were submitted\
    \ by the ULP.\n   7. The Responder MUST process the Atomic Operation Request Messages\n\
    \      in the order they were sent.\n   8. If the Responder receives a valid Atomic\
    \ Operation Request\n      Message, it MUST respond with a valid Atomic Operation\
    \ Response\n      Message.\n"
- title: 5.2.2.  Atomic Operation Response Message
  contents:
  - "5.2.2.  Atomic Operation Response Message\n   The Atomic Operation Response Message\
    \ carries an Atomic Operation\n   Response Header that contains the \"Original\
    \ Request Identifier\" and\n   \"Original Remote Data Value\".  The Atomic Operation\
    \ Response Header\n   immediately follows the DDP header.  The RDMAP layer passes\
    \ to the\n   DDP layer a RDMAP Control Field.  The following figure depicts the\n\
    \   Atomic Operation Response header that is used for all Atomic\n   Operation\
    \ Response Messages:\n    0                   1                   2          \
    \         3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \ |                    Original Request Identifier                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Original Remote Data Value                 |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 6: Atomic Operation Response Header\n   Original Request\
    \ Identifier: 32 bits.\n      The Original Request Identifier is set to the value\
    \ specified in\n      the Request Identifier field that was originally provided\
    \ in the\n      corresponding Atomic Operation Request Message.\n   Original Remote\
    \ Data Value: 64 bits.\n      The Original Remote Value specifies the original\
    \ 64-bit value\n      stored at the ULP Buffer address targeted by the Atomic\
    \ Operation.\n   The Atomic Operation Response Message has the following semantics:\n\
    \   1. The Atomic Operation Response Message for the associated Atomic\n     \
    \ Operation Request Message travels in the opposite direction.\n   2. An Atomic\
    \ Operation Response Message MUST consume an Untagged\n      Buffer.  That is,\
    \ the Responder RDMAP layer MUST request that the\n      DDP mark the Message\
    \ as Untagged.\n   3. An Atomic Operation Response Message MUST reference the\
    \ Queue\n      Number 3.  That is, the Responder's RDMAP layer MUST request that\n\
    \      the DDP layer set the Queue Number field to 3.\n   4. The Responder MUST\
    \ ensure that a sufficient number of Untagged\n      Buffers are available on\
    \ the RDMA Read Request Queue (Queue with\n      DDP Queue Number 1) to support\
    \ the maximum number of Atomic\n      Operation Requests negotiated by the ULP\
    \ in addition to the\n      maximum number of RDMA Read Requests negotiated by\
    \ the ULP.\n   5. The Requester MUST ensure that a sufficient number of Untagged\n\
    \      Buffers are available on the RDMA Atomic Response Queue (Queue\n      with\
    \ DDP Queue Number 3) to support the maximum number of Atomic\n      Operation\
    \ Requests negotiated by the ULP.\n   6. The RDMAP layer MUST Deliver the Atomic\
    \ Operation Response Message\n      to the ULP.\n   7. At the Requester, when\
    \ an invalid Atomic Operation Response\n      Message is delivered to the Remote\
    \ Peer's RDMAP layer, an error is\n      surfaced.\n   8. When the Responder receives\
    \ Atomic Operation Request messages, the\n      Responder RDMAP layer MUST pass\
    \ Atomic Operation Response Messages\n      to the DDP layer, in the order that\
    \ the Atomic Operation Request\n      Messages were received by the RDMAP layer,\
    \ at the Responder.\n"
- title: 5.3.  Atomicity Guarantees
  contents:
  - "5.3.  Atomicity Guarantees\n   Atomicity of the Read-Modify-Write (RMW) on the\
    \ Responder's node by\n   the Atomic Operation MUST be assured in the context\
    \ of concurrent\n   atomic accesses by other RDMAP Streams on the same RNIC.\n"
- title: 5.4.  Atomic Operations Ordering and Completion Rules
  contents:
  - "5.4.  Atomic Operations Ordering and Completion Rules\n   In addition to the\
    \ ordering and completion rules described in RFC\n   5040, the following rules\
    \ apply to implementations of the Atomic\n   Operations.\n   1. For an Atomic\
    \ Operation, the Requester MUST NOT consider the\n      contents of the Tagged\
    \ Buffer at the Responder to be modified by\n      that specific Atomic Operation\
    \ until the Atomic Operation Response\n      Message has been Delivered to RDMAP\
    \ at the Requester.\n   2. Atomicity guarantees MUST be provided within the scope\
    \ of a single\n      RNIC.\n      Implementation Note: This requirement for atomicity\
    \ among\n      operations is limited to the scope of a single RNIC.  Atomicity\n\
    \      guarantees are OPTIONAL with respect to access to the Tagged\n      Buffer\
    \ by any other method than an Atomic Operation via the same\n      RNIC.  Examples\
    \ of such accesses that may not be atomic with\n      respect to an Atomic Operation\
    \ include accesses via other RNICs\n      and local processor memory access to\
    \ the Tagged Buffer.\n   3. Atomic Operation Request Messages MUST NOT start processing\
    \ at the\n      Responder until they have been Delivered to RDMAP by DDP.\n  \
    \ 4. Atomic Operation Response Messages MAY be generated at the\n      Responder\
    \ after subsequent RDMA Write Messages or Send Messages\n      have been Placed\
    \ or Delivered.\n   5. Atomic Operation Response Message processing at the Responder\
    \ MUST\n      be started only after the Atomic Operation Request Message has\n\
    \      been Delivered by the DDP layer (thus, all previous RDMA Messages\n   \
    \   on that DDP Stream have been Delivered).\n   6. Send Messages MAY be Completed\
    \ at the Responder before prior\n      incoming Atomic Operation Request Messages\
    \ have completed their\n      response processing.\n   7. An Atomic Operation\
    \ MUST NOT be Completed at the Requester until\n      the DDP layer Delivers the\
    \ associated incoming Atomic Operation\n      Response Message.\n   8. If more\
    \ than one outstanding Atomic Request Message is supported\n      by both peers,\
    \ the Atomic Operation Request Messages MUST be\n      processed in the order\
    \ they were delivered by the DDP layer on the\n      Responder.  Atomic Operation\
    \ Response Messages MUST be submitted\n      to the DDP layer on the Responder\
    \ in the order the Atomic\n      Operation Request Messages were Delivered by\
    \ DDP.\n"
- title: 6.  Immediate Data
  contents:
  - "6.  Immediate Data\n   The Immediate Data operation is typically used in conjunction\
    \ with an\n   RDMA Write Operation to improve ULP processing efficiency.  The\n\
    \   efficiency is gained by causing an RDMA Completion to be generated\n   immediately\
    \ following the RDMA Write operation.  This RDMA Completion\n   delivers 8 bytes\
    \ of Immediate Data at the Remote Peer.  The\n   combination of an RDMA Write\
    \ Message followed by an Immediate Data\n   Operation has the same behavior as\
    \ the RDMA Write with Immediate Data\n   operation found in InfiniBand.  An Immediate\
    \ Data operation that is\n   not preceded by an RDMA Write operation causes an\
    \ RDMA Completion.\n"
- title: 6.1.  RDMAP Interactions with ULP for Immediate Data
  contents:
  - "6.1.  RDMAP Interactions with ULP for Immediate Data\n   For Immediate Data operations,\
    \ the following are the interactions\n   between the RDMAP Layer and the ULP:\n\
    \   o  At the Data Source:\n      -  The ULP passes to the RDMAP Layer the following:\n\
    \         *  8 bytes of ULP Immediate Data\n      -  When the Immediate Data operation\
    \ Completes, an indication of\n         the Completion results.\n   o  At the\
    \ Data Sink:\n      -  If the Immediate Data operation is Completed successfully,\
    \ the\n         RDMAP Layer passes the following information to the ULP Layer:\n\
    \         *  8 bytes of Immediate Data\n         *  An Event, if the Data Sink\
    \ is configured to generate an\n            Event.\n      -  If the Immediate\
    \ Data operation is Completed in error, the Data\n         Sink RDMAP Layer will\
    \ pass up the corresponding error\n         information to the Data Sink ULP and\
    \ send a Terminate Message\n         to the Data Source RDMAP Layer.  The Data\
    \ Source RDMAP Layer\n         will then pass up the Terminate Message to the\
    \ ULP.\n"
- title: 6.2.  Immediate Data Header Format
  contents:
  - "6.2.  Immediate Data Header Format\n   The Immediate Data and Immediate Data\
    \ with SE Messages carry\n   Immediate Data as shown in Figure 7.  The RDMAP layer\
    \ passes to the\n   DDP layer an RDMAP Control Field and 8 bytes of Immediate\
    \ Data.  The\n   first 8 bytes of the data following the DDP header contains the\n\
    \   Immediate Data.  See Appendix A.3 for the DDP segment format of an\n   Immediate\
    \ Data or Immediate Data with SE Message.\n    0                   1         \
    \          2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Immediate Data                         |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Figure 7: Immediate Data or Immediate Data with SE Message Header\n   Immediate\
    \ Data: 64 bits.\n      8 bytes of data transferred from the Data Source to an\
    \ untagged\n      Buffer at the Data Sink.\n"
- title: 6.3.  Immediate Data or Immediate Data with SE Message
  contents:
  - "6.3.  Immediate Data or Immediate Data with SE Message\n   The Immediate Data\
    \ or Immediate Data with SE Message uses the DDP\n   Untagged Buffer Model to\
    \ transfer Immediate Data from the Data Source\n   to the Data Sink.\n   o  An\
    \ Immediate Data or Immediate Data with SE Message MUST reference\n      an Untagged\
    \ Buffer.  That is, the Local Peer's RDMAP Layer MUST\n      request that the\
    \ DDP layer mark the Message as Untagged.\n   o  One Immediate Data or Immediate\
    \ Data with SE Message MUST consume\n      one Untagged Buffer.\n   o  At the\
    \ Remote Peer, the Immediate Data and Immediate Data with SE\n      Messages MUST\
    \ be Delivered to the Remote Peer's ULP in the order\n      they were sent.\n\
    \   o  For an Immediate Data or Immediate Data with SE Message, the Local\n  \
    \    Peer's RDMAP Layer MUST request that the DDP layer set the Queue\n      Number\
    \ field to zero.\n   o  For an Immediate Data or Immediate Data with SE Message,\
    \ the Local\n      Peer's RDMAP Layer MUST request that the DDP layer transmit\
    \ 8\n      bytes of data.\n   o  The Local Peer MUST issue Immediate Data and\
    \ Immediate Data with\n      SE Messages in the order they were submitted by the\
    \ ULP.\n   o  The Remote Peer MUST check that Immediate Data and Immediate Data\n\
    \      with SE Messages include exactly 8 bytes of data from the DDP\n      layer.\
    \  The DDP header carries the length field that is reported\n      by the DDP\
    \ layer.\n"
- title: 6.4.  Ordering and Completions
  contents:
  - "6.4.  Ordering and Completions\n   Ordering and completion rules for Immediate\
    \ Data are the same as\n   those for a Send operation as described in Section\
    \ 5.5 of RFC 5040.\n"
- title: 7.  Ordering and Completions Table
  contents:
  - "7.  Ordering and Completions Table\n   The following table summarizes the ordering\
    \ relationships for Atomic\n   and Immediate Data operations from the standpoint\
    \ of the Local Peer\n   issuing the Operations.  Note that in the table that follows,\
    \ Send\n   includes Send, Send with Invalidate, Send with Solicited Event, and\n\
    \   Send with Solicited Event and Invalidate.  Also note that in the\n   table\
    \ below, Immediate Data includes Immediate Data and Immediate\n   Data with Solicited\
    \ Event.\n   ---------+----------+-------------+-------------+------------------\n\
    \   First    | Second   | Placement   | Placement   | Ordering\n   Operation|\
    \ Operation| Guarantee at| Guarantee at| Guarantee at\n            |         \
    \ | Remote Peer | Local Peer  | Remote Peer\n   ---------+----------+-------------+-------------+------------------\n\
    \   Immediate| Send     | No Placement| Not         | Completed in\n   Data  \
    \   |          | Guarantee   | Applicable  | Order\n            |          | between\
    \ Send|             |\n            |          | Payload and |             |\n\
    \            |          | Immediate   |             |\n            |         \
    \ | Data        |             |\n   ---------+----------+-------------+-------------+------------------\n\
    \   Immediate| RDMA     | No Placement| Not         | Not\n   Data     | Write\
    \    | Guarantee   | Applicable  | Applicable\n            |          | between\
    \ RDMA|             |\n            |          | Write       |             |\n\
    \            |          | Payload and |             |\n            |         \
    \ | Immediate   |             |\n            |          | Data        |      \
    \       |\n   ---------+----------+-------------+-------------+------------------\n\
    \   Immediate| RDMA     | No Placement| RDMA Read   | RDMA Read\n   Data     |\
    \ Read     | Guarantee   | Response    | Response\n            |          | between\
    \     | will not be | Message will\n            |          | Immediate   | Placed\
    \ until| not be\n            |          | Data and    | Immediate   | generated\n\
    \            |          | RDMA Read   | Data is     | until\n            |   \
    \       | Request     | Placed at   | Immediate Data\n            |          |\
    \             | Remote Peer | has been\n            |          |             |\
    \             | Completed\n   ---------+----------+-------------+-------------+------------------\n\
    \   Immediate| Atomic   | No Placement| Atomic      | Atomic\n   Data     |  \
    \        | Guarantee   | Response    | Response\n            |          | between\
    \     | will not be | Message will\n            |          | Immediate   | Placed\
    \ until| not be\n            |          | Data and    | Immediate   | generated\n\
    \            |          | Atomic      | Data is     | until\n            |   \
    \       | Request     | Placed at   | Immediate Data\n            |          |\
    \             | Remote Peer | has been\n            |          |             |\
    \             | Completed\n   ---------+----------+-------------+-------------+------------------\n\
    \   Immediate| Immediate| No Placement| Not         | Completed in\n   Data or\
    \  | Data     | Guarantee   | Applicable  | Order\n   Send     |          |  \
    \           |             |\n   ---------+----------+-------------+-------------+------------------\n\
    \   RDMA     | Immediate| No Placement| Not         | Immediate Data\n   Write\
    \    | Data     | Guarantee   | Applicable  | is Completed\n            |    \
    \      |             |             | after RDMA\n            |          |    \
    \         |             | Write is Placed\n            |          |          \
    \   |             | and Delivered\n   ---------+----------+-------------+-------------+------------------\n\
    \   RDMA Read| Immediate| No Placement| Immediate   | Not Applicable\n       \
    \     | Data     | Guarantee   | Data MAY be |\n            |          | between\
    \     | Placed      |\n            |          | Immediate   | before      |\n\
    \            |          | Data and    | RDMA Read   |\n            |         \
    \ | RDMA Read   | Response is |\n            |          | Request     | generated\
    \   |\n   ---------+----------+-------------+-------------+------------------\n\
    \   Atomic   | Immediate| No Placement| Immediate   | Not Applicable\n       \
    \     | Data     | Guarantee   | Data MAY be |\n            |          | between\
    \     | Placed      |\n            |          | Immediate   | before      |\n\
    \            |          | Data and    | Atomic      |\n            |         \
    \ | Atomic      | Response is |\n            |          | Request     | generated\
    \   |\n   ---------+----------+-------------+-------------+------------------\n\
    \   Atomic   | Send     | No Placement| Send Payload| Not Applicable\n       \
    \     |          | Guarantee   | MAY be      |\n            |          | between\
    \ Send| Placed      |\n            |          | Payload and | before      |\n\
    \            |          | Atomic      | Atomic      |\n            |         \
    \ | Request     | Response is |\n            |          |             | generated\
    \   |\n   ---------+----------+-------------+-------------+------------------\n\
    \   Atomic   | RDMA     | No Placement| RDMA Write  | Not\n            | Write\
    \    | Guarantee   | Payload MAY | Applicable\n            |          | between\
    \ RDMA| be Placed   |\n            |          | Write       | before      |\n\
    \            |          | Payload and | Atomic      |\n            |         \
    \ | Atomic      | Response is |\n            |          | Request     | generated\
    \   |\n   ---------+----------+-------------+-------------+------------------\n\
    \   Atomic   | RDMA     | No Placement| No Placement| RDMA Read\n            |\
    \ Read     | Guarantee   | Guarantee   | Response\n            |          | between\
    \     | between     | Message will\n            |          | Atomic      | Atomic\
    \      | not be\n            |          | Request and | Response    | generated\n\
    \            |          | RDMA Read   | and RDMA    | until Atomic\n         \
    \   |          | Request     | Read        | Response Message\n            | \
    \         |             | Response    | has been\n            |          |   \
    \          |             | generated\n   ---------+----------+-------------+-------------+------------------\n\
    \   Atomic   | Atomic   | Placed in   | No Placement| Second Atomic\n        \
    \    |          | order       | Guarantee   | Request\n            |         \
    \ |             | between two | Message will\n            |          |       \
    \      | Atomic      | not be\n            |          |             | Responses\
    \   | processed\n            |          |             |             | until first\n\
    \            |          |             |             | Atomic Response\n      \
    \      |          |             |             | has been\n            |      \
    \    |             |             | generated\n   ---------+----------+-------------+-------------+------------------\n\
    \   Send     | Atomic   | No Placement| Atomic      | Atomic Response\n      \
    \      |          | Guarantee   | Response    | Message will not\n           \
    \ |          | between Send| will not be | be generated\n            |       \
    \   | Payload and | Placed at   | until Send has\n            |          | Atomic\
    \      | the Local   | been Completed\n            |          | Request     |\
    \ Peer until  |\n            |          |             | Send Payload|\n      \
    \      |          |             | is Placed   |\n            |          |    \
    \         | at the      |\n            |          |             | Remote Peer\
    \ |\n   ---------+----------+-------------+-------------+------------------\n\
    \   RDMA     | Atomic   | No Placement| Atomic      | Not\n   Write    |     \
    \     | Guarantee   | Response    | Applicable\n            |          | between\
    \ RDMA| will not be |\n            |          | Write       | Placed at   |\n\
    \            |          | Payload and | the Local   |\n            |         \
    \ | Atomic      | Peer until  |\n            |          | Request     | RDMA Write\
    \  |\n            |          |             | Payload     |\n            |    \
    \      |             | is Placed   |\n            |          |             | at\
    \ the      |\n            |          |             | Remote Peer |\n   ---------+----------+-------------+-------------+------------------\n\
    \   RDMA     | Atomic   | No Placement| No Placement| Atomic Response\n   Read\
    \     |          | Guarantee   | Guarantee   | Message will\n            |   \
    \       | between     | between     | not be generated\n            |        \
    \  | Atomic      | Atomic      | until RDMA\n            |          | Request\
    \ and | Response    | Read Response\n            |          | RDMA Read   | and\
    \ RDMA    | has been\n            |          | Request     | Read        | generated\n\
    \            |          |             | Response    |\n   ---------+----------+-------------+-------------+------------------\n"
- title: 8.  Error Processing
  contents:
  - "8.  Error Processing\n   In addition to the error processing described in Section\
    \ 7 of RFC\n   5040, the following rules apply for the new RDMA Messages defined\
    \ in\n   this specification.\n"
- title: 8.1.  Errors Detected at the Local Peer
  contents:
  - "8.1.  Errors Detected at the Local Peer\n   The Local Peer MUST send a Terminate\
    \ Message for each of the\n   following cases:\n   1. For errors detected while\
    \ creating an Atomic Request, Atomic\n      Response, Immediate Data, or Immediate\
    \ Data with SE Message, or\n      other reasons not directly associated with an\
    \ incoming Message,\n      the Terminate Message and Error code are sent instead\
    \ of the\n      Message.  In this case, the Error Type and Error Code fields are\n\
    \      included in the Terminate Message, but the Terminated DDP Header\n    \
    \  and Terminated RDMA Header fields are set to zero.\n   2. For errors detected\
    \ on an incoming Atomic Request, Atomic\n      Response, Immediate Data, or Immediate\
    \ Data with SE (after the\n      Message has been Delivered by DDP), the Terminate\
    \ Message is sent\n      at the earliest possible opportunity, preferably in the\
    \ next\n      outgoing RDMA Message.  In this case, the Error Type, Error Code,\n\
    \      and Terminated DDP Header fields are included in the Terminate\n      Message,\
    \ but the Terminated RDMA Header field is set to zero.\n"
- title: 8.2.  Errors Detected at the Remote Peer
  contents:
  - "8.2.  Errors Detected at the Remote Peer\n   On incoming Atomic Requests, Atomic\
    \ Responses, Immediate Data, and\n   Immediate Data with Solicited Event, the\
    \ following MUST be validated:\n   o  The DDP layer MUST validate all DDP Segment\
    \ fields.\n   o  The RDMA OpCode MUST be valid.\n   o  The RDMA Version MUST be\
    \ valid.\n   On incoming Atomic requests the following additional validation MUST\n\
    \   be performed:\n   o  The RDMAP layer MUST validate that the Remote Peer's\
    \ Tagged ULP\n      Buffer address references a ULP Buffer address that is 64-bit\n\
    \      aligned.  In the case of an error, the RDMAP layer MUST generate a\n  \
    \    Terminate Message indicating RDMA Layer Remote Operation Error\n      with\
    \ Error Code Name \"Catastrophic error, localized to RDMAP\n      Stream\" as\
    \ described in Section 4.8 of RFC 5040.  Implementation\n      Note: A ULP implementation\
    \ can avoid this error by having the\n      target ULP Buffer of an Atomic Operation\
    \ 64-bit aligned.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document specifies extensions to the RDMA\
    \ Protocol specification\n   in RFC 5040, and as such the Security Considerations\
    \ discussed in\n   Section 8 of RFC 5040 apply.  In particular, Atomic Operations\
    \ use\n   ULP Buffer addresses for the Remote Peer Buffer addressing used in\n\
    \   RFC 5040 as required by the security model described in RFC 5042\n   [RFC5042].\n\
    \   RDMAP and related protocols may be used by applications that exhibit\n   distinctive\
    \ traffic characteristics such as message timing, source,\n   destination, and\
    \ size patterns.  Examples include structured high-\n   performance computing\
    \ applications based on the MPI interface.  For\n   such applications, analysis\
    \ of encrypted traffic could reveal\n   sensitive information, e.g., the nature\
    \ of the application, size of\n   data set being used, and information about the\
    \ application's rate of\n   progress.  Such information can be hidden from passive\
    \ observation\n   via use of Encapsulating Security Payload version 3 (ESPv3)\
    \ Traffic\n   Flow Confidentiality [RFC4303] to obfuscate the encrypted traffic's\n\
    \   characteristics.  ESPv3 implementation requirements for RDMAP are\n   specified\
    \ in [RFC7146].\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   IANA has added the following entries to the \"RDMAP\
    \ Message Operation\n   Codes\" registry of \"Remote Direct Data Placement (RDDP)\"\
    \ registry:\n   0x8, Immediate Data, this specification\n   0x9, Immediate Data\
    \ with Solicited Event, this specification\n   0xA, Atomic Request, this specification\n\
    \   0xB, Atomic Response, this specification\n   In addition, the following registry\
    \ has been added to the \"Remote\n   Direct Data Placement (RDDP)\" registry.\
    \  The following section\n   specifies the registry, its initial contents, and\
    \ the administration\n   policy in more detail.\n"
- title: 10.1.  RDMAP Message Atomic Operation Subcodes
  contents:
  - "10.1.  RDMAP Message Atomic Operation Subcodes\n   Name of the registry: \"RDMAP\
    \ Message Atomic Operation Subcodes\"\n   Namespace details: RDMAP Message Atomic\
    \ Operation Subcodes are 4-bit\n   values.\n   Information that must be provided\
    \ to assign a new value: An IESG-\n   approved Standards Track specification defining\
    \ the semantics and\n   interoperability requirements of the proposed new value\
    \ and the\n   fields to be recorded in the registry.\n   Fields to record in the\
    \ registry: RDMAP Message Atomic Operation\n   Subcode, Atomic Operation, RFC\
    \ Reference.\n   Initial registry contents:\n   0x0, FetchAdd, this specification\n\
    \   0x1, Reserved, this specification\n   0x2, CmpSwap, this specification\n \
    \  Note: An experimental RDMAP Message Operation Code has already been\n   allocated;\
    \ hence, there is no need for an experimental RDMAP Message\n   Atomic Operation\
    \ Subcode.\n   All other values are Unassigned and available to IANA for assignment.\n\
    \   New RDMAP Message Atomic Operation Subcodes should be assigned\n   sequentially\
    \ in order to better support implementations that process\n   RDMAP Message Atomic\
    \ Operations in hardware.\n   Allocation Policy: Standards Action [RFC5226]\n"
- title: 10.2.  RDMAP Queue Numbers
  contents:
  - "10.2.  RDMAP Queue Numbers\n   Name of the registry: \"RDMAP DDP Untagged Queue\
    \ Numbers\"\n   Namespace details: RDMAP DDP Untagged Queue numbers are 32-bit\n\
    \   values.\n   Information that must be provided to assign a new value: An IESG-\n\
    \   approved Standards Track specification defining the semantics and\n   interoperability\
    \ requirements of the proposed new value and the\n   fields to be recorded in\
    \ the registry.\n   Fields to record in the registry: RDMAP DDP Untagged Queue\
    \ Numbers,\n   Queue Usage Description, RFC Reference.\n   Initial registry contents:\n\
    \   0x00000000, Queue 0 (Send operation Variants), [RFC5040]\n   0x00000001, Queue\
    \ 1 (RDMA Read Request operations), [RFC5040]\n   0x00000002, Queue 2 (Terminate\
    \ operations), [RFC5040]\n   0x00000003, Queue 3 (Atomic Response operations),\
    \ this specification\n   Note: An experimental RDMAP Message Operation Code has\
    \ already been\n   allocated; hence, there is no need for an experimental RDMAP\
    \ DDP\n   Untagged Queue Number.\n   All other values are Unassigned and available\
    \ to IANA for assignment.\n   New RDMAP queue numbers should be assigned sequentially\
    \ in order to\n   better support implementations that perform RDMAP queue selection\
    \ in\n   hardware.\n   Allocation Policy: Standards Action [RFC5226]\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4303]  Kent, S., \"IP Encapsulating Security Payload (ESP)\",\
    \ RFC\n              4303, December 2005.\n   [RFC5040]  Recio, R., Metzler, B.,\
    \ Culley, P., Hilland, J., and D.\n              Garcia, \"A Remote Direct Memory\
    \ Access Protocol\n              Specification\", RFC 5040, October 2007.\n  \
    \ [RFC5041]  Shah, H., Pinkerton, J., Recio, R., and P. Culley, \"Direct\n   \
    \           Data Placement over Reliable Transports\", RFC 5041,\n           \
    \   October 2007.\n   [RFC5042]  Pinkerton, J. and E. Deleganes, \"Direct Data\
    \ Placement\n              Protocol (DDP) / Remote Direct Memory Access Protocol\n\
    \              (RDMAP) Security\", RFC 5042, October 2007.\n   [RFC5226]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC7146]\
    \  Black, D. and P. Koning, \"Securing Block Storage Protocols\n             \
    \ over IP: RFC 3723 Requirements Update for IPsec v3\", RFC\n              7146,\
    \ April 2014.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [DAT_ATOMICS]\n              DAT Collaborative,\
    \ \"IB Transport Specific Extensions for\n              DAT 2.0\", User Direct\
    \ Access Programming Library,\n              <http://www.datcollaborative.org/DAT_IB_Extensions.pdf>.\n\
    \   [IB]       InfiniBand Trade Association, \"InfiniBand Architecture\n     \
    \         Specification Volumes 1 and 2\", Release 1.1, November\n           \
    \   2002, <http://www.infinibandta.org/specs>.\n   [MPI]      Message Passing\
    \ Interface Forum, \"MPI: A Message-Passing\n              Interface Standard,\
    \ Version 3.0\", September 2012,\n              <http://www.mpi-forum.org/docs/mpi-3.0/mpi30-report.pdf>.\n\
    \   [OFAVERBS] Rosenstock, H., \"Subject: Re: [PATCH 0/2] Add support for\n  \
    \            enhanced atomic operations\", message to the linux-rdma\n       \
    \       mailing list,\n              <http://www.spinics.net/lists/linux-rdma/msg02405.html>.\n\
    \   [RFC5044]  Culley, P., Elzur, U., Recio, R., Bailey, S., and J.\n        \
    \      Carrier, \"Marker PDU Aligned Framing for TCP\n              Specification\"\
    , RFC 5044, October 2007.\n   [RFC5045]  Bestler, C., Ed., and L. Coene, \"Applicability\
    \ of Remote\n              Direct Memory Access Protocol (RDMA) and Direct Data\n\
    \              Placement (DDP)\", RFC 5045, October 2007.\n   [RFC6581]  Kanevsky,\
    \ A., Ed., Bestler, C., Ed., Sharp, R., and S.\n              Wise, \"Enhanced\
    \ Remote Direct Memory Access (RDMA)\n              Connection Establishment\"\
    , RFC 6581, April 2012.\n   [RSOCKETS] Hefty, S., \"RDMA CM - RDMA enabled Sockets\
    \ library for\n              Open Fabrics\", <http://git.openfabrics.org/?p=~shefty/\n\
    \              librdmacm.git;a=summary>.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   The authors would like to acknowledge the following\
    \ individuals who\n   provided valuable comments and suggestions.\n   o  David\
    \ Black\n   o  Arkady Kanevsky\n   o  Bernard Metzler\n   o  Jim Pinkerton\n \
    \  o  Tom Talpey\n   o  Steve Wise\n   o  Don Wood\n"
- title: Appendix A.  DDP Segment Formats for RDMA Messages
  contents:
  - "Appendix A.  DDP Segment Formats for RDMA Messages\n   This appendix is for information\
    \ only and is NOT part of the\n   standard.  It simply depicts the DDP Segment\
    \ format for the various\n   RDMA Messages.\n"
- title: A.1.  DDP Segment for Atomic Operation Request
  contents:
  - "A.1.  DDP Segment for Atomic Operation Request\n   The following figure depicts\
    \ an Atomic Operation Request, DDP\n   Segment:\n    0                   1   \
    \                2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                   |  DDP Control  | RDMA Control  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Reserved (Not Used)                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              DDP (Atomic Operation Request) Queue Number      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        DDP (Atomic Operation Request) Message Sequence Number |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             DDP (Atomic Operation Request) Message Offset     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Reserved (Not Used)              |AOpCode|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Request Identifier                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Remote STag                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Remote Tagged Offset                     |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Add or Swap Data                        |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Add or Swap Mask                        |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Compare Data                          |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Compare Mask                          |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: A.2.  DDP Segment for Atomic Response
  contents:
  - "A.2.  DDP Segment for Atomic Response\n   The following figure depicts an Atomic\
    \ Operation Response, DDP\n   Segment:\n    0                   1            \
    \       2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                   |  DDP Control  | RDMA Control  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Reserved (Not Used)                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              DDP (Atomic Operation Request) Queue Number      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        DDP (Atomic Operation Request) Message Sequence Number |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             DDP (Atomic Operation Request) Message Offset     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Original Request Identifier                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Original Remote Value                   |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: A.3.  DDP Segment for Immediate Data and Immediate Data with SE
  contents:
  - "A.3.  DDP Segment for Immediate Data and Immediate Data with SE\n   The following\
    \ figure depicts an Immediate Data or Immediate Data with\n   SE, DDP Segment:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n                \
    \                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      \
    \             |  DDP Control  | RDMA Control  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Reserved (Not Used)                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    DDP (Send) Queue Number                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                DDP (Send) Message Sequence Number             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       DDP Message Offset                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Immediate Data                         |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hemal Shah\n   Broadcom Corporation\n   5300 California\
    \ Avenue\n   Irvine, CA 92617\n   US\n   Phone: 1-949-926-6941\n   EMail: hemal@broadcom.com\n\
    \   Felix Marti\n   Chelsio Communications, Inc.\n   370 San Aleso Ave.\n   Sunnyvale,\
    \ CA 94085\n   US\n   Phone: 1-408-962-3600\n   EMail: felix@chelsio.com\n   Asgeir\
    \ Eiriksson\n   Chelsio Communications, Inc.\n   370 San Aleso Ave.\n   Sunnyvale,\
    \ CA 94085\n   US\n   Phone: 1-408-962-3600\n   EMail: asgeir@chelsio.com\n  \
    \ Wael Noureddine\n   Chelsio Communications, Inc.\n   370 San Aleso Ave.\n  \
    \ Sunnyvale, CA 94085\n   US\n   Phone: 1-408-962-3600\n   EMail: wael@chelsio.com\n\
    \   Robert Sharp\n   Intel Corporation\n   1300 South Mopac Expy, Mailstop: AN4-4B\n\
    \   Austin, TX  78746\n   US\n   Phone: 1-512-362-1407\n   EMail: robert.o.sharp@intel.com\n"
