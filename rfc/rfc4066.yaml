- title: __initial_text__
  contents:
  - '                Candidate Access Router Discovery (CARD)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   To enable seamless IP-layer handover of a mobile node (MN) from\
    \ one\n   access router (AR) to another, the MN is required to discover the\n\
    \   identities and capabilities of candidate ARs (CARs) for handover\n   prior\
    \ to the initiation of the handover.  The act of discovery of\n   CARs has two\
    \ aspects: identifying the IP addresses of the CARs and\n   finding their capabilities.\
    \  This process is called \"candidate access\n   router discovery\" (CARD).  At\
    \ the time of IP-layer handover, the CAR,\n   whose capabilities are a good match\
    \ to the preferences of the MN, is\n   chosen as the target AR for handover. \
    \ The protocol described in this\n   document allows a mobile node to perform\
    \ CARD.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n       4.3.  Current Access Router - Candidate Access Router\n\
    \       4.4.  CARD Protocol Message Piggybacking on the MN-AR\n   5.  Protocol\
    \ Messages............................................. 14\n       5.1.  CARD\
    \ Messages for the Mobile Node-Access Router\n             Interface...............................................\
    \ 14\n       5.2.  CARD Inter-Access Router Messages....................... 28\n\
    \   6.  Security Considerations....................................... 31\n  \
    \     6.1.  Veracity of CARD Information............................ 31\n    \
    \   6.2.  Security Association between AR and AR.................. 31\n      \
    \ 6.3.  Security Association between AR and MN.................. 32\n       6.4.\
    \  Router Certificate Exchange............................. 32\n       6.5.  DoS\
    \ Attack.............................................. 34\n       6.6.  Replay\
    \ Attacks.......................................... 34\n   7.  Protocol Constants............................................\
    \ 34\n   8.  IANA Considerations........................................... 35\n\
    \   9.  Normative References.......................................... 35\n  \
    \ 10. Informative References........................................ 35\n   11.\
    \ Contributors.................................................. 36\n   12. Acknowledgements..............................................\
    \ 36\n   Appendix A.  Maintenance of Address Mapping Tables in\n             \
    \   Access Routers....................................... 37\n       Appendix\
    \ A.1. Centralized Approach Using a Server Functional\n                     Entity..........................................\
    \ 37\n       Appendix A.2. Decentralized Approach Using Mobile Terminals'\n  \
    \                   Handover........................................ 38\n   Appendix\
    \ B.  Application Scenarios................................ 40\n       Appendix\
    \ B.1. CARD Operation in a Mobile IPv6-Enabled Wireless\n                    \
    \ LAN Network..................................... 40\n       Appendix B.2. CARD\
    \ Operation in a Fast Mobile IPv6-Enabled\n                     Network.........................................\
    \ 43\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IP mobility protocols, such as Mobile IP, enable mobile\
    \ nodes to\n   execute IP-level handover among access routers.  Work is underway\n\
    \   [Kood03][Malk03] to extend the mobility protocols to allow seamless\n   IP\
    \ handover.  Seamless IP mobility protocols will require knowledge\n   of candidate\
    \ access routers (CARs) to which a mobile node can be\n   transferred.  The CAR\
    \ discovery protocol enables the acquisition of\n   information about the access\
    \ routers that are candidates for the\n   mobile node's next handover.\n   CAR\
    \ discovery involves identifying a CAR's IP address and the\n   capabilities that\
    \ the mobile node might use for a handover decision.\n   There are cases in which\
    \ a mobile node has a choice of CARs.  The\n   mobile node chooses one according\
    \ to a match between the mobile\n   node's requirements for a handover candidate\
    \ and the CAR's\n   capabilities.  However, the decision algorithm itself is out\
    \ of the\n   scope of this document.\n   The problem statement for CAR discovery\
    \ is documented in [TKCK02].\n   In this document, a protocol is described to\
    \ perform CAR discovery.\n   Section 3 describes two main functions of the CAR\
    \ discovery protocol.\n   Section 4 describes the core part of the CARD protocol\
    \ operation.\n   The protocol message format is described in Section 5.  Section\
    \ 6\n   discusses security considerations, and Section 7 contains a table of\n\
    \   protocol parameters.  Appendix A contains two alternative techniques\n   for\
    \ dynamically constructing the CAR table mapping between the access\n   point\
    \ L2 ID and Access Router IP address, which is necessary for\n   reverse address\
    \ translation.  The default method is static\n   configuration.  Appendix B contains\
    \ two sample scenarios for using\n   CARD.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [Brad97].\n   This document uses terminology defined in [MaKo03].\n   In\
    \ addition, the following terms are used:\n   Access Router (AR)\n      An IP\
    \ router residing in an access network and connected to one or\n      more APs.\
    \  An AR offers IP connectivity to MNs.\n   Candidate AR (CAR)\n      An AR to\
    \ which an MN has a choice when performing IP-level\n      handover.\n   Capability\
    \ of an AR\n      A characteristic of the service offered by an AR that may be\
    \ of\n      interest to an MN when the AR is being considered as a handover\n\
    \      candidate.\n   L2 ID\n      An identifier of an AP that uniquely identifies\
    \ that AP.  For\n      example, in 802.11, this could be a MAC address of an AP.\n\
    \   CARD Initiating Trigger\n      An L2 trigger used to initiate the CARD process.\
    \  For example, a\n      MN can initiate CARD as soon as it detects the L2 ID\
    \ of a new AP\n      during link layer scan.\n   Access Point (AP)\n      A wireless\
    \ access point, identified by a MAC address, providing\n      service to the wired\
    \ network for wireless nodes.\n"
- title: 3.  CARD Protocol Functions
  contents:
  - "3.  CARD Protocol Functions\n   The CARD protocol accomplishes the following\
    \ functions.\n"
- title: 3.1.  Reverse Address Translation
  contents:
  - "3.1.  Reverse Address Translation\n   If an MN can listen to the L2 IDs of new\
    \ APs prior to making a\n   decision about IP-level handover to CARs, a mechanism\
    \ is needed for\n   reverse address translation.  This function of the CARD protocol\n\
    \   enables the MN to map the received L2 ID of an AP to the IP address\n   of\
    \ the associated CAR that connects to the AP.  To get the CAR's IP\n   address,\
    \ the MN sends the L2 ID of the AP to the current AR, and the\n   current AR provides\
    \ the associated CAR's IP address to the MN.\n"
- title: 3.2.  Discovery of CAR Capabilities
  contents:
  - "3.2.  Discovery of CAR Capabilities\n   Information about the capabilities of\
    \ CARs can assist the MN in\n   making optimal handover decisions.  This capability\
    \ information\n   serves as input to the target AR selection algorithm.  Some\
    \ of the\n   capability parameters of CARs can be static, whereas others can\n\
    \   change with time.\n   A definition of capabilities is out of the scope of\
    \ this document.\n   Encoding rules for capabilities and the format of a capability\n\
    \   container for capability transport are specified in Section 5.\n"
- title: 4.  CARD Protocol Operation
  contents:
  - "4.  CARD Protocol Operation\n   The CARD protocol allows MNs to resolve the L2\
    \ ID of one or more APs\n   to the IP addresses of the associated CARs.  The L2\
    \ IDs are typically\n   discovered during an operation by the MN and are potential\
    \ handover\n   candidates.  Additionally, CARD allows MNs to discover particular\n\
    \   capabilities associated with the CARs, such as available bandwidth,\n   that\
    \ might influence the handover decision of the MN.  Furthermore,\n   the protocol\
    \ allows ARs to populate and maintain their local CAR\n   table (Section 4.1)\
    \ with the capabilities of CARs.  For this, the\n   CARD protocol makes use of\
    \ CARD Request and CARD Reply messages\n   between an MN and its current AR (Section\
    \ 5.1.2), and between an MN's\n   current AR and individual CARs, respectively\
    \ (Section 5.2.2).\n   To allow an MN to retrieve a CAR's address and capability\n\
    \   information, the CARD Request and CARD Reply messages used between an\n  \
    \ MN and its current AR may contain one or more access points' L2 IDs\n   and\
    \ the IP addresses of associated CARs, respectively.  Optionally,\n   the CARD\
    \ Reply messages can also contain a CAR's capability\n   information.  A CAR's\
    \ capabilities are specified as a list of\n   attribute-value pairs, which are\
    \ conveyed in a Capability Container\n   message parameter.\n   Information about\
    \ CARs and associated capabilities MAY be used by the\n   MN to perform target\
    \ access router selection during its IP handover.\n   The current AR returns replies\
    \ according to its CAR table (see\n   Section 4.1) and returns a RESOLVER ERROR\
    \ (see Section 5.1.3.1) if\n   the request cannot be resolved.\n   The CARD protocol\
    \ also enables an MN to optionally indicate its\n   preferences on capabilities\
    \ of interest to its current AR by\n   including the Preferences message parameter\
    \ in the CARD Request\n   message.  The MN's current AR MAY use this information\
    \ to perform\n   optional capability pre-filtering for optimization purposes,\
    \ and it\n   returns only these capabilities of interest to the requesting MN.\n\
    \   The format of this optional Preferences message parameter is\n   described\
    \ in Section 5.1.3.2.\n   Optionally, the MN can provide its current AR with a\
    \ list of\n   capability attribute-value pairs, indicating not only the capability\n\
    \   parameters (attributes) required for capability pre-filtering, but\n   also\
    \ a specific value for a particular capability.  This allows the\n   MN's current\
    \ AR to perform CAR pre-filtering and to send only address\n   and capability\
    \ information of CARs whose capability values meet the\n   requirements of the\
    \ MN back to the requesting MN.  The format of this\n   optional Requirements\
    \ message parameter is described in Section\n   5.1.3.3.\n   For example, using\
    \ the optional Preferences message parameter, an MN\n   may indicate to its current\
    \ AR that it is interested only in\n   IEEE802.11a interface-specific capability\
    \ parameters, as this is the\n   only interface the MN has implemented.  The MN's\
    \ current AR sends\n   back only CARs with IEEE802.11a-specific capabilities.\
    \  Similarly,\n   using the optional Requirements message parameter, an MN may\
    \ indicate\n   to its current AR that it is only interested in CARs that can satisfy\n\
    \   a given QoS constraint.  Here, an MN sends the respective QoS\n   attribute\
    \ with the QoS constraint value to its current AR using the\n   optional Requirements\
    \ message parameter.  The QoS constraint is\n   denoted as an attribute-value\
    \ pair and encapsulated with the\n   Requirements message parameter, which is\
    \ appended to the MN-\n   originated CARD Request message.  The Requirements message\
    \ parameter\n   may be used to indicate the cutoff values of the capabilities\
    \ for any\n   desired CARs.  According to the received optional list of attributes\n\
    \   in the Preferences parameter or a list of attribute-value pairs in\n   the\
    \ Requirements message parameter, the MN's current AR MAY use these\n   parameters\
    \ for deciding the content of the solicited CARD Reply\n   message, which is to\
    \ be sent back to the MN.  Alternatively, if the\n   MN's current AR does not\
    \ perform optimization with regard to\n   capability or CAR pre-filtering, the\
    \ current AR MAY choose to\n   silently ignore the optional Requirements and Preferences\
    \ message\n   parameter as received in the CARD Request message.\n   The MN can\
    \ additionally request from the AR a certification path that\n   is anchored at\
    \ a certificate from a shared, trusted anchor.  The MN\n   includes in the CARD\
    \ Request message a list of trusted anchors for\n   which the MN has a certificate,\
    \ and the AR replies with the\n   certification path.  If no match is found, the\
    \ AR returns the trusted\n   anchor names from the CARD Request.  The MN can ask\
    \ for a chain for\n   either the current AR or a CAR.  If the trusted anchor list\
    \ is\n   accompanied by an AP L2 ID for the MN's current AP, the returned\n  \
    \ chain is for the current AR.  If the L2 ID is for an AP that the MN\n   has\
    \ heard during scanning and is not connected to the current AR, the\n   returned\
    \ chain is for a CAR.  The chain is returned as a sequence of\n   CARD Reply messages,\
    \ each message containing a single certificate,\n   the L2 identifier for the\
    \ AP sent in the CARD Request, and a router\n   address for the CAR (or for the\
    \ AR itself if a request was made for\n   the AR).  When the chain is complete,\
    \ the MN can use it to obtain the\n   AR's certified key and thereby validate\
    \ signatures on CARD messages\n   and other messages between the MN and the current\
    \ AR.  The MN only\n   has to send the trusted anchor option if it does not have\
    \ the\n   certification path for the AR already cached.  If the MN has the\n \
    \  certification path cached, through preconfiguration, through previous\n   receipt\
    \ of the chain from this router, or by having received the\n   chain through a\
    \ previous router, then the trusted anchor does not\n   have to be sent.  More\
    \ information about certificate exchange and its\n   use in CARD security can\
    \ be found in Section 6.\n   The CARD protocol operation, as described in this\
    \ section,\n   distinguishes signaling messages exchanged between an MN and its\n\
    \   current AR from those exchanged between ARs.  Hence, descriptions of\n   signaling\
    \ messages in the following sections have preceding\n   identifiers referring\
    \ to the associated interface.  Messages that are\n   exchanged between an MN\
    \ and AR are designated as \"MN-AR\", and\n   messages between ARs are designated\
    \ as \"AR-AR\".\n          +--------------+  (1a)AR-AR CARD Request  +----------+\n\
    \          |   Current    |------------------------->|   CAR    |\n          |\
    \      AR      |<-------------------------|          |\n          +--------------+\
    \  (2a)AR-AR CARD Reply    +----------+\n              ^      |\n            \
    \  |      |    MN-AR\n      MN-AR   |      | CARD Reply(3m)\n   CARD Request(2m)\
    \  V\n           +--------------+\n           |    Mobile    |\n           | \
    \    Node     |<-- CARD Init Trigger\n           +--------------+       (1m)\n\
    \                Figure 1: MN-initiated CARD Protocol Overview\n   Figure 1 describes\
    \ the operation of the MN-AR CARD Request/Reply\n   protocol and AR-AR CARD Request/Reply\
    \ protocol.  On receipt of the\n   access points' L2 IDs or the appearance of\
    \ a CARD initiation trigger\n   (1m), the MN may pass on one or more AP L2 IDs\
    \ to its current AR\n   using the MN-AR CARD Request message (2m).  If the MN\
    \ wants its AR to\n   perform capability discovery in addition to reverse address\n\
    \   translation, this must be indicated in the MN-AR CARD Request message\n  \
    \ by setting the C-flag.  If the C-flag is not set, the AR receiving\n   the CARD\
    \ Request message will perform only reverse address\n   translation.  The MN's\
    \ current AR resolves the L2 ID to the IP\n   address of the associated CAR or,\
    \ if the MN has not attached any L2\n   ID message parameters, just reads out\
    \ all CARs' IP address\n   information using the reverse address translation information\
    \ (L2 ID\n   to IP address mapping) from its local CAR table.  The current AR\
    \ then\n   returns to the MN using the MN-AR CARD Reply message (3m), the IP\n\
    \   addresses of any CARs, each CAR's set of L2 IDs with CANDIDATE\n   indicated\
    \ in the L2 ID sub-option status field, and, if capability\n   information has\
    \ been requested, associated capabilities.\n   For the AR-AR CARD Request/Reply\
    \ protocol, the requesting AR sends a\n   CARD Request message to its peer when\
    \ the CAR table entries time out\n   (1a).  The peer returns a CARD Reply message\
    \ with the requested\n   information (2a).\n"
- title: 4.1.  Conceptual Data Structures
  contents:
  - "4.1.  Conceptual Data Structures\n   ARs SHALL maintain an L2-L3 address mapping\
    \ table (CAR table) that is\n   used to resolve L2 IDs of candidate APs to the\
    \ IP address of the\n   associated CAR.  By default, this address-mapping table\
    \ is configured\n   statically for the CARD protocol operation.  Optionally, the\
    \ CAR\n   table MAY be populated dynamically.  Two possible approaches are\n \
    \  described in Appendices A.1 and A.2.\n   ARs SHOULD also keep and maintain\
    \ individual CARs' capabilities in\n   the local CAR table, with the associated\
    \ capability lifetime taken\n   into account.  If the lifetime of an individual\
    \ capability entry has\n   expired, the respective capability information is updated.\
    \  An AR may\n   also initiate capability exchange prior to expiration of the\n\
    \   capabilities associated with a CAR in the CAR table, thereby\n   populating\
    \ its CAR table.  The AR's CAR table may be implemented\n   differently; therefore\
    \ additional details are not provided here.  ARs\n   MUST maintain their own AP-to-AR\
    \ mappings and capability information\n   in their CAR tables, in order to provide\
    \ newly booted MNs with this\n   information so that an MN can obtain the AR's\
    \ certification path.\n   MNs SHOULD maintain discovered address and capability\
    \ information of\n   CARs in a local cache to avoid requesting the same information\n\
    \   repeatedly and to select an appropriate target AR from the list of\n   CARs\
    \ as quickly as possible when a handover is imminent.\n"
- title: 4.2.  Mobile Node - Access Router Operation
  contents:
  - '4.2.  Mobile Node - Access Router Operation

    '
- title: 4.2.1.  Mobile Node Operation
  contents:
  - "4.2.1.  Mobile Node Operation\n   To initiate CARD, an MN sends a CARD Request\
    \ to its current AR,\n   requesting it to resolve the L2 ID of nearby access points\
    \ to the IP\n   address of associated CARs and also obtain capability parameters\n\
    \   associated with these CARs.  If the requesting MN wants its current\n   AR\
    \ to resolve specific L2 IDs, the MN-AR CARD Request MUST contain\n   the CARD\
    \ protocol-specific L2 ID message parameters.  If the MN wants\n   its AR to perform\
    \ only reverse address translation without appending\n   the CARs' capabilities,\
    \ the MN refrains from setting the C-flag in\n   the CARD Request message.  If\
    \ the MN wants to perform capability\n   discovery, the MN MUST set the C-flag\
    \ in the CARD Request message.\n   The CARD Request MAY also contain the Preferences\
    \ or Requirements\n   message parameter, indicating the MN's preferences on capability\n\
    \   attributes of interest or its requirements on CARs' capability\n   attribute-value\
    \ pairs.\n   If the MN appends multiple L2 ID sub-options to a CARD Request, the\n\
    \   AR MUST assume that each L2 ID is associated with an AP that connects\n  \
    \ to a different CAR.  Since L2 IDs, address information, and\n   capability information\
    \ are transmitted with separate sub-options,\n   each sub-option carries a Context-ID,\
    \ to allow parameters that belong\n   together to be matched.  Therefore, the\
    \ MN MUST assign different\n   Context-ID values to the L2 ID sub-options it appends\
    \ to the CARD\n   Request message.  The Status-Code field of the L2 ID sub-option\
    \ MUST\n   always be set to NONE (0x00) by the MN.  The MN MUST set the sequence\n\
    \   number to a randomly generated value, and the AR MUST include the\n   sequence\
    \ number in all messages of the reply.  If the reply spans\n   multiple messages,\
    \ each message contains the same sequence number.\n   Upon receipt of the corresponding\
    \ MN-AR CARD Reply message, the MN\n   correlates the CARD Reply with the appropriate\
    \ CARD Request message\n   and then processes all MN-AR CARD Reply message parameters\
    \ to\n   retrieve its CAR's address and capability information.  If the MN is\n\
    \   unable to correlate the CARD Reply with any previously sent CARD\n   Request\
    \ messages, the MN SHOULD silently discard the reply.  This may\n   happen when\
    \ the MN reboots after sending a CARD Request message to\n   the connected AR.\n\
    \   An MN uses exponential backoff to retransmit the CARD Request in the\n   event\
    \ that a CARD Reply is not received within CARD_REQUEST_RETRY\n   seconds.  The\
    \ retransmitted CARD Request MUST have the same sequence\n   number as the original.\
    \  With the exception of certification paths,\n   which are large by nature, an\
    \ AR SHOULD attempt to limit the\n   information in a CARD Reply to a single message.\
    \  Should that be\n   impossible, the AR MAY send the reply in multiple messages.\
    \  The last\n   message of a reply MUST always have the L-flag set in the CARD\
    \ Reply\n   option to indicate that the message is the last for the associated\n\
    \   sequence number.  An AR retransmitting replies to a CARD Request MUST\n  \
    \ always send the full CARD Reply sequence.  The Trusted Anchor sub-\n   option\
    \ and the Router Certificate sub-option provide a means whereby\n   the MN can\
    \ request specific certificates in a certification path, in\n   the event that\
    \ the CARD Reply carrying a certification path spans\n   multiple messages and\
    \ one of them is lost.  However, a request for\n   specific certificates that\
    \ were not received in the initial CARD\n   Reply MUST be treated as a new request\
    \ by the MN and MUST use a\n   different sequence number.\n   Processing the Context-ID\
    \ of Address sub-options allows the MN to\n   assign the resolved IP address of\
    \ a specific CAR to an L2 ID.\n   In some cases, an L2 ID parameter is present\
    \ in a CARD Reply message.\n   The Status-Code field in the L2 ID parameter indicates\
    \ one of the\n   following reasons for its being sent toward the MN.\n   RESOLVER\
    \ ERROR Status-Code indication:\n      If the MN's current AR could not resolve\
    \ a particular L2 ID, this\n      status code is returned to the MN.\n   MATCH\
    \ Status-Code indication:\n      If an L2 ID is encountered that shares a CAR\
    \ with a previously\n      resolved L2 ID, the AR returns MATCH to the MN.  This\
    \ status code\n      indicates that the Context-ID of this particular L2 ID sub-option\n\
    \      has been set to the Context-ID of the associated CAR's Address and\n  \
    \    Capability Container sub-option, which is sent with this CARD\n      Reply\
    \ message.  This approach avoids sending the same CAR's\n      address and capability\
    \ information multiple times with the same\n      CARD Reply message in case two\
    \ or more L2 IDs resolve to the same\n      CAR.  An MN uses the Context-ID received\
    \ in the L2 ID sub-option\n      as the key to find the serving CAR of the given\
    \ AP from the\n      content of the received CARD Reply message.\n   CANDIDATE\
    \ Status-Code indication:\n      If the MN does not append any L2 ID to the CARD\
    \ Request, the AR\n      sends back the L2 ID and address information of all CARs.\
    \  Because\n      the received parameters' Context-IDs cannot be correlated with\
    \ an\n      L2 ID's Context-ID of a previously sent request, the AR chooses\n\
    \      values for the Context-ID and marks these candidate L2 IDs with\n     \
    \ CANDIDATE in the status code of the distributed L2 IDs.  However,\n      individual\
    \ values of L2 IDs' Context-ID allow the MN to assign a\n      particular L2 ID\
    \ to the associated Address and the possibly\n      received Capability Container\
    \ sub-option.\n      As described in Section 4.5, an MN can use CARD when it initially\n\
    \      boots up to determine whether piggyback operation is possible.  An\n  \
    \    MN can also use CARD initially to determine the capabilities and\n      certificates\
    \ for an AR on which it boots up or if it cannot obtain\n      the certificates\
    \ beforehand.  To do this, the MN includes an L2\n      Identifier option with\
    \ its current AP L2 ID and the requested\n      information.  The AR replies with\
    \ its own information.\n"
- title: 4.2.2.  Current Access Router Operation
  contents:
  - "4.2.2.  Current Access Router Operation\n   Upon receipt of an MN's MN-AR CARD\
    \ Request, the connected AR SHALL\n   resolve the requested APs' L2 ID to the\
    \ IP address of any associated\n   CARs.  If no L2 ID parameter has been sent\
    \ with the MN-AR CARD\n   Request message, the receiving AR retrieves all CARs'\
    \ IP addresses\n   and, if the C-flag was set in the request, the capability\n\
    \   information.\n   In the first case, where the AR resolves only requested L2\
    \ IDs, the\n   AR does not send back the L2 ID to the requesting MN.  If, however,\n\
    \   two or more L2 IDs match the same CAR information, the L2 ID sub-\n   option\
    \ is sent back to the MN, indicating a MATCH in the Status-Code\n   field of the\
    \ L2 ID.  Furthermore, the AR sets the Context-ID of the\n   returned L2 ID to\
    \ the value of the resolved CAR's L2 ID, Address, and\n   Capability Container\
    \ sub-option.  If an AR cannot resolve a\n   particular L2 ID, an L2 ID sub-option\
    \ is sent back to the MN,\n   indicating a RESOLVER ERROR in the L2 ID sub-option's\
    \ Status-Code\n   field.\n   In the second case, where the AR did not receive\
    \ any L2 ID with a\n   CARD Request, all candidate APs' L2 IDs are sent to a requesting\
    \ MN\n   with the CARD Reply message.  The AR marks the Status-Code of\n   individual\
    \ L2 IDs as CANDIDATE, indicating to the MN that the\n   associated Context-ID\
    \ cannot be matched with the ID of a previously\n   sent request.\n   In any case,\
    \ the AR MUST set the Context-ID of the Address and the\n   Capability Container\
    \ sub-option to the same value as that of the\n   associated L2 ID sub-option.\n\
    \   Optionally, when allowed by local policies and supported by\n   respective\
    \ ARs for capability discovery, the AR MAY retrieve a subset\n   of capabilities\
    \ or CARs, satisfying the optionally appended\n   Preferences and Requirement\
    \ message parameter, from its local CAR\n   table.  CARs' address information\
    \ and associated capabilities are\n   then delivered to the MN using the MN-AR\
    \ CARD Reply message.  The\n   CARs' IP address and the capabilities SHALL be\
    \ encoded according to\n   the format for CARD protocol message parameters as\
    \ defined in Section\n   5.1.3 of this document.  The capabilities are encoded\
    \ as attribute-\n   value pairs, which are encapsulated in a Capability Container\
    \ message\n   parameter according to the format defined in Section 5.1.3.4.  The\n\
    \   responding current AR SHALL copy the sequence number received in the\n   MN-AR\
    \ CARD Request to the MN-AR CARD Reply.\n"
- title: 4.3.  Current Access Router - Candidate Access Router Operation
  contents:
  - '4.3.  Current Access Router - Candidate Access Router Operation

    '
- title: 4.3.1.  Current Access Router Operation
  contents:
  - "4.3.1.  Current Access Router Operation\n   The MN's current AR MAY initiate\
    \ capability exchange with CARs either\n   when it receives an MN-AR CARD Request\
    \ or when it detects that one or\n   more of its local CAR table's capability\
    \ entries' lifetimes are about\n   to expire.  An AR SHOULD preferentially utilize\
    \ its CAR table to\n   fulfill requests rather than signal the CAR directly, and\
    \ it SHOULD\n   keep the CAR table up to date for this purpose, in order to avoid\n\
    \   injecting unnecessary delays into the MN response.\n   The AR SHOULD issue\
    \ an AR-AR CARD Request to the respective CARs if\n   complete capability information\
    \ of a CAR is not available in the\n   current AR's CAR table, or if such information\
    \ is expired or about to\n   expire.  The AR-AR CARD Request message format is\
    \ defined in Section\n   5.2.2.  The sequence number on the AR-AR interface starts\
    \ with zero\n   when the AR reboots.  The sending AR MUST increment the sequence\n\
    \   number in the CARD Request by one each time it sends a CARD Request\n   message.\n\
    \   The AR MAY append its own capabilities, which are encoded as\n   attribute-value\
    \ pairs and encapsulated with the Capability Container\n   message parameter,\
    \ to the released AR-AR CARD Request.  If the AR-AR\n   CARD Request conveys the\
    \ current AR's capabilities to the CAR, the\n   associated Capability Container\
    \ can have any value set for the\n   Context-ID, as there is no need for the receiving\
    \ CAR to process this\n   field due to the absence of an L2 ID and an Address\
    \ sub-option.\n   Furthermore, the current AR MAY set the P-flag in the Capability\n\
    \   Container sub-option to inform the CAR about its own capability to\n   perform\
    \ CARD protocol message piggybacking.\n   Optionally, a current AR MAY append\
    \ the Preferences sub-option to the\n   AR-AR CARD Request to obtain only capability\
    \ parameters of interest\n   from a CAR.\n   Upon receipt of the AR-AR CARD Reply,\
    \ sent by the CAR in response to\n   the previously sent request, the MN's current\
    \ AR SHALL extract the\n   capability information from the payload of the received\
    \ message and\n   store the received capabilities in its local CAR table.  The\
    \ lifetime\n   of individual capabilities is to be set according to the lifetime\n\
    \   indicated for each capability received.  The values of the table\n   entries'\
    \ timeouts shall depend upon the nature of individual\n   capabilities.\n   Optionally,\
    \ CARs can send unsolicited CARD Reply messages to globally\n   adjacent ARs if\
    \ the configuration of their APs or capabilities\n   changes dynamically.  If\
    \ the current AR receives an unsolicited CARD\n   Reply message from a CAR for\
    \ which there is an entry in its local CAR\n   table, the current AR checks that\
    \ the sequence number of the received\n   CARD Reply has increased compared to\
    \ that of the previously received\n   unsolicited CARD Reply message, which has\
    \ been sent from the same\n   CAR.  Then, the current AR can update its local\
    \ CAR table according\n   to the received capabilities.  If a new CAR is added,\
    \ an AR may\n   receive a CARD Reply from a CAR that is not in its CAR table,\
    \ or from\n   a CAR that has rebooted.  In this case, the sequence number is 0.\n\
    \   The requirement that ARs share an IPsec security association,\n   detailed\
    \ in Section 6, ensures that an AR never accepts CARD\n   information from an\
    \ unauthenticated source.\n"
- title: 4.3.2.  Candidate Access Router Operation
  contents:
  - "4.3.2.  Candidate Access Router Operation\n   Upon receipt of an AR-AR CARD Request,\
    \ a CAR shall extract the\n   sending AR's capabilities, if the sending AR has\
    \ included its\n   capabilities.  The CAR SHALL store the received capabilities\
    \ in its\n   CAR table and set the timer for individual capabilities\n   appropriately.\
    \  The values of the table entries' timeouts depend on\n   the nature of capabilities\
    \ in the AR-AR CARD Reply message.  The CAR\n   must include the same sequence\
    \ number in the AR-AR CARD Reply Message\n   as that received in the AR-AR CARD\
    \ Request Message.  The AR-AR CARD\n   Reply shall include the CAR's capabilities\
    \ as list of attribute-value\n   pairs in the Capability Container message parameter.\
    \  If the sending\n   AR has appended an optional Preferences sub-option, the\
    \ CAR MAY\n   perform capability filtering and send back only those capabilities\
    \ of\n   interest to the requesting AR, identified according to the\n   Preferences\
    \ sub-option.  Because the AR-AR CARD Reply is based on a\n   previously received\
    \ AR-AR CARD Request, the CAR MUST set the U-flag\n   of the AR-AR CARD Reply\
    \ to 0.\n   Optionally, the CAR MAY send an unsolicited CARD Reply message to\n\
    \   globally adjacent ARs if one or more of its capability parameters\n   change.\
    \  Each unsolicited CARD Reply message should have as\n   destination address\
    \ the adjacent AR's unicast address and must have\n   the U-flag set.  Consecutive\
    \ unsolicited CARD Reply messages MUST\n   have the sequence number incremented\
    \ accordingly, starting with 0\n   when the AR boots.\n"
- title: 4.4.  CARD Protocol Message Piggybacking on the MN-AR Interface
  contents:
  - "4.4.  CARD Protocol Message Piggybacking on the MN-AR Interface\n   CARD supports\
    \ another mode of CAR information distribution, in which\n   the capabilities\
    \ are piggybacked on fast handover protocol messages.\n   To allow MNs and ARs\
    \ appending the ICMP-option type CARD Request and\n   CARD Reply (Section 5.1.2)\
    \ to the ICMP-type Fast Mobile IPv6 [Kood03]\n   signaling messages, the MN and\
    \ AR should know about the signaling\n   peer's capability for CARD protocol message\
    \ piggybacking.  This\n   requires dynamic discovery of piggybacking capability\
    \ using the\n   P-flag in the MN-AR CARD Request and the MN-AR CARD Reply message,\
    \ as\n   well as in the Capability Container message parameter.  The format of\n\
    \   these messages and parameters is described in Section 5.1.\n   The MN sends\
    \ the very first CARD Request to its current AR using the\n   ICMP-type CARD main\
    \ header for transport, as described in Section\n   4.2.1.  If the MN supports\
    \ CARD-protocol message piggybacking, the\n   P-flag in this very first CARD Request\
    \ message is set.  On receipt of\n   the CARD Request message, the current AR\
    \ learns about the MN's\n   piggybacking capability.  To indicate its piggybacking\
    \ capability,\n   the AR sets the P-flag in the CARD Reply message.  If the AR\
    \ does not\n   support piggybacking, all subsequent CARD-protocol messages between\n\
    \   the MN and the AR are sent stand-alone, using the CARD main header.\n   If\
    \ both nodes (the MN and its current AR) support CARD-protocol\n   message piggybacking,\
    \ subsequent CARD protocol messages can be\n   conveyed as an option via the Fast\
    \ Mobile IPv6 Router Solicitation\n   for Proxy (RtSolPr) and Proxy Router Advertisement\
    \ (PrRtAdv)\n   messages.  During the CARD process, an MN learns about CARs'\n\
    \   piggybacking capability at the discovery phase, as the Capability\n   Container\
    \ (described in Section 5.1.3.4) also carries a P-flag.  This\n   allows the MN\
    \ to perform CARD protocol message piggybacking\n   immediately after a handover\
    \ to a selected CAR, assuming that this\n   CAR supports CARD protocol piggybacking.\n\
    \   If a MN prefers the reverse address translation function of the Fast\n   Mobile\
    \ IPv6 protocol, it can use CARD protocol message piggybacking\n   to retrieve\
    \ only the CARs' capability information.  To indicate that\n   reverse address\
    \ translation is not required, the piggybacked CARD\n   Request message MUST have\
    \ the A-flag set.  This causes the current AR\n   to append only Capability Container\
    \ sub-options.  To associate a\n   Capability Container sent as a parameter of\
    \ the CARD Reply message to\n   the IP address for the appropriate CAR, the Context-ID\
    \ of an\n   individual Capability Container MUST be used as an index, pointing\
    \ to\n   the associated IP address in the PrRtAdv message options.  The\n   Context-ID\
    \ of individual Capability Containers is set appropriately\n   by the MN's current\
    \ AR.  Details about how individual Context-ID\n   values can be associated with\
    \ a particular IP address option of the\n   PrRtAdv message is out of the scope\
    \ of this document.\n"
- title: 5.  Protocol Messages
  contents:
  - '5.  Protocol Messages

    '
- title: 5.1.  CARD Messages for the Mobile Node-Access Router Interface
  contents:
  - '5.1.  CARD Messages for the Mobile Node-Access Router Interface

    '
- title: 5.1.1.  MN-AR Transport
  contents:
  - "5.1.1.  MN-AR Transport\n   The MN-AR interface uses ICMP for transport.  Because\
    \ ICMP messages\n   are limited to a single packet, and because ICMP contains\
    \ no\n   provisions for retransmitting packets if signaling is lost, the CARD\n\
    \   protocol incorporates provisions for improving transport performance\n   on\
    \ the MN-AR interface.  MNs SHOULD limit the amount of information\n   requested\
    \ in a single ICMP packet, as ICMP has no provision for\n   fragmentation above\
    \ the IP level.\n   MNs and ARs use the Experimental ICMP-type main header [Ke04]\
    \ when\n   CARD protocol messages cannot be conveyed via ICMP-type Fast Mobile\n\
    \   IPv6 [Kood03].  The MN-AR interface MUST implement and SHOULD use the\n  \
    \ CARD ICMP-type header for transport.  If available, the MN-AR\n   interface\
    \ MAY use the ICMP-type Fast Mobile IPv6 [Kood03] for\n   transport (Section 4.4).\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Subtype    |             Reserved                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Options ...\n   +-+-+-+-+-+-+-+-+-+-+-+- - - -\n   IP Fields:\n      Source\
    \ Address:\n                     An IP address assigned to the sending interface.\n\
    \      Destination Address:\n                     An IP address assigned to the\
    \ receiving interface.\n      Hop Limit:     255\n   ICMP Fields:\n      Type:\
    \          Experimental Mobility type (assigned by IANA for\n                \
    \     IPv4 and IPv6, see [Ke04]).\n      Code:          0\n      Checksum:   \
    \   The ICMP checksum.\n      Subtype:       Experimental Mobility subtype for\
    \ CARD; see [Ke04].\n      Reserved:      This field is currently unused.  It\
    \ MUST be\n                     initialized to zero by the sender and MUST be\n\
    \                     ignored by the receiver.\n   Valid Options:\n      CARD\
    \ Request:  The CARD Request allows entities to request CARD-\n              \
    \       specific information from ARs.  To support\n                     processing\
    \ of the CARD Request message on the\n                     receiver side, further\
    \ sub-options may be carried,\n                     serving as input to the reverse\
    \ address translation\n                     function and/or capability discovery\
    \ function.\n      CARD Reply:    The CARD Reply carries parameters, previously\n\
    \                     requested with a CARD Request, back to the sender\n    \
    \                 of the CARD Request.\n   Valid Sub-Options:\n   Support level\
    \ is indicated in parentheses.\n      Layer-2 ID (mandatory):\n              \
    \       The Layer-2 ID sub-option [5.1.3.1] carries\n                     information\
    \ about the type of an access point as\n                     well as the Layer-2\
    \ address of the access point\n                     associated with the CAR whose\
    \ IP address and\n                     capability information is to be resolved.\n\
    \      Capability Container (mandatory):\n                     The Capability\
    \ Container sub-option carries\n                     information about a single\
    \ CAR's capabilities.  The\n                     format of this sub-option is\
    \ described in Section\n                     5.1.3.4.\n      Address (mandatory):\n\
    \                     The Address sub-option carries information on an\n     \
    \                individual CAR's resolved IP address.  The format\n         \
    \            of the Address sub-option is described in Section\n             \
    \        5.1.3.5.\n      Trusted Anchor (mandatory):\n                     The\
    \ Trusted Anchor sub-option carries the name of a\n                     trusted\
    \ anchor for which the MN has a certificate.\n                     The format\
    \ of the Trusted Anchor sub-option is\n                     described in Section\
    \ 5.1.3.6.\n      Router Certificate (mandatory):\n                     The Router\
    \ Certificate sub-option carries one\n                     certificate in the\
    \ path for the current AR or for a\n                     CAR.  The chain includes\
    \ certificates starting at a\n                     trusted anchor, which the AR\
    \ shares in common with\n                     the MN, to the router itself.  The\
    \ format of the\n                     Router Certificate sub-option is described\
    \ in\n                     Section 5.1.3.7.\n      Preferences (optional):\n \
    \                    The Preferences sub-option carries information\n        \
    \             about attributes of interest to the requesting\n               \
    \      entity.  Attributes are encoded according to the\n                    \
    \ AVP encoding rule, which is described in Section\n                     5.1.4.\
    \  For proper settings of AVP Code and Data\n                     field, see Section\
    \ 5.1.3.2.  This sub-option is\n                     used only if optional capability\
    \ pre-filtering is\n                     performed on ARs, and it provides only\
    \ capabilities\n                     of interest to a requesting MN.\n      Requirements\
    \ (optional):\n                     The Requirements sub-option carries information\n\
    \                     about attribute-value pairs required for pre-\n        \
    \             filtering of CARs on the MN's current AR.  This\n              \
    \       parameter conveys MN specific attribute-value pairs\n                \
    \     to allow the MN's current AR to send only\n                     information\
    \ about CARs of interest back to the\n                     requesting MN.  CARs\
    \ are filtered on ARs according\n                     to the CARs' capability\
    \ parameters and given policy\n                     or threshold, as encoded in\
    \ the Requirements sub-\n                     option.  Attribute-value pairs are\
    \ encoded\n                     according to the AVP encoding rule, which is\n\
    \                     described in Section 5.1.4.  Rules for proper\n        \
    \             setting of the AVP Code and Data field for the\n               \
    \      Requirements sub-option are described in Section\n                    \
    \ 5.1.3.3.\n   CARD Requests that fail to elicit a response are retransmitted.\
    \  The\n   initial retransmission occurs after a CARD_REQUEST_RETRY wait period.\n\
    \   Retransmissions MUST be made with exponentially increasing wait\n   intervals\
    \ (doubling the wait each time).  CARD Requests should be\n   retransmitted until\
    \ either a response (which might be an error) has\n   been obtained or CARD_RETRY_MAX\
    \ seconds have occurred.  ARs MUST\n   discard any CARD Requests having the same\
    \ sequence number after\n   CARD_RETRY_MAX seconds.  If a CARD Reply spans multiple\
    \ ICMP\n   messages, the same sequence number MUST be used in each message.\n\
    \   MNs that retransmit a CARD Request use the same CARD sequence number.\n  \
    \ This allows the AR to cache its reply to the original request and\n   then to\
    \ send it again, should a duplicate request arrive.  This\n   cached information\
    \ should only be held for a maximum of\n   CARD_RETRY_MAX seconds after receipt\
    \ of the request.  Sequence\n   numbers SHOULD be chosen randomly.  Random sequence\
    \ numbers avoid\n   duplicates if MNs restart frequently and simplify sequence-number\n\
    \   maintenance on both the MN and AR when MNs frequently appear and\n   disappear\
    \ due to movement between CARs.\n"
- title: 5.1.2.  CARD Options Format
  contents:
  - "5.1.2.  CARD Options Format\n   All options are of the following form:\n    0\
    \                   1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |Vers.|        ...              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                              ...                              ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Fields:\n      Type:          8-bit identifier of the type of option, assigned\
    \ by\n                     IANA.  See [Ke04] for CARD Request and CARD Reply\n\
    \                     values.\n      Length:        8-bit unsigned integer.  The\
    \ length of the option,\n                     including the type and length fields\
    \ in units of 8\n                     octets.  The value 0 is invalid.\n     \
    \ Vers.:         3-bit version code.  For this specification,\n              \
    \       Vers.=1.\n"
- title: 5.1.2.1.  CARD Request Option
  contents:
  - "5.1.2.1.  CARD Request Option\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |Vers.|P|C|A|T|     Reserved    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Sequence Number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Sub-Options\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -  -  -\n   Fields:\n\
    \      Type:    Assigned by IANA for IPv4 and IPv6; see [Ke04].\n      Length:\
    \  The length of the option in units of 8 octets, including\n               the\
    \ type and length fields as well as sub-options.\n      Vers.:   3-bit version\
    \ code.  For this specification, Vers.=1.\n               Flags:   P-flag:  Indicates\
    \ the CARD-protocol message\n                                 piggybacking capability\
    \ of the CARD\n                                 Request message sender.  A description\n\
    \                                 for proper use of this flag can be\n       \
    \                          found in Section 4.4 of this document.\n          \
    \              C-flag:  Indicates that the requesting entity is\n            \
    \                     also interested in associated CARs'\n                  \
    \               capabilities.  If the MN wants the AR\n                      \
    \           to append CARs' capability parameters\n                          \
    \       to the CARD Reply in addition to\n                                 address\
    \ information, the MN must set\n                                 this flag.\n\
    \                        A-flag:  Indicates that the requesting entity\n     \
    \                            does NOT want the receiver of this\n            \
    \                     message to perform reverse address\n                   \
    \              translation.  This flag is set if CARD\n                      \
    \           protocol messages are piggybacked with\n                         \
    \        a protocol that performs reverse\n                                 address\
    \ translation.  For details,\n                                 refer to Section\
    \ 4.4 of this document.\n                        T-flag:  Indicates that the requesting\
    \ entity is\n                                 interested in obtaining all\n  \
    \                               certificates from the responder.  This\n     \
    \                            flag is only valid on the AR-AR\n               \
    \                  interface.\n               The flag combination A=1 and C=0\
    \ is invalid, and the flag\n               T=1 is invalid on the MN-AR interface.\
    \  The AR MUST\n               discard an invalid message and log an appropriate\
    \ error\n               message.\n      Reserved:\n               Initialized\
    \ to zero, ignored on receipt.\n      Sequence Number:\n               Allows\
    \ requests to be correlated with replies.\n   Valid Sub-Options:\n      - L2 ID\
    \ sub-option\n      - Preferences sub-option\n      - Requirements sub-option\n\
    \      - Trusted Anchor sub-option\n   To ensure that requirements on boundary\
    \ alignment are met, individual\n   sub-options MUST meet the 64-bit boundary\
    \ alignment requirements\n   respectively.  This will ensure that the entire CARD\
    \ Request option\n   meets the 8n alignment constraint.\n"
- title: 5.1.2.2.  CARD Reply Option
  contents:
  - "5.1.2.2.  CARD Reply Option\n    0                   1                   2  \
    \                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |Vers.|P|U|L|     Reserved      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Sequence Number                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Sub-Options\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ - - -\n   Fields:\n  \
    \    Type:    Assigned by IANA for IPv4 and IPv6 [Ke04].\n      Length:  The length\
    \ of the option in units of 8 octets, including\n               the type and length\
    \ fields as well as sub-options.\n      Vers.:   3-bit version code.  For this\
    \ specification, Vers.=1.\n               Flags:   P-flag:  Indicates the CARD-protocol\
    \ message\n                                 piggybacking capability of the CARD\n\
    \                                 Reply message sender.  A description\n     \
    \                            for proper use of this flag can be\n            \
    \                     found in Section 4.4 of this document.\n               \
    \         U-flag:  Indicates an unsolicited CARD Reply.\n                    \
    \             This flag is only valid on the AR-AR\n                         \
    \        interface.\n                        L-flag:  Set if this message is the\
    \ last message\n                                 in a multiple ICMP message reply.\
    \  This\n                                 flag is only valid on the MN-AR\n  \
    \                               interface.\n               The flag U=1 on an\
    \ AR-MN message is invalid.  An invalid\n               message should be discarded\
    \ and an appropriate error\n               message logged.\n      Reserved:\n\
    \               Initialized to zero, ignored on receipt.\n      Sequence Number:\n\
    \               Allows requests to be correlated with replies.\n   Valid Sub-Options:\n\
    \      - L2 ID sub-option\n      - Capability Container sub-option\n      - Address\
    \ sub-option\n      - Router Certificate sub-option\n   To ensure requirements\
    \ on boundary alignment are met, individual\n   sub-options MUST meet 64-bit boundary\
    \ alignment requirements\n   respectively.  This will ensure that the entire CARD\
    \ Request option\n   meets the 8n alignment constraint.\n"
- title: 5.1.3.  Sub-Options Format
  contents:
  - "5.1.3.  Sub-Options Format\n   All sub-options are of the following form:\n \
    \   0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |       Sub-Option Data . . .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Sub-Option Type:  8-bit identifier of the type of option.  The\n         \
    \            sub-options defined in this document are listed\n               \
    \      in the table below.  The table also indicates\n                     on\
    \ which interfaces the sub-option is valid.\n          Description           \
    \     Type              Interface\n              |                       |   \
    \            /         \\\n              |                       |           \
    \ MN-AR       AR-AR\n      ---------------------------------------------------------------\n\
    \            L2 ID                    0x01            x\n            Address \
    \                 0x02            x\n            Capability Container     0x03\
    \            x           x\n            Preferences              0x04        \
    \    x           x\n            Requirements             0x05            x\n \
    \           Trusted Anchor           0x06            x\n            Router Certificate\
    \       0x07            x           x\n   Sub-Option-Length: 8-bit unsigned integer\
    \ indicating the length of\n                      the sub-option, including the\
    \ sub-option type and\n                      sub-option length fields.  Sub-option\
    \ lengths are\n                      in units of 8 octets, aligned on a 64-bit\n\
    \                      boundary.  Sub-options that are shorter are padded\n  \
    \                    with null octets; the extent of the padding is\n        \
    \              determined by the sub-option contents.\n"
- title: 5.1.3.1.  L2 ID Sub-Option
  contents:
  - "5.1.3.1.  L2 ID Sub-Option\n    0                   1                   2   \
    \                3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |   Context-ID  |  Status Code  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    L2-Type                    |     L2 ID . . .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ - - -\n   Sub-Option Type:\n                  0x01\n   Sub-Option Length:\n\
    \                  Length of the sub-option.\n   Context-ID:    Associates the\
    \ L2 ID, IP address and other parameters\n                  that belong to the\
    \ same AR IP address but are encoded\n                  in separate sub-options.\n\
    \   Status Code:   This field allows ARs to inform a requesting entity\n     \
    \             about processing results for a particular L2 ID.  The\n        \
    \          L2 ID sub-option MUST be sent back to the requesting\n            \
    \      entity with a CARD Reply message.\n                  The following status\
    \ codes are specified:\n               0x00:    NONE - This value MUST be set\
    \ when the L2 ID is\n                        included in a CARD Request.\n   \
    \            0x01:    CANDIDATE - MUST be set in a CARD Reply when a\n       \
    \                 L2 ID sub-option is included with information\n            \
    \            about candidate APs' L2 IDs.  Candidate L2 IDs\n                \
    \        are sent if the CARD Request did not include a\n                    \
    \    specific L2 ID for resolution.  If CANDIDATE is\n                       \
    \ set, the AR MUST set the Context-ID field of\n                        individual\
    \ parameters to a value that allows\n                        associated L2 ID,\
    \ address, and capability\n                        information to be matched on\
    \ the receiver side.\n               0x02:    MATCH - MUST be set in the CARD\
    \ Reply to\n                        identify that this L2 ID matches previously\n\
    \                        resolved CAR information for a different L2 ID.\n   \
    \                     If MATCH is set, the AR sets the Context-ID in\n       \
    \                 the L2-ID sub-option to identify the matching\n            \
    \            previously resolved L2 ID.\n               0x03:    RESOLVER ERROR\
    \ - MUST be set in the CARD Reply\n                        if the L2 ID cannot\
    \ be resolved.  The AR sets\n                        this value for the Status\
    \ Code in the returned\n                        L2 ID sub-option.\n   L2 type:\
    \       Indicates the interface type.  Allocated by IANA\n                  [Ke04].\n\
    \   L2 ID:         The variable length Layer-2 identifier of an\n            \
    \      individual CAR's access point.  The length without\n                  padding\
    \ is determined by the L2 type.\n"
- title: 5.1.3.2.  Preferences Sub-Option
  contents:
  - "5.1.3.2.  Preferences Sub-Option\n    0                   1                 \
    \  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |         Preferences\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Sub-Option Type:\n                  0x04\n   Sub-Option Length:\n        \
    \          Length of the sub-option.\n   Preferences:   List of capability attribute\
    \ values (see Section\n                  5.1.4).\n   Only ATTRIBUTE (AVP Code;\
    \ see Section 5.1.4) fields MUST be present\n   and set for individual capabilities,\
    \ which are of interest to the\n   requesting entity.  The LIFETIME and VALUE\
    \ (Data) indicator will not\n   be processed and can be omitted.  The AVP LENGTH\
    \ indicator is also\n   not present, as the preferences are indicated only with\
    \ a list of\n   16-bit encoded ATTRIBUTE fields.  If 64-bit boundary alignment\n\
    \   requirements cannot be met with the list of ATTRIBUTE values, padding\n  \
    \ the missing 16-bit MUST be done with an ATTRIBUTE value of 0x0000.\n   An ATTRIBUTE\
    \ code of 0x0 is reserved so that the end of the ATTRIBUTE\n   code list can be\
    \ determined when an ATTRIBUTE value of 0x0 is read.\n   The use of the Preferences\
    \ sub-option is optional and is for\n   optimization purposes.\n"
- title: 5.1.3.3.  Requirements Sub-Option
  contents:
  - "5.1.3.3.  Requirements Sub-Option\n    0                   1                \
    \   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |         Requirements\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Sub-Option Type:\n                  0x05\n   Sub-Option Length:\n        \
    \          Length of the sub-option.\n   Requirements:  AVP-encoded requirements\
    \ (see Section 5.1.4)\n   AVPs MUST be encoded according to the rule described\
    \ in Section\n   5.1.4.  Both the ATTRIBUTE (AVP Code) and VALUE (Data) fields\
    \ MUST be\n   present and set appropriately.  The end of the Requirements list\
    \ can\n   be determined when an ATTRIBUTE value of 0x0 is read.\n   The use of\
    \ the Requirements sub-option is optional and is for\n   optimization purposes.\n"
- title: 5.1.3.4.  Capability Container Sub-Option
  contents:
  - "5.1.3.4.  Capability Container Sub-Option\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |   Context-ID  |P|  Reserved   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           AVPs\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ - - -\n   Sub-Option Type:\n\
    \                  0x03\n   Sub-Option Length:\n                  Length of the\
    \ sub-option.\n   Context-ID:    Associates the L2 ID, IP address, and other parameters\n\
    \                  that belong to the same AR IP address but are encoded\n   \
    \               in separate sub-options.\n   Flags:         P-flag:  Indicates\
    \ piggybacking capability of the CAR\n                           whose capabilities\
    \ are conveyed in this\n                           Capability Container.  This\
    \ flag allows an MN\n                           to know after a CARD process whether\
    \ a\n                           selected new AR can perform piggybacking.\n  \
    \ Reserved:      Initialized to zero, ignored on receipt.\n   AVPs:          AVPs\
    \ are a method of encapsulating capability\n                  information relevant\
    \ for the CARD protocol.  See\n                  Section 5.1.4 for the AVP encoding\
    \ rule and list\n                  parsing.\n"
- title: 5.1.3.5.  Address Sub-Option
  contents:
  - "5.1.3.5.  Address Sub-Option\n    0                   1                   2 \
    \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |  Context-ID   | Address Type  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Address . . .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - -\n\
    \   Sub-Option Type:\n                  0x02\n   Sub-Option Length:\n        \
    \          Length of the sub-option.  For IPv4, the length is 1\n            \
    \      (8 octets); for IPv6 the length is 3 (24 octets).\n   Context-ID:    Associates\
    \ the L2 ID, IP address, and other parameters\n                  that belong to\
    \ the same AR IP address but are encoded\n                  in separate sub-options.\n\
    \   Address Type:  Indicates the type of the address.\n                      \
    \                 0x01  IPv4\n                                       0x02  IPv6\n\
    \   Address:       The Candidate Access Router's IP address.\n"
- title: 5.1.3.6.  Trusted Anchor Sub-Option
  contents:
  - "5.1.3.6.  Trusted Anchor Sub-Option\n    0                   1              \
    \     2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |      Component                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Trusted Anchor Name\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - -\
    \ -\n   Sub-Option Type:\n                  0x06\n   Sub-Option Length:\n    \
    \              Length of the sub-option.\n   Reserved:      Initialized to zero,\
    \ ignored on receipt.\n   Component:     A 2 octet unsigned integer field set\
    \ to 65,535 if the\n                  sender desires to retrieve all the certificates\
    \ in the\n                  certification path.  Otherwise, it is set to the\n\
    \                  component identifier corresponding to the certificate\n   \
    \               that the receiver wants to retrieve.\n   Trusted Anchor Name:\n\
    \                  DER encoding for the X.501 name of certification path\n   \
    \               component(see [Arkko04] for more detail on\n                 \
    \ certification path component name encoding).\n   A CARD Request message containing\
    \ Trusted Anchor sub-options MUST NOT\n   contain any other sub-options, except\
    \ for a single L2 ID sub-option\n   identifying the AP of interest.\n   Trusted\
    \ anchor sub-options SHOULD be retransmitted for individual\n   components not\
    \ received within CARD_REQUEST_RETRY seconds, rather\n   than retransmitting a\
    \ request for the whole list.  Subsequent\n   retransmissions SHOULD take into\
    \ account any received options and\n   only request those that have not been received.\n"
- title: 5.1.3.7.  Router Certificate Sub-Option
  contents:
  - "5.1.3.7.  Router Certificate Sub-Option\n    0                   1          \
    \         2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Sub-Option Type|Sub-Option Len |   Context-ID  | Reserved      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          All Components       |        Component              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                  Certificate...                       |\n   +              \
    \                                                 +\n   |                    \
    \                                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                            Padding...                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Sub-Option Type:\n                  0x07\n   Sub-Option Length:\n        \
    \          Length of the sub-option.\n   Context-ID:    Associates the L2 ID,\
    \ IP address and other parameters\n                  that belong to the same AR\
    \ IP address but are encoded\n                  in separate sub-options.\n   Reserved:\
    \      Initialized to zero, ignored on receipt.\n   All Components:\n        \
    \          2 octet unsigned integer giving the total number of\n             \
    \     certificates in the certification path.\n   Component:     2 octet unsigned\
    \ integer giving the location of this\n                  certificate in the certification\
    \ path.\n   Certificate:   Variable-length field containing the X.509v3 router\n\
    \                  certificate encoded in ASN.1 (see [Arkko04] for more\n    \
    \              detail on a certificate profile that includes\n               \
    \   encoding).\n   Padding:       Variable-length field making the option length\
    \ a\n                  multiple of 8, beginning after the ASN.1 encoding of\n\
    \                  the certificate and continuing to the end of the\n        \
    \          option, as specified by the Length field.\n   A CARD Reply containing\
    \ a Router Certificate sub-option MUST NOT\n   include more than one such sub-option,\
    \ and the CARD Reply MUST\n   contain the matching L2 ID sub-option and router\
    \ Address sub-option\n   for the router possessing the chain with the Context-ID\
    \ field set to\n   a nonzero value, and with no other sub-options.  Any other\
    \ sub-\n   options included in a CARD Reply SHOULD be ignored.  If the reply\n\
    \   spans multiple ICMP messages, the L2 ID sub-option and router Address\n  \
    \ sub-option MUST be included in the first message sent, and the\n   Context-ID\
    \ field in the Router Certificate sub-options in all the\n   messages MUST be\
    \ set to the same value as that in the L2 ID and\n   Address sub-options.  The\
    \ replying AR SHOULD order the returned\n   certification path so that the certificate\
    \ immediately after the\n   trust anchor in the path is the first certificate\
    \ sent, in order to\n   allow immediate verification.  The trust anchor certificate\
    \ itself\n   SHOULD NOT be sent.\n"
- title: 5.1.4.  Capability AVP Encoding Rule
  contents:
  - "5.1.4.  Capability AVP Encoding Rule\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           AVP Code            |  AVP Length   |   Reserved    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Attribute Lifetime       |           Data . . .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ - - -\n   AVP Code:      Identifies the attribute uniquely.  The AVP Code\n\
    \                  0x0000 is reserved and MUST NOT be assigned to a\n        \
    \          capability.\n   AVP Length:    The 2 octet AVP length field indicates\
    \ the number of\n                  octets in this AVP, including the AVP Code,\
    \ AVP\n                  Length, Reserved, Lifetime, and Data fields.\n   Reserved:\
    \      Initialized to zero, ignored on receipt.\n   Lifetime:      Specifies the\
    \ lifetime of the encoded capability in\n                  seconds.  In the case\
    \ of a static capability, the\n                  Lifetime field MUST be set to\
    \ the maximum value\n                  (0xffff), which indicates that the lifetime\
    \ of this\n                  capability parameter never expires.  A lifetime value\n\
    \                  of 0x0000 deletes a capability entry.\n   Data:          This\
    \ variable-length field has the Value of the\n                  capability attribute\
    \ encoded.\n   Because an AVP Code of 0x0 is reserved, it can be used by the sub-\n\
    \   option list parsing to determine when the end of a list of\n   Capabilities\
    \ has been reached and where the sub-option padding\n   starts.  AVPs themselves\
    \ are not zero padded.\n   Note: This document provides no detailed information\
    \ on how to encode\n   the individual capability attribute values, which is to\
    \ be encoded in\n   the Data field.  Details on the interpretation of individual\n\
    \   capability parameters are out of the scope of this document.\n"
- title: 5.2.  CARD Inter-Access Router Messages
  contents:
  - '5.2.  CARD Inter-Access Router Messages

    '
- title: 5.2.1.  AR-AR Transport
  contents:
  - "5.2.1.  AR-AR Transport\n   Because the types of access networks in which CARD\
    \ might be useful\n   are not currently deployed or, if they have been deployed,\
    \ have not\n   been extensively measured, it is difficult to know whether congestion\n\
    \   will be a problem for inter-router CARD.  Part of the research task\n   in\
    \ preparing CARD for consideration as a candidate for possible\n   standardization\
    \ is to quantify this issue.  However, in order to\n   avoid potential interference\
    \ with production applications (should a\n   prototype CARD deployment involve\
    \ running over the public Internet),\n   it seems prudent to recommend a default\
    \ transport protocol that\n   accommodates congestion.\n   This suggests that\
    \ implementations of CARD MUST support and that\n   prototype deployments of CARD\
    \ SHOULD use the Stream Control Transport\n   Protocol (SCTP) [Stew00] as the\
    \ transport protocol between routers,\n   especially if deployment over the public\
    \ Internet is contemplated.\n   SCTP supports congestion control, fragmentation,\
    \ and partial\n   retransmission based on a programmable retransmission timer.\
    \  SCTP\n   also supports many advanced and complex features, such as multiple\n\
    \   streams and multiple IP addresses for failover, that are not\n   necessary\
    \ for experimental implementation and prototype deployment of\n   CARD.  The use\
    \ of these SCTP features for CARD is not recommended at\n   this time.\n   The\
    \ SCTP Payload Data Chunk carries the CARD messages.  CARD messages\n   on the\
    \ inter-router interface consist of just the CARD Request or\n   CARD Reply options.\
    \  The User Data part of each SCTP message contains\n   the CARD option for the\
    \ message type.  For instance, a CARD Reply\n   message is constructed by including\
    \ the CARD Reply option and all the\n   appropriate sub-options within the User\
    \ Data part of an SCTP message.\n   A single stream is used for CARD with in-sequence\
    \ delivery of SCTP\n   messages.  Each message, unless fragmented, corresponds\
    \ to a single\n   CARD query or response.  Unsolicited CARD Reply messages can\
    \ also be\n   sent to peers to notify them of changes in network configuration\
    \ or\n   capabilities.  A single stream provides simplicity.  Use of multiple\n\
    \   streams to prevent head-of-line blocking is for future study.  Since\n   timeliness\
    \ is not an issue with inter-router CARD, and since there\n   being more than\
    \ one CARD transaction between two routers active at\n   any one time is unlikely,\
    \ having ordered delivery simplifies the\n   implementation.  The Payload Protocol\
    \ Identifier in the SCTP header\n   is 'CARD'.  CARD uses the Seamoby SCTP port\
    \ number [Ke04].\n   The format of Payload Data Chunk taken from [Stew00] is shown\
    \ in the\n   following diagram.\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Type = 0    | Reserved|U|B|E|    Length                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              TSN                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Stream Identifier S      |   Stream Sequence Number n    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Payload Protocol Identifier                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   \\                                                               \\\n   /\
    \                 User Data (seq n of Stream S)                 /\n   \\     \
    \                                                          \\\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         'U' bit      The Unordered bit.  MUST be set to 0 (zero).\n        \
    \ 'B' bit      The Beginning fragment bit.  See [Stew00].\n         'E' bit  \
    \    The Ending fragment bit.  See [Stew00].\n         TSN          Transmission\
    \ Sequence Number.  See [Stew00].\n         Stream Identifier S\n            \
    \          Identifies the CARD stream.\n         Stream Sequence Number n\n  \
    \                    Sequence number.  See [Stew00].\n         Payload Protocol\
    \ Identifier\n                      Set to 'CARD'.\n         User Data    Contains\
    \ the CARD message.\n   In order to avoid generating congestion on startup, ARs\
    \ MUST wait a\n   random amount of time between 0 and CARD_STARTUP_WAIT seconds\
    \ upon\n   reboot before sending an AR-AR CARD Request to one of its CARs.  An\n\
    \   AR that receives a CARD Request from another AR that is not in its\n   CAR\
    \ table MUST NOT solicit the AR but rather MUST wait until the AR\n   sends an\
    \ unsolicited CARD Reply advertising the AR's information.  An\n   AR that is\
    \ starting up MUST send unsolicited CARD Replies to all its\n   CARs to make sure\
    \ that their CAR tables are properly populated.\n   The frequency of unsolicited\
    \ CARD Reply messages MUST be strictly\n   limited to CARD_MIN_UPDATE_INTERVAL,\
    \ in order to avoid overwhelming\n   CARs with traffic.  ARs are free to discard\
    \ messages that arrive more\n   frequently.\n   If a CARD deployment will never\
    \ run over the public Internet, and if\n   it is known that congestion is not\
    \ a problem in the access network,\n   alternative transport protocols MAY be\
    \ appropriate vehicles for\n   experimentation.  Implementations of CARD MAY support\
    \ UDP for such\n   purposes.  In that case, the researcher MUST be careful to\n\
    \   accommodate good Internet transport protocol engineering practices,\n   such\
    \ as using retransmits with exponential backoff.  In addition,\n   whether SCTP\
    \ is an appropriate transport protocol for all inter-\n   router CARD operations\
    \ is an open research question.  Investigation\n   of this issue (for example,\
    \ to determine whether a lighter-weight\n   protocol might be more appropriate\
    \ than SCTP) may be of interest to\n   some researchers.\n"
- title: 5.2.2.  Protocol Payload Types
  contents:
  - "5.2.2.  Protocol Payload Types\n   The AR-AR interface MUST insert the CARD Request\
    \ option and CARD\n   Reply option directly into the body of the SCTP User Data\
    \ field.  The\n   sequence number for the CARD Request on the AR-AR interface\
    \ MUST be\n   initialized to zero when the AR reboots, and MUST be incremented\n\
    \   every time a CARD Request message is sent.  The replying AR MUST\n   include\
    \ a sequence number from the CARD Request in the CARD Reply.\n   If an unsolicited\
    \ CARD Reply is sent, the sending AR MUST increment\n   the sequence number. \
    \ Sequentially increasing sequence numbers allows\n   the receiving AR to determine\
    \ whether the information has already\n   been received.\n   On the AR-AR interface,\
    \ the Capability Container parameter is used to\n   convey capabilities between\
    \ ARs.  Optionally, the Preferences\n   parameter can be used for capability pre-filtering\
    \ during the inter-\n   AR capability discovery procedure.  Payload types and\
    \ encoding rules\n   are the same as those described for the respective sub-option\
    \ types\n   in Section 5.1 for the MN-AR interface.  The same TLV-encoded format\n\
    \   is used to attach the options as payload to the protocol main header.\n  \
    \ Additionally, an AR can set the T flag in the CARD Request header in\n   order\
    \ to obtain the certificates for the CAR.  The description of\n   sub-options\
    \ in Section 5.1.3 includes information on what flag\n   settings are prohibited\
    \ on the AR-AR interface.\n"
- title: 6.  Security Considerations
  contents:
  - '6.  Security Considerations

    '
- title: 6.1.  Veracity of CARD Information
  contents:
  - "6.1.  Veracity of CARD Information\n   The veracity of the CARD protocol depends\
    \ on the ability of an AR to\n   obtain accurate information about geographically\
    \ neighboring ARs, and\n   to provide accurate information about its own APs and\
    \ capabilities to\n   other ARs.  The CARD protocol described in the body of this\
    \ document\n   does not contain any support for determining the AR-to-AP mapping\
    \ or\n   capabilities, either for a specific AR or for a CAR.  Therefore,\n  \
    \ methods for determining the accuracy of the information exchanged\n   between\
    \ ARs are out of scope for the base CARD protocol.  The\n   appendices of this\
    \ document describe procedures for discovering the\n   identities of the geographically\
    \ adjacent ARs and APs (including\n   capabilities) and discuss relevant security\
    \ considerations.\n   Alternatively, this information could be statically configured\
    \ into\n   the AR.\n"
- title: 6.2.  Security Association between AR and AR
  contents:
  - "6.2.  Security Association between AR and AR\n   CARD contains support allowing\
    \ ARs to exchange capability\n   information.  If this protocol is not protected\
    \ from modification, a\n   malicious attacker can modify the information.  Also,\
    \ if the\n   information is delivered in plain text, a third party can read it.\n\
    \   To prevent the information from being compromised, the CARD messages\n   between\
    \ ARs MUST be authenticated.  The messages also SHOULD be\n   encrypted for privacy\
    \ of the information, if required.\n   Confidentiality might be required if the\
    \ traffic between two ARs in\n   an operator's network traversed the public Internet,\
    \ for example.\n   Two ARs engaging in the CARD protocol MUST use IKE [HarCar98]\
    \ to\n   negotiate an IPsec ESP security association for message\n   authentication.\
    \  If confidentiality is desired, the two ARs MUST\n   additionally negotiate\
    \ an ESP security association for encryption.\n   Replay protection SHOULD also\
    \ be enabled with IKE.  To protect CARD\n   protocol messages between ARs, IPsec\
    \ ESP [AtKe98] MUST be used with a\n   non-null integrity protection and origin\
    \ authentication algorithm and\n   SHOULD be used with a non-null encryption algorithm\
    \ for protecting\n   the confidentiality of the CARD information.\n   An AR can\
    \ provide the certificates for its CARs if the certificates\n   are available.\
    \  The AR requests certificates from its CARs by setting\n   the T flag in the\
    \ CARD Request message.  All certificates are sent.\n   If CARD is used to exchange\
    \ information between different\n   administrative domains, additional security\
    \ policy issues may apply.\n   Such issues are out of the scope of this document.\
    \  Use of CARD\n   between administrative domains is not recommended at this time,\
    \ until\n   the policy issues involved are more thoroughly understood.\n"
- title: 6.3.  Security Association between AR and MN
  contents:
  - "6.3.  Security Association between AR and MN\n   A malicious node can send bogus\
    \ CARD Reply messages to MNs by\n   masquerading as the AR.  The MN MUST authenticate\
    \ the CARD Reply\n   messages from the AR.  Since establishing an IPSec security\n\
    \   association between the MN and AR is likely to be a performance\n   issue,\
    \ IKE is not an appropriate mechanism for setting up the\n   security association.\
    \  Instead, the SEND security association is used\n   [Arkko04].  ARs MUST include\
    \ a SEND Signature Option on CARD Reply\n   messages.  The format of the signature\
    \ option is the same for both\n   IPv4 and IPv6 CARD, though SEND itself is only\
    \ defined for IPv6.  A\n   Mobile IPv4 ICMP Foreign Agent Advertisement option\
    \ type code for the\n   SEND signature option [Ke04] has been allocated.\n   No\
    \ authentication is required for CARD Requests since CARD\n   information is provided\
    \ by the AR to optimize link access.  In\n   contrast, CARD Reply authentication\
    \ is required because a bogus AR\n   could provide the MN with CARD information\
    \ that would lead the MN to\n   handover to a bogus router, which could steal\
    \ traffic or propagate a\n   denial of service attack on the MN.  The asymmetry\
    \ of the\n   authentication requirement is the same as that involving Router\n\
    \   Advertisements in IPv6 router discovery [Arkko04].\n   Since CARD is a discovery\
    \ protocol, confidentiality is not generally\n   necessary on the MN-AR interface.\
    \  In specific cases where different\n   network operators share the same access\
    \ network infrastructure,\n   network operators may want to hide information about\
    \ operator-\n   specific capabilities for business reasons.  The base CARD protocol\n\
    \   contains no support for such cases.  However, should such a case\n   arise\
    \ in the future, an AVP for an encrypted capability can be\n   defined at that\
    \ time.\n"
- title: 6.4.  Router Certificate Exchange
  contents:
  - "6.4.  Router Certificate Exchange\n   Because SEND is only available in IPv6,\
    \ the procedures for obtaining\n   certificates differ depending on whether CARD\
    \ is used with IPv4 or\n   IPv6.  In IPv6, when the MN receives a CARD reply with\
    \ signature from\n   an AR for which it does not have a certificate, it SHOULD\
    \ use SEND\n   DCS/DCA to obtain the AR's certificate chain.  ARs MUST be configured\n\
    \   with a certification path for this purpose, and MNs MUST be\n   configured\
    \ with a set of certificates for shared trusted anchors to\n   allow verification\
    \ of the AR certificates.  An MN may not necessarily\n   need to use Cryptographically\
    \ Generated Addresses (CGAs) with CARD,\n   so CGA support is OPTIONAL for CARD.\
    \  A certificate profile for ARs\n   is described in the SEND specification [Arkko04].\n\
    \   In IPv4, there is no DCS/DCA message for obtaining the certificate.\n   If\
    \ the MN does not have a certificate for the AR, the MN sends a CARD\n   Request\
    \ message containing the L2 ID of its current AP and one\n   Trusted Anchor sub-option\
    \ (Section 5.1.3.6) for each shared trusted\n   anchor for which the MN has a\
    \ certificate, to obtain the\n   certification path for the current AR.  The Component\
    \ field of the\n   Trusted Anchor sub-option is set to 65535 to indicate that\
    \ the entire\n   certification path is needed.  No other options should be included\
    \ in\n   the request.  The AR replies by sending a CARD Reply containing the\n\
    \   L2 ID sub-option sent in the request, an Address sub-option for\n   itself,\
    \ and a Router Certificate sub-option (Section 5.1.3.7)\n   containing one certificate\
    \ in its certification path that matches one\n   of the requested trust anchors,\
    \ and no other sub-options, setting the\n   Context-ID of all sub-options to match.\
    \  The All Components field is\n   set to the path length, and the Component field\
    \ is set to the number\n   of this component in the path.  If the path is longer\
    \ than one\n   certificate, the AR sends the L2 ID sub-option and the Address\
    \ sub-\n   option in the first certificate and the other certificates in\n   separate\
    \ ICMP messages, due to the limitation on ICMP message length,\n   with the same\
    \ Context-ID set on each Route Certificate sub-option,\n   and with the Component\
    \ field properly set.  The router SHOULD NOT\n   send the trusted anchor's certificate\
    \ and SHOULD send certificates in\n   order from the certificate after the trusted\
    \ anchor.  If the trusted\n   anchor option does not match any certificate, the\
    \ AR returns the\n   Trusted Anchor sub-options in the reply.  The MN SHOULD immediately\n\
    \   conduct a Certificate Revocation List (CRL) check on any certificates\n  \
    \ obtained through CARD certificate exchange, to make sure that the\n   certificates\
    \ are still valid.\n   Certification paths for CARs may be fetched in advance\
    \ of handover by\n   requesting them as part of the CARD protocol.  In that case,\
    \ the MN\n   includes Trusted Anchor sub-options in the CARD request along with\n\
    \   the L2 ID sub-option for the AP for which the CAR certificate is\n   desired,\
    \ and the AR replies as above, except that the L2 ID, address,\n   and certificates\
    \ are for the CAR instead of for the AR itself.  This\n   allows the MN to skip\
    \ the DCS/DCA or CARD certificate exchange when\n   it moves to a new router.\n\
    \   Because the amount of space in an ICMP message is limited, the router\n  \
    \ certification paths SHOULD be kept short.\n"
- title: 6.5.  DoS Attack
  contents:
  - "6.5.  DoS Attack\n   An AR can be overwhelmed with CARD Request messages.  The\
    \ AR SHOULD\n   implement a rate-limiting policy so that it does not send or process\n\
    \   more than a certain number of messages per period.  The following is\n   a\
    \ suggested rate limiting policy.  If the number of CARD messages\n   exceeds\
    \ CARD_REQUEST_RATE, the AR SHOULD begin to drop messages\n   randomly until the\
    \ rate is reduced.  MNs SHOULD avoid sending\n   messages more frequently than\
    \ CARD_REQUEST_RATE.  ARs SHOULD also\n   avoid sending unsolicited CARD Replies\
    \ or CARD Requests more\n   frequently than CARD_MIN_UPDATE_INTERVAL, but, in\
    \ this case, the\n   existence of an IPsec security association ensures that messages\
    \ from\n   unknown entities will be discarded immediately during IPsec\n   processing.\n\
    \   MNs MUST discard CARD Replies for which there is no outstanding CARD\n   Request,\
    \ as indicated by the sequence number.\n"
- title: 6.6.  Replay Attacks
  contents:
  - "6.6.  Replay Attacks\n   To protect against replay attacks on the AR-AR interface,\
    \ ARs SHOULD\n   enable replay protection when negotiating the IPsec security\n\
    \   association using IKE.\n   On the MN-AR interface, the MN MUST discard any\
    \ CARD Replies for\n   which there is no outstanding request, as determined by\
    \ the sequence\n   number.  For ARs, an attacker can replay a previous request\
    \ from an\n   MN, but the attack is without serious consequence because the MN\n\
    \   ignores the reply in any case.\n"
- title: 7.  Protocol Constants
  contents:
  - "7.  Protocol Constants\n      Constant           Section    Default Value   \
    \  Meaning\n   --------------------------------------------------------------------\n\
    \   CARD_REQUEST_RETRY      5.1.1    2 seconds    Wait interval before\n     \
    \                                            initial retransmit\n            \
    \                                     on MN-AR interface.\n   CARD_RETRY_MAX \
    \         5.1.1    15 seconds   Give up on retry\n                           \
    \                      on MN-AR interface.\n   CARD_STARTUP_WAIT       5.2.1 \
    \   1-3 seconds  Maximum startup wait\n                                      \
    \           for an AR before\n                                               \
    \  performing AR-AR\n                                                 CARD.\n\
    \   CARD_MIN_UPDATE_INTERVAL 5.2.1   60 seconds   Minimum AR-AR update\n     \
    \                                            interval.\n   CARD_REQUEST_RATE \
    \       6.5     2 requests/  Maximum number of\n                             \
    \         sec.       messages before\n                                       \
    \          AR institutes rate\n                                              \
    \   limiting.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   See [Ke04] for instructions on IANA allocation.\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [Brad97]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [Stew00]   Stewart, R., Xie, Q., Morneault, K., Sharp, C.,\n             \
    \ Schwarzbauer, H., Taylor, T., Rytina, I., Kalla, M.,\n              Zhang, L.,\
    \ and V. Paxson, \"Stream Control Transmission\n              Protocol\", RFC\
    \ 2960, October 2000.\n   [AtKe98]   Kent, S. and R. Atkinson, \"IP Encapsulating\
    \ Security\n              Payload (ESP)\", RFC 2406, November 1998.\n   [HarCar98]\
    \ Harkins, D. and D. Carrel, \"The Internet Key Exchange\n              (IKE)\"\
    , RFC 2409, November 1998.\n   [Arkko04]  Arkko, J., Kempf, J., Zill, B., and\
    \ P. Nikander, \"SEcure\n              Neighbor Discovery (SEND)\", RFC 3971,\
    \ March 2005.\n   [Ke04]     Kempf, J., \"Instructions for Seamoby and Experimental\n\
    \              Mobility Protocol IANA Allocations\", RFC 4065, July 2005.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [TKCK02]   Trossen, D., Krishanmurthi, G. Chaskar,\
    \ H., Kempf, J.,\n              \"Issues in candidate access router discovery\
    \ for seamless\n              IP-level handoffs\", Work in Progress.\n   [MaKo03]\
    \   Manner, J. and M. Kojo, \"Mobility Related Terminology\",\n              RFC\
    \ 3753, June 2004.\n   [Kood03]   Koodli, R., Ed., \"Fast Handovers for Mobile\
    \ IPv6\", RFC\n              4068, July 2005.\n   [Funa02]   Funato, D., et al.,\
    \ \"Geographically Adjacent Access Router\n              Discovery Protocol\"\
    , Work in Progress.\n   [Tros03]   Trossen, D., et al., \"A Dynamic Protocol for\
    \ Candidate\n              Access-Router Discovery\", Work in Progress.\n   [ShGi00]\
    \   Shim, E. and R. Gitlin, \"Fast Handoff Using Neighbor\n              Information\"\
    , Work in Progress.\n   [Malk03]   El Malki, K., et al., \"Low Latency Handoffs\
    \ in Mobile\n              IPv4\", Work in Progress.\n"
- title: 11.  Contributors
  contents:
  - "11.  Contributors\n   The authors would like to thank Vijay Devarapalli (Nokia)\
    \ and Henrik\n   Petander (Helsinki University of Technology) for formally reviewing\n\
    \   the protocol specification document and providing valuable comments\n   and\
    \ input for technical discussions.  The authors would also like to\n   thank James\
    \ Kempf for reviewing and for providing a lot of valuable\n   comments and editing\
    \ help.\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   The authors would like to thank (in alphabetical order)\
    \ Dirk Trossen,\n   Govind Krishnamurthi, James Kempf, Madjid Nakhjiri, Pete McCann,\n\
    \   Rajeev Koodli, Robert C. Chalmers, and other members of the Seamoby\n   WG\
    \ for their valuable comments on the previous versions of the\n   document, as\
    \ well as for the general CARD-related discussion and\n   feedback.  In addition,\
    \ the authors would like to thank Erik Nordmark\n   for providing valuable insight\
    \ about the piggybacking of CARD options\n   upon Fast Mobile IPv6 messages.\n"
- title: Appendix A.  Maintenance of Address Mapping Tables in Access Routers
  contents:
  - "Appendix A.  Maintenance of Address Mapping Tables in Access Routers\n   This\
    \ appendix provides information on two optional CAR table\n   maintenance schemes\
    \ for reverse address mapping in access routers.\n   These schemes replace static\
    \ configuration of the AP L2 ID-to-CAR IP\n   address mapping in the CAR table.\
    \  Details on these mechanisms are\n   out of the scope of this document.  The\
    \ intention of this appendix is\n   to provide only a basic idea on flexible extensions\
    \ to the CARD\n   protocol, as described in this document.\n"
- title: Appendix A.1.  Centralized Approach Using a Server Functional Entity
  contents:
  - "Appendix A.1.  Centralized Approach Using a Server Functional Entity\n   The\
    \ centralized approach performs CARD over the MN-AR interface as\n   described\
    \ in Section 4 of this document.  Additionally, the\n   centralized approach introduces\
    \ a new entity, the CARD server, to\n   assist the current AR in performing reverse\
    \ address translation.  The\n   centralized approach requires that neighboring\
    \ ARs register with the\n   CARD server to populate the reverse address translation\
    \ table.  The\n   registration of AR addresses with the CARD server is performed\
    \ prior\n   to initiation of any reverse address translation request.\n   Figure\
    \ A.1 illustrates a typical scenario of the centralized CARD\n   operation.  In\
    \ this example, ARs have registered their address\n   information with a CARD\
    \ server in advance.  When an MN discovers the\n   L2 ID of APs during L2 scanning,\
    \ it passes one or more L2 IDs to its\n   current AR, and the AR resolves them\
    \ to the IP address of the AR.\n   For this, the AR first checks whether the mapping\
    \ information is\n   locally available in its CAR table.  If it is not, the MN's\
    \ current\n   AR queries a CARD server with the L2 ID.  In response, the CARD\n\
    \   server returns the IP address of the CAR to the current AR.  Then,\n   the\
    \ current AR directly contacts the respective CAR and performs\n   capability\
    \ discovery with it.  The current AR then passes the IP\n   address of the CAR\
    \ and associated capabilities to the MN.  The\n   current AR then stores the resolved\
    \ IP address within its local CAR\n   table.  The centralized CARD protocol operation\
    \ introduces additional\n   signaling messages, which are exchanged between the\
    \ MN's current AR\n   and the CARD server.  The signaling messages between an\
    \ AR and the\n   CARD server function are shown with the preceding identifier\
    \ \"AR-\n   Server\", referring to the associated interface.\n   An initial idea\
    \ of performing reverse address translation using a\n   centralized server is\
    \ described in [Funa02].\n                                   +----------+\n  \
    \                   +------------>|   CARD   |<-------------+\n              \
    \       |+------------|  Server  |-------------+|\n                     ||   \
    \         +----------+             ||\n                     ||               \
    \                      ||\n                     ||             ~~~~~~~~~~~   \
    \          ||\n         (3)AR-Server||(4)AR-Server{           }            ||(0)\
    \ CARD\n             CARD    ||    CARD   {             }           ||Reg Req/\n\
    \           Request   ||   Reply  {    IP Cloud   }          |  Reply\n      \
    \               ||           {             }           ||\n                  \
    \   ||            {           }            ||\n                     |V       \
    \      ~~~~~~~~~~~             V|\n                 +---------+  (5)AR-AR CARD\
    \ Request   +-----+-----+\n                 | Current |------------------------->|\
    \ CAR | CAR |\n                 |   AR    |<-------------------------|  1  | \
    \ 2  |\n                 +---------+  (6)AR-AR CARD Reply     +-----+-----+\n\
    \                    ^ |                                  |     |\n          \
    \ (2)MN-AR | |(7)MN-AR                          |     |\n              CARD  |\
    \ |   CARD                           |     |\n             Request| V   Reply\
    \                        +---+ +---+\n              +--------------+    (1) AP1\
    \ L2 ID     +--|AP1| |AP2|\n              |    Mobile    |<---------------------+\
    \  +---+ +---+\n              |     Node     |<--------------------------------+\n\
    \              +--------------+    (1) AP2 L2 ID\n              Figure A.1: Centralized\
    \ Approach for L2-L3 Mapping\n"
- title: Appendix A.2.  Decentralized Approach Using Mobile Terminals'
  contents:
  - "Appendix A.2.  Decentralized Approach Using Mobile Terminals'\n             \
    \  Handover\n   This approach performs CARD over the MN-AR interface as described\
    \ in\n   Section 4.  However, it employs one additional message, called the\n\
    \   Router Identity message, over the MN-AR interface to enable ARs to\n   learn\
    \ about the reverse address translation tables of their\n   neighboring ARs, without\
    \ being dependent on any centralized server.\n   In this approach, CAR identities\
    \ in the CAR table of an AR are\n   maintained as soft state.  The entries for\
    \ CARs are removed from the\n   CAR table if they are not refreshed before the\
    \ timeout period expires\n   and are created or refreshed according to the following\
    \ mechanism.\n   The key idea behind the decentralized approach is to bootstrap\
    \ and\n   maintain the association between two ARs as neighbors of each other\n\
    \   using the actual handover of MNs occurring between them as input.\n   The\
    \ first handover between any two neighboring ARs serves as the\n   bootstrap handover\
    \ to invoke the discovery procedure, and the\n   subsequent handover serves to\
    \ refresh the association between the\n   neighboring ARs.  After the bootstrap\
    \ handover, the MNs can perform\n   CARD and thus seamless handover using the\
    \ CAR information.  This idea\n   was presented in [ShGi00] and [Tros03].\n  \
    \ Maintenance of the CAR table is done by using an additional option\n   for the\
    \ CARD protocol operation performed between an MN and its\n   current AR.  This\
    \ message serves as Router Identity message.\n   Upon the completion of an inter-AR\
    \ handover, the MN SHOULD send a\n   Router Identity message to its current AR.\
    \  This message contains the\n   identity (IP address) of the previous AR (pAR),\
    \ and can be sent as a\n   specific sub-option in the MN-AR CARD Request message.\
    \  It SHOULD be\n   acknowledged with the MN-AR CARD Reply.  The Router Identity\
    \ message\n   enables the MN's current AR to learn that the pAR (still) has an\
    \ AP\n   whose coverage overlaps with one of the APs of the current AR, and\n\
    \   vice versa.  With this information, the MN's current AR can create or\n  \
    \ refresh an entry for the pAR as its neighbor.  If handover is no\n   longer\
    \ possible between two ARs, the associated entries eventually\n   timeout and\
    \ are removed from each AR's CAR table.\n   Prior to trusting the MN's report,\
    \ however, the current AR may\n   perform a number of checks to ensure the validity\
    \ of the received\n   information.  One simple method is to verify the accuracy\
    \ of the\n   Router Identity message by sending an AR-AR CARD Request message\
    \ to\n   the pAR.  The AR-AR CARD Request includes the identity of the MN.\n \
    \  Upon receiving this message, the pAR verifies that the MN was indeed\n   attached\
    \ to it during a reasonable past interval and responds to the\n   current AR.\
    \  In this way, each handover of a MN results in a bi-\n   directional discovery\
    \ process between the two participating ARs.\n   Upon receiving a positive verification\
    \ response, the current AR\n   creates or refreshes, as applicable, the entry\
    \ for the pAR in its\n   local CAR table.  In the former case, the current AR\
    \ and the pAR\n   exchange capabilities using the AR-AR CARD Request and AR-AR\
    \ CARD\n   Reply protocol messages.  When a new entry is created, the ARs MUST\n\
    \   exchange their reverse address translation tables.  They may exchange\n  \
    \ other capabilities at this time or may defer exchange to a later time\n   when\
    \ some MN undergoing handover between them performs CARD as\n   described in Section\
    \ 4.  In the latter (refresh) case, ARs may\n   exchange capabilities or defer\
    \ exchanges until a later time when\n   another MN undergoes handover.\n   Finally,\
    \ note that in a handover-based protocol, a first handover\n   between a pAR and\
    \ an MN's current AR cannot use CARD, as this\n   handover bootstraps the CAR\
    \ table.  However, in the long term, such a\n   handover will only amount to a\
    \ small fraction of total successful\n   handover between the two ARs.  Also,\
    \ if the MN engaging in such a\n   first handover is running a non-delay sensitive\
    \ application at the\n   time of handover, the user may not even realize its impact.\n"
- title: Appendix B.  Application Scenarios
  contents:
  - "Appendix B.  Application Scenarios\n   This section provides two examples of\
    \ application scenarios for CARD\n   protocol operation.  One scenario describes\
    \ a CARD protocol operation\n   in a Mobile IPv6 (MIPv6) network, providing access\
    \ to the\n   infrastructure via wireless LAN Access Points and associated Access\n\
    \   Routers.  A second scenario describes CARD protocol operation in a\n   Mobile\
    \ IPv6-enabled network, which has enhanced support for fast\n   handover integrated\
    \ (Fast Mobile IPv6), also providing wireless LAN\n   access to the infrastructure.\n\
    \   This application scenario assumes a moving MN having access to the\n   infrastructure\
    \ through wireless LAN (IEEE802.11) APs.  Mobility\n   management is performed\
    \ using the Mobile IPv6 protocol.  The\n   following figure illustrates the assumed\
    \ access network design.\n"
- title: Appendix B.1.  CARD Operation in a Mobile IPv6-Enabled Wireless LAN
  contents:
  - "Appendix B.1.  CARD Operation in a Mobile IPv6-Enabled Wireless LAN\n       \
    \        Network\n                       -----------------------------\n     \
    \                 /                             \\   +----+\n                \
    \      |           NETWORK           |---| HA |\n                      \\    \
    \                         /   +----+\n                       -----------------------------\n\
    \                        |                         |\n                     +-----+\
    \                   +-----+\n                     | AR1 |---------+         |\
    \ AR2 |\n                     +-----+         |         +-----+\n            \
    \            |  subnet 1  |            |subnet 2\n                     +-----+\
    \      +-----+      +-----+\n                     | AP1 |      | AP2 |      |\
    \ AP3 |\n                     +-----+      +-----+      +-----+\n            \
    \            ^            ^            ^\n                         \\\n      \
    \                    \\\n                           \\\n                     \
    \       v\n                         +-----+\n                         | MN  |\
    \ - - ->>>- - - ->>>\n                         +-----+\n                   Figure\
    \ B.1: Assumed Network Topology\n   A Mobile IPv6 Home Agent (HA) maintains location\
    \ information for the\n   MN in its binding cache.  In Figure B.1, the MN holds\
    \ a care-of\n   address for the subnet 1, supported by AR1.  As the MN moves,\
    \ the\n   MN's current environment offers two further wireless LAN APs with\n\
    \   increasing link-quality as candidate APs for a handover.  To\n   facilitate\
    \ decision making, parameters associated with ARs are taken\n   into account during\
    \ the decision process.  The AR-related parameters\n   can be, for example, available\
    \ QoS resources or the type of access\n   technologies supported from an AR. \
    \ To learn about these candidate\n   ARs' capabilities and associated IP address\
    \ information, the MN\n   performs CARD.  This requires retrieving information\
    \ about candidate\n   APs' L2 IDs.  Furthermore, associated link-quality parameters\
    \ are\n   retrieved to ascertain whether approaching APs are eligible\n   candidates\
    \ for a handover.  If AP2 and AP3 are suitable candidate\n   APs, the MN encapsulates\
    \ both L2 IDs (AP2 and AP3) into a CARD\n   Request message, using the L2 ID sub-option,\
    \ and sends the message to\n   its current AR (AR1).\n   AR1 resolves each L2\
    \ ID listed in L2 ID options to the associated IP\n   address of the respective\
    \ CAR, making use of its local CAR table.\n   According to the environment illustrated\
    \ in Figure B.1, the\n   associated AR IP address of the candidate AP2 will be\
    \ the same as the\n   MN is currently attached to, which is AR1.  The corresponding\
    \ IP\n   address of the candidate AR, to which AP3 is connected, is the\n   address\
    \ of AR2.  IP addresses of the MN's CARs are now known to AR1,\n   which retrieves\
    \ the CARs' capabilities from the CAR table.  Assuming\n   that it has valid entries\
    \ for respective capability parameters to\n   refresh dynamic capabilities, whose\
    \ associated lifetimes in AR1's CAR\n   table have expired, AR1 performs Inter-AR\
    \ CARD for capability\n   discovery.  Since capability information for AR1 is\
    \ known to AR1, a\n   respective Inter-AR CARD Request is sent only to AR2.  In\
    \ response,\n   AR2 sends a CARD Reply message back to AR1, encapsulating the\n\
    \   requested capability parameters with the signaling message in a\n   Capability\
    \ Container sub-option.\n   Next, AR1 sends its own capabilities and the dynamically\
    \ discovered\n   ones of AR2 back to the MN via a CARD Reply message.  Furthermore,\n\
    \   AR1 stores the capability parameters of AR2 with the associated\n   lifetimes\
    \ in its local CAR table.\n   Upon receipt of the CARD Reply message, the MN performs\
    \ target AR\n   selection, taking AR1's and AR2's capability parameters and\n\
    \   associated APs' link-quality parameters into account.  If the\n   selected\
    \ AP is AP2, no IP handover needs to be performed.  If AP3 and\n   the associated\
    \ AR2 are selected, the MN needs to perform an IP\n   handover according to the\
    \ Mobile IPv6 protocol operation.\n   Figure B.2 illustrates the signaling flow\
    \ of the previously described\n   application scenario of CARD within a Mobile\
    \ IPv6-enabled network.\n     MN           AP1     AR1     AP2         AP3   \
    \                AR2\n     |             |       |       |           |       \
    \              |\n     |  connected  |       |       |           |           \
    \          |\n     0-------------0-------0       |           |               \
    \      |\n     |             |       |       |           |                   \
    \  |\n     |             |       |       |           |                     |\n\
    \     |                             |           |                     |\n    \
    \ | <~~~~~~~~~L2-SCAN (AP2)~~~~~|           |                     |\n     | <~~~~~~~~~L2-SCAN\
    \ (AP3)~~~~~~~~~~~~~~~~~|                     |\n     |                      \
    \       |           |                     |\n     | (MN-AR) CARD Req    |    \
    \   |           |                     |\n     |-------------------->|        \
    \  (AR-AR) CARD Req               |\n     |             |       |---------------------------------------->|\n\
    \     |             |       |          (AR-AR) CARD Repl              |\n    \
    \ | (MN-AR) CARD Repl   |<----------------------------------------|\n     |<--------------------|\
    \       |           |                     |\n     |             |       |    \
    \   |           |                     |\n   [target AR      |       |       |\
    \           |                     |\n   selection]      |       |       |    \
    \       |                     |\n     |             |       |       |        \
    \   |                     |\n     //           //       //      //         //\
    \                     //\n   [either...]     |       |       |           |   \
    \                  |\n     |             |       |       |           |       \
    \              |\n     |-------- L2 attach --------->|           |           \
    \          |\n     |             |       |       |           |               \
    \      |\n     |      connected      |       |           |                   \
    \  |\n     0---------------------0-------0           |                     |\n\
    \     |             |       |       |           |                     |\n    \
    \ //            //      //      //         //                     //\n   [...\
    \ or]        |       |       |           |                     |\n     |     \
    \        |       |       |           |                     |\n     |---------------\
    \ L2 attach -------------->|                     |\n     |             |     \
    \  |       |           |                     |\n     |      connected      | \
    \      |           |                     |\n     0-----------------------------------------0---------------------0\n\
    \     |             |       |       |           |                     |\n    \
    \ |                                         |                     |\n     |  \
    \   MIPv6 Binding Update to the HA      |                     |\n     |------------------------------------------------\
    \ - - - >       |\n     |             |       |       |           |          \
    \           |\n     Figure B.2. CARD Protocol Operation within a Mobile IPv6-Enabled\n\
    \                 Wireless LAN Network\n"
- title: Appendix B.2.  CARD Operation in a Fast Mobile IPv6 Network
  contents:
  - "Appendix B.2.  CARD Operation in a Fast Mobile IPv6 Network\n   This application\
    \ scenario assumes that ARs can perform the fast\n   handover protocol sequence\
    \ for Mobile IPv6 [Kood03].  The MN scans\n   for new APs for handover, similar\
    \ to Figure B.1.  To discover the ARs\n   (CARs), the MN attaches a MN-AR CARD\
    \ Request option to the ICMP-type\n   Fast Mobile IPv6 RtSolPr message, which\
    \ is sent to the MN's current\n   AR (pAR, previous AR).\n   Candidate APs' L2\
    \ IDs are encapsulated using the CARD protocol's L2\n   ID sub-options, which\
    \ allow the MN to send multiple L2 IDs of\n   candidate APs to its current AR.\
    \  (This potentially replaces the \"New\n   Attachment Point Link-Layer Address\"\
    \ option of the Fast Mobile IPv6\n   protocol.)\n   The pAR resolves the received\
    \ list of candidate APs' L2 IDs to the IP\n   addresses of associated CARs.  The\
    \ pAR checks its local CAR table to\n   retrieve information about the CARs' capabilities.\
    \  If any table\n   entries have expired, the pAR acquires this CAR's capabilities\
    \ by\n   sending an AR-AR CARD Request to the respective CAR.  The CAR replies\n\
    \   with an AR-AR CARD Reply message, encapsulating all capabilities in a\n  \
    \ Capability Container sub-option and attaching them to the CARD Reply\n   option.\
    \  On receipt of the CARs' capability information, the pAR\n   updates its local\
    \ CAR table and forwards the address and capability\n   information to the MN\
    \ by attaching a MN-AR CARD Reply option to the\n   Fast Mobile IPv6 PrRtAdv message.\
    \  When the MN's handover is\n   imminent, the MN selects its new AR and the associated\
    \ new AP from\n   the discovered list of CARs.  According to the Fast Mobile IPv6\n\
    \   protocol, the MN notifies the pAR of the selected new AR with the\n   Fast\
    \ Binding Update (F-BU) message, allowing the pAR to perform a\n   fast handover\
    \ according to the Fast Mobile IPv6 protocol.\n   Optionally, the pAR could perform\
    \ selection of an appropriate new AR\n   on behalf of the MN after the pAR has\
    \ the MN's CARs' addresses and\n   associated capabilities available.  The MN\
    \ must send its requirements\n   for the selection process to its pAR together\
    \ with the MN-AR CARD\n   Request message After the pAR has selected the MN's\
    \ new AR, the\n   address and associated capabilities of the chosen new AR are\
    \ sent to\n   the MN with the CARD Reply option in the Fast Mobile IPv6 PrRtAdv\n\
    \   message.\n   Figure B.3 illustrates how CARD protocol messages and functions\
    \ work\n   with the Fast Mobile IPv6 protocol.\n         MN                  \
    \  pAR                  NAR       CAR2\n          |                     |    \
    \             as CAR1       |\n          |                     |             \
    \       |          |\n          |-------RtSolPr------>|                    | \
    \         |\n          |  [MN-AR CARD Req]   |-- AR-AR CARD Req*->|          |\n\
    \          |                     |-- AR-AR CARD Req*------------>|\n         \
    \ |                     |<--AR-AR CARD Repl*------------|\n          |       \
    \              |<--AR-AR CARD Repl*-|          |\n          |<------PrRtAdv-------|\
    \                    |          |\n          |  [MN-AR CARD Repl]  |         \
    \           |          |\n          |                     |                  \
    \  |          |\n     NAR selection              |                    |      \
    \    |\n          |------F-BU---------->|--------HI--------->|          |\n  \
    \        |                     |<------HACK---------|          |\n          |\
    \          <--F-BACK--|--F-BACK-->         |          |\n          |         \
    \            |                    |          |\n      Disconnect             \
    \   |                    |          |\n          |                   forward \
    \               |          |\n          |                   packets===============>|\
    \          |\n          |                     |                    |         \
    \ |\n          |                     |                    |          |\n     \
    \  Connect                  |                    |          |\n          |   \
    \                  |                    |          |\n          RS (with FNA option)======================>|\
    \          |\n          |<-----------RA (with NAACK option)--------|         \
    \ |\n          |<=================================== deliver packets |\n     \
    \     |                                          |          |\n          Figure\
    \ B.3. Fast Handover Protocol Sequence with\n                      CARD Protocol\
    \ Options\n   * In Figure B.3, the CARD protocol interaction between the pAR and\n\
    \     CARs is only required if the lifetime of any capability entries in\n   \
    \  the pAR's CAR table have expired.  Otherwise, the pAR can respond\n     to\
    \ the requesting MN immediately after retrieving the CARs'\n     addresses and\
    \ capability information from its CAR table.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hemant Chaskar\n   AirTight Networks\n   339 N. Bernardo\
    \ Avenue\n   Mountain View, CA 94043, USA\n   EMail: hemant.chaskar@airtightnetworks.net\n\
    \   Daichi Funato\n   NTT DoCoMo, Inc.\n   Communication Systems Laboratory\n\
    \   Wireless Laboratories\n   3-5, Hikarinooka, Yokosuka,\n   Kanagawa 239-8536,\
    \ Japan\n   Phone: +81-46-840-3921\n   EMail: funato@mlab.yrp.nttdocomo.co.jp\n\
    \   Marco Liebsch\n   NEC Network Laboratories\n   Kurfuersten-Anlage 36,\n  \
    \ 69115 Heidelberg, Germany\n   Phone: +49 6221-90511-46\n   EMail: marco.liebsch@netlab.nec.de\n\
    \   Eunsoo Shim\n   Panasonic Digital Networking Laboratory\n   Panasonic Corporation\n\
    \   Two Research Way\n   Princeton, NJ 08540\n   Phone: +1-609-734-7354\n   EMail:\
    \ eunsoo@research.panasonic.com\n   Ajoy Singh\n   Motorola Inc\n   2G11, 1501\
    \ West Shure Dr.\n   Arlington Heights, IL 60004, USA\n   Phone: +1 847-632-6941\n\
    \   EMail: asingh1@email.mot.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
