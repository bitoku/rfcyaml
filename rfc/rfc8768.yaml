- title: __initial_text__
  contents:
  - '        Constrained Application Protocol (CoAP) Hop-Limit Option

    '
- title: Abstract
  contents:
  - "Abstract\n   The presence of Constrained Application Protocol (CoAP) proxies\
    \ may\n   lead to infinite forwarding loops, which is undesirable.  To prevent\n\
    \   and detect such loops, this document specifies the Hop-Limit CoAP\n   option.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8768.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Intended Usage\n   2.  Terminology\n\
    \   3.  Hop-Limit Option\n   4.  Debugging and Troubleshooting\n   5.  HTTP Mapping\
    \ Considerations\n   6.  IANA Considerations\n     6.1.  CoAP Response Code\n\
    \     6.2.  CoAP Option Number\n   7.  Security Considerations\n   8.  References\n\
    \     8.1.  Normative References\n     8.2.  Informative References\n   Acknowledgements\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   More and more applications are using the Constrained Application\n\
    \   Protocol (CoAP) [RFC7252] as a communication protocol between\n   application\
    \ agents.  For example, [DOTS-SIG-CHANNEL] specifies how\n   CoAP is used as a\
    \ signaling protocol between domains under\n   distributed denial-of-service (DDoS)\
    \ attacks and DDoS mitigation\n   providers.  In such contexts, a CoAP client\
    \ can communicate directly\n   with a server or indirectly via proxies.\n   When\
    \ multiple proxies are involved, infinite forwarding loops may be\n   experienced\
    \ (e.g., routing misconfiguration, policy conflicts).  To\n   prevent such loops,\
    \ this document defines a new CoAP option, called\n   Hop-Limit (Section 3). \
    \ Also, the document defines a new CoAP\n   Response Code (Section 6.1) to report\
    \ loops together with relevant\n   diagnostic information to ease troubleshooting\
    \ (Section 4).\n"
- title: 1.1.  Intended Usage
  contents:
  - "1.1.  Intended Usage\n   The Hop-Limit option was originally designed for a specific\
    \ use case\n   [DOTS-SIG-CHANNEL].  However, its intended usage is general:\n\
    \      New CoAP proxies MUST implement this option and have it enabled by\n  \
    \    default.\n   Note that this means that a server that receives requests both\
    \ via\n   proxies and directly from clients may see otherwise identical\n   requests\
    \ with and without the Hop-Limit option included; servers with\n   internal caching\
    \ will therefore also want to implement this option,\n   since understanding the\
    \ Hop-Limit option will improve caching\n   efficiency.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n   Readers should be familiar with the terms and\
    \ concepts defined in\n   [RFC7252].\n"
- title: 3.  Hop-Limit Option
  contents:
  - "3.  Hop-Limit Option\n   The properties of the Hop-Limit option are shown in\
    \ Table 1.  The\n   formatting of this table follows the one used in Table 4 of\
    \ [RFC7252]\n   (Section 5.10).  The C, U, N, and R columns indicate the properties\n\
    \   Critical, Unsafe, NoCacheKey, and Repeatable defined in Section 5.4\n   of\
    \ [RFC7252].  None of these properties is marked for the Hop-Limit\n   option.\n\
    \    | Number | C | U | N | R | Name      | Format | Length | Default |\n    |\
    \ 16     |   |   |   |   | Hop-Limit | uint   | 1      | 16      |\n         \
    \       Table 1: CoAP Hop-Limit Option Properties\n   The Hop-Limit option (Section\
    \ 6.2) is an elective option used to\n   detect and prevent infinite loops of\
    \ CoAP requests when proxies are\n   involved.  The option is not repeatable.\
    \  Therefore, any request\n   carrying multiple Hop-Limit options MUST be handled\
    \ following the\n   procedure specified in Section 5.4.5 of [RFC7252].\n   The\
    \ value of the Hop-Limit option is encoded as an unsigned integer\n   (see Section\
    \ 3.2 of [RFC7252]).  This value MUST be between 1 and 255\n   inclusive.  CoAP\
    \ requests received with a Hop-Limit option set to '0'\n   or greater than '255'\
    \ MUST be rejected by a CoAP server/proxy using\n   4.00 (Bad Request).\n   The\
    \ Hop-Limit option is safe to forward.  That is, a CoAP proxy that\n   does not\
    \ understand the Hop-Limit option should forward it on.  The\n   option is also\
    \ part of the cache key.  As such, a CoAP proxy that\n   does not understand the\
    \ Hop-Limit option must follow the\n   recommendations in Section 5.7.1 of [RFC7252]\
    \ for caching.  Note that\n   loops that involve only such proxies will not be\
    \ detected.\n   Nevertheless, the presence of such proxies will not prevent infinite\n\
    \   loop detection if at least one CoAP proxy that supports the Hop-Limit\n  \
    \ option is involved in the loop.\n   A CoAP proxy that understands the Hop-Limit\
    \ option SHOULD be\n   instructed, using a configuration parameter, to insert\
    \ a Hop-Limit\n   option when relaying a request that does not include the Hop-Limit\n\
    \   option.\n   The initial Hop-Limit value should be configurable.  If no initial\n\
    \   value is explicitly provided, the default initial Hop-Limit value of\n   16\
    \ MUST be used.  This value is chosen so that in the majority of\n   cases, it\
    \ is sufficiently large to guarantee that a CoAP request\n   would not be dropped\
    \ in networks when there were no loops, but not so\n   large as to consume CoAP\
    \ proxy resources when a loop does occur.  The\n   value is still configurable\
    \ to accommodate unusual topologies.  Lower\n   values should be used with caution\
    \ and only in networks where\n   topologies are known by the CoAP client (or proxy)\
    \ inserting the Hop-\n   Limit option.\n   Because forwarding errors may occur\
    \ if inadequate Hop-Limit values\n   are used, proxies at the boundaries of an\
    \ administrative domain MAY\n   be instructed to remove or rewrite the value of\
    \ Hop-Limit carried in\n   received requests (i.e., ignore the value of Hop-Limit\
    \ received in a\n   request).  This modification should be done with caution in\
    \ case\n   proxy-forwarded traffic repeatedly crosses the administrative domain\n\
    \   boundary in a loop, rendering ineffective the efficacy of loop\n   detection\
    \ through the Hop-Limit option.\n   Otherwise, a CoAP proxy that understands the\
    \ Hop-Limit option MUST\n   decrement the value of the option by 1 prior to forwarding\
    \ it.  A\n   CoAP proxy that understands the Hop-Limit option MUST NOT use a\n\
    \   stored 5.08 (Hop Limit Reached) error response unless the value of\n   the\
    \ Hop-Limit option in the presented request is smaller than or\n   equal to the\
    \ value of the Hop-Limit option in the request used to\n   obtain the stored response.\
    \  Otherwise, the CoAP proxy follows the\n   behavior in Section 5.6 of [RFC7252].\n\
    \      Note: If a request with a given value of Hop-Limit failed to reach\n  \
    \    a server because the hop limit is exhausted, then the same failure\n    \
    \  will be observed if a smaller value of the Hop-Limit option is\n      used\
    \ instead.\n   CoAP requests MUST NOT be forwarded if the Hop-Limit option is\
    \ set to\n   '0' after decrement.  Requests that cannot be forwarded because of\n\
    \   exhausted Hop-Limit SHOULD be logged with a 5.08 (Hop Limit Reached)\n   error\
    \ response sent back to the CoAP peer.  It is RECOMMENDED that\n   CoAP implementations\
    \ support means to alert administrators about loop\n   errors so that appropriate\
    \ actions are undertaken.\n"
- title: 4.  Debugging and Troubleshooting
  contents:
  - "4.  Debugging and Troubleshooting\n   To ease debugging and troubleshooting,\
    \ the CoAP proxy that detects a\n   loop includes an identifier for itself in\
    \ the diagnostic payload\n   under the conditions detailed in Section 5.5.2 of\
    \ [RFC7252].  That\n   identifier MUST NOT include any space character (ASCII\
    \ value 32).\n   The identifier inserted by a CoAP proxy can be, for example,\
    \ a proxy\n   name (e.g., p11.example.net), proxy alias (e.g., myproxyalias),\
    \ or IP\n   address (e.g., 2001:db8::1).\n   Each intermediate proxy involved\
    \ in relaying a 5.08 (Hop Limit\n   Reached) error message prepends its own identifier\
    \ in the diagnostic\n   payload with a space character used as separator.  Only\
    \ one\n   identifier per proxy should appear in the diagnostic payload.  This\n\
    \   approach allows the limiting of the size of the 5.08 (Hop Limit\n   Reached)\
    \ error message, eases the correlation with hops count, and\n   detects whether\
    \ a proxy was involved in the forwarding of the 5.08\n   (Hop Limit Reached) error\
    \ message.  Note that an intermediate proxy\n   prepends its identifier only if\
    \ there is enough space as determined\n   by the Path MTU (Section 4.6 of [RFC7252]).\
    \  If not, an intermediate\n   proxy forwards the 5.08 (Hop Limit Reached) error\
    \ message to the next\n   hop without updating the diagnostic payload.\n   An\
    \ intermediate proxy MUST NOT forward a 5.08 (Hop Limit Reached)\n   error message\
    \ if it detects that its identifier is included in the\n   diagnostic payload.\
    \  Such messages SHOULD be logged and appropriate\n   alerts sent to the administrators.\n"
- title: 5.  HTTP Mapping Considerations
  contents:
  - "5.  HTTP Mapping Considerations\n   This section focuses on the HTTP mappings\
    \ specific to the CoAP\n   extension specified in this document.  As a reminder,\
    \ the basic\n   normative requirements on HTTP/CoAP mappings are defined in\n\
    \   Section 10 of [RFC7252].  The implementation guidelines for HTTP/CoAP\n  \
    \ mappings are elaborated in [RFC8075].\n   By default, the HTTP-to-CoAP Proxy\
    \ inserts a Hop-Limit option\n   following the guidelines in Section 3.  The HTTP-to-CoAP\
    \ Proxy may be\n   instructed by policy to insert a Hop-Limit option only if a\
    \ Via\n   (Section 5.7.1 of [RFC7230]) or CDN-Loop header field [RFC8586] is\n\
    \   present in the HTTP request.\n   The HTTP-to-CoAP Proxy uses 508 (Loop Detected)\
    \ as the HTTP response\n   status code to map 5.08 (Hop Limit Reached).  Furthermore,\
    \ it maps\n   the diagnostic payload of 5.08 (Hop Limit Reached) as per Section\
    \ 6.6\n   of [RFC8075].\n   By default, the CoAP-to-HTTP Proxy inserts a Via header\
    \ field in the\n   HTTP request if the CoAP request includes a Hop-Limit option.\
    \  The\n   CoAP-to-HTTP Proxy may be instructed by policy to insert a CDN-Loop\n\
    \   header field instead of the Via header field.\n   The CoAP-to-HTTP Proxy maps\
    \ the 508 (Loop Detected) HTTP response\n   status code to 5.08 (Hop Limit Reached).\
    \  Moreover, the CoAP-to-HTTP\n   Proxy inserts its information following the\
    \ guidelines in Section 4.\n   When both HTTP-to-CoAP and CoAP-to-HTTP proxies\
    \ are involved, the\n   loop detection may break if the proxy-forwarded traffic\
    \ repeatedly\n   crosses the HTTP-to-CoAP and CoAP-to-HTTP proxies.  Nevertheless,\
    \ if\n   the loop is within the CoAP or HTTP legs, the loop detection is still\n\
    \   functional.\n"
- title: 6.  IANA Considerations
  contents:
  - '6.  IANA Considerations

    '
- title: 6.1.  CoAP Response Code
  contents:
  - "6.1.  CoAP Response Code\n   IANA has registered the following entry in the \"\
    CoAP Response Codes\"\n   subregistry available at <https://www.iana.org/assignments/core-\n\
    \   parameters>:\n                 | Code | Description       | Reference |\n\
    \                 | 5.08 | Hop Limit Reached | RFC 8768  |\n                 \
    \      Table 2: CoAP Response Codes\n"
- title: 6.2.  CoAP Option Number
  contents:
  - "6.2.  CoAP Option Number\n   IANA has registered the following entry in the \"\
    CoAP Option Numbers\"\n   subregistry available at <https://www.iana.org/assignments/core-\n\
    \   parameters>:\n                    | Number | Name      | Reference |\n   \
    \                 | 16     | Hop-Limit | RFC 8768  |\n                       Table\
    \ 3: CoAP Option Number\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security considerations related to CoAP proxying\
    \ are discussed in\n   Section 11.2 of [RFC7252].\n   A CoAP endpoint can probe\
    \ the topology of a network into which it is\n   making requests by tweaking the\
    \ value of the Hop-Limit option.  Such\n   probing is likely to fail if proxies\
    \ at the boundaries of that\n   network rewrite the value of Hop-Limit carried\
    \ in received requests\n   (see Section 3).\n   The diagnostic payload of a 5.08\
    \ (Hop Limit Reached) error message\n   may leak sensitive information revealing\
    \ the topology of an\n   administrative domain.  To prevent that, a CoAP proxy\
    \ that is located\n   at the boundary of an administrative domain MAY be instructed\
    \ to\n   strip the diagnostic payload or part of it before forwarding on the\n\
    \   5.08 (Hop Limit Reached) response.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Message Syntax and Routing\",\n           \
    \   RFC 7230, DOI 10.17487/RFC7230, June 2014,\n              <https://www.rfc-editor.org/info/rfc7230>.\n\
    \   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, \"The Constrained\n   \
    \           Application Protocol (CoAP)\", RFC 7252,\n              DOI 10.17487/RFC7252,\
    \ June 2014,\n              <https://www.rfc-editor.org/info/rfc7252>.\n   [RFC8075]\
    \  Castellani, A., Loreto, S., Rahman, A., Fossati, T., and\n              E.\
    \ Dijk, \"Guidelines for Mapping Implementations: HTTP to\n              the Constrained\
    \ Application Protocol (CoAP)\", RFC 8075,\n              DOI 10.17487/RFC8075,\
    \ February 2017,\n              <https://www.rfc-editor.org/info/rfc8075>.\n \
    \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n      \
    \        2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n         \
    \     May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [DOTS-SIG-CHANNEL]\n              Reddy, T.,\
    \ Boucadair, M., Patil, P., Mortensen, A., and N.\n              Teague, \"Distributed\
    \ Denial-of-Service Open Threat\n              Signaling (DOTS) Signal Channel\
    \ Specification\", Work in\n              Progress, Internet-Draft, draft-ietf-dots-signal-channel-\n\
    \              41, 6 January 2020, <https://tools.ietf.org/html/draft-\n     \
    \         ietf-dots-signal-channel-41>.\n   [RFC8586]  Ludin, S., Nottingham,\
    \ M., and N. Sullivan, \"Loop\n              Detection in Content Delivery Networks\
    \ (CDNs)\", RFC 8586,\n              DOI 10.17487/RFC8586, April 2019,\n     \
    \         <https://www.rfc-editor.org/info/rfc8586>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This specification was part of [DOTS-SIG-CHANNEL].  Many\
    \ thanks to\n   those who reviewed DOTS specifications.\n   Thanks to Klaus Hartke,\
    \ Carsten Bormann, Peter van der Stok, Jim\n   Schaad, Jaime Jim\xE9nez, Roni\
    \ Even, Scott Bradner, Thomas Fossati,\n   Radia Perlman, \xC9ric Vyncke, Suresh\
    \ Krishnan, Roman Danyliw, Barry\n   Leiba, Christer Holmberg, Benjamin Kaduk,\
    \ and Adam Roach for their\n   review and comments.\n   Carsten Bormann provided\
    \ the \"Intended Usage\" text.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mohamed Boucadair\n   Orange\n   35000 Rennes\n   France\n\
    \   Email: mohamed.boucadair@orange.com\n   Tirumaleswar Reddy.K\n   McAfee, Inc.\n\
    \   Embassy Golf Link Business Park\n   Bangalore 560071\n   Karnataka\n   India\n\
    \   Email: kondtir@gmail.com\n   Jon Shallow\n"
