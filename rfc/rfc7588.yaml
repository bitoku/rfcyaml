- title: __initial_text__
  contents:
  - " A Widely Deployed Solution to the Generic Routing Encapsulation (GRE)\n    \
    \                     Fragmentation Problem\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes how many vendors have solved the Generic Routing\n\
    \   Encapsulation (GRE) fragmentation problem.  The solution described\n   herein\
    \ is configurable.  It is widely deployed on the Internet in its\n   default configuration.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7588.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Requirements Language . . . . . . . . . . . . . . .\
    \ . . .   5\n   2.  Solutions . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     2.1.  RFC 4459 Solutions  . . . . . . . . . . . . . . . . . .\
    \ .   5\n     2.2.  A Widely Deployed Solution  . . . . . . . . . . . . . . .\
    \   5\n   3.  Implementation Details  . . . . . . . . . . . . . . . . . . .  \
    \ 6\n     3.1.  General . . . . . . . . . . . . . . . . . . . . . . . . .   6\n\
    \     3.2.  GRE MTU (GMTU) Estimation and Discovery . . . . . . . . .   6\n  \
    \   3.3.  GRE Ingress Node Procedures . . . . . . . . . . . . . . .   7\n    \
    \   3.3.1.  Procedures Affecting the GRE Payload  . . . . . . . .   7\n      \
    \ 3.3.2.  Procedures Affecting the GRE Deliver Header . . . . .   8\n     3.4.\
    \  GRE Egress Node Procedures  . . . . . . . . . . . . . . .   9\n   4.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .   9\n   5.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     5.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  10\n     5.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  11\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  12\n   Authors' Addresses  . .\
    \ . . . . . . . . . . . . . . . . . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Generic Routing Encapsulation (GRE) [RFC2784] [RFC2890]\
    \ can be used\n   to carry any network-layer protocol over any network-layer protocol.\n\
    \   GRE has been implemented by many vendors and is widely deployed in\n   the\
    \ Internet.\n   The GRE specification does not describe fragmentation procedures.\n\
    \   Lacking guidance from the specification, vendors have developed\n   implementation-specific\
    \ fragmentation solutions.  A GRE tunnel will\n   operate correctly only if its\
    \ ingress and egress nodes support\n   compatible fragmentation solutions.  [RFC4459]\
    \ describes several\n   fragmentation solutions and evaluates their relative merits.\n\
    \   This memo reviews the fragmentation solutions presented in [RFC4459].\n  \
    \ It also describes how many vendors have solved the GRE fragmentation\n   problem.\
    \  The solution described herein is configurable and has been\n   widely deployed\
    \ in its default configuration.\n   This memo addresses point-to-point unicast\
    \ GRE tunnels that carry\n   IPv4, IPv6, or MPLS payloads over IPv4 or IPv6. \
    \ All other tunnel\n   types are beyond the scope of this document.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The following terms are specific to GRE:\n   o  GRE delivery\
    \ header - an IPv4 or IPv6 header whose source address\n      represents the GRE\
    \ ingress node and whose destination address\n      represents the GRE egress\
    \ node.  The GRE delivery header\n      encapsulates a GRE header.\n   o  GRE\
    \ header - the GRE protocol header.  The GRE header is\n      encapsulated in\
    \ the GRE delivery header and encapsulates the GRE\n      payload.\n   o  GRE\
    \ payload - a network-layer packet that is encapsulated by the\n      GRE header.\
    \  The GRE payload can be IPv4, IPv6, or MPLS.\n      Procedures for encapsulating\
    \ IPv4 in GRE are described in\n      [RFC2784] and [RFC2890].  Procedures for\
    \ encapsulating IPv6 in GRE\n      are described in [IPv6-GRE].  Procedures for\
    \ encapsulating MPLS in\n      GRE are described in [RFC4023].  While other protocols\
    \ may be\n      delivered over GRE, they are beyond the scope of this document.\n\
    \   o  GRE delivery packet - a packet containing a GRE delivery header, a\n  \
    \    GRE header, and the GRE payload.\n   o  GRE payload header - the IPv4, IPv6,\
    \ or MPLS header of the GRE\n      payload.\n   o  GRE overhead - the combined\
    \ size of the GRE delivery header and\n      the GRE header, measured in octets.\n\
    \   The following terms are specific to MTU discovery:\n   o  Link MTU (LMTU)\
    \ - the maximum transmission unit, i.e., maximum\n      packet size in octets,\
    \ that can be conveyed over a link.  LMTU is\n      a unidirectional metric. \
    \ A bidirectional link may be\n      characterized by one LMTU in the forward\
    \ direction and another\n      LMTU in the reverse direction.\n   o  Path MTU\
    \ (PMTU) - the minimum LMTU of all the links in a path\n      between a source\
    \ node and a destination node.  If the source and\n      destination nodes are\
    \ connected through an Equal-Cost Multipath\n      (ECMP), the PMTU is equal to\
    \ the minimum LMTU of all links\n      contributing to the multipath.\n   o  GRE\
    \ MTU (GMTU) - the maximum transmission unit, i.e., maximum\n      packet size\
    \ in octets, that can be conveyed over a GRE tunnel\n      without fragmentation\
    \ of any kind.  The GMTU is equal to the PMTU\n      associated with the path\
    \ between the GRE ingress and the GRE\n      egress nodes minus the GRE overhead.\n\
    \   o  Path MTU Discovery (PMTUD) - a procedure for dynamically\n      discovering\
    \ the PMTU between two nodes on the Internet.  PMTUD\n      procedures for IPv4\
    \ are defined in [RFC1191].  PMTUD procedures\n      for IPv6 are defined in [RFC1981].\n\
    \   The following terms are introduced by this memo:\n   o  Fragmentable Packet\
    \ - a packet that can be fragmented by the GRE\n      ingress node before being\
    \ transported over a GRE tunnel.  That is,\n      an IPv4 packet with the Don't\
    \ Fragment (DF) bit equal to 0 and\n      whose payload is larger than 64 bytes.\
    \  IPv6 packets are not\n      fragmentable.\n   o  ICMP Packet Too Big (PTB)\
    \ message - an ICMPv4 [RFC792] Destination\n      Unreachable message (Type =\
    \ 3) with code equal to 4 (fragmentation\n      needed and DF set) or an ICMPv6\
    \ [RFC4443] Packet Too Big message\n      (Type = 2).\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Solutions
  contents:
  - '2.  Solutions

    '
- title: 2.1.  RFC 4459 Solutions
  contents:
  - "2.1.  RFC 4459 Solutions\n   Section 3 of [RFC4459] identifies several tunnel\
    \ fragmentation\n   solutions.  These solutions define procedures to be invoked\
    \ when the\n   tunnel ingress router receives a packet so large that it cannot\
    \ be\n   forwarded through the tunnel without fragmentation of any kind.  When\n\
    \   applied to GRE, these procedures are:\n   1.  Discard the incoming packet\
    \ and send an ICMP PTB message to the\n       incoming packet's source.\n   2.\
    \  Fragment the incoming packet and encapsulate each fragment within\n       a\
    \ complete GRE header and GRE delivery header.\n   3.  Encapsulate the incoming\
    \ packet in a single GRE header and GRE\n       delivery header.  Perform source\
    \ fragmentation on the resulting\n       GRE delivery packet.\n   As per RFC 4459,\
    \ Strategy 2 is applicable only when the incoming\n   packet is fragmentable.\
    \  Also as per RFC 4459, each strategy has its\n   relative merits and costs.\n"
- title: 2.2.  A Widely Deployed Solution
  contents:
  - "2.2.  A Widely Deployed Solution\n   Many vendors have implemented a configurable\
    \ GRE fragmentation\n   solution.  In its default configuration, the solution\
    \ behaves as\n   follows:\n   o  When the GRE ingress node receives a fragmentable\
    \ packet with\n      length greater than the GMTU, it fragments the incoming packet\
    \ and\n      encapsulates each fragment within a complete GRE header and GRE\n\
    \      delivery header.  Fragmentation logic is as specified by the\n      payload\
    \ protocol.\n   o  When the GRE ingress node receives a non-fragmentable packet\
    \ with\n      length greater than the GMTU, it discards the packet and sends an\n\
    \      ICMP PTB message to the packet's source.\n   o  When the GRE egress node\
    \ receives a GRE delivery packet fragment,\n      it silently discards the fragment\
    \ without attempting to reassemble\n      the GRE delivery packet to which the\
    \ fragment belongs.\n   In non-default configurations, the GRE ingress node can\
    \ execute any\n   of the procedures defined in RFC 4459.\n   The solution described\
    \ above is widely deployed on the Internet in\n   its default configuration. \
    \ However, the default configuration is not\n   always appropriate for GRE tunnels\
    \ that carry IPv6.\n   IPv6 requires that every link in the Internet have an MTU\
    \ of 1280\n   octets or greater.  On any link that cannot convey a 1280-octet\n\
    \   packet in one piece, link-specific fragmentation and reassembly must\n   be\
    \ provided at a layer below IPv6.\n   Therefore, the default configuration is\
    \ appropriate for tunnels that\n   carry IPv6 only if the network is engineered\
    \ so that the GMTU is\n   guaranteed to be 1280 bytes or greater.  In all other\
    \ scenarios, a\n   non-default configuration is required.\n   In the non-default\
    \ configuration, when the GRE ingress router\n   receives a packet lager than\
    \ the GMTU, the GRE ingress router\n   encapsulates the entire packet in a single\
    \ GRE and delivery header.\n   It then fragments the delivery header and sends\
    \ the resulting\n   fragments to the GRE egress node, where they are reassembled.\n"
- title: 3.  Implementation Details
  contents:
  - "3.  Implementation Details\n   This section describes how many vendors have implemented\
    \ the solution\n   described in Section 2.2.\n"
- title: 3.1.  General
  contents:
  - "3.1.  General\n   The GRE ingress nodes satisfy all of the requirements stated\
    \ in\n   [RFC2784].\n"
- title: 3.2.  GRE MTU (GMTU) Estimation and Discovery
  contents:
  - "3.2.  GRE MTU (GMTU) Estimation and Discovery\n   GRE ingress nodes support a\
    \ configuration option that associates a\n   GMTU with a GRE tunnel.  By default,\
    \ GMTU is equal to the MTU\n   associated with the next hop toward the GRE egress\
    \ node minus the GRE\n   overhead.\n   Typically, GRE ingress nodes further refine\
    \ their GMTU estimate by\n   executing PMTUD procedures.  However, if an implementation\
    \ supports\n   PMTUD for GRE tunnels, it also includes a configuration option\
    \ that\n   disables PMTUD.  This configuration option is required to mitigate\n\
    \   certain denial-of-service attacks (see Section 4).\n   The GRE ingress node's\
    \ estimate of the GMTU will not always be\n   accurate.  It is only an estimate.\
    \  When the GMTU changes, the GRE\n   ingress node will not discover that change\
    \ immediately.  Likewise, if\n   the GRE ingress node performs PMTUD procedures\
    \ and interior nodes\n   cannot deliver ICMP feedback to the GRE ingress node,\
    \ GMTU estimates\n   may be inaccurate.\n"
- title: 3.3.  GRE Ingress Node Procedures
  contents:
  - "3.3.  GRE Ingress Node Procedures\n   This section defines procedures that GRE\
    \ ingress nodes execute when\n   they receive a packet whose size is greater than\
    \ the relevant GMTU.\n"
- title: 3.3.1.  Procedures Affecting the GRE Payload
  contents:
  - '3.3.1.  Procedures Affecting the GRE Payload

    '
- title: 3.3.1.1.  IPv4 Payloads
  contents:
  - "3.3.1.1.  IPv4 Payloads\n   By default, if the payload is fragmentable, the GRE\
    \ ingress node\n   fragments the incoming packet and encapsulates each fragment\
    \ within a\n   complete GRE header and GRE delivery header.  Therefore, the GRE\n\
    \   egress node receives several complete, non-fragmented delivery\n   packets.\
    \  Each delivery packet contains a fragment of the GRE\n   payload.  The GRE egress\
    \ node forwards the payload fragments to their\n   ultimate destination where\
    \ they are reassembled.\n   Also by default, if the payload is not fragmentable,\
    \ the GRE ingress\n   node discards the packet and sends an ICMPv4 Destination\
    \ Unreachable\n   message to the packet's source.  The ICMPv4 Destination Unreachable\n\
    \   message code equals 4 (fragmentation needed and DF set).  The ICMPv4\n   Destination\
    \ Unreachable message also contains a next-hop MTU (as\n   specified by [RFC1191]),\
    \ and the next-hop MTU is equal to the GMTU\n   associated with the tunnel.\n\
    \   The GRE ingress node supports a non-default configuration option that\n  \
    \ invokes an alternative behavior.  If that option is configured, the\n   GRE\
    \ ingress node fragments the delivery packet.  See Section 3.3.2\n   for details.\n"
- title: 3.3.1.2.  IPv6 Payloads
  contents:
  - "3.3.1.2.  IPv6 Payloads\n   By default, the GRE ingress node discards the packet\
    \ and sends an\n   ICMPv6 [RFC4443] Packet Too Big message to the payload source.\
    \  The\n   MTU specified in the Packet Too Big message is equal to the GMTU\n\
    \   associated with the tunnel.\n   The GRE ingress node supports a non-default\
    \ configuration option that\n   invokes an alternative behavior.  If that option\
    \ is configured, the\n   GRE ingress node fragments the delivery packet.  See\
    \ Section 3.3.2\n   for details.\n"
- title: 3.3.1.3.  MPLS Payloads
  contents:
  - "3.3.1.3.  MPLS Payloads\n   By default, the GRE ingress node discards the packet.\
    \  As it is\n   impossible to reliably identify the payload source, the GRE ingress\n\
    \   node does not attempt to send an ICMP PTB message to the payload\n   source.\n\
    \   The GRE ingress node supports a non-default configuration option that\n  \
    \ invokes an alternative behavior.  If that option is configured, the\n   GRE\
    \ ingress node fragments the delivery packet.  See Section 3.3.2\n   for details.\n"
- title: 3.3.2.  Procedures Affecting the GRE Deliver Header
  contents:
  - '3.3.2.  Procedures Affecting the GRE Deliver Header

    '
- title: 3.3.2.1.  Tunneling GRE over IPv4
  contents:
  - "3.3.2.1.  Tunneling GRE over IPv4\n   By default, the GRE ingress node does not\
    \ fragment delivery packets.\n   However, the GRE ingress node includes a configuration\
    \ option that\n   allows delivery packet fragmentation.\n   By default, the GRE\
    \ ingress node sets the DF bit in the delivery\n   header to 1 (Don't Fragment).\
    \  However, the GRE ingress node also\n   supports a configuration option that\
    \ invokes the following behavior:\n   o  When the GRE payload is IPv6, the DF\
    \ bit on the delivery header is\n      set to 0 (Fragments Allowed).\n   o  When\
    \ the GRE payload is IPv4, the DF bit is copied from the\n      payload header\
    \ to the delivery header.\n   When the DF bit on an IPv4 delivery header is set\
    \ to 0, the GRE\n   delivery packet can be fragmented by any router between the\
    \ GRE\n   ingress and egress nodes.\n   If the GRE egress node is configured to\
    \ support reassembly, it will\n   reassemble fragmented delivery packets.  Otherwise,\
    \ the GRE egress\n   node will discard delivery packet fragments.\n"
- title: 3.3.2.2.  Tunneling GRE over IPv6
  contents:
  - "3.3.2.2.  Tunneling GRE over IPv6\n   By default, the GRE ingress node does not\
    \ fragment delivery packets.\n   However, the GRE ingress node includes a configuration\
    \ option that\n   allows this.\n   If the GRE egress node is configured to support\
    \ reassembly, it will\n   reassemble fragmented delivery packets.  Otherwise,\
    \ the GRE egress\n   node will discard delivery packet fragments.\n"
- title: 3.4.  GRE Egress Node Procedures
  contents:
  - "3.4.  GRE Egress Node Procedures\n   By default, the GRE egress node silently\
    \ discards GRE delivery packet\n   fragments without attempting to reassemble\
    \ the GRE delivery packets\n   to which the fragments belongs.\n   However, the\
    \ GRE egress node supports a configuration option that\n   allows it to reassemble\
    \ GRE delivery packets.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   In the GRE fragmentation solution described above,\
    \ either the GRE\n   payload or the GRE delivery packet can be fragmented.  If\
    \ the GRE\n   payload is fragmented, it is typically reassembled at its ultimate\n\
    \   destination.  If the GRE delivery packet is fragmented, it is\n   typically\
    \ reassembled at the GRE egress node.\n   The packet reassembly process is resource\
    \ intensive and vulnerable to\n   several denial-of-service attacks.  In the simplest\
    \ attack, the\n   attacker sends fragmented packets more quickly than the victim\
    \ can\n   reassemble them.  In a variation on that attack, the first fragment\n\
    \   of each packet is missing so that no packet can ever be reassembled.\n   Given\
    \ that the packet reassembly process is resource intensive and\n   vulnerable\
    \ to denial-of-service attacks, operators should decide\n   where the reassembly\
    \ process is best performed.  Having made that\n   decision, they should decide\
    \ whether to fragment the GRE payload or\n   GRE delivery packet accordingly.\n\
    \   Some IP implementations are vulnerable to the Overlapping Fragment\n   Attack\
    \ [RFC1858].  This vulnerability is not specific to GRE and\n   needs to be considered\
    \ in all environments where IP fragmentation is\n   present.  [RFC3128] describes\
    \ a procedure by which IPv4\n   implementations can partially mitigate the vulnerability.\
    \  [RFC5722]\n   mandates a procedure by which IPv6-compliant implementations\
    \ are\n   required to mitigate the vulnerability.  The procedure described in\n\
    \   RFC 5722 completely mitigates the vulnerability.  Operators SHOULD\n   ensure\
    \ that the vulnerability is mitigated to their satisfaction on\n   equipment that\
    \ they deploy.\n   PMTUD is vulnerable to two denial-of-service attacks (see Section\
    \ 8\n   of [RFC1191] for details).  Both attacks are based upon on a\n   malicious\
    \ party sending forged ICMPv4 Destination Unreachable or\n   ICMPv6 Packet Too\
    \ Big messages to a host.  In the first attack, the\n   forged message indicates\
    \ an inordinately small PMTU.  In the second\n   attack, the forged message indicates\
    \ an inordinately large MTU.  In\n   both cases, throughput is adversely affected.\
    \  In order to mitigate\n   such attacks, GRE implementations include a configuration\
    \ option to\n   disable PMTUD on GRE tunnels.  Also, they can include a configuration\n\
    \   option that conditions the behavior of PMTUD to establish a minimum\n   PMTU.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC792]   Postel, J., \"Internet Control Message\
    \ Protocol\", STD 5,\n              RFC 792, DOI 10.17487/RFC0792, September 1981,\n\
    \              <http://www.rfc-editor.org/info/rfc792>.\n   [RFC1191]  Mogul,\
    \ J. and S. Deering, \"Path MTU discovery\", RFC 1191,\n              DOI 10.17487/RFC1191,\
    \ November 1990,\n              <http://www.rfc-editor.org/info/rfc1191>.\n  \
    \ [RFC1858]  Ziemba, G., Reed, D., and P. Traina, \"Security\n              Considerations\
    \ for IP Fragment Filtering\", RFC 1858,\n              DOI 10.17487/RFC1858,\
    \ October 1995,\n              <http://www.rfc-editor.org/info/rfc1858>.\n   [RFC1981]\
    \  McCann, J., Deering, S., and J. Mogul, \"Path MTU Discovery\n             \
    \ for IP version 6\", RFC 1981, DOI 10.17487/RFC1981, August\n              1996,\
    \ <http://www.rfc-editor.org/info/rfc1981>.\n   [RFC2119]  Bradner, S., \"Key\
    \ words for use in RFCs to Indicate\n              Requirement Levels\", BCP 14,\
    \ RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2784]  Farinacci, D., Li, T., Hanks, S., Meyer, D., and P.\n         \
    \     Traina, \"Generic Routing Encapsulation (GRE)\", RFC 2784,\n           \
    \   DOI 10.17487/RFC2784, March 2000,\n              <http://www.rfc-editor.org/info/rfc2784>.\n\
    \   [RFC2890]  Dommety, G., \"Key and Sequence Number Extensions to GRE\",\n \
    \             RFC 2890, DOI 10.17487/RFC2890, September 2000,\n              <http://www.rfc-editor.org/info/rfc2890>.\n\
    \   [RFC3128]  Miller, I., \"Protection Against a Variant of the Tiny\n      \
    \        Fragment Attack (RFC 1858)\", RFC 3128,\n              DOI 10.17487/RFC3128,\
    \ June 2001,\n              <http://www.rfc-editor.org/info/rfc3128>.\n   [RFC4023]\
    \  Worster, T., Rekhter, Y., and E. Rosen, Ed.,\n              \"Encapsulating\
    \ MPLS in IP or Generic Routing Encapsulation\n              (GRE)\", RFC 4023,\
    \ DOI 10.17487/RFC4023, March 2005,\n              <http://www.rfc-editor.org/info/rfc4023>.\n\
    \   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n       \
    \       Control Message Protocol (ICMPv6) for the Internet\n              Protocol\
    \ Version 6 (IPv6) Specification\", RFC 4443,\n              DOI 10.17487/RFC4443,\
    \ March 2006,\n              <http://www.rfc-editor.org/info/rfc4443>.\n   [RFC5722]\
    \  Krishnan, S., \"Handling of Overlapping IPv6 Fragments\",\n              RFC\
    \ 5722, DOI 10.17487/RFC5722, December 2009,\n              <http://www.rfc-editor.org/info/rfc5722>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [IPv6-GRE] Pignataro, C., Bonica, R., and S.\
    \ Krishnan, \"IPv6 Support\n              for Generic Routing Encapsulation (GRE)\"\
    , Work in\n              Progress, draft-ietf-intarea-gre-ipv6-10, June 2015.\n\
    \   [RFC4459]  Savola, P., \"MTU and Fragmentation Issues with In-the-\n     \
    \         Network Tunneling\", RFC 4459, DOI 10.17487/RFC4459, April\n       \
    \       2006, <http://www.rfc-editor.org/info/rfc4459>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Fred Baker, Fred Detienne,\
    \ Jagadish\n   Grandhi, Jeff Haas, Brian Haberman, Vanitha Neelamegam, Masataka\n\
    \   Ohta, John Scudder, Mike Sullenberger, Tom Taylor, and Wen Zhang for\n   their\
    \ constructive comments.  The authors also express their\n   gratitude to Vanessa\
    \ Ameen, without whom this memo could not have\n   been written.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ron Bonica\n   Juniper Networks\n   2251 Corporate Park\
    \ Drive\n   Herndon, Virginia  20170\n   United States\n   Email: rbonica@juniper.net\n\
    \   Carlos Pignataro\n   Cisco Systems\n   7200-12 Kit Creek Road\n   Research\
    \ Triangle Park, North Carolina  27709\n   United States\n   Email: cpignata@cisco.com\n\
    \   Joe Touch\n   USC/ISI\n   4676 Admiralty Way\n   Marina del Rey, California\
    \  90292-6695\n   United States\n   Phone: +1 (310) 448-9151\n   Email: touch@isi.edu\n\
    \   URI:   http://www.isi.edu/touch\n"
