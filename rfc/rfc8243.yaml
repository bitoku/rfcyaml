- title: __initial_text__
  contents:
  - "                      Alternatives for Multilevel\n          Transparent Interconnection\
    \ of Lots of Links (TRILL)\n"
- title: Abstract
  contents:
  - "Abstract\n   Although TRILL is based on IS-IS, which supports multilevel unicast\n\
    \   routing, extending TRILL to multiple levels has challenges that are\n   not\
    \ addressed by the already-existing capabilities of IS-IS.  One\n   issue is with\
    \ the handling of multi-destination packet distribution\n   trees.  Other issues\
    \ are with TRILL switch nicknames.  How are such\n   nicknames allocated across\
    \ a multilevel TRILL network?  Do nicknames\n   need to be unique across an entire\
    \ multilevel TRILL network?  Or can\n   they merely be unique within each multilevel\
    \ area?\n   This informational document enumerates and examines alternatives\n\
    \   based on a number of factors including backward compatibility,\n   simplicity,\
    \ and scalability; it makes recommendations in some cases.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8243.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. The Motivation for Multilevel ..............................4\n  \
    \    1.2. Improvements Due to Multilevel .............................5\n    \
    \       1.2.1. The Routing Computation Load ........................5\n      \
    \     1.2.2. LSDB Volatility Creating Too Much Control Traffic ...5\n        \
    \   1.2.3. LSDB Volatility Causing Too Much Time Unconverged ...6\n          \
    \ 1.2.4. The Size of the LSDB ................................6\n           1.2.5.\
    \ Nickname Limit ......................................6\n           1.2.6. Multi-Destination\
    \ Traffic ...........................7\n      1.3. Unique and Aggregated Nicknames\
    \ ............................7\n      1.4. More on Areas ..............................................8\n\
    \      1.5. Terminology and Abbreviations ..............................9\n  \
    \ 2. Multilevel TRILL Issues ........................................10\n    \
    \  2.1. Non-Zero Area Addresses ...................................11\n      2.2.\
    \ Aggregated versus Unique Nicknames ........................12\n           2.2.1.\
    \ More Details on Unique Nicknames ...................12\n           2.2.2. More\
    \ Details on Aggregated Nicknames ...............13\n      2.3. Building Multi-Area\
    \ Trees .................................18\n      2.4. The RPF Check for Trees\
    \ ...................................18\n      2.5. Area Nickname Acquisition\
    \ .................................19\n      2.6. Link State Representation of\
    \ Areas ........................19\n   3. Area Partition .................................................20\n\
    \   4. Multi-Destination Scope ........................................21\n  \
    \    4.1. Unicast to Multi-Destination Conversions ..................21\n    \
    \       4.1.1. New Tree Encoding ..................................22\n      4.2.\
    \ Selective Broadcast Domain Reduction ......................22\n   5. Coexistence\
    \ with Old TRILL Switches ............................23\n   6. Multi-Access Links\
    \ with End Stations ...........................24\n   7. Summary ........................................................25\n\
    \   8. Security Considerations ........................................26\n  \
    \ 9. IANA Considerations ............................................26\n   10.\
    \ References ....................................................26\n      10.1.\
    \ Normative References .....................................26\n      10.2. Informative\
    \ References ...................................27\n   Acknowledgements ..................................................28\n\
    \   Authors' Addresses ................................................29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF Transparent Interconnection of Lot of Links (TRILL)\
    \ protocol\n   [RFC6325] [RFC7177] [RFC7780] provides optimal pairwise data routing\n\
    \   without configuration, safe forwarding even during periods of\n   temporary\
    \ loops, and support for multipathing of both unicast and\n   multicast traffic\
    \ in networks with arbitrary topology and link\n   technology, including multi-access\
    \ links.  TRILL accomplishes this by\n   using Intermediate System to Intermediate\
    \ System [IS-IS] [RFC7176])\n   link state routing in conjunction with a header\
    \ that includes a hop\n   count.  The design supports Data Labels (VLANs and Fine-Grained\n\
    \   Labels (FGLs) [RFC7172]) and optimization of the distribution of\n   multi-destination\
    \ data based on Data Label and multicast group.\n   Devices that implement TRILL\
    \ are called TRILL Switches or RBridges.\n   Familiarity with [IS-IS], [RFC6325],\
    \ and [RFC7780] is assumed in this\n   document.\n"
- title: 1.1.  The Motivation for Multilevel
  contents:
  - "1.1.  The Motivation for Multilevel\n   The primary motivation for multilevel\
    \ TRILL is to improve\n   scalability.  The following issues might limit the scalability\
    \ of a\n   TRILL-based network:\n   1.  The routing computation load\n   2.  The\
    \ volatility of the link state database (LSDB) creating too\n       much control\
    \ traffic\n   3.  The volatility of the LSDB causing the TRILL network to be in\
    \ an\n       unconverged state too much of the time\n   4.  The size of the LSDB\n\
    \   5.  The limit of the number of TRILL switches, due to the 16-bit\n       nickname\
    \ space (for further information on why this might be a\n       problem, see Section\
    \ 1.2.5)\n   6.  The traffic due to upper-layer protocols use of broadcast and\n\
    \       multicast\n   7.  The size of the end-node learning table (the table that\
    \ remembers\n       (egress TRILL switch, label / Media Access Control (MAC))\
    \ pairs)\n   As discussed below, extending TRILL IS-IS to be multilevel\n   (hierarchical)\
    \ can help with all of these issues except issue 7.\n   IS-IS was designed to\
    \ be multilevel [IS-IS].  A network can be\n   partitioned into \"areas\".  Routing\
    \ within an area is known as \"Level\n   1 routing\".  Routing between areas is\
    \ known as \"Level 2 routing\".\n   The Level 2 IS-IS network consists of Level\
    \ 2 routers and links\n   between the Level 2 routers.  Level 2 routers may participate\
    \ in one\n   or more Level 1 areas, in addition to their role as Level 2 routers.\n\
    \   Each area is connected to Level 2 through one or more \"border\n   routers\"\
    , which participate both as a router inside the area, and as\n   a router inside\
    \ the Level 2 area.  Care must be taken that it is\n   clear, when transitioning\
    \ multi-destination packets between a Level 2\n   and a Level 1 area in either\
    \ direction, that exactly one border TRILL\n   switch will transition a particular\
    \ data packet between the levels;\n   otherwise, duplication or loss of traffic\
    \ can occur.\n"
- title: 1.2.  Improvements Due to Multilevel
  contents:
  - "1.2.  Improvements Due to Multilevel\n   Partitioning the network into areas\
    \ directly solves the first four\n   scalability issues listed above, as described\
    \ in Sections 1.2.1\n   through 1.2.4.  Multilevel also contributes to solving\
    \ issues 5 and\n   6, as discussed in Sections 1.2.5 and 1.2.6, respectively.\n\
    \   In the subsections below, N indicates the number of TRILL switches in\n  \
    \ a TRILL campus.  For simplicity, it is assumed that each TRILL switch\n   has\
    \ k links to other TRILL switches.  An \"optimized\" multilevel\n   campus is\
    \ assumed to have Level 1 areas containing sqrt(N) switches.\n"
- title: 1.2.1.  The Routing Computation Load
  contents:
  - "1.2.1.  The Routing Computation Load\n   The Dijkstra algorithm uses computational\
    \ effort on the order of the\n   number of links in a network (N*k) times the\
    \ log of the number of\n   nodes to calculate least cost routes at a router (Section\
    \ 12.3.3 of\n   [InterCon]).  Thus, in a single-level TRILL campus, it is on the\n\
    \   order of N*k*log(N).  In an optimized multilevel campus, it is on the\n  \
    \ order of sqrt(N)*k*log(N).  So, for example, assuming N is 3,000, the\n   level\
    \ of computational effort would be reduced by about a factor of\n   50.\n"
- title: 1.2.2.  LSDB Volatility Creating Too Much Control Traffic
  contents:
  - "1.2.2.  LSDB Volatility Creating Too Much Control Traffic\n   The rate of LSDB\
    \ changes is assumed to be approximately proportional\n   to the number of routers\
    \ and links in the TRILL campus or N*(1+k) for\n   a single-level campus.  With\
    \ an optimized multilevel campus, each\n   area would have about sqrt(N) routers\
    \ and proportionately fewer links\n   reducing the rate of LSDB changes by about\
    \ a factor of sqrt(N).\n"
- title: 1.2.3.  LSDB Volatility Causing Too Much Time Unconverged
  contents:
  - "1.2.3.  LSDB Volatility Causing Too Much Time Unconverged\n   With the simplifying\
    \ assumption that routing converges after each\n   topology change before the\
    \ next such change, the fraction of time\n   that routing is unconverged is proportional\
    \ to the product of the\n   rate of change occurrence and the convergence time.\
    \  The rate of\n   topology changes per some arbitrary unit of time will be roughly\n\
    \   proportional to the number of router and links (Section 1.2.2).  The\n   convergence\
    \ time is approximately proportional to the computation\n   involved at each router\
    \ (Section 1.2.1).  Thus, based on these\n   simplifying assumptions, the time\
    \ spent unconverged in a single-level\n   network is proportional to (N*(1+k))*(N*k*log(N))\
    \ while that time for\n   an optimized multilevel network would be proportional\
    \ to\n   (sqrt(N)*(1+k))*(sqrt(N)*k*log(N)).  Thus, in changing to multilevel,\n\
    \   the time spent unconverged, using these simplifying assumptions, is\n   improved\
    \ by about a factor of N.\n"
- title: 1.2.4.  The Size of the LSDB
  contents:
  - "1.2.4.  The Size of the LSDB\n   The size of the LSDB, which consists primarily\
    \ of information about\n   routers (TRILL switches) and links, is also approximately\n\
    \   proportional to the number of routers and links.  So, as with item 2\n   in\
    \ Section 1.2.2, it should improve by about a factor of sqrt(N) in\n   going from\
    \ single level to multilevel.\n"
- title: 1.2.5.  Nickname Limit
  contents:
  - "1.2.5.  Nickname Limit\n   For many TRILL protocol purposes, RBridges are designated\
    \ by 16-bit\n   nicknames.  While some values are reserved, this appears to provide\n\
    \   enough nicknames to designated over 65,000 RBridges.  However, this\n   number\
    \ is effectively reduced by the following two factors:\n   -  Nicknames are consumed\
    \ when pseudo-nicknames are used for the\n      active-active connection of end\
    \ stations.  Using the techniques in\n      [RFC7781], for example, could double\
    \ the nickname consumption if\n      there are extensive active-active edge groups\
    \ connected to\n      different sets of edge TRILL switch ports.\n   -  There\
    \ might be problems in multilevel campus-wide contention for\n      single-nickname\
    \ allocation of nicknames were allocated\n      individually from a single pool\
    \ for the entire campus.  Thus, it\n      seems likely that a hierarchical method\
    \ would be chosen where\n      blocks of nicknames are allocated at Level 2 to\
    \ Level 1 areas and\n      contention for a nickname by an RBridge in such a Level\
    \ 1 area\n      would be only within that area.  Such hierarchical allocation\n\
    \      leads to further effective loss of nicknames similar to the\n      situation\
    \ with IP addresses discussed in [RFC3194].\n   Even without the above effective\
    \ reductions in nickname space, a very\n   large multilevel TRILL campus, say\
    \ one with 200 areas each containing\n   500 TRILL switches, could require 100,000\
    \ or more nicknames if all\n   nicknames in the campus must be unique, which is\
    \ clearly impossible\n   with 16-bit nicknames.\n   This scaling limit, namely,\
    \ the 16-bit nickname space, will only be\n   addressed with the aggregated-nickname\
    \ approach.  Since the\n   aggregated-nickname approach requires some complexity\
    \ in the border\n   TRILL switches (for rewriting the nicknames in the TRILL header),\
    \ the\n   suggested design in this document allows a campus with a mixture of\n\
    \   unique-nickname areas, and aggregated-nickname areas.  Thus, a TRILL\n   network\
    \ could start using multilevel with the simpler unique nickname\n   method and\
    \ later add aggregated-nickname areas as a later stage of\n   network growth.\n\
    \   With this design, nicknames must be unique across all Level 2 and\n   unique-nickname\
    \ area TRILL switches taken together; whereas nicknames\n   inside an aggregated-nickname\
    \ area are visible only inside that area.\n   Nicknames inside an aggregated-nickname\
    \ area must still not conflict\n   with nicknames visible in Level 2 (which includes\
    \ all nicknames\n   inside unique nickname areas), but the nicknames inside an\n\
    \   aggregated-nickname area may be the same as nicknames used within one\n  \
    \ or more other aggregated-nickname areas.\n   With the design suggested in this\
    \ document, TRILL switches within an\n   area need not be aware of whether they\
    \ are in an aggregated-nickname\n   area or a unique nickname area.  The border\
    \ TRILL switches in area A1\n   will indicate, in their LSP inside area A1, which\
    \ nicknames (or\n   nickname ranges) are or are not available to be chosen as\
    \ nicknames\n   by area A1 TRILL switches.\n"
- title: 1.2.6.  Multi-Destination Traffic
  contents:
  - "1.2.6.  Multi-Destination Traffic\n   In many cases, scaling limits due to protocol\
    \ use of broadcast and\n   multicast can be addressed in a multilevel campus by\
    \ introducing\n   locally scoped multi-destination delivery, limited to an area\
    \ or a\n   single link.  See further discussion of this issue in Section 4.2.\n"
- title: 1.3.  Unique and Aggregated Nicknames
  contents:
  - "1.3.  Unique and Aggregated Nicknames\n   We describe two alternatives for hierarchical\
    \ or multilevel TRILL.\n   One we call the \"unique-nickname\" alternative.  The\
    \ other we call the\n   \"aggregated-nickname\" alternative.  In the aggregated-nickname\n\
    \   alternative, border TRILL switches replace either the ingress or\n   egress\
    \ nickname field in the TRILL header of unicast packets with an\n   aggregated\
    \ nickname representing an entire area.\n   The unique-nickname alternative has\
    \ the advantage that border TRILL\n   switches are simpler and do not need to\
    \ do TRILL Header nickname\n   modification.  It also simplifies testing and maintenance\
    \ operations\n   that originate in one area and terminate in a different area.\n\
    \   The aggregated-nickname alternative has the following advantages:\n      -\
    \  it solves scaling issue 5 above, the 16-bit nickname limit, in\n         a\
    \ simple way,\n      -  it lessens the amount of inter-area routing information\
    \ that\n         must be passed in IS-IS, and\n      -  it logically reduces the\
    \ RPF (Reverse Path Forwarding) Check\n         information (since only the area\
    \ nickname needs to appear,\n         rather than all the ingress TRILL switches\
    \ in that area).\n   In both cases, it is possible and advantageous to compute\
    \ multi-\n   destination data packet distribution trees such that the portion\n\
    \   computed within a given area is rooted within that area.\n   For further discussion\
    \ of the unique and aggregated-nickname\n   alternatives, see Section 2.2.\n"
- title: 1.4.  More on Areas
  contents:
  - "1.4.  More on Areas\n   Each area is configured with an \"area address\", which\
    \ is advertised\n   in IS-IS messages, so as to avoid accidentally interconnecting\
    \ areas.\n   For TRILL, the only purpose of the area address would be to avoid\n\
    \   accidentally interconnecting areas although the area address had\n   other\
    \ purposes in CLNP (ConnectionLess Network Protocol), IS-IS was\n   originally\
    \ designed for CLNP/DECnet.\n   Currently, the TRILL specification says that the\
    \ area address must be\n   zero.  If we change the specification so that the area\
    \ address value\n   of zero is just a default, then most IS-IS multilevel machinery\
    \ works\n   as originally designed.  However, there are TRILL-specific issues,\n\
    \   which we address in Section 2.1.\n"
- title: 1.5.  Terminology and Abbreviations
  contents:
  - "1.5.  Terminology and Abbreviations\n   This document generally uses the abbreviations\
    \ defined in [RFC6325]\n   plus the additional abbreviation DBRB.  However, for\
    \ ease of\n   reference, most abbreviations used are listed here:\n   CLNP:  \
    \        ConnectionLess Network Protocol\n   DECnet:        a proprietary routing\
    \ protocol that was used by\n                  Digital Equipment Corporation.\
    \  \"DECnet Phase 5\" was\n                  the origin of IS-IS.\n   Data Label:\
    \    VLAN or Fine-Grained Label [RFC7172]\n   DBRB:          Designated Border\
    \ RBridge\n   ESADI:         End-Station Address Distribution Information\n  \
    \ IS-IS:         Intermediate System to Intermediate System [IS-IS]\n   LSDB:\
    \          Link State DataBase\n   LSP:           Link State PDU\n   PDU:    \
    \       Protocol Data Unit\n   RBridge:       Routing Bridge, an alternative name\
    \ for a TRILL switch\n   RPF:           Reverse Path Forwarding\n   TLV:     \
    \      Type-Length-Value\n   TRILL:         Transparent Interconnection of Lots\
    \ of Links or\n                  Tunneled Routing in the Link Layer [RFC6325]\
    \ [RFC7780]\n   TRILL switch:  a device that implements the TRILL protocol [RFC6325]\n\
    \                  [RFC7780], sometimes called an RBridge\n   VLAN:          Virtual\
    \ Local Area Network\n"
- title: 2.  Multilevel TRILL Issues
  contents:
  - "2.  Multilevel TRILL Issues\n   The TRILL-specific issues introduced by multilevel\
    \ include the\n   following:\n   a.  Configuration of non-zero area addresses,\
    \ encoding them in IS-IS\n       PDUs, and possibly interworking with old TRILL\
    \ switches that do\n       not understand non-zero area addresses.\n       See\
    \ Section 2.1.\n   b.  Nickname management.\n       See Sections 2.5 and 2.2.\n\
    \   c.  Advertisement of pruning information (Data Label reachability, IP\n  \
    \     multicast addresses) across areas.\n       Distribution tree pruning information\
    \ is only an optimization, as\n       long as multi-destination packets are not\
    \ prematurely pruned.\n       For instance, border TRILL switches could advertise\
    \ they can\n       reach all possible Data Labels, and have an IP multicast router\n\
    \       attached.  This would cause all multi-destination traffic to be\n    \
    \   transmitted to border TRILL switches, and possibly pruned there,\n       when\
    \ the traffic could have been pruned earlier based on Data\n       Label or multicast\
    \ group if border TRILL switches advertised more\n       detailed Data Label and/or\
    \ multicast listener and multicast\n       router attachment information.\n  \
    \ d.  Computation of distribution trees across areas for multi-\n       destination\
    \ data.\n       See Section 2.3.\n   e.  Computation of RPF information for those\
    \ distribution trees.\n       See Section 2.4.\n   f.  Computation of pruning\
    \ information across areas.\n       See Sections 2.3 and 2.6.\n   g.  Compatibility,\
    \ as much as practical, with existing, unmodified\n       TRILL switches.\n  \
    \     The most important form of compatibility is with existing TRILL\n      \
    \ fast-path hardware.  Changes that require upgrade to the slow-\n       path\
    \ firmware/software are more tolerable.  Compatibility for the\n       relatively\
    \ small number of border TRILL switches is less\n       important than compatibility\
    \ for non-border TRILL switches.\n       See Section 5.\n"
- title: 2.1.  Non-Zero Area Addresses
  contents:
  - "2.1.  Non-Zero Area Addresses\n   The current TRILL base protocol specification\
    \ [RFC6325] [RFC7177]\n   [RFC7780] says that the area address in IS-IS must be\
    \ zero.  The\n   purpose of the area address is to ensure that different areas\
    \ are not\n   accidentally merged.  Furthermore, zero is an invalid area address\n\
    \   for Layer 3 IS-IS, so it was chosen as an additional safety mechanism\n  \
    \ to ensure that Layer 3 IS-IS packets would not be confused with TRILL\n   IS-IS\
    \ packets.  However, TRILL uses other techniques to avoid\n   confusion on a link,\
    \ such as different multicast addresses and\n   Ethertypes on Ethernet [RFC6325],\
    \ different PPP (Point-to-Point\n   Protocol) code points on PPP [RFC6361], and\
    \ the like.  Thus, using an\n   area address in TRILL that might be used in Layer\
    \ 3 IS-IS is not a\n   problem.\n   Since current TRILL switches will reject any\
    \ IS-IS messages with non-\n   zero area addresses, the choices are as follows:\n\
    \   a.1.  upgrade all TRILL switches that are to interoperate in a\n         potentially\
    \ multilevel environment to understand non-zero area\n         addresses,\n  \
    \ a.2.  neighbors of old TRILL switches must remove the area address\n       \
    \  from IS-IS messages when talking to an old TRILL switch (which\n         might\
    \ break IS-IS security and/or cause inadvertent merging of\n         areas),\n\
    \   a.3.  ignore the problem of accidentally merging areas entirely, or\n   a.4.\
    \  keep the fixed \"area address\" field as 0 in TRILL, and add a\n         new,\
    \ optional TLV for \"area name\" to Hellos that, if present,\n         could be\
    \ compared, by new TRILL switches, to prevent accidental\n         area merging.\n\
    \   In principal, different solutions could be used in different areas\n   but\
    \ it would be much simpler to adopt one of these choices uniformly.\n   A simple\
    \ solution would be a.1, with each TRILL switch using a\n   dominant area nickname\
    \ as its area address.  For the unique-nickname\n   alternative, the dominant\
    \ nickname could be the lowest value nickname\n   held by any border RBridge of\
    \ the area.  For the aggregated-nickname\n   alternative, it could be the lowest\
    \ nickname held by a border RBridge\n   of the area or a nickname representing\
    \ the area.\n"
- title: 2.2.  Aggregated versus Unique Nicknames
  contents:
  - "2.2.  Aggregated versus Unique Nicknames\n   In the unique-nickname alternative,\
    \ all nicknames across the campus\n   must be unique.  In the aggregated-nickname\
    \ alternative, TRILL switch\n   nicknames within an aggregated-nickname area are\
    \ only of local\n   significance, and the only nickname externally (outside that\
    \ area)\n   visible is the \"area nickname\" (or nicknames), which aggregates\
    \ all\n   the internal nicknames.\n   The unique-nickname approach simplifies\
    \ border TRILL switches.\n   The aggregated-nickname approach eliminates the potential\
    \ problem of\n   nickname exhaustion, minimizes the amount of nickname information\n\
    \   that would need to be forwarded between areas, minimizes the size of\n   the\
    \ forwarding table, and simplifies RPF calculation and RPF\n   information.\n"
- title: 2.2.1.  More Details on Unique Nicknames
  contents:
  - "2.2.1.  More Details on Unique Nicknames\n   With unique cross-area nicknames,\
    \ it would be intractable to have a\n   flat nickname space with TRILL switches\
    \ in different areas contending\n   for the same nicknames.  Instead, each area\
    \ would need to be\n   configured with or allocate one or more blocks of nicknames.\
    \  Either\n   some TRILL switches would need to announce that all the nicknames\n\
    \   other than those in blocks available to the area are taken (to\n   prevent\
    \ the TRILL switches inside the area from choosing nicknames\n   outside the area's\
    \ nickname block) or a new TLV would be needed to\n   announce the allowable or\
    \ the prohibited nicknames, and all TRILL\n   switches in the area would need\
    \ to understand that new TLV.\n   Currently, the encoding of nickname information\
    \ in TLVs is by listing\n   of individual nicknames; this would make it painful\
    \ for a border\n   TRILL switch to announce into an area that it is holding all\
    \ other\n   nicknames to limit the nicknames available within that area.  Painful\n\
    \   means tens of thousands of individual nickname entries in the Level 1\n  \
    \ LSDB.  The information could be encoded as ranges of nicknames to\n   make this\
    \ manageable by specifying a new TLV similar to the Nickname\n   Flags APPsub-TLV\
    \ specified in [RFC7780] but providing flags for\n   blocks of nicknames rather\
    \ than single nicknames.  Although this\n   would require updating software, such\
    \ a new TLV is the preferred\n   method.\n   There is also an issue with the unique-nickname\
    \ approach in building\n   distribution trees, as follows:\n      With unique\
    \ nicknames in the TRILL campus and TRILL header\n      nicknames not rewritten\
    \ by the border TRILL switches, there would\n      have to be globally known nicknames\
    \ for the trees.  Suppose there\n      are k trees.  For all of the trees with\
    \ nicknames located outside\n      an area, the local trees would be rooted at\
    \ a border TRILL switch\n      or switches.  Therefore, there would be either\
    \ no splitting of\n      multi-destination traffic within the area or restricted\
    \ splitting\n      of multi-destination traffic between trees rooted at a highly\n\
    \      restricted set of TRILL switches.\n      As an alternative, just the \"\
    egress nickname\" field of multi-\n      destination TRILL Data packets could\
    \ be mapped at the border,\n      leaving known unicast packets unmapped.  However,\
    \ this surrenders\n      much of the unique nickname advantage of simpler border\
    \ TRILL\n      switches.\n   Scaling to a very large campus with unique nicknames\
    \ might exhaust\n   the 16-bit TRILL nicknames space particularly if (1) additional\n\
    \   nicknames are consumed to support active-active end-station groups at\n  \
    \ the TRILL edge using the techniques standardized in [RFC7781] and (2)\n   use\
    \ of the nickname space is less efficient due to the allocation of,\n   for example,\
    \ power-of-two size blocks of nicknames to areas in the\n   same way that use\
    \ of the IP address space is made less efficient by\n   hierarchical allocation\
    \ (see [RFC3194]).  One method to avoid\n   nickname exhaustion might be to expand\
    \ nicknames to 24 bits; however,\n   that technique would require TRILL message\
    \ format and fast-path\n   processing changes and all TRILL switches in the campus\
    \ to understand\n   larger nicknames.\n"
- title: 2.2.2.  More Details on Aggregated Nicknames
  contents:
  - "2.2.2.  More Details on Aggregated Nicknames\n   The aggregated-nickname approach\
    \ enables passing far less nickname\n   information.  It works as follows, assuming\
    \ both the source and\n   destination areas are using aggregated nicknames:\n\
    \   There are at least two ways areas could be identified.\n      One method would\
    \ be to assign each area a 16-bit nickname.  This\n      would not be the nickname\
    \ of any actual TRILL switch.  Instead, it\n      would be the nickname of the\
    \ area itself.  Border TRILL switches\n      would know the area nickname for\
    \ their own area(s).  For an\n      example of a more-specific multilevel proposal\
    \ using unique\n      nicknames, see [UNIQUE].\n      Alternatively, areas could\
    \ be identified by the set of nicknames\n      that identify the border routers\
    \ for that area.  (See [SingleName]\n      for a multilevel proposal using such\
    \ a set of nicknames.)\n   The TRILL Header nickname fields in TRILL Data packets\
    \ being\n   transported through a multilevel TRILL campus with aggregated\n  \
    \ nicknames are as follows:\n   -  When both the ingress and egress TRILL switches\
    \ are in the same\n      area, there need be no change from the existing base\
    \ TRILL\n      protocol standard in the TRILL Header nickname fields.\n   -  When\
    \ being transported between different Level 1 areas in Level 2,\n      the ingress\
    \ nickname is a nickname of the ingress TRILL switch's\n      area, whereas the\
    \ egress nickname is either a nickname of the\n      egress TRILL switch's area\
    \ or a tree nickname.\n   -  When being transported from Level 1 to Level 2, the\
    \ ingress\n      nickname is the nickname of the ingress TRILL switch itself,\n\
    \      whereas the egress nickname is either a nickname for the area of\n    \
    \  the egress TRILL switch or a tree nickname.\n   -  When being transported from\
    \ Level 2 to Level 1, the ingress\n      nickname is a nickname for the ingress\
    \ TRILL switch's area,\n      whereas the egress nickname is either the nickname\
    \ of the egress\n      TRILL switch itself or a tree nickname.\n   There are two\
    \ variations of the aggregated-nickname approach.  The\n   first is the Border\
    \ Learning approach, which is described in\n   Section 2.2.2.1.  The second is\
    \ the Swap Nickname Field approach,\n   which is described in Section 2.2.2.2.\
    \  Section 2.2.2.3 compares the\n   advantages and disadvantages of these two\
    \ variations of the\n   aggregated-nickname approach.\n"
- title: 2.2.2.1.  Border Learning Aggregated Nicknames
  contents:
  - "2.2.2.1.  Border Learning Aggregated Nicknames\n   This section provides an illustrative\
    \ example and description of the\n   border-learning variation of aggregated nicknames\
    \ where a single\n   nickname is used to identify an area.\n   In the following\
    \ picture, RB2 and RB3 are area border TRILL switches\n   (RBridges).  A source\
    \ S is attached to RB1.  The two areas have\n   nicknames 15961 and 15918, respectively.\
    \  RB1 has a nickname, say 27,\n   and RB4 has a nickname, say 44 (and in fact,\
    \ they could even have the\n   same nickname, since the TRILL switch nickname\
    \ will not be visible\n   outside these aggregated-nickname areas).\n        \
    \    Area 15961              level 2             Area 15918\n    +-------------------+\
    \     +-----------------+     +--------------+\n    |                   |    \
    \ |                 |     |              |\n    |  S--RB1---Rx--Rz----RB2---Rb---Rc--Rd---Re--RB3---Rk--RB4---D\
    \  |\n    |     27            |     |                 |     |     44       |\n\
    \    |                   |     |                 |     |              |\n    +-------------------+\
    \     +-----------------+     +--------------+\n   Let's say that S transmits\
    \ a frame to destination D, which is\n   connected to RB4, and let's say that\
    \ D's location has already been\n   learned by the relevant TRILL switches.  These\
    \ relevant switches have\n   learned the following:\n   1.  RB1 has learned that\
    \ D is connected to nickname 15918\n   2.  RB3 has learned that D is attached\
    \ to nickname 44.\n   The following sequence of events will occur:\n   -  S transmits\
    \ an Ethernet frame with source MAC = S and destination\n      MAC = D.\n   -\
    \  RB1 encapsulates with a TRILL header with ingress RBridge = 27,\n      and\
    \ egress = 15918 producing a TRILL Data packet.\n   -  RB2 has announced in the\
    \ Level 1 IS-IS instance in area 15961,\n      that it is attached to all the\
    \ area nicknames, including 15918.\n      Therefore, IS-IS routes the packet to\
    \ RB2.  Alternatively, if a\n      distinguished range of nicknames is used for\
    \ Level 2, Level 1\n      TRILL switches seeing such an egress nickname will know\
    \ to route\n      to the nearest border router, which can be indicated by the\
    \ IS-IS\n      \"attached bit\" [IS-IS].\n   -  RB2, when transitioning the packet\
    \ from Level 1 to Level 2,\n      replaces the ingress TRILL switch nickname with\
    \ the area nickname,\n      so it replaces 27 with 15961.  Within Level 2, the\
    \ ingress RBridge\n      field in the TRILL header will therefore be 15961, and\
    \ the egress\n      RBridge field will be 15918.  Also RB2 learns that S is attached\n\
    \      to nickname 27 in area 15961 to accommodate return traffic.\n   -  The\
    \ packet is forwarded through Level 2, to RB3, which has\n      advertised, in\
    \ Level 2, reachability to the nickname 15918.\n   -  RB3, when forwarding into\
    \ area 15918, replaces the egress nickname\n      in the TRILL header with RB4's\
    \ nickname (44).  So, within the\n      destination area, the ingress nickname\
    \ will be 15961 and the\n      egress nickname will be 44.\n   -  RB4, when decapsulating,\
    \ learns that S is attached to nickname\n      15961, which is the area nickname\
    \ of the ingress.\n   Now suppose that D's location has not been learned by RB1\
    \ and/or RB3.\n   What will happen, as it would in TRILL today, is that RB1 will\n\
    \   forward the packet as multi-destination, choosing a tree.  As the\n   multi-destination\
    \ packet transitions into Level 2, RB2 replaces the\n   ingress nickname with\
    \ the area nickname.  If RB1 does not know the\n   location of D, the packet must\
    \ be flooded, subject to possible\n   pruning, in Level 2 and, subject to possible\
    \ pruning, from Level 2\n   into every Level 1 area that it reaches on the Level\
    \ 2 distribution\n   tree.\n   Now suppose that RB1 has learned the location of\
    \ D (attached to\n   nickname 15918), but RB3 does not know where D is.  In that\
    \ case, RB3\n   must turn the packet into a multi-destination packet within area\n\
    \   15918.  In this case, care must be taken so that in the case in which\n  \
    \ RB3 is not the designated transitioner between Level 2 and its area\n   for\
    \ that multi-destination packet, but was on the unicast path, that\n   border\
    \ TRILL switch in that area does not forward the now multi-\n   destination packet\
    \ back into Level 2.  Therefore, it would be\n   desirable to have a marking,\
    \ somehow, that indicates the scope of\n   this packet's distribution to be \"\
    only this area\" (see also\n   Section 4).\n   In cases where there are multiple\
    \ transitioners for unicast packets,\n   the border-learning mode of operation\
    \ requires that the address\n   learning between them be shared by some protocol\
    \ such as running\n   ESADI [RFC7357] for all Data Labels of interest to avoid\
    \ excessive\n   unknown unicast flooding.\n   The potential issue described at\
    \ the end of Section 2.2.1 with trees\n   in the unique-nickname alternative is\
    \ eliminated with aggregated\n   nicknames.  With aggregated nicknames, each border\
    \ TRILL switch that\n   will transition multi-destination packets can have a mapping\
    \ between\n   Level 2 tree nicknames and Level 1 tree nicknames.  There need not\n\
    \   even be agreement about the total number of trees: just agreement\n   that\
    \ the border TRILL switch have some mapping and replace the egress\n   TRILL switch\
    \ nickname (the tree name) when transitioning levels.\n"
- title: 2.2.2.2.  Swap Nickname Field Aggregated Nicknames
  contents:
  - "2.2.2.2.  Swap Nickname Field Aggregated Nicknames\n   There is a variant possibility\
    \ where two additional fields could\n   exist in TRILL Data packets that could\
    \ be called the \"ingress swap\n   nickname field\" and the \"egress swap nickname\
    \ field\".  This variant\n   is described below for completeness, but it would\
    \ require fast-path\n   hardware changes from the existing TRILL protocol.  The\
    \ changes in\n   the example above would be as follows:\n   -  RB1 will have learned\
    \ the area nickname of D and the TRILL switch\n      nickname of RB4 to which\
    \ D is attached.  In encapsulating a frame\n      to D, it puts an area nickname\
    \ of D (15918) in the egress nickname\n      field of the TRILL Header and puts\
    \ a nickname of RB3 (44) in an\n      egress swap nickname field.\n   -  RB2 moves\
    \ the ingress nickname to the ingress swap nickname field\n      and inserts 15961,\
    \ an area nickname for S, into the ingress\n      nickname field.\n   -  RB3 swaps\
    \ the egress nickname and the egress swap nickname fields,\n      which sets the\
    \ egress nickname to 44.\n   -  RB4 learns the correspondence between the source\
    \ MAC/VLAN of S and\n      the { ingress nickname, ingress swap nickname field\
    \ } pair as it\n      decapsulates and egresses the frame.\n   See [TRILL-IP]\
    \ for a multilevel proposal using aggregated swap\n   nicknames with a single\
    \ nickname representing an area.\n"
- title: 2.2.2.3.  Comparison
  contents:
  - "2.2.2.3.  Comparison\n   The border-learning variant described in Section 2.2.2.1\
    \ minimizes\n   the change in non-border TRILL switches, but it imposes the burden\
    \ on\n   border TRILL switches of learning and doing lookups in all the end-\n\
    \   station MAC addresses within their area(s) that are used for\n   communication\
    \ outside the area.  This burden could be reduced by\n   decreasing the area size\
    \ and increasing the number of areas.\n   The Swap Nickname Field variant described\
    \ in Section 2.2.2.2\n   eliminates the extra address learning burden on border\
    \ TRILL\n   switches, but it requires changes to the TRILL Data packet header\
    \ and\n   more extensive changes to non-border TRILL switches.  In particular,\n\
    \   with this alternative, non-border TRILL switches must learn to\n   associate\
    \ both a TRILL switch nickname and an area nickname with end-\n   station MAC/label\
    \ pairs (except for addresses that are local to their\n   area).\n   The Swap\
    \ Nickname Field alternative is more scalable but less\n   backward compatible\
    \ for non-border TRILL switches.  It would be\n   possible for border and other\
    \ Level 2 TRILL switches to support both\n   border learning, for support of legacy\
    \ Level 1 TRILL switches, and\n   Swap Nickname Field, to support Level 1 TRILL\
    \ switches that\n   understood the Swap Nickname Field method based on variations\
    \ in the\n   TRILL header; however, this would be even more complex.\n   The requirement\
    \ to change the TRILL header and fast-path processing\n   to support the Swap\
    \ Nickname Field variant make it impractical for\n   the foreseeable future.\n"
- title: 2.3.  Building Multi-Area Trees
  contents:
  - "2.3.  Building Multi-Area Trees\n   It is easy to build a multi-area tree by\
    \ building a tree in each area\n   separately, (including the Level 2 area), and\
    \ then having only a\n   single-border TRILL switch, say RBx, in each area, attach\
    \ to the\n   Level 2 area.  RBx would forward all multi-destination packets\n\
    \   between that area and Level 2.\n   However, people might find this unacceptable\
    \ because of the desire to\n   path split (not always sending all multi-destination\
    \ traffic through\n   the same border TRILL switch).\n   This is the same issue\
    \ as with multiple ingress TRILL switches\n   injecting traffic from a pseudonode,\
    \ and it can be solved with the\n   mechanism that was adopted for that purpose:\
    \ the affinity TLV\n   [RFC7783].  For each tree in the area, at most one border\
    \ RB\n   announces itself in an affinity TLV with that tree name.\n"
- title: 2.4.  The RPF Check for Trees
  contents:
  - "2.4.  The RPF Check for Trees\n   For multi-destination data originating locally\
    \ in RBx's area,\n   computation of the RPF check is done as today.  For multi-destination\n\
    \   packets originating outside RBx's area, computation of the RPF check\n   must\
    \ be done based on which one of the border TRILL switches (say\n   RB1, RB2, or\
    \ RB3) injected the packet into the area.\n   A TRILL switch, say RB4, located\
    \ inside an area, must be able to know\n   which of RB1, RB2, or RB3 transitioned\
    \ the packet into the area from\n   Level 2 (or into Level 2 from an area).\n\
    \   This could be done using any one of a variety of mechanisms such as\n   having\
    \ the DBRB announce the transitioner assignments to all the\n   TRILL switches\
    \ in the area or using the Affinity sub-TLV mechanism\n   given in [RFC7783] or\
    \ with a New Tree Encoding mechanism discussed in\n   Section 4.1.1.\n"
- title: 2.5.  Area Nickname Acquisition
  contents:
  - "2.5.  Area Nickname Acquisition\n   In the aggregated-nickname alternative, each\
    \ area must acquire a\n   unique identifier, for example, by acquiring a unique\
    \ area nickname\n   or by using an identifier based on the area's set of border\
    \ TRILL\n   switches.  It is probably simpler to allocate a block of nicknames\n\
    \   (say, the top 4000) to either (1) represent areas and not specific\n   TRILL\
    \ switches or (2) be used by border TRILL switches if the set of\n   such border\
    \ TRILL switches represent the area.\n   The nicknames used for area identification\
    \ need to be advertised and\n   acquired through Level 2.\n   Within an area,\
    \ all the border TRILL switches can discover each other\n   through the Level\
    \ 1 LSDB, by using the IS-IS \"attached bit\" [IS-IS]\n   or by explicitly advertising\
    \ in their LSP \"I am a border RBridge\".\n   Of the border TRILL switches, one\
    \ will have highest priority (say\n   RB7).  RB7 can dynamically participate,\
    \ in Level 2, to acquire a\n   nickname for identifying the area.  Alternatively,\
    \ RB7 could give the\n   area a pseudonode IS-IS ID, such as RB7.5, within Level\
    \ 2.  So an\n   area would appear, in Level 2, as a pseudonode and the pseudonode\n\
    \   could participate, in Level 2, to acquire a nickname for the area.\n   Within\
    \ Level 2, all the border TRILL switches for an area can\n   advertise reachability\
    \ to the area, which would mean connectivity to\n   a nickname identifying the\
    \ area.\n"
- title: 2.6.  Link State Representation of Areas
  contents:
  - "2.6.  Link State Representation of Areas\n   Within an area, say area A1, there\
    \ is an election for the DBRB, say\n   RB1.  This can be done through LSPs within\
    \ area A1.  The border TRILL\n   switches announce themselves, together with their\
    \ DBRB priority.\n   (Note that the election of the DBRB cannot be done based\
    \ on Hello\n   messages, because the border TRILL switches are not necessarily\n\
    \   physical neighbors of each other.  They can, however, reach each\n   other\
    \ through connectivity within the area, which is why it will work\n   to find\
    \ each other through Level 1 LSPs.)\n   RB1 can acquire an area nickname (in the\
    \ aggregated-nickname\n   approach), and may give the area a pseudonode IS-IS\
    \ ID (just like the\n   Designated RBridge (DRB) would give a pseudonode IS-IS\
    \ ID to a link)\n   depending on how the area nickname is handled.  RB1 advertises,\
    \ in\n   area A1, an area nickname that RB1 has acquired (and what the\n   pseudonode\
    \ IS-IS ID for the area is if needed).\n   Level 1 LSPs (possibly pseudonode)\
    \ initiated by RB1 for the area\n   include any information external to area A1\
    \ that should be input into\n   area A1 (such as nicknames of external areas,\
    \ or perhaps (in the\n   unique nickname variant) all the nicknames of external\
    \ TRILL switches\n   in the TRILL campus and pruning information such as multicast\n\
    \   listeners and labels).  All the other border TRILL switches for the\n   area\
    \ announce (in their LSP) attachment to that area.\n   Within Level 2, RB1 generates\
    \ a Level 2 LSP on behalf of the area.\n   The same pseudonode ID could be used\
    \ within Level 1 and Level 2, for\n   the area.  (There does not seem any reason\
    \ why it would be useful for\n   it to be different, but there's also no reason\
    \ why it would need to\n   be the same).  Likewise, all the area A1 border TRILL\
    \ switches would\n   announce, in their Level 2 LSPs, connection to the area.\n"
- title: 3.  Area Partition
  contents:
  - "3.  Area Partition\n   It is possible for an area to become partitioned, so that\
    \ there is\n   still a path from one section of the area to the other, but that\
    \ path\n   is via the Level 2 area.\n   With multilevel TRILL, an area will naturally\
    \ break into two areas in\n   this case.\n   Area addresses might be configured\
    \ to ensure two areas are not\n   inadvertently connected.  Area addresses appear\
    \ in Hellos and LSPs\n   within the area.  If two chunks, connected only via Level\
    \ 2, were\n   configured with the same area address, this would not cause any\n\
    \   problems.  (They would just operate as separate Level 1 areas.)\n   A more\
    \ serious problem occurs if the Level 2 area is partitioned in\n   such a way\
    \ that it could be healed by using a path through a Level 1\n   area.  TRILL will\
    \ not attempt to solve this problem.  Within the\n   Level 1 area, a single-border\
    \ RBridge will be the DBRB, and will be\n   in charge of deciding which (single)\
    \ RBridge will transition any\n   particular multi-destination packets between\
    \ that area and Level 2.\n   If the Level 2 area is partitioned, this will result\
    \ in multi-\n   destination data only reaching the portion of the TRILL campus\n\
    \   reachable through the partition attached to the TRILL switch that\n   transitions\
    \ that packet.  It will not cause a loop.\n"
- title: 4.  Multi-Destination Scope
  contents:
  - "4.  Multi-Destination Scope\n   There are at least two reasons it would be desirable\
    \ to be able to\n   mark a multi-destination packet with a scope that indicates\
    \ the\n   packet should not exit the area, as follows:\n   1.  To address an issue\
    \ in the border learning variant of the\n       aggregated-nickname alternative,\
    \ when a unicast packet turns into\n       a multi-destination packet when transitioning\
    \ from Level 2 to\n       Level 1, as discussed in Section 4.1.\n   2.  To constrain\
    \ the broadcast domain for certain discovery,\n       directory, or service protocols\
    \ as discussed in Section 4.2.\n   Multi-destination packet distribution scope\
    \ restriction could be done\n   in a number of ways.  For example, there could\
    \ be a flag in the\n   packet that means \"for this area only\".  However, the\
    \ technique that\n   might require the least change to TRILL switch fast-path\
    \ logic would\n   be to indicate this in the egress nickname that designates the\n\
    \   distribution tree being used.  There could be two general tree\n   nicknames\
    \ for each tree, one being for distribution restricted to the\n   area and the\
    \ other being for multi-area trees.  Or there would be a\n   set of N (perhaps\
    \ 16) special currently reserved nicknames used to\n   specify the N highest priority\
    \ trees but with the variation that if\n   the special nickname is used for the\
    \ tree, the packet is not\n   transitioned between areas.  Or one or more special\
    \ trees could be\n   built that were restricted to the local area.\n"
- title: 4.1.  Unicast to Multi-Destination Conversions
  contents:
  - "4.1.  Unicast to Multi-Destination Conversions\n   In the border learning variant\
    \ of the aggregated-nickname\n   alternative, the following situation may occur:\n\
    \   -  a unicast packet might be known at the Level 1 to Level 2\n      transition\
    \ and be forwarded as a unicast packet to the least-cost\n      border TRILL switch\
    \ advertising connectivity to the destination\n      area, but\n   -  upon arriving\
    \ at the border TRILL switch, it turns out to have an\n      unknown destination\
    \ { MAC, Data Label } pair.\n   In this case, the packet must be converted into\
    \ a multi-destination\n   packet and flooded in the destination area.  However,\
    \ if the border\n   TRILL switch doing the conversion is not the border TRILL\
    \ switch\n   designated to transition the resulting multi-destination packet,\n\
    \   there is the danger that the designated transitioner may pick up the\n   packet\
    \ and flood it back into Level 2 from which it may be flooded\n   into multiple\
    \ areas.  This danger can be avoided by restricting any\n   multi-destination\
    \ packet that results from such a conversion to the\n   destination area as described\
    \ above.\n   Alternatively, a multi-destination packet intended only for the area\n\
    \   could be tunneled (within the area) to the RBridge RBx, that is the\n   appointed\
    \ transitioner for that form of packet (say, based on VLAN or\n   FGL), with instructions\
    \ that RBx only transmit the packet within the\n   area, and RBx could initiate\
    \ the multi-destination packet within the\n   area.  Since RBx introduced the\
    \ packet, and is the only one allowed\n   to transition that packet to Level 2,\
    \ this would accomplish scoping\n   of the packet to within the area.  Since this\
    \ case only occurs in the\n   unusual case when unicast packets need to be turned\
    \ into multi-\n   destination as described above, the suboptimality of tunneling\n\
    \   between the border TRILL switch that receives the unicast packet and\n   the\
    \ appointed level transitioner for that packet might not be an\n   issue.\n"
- title: 4.1.1.  New Tree Encoding
  contents:
  - "4.1.1.  New Tree Encoding\n   The current encoding, in a TRILL header of a tree,\
    \ is of the nickname\n   of the tree root.  This requires all 16 bits of the egress\
    \ nickname\n   field.  TRILL could instead, for example, use the bottom 6 bits\
    \ to\n   encode the tree number (allowing 64 trees), leaving 10 bits to encode\n\
    \   information such as:\n   scope:  a flag indicating whether it should be single\
    \ area only or an\n      entire campus\n   border injector:  an indicator of which\
    \ of the k border TRILL\n      switches injected this packet\n   If TRILL were\
    \ to adopt this new encoding, any of the TRILL switches\n   in an edge group could\
    \ inject a multi-destination packet.  This would\n   require all TRILL switches\
    \ to be changed to understand the new\n   encoding for a tree, and it would require\
    \ a TLV in the LSP to\n   indicate which number each of the TRILL switches in\
    \ an edge group\n   would be.\n   While there are a number of advantages to this\
    \ technique, it requires\n   fast-path logic changes; thus, its deployment is\
    \ not practical at\n   this time.  It is included here for completeness.\n"
- title: 4.2.  Selective Broadcast Domain Reduction
  contents:
  - "4.2.  Selective Broadcast Domain Reduction\n   There are a number of service,\
    \ discovery, and directory protocols\n   that, for convenience, are accessed via\
    \ multicast or broadcast\n   frames.  Examples are DHCP, the NetBIOS Service Location\
    \ Protocol,\n   and multicast DNS.\n   Some such protocols provide means to restrict\
    \ distribution to an IP\n   subnet or equivalent to reduce size of the broadcast\
    \ domain they are\n   using, and then they provide a proxy that can be placed\
    \ in that\n   subnet to use unicast to access a service elsewhere.  In cases where\n\
    \   a proxy mechanism is not currently defined, it may be possible to\n   create\
    \ one that references a central server or cache.  With\n   multilevel TRILL, it\
    \ is possible to construct very large IP subnets\n   that could become saturated\
    \ with multi-destination traffic of this\n   type unless packets can be further\
    \ restricted in their distribution.\n   Such restricted distribution can be accomplished\
    \ for some protocols,\n   say protocol P, in a variety of ways including the following:\n\
    \   -  Either (1) at all ingress TRILL switches in an area, place all\n      protocol\
    \ P multi-destination packets on a distribution tree in\n      such a way that\
    \ the packets are restricted to the area or (2) at\n      all border TRILL switches\
    \ between that area and Level 2, detect\n      protocol P multi-destination packets\
    \ and do not transition them.\n   -  Then, place one, or a few for redundancy,\
    \ protocol P proxies\n      inside each area where protocol P may be in use. \
    \ These proxies\n      unicast protocol P requests or other messages to the actual\
    \ campus\n      server(s) for P.  They also receive unicast responses or other\n\
    \      messages from those servers and deliver them within the area via\n    \
    \  unicast, multicast, or broadcast as appropriate.  (Such proxies\n      would\
    \ not be needed if it was acceptable for all protocol P\n      traffic to be restricted\
    \ to an area.)\n   While it might seem logical to connect the campus servers to\
    \ TRILL\n   switches in Level 2, they could be placed within one or more areas\
    \ so\n   that, in some cases, those areas might not require a local proxy\n  \
    \ server.\n"
- title: 5.  Coexistence with Old TRILL Switches
  contents:
  - "5.  Coexistence with Old TRILL Switches\n   TRILL switches that are not multilevel\
    \ aware may have a problem with\n   calculating RPF check and filtering information,\
    \ since they would not\n   be aware of the assignment of border TRILL switch transitioning.\n\
    \   A possible solution, as long as any old TRILL switches exist within\n   an\
    \ area, is to have the border TRILL switches elect a single DBRB and\n   have\
    \ all inter-area traffic go through the DBRB (unicast as well as\n   multi-destination).\
    \  If that DBRB goes down, a new one will be\n   elected, but at any one time,\
    \ all inter-area traffic (unicast as well\n   as multi-destination) would go through\
    \ that one DRBR.  However this\n   eliminates load splitting at level transition.\n"
- title: 6.  Multi-Access Links with End Stations
  contents:
  - "6.  Multi-Access Links with End Stations\n   Care must be taken in the case where\
    \ there are multiple TRILL\n   switches on a link with one or more end stations,\
    \ keeping in mind\n   that end stations are TRILL ignorant.  In particular, it\
    \ is essential\n   that only one TRILL switch ingress/egress any given data packet\
    \ from/\n   to an end station so that connectivity is provided to that end\n \
    \  station without duplicating end-station data and that loops are not\n   formed\
    \ due to one TRILL switch egressing data in native form (i.e.,\n   with no TRILL\
    \ header) and having that data re-ingressed by another\n   TRILL switch on the\
    \ link.\n   With existing, single-level TRILL, this is done by electing a single\n\
    \   DRB per link, which appoints a single Appointed Forwarder per VLAN\n   [RFC7177]\
    \ [RFC8139].  This mechanism depends on the RBridges\n   establishing adjacency.\
    \  But, suppose there are two (or more) TRILL\n   switches on a link in different\
    \ areas, say RB1 in area A1 and RB2 in\n   area A2, as shown below; and suppose\
    \ that the link also has one or\n   more end stations attached.  If RB1 and RB2\
    \ ignore each other's\n   Hellos because they are in different areas, as they\
    \ are required to\n   do under normal IS-IS PDU processing rules, then they will\
    \ not form\n   an adjacency.  If they are not adjacent, they will ignore each\
    \ other\n   for the Appointed Forwarder mechanism and will both ingress/egress\n\
    \   end-station traffic on the link causing loops and duplication.\n   The problem\
    \ is not avoiding adjacency or avoiding TRILL-Data-packet\n   transfer between\
    \ RB1 and RB2; the area address mechanism of IS-IS or\n   possibly the use of\
    \ topology constraints (or the like) does that\n   quite well.  The problem stems\
    \ from end stations being TRILL\n   ignorant; therefore, care must be taken so\
    \ that multiple RBridges on\n   a link do not ingress the same frame originated\
    \ by an end station and\n   so that an RBridge does not ingress a native frame\
    \ egressed by a\n   different RBridge because the RBridge mistakes the frame for\
    \ a frame\n   originated by an end station.\n      +--------------------------------------------+\n\
    \      |                   Level 2                  |\n      +----------+---------------------+-----------+\n\
    \      |  Area A1 |                     |  Area A2  |\n      |   +---+  |    \
    \                 |   +---+   |\n      |   |RB1|  |                     |   |RB2|\
    \   |\n      |   +-+-+  |                     |   +-+-+   |\n      |     |   \
    \ |                     |     |     |\n      +-----|----+                    \
    \ +-----|-----+\n            |                                |\n          --+---------+-------------+--------+--\
    \ Link\n                      |             |\n               +------+------+\
    \   +--+----------+\n               | End Station |   | End Station |\n      \
    \         +-------------+   +-------------+\n   A simple rule, which is preferred,\
    \ is to use the TRILL switch or\n   switches having the lowest-numbered area,\
    \ comparing area numbers as\n   unsigned integers, to handle all native traffic\
    \ to/from end stations\n   on the link.  This would automatically give multilevel-ignorant\n\
    \   legacy TRILL switches, that would be using area number zero, highest\n   priority\
    \ for handling end-station traffic, which they would try to do\n   anyway.\n \
    \  Other methods are possible.  For example, making the selection of the\n   Appointed\
    \ Forwarders and the TRILL switch in charge of that selection\n   across all TRILL\
    \ switches on the link, regardless of area.  However,\n   a special case would\
    \ then have to be made for legacy TRILL switches\n   using area number zero.\n\
    \   These techniques require multilevel-aware TRILL switches to take\n   actions\
    \ based on Hellos from RBridges in other areas, even though\n   they will not\
    \ form an adjacency with such RBridges.  However, the\n   action is quite simple\
    \ in the preferred case: if a TRILL switch sees\n   Hellos from lower-numbered\
    \ areas, then they would not act as an\n   Appointed Forwarder on the link until\
    \ the Hello timer for such Hellos\n   had expired.\n"
- title: 7.  Summary
  contents:
  - "7.  Summary\n   This document describes potential scaling issues in TRILL and\n\
    \   possible approaches to multilevel TRILL as a solution or element of a\n  \
    \ solution to most of them.\n   The alternative using aggregated-nickname areas\
    \ in multilevel TRILL\n   has significant advantages in terms of scalability over\
    \ using campus-\n   wide unique nicknames, not just in avoiding nickname exhaustion,\
    \ but\n   by allowing RPF checks to be aggregated based on an entire area.\n \
    \  However, the alternative of using unique nicknames is simpler and\n   avoids\
    \ the changes in border TRILL switches required to support\n   aggregated nicknames.\
    \  It is possible to support both.  For example,\n   a TRILL campus could use\
    \ simpler unique nicknames until scaling\n   begins to cause problems and then\
    \ start to introduce areas with\n   aggregated nicknames.\n   Some multilevel\
    \ TRILL issues are not difficult, such as dealing with\n   partitioned areas.\
    \  Other issues are more difficult, especially\n   dealing with old TRILL switches\
    \ that are multilevel ignorant.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This informational document explores alternatives\
    \ for the design of\n   multilevel IS-IS in TRILL and generally does not consider\
    \ security\n   issues.\n   If aggregated nicknames are used in two areas that\
    \ have the same area\n   address, and those areas merge, there is a possibility\
    \ of a transient\n   nickname collision that would not occur with unique nicknames.\
    \  Such\n   a collision could cause a data packet to be delivered to the wrong\n\
    \   egress TRILL switch, but it would still not be delivered to any end\n   station\
    \ in the wrong Data Label; thus, such delivery would still\n   conform to security\
    \ policies.\n   For general TRILL security considerations, see [RFC6325].\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [IS-IS]    International Organization for Standardization,\n\
    \              \"Information technology -- Telecommunications and\n          \
    \    information exchange between systems -- Intermediate\n              System\
    \ to Intermediate System intra-domain routeing\n              information exchange\
    \ protocol for use in conjunction with\n              the protocol for providing\
    \ the connectionless-mode network\n              service (ISO 8473)\", ISO/IEC\
    \ 10589:2002, Second Edition,\n              November 2002.\n   [RFC6325]  Perlman,\
    \ R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani, \"\
    Routing Bridges (RBridges): Base Protocol\n              Specification\", RFC\
    \ 6325, DOI 10.17487/RFC6325, July 2011,\n              <https://www.rfc-editor.org/info/rfc6325>.\n\
    \   [RFC7177]  Eastlake 3rd, D., Perlman, R., Ghanwani, A., Yang, H., and\n  \
    \            V. Manral, \"Transparent Interconnection of Lots of Links\n     \
    \         (TRILL): Adjacency\", RFC 7177, DOI 10.17487/RFC7177, May\n        \
    \      2014, <https://www.rfc-editor.org/info/rfc7177>.\n   [RFC7780]  Eastlake\
    \ 3rd, D., Zhang, M., Perlman, R., Banerjee, A.,\n              Ghanwani, A.,\
    \ and S. Gupta, \"Transparent Interconnection\n              of Lots of Links\
    \ (TRILL): Clarifications, Corrections, and\n              Updates\", RFC 7780,\
    \ DOI 10.17487/RFC7780, February 2016,\n              <https://www.rfc-editor.org/info/rfc7780>.\n\
    \   [RFC8139]  Eastlake 3rd, D., Li, Y., Umair, M., Banerjee, A., and F.\n   \
    \           Hu, \"Transparent Interconnection of Lots of Links (TRILL):\n    \
    \          Appointed Forwarders\", RFC 8139, DOI 10.17487/RFC8139,\n         \
    \     June 2017, <https://www.rfc-editor.org/info/rfc8139>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC3194]  Durand, A. and C. Huitema, \"The\
    \ H-Density Ratio for\n              Address Assignment Efficiency An Update on\
    \ the H ratio\",\n              RFC 3194, DOI 10.17487/RFC3194, November 2001,\n\
    \              <https://www.rfc-editor.org/info/rfc3194>.\n   [RFC6361]  Carlson,\
    \ J. and D. Eastlake 3rd, \"PPP Transparent\n              Interconnection of\
    \ Lots of Links (TRILL) Protocol Control\n              Protocol\", RFC 6361,\
    \ DOI 10.17487/RFC6361, August 2011,\n              <https://www.rfc-editor.org/info/rfc6361>.\n\
    \   [RFC7172]  Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R., and\n  \
    \            D. Dutt, \"Transparent Interconnection of Lots of Links\n       \
    \       (TRILL): Fine-Grained Labeling\", RFC 7172,\n              DOI 10.17487/RFC7172,\
    \ May 2014,\n              <https://www.rfc-editor.org/info/rfc7172>.\n   [RFC7176]\
    \  Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt,\n              D.,\
    \ and A. Banerjee, \"Transparent Interconnection of Lots\n              of Links\
    \ (TRILL) Use of IS-IS\", RFC 7176,\n              DOI 10.17487/RFC7176, May 2014,\n\
    \              <https://www.rfc-editor.org/info/rfc7176>.\n   [RFC7357]  Zhai,\
    \ H., Hu, F., Perlman, R., Eastlake 3rd, D., and O.\n              Stokes, \"\
    Transparent Interconnection of Lots of Links\n              (TRILL): End Station\
    \ Address Distribution Information\n              (ESADI) Protocol\", RFC 7357,\
    \ DOI 10.17487/RFC7357,\n              September 2014, <https://www.rfc-editor.org/info/rfc7357>.\n\
    \   [RFC7781]  Zhai, H., Senevirathne, T., Perlman, R., Zhang, M., and Y.\n  \
    \            Li, \"Transparent Interconnection of Lots of Links (TRILL):\n   \
    \           Pseudo-Nickname for Active-Active Access\", RFC 7781,\n          \
    \    DOI 10.17487/RFC7781, February 2016,\n              <https://www.rfc-editor.org/info/rfc7781>.\n\
    \   [RFC7783]  Senevirathne, T., Pathangi, J., and J. Hudson,\n              \"\
    Coordinated Multicast Trees (CMT) for Transparent\n              Interconnection\
    \ of Lots of Links (TRILL)\", RFC 7783,\n              DOI 10.17487/RFC7783, February\
    \ 2016,\n              <https://www.rfc-editor.org/info/rfc7783>.\n   [InterCon]\
    \ Perlman, R., \"Interconnection: Bridges, Routers, Switches,\n              and\
    \ Internetworking Protocols\", Addison Wesley\n              Longman, Second Edition,\
    \ Chapter 3, 1999.\n   [TRILL-IP] Bhikkaji, B., Venkataswami, B., Mahadevan, R.,\
    \ Sundaram,\n              S., and N. Swamy, \"Connecting Disparate Data Center/PBB/\n\
    \              Campus TRILL sites using BGP\", Work in Progress,\n           \
    \   draft-balaji-trill-over-ip-multi-level-05, March 2012.\n   [UNIQUE]   Zhang,\
    \ M., Eastlake, D., Perlman, R., Cullen, M., Zhai,\n              H., and D. Liu,\
    \ \"TRILL Multilevel Using Unique Nicknames\",\n              Work in Progress,\
    \ draft-ietf-trill-multilevel-\n              unique-nickname-02, May 2017.\n\
    \   [SingleName]\n              Zhang, M., Eastlake, D., Perlman, R., Cullen,\
    \ M., and H.\n              Zhai, \"Transparent Interconnection of Lots of Links\n\
    \              (TRILL) Single Area Border RBridge Nickname for\n             \
    \ Multilevel\", Work in Progress, draft-ietf-trill-\n              multilevel-single-nickname-04,\
    \ July 2017.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The helpful comments and contributions of the following\
    \ are hereby\n   acknowledged:\n      Alia Atlas, David Michael Bond, Dino Farinacci,\
    \ Sue Hares, Gayle\n      Noble, Alexander Vainshtein, and Stig Venaas.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Radia Perlman\n   EMC\n   2010 256th Avenue NE, #200\n\
    \   Bellevue, WA 98007\n   United States of America\n   Email: radia@alum.mit.edu\n\
    \   Donald Eastlake 3rd\n   Huawei Technologies\n   155 Beaver Street\n   Milford,\
    \ MA 01757\n   United States of America\n   Phone: +1-508-333-2270\n   Email:\
    \ d3e3e3@gmail.com\n   Mingui Zhang\n   Huawei Technologies\n   No.156 Beiqing\
    \ Rd. Haidian District,\n   Beijing 100095\n   China\n   Email: zhangmingui@huawei.com\n\
    \   Anoop Ghanwani\n   Dell\n   5450 Great America Parkway\n   Santa Clara, CA\
    \  95054\n   United States of America\n   Email: anoop@alumni.duke.edu\n   Hongjun\
    \ Zhai\n   Jinling Institute of Technology\n   99 Hongjing Avenue, Jiangning District\n\
    \   Nanjing, Jiangsu 211169\n   China\n   Email: honjun.zhai@tom.com\n"
