- title: __initial_text__
  contents:
  - "                Appletalk Update-Based Routing Protocol:\n                  \
    \     Enhanced Appletalk Routing\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   This memo is being distributed to members of the Internet community\n\
    \   to fully document an Apple protocol that may be running over the\n   Internet.\
    \  While the issues discussed may not be directly relevant to\n   the research\
    \ problems of the Internet, they may be interesting to a\n   number of researchers\
    \ and implementers.\n"
- title: About This Document
  contents:
  - "About This Document\n   This document provides detailed information about the\
    \ AppleTalk\n   Update-based Routing Protocol (AURP) and wide area routing. AURP\n\
    \   provides wide area routing enhancements to the AppleTalk routing\n   protocols\
    \ and is fully compatible with AppleTalk Phase 2. The\n   organization of this\
    \ document has as its basis the three major\n   components of AURP:\n      AppleTalk\
    \ tunneling, which allows AppleTalk data to pass through\n      foreign networks\
    \ and over point-to-point links\n      the propagation of AppleTalk routing information\
    \ between internet\n      routers connected through foreign networks or over point-to-point\n\
    \      links\n      the presentation of AppleTalk network information by an internet\n\
    \      router to nodes and other Phase 2-compatible routers on its local\n   \
    \   internet\n"
- title: What This Document Contains
  contents:
  - "What This Document Contains\n   The chapters of this document contain the following\
    \ information:\n      Chapter 1, \"Introduction to the AppleTalk Update-Based\
    \ Routing\n      Protocol,\" introduces the three major components of AURP and\
    \ the\n      key wide area routing enhancements that AURP provides to the\n  \
    \    AppleTalk routing protocols.\n      Chapter 2, \"Wide Area AppleTalk Connectivity,\"\
    \ provides\n      information about AppleTalk tunneling through IP internets and\
    \ over\n      point-to-point links.\n      Chapter 3, \"Propagating Routing Information\
    \ With the AppleTalk\n      Update-Based Routing Protocol,\" describes the essential\
    \ elements of\n      AURP, including the architectural model for update-based\
    \ routing.\n      This chapter provides detailed information about the methods\
    \ that\n      AURP uses to propagate routing information between internet routers\n\
    \      connected through tunnels.\n      Chapter 4, \"Representing Wide Area Network\
    \ Information,\" describes\n      optional features of AURP-some of which can\
    \ also be implemented on\n      routers that use RTMP rather than AURP for routing-information\n\
    \      propagation. It gives detailed information about how an exterior\n    \
    \  router represents imported network information to its local\n      internet\
    \ and to other exterior routers. It describes network\n      hiding, device hiding,\
    \ network-number remapping, clustering, loop\n      detection, hop-count reduction,\
    \ hop-count weighting, and backup\n      paths.\n      The Appendix, \"Implementation\
    \ Details,\" provides information about\n      implementing AURP.\n"
- title: What You Need to Know
  contents:
  - "What You Need to Know\n   This document is intended for developers of AppleTalk\
    \ wide area\n   routing products. It assumes familiarity with the AppleTalk network\n\
    \   system, internet routing, and wide area networking terms and\n   concepts.\n"
- title: Format of This RFC Document
  contents:
  - "Format of This RFC Document\n   The text of this document has been quickly prepared\
    \ for RFC format.\n   However, the art is more complex and is not yet ready in\
    \ this format.\n   We plan to incorporate the art in the future. Consult the official\n\
    \   APDA document, as indicated below, for the actual art.\n"
- title: For More Information
  contents:
  - "For More Information\n   The following manuals and books from Apple Computer\
    \ provide\n   additional information about AppleTalk networks. You can obtain\
    \ books\n   published by Addison-Wesley at your local bookstore. Contact APDA,\n\
    \   Apple's source for developer tools, to obtain technical reference\n   materials\
    \ for developers:\n      APDA\n      Apple Computer, Inc.\n      20525 Mariani\
    \ Avenue, M/S 33-G\n      Cupertino, CA  95014-6299\n   These manuals provide\
    \ information about some AppleTalk network\n   products:\n      The Apple Ethernet\
    \ NB User's Guide explains how to install and use\n      an Apple Ethernet NB\
    \ Card and EtherTalk software on an AppleTalk\n      network.\n      The Apple\
    \ InteroPoll Network Administrator's Guide describes how\n      to perform maintenance\
    \ and troubleshooting on an AppleTalk network\n      using InteroPoll, a network\
    \ administrator's utility program.\n      The Apple Internet Router Administrator's\
    \ Guide explains how to\n      install the Apple Internet Router Basic Connectivity\
    \ Package and\n      how to use the Router Manager application program. It provides\n\
    \      information about setting up the router, configuring ports to\n      create\
    \ local area and wide area internets, monitoring and\n      troubleshooting router\
    \ operation, and planning your internet.\n      Using the AppleTalk/IP Wide Area\
    \ Extension explains how to install\n      and use the AppleTalk/IP Wide Area\
    \ Extension for the Apple Internet\n      Router. It provides information about\
    \ tunneling through TCP/IP\n      networks, configuring an IP Tunnel access method\
    \ for an Ethernet or\n      Token Ring port on the Apple Internet Router, troubleshooting\
    \ IP\n      tunneling problems, and configuring MacTCP.\n      The AppleTalk Remote\
    \ Access User's Guide explains how to use a\n      Macintosh computer to communicate\
    \ with another Macintosh computer\n      over standard telephone lines to access\
    \ information and resources\n      at a remote location.\n      The Apple Token\
    \ Ring 4/16 NB Card User's Guide explains how to\n      install and operate the\
    \ card and TokenTalk software on a Token Ring\n      network.\n      The MacTCP\
    \ Administrator's Guide, version 1.1, explains how to\n      install and configure\
    \ the MacTCP driver, which implements TCP/IP\n      (Transmission Control Protocol/Internet\
    \ Protocol) on a Macintosh\n      computer.\n   The following books provide reference\
    \ information about AppleTalk\n   networks:\n      The Advantages of AppleTalk\
    \ Phase 2 provides a detailed\n      description of the enhanced internetworking\
    \ capabilities of\n      AppleTalk Phase 2, and a brief guide to upgrading an\
    \ AppleTalk\n      internet to AppleTalk Phase 2. Available from Apple Computer.\n\
    \      The AppleTalk Network System Overview provides a technical\n      introduction\
    \ to the AppleTalk network system and its protocol\n      architecture. Published\
    \ by Addison-Wesley Publishing Company.\n      The AppleTalk Phase 2 Introduction\
    \ and Upgrade Guide is a detailed\n      guide to upgrading AppleTalk network\
    \ hardware, drivers, and\n      application programs to AppleTalk Phase 2, and\
    \ briefly describes\n      extensions to the AppleTalk network system that enhance\
    \ its\n      support for large networks. Available from Apple Computer.\n    \
    \  The AppleTalk Phase 2 Protocol Specification is an addendum to the\n      first\
    \ edition of Inside AppleTalk that defines AppleTalk Phase 2\n      extensions\
    \ to AppleTalk protocols that provide enhanced AppleTalk\n      addressing, routing,\
    \ and naming services. Available from APDA.\n      Inside AppleTalk, second edition,\
    \ is a technical reference that\n      describes the AppleTalk protocols in detail\
    \ and includes\n      information about AppleTalk Phase 2. Published by Addison-Wesley\n\
    \      Publishing Company.\n      The Local Area Network Cabling Guide provides\
    \ information about\n      network media, topologies, and network types. Available\
    \ from Apple\n      Computer.\n      Planning and Managing AppleTalk Networks\
    \ provides in-depth\n      information for network administrators about planning\
    \ and managing\n      AppleTalk networks-including AppleTalk terms and concepts,\
    \ and\n      information about network services, media, topologies, security,\n\
    \      monitoring and optimizing network performance, and\n      troubleshooting.\
    \  Published by Addison-Wesley Publishing Company.\n      Understanding Computer\
    \ Networks provides an overview of\n      networking-including basic information\
    \ about protocol\n      architectures, network media, and topologies. Published\
    \ by\n      Addison-Wesley Publishing Company.\n      The AppleTalk Update-Based\
    \ Routing Protocol Specification is the\n      official Apple specification of\
    \ AURP.  It includes the artwork\n      currently missing from this document.\
    \ Available from APDA.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction to the AppleTalk Update-Based Routing Protocol        6
  contents:
  - "1.  Introduction to the AppleTalk Update-Based Routing Protocol        6\n  \
    \  Wide area routing enhancements provided by AURP                    6\n"
- title: 2.  Wide Area AppleTalk Connectivity                                   7
  contents:
  - "2.  Wide Area AppleTalk Connectivity                                   7\n  \
    \  AppleTalk tunneling                                                7\n    IP\
    \ tunneling                                                      14\n    Point-to-point\
    \ tunneling                                          17\n"
- title: 3.  Propagating Routing Information With the AppleTalk Update-Based
  contents:
  - "3.  Propagating Routing Information With the AppleTalk Update-Based\n    Routing\
    \ Protocol                                                  18\n    AURP architectural\
    \ model                                          18\n    Maintaining current routing\
    \ information with AURP                 20\n    AURP-Tr                      \
    \                                     21\n    One-way connections            \
    \                                   22\n    Initial information exchange     \
    \                                 22\n    Reobtaining routing information    \
    \                               28\n    Updating routing information         \
    \                             28\n    Processing update events               \
    \                           33\n    Router-down notification                 \
    \                         38\n    Obtaining zone information                 \
    \                       40\n    Hiding local networks from remote networks   \
    \                     44\n    AURP packet format                             \
    \                   45\n    Error codes                                      \
    \                 55\n"
- title: 4.  Representing Wide Area Network Information                        56
  contents:
  - "4.  Representing Wide Area Network Information                        56\n  \
    \  Network hiding                                                    56\n    Device\
    \ hiding                                                     57\n    Resolving\
    \ network-numbering conflicts                             59\n    Zone-name management\
    \                                              65\n    Hop-count reduction   \
    \                                            66\n    Routing loops           \
    \                                          67\n    Using alternative paths   \
    \                                        71\n    Network management          \
    \                                      73\n"
- title: Appendix.  Implementation Details                                     75
  contents:
  - "Appendix.  Implementation Details                                     75\n  \
    \  State diagrams                                                    75\n    AURP\
    \ table overflow                                               75\n    A scheme\
    \ for updates following initial information exchange       75\n    Implementation\
    \ effort for different components of AURP            76\n    Creating free-trade\
    \ zones                                         77\n    Implementation details\
    \ for clustering                             78\n    Modified RTMP algorithms\
    \ for a backup path                        79\n"
- title: Security Considerations                                               82
  contents:
  - 'Security Considerations                                               82

    '
- title: Author's Address                                                      82
  contents:
  - 'Author''s Address                                                      82

    '
- title: 1.  INTRODUCTION TO THE APPLETALK UPDATE-BASED ROUTING PROTOCOL
  contents:
  - "1.  INTRODUCTION TO THE APPLETALK UPDATE-BASED ROUTING PROTOCOL\n   The AppleTalk\
    \ Update-based Routing Protocol (AURP) provides wide area\n   routing enhancements\
    \ to the AppleTalk routing protocols and is fully\n   compatible with AppleTalk\
    \ Phase 2. AURP consists of three major\n   components:\n      AppleTalk tunneling\
    \ through foreign network systems-for example,\n      TCP/IP (Transmission Control\
    \ Protocol/Internet Protocol) and over\n      point-to-point links\n      the\
    \ propagation of routing information between internet routers\n      connected\
    \ through foreign network systems or over point-to-point\n      links\n      the\
    \ presentation of AppleTalk network information by an internet\n      router to\
    \ nodes or to other Phase 2-compatible routers on its local\n      internet-in\
    \ other words, on the AppleTalk internet connected\n      directly to the router\n\
    \   Chapter 3, \"Propagating Routing Information With the AppleTalk\n   Update-Based\
    \ Routing Protocol,\" describes the elements of AURP that\n   are essential for\
    \ a minimal implementation of AURP. AURP includes\n   many optional features for\
    \ the presentation of network information.\n   You can implement many of these\
    \ optional features on routers that use\n   either AURP or RTMP (Routing Table\
    \ Maintenance Protocol) for\n   routing-information propagation.\n   Figure 1-1\
    \ shows how the three major components of AURP interact.\n                 <<Figure\
    \ 1-1  Major components of AURP>>\n   Wide Area Routing Enhancements Provided\
    \ by AURP\n   AURP provides AppleTalk Phase 2-compatible routing for large wide\n\
    \   area networks (WANs). Key wide area routing enhancements provided by\n   AURP\
    \ include:\n      tunneling through TCP/IP internets and other foreign network\n\
    \      systems\n      point-to-point tunneling\n      basic security-including\
    \ device hiding and network hiding\n      remapping of remote network numbers\
    \ to resolve numbering conflicts\n      internet clustering to minimize routing\
    \ traffic and routing-\n      information storage requirements\n      hop-count\
    \ reduction to allow the creation of larger internets\n      improved use of alternate\
    \ paths through hop-count weighting and\n      the designation of backup paths\n"
- title: 2.  WIDE AREA APPLETALK CONNECTIVITY
  contents:
  - "2.  WIDE AREA APPLETALK CONNECTIVITY\n   This chapter describes the wide area\
    \ connectivity capabilities\n   provided by the AppleTalk Update-based Routing\
    \ Protocol (AURP),\n   including:\n      AppleTalk tunneling\n      tunneling\
    \ through TCP/IP internets\n      tunneling over point-to-point links\n   AppleTalk\
    \ Tunneling\n   Tunneling allows a network administrator to connect two or more\n\
    \   native internets through a foreign network system to form a large\n   wide\
    \ area network (WAN). For example, an AppleTalk WAN might consist\n   of two or\
    \ more native AppleTalk internets connected through a tunnel\n   built on a TCP/IP\
    \ internet. In such an AppleTalk WAN, native\n   internets use AppleTalk protocols,\
    \ while the foreign network system\n   uses a different protocol family.\n   A\
    \ tunnel connecting AppleTalk internets functions as a single,\n   virtual data\
    \ link between the internets. A tunnel can be either a\n   foreign network system\
    \ or a point-to-point link. Figure 2-1 shows an\n   AppleTalk tunnel.\n      \
    \               <<Figure 2-1  AppleTalk tunnel>>\n   There are two types of tunnels:\n\
    \      dual-endpoint tunnels, which have only two routers on a tunnel-for\n  \
    \    example, point-to-point tunnels\n      multiple-endpoint tunnels-herein referred\
    \ to as multipoint tunnels-\n      which have two or more routers on a tunnel\n\
    \   AURP implements multipoint tunneling by providing mechanisms for data\n  \
    \ encapsulation and the propagation of routing information to specific\n   routers.\n\
    \   Exterior Routers\n   An AppleTalk router with a port that connects an AppleTalk\
    \ internet\n   to a tunnel is an exterior router. An exterior router always sends\n\
    \   split-horizoned routing information to the other exterior routers on\n   a\
    \ multipoint tunnel. That is, an exterior router on a multipoint\n   tunnel sends\
    \ routing information for only its local internet to other\n   exterior routers\
    \ on that tunnel. An exterior router never exports\n   routing information obtained\
    \ from other exterior routers on the\n   tunnel, because the exterior routers\
    \ communicate their own routing\n   information to one another.\n   As shown in\
    \ Figure 2-2, the absence or presence of redundant paths,\n   or loops, across\
    \ a tunnel changes the way an exterior router defines\n   its local internet.\
    \ For more information about redundant paths, see\n   the section \"Redundant\
    \ Paths\" in Chapter 4. If no loops exist across\n   a tunnel, an exterior router's\
    \ local internet comprises all networks\n   connected directly or indirectly to\
    \ other ports on the exterior\n   router.  When loops exist across a tunnel, an\
    \ exterior router's local\n   internet comprises only those networks for which\
    \ the next internet\n   router is not across a tunnel. Using this definition of\
    \ a local\n   internet, two exterior routers' local internets might overlap if\n\
    \   loops existed across a tunnel.  For more information about routing\n   loops,\
    \ see the section \"Routing Loops\" in Chapter 4.\n            <<Figure 2-2  An\
    \ exterior router's local internet>>\n   An exterior router functions as an AppleTalk\
    \ router within its local\n   internet and as an end node in the foreign network\
    \ system connecting\n   AppleTalk internets. An exterior router uses RTMP to communicate\n\
    \   routing information to its local internet, and uses AURP and the\n   network-layer\
    \ protocol of the tunnel's underlying foreign network\n   system to communicate\
    \ with other exterior routers connected to the\n   tunnel. An exterior router\
    \ encapsulates AppleTalk data packets using\n   the headers required by the foreign\
    \ network system, then forwards the\n   packets to another exterior router connected\
    \ to the tunnel.\n   FORWARDING DATA: When forwarding AppleTalk data packets across\
    \ a\n   multipoint tunnel, an exterior router\n      encapsulates the AppleTalk\
    \ data packets in the packets of the\n      tunnel's underlying foreign network\
    \ system by adding the headers\n      required by that network system\n      adds\
    \ an AURP-specific header-called a domain header-immediately\n      preceding\
    \ each AppleTalk data packet\n   A domain header contains additional addressing\
    \ information-including\n   a source domain identifier and destination domain\
    \ identifier. For\n   more information about domain headers, see the sections\
    \ \"AppleTalk\n   Data-Packet Format\" and \"AppleTalk Data-Packet Format for\
    \ IP\n   Tunneling\" later in this chapter. For detailed information about\n \
    \  domain identifiers, see the section \"Domain Identifiers\" later in\n   this\
    \ chapter.\n   Before forwarding a data packet to a network in another exterior\n\
    \   router's local internet, an exterior router must obtain the foreign-\n   protocol\
    \ address of the exterior router that is the next internet\n   router in the path\
    \ to the packet's destination network. The exterior\n   router then sends the\
    \ packet to that exterior router's foreign-\n   protocol address using the network-layer\
    \ protocol of the foreign\n   network system. The exterior router need not know\
    \ anything further\n   about how the packet traverses this virtual data link.\n\
    \   Once the destination exterior router receives the packet, it removes\n   the\
    \ headers required by the foreign network system and the domain\n   header, then\
    \ forwards the packet to its destination in the local\n   AppleTalk internet.\n\
    \   If the length of an AppleTalk data packet in bytes is greater than\n   that\
    \ of the data field of a foreign-protocol packet, a forwarding\n   exterior router\
    \ must fragment the AppleTalk data packet into multiple\n   foreign-protocol packets,\
    \ then forward these packets to their\n   destination. Once the destination exterior\
    \ router receives all of the\n   fragments that make up the AppleTalk data packet,\
    \ it reassembles the\n   packet.\n   CONNECTING MULTIPLE TUNNELS TO AN EXTERIOR\
    \ ROUTER: An exterior router\n   can also connect two or more multipoint tunnels.\
    \ As shown in Figure\n   2-3, when an exterior router connects more than one multipoint\n\
    \   tunnel, the tunnels can be built on any of the following:\n      the same\
    \ foreign network system\n      different foreign network systems\n      similar,\
    \ but distinct foreign network systems\n     <<Figure 2-3  Connecting multiple\
    \ tunnels to an exterior router>>\n   Whether the tunnels connected to an exterior\
    \ router are built on\n   similar or different foreign network systems, each tunnel\
    \ acts as an\n   independent, virtual data link. As shown in Figure 2-4, an exterior\n\
    \   router connected to multiple tunnels functions logically as though it\n  \
    \ were two or more exterior routers connected to the same AppleTalk\n   network,\
    \ with each exterior router connected to a different tunnel.\n     <<Figure 2-4\
    \  An exterior router connected to multiple tunnels>>\n   Fully Connected and\
    \ Partially Connected Tunnels\n   An AppleTalk multipoint tunnel functions as\
    \ a virtual data link. AURP\n   assumes full connectivity across a multipoint\
    \ tunnel-that is, all\n   exterior routers on such a tunnel can communicate with\
    \ one another.\n   An exterior router always sends split-horizoned routing information\n\
    \   to other exterior routers on a multipoint tunnel. That is, an\n   exterior\
    \ router on a multipoint tunnel sends routing information for\n   only its local\
    \ internet to other exterior routers on that tunnel. An\n   exterior router never\
    \ exports routing information obtained from other\n   exterior routers on the\
    \ tunnel, because exterior routers communicate\n   their routing information to\
    \ one another.\n   If all exterior routers connected to a multipoint tunnel are\
    \ aware of\n   and can send packets to one another, that tunnel is fully connected.\n\
    \   If some of the exterior routers on a multipoint tunnel are not aware\n   of\
    \ one another, the tunnel is only partially connected. Figure 2-5\n   shows examples\
    \ of a fully connected tunnel, a partially connected\n   tunnel, and two fully\
    \ connected tunnels.\n      <<Figure 2-5  Fully connected and partially connected\
    \ tunnels>>\n   In the second example shown in Figure 2-5, the network administrator\n\
    \   may have connected the tunnel partially for one of these reasons:\n      to\
    \ prevent the local internets connected to exterior routers A and\n      C from\
    \ communicating with one another, while providing full\n      connectivity between\
    \ the local internets connected to exterior\n      router\n      B and the local\
    \ internets connected to both exterior routers A and\n      C\n      because local\
    \ internets connected to exterior routers A and C need\n      access only to local\
    \ internets connected to exterior router B-not\n      to each other's local internets\n\
    \      because exterior routers A and C-which should be aware of one\n      another-were\
    \ misconfigured\n   Generally, an exterior router cannot determine whether a multipoint\n\
    \   tunnel is fully connected or partially connected. In the second\n   example\
    \ in Figure 2-5, exterior router B does not know whether\n   exterior routers\
    \ A and C are aware of one another. However, exterior\n   router B must assume\
    \ that the tunnel is fully connected, and that\n   exterior routers A and C can\
    \ exchange routing information. An\n   exterior router should never forward routing\
    \ information received\n   from other exterior routers back across the tunnel.\
    \ It should always\n   send split-horizoned routing information to other exterior\
    \ routers.\n   If connecting exterior routers A and C directly would be either\n\
    \   expensive or slow, a network administrator could instead establish\n   two\
    \ independent multipoint tunnels-one connecting exterior routers A\n   and B,\
    \ another connecting exterior routers B and C-as shown in the\n   third example\
    \ in Figure 2-5. Exterior routers A and C could then\n   establish connectivity\
    \ by routing all data packets forwarded by one\n   to the other through exterior\
    \ router B.\n   Hiding Local Networks From Tunnels\n   When configuring a tunneling\
    \ port on an exterior router, a network\n   administrator can provide network-level\
    \ security to a network in the\n   exterior router's local internet by hiding\
    \ that network. Hiding a\n   specific network in the exterior router's local internet\
    \ prevents\n   internets across a multipoint tunnel from becoming aware of the\n\
    \   presence of that network. When the exterior router exchanges routing\n   information\
    \ with other exterior routers connected to the tunnel, it\n   exports no information\
    \ about any hidden networks to the exterior\n   routers from which the networks\
    \ are hidden.\n   An administrator can specify that certain networks in the exterior\n\
    \   router's local internet be hidden from a specific exterior router\n   connected\
    \ to the tunnel or from all exterior routers on the tunnel.\n   Nodes on the local\
    \ internet of an exterior router from which a\n   network is hidden cannot access\
    \ that network. Neither the zones on a\n   hidden network nor the names of devices\
    \ in those zones appear in the\n   Chooser on computers connected to such an internet.\
    \ When a network is\n   hidden, its nodes are also unable to access internets\
    \ from which the\n   network is hidden. If a node on a hidden network sends a\
    \ packet\n   across a tunnel to a node on an internet from which it is hidden,\n\
    \   even if the packet arrives at its destination, the receiving node\n   cannot\
    \ respond. The exterior router connected to the receiving node's\n   internet\
    \ does not know the return path to the node on the hidden\n   network. Thus, it\
    \ appears to the node on the hidden network that the\n   node to which it sent\
    \ the packet is inaccessible.\n   ADVANTAGES AND DISADVANTAGES OF NETWORK HIDING:\
    \ Network hiding\n   provides the following advantages:\n      On large, global\
    \ WANs, a network administrator can configure\n      network-level security for\
    \ an organization's internets.\n      It reduces the amount of network traffic\
    \ across both a tunnel and\n      the internets connected to that tunnel.\n  \
    \ Network hiding has the following disadvantages:\n      Nodes on hidden networks\
    \ have limited access to internets across a\n      tunnel.\n      AppleTalk networking\
    \ software running on a node on a hidden network\n      lists all of the AppleTalk\
    \ zone names exported by exterior routers\n      connected to a tunnel, but may\
    \ list the names of only some or none\n      of the devices in those zones. It\
    \ cannot list the names of devices\n      that are unable to respond to Name Binding\
    \ Protocol (NBP) lookups\n      originating from a node on a hidden network.\n\
    \   Domain Identifiers\n   Exterior routers assign a unique domain identifier\
    \ to each AppleTalk\n   internet, or domain. Domain identifiers enable exterior\
    \ routers on a\n   multipoint tunnel to distinguish individual AppleTalk internets\
    \ in a\n   wide area internet from one another.\n   The definition of an AppleTalk\
    \ domain identifier is extensible to\n   allow for future use when many additional\
    \ types of AppleTalk tunnels\n   and tunneling topologies may exist:\n      Under\
    \ the current version of AURP, each exterior router connected\n      to a multipoint\
    \ tunnel assigns a domain identifier to its local\n      AppleTalk internet that\
    \ uniquely identifies that internet on the\n      tunnel. If redundant paths connect\
    \ an AppleTalk internet through\n      more than one exterior router on a tunnel,\
    \ each exterior router can\n      assign a different domain identifier to that\
    \ internet, or AppleTalk\n      domain, as shown in Figure 2-6.\n      Under future\
    \ routing protocols, a domain identifier will define the\n      boundaries of\
    \ an AppleTalk domain globally-for all exterior\n      routers.  Thus, a domain\
    \ identifier will be unique among all\n      domains in a wide area internet.\
    \ All exterior routers within a wide\n      area internet will use the same domain\
    \ identifier for a given\n      AppleTalk internet, as shown in Figure 2-6.\n\
    \                    <<Figure 2-6  Domain identifiers>>\n   To simplify an exterior\
    \ router's port configuration, a parameter that\n   is already administrated-such\
    \ as a node address-can serve as the\n   basis for an exterior router's domain\
    \ identifier.\n   GENERAL DOMAIN-IDENTIFIER FORMAT: Figure 2-7 shows the general\
    \ form\n   of a domain identifier.\n             <<Figure 2-7  General domain-identifier\
    \ format>>\n   The general domain identifier (DI) consists of the following fields:\n\
    \   Length:  Byte 1 represents the length of the DI in bytes, not\n   including\
    \ the length byte. A DI must consist of an even number of\n   bytes. Thus, the\
    \ length byte is always an odd-numbered byte. The\n   length field permits tunneling\
    \ through foreign network systems that\n   have addresses of any length-including\
    \ the long addresses\n   characteristic of X.25 and OSI. The value of the length\
    \ byte varies,\n   depending on the format of the DI.\n   Authority:  Byte 2 indicates\
    \ the authority that administrates the\n   identifier bytes of the DI. At present,\
    \ Apple has defined only two\n   authority-byte values:\n      $01-indicates that\
    \ the subsequent bytes correspond to a unique,\n      centrally administrated\
    \ IP address\n      $00-the null DI-indicates that no additional bytes follow\n\
    \   All other authority-byte values are reserved and should not be used.\n   Identifier:\
    \  The identifier field starts at byte 3 and consists of a\n   variable number\
    \ of bytes of the type indicated by the authority byte.\n   NULL DOMAIN-IDENTIFIER\
    \ FORMAT: The use of a null domain identifier is\n   appropriate only when there\
    \ is no need to distinguish the domains\n   connected to a tunnel-for example,\
    \ where a tunnel exists within a\n   single internet-or for a point-to-point link.\
    \ Figure 2-8 shows the\n   null form of a domain identifier.\n               <<Figure\
    \ 2-8  Null domain-identifier format>>\n   A null domain identifier consists of\
    \ the following bytes:\n   Length:  Byte 1 contains the value $01, defining the\
    \ length of the\n   null DI as one byte.\n   Authority:  Byte 2 contains the value\
    \ $00, indicating a null DI.\n   AppleTalk Data-Packet Format\n   Part of the\
    \ format of an AppleTalk data packet sent across a\n   multipoint tunnel or a\
    \ point-to-point link depends on the underlying\n   foreign network system. The\
    \ headers required by a foreign-network\n   protocol always precede an AppleTalk\
    \ data packet sent across a\n   multipoint tunnel.  A domain header generally\
    \ immediately precedes\n   the AppleTalk data packet. Figure 2-9 shows the format\
    \ of an\n   AppleTalk data packet preceded by a domain header.\n     <<Figure\
    \ 2-9  AppleTalk data-packet format with a domain header>>\n   A domain header\
    \ consists of the following fields:\n   Destination DI:  The length of the destination\
    \ DI field in bytes\n   depends on the type of DI.\n   Source DI:  The length\
    \ of the source DI field in bytes depends on the\n   type of DI.\n   Version number:\
    \  The version number field is two bytes in length and\n   currently contains\
    \ the value 0001.\n   Reserved:  The two-byte field that follows the version number\
    \ field\n   is reserved for future use and is set to 0000.\n   Packet type:  The\
    \ two-byte packet type field contains the value 0002\n   to identify the data\
    \ that follows as AppleTalk data-distinguishing it\n   from other data, such as\
    \ routing data. In the future, Apple may\n   define other values for this field.\n\
    \   An AppleTalk data packet does not require a domain header if\n      it is\
    \ sent across a multipoint tunnel or point-to-point link that\n      provides\
    \ separate channels for data and routing packets\n      the domain header's destination\
    \ DI and source DI fields would both\n      contain null DIs\n   Omitting a domain\
    \ header reduces overhead associated with the\n   exchange of routing information,\
    \ without any loss of routing\n   information. Figure 2-10 shows the format of\
    \ an AppleTalk data packet\n   without a domain header.\n   <<Figure 2-10  AppleTalk\
    \ data-packet format without a domain header>>\n   IP Tunneling\n   The Transmission\
    \ Control Protocol/Internet Protocol (TCP/IP) protocol\n   suite is a widely used\
    \ communications standard that provides\n   interoperability among computers from\
    \ various vendors, including\n   Apple, IBM, Digital Equipment Corporation, Sun,\
    \ and Hewlett-Packard.\n   Descriptions of three of the most important TCP/IP\
    \ protocols follow:\n      The Transmission Control Protocol (TCP) is a transport-layer\n\
    \      protocol that provides reliable data transmission between\n      processes-that\
    \ is, between programs that communicate with one\n      another. This connection-oriented,\
    \ byte-stream protocol ensures\n      error-free, sequential data delivery, without\
    \ loss or duplication.\n      The User Datagram Protocol (UDP) is a transport-layer\
    \ protocol\n      that provides best-effort, low-overhead interprocess data\n\
    \      transmission.  This datagram-oriented protocol allows higher-layer\n  \
    \    protocols that do not require reliability to transmit data without\n    \
    \  incurring the overhead associated with TCP. UDP does no error\n      checking,\
    \ does not acknowledge its successful receipt of data,\n      and does not sequence\
    \ incoming messages. UDP messages may be lost,\n      duplicated, or improperly\
    \ sequenced.\n      The Internet Protocol (IP) is a network-layer protocol that\n\
    \      provides connectionless, best-effort datagram delivery across\n      multiple\
    \ networks. Each host on a TCP/IP network has a unique,\n      centrally administrated\
    \ internet address, called an IP address,\n      that identifies the node. The\
    \ header of an IP datagram contains its\n      source and destination IP addresses,\
    \ allowing any host to route a\n      datagram to its destination. TCP/IP provides\
    \ connectivity between\n      many different network types that use data frames\
    \ of various sizes.\n      Therefore, IP can fragment a datagram before sending\
    \ it across an\n      internet.  Datagram fragments can fit into data frames of\
    \ any size.\n      Once all of a datagram's fragments reach their destination,\
    \ IP\n      reassembles the datagram.\n   Protocols in higher layers pass data\
    \ to TCP or UDP for delivery to\n   peer processes. TCP and UDP encapsulate the\
    \ data in segments, using\n   the appropriate headers, then pass the segments\
    \ to IP. IP further\n   encapsulates the data in IP datagrams, determines each\
    \ datagram's\n   path to its destination, and sends the datagrams across the internet.\n\
    \   Figure 2-11 shows how the TCP/IP family of protocols conforms to the\n   Open\
    \ Systems Interconnection (OSI) model.\n         <<Figure 2-11  TCP/IP protocol\
    \ stack and the OSI model>>\n   Exterior routers that connect AppleTalk internets\
    \ through a TCP/IP\n   tunnel are configured as nodes on both an AppleTalk internet\
    \ and on\n   the TCP/IP internet. Thus, an exterior router on a TCP/IP tunnel\
    \ is\n   also an IP end node in the TCP/IP network system. Exterior routers\n\
    \   use the TCP/IP internet only to exchange AppleTalk routing\n   information\
    \ and AppleTalk data packets with one another. An exterior\n   router encapsulates\
    \ AppleTalk data packets in IP datagrams before\n   sending them across the TCP/IP\
    \ internet to a forwarding exterior\n   router, which decapsulates the packets,\
    \ then forwards them to their\n   destination AppleTalk networks.\n   IP Domain-Identifier\
    \ Format\n   Under the current version of AURP, exterior routers on IP tunnels\n\
    \   must use domain identifiers that are based on IP addresses. An\n   exterior\
    \ router on an IP tunnel derives its domain identifier from\n   its IP address.\
    \ Thus, a network administrator does not need to\n   configure an exterior router's\
    \ domain identifier. Figure 2-12 shows\n   the IP form of a domain identifier.\n\
    \               <<Figure 2-12  IP domain-identifier format>>\n   An IP domain\
    \ identifier consists of the following fields:\n   Length:  Byte 1 contains the\
    \ value $07, defining the length of the IP\n   DI as seven bytes.\n   Authority:\
    \  Byte 2 contains the value $01, indicating that the\n   remainder of the DI\
    \ is based on an IP address.\n   Distinguisher:  Bytes 3 and 4 are reserved for\
    \ future use and are set\n   to 0 ($00).\n   IP address:  Bytes 5 through 8 contain\
    \ the four-byte IP address of\n   either the sending or the receiving exterior\
    \ router.\n   NOTE:  Future versions of AURP will allow exterior routers to\n\
    \   usealternative formats for domain identifiers, even on IP tunnels.\n   AppleTalk\
    \ Data-Packet Format for IP Tunneling\n   The following protocol headers precede\
    \ an AppleTalk data packet that\n   is forwarded across an IP tunnel by an exterior\
    \ router:\n      a data-link header\n      an IP header\n      a User Datagram\
    \ Protocol (UDP) header\n      a domain header\n   An exterior router encapsulates\
    \ AppleTalk data packets in UDP packets\n   when forwarding them through its UDP\
    \ port 387, across an IP tunnel,\n   to UDP port 387 on another exterior router.\
    \ When encapsulating data\n   packets, an exterior router should always use UDP\
    \ checksums. When a\n   destination exterior router receives the UDP packets at\
    \ UDP port 387,\n   it decapsulates the packets.\n   A domain header consists\
    \ of the following fields:\n   Destination DI:  This field contains the DI of\
    \ the exterior router to\n   which a packet is being forwarded.\n   Source DI:\
    \  This field contains the DI of the exterior router that is\n   forwarding a\
    \ packet.\n   Version number:  The version number field is two bytes in length\
    \ and\n   currently contains the value 0001.\n   Reserved:  The two-byte field\
    \ that follows the version number field\n   is reserved for future use and is\
    \ set to 0000.\n   Packet type:  The two-byte packet type field contains the value\
    \ 0002\n   to identify the data that follows as AppleTalk data-distinguishing\
    \ it\n   from other data, such as routing data.\n   An AppleTalk data packet consists\
    \ of a domain header and AppleTalk\n   data.  Figure 2-13 shows the format of\
    \ an AppleTalk data packet\n   forwarded across an IP tunnel.\n   <<Figure 2-13\
    \  AppleTalk data packet forwarded across an IP tunnel>>\n   Point-to-Point Tunneling\n\
    \   In point-to-point tunneling, two remote AppleTalk local area networks\n  \
    \ (LANs) connected to half-routers communicate with one another over a\n   point-to-point\
    \ link. A point-to-point link may consist of modems\n   communicating over a standard\
    \ telephone line or a leased line, such\n   as a T1 line. Figure 2-14 shows an\
    \ example of point-to-point\n   tunneling.\n                 <<Figure 2-14  Point-to-point\
    \ tunneling>>\n   Generally, exterior routers use null domain identifiers on point-to-\n\
    \   point links, because there is no IP address to be administrated and\n   the\
    \ opposite end of the tunnel is already uniquely identified.\n   However, an exterior\
    \ router may use other domain-identifier formats.\n   Point-to-Point Protocol\n\
    \   The Point-to-Point Protocol (PPP) is a data-link-layer protocol that\n   provides\
    \ a standard method of encapsulating and decapsulating\n   network-layer protocol\
    \ information, and transmitting that information\n   over point-to-point links.\
    \ PPP includes an extensible Link Control\n   Protocol (LCP) and a suite of Network\
    \ Control Protocols (NCPs) that\n   configure, enable, and disable various network-layer\
    \ protocols.\n   The AppleTalk Control Protocol (ATCP) is a PPP NCP for AppleTalk\n\
    \   protocols. ATCP configures, enables, and disables the AppleTalk\n   network-layer\
    \ protocol DDP on the half-router at each end of a\n   point-to-point link. ATCP\
    \ also specifies the protocol that a half-\n   router uses to propagate routing\
    \ information-for example, AURP.  When\n   using AURP for routing-information\
    \ propagation, a half-router uses a\n   specific PPP protocol type to identify\
    \ AURP routing-information\n   packets-that is, packets preceded by a domain header.\
    \ PPP provides\n   separate channels for AppleTalk data packets and AppleTalk\
    \ routing-\n   information packets. Thus, a half-router can use DDP encapsulation\
    \ to\n   send AppleTalk data packets without including their domain headers.\n\
    \   When using AURP, a half-router should accept both AppleTalk data\n   packets\
    \ that are preceded by domain headers and DDP-encapsulated\n   packets.\n   NOTE:\
    \  The Request for Comments (RFC) 1378, \"The PPP AppleTalk\n   Control Protocol\
    \ (ATCP),\" provides a detailed specification of ATCP,\n   as well as information\
    \ about using PPP to send AppleTalk data.\n"
- title: 3.  PROPAGATING ROUTING INFORMATION WITH THE APPLETALK UPDATE-BASED
  contents:
  - "3.  PROPAGATING ROUTING INFORMATION WITH THE APPLETALK UPDATE-BASED\n    ROUTING\
    \ PROTOCOL\n   This chapter describes the required elements of AURP. It provides\n\
    \   detailed information about using the AppleTalk Update-based Routing\n   Protocol\
    \ (AURP) to propagate routing information between AppleTalk\n   exterior routers\
    \ connected through a foreign network or over a\n   point-to-point link, and includes\
    \ information about\n      the AURP architectural model\n      one-way connections\n\
    \      exchanging routing information\n      updating routing information\n  \
    \    notifying other exterior routers that an exterior router is going\n     \
    \ down\n      obtaining zone information\n      packet formats\n      error codes\n\
    \   AURP Architectural Model\n   AURP provides the functionality of the Routing\
    \ Table Maintenance\n   Protocol (RTMP) and the Zone Information Protocol (ZIP)\
    \ while\n   eliminating most of the routing traffic generated by these protocols.\n\
    \   Figure 3-1 shows the architectural model for AURP.\n                 <<Figure\
    \ 3-1  AURP architectural model>>\n   Generally, an AppleTalk router uses RTMP\
    \ and ZIP to maintain routing\n   information, and sends RTMP data packets, ZIP\
    \ Queries, and ZIP\n   Replies out its ports. However, if one of the router's\
    \ ports is\n   connected to an AppleTalk tunnel, the architectural model for the\n\
    \   router's central routing module becomes more complex. Logically, the\n   central\
    \ routing module in an exterior router communicates RTMP and\n   ZIP information\
    \ to an RTMP/ZIP-to-AURP conversion module, which sends\n   AURP data packets\
    \ out the tunneling port.\n   RTMP/ZIP-to-AURP Conversion Module\n   The RTMP/ZIP-to-AURP\
    \ conversion module maintains split-horizoned\n   routing-table information and\
    \ network number-to-zone name mappings\n   for each exterior router on the tunnel-that\
    \ is, a copy of the routing\n   information for each exterior router's local internet.\
    \ Figure 3-2\n   shows the architectural components of the RTMP/ZIP-to-AURP conversion\n\
    \   module.\n      <<Figure 3-2  RTMP/ZIP-to-AURP conversion module architecture>>\n\
    \   The AURP module of the conversion module obtains routing information\n   from\
    \ the other exterior routers on the tunnel, then periodically\n   updates the\
    \ routing-table information and the mappings in the\n   conversion module.  The\
    \ RTMP module passes this routing-table\n   information to the exterior router's\
    \ central routing module.\n   Logically, the RTMP module generates an RTMP data\
    \ packet for each\n   exterior router on the tunnel every ten seconds-the RTMP\n\
    \   retransmission time-then passes the packet to the central routing\n   module.\n\
    \   The RTMP/ZIP-to-AURP conversion module also maintains a split-\n   horizoned\
    \ copy of the routing information maintained by the exterior\n   router in which\
    \ it resides. Logically, the conversion module obtains\n   the routing information\
    \ from RTMP data packets and ZIP Replies sent\n   by the exterior router's central\
    \ routing module, then updates the\n   routing information in the conversion module.\n\
    \   The AURP module exports routing information about its local AppleTalk\n  \
    \ internet to other exterior routers on the tunnel.\n   AURP Transport Layering\n\
    \   AURP can propagate routing information between exterior routers using\n  \
    \    a simple, reliable transport based on an underlying datagram\n      service-such\
    \ as the default transport-layer service for AURP,\n      AURP-Tr. See the section\
    \ \"AURP-Tr,\" later in this chapter,\n      for more information.\n      a more\
    \ complex transport-layer service-such as TCP\n   Figure 3-3 shows the AURP transport-layering\
    \ model.\n               <<Figure 3-3  AURP transport-layering model>>\n   Maintaining\
    \ Current Routing Information With AURP\n   AURP allows exterior routers to maintain\
    \ current routing information\n   for other exterior routers on a tunnel by supporting\n\
    \      the reliable, initial exchange of split-horizoned routing\n      information\
    \ - that is, the routing information for an exterior\n      router's local internet\n\
    \      reliable updates to that information whenever it changes\n   If an internet\
    \ topology does not change, AURP generates significantly\n   less routing traffic\
    \ than RTMP and ZIP. Thus, an administrator can\n   connect very large AppleTalk\
    \ internets through a tunnel, and the\n   resulting internet generates little\
    \ or no routing traffic on the\n   tunnel.\n   When an exterior router discovers\
    \ another exterior router on the\n   tunnel-that is, a peer exterior router-it\
    \ can request that exterior\n   router to send its routing information. In a reliable,\
    \ initial\n   exchange of split-horizoned routing information, the peer exterior\n\
    \   router returns its network-number list. The peer exterior router also\n  \
    \ returns each connected network's zone information in an unsequenced\n   series\
    \ of zone-information packets. If the exterior router requesting\n   the routing\
    \ information does not receive complete zone information\n   for a network, it\
    \ must retransmit requests for zone information until\n   it receives the information.\n\
    \   Once an exterior router requesting routing information from a peer\n   exterior\
    \ router has received that exterior router's network-number\n   list and complete\
    \ zone information, it typically requests the peer\n   exterior router to notify\
    \ it of any changes to that routing\n   information. The peer exterior router\
    \ then provides the requesting\n   exterior router with reliable updates to its\
    \ routing information-\n   however, it sends no other routing information.\n \
    \  Notifying Other Exterior Routers of Events\n   If an exterior router has requested\
    \ notification of changes in\n   another exterior router's split-horizoned routing\
    \ information, that\n   exterior router must notify the requesting exterior router\
    \ of any\n   event that changes its routing information. Thus, an exterior router\n\
    \   must send updated routing information to the requesting exterior\n   router\
    \ whenever any of the following events occur:\n      the addition of a new, exported\
    \ network-that is, a network that is\n      not hidden-to the exterior router's\
    \ local internet and,\n      consequently, to its routing table\n      a change\
    \ in the path to an exported network that causes the\n      exterior router to\
    \ access that network through its local internet\n      rather than through a\
    \ tunneling port\n      the removal of an exported network from the exterior router's\n\
    \      routing table because a network in the exterior router's local\n      internet\
    \ has gone down\n      a change in the path to an exported network that causes\
    \ the\n      exterior router to access that network through a tunneling port\n\
    \      rather than through its local internet\n      a change in the distance\
    \ to an exported network\n      a change to a zone name in the zone list of an\
    \ exported network-\n      an event not currently supported by ZIP or the current\
    \ version of\n      AURP\n      the exterior router goes down or is shut down\n\
    \   Routing-information updates allow an exterior router to maintain\n   accurate,\
    \ split-horizoned routing information for a peer exterior\n   router on a tunnel.\n\
    \   AURP-Tr\n   AURP-Tr, the default transport-layer service for AURP, provides\
    \ a\n   simple, reliable transport that is based on an underlying datagram\n \
    \  service. When using AURP-Tr, only one sequenced transaction can be\n   outstanding,\
    \ or unacknowledged, at a time-greatly simplifying the\n   implementation of AURP,\
    \ without limiting its functionality.\n   One-Way Connections\n   A one-way connection\
    \ is an asymmetrical link between a data sender\n   and a data receiver that are\
    \ using AURP-Tr, in which an exterior\n   router functioning as a data sender\
    \ sends a sequenced, reliable,\n   unidirectional data stream to an exterior router\
    \ functioning as a\n   data receiver.  An exterior router can send routing information\
    \ over\n   a one-way connection as\n      sequenced data\n      transaction data\n\
    \   Sequenced data is data sent in sequence by the data sender and\n   delivered\
    \ reliably to the data receiver. Typically, the sending of\n   sequenced data\
    \ is unprovoked-that is, it is not requested by a data\n   receiver. However,\
    \ a data receiver can request sequenced data. Figure\n   3-4 shows sequenced data\
    \ being sent across a one-way connection.\n          <<Figure 3-4  Sequenced data\
    \ on a one-way connection>>\n   Transaction data-also referred to as out-of-band\
    \ data-is data sent\n   unsequenced by the data sender through a linked request/response\n\
    \   transaction that is initiated by the data receiver.\n   The data receiver\
    \ can use a one-way connection to request transaction\n   data from the data sender.\
    \ If the data receiver does not receive a\n   response, it must retransmit its\
    \ request. Figure 3-5 shows a one-way\n   connection on which the data receiver\
    \ requests transaction data from\n   the data sender.\n   <<Figure 3-5  Request\
    \ for transaction data on a one-way connection>>\n   Generally, communication\
    \ between two exterior routers is\n   bidirectional-that is, two one-way connections\
    \ exist between the\n   exterior routers, with each exterior router acting as\
    \ the data sender\n   on one connection and the data receiver on the other. Thus,\
    \ each\n   exterior router can send its routing information to the other.\n  \
    \ Initial Information Exchange\n   When an AppleTalk exterior router discovers\
    \ another exterior router\n   on the tunnel, it uses the underlying transport-layer\
    \ service to open\n   a connection with that exterior router. When using AURP-Tr,\
    \ an\n   exterior router opens this connection as a one-way connection.\n   Open\
    \ Request Packet\n   Once the data receiver opens a connection using the underlying\n\
    \   transport, the data receiver sends an Open Request packet, or Open-\n   Req,\
    \ to the data sender. An Open-Req packet includes the following\n   information:\n\
    \   Send update information flags:  The states of the four send update\n   information\
    \ (SUI) flags indicate whether the data sender should send\n   various types of\
    \ update information over the connection. Typically,\n   the four SUI flags are\
    \ set to 1.\n   Version number:  The version number field indicates the version\
    \ of\n   AURP used by the data receiver. The current version number of AURP is\n\
    \   1.\n   Data field:  The optional data field allows exterior routers with\n\
    \   capabilities beyond those described in this document to notify other\n   exterior\
    \ routers about such options, by initiating option\n   negotiation.  An exterior\
    \ router that has similar capabilities\n   indicates that it accepts the options,\
    \ completing option negotiation.\n   An exterior router that lacks such options\
    \ ignores the information in\n   the data field.\n   Open Response Packet\n  \
    \ When an exterior router receives an Open-Req, it becomes the data\n   sender\
    \ and responds with an Open Response packet, or Open-Rsp, as\n   follows:\n  \
    \    If the exterior router accepts the connection, it returns\n      information\
    \ about its setup in the Open-Rsp. An Open-Rsp also\n      contains an optional\
    \ data field. This data field indicates whether\n      the exterior router accepts\
    \ the options in the data field of the\n      Open-Req to which it is responding.\n\
    \      If the exterior router cannot accept the connection-for example,\n    \
    \  because the Open-Req does not contain the correct version number-it\n     \
    \ returns an error in the Open-Rsp and closes the transport-layer\n      connection.\n\
    \   Figure 3-6 shows a connection-opening dialog between a data sender\n   and\
    \ a data receiver.\n                 <<Figure 3-6  Connection-opening dialog>>\n\
    \   Routing Information Request Packet\n   Under AURP, once two exterior routers\
    \ establish a connection, the\n   data receiver can request the data sender to\
    \ send its routing\n   information by sending it a Routing Information Request\
    \ packet, or\n   RI-Req.\n   Routing Information Response Packets\n   When the\
    \ data sender receives an RI-Req, it reliably sends a sequence\n   of Routing\
    \ Information Response packets, or RI-Rsp, to the exterior\n   router requesting\
    \ the information.\n   The RI-Rsp packets provide a list of exported networks\
    \ on the data\n   sender's local internet and the distance of each network from\
    \ the\n   data sender. The data sender must finish sending RI-Rsp packets to\n\
    \   the exterior router requesting routing information before it can send\n  \
    \ any other sequenced data over the connection. Figure 3-7 shows a\n   routing-information\
    \ request/response dialog between a data sender and\n   a data receiver.\n   \
    \     <<Figure 3-7  Routing-information request/response dialog>>\n   Zone Information\
    \ Request Packet\n   The data receiver can obtain zone information for known networks\
    \ on\n   the data sender's local internet at any time, by sending it a Zone\n\
    \   Information Request packet, or ZI-Req. A ZI-Req lists the numbers of\n   networks\
    \ for which the data receiver is requesting zone information.\n   IMPORTANT: To\
    \ prevent other exterior routers on a tunnel from sending\n   endless streams\
    \ of ZI-Req packets across the tunnel-causing what is\n   referred to as a ZIP\
    \ storm-an exterior router must not export\n   information about a network until\
    \ it has a complete zone list for\n   that network.\n   Zone Information Response\
    \ Packets\n   When the data sender receives a ZI-Req, it responds by sending\n\
    \   unsequenced Zone Information Response packets, or ZI-Rsp, to the data\n  \
    \ receiver. Zone information is transaction data-thus, its reliable\n   delivery\
    \ is not guaranteed. Figure 3-8 shows a zone-information\n   request/response\
    \ dialog between a data sender and a data receiver.\n         <<Figure 3-8  Zone-information\
    \ request/response dialog>>\n   Recovering Lost Zone Information\n   A data receiver\
    \ enters a network-to-zone list association in its\n   routing table for each\
    \ network for which it receives a ZI-Rsp packet.\n   If a data receiver that requested\
    \ zone information for a network does\n   not receive a complete zone list for\
    \ that network, it must retransmit\n   ZI-Req packets, requesting zone information\
    \ for that network, until\n   it receives that network's complete zone information.\n\
    \   To determine if any ZI-Rsp packets were lost, the data receiver\n   periodically\
    \ scans its routing table for networks for which the\n   associated zone lists\
    \ are incomplete-that is, for zone lists that do\n   not include all zones associated\
    \ with the networks. The data receiver\n   sends a ZI-Req to each data sender\
    \ from which it received incomplete\n   zone information, listing the numbers\
    \ of networks for which it has\n   incomplete zone lists. The data sender responds\
    \ to zone information\n   requests by sending ZI-Rsp packets containing the requested\n\
    \   information to the data receiver.\n   Using AURP-Tr for Initial Information\
    \ Exchange\n   The following sections describe the use of AURP-Tr-the default\n\
    \   transport-layer service for AURP-for initial information exchange.\n   OPEN\
    \ REQUEST PACKET: An exterior router sends an Open-Req packet to\n      request\
    \ that an AURP-Tr one-way connection with another exterior\n      router be established\n\
    \      specify the connection ID for that connection\n      pass the AURP version\
    \ number, SUI flags, and optional data to the\n      other exterior router\n \
    \  If the exterior router does not receive an Open-Rsp from the exterior\n   router\
    \ to which it sent an Open-Req, it must retransmit the Open-Req.\n   OPEN RESPONSE\
    \ PACKET: When using AURP-Tr, an exterior router sends an\n   Open-Rsp to\n  \
    \    acknowledge that a one-way connection has been established\n      reject\
    \ a connection\n      return information about its environment, as well as any\
    \ optional\n      data, to the exterior router from which it received an Open-Req\n\
    \   If an exterior router receives an Open-Req on a one-way connection\n   that\
    \ is already open-that is, if it receives an Open-Req with the\n   same connection\
    \ ID as an open one-way connection-an Open-Rsp sent\n   previously may have been\
    \ lost. The exterior router receiving the\n   duplicate Open-Req should send a\
    \ duplicate Open-Rsp to the sending\n   exterior router, unless it has already\
    \ received some other packet on\n   the connection-such as an RI-Req-indicating\
    \ the existence of a fully\n   established connection.\n   ROUTING INFORMATION\
    \ RESPONSE PACKETS: When responding to a request\n   for routing information using\
    \ AURP-Tr, an exterior router sends a\n   sequence of RI-Rsp packets to the exterior\
    \ router requesting the\n   information.  However, an exterior router's complete\
    \ list of network\n   numbers often fits in a single RI-Rsp packet. Each RI-Rsp\
    \ packet\n   contains the following information:\n   Connection ID:  The connection\
    \ ID identifies the specific one-way\n   connection to which a packet belongs.\n\
    \   Sequence number:  The sequence number identifies an individual packet\n  \
    \ on a connection. Packets on a connection are numbered starting with\n   the\
    \ number 1.\n   The data sender sending routing information must wait for the\
    \ data\n   receiver to acknowledge that it has received each RI-Rsp packet in\n\
    \   the sequence-by sending an RI-Ack packet-before sending the next RI-\n   Rsp\
    \ packet. Each RI-Rsp contains a flag that indicates whether it is\n   the last\
    \ packet in the sequence. In the last RI-Rsp in the sequence,\n   this flag is\
    \ set to 1. If the data sender receives no acknowledgment\n   of an RI-Rsp from\
    \ the data receiver within a specified period of\n   time, it must retransmit\
    \ the RI-Rsp.\n   ROUTING INFORMATION RESPONSE PACKETS: When an exterior router\n\
    \   receives an RI-Rsp, it verifies the packet's connection ID and\n   sequence\
    \ number.  The connection ID must be the same as that in the\n   Open-Req. The\
    \ sequence number must be either\n      the last sequence number received, indicating\
    \ that the previous\n      acknowledgment was lost or delayed, and that this is\
    \ a duplicate\n      RI-Rsp the next number in the sequence, indicating that this\n\
    \      RI-Rsp contains new routing information\n   If the connection ID or sequence\
    \ number is invalid, the data receiver\n   discards the packet. Figure 3-9 shows\
    \ a dialog between a data sender\n   and a data receiver in which the data receiver\
    \ requests routing\n   information, the data sender responds by sending its routing\n\
    \   information, and the data receiver acknowledges the data sender's\n   response.\
    \ If the data sender receives no acknowledgment, it sends\n   duplicate RI-Rsp\
    \ packets until the data receiver responds with an\n   acknowledgment.\n     <<Figure\
    \ 3-9 Routing-information request/response/acknowledgment\n                  \
    \               dialog>>\n   Once the data receiver has verified the information\
    \ in the RI-Rsp, it\n   responds with a Routing Information Acknowledgment packet,\
    \ or RI-Ack,\n   which contains the following information:\n   Connection ID:\
    \  The connection ID is the same as that in the RI-Rsp\n   packet.\n   Sequence\
    \ number:  The sequence number is the same as that in the RI-\n   Rsp packet.\n\
    \   Send zone information flag:  The state of the send zone information\n   (SZI)\
    \ flag in an RI-Ack packet indicates whether the RI-Ack packet\n   doubles as\
    \ a ZI-Req packet. If the SZI flag is set to 1, the data\n   receiver sends the\
    \ zone information associated with the networks\n   about which it sent routing\
    \ information in the previous RI-Rsp.\n   Figure 3-10 shows a data receiver sending\
    \ zone information to a data\n   sender in response to a ZI-Req and in response\
    \ to an RI-Ack, which\n   optimizes the data flow.\n   When the data sender receives\
    \ an RI-Ack, it verifies that the RI-Ack\n   corresponds to the outstanding RI-Rsp-that\
    \ is, both packets have the\n   same connection ID and sequence number. Once the\
    \ data sender has\n   verified the information in the RI-Ack, it responds by sending\
    \ the\n   next RI-Rsp in the sequence, if any.\n   <<Figure 3-10  Nonoptimized\
    \ and optimized flows of zone information>>\n   ZONE INFORMATION RESPONSE PACKETS:\
    \ If the data sender receives an\n   RI-Ack with its SZI flag set to 1, it responds\
    \ by sending ZI-Rsp\n   packets that contain the zone information associated with\
    \ the\n   networks about which it sent routing information in the RI-Rsp being\n\
    \   acknowledged-just as it would if it received a ZI-Req for those\n   networks.\n\
    \   The data sender sends RI-Rsp and ZI-Rsp packets as independent data\n   streams.\
    \ It sends RI-Rsp packets as sequenced data and ZI-Rsp packets\n   as transaction\
    \ data. If the data sender receives an RI-Ack with its\n   SZI flag set to 1,\
    \ it sends an unsequenced series of ZI-Rsp packets\n   that contain the following\
    \ information:\n   Connection ID:  The connection ID is the same as that in the\n\
    \   associated RI-Req.\n   Network number and zone list tuples: The exterior router\
    \ sends the\n   zone information associated with each network number in the\n\
    \   corresponding RI-Rsp.\n   Reobtaining Routing Information\n   An exterior\
    \ router can reobtain another exterior router's complete\n   routing information\
    \ at any time, by sending an RI-Req packet. An\n   exterior router might need\
    \ to reobtain complete routing information\n   for a one-way connection on which\
    \ it is the data receiver under the\n   following circumstances:\n      During\
    \ the initial routing-information exchange, the exterior\n      router set the\
    \ SUI flags in the Open-Req to disable updates. The\n      exterior router can\
    \ subsequently poll the other exterior router on\n      the connection by sending\
    \ an RI-Req to that exterior router to\n      determine whether any of its routing\
    \ information has changed.\n      The exterior router set the SUI flags to request\
    \ updates, but\n      suspects that the routing information for the other exterior\
    \ router\n      on the connection is incorrect or obsolete. The exterior router\n\
    \      should send an RI-Req to the other exterior router to obtain its\n    \
    \  complete, updated routing information.\n   Whenever an exterior router receives\
    \ an RI-Req from an exterior\n   router requesting updated routing information,\
    \ it responds by sending\n   RI-Rsp packets, just as it does when it first receives\
    \ an RI-Req. The\n   data sender also resets the SUI flags for that one-way connection,\
    \ so\n   they correspond to those in the RI-Req.\n   If the data sender is sending\
    \ other sequenced update information when\n   it receives an RI-Req, it cannot\
    \ respond to the RI-Req until the data\n   receiver acknowledges the last outstanding\
    \ packet in the sequence.\n   If AURP uses an underlying transport-layer service\
    \ that does not\n   provide reliable delivery, such as AURP-Tr, it may be necessary\
    \ for\n   the data receiver to retransmit an RI-Req.\n   Updating Routing Information\n\
    \   Once an exterior router receives the routing and zone information for\n  \
    \ another exterior router's local internet, if the receiving exterior\n   router\
    \ has set the SUI flags in the Open-Req to request updates, the\n   data sender\
    \ notifies the data receiver of any subsequent changes to\n   that information.\n\
    \   Informed-Routers List\n   An exterior router maintains an informed-routers\
    \ list containing the\n   network address of each exterior router that has requested\
    \ dynamic\n   updating of routing information. Once an exterior router has sent\n\
    \   routing information for its local internet to other exterior routers\n   on\
    \ the tunnel, it must reliably send updated routing information to\n   all accessible\
    \ exterior routers in its informed-routers list whenever\n   its routing information\
    \ changes.\n   Sending Routing Information Update Packets\n   An exterior router\
    \ communicates changes in its routing information by\n   sending Routing Information\
    \ Update, or RI-Upd, packets to another\n   exterior router. When the routing\
    \ information for an exterior\n   router's local internet changes, the exterior\
    \ router need not send an\n   RI-Upd immediately. Generally, an exterior router\
    \ buffers the update\n   information, then sends updates periodically. The exterior\
    \ router\n   must wait at least an update interval between sending updates. The\n\
    \   value of this update interval\n      cannot be less than ten seconds\n   \
    \   should be specifiable by a network administrator\n   It is possible that more\
    \ than one update event for a particular\n   network might occur within one update\
    \ interval. One of these events\n   might supercede another-for example, a Network\
    \ Added event followed\n   by a Network Deleted event for the same network. In\
    \ this case, the\n   exterior router can represent the two events logically as\
    \ one event.\n   Under AURP, an exterior router can have only one event pending\
    \ for a\n   given network.  An exterior router can combine any series of events\n\
    \   for a network into a single pending event. In Figure 3-11, a state\n   diagram\
    \ shows the update event that an exterior router should have\n   pending for a\
    \ network, based on the other events that have occurred\n   during the update\
    \ interval.\n      <<Figure 3-11  A state diagram showing pending update events>>\n\
    \   Four of the states correspond to four pending update events. Two\n   states\
    \ indicate that no update event is pending:\n      Net Up-indicates that no update\
    \ event is pending for a network\n      in the exterior router's local internet\n\
    \      Net Down-indicates that no update event is pending for a network in\n \
    \     another exterior router's local internet or the network does not\n     \
    \ exist\n   A single RI-Upd packet may contain different types of update events-\n\
    \   for example, several Network Added events and several Network Deleted\n  \
    \ events. For information about update events, see the section\n   \"Routing-Information\
    \ Update Events\" later in this chapter.\n   A data sender should send an RI-Upd\
    \ packet to an exterior router in\n   its informed-routers list only if the packet\
    \ contains one or more\n   update events of a type indicated by the SUI flags\
    \ of the last Open-\n   Req or RI-Req received from that exterior router. Because\
    \ an RI-Upd\n   that contains one or more events of a type requested by an exterior\n\
    \   router may also contain events of types not requested, an exterior\n   router\
    \ must be able to handle events of all types. Thus, a data\n   sender can send\
    \ an RI-Upd that contains various types of update\n   events to all exterior routers\
    \ that have requested update events of\n   any of those types.\n   Sending Updates\
    \ Following the Initial Exchange of Routing Information\n   While a data sender\
    \ has update events pending-that is, when update\n   events have occurred but\
    \ the data sender has not yet sent RI-Upd\n   packets for those events-another\
    \ exterior router may establish a new\n   connection with the data sender. The\
    \ data sender must present\n   consistent routing information to all exterior\
    \ routers on the tunnel,\n   on both existing connections and any new connections.\
    \ For example, if\n   a pending update event indicated that a new network had\
    \ become\n   available, the newly connected exterior router could be informed\
    \ of\n   that network's presence on the internet either by\n      sending it an\
    \ RI-Rsp packet including routing information for the\n      new network\n   \
    \   sending it an RI-Rsp packet that does not include routing\n      information\
    \ for the new network, then sending it the RI-Upd packet\n      that includes\
    \ the pending update event\n   AURP does not specify a scheme for sending update\
    \ information\n   following the initial exchange of routing information on a new\n\
    \   connection.  However, the Appendix, \"Implementation Details,\"\n   describes\
    \ one possible method of doing this.\n   Using AURP-Tr to Update Routing Information\n\
    \   The following sections describe the use of AURP-Tr for sending\n   routing-information\
    \ updates.\n   ROUTING INFORMATION UPDATE PACKETS: Each RI-Upd packet contains\
    \ the\n   following information:\n   Connection ID:  The connection ID identifies\
    \ the specific one-way\n   connection to which the RI-Upd belongs.\n   Sequence\
    \ number:  The sequence number identifies an individual RI-Upd\n   on a connection.\n\
    \   If an update cannot be contained in one RI-Upd packet, the data\n   sender\
    \ must send a sequence of RI-Upd packets. While the data sender\n   need not wait\
    \ for the duration of an update interval before sending\n   each RI-Upd packet\
    \ in a sequence, it must wait for the data receiver\n   to acknowledge that it\
    \ has received the RI-Upd packet that is\n   currently outstanding before sending\
    \ the next RI-Upd packet in the\n   sequence.\n   If the data sender sending an\
    \ RI-Upd does not receive an\n   acknowledgment, or RI-Ack, from the data receiver\
    \ within a specified\n   period of time, the data sender should periodically retransmit\
    \ the\n   RI-Upd until it receives an acknowledgment from the data receiver.\n\
    \   Once the data sender retransmits the RI-Upd a specified number of\n   times,\
    \ if it does not receive an RI-Ack, it should assume that the\n   one-way connection\
    \ on which it is the data sender is down. For more\n   information about routers\
    \ going down, see the section \"Using AURP-Tr\n   to Detect Routers Going Down\"\
    \ later in this chapter.\n   ROUTING INFORMATION ACKNOWLEDGMENT PACKET: When a\
    \ data receiver\n   receives an RI-Upd, it verifies the packet's connection ID\
    \ and\n   sequence number.  The connection ID must be the same as that in the\n\
    \   Open-Req for the connection. The sequence number must be either:\n      the\
    \ last sequence number received, indicating that the previous\n      acknowledgment\
    \ was lost or delayed, and that this is a duplicate\n      RI-Upd\n      the next\
    \ number in the sequence, indicating that the RI-Upd\n      contains new routing\
    \ information\n   If the sequence number has any other value, the data receiver\
    \ ignores\n   the RI-Upd. Once the data receiver has verified the RI-Upd packet's\n\
    \   connection ID and sequence number, it responds by sending a Routing\n   Information\
    \ Acknowledgment packet, or RI-Ack, which contains the\n   following information:\n\
    \   Connection ID:  The connection ID is the same as that in the RI-Upd\n   packet.\n\
    \   Sequence number:  The sequence number is the same as that in the RI-\n   Upd\
    \ packet.\n   Figure 3-12 shows a data receiver responding to an RI-Upd by sending\n\
    \   an RI-Ack.\n    <<Figure 3-12  A routing-information update/acknowledgment\
    \ dialog>>\n   When a data sender receives an RI-Ack, it verifies that the RI-Ack\n\
    \   corresponds to the outstanding RI-Upd-that is, both packets have the\n   same\
    \ connection ID and sequence number. Once the data sender has\n   verified the\
    \ information in the RI-Ack, it responds by sending the\n   next RI-Upd in the\
    \ sequence, if any.\n   Routing-Information Update Events\n   An RI-Upd packet\
    \ may contain any of five different types of routing-\n   information update events.\
    \ The following sections describe these\n   events.\n   NETWORK ADDED EVENT: An\
    \ exterior router sends a Network Added (NA)\n   event under the following circumstances:\n\
    \      A new network that appears in the exterior router's routing table\n   \
    \   is in the exterior router's local internet and is not hidden-that\n      is,\
    \ it is an exported network.\n      The port through which an exterior router\
    \ accesses a network\n      changes from a tunneling port to another port on the\
    \ router\n      and the network is not hidden.\n   If a network in an exterior\
    \ router's routing table becomes accessible\n   across the tunnel, the exterior\
    \ router does not send an NA event. An\n   exterior router sends only split-horizoned\
    \ routing information to\n   other exterior routers on the tunnel.\n   An NA event\
    \ lists the network numbers associated with the new network\n   and the network's\
    \ distance in hops. Another exterior router can\n   request the zone information\
    \ associated with the new network at any\n   time by sending a ZI-Req, once it\
    \ receives an RI-Upd containing an NA\n   event for the network.\n   When using\
    \ AURP-Tr, an exterior router can request zone information\n   for new networks\
    \ by setting the SZI bit in an RI-Ack that it sends in\n   response to an RI-Upd.\
    \ If a data sender receives an RI-Ack with its\n   SZI flag set to 1, the data\
    \ sender sends the zone information\n   associated with each new network for which\
    \ it sent an NA event in the\n   RI-Upd.\n   Figure 3-13 shows a data receiver\
    \ responding to an RI-Upd by sending\n   an RI-Ack in which the SZI bit is set\
    \ to 1, optimizing the flow of\n   zone information by causing the data sender\
    \ to respond with a ZI-Rsp.\n          <<Figure 3-13  An optimized flow of zone\
    \ information>>\n   NETWORK DELETED EVENT: An exterior router sends a Network\
    \ Deleted\n   (ND) event if an exported network that was formerly accessible\n\
    \   through its local internet no longer appears in its routing table. An\n  \
    \ ND event lists the network numbers associated with the deleted\n   network.\n\
    \   NETWORK ROUTE CHANGE EVENT: An exterior router sends a Network Route\n   Change\
    \ (NRC) event if the path to an exported network through its\n   local internet\
    \ changes to a path through a tunneling port, causing\n   split-horizoned processing\
    \ to eliminate that network's routing\n   information. An NRC event lists the\
    \ network numbers associated with\n   the network to which the path changed.\n\
    \   NETWORK DISTANCE CHANGE EVENT: An exterior router sends a Network\n   Distance\
    \ Change (NDC) event if the distance to an exported network\n   accessible through\
    \ its local internet changes. An NDC event indicates\n   the network to which\
    \ the distance changed and the network's distance\n   in hops. An exterior router\
    \ must send an NDC event even if the\n   distance to a network changes to 15 hops.\
    \ The exterior router that\n   receives an NDC event with a hop count of 15 should\
    \ process that\n   event just as it would an ND event.\n   ZONE NAME CHANGE EVENT:\
    \ This event is reserved for future use.\n   Processing Update Events\n   According\
    \ to the architectural model, a data receiver that is\n   processing an event\
    \ contained in an RI-Upd packet updates the\n   corresponding information in its\
    \ central routing table. For example,\n   if a data receiver receives an RI-Upd\
    \ containing an ND event or an\n   NRC event, it sets the corresponding network's\
    \ routing-table entry to\n   BAD. The data receiver then initiates a notify-neighbor\
    \ process, by\n   sending RTMP data packets that identify bad entries in its routing\n\
    \   table to routers on its local internet.\n   Processing Inconsistent Update\
    \ Events\n   If the data receiver's copy of the data sender's routing table does\n\
    \   not match that in the data sender's current routing table, it is\n   possible\
    \ that the data receiver might receive an RI-Upd containing an\n   event that\
    \ is incongruous with its current routing-table information.\n   For example,\
    \ this might occur if the information in the data sender's\n   routing table were\
    \ changing during its initial exchange of routing\n   information with the data\
    \ receiver, as described in the section\n   \"Sending Updates Following the Initial\
    \ Exchange of Routing\n   Information\" earlier in this chapter. The data receiver\
    \ might receive\n   an RI-Upd that contains an ND, NRC, or NDC event for a network\
    \ not\n   known to be in the data sender's routing table; or an NA event for a\n\
    \   network already known to be in its routing table. The data receiver\n   should\n\
    \      ignore ND and NRC events for unknown networks\n      process an NDC event\
    \ for an unknown network as an NA event\n      process an NA event for a known\
    \ network as an NDC event\n   Maintaining a Central Routing Table\n   According\
    \ to the architectural model, an exterior router maintains a\n   separate routing\
    \ table for each other exterior router on a tunnel. In\n   a typical implementation,\
    \ however, an exterior router maintains a\n   central routing table that contains\
    \ information about each path to\n   each network known to that exterior router-including\
    \ its port, next\n   internet router (IR), and distance in hops.\n   If no loops\
    \ exist across a tunnel, an exterior router can reach a\n   network that is accessible\
    \ through that tunnel through only one\n   exterior router, as shown in Figure\
    \ 3-14. Such a network is\n   accessible neither through the exterior router's\
    \ local internet nor\n   through any other exterior router on the tunnel. Thus,\
    \ the central\n   routing table would contain only one path for that network.\n\
    \   If a loop exists across a tunnel, an exterior router may be able to\n   access\
    \ a network through two or more exterior routers on the tunnel,\n   or through\
    \ both its local internet and an exterior router. Thus, when\n   a loop exists\
    \ across a tunnel, the central routing table may contain\n   more than one path\
    \ for each network. Figure 3-14 shows two examples\n   of internets on which loops\
    \ exist.\n             <<Figure 3-14  Internets with and without loops>>\n   Maintaining\
    \ an Alternative-Paths List\n   If a loop exists across a tunnel and an exterior\
    \ router maintains a\n   single central routing table, that table must include\
    \ an\n   alternative-paths list for each network known to the exterior router.\n\
    \   This alternative-paths list contains the routing information that an\n   exterior\
    \ router might otherwise maintain in separate routing tables\n   for the other\
    \ exterior routers on a tunnel. An entry for each\n   alternative path to a network\
    \ consists of the address of the\n   alternative next IR for that network and\
    \ the network's distance\n   through that next IR.\n   Because RTMP periodically\
    \ retransmits information about alternative\n   paths, the exterior router's alternative-paths\
    \ list needs to provide\n   information only about alternative paths to networks\
    \ across tunneling\n   ports. Thus, the alternative-paths list for a network provides\n\
    \   complete information about all paths to that network across tunnels-\n   but\
    \ not necessarily about all paths through the exterior router's\n   local internet.\n\
    \   An exterior router must maintain an alternative-paths list, because\n   once\
    \ a data sender has reliably sent routing information to a data\n   receiver,\
    \ the data sender does not retransmit that information. Even\n   though a path\
    \ may not currently be the optimal path to a network, an\n   exterior router must\
    \ maintain information about that path, in the\n   event that it later becomes\
    \ the optimal path.\n   NOTE:  Zone information is unaffected by the path taken\
    \ to a network.\n   Therefore, an exterior router need not maintain duplicate\
    \ zone\n   information in the alternative-paths list.\n   Using the Alternative-Paths\
    \ List in Event Processing\n   An exterior router uses its alternative-paths list\
    \ when processing\n   events.\n   PROCESSING A NETWORK ADDED EVENT: If an exterior\
    \ router receives an\n   NA event, it searches its central routing table for the\
    \ network\n   indicated in the event.\n      If the exterior router finds no entry\
    \ for that network in its\n      central routing table, it creates a new entry\
    \ using the routing\n      information contained in the NA event.\n      If the\
    \ exterior router finds an existing entry for that network in\n      its central\
    \ routing table and the next IR for that entry is not\n      the exterior router\
    \ that sent the event, it determines whether the\n      NA event provides a better\
    \ path to that network.\n         If the NA event provides a better path to the\
    \ network or the\n         state of the routing-table entry for that network is\
    \ BAD, the\n         exterior router replaces the current entry with the routing\n\
    \         information contained in the NA event. In the current entry, if\n  \
    \       the path to the network is through a tunnel, as indicated by\n       \
    \  the next IR, the exterior router transfers the current entry to\n         the\
    \ network's alternative-paths list.\n         If the NA event does not provide\
    \ a better path to the network,\n         the exterior router adds the routing\
    \ information contained in\n         the NA event to the alternative-paths list\
    \ for the network.\n      If the exterior router finds an existing entry for that\
    \ network,\n      in which the next IR is the exterior router that sent the event,\n\
    \      the exterior router should process the NA event just as it would\n    \
    \  an NDC event.\n   PROCESSING A NETWORK DELETED EVENT:  If an exterior router\
    \ receives\n   an ND event, it searches its central routing table for the network\n\
    \   indicated in the event.\n      If the exterior router finds no entry for that\
    \ network in its\n      central routing table, it ignores the event. See the section\n\
    \      \"Processing Inconsistent Update Events\" earlier in this chapter.\n  \
    \    If the exterior router that is the data receiver determines that\n      the\
    \ exterior router that sent the ND event is the next IR for that\n      network\
    \ and there is an alternative-paths list for the network, the\n      data receiver\
    \ replaces the network's current routing information\n      with the entry in\
    \ the network's alternative-paths list that\n      provides the shortest distance\
    \ to that network and removes that\n      entry from the network's alternative-paths\
    \ list. If the network's\n      alternative-paths list contains more than one\
    \ entry providing the\n      distance that constitutes the shortest distance to\
    \ the network, the\n      data receiver can use any of those entries.\n      If\
    \ the exterior router that is the data receiver determines that\n      the exterior\
    \ router that sent the ND event is the next IR for that\n      network and there\
    \ is no alternative-paths list for the network, the\n      data receiver sets\
    \ the network's routing-table entry to BAD, then\n      initiates a notify-neighbor\
    \ process.\n      If the exterior router that is the data receiver determines\
    \ that\n      the exterior router that sent the ND event is not the next IR for\n\
    \      that network, the data receiver searches that network's\n      alternative-paths\
    \ list for an entry in which the next IR is the\n      data sender and removes\
    \ that entry from the list.\n   PROCESSING A NETWORK ROUTE CHANGE EVENT: If an\
    \ exterior router\n   receives an NRC event, it processes that event as an ND\
    \ event.\n   Generally, an NRC event should not cause an exterior router to set\n\
    \   the state of a network's routing-table entry to BAD. An NRC event\n   indicates\
    \ that the data sender has an alternative path to the network\n   through the\
    \ tunnel.  The data receiver either is already aware of or\n   will soon discover\
    \ this alternative path.\n   PROCESSING A NETWORK DISTANCE CHANGE EVENT: If an\
    \ exterior router\n   receives an NDC event with a hop count of 15, it processes\
    \ that event\n   just as it would an ND event. Otherwise, it searches its central\n\
    \   routing table for the network indicated in the event.\n      If the exterior\
    \ router finds no entry for that network in its\n      central routing table,\
    \ it processes that event as an NA event.\n      If the exterior router that is\
    \ the data receiver determines that\n      the exterior router that sent the NDC\
    \ event is the next IR for the\n      network, the data receiver replaces the\
    \ distance to that network\n      that is currently in its central routing table\
    \ with the distance\n      indicated in the NDC event.\n      If the exterior\
    \ router that is the data receiver determines that\n      the exterior router\
    \ that sent the NDC event is not the next IR for\n      the network, the data\
    \ receiver\n      replaces the distance in the corresponding entry in the network's\n\
    \      alternative-paths list with the distance indicated in the NDC event\n \
    \     creates an entry in the alternative-paths list that contains the\n     \
    \ routing information in the NDC event, if it finds no entry for that\n      network\
    \ in the alternative-paths list\n   Finally, regardless of whether the central\
    \ routing table indicates\n   that the exterior router that sent the NDC event\
    \ is the network's\n   next IR, the data receiver compares the distances in entries\
    \ in the\n   network's alternative-paths list to the distance in its central\n\
    \   routing table. If an entry in the alternative-paths list contains a\n   shorter\
    \ path to the network, the exterior router transfers that entry\n   to the central\
    \ routing table. This ensures that the exterior router's\n   central routing table\
    \ contains the shortest path to the network.\n      If the data receiver replaces\
    \ the entry currently in its central\n      routing table with that in the NDC\
    \ event and the current entry\n      provides a path to the network through a\
    \ tunnel, the data receiver\n      transfers the current entry to the network's\
    \ alternative-paths\n      list.\n      If the data receiver transfers an entry\
    \ in the network's\n      alternative-paths list to its central routing table,\
    \ it removes\n      that entry from the alternative-paths list.\n   RESPONDING\
    \ TO EVENTS IN THE LOCAL INTERNET: An exterior router that\n   uses AURP must\
    \ respond appropriately to events that originate in its\n   local internet. Such\
    \ events occur when the routing information for a\n   network in the exterior\
    \ router's local internet changes and another\n   path to that network exists\
    \ through the tunnel. An exterior router\n   handles such events as follows:\n\
    \      If the exterior router replaces the current routing-table entry for\n \
    \     a network with routing information provided by an event originating\n  \
    \    in its local internet-that is, provided by RTMP-and the current\n      path\
    \ to the network is through a tunnel, the exterior router\n      transfers the\
    \ current entry to the network's alternative-paths\n      list.\n      If the\
    \ exterior router sets the state of a routing-table entry to\n      BAD or removes\
    \ an entry from its central routing table, the\n      exterior router replaces\
    \ that entry with the entry in the\n      alternative-paths list that provides\
    \ the shortest distance to the\n      network in the entry being replaced.\n \
    \     If the distance to a network in the exterior router's local\n      internet\
    \ changes, the exterior router compares the distances in\n      entries in the\
    \ network's alternative-paths list to the distance in\n      its central routing\
    \ table. If an entry in the alternative-paths\n      list provides a shorter distance\
    \ to the network, the exterior\n      router transfers that entry to its central\
    \ routing table. This\n      ensures that the exterior router's central routing\
    \ table contains\n      the shortest path to the network.\n   Router-Down Notification\n\
    \   Prior to going down, or becoming inactive, an exterior router must\n   notify\
    \ all other exterior routers in its informed-routers list that\n   it is going\
    \ down. An exterior router does this by using the\n   underlying transport-layer\
    \ service to close its connection with each\n   exterior router.\n   Sending a\
    \ Router Down Packet\n   Optionally, an exterior router can send a Router Down\
    \ packet, or RD\n   packet, to each exterior router before it goes down. An RD\
    \ packet\n   contains an error code that indicates the exterior router's reason\n\
    \   for terminating its connection with each exterior router.\n   Generally, only\
    \ the exterior router functioning as the data sender on\n   a one-way connection\
    \ sends RD packets. However, if just a single\n   one-way connection exists between\
    \ two exterior routers, the exterior\n   router functioning as the data receiver\
    \ on that connection can send\n   an RD packet.\n   Using AURP-Tr to Notify Other\
    \ Routers That a Router Is Going Down\n   When using AURP-Tr, an exterior router\
    \ sends an RD packet to\n      notify another exterior router that it is terminating\
    \ a connection\n      pass an error code that indicates its reason for terminating\
    \ the\n      connection\n   As shown in Figure 3-15, once the data receiver verifies\
    \ the RD\n   packet's connection ID, it acknowledges that it received the RD\n\
    \   packet by sending an RI-Ack. Then, the data sender terminates the\n   connection.\n\
    \                <<Figure 3-15  Acknowledging an RD packet>>\n   If a Router Goes\
    \ Down Without Notifying Other Routers\n   If an exterior router crashes or goes\
    \ down without sending an RD\n   packet, or becomes inaccessible due to a network\
    \ problem, other\n   exterior routers on the tunnel must be able to discover that\
    \ the\n   exterior router is down.  Generally, the underlying transport-layer\n\
    \   service provides a mechanism for informing an exterior router that an\n  \
    \ exterior router in its informed-routers list has gone down or become\n   inaccessible.\n\
    \   If an exterior router determines that another exterior router is\n   down,\
    \ it must\n      remove that exterior router from its informed-routers list\n\
    \      remove that exterior router's routing information from all of its\n   \
    \   routing tables\n      close any one-way connections with that exterior router\n\
    \   If an exterior router rediscovers an exterior router that had\n   previously\
    \ gone down, it must again exchange initial routing\n   information with that\
    \ exterior router.\n   Using AURP-Tr to Detect Routers Going Down\n   An exterior\
    \ router using AURP-Tr associates a last-heard-from timer\n   with each exterior\
    \ router from which it has received routing\n   information-that is, with each\
    \ one-way connection on which it is the\n   data receiver. Each time the exterior\
    \ router receives an RI-Rsp, RI-\n   Upd, or ZI-Rsp over a connection-verifying\
    \ that its connection with\n   the data sender is still active-it resets the last-heard-from\
    \ timer\n   for that connection.\n   For each one-way connection on which it is\
    \ the data receiver, the\n   exterior router has a last-heard-from timeout value.\
    \ If a\n   connection's last-heard-from timer reaches that timeout value, the\n\
    \   data receiver sends a Tickle packet over that connection. If the data\n  \
    \ sender on the connection is still accessible, it responds with a\n   Tickle-Ack,\
    \ as shown in Figure 3-16. When the data receiver receives\n   the Tickle-Ack,\
    \ it resets the last-heard-from timer for that\n   connection. If the data receiver\
    \ receives no Tickle-Ack-even after\n   retransmitting the Tickle several times-it\
    \ assumes that the\n   connection is down.\n              <<Figure 3-16  Acknowledging\
    \ a Tickle packet>>\n   If the exterior router determines that the connection\
    \ is down and an\n   associated one-way connection exists on which it is the data\
    \ sender,\n   it should send a null RI-Upd over that connection to determine\n\
    \   whether that one-way connection is still active.\n   If the data receiver\
    \ on the connection is still accessible, it\n   responds with an RI-Ack, as shown\
    \ in Figure 3-17. If the data sender\n   receives no RI-Ack-even after retransmitting\
    \ the null RI-Upd several\n   times-it determines that the one-way connection\
    \ on which it is the\n   data sender is also down.\n              <<Figure 3-17\
    \  Acknowledging an RI-Upd packet>>\n   The value of the last-heard-from timeout\
    \ should be configurable. The\n   minimum last-heard-from timeout should be 30\
    \ seconds. If a\n   connection's last-heard-from timeout is greater than two minutes-the\n\
    \   tickle-before-data time-and the data receiver has not reset the\n   connection's\
    \ last-heard-from timer for at least this tickle-before-\n   data time, the data\
    \ receiver must send a Tickle to the data sender\n   before forwarding an AppleTalk\
    \ data packet to it. If the data sender\n   on the connection is still accessible,\
    \ it responds with a Tickle-Ack.\n   When the data receiver receives the Tickle-Ack,\
    \ it resets the last-\n   heard-from timer for that connection. If the data receiver\
    \ receives\n   no Tickle-Ack, even after retransmitting the Tickle, it assumes\
    \ that\n   the data sender is no longer accessible and closes the connection.\n\
    \   Obtaining Zone Information\n   AURP supports two commands that allow an exterior\
    \ router to obtain\n   routing information for zones rather than for networks-the\
    \ Get Domain\n   Zone List (GDZL) command and the Get Zone Nets (GZN) command.\
    \ These\n   commands constitute request/response transactions, and are similar\
    \ to\n   ZI-Req and ZI-Rsp. An exterior router sends these commands\n   unsequenced\
    \ over a connection.\n   NOTE:  Under AURP, the implementation of the Get Domain\
    \ Zone List\n   command and the Get Zone Nets command in an exterior router is\n\
    \   optional.  However, an exterior router must at least be able to\n   return\
    \ an error to a GDZL-Req or a GZN-Req.\n   Get Domain Zone List Command\n   The\
    \ Get Domain Zone List command, or GDZL, allows an exterior router\n   to obtain\
    \ a zone list for an internet. As shown in Figure 3-18, GDZL\n   functions similarly\
    \ to the ZIP GetZoneList command. However, a GDZL-\n   Rsp returns a split-horizoned\
    \ zone list-that is, it returns only the\n   zones in the exterior router's local\
    \ internet, rather than the\n   exterior router's entire zone list. A GDZL-Rsp\
    \ does not return zones\n   in networks that are accessible through the tunnel,\
    \ unless those\n   zones are also in networks that are accessible through the\
    \ exterior\n   router's local internet.\n       <<Figure 3-18  Get Domain Zone\
    \ List request/response dialog>>\n   Get Zone Nets Command\n   The Get Zone Nets\
    \ command, or GZN, allows an exterior router to\n   obtain a list of the networks\
    \ in an exterior router's local internet\n   that are associated with a particular\
    \ zone name. As shown in Figure\n   3-19, GZN functions similarly to ZI-Req and\
    \ ZI-Rsp, but a GZN-Req\n   packet contains a single zone name and GZN-Rsp packets\
    \ contain\n   network tuples that have the same format as the tuples in an RI-Rsp.\n\
    \   A GZN-Rsp returns network tuples only for networks that are\n   accessible\
    \ through the exterior router's local internet.\n          <<Figure 3-19  Get\
    \ Zone Nets request/response dialog>>\n   Using AURP-Tr to Process Sequence Numbers\n\
    \   When an exterior router acting as a data receiver sends an Open-Req\n   to\
    \ establish a one-way connection, it expects the data sender to\n   respond by\
    \ sending sequenced data packets, starting with the sequence\n   number 1. The\
    \ data receiver's response to each packet that it\n   receives depends on the\
    \ packet's sequence number:\n     Whenever the data receiver receives an RI-Rsp,\
    \ RI-Upd, or RD packet\n     that has the expected sequence number and connection\
    \ ID, it sends\n     an RI-Ack packet having that sequence number, then increases\
    \ the\n     sequence number that it expects by one, until the sequence number\n\
    \     reaches 65,535. Sequence numbers wrap around and the sequence\n     number\
    \ 0 is reserved, so the sequence number 1 follows 65,535.\n     Thus, when comparing\
    \ sequence numbers, an exterior router\n     interprets the sequence number 65,535\
    \ as one less than the sequence\n     number 1.\n     If the data receiver expects\
    \ sequence number n and receives a\n     packet with the sequence number n-1,\
    \ that packet was delayed and is\n     a duplicate of another packet already received.\
    \ The data receiver\n     must retransmit an RI-Ack packet, because the data sender\
    \ may not\n     have received the RI-Ack packet previously sent-that is, the RI-Ack\n\
    \     may have been lost.\n     If the data receiver expects sequence number n\
    \ and receives a\n     packet with the sequence number n+1, it should discard\
    \ the packet\n     and terminate the one-way connection on which it is the data\n\
    \     receiver.  Because AURP-Tr supports only one outstanding\n     transaction\
    \ at a time, the receipt of such a packet indicates that\n     the connection\
    \ is out of sync.\n     If the data receiver expects sequence number n and receives\
    \ a\n     packet with a sequence number other than n-1, n, or n+1, the packet\n\
    \     was delayed and is a duplicate of another packet already received.\n   \
    \  The data receiver need not send an RI-Ack, because the data sender\n     must\
    \ have received an RI-Ack for that sequence number prior to\n     sending a packet\
    \ with the sequence number n-1. The data receiver\n     should discard the packet.\n\
    \   NOTE:  If the sequence numbers have not wrapped around, a sequence\n   number\
    \ greater than n+1 indicates that the connection is out of sync.\n   Using AURP-Tr\
    \ to Process Connection IDs\n   If an exterior router acting as either a data\
    \ receiver or a data\n   sender on a one-way connection receives a packet from\
    \ an exterior\n   router with which it has a one-way connection, it checks the\n\
    \   connection ID in the packet to verify that the packet was sent on\n   that\
    \ connection. If the packet contains a connection ID that does not\n   match that\
    \ expected for the connection, the exterior router discards\n   the packet.\n\
    \   If a data sender receives an Open-Req from an exterior router with\n   which\
    \ it already has a connection and the connection ID does not\n   match that for\
    \ the connection already established, it should not\n   discard the packet without\
    \ verifying whether the connection is still\n   active. The receipt of such a\
    \ packet may indicate that the data\n   receiver on the connection has been restarted\
    \ and has opened a new\n   one-way connection, without first terminating its original\n\
    \   connection. The exterior router acting as the data sender should send\n  \
    \ a null RI-Upd over the connection to determine whether it is still\n   active.\
    \ If the data sender receives an RI-Ack in response to the null\n   RI-Upd, it\
    \ discards the Open-Req and the original connection remains\n   active. If the\
    \ data sender receives no RI-Ack after retransmitting\n   the null RI-Upd, it\
    \ closes the original connection, then sends an\n   Open-Rsp to the next Open-Req\
    \ received.\n   NOTE:  An exterior router can act as the data sender on only a\
    \ single\n   one-way connection between itself and a given exterior router.  That\n\
    \   is, multiple one-way connections in the same direction cannot exist\n   between\
    \ two exterior routers.\n   When establishing a one-way connection with a given\
    \ data sender, a\n   data receiver using AURP-Tr must send an Open-Req that has\
    \ a\n   different connection ID from that used in its last connection with\n \
    \  the data sender. Otherwise, if the last connection to the data sender\n   had\
    \ terminated abnormally and the new connection used the same\n   connection ID,\
    \ the data sender might determine that the last\n   connection was still active\
    \ and interpret the Open-Req as a\n   retransmission of the Open-Req for the last\
    \ connection. The data\n   sender might respond to the Open-Req by sending an\
    \ Open-Rsp or ignore\n   the Open-Req, but would not open a new connection.\n\
    \   If a data receiver's implementation of AURP-Tr cannot guarantee the\n   use\
    \ of different connection IDs on successive connections with a\n   given data\
    \ sender, the data receiver must send an RI-Req immediately\n   after it establishes\
    \ a connection with a data sender. If the data\n   sender already has a connection\
    \ with the data receiver, it will send\n   an RI-Rsp with a sequence number other\
    \ than 1. The data receiver\n   should then terminate that connection and open\
    \ a new connection using\n   a different connection ID.\n   Using Retransmission\
    \ Timers Under AURP-Tr\n   When an AppleTalk tunnel exists through a foreign network's\
    \ internet,\n   the delay and loss characteristics of the tunnel's underlying\
    \ foreign\n   network system complicate the setting of retransmission timers.\
    \ A\n   physical connection can be built between two exterior routers using\n\
    \   different media-for example, a single Ethernet LAN, a fast point-to-\n   point\
    \ link, an IP internet, or a slow link over an asynchronous\n   modem.  It is\
    \ important to minimize performance degradation due to\n      packets being dropped\
    \ or delayed by the underlying foreign network\n      system\n      the inefficient\
    \ use of the underlying foreign network system's\n      resources due to excessive\
    \ retransmissions\n   Most higher-level transport-layer services provide guaranteed\
    \ packet\n   delivery. It is not necessary to retransmit AURP packets when using\n\
    \   such transport-layer services. When using AURP-Tr, an exterior router\n  \
    \ should employ an adaptive retransmission algorithm whenever possible.\n   An\
    \ adaptive retransmission strategy like that used in TCP\n      maintains the\
    \ estimated times required to send a packet and receive\n      an acknowledgment-that\
    \ is, average round-trip times\n      maintains standard deviations from the average\
    \ round-trip times\n      derives retransmission timers from the average round-trip\
    \ times\n      While AURP does not specify an adaptive retransmission algorithm,\n\
    \      the use of such an algorithm is recommended.\n   NOTE:  Often, long intervals\
    \ exist between AURP packets sent\n   successively on a connection by an exterior\
    \ router-for example,\n   between RI-Upd packets. Therefore, an adaptive retransmission\n\
    \   algorithm used with AURP should give more weight to packets sent\n   recently\
    \ over a connection than would be appropriate for a general\n   data-stream protocol\
    \ like TCP.\n   When an exterior router initially opens a connection, no transaction\n\
    \   history is available. It is recommended that the retransmission\n   algorithm\
    \ use a truncated, exponential backoff scheme for the initial\n   Open-Req sequence,\
    \ because the exterior router with which the data\n   receiver is establishing\
    \ a connection may be inaccessible or down. An\n   exterior router should not\
    \ retransmit an Open-Req at a rate faster\n   than once every two seconds.\n \
    \  Hiding Local Networks From Remote Networks\n   As described in the section\
    \ \"Hiding Local Networks From Tunnels\" in\n   Chapter 2, a network administrator\
    \ can configure an exterior router\n   to hide specific networks in its local\
    \ internet from networks\n   connected to other exterior routers on the tunnel.\
    \ When exchanging\n   routing information with other exterior routers on the tunnel,\
    \ the\n   exterior router exports no routing information for hidden networks in\n\
    \   its local internet to exterior routers from which those networks are\n   hidden.\n\
    \   An exterior router using AURP does not include routing information\n   for\
    \ hidden networks in RI-Rsp, RI-Upd, or GZN-Rsp packets sent to\n   exterior routers\
    \ from which those networks are hidden. The exterior\n   router also excludes\
    \ from GDZL-Rsp packets any zones that appear only\n   in the zone lists of hidden\
    \ networks.\n   To maintain network-level security, an exterior router should\
    \ discard\n   any AppleTalk data packet sent to a network in its local internet\
    \ by\n   an exterior router from which that network is hidden.\n   NOTE:  An exterior\
    \ router hides a network by excluding the routing\n   information for that network\
    \ from RI-Rsp, RI-Upd, GZN-Rsp, and GDZL-\n   Rsp packets. However, network management\
    \ packets-such as RTMP Route\n   Data Response (RDR) packets that are not split\
    \ horizoned, and Simple\n   Network Management Protocol (SNMP) packets-should\
    \ include the routing\n   information for hidden networks. For detailed information\
    \ about the\n   effects of AURP on network management, see the section \"Network\n\
    \   Management\" in Chapter 4.\n   AURP Packet Format\n   An exterior router encapsulates\
    \ both AURP packets and AppleTalk data\n   packets using the same headers. Before\
    \ forwarding AURP packets across\n   a tunnel, an exterior router encapsulates\
    \ the AURP packets in packets\n   of the tunnel's underlying foreign network system-by\
    \ adding the\n   headers required by that network system. For more information\
    \ about\n   these headers, see the sections \"Forwarding Data,\" \"AppleTalk Data-\n\
    \   Packet Format,\" and \"AppleTalk Data-Packet Format for IP Tunneling\"\n \
    \  in Chapter 2.\n   When using AURP-Tr in conjunction with TCP/IP, an exterior\
    \ router\n   encapsulates AURP packets in UDP packets prior to forwarding them\n\
    \   across an IP tunnel through UDP port 387. When another exterior\n   router\
    \ on the tunnel receives the UDP packets at UDP port 387, it\n   decapsulates\
    \ the packets.\n   Domain Headers in AURP Packets\n   When forwarding AURP packets\
    \ across a tunnel, an exterior router adds\n   a domain header immediately preceding\
    \ each packet. A domain header\n   contains additional addressing information,\
    \ including its source\n   domain identifier and destination domain identifier\
    \ (DI). The last\n   two bytes of the domain header are set to 0003, indicating\
    \ that the\n   packet is an AURP packet rather than an AppleTalk packet. AURP\
    \ data\n   follows the domain header. Figure 3-20 shows the protocol headers,\n\
    \   the domain header, and the routing data header that encapsulate a\n   routing\
    \ data packet sent across an IP tunnel.\n          <<Figure 3-20  A routing data\
    \ packet on an IP tunnel>>\n   An exterior router interprets the domain identifiers\
    \ in the domain\n   header of an AURP packet differently from those in the domain\
    \ headers\n   of an AppleTalk data packet. Only network entities with AppleTalk\n\
    \   addresses have domain identifiers associated with them. Exterior\n   routers\
    \ do not have AppleTalk addresses on the tunnel-thus, they do\n   not have true\
    \ domain identifiers.\n   DESTINATION DOMAIN IDENTIFIER: The destination DI in\
    \ an AURP packet's\n   domain header is the DI that is associated with any network\
    \ numbers\n   corresponding to networks that reside in the receiving exterior\n\
    \   router's domain. Only ZI-Req packets include such network numbers.\n   Whenever\
    \ possible, a domain header should specify a destination DI-\n   that is, the\
    \ DI for the networks that reside in the domain of the\n   exterior router that\
    \ is to receive the packet. When an exterior\n   router sends an Open-Req to open\
    \ a connection, the destination DI is\n   not yet known.  However, under the current\
    \ version of AURP, the\n   exterior router can either derive the destination DI\
    \ from the\n   destination's IP address or, on point-to-point links, include the\n\
    \   null DI.\n   SOURCE DOMAIN IDENTIFIER: The source DI in an AURP packet's domain\n\
    \   header is the DI that is associated with any network numbers\n   corresponding\
    \ to networks that reside in the sending exterior\n   router's domain. RI-Rsp,\
    \ RI-Upd, ZI-Rsp, and GZN-Rsp packets include\n   such network numbers. A domain\
    \ header should always specify a source\n   DI-that is, the DI for the networks\
    \ that reside in the domain of the\n   exterior router that is sending the packet.\n\
    \   Routing Data Headers in AURP Packets\n   The routing data header that immediately\
    \ precedes the AURP data in a\n   routing data packet consists of an AURP-Tr header\
    \ and an AURP header.\n   The AURP-Tr header consists of the following fields:\n\
    \   Connection ID:  The contents of this two-byte field identify the\n   specific\
    \ one-way connection to which a packet belongs.\n   Sequence number:  The contents\
    \ of this two-byte field identify an\n   individual packet on a connection.\n\
    \   The AURP header consists of these fields:\n   Command code:  This two-byte\
    \ field identifies the command type. For\n   information about command types,\
    \ see the next section, \"Command\n   Types.\"\n   Flags:  This two-byte field\
    \ may contain different flags, depending on\n   the command code. For information\
    \ about flags, see the section\n   \"Routing Flags\" later in this chapter.\n\
    \   Command Types\n   AURP defines the command types shown in Table 3-1:\n   \
    \                      Table 3-1  Command types\n                            \
    \                              Command\n   Command type                      \
    \     Abbreviation    code   Subcode\n   Routing Information Request         \
    \   RI-Req          1      -\n   Routing Information Response           RI-Rsp\
    \          2      -\n   Routing Information Acknowledgment     RI-Ack        \
    \  3      -\n   Routing Information Update             RI-Upd          4     \
    \ -\n   Router Dow                             RD              5      -\n   Zone\
    \ Information Request               ZI-Req          6      1\n   Zone Information\
    \ Response              ZI-Rsp          7      1 and 2\n   Get Zones Net Request\
    \                  GZN-Req         6      3\n   Get Zones Net Response       \
    \          GZN-Rsp         7      3\n   Get Domain Zone List Request         \
    \  GDZL-Req        6      4\n   Get Domain Zone List Response          GDZL-Rsp\
    \        7      4\n   Open Request                           Open-Req        8\
    \      -\n   Open Response                          Open-Rsp        9      -\n\
    \   Tickle                                 -               14     -\n   Tickle\
    \ Acknowledgment                  Tickle-Ack      15     -\n   Routing Flags\n\
    \   AURP defines the flags shown in Table 3-2. All other flags are\n   reserved.\
    \  A data sender should set reserved flags to 0. A data\n   receiver should ignore\
    \ reserved flags.\n                             Table 3-2  Flags\n   Flag    \
    \                            Event      Command types       Bit\n   Send update\
    \ information (SUI) flag  NA         Open-Req and RI-Req 14\n   Send update information\
    \ (SUI) flag  ND and NRC Open-Req and RI-Req 13\n   Send update information (SUI)\
    \ flag  NDC        Open-Req and RI-Req 12\n   Send update information (SUI) flag\
    \  ZC         Open-Req and RI-Req 11\n   Last flag                           -\
    \          RI-Rsp and GDZL-Rsp 15\n   Remapping active flag               -  \
    \        Open-Rsp            14\n   Hop-count reduction active flag     -    \
    \      Open-Rsp            13\n   Reserved environment flags          -      \
    \    -                   12\n                                                \
    \                  and 11\n   Send zone information (SZI) flag    -          RI-Ack\
    \              14\n   Figure 3-21 shows the routing flags in Open-Req and RI-Req\
    \ packets.\n       <<Figure 3-21  Routing flags in Open-Req and RI-Req packets>>\n\
    \   Figure 3-22 shows the routing flags in all packets other than Open-\n   Req\
    \ and RI-Req packets.\n              <<Figure 3-22  Routing flags in other packets>>\n\
    \   Open Request Packet\n   An Open-Req packet initiates the establishment of\
    \ a one-way\n   connection with a data sender. Figure 3-23 shows the format of\
    \ an\n   Open-Req packet.  When sending an Open-Req packet, an exterior router\n\
    \   inserts the next available connection ID in the packet's AURP-Tr\n   header\
    \ and sets its sequence number to 0. The AURP header of an\n   Open-Req contains\
    \ the command code 8. Its flag bytes contain send\n   update information (SUI)\
    \ flags. For the current version of AURP, the\n   version number is 1.\n   An\
    \ Open-Req packet's option data field contains\n      an option count-indicating\
    \ the number of option tuples to follow\n      the option tuples\n   When the\
    \ data sender receives an Open-Req, it can discard the option\n   tuples for any\
    \ options it does not implement. For information about\n   option tuples, see\
    \ the section \"Option Tuples\" later in this chapter.\n                  <<Figure\
    \ 3-23  Open-Req packet format>>\n   Open Response Packet\n   When the data sender\
    \ receives an Open-Req, it responds by sending an\n   Open-Rsp packet to establish\
    \ a one-way connection with the data\n   receiver. Figure 3-24 shows the format\
    \ of an Open-Rsp packet. In its\n   AURP-Tr header, an Open-Rsp packet contains\
    \ the connection ID from\n   the associated Open-Req packet and the sequence number\
    \ 0. The AURP\n   header of an Open-Rsp contains the command code 9 and its flag\
    \ bytes\n   contain environment flags that provide information about the data\n\
    \   sender's environment-such as whether network-number remapping or\n   hop-count\
    \ reduction is active. For information about network-number\n   remapping and\
    \ hop-count reduction, see the sections \"Network-Number\n   Remapping\" and \"\
    Hop-Count Reduction,\" respectively, in Chapter 4.\n                  <<Figure\
    \ 3-24  Open-Rsp packet format>>\n   An Open-Rsp packet's option data field contains\n\
    \      a two-byte field that indicates either\n         the nominal rate at which\
    \ the data sender sends updates-in\n         multiples of ten seconds\n      \
    \   an error code-which is a negative number-if the data sender\n         cannot\
    \ accept the connection\n      an option count-indicating the number of option\
    \ tuples to follow\n      the option tuples\n   For information about error codes,\
    \ see the section \"Error Codes\"\n   later in this chapter. For information about\
    \ option tuples, see the\n   next section, \"Option Tuples.\"\n   Option Tuples\n\
    \   Both Open-Req and Open-Rsp packets contain option tuples. An option\n   tuple\
    \ contains a one-byte length field that indicates the length of\n   the remainder\
    \ of the tuple, a one-byte type code, and an optional\n   data field, as shown\
    \ in Figure 3-25.\n                      <<Figure 3-25  Option tuples>>\n   AURP\
    \ currently defines the option-type codes shown in Table 3-3:\n              \
    \         Table 3-3  Option-type codes\n   Option types                Type codes\n\
    \   Authentication              1\n   Reserved for future use     2-255\n   Routing\
    \ Information Request Packet\n   An RI-Req packet requests the data sender to\
    \ send RI-Rsp packets.\n   Figure 3-26 shows the format for an RI-Req packet.\
    \ When sending an\n   RI-Req packet, an exterior router inserts the connection\
    \ ID for the\n   connection on which it is the data receiver in the packet's AURP-Tr\n\
    \   header and sets the packet's sequence number to 0. The AURP header of\n  \
    \ an RI-Req contains the command code 1 and its flag bytes contain the\n   send\
    \ update information (SUI) flags.\n                   <<Figure 3-26  RI-Req packet\
    \ format>>\n   Routing Information Response Packet\n   When the data sender receives\
    \ an RI-Req, it responds by sending a\n   sequence of RI-Rsp packets. Figure 3-27\
    \ shows the format of an RI-Rsp\n   packet. When sending an RI-Rsp packet, a data\
    \ sender inserts the\n   connection ID from the associated RI-Req in the RI-Rsp\
    \ packet's\n   AURP-Tr header and sets its sequence number to the next number\
    \ in the\n   sequence.  The AURP header of an RI-Rsp packet contains the command\n\
    \   code 2. In the last packet in a sequence of RI-Rsp packets, the\n   last-flag\
    \ bit is set to 1.\n                   <<Figure 3-27  RI-Rsp packet format>>\n\
    \   An RI-Rsp packet's routing data field contains zero or more routing\n   tuples,\
    \ which have a format similar to those in RTMP packets. An AURP\n   tuple for\
    \ a nonextended network is different from an RTMP tuple for\n   an extended network\
    \ in one respect-the range flag, or the sixth byte,\n   in an AURP tuple for a\
    \ nonextended network is set to 0. Figure 3-28\n   shows nonextended and extended\
    \ network tuples in an RI-Rsp packet.\n         <<Figure 3-28  Nonextended and\
    \ extended network tuples>>\n   Routing Information Acknowledgment Packet\n  \
    \ When a data receiver receives an RI-Rsp, RI-Upd, or RD packet, it\n   responds\
    \ by sending an RI-Ack packet. Figure 3-29 shows the format of\n   an RI-Ack packet.\
    \ When sending an RI-Ack packet, a data receiver\n   inserts the connection ID\
    \ and sequence number from the associated\n   RI-Rsp, RI-Upd, or RD packet in\
    \ the RI-Ack packet's AURP-Tr header.\n   The AURP header of an RI-Ack contains\
    \ the command code 3. If the data\n   receiver sends an RI-Ack using AURP-Tr,\
    \ in response to an RI-Rsp or\n   RI-Upd packet that contains an NA event, its\
    \ flag bytes contain the\n   send zone information flag. An RI-Ack packet contains\
    \ no data.\n                   <<Figure 3-29  RI-Ack packet format>>\n   Routing\
    \ Information Update Packet\n   The occurrence of specified events requires the\
    \ data sender to send\n   an RI-Upd packet. Figure 3-30 shows the format of an\
    \ RI-Upd packet.\n   When sending an RI-Upd packet, a data sender inserts the\
    \ connection\n   ID for the current connection in the RI-Upd packet's AURP-Tr\
    \ header\n   and sets its sequence number to the next number in the sequence.\
    \ The\n   AURP header of an RI-Upd contains the command code 4 and its flag\n\
    \   bytes are set to 0.\n                   <<Figure 3-30  RI-Upd packet format>>\n\
    \   An RI-Upd packet's data field contains one or more event tuples. An\n   event\
    \ tuple for a nonextended network consists of a one-byte event\n   code, the network\
    \ number, and the distance to that network. An event\n   tuple for an extended\
    \ network consists of a one-byte event code, the\n   first network number in the\
    \ range of network numbers, the distance to\n   the network, and the last network\
    \ number in the range of network\n   numbers. Figure 3-31 shows nonextended and\
    \ extended network tuples in\n   an RI-Upd packet.\n      <<Figure 3-31  Nonextended\
    \ and extended network event tuples>>\n   AURP currently defines the event codes\
    \ shown in Table 3-4:\n                          Table 3-4  Event codes\n   Event\
    \                             Abbreviation     Event code\n   Null event     \
    \                                    0\n   Network Added event               NA\
    \               1\n   Network Deleted event             ND               2\n \
    \  Network Route Change event        NRC              3\n   Network Distance Change\
    \ event     NDC              4\n   Zone Change event                 ZC      \
    \         5\n   A null event tuple contains no event data. The format of NA, ND,\
    \ NRC,\n   and NDC event tuples differs, depending on whether the event pertains\n\
    \   to a nonextended or an extended network. The distance field does not\n   apply\
    \ to ND or NRC event tuples and should be set to 0. The ZC event\n   tuple is\
    \ not yet defined.\n   An RI-Upd packet should never contain two events that pertain\
    \ to the\n   same network. However, to ensure consistent behavior in the event\n\
    \   that an exterior router receives a packet containing multiple events\n   for\
    \ one network, an exterior router should always process events in\n   the order\
    \ in which they occur in the RI-Upd packet. Thus, if an\n   exterior router were\
    \ to receive an RI-Upd that contained an NA event,\n   then an ND event for the\
    \ same network, the exterior router would\n   delete the network from its routing\
    \ table.\n   Router Down Packet\n   An exterior router should send an RD packet\
    \ before it goes down.\n   Figure 3-32 shows the format of an RD packet. When\
    \ sending an RD\n   packet, an exterior router inserts the connection ID for the\
    \ current\n   connection in the RD packet's AURP-Tr header. If the data sender\n\
    \   sends an RD packet, it sets its sequence number to the next number in\n  \
    \ the sequence. If the data receiver sends an RD packet, it sets its\n   sequence\
    \ number to 0. The AURP header of an RD packet contains the\n   command code 5\
    \ and its flag bytes are set to 0.\n                     <<Figure 3-32  RD packet\
    \ format>>\n   An RD packet's data field contains a two-byte error code that\n\
    \   indicates the exterior router's reason for going down. For\n   information\
    \ about the error codes, see the section \"Error Codes\"\n   later in this chapter.\n\
    \   Zone Information Request/Response Transactions\n   An exterior router returns\
    \ information about its zones through\n   request/response transactions. Three\
    \ types of zone requests-ZI-Req,\n   GDZL-Req, and GZN-Req-share the same command\
    \ code and have subcodes\n   that indicate the actual request type. Three types\
    \ of zone\n   responses-ZI-Rsp, GDZL-Rsp, and GZN-Rsp-share another command code\n\
    \   and have subcodes that indicate the actual response type.\n   ZONE INFORMATION\
    \ REQUEST PACKET: A ZI-Req packet causes the data\n   sender to send ZI-Rsp packets.\
    \ Figure 3-33 shows the format of a ZI-\n   Req packet.  When sending a ZI-Req\
    \ packet, an exterior router inserts\n   the connection ID for the connection\
    \ on which it is the data receiver\n   in the packet's AURP-Tr header and sets\
    \ the packet's sequence number\n   to 0. The AURP header of a ZI-Req contains\
    \ the command code 6 and its\n   flag bytes are set to 0.\n                  \
    \ <<Figure 3-33  ZI-Req packet format>>\n   A ZI-Req packet's data field contains\
    \ the subcode 1 and a two-byte\n   network number for each network about which\
    \ the exterior router is\n   requesting zone information. The network number for\
    \ an extended\n   network is the first network number in its range of network\
    \ numbers.\n   ZONE INFORMATION RESPONSE PACKET: There are two types of ZI-Rsp\n\
    \   packets-nonextended ZI-Rsp packets and extended ZI-Rsp packets. The\n   format\
    \ of a nonextended ZI-Rsp packet is similar to that of a\n   nonextended AppleTalk\
    \ ZIP Reply packet. When the data sender receives\n   a ZI-Req and the zone list\
    \ for the network or networks for which that\n   ZI-Req requested zone information\
    \ fits in one ZI-Rsp packet, it sends\n   a nonextended ZI-Rsp.\n   An extended\
    \ ZI-Rsp packet is similar to an extended AppleTalk ZIP\n   Reply packet. When\
    \ the data sender receives a ZI-Req and the zone\n   list for a network about\
    \ which that ZI-Req requested zone information\n   does not fit in a single ZI-Rsp\
    \ packet, it sends a sequence of\n   extended ZI-Rsp packets.\n   Figure 3-34\
    \ shows the format of a ZI-Rsp packet. When sending a ZI-\n   Rsp packet, a data\
    \ sender inserts the connection ID from the\n   associated ZI-Req packet in the\
    \ packet's AURP-Tr header and sets the\n   packet's sequence number to 0. A ZI-Rsp\
    \ packet's AURP header contains\n   the command code 7 and its flag bytes are\
    \ set to 0. The subcode 1\n   indicates a nonextended ZI-Rsp packet, while the\
    \ subcode 2 indicates\n   an extended ZI-Rsp packet.\n                   <<Figure\
    \ 3-34  ZI-Rsp packet format>>\n   A ZI-Rsp packet's data field contains the requested\
    \ zone information.\n   Its format is similar to that of a ZIP Reply packet.\n\
    \   In a nonextended ZI-Rsp packet, the first two bytes of the data field\n  \
    \ should indicate the number of tuples contained in the packet, while\n   the\
    \ remaining bytes constitute network number/zone name tuples.\n   Within the packet,\
    \ all of the tuples for a given network must be\n   contiguous.  NOTE:  When sending\
    \ a nonextended ZI-Rsp packet, an\n   exterior router should attempt to specify\
    \ the correct number of zone\n   tuples. However, an exterior router receiving\
    \ a nonextended ZI-Rsp\n   packet should process all tuples contained in the packet,\
    \ regardless\n   of the number indicated in the header.\n   Network number/zone\
    \ name tuples in a nonextended ZI-Rsp packet can\n   use either the long tuple\
    \ format or the optimized tuple format. A\n   long network number/zone name tuple\
    \ contains a network number,\n   followed by the length of the zone name, and\
    \ the zone name.\n   Using the optimized tuple format, an exterior router can\
    \ compress a\n   nonextended ZI-Rsp packet in which more than one network contains\
    \ the\n   same zone name in its zone list. If the high-order bit of the length\n\
    \   byte for a given zone name is set to 1, the following 15 bits\n   represent\
    \ an offset from the length byte of the first zone name in\n   the packet's data\
    \ field to the actual location of the zone name\n   length and the zone name.\
    \ Whenever possible, it is recommended that\n   an exterior router send optimized\
    \ ZI-Rsp packets. All exterior\n   routers must be able to receive optimized ZI-Rsp\
    \ packets.\n   In an extended ZI-Rsp packet, the first two bytes of the data field\n\
    \   indicate the total number of tuples in the zone list for the network\n   or\
    \ networks for which the corresponding ZI-Req requested zone\n   information.\
    \  The remaining bytes in the data field of an extended\n   ZI-Rsp packet consist\
    \ of network number/zone name tuples. All tuples\n   in a single extended ZI-Rsp\
    \ packet must contain the same network\n   number. However, for consistency with\
    \ the format of network\n   number/zone name tuples in nonextended ZI-Rsp packets,\
    \ the network\n   number precedes each zone name in an extended ZI-Rsp packet.\n\
    \   Duplicate zone names never exist in extended ZI-Rsp packets-\n   therefore,\
    \ extended ZI-Rsp packets use the long tuple format, rather\n   than the optimized\
    \ tuple format.\n   Figure 3-35 shows the long tuple and optimized tuple formats\
    \ for a\n   ZI-Rsp packet.\n             <<Figure 3-35  Long and optimized tuple\
    \ formats>>\n   GET DOMAIN ZONE LIST REQUEST PACKET: A Get Domain Zone List Request\n\
    \   packet, or GDZL-Req, requests the data sender to send GDZL-Rsp\n   packets.\
    \  Figure 3-36 shows the format for a GDZL-Req packet. When\n   sending a GDZL-Req\
    \ packet, an exterior router inserts the connection\n   ID for the connection\
    \ on which it is the data receiver in the\n   packet's AURP-Tr header and sets\
    \ its sequence number to 0. The AURP\n   header of a GDZL-Req contains the command\
    \ code 6 and its flag bytes\n   are set to 0.\n                  <<Figure 3-36\
    \  GDZL-Req packet format>>\n   A GDZL-Req packet's data field contains the subcode\
    \ 4 and the start\n   index in the data sender's zone list at which to begin returning\n\
    \   GDZL-Rsp packets.\n   GET DOMAIN ZONE LIST RESPONSE PACKET: When the data\
    \ sender receives a\n   GDZL-Req, it responds by sending a GDZL-Rsp packet. Figure\
    \ 3-37 shows\n   the format of a GDZL-Rsp packet. When sending a GDZL-Rsp packet,\
    \ a\n   data sender inserts the connection ID from the associated GDZL-Req\n \
    \  packet in the packet's AURP-Tr header and sets its sequence number to\n   0.\
    \ The AURP header of a GDZL-Rsp contains the command code 7 and its\n   flag bytes\
    \ are set to 0, except in the last packet containing zone\n   information, which\
    \ has its last flag set to 1.\n                  <<Figure 3-37  GDZL-Rsp packet\
    \ format>>\n   A GDZL-Rsp packet's data field contains the subcode 4, the start\n\
    \   index from the associated GDZL-Req, and the zone list. If the data\n   sender\
    \ does not support the GDZL-Req, it should set the start index\n   to -1.\n  \
    \ GET ZONES NET REQUEST PACKET: A Get Zones Net Request packet, or\n   GZN-Req,\
    \ requests the data sender to send zone information for one\n   specific zone.\
    \ Figure 3-38 shows the format of a GZN-Req packet. When\n   sending a GZN-Req\
    \ packet, an exterior router inserts the connection\n   ID for the connection\
    \ on which it is the data receiver in the\n   packet's AURP-Tr header and sets\
    \ its sequence number to 0. The AURP\n   header of a GZN-Req contains the command\
    \ code 6 and its flag bytes\n   are set to 0.\n                  <<Figure 3-38\
    \  GZN-Req packet format>>\n   A GZN-Req packet's data field contains the subcode\
    \ 3 and the name of\n   the zone about which the GZN-Req is requesting zone information.\n\
    \   GET ZONES NET RESPONSE PACKET: When the data sender receives a GZN-\n   Req,\
    \ it responds by sending a GZN-Rsp packet, containing the\n   requested zone information.\
    \ Figure 3-39 shows the format of a GZN-Rsp\n   packet. When sending a GZN-Rsp\
    \ packet, a data sender inserts the\n   connection ID from the associated GZN-Req\
    \ packet in the GZN-Rsp\n   packet's AURP-Tr header and sets the GZN-Rsp packet's\
    \ sequence number\n   to 0. The AURP header of a GZN-Rsp contains the command\
    \ code 7 and\n   its flag bytes are set to 0.\n                  <<Figure 3-39\
    \  GZN-Rsp packet format>>\n   A GZN-Rsp packet's data field contains the subcode\
    \ 3, the zone name\n   from the associated GZN-Req, the total number of network\
    \ tuples for\n   that zone, and as many network tuples as can fit in the packet.\
    \ These\n   tuples have the same format as those in RI-Rsp packets. If the data\n\
    \   sender has no information about the zone, it returns a GZN-Rsp in\n   which\
    \ the number of network tuples is 0. If the data sender does not\n   support the\
    \ GZN-Req, it should set the number of network tuples to\n   -1.\n   TICKLE PACKET:\
    \ The data receiver sends a Tickle packet to verify that\n   the data received\
    \ from the data sender is still valid. Figure 3-40\n   shows the format of a Tickle\
    \ packet. When sending a Tickle packet, an\n   exterior router inserts the connection\
    \ ID for the connection on which\n   it is the data receiver in the packet's AURP-Tr\
    \ header and sets its\n   sequence number to 0. The AURP header of a Tickle contains\
    \ the\n   command code 14 and its flag bytes are set to 0. A Tickle packet\n \
    \  contains no data.\n                   <<Figure 3-40  Tickle packet format>>\n\
    \   TICKLE ACKNOWLEDGMENT PACKET: When the data sender receives a Tickle,\n  \
    \ it responds by sending a Tickle-Ack packet. Figure 3-41 shows the\n   format\
    \ of a Tickle-Ack. When sending a Tickle-Ack, a data sender\n   inserts the connection\
    \ ID from the associated Tickle in the Tickle-\n   Ack packet's AURP-Tr header\
    \ and sets its sequence number to 0. The\n   AURP header of a Tickle-Ack packet\
    \ contains the command code 15 and\n   its flag bytes are set to 0. A Tickle-Ack\
    \ packet contains no data.\n                 <<Figure 3-41  Tickle-Ack packet\
    \ format>>\n   Error Codes\n   Open-Rsp and RD packets contain error codes. AURP\
    \ currently defines\n   the error codes listed in Table 3-5.\n               \
    \           Table 3-5  Error codes\n   Error code     Error\n   -1           \
    \  Normal connection close\n   -2             Routing loop detected\n   -3   \
    \          Connection out of sync\n   -4             Option-negotiation error\n\
    \   -5             Invalid version number\n   -6             Insufficient resources\
    \ for connection\n   -7             Authentication error\n"
- title: 4.  REPRESENTING WIDE AREA NETWORK INFORMATION
  contents:
  - "4.  REPRESENTING WIDE AREA NETWORK INFORMATION\n   This chapter describes optional\
    \ features of AURP-some of which can\n   also be implemented on routers that use\
    \ RTMP rather than AURP for\n   routing-information propagation. It provides detailed\
    \ information\n   about the presentation of wide area network information by exterior\n\
    \   routers to nodes on their local internets or to other exterior\n   routers,\
    \ including:\n      basic security-both network hiding and device hiding\n   \
    \   remapping of remote network numbers\n      internet clustering\n      loop\
    \ detection\n      hop-count reduction\n      hop-count weighting\n      backup\
    \ paths\n      network management\n   Network Hiding\n   An exterior router can\
    \ hide networks by importing or exporting\n   routing information only about specific\
    \ networks.\n   Importing Routing Information About Specific Networks\n   A network\
    \ administrator can configure a tunneling port on an exterior\n   router to import\
    \ only a subset of the routing information that it\n   receives through the tunnel.\
    \ To do so, the administrator hides\n   specific networks connected to other exterior\
    \ routers on the tunnel\n   from the exterior router's local internet. For example,\
    \ an exterior\n   router can import only that routing information received from\n\
    \   specific exterior routers, or routing information for networks in a\n   specific\
    \ network range or zone. By importing routing information only\n   about specific\
    \ networks, an exterior router can greatly reduce\n      the amount of routing\
    \ information maintained by routers on its\n      local internet\n      the number\
    \ of zones and devices that are visible to devices on its\n      local internet\n\
    \   Exporting Routing Information About Specific Networks\n   A network administrator\
    \ can configure a tunneling port on an exterior\n   router to export only a subset\
    \ of its local internet's routing\n   information-by hiding from other exterior\
    \ routers on the tunnel\n   specific networks in its local internet. For more\
    \ information about\n   hiding networks from other exterior routers, see the section\
    \ \"Hiding\n   Local Networks From Tunnels\" in Chapter 2.\n   Device Hiding\n\
    \   A router can prevent a device in its local internet from being\n   visible\
    \ to other nodes on a specific part or all other parts of the\n   internet by\
    \ not forwarding Name Binding Protocol (NBP) LkUp-Reply\n   packets from that\
    \ device. Hiding a device prevents nodes on the part\n   of the internet from\
    \ which it is hidden from knowing the name of the\n   hidden device, making it\
    \ more difficult for those nodes to access the\n   hidden device. Any AppleTalk\
    \ Phase 2 router can hide devices.\n   Advantages and Disadvantages\n   Device\
    \ hiding is a flexible security mechanism that is appropriate\n   for organizations\
    \ that do not require true device-specific security.\n   It is not a substitute\
    \ for device-specific security. Device hiding\n   can provide a degree of security\
    \ on devices for which no other form\n   of security exists-such as LaserWriter\
    \ printers.\n   A user can write a program that can obtain access to a hidden\
    \ device\n   using its AppleTalk address. Device hiding cannot secure a device\n\
    \   from a user that is not using NBP to access the device.\n   Device hiding\
    \ does not provide true device-specific security. Many\n   devices require device-specific\
    \ security-for example, AppleShare file\n   servers. Device-specific security\
    \ can provide various levels of\n   security, and may allow a network administrator\
    \ to grant access\n   privileges based on registered users and groups.\n   Configuring\
    \ Device Hiding on a Port\n   When configuring a port on a router that implements\
    \ device hiding, a\n   network administrator should be able to hide any device\
    \ that is\n   accessible through that port from the other ports on the router.\
    \ The\n   device being hidden need not reside on the network connected directly\n\
    \   to the port being configured.\n   An administrator should be able to specify\
    \ the ports from which to\n   hide a device-either specific ports or all other\
    \ ports.\n   When hiding devices, an administrator should be able to specify that\n\
    \   a list of devices either be hidden or visible. The device list should\n  \
    \ include device names and device types-for example, We-B-\n   Nets:AFPServer.\
    \  An administrator should also be able to hide all\n   devices of a given type-for\
    \ example, all LaserWriter printers-or all\n   devices of all types.\n   Filtering\
    \ NBP LkUp-Reply Packets\n   To implement device hiding, a router selectively\
    \ filters NBP LkUp-\n   Reply packets. When a port's configuration specifies that\
    \ devices\n   accessible through the port be hidden, the router\n      monitors\
    \ all NBP LkUp-Reply packets received through that port-\n      called the incoming\
    \ port\n      determines the port through which it is to forward such a packet-\n\
    \      called the outgoing port\n      obtains-from the port configuration for\
    \ the incoming port-the list\n      of devices to be hidden from the outgoing\
    \ port\n      determines whether it should filter all or part of an NBP LkUp-\n\
    \      Reply packet\n         If a port's configuration does not specify that\
    \ devices be\n         hidden from the outgoing port, the router forwards the\
    \ packet.\n         If a port's configuration specifies that devices be hidden\
    \ from\n         the outgoing port, the router checks each tuple in the NBP LkUp-\n\
    \         Reply packet to determine whether it is from a device in the\n     \
    \    port's list of hidden devices. It marks tuples from hidden\n         devices\
    \ for deletion. Once the router scans the entire packet,\n         it forwards\
    \ the packet if no tuples were marked for deletion; it\n         discards the\
    \ packet if all tuples were marked for deletion; or,\n         if only some tuples\
    \ were marked for deletion, it rebuilds the\n         packet without the tuples\
    \ marked for deletion, then forwards the\n         packet.\n   When the router\
    \ rebuilds a packet, it adjusts the tuple count in the\n   packet's NBP header\
    \ to reflect the number of tuples remaining. If a\n   rebuilt packet's DDP header\
    \ contains a nonzero checksum, the router\n   verifies the original checksum,\
    \ then sets it to 0.\n   This device-hiding scheme can handle both NBP Lookups\
    \ and NBP\n   Confirms, because a node responds to requests of either type with\
    \ a\n   LkUp-Reply packet.\n   LkUp-Reply packets do not contain the names of\
    \ zones in which devices\n   reside. Thus, if two devices having the same name\
    \ and type are\n   accessible through a port, a network administrator can hide\
    \ both\n   devices or neither device, but not just one of the devices.\n   When\
    \ configuring ports on routers through which redundant paths to a\n   device exist,\
    \ a network administrator must hide that device on at\n   least one port on each\
    \ path to that device. Otherwise, only a router\n   on which such a port was configured\
    \ to hide the device would filter\n   LkUp-Reply packets from the device. A router\
    \ on which such a port was\n   not configured to hide the device would not filter\
    \ its LkUp-Reply\n   packets.  Figure 4-1 shows the proper configuration of device\
    \ hiding\n   when a loop exists on the internet.\n     <<Figure 4-1  Device hiding\
    \ when a loop exists on the internet>>\n   Resolving Network-Numbering Conflicts\n\
    \   In addition to interconnecting different parts of one organization's\n   internet,\
    \ tunnels can interconnect the internets of multiple\n   organizations. Each organization\
    \ administrates its internet\n   independently. Therefore, conflicting network\
    \ numbers may exist on\n   the internets, especially when many internets are interconnected.\
    \ The\n   following sections describe the methods that AURP uses to resolve\n\
    \   various problems due to conflicting network numbers.\n   Network-Number Remapping\n\
    \   Network-number remapping resolves network-numbering conflicts,\n   allowing\
    \ network administrators to build very large internets. When\n   configuring a\
    \ port on an exterior router, an administrator can\n   specify a range of AppleTalk\
    \ network numbers to be used for imported\n   networks-that is, networks that\
    \ are accessible through half-routing\n   or tunneling ports, for which the exterior\
    \ router imports routing\n   information from other exterior routers. The remapping\
    \ range-the\n   range of network numbers reserved for network-number remapping-must\n\
    \   not conflict with any network numbers already in use on the exterior\n   router's\
    \ local internet.\n   The exterior router maps the network numbers in incoming\
    \ packets into\n   the remapping range. It converts remapped network numbers back\
    \ to\n   their actual network numbers for outgoing packets. To nodes and\n   routers\
    \ within the exterior router's local internet, packets\n   containing remapped\
    \ network numbers apparently originate from or are\n   being sent to networks\
    \ having numbers in the remapping range.\n   UNIQUE IDENTIFIERS: In a tunneling\
    \ environment, many different\n   internets may include AppleTalk networks that\
    \ have the same network\n   numbers.  Therefore, each exterior router on an internet\
    \ must\n   associate a unique identifier (UI) with each network that it exports\n\
    \   across the tunnel-that is, each network in its local internet that is\n  \
    \ not hidden. Generally, some type of global administration of UIs is\n   necessary.\n\
    \   On a given tunnel, each exterior router on which network-number\n   remapping\
    \ is active must have a unique domain identifier (DI). An\n   exterior router\
    \ using AURP derives a network's UI by concatenating\n   the exterior router's\
    \ DI-which is unique on the tunnel-with the\n   packet's network number or range-which\
    \ is unique within the exterior\n   router's domain. For more information about\
    \ domain identifiers, see\n   the section \"Domain Identifiers\" in Chapter 2.\n\
    \   On a tunneling port, an exterior router refers to AppleTalk network\n   numbers\
    \ and network ranges using UIs. Whenever an exterior router\n   sends or receives\
    \ AppleTalk data packets across the tunnel, it refers\n   to any network numbers\
    \ or ranges in the packets-for example, in a\n   packet's DDP header-by their\
    \ UIs. For example, when an exterior\n   router sends an RI- Rsp, which provides\
    \ a list of network ranges for\n   its local internet to other exterior routers\
    \ on the tunnel, it lists\n   the UIs corresponding to those network ranges. When\
    \ an exterior\n   router receives RI-Rsp packets from other exterior routers on\
    \ the\n   tunnel, it interprets the data in each packet as a list of UIs.\n  \
    \ Network-number remapping should be an optional component of any\n   tunneling\
    \ scheme. An administrator should be able to configure a\n   tunneling port with\
    \ or without specifying network-number remapping.\n   When network-number remapping\
    \ is inactive on all of the exterior\n   routers on a tunnel, each AppleTalk network\
    \ number and range\n   associated with the exterior routers must be unique.\n\
    \   MAPPINGS: An exterior router uses the following process to map\n   AppleTalk\
    \ network numbers and ranges to UIs, and vice versa:\n      The exterior router\
    \ logically maps network numbers in the exterior\n      router's local internet\
    \ to the corresponding UIs before sending a\n      packet out the tunneling port,\
    \ as shown in Figure 4-2. The UI\n      consists of the source DI in the domain\
    \ header and the network\n      number from the packet. Therefore, the exterior\
    \ router changes no\n      data in the packet to perform this mapping.\n     \
    \ The exterior router logically maps UIs corresponding to local\n      networks\
    \ in packets received through the tunneling port back to\n      their local network\
    \ numbers before forwarding the packets to the\n      exterior router's local\
    \ internet, as shown in Figure 4-2. The\n      exterior router changes no data\
    \ in the packet. This mapping is the\n      inverse of the previous mapping.\n\
    \      The exterior router maps UIs corresponding to network numbers for\n   \
    \   remote networks-that is, networks connected to other exterior\n      routers\
    \ on the tunnel-that are in packets received through the\n      tunneling port\
    \ to network numbers in the remapping range configured\n      for the local internet,\
    \ as shown in Figure 4-2. An exterior router\n      remaps network numbers from\
    \ the following fields in this way:\n         the source network number field\
    \ in the DDP header of an\n         AppleTalk data packet\n         the NBP entity\
    \ address field in an AppleTalk data packet\n         the routing data field in\
    \ an AURP routing-information packet\n      The exterior router maps network numbers\
    \ in the remapping range\n      configured for the local internet back to the\
    \ corresponding UIs\n      before sending packets out the tunneling port, as shown\
    \ in Figure\n      4-2. This type of remapping applies only to network numbers\
    \ that\n      reside in a destination network-number field of a DDP header in\
    \ an\n      AppleTalk data packet. This mapping is the inverse of the previous\n\
    \      mapping.\n     <<Figure 4-2 Mappings between local and remote internets'\
    \ network\n                             numbers and UIs>>\n   NOTE:  Network-number\
    \ remapping changes an AppleTalk data packet's\n   DDP header and may also change\
    \ its data. Thus, if a packet contains a\n   DDP checksum, when the exterior router\
    \ remaps network numbers\n   contained in the packet, it must verify that the\
    \ checksum is correct,\n   then set the checksum to 0. If the checksum is incorrect,\
    \ the\n   exterior router should discard the packet.\n   An exterior router can\
    \ perform network-number remapping either\n   statically or dynamically. Static\
    \ remapping reserves specific network\n   numbers in the remapping range for mapping\
    \ specific UIs. Dynamic\n   remapping assigns network numbers in the remapping\
    \ range to networks\n   as they become known to an exterior router.\n   Static\
    \ remapping is simpler to implement and provides a known mapping\n   for use in\
    \ network management. However, it may limit the number of\n   UIs that an exterior\
    \ router can import into its local internet.\n   Dynamic mapping requires a scheme\
    \ for network number reuse, but may\n   provide connectivity to a greater number\
    \ of networks across a tunnel.\n   To avoid having the same UI refer to two different\
    \ networks when\n   remapping network numbers dynamically, an exterior router\
    \ should\n   reuse network numbers in its remapping range only when no other\n\
    \   network numbers are available. If a network goes down, an exterior\n   router\
    \ should not immediately reassign the UI that referred to that\n   network to\
    \ another network that just came up on the internet.\n   An exterior router connected\
    \ to more than one tunnel should function\n   as though it were two exterior routers-each\
    \ connected to one tunnel\n   and both connected to one AppleTalk internet. Thus,\
    \ such an exterior\n   router must use remapped network numbers when sending routing\n\
    \   information across a tunnel about networks that are accessible\n   through\
    \ another tunnel.\n   Network Numbers in Data\n   To remap network numbers properly,\
    \ an exterior router must be aware\n   of their presence within AppleTalk data\
    \ packets. It is difficult to\n   detect network numbers in data packets, because\
    \ they could be\n   anywhere within a data packet. For example, NBP includes network\n\
    \   addresses as part of its data-in entity addresses. However, the data\n   packets\
    \ for very few protocols contain any network numbers. Some\n   third-party protocols\
    \ may contain network addresses in their data.\n   Protocols that contain network\
    \ addresses in their data may not\n   function properly across remapping exterior\
    \ routers.\n   Packets used for network management-such as RTMP Route Data Response\n\
    \   (RDR) and Simple Network Management Protocol (SNMP) packets-contain\n   network\
    \ numbers in their data. For detailed information about\n   handling network numbers\
    \ in SNMP packets, see the section \"Network\n   Management\" later in this chapter.\n\
    \   Problems With Loops\n   Network-number remapping introduces some problems\
    \ on an internet when\n   loops exist across a tunnel. If network-number remapping\
    \ is active,\n   two AppleTalk internets connected by a tunnel should not be\n\
    \   interconnected in any other way. If a redundant path to an internet\n   exists,\
    \ a remapped network range can loop back through that path to\n   the exterior\
    \ router that originally remapped the network range. When\n   this occurs, two\
    \ different network ranges-the network range actually\n   configured and the remapping\
    \ of the configured range-refer to one\n   network.\n   The remapped network range\
    \ apparently refers to a new network in the\n   exterior router's local internet.\
    \ Such a network is referred to as a\n   shadow network. The exterior router cannot\
    \ determine that it has\n   received a network range that it had previously remapped,\
    \ because\n   there is no apparent difference between a remapped network range\
    \ and\n   an actual network range. Thus, unless an administrator configures an\n\
    \   exterior router with an explicit list of networks to export, the\n   exterior\
    \ router again remaps the network range, then exports the\n   remapped network\
    \ range, sending it around the loop. The network range\n   is remapped repeatedly\
    \ until the apparent distance to the network\n   exceeds the hop-count limit.\
    \  Exterior routers that implement\n   network-number remapping should avoid establishing\
    \ such infinite\n   loops. For information about preventing such loops, see the\
    \ section\n   \"Routing Loops\" later in this chapter.\n   Redundant Paths\n \
    \  Under certain circumstances, it might be desirable to create a\n   redundant\
    \ path, which is a special type of loop. Redundant paths\n   connect an internet\
    \ to a tunnel through two or more exterior routers.\n   If network-number remapping\
    \ is active, all redundant exterior routers\n   must use the same DI to represent\
    \ the local internet-and must map UIs\n   representing remote networks in incoming\
    \ packets to the same local\n   network numbers.\n   To allow redundant exterior\
    \ routers to achieve such cooperation, a\n   network administrator might configure\
    \ all redundant exterior routers\n   with the same DI and complete remapping information\
    \ for all imported\n   networks. Alternatively, a network administrator might\
    \ configure one\n   exterior router with this information and all redundant exterior\n\
    \   routers could obtain the information from the configured exterior\n   router.\
    \ AURP does not currently support this functionality, but may\n   do so in the\
    \ future.\n   Tunnels With Partial Network-Number Remapping\n   When network-number\
    \ remapping is active on a tunneling port, an\n   exterior router maps network\
    \ numbers in packets received through the\n   tunnel into the remapping range\
    \ for its local internet. Because a\n   network administrator configures network-number\
    \ remapping on\n   individual exterior routers, network-number remapping may be\n\
    \   configured on some exterior routers on a tunnel, but not on others-\n   potentially\
    \ causing network-numbering conflicts due to partial\n   network-number remapping.\
    \ Whenever possible, an administrator should\n   configure network-number remapping\
    \ either on all exterior routers on\n   a tunnel or on none of them.  Otherwise,\
    \ network-numbering conflicts\n   are likely to occur on some of the exterior\
    \ routers-especially on\n   large, interorganizational internets.\n   In addition\
    \ to potential network-numbering conflicts, partial\n   network-number remapping\
    \ and the lack of loop detection between\n   nonremapping exterior routers may\
    \ cause shadow copies of networks\n   connected to more than one nonremapping\
    \ exterior router to appear in\n   the routing tables on remapping exterior routers.\n\
    \   An exterior router on which network-number remapping is active\n   performs\
    \ loop detection. Therefore, when network-number remapping is\n   active on all\
    \ of the exterior routers on a tunnel, no loops can exist\n   across the tunnel.\
    \ However, exterior routers on which network-number\n   remapping is not active\
    \ do not perform loop detection. Thus, when\n   network-number remapping is not\
    \ active on some of the exterior\n   routers on a tunnel, any loops that exist\
    \ between nonremapping\n   exterior routers are not detected.\n   In the example\
    \ shown in Figure 4-3, shadow copies of all networks\n   that are in the local\
    \ internets of both exterior router B and\n   exterior router C, on which network-number\
    \ remapping is not active,\n   appear in the routing table of exterior router\
    \ A, on which network-\n   number remapping is active.\n      <<Figure 4-3  A\
    \ tunnel with partial network-number remapping>>\n   Clustering Remapped Networks\n\
    \   Because a remapping range is a range of sequential network numbers,\n   an\
    \ exterior router can represent multiple remapped networks as a\n   single extended\
    \ network within its local internet-that is, it can\n   cluster remapped networks.\
    \ Clustering greatly reduces the size of the\n   routing tables that are maintained\
    \ and sent by routers within an\n   internet, as well as the amount of RTMP traffic\
    \ on the internet.\n   Clustering may also reduce the amount of NBP traffic on\
    \ an internet.\n   For example, as shown in Figure 4-4, if networks in an internet\
    \ have\n   the numbers 1, 100, and 1000, and an exterior router connected to a\n\
    \   different part of the internet receives these network numbers across\n   the\
    \ tunnel, that exterior router might remap the network numbers to\n   21, 22,\
    \ and 23. When sending RTMP packets within its local internet,\n   the remapping\
    \ exterior router can represent the three networks as a\n   single extended network\
    \ with a network range from 21 to 23. The zones\n   associated with the extended\
    \ network include all of the zones\n   associated with the three imported network\
    \ numbers.\n            <<Figure 4-4  Clustering remapped network numbers>>\n\
    \   An exterior router determines which remapped network numbers it\n   should\
    \ cluster. For example, an exterior router might create one\n   cluster for each\
    \ other exterior router on the tunnel. However, an\n   exterior router can include\
    \ no more than 255 zones in one cluster.\n   An exterior router that implements\
    \ clustering must maintain the\n   actual network range and zone list for each\
    \ network in a cluster. The\n   exterior router monitors all NBP FwdReq packets\
    \ to be forwarded\n   across the tunnel-including those it generates in response\
    \ to BrRq\n   packets. It examines the DDP destination network number in each\n\
    \   FwdReq packet to determine the cluster to which it is addressed. The\n   exterior\
    \ router then generates one FwdReq packet for each clustered\n   network for which\
    \ the FwdReq packet contains a zone name, and sends\n   that packet to the next\
    \ internet router for the network. The DDP\n   destination network number in such\
    \ a FwdReq packet corresponds to the\n   starting network number of a network's\
    \ actual network range.\n   A disadvantage of clustering is that clusters are\
    \ static. An exterior\n   router cannot notify its local internet that a specific\
    \ network or\n   zone in a cluster has gone down. An exterior router's implementation\n\
    \   of clustering could allow a network administrator to initiate\n   reclustering-in\
    \ which the exterior router notifies the internet that\n   an entire cluster has\
    \ gone down, then creates a new cluster that does\n   not include the networks\
    \ that have gone down. However, such\n   reclustering would cause a temporary\
    \ loss of connectivity to those\n   networks in the cluster that are still accessible.\
    \ Therefore, an\n   exterior router should not automatically recluster network\
    \ numbers.\n   REUSING NETWORK NUMBERS WITHIN A CLUSTER: Under certain conditions,\n\
    \   an exterior router that implements clustering might reuse network\n   numbers\
    \ within a cluster. If a network went down, then came back up\n   with the same\
    \ zone list, an exterior router could map its network\n   range into the same\
    \ remapping range and include it in the same\n   cluster. Otherwise, an exterior\
    \ router should not reuse network\n   numbers within a cluster, unless no other\
    \ network numbers within the\n   remapping range are available. In any case, an\
    \ exterior router can\n   reuse network numbers within a cluster only if a new\
    \ network has a\n   network range that fits in an unused range of network numbers\
    \ within\n   the cluster and a zone list that is a subset of the cluster's zone\n\
    \   list.\n   The implementation of clustering in an exterior router is complex.\n\
    \   See the Appendix, \"Implementation Details,\" for some ways in which\n   clustering\
    \ could be implemented.\n   Zone-Name Management\n   To enhance zone-name management\
    \ within an AppleTalk internet, AURP\n   provides Get Domain Zone List and Get\
    \ Zone Nets requests-which\n   function similarly to the ZIP GetZoneList command\
    \ and ZI-Req command,\n   respectively. However, as when using RTMP and ZIP, if\
    \ two networks in\n   an internet include zones that have the same zone name in\
    \ their zone\n   lists, exterior routers merge the zones into one zone-regardless\
    \ of\n   whether network-number remapping is active on one or more of the\n  \
    \ exterior routers.\n   Because AppleTalk data packets often contain zone names,\
    \ AURP\n   provides no means of remapping zone names. When importing or\n   exporting\
    \ zone names, an exterior router should not modify them in\n   any way.\n   On\
    \ a very large internet, zone names may become unmanageable.\n   Therefore, an\
    \ administrator should use domain-specific prefixes-such\n   as Engineering or\
    \ Sales-for zone names on such an internet. The use\n   of a third-party hierarchical\
    \ Chooser also might simplify zone-name\n   management.\n   Hop-Count Reduction\n\
    \   Generally, an exterior router increases the hop count in the DDP\n   header\
    \ of an AppleTalk data packet by at least one when it forwards\n   the packet\
    \ across a tunnel. Once a packet traverses 15 routers-either\n   local routers\
    \ or exterior routers-its hop count exceeds the maximum.\n   Thus, when an exterior\
    \ router receives a packet through its tunneling\n   port, it should examine that\
    \ packet's DDP hop count before forwarding\n   the packet. If the exterior router\
    \ receives a packet with a hop count\n   of 15 hops, it does not forward the packet\
    \ to another router, but\n   discards the packet.\n   When a tunnel or point-to-point\
    \ link connects AppleTalk internets,\n   the distance that a packet must traverse\
    \ can easily exceed 15 hops. A\n   network administrator might need full connectivity\
    \ between two\n   internets at a distance exceeding 15 hops. If the distance across\
    \ an\n   exterior router's local internet is already at or near the 15-hop\n \
    \  limit, the exterior router must reduce the perceived distance that a\n   packet\
    \ must traverse to allow the packet to reach a destination at a\n   distance that\
    \ exceeds 15 hops. To overcome DDP's 15-hop limit, an\n   exterior router reduces\
    \ the hop count in the DDP header of an Apple\n   data packet received through\
    \ a tunnel before forwarding the packet\n   into its local AppleTalk internet.\
    \ An exterior router should reduce\n   the hop count only by the number of hops\
    \ necessary to allow the\n   packet to reach its destination without exceeding\
    \ the hop-count\n   limit.\n   When an exterior router receives a packet through\
    \ the tunnel, it\n   examines the routing-table entry for that packet's destination\n\
    \   network to determine the remaining distance to that network. If the\n   distance\
    \ already traversed by the packet-the packet's current hop\n   count-plus the\
    \ distance to the destination network is less than 15\n   hops, the exterior router\
    \ simply forwards the packet. If adding the\n   destination network's distance\
    \ to the packet's current hop count\n   causes the hop count to exceed 15 hops,\
    \ the exterior router sets the\n   hop count to the following value: 15 minus\
    \ the distance in hops to\n   the destination network. The exterior router then\
    \ forwards the\n   packet.\n   Using hop-count reduction, an exterior router must\
    \ overcome the 15-\n   hop limits imposed by both DDP and RTMP. To overcome RTMP's\
    \ 15-hop\n   limit, an exterior router should represent all networks accessible\n\
    \   through the tunnel to routers in its local internet as one hop away\n   when\
    \ hop-count reduction is active on a tunneling port. This allows\n   routers to\
    \ maintain and send routing information about networks\n   beyond the 15-hop limit\
    \ and achieve full connectivity.\n   Constraints on Hop-Count Reduction\n   An\
    \ interdomain loop exists when a redundant path connects two parts\n   of an internet\
    \ that are connected through two exterior routers on a\n   tunnel.  The proper\
    \ operation of hop-count reduction requires that no\n   interdomain loops exist\
    \ across a tunnel. For detailed information\n   about interdomain loops see the\
    \ next section, \"Routing Loops.\"\n   Because network-number remapping requires\
    \ that no interdomain loops\n   exist on the internet, an exterior router can\
    \ perform hop-count\n   reduction whenever network-number remapping is active,\
    \ without any\n   risk of a packet being forwarded in an infinite routing loop.\n\
    \   Generally, an exterior router should not perform loop detection when\n   network-number\
    \ remapping is inactive.\n   Routing Loops\n   A routing loop exists when more\
    \ than one path connects two exterior\n   routers-both the path through the tunnel\
    \ and a path through the\n   exterior routers' local internets. When network-number\
    \ remapping is\n   not active on an exterior router, a routing loop can provide\
    \ an\n   alternative path to a network. However, when network-number remapping\n\
    \   or hop-count reduction is active on an exterior router, all exterior\n   routers\
    \ must avoid establishing loops across the tunnel. Otherwise,\n   if a routing\
    \ loop went undetected, multiple routing-table entries\n   that referred to the\
    \ same actual AppleTalk networks using different\n   remapping ranges might fill\
    \ the routing tables of all of the exterior\n   routers on a tunnel.\n   First-Order\
    \ Loops\n   In a first-order loop, a pair of exterior routers that are performing\n\
    \   network-number remapping across a tunnel are also connected through\n   another\
    \ path, on which there are no remapping exterior routers. In\n   Figure 4-5, exterior\
    \ routers A and B are remapping network numbers\n   across an AppleTalk tunnel,\
    \ and exterior router C-which is not\n   remapping network numbers-creates a first-order\
    \ routing loop.\n   Exterior router A's network range, 1 through 4, loops back\
    \ to it\n   through the tunnel and may be remapped again.\n                  \
    \  <<Figure 4-5  A first-order loop>>\n   Second-Order Loops\n   In a second-order\
    \ loop, one or more additional pairs of remapping\n   exterior routers are in\
    \ the loop. In Figure 4-6, exterior routers A\n   and B are remapping network\
    \ numbers across the AppleTalk tunnel that\n   connects them, and another pair\
    \ of exterior routers, C1 and C2-which\n   are also performing remapping across\
    \ the tunnel that connects them-\n   creates a second-order routing loop. Exterior\
    \ router A's network\n   range, 1 through 4, is remapped by exterior router C2\
    \ to the network\n   range 101 through 104, then loops back to exterior router\
    \ A through\n   the tunnel.\n                    <<Figure 4-6  A second-order\
    \ loop>>\n   Self-Caused and Externally Caused Loops\n   Routing loops can be\
    \ either self-caused or externally caused. A self-\n   caused loop results when\
    \ the detecting exterior router itself comes\n   on line. An externally caused\
    \ loop results when another router comes\n   on line somewhere on the internet,\
    \ after the detecting router has\n   been running for some time.\n   Loop-Detection\
    \ Process\n   The following sections describe the phases of the minimal loop-\n\
    \   detection process that an exterior router must employ when either\n   network-number\
    \ remapping or hop-count reduction is active. An\n   exterior router can implement\
    \ an enhanced loop-detection scheme.\n   LOOP-INDICATIVE ROUTING INFORMATION:\
    \ A remapping exterior router\n   should always examine routing information received\
    \ through a tunnel\n   for indications that a routing loop may exist. Loop-indicative\n\
    \   routing information appears to refer to networks across the tunnel.\n   However,\
    \ it may actually refer to networks in the exterior router's\n   own local internet\
    \ if the networks' routing information has looped\n   back through the tunnel.\n\
    \   In the following definition of loop-indicative information,\n      the network\
    \ range for the network connected to a given port of an\n      exterior router\
    \ is referred to as ns through ne\n      the zone list for that network is referred\
    \ to as z1 through zn\n   The routing information that a remapping exterior router\
    \ receives\n   through a tunneling port is loop indicative if both of the following\n\
    \   conditions are true for some port on the router:\n      The size of the network\
    \ range in the routing information is ne-\n      ns+1.\n      The zone list in\
    \ the routing information consists precisely of z1\n      through zn.\n   Thus,\
    \ the routing information could represent a remapping of the\n   network range\
    \ for a network connected directly to one of the exterior\n   router's ports.\n\
    \   An exterior router most commonly receives loop-indicative information\n  \
    \ at startup when the process of bringing up the tunnel may create a\n   self-caused\
    \ loop. An exterior router may also receive loop-indicative\n   information if\
    \ another router connects two AppleTalk domains that are\n   already connected\
    \ through the tunnel and creates an externally caused\n   loop.\n   If a remapping\
    \ exterior router receives loop-indicative routing\n   information through a tunnel,\
    \ it should start a loop-investigation\n   process. For information about the\
    \ loop-investigation process, see\n   the next section, \"Loop-Investigation Process.\"\
    \n   LOOP-INVESTIGATION PROCESS: To confirm or deny the existence of a\n   suspected\
    \ loop, an exterior router performs a loop-investigation\n   process, in which\
    \ it sends an AppleTalk data packet out the tunneling\n   port, then observes\
    \ whether that packet loops back through a port\n   connected to its local internet.\
    \ The exterior router sends the packet\n   to the address corresponding to its\
    \ own address on the network that\n   it suspects may actually be a shadow copy\
    \ of a network connected\n   directly to one of its ports.\n   LOOP PROBE PACKET:\
    \ A Loop Probe packet is an AppleTalk data packet\n   that an exterior router\
    \ sends out a tunneling port to confirm or deny\n   the existence of a loop. It\
    \ is a new type of RTMP packet and has the\n   function code 4. Figure 4-7 shows\
    \ the format of a Loop Probe packet.\n                 <<Figure 4-7  Loop Probe\
    \ packet format>>\n   The source node ID and source network number in a Loop Probe\
    \ packet\n   should be those of the port for which the exterior router received\n\
    \   loop-indicative information. An exterior router can send a Loop Probe\n  \
    \ packet through any socket.\n   A Loop Probe packet's destination network number\
    \ is the network\n   number to which that port's network number would be remapped\
    \ if the\n   loop-indicative information were actually a shadow copy of that\n\
    \   port's routing information. Refer to the port's actual network number\n  \
    \ as nu(ns<=nu<=ne). If the network range in the loop-indicative\n   information\
    \ were rs through re, the packet's destination network\n   number would be rs+nu-ns.\n\
    \   A Loop Probe packet's destination node ID is that of the exterior\n   router\
    \ on the port for which the exterior router received loop-\n   indicative information.\
    \ The packet's destination socket is socket 1-\n   the RTMP socket.\n   A Loop\
    \ Probe packet's data field always begins with a long word that\n   has the value\
    \ 0. The remainder of the data field should contain\n   information that the exterior\
    \ router that sends the packet can use to\n   identify that packet if it receives\
    \ the packet through its local\n   internet. An exterior router might receive\
    \ a Loop Probe packet sent\n   by another exterior router if a loop did not actually\
    \ exist and the\n   other exterior router sent a Loop Probe packet to a random\
    \ node on\n   the internet rather than to itself. The node receiving the Loop\
    \ Probe\n   packet might be an exterior router that also sent a Loop Probe\n \
    \  packet. To prevent an exterior router that receives such a Loop Probe\n   packet\
    \ from falsely concluding that a loop exists, the exterior\n   router sending\
    \ the packet must insert sufficient data in that\n   packet's data field to allow\
    \ it to recognize the packet as the one it\n   sent.\n   An exterior router initiating\
    \ a loop-investigation process should\n   forward a Loop Probe packet through\
    \ the tunnel to the next internet\n   router for the packet's destination network-just\
    \ as it would any\n   other AppleTalk data packet. This next internet router should\
    \ always\n   be the exterior router that sent the loop-indicative information.\n\
    \   A remapping exterior router forwarding a Loop Probe packet into its\n   local\
    \ internet must process that packet differently from other\n   AppleTalk data\
    \ packets in one way. If the exterior router's remapping\n   database does not\
    \ include the source network number in the packet's\n   DDP header, the exterior\
    \ router should forward the packet without\n   remapping the source network number.\
    \ At startup, remapping\n   information is generally unavailable. However, the\
    \ absence of\n   remapping information should not affect the loop-detection process.\n\
    \   If a loop exists, the exterior router that originally sent the Loop\n   Probe\
    \ packet receives that packet through its local internet. The\n   data in the\
    \ packet remains unchanged. The exterior router can use\n   that data to confirm\
    \ the existence of a loop on the internet.\n   If a Loop Probe packet returns\
    \ to the exterior router through the\n   tunnel out which it was sent, a loop\
    \ exists between two other\n   exterior routers on the tunnel, but does not involve\
    \ the exterior\n   router that sent the packet. The sending router need take no\
    \ action.\n   An exterior router should send a Loop Probe packet at least four\n\
    \   times.  The retransmission timeout should be no less than two\n   seconds.\
    \ Once the exterior router has retransmitted a Loop Probe\n   packet four times\
    \ and that packet has not returned to the exterior\n   router through its local\
    \ internet, the exterior router determines\n   that no loop exists.\n   If the\
    \ exterior router receives a Loop Probe packet containing the\n   correct data\
    \ field through its local internet, this confirms the\n   existence of a loop.\
    \ The exterior router should deactivate the\n   tunneling port, log an error,\
    \ and set the state of all routing-table\n   entries for exterior routers connected\
    \ to that tunnel to BAD.\n   NOTE:  The exterior router need not deactivate a\
    \ tunneling port on\n   which it detects a loop. However, the exterior router\
    \ must disconnect\n   with the exterior router that sent the loop-indicative information.\n\
    \   However, disconnecting from only that exterior router might\n   inadvertently\
    \ result in a partially connected tunnel or in a lack of\n   connectivity through\
    \ the tunnel that would be difficult to detect.\n   LIMITATIONS OF LOOP DETECTION:\
    \ This loop-detection process becomes\n   ineffective if, at some point in the\
    \ loop, another exterior router\n      hides networks connected directly to the\
    \ ports of the exterior\n      router that sent the Loop Probe packet\n      clusters\
    \ the network ranges of networks connected directly to the\n      exterior router's\
    \ ports\n      is not remapping network numbers-resulting in partial network-\n\
    \      number remapping\n   In such cases, the exterior router that initiated\
    \ the loop-detection\n   process may never receive loop-indicative information,\
    \ even though a\n   loop exists.\n   Using Alternative Paths\n   AURP provides\
    \ two mechanisms that allow a network administrator to\n   configure a port on\
    \ an exterior router to forward packets over an\n   alternative path to a network\
    \ only when the primary path to that\n   network is unavailable:\n      hop-count\
    \ weighting\n      backup paths\n   By configuring hop-count weighting on a port\
    \ or configuring a port as\n   a backup path, an administrator can reduce the\
    \ amount of traffic on a\n   slow point-to-point link or tunnel. These mechanisms\
    \ are also\n   available on links using RTMP.\n   Hop-Count Weighting\n   A network\
    \ administrator can configure hop-count weighting on a port\n   to increase the\
    \ routing distance through a port by counting a link to\n   another exterior router\
    \ as more than one hop. Increasing the routing\n   distance through a port may\
    \ cause traffic to traverse an alternative\n   path. The routers on an internet\
    \ forward packets over an alternative\n   path to a network if\n      an alternative\
    \ path is available\n      the perceived distance to that network is shorter over\
    \ the\n      alternative path\n   However, a network administrator should not\
    \ set the hop-count weight\n   for a link so high that distances between networks\
    \ across that link\n   exceed the limit of 15 hops. Otherwise, if the link on\
    \ which hop-\n   count weighting was active were the only available path, the\
    \ exterior\n   router would be unable to provide full connectivity to all networks\n\
    \   on the internet.\n   To implement hop-count weighting, an exterior router\
    \ should make the\n   following changes to RTMP and the DDP routing process:\n\
    \      When an exterior router uses RTMP or AURP to broadcast the\n      networks\
    \ that are accessible through a link on which hop-count\n      weighting is active,\
    \ the distance attributed to each network should\n      equal its actual distance\
    \ plus the hop-count weight specified.\n      Before an exterior router forwards\
    \ a DDP data packet to a network\n      across that link, it should add the specified\
    \ hop-count weight to the\n      value in the hop-count field of the packet's\
    \ DDP header.\n   Backup Paths\n   A network administrator can configure a port\
    \ on an exterior router as\n   a backup path. The routers on an internet forward\
    \ AppleTalk data\n   packets across a backup path only when an exterior router\
    \ on which a\n   port is configured as a backup path determines that no other\
    \ path to\n   a specific network or networks is available.\n   Regardless of the\
    \ distance that routing packets must traverse across\n   a primary path to a network,\
    \ routers on the internet use the primary\n   path as long as it remains available.\
    \ When the exterior router on\n   which a port is configured as a backup path\
    \ determines that the\n   primary path to a network is no longer available and\
    \ that network is\n   accessible across the backup path, the exterior router broadcasts\n\
    \   routing information about networks accessible across the backup path\n   to\
    \ its local internet.\n   NOTE:  An exterior router at each end of the backup\
    \ path maintains a\n   complete routing table for the entire internet, and sends\
    \ AURP or\n   RTMP routing packets across the backup path, regardless of whether\n\
    \   the backup path is in use.\n   If an exterior router is currently providing\
    \ access to a network\n   through a backup path and the primary path to that network\
    \ again\n   becomes available, the exterior router starts broadcasting routing\n\
    \   information that indicates the primary path to the network, rather\n   than\
    \ the backup path. The routers on the exterior router's local\n   internet can\
    \ again use the primary path to that network.\n   PROBLEMS REACTIVATING THE PRIMARY\
    \ PATH: When an exterior router is\n   providing access to a network through a\
    \ backup path and the primary\n   path to that network again becomes available,\
    \ it is possible that the\n   exterior router may not become aware that the primary\
    \ path is\n   available.  This can occur when other routers in the exterior\n\
    \   router's local internet use the backup path, rather than a newly\n   available\
    \ primary path, because the backup path traverses a shorter\n   distance. The\
    \ other routers have no way of knowing that an active\n   path is a backup path.\
    \  They do not notify the exterior router\n   connected to the shorter backup\
    \ path about the primary path's\n   availability.\n   Once the primary path becomes\
    \ unavailable and routers on the internet\n   use the backup path, reconfiguring\
    \ the exterior router so it will\n   again use the primary path may be necessary.\n\
    \   Network Management\n   A Simple Network Management Protocol (SNMP) Management\
    \ Information\n   Base (MIB) allows the remote management of tunneling, routing-\n\
    \   information propagation, and the representation of wide area routing\n   information.\
    \  Refer to the \"IETF Draft: Macintosh System MIB\" on\n   E.T.O. for detailed\
    \ information about the structure and content of\n   AURP's many remotely manageable\
    \ parameters.\n   Network-Number Remapping and Network Management\n   The packets\
    \ of network-management protocols-regardless of whether\n   SNMP forms their basis-often\
    \ contain information about specific\n   AppleTalk network numbers. An exterior\
    \ router cannot remap network\n   numbers in data. Therefore, when querying devices\
    \ across a tunnel,\n   network-management protocols always return network numbers\
    \ that have\n   not been remapped. However, a remote network-management station\
    \ using\n   SNMP could use the AURP MIB to query a remapping exterior router to\n\
    \   obtain remapped network numbers from the exterior router's remapping\n   database.\n\
    \   Network Hiding and Network Management\n   Even though an exterior router is\
    \ hiding a network from a particular\n   port, that network's routing information\
    \ should be available to a\n   network-management station across that port. Network\
    \ hiding should\n   not affect network management. Thus, an exterior router should\
    \ still\n   return routing information for hidden networks in responses to\n \
    \  network-management queries. A network-management station using SNMP\n   could\
    \ use the AURP MIB to query an exterior router to obtain\n   information about\
    \ hidden networks.\n   Unaffected Network-Management Packets\n   Network-management\
    \ packets that network-number remapping and network\n   hiding should not affect\
    \ include:\n      SNMP requests received through an AURP port\n      SNMP responses\
    \ sent through an AURP port\n      RTMP responses sent through an AURP port\n\
    \      Route Data responses sent through an AURP port\n      ZIP queries received\
    \ through an AURP port\n      ZIP requests received through an AURP port\n   \
    \   ZIP replies sent through an AURP port\n"
- title: 'APPENDIX:  IMPLEMENTATION DETAILS'
  contents:
  - "APPENDIX:  IMPLEMENTATION DETAILS\n   This appendix provides information that\
    \ may assist you in\n   implementing AURP. It does not specify protocol requirements.\n\
    \   Developers implementing AURP routers may want to purchase the Apple\n   Internet\
    \ Router, a product of Apple Computer. The Apple Internet\n   Router provides\
    \ many additional examples of how you might implement\n   the various features\
    \ of AURP.\n   State Diagrams\n   Figure A-1 shows the state diagram for the AURP\
    \ data receiver.\n             <<Figure A-1  AURP data receiver state diagram>>\n\
    \   Figure A-2 shows the state diagram for the AURP data sender.\n           \
    \   <<Figure A-2  AURP data sender state diagram>>\n   AURP Table Overflow\n \
    \  It is possible for an AURP data receiver to have insufficient storage\n   capacity\
    \ to maintain all of the routing information sent to it by a\n   peer data sender.\
    \ Because the data sender does not retransmit routing\n   information, the data\
    \ receiver should set a flag indicating that a\n   table-overflow condition exists.\
    \ If additional storage later becomes\n   available, the data receiver should\
    \ try to obtain the missing\n   information. If zone information is lost, the\
    \ data receiver can\n   obtain complete zone information by sending the appropriate\
    \ ZI-Req\n   packets. If network information is lost, the data receiver should\n\
    \   send an RI-Req to obtain the complete routing table.\n   A Scheme for Updates\
    \ Following Initial Information Exchange\n   As described in the section \"Sending\
    \ Updates Following the Initial\n   Exchange of Routing Information\" in Chapter\
    \ 3, an exterior router\n   must present complete and accurate routing information\
    \ to all\n   exterior routers, even if a new connection is established with that\n\
    \   exterior router when the exterior router has update events pending-\n   that\
    \ is, update events not yet sent in RI-Upd packets. This section\n   details one\
    \ scheme for presenting routing information to both new and\n   old connections\
    \ correctly, even if multiple update events occur for a\n   given network in an\
    \ update period during which the exterior router\n   establishes new connections.\
    \ More complex schemes could provide more\n   up-to-date information, at the cost\
    \ of greater implementational\n   complexity.\n   Assume that an exterior router\
    \ has a number of AURP connections\n   established with other routers and that\
    \ a series of update events for\n   a given network occur in the exterior router's\
    \ local internet. Once\n   these events have occurred, but before the update interval\
    \ expires-\n   that is, before the exterior router sends RI-Upd packets over its\n\
    \   connections-the exterior router establishes a new AURP connection\n   with\
    \ another exterior router and receives an RI-Req packet from that\n   exterior\
    \ router. This section describes the information about the\n   network that the\
    \ RI-Rsp packet should contain. It also describes the\n   update event that the\
    \ exterior router should send in the next RI-Upd\n   packet, assuming that it\
    \ receives no additional update events for the\n   network.\n   Two scenarios\
    \ are possible. In the first scenario, a network for\n   which the exterior router\
    \ is not exporting information at the\n   beginning of an update interval either\
    \ comes up in the exterior\n   router's local internet, or a new path to the network\
    \ that is shorter\n   than the path through the tunnel comes up in the exterior\
    \ router's\n   local internet. In either case, the RI-Rsp packet should not include\n\
    \   the new network.\n   By not including the new network in the RI-Rsp, the implementation\n\
    \   can simply continue to follow the state diagram provided in the\n   section\
    \ \"Sending Routing Information Update Packets\" in Chapter 3. If\n   only an\
    \ NDC event or no additional update event occurs for the\n   network, the next\
    \ RI-Upd packet that the exterior router sends on\n   both old and new connections\
    \ should contain an NA event for the\n   network. If an NRC or ND event occurs\
    \ for the network, the exterior\n   router should not include an event tuple for\
    \ the network in the RI-\n   Upd. This sequence matches the state diagram precisely.\
    \ If the RI-Rsp\n   did contain information about the network, new connections\
    \ would\n   require a different state diagram.\n   In the second scenario, the\
    \ exterior router initially exports\n   information for a network, then an update\
    \ event occurs for that\n   network.  In all cases, the RI-Rsp packet should contain\
    \ up-to-date\n   information about the network from the exterior router's central\n\
    \   routing table, and the next RI-Upd packet should contain the specific\n  \
    \ event that the state table indicates for that network. For example,\n   if an\
    \ ND or NRC event occurs for the network, the network should not\n   be included\
    \ in the RI-Rsp, while if an NDC event occurs, it should be\n   included in the\
    \ RI-Rsp.\n   This scheme may result in some exterior routers receiving unexpected\n\
    \   update events, which they must process as specified in the section\n   \"\
    Processing Inconsistent Update Events\" in Chapter 3. For example,\n   another\
    \ exterior router with which the exterior router establishes a\n   new connection\
    \ might receive an ND or NRC event for a network of\n   which it was unaware.\
    \ The receiving exterior router would ignore the\n   event.\n   In an alternative\
    \ way of evaluating and possibly implementing this\n   scheme, the information\
    \ for a given network that is sent in the\n   initial RI-Rsp packet depends on\
    \ the particular update event that is\n   pending for that network when the exterior\
    \ router sends the RI-Rsp.\n   Specifically, an exterior router should include\
    \ a network for which\n   it has an update event pending in the RI-Rsp packet\
    \ only if the\n   pending update event is an NDC. Otherwise, the exterior router\
    \ should\n   not include the network in the RI-Rsp. Following this RI-Rsp, the\n\
    \   exterior router sends RI-Upd packets as usual, which include other\n   pending\
    \ events, as necessary.\n   Implementation Effort for Different Components of\
    \ AURP\n   AURP contains various enhancements to AppleTalk routing. The only\n\
    \   components of AURP that are required are those specified in Chapter\n   3.\
    \  The required components of AURP provide the functionality needed\n   to replace\
    \ RTMP and ZIP, completely and compatibly, on tunnels and\n   point-to-point links,\
    \ without losing any functionality and with\n   greatly reduced routing traffic.\
    \ Optional features of AURP provide\n   functionality beyond that of RTMP and\
    \ ZIP. This functionality is\n   especially useful in a wide area network environment.\n\
    \   The chart shown in Figure A-3 provides rough estimates of the\n   percentage\
    \ of development time needed to implement, debug, and test\n   the various components\
    \ of a complete AURP implementation. It can\n   provide developers with some idea\
    \ of the implementational complexity\n   of these components and help developers\
    \ make tradeoffs between\n   features and development time.\n              <<Figure\
    \ A-3  Implementation effort for AURP>>\n   Creating Free-Trade Zones\n   A useful\
    \ feature of AURP is that it allows a network administrator to\n   create free-trade\
    \ zones. A free-trade zone is a part of an internet\n   that is accessible by\
    \ two other parts of the internet, neither of\n   which can access the other.\
    \ An administrator might create a free-\n   trade zone to provide some form of\
    \ interchange between two\n   organizations that otherwise want to keep their\
    \ internets isolated\n   from each other, or between two organizations that otherwise\
    \ do not\n   have physical connectivity with one another.\n   AURP allows the\
    \ creation of free-trade zones in two ways. In one\n   method, described in the\
    \ section \"Fully Connected and Partially\n   Connected Tunnels\" in Chapter 2,\
    \ an administrator intentionally\n   creates a partially connected tunnel. The\
    \ administrator configures\n   the exterior router to connect with two exterior\
    \ routers between\n   which a free-trade zone is to be established, but does not\
    \ configure\n   those exterior routers to connect with one another.\n   The second\
    \ method of using AURP to create a free-trade zone involves\n   the use of network\
    \ hiding. An administrator can configure a single\n   router to create a free-trade\
    \ zone. No AURP tunnel need exist. As\n   shown in Figure A-4, three ports are\
    \ configured on a router. One port\n   connects to the free-trade zone, while\
    \ the other two ports connect to\n   the parts of the internets that are otherwise\
    \ isolated from one\n   another.\n                 <<Figure A-4  Creating free-trade\
    \ zones>>\n   On the port connected to the free-trade zone, the administrator\
    \ does\n   not configure the router to hide any networks. The exterior router\n\
    \   exports all networks from both organizations to the free-trade zone.\n   On\
    \ each port connected to an organization's internet, the\n   administrator configures\
    \ the router to export only the networks from\n   the free-trade zone. The exterior\
    \ router hides all the networks from\n   the other organization's internet. In\
    \ this way, each organization has\n   access to the networks in the free-trade\
    \ zone, and vice versa, but\n   not to the networks in the other organization's\
    \ internet.\n   Implementation Details for Clustering\n   The data structures\
    \ that an exterior router uses to maintain\n   information about clustering are\
    \ key to the implementation of\n   clustering. An exterior router should\n   \
    \   maintain mappings between the actual domain identifier and network\n     \
    \ range; the remapped network range; and the associated cluster\n      maintain\
    \ zone lists for each actual network and for the cluster as\n      a whole\n \
    \     use data structures that allow parts of the information to be\n      marked\
    \ for deletion, while maintaining that information for possible\n      later reuse-for\
    \ example, if a network goes down, then comes back up\n      use data structures\
    \ that are bidirectional-supporting both the\n      conversion of a single FwdReq\
    \ into multiple FwdReq packets and the\n      manipulation of individual networks\
    \ within the cluster\n   An exterior router can cluster any network numbers that\
    \ is has\n   remapped into an available range of contiguous network numbers. From\n\
    \   both an implementation and a management point of view, it is\n   generally\
    \ best for an exterior router to cluster all network numbers\n   that it receives\
    \ from a particular exterior router at a given time.\n   For example, it may be\
    \ desirable to cluster all of the network\n   numbers included in the initial\
    \ information exchange with a\n   particular exterior router, then later, to cluster\
    \ all of the network\n   numbers received in NA events in a given RI- Upd packet.\n\
    \   Maintaining compatibility with AppleTalk Phase 2 complicates the\n   implementation\
    \ of clustering. An exterior router can include a\n   maximum of 255 zones in\
    \ a cluster. This limit may prevent the\n   exterior router from clustering all\
    \ of the network numbers that it\n   receives at one time.  When an exterior router\
    \ receives a list of\n   networks from another exterior router, it does not know\
    \ how many\n   different zone names the networks use. The exterior router does\
    \ not\n   have this information until it receives the associated ZI-Rsp\n   packets.\
    \ Therefore, an exterior router should not build a cluster\n   until it has received\
    \ a complete zone list for the network numbers\n   being clustered. Once the exterior\
    \ router has complete zone\n   information for the network numbers, it can cluster\
    \ the maximum\n   number of network numbers allowed by the 255 zone limit.\n \
    \  AURP does not specify the method by which an exterior router, when\n   forming\
    \ a cluster, should determine the hop count for that cluster-\n   that is, the\
    \ apparent distance in hops to the single extended network\n   that represents\
    \ the cluster. Possible implementation options include\n      always setting the\
    \ hop count to a constant value\n      setting the hop count to the minimum, average,\
    \ or maximum of the\n      hop counts for the networks within the cluster\n  \
    \ In a large internet, setting the hop count for a cluster too high may\n   make\
    \ the networks in that cluster unreachable from some networks in\n   the local\
    \ internet of the exterior router that is clustering the\n   network numbers.\n\
    \   Modified RTMP Algorithms for a Backup Path\n   In the following RTMP maintenance\
    \ algorithms defined in Inside\n   AppleTalk, the backup path is an RTMP link.\
    \ These algorithms can be\n   adapted to AURP according to the architectural model\
    \ described in the\n   section \"AURP Architectural Model\" in Chapter 3. Proposed\n\
    \   modifications to these algorithms appear in boldface Courier font.\n   On\
    \ Receiving an RTMP Data Packet Through a Port\n   IF P is connected to an AppleTalk\
    \ network AND P's network\n        number range = 0\n   THEN BEGIN\n        P's\
    \ network number range := packet's sender network\n             number range;\n\
    \        IF there is an entry for this network number range\n        THEN delete\
    \ it;\n        Create a new entry for this network number range with\n       \
    \      Entry's network number range := packet's sender\n                  network\
    \ number range;\n             Entry's distance := 0;\n             Entry's next\
    \ IR := 0;\n             Entry's status := Good;\n             Entry's port :=\
    \ P;\n        END;\n   FOR each routing tuple in the RTMP Data packet DO\n   \
    \     IF there is a table entry corresponding to the tuple's\n             network\
    \ number range\n             THEN Update-the-Entry\n        ELSE IF there is a\
    \ table entry overlapping with the\n             tuple's network number range\n\
    \             THEN ignore the tuple\n        ELSE IF P is not a backup path\n\
    \             THEN Create-New-Entry\n        ELSE     Create-New-Tentative Entry;\n\
    \   Update-the-Entry\n   IF (Entry's port is not a backup port AND P is a\n  \
    \      backup port)\n   THEN Return; {Ignore tuple}\n   IF (Entry's state = Bad)\
    \ AND (tuple distance <15)\n   THEN Replace-Entry\n   ELSE\n        IF Entry's\
    \ distance >= (tuple distance +1) AND (tuple\n             distance <15)\n   \
    \          OR  (Entry's port is a backup port and P is not a\n               \
    \   backup port)\n        THEN Replace-Entry\n        ELSE IF Entry's next IR\
    \ = RTMP Data packet's sender node\n             address AND Entry's port = P\n\
    \        THEN IF tuple distance <> 31 THEN BEGIN\n             Entry's distance\
    \ := tuple distance + 1;\n             IF Entry's distance < 16\n            \
    \ THEN Entry's state := Good\n             ELSE Delete the entry\n        END\n\
    \        Else Entry's state := Bad;\n   An exterior router uses the Create-New-Tentative-Entry\
    \ algorithm when\n   it discovers a previously unknown network across a backup\
    \ path. An\n   exterior router should not add an entry to the routing table being\n\
    \   broadcast to its local internet until it determines definitely that\n   no\
    \ alternative path to a network is available. While waiting for\n   another path\
    \ to a network to become available, the exterior router\n   temporarily stores\
    \ the routing-table entry in a tentative routing\n   table, as defined by the\
    \ following algorithm:\n   Create-New-Tentative-Entry\n   IF tentative entry for\
    \ tuple's network number range does not\n        already exist\n        THEN BEGIN\n\
    \             Tentative entry's network number range =\n                  tuple's\
    \ network number range;\n             Tentative entry's distance := tuple's distance;\n\
    \             Tentative entry's next IR = packet's node address;\n           \
    \  Tentative entry's port := P;\n             Start a TBD-minute timer for this\
    \ entry;\n        END;\n   WHEN timer for this entry expires\n        IF there\
    \ is a table entry corresponding to or\n             overlapping with the tentative\
    \ entry's network\n             number range\n             THEN ignore the entry\n\
    \        ELSE Create-New-Entry; {using data from the tentative\n             entry}\n\
    \        Delete tentative entry;\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   This memo discusses a weak form of security called\
    \ network hiding or\n   device hiding.  More general concerns about security are\
    \ not\n   addressed.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Alan B. Oppenheimer\n   Apple Computer, M/S 35-K\n   20525\
    \ Mariani Avenue\n   Cupertino, California  95014\n   Phone: 408-974-4744\n  \
    \ EMail: Oppenheime1@applelink.apple.com\n   Note: The author would like to acknowledge\
    \ the contribution of Pabini\n   Gabriel-Petit here at Apple, who translated the\
    \ engineering\n   specification into human-readable form.\n"
