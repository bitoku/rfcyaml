- title: __initial_text__
  contents:
  - '                    FDDI Management Information Base

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" for the standardization state and status\n   of this protocol.\
    \  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in TCP/IP-based internets.\n   In\
    \ particular, it defines objects for managing devices which\n   implement the\
    \ FDDI based on the ANSI FDDI SMT 7.3 draft standard [8],\n   which has been forwarded\
    \ for publication by the X3T9.5 committee.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  The Network Management Framework
  contents:
  - "1.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      o STD 16, RFC\
    \ 1155 which defines the SMI, the mechanisms used for\n        describing and\
    \ naming objects for the purpose of\n        management.  STD 16, RFC 1212 defines\
    \ a more concise description\n        mechanism, which is wholly consistent with\
    \ the SMI.\n      o STD 17, RFC 1213 defines MIB-II, the core set of managed objects\n\
    \        for the Internet suite of protocols.\n      o STD 15, RFC 1157 which\
    \ defines the SNMP, the protocol used for\n        network access to managed objects.\n\
    \   The Framework permits new objects to be defined for the purpose of\n   experimentation\
    \ and evaluation.\n"
- title: 1.1.  Object Definitions
  contents:
  - "1.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object object type is named\n   by\
    \ an OBJECT IDENTIFIER, an administratively assigned name.  The\n   object type\
    \ together with an object instance serves to uniquely\n   identify a specific\
    \ instantiation of the object.  For human\n   convenience, we often use a textual\
    \ string, termed the descriptor, to\n   refer to the object type.\n"
- title: 1.2.  Format of Definitions
  contents:
  - "1.2.  Format of Definitions\n   Section 4 contains contains the specification\
    \ of all object types\n   contained in this MIB module.  The object types are\
    \ defined using the\n   conventions defined in the SMI, as amended by the extensions\n\
    \   specified in [7].\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   This document defines the managed objects for FDDI devices which\
    \ are\n   to be accessible via the Simple Network Management Protocol (SNMP).\n\
    \   At present, this applies to these values of the ifType variable in\n   the\
    \ Internet-standard MIB:\n               fddi(15)\n   For these interfaces, the\
    \ value of the ifSpecific variable in the\n   MIB-II [4] has the OBJECT IDENTIFIER\
    \ value:\n               fddimib    OBJECT IDENTIFIER ::= { fddi 73 }\n   The\
    \ definitions of the objects presented here draws heavily from\n   related work\
    \ in the ANSI X3T9.5 committee and the SMT subcommittee of\n   that committee\
    \ [8].  In fact, the definitions of the managed objects\n   in this document are,\
    \ to the maximum extent possible, identical to\n   those identified by the ANSI\
    \ committee.  The semantics of each\n   managed object should be the same with\
    \ syntactic changes made as\n   necessary to recast the objects in terms of the\
    \ Internet-standard SMI\n   and MIB so as to be compatible with the SNMP.  Examples\
    \ of these\n   syntactic changes include remapping booleans to enumerated integers,\n\
    \   remapping bit strings to octet strings, and the like.  In addition,\n   the\
    \ naming of the objects was changed to achieve compatibility.\n   These minimal\
    \ syntactic changes with no semantic changes should allow\n   implementations\
    \ of SNMP manageable FDDI systems to share\n   instrumentation with other network\
    \ management schemes and thereby\n   minimize implementation cost.  In addition,\
    \ the translation of\n   information conveyed by managed objects from one network\
    \ management\n   scheme to another is eased by these shared definitions.\n   Only\
    \ the essential variables, as indicated by their mandatory status\n   in the ANSI\
    \ specification, were retained in this document.  The\n   importance of variables\
    \ which have an optional status in the ANSI\n   specification were perceived as\
    \ being less widely accepted.\n"
- title: 2.1.  Textual Conventions
  contents:
  - "2.1.  Textual Conventions\n   Several new datatypes are introduced as a textual\
    \ convention in this\n   MIB document.  These textual conventions enhance the\
    \ readability of\n   the document and ease comparisons with its ANSI counterpart.\
    \  It\n   should be noted that the introduction of these textual conventions\n\
    \   has no effect on either the syntax or the semantics of any managed\n   objects.\
    \  The use of these is merely an artifact of the explanatory\n   method used.\
    \  Objects defined in terms of one of these methods are\n   always encoded by\
    \ means of the rules that define the primitive type.\n   Hence, no changes to\
    \ the SMI or the SNMP are necessary to accommodate\n   these textual conventions\
    \ which are adopted merely for the\n   convenience of readers and writers in pursuit\
    \ of the elusive goal of\n   clear, concise, and unambiguous MIB documents.\n"
- title: 3.  Changes from RFC 1285
  contents:
  - "3.  Changes from RFC 1285\n   The changes from RFC 1285 [2] to this document,\
    \ based on changes from\n   ANSI SMT 6.2 to SMT 7.3, were so numerous that the\
    \ objects in this\n   MIB module are located on a different branch of the MIB\
    \ tree.  No\n   assumptions should be made about compatibility with RFC 1285.\n"
- title: 4.  Object Definitions
  contents:
  - "4.  Object Definitions\n          FDDI-SMT73-MIB DEFINITIONS ::= BEGIN\n    \
    \      IMPORTS\n                  Counter\n                      FROM RFC1155-SMI\n\
    \                  OBJECT-TYPE\n                      FROM RFC-1212;\n       \
    \   --  This MIB module uses the extended OBJECT-TYPE macro as\n          -- \
    \ defined in [7].\n          -- this is the FDDI MIB module\n          fddi  \
    \  OBJECT IDENTIFIER ::= { transmission 15 }\n          fddimib   OBJECT IDENTIFIER\
    \ ::= { fddi 73 }\n          -- textual conventions\n          FddiTimeNano ::=\
    \ INTEGER (0..2147483647)\n          -- This data type specifies 1 nanosecond\
    \ units as\n          -- an integer value.\n          --\n          -- NOTE: The\
    \ encoding is normal integer representation, not\n          -- two's complement.\
    \  Since this type is used for variables\n          -- which are encoded as TimerTwosComplement\
    \ in the ANSI\n          -- specification, two operations need to be performed\
    \ on such\n          -- variables to convert from ANSI form to SNMP form:\n  \
    \        --\n          -- 1) Convert from two's complement to normal integer\n\
    \          --    representation\n          -- 2) Multiply by 80 to convert from\
    \ 80 nsec to 1 nsec units\n          --\n          -- No resolution is lost. \
    \ Moreover, the objects for which\n          -- this data type is used effectively\
    \ do not lose any range\n          -- due to the lower maximum value since they\
    \ do not require\n          -- the full range.\n          --\n          -- Example:\
    \ If fddimibMACTReq had a value of 8 ms, it would\n          -- be stored in ANSI\
    \ TimerTwosComplement format as 0xFFFE7960\n          -- [8 ms is 100000 in 80\
    \ nsec units, which is then converted\n          -- to two's complement] but be\
    \ reported as 8000000 in SNMP\n          -- since it is encoded here as FddiTimeNano.\n\
    \          FddiTimeMilli ::= INTEGER (0..2147483647)\n          -- This data type\
    \ is used for some FDDI timers. It specifies\n          -- time in 1 millisecond\
    \ units, in normal integer\n          -- representation.\n          FddiResourceId\
    \ ::= INTEGER (0..65535)\n          -- This data type is used to refer to an instance\
    \ of a  MAC,\n          -- PORT, or PATH Resource ID.  Indexing begins\n     \
    \     -- at 1.  Zero is used to indicate the absence of a resource.\n        \
    \  FddiSMTStationIdType ::= OCTET STRING (SIZE (8))\n          -- The unique identifier\
    \ for the FDDI station.  This is a\n          -- string of 8 octets, represented\
    \ as X' yy yy xx xx xx xx\n          -- xx xx' with the low order 6 octet (xx)\
    \ from a unique IEEE\n          -- assigned address.  The high order two bits\
    \ of the IEEE\n          -- address, the group address bit and the administration\
    \ bit\n          -- (Universal/Local) bit should both be zero.  The first two\n\
    \          -- octets, the yy octets, are implementor-defined.\n          --\n\
    \          -- The representation of the address portion of the station id\n  \
    \        -- is in the IEEE (ANSI/IEEE P802.1A) canonical notation for\n      \
    \    -- 48 bit addresses.  The canonical form is a 6-octet string\n          --\
    \ where the first octet contains the first 8 bits of the\n          -- address,\
    \ with the I/G(Individual/Group) address bit as the\n          -- least significant\
    \ bit and the  U/L (Universal/Local) bit\n          -- as the next more significant\
    \ bit, and so on.  Note that\n          -- addresses in the ANSI FDDI standard\
    \ SMT frames are\n          -- represented in FDDI MAC order.\n          FddiMACLongAddressType\
    \ ::= OCTET STRING (SIZE (6))\n          -- The representation of long MAC addresses\
    \ as management\n          -- values is in the IEEE (ANSI/IEEE P802.1A) canonical\n\
    \          -- notation for 48 bit addresses.  The canonical form is a\n      \
    \    -- 6-octet string where the first octet contains the first 8\n          --\
    \ bits of the address, with the I/G (Individual/Group)\n          -- address bit\
    \ as the least significant bit and the  U/L\n          -- (Universal/Local) bit\
    \ as the next more significant bit,\n          -- and so on.  Note that the addresses\
    \ in the SMT frames are\n          -- represented in FDDI MAC order.\n       \
    \   -- groups in the FDDI MIB module\n          fddimibSMT          OBJECT IDENTIFIER\
    \ ::= { fddimib 1 }\n          fddimibMAC          OBJECT IDENTIFIER ::= { fddimib\
    \ 2 }\n          fddimibMACCounters  OBJECT IDENTIFIER ::= { fddimib 3 }\n   \
    \       fddimibPATH         OBJECT IDENTIFIER ::= { fddimib 4 }\n          fddimibPORT\
    \         OBJECT IDENTIFIER ::= { fddimib 5 }\n          -- the SMT group\n  \
    \        -- Implementation of the SMT group is mandatory for all\n          --\
    \ systems which implement manageable FDDI subsystems.\n          fddimibSMTNumber\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The number of SMT implementations (regardless of\n     \
    \                 their current state) on this network management\n          \
    \            application entity.  The value for this variable\n              \
    \        must remain constant at least from one re-\n                      initialization\
    \ of the entity's network management\n                      system to the next\
    \ re-initialization.\"\n              ::= { fddimibSMT  1 }\n          -- the\
    \ SMT table\n          fddimibSMTTable OBJECT-TYPE\n              SYNTAX  SEQUENCE\
    \ OF FddimibSMTEntry\n              ACCESS  not-accessible\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"A list of SMT\
    \ entries.  The number of entries\n                      shall not exceed the\
    \ value of fddimibSMTNumber.\"\n              ::= { fddimibSMT  2 }\n        \
    \  fddimibSMTEntry OBJECT-TYPE\n              SYNTAX  FddimibSMTEntry\n      \
    \        ACCESS  not-accessible\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"An SMT entry containing information common\
    \ to a\n                      given SMT.\"\n              INDEX   { fddimibSMTIndex\
    \ }\n              ::= { fddimibSMTTable 1 }\n          FddimibSMTEntry ::=\n\
    \              SEQUENCE {\n                  fddimibSMTIndex\n               \
    \       INTEGER,\n                  fddimibSMTStationId\n                    \
    \  FddiSMTStationIdType,\n                  fddimibSMTOpVersionId\n          \
    \            INTEGER,\n                  fddimibSMTHiVersionId\n             \
    \         INTEGER,\n                  fddimibSMTLoVersionId\n                \
    \      INTEGER,\n                  fddimibSMTUserData\n                      OCTET\
    \ STRING,\n                  fddimibSMTMIBVersionId\n                      INTEGER,\n\
    \                  fddimibSMTMACCts\n                      INTEGER,\n        \
    \          fddimibSMTNonMasterCts\n                      INTEGER,\n          \
    \        fddimibSMTMasterCts\n                      INTEGER,\n               \
    \   fddimibSMTAvailablePaths\n                      INTEGER,\n               \
    \   fddimibSMTConfigCapabilities\n                      INTEGER,\n           \
    \       fddimibSMTConfigPolicy\n                      INTEGER,\n             \
    \     fddimibSMTConnectionPolicy\n                      INTEGER,\n           \
    \       fddimibSMTTNotify\n                      INTEGER,\n                  fddimibSMTStatRptPolicy\n\
    \                      INTEGER,\n                  fddimibSMTTraceMaxExpiration\n\
    \                      FddiTimeMilli,\n                  fddimibSMTBypassPresent\n\
    \                      INTEGER,\n                  fddimibSMTECMState\n      \
    \                INTEGER,\n                  fddimibSMTCFState\n             \
    \         INTEGER,\n                  fddimibSMTRemoteDisconnectFlag\n       \
    \               INTEGER,\n                  fddimibSMTStationStatus\n        \
    \              INTEGER,\n                  fddimibSMTPeerWrapFlag\n          \
    \            INTEGER,\n                  fddimibSMTTimeStamp\n               \
    \       FddiTimeMilli,\n                  fddimibSMTTransitionTimeStamp\n    \
    \                  FddiTimeMilli,\n                  fddimibSMTStationAction\n\
    \                      INTEGER\n              }\n          fddimibSMTIndex OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (1..65535)\n              ACCESS  read-only\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"A unique value for each SMT.  The value for each\n                   \
    \   SMT must remain constant at least from one re-\n                      initialization\
    \ of the entity's network management\n                      system to the next\
    \ re-initialization.\"\n              ::= { fddimibSMTEntry 1 }\n          fddimibSMTStationId\
    \ OBJECT-TYPE\n              SYNTAX  FddiSMTStationIdType -- OCTET STRING (SIZE\
    \ (8))\n              ACCESS  read-only\n              STATUS  mandatory\n   \
    \           DESCRIPTION\n                      \"Used to uniquely identify an\
    \ FDDI station.\"\n              REFERENCE\n                      \"ANSI { fddiSMT\
    \ 11 }\"\n              ::= { fddimibSMTEntry 2 }\n          fddimibSMTOpVersionId\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The version that this station is using for its\n       \
    \               operation (refer to ANSI 7.1.2.2). The value of\n            \
    \          this variable is 2 for this SMT revision.\"\n              REFERENCE\n\
    \                      \"ANSI { fddiSMT 13 }\"\n              ::= { fddimibSMTEntry\
    \ 3 }\n          fddimibSMTHiVersionId OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (1..65535)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The highest version of SMT\
    \ that this station\n                      supports (refer to ANSI 7.1.2.2).\"\
    \n              REFERENCE\n                      \"ANSI { fddiSMT 14 }\"\n   \
    \           ::= { fddimibSMTEntry 4 }\n          fddimibSMTLoVersionId OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (1..65535)\n              ACCESS  read-only\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"The lowest version of SMT that this station\n                      supports\
    \ (refer to ANSI 7.1.2.2).\"\n              REFERENCE\n                      \"\
    ANSI { fddiSMT 15 }\"\n              ::= { fddimibSMTEntry 5 }\n          fddimibSMTUserData\
    \ OBJECT-TYPE\n              SYNTAX  OCTET STRING (SIZE (32))\n              ACCESS\
    \  read-write\n              STATUS  mandatory\n              DESCRIPTION\n  \
    \                    \"This variable contains 32 octets of user defined\n    \
    \                  information. The information shall be an ASCII\n          \
    \            string.\"\n              REFERENCE\n                      \"ANSI\
    \ { fddiSMT 17 }\"\n              ::= { fddimibSMTEntry 6 }\n          fddimibSMTMIBVersionId\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The version of the FDDI MIB of this station.  The\n    \
    \                  value of this variable is 1 for this SMT\n                \
    \      revision.\"\n              REFERENCE\n                      \"ANSI { fddiSMT\
    \ 18 }\"\n              ::= { fddimibSMTEntry 7 }\n          fddimibSMTMACCts\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..255)\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of MACs in this station or\n                      concentrator.\"\
    \n              REFERENCE\n                      \"ANSI { fddiSMT 21 }\"\n   \
    \           ::= { fddimibSMTEntry 8 }\n          fddimibSMTNonMasterCts OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (0..2)\n              ACCESS  read-only\n     \
    \         STATUS  mandatory\n              DESCRIPTION\n                     \
    \ \"The value of this variable is the number of A, B,\n                      and\
    \ S ports in this station or concentrator.\"\n              REFERENCE\n      \
    \                \"ANSI { fddiSMT 22 }\"\n              ::= { fddimibSMTEntry\
    \ 9 }\n          fddimibSMTMasterCts OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (0..255)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of M Ports in a\
    \ node. If the node is\n                      not a concentrator, the value of\
    \ the variable is\n                      zero.\"\n              REFERENCE\n  \
    \                    \"ANSI { fddiSMT 23 }\"\n              ::= { fddimibSMTEntry\
    \ 10 }\n          fddimibSMTAvailablePaths OBJECT-TYPE\n              SYNTAX \
    \ INTEGER (0..7)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A value that indicates the\
    \ PATH types available\n                      in the station.\n              \
    \        The value is a sum.  This value initially takes\n                   \
    \   the value zero, then for each type of PATH that\n                      this\
    \ node has available, 2 raised to a power is\n                      added to the\
    \ sum.  The powers are according to the\n                      following table:\n\
    \                               Path   Power\n                            Primary\
    \     0\n                          Secondary     1\n                         \
    \     Local     2\n                      For example, a station having Primary\
    \ and Local\n                      PATHs available would have a value of 5 (2**0\
    \ +\n                      2**2).\"\n              REFERENCE\n               \
    \       \"ANSI { fddiSMT 24 }\"\n              ::= { fddimibSMTEntry 11 }\n  \
    \        fddimibSMTConfigCapabilities OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (0..3)\n              ACCESS  read-only\n              STATUS  mandatory\n \
    \             DESCRIPTION\n                      \"A value that indicates the\
    \ configuration\n                      capabilities of a node. The 'Hold Available'\
    \ bit\n                      indicates the support of the optional Hold\n    \
    \                  Function, which is controlled by\n                      fddiSMTConfigPolicy.\
    \  The 'CF-Wrap-AB' bit\n                      indicates that the station has\
    \ the capability of\n                      performing a wrap_ab (refer to ANSI\
    \ SMT 9.7.2.2).\n                      The value is a sum.  This value initially\
    \ takes\n                      the value zero, then for each of the configuration\n\
    \                      policies currently enforced on the node, 2 raised\n   \
    \                   to a power is added to the sum.  The powers are\n        \
    \              according to the following table:\n                           \
    \      Policy   Power\n                          holdAvailable     0\n       \
    \                      CF-Wrap-AB     1 \"\n              REFERENCE\n        \
    \              \"ANSI { fddiSMT 25 }\"\n              ::= { fddimibSMTEntry 12\
    \ }\n          fddimibSMTConfigPolicy OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (0..1)\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A value that indicates the\
    \ configuration policies\n                      currently desired in a node. \
    \ 'Hold' is one of the\n                      terms used for the Hold Flag, an\
    \ optional ECM flag\n                      used to enable the optional Hold policy.\n\
    \                      The value is a sum.  This value initially takes\n     \
    \                 the value zero, then for each of the configuration\n       \
    \               policies currently enforced on the node, 2 raised\n          \
    \            to a power is added to the sum.  The powers are\n               \
    \       according to the following table:\n                                  \
    \   Policy   Power\n                          configurationhold     0 \"\n   \
    \           REFERENCE\n                      \"ANSI { fddiSMT 26 }\"\n       \
    \       ::= { fddimibSMTEntry 13 }\n          fddimibSMTConnectionPolicy OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (32768..65535)\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A value representing the connection policies in\n                   \
    \   effect in a node. A station sets the corresponding\n                     \
    \ bit for each of the connection types that it\n                      rejects.\
    \ The letter designations, X and Y, in the\n                      'rejectX-Y'\
    \ names have the following significance:\n                      X represents the\
    \ PC-Type of the local PORT and Y\n                      represents the PC_Type\
    \ of the adjacent PORT\n                      (PC_Neighbor). The evaluation of\
    \ Connection-\n                      Policy (PC-Type, PC-Neighbor) is done to\
    \ determine\n                      the setting of T- Val(3) in the PC-Signalling\n\
    \                      sequence (refer to ANSI 9.6.3). Note that Bit 15,\n   \
    \                   (rejectM-M), is always set and cannot be cleared.\n      \
    \                The value is a sum.  This value initially takes\n           \
    \           the value zero, then for each of the connection\n                \
    \      policies currently enforced on the node, 2 raised\n                   \
    \   to a power is added to the sum.  The powers are\n                      according\
    \ to the following table:\n                             Policy   Power\n     \
    \                     rejectA-A     0\n                          rejectA-B   \
    \  1\n                          rejectA-S     2\n                          rejectA-M\
    \     3\n                          rejectB-A     4\n                         \
    \ rejectB-B     5\n                          rejectB-S     6\n               \
    \           rejectB-M     7\n                          rejectS-A     8\n     \
    \                     rejectS-B     9\n                          rejectS-S   \
    \  10\n                          rejectS-M     11\n                          rejectM-A\
    \     12\n                          rejectM-B     13\n                       \
    \   rejectM-S     14\n                          rejectM-M     15 \"\n        \
    \      REFERENCE\n                      \"ANSI { fddiSMT 27 }\"\n            \
    \  ::= { fddimibSMTEntry 14 }\n          fddimibSMTTNotify OBJECT-TYPE\n     \
    \         SYNTAX  INTEGER (2..30)\n              ACCESS  read-write\n        \
    \      STATUS  mandatory\n              DESCRIPTION\n                      \"\
    The timer, expressed in seconds, used in the\n                      Neighbor Notification\
    \ protocol. It has a range of\n                      2 seconds to 30 seconds,\
    \ and its default value is\n                      30 seconds (refer to ANSI SMT\
    \ 8.2).\"\n              REFERENCE\n                      \"ANSI { fddiSMT 29\
    \ }\"\n              ::= { fddimibSMTEntry 15 }\n          fddimibSMTStatRptPolicy\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER { true(1), false(2) }\n         \
    \     ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"If true, indicates that the node will generate\n    \
    \                  Status Reporting Frames for its implemented events\n      \
    \                and conditions. It has an initial value of true.\n          \
    \            This variable determines the value of the\n                     \
    \ SR_Enable Flag (refer to ANSI SMT 8.3.2.1).\"\n              REFERENCE\n   \
    \                   \"ANSI { fddiSMT 30 }\"\n              ::= { fddimibSMTEntry\
    \ 16 }\n          fddimibSMTTraceMaxExpiration OBJECT-TYPE\n              SYNTAX\
    \  FddiTimeMilli\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"Reference Trace_Max (refer\
    \ to ANSI SMT\n                      9.4.4.2.2).\"\n              REFERENCE\n\
    \                      \"ANSI { fddiSMT 31 }\"\n              ::= { fddimibSMTEntry\
    \ 17 }\n          fddimibSMTBypassPresent OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ { true(1), false(2) }\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"A flag indicating\
    \ if the station has a bypass on\n                      its AB port pair.\"\n\
    \              REFERENCE\n                      \"ANSI { fddiSMT 34 }\"\n    \
    \          ::= { fddimibSMTEntry 18 }\n          fddimibSMTECMState OBJECT-TYPE\n\
    \              SYNTAX  INTEGER {\n                          ec0(1), -- Out\n \
    \                         ec1(2), -- In\n                          ec2(3), --\
    \ Trace\n                          ec3(4), -- Leave\n                        \
    \  ec4(5), -- Path_Test\n                          ec5(6), -- Insert\n       \
    \                   ec6(7), -- Check\n                          ec7(8)  -- Deinsert\n\
    \                      }\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"Indicates the\
    \ current state of the ECM state\n                      machine (refer to ANSI\
    \ SMT 9.5.2).\"\n              REFERENCE\n                      \"ANSI { fddiSMT\
    \ 41 }\"\n              ::= { fddimibSMTEntry 19 }\n          fddimibSMTCFState\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER {\n                          cf0(1),\
    \   -- isolated\n                          cf1(2),   -- local_a\n            \
    \              cf2(3),   -- local_b\n                          cf3(4),   -- local_ab\n\
    \                          cf4(5),   -- local_s\n                          cf5(6),\
    \   -- wrap_a\n                          cf6(7),   -- wrap_b\n               \
    \           cf7(8),   -- wrap_ab\n                          cf8(9),   -- wrap_s\n\
    \                          cf9(10),  -- c_wrap_a\n                          cf10(11),\
    \ -- c_wrap_b\n                          cf11(12), -- c_wrap_s\n             \
    \             cf12(13)  -- thru\n                      }\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The attachment configuration for the station or\n      \
    \                concentrator (refer to ANSI SMT 9.7.2.2).\"\n              REFERENCE\n\
    \                      \"ANSI { fddiSMT 42 }\"\n              ::= { fddimibSMTEntry\
    \ 20 }\n          fddimibSMTRemoteDisconnectFlag OBJECT-TYPE\n              SYNTAX\
    \  INTEGER { true(1), false(2) }\n              ACCESS  read-only\n          \
    \    STATUS  mandatory\n              DESCRIPTION\n                      \"A flag\
    \ indicating that the station was remotely\n                      disconnected\
    \ from the network as a result of\n                      receiving an fddiSMTAction,\
    \ disconnect (refer to\n                      ANSI SMT 6.4.5.3) in a Parameter\
    \ Management Frame.\n                      A station requires a Connect Action\
    \ to rejoin and\n                      clear the flag (refer to ANSI SMT 6.4.5.2).\"\
    \n              REFERENCE\n                      \"ANSI { fddiSMT 44 }\"\n   \
    \           ::= { fddimibSMTEntry 21 }\n          fddimibSMTStationStatus OBJECT-TYPE\n\
    \              SYNTAX  INTEGER { concatenated(1), separated(2), thru(3) }\n  \
    \            ACCESS  read-only\n              STATUS  mandatory\n            \
    \  DESCRIPTION\n                      \"The current status of the primary and\
    \ secondary\n                      paths within this station.\"\n            \
    \  REFERENCE\n                      \"ANSI { fddiSMT 45 }\"\n              ::=\
    \ { fddimibSMTEntry 22 }\n          fddimibSMTPeerWrapFlag OBJECT-TYPE\n     \
    \         SYNTAX  INTEGER { true(1), false(2) }\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"This variable assumes the value of the\n                      PeerWrapFlag\
    \ in CFM (refer to ANSI SMT\n                      9.7.2.4.4).\"\n           \
    \   REFERENCE\n                      \"ANSI { fddiSMT 46 }\"\n              ::=\
    \ { fddimibSMTEntry 23 }\n          fddimibSMTTimeStamp OBJECT-TYPE\n        \
    \      SYNTAX  FddiTimeMilli\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"This variable\
    \ assumes the value of TimeStamp\n                      (refer to ANSI SMT 8.3.2.1).\"\
    \n              REFERENCE\n                      \"ANSI { fddiSMT 51 }\"\n   \
    \           ::= { fddimibSMTEntry 24 }\n          fddimibSMTTransitionTimeStamp\
    \ OBJECT-TYPE\n              SYNTAX  FddiTimeMilli\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"This variable assumes the value of\n                      TransitionTimeStamp\
    \ (refer to ANSI SMT 8.3.2.1).\"\n              REFERENCE\n                  \
    \    \"ANSI { fddiSMT 52 }\"\n              ::= { fddimibSMTEntry 25 }\n     \
    \     fddimibSMTStationAction OBJECT-TYPE\n              SYNTAX  INTEGER {\n \
    \                         other(1),               -- none of the following\n \
    \                         connect(2),\n                          disconnect(3),\n\
    \                          path-Test(4),\n                          self-Test(5),\n\
    \                          disable-a(6),\n                          disable-b(7),\n\
    \                          disable-m(8)\n                      }\n           \
    \   ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"This object, when read, always returns a value of\n \
    \                     other(1).  The behavior of setting this variable\n     \
    \                 to each of the acceptable values is as follows:\n          \
    \                 other(1): Results in an appropriate error.\n               \
    \            connect(2): Generates a Connect signal to ECM\n                 \
    \               to begin a connection sequence. See ANSI\n                   \
    \             Ref 9.4.2.\n                           disconnect(3): Generates\
    \ a Disconnect signal\n                                to ECM. see ANSI Ref 9.4.2.\n\
    \                           path-Test(4): Initiates a station Path_Test.\n   \
    \                             The Path_Test variable (see ANSI Ref\n         \
    \                       9.4.1) is set to 'Testing'. The results\n            \
    \                    of this action are not specified in this\n              \
    \                  standard.\n                           self-Test(5): Initiates\
    \ a station Self_Test.\n                                The results of this action\
    \ are not\n                                specified in this standard.\n     \
    \                      disable-a(6): Causes a PC_Disable on the A\n          \
    \                      port if the A port mode is peer.\n                    \
    \       disable-b(7): Causes a PC_Disable on the B\n                         \
    \       port if the B port mode is peer.\n                           disable-m(8):\
    \ Causes a PC_Disable on all M\n                                ports.\n     \
    \                 Attempts to set this object to all other values\n          \
    \            results in an appropriate error.  The result of\n               \
    \       setting this variable to path-Test(4) or self-\n                     \
    \ Test(5) is implementation-specific.\"\n              REFERENCE\n           \
    \           \"ANSI { fddiSMT 60 }\"\n              ::= { fddimibSMTEntry 26 }\n\
    \          -- the MAC group\n          -- Implementation of the MAC Group is mandatory\
    \ for all\n          -- systems which implement manageable FDDI subsystems.\n\
    \          fddimibMACNumber OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The total number of MAC implementations\
    \ (across\n                      all SMTs) on this network management application\n\
    \                      entity.  The value for this variable must remain\n    \
    \                  constant at least from one re-initialization of\n         \
    \             the entity's network management system to the next\n           \
    \           re-initialization.\"\n              ::= { fddimibMAC  1 }\n      \
    \    -- the MAC table\n          fddimibMACTable OBJECT-TYPE\n              SYNTAX\
    \  SEQUENCE OF FddimibMACEntry\n              ACCESS  not-accessible\n       \
    \       STATUS  mandatory\n              DESCRIPTION\n                      \"\
    A list of MAC entries.  The number of entries\n                      shall not\
    \ exceed the value of fddimibMACNumber.\"\n              ::= { fddimibMAC  2 }\n\
    \          fddimibMACEntry OBJECT-TYPE\n              SYNTAX  FddimibMACEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"A MAC entry containing information\
    \ common to a\n                      given MAC.\"\n              INDEX   { fddimibMACSMTIndex,\
    \ fddimibMACIndex }\n              ::= { fddimibMACTable 1 }\n          FddimibMACEntry\
    \ ::=\n              SEQUENCE {\n                  fddimibMACSMTIndex\n      \
    \                    INTEGER,\n                  fddimibMACIndex\n           \
    \               INTEGER,\n                  fddimibMACIfIndex\n              \
    \            INTEGER,\n                  fddimibMACFrameStatusFunctions\n    \
    \                      INTEGER,\n                  fddimibMACTMaxCapability\n\
    \                          FddiTimeNano,\n                  fddimibMACTVXCapability\n\
    \                          FddiTimeNano,\n                  fddimibMACAvailablePaths\n\
    \                          INTEGER,\n                  fddimibMACCurrentPath\n\
    \                          INTEGER,\n                  fddimibMACUpstreamNbr\n\
    \                          FddiMACLongAddressType,\n                  fddimibMACDownstreamNbr\n\
    \                          FddiMACLongAddressType,\n                  fddimibMACOldUpstreamNbr\n\
    \                          FddiMACLongAddressType,\n                  fddimibMACOldDownstreamNbr\n\
    \                          FddiMACLongAddressType,\n                  fddimibMACDupAddressTest\n\
    \                          INTEGER,\n                  fddimibMACRequestedPaths\n\
    \                          INTEGER,\n                  fddimibMACDownstreamPORTType\n\
    \                          INTEGER,\n                  fddimibMACSMTAddress\n\
    \                          FddiMACLongAddressType,\n                  fddimibMACTReq\n\
    \                          FddiTimeNano,\n                  fddimibMACTNeg\n \
    \                         FddiTimeNano,\n                  fddimibMACTMax\n  \
    \                        FddiTimeNano,\n                  fddimibMACTvxValue\n\
    \                          FddiTimeNano,\n                  fddimibMACFrameCts\n\
    \                          Counter,\n                  fddimibMACCopiedCts\n \
    \                         Counter,\n                  fddimibMACTransmitCts\n\
    \                          Counter,\n                  fddimibMACErrorCts\n  \
    \                        Counter,\n                  fddimibMACLostCts\n     \
    \                     Counter,\n                  fddimibMACFrameErrorThreshold\n\
    \                          INTEGER,\n                  fddimibMACFrameErrorRatio\n\
    \                          INTEGER,\n                  fddimibMACRMTState\n  \
    \                        INTEGER,\n                  fddimibMACDaFlag\n      \
    \                    INTEGER,\n                  fddimibMACUnaDaFlag\n       \
    \                   INTEGER,\n                  fddimibMACFrameErrorFlag\n   \
    \                       INTEGER,\n                  fddimibMACMAUnitdataAvailable\n\
    \                          INTEGER,\n                  fddimibMACHardwarePresent\n\
    \                          INTEGER,\n                  fddimibMACMAUnitdataEnable\n\
    \                          INTEGER\n              }\n          fddimibMACSMTIndex\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The value of the SMT index associated with this\n      \
    \                MAC.\"\n              ::= { fddimibMACEntry 1 }\n          fddimibMACIndex\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"Index variable for uniquely identifying the MAC\n      \
    \                object instances, which is the same as the\n                \
    \      corresponding resource index in SMT.\"\n              REFERENCE\n     \
    \                 \"ANSI { fddiMAC 34 }\"\n              ::= { fddimibMACEntry\
    \ 2 }\n          fddimibMACIfIndex OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (1..65535)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The value of the MIB-II ifIndex\
    \ corresponding to\n                      this MAC.  If none is applicable, 0\
    \ is returned.\"\n              REFERENCE\n                      \"MIB-II\"\n\
    \              ::= { fddimibMACEntry 3 }\n          fddimibMACFrameStatusFunctions\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..7)\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"Indicates the MAC's optional Frame Status\n                      processing\
    \ functions.\n                      The value is a sum.  This value initially\
    \ takes\n                      the value zero, then for each function present,\
    \ 2\n                      raised to a power is added to the sum.  The powers\n\
    \                      are according to the following table:\n               \
    \            function   Power\n                       fs-repeating     0\n   \
    \                      fs-setting     1\n                        fs-clearing \
    \    2 \"\n              REFERENCE\n                      \"ANSI { fddiMAC 11\
    \ }\"\n              ::= { fddimibMACEntry 4 }\n          fddimibMACTMaxCapability\
    \ OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"Indicates the maximum time value of fddiMACTMax\n                   \
    \   that this MAC can support.\"\n              REFERENCE\n                  \
    \    \"ANSI { fddiMAC 13 }\"\n              ::= { fddimibMACEntry 5 }\n      \
    \    fddimibMACTVXCapability OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"Indicates the maximum time value of\n\
    \                      fddiMACTvxValue that this MAC can support.\"\n        \
    \      REFERENCE\n                      \"ANSI { fddiMAC 14 }\"\n            \
    \  ::= { fddimibMACEntry 6 }\n          fddimibMACAvailablePaths OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (0..7)\n              ACCESS  read-only\n     \
    \         STATUS  mandatory\n              DESCRIPTION\n                     \
    \ \"Indicates the paths available for this MAC (refer\n                      to\
    \ ANSI SMT 9.7.7).\n                      The value is a sum.  This value initially\
    \ takes\n                      the value zero, then for each type of PATH that\n\
    \                      this MAC has available, 2 raised to a power is\n      \
    \                added to the sum.  The powers are according to the\n        \
    \              following table:\n                               Path   Power\n\
    \                            Primary     0\n                          Secondary\
    \     1\n                              Local     2 \"\n              REFERENCE\n\
    \                      \"ANSI { fddiMAC 22 }\"\n              ::= { fddimibMACEntry\
    \ 7 }\n          fddimibMACCurrentPath OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                          isolated(1),\n                          local(2),\n\
    \                          secondary(3),\n                          primary(4),\n\
    \                          concatenated(5),\n                          thru(6)\n\
    \                      }\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"Indicates the\
    \ Path into which this MAC is\n                      currently inserted (refer\
    \ to ANSI 9.7.7).\"\n              REFERENCE\n                      \"ANSI { fddiMAC\
    \ 23 }\"\n              ::= { fddimibMACEntry 8 }\n          fddimibMACUpstreamNbr\
    \ OBJECT-TYPE\n              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE\
    \ (6))\n              ACCESS  read-only\n              STATUS  mandatory\n   \
    \           DESCRIPTION\n                      \"The MAC's upstream neighbor's\
    \ long individual MAC\n                      address. It has an initial value\
    \ of the SMT-\n                      Unknown-MAC Address and is only modified\
    \ as\n                      specified by the Neighbor Information Frame\n    \
    \                  protocol (refer to ANSI SMT 7.2.1 and 8.2).\"\n           \
    \   REFERENCE\n                      \"ANSI { fddiMAC 24 }\"\n              ::=\
    \ { fddimibMACEntry 9 }\n          fddimibMACDownstreamNbr OBJECT-TYPE\n     \
    \         SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))\n        \
    \      ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The MAC's downstream neighbor's long individual\n   \
    \                   MAC address. It has an initial value of the SMT-\n       \
    \               Unknown-MAC Address and is only modified as\n                \
    \      specified by the Neighbor Information Frame\n                      protocol\
    \ (refer to ANSI SMT 7.2.1 and 8.2).\"\n              REFERENCE\n            \
    \          \"ANSI { fddiMAC 25 }\"\n              ::= { fddimibMACEntry 10 }\n\
    \          fddimibMACOldUpstreamNbr OBJECT-TYPE\n              SYNTAX  FddiMACLongAddressType\
    \ -- OCTET STRING (SIZE (6))\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The previous\
    \ value of the MAC's upstream\n                      neighbor's long individual\
    \ MAC address. It has an\n                      initial value of the SMT-Unknown-\
    \ MAC Address and\n                      is only modified as specified by the\
    \ Neighbor\n                      Information Frame protocol (refer to ANSI SMT\n\
    \                      7.2.1 and 8.2).\"\n              REFERENCE\n          \
    \            \"ANSI { fddiMAC 26 }\"\n              ::= { fddimibMACEntry 11 }\n\
    \          fddimibMACOldDownstreamNbr OBJECT-TYPE\n              SYNTAX  FddiMACLongAddressType\
    \ -- OCTET STRING (SIZE (6))\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The previous\
    \ value of the MAC's downstream\n                      neighbor's long individual\
    \ MAC address. It has an\n                      initial value of the SMT- Unknown-MAC\
    \ Address and\n                      is only modified as specified by the Neighbor\n\
    \                      Information Frame protocol (refer to ANSI SMT\n       \
    \               7.2.1 and 8.2).\"\n              REFERENCE\n                 \
    \     \"ANSI { fddiMAC 27 }\"\n              ::= { fddimibMACEntry 12 }\n    \
    \      fddimibMACDupAddressTest OBJECT-TYPE\n              SYNTAX  INTEGER { none(1),\
    \ pass(2), fail(3) }\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The Duplicate Address Test\
    \ flag, Dup_Addr_Test\n                      (refer to ANSI 8.2).\"\n        \
    \      REFERENCE\n                      \"ANSI { fddiMAC 29 }\"\n            \
    \  ::= { fddimibMACEntry 13 }\n          fddimibMACRequestedPaths OBJECT-TYPE\n\
    \              SYNTAX  INTEGER  (0..255)\n              ACCESS  read-write\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"List of permitted Paths which specifies the\n                      Path(s)\
    \ into which the MAC may be inserted (refer\n                      to ansi SMT\
    \ 9.7).\n                      The value is a sum which represents the individual\n\
    \                      paths that are desired.  This value initially\n       \
    \               takes the value zero, then for each type of PATH\n           \
    \           that this node is, 2 raised to a power is added to\n             \
    \         the sum.  The powers are according to the\n                      following\
    \ table:\n                                         Path   Power\n            \
    \                            local     0\n                          secondary-alternate\
    \     1\n                            primary-alternate     2\n               \
    \        concatenated-alternate     3\n                          secondary-preferred\
    \     4\n                            primary-preferred     5\n               \
    \        concatenated-preferred     6\n                                      \
    \   thru     7 \"\n              REFERENCE\n                      \"ANSI { fddiMAC\
    \ 32 }\"\n              ::= { fddimibMACEntry 14 }\n          fddimibMACDownstreamPORTType\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER { a(1), b(2), s(3), m(4), none(5)\
    \ }\n              ACCESS  read-only\n              STATUS  mandatory\n      \
    \        DESCRIPTION\n                      \"Indicates the PC-Type of the first\
    \ port that is\n                      downstream of this MAC (the exit port).\"\
    \n              REFERENCE\n                      \"ANSI { fddiMAC 33 }\"\n   \
    \           ::= { fddimibMACEntry 15 }\n          fddimibMACSMTAddress OBJECT-TYPE\n\
    \              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))\n   \
    \           ACCESS  read-only\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"The 48-bit individual address of the MAC\
    \ used for\n                      SMT frames.\"\n              REFERENCE\n   \
    \                   \"ANSI { fddiMAC 41 }\"\n              ::= { fddimibMACEntry\
    \ 16 }\n          fddimibMACTReq OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"This variable is the T_Req_value passed\
    \ to the\n                      MAC.  Without having detected a duplicate, the\n\
    \                      time value of this variable shall assume the\n        \
    \              maximum supported time value which is less than or\n          \
    \            equal to the time value of fddiPATHMaxT-Req.  When\n            \
    \          a MAC has an address detected as a duplicate, it\n                \
    \      may use a time value for this variable greater\n                      than\
    \ the time value of fddiPATHTMaxLowerBound.  A\n                      station\
    \ shall cause claim when the new T_Req may\n                      cause the value\
    \ of T_Neg to change in the claim\n                      process, (i.e., time\
    \ value new T_Req < T_Neg, or\n                      old T_Req = T_Neg).\"\n \
    \             REFERENCE\n                      \"ANSI { fddiMAC 51 }\"\n     \
    \         ::= { fddimibMACEntry 17 }\n          fddimibMACTNeg OBJECT-TYPE\n \
    \             SYNTAX  FddiTimeNano\n              ACCESS  read-only\n        \
    \      STATUS  mandatory\n              DESCRIPTION\n                      \"\
    It is reported as a FddiTimeNano number.\"\n              REFERENCE\n        \
    \              \"ANSI { fddiMAC 52 }\"\n              ::= { fddimibMACEntry 18\
    \ }\n          fddimibMACTMax OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"This variable is the T_Max_value passed\
    \ to the\n                      MAC.  The time value of this variable shall assume\n\
    \                      the minimum suported time value which is greater\n    \
    \                  than or equal to the time value of fddiPATHT-\n           \
    \           MaxLowerBound\"\n              REFERENCE\n                      \"\
    ANSI { fddiMAC 53 }\"\n              ::= { fddimibMACEntry 19 }\n          fddimibMACTvxValue\
    \ OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"This variable is the TVX_value passed to the MAC.\n                 \
    \     The time value of this variable shall assume the\n                     \
    \ minimum suported time value which is greater than\n                      or\
    \ equal to the time value of\n                      fddiPATHTVXLowerBound.\"\n\
    \              REFERENCE\n                      \"ANSI { fddiMAC 54 }\"\n    \
    \          ::= { fddimibMACEntry 20 }\n          fddimibMACFrameCts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"A count\
    \ of the number of frames received by this\n                      MAC (refer to\
    \ ANSI MAC 7.5.1).\"\n              REFERENCE\n                      \"ANSI {\
    \ fddiMAC 71 }\"\n              ::= { fddimibMACEntry 21 }\n          fddimibMACCopiedCts\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A count that should as closely as possible match\n                  \
    \    the number of frames addressed to (A bit set) and\n                     \
    \ successfully copied into the station's receive\n                      buffers\
    \ (C bit set) by this MAC (refer to ANSI MAC\n                      7.5). Note\
    \ that this count does not include MAC\n                      frames.\"\n    \
    \          REFERENCE\n                      \"ANSI { fddiMAC 72 }\"\n        \
    \      ::= { fddimibMACEntry 22 }\n          fddimibMACTransmitCts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"A count\
    \ that should as closely as possible match\n                      the number of\
    \ frames transmitted by this MAC\n                      (refer to ANSI MAC 7.5).\
    \  Note that this count\n                      does not include MAC frames.\"\n\
    \              REFERENCE\n                      \"ANSI { fddiMAC 73 }\"\n    \
    \          ::= { fddimibMACEntry 23 }\n          fddimibMACErrorCts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"A count\
    \ of the number of frames that were\n                      detected in error by\
    \ this MAC that had not been\n                      detected in error by another\
    \ MAC (refer to ANSI\n                      MAC 7.5.2).\"\n              REFERENCE\n\
    \                      \"ANSI { fddiMAC 81 }\"\n              ::= { fddimibMACEntry\
    \ 24 }\n          fddimibMACLostCts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"A count of the number of instances that\
    \ this MAC\n                      detected a format error during frame reception\n\
    \                      such that the frame was stripped (refer to ANSI\n     \
    \                 MAC 7.5.3).\"\n              REFERENCE\n                   \
    \   \"ANSI { fddiMAC 82 }\"\n              ::= { fddimibMACEntry 25 }\n      \
    \    fddimibMACFrameErrorThreshold OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (0..65535)\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A threshold for determining\
    \ when a MAC Condition\n                      report (see ANSI 8.3.1.1) shall\
    \ be generated.\n                      Stations not supporting variable thresholds\
    \ shall\n                      have a value of 0 and a range of (0..0).\"\n  \
    \            REFERENCE\n                      \"ANSI { fddiMAC 95 }\"\n      \
    \        ::= { fddimibMACEntry 26 }\n          fddimibMACFrameErrorRatio OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (0..65535)\n              ACCESS  read-only\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"This variable is the value of the ratio,\n                       ((delta\
    \ fddiMACLostCts + delta fddiMACErrorCts) /\n                       (delta fddiMACFrameCts\
    \ + delta fddiMACLostCts ))\n                       * 2**16 \"\n             \
    \ REFERENCE\n                      \"ANSI { fddiMAC 96 }\"\n              ::=\
    \ { fddimibMACEntry 27 }\n          fddimibMACRMTState OBJECT-TYPE\n         \
    \     SYNTAX  INTEGER {\n                          rm0(1), -- Isolated\n     \
    \                     rm1(2), -- Non_Op\n                          rm2(3), --\
    \ Ring_Op\n                          rm3(4), -- Detect\n                     \
    \     rm4(5), -- Non_Op_Dup\n                          rm5(6), -- Ring_Op_Dup\n\
    \                          rm6(7), -- Directed\n                          rm7(8)\
    \  -- Trace\n                      }\n              ACCESS  read-only\n      \
    \        STATUS  mandatory\n              DESCRIPTION\n                      \"\
    Indicates the current state of the RMT State\n                      Machine (refer\
    \ to ANSI 10.3.2).\"\n              REFERENCE\n                      \"ANSI {\
    \ fddiMAC 111 }\"\n              ::= { fddimibMACEntry 28 }\n          fddimibMACDaFlag\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER { true(1), false(2) }\n         \
    \     ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The RMT flag Duplicate Address Flag, DA_Flag\n      \
    \                (refer to ANSI 10.2.1.2).\"\n              REFERENCE\n      \
    \                \"ANSI { fddiMAC 112 }\"\n              ::= { fddimibMACEntry\
    \ 29 }\n          fddimibMACUnaDaFlag OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ { true(1), false(2) }\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"A flag, UNDA_Flag\
    \ (refer to ANSI 8.2.2.1), set\n                      when the upstream neighbor\
    \ reports a duplicate\n                      address condition. Cleared when the\
    \ condition\n                      clears.\"\n              REFERENCE\n      \
    \                \"ANSI { fddiMAC 113 }\"\n              ::= { fddimibMACEntry\
    \ 30 }\n          fddimibMACFrameErrorFlag OBJECT-TYPE\n              SYNTAX \
    \ INTEGER { true(1), false(2) }\n              ACCESS  read-only\n           \
    \   STATUS  mandatory\n              DESCRIPTION\n                      \"Indicates\
    \ the MAC Frame Error Condition is\n                      present when set. Cleared\
    \ when the condition\n                      clears and on station initialization.\"\
    \n              REFERENCE\n                      \"ANSI { fddiMAC 114 }\"\n  \
    \            ::= { fddimibMACEntry 31 }\n          fddimibMACMAUnitdataAvailable\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER { true(1), false(2) }\n         \
    \     ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"This variable shall take on the value of the\n      \
    \                MAC_Avail flag defined in RMT.\"\n              REFERENCE\n \
    \                     \"ANSI { fddiMAC 116 }\"\n              ::= { fddimibMACEntry\
    \ 32 }\n          fddimibMACHardwarePresent OBJECT-TYPE\n              SYNTAX\
    \  INTEGER { true(1), false(2) }\n              ACCESS  read-only\n          \
    \    STATUS  mandatory\n              DESCRIPTION\n                      \"This\
    \ variable indicates the presence of\n                      underlying hardware\
    \ support for this MAC object.\n                      If the value of this object\
    \ is false(2), the\n                      reporting of the objects in this entry\
    \ may be\n                      handled in an implementation-specific manner.\"\
    \n              REFERENCE\n                      \"ANSI { fddiMAC 117 }\"\n  \
    \            ::= { fddimibMACEntry 33 }\n          fddimibMACMAUnitdataEnable\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER { true(1), false(2) }\n         \
    \     ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"This variable determines the value of the\n         \
    \             MA_UNITDATA_Enable flag in RMT.  The default and\n             \
    \         initial value of this flag is true(1).\"\n              REFERENCE\n\
    \                      \"ANSI { fddiMAC 118 }\"\n              ::= { fddimibMACEntry\
    \ 34 }\n          -- the Enhanced MAC Counters group\n          -- Implementation\
    \ of this Group is optional, but systems\n          -- claiming support must implement\
    \ all variables in this\n          -- group\n          -- the MAC Counters table\n\
    \          fddimibMACCountersTable OBJECT-TYPE\n              SYNTAX  SEQUENCE\
    \ OF FddimibMACCountersEntry\n              ACCESS  not-accessible\n         \
    \     STATUS  mandatory\n              DESCRIPTION\n                      \"A\
    \ list of MAC Counters entries.  The number of\n                      entries\
    \ shall not exceed the value of\n                      fddimibMACNumber.\"\n \
    \             ::= { fddimibMACCounters  1 }\n          fddimibMACCountersEntry\
    \ OBJECT-TYPE\n              SYNTAX  FddimibMACCountersEntry\n              ACCESS\
    \  not-accessible\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"A MAC Counters entry containing information\n       \
    \               common to a given MAC.\"\n              INDEX   { fddimibMACSMTIndex,\
    \ fddimibMACIndex }\n              ::= { fddimibMACCountersTable 1 }\n       \
    \   FddimibMACCountersEntry ::=\n              SEQUENCE {\n                  fddimibMACTokenCts\n\
    \                          Counter,\n                  fddimibMACTvxExpiredCts\n\
    \                          Counter,\n                  fddimibMACNotCopiedCts\n\
    \                          Counter,\n                  fddimibMACLateCts\n   \
    \                       Counter,\n                  fddimibMACRingOpCts\n    \
    \                      Counter,\n                  fddimibMACNotCopiedRatio\n\
    \                          INTEGER,\n                  fddimibMACNotCopiedFlag\n\
    \                          INTEGER,\n                  fddimibMACNotCopiedThreshold\n\
    \                          INTEGER\n              }\n          fddimibMACTokenCts\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A count that should as closely as possible match\n                  \
    \    the number of times the station has received a\n                      token\
    \ (total of non-restricted and restricted) on\n                      this MAC\
    \ (see ANSI MAC 7.4). This count is\n                      valuable for determination\
    \ of network load.\"\n              REFERENCE\n                      \"ANSI {\
    \ fddiMAC 74 }\"\n              ::= { fddimibMACCountersEntry 1 }\n          fddimibMACTvxExpiredCts\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A count that should as closely as possible match\n                  \
    \    the number of times that TVX has expired.\"\n              REFERENCE\n  \
    \                    \"ANSI { fddiMAC 83 }\"\n              ::= { fddimibMACCountersEntry\
    \ 2 }\n          fddimibMACNotCopiedCts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"A count that should as closely as possible\
    \ match\n                      the number of frames that were addressed to this\n\
    \                      MAC but were not copied into its receive buffers\n    \
    \                  (see ANSI MAC 7.5). For example, this might occur\n       \
    \               due to local buffer congestion. Because of\n                 \
    \     implementation considerations, this count may not\n                    \
    \  match the actual number of frames not copied. It\n                      is\
    \ not a requirement that this count be exact.\n                      Note that\
    \ this count does not include MAC frames.\"\n              REFERENCE\n       \
    \               \"ANSI { fddiMAC 84 }\"\n              ::= { fddimibMACCountersEntry\
    \ 3 }\n          fddimibMACLateCts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"A count that should as closely as possible\
    \ match\n                      the number of TRT expirations since this MAC was\n\
    \                      reset or a token was received (refer to ANSI MAC\n    \
    \                  7.4.5).\"\n              REFERENCE\n                      \"\
    ANSI { fddiMAC 85 }\"\n              ::= { fddimibMACCountersEntry 4 }\n     \
    \     fddimibMACRingOpCts OBJECT-TYPE\n              SYNTAX  Counter\n       \
    \       ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                       \"The count of the number of times the ring has\n    \
    \                  entered the 'Ring_Operational' state from the\n           \
    \           'Ring Not Operational' state.  This count is\n                   \
    \   updated when a SM_MA_STATUS.Indication of a change\n                     \
    \ in the Ring_Operational status occurs (refer to\n                      ANSI\
    \ 6.1.4). Because of implementation\n                      considerations, this\
    \ count may be less than the\n                      actual RingOp_Ct. It is not\
    \ a requirement that\n                      this count be exact.\"\n         \
    \     REFERENCE\n                      \"ANSI { fddiMAC 86 }\"\n             \
    \ ::= { fddimibMACCountersEntry 5 }\n          fddimibMACNotCopiedRatio OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (0..65535)\n              ACCESS  read-only\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"This variable is the value of the ratio:\n                       (delta\
    \ fddiMACNotCopiedCts /\n                       (delta fddiMACCopiedCts +\n  \
    \                       delta fddiMACNotCopiedCts )) * 2**16 \"\n            \
    \  REFERENCE\n                      \"ANSI { fddiMAC 105 }\"\n              ::=\
    \ { fddimibMACCountersEntry 6 }\n          fddimibMACNotCopiedFlag OBJECT-TYPE\n\
    \              SYNTAX  INTEGER { true(1), false(2) }\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"Indicates that the Not Copied condition is\n                      present\
    \ when read as true(1).  Set to false(2)\n                      when the condition\
    \ clears and on station\n                      initialization.\"\n           \
    \   REFERENCE\n                      \"ANSI { fddiMAC 115 }\"\n              ::=\
    \ { fddimibMACCountersEntry 7 }\n          fddimibMACNotCopiedThreshold OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (0..65535)\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A threshold for determining when a MAC condition\n                  \
    \    report shall be generated.  Stations not\n                      supporting\
    \ variable thresholds shall have a value\n                      of 0 and a range\
    \ of (0..0).\"\n              REFERENCE\n                      \"ANSI { fddiMAC\
    \ 103 }\"\n              ::= { fddimibMACCountersEntry 8 }\n          -- the PATH\
    \ group\n          -- Implementation of the PATH group is mandatory for all\n\
    \          -- systems which implement manageable FDDI subsystems.\n          fddimibPATHNumber\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The total number of PATHs possible (across all\n       \
    \               SMTs) on this network management application\n               \
    \       entity.  The value for this variable must remain\n                   \
    \   constant at least from one re-initialization of\n                      the\
    \ entity's network management system to the next\n                      re-initialization.\"\
    \n              ::= { fddimibPATH  1 }\n          -- the PATH table\n        \
    \  fddimibPATHTable OBJECT-TYPE\n              SYNTAX  SEQUENCE OF FddimibPATHEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"A list of PATH entries.  The number\
    \ of entries\n                      shall not exceed the value of fddimibPATHNumber.\"\
    \n              ::= { fddimibPATH  2 }\n          fddimibPATHEntry OBJECT-TYPE\n\
    \              SYNTAX  FddimibPATHEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A PATH entry containing information common to a\n                   \
    \   given PATH.\"\n              INDEX   { fddimibPATHSMTIndex, fddimibPATHIndex\
    \ }\n              ::= { fddimibPATHTable 1 }\n          FddimibPATHEntry ::=\n\
    \              SEQUENCE {\n                  fddimibPATHSMTIndex\n           \
    \               INTEGER,\n                  fddimibPATHIndex\n               \
    \           INTEGER,\n                  fddimibPATHTVXLowerBound\n           \
    \               FddiTimeNano,\n                  fddimibPATHTMaxLowerBound\n \
    \                         FddiTimeNano,\n                  fddimibPATHMaxTReq\n\
    \                          FddiTimeNano\n              }\n          fddimibPATHSMTIndex\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The value of the SMT index associated with this\n      \
    \                PATH.\"\n              ::= { fddimibPATHEntry 1 }\n         \
    \ fddimibPATHIndex OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n   \
    \           ACCESS  read-only\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"Index variable for uniquely identifying\
    \ the\n                      primary, secondary and local PATH object\n      \
    \                instances. Local PATH object instances are\n                \
    \      represented with integer values 3 to 255.\"\n              REFERENCE\n\
    \                      \"ANSI { fddiPATH 11 }\"\n              ::= { fddimibPATHEntry\
    \ 2 }\n          fddimibPATHTVXLowerBound OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n\
    \              ACCESS  read-write\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"Specifies the minimum time value of\n\
    \                      fddiMACTvxValue that shall be used by any MAC that\n  \
    \                    is configured in this path. The operational value\n     \
    \                 of fddiMACTvxValue is managed by settting this\n           \
    \           variable.  This variable has the time value range\n              \
    \        of:\n                      0 < fddimibPATHTVXLowerBound < fddimibPATHMaxTReq\n\
    \                      Changes to this variable shall either satisfy the\n   \
    \                   time value relationship:\n                      fddimibPATHTVXLowerBound\
    \ <=\n                      fddimibMACTVXCapability\n                      of\
    \ each of the MACs currently on the path, or be\n                      considered\
    \ out of range.  The initial value of\n                      fddimibPATHTVXLowerBound\
    \ shall be 2500 nsec (2.5\n                      ms).\"\n              REFERENCE\n\
    \                      \"ANSI { fddiPATH 21 }\"\n              ::= { fddimibPATHEntry\
    \ 3 }\n          fddimibPATHTMaxLowerBound OBJECT-TYPE\n              SYNTAX \
    \ FddiTimeNano\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"Specifies the minimum time\
    \ value of fddiMACTMax\n                      that shall be used by any MAC that\
    \ is configured\n                      in this path.  The operational value of\n\
    \                      fddiMACTMax is managed by setting this variable.\n    \
    \                  This variable has the time value range of:\n              \
    \        fddimibPATHMaxTReq <= fddimibPATHTMaxLowerBound\n                   \
    \   and an absolute time value range of:\n                      10000nsec (10\
    \ msec) <= fddimibPATHTMaxLowerBound\n                      Changes to this variable\
    \ shall either satisfy the\n                      time value relationship:\n \
    \                     fddimibPATHTMaxLowerBound <\n                      fddimibMACTMaxCapability\n\
    \                      of each of the MACs currently on the path, or be\n    \
    \                  considered out of range.  The initial value of\n          \
    \            fddimibPATHTMaxLowerBound shall be 165000 nsec\n                \
    \      (165 msec).\"\n              REFERENCE\n                      \"ANSI {\
    \ fddiPATH 22 }\"\n              ::= { fddimibPATHEntry 4 }\n          fddimibPATHMaxTReq\
    \ OBJECT-TYPE\n              SYNTAX  FddiTimeNano\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"Specifies the maximum time value of fddiMACT-Req\n                  \
    \    that shall be used by any MAC that is configured\n                      in\
    \ this path.  The operational value of fddiMACT-\n                      Req is\
    \ managed by setting this variable.  This\n                      variable has\
    \ the time value range of:\n                      fddimibPATHTVXLowerBound < fddimibPATHMaxTReq\
    \ <=\n                                               fddimibPATHTMaxLowerBound.\n\
    \                      The default value of fddimibPATHMaxTReq is 165000\n   \
    \                   nsec (165 msec).\"\n              REFERENCE\n            \
    \          \"ANSI { fddiPATH 23 }\"\n              ::= { fddimibPATHEntry 5 }\n\
    \          -- the PATH Configuration table\n          fddimibPATHConfigTable OBJECT-TYPE\n\
    \              SYNTAX SEQUENCE OF FddimibPATHConfigEntry\n              ACCESS\
    \ not-accessible\n              STATUS mandatory\n              DESCRIPTION\n\
    \                      \"A table of Path configuration entries.  This\n      \
    \                table lists all the resources that may be in this\n         \
    \             Path.\"\n              REFERENCE\n                      \"ANSI {\
    \ fddiPATH 18 }\"\n              ::= { fddimibPATH 3 }\n          fddimibPATHConfigEntry\
    \ OBJECT-TYPE\n              SYNTAX FddimibPATHConfigEntry\n              ACCESS\
    \ not-accessible\n              STATUS mandatory\n              DESCRIPTION\n\
    \                      \"A collection of objects containing information\n    \
    \                  for a given PATH Configuration entry.\"\n              INDEX\
    \ { fddimibPATHConfigSMTIndex,\n                      fddimibPATHConfigPATHIndex,\n\
    \                      fddimibPATHConfigTokenOrder }\n              ::= { fddimibPATHConfigTable\
    \ 1 }\n          FddimibPATHConfigEntry ::=\n              SEQUENCE {\n      \
    \            fddimibPATHConfigSMTIndex\n                      INTEGER,\n     \
    \             fddimibPATHConfigPATHIndex\n                      INTEGER,\n   \
    \               fddimibPATHConfigTokenOrder\n                      INTEGER,\n\
    \                  fddimibPATHConfigResourceType\n                      INTEGER,\n\
    \                  fddimibPATHConfigResourceIndex\n                      INTEGER,\n\
    \                  fddimibPATHConfigCurrentPath\n                      INTEGER\n\
    \              }\n          fddimibPATHConfigSMTIndex OBJECT-TYPE\n          \
    \    SYNTAX INTEGER (1..65535)\n              ACCESS read-only\n             \
    \ STATUS mandatory\n              DESCRIPTION\n                      \"The value\
    \ of the SMT index associated with this\n                      configuration entry.\"\
    \n              ::= { fddimibPATHConfigEntry 1 }\n          fddimibPATHConfigPATHIndex\
    \ OBJECT-TYPE\n              SYNTAX INTEGER (1..65535)\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \     \"The value of the PATH resource index associated\n                    \
    \  with this configuration entry.\"\n              ::= { fddimibPATHConfigEntry\
    \ 2 }\n          fddimibPATHConfigTokenOrder OBJECT-TYPE\n              SYNTAX\
    \ INTEGER (1..65535)\n              ACCESS read-only\n              STATUS mandatory\n\
    \              DESCRIPTION\n                      \"An object associated with\
    \ Token order for this\n                      entry.  Thus if the token passes\
    \ resources a, b, c\n                      and d, in that order, then the value\
    \ of this\n                      object for these resources would be 1, 2, 3 and\
    \ 4\n                      respectively.\"\n              ::= { fddimibPATHConfigEntry\
    \ 3 }\n          fddimibPATHConfigResourceType OBJECT-TYPE\n              SYNTAX\
    \ INTEGER { mac(2), port(4) }\n              ACCESS read-only\n              STATUS\
    \ mandatory\n              DESCRIPTION\n                      \"The type of resource\
    \ associated with this\n                      configuration entry.\"\n       \
    \       ::= { fddimibPATHConfigEntry 4 }\n          fddimibPATHConfigResourceIndex\
    \ OBJECT-TYPE\n              SYNTAX INTEGER (1..65535)\n              ACCESS read-only\n\
    \              STATUS mandatory\n              DESCRIPTION\n                 \
    \     \"The value of the SMT resource index used to refer\n                  \
    \    to the instance of this MAC or Port resource.\"\n              ::= { fddimibPATHConfigEntry\
    \ 5 }\n          fddimibPATHConfigCurrentPath OBJECT-TYPE\n              SYNTAX\
    \ INTEGER {\n                       isolated(1), local(2), secondary(3), primary(4),\n\
    \                       concatenated(5), thru(6)\n                     }\n   \
    \           ACCESS read-only\n              STATUS mandatory\n              DESCRIPTION\n\
    \                      \"The current insertion status for this resource on\n \
    \                     this Path.\"\n              ::= { fddimibPATHConfigEntry\
    \ 6 }\n          -- the PORT group\n          -- Implementation of the PORT group\
    \ is mandatory for all\n          -- systems which implement manageable FDDI subsystems.\n\
    \          fddimibPORTNumber OBJECT-TYPE\n              SYNTAX  INTEGER (0..65535)\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The total number of PORT implementations\
    \ (across\n                      all SMTs) on this network management application\n\
    \                      entity.  The value for this variable must remain\n    \
    \                  constant at least from one re-initialization of\n         \
    \             the entity's network management system to the next\n           \
    \           re-initialization.\"\n              ::= { fddimibPORT  1 }\n     \
    \     -- the PORT table\n          fddimibPORTTable OBJECT-TYPE\n            \
    \  SYNTAX  SEQUENCE OF FddimibPORTEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A list of PORT entries.  The number of entries\n                    \
    \  shall not exceed the value of fddimibPORTNumber.\"\n              ::= { fddimibPORT\
    \  2 }\n          fddimibPORTEntry OBJECT-TYPE\n              SYNTAX  FddimibPORTEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"A PORT entry containing information\
    \ common to a\n                      given PORT.\"\n              INDEX   { fddimibPORTSMTIndex,\
    \ fddimibPORTIndex }\n              ::= { fddimibPORTTable 1 }\n          FddimibPORTEntry\
    \ ::=\n              SEQUENCE {\n                  fddimibPORTSMTIndex\n     \
    \                     INTEGER,\n                  fddimibPORTIndex\n         \
    \                 INTEGER,\n                  fddimibPORTMyType\n            \
    \              INTEGER,\n                  fddimibPORTNeighborType\n         \
    \                 INTEGER,\n                  fddimibPORTConnectionPolicies\n\
    \                          INTEGER,\n                  fddimibPORTMACIndicated\n\
    \                          INTEGER,\n                  fddimibPORTCurrentPath\n\
    \                          INTEGER,\n                  fddimibPORTRequestedPaths\n\
    \                          OCTET STRING,\n                  fddimibPORTMACPlacement\n\
    \                          FddiResourceId,\n                  fddimibPORTAvailablePaths\n\
    \                          INTEGER,\n                  fddimibPORTPMDClass\n \
    \                         INTEGER,\n                  fddimibPORTConnectionCapabilities\n\
    \                          INTEGER,\n                  fddimibPORTBSFlag\n   \
    \                       INTEGER,\n                  fddimibPORTLCTFailCts\n  \
    \                        Counter,\n                  fddimibPORTLerEstimate\n\
    \                          INTEGER,\n                  fddimibPORTLemRejectCts\n\
    \                          Counter,\n                  fddimibPORTLemCts\n   \
    \                       Counter,\n                  fddimibPORTLerCutoff\n   \
    \                       INTEGER,\n                  fddimibPORTLerAlarm\n    \
    \                      INTEGER,\n                  fddimibPORTConnectState\n \
    \                         INTEGER,\n                  fddimibPORTPCMState\n  \
    \                        INTEGER,\n                  fddimibPORTPCWithhold\n \
    \                         INTEGER,\n                  fddimibPORTLerFlag\n   \
    \                       INTEGER,\n                  fddimibPORTHardwarePresent\n\
    \                          INTEGER,\n                  fddimibPORTAction\n   \
    \                       INTEGER\n              }\n          fddimibPORTSMTIndex\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"The value of the SMT index associated with this\n      \
    \                PORT.\"\n              ::= { fddimibPORTEntry 1 }\n         \
    \ fddimibPORTIndex OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n   \
    \           ACCESS  read-only\n              STATUS  mandatory\n             \
    \ DESCRIPTION\n                      \"A unique value for each PORT within a given\
    \ SMT,\n                      which is the same as the corresponding resource\n\
    \                      index in SMT.  The value for each PORT must remain\n  \
    \                    constant at least from one re-initialization of\n       \
    \               the entity's network management system to the next\n         \
    \             re-initialization.\"\n              REFERENCE\n                \
    \      \"ANSI { fddiPORT 29 }\"\n              ::= { fddimibPORTEntry 2 }\n  \
    \        fddimibPORTMyType OBJECT-TYPE\n              SYNTAX  INTEGER { a(1),\
    \ b(2), s(3), m(4), none(5) }\n              ACCESS  read-only\n             \
    \ STATUS  mandatory\n              DESCRIPTION\n                      \"The value\
    \ of the PORT's PC_Type (refer to ANSI\n                      9.4.1, and 9.6.3.2).\"\
    \n              REFERENCE\n                      \"ANSI { fddiPORT 12 }\"\n  \
    \            ::= { fddimibPORTEntry 3 }\n          fddimibPORTNeighborType OBJECT-TYPE\n\
    \              SYNTAX  INTEGER { a(1), b(2), s(3), m(4), none(5) }\n         \
    \     ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The type of the remote PORT as determined in PCM.\n \
    \                     This variable has an initial value of none, and is\n   \
    \                   only modified in PC_RCode(3)_Actions (refer to\n         \
    \             ANSI SMT 9.6.3.2).\"\n              REFERENCE\n                \
    \      \"ANSI { fddiPORT 13 }\"\n              ::= { fddimibPORTEntry 4 }\n  \
    \        fddimibPORTConnectionPolicies OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (0..3)\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"A value representing the PORT's\
    \ connection\n                      policies desired in the node. The value of\
    \ pc-\n                      mac-lct is a term used in the PC_MAC_LCT Flag (see\n\
    \                      9.4.3.2).  The value of pc-mac-loop is a term used\n  \
    \                    in the PC_MAC_Loop Flag.\n                      The value\
    \ is a sum.  This value initially takes\n                      the value zero,\
    \ then for each PORT policy, 2\n                      raised to a power is added\
    \ to the sum.  The powers\n                      are according to the following\
    \ table:\n                                    Policy   Power\n               \
    \                 pc-mac-lct     0\n                               pc-mac-loop\
    \     1 \"\n              REFERENCE\n                      \"ANSI { fddiPORT 14\
    \ }\"\n              ::= { fddimibPORTEntry 5 }\n          fddimibPORTMACIndicated\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER {\n                          tVal9FalseRVal9False(1),\n\
    \                          tVal9FalseRVal9True(2),\n                         \
    \ tVal9TrueRVal9False(3),\n                          tVal9TrueRVal9True(4)\n \
    \                     }\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The indications\
    \ (T_Val(9), R_Val(9)) in PC-\n                      Signalling, of the intent\
    \ to place a MAC in the\n                      output token path to a PORT (refer\
    \ to ANSI SMT\n                      9.6.3.2.).\"\n              REFERENCE\n \
    \                     \"ANSI { fddiPORT 15 }\"\n              ::= { fddimibPORTEntry\
    \ 6 }\n          fddimibPORTCurrentPath OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                          ce0(1), -- isolated\n                         \
    \ ce1(2), -- local\n                          ce2(3), -- secondary\n         \
    \                 ce3(4), -- primary\n                          ce4(5), -- concatenated\n\
    \                          ce5(6)  -- thru\n                      }\n        \
    \      ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"Indicates the Path(s) into which this PORT is\n     \
    \                 currently inserted.\"\n              REFERENCE\n           \
    \           \"ANSI { fddiPORT 16 }\"\n              ::= { fddimibPORTEntry 7 }\n\
    \          fddimibPORTRequestedPaths OBJECT-TYPE\n              SYNTAX  OCTET\
    \ STRING (SIZE (3))\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"This variable is a list of\
    \ permitted Paths where\n                      each list element defines the Port's\
    \ permitted\n                      Paths.  The first octet corresponds to 'none',\
    \ the\n                      second octet to 'tree', and the third octet to\n\
    \                      'peer'.\"\n              REFERENCE\n                  \
    \    \"ANSI { fddiPORT 17 }\"\n              ::= { fddimibPORTEntry 8 }\n    \
    \      fddimibPORTMACPlacement OBJECT-TYPE\n              SYNTAX  FddiResourceId\
    \ -- INTEGER (0..65535)\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"Indicates the\
    \ MAC, if any, whose transmit path\n                      exits the station via\
    \ this PORT. The value shall\n                      be zero if there is no MAC\
    \ associated with the\n                      PORT. Otherwise, the MACIndex of\
    \ the MAC will be\n                      the value of the variable.\"\n      \
    \        REFERENCE\n                      \"ANSI { fddiPORT 18 }\"\n         \
    \     ::= { fddimibPORTEntry 9 }\n          fddimibPORTAvailablePaths OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (0..7)\n              ACCESS  read-only\n     \
    \         STATUS  mandatory\n              DESCRIPTION\n                     \
    \ \"Indicates the Paths which are available to this\n                      Port.\
    \ In the absence of faults, the A and B Ports\n                      will always\
    \ have both the Primary and Secondary\n                      Paths available.\n\
    \                      The value is a sum.  This value initially takes\n     \
    \                 the value zero, then for each type of PATH that\n          \
    \            this port has available, 2 raised to a power is\n               \
    \       added to the sum.  The powers are according to the\n                 \
    \     following table:\n                               Path   Power\n        \
    \                    Primary     0\n                          Secondary     1\n\
    \                              Local     2 \"\n              REFERENCE\n     \
    \                 \"ANSI { fddiPORT 19 }\"\n              ::= { fddimibPORTEntry\
    \ 10 }\n          fddimibPORTPMDClass OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                              multimode(1),\n                           \
    \   single-mode1(2),\n                              single-mode2(3),\n       \
    \                       sonet(4),\n                              low-cost-fiber(5),\n\
    \                              twisted-pair(6),\n                            \
    \  unknown(7),\n                              unspecified(8)\n               \
    \       }\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"This variable indicates the\
    \ type of PMD entity\n                      associated with this port.\"\n   \
    \           REFERENCE\n                      \"ANSI { fddiPORT 22 }\"\n      \
    \        ::= { fddimibPORTEntry 11 }\n          fddimibPORTConnectionCapabilities\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (0..3)\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A value that indicates the connection\n                      capabilities\
    \ of the port. The pc-mac-lct bit\n                      indicates that the station\
    \ has the capability of\n                      setting the PC_MAC_LCT Flag. The\
    \ pc-mac-loop bit\n                      indicates that the station has the capability\
    \ of\n                      setting the PC_MAC_Loop Flag (refer to ANSI\n    \
    \                  9.4.3.2).\n                      The value is a sum.  This\
    \ value initially takes\n                      the value zero, then for each capability\
    \ that this\n                      port has, 2 raised to a power is added to the\
    \ sum.\n                      The powers are according to the following table:\n\
    \                         capability   Power\n                         pc-mac-lct\
    \     0\n                        pc-mac-loop     1 \"\n              REFERENCE\n\
    \                      \"ANSI { fddiPORT 23 }\"\n              ::= { fddimibPORTEntry\
    \ 12 }\n          fddimibPORTBSFlag OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ { true(1), false(2) }\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"This variable\
    \ assumes the value of the BS_Flag\n                      (refer to ANSI SMT 9.4.3.3).\"\
    \n              REFERENCE\n                      \"ANSI { fddiPORT 33 }\"\n  \
    \            ::= { fddimibPORTEntry 13 }\n          fddimibPORTLCTFailCts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The count\
    \ of the consecutive times the link\n                      confidence test (LCT)\
    \ has failed during connection\n                      management (refer to ANSI\
    \ 9.4.1).\"\n              REFERENCE\n                      \"ANSI { fddiPORT\
    \ 42 }\"\n              ::= { fddimibPORTEntry 14 }\n          fddimibPORTLerEstimate\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (4..15)\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A long term average link error rate. It ranges\n                    \
    \  from 10**-4 to 10**-15 and is reported as the\n                      absolute\
    \ value of the base 10 logarithm (refer to\n                      ANSI SMT 9.4.7.5.).\"\
    \n              REFERENCE\n                      \"ANSI { fddiPORT 51 }\"\n  \
    \            ::= { fddimibPORTEntry 15 }\n          fddimibPORTLemRejectCts OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"A link\
    \ error monitoring count of the times that a\n                      link has been\
    \ rejected.\"\n              REFERENCE\n                      \"ANSI { fddiPORT\
    \ 52 }\"\n              ::= { fddimibPORTEntry 16 }\n          fddimibPORTLemCts\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The aggregate link error monitor error count, set\n                 \
    \     to zero only on station initialization.\"\n              REFERENCE\n   \
    \                   \"ANSI { fddiPORT 53 }\"\n              ::= { fddimibPORTEntry\
    \ 17 }\n          fddimibPORTLerCutoff OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (4..15)\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                       \"The link error rate estimate\
    \ at which a link\n                      connection will be broken. It ranges\
    \ from 10**-4\n                      to 10**-15 and is reported as the absolute\
    \ value\n                      of the base 10 logarithm (default of 7).\"\n  \
    \            REFERENCE\n                      \"ANSI { fddiPORT 58 }\"\n     \
    \         ::= { fddimibPORTEntry 18 }\n          fddimibPORTLerAlarm OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (4..15)\n              ACCESS  read-write\n   \
    \           STATUS  mandatory\n              DESCRIPTION\n                   \
    \   \"The link error rate estimate at which a link\n                      connection\
    \ will generate an alarm. It ranges from\n                      10**-4 to 10**-15\
    \ and is reported as the absolute\n                      value of the base 10\
    \ logarithm of the estimate\n                      (default of 8).\"\n       \
    \       REFERENCE\n                      \"ANSI { fddiPORT 59 }\"\n          \
    \    ::= { fddimibPORTEntry 19 }\n          fddimibPORTConnectState OBJECT-TYPE\n\
    \              SYNTAX  INTEGER {\n                          disabled(1),\n   \
    \                       connecting(2),\n                          standby(3),\n\
    \                          active(4)\n                      }\n              ACCESS\
    \  read-only\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"An indication of the connect state of this PORT\n      \
    \                and is equal to the value of Connect_State (refer\n         \
    \             to ANSI 9.4.1)\"\n              REFERENCE\n                    \
    \  \"ANSI { fddiPORT 61 }\"\n              ::= { fddimibPORTEntry 20 }\n     \
    \     fddimibPORTPCMState OBJECT-TYPE\n              SYNTAX  INTEGER {\n     \
    \                     pc0(1), -- Off\n                          pc1(2), -- Break\n\
    \                          pc2(3), -- Trace\n                          pc3(4),\
    \ -- Connect\n                          pc4(5), -- Next\n                    \
    \      pc5(6), -- Signal\n                          pc6(7), -- Join\n        \
    \                  pc7(8), -- Verify\n                          pc8(9), -- Active\n\
    \                          pc9(10) -- Maint\n                      }\n       \
    \       ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The state of this Port's PCM state machine refer\n  \
    \                    to ANSI SMT 9.6.2).\"\n              REFERENCE\n        \
    \              \"ANSI { fddiPORT 62 }\"\n              ::= { fddimibPORTEntry\
    \ 21 }\n          fddimibPORTPCWithhold OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                           none(1),\n                           m-m(2),\n\
    \                           otherincompatible(3),\n                          \
    \ pathnotavailable(4)\n                      }\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The value of PC_Withhold (refer to ANSI SMT\n                      9.4.1).\"\
    \n              REFERENCE\n                      \"ANSI { fddiPORT 63 }\"\n  \
    \            ::= { fddimibPORTEntry 22 }\n          fddimibPORTLerFlag OBJECT-TYPE\n\
    \              SYNTAX  INTEGER { true(1), false(2) }\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The condition becomes active when the value of\n                    \
    \  fddiPORTLerEstimate is less than or equal to\n                      fddiPORTLerAlarm.\
    \ This will be reported with the\n                      Status Report Frames (SRF)\
    \ (refer to ANSI SMT\n                       7.2.7 and 8.3).\"\n             \
    \ REFERENCE\n                      \"ANSI { fddiPORT 64 }\"\n              ::=\
    \ { fddimibPORTEntry 23 }\n          fddimibPORTHardwarePresent OBJECT-TYPE\n\
    \              SYNTAX  INTEGER { true(1), false(2) }\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"This variable indicates the presence of\n                      underlying\
    \ hardware support for this Port object.\n                      If the value of\
    \ this object is false(2), the\n                      reporting of the objects\
    \ in this entry may be\n                      handled in an implementation-specific\
    \ manner.\"\n              REFERENCE\n                      \"ANSI { fddiPORT\
    \ 65 }\"\n              ::= { fddimibPORTEntry 24 }\n          fddimibPORTAction\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER {\n                      other(1),\
    \           -- none of the following\n                      maintPORT(2),\n  \
    \                    enablePORT(3),\n                      disablePORT(4),\n \
    \                     startPORT(5),\n                      stopPORT(6)\n     \
    \                 }\n              ACCESS  read-write\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"Causes a Control signal to\
    \ be generated with a\n                      control_action of 'Signal' and the\
    \ 'variable'\n                      parameter set with the appropriate value (i.e.,\n\
    \                      PC_Maint, PC_Enable, PC_Disable, PC_Start, or\n       \
    \               PC_Stop) (refer to ANSI 9.4.2).\"\n              REFERENCE\n \
    \                     \"ANSI { fddiPORT 70 }\"\n              ::= { fddimibPORTEntry\
    \ 25 }\n          END\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document was produced by the IETF FDDI MIB working\
    \ group:\n               Hossein Alaee, 3Com Corporation\n               Haggar\
    \ Alsaleh, Bell Northern Research\n               William Anderson, Mitre Corporation\n\
    \               Alan Apt, Addison-Wesley\n               Mary Artibee, Silicon\
    \ Graphics\n               Karen Auerbach, Epilogue Technologies\n           \
    \    Doug Bagnall, Apollo/Hewlett Packard\n               Chet Birger, Coral Network\
    \ Corporation\n               Pablo Brenner, Fibronics\n               Howard\
    \ Brown, Cabletron\n               Jack Brown, US Army Computer Engineering Center\n\
    \               Eric Brunner\n               Jeff Case, The University of Tennessee\n\
    \               Tammy Chan, Fibercom\n               Asheem Chandna, AT&T\n  \
    \             Cho Y. Chang, Apollo/Hewlett Packard\n               Chris Chiotasso,\
    \ Fibronics\n               Paul Ciarfella, Digital Equipment Corporation\n  \
    \             John Cook, Chipcom\n               Don Coolidge, Silicon Graphics\n\
    \               Burt Cyr, Unisys\n               James R. Davin, Massachusetts\
    \ Institute of Technology\n               Nabil Damouny\n               Nadya\
    \ El-Afandi, Network Systems Corporation\n               Hunaid Engineer, Cray\
    \ Research\n               Jeff Fitzgerald, Fibercom\n               Richard Fox,\
    \ Synoptics\n               Stan Froyd, ACC\n               Debbie Futcher, U.S.\
    \ Naval Surface Warfare Center\n               Joseph Golio, Cray Research\n \
    \              Jeremy Greene, Coral\n               Peter Hayden, Digital Equipment\
    \ Corporation\n               Scott Hiles, U.S. Naval Surface Warfare Center\n\
    \               Greg Jones, Data General\n               Satish Joshi, SynOptics\
    \ Communications\n               Jayant Kadambi, AT&T Bell Labs\n            \
    \   Joanna Karwowska, Data General\n               Frank Kastenholz, Interlan\n\
    \               Jim Kinder, Fibercom\n               Christopher Kolb, PSI\n \
    \              Cheryl Krupczak, NCR\n               Peter Lin, Vitalink\n    \
    \           Then Liu\n               John R. LoVerso, Concurrent Computer Corporation\n\
    \               Ron Mackey, Distributed Systems International, Inc.\n        \
    \       Gary Malkin, Proteon\n               Bruce McClure, Synernetics\n    \
    \           Keith McCloghrie, Hughes Lan Systems\n               Donna McMaster,\
    \ SynOptics\n               John O'Hara, Massachusetts Institute of Technology\n\
    \               Luc Pariseau, Digital Equipment Corporation\n               Dave\
    \ Perkins, SynOptics Communications\n               James E. Reeves, SynOptics\
    \ Communications\n               Jim Reinstedler, Ungermann-Bass\n           \
    \    Radhi Renous, Fibronics\n               Sal Ricci, AT&T/NCR\n           \
    \    Anil Rijsinghani, Digital Equipment Corporation\n               Bob Rolla,\
    \ Synernetics\n               Nelson Ronkin, Synernetics\n               Marshall\
    \ T. Rose, Performance Systems International, Inc.\n               Milt Roselinsky,\
    \ CMC\n               Jon Saperia, Digital Equipment Corporation\n           \
    \    Greg Satz, cisco Systems\n               Steven Senum, Network Systems Corporation\n\
    \               Jim Sheridan, IBM Corporation\n               Jeffrey Schiller,\
    \ MIT\n               Dror Shindelman, Fibronics\n               Mark Sleeper,\
    \ Sparta\n               Lou Steinberg, IBM Corporation\n               Larry\
    \ Stefani, Digital Equipment Corporation\n               Mary Jane Strohl, Apollo/Hewlett\
    \ Packard\n               Sally Tarquinio, Mitre Corporation\n               Kaj\
    \ Tesink, Bellcore\n               Ian Thomas, Chipcom\n               Dean Throop,\
    \ Data General\n               Bill Townsend, Xylogics\n               Ahmet H.\
    \ Tuncay, SynOptics Communications\n               Mike Turico, Motorola\n   \
    \            Chris VandenBerg, ACC\n               Sudhanshu Verma, Hewlett Packard\n\
    \               Joe Vermeulen, UNISYS\n               David Waiteman, BBN\n  \
    \             Bert Williams, Synernetics\n               Mark Wood, Distributed\
    \ Systems International, Inc.\n               Y. C. Yang\n               Denis\
    \ Yaro, Sun Microsystems\n               Jeff Young, Cray Research\n   The author\
    \ gratefully acknowledges the labors of Judi Talley and\n   David Reid of SNMP\
    \ Research, Inc. for their editorial assistance in\n   the preparation of this\
    \ document.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1]  Rose M., and K. McCloghrie, \"Structure and Identification\
    \ of\n        Management Information for TCP/IP-based internets\", STD 16, RFC\n\
    \        1155, Performance Systems International, Hughes LAN Systems, May\n  \
    \      1990.\n   [2]  Case, J., \"FDDI Management Information Base\", RFC 1285,\
    \ SNMP\n        Research, Incorporated, January 1992.\n   [3]  Case, J., Fedor,\
    \ M., Schoffstall, M., and J. Davin, \"Simple\n        Network Management Protocol\"\
    , STD 15, RFC 1157, SNMP Research,\n        Performance Systems International,\
    \ Performance Systems\n        International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [4]  McCloghrie K., and M. Rose, Editors, \"Management Information\n\
    \        Base for Network Management of TCP/IP-based internets\", STD 17,\n  \
    \      RFC 1213, Performance Systems International, March 1991.\n   [5]  Information\
    \ processing systems - Open Systems Interconnection -\n        Specification of\
    \ Abstract Syntax Notation One (ASN.1),\n        International Organization for\
    \ Standardization.  International\n        Standard 8824, (December, 1987).\n\
    \   [6]  Information processing systems - Open Systems Interconnection -\n   \
    \     Specification of Basic Encoding Rules for Abstract Notation One\n      \
    \  (ASN.1), International Organization for Standardization.\n        International\
    \ Standard 8825, (December, 1987).\n   [7]  Rose, M., and K. McCloghrie, Editors,\
    \ \"Concise MIB Definitions\",\n        STD 16, RFC 1212, Performance Systems\
    \ International, Hughes LAN\n        Systems, March 1991.\n   [8]  American National\
    \ Standards Institute, FDDI Station Management\n        (SMT), Draft Proposed\
    \ American National Standard, American\n        National Standards Institute,\
    \ X3T9.5/84-49 REV 7.3.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Jeffrey D. Case\n   The University of Tennessee\n \
    \  Department of Computer Science\n   107 Ayres Hall\n   Knoxville, Tennessee\
    \  37996\n   and\n   SNMP Research, Incorporated\n   3001 Kimberlin Heights Road\n\
    \   Knoxville, Tennessee  37920\n   Phone: (615) 974-5067 or (615) 573-1434\n\
    \   EMail: case@CS.UTK.EDU\n   Anil Rijsinghani\n   Digital Equipment Corporation\n\
    \   295 Foster Street\n   Littleton, MA 01460-1123\n   Phone: (508) 952-3520\n\
    \   EMail: anil@levers.enet.dec.com\n"
