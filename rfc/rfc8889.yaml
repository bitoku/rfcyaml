- title: __initial_text__
  contents:
  - " Multipoint Alternate-Marking Method for Passive and Hybrid Performance\n   \
    \                            Monitoring\n"
- title: Abstract
  contents:
  - "Abstract\n   The Alternate-Marking method, as presented in RFC 8321, can only\
    \ be\n   applied to point-to-point flows, because it assumes that all the\n  \
    \ packets of the flow measured on one node are measured again by a\n   single\
    \ second node.  This document generalizes and expands this\n   methodology to\
    \ measure any kind of unicast flow whose packets can\n   follow several different\
    \ paths in the network -- in wider terms, a\n   multipoint-to-multipoint network.\
    \  For this reason, the technique\n   here described is called \"Multipoint Alternate\
    \ Marking\".\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are candidates\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8889.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n     2.1.  Correlation\
    \ with RFC 5644\n   3.  Flow Classification\n   4.  Multipoint Performance Measurement\n\
    \     4.1.  Monitoring Network\n   5.  Multipoint Packet Loss\n   6.  Network\
    \ Clustering\n     6.1.  Algorithm for Clusters Partition\n   7.  Timing Aspects\n\
    \   8.  Multipoint Delay and Delay Variation\n     8.1.  Delay Measurements on\
    \ a Multipoint-Paths Basis\n       8.1.1.  Single-Marking Measurement\n     8.2.\
    \  Delay Measurements on a Single-Packet Basis\n       8.2.1.  Single- and Double-Marking\
    \ Measurement\n       8.2.2.  Hashing Selection Method\n   9.  A Closed-Loop Performance-Management\
    \ Approach\n   10. Examples of Application\n   11. Security Considerations\n \
    \  12. IANA Considerations\n   13. References\n     13.1.  Normative References\n\
    \     13.2.  Informative References\n   Acknowledgements\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Alternate-Marking method, as described in RFC 8321 [RFC8321],\
    \ is\n   applicable to a point-to-point path.  The extension proposed in this\n\
    \   document applies to the most general case of multipoint-to-multipoint\n  \
    \ path and enables flexible and adaptive performance measurements in a\n   managed\
    \ network.\n   The Alternate-Marking methodology described in RFC 8321 [RFC8321]\n\
    \   allows the synchronization of the measurements in different points by\n  \
    \ dividing the packet flow into batches.  So it is possible to get\n   coherent\
    \ counters and show what is happening in every marking period\n   for each monitored\
    \ flow.  The monitoring parameters are the packet\n   counter and timestamps of\
    \ a flow for each marking period.  Note that\n   additional details about the\
    \ applicability of the Alternate-Marking\n   methodology are described in RFC\
    \ 8321 [RFC8321] while implementation\n   details can be found in the paper \"\
    AM-PM: Efficient Network Telemetry\n   using Alternate Marking\" [IEEE-Network-PNPM].\n\
    \   There are some applications of the Alternate-Marking method where\n   there\
    \ are a lot of monitored flows and nodes.  Multipoint Alternate\n   Marking aims\
    \ to reduce these values and makes the performance\n   monitoring more flexible\
    \ in case a detailed analysis is not needed.\n   For instance, by considering\
    \ n measurement points and m monitored\n   flows, the order of magnitude of the\
    \ packet counters for each time\n   interval is n*m*2 (1 per color).  The number\
    \ of measurement points\n   and monitored flows may vary and depends on the portion\
    \ of the\n   network we are monitoring (core network, metro network, access\n\
    \   network) and the granularity (for each service, each customer).  So\n   if\
    \ both n and m are high values, the packet counters increase a lot,\n   and Multipoint\
    \ Alternate Marking offers a tool to control these\n   parameters.\n   The approach\
    \ presented in this document is applied only to unicast\n   flows and not to multicast.\
    \  Broadcast, Unknown Unicast, and\n   Multicast (BUM) traffic is not considered\
    \ here, because traffic\n   replication is not covered by the Multipoint Alternate-Marking\n\
    \   method.  Furthermore, it can be applicable to anycast flows, and\n   Equal-Cost\
    \ Multipath (ECMP) paths can also be easily monitored with\n   this technique.\n\
    \   In short, RFC 8321 [RFC8321] applies to point-to-point unicast flows\n   and\
    \ BUM traffic, while this document and its Clustered Alternate-\n   Marking method\
    \ is valid for multipoint-to-multipoint unicast flows,\n   anycast, and ECMP flows.\n\
    \   Therefore,the Alternate-Marking method can be extended to any kind of\n  \
    \ multipoint-to-multipoint paths, and the network-clustering approach\n   presented\
    \ in this document is the formalization of how to implement\n   this property\
    \ and allow a flexible and optimized performance\n   measurement support for network\
    \ management in every situation.\n   Without network clustering, it is possible\
    \ to apply Alternate Marking\n   only for all the network or per single flow.\
    \  Instead, with network\n   clustering, it is possible to use the partition of\
    \ the network into\n   clusters at different levels in order to perform the needed\
    \ degree of\n   detail.  In some circumstances, it is possible to monitor a\n\
    \   multipoint network by analyzing the network clustering, without\n   examining\
    \ in depth.  In case of problems (packet loss is measured or\n   the delay is\
    \ too high), the filtering criteria could be specified\n   more in order to perform\
    \ a detailed analysis by using a different\n   combination of clusters up to a\
    \ per-flow measurement as described in\n   RFC 8321 [RFC8321].\n   This approach\
    \ fits very well with the Closed-Loop Network and\n   Software-Defined Network\
    \ (SDN) paradigm, where the SDN orchestrator\n   and the SDN controllers are the\
    \ brains of the network and can manage\n   flow control to the switches and routers\
    \ and, in the same way, can\n   calibrate the performance measurements depending\
    \ on the desired\n   accuracy.  An SDN controller application can orchestrate\
    \ how\n   accurately the network performance monitoring is set up by applying\n\
    \   the Multipoint Alternate Marking as described in this document.\n   It is\
    \ important to underline that, as an extension of RFC 8321\n   [RFC8321], this\
    \ is a methodology document, so the mechanism that can\n   be used to transmit\
    \ the counters and the timestamps is out of scope\n   here, and the implementation\
    \ is open.  Several options are possible\n   -- e.g., see \"Enhanced Alternate\
    \ Marking Method\"\n   [ENHANCED-ALTERNATE-MARKING].\n   Note that the fragmented\
    \ packets case can be managed with the\n   Alternate-Marking methodology only\
    \ if fragmentation happens outside\n   the portion of the network that is monitored.\
    \  This is always true\n   for both RFC 8321 [RFC8321] and Multipoint Alternate\
    \ Marking, as\n   explained here.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The definitions of the basic terms are identical to those\
    \ found in\n   Alternate Marking [RFC8321].  It is to be remembered that RFC 8321\n\
    \   [RFC8321] is valid for point-to-point unicast flows and BUM traffic.\n   The\
    \ important new terms that need to be explained are listed below:\n   Multipoint\
    \ Alternate Marking:  Extension to RFC 8321 [RFC8321], valid\n      for multipoint-to-multipoint\
    \ unicast flows, anycast, and ECMP\n      flows.  It can also be referred to as\
    \ Clustered Alternate Marking.\n   Flow definition:  The concept of flow is generalized\
    \ in this\n      document.  The identification fields are selected without any\n\
    \      constraints and, in general, the flow can be a multipoint-to-\n      multipoint\
    \ flow, as a result of aggregate point-to-point flows.\n   Monitoring network:\
    \  Identified with the nodes of the network that\n      are the measurement points\
    \ (MPs) and the links that are the\n      connections between MPs.  The monitoring\
    \ network graph depends on\n      the flow definition, so it can represent a specific\
    \ flow or the\n      entire network topology as aggregate of all the flows.\n\
    \   Cluster:  Smallest identifiable subnetwork of the entire monitoring\n    \
    \  network graph that still satisfies the condition that the number\n      of\
    \ packets that go in is the same as the number that go out.\n   Multipoint metrics:\
    \  Packet loss, delay, and delay variation are\n      extended to the case of\
    \ multipoint flows.  It is possible to\n      compute these metrics on the basis\
    \ of multipoint paths in order to\n      associate the measurements to a cluster,\
    \ a combination of\n      clusters, or the entire monitored network.  For delay\
    \ and delay\n      variation, it is also possible to define the metrics on a single-\n\
    \      packet basis, and it means that the multipoint path is used to\n      easily\
    \ couple packets between input and output nodes of a\n      multipoint path.\n\
    \   The next section highlights the correlation with the terms used in\n   RFC\
    \ 5644 [RFC5644].\n"
- title: 2.1.  Correlation with RFC 5644
  contents:
  - "2.1.  Correlation with RFC 5644\n   RFC 5644 [RFC5644] is limited to active measurements\
    \ using a single\n   source packet or stream.  Its scope is also limited to observations\n\
    \   of corresponding packets along the path (spatial metric) and at one\n   or\
    \ more destinations (one-to-group) along the path.\n   Instead, the scope of this\
    \ memo is to define multiparty metrics for\n   passive and hybrid measurements\
    \ in a group-to-group topology with\n   multiple sources and destinations.\n \
    \  RFC 5644 [RFC5644] introduces metric names that can be reused here\n   but\
    \ have to be extended and rephrased to be applied to the Alternate-\n   Marking\
    \ schema:\n   a.  the multiparty metrics are not only one-to-group metrics but\
    \ can\n       be also group-to-group metrics;\n   b.  the spatial metrics, used\
    \ for measuring the performance of\n       segments of a source to destination\
    \ path, are applied here to\n       group-to-group segments (called clusters).\n"
- title: 3.  Flow Classification
  contents:
  - "3.  Flow Classification\n   A unicast flow is identified by all the packets having\
    \ a set of\n   common characteristics.  This definition is inspired by RFC 7011\n\
    \   [RFC7011].\n   As an example, by considering a flow as all the packets sharing\
    \ the\n   same source IP address or the same destination IP address, it is easy\n\
    \   to understand that the resulting pattern will not be a point-to-point\n  \
    \ connection, but a point-to-multipoint or multipoint-to-point\n   connection.\n\
    \   In general, a flow can be defined by a set of selection rules used to\n  \
    \ match a subset of the packets processed by the network device.  These\n   rules\
    \ specify a set of Layer 3 and Layer 4 header fields\n   (identification fields)\
    \ and the relative values that must be found in\n   matching packets.\n   The\
    \ choice of the identification fields directly affects the type of\n   paths that\
    \ the flow would follow in the network.  In fact, it is\n   possible to relate\
    \ a set of identification fields with the pattern of\n   the resulting graphs,\
    \ as listed in Figure 1.\n   A TCP 5-tuple usually identifies flows following\
    \ either a single path\n   or a point-to-point multipath (in the case of load\
    \ balancing).  On\n   the contrary, a single source address selects aggregate\
    \ flows\n   following a point-to-multipoint, while a multipoint-to-point can be\n\
    \   the result of a matching on a single destination address.  In the\n   case\
    \ where a selection rule and its reverse are used for\n   bidirectional measurements,\
    \ they can correspond to a point-to-\n   multipoint in one direction and a multipoint-to-point\
    \ in the opposite\n   direction.\n   So the flows to be monitored are selected\
    \ into the monitoring points\n   using packet selection rules, which can also\
    \ change the pattern of\n   the monitored network.\n   Note that, more generally,\
    \ the flow can be defined at different\n   levels based on the potential encapsulation,\
    \ and additional\n   conditions that are not in the packet header can also be\
    \ included as\n   part of matching criteria.\n   The Alternate-Marking method\
    \ is applicable only to a single path (and\n   partially to a one-to-one multipath),\
    \ so the extension proposed in\n   this document is suitable also for the most\
    \ general case of\n   multipoint-to-multipoint, which embraces all the other patterns\
    \ of\n   Figure 1.\n          point-to-point single path\n          ---<>  R1\
    \  <>----<>  R2  <>----<>  R3  <>---\n          point-to-point multipath\n   \
    \                       <>  R2  <>\n          ---<>  R1  <>                <>\
    \  R4  <>---\n                          <>  R3  <>\n          point-to-multipoint\n\
    \                         <>  R2  <>\n          ---<>  R1  <>              <>\
    \  R5  <>---\n                         <>  R3  <>\n          multipoint-to-point\n\
    \              +------+\n          ---<>  R1  <>\n              +------+ \\\n\
    \                        <>  R4  <>\n          ---<>  R2  <>              <> \
    \ R6  <>---\n                         <>  R5  <>\n              +------+ /\n \
    \         ---<>  R3  <>\n              +------+\n          multipoint-to-multipoint\n\
    \          ---<>  R1  <>              <>  R6  <>---\n                        \
    \ <>  R4  <>\n          ---<>  R2  <>             <>  R7  <>---\n            \
    \             <>  R5  <>\n          ---<>  R3  <>              <>  R8  <>---\n\
    \                       Figure 1: Flow Classification\n   The case of unicast\
    \ flow is considered in Figure 1.  The anycast flow\n   is also in scope, because\
    \ there is no replication and only a single\n   node from the anycast group receives\
    \ the traffic, so it can be viewed\n   as a special case of unicast flow.  Furthermore,\
    \ an ECMP flow is in\n   scope by definition, since it is a point-to-multipoint\
    \ unicast flow.\n"
- title: 4.  Multipoint Performance Measurement
  contents:
  - "4.  Multipoint Performance Measurement\n   By using the Alternate-Marking method,\
    \ only point-to-point paths can\n   be monitored.  To have an IP (TCP/UDP) flow\
    \ that follows a point-to-\n   point path, we have to define, with a specific\
    \ value, 5\n   identification fields (IP Source, IP Destination, Transport Protocol,\n\
    \   Source Port, Destination Port).\n   Multipoint Alternate Marking enables the\
    \ performance measurement for\n   multipoint flows selected by identification\
    \ fields without any\n   constraints (even the entire network production traffic).\
    \  It is also\n   possible to use multiple marking points for the same monitored\
    \ flow.\n"
- title: 4.1.  Monitoring Network
  contents:
  - "4.1.  Monitoring Network\n   The monitoring network is deduced from the production\
    \ network by\n   identifying the nodes of the graph that are the measurement points,\n\
    \   and the links that are the connections between measurement points.\n   There\
    \ are some techniques that can help with the building of the\n   monitoring network\
    \ (as an example, see [ROUTE-ASSESSMENT]).  In\n   general, there are different\
    \ options: the monitoring network can be\n   obtained by considering all the possible\
    \ paths for the traffic or\n   periodically checking the traffic (e.g. daily,\
    \ weekly, monthly) and\n   updating the graph as appropriate, but this is up to\
    \ the Network\n   Management System (NMS) configuration.\n   So a graph model\
    \ of the monitoring network can be built according to\n   the Alternate-Marking\
    \ method: the monitored interfaces and links are\n   identified.  Only the measurement\
    \ points and links where the traffic\n   has flowed have to be represented in\
    \ the graph.\n   Figure 2 shows a simple example of a monitoring network graph:\n\
    \                          <>  R2  <>---<>  R4  <>\n          ---<>  R1  <>---<>\
    \  R3  <>---<>  R5  <>   +------+\n                     Figure 2: Monitoring Network\
    \ Graph\n   Each monitoring point is characterized by the packet counter that\n\
    \   refers only to a marking period of the monitored flow.\n   The same is also\
    \ applicable for the delay, but it will be described\n   in the following sections.\n"
- title: 5.  Multipoint Packet Loss
  contents:
  - "5.  Multipoint Packet Loss\n   Since all the packets of the considered flow leaving\
    \ the network have\n   previously entered the network, the number of packets counted\
    \ by all\n   the input nodes is always greater than, or equal to, the number of\n\
    \   packets counted by all the output nodes.  Noninitial fragments are\n   not\
    \ considered here.\n   The assumption is the use of the Alternate-Marking method.\
    \  In the\n   case of no packet loss occurring in the marking period, if all the\n\
    \   input and output points of the network domain to be monitored are\n   measurement\
    \ points, the sum of the number of packets on all the\n   ingress interfaces equals\
    \ the number on egress interfaces for the\n   monitored flow.  In this circumstance,\
    \ if no packet loss occurs, the\n   intermediate measurement points only have\
    \ the task of splitting the\n   measurement.\n   It is possible to define the\
    \ Network Packet Loss of one monitored\n   flow for a single period.  In a packet\
    \ network, the number of lost\n   packets is the number of packets counted by\
    \ the input nodes minus the\n   number of packets counted by the output nodes.\
    \  This is true for\n   every packet flow in each marking period.\n   The monitored\
    \ network packet loss with n input nodes and m output\n   nodes is given by:\n\
    \   PL = (PI1 + PI2 +...+ PIn) - (PO1 + PO2 +...+ POm)\n   where:\n   PL is the\
    \ network packet loss (number of lost packets)\n   PIi is the number of packets\
    \ flowed through the i-th input node in\n   this period\n   POj is the number\
    \ of packets flowed through the j-th output node in\n   this period\n   The equation\
    \ is applied on a per-time-interval basis and a per-flow\n   basis:\n      The\
    \ reference interval is the Alternate-Marking period, as defined\n      in RFC\
    \ 8321 [RFC8321].\n      The flow definition is generalized here.  Indeed, as\
    \ described\n      before, a multipoint packet flow is considered, and the\n \
    \     identification fields can be selected without any constraints.\n"
- title: 6.  Network Clustering
  contents:
  - "6.  Network Clustering\n   The previous equation can determine the number of\
    \ packets lost\n   globally in the monitored network, exploiting only the data\
    \ provided\n   by the counters in the input and output nodes.\n   In addition,\
    \ it is also possible to leverage the data provided by the\n   other counters\
    \ in the network to converge on the smallest\n   identifiable subnetworks where\
    \ the losses occur.  These subnetworks\n   are named \"clusters\".\n   A cluster\
    \ graph is a subnetwork of the entire monitoring network\n   graph that still\
    \ satisfies the packet loss equation (introduced in\n   the previous section),\
    \ where PL in this case is the number of packets\n   lost in the cluster.  As\
    \ for the entire monitoring network graph, the\n   cluster is defined on a per-flow\
    \ basis.\n   For this reason, a cluster should contain all the arcs emanating\
    \ from\n   its input nodes and all the arcs terminating at its output nodes.\n\
    \   This ensures that we can count all the packets (and only those)\n   exiting\
    \ an input node again at the output node, whatever path they\n   follow.\n   In\
    \ a completely monitored unidirectional network (a network where\n   every network\
    \ interface is monitored), each network device\n   corresponds to a cluster, and\
    \ each physical link corresponds to two\n   clusters (one for each device).\n\
    \   Clusters can have different sizes depending on the flow-filtering\n   criteria\
    \ adopted.\n   Moreover, sometimes clusters can be optionally simplified.  For\n\
    \   example, when two monitored interfaces are divided by a single router\n  \
    \ (one is the input interface, the other is the output interface, and\n   the\
    \ router has only these two interfaces), instead of counting\n   exactly twice,\
    \ upon entering and leaving, it is possible to consider\n   a single measurement\
    \ point.  In this case, we do not care about the\n   internal packet loss of the\
    \ router.\n   It is worth highlighting that it might also be convenient to define\n\
    \   clusters based on the topological information so that they are\n   applicable\
    \ to all the possible flows in the monitored network.\n"
- title: 6.1.  Algorithm for Clusters Partition
  contents:
  - "6.1.  Algorithm for Clusters Partition\n   A simple algorithm can be applied\
    \ in order to split our monitoring\n   network into clusters.  This can be done\
    \ for each direction\n   separately.  The clusters partition is based on the monitoring\n\
    \   network graph, which can be valid for a specific flow or can also be\n   general\
    \ and valid for the entire network topology.\n   It is a two-step algorithm:\n\
    \   1.  Group the links where there is the same starting node;\n   2.  Join the\
    \ grouped links with at least one ending node in common.\n   Considering that\
    \ the links are unidirectional, the first step implies\n   listing all the links\
    \ as connections between two nodes and grouping\n   the different links if they\
    \ have the same starting node.  Note that\n   it is possible to start from any\
    \ link, and the procedure will work.\n   Following this classification, the second\
    \ step implies eventually\n   joining the groups classified in the first step\
    \ by looking at the\n   ending nodes.  If different groups have at least one common\
    \ ending\n   node, they are put together and belong to the same set.  After the\n\
    \   application of the two steps of the algorithm, each one of the\n   composed\
    \ sets of links, together with the endpoint nodes, constitutes\n   a cluster.\n\
    \   In our monitoring network graph example, it is possible to identify\n   the\
    \ clusters partition by applying this two-step algorithm.\n   The first step identifies\
    \ the following groups:\n   1.  Group 1: (R1-R2), (R1-R3), (R1-R10)\n   2.  Group\
    \ 2: (R2-R4), (R2-R5)\n   3.  Group 3: (R3-R5), (R3-R9)\n   4.  Group 4: (R4-R6),\
    \ (R4-R7)\n   5.  Group 5: (R5-R8)\n   And then, the second step builds the clusters\
    \ partition (in\n   particular, we can underline that Groups 2 and 3 connect together,\n\
    \   since R5 is in common):\n   1.  Cluster 1: (R1-R2), (R1-R3), (R1-R10)\n  \
    \ 2.  Cluster 2: (R2-R4), (R2-R5), (R3-R5), (R3-R9)\n   3.  Cluster 3: (R4-R6),\
    \ (R4-R7)\n   4.  Cluster 4: (R5-R8)\n   The flow direction here considered is\
    \ from left to right.  For the\n   opposite direction, the same reasoning can\
    \ be applied, and in this\n   example, you get the same clusters partition.\n\
    \   In the end, the following 4 clusters are obtained:\n          Cluster 1\n\
    \                          <>  R2  <>---\n                        /\n        \
    \  ---<>  R1  <>---<>  R3  <>---\n                        \\\n               \
    \          \\\n                          \\\n                           \\\n \
    \                           \\\n                             \\\n          Cluster\
    \ 2\n          ---<>  R2  <>---<>  R4  <>---\n                        \\\n   \
    \       ---<>  R3  <>---<>  R5  <>---\n                        \\\n          \
    \               \\\n                          \\\n                           \\\
    \n          Cluster 3\n                         <>  R6  <>---\n              +------+\
    \ /\n          ---<>  R4  <>\n              +------+ \\\n                    \
    \     <>  R7  <>---\n          Cluster 4\n              +------+\n          ---<>\
    \  R5  <>\n              +------+ \\\n                         <>  R8  <>---\n\
    \                         Figure 3: Clusters Example\n   There are clusters with\
    \ more than two nodes as well as two-node\n   clusters.  In the two-node clusters,\
    \ the loss is on the link (Cluster\n   4).  In more-than-two-node clusters, the\
    \ loss is on the cluster, but\n   we cannot know in which link (Cluster 1, 2,\
    \ or 3).\n   In this way, the calculation of packet loss can be made on a cluster\n\
    \   basis.  Note that the packet counters for each marking period permit\n   calculating\
    \ the packet rate on a cluster basis, so Committed\n   Information Rate (CIR)\
    \ and Excess Information Rate (EIR) could also\n   be deduced on a cluster basis.\n\
    \   Obviously, by combining some clusters in a new connected subnetwork\n   (called\
    \ a \"super cluster\"), the packet-loss rule is still true.\n   In this way, in\
    \ a very large network, there is no need to configure\n   detailed filter criteria\
    \ to inspect the traffic.  You can check a\n   multipoint network and, in case\
    \ of problems, go deep with a step-by-\n   step cluster analysis, but only for\
    \ the cluster or combination of\n   clusters where the problem happens.\n   In\
    \ summary, once a flow is defined, the algorithm to build the\n   clusters partition\
    \ is based on topological information; therefore, it\n   considers all the possible\
    \ links and nodes crossed by the given flow,\n   even if there is no traffic.\
    \  So, if the flow does not enter or\n   traverse all the nodes, the counters\
    \ have a nonzero value for the\n   involved nodes and a zero value for the other\
    \ nodes without traffic;\n   but in the end, all the formulas are still valid.\n\
    \   The algorithm described above is an iterative clustering algorithm,\n   but\
    \ it is also possible to apply a recursive clustering algorithm by\n   using the\
    \ node-node adjacency matrix representation\n   [IEEE-ACM-ToN-MPNPM].\n   The\
    \ complete and mathematical analysis of the possible algorithms for\n   clusters\
    \ partition, including the considerations in terms of\n   efficiency and a comparison\
    \ between the different methods, is in the\n   paper [IEEE-ACM-ToN-MPNPM].\n"
- title: 7.  Timing Aspects
  contents:
  - "7.  Timing Aspects\n   It is important to consider the timing aspects, since\
    \ out-of-order\n   packets happen and have to be handled as well, as described\
    \ in RFC\n   8321 [RFC8321].  However, in a multisource situation, an additional\n\
    \   issue has to be considered.  With multipoint path, the egress nodes\n   will\
    \ receive alternate marked packets in random order from different\n   ingress\
    \ nodes, and this must not affect the measurement.\n   So, if we analyze a multipoint-to-multipoint\
    \ path with more than one\n   marking node, it is important to recognize the reference\
    \ measurement\n   interval.  In general, the measurement interval for describing\
    \ the\n   results is the interval of the marking node that is more aligned with\n\
    \   the start of the measurement, as reported in Figure 4.\n   Note that the mark\
    \ switching approach based on a fixed timer is\n   considered in this document.\n\
    \           time -> start         stop\n           T(R1)   |-------------|\n \
    \          T(R2)     |-------------|\n           T(R3)        |------------|\n\
    \                       Figure 4: Measurement Interval\n   In Figure 4, it is\
    \ assumed that the node with the earliest clock (R1)\n   identifies the right\
    \ starting and ending times of the measurement,\n   but it is just an assumption,\
    \ and other possibilities could occur.\n   So, in this case, T(R1) is the measurement\
    \ interval, and its\n   recognition is essential in order to make comparisons\
    \ with other\n   active/passive/hybrid Packet Loss metrics.\n   When we expand\
    \ to multipoint-to-multipoint flows, we have to consider\n   that all source nodes\
    \ mark the traffic, and this adds more\n   complexity.\n   Regarding the timing\
    \ aspects of the methodology, RFC 8321 [RFC8321]\n   already describes two contributions\
    \ that are taken into account: the\n   clock error between network devices and\
    \ the network delay between\n   measurement points.\n   But we should now consider\
    \ an additional contribution.  Since all\n   source nodes mark the traffic, the\
    \ source measurement intervals can\n   be of different lengths and with different\
    \ offsets, and this mismatch\n   m can be added to d, as shown in Figure 5.\n\
    \   ...BBBBBBBBB | AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA | BBBBBBBBB...\n   \
    \             |         L/2                L/2         |\n                  m\
    \   d  |                      |  d   m\n                       available counting\
    \ interval\n               Figure 5: Timing Aspects for Multipoint Paths\n   So\
    \ the misalignment between the marking source routers gives an\n   additional\
    \ constraint, and the value of m is added to d (which\n   already includes clock\
    \ error and network delay).\n   Thus, three different possible contributions are\
    \ considered: clock\n   error between network devices, network delay between measurement\n\
    \   points, and the misalignment between the marking source routers.\n   In the\
    \ end, the condition that must be satisfied to enable the method\n   to function\
    \ properly is that the available counting interval must be\n   > 0, and that means:\n\
    \   L - 2m - 2d > 0.\n   This formula needs to be verified for each measurement\
    \ point on the\n   multipoint path, where m is misalignment between the marking\
    \ source\n   routers, while d, already introduced in RFC 8321 [RFC8321], takes\n\
    \   into account clock error and network delay between network nodes.\n   Therefore,\
    \ the mismatch between measurement intervals must satisfy\n   this condition.\n\
    \   Note that the timing considerations are valid for both packet loss\n   and\
    \ delay measurements.\n"
- title: 8.  Multipoint Delay and Delay Variation
  contents:
  - "8.  Multipoint Delay and Delay Variation\n   The same line of reasoning can be\
    \ applied to delay and delay\n   variation.  Similarly to the delay measurements\
    \ defined in RFC 8321\n   [RFC8321], the marking batches anchor the samples to\
    \ a particular\n   period, and this is the time reference that can be used.  It\
    \ is\n   important to highlight that both delay and delay-variation\n   measurements\
    \ make sense in a multipoint path.  The delay variation is\n   calculated by considering\
    \ the same packets selected for measuring the\n   delay.\n   In general, it is\
    \ possible to perform delay and delay-variation\n   measurements on the basis\
    \ of multipoint paths or single packets:\n   *  Delay measurements on the basis\
    \ of multipoint paths mean that the\n      delay value is representative of an\
    \ entire multipoint path (e.g.,\n      the whole multipoint network, a cluster,\
    \ or a combination of\n      clusters).\n   *  Delay measurements on a single-packet\
    \ basis mean that you can use\n      a multipoint path just to easily couple packets\
    \ between input and\n      output nodes of a multipoint path, as described in\
    \ the following\n      sections.\n"
- title: 8.1.  Delay Measurements on a Multipoint-Paths Basis
  contents:
  - '8.1.  Delay Measurements on a Multipoint-Paths Basis

    '
- title: 8.1.1.  Single-Marking Measurement
  contents:
  - "8.1.1.  Single-Marking Measurement\n   Mean delay and mean delay-variation measurements\
    \ can also be\n   generalized to the case of multipoint flows.  It is possible\
    \ to\n   compute the average one-way delay of packets in one block, a cluster,\n\
    \   or the entire monitored network.\n   The average latency can be measured as\
    \ the difference between the\n   weighted averages of the mean timestamps of the\
    \ sets of output and\n   input nodes.  This means that, in the calculation, it\
    \ is possible to\n   weigh the timestamps by considering the number of packets\
    \ for each\n   endpoints.\n"
- title: 8.2.  Delay Measurements on a Single-Packet Basis
  contents:
  - '8.2.  Delay Measurements on a Single-Packet Basis

    '
- title: 8.2.1.  Single- and Double-Marking Measurement
  contents:
  - "8.2.1.  Single- and Double-Marking Measurement\n   Delay and delay-variation\
    \ measurements relative to only one picked\n   packet per period (both single\
    \ and double marked) can be performed in\n   the multipoint scenario, with some\
    \ limitations:\n      Single marking based on the first/last packet of the interval\n\
    \      would not work, because it would not be possible to agree on the\n    \
    \  first packet of the interval.\n      Double marking or multiplexed marking\
    \ would work, but each\n      measurement would only give information about the\
    \ delay of a\n      single path.  However, by repeating the measurement multiple\n\
    \      times, it is possible to get information about all the paths in\n     \
    \ the multipoint flow.  This can be done in the case of a point-to-\n      multipoint\
    \ path, but it is more difficult to achieve in the case\n      of a multipoint-to-multipoint\
    \ path because of the multiple source\n      routers.\n   If we would perform\
    \ a delay measurement for more than one picked\n   packet in the same marking\
    \ period, and especially if we want to get\n   delay measurements on a multipoint-to-multipoint\
    \ basis, neither the\n   single- nor the double-marking method is useful in the\
    \ multipoint\n   scenario, since they would not be representative of the entire\
    \ flow.\n   The packets can follow different paths with various delays, and in\n\
    \   general it can be very difficult to recognize marked packets in a\n   multipoint-to-multipoint\
    \ path, especially in the case when there is\n   more than one per period.\n \
    \  A desirable option is to monitor simultaneously all the paths of a\n   multipoint\
    \ path in the same marking period; for this purpose, hashing\n   can be used,\
    \ as reported in the next section.\n"
- title: 8.2.2.  Hashing Selection Method
  contents:
  - "8.2.2.  Hashing Selection Method\n   RFCs 5474 [RFC5474] and 5475 [RFC5475] introduce\
    \ sampling and\n   filtering techniques for IP packet selection.\n   The hash-based\
    \ selection methodologies for delay measurement can work\n   in a multipoint-to-multipoint\
    \ path and can be used either coupled to\n   mean delay or stand-alone.\n   [ALTERNATE-MARKING]\
    \ introduces how to use the hash method (RFCs 5474\n   [RFC5474] and 5475 [RFC5475])\
    \ combined with the Alternate-Marking\n   method for point-to-point flows.  It\
    \ is also called Mixed Hashed\n   Marking: the coupling of a marking method and\
    \ hashing technique is\n   very useful, because the marking batches anchor the\
    \ samples selected\n   with hashing, and this simplifies the correlation of the\
    \ hashing\n   packets along the path.\n   It is possible to use a basic-hash or\
    \ a dynamic-hash method.  One of\n   the challenges of the basic approach is that\
    \ the frequency of the\n   sampled packets may vary considerably.  For this reason,\
    \ the dynamic\n   approach has been introduced for point-to-point flows in order\
    \ to\n   have the desired and almost fixed number of samples for each\n   measurement\
    \ period.  Using the hash-based sampling, the number of\n   samples may vary a\
    \ lot because it depends on the packet rate that is\n   variable.  The dynamic\
    \ approach helps to have an almost fixed number\n   of samples for each marking\
    \ period, and this is a better option for\n   making regular measurements over\
    \ time.  In the hash-based sampling,\n   Alternate Marking is used to create periods,\
    \ so that hash-based\n   samples are divided into batches, which allows anchoring\
    \ the selected\n   samples to their period.  Moreover, in the dynamic hash-based\n\
    \   sampling, by dynamically adapting the length of the hash value, the\n   number\
    \ of samples is bounded in each marking period.  This can be\n   realized by choosing\
    \ the maximum number of samples (NMAX) to be\n   caught in a marking period. \
    \ The algorithm starts with only a few\n   hash bits, which permits selecting\
    \ a greater percentage of packets\n   (e.g., with 0 bits of hash all the packets\
    \ are sampled, with 1 bit of\n   hash half of the packets are sampled, and so\
    \ on).  When the number of\n   selected packets reaches NMAX, a hashing bit is\
    \ added.  As a\n   consequence, the sampling proceeds at half of the original\
    \ rate, and\n   also the packets already selected that do not match the new hash\
    \ are\n   discarded.  This step can be repeated iteratively.  It is assumed\n\
    \   that each sample includes the timestamp (used for delay measurement)\n   and\
    \ the hash value, allowing the management system to match the\n   samples received\
    \ from the two measurement points.  The dynamic\n   process statistically converges\
    \ at the end of a marking period, and\n   the final number of selected samples\
    \ is between NMAX/2 and NMAX.\n   Therefore, the dynamic approach paces the sampling\
    \ rate, allowing to\n   bound the number of sampled packets per sampling period.\n\
    \   In a multipoint environment, the behavior is similar to a point-to-\n   point\
    \ flow.  In particular, in the context of a multipoint-to-\n   multipoint flow,\
    \ the dynamic hash could be the solution for\n   performing delay measurements\
    \ on specific packets and overcoming the\n   single- and double-marking limitations.\n\
    \   The management system receives the samples, including the timestamps\n   and\
    \ the hash value, from all the MPs, and this happens for both\n   point-to-point\
    \ and multipoint-to-multipoint flows.  Then, the longest\n   hash used by the\
    \ MPs is deduced and applied to couple timestamps from\n   either the same packets\
    \ of 2 MPs of a point-to-point path, or the\n   input and output MPs of a cluster\
    \ (or a super cluster or the entire\n   network).  But some considerations are\
    \ needed: if there isn't packet\n   loss, the set of input samples is always equal\
    \ to the set of output\n   samples.  In the case of packet loss, the set of output\
    \ samples can\n   be a subset of input samples, but the method still works because,\
    \ at\n   the end, it is easy to couple the input and output timestamps of each\n\
    \   caught packet using the hash (in particular, the \"unused part of the\n  \
    \ hash\" that should be different for each packet).\n   Therefore, the basic hash\
    \ is logically similar to the double-marking\n   method, and in the case of a\
    \ point-to-point path, double-marking and\n   basic-hash selection are equivalent.\
    \  The dynamic approach scales the\n   number of measurements per interval.  It\
    \ would seem that double\n   marking would also work well if we reduced the interval\
    \ length, but\n   this can be done only for a point-to-point path and not for\
    \ a\n   multipoint path, where we cannot couple the picked packets in a\n   multipoint\
    \ path.  So, in general, if we want to get delay\n   measurements on the basis\
    \ of a multipoint-to-multipoint path, and\n   want to select more than one packet\
    \ per period, double marking cannot\n   be used because we could not be able to\
    \ couple the picked packets\n   between input and output nodes.  On the other\
    \ hand, we can do that by\n   using hashing selection.\n"
- title: 9.  A Closed-Loop Performance-Management Approach
  contents:
  - "9.  A Closed-Loop Performance-Management Approach\n   The Multipoint Alternate-Marking\
    \ framework that is introduced in this\n   document adds flexibility to Performance\
    \ Management (PM), because it\n   can reduce the order of magnitude of the packet\
    \ counters.  This\n   allows an SDN orchestrator to supervise, control, and manage\
    \ PM in\n   large networks.\n   The monitoring network can be considered as a\
    \ whole or split into\n   clusters that are the smallest subnetworks (group-to-group\
    \ segments),\n   maintaining the packet-loss property for each subnetwork.  The\n\
    \   clusters can also be combined in new, connected subnetworks at\n   different\
    \ levels, depending on the detail we want to achieve.\n   An SDN controller or\
    \ a Network Management System (NMS) can calibrate\n   performance measurements,\
    \ since they are aware of the network\n   topology.  They can start without examining\
    \ in depth.  In case of\n   necessity (packet loss is measured or the delay is\
    \ too high), the\n   filtering criteria could be immediately reconfigured in order\
    \ to\n   perform a partition of the network by using clusters and/or different\n\
    \   combinations of clusters.  In this way, the problem can be localized\n   in\
    \ a specific cluster or a single combination of clusters, and a more\n   detailed\
    \ analysis can be performed step by step by successive\n   approximation up to\
    \ a point-to-point flow detailed analysis.  This is\n   the so-called \"closed\
    \ loop\".\n   This approach can be called \"network zooming\" and can be performed\
    \ in\n   two different ways:\n   1) change the traffic filter and select more\
    \ detailed flows;\n   2) activate new measurement points by defining more specified\n\
    \   clusters.\n   The network-zooming approach implies that some filters or rules\
    \ are\n   changed and that therefore there is a transient time to wait once the\n\
    \   new network configuration takes effect.  This time can be determined\n   by\
    \ the Network Orchestrator/Controller, based on the network\n   conditions.\n\
    \   For example, if the network zooming identifies the performance\n   problem\
    \ for the traffic coming from a specific source, we need to\n   recognize the\
    \ marked signal from this specific source node and its\n   relative path.  For\
    \ this purpose, we can activate all the available\n   measurement points and better\
    \ specify the flow filter criteria (i.e.,\n   5-tuple).  As an alternative, it\
    \ can be enough to select packets from\n   the specific source for delay measurements;\
    \ in this case, it is\n   possible to apply the hashing technique, as mentioned\
    \ in the previous\n   sections.\n   [IFIT-FRAMEWORK] defines an architecture where\
    \ the centralized Data\n   Collector and Network Management can apply the intelligent\
    \ and\n   flexible Alternate-Marking algorithm as previously described.\n   As\
    \ for RFC 8321 [RFC8321], it is possible to classify the traffic and\n   mark\
    \ a portion of the total traffic.  For each period, the packet\n   rate and bandwidth\
    \ are calculated from the number of packets.  In\n   this way, the network orchestrator\
    \ becomes aware if the traffic rate\n   surpasses limits.  In addition, more precision\
    \ can be obtained by\n   reducing the marking period; indeed, some implementations\
    \ use a\n   marking period of 1 sec or less.\n   In addition, an SDN controller\
    \ could also collect the measurement\n   history.\n   It is important to mention\
    \ that the Multipoint Alternate Marking\n   framework also helps Traffic Visualization.\
    \  Indeed, this methodology\n   is very useful for identifying which path or cluster\
    \ is crossed by\n   the flow.\n"
- title: 10.  Examples of Application
  contents:
  - "10.  Examples of Application\n   There are application fields where it may be\
    \ useful to take into\n   consideration the Multipoint Alternate Marking:\n  \
    \ VPN:  The IP traffic is selected on an IP-source basis in both\n      directions.\
    \  At the endpoint WAN interface, all the output traffic\n      is counted in\
    \ a single flow.  The input traffic is composed of all\n      the other flows\
    \ aggregated for source address.  So, by considering\n      n endpoints, the monitored\
    \ flows are n (each flow with 1 ingress\n      point and (n-1) egress points)\
    \ instead of n*(n-1) flows (each\n      flow, with 1 ingress point and 1 egress\
    \ point).\n   Mobile Backhaul:  LTE traffic is selected, in the Up direction,\
    \ by\n      the EnodeB source address and, in the Down direction, by the\n   \
    \   EnodeB destination address, because the packets are sent from the\n      Mobile\
    \ Packet Core to the EnodeB.  So the monitored flow is only\n      one per EnodeB\
    \ in both directions.\n   Over The Top (OTT) services:  The traffic is selected,\
    \ in the Down\n      direction, by the source addresses of the packets sent by\
    \ OTT\n      servers.  In the opposite direction (Up), it is selected by the\n\
    \      destination IP addresses of the same servers.  So the monitoring\n    \
    \  is based on a single flow per OTT server in both directions.\n   Enterprise\
    \ SD-WAN:  SD-WAN allows connecting remote branch offices to\n      data centers\
    \ and building higher-performance WANs.  A centralized\n      controller is used\
    \ to set policies and prioritize traffic.  The\n      SD-WAN takes into account\
    \ these policies and the availability of\n      network bandwidth to route traffic.\
    \  This helps ensure that\n      application performance meets Service Level Agreements\
    \ (SLAs).\n      This methodology can also help the path selection for the WAN\n\
    \      connection based on per-cluster and per-flow performance.\n   Note that\
    \ the preceding list is just an example and is not\n   exhaustive.  More applications\
    \ are possible.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This document specifies a method of performing\
    \ measurements that does\n   not directly affect Internet security or applications\
    \ that run on the\n   Internet.  However, implementation of this method must be\
    \ mindful of\n   security and privacy concerns, as explained in RFC 8321 [RFC8321].\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC5474]  Duffield, N., Ed., Chiou, D., Claise,\
    \ B., Greenberg, A.,\n              Grossglauser, M., and J. Rexford, \"A Framework\
    \ for Packet\n              Selection and Reporting\", RFC 5474, DOI 10.17487/RFC5474,\n\
    \              March 2009, <https://www.rfc-editor.org/info/rfc5474>.\n   [RFC5475]\
    \  Zseby, T., Molina, M., Duffield, N., Niccolini, S., and F.\n              Raspall,\
    \ \"Sampling and Filtering Techniques for IP Packet\n              Selection\"\
    , RFC 5475, DOI 10.17487/RFC5475, March 2009,\n              <https://www.rfc-editor.org/info/rfc5475>.\n\
    \   [RFC5644]  Stephan, E., Liang, L., and A. Morton, \"IP Performance\n     \
    \         Metrics (IPPM): Spatial and Multicast\", RFC 5644,\n              DOI\
    \ 10.17487/RFC5644, October 2009,\n              <https://www.rfc-editor.org/info/rfc5644>.\n\
    \   [RFC8321]  Fioccola, G., Ed., Capello, A., Cociglio, M., Castaldelli,\n  \
    \            L., Chen, M., Zheng, L., Mirsky, G., and T. Mizrahi,\n          \
    \    \"Alternate-Marking Method for Passive and Hybrid\n              Performance\
    \ Monitoring\", RFC 8321, DOI 10.17487/RFC8321,\n              January 2018, <https://www.rfc-editor.org/info/rfc8321>.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [ALTERNATE-MARKING]\n              Mizrahi,\
    \ T., Arad, C., Fioccola, G., Cociglio, M., Chen,\n              M., Zheng, L.,\
    \ and G. Mirsky, \"Compact Alternate Marking\n              Methods for Passive\
    \ and Hybrid Performance Monitoring\",\n              Work in Progress, Internet-Draft,\
    \ draft-mizrahi-ippm-\n              compact-alternate-marking-05, 6 July 2019,\n\
    \              <https://tools.ietf.org/html/draft-mizrahi-ippm-compact-\n    \
    \          alternate-marking-05>.\n   [ENHANCED-ALTERNATE-MARKING]\n         \
    \     Zhou, T., Fioccola, G., Lee, S., Cociglio, M., and W. Li,\n            \
    \  \"Enhanced Alternate Marking Method\", Work in Progress,\n              Internet-Draft,\
    \ draft-zhou-ippm-enhanced-alternate-\n              marking-05, 13 July 2020,\
    \ <https://tools.ietf.org/html/\n              draft-zhou-ippm-enhanced-alternate-marking-05>.\n\
    \   [IEEE-ACM-ToN-MPNPM]\n              Cociglio, M., Fioccola, G., Marchetto,\
    \ G., Sapio, A., and\n              R. Sisto, \"Multipoint Passive Monitoring\
    \ in Packet\n              Networks\", IEEE/ACM Transactions on Networking vol.\
    \ 27,\n              no. 6, pp. 2377-2390, DOI 10.1109/TNET.2019.2950157,\n  \
    \            December 2019,\n              <https://doi.org/10.1109/TNET.2019.2950157>.\n\
    \   [IEEE-Network-PNPM]\n              Mizrahi, T., Navon, G., Fioccola, G., Cociglio,\
    \ M., Chen,\n              M., and G. Mirsky, \"AM-PM: Efficient Network Telemetry\n\
    \              using Alternate Marking\", IEEE Network vol. 33, no. 4,\n     \
    \         pp. 155-161, DOI 10.1109/MNET.2019.1800152, July 2019,\n           \
    \   <https://doi.org/10.1109/MNET.2019.1800152>.\n   [IFIT-FRAMEWORK]\n      \
    \        Song, H., Qin, F., Chen, H., Jin, J., and J. Shin, \"In-\n          \
    \    situ Flow Information Telemetry\", Work in Progress,\n              Internet-Draft,\
    \ draft-song-opsawg-ifit-framework-12, 14\n              April 2020, <https://tools.ietf.org/html/draft-song-\n\
    \              opsawg-ifit-framework-12>.\n   [RFC7011]  Claise, B., Ed., Trammell,\
    \ B., Ed., and P. Aitken,\n              \"Specification of the IP Flow Information\
    \ Export (IPFIX)\n              Protocol for the Exchange of Flow Information\"\
    , STD 77,\n              RFC 7011, DOI 10.17487/RFC7011, September 2013,\n   \
    \           <https://www.rfc-editor.org/info/rfc7011>.\n   [ROUTE-ASSESSMENT]\n\
    \              Alvarez-Hamelin, J., Morton, A., Fabini, J., Pignataro,\n     \
    \         C., and R. Geib, \"Advanced Unidirectional Route Assessment\n      \
    \        (AURA)\", Work in Progress, Internet-Draft, draft-ietf-\n           \
    \   ippm-route-10, 13 August 2020,\n              <https://tools.ietf.org/html/draft-ietf-ippm-route-10>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Al Morton, Tal Mizrahi,\
    \ and Rachel\n   Huang for the precious contributions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Giuseppe Fioccola (editor)\n   Huawei Technologies\n \
    \  Riesstrasse, 25\n   80992 Munich\n   Germany\n   Email: giuseppe.fioccola@huawei.com\n\
    \   Mauro Cociglio\n   Telecom Italia\n   Via Reiss Romoli, 274\n   10148 Torino\n\
    \   Italy\n   Email: mauro.cociglio@telecomitalia.it\n   Amedeo Sapio\n   Intel\
    \ Corporation\n   4750 Patrick Henry Dr.\n   Santa Clara, CA 95054\n   United\
    \ States of America\n   Email: amedeo.sapio@intel.com\n   Riccardo Sisto\n   Politecnico\
    \ di Torino\n   Corso Duca degli Abruzzi, 24\n   10129 Torino\n"
