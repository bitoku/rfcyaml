- title: __initial_text__
  contents:
  - " CBOR Object Signing and Encryption (COSE) and JSON Object Signing and\n   Encryption\
    \ (JOSE) Registrations for Web Authentication (WebAuthn)\n                   \
    \            Algorithms\n"
- title: Abstract
  contents:
  - "Abstract\n   The W3C Web Authentication (WebAuthn) specification and the FIDO\n\
    \   Alliance FIDO2 Client to Authenticator Protocol (CTAP) specification\n   use\
    \ CBOR Object Signing and Encryption (COSE) algorithm identifiers.\n   This specification\
    \ registers the following algorithms (which are used\n   by WebAuthn and CTAP\
    \ implementations) in the IANA \"COSE Algorithms\"\n   registry: RSASSA-PKCS1-v1_5\
    \ using SHA-256, SHA-384, SHA-512, and SHA-\n   1; and Elliptic Curve Digital\
    \ Signature Algorithm (ECDSA) using the\n   secp256k1 curve and SHA-256.  It registers\
    \ the secp256k1 elliptic\n   curve in the IANA \"COSE Elliptic Curves\" registry.\
    \  Also, for use\n   with JSON Object Signing and Encryption (JOSE), it registers\
    \ the\n   algorithm ECDSA using the secp256k1 curve and SHA-256 in the IANA\n\
    \   \"JSON Web Signature and Encryption Algorithms\" registry and the\n   secp256k1\
    \ elliptic curve in the IANA \"JSON Web Key Elliptic Curve\"\n   registry.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8812.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Requirements Notation and\
    \ Conventions\n   2.  RSASSA-PKCS1-v1_5 Signature Algorithm\n   3.  Using secp256k1\
    \ with JOSE and COSE\n     3.1.  JOSE and COSE secp256k1 Curve Key Representations\n\
    \     3.2.  ECDSA Signature with secp256k1 Curve\n     3.3.  Other Uses of the\
    \ secp256k1 Elliptic Curve\n   4.  IANA Considerations\n     4.1.  COSE Algorithms\
    \ Registrations\n     4.2.  COSE Elliptic Curves Registrations\n     4.3.  JOSE\
    \ Algorithms Registrations\n     4.4.  JSON Web Key Elliptic Curves Registrations\n\
    \   5.  Security Considerations\n     5.1.  RSA Key Size Security Considerations\n\
    \     5.2.  RSASSA-PKCS1-v1_5 with SHA-2 Security Considerations\n     5.3.  RSASSA-PKCS1-v1_5\
    \ with SHA-1 Security Considerations\n     5.4.  secp256k1 Security Considerations\n\
    \   6.  References\n     6.1.  Normative References\n     6.2.  Informative References\n\
    \   Acknowledgements\n   Author's Address\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This specification defines how to use several algorithms\
    \ with CBOR\n   Object Signing and Encryption (COSE) [RFC8152] that are used by\n\
    \   implementations of the W3C Web Authentication (WebAuthn) [WebAuthn]\n   and\
    \ FIDO Alliance FIDO2 Client to Authenticator Protocol (CTAP)\n   [CTAP] specifications.\
    \  This specification registers these algorithms\n   in the IANA \"COSE Algorithms\"\
    \ registry [IANA.COSE.Algorithms] and\n   registers an elliptic curve in the IANA\
    \ \"COSE Elliptic Curves\"\n   registry [IANA.COSE.Curves].  This specification\
    \ also registers a\n   corresponding algorithm for use with JSON Object Signing\
    \ and\n   Encryption (JOSE) [RFC7515] in the IANA \"JSON Web Signature and\n \
    \  Encryption Algorithms\" registry [IANA.JOSE.Algorithms] and registers\n   an\
    \ elliptic curve in the IANA \"JSON Web Key Elliptic Curve\" registry\n   [IANA.JOSE.Curves].\n"
- title: 1.1.  Requirements Notation and Conventions
  contents:
  - "1.1.  Requirements Notation and Conventions\n   The key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this\
    \ document are to be interpreted as described in\n   BCP 14 [RFC2119] [RFC8174]\
    \ when, and only when, they appear in all\n   capitals, as shown here.\n"
- title: 2.  RSASSA-PKCS1-v1_5 Signature Algorithm
  contents:
  - "2.  RSASSA-PKCS1-v1_5 Signature Algorithm\n   The RSASSA-PKCS1-v1_5 signature\
    \ algorithm is defined in [RFC8017].\n   The RSASSA-PKCS1-v1_5 signature algorithm\
    \ is parameterized with a\n   hash function (h).\n   A key of size 2048 bits or\
    \ larger MUST be used with these algorithms.\n   Implementations need to check\
    \ that the key type is 'RSA' when\n   creating or verifying a signature.\n   The\
    \ RSASSA-PKCS1-v1_5 algorithms specified in this document are in\n   the following\
    \ table.\n      | Name  | Value  | Hash    | Description       | Recommended |\n\
    \      | RS256 | -257   | SHA-256 | RSASSA-PKCS1-v1_5 | No          |\n      |\
    \ RS384 | -258   | SHA-384 | RSASSA-PKCS1-v1_5 | No          |\n      | RS512\
    \ | -259   | SHA-512 | RSASSA-PKCS1-v1_5 | No          |\n      | RS1   | -65535\
    \ | SHA-1   | RSASSA-PKCS1-v1_5 | Deprecated  |\n               Table 1: RSASSA-PKCS1-v1_5\
    \ Algorithm Values\n   Security considerations for use of the first three algorithms\
    \ are in\n   Section 5.2.  Security considerations for use of the last algorithm\n\
    \   are in Section 5.3.\n   Note that these algorithms are already present in\
    \ the IANA \"JSON Web\n   Signature and Encryption Algorithms\" registry [IANA.JOSE.Algorithms],\n\
    \   and so these registrations are only for the IANA \"COSE Algorithms\"\n   registry\
    \ [IANA.COSE.Algorithms].\n"
- title: 3.  Using secp256k1 with JOSE and COSE
  contents:
  - "3.  Using secp256k1 with JOSE and COSE\n   This section defines algorithm encodings\
    \ and representations enabling\n   the Standards for Efficient Cryptography Group\
    \ (SECG) elliptic curve\n   secp256k1 [SEC2] to be used for JOSE [RFC7515] and\
    \ COSE [RFC8152]\n   messages.\n"
- title: 3.1.  JOSE and COSE secp256k1 Curve Key Representations
  contents:
  - "3.1.  JOSE and COSE secp256k1 Curve Key Representations\n   The SECG elliptic\
    \ curve secp256k1 [SEC2] is represented in a JSON Web\n   Key (JWK) [RFC7517]\
    \ using these values:\n   *  \"kty\": \"EC\"\n   *  \"crv\": \"secp256k1\"\n \
    \  plus the values needed to represent the curve point, as defined in\n   Section\
    \ 6.2.1 of [RFC7518].  As a compressed point encoding\n   representation is not\
    \ defined for JWK elliptic curve points, the\n   uncompressed point encoding defined\
    \ there MUST be used.  The \"x\" and\n   \"y\" values represented MUST both be\
    \ exactly 256 bits, with any\n   leading zeros preserved.  Other optional values\
    \ such as \"alg\" MAY\n   also be present.\n   It is represented in a COSE_Key\
    \ [RFC8152] using these values:\n   *  \"kty\" (1): \"EC2\" (2)\n   *  \"crv\"\
    \ (-1): \"secp256k1\" (8)\n   plus the values needed to represent the curve point,\
    \ as defined in\n   Section 13.1.1 of [RFC8152].  Either the uncompressed or compressed\n\
    \   point encoding representations defined there can be used.  The \"x\"\n   value\
    \ represented MUST be exactly 256 bits, with any leading zeros\n   preserved.\
    \  If the uncompressed representation is used, the \"y\" value\n   represented\
    \ MUST likewise be exactly 256 bits, with any leading zeros\n   preserved; if\
    \ the compressed representation is used, the \"y\" value is\n   a boolean value,\
    \ as specified in Section 13.1.1 of [RFC8152].  Other\n   optional values such\
    \ as \"alg\" (3) MAY also be present.\n"
- title: 3.2.  ECDSA Signature with secp256k1 Curve
  contents:
  - "3.2.  ECDSA Signature with secp256k1 Curve\n   The ECDSA signature algorithm\
    \ is defined in [DSS].  This\n   specification defines the \"ES256K\" algorithm\
    \ identifier, which is\n   used to specify the use of ECDSA with the secp256k1\
    \ curve and the\n   SHA-256 [DSS] cryptographic hash function.  Implementations\
    \ need to\n   check that the key type is \"EC\" for JOSE or \"EC2\" (2) for COSE\
    \ and\n   that the curve of the key is secp256k1 when creating or verifying a\n\
    \   signature.\n   The ECDSA secp256k1 SHA-256 digital signature is generated\
    \ as\n   follows:\n   1.  Generate a digital signature of the JWS Signing Input\
    \ or the COSE\n       Sig_structure using ECDSA secp256k1 SHA-256 with the desired\n\
    \       private key.  The output will be the pair (R, S), where R and S\n    \
    \   are 256-bit unsigned integers.\n   2.  Turn R and S into octet sequences in\
    \ big-endian order, with each\n       array being 32 octets long.  The octet sequence\
    \ representations\n       MUST NOT be shortened to omit any leading zero octets\
    \ contained\n       in the values.\n   3.  Concatenate the two octet sequences\
    \ in the order R and then S.\n       (Note that many ECDSA implementations will\
    \ directly produce this\n       concatenation as their output.)\n   4.  The resulting\
    \ 64-octet sequence is the JWS Signature or COSE\n       signature value.\n  \
    \ Implementations SHOULD use a deterministic algorithm to generate the\n   ECDSA\
    \ nonce, k, such as the algorithm defined in [RFC6979].  However,\n   in situations\
    \ where devices are vulnerable to physical attacks,\n   deterministic ECDSA has\
    \ been shown to be susceptible to fault\n   injection attacks [KUDELSKI17] [EURO-SP18].\
    \  Where this is a\n   possibility, implementations SHOULD implement appropriate\n\
    \   countermeasures.  Where there are specific certification requirements\n  \
    \ (such as FIPS approval), implementors should check whether\n   deterministic\
    \ ECDSA is an approved nonce generation method.\n   The ECDSA secp256k1 SHA-256\
    \ algorithm specified in this document uses\n   these identifiers:\n         |\
    \ Name   | Value | Description           | Recommended |\n         | ES256K |\
    \ -47   | ECDSA using secp256k1 | No          |\n         |        |       | curve\
    \ and SHA-256     |             |\n                     Table 2: ECDSA Algorithm\
    \ Values\n   When using a JWK or COSE_Key for this algorithm, the following checks\n\
    \   are made:\n   *  The \"kty\" field MUST be present, and it MUST be \"EC\"\
    \ for JOSE or\n      \"EC2\" for COSE.\n   *  The \"crv\" field MUST be present,\
    \ and it MUST represent the\n      \"secp256k1\" elliptic curve.\n   *  If the\
    \ \"alg\" field is present, it MUST represent the \"ES256K\"\n      algorithm.\n\
    \   *  If the \"key_ops\" field is present, it MUST include \"sign\" when\n  \
    \    creating an ECDSA signature.\n   *  If the \"key_ops\" field is present,\
    \ it MUST include \"verify\" when\n      verifying an ECDSA signature.\n   * \
    \ If the JWK \"use\" field is present, its value MUST be \"sig\".\n"
- title: 3.3.  Other Uses of the secp256k1 Elliptic Curve
  contents:
  - "3.3.  Other Uses of the secp256k1 Elliptic Curve\n   This specification defines\
    \ how to use the secp256k1 curve for ECDSA\n   signatures for both JOSE and COSE\
    \ implementations.  While in theory\n   the curve could also be used for ECDH-ES\
    \ key agreement, it is beyond\n   the scope of this specification to state whether\
    \ this is or is not\n   advisable.  Thus, whether or not to recommend its use\
    \ with ECDH-ES is\n   left for experts to decide in future specifications.\n \
    \  When used for ECDSA, the secp256k1 curve MUST be used only with the\n   \"\
    ES256K\" algorithm identifier and not any others, including not with\n   the COSE\
    \ \"ES256\" identifier.  Note that the \"ES256K\" algorithm\n   identifier needed\
    \ to be introduced for JOSE to sign with the\n   secp256k1 curve because the JOSE\
    \ \"ES256\" algorithm is defined to be\n   used only with the P-256 curve.  The\
    \ COSE treatment of how to sign\n   with secp256k1 is intentionally parallel to\
    \ that for JOSE, where the\n   secp256k1 curve MUST be used with the \"ES256K\"\
    \ algorithm identifier.\n"
- title: 4.  IANA Considerations
  contents:
  - '4.  IANA Considerations

    '
- title: 4.1.  COSE Algorithms Registrations
  contents:
  - "4.1.  COSE Algorithms Registrations\n   IANA has registered the following values\
    \ in the \"COSE Algorithms\"\n   registry [IANA.COSE.Algorithms].\n   Name:  RS256\n\
    \   Value:  -257\n   Description:  RSASSA-PKCS1-v1_5 using SHA-256\n   Change\
    \ Controller:  IESG\n   Reference:  Section 2 of RFC 8812\n   Recommended:  No\n\
    \   Name:  RS384\n   Value:  -258\n   Description:  RSASSA-PKCS1-v1_5 using SHA-384\n\
    \   Change Controller:  IESG\n   Reference:  Section 2 of RFC 8812\n   Recommended:\
    \  No\n   Name:  RS512\n   Value:  -259\n   Description:  RSASSA-PKCS1-v1_5 using\
    \ SHA-512\n   Change Controller:  IESG\n   Reference:  Section 2 of RFC 8812\n\
    \   Recommended:  No\n   Name:  RS1\n   Value:  -65535\n   Description:  RSASSA-PKCS1-v1_5\
    \ using SHA-1\n   Change Controller:  IESG\n   Reference:  Section 2 of RFC 8812\n\
    \   Recommended:  Deprecated\n   Name:  ES256K\n   Value:  -47\n   Description:\
    \  ECDSA using secp256k1 curve and SHA-256\n   Change Controller:  IESG\n   Reference:\
    \  Section 3.2 of RFC 8812\n   Recommended:  No\n"
- title: 4.2.  COSE Elliptic Curves Registrations
  contents:
  - "4.2.  COSE Elliptic Curves Registrations\n   IANA has registered the following\
    \ value in the \"COSE Elliptic Curves\"\n   registry [IANA.COSE.Curves].\n   Name:\
    \  secp256k1\n   Value:  8\n   Key Type:  EC2\n   Description:  SECG secp256k1\
    \ curve\n   Change Controller:  IESG\n   Reference:  Section 3.1 of RFC 8812\n\
    \   Recommended:  No\n"
- title: 4.3.  JOSE Algorithms Registrations
  contents:
  - "4.3.  JOSE Algorithms Registrations\n   IANA has registered the following value\
    \ in the \"JSON Web Signature\n   and Encryption Algorithms\" registry [IANA.JOSE.Algorithms].\n\
    \   Algorithm Name:  ES256K\n   Algorithm Description:  ECDSA using secp256k1\
    \ curve and SHA-256\n   Algorithm Usage Location(s):  alg\n   JOSE Implementation\
    \ Requirements:  Optional\n   Change Controller:  IESG\n   Reference:  Section\
    \ 3.2 of RFC 8812\n   Algorithm Analysis Document(s):  [SEC2]\n"
- title: 4.4.  JSON Web Key Elliptic Curves Registrations
  contents:
  - "4.4.  JSON Web Key Elliptic Curves Registrations\n   IANA has registered the\
    \ following value in the \"JSON Web Key Elliptic\n   Curve\" registry [IANA.JOSE.Curves].\n\
    \   Curve Name:  secp256k1\n   Curve Description:  SECG secp256k1 curve\n   JOSE\
    \ Implementation Requirements:  Optional\n   Change Controller:  IESG\n   Specification\
    \ Document(s):  Section 3.1 of RFC 8812\n"
- title: 5.  Security Considerations
  contents:
  - '5.  Security Considerations

    '
- title: 5.1.  RSA Key Size Security Considerations
  contents:
  - "5.1.  RSA Key Size Security Considerations\n   The security considerations on\
    \ key sizes for RSA algorithms from\n   Section 6.1 of [RFC8230] also apply to\
    \ the RSA algorithms in this\n   specification.\n"
- title: 5.2.  RSASSA-PKCS1-v1_5 with SHA-2 Security Considerations
  contents:
  - "5.2.  RSASSA-PKCS1-v1_5 with SHA-2 Security Considerations\n   The security considerations\
    \ on the use of RSASSA-PKCS1-v1_5 with\n   SHA-2 hash functions (SHA-256, SHA-384,\
    \ and SHA-512) from Section 8.3\n   of [RFC7518] also apply to their use in this\
    \ specification.  For that\n   reason, these algorithms are registered as being\
    \ \"Not Recommended\".\n   Likewise, the exponent restrictions described in Section\
    \ 8.3 of\n   [RFC7518] also apply.\n"
- title: 5.3.  RSASSA-PKCS1-v1_5 with SHA-1 Security Considerations
  contents:
  - "5.3.  RSASSA-PKCS1-v1_5 with SHA-1 Security Considerations\n   The security considerations\
    \ on the use of the SHA-1 hash function\n   from [RFC6194] apply in this specification.\
    \  For that reason, the\n   \"RS1\" algorithm is registered as \"Deprecated\"\
    .  Likewise, the\n   exponent restrictions described in Section 8.3 of [RFC7518]\
    \ also\n   apply.\n   A COSE algorithm identifier for this algorithm is nonetheless\
    \ being\n   registered because deployed Trusted Platform Modules (TPMs) continue\n\
    \   to use it; therefore, WebAuthn implementations need a COSE algorithm\n   identifier\
    \ for \"RS1\" when TPM attestations using this algorithm are\n   being represented.\
    \  New COSE applications and protocols MUST NOT use\n   this algorithm.\n"
- title: 5.4.  secp256k1 Security Considerations
  contents:
  - "5.4.  secp256k1 Security Considerations\n   Care should be taken that a secp256k1\
    \ key is not mistaken for a P-256\n   [RFC7518] key, given that their representations\
    \ are the same except\n   for the \"crv\" value.  As described in Section 8.1.1\
    \ of [RFC8152], we\n   currently do not have any way to deal with this attack\
    \ except to\n   restrict the set of curves that can be used.\n   The procedures\
    \ and security considerations described in the [SEC1],\n   [SEC2], and [DSS] specifications\
    \ apply to implementations of this\n   specification.\n   Timing side-channel\
    \ attacks are possible if the implementation of\n   scalar multiplication over\
    \ the curve does not execute in constant\n   time.\n   There are theoretical weaknesses\
    \ with this curve that could result in\n   future attacks.  While these potential\
    \ weaknesses are not unique to\n   this curve, they are the reason that this curve\
    \ is registered as\n   \"Recommended: No\".\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [DSS]      National Institute of Standards and\
    \ Technology (NIST),\n              \"Digital Signature Standard (DSS)\", FIPS\
    \ PUB 186-4,\n              DOI 10.6028/NIST.FIPS.186-4, July 2013,\n        \
    \      <https://doi.org/10.6028/NIST.FIPS.186-4>.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC6194]  Polk, T., Chen,\
    \ L., Turner, S., and P. Hoffman, \"Security\n              Considerations for\
    \ the SHA-0 and SHA-1 Message-Digest\n              Algorithms\", RFC 6194, DOI\
    \ 10.17487/RFC6194, March 2011,\n              <https://www.rfc-editor.org/info/rfc6194>.\n\
    \   [RFC7515]  Jones, M., Bradley, J., and N. Sakimura, \"JSON Web\n         \
    \     Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May\n              2015,\
    \ <https://www.rfc-editor.org/info/rfc7515>.\n   [RFC7517]  Jones, M., \"JSON\
    \ Web Key (JWK)\", RFC 7517,\n              DOI 10.17487/RFC7517, May 2015,\n\
    \              <https://www.rfc-editor.org/info/rfc7517>.\n   [RFC7518]  Jones,\
    \ M., \"JSON Web Algorithms (JWA)\", RFC 7518,\n              DOI 10.17487/RFC7518,\
    \ May 2015,\n              <https://www.rfc-editor.org/info/rfc7518>.\n   [RFC8017]\
    \  Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch,\n              \"\
    PKCS #1: RSA Cryptography Specifications Version 2.2\",\n              RFC 8017,\
    \ DOI 10.17487/RFC8017, November 2016,\n              <https://www.rfc-editor.org/info/rfc8017>.\n\
    \   [RFC8152]  Schaad, J., \"CBOR Object Signing and Encryption (COSE)\",\n  \
    \            RFC 8152, DOI 10.17487/RFC8152, July 2017,\n              <https://www.rfc-editor.org/info/rfc8152>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8230]  Jones,\
    \ M., \"Using RSA Algorithms with CBOR Object Signing\n              and Encryption\
    \ (COSE) Messages\", RFC 8230,\n              DOI 10.17487/RFC8230, September\
    \ 2017,\n              <https://www.rfc-editor.org/info/rfc8230>.\n   [SEC1] \
    \    Standards for Efficient Cryptography Group, \"SEC 1:\n              Elliptic\
    \ Curve Cryptography\", Version 2.0, May 2009,\n              <https://www.secg.org/sec1-v2.pdf>.\n\
    \   [SEC2]     Standards for Efficient Cryptography Group, \"SEC 2:\n        \
    \      Recommended Elliptic Curve Domain Parameters\",\n              Version\
    \ 2.0, January 2010,\n              <https://www.secg.org/sec2-v2.pdf>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [CTAP]     Brand, C., Czeskis, A., Ehrensv\xE4\
    rd, J., Jones, M., Kumar,\n              A., Lindemann, R., Powers, A., and J.\
    \ Verrept, \"Client to\n              Authenticator Protocol (CTAP)\", FIDO Alliance\
    \ Proposed\n              Standard, January 2019, <https://fidoalliance.org/specs/\n\
    \              fido-v2.0-ps-20190130/fido-client-to-authenticator-\n         \
    \     protocol-v2.0-ps-20190130.html>.\n   [EURO-SP18]\n              Poddebniak,\
    \ D., Somorovsky, J., Schinzel, S., Lochter, M.,\n              and P. R\xF6sler,\
    \ \"Attacking Deterministic Signature Schemes\n              using Fault Attacks\"\
    , 2018 IEEE European Symposium on\n              Security and Privacy (EuroS&P),\n\
    \              DOI 10.1109/EuroSP.2018.00031, April 2018,\n              <https://ieeexplore.ieee.org/document/8406609>.\n\
    \   [IANA.COSE.Algorithms]\n              IANA, \"COSE Algorithms\",\n       \
    \       <https://www.iana.org/assignments/cose>.\n   [IANA.COSE.Curves]\n    \
    \          IANA, \"COSE Elliptic Curves\",\n              <https://www.iana.org/assignments/cose>.\n\
    \   [IANA.JOSE.Algorithms]\n              IANA, \"JSON Web Signature and Encryption\
    \ Algorithms\",\n              <https://www.iana.org/assignments/jose>.\n   [IANA.JOSE.Curves]\n\
    \              IANA, \"JSON Web Key Elliptic Curve\",\n              <https://www.iana.org/assignments/jose>.\n\
    \   [KUDELSKI17]\n              Romailler, Y., \"How to Defeat Ed25519 and EdDSA\
    \ Using\n              Faults\", Kudelski Security Research, October 2017,\n \
    \             <https://research.kudelskisecurity.com/2017/10/04/\n           \
    \   defeating-eddsa-with-faults/>.\n   [RFC6979]  Pornin, T., \"Deterministic\
    \ Usage of the Digital Signature\n              Algorithm (DSA) and Elliptic Curve\
    \ Digital Signature\n              Algorithm (ECDSA)\", RFC 6979, DOI 10.17487/RFC6979,\
    \ August\n              2013, <https://www.rfc-editor.org/info/rfc6979>.\n   [WebAuthn]\
    \ Balfanz, D., Czeskis, A., Hodges, J., Jones, J.C., Jones,\n              M.,\
    \ Kumar, A., Liao, A., Lindemann, R., and E. Lundberg,\n              \"Web Authentication:\
    \ An API for accessing Public Key\n              Credentials - Level 1\", W3C\
    \ Recommendation, March 2019,\n              <https://www.w3.org/TR/2019/REC-webauthn-1-20190304/>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Roman Danyliw, Linda Dunbar, Stephen Farrell,\
    \ John Fontana,\n   Jeff Hodges, Kevin Jacobs, J.C. Jones, Benjamin Kaduk, Murray\n\
    \   Kucherawy, Neil Madden, John Mattsson, Matthew Miller, Tony Nadalin,\n   Matt\
    \ Palmer, Eric Rescorla, Rich Salz, Jim Schaad, Goeran Selander,\n   Wendy Seltzer,\
    \ Sean Turner, and Samuel Weiler for their roles in\n   registering these algorithm\
    \ identifiers.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Michael B. Jones\n   Microsoft\n"
