- title: __initial_text__
  contents:
  - '  Guidelines for Extending the Extensible Provisioning Protocol (EPP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Extensible Provisioning Protocol (EPP) is an application layer\n\
    \   client-server protocol for the provisioning and management of objects\n  \
    \ stored in a shared central repository.  Specified in XML, the\n   protocol defines\
    \ generic object management operations and an\n   extensible framework that maps\
    \ protocol operations to objects.  This\n   document presents guidelines for use\
    \ of EPP's extension mechanisms to\n   define new features and object management\
    \ capabilities.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n       1.1.  Conventions Used In This Document. . . . . . . .\
    \ . . .  2\n   2.  Principles of Protocol Extension . . . . . . . . . . . . .\
    \ .  3\n       2.1.  Documenting Extensions . . . . . . . . . . . . . . . .  3\n\
    \       2.2.  Identifying Extensions . . . . . . . . . . . . . . . .  4\n    \
    \         2.2.1.  Standards Track Extensions . . . . . . . . . .  4\n        \
    \     2.2.2.  Other Extensions . . . . . . . . . . . . . . .  5\n       2.3. \
    \ Extension Announcement and Selection . . . . . . . . .  5\n       2.4.  Protocol-level\
    \ Extension . . . . . . . . . . . . . . .  7\n       2.5.  Object-level Extension\
    \ . . . . . . . . . . . . . . . .  7\n       2.6.  Command-Response Extension\
    \ . . . . . . . . . . . . . .  7\n       2.7.  Authentication Information Extension\
    \ . . . . . . . . .  7\n   3.  Selecting an Extension Mechanism . . . . . . .\
    \ . . . . . . .  8\n       3.1.   Mapping and Extension Archives  . . . . . .\
    \ . . . . .  9\n   4.  Internationalization Considerations  . . . . . . . . .\
    \ . . .  9\n   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . .\
    \ . 10\n   6.  Security Considerations  . . . . . . . . . . . . . . . . . . 10\n\
    \   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . 10\n    \
    \   7.1.  Normative References . . . . . . . . . . . . . . . . . 10\n       7.2.\
    \  Informative References . . . . . . . . . . . . . . . . 11\n   8.  URIs . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n   9.  Author's Address\
    \ . . . . . . . . . . . . . . . . . . . . . . 12\n   10. Full Copyright Statement\
    \ . . . . . . . . . . . . . . . . . . 13\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Extensible Provisioning Protocol (EPP, [2]) was originally\n\
    \   designed to provide a standard Internet domain name registration\n   protocol\
    \ for use between Internet domain name registrars and domain\n   name registries.\
    \  However, specific design decisions were made to\n   ensure that the protocol\
    \ could also be used in other provisioning\n   environments.  Specifically:\n\
    \   o  Extensibility has been a design goal from the very beginning.  EPP\n  \
    \    is represented in the Extensible Markup Language (XML, [3]), and\n      is\
    \ specified in XML Schema ([4] and [5]) with XML namespaces [6]\n      used to\
    \ identify protocol grammars.\n   o  The EPP core protocol specification describes\
    \ general protocol\n      functions, not objects to be managed by the protocol.\
    \  Managed\n      object definitions, such as the mapping for Internet domain\
    \ names\n      [10] (itself a protocol extension), are loosely coupled to the\n\
    \      core specification.\n   o  A concentrated effort was made to separate required\
    \ minimum\n      protocol functionality from object management operating logic.\n\
    \   o  Several extension mechanisms were included to allow designers to\n    \
    \  add new features or to customize existing features for different\n      operating\
    \ environments.\n   This document describes EPP's extensibility features in detail\
    \ and\n   provides guidelines for their use.  Though written specifically for\n\
    \   protocol designers considering EPP as the solution to a provisioning\n   problem,\
    \ anyone interested in using XML to represent IETF protocols\n   might find these\
    \ guidelines useful.\n   XML is case sensitive.  Unless stated otherwise, XML\
    \ instances and\n   examples provided in this document MUST be interpreted in\
    \ the\n   character case presented to develop a conforming implementation.\n"
- title: 1.1.  Conventions Used In This Document
  contents:
  - "1.1.  Conventions Used In This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [1].\n   In examples, \"C:\" represents lines sent by a protocol\
    \ client and \"S:\"\n   represents lines returned by a protocol server.  Indentation\
    \ and\n   white space in examples is provided only to illustrate element\n   relationships\
    \ and is not a REQUIRED feature of this specification.\n"
- title: 2.  Principles of Protocol Extension
  contents:
  - "2.  Principles of Protocol Extension\n   The EPP extension model is based on\
    \ the XML representation for a\n   wildcard schema component using an <any> element\
    \ information item (as\n   described in section 3.10.2 of [4]) and XML namespaces\
    \ [6].  This\n   section provides guidelines for the development of protocol\n\
    \   extensions and describes the extension model in detail.\n   Extending a protocol\
    \ implies the addition of features without\n   changing the protocol itself. \
    \ In EPP that means that an extension\n   MUST NOT alter an existing protocol\
    \ schema as changes may result in\n   new versions of an existing schema, not\
    \ extensions of an existing\n   schema.  For example, a designer MUST NOT add\
    \ new elements to an\n   existing schema and call the result an \"extension\"\
    \ of the protocol.\n   The result is a new, non-backwards-compatible version of\
    \ an existing\n   schema.  Extensions MUST adhere to the principles described\
    \ in this\n   section to be considered valid protocol extensions.\n   EPP extensions\
    \ MUST be specified in XML.  This ensures that parsers\n   capable of processing\
    \ EPP structures will also be capable of\n   processing EPP extensions.  Guidelines\
    \ for the use of XML in IETF\n   protocols (thus good information for extension\
    \ designers) can be\n   found in RFC 3470 [11].\n   A designer MUST remember that\
    \ extensions themselves MAY also be\n   extensible.  A good chain of extensions\
    \ is one in which the protocol\n   schemas evolve from general functionality to\
    \ more specific (perhaps\n   even more limited) functionality.\n"
- title: 2.1.  Documenting Extensions
  contents:
  - "2.1.  Documenting Extensions\n   The EPP core specification [2] has an appendix\
    \ that contains a\n   suggested outline to document protocol extensions.  Designers\
    \ are\n   free to use this template or any other format as they see fit, but\n\
    \   the extension document SHOULD at a minimum address all of the topics\n   listed\
    \ in the template.\n   Extension designers need to consider the intended audience\
    \ and\n   consumers of their extensions.  Extensions MAY be documented as\n  \
    \ Internet-Draft and RFC documents if the designer is facing\n   requirements\
    \ for coordination, interoperability, and broad\n   distribution, though the intended\
    \ maturity level (informational,\n   proposed standard, etc.) largely depends\
    \ on what is being extended\n   and the amount of general interest in the extension.\
    \  An extension to\n   a standards-track specification with broad interest might\
    \ well be a\n   candidate for standards track publication, whereas an extension\
    \ to a\n   standards track specification with limited interest might be better\n\
    \   suited for informational publication.\n   Extensions need not be published\
    \ as Internet-Draft or RFC documents\n   if they are intended for operation in\
    \ a closed environment or are\n   otherwise intended for a limited audience. \
    \ In such cases extensions\n   MAY be documented in a file and structural format\
    \ that is appropriate\n   for the intended audience.\n"
- title: 2.2.  Identifying Extensions
  contents:
  - "2.2.  Identifying Extensions\n   An EPP extension is uniquely identified by a\
    \ Uniform Resource\n   Identifier (URI, defined in RFC 2396 [7]).  The URI used\
    \ to identify\n   the extension MUST also be used to identify the XML namespace\n\
    \   associated with the extension.  Any valid URI MAY be used to identify\n  \
    \ an EPP extension, though the selection of a URI form (Uniform\n   Resource Locator\
    \ (URL) vs. Uniform Resource Name (URN), hierarchical\n   vs. relative, etc.)\
    \ SHOULD depend on factors such as organizational\n   policies on change control\
    \ and a balance between locating resources\n   and requirements for persistence.\
    \  An extension namespace MAY\n   describe multiple extension mechanisms, such\
    \ as definition of new\n   protocol features, objects, or elements, within the\
    \ schema used to\n   define the namespace.\n   The following are sample extension-identifying\
    \ URIs:\n      urn:ietf:params:xml:ns:foo-ext1\n      http://custom/obj1ext-1.0\n\
    \   Extension designers MAY include version information in the URI used\n   to\
    \ identify an extension.  If version information is included in the\n   URI, the\
    \ URI itself will need to change as the extension is revised\n   or updated.\n"
- title: 2.2.1.  Standards Track Extensions
  contents:
  - "2.2.1.  Standards Track Extensions\n   URIs for extensions intended for IETF\
    \ standards track use MUST\n   conform to the URN syntax specifications and registration\
    \ procedures\n   described in [8].\n"
- title: 2.2.2.  Other Extensions
  contents:
  - "2.2.2.  Other Extensions\n   URIs for extensions that are not intended for IETF\
    \ standards track\n   use MUST conform to the URI syntax specifications described\
    \ in RFC\n   2396.\n"
- title: 2.3.  Extension Announcement and Selection
  contents:
  - "2.3.  Extension Announcement and Selection\n   An EPP server MUST announce extensions\
    \ that are available for client\n   use as part of a <greeting> element that is\
    \ sent to a client before\n   the client establishes an interactive session with\
    \ the server.  The\n   <greeting> element contains zero or more <svcExtension>\
    \ elements\n   that, if present, contain a URI identifying an available extension:\n\
    \   S:<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n   S:<epp\
    \ xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\n   S:     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
    \n   S:     xsi:schemaLocation=\"urn:ietf:params:xml:ns:epp-1.0\n   S:     epp-1.0.xsd\"\
    >\n   S:  <greeting>\n   S:    <svID>Example EPP server epp.example.com</svID>\n\
    \   S:    <svDate>2000-06-08T22:00:00.0Z</svDate>\n   S:    <svcMenu>\n   S: \
    \     <version>1.0</version>\n   S:      <lang>en</lang>\n   S:      <lang>fr</lang>\n\
    \   S:      <objURI>urn:ietf:params:xml:ns:obj1</objURI>\n   S:      <objURI>urn:ietf:params:xml:ns:obj2</objURI>\n\
    \   S:      <objURI>urn:ietf:params:xml:ns:obj3</objURI>\n   S:      <svcExtension>\n\
    \   S:        <extURI>urn:ietf:params:xml:ns:foo-ext1</extURI>\n   S:        <extURI>http://custom/obj1ext-1.0</extURI>\n\
    \   S:      </svcExtension>\n   S:    </svcMenu>\n   S:    <dcp>\n   S:      <access><all/></access>\n\
    \   S:      <statement>\n   S:        <purpose><admin/><prov/></purpose>\n   S:\
    \        <recipient><ours/><public/></recipient>\n   S:        <retention><stated/></retention>\n\
    \   S:      </statement>\n   S:    </dcp>\n   S:  </greeting>\n   S:</epp>\n \
    \  In the example above, the server is announcing the availability of\n   two\
    \ extensions:\n      urn:ietf:params:xml:ns:foo-ext1, and\n      http://custom/obj1ext-1.0\n\
    \   An EPP client MUST establish a session with an EPP server using the\n   EPP\
    \ <login> command before attempting to use any standard commands or\n   extensions.\
    \  The <login> command contains zero or more <svcExtension>\n   elements that,\
    \ if present, contain a URI identifying an available\n   extension that the client\
    \ wishes to use during the course of the\n   session:\n   C:<?xml version=\"1.0\"\
    \ encoding=\"UTF-8\" standalone=\"no\"?>\n   C:<epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\"\
    \n   C:     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   C:   \
    \  xsi:schemaLocation=\"urn:ietf:params:xml:ns:epp-1.0\n   C:     epp-1.0.xsd\"\
    >\n   C:  <command>\n   C:    <login>\n   C:      <clID>ClientX</clID>\n   C:\
    \      <pw>foo-BAR2</pw>\n   C:      <newPW>bar-FOO2</newPW>\n   C:      <options>\n\
    \   C:        <version>1.0</version>\n   C:        <lang>en</lang>\n   C:    \
    \  </options>\n   C:      <svcs>\n   C:        <objURI>urn:ietf:params:xml:ns:obj1</objURI>\n\
    \   C:        <objURI>urn:ietf:params:xml:ns:obj2</objURI>\n   C:        <objURI>urn:ietf:params:xml:ns:obj3</objURI>\n\
    \   C:        <svcExtension>\n   C:          <extURI>http://custom/obj1ext-1.0</extURI>\n\
    \   C:        </svcExtension>\n   C:      </svcs>\n   C:    </login>\n   C:  \
    \  <clTRID>ABC-12345</clTRID>\n   C:  </command>\n   C:</epp>\n   In the example\
    \ above, the client indicates that it wishes to use an\n   extension identified\
    \ by the http://custom/obj1ext-1.0 URI during the\n   session established upon\
    \ successful completion of the <login>\n   command.\n   An EPP server MUST announce\
    \ all extensions that are publicly\n   available for client use.  An EPP client\
    \ MUST NOT request an\n   extension that has not been announced by the server.\
    \  An EPP server\n   MAY restrict a client's ability to select an extension based\
    \ on a\n   client's identity and authorizations granted by the server operator.\n"
- title: 2.4.  Protocol-level Extension
  contents:
  - "2.4.  Protocol-level Extension\n   EPP defines a set of structures for client-server\
    \ command-response\n   interaction, but additional structures MAY be added to\
    \ the protocol.\n   New structure definition is a matter of defining a schema\
    \ for the\n   structures that defines needed functionality and assigning a URI\
    \ to\n   uniquely identify the object namespace and schema.  Specific\n   protocol-level\
    \ extension mechanisms are described in section 2.7.1 of\n   the EPP core protocol\
    \ specification [2].\n"
- title: 2.5.  Object-level Extension
  contents:
  - "2.5.  Object-level Extension\n   EPP commands and responses do not contain attributes\
    \ that are\n   specific to any managed object.  Every command and response MUST\n\
    \   contain elements bound to an object namespace.  Object definition is\n   a\
    \ matter of defining a schema for the object that defines\n   functionality for\
    \ each needed command and associated response, and\n   assigning a URI to uniquely\
    \ identify the object namespace and schema.\n   Specific object-level extension\
    \ mechanisms are described in section\n   2.7.2 of the EPP core protocol specification\
    \ [2].\n"
- title: 2.6.  Command-Response Extension
  contents:
  - "2.6.  Command-Response Extension\n   EPP command and response structures defined\
    \ in existing object\n   mappings MAY also be extended.  For example, an object\
    \ mapping that\n   describes general functionality for the provisioning of Internet\n\
    \   domain names can be extended to included additional command and\n   response\
    \ elements needed for the provisioning of domain names that\n   represent E.164\
    \ telephone numbers [12].  Specific command-response\n   extension mechanisms\
    \ are described in section 2.7.3 of the EPP core\n   protocol specification [2].\n"
- title: 2.7.  Authentication Information Extension
  contents:
  - "2.7.  Authentication Information Extension\n   Some EPP object mappings, such\
    \ as the Internet domain name mapping\n   [10], include elements to associate\
    \ authentication information (such\n   as a password) with an object.  The schema\
    \ for any object mapping\n   that supports authentication information SHOULD be\
    \ flexible enough to\n   specify multiple forms of authentication information.\
    \  With XML\n   Schema ([4] and [5]), this can be accomplished by offering an\
    \ element\n   choice that includes an <any> element information item:\n      <any\
    \ namespace=\"##other\"/>\n"
- title: 3.  Selecting an Extension Mechanism
  contents:
  - "3.  Selecting an Extension Mechanism\n   Extensibility is a powerful feature\
    \ of XML, but it also provides\n   multiple opportunities to make poor design\
    \ decisions.  There are\n   typically several different ways to accomplish a single\
    \ task, and\n   while all may \"work\" (for some definition of \"work\") one extension\n\
    \   form will usually be more appropriate than others to complete a given\n  \
    \ task.  The following sequence of steps can be followed to select an\n   appropriate\
    \ extension form to solve an extension problem:\n   o  Command-Response Extension:\
    \ Adding elements to an existing object\n      mapping is the simplest form of\
    \ extension available, and is thus\n      the form that should be explored before\
    \ any other form is\n      considered.  The first question to ask when considering\
    \ an\n      extension form is thus:\n         Can the task be accomplished by\
    \ adding to an existing object\n         mapping or changing an existing object\
    \ mapping slightly?\n      If the answer to this question is \"yes\", you should\
    \ consider\n      extending an existing object mapping to complete your task.\n\
    \      Knowing where to find object mappings is critical to being able to\n  \
    \    answer this question; see section Section 3.1 for information\n      describing\
    \ mapping archives.  If the answer to this question is\n      \"no\", consider\
    \ an object-level extension next.\n   o  Object-level Extension: If there is no\
    \ existing object mapping\n      that can be extended to meet your requirements,\
    \ consider\n      developing a new object mapping.  The second question to ask\
    \ when\n      considering an extension form is thus:\n         Can the task be\
    \ accomplished using the existing EPP command and\n         response structures\
    \ applied to a new object?\n      If the answer to this question is \"yes\", you\
    \ should consider\n      developing a new object mapping to complete your task.\
    \  A new\n      object mapping should differ significantly from existing object\n\
    \      mappings; if you find that a new mapping is replicating a\n      significant\
    \ number of structures found in an existing mapping you\n      probably answered\
    \ the command-response question incorrectly.  If\n      the answer to this question\
    \ is \"no\", consider a protocol-level\n      extension next.\n   o  Protocol-level\
    \ Extension: If there is no existing object mapping\n      that can be extended\
    \ to meet your requirements and the existing\n      EPP command and response structures\
    \ are insufficient, consider\n      developing new protocol commands, responses,\
    \ or other structures.\n      The third and final question to ask when considering\
    \ an extension\n      form is thus:\n         Can the task be accomplished by\
    \ adding new EPP commands,\n         responses, or other structures applied to\
    \ new or existing\n         objects?\n      If the answer to this question is\
    \ \"no\", EPP can not be used\n      directly to complete your task.  If the answer\
    \ to this question is\n      \"yes\", extend the protocol by defining new operational\
    \ structures.\n   The extension forms and decision points listed here are presented\
    \ in\n   order of complexity.  Selecting an extension form without careful\n \
    \  consideration of the available extension options can add complexity\n   without\
    \ any gain in functionality.\n"
- title: 3.1.  Mapping and Extension Archives
  contents:
  - "3.1.  Mapping and Extension Archives\n   Existing object mappings are a critical\
    \ resource when trying to\n   select an appropriate extension form.  Existing\
    \ mappings or\n   extensions can provide a solid basis for further extension,\
    \ but\n   designers have to know where to find them to consider them for use.\n\
    \   Several organizations maintain archives of XML structures that can be\n  \
    \ useful extension platforms.  These include:\n   o  The IETF: Object mappings\
    \ and other extensions have been\n      documented in RFCs and Internet-Drafts.\n\
    \   o  IANA: Guidelines and registration procedures for an IANA XML\n      registry\
    \ used by the IETF are described in \"The IETF XML Registry\"\n      [8].\n  \
    \ o  OASIS [16]: OASIS maintains an XML archive containing schema\n      definitions\
    \ for use in the business applications of XML.\n   o  XML.org [17]: XML.org maintains\
    \ an XML archive containing schema\n      definitions for use in multiple industries.\n\
    \   o  Other archives are likely in the future.  Consult your favorite\n     \
    \ Internet search engine for additional resources.\n"
- title: 4.  Internationalization Considerations
  contents:
  - "4.  Internationalization Considerations\n   EPP is represented in XML [3], which\
    \ requires conforming parsers to\n   recognize both UTF-8 [13] and UTF-16 [14];\
    \ support for other\n   character encodings is also possible.  EPP extensions\
    \ MUST observe\n   both the Internationalization Considerations described in the\
    \ EPP\n   core protocol specification [2] and IETF policy on the use of\n   character\
    \ sets and languages described in RFC 2277 [9].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This memo has no direct impact on the IANA.  Guidelines\
    \ for\n   extensions that require IANA action are described in Section 2.2.1.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   EPP extensions inherit the security services of\
    \ the protocol\n   structure that's being extended.  For example, an extension\
    \ of an\n   object mapping inherits all of the security services of the object\n\
    \   mapping.  Extensions MAY specify additional security services, such\n   as\
    \ services for peer entity authentication, confidentiality, data\n   integrity,\
    \ authorization, access control, or non-repudiation.\n   Extensions MUST NOT mandate\
    \ removal of security services available in\n   the protocol structure being extended.\n\
    \   Protocol designers developing EPP extensions need to be aware of the\n   security\
    \ threats to be faced in their intended operating environment\n   so that appropriate\
    \ security services can be provided.  Guidelines\n   for designers to consider\
    \ and suggestions for writing an appropriate\n   Security Considerations section\
    \ can be found in RFC 3552 [15].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Hollenbeck, S., \"Extensible Provisioning Protocol (EPP)\", RFC\n    \
    \    3730, March 2004.\n   [3]  Bray, T., Paoli, J., Sperberg-McQueen, C. and\
    \ E. Maler,\n        \"Extensible Markup Language (XML) 1.0 (2nd ed)\", W3C REC-xml,\n\
    \        October 2000, <http://www.w3.org/TR/REC-xml>.\n   [4]  Thompson, H.,\
    \ Beech, D., Maloney, M. and N. Mendelsohn, \"XML\n        Schema Part 1: Structures\"\
    , W3C REC-xmlschema-1, May 2001,\n        <http://www.w3.org/TR/xmlschema-1/>.\n\
    \   [5]  Biron, P. and A. Malhotra, \"XML Schema Part 2: Datatypes\", W3C\n  \
    \      REC-xmlschema-2, May 2001, <http://www.w3.org/TR/xmlschema-2/>.\n   [6]\
    \  Bray, T., Hollander, D. and A. Layman, \"Namespaces in XML\", W3C\n       \
    \ REC-xml-names, January 1999, <http://www.w3.org/TR/REC-xml-\n        names>.\n\
    \   [7]  Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform Resource\n \
    \       Identifiers (URI): Generic Syntax\", RFC 2396, August 1998.\n   [8]  Mealling,\
    \ M., \"The IETF XML Registry\", BCP 81, RFC 3688, January\n        2004.\n  \
    \ [9]  Alvestrand, H., \"IETF Policy on Character Sets and Languages\",\n    \
    \    BCP 18, RFC 2277, January 1998.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [10] Hollenbeck, S., \"Extensible Provisioning\
    \ Protocol (EPP) Domain\n        Name Mapping\", RFC 3731, March 2004.\n   [11]\
    \ Hollenbeck, S., Rose, M. and L. Masinter, \"Guidelines for the\n        Use\
    \ of Extensible Markup Language (XML) within IETF Protocols\",\n        BCP 70,\
    \ RFC 3470, January 2003.\n   [12] Hollenbeck, S., \"Extensible Provisioning Protocol\
    \ E.164 Number\n        Mapping\", Work in Progress, February 2003.\n   [13] Yergeau,\
    \ F., \"UTF-8, a transformation format of ISO 10646\", RFC\n        2279, January\
    \ 1998.\n   [14] Hoffman, P. and F. Yergeau, \"UTF-16, an encoding of ISO 10646\"\
    ,\n        RFC 2781, February 2000.\n   [15] Rescorla, E. and B. Korver, \"Guidelines\
    \ for Writing RFC Text on\n        Security Considerations\", BCP 72, RFC 3552,\
    \ July 2003.\n"
- title: 8.  URIs
  contents:
  - "8.  URIs\n   [16]  <http://oasis-open.org/>\n   [17]  <http://xml.org/>\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Scott Hollenbeck\n   VeriSign, Inc.\n   21345 Ridgetop\
    \ Circle\n   Dulles, VA  20166-6503\n   USA\n   EMail: shollenbeck@verisign.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
