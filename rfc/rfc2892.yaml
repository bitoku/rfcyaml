- title: __initial_text__
  contents:
  - '                    The Cisco SRP MAC Layer Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the MAC layer protocol, \"Spatial Reuse\n\
    \   Protocol\" (SRP) for use with ring based media. This is a second\n   version\
    \ of the protocol (V2).\n   The primary requirements for SRP are as follows:\n\
    \   -  Efficient use of bandwidth using:\n          spatial reuse of bandwidth\n\
    \          local reuse of bandwidth\n          minimal protocol overhead\n   -\
    \  Support for priority traffic\n   -  Scalability across a large number of nodes\
    \ or stations attached to\n      a ring\n   -  \"Plug and play\" design without\
    \ a software based station management\n      transfer (SMT) protocol or ring master\
    \ negotiation as seen in\n      other ring based MAC protocols [1][2]\n   -  Fairness\
    \ among nodes using the ring\n   -  Support for ring based redundancy (error detection,\
    \ ring wrap,\n      etc.) similar to that found in SONET BLSR specifications.\n\
    \   -  Independence of physical layer (layer 1) media type.\n   This document\
    \ defines the terminology used with SRP, packet formats,\n   the protocol format,\
    \ protocol operation and associated protocol\n   finite state machines.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1.  Differences between SRP V1 and V2 .......................\
    \  3\n    2.  Terms and Taxonomy ......................................  4\n \
    \       2.1.  Ring Terminology ..................................  4\n       \
    \ 2.2.  Spatial Reuse .....................................  5\n        2.3. \
    \ Fairness ..........................................  6\n        2.4.  Transit\
    \ Buffer ....................................  7\n    3.  SRP Overview ............................................\
    \  8\n        3.1.  Receive Operation Overview ........................  8\n \
    \       3.2.  Transmit Operation Overview .......................  8\n       \
    \ 3.3.  SRP Fairness Algorithm (SRP-fa) Overview ..........  9\n        3.4. \
    \ Intelligent Protection Switching (IPS) Protocol\n              Overview ..........................................\
    \  9\n    4.  Packet Formats .......................................... 13\n \
    \       4.1.  Overall Packet Format ............................. 13\n       \
    \ 4.2.  Generic Packet Header Format ...................... 14\n             4.2.1.\
    \  Time To Live (TTL) ......................... 14\n             4.2.2.  Ring\
    \ Identifier (R) ........................ 15\n             4.2.3.  Priority Field\
    \ (PRI) ....................... 15\n             4.2.4.  MODE .......................................\
    \ 15\n             4.2.5.  Parity Bit (P-bit) ......................... 16\n \
    \            4.2.6.  Destination Address ........................ 16\n       \
    \      4.2.7.  Source Address ............................. 16\n             4.2.8.\
    \  Protocol Type .............................. 16\n        4.3.  SRP Cell Format\
    \ ................................... 16\n        4.4.  SRP Usage Packet Format\
    \ ........................... 17\n        4.5.  SRP Control Packet Format .........................\
    \ 18\n             4.5.1.  Control Ver ................................ 19\n \
    \            4.5.2.  Control Type ............................... 19\n       \
    \      4.5.3.  Control TTL ................................ 19\n             4.5.4.\
    \  Control Checksum ........................... 19\n             4.5.5.  Payload\
    \ .................................... 20\n             4.5.6.  Addressing .................................\
    \ 20\n        4.6.  Topology Discovery ................................ 20\n \
    \            4.6.1.  Topology Length ............................ 22\n       \
    \      4.6.2.  Topology Originator ........................ 22\n             4.6.3.\
    \  MAC bindings ............................... 22\n             4.6.4.  MAC Type\
    \ Format ............................ 22\n        4.7.  Intelligent Protection\
    \ Switching (IPS) ............ 23\n             4.7.1.  Originator MAC Address\
    \ ..................... 23\n             4.7.2.  IPS Octet ..................................\
    \ 24\n        4.8.  Circulating packet detection (stripping) .......... 24\n \
    \   5.  Packet acceptance and stripping ......................... 25\n       \
    \ 5.1.  Transmission and forwarding with priority ......... 27\n        5.2. \
    \ Wrapping of Data .................................. 28\n    6.  SRP-fa Rules\
    \ Of Operation ............................... 28\n        6.1.  SRP-fa pseudo-code\
    \ ................................ 30\n        6.2.  Threshold settings ................................\
    \ 32\n    7.  SRP Synchronization ..................................... 32\n \
    \       7.1.  SRP Synchronization Examples ...................... 33\n    8. \
    \ IPS Protocol Description ................................ 34\n        8.1. \
    \ The IPS Request Types ............................. 35\n        8.2.  SRP IPS\
    \ Protocol States ........................... 36\n             8.2.1.  Idle .......................................\
    \ 36\n             8.2.2.  Pass-through ............................... 36\n \
    \            8.2.3.  Wrapped .................................... 36\n       \
    \ 8.3.  IPS Protocol Rules ................................ 36\n             8.3.1.\
    \  SRP IPS Packet Transfer Mechanism .......... 36\n             8.3.2.  SRP IPS\
    \ Signaling and Wrapping Mechanism ... 37\n        8.4.  SRP IPS Protocol Rules\
    \ ............................ 38\n        8.5.  State Transitions .................................\
    \ 41\n        8.6.  Failure Examples .................................. 41\n \
    \            8.6.1.  Signal Failure - Single Fiber Cut Scenario . 41\n       \
    \      8.6.2.  Signal Failure - Bidirectional Fiber Cut\n                    \
    \ Scenario ................................... 43\n             8.6.3.  Failed\
    \ Node Scenario ....................... 45\n             8.6.4.  Bidirectional\
    \ Fiber Cut and Node Addition\n             Scenarios ..........................................\
    \ 47\n    9.  SRP over SONET/SDH ...................................... 48\n \
    \  10.  Pass-thru mode .......................................... 49\n   11. \
    \ References .............................................. 50\n   12.  Security\
    \ Considerations ................................. 50\n   13.  IPR Notice .. ...........................................\
    \ 50\n   14.  Acknowledgments ......................................... 50\n \
    \  15.  Authors' Addresses ...................................... 51\n   16. \
    \ Full Copyright Statement ................................ 52\n"
- title: 1.  Differences between SRP V1 and V2
  contents:
  - "1.  Differences between SRP V1 and V2\n   This document pertains to SRP V2. SRP\
    \ V1 was a previously published\n   draft specification. The following lists V2\
    \ feature differences from\n   V1:\n   -  Reduction of the header format from\
    \ 4 bytes to 2 bytes.\n   -  Replacement of the keepalive packet with a new control\
    \ packet that\n      carries usage information in addition to providing a keepalive\n\
    \      function.\n   -  Change bit value of inner ring to be 1 and outer to be\
    \ 0.\n   -  Reduction in the number of TTL bits from 11 to 8.\n   -  Removal of\
    \ the DS bit.\n   -  Change ordering of CRC transmission to be most significant\
    \ octet\n      first (was least significant octet in V1).  The SRP CRC is now\
    \ the\n      same as in [5].\n   -  Addition of the SRP cell mode to carry ATM\
    \ cells over SRP.\n   -  Changes to the SRP-fa to increase the usage field width\
    \ and to\n      remove the necessity of adding a fixed constant when propagating\n\
    \      usage messages.\n"
- title: 2.  Terms and Taxonomy
  contents:
  - '2.  Terms and Taxonomy

    '
- title: 2.1.  Ring Terminology
  contents:
  - "2.1.  Ring Terminology\n   SRP uses a bidirectional ring. This can be seen as\
    \ two symmetric\n   counter-rotating rings. Most of the protocol finite state\
    \ machines\n   (FSMs) are duplicated for the two rings.\n   The bidirectional\
    \ ring allows for ring-wrapping in case of media or\n   station failure, as in\
    \ FDDI [1] or SONET/SDH [3]. The wrapping is\n   controlled by the Intelligent\
    \ Protection Switching (IPS) protocol.\n   To distinguish between the two rings,\
    \ one is referred to as the\n   \"inner\" ring, the other the \"outer\" ring.\
    \ The SRP protocol operates\n   by sending data traffic in one direction (known\
    \ as \"downstream\") and\n   it's corresponding control information in the opposite\
    \ direction\n   (known as \"upstream\") on the opposite ring. Figure 1 highlights\
    \ this\n   graphically.\n   FIGURE 1. Ring Terminology\n                     \
    \                  {outer_data\n                                -----   inner_ctl}\n\
    \               ---------------->| N |-----------------\n              |  ---------------|\
    \ 1 |<--------------  |\n              | |  {inner_data  -----               |\
    \ |\n              | |   outer_ctl}                      | |\n             -----\
    \                                 -----\n             | N |                  \
    \               | N |\n             | 6 |                                 | 2\
    \ |\n             -----                                 -----\n              ^\
    \ |                                   ^ |\n            o | |                 \
    \                i | |\n            u | |                                 n |\
    \ |\n            t | |                                 n | |\n            e |\
    \ |                                 e | |\n            r | |                 \
    \                r | |\n              | v                                   |\
    \ v\n             -----                                 -----\n             |\
    \ N |                                 | N |\n             | 5 |              \
    \                   | 3 |\n             -----                                \
    \ -----\n              | |                                   | |\n           \
    \   | |               -----               | |\n              |  -------------->|\
    \ N |---------------  |\n               -----------------| 4 |<----------------\n\
    \                                -----\n"
- title: 2.2.  Spatial Reuse
  contents:
  - "2.2.  Spatial Reuse\n   Spatial Reuse is a concept used in rings to increase\
    \ the overall\n   aggregate bandwidth of the ring. This is possible because unicast\n\
    \   traffic is only passed along ring spans between source and\n   destination\
    \ nodes rather than the whole ring as in earlier ring based\n   protocols such\
    \ as token ring and FDDI.\n   Figure 2 below outlines how spatial reuse works.\
    \ In this example,\n   node 1 is sending traffic to node 4, node 2 to node 3 and\
    \ node 5 to\n   node 6. Having the destination node strip unicast data from the\
    \ ring\n   allows other nodes on the ring who are downstream to have full access\n\
    \   to the ring bandwidth. In the example given this means node 5 has\n   full\
    \ bandwidth access to node 6 while other traffic is being\n   simultaneously transmitted\
    \ on other parts of the ring.\n"
- title: 2.3.  Fairness
  contents:
  - "2.3.  Fairness\n   Since the ring is a shared media, some sort of access control\
    \ is\n   necessary to ensure fairness and to bound latency. Access control can\n\
    \   be broken into two types which can operate in tandem:\n      Global access\
    \ control - controls access so that everyone gets a\n      fair share of the global\
    \ bandwidth of the ring.\n      Local access control - grants additional access\
    \ beyond that\n      allocated globally to take advantage of segments of the ring\
    \ that\n      are less than fully utilized.\n   As an example of a case where\
    \ both global and local access are\n   required, refer again to Figure 2. Nodes\
    \ 1, 2, and 5 will get 1/2 of\n   the bandwidth on a global allocation basis.\
    \ But from a local\n   perspective, node 5 should be able to get all of the bandwidth\
    \ since\n   its bandwidth does not interfere with the fair shares of nodes 1 and\n\
    \   2.\n   FIGURE 2. Global and Local Re-Use\n                               \
    \   . . . . . . . . . . . . . . . . .\n                                  .   \
    \                            .\n                                -----        \
    \                     .\n               ---------------->| N |-----------------\
    \            .\n              |  ---------------| 1 |<--------------  |      \
    \     .\n              | |               -----               | |           .\n\
    \              | |                                   | |           .\n       \
    \      -----                                 -----          .\n         . .>|\
    \ N |                                 | N |. ..      .\n         .   | 6 |   \
    \                              | 2 |   .      .\n         .   -----          \
    \                       -----   .      .\n         .    ^ |                  \
    \                 ^ |    .      .\n         .  o | |                         \
    \        i | |    .      .\n         .  u | |                                \
    \ n | |    .      .\n         .  t | |                                 n | | \
    \   .      .\n         .  e | |                                 e | |    .   \
    \   .\n         .  r | |                                 r | |    .      .\n \
    \        .    | v                                   | v    .      .\n        \
    \ .   -----                                 -----   .      .\n         . . | N\
    \ |                                 | N |<. .      .\n             | 5 |     \
    \                            | 3 |          .\n             -----            \
    \                     -----          .\n              | |                    \
    \               | |           .\n              | |               -----       \
    \        | |           .\n              |  -------------->| N |---------------\
    \  |           .\n               -----------------| 4 |<----------------     \
    \       .\n                                -----                             .\n\
    \                                  ^                               .\n       \
    \                           .                               .\n              \
    \                    . . . . .<. . . . . . . . . . . .\n"
- title: 2.4.  Transit Buffer
  contents:
  - "2.4.  Transit Buffer\n   To be able to detect when to transmit and receive packets\
    \ from the\n   ring, SRP makes use of a transit (sometimes referred as insertion)\n\
    \   buffer as shown in Figure 3 below.  High priority packets and low\n   priority\
    \ packets can be placed into separate fifo queues.\n   FIGURE 3. Transit buffer\n\
    \                         ^^               ||\n                         ||   \
    \            vv\n                       |----|           |----|\n            \
    \           |    |           |    |\n                       |----|Rx         |----|Tx\n\
    \                       |    |Buffer     |    |Buffer\n                      \
    \ |----|           |----|\n                       |    |           |    |\n  \
    \                     |----|           |----|\n                       |    | \
    \          |    |\n                       |----|           |----|\n          \
    \             |    |           |    |\n                       |----|         \
    \  |----|\n                         ^^    Transit    ||\n                    \
    \     ||    Buffer     ||\n                         ||    |------|   vv\n    \
    \                           |  H   |\n                   ===========>|------|==========>\n\
    \                               |  L   |\n                               |------|\n"
- title: 3.  SRP Overview
  contents:
  - '3.  SRP Overview

    '
- title: 3.1.  Receive Operation Overview
  contents:
  - "3.1.  Receive Operation Overview\n   Receive Packets entering a node are copied\
    \ to the receive buffer if a\n   Destination Address (DA) match is made.  If a\
    \ DA matched packet is\n   also a unicast, then the packet will be stripped. \
    \ If a packet does\n   not DA match or is a multicast and the packet does not\
    \ Source Address\n   (SA) match, then the packet is placed into the Transit Buffer\
    \ (TB)\n   for forwarding to the next node if the packet passes Time To Live and\n\
    \   Cyclic Redundancy Check (CRC) tests.\n"
- title: 3.2.  Transmit Operation Overview
  contents:
  - "3.2.  Transmit Operation Overview\n   Data sent from the node is either forwarded\
    \ data from the TB or\n   transmit data originating from the node via the Tx Buffer.\
    \  High\n   priority forwarded data always gets sent first.  High priority\n \
    \  transmit data may be sent as long as the Low Priority Transit Buffer\n   (LPTB)\
    \ is not full.\n   A set of usage counters monitor the rate at which low priority\n\
    \   transmit data and forwarded data are sent.  Low priority data may be\n   sent\
    \ as long as the usage counter does not exceed an allowed usage\n   governed by\
    \ the SRP-fa rules and the LPTB has not exceeded the low\n   priority threshold.\n"
- title: 3.3.  SRP Fairness Algorithm (SRP-fa) Overview
  contents:
  - "3.3.  SRP Fairness Algorithm (SRP-fa) Overview\n   If a node experiences congestion,\
    \ then it will advertise to upstream\n   nodes via the opposite ring the value\
    \ of its transmit usage counter.\n   The usage counter is run through a low pass\
    \ filter function to\n   stabilize the feedback.  Upstream nodes will adjust their\
    \ transmit\n   rates so as not to exceed the advertised values.  Nodes also\n\
    \   propagate the advertised value received to their immediate upstream\n   neighbor.\
    \  Nodes receiving advertised values who are also congested\n   propagate the\
    \ minimum of their transmit usage and the advertised\n   usage.\n   Congestion\
    \ is detected when the depth of the low priority transit\n   buffer reaches a\
    \ congestion threshold.\n   Usage messages are generated periodically and also\
    \ act as keepalives\n   informing the upstream station that a valid data link\
    \ exists.\n"
- title: 3.4.  Intelligent Protection Switching (IPS) Protocol Overview
  contents:
  - "3.4.  Intelligent Protection Switching (IPS) Protocol Overview\n   An SRP Ring\
    \ is composed of two counter-rotating, single fiber rings.\n   If an equipment\
    \ or fiber facility failure is detected, traffic going\n   towards and from the\
    \ failure direction is wrapped (looped) back to go\n   in the opposite direction\
    \ on the other ring (subject to the\n   protection hierarchy).  The wrap around\
    \ takes place on the nodes\n   adjacent to the failure, under control of the IPS\
    \ protocol.  The wrap\n   re-routes the traffic away from the failed span.\n \
    \  An example of the data paths taken before and after a wrap are shown\n   in\
    \ Figures 4 and 5.  Before the fiber cut, N4 sends to N1 via the\n   path N4->N5->N6->N1.\n\
    \   If there is a fiber cut between N5 and N6, N5 and N6 will wrap the\n   inner\
    \ ring to the outer ring.  After the wraps have been set up,\n   traffic from\
    \ N4 to N1 initially goes through the non-optimal path\n   N4->N5->N4->N3->N2->N1->N6->N1.\n\
    \   Subsequently a new ring topology is discovered and a new optimal path\n  \
    \ is used N4->N3->N2-N1 as shown in Figure 6. Note that the topology\n   discovery\
    \ and the subsequent optimal path selection are not part of\n   the IPS protocol.\n\
    \   FIGURE 4. Data path before wrap, N4 -> N1\n                              \
    \  -----\n               ################>| N |-----------------\n           \
    \   #  ---------------| 1 |<--------------  |\n              # |             \
    \  -----               | |\n              # |                                \
    \   | |\n             -----                                 -----\n          \
    \   | N |                                 | N |\n             | 6 |          \
    \                       | 2 |\n             -----                            \
    \     -----\n              ^ |                                   ^ |\n       \
    \       # |                                   | |\n              # |         \
    \                          | |\n              # |                            \
    \       | |\n              # |                                   | |\n       \
    \       # |                                   | |\n              # v         \
    \                          | v\n             -----                           \
    \      -----\n             | N |                                 | N |\n     \
    \        | 5 |                                 | 3 |\n             -----     \
    \                            -----\n              # |                        \
    \           | |\n              # |               -----               | |\n   \
    \           #  -------------->| N |---------------  |\n               #################|\
    \ 4 |<----------------\n                                -----\n   The ring wrap\
    \ is controlled through SONET BLSR [3][4] style IPS\n   signaling.  It is an objective\
    \ to perform the wrapping as fast as in\n   the SONET equipment or faster.\n \
    \  The IPS protocol processes the following request types (in the order\n   of\
    \ priority, from highest to lowest):\n      1. Forced Switch (FS): operator originated,\
    \ performs a protection\n         switch on a requested span (wraps at both ends\
    \ of the span)\n      2. Signal Fail (SF): automatic, caused by a media Signal\
    \ Failure\n         or SRP keep-alive failure - performs a protection switch on\
    \ a\n         requested span\n   FIGURE 5. Data path after the wrap, N4 -> N1\n\
    \                                -----\n               ################>| N |-----------------\n\
    \              #  ###############| 1 |<##############  |\n              # #  \
    \             -----               # |\n              # v                     \
    \              # |\n             -----                                 -----\n\
    \             | N |                                 | N |\n             | 6 |\
    \                                 | 2 |\n             -----                  \
    \               -----\n              ^ # wrap                              ^ |\n\
    \              ###                                   # |\n           _________\
    \                                # |\n           fiber cut                   \
    \             # |\n           ---------                                # |\n \
    \             ###                                   # |\n              # v wrap\
    \                              # v\n             -----                       \
    \          -----\n             | N |                                 | N |\n \
    \            | 5 |                                 | 3 |\n             ----- \
    \                                -----\n              # #                    \
    \               # |\n              # #               -----               # |\n\
    \              #  ##############>| N |###############  |\n               #################|\
    \ 4 |<----------------\n      3. Signal Degrade (SD): automatic, caused by a media\
    \ Signal\n         Degrade (e.g. excessive Bit Error Rate) - performs a protection\n\
    \         switch on a requested span\n      4. Manual Switch (MS): operator originated,\
    \ like Forced Switched\n         but of a lower priority\n      5. Wait to Restore\
    \ (WTR): automatic, entered after the working\n         channel meets the restoration\
    \ criteria after SF or SD condition\n         disappears.  IPS waits WTR period\
    \ before restoring traffic in\n         order to prevent protection switch oscillations\n\
    \   If a protection (either automatic or operator originated) is\n   requested\
    \ for a given span, the node on which the protection has been\n   requested issues\
    \ a protection request to the node on the other end of\n   the span using both\
    \ the short path (over the failed span, as the\n   failure may be unidirectional)\
    \ and the long path (around the ring).\n   FIGURE 6. Data path after the new topology\
    \ is discovered\n                                -----\n               -----------------|\
    \ N |-----------------\n              |  ---------------| 1 |<############## \
    \ |\n              | |               -----               # |\n              |\
    \ v                                   # |\n             -----                \
    \                 -----\n             | N |                                 |\
    \ N |\n             | 6 |                                 | 2 |\n            \
    \ -----                                 -----\n              ^ | wrap        \
    \                      ^ |\n              --                                 \
    \   # |\n           _________                                # |\n           fiber\
    \ cut                                # |\n           ---------               \
    \                 # |\n               --                                   # |\n\
    \              | v wrap                              # v\n             ----- \
    \                                -----\n             | N |                   \
    \              | N |\n             | 5 |                                 | 3 |\n\
    \             -----                                 -----\n              | | \
    \                                  # |\n              | |               -----\
    \               # |\n              |  -------------->| N |###############  |\n\
    \               -----------------| 4 |<----------------\n                    \
    \            -----\n   As the protection requests travel around the ring, the\
    \ protection\n   hierarchy is applied.  If the requested protection switch is\
    \ of the\n   highest priority e.g. Signal Fail request is of higher priority than\n\
    \   the Signal Degrade than this protection switch takes place and the\n   lower\
    \ priority switches elsewhere in the ring are taken down, as\n   appropriate.\
    \  If a lower priority request is requested, it is not\n   allowed if a higher\
    \ priority request is present in the ring. The only\n   exception is multiple\
    \ SF and FS switches, which can coexist in the\n   ring.\n   All protection switches\
    \ are performed bidirectionally (wraps at both\n   ends of a span for both transmit\
    \ and receive directions, even if a\n   failure is only unidirectional).\n"
- title: 4.  Packet Formats
  contents:
  - "4.  Packet Formats\n   This section describes the packet formats used by SRP.\
    \ Packets can be\n   sent over any point to point link layer (e.g. SONET/SDH,\
    \ ATM, point\n   to point ETHERNET connections). The maximum transfer unit (MTU)\
    \ is\n   9216 octets.  The minimum transfer unit for data packets is 55\n   octets.\
    \  The maximum limit was designed to accommodate the large IP\n   MTUs of IP over\
    \ AAL5.  SRP also supports ATM cells.  ATM cells over\n   SRP are 55 octets. \
    \ The minimum limit corresponds to ATM cells\n   transported over SRP.  The minimum\
    \ limit does not apply to control\n   packets which may be smaller.\n   These\
    \ limits include everything listed in Figure 7: but are exclusive\n   of the frame\
    \ delineation (e.g. for SRP over SONET/SDH, the flags used\n   for frame delineation\
    \ are not included in the size limits).\n   The following packet and cell formats\
    \ do not include any layer 1\n   frame delineation.  For SRP over POS, there will\
    \ be an additional\n   flag that delineates start and end of frame.\n"
- title: 4.1.  Overall Packet Format
  contents:
  - "4.1.  Overall Packet Format\n   The overall packet format is show below in Figure\
    \ 7:\n   FIGURE 7. Overall Packet Format\n                     ---------------------------------\n\
    \                     |       SRP Header              |\n                    \
    \ ---------------------------------\n                     |       Dest. Addr.\
    \             |\n                     ---------------------------------\n    \
    \                 |       Source Addr.            |\n                     ---------------------------------\n\
    \                     |       Protocol Type           |\n                    \
    \ ---------------------------------\n                     |       Payload    \
    \             |\n                     |                               |\n    \
    \                 |                               |\n                     |  \
    \                             |\n                     ---------------------------------\n\
    \                     |       FCS                     |\n                    \
    \ ---------------------------------\n   The frame check sequence (FCS) is a 32-bit\
    \ cyclic redundancy check\n   (CRC) as specified in RFC-1662 and is the same CRC\
    \ as used in Packet\n   Over SONET (POS - specified in RFC-2615).  The generator\
    \ polynomial\n   is:\n   CRC-32:\n   x32 + x26 + x23 + x22 + x16 + x12 + x11 +\
    \ x10 + x8 + x7 + x5 + x4 +\n   x2 + x + 1\n   The FCS is computed over the destination\
    \ address, source address,\n   protocol type and payload.  It does not include\
    \ the SRP header.\n   Note that the packet format after the SRP header is identical\
    \ to\n   Ethernet Version 2.\n"
- title: 4.2.  Generic Packet Header Format
  contents:
  - "4.2.  Generic Packet Header Format\n   Each packet has a fixed-sized header.\
    \ The packet header format is\n   shown in Figure 8.\n   FIGURE 8. Detailed Packet\
    \ Header Format\n        0                   1                   2           \
    \        3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  Time to Live |R| MOD | PRI |P|                               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+     Destination Address       |\n    \
    \   |                                                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n       +  \
    \  Source Address             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |    \
    \                           |     Protocol Type             |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \     +                                                               +\n    \
    \   |                         Payload                               |\n      \
    \ .                                                               .\n       .\
    \                                                               .\n       .  \
    \                                                             .\n       |    \
    \                                                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields are described below.\n"
- title: 4.2.1.  Time To Live (TTL)
  contents:
  - "4.2.1.  Time To Live (TTL)\n   This 8 bit field is a hop-count that must be decremented\
    \ every time a\n   node forwards a packet. If the TTL reaches zero it is stripped\
    \ off\n   the ring. This allows for a total node space of 256 nodes on a ring.\n\
    \   However, due to certain failure conditions (e.g. when the ring is\n   wrapped)\
    \ the total number of nodes that are supported by SRP is 128.\n   When a packet\
    \ is first sent onto the ring the TTL should be set to at\n   least twice the\
    \ total number of nodes on the ring.\n"
- title: 4.2.2.  Ring Identifier (R)
  contents:
  - "4.2.2.  Ring Identifier (R)\n   This single bit field is used to identify which\
    \ ring this packet is\n   designated for. The designation is as follows:\n   \
    \     TABLE 1. Ring Indicator Values\n        Outer Ring      0\n        Inner\
    \ Ring      1\n"
- title: 4.2.3.  Priority Field (PRI)
  contents:
  - "4.2.3.  Priority Field (PRI)\n   This three bit field indicates the priority\
    \ level of the SRP packet\n   (0 through 7). The higher the value the higher the\
    \ priority. Since\n   there are only two queues in the transit buffer (HPTB and\
    \ LPTB) a\n   packet is treated as either low or high priority once it is on the\n\
    \   ring.  Each node determines the threshold value for determining what\n   is\
    \ considered a high priority packet and what is considered a low\n   priority\
    \ packet.  However, the full 8 levels of priority in the SRP\n   header can be\
    \ used prior to transmission onto the ring (transmit\n   queues) as well as after\
    \ reception from the ring (receive queues).\n"
- title: 4.2.4.  MODE
  contents:
  - "4.2.4.  MODE\n   This three bit field is used to identify the mode of the packet.\
    \ The\n   following modes are defined in Table 2 below.\n        TABLE 2. MODE\
    \ Values\n        Value   Description\n        000     Reserved\n        001 \
    \    Reserved\n        010     Reserved\n        011     ATM cell\n        100\
    \     Control Message (Pass to host)\n        101     Control Message (Locally\
    \ Buffered for host)\n        110     Usage Message\n        111     Packet Data\n\
    \   These modes will be further explained in later sections.\n"
- title: 4.2.5.  Parity Bit (P-bit)
  contents:
  - "4.2.5.  Parity Bit (P-bit)\n   The parity bit is used to indicate the parity\
    \ value over the 15 bits\n   of the SRP header to provide additional data integrity\
    \ over the\n   header. Odd parity is used (i.e. the number of ones including the\n\
    \   parity bit shall be an odd number).\n"
- title: 4.2.6.  Destination Address
  contents:
  - "4.2.6.  Destination Address\n   The destination address is a globally unique\
    \ 48 bit address assigned\n   by the IEEE.\n"
- title: 4.2.7.  Source Address
  contents:
  - "4.2.7.  Source Address\n   The source address is a globally unique 48 bit address\
    \ assigned by\n   the IEEE.\n"
- title: 4.2.8.  Protocol Type
  contents:
  - "4.2.8.  Protocol Type\n   The protocol type is a two octet field like that used\
    \ in EtherType\n   representation. Current defined values relevant to SRP are\
    \ defined in\n   Table 3 below.\n        TABLE 3. Defined Protocol Types\n   \
    \     Value   Protocol Type\n        0x2007  SRP Control\n        0x0800  IP version\
    \ 4\n        0x0806  ARP\n"
- title: 4.3.  SRP Cell Format
  contents:
  - "4.3.  SRP Cell Format\n   SRP also supports the sending of ATM cells.  The detailed\
    \ cell format\n   is shown below:\n   FIGURE 9. SRP Cell Format\n        0   \
    \                1                   2                   3\n        0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  Time to Live |R| MOD | PRI |P|         VPI/VCI               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |        VCI            | PTI |C|     HEC       |               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               +\n       |\
    \                                                               |\n       .  \
    \                                                             .\n       .    \
    \                ATM   Payload                              .\n       .      \
    \              ( 48 Bytes )               +-+-+-+-+-+-+-+-+\n       |        \
    \                                       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Packet nodes would typically ignore (never receive or strip) and\n   always\
    \ forward ATM-cells.  The idea is that ATM switches and routers\n   could coexist\
    \ in a ring.  Note that SRP cells do not contain an FCS.\n   Data integrity is\
    \ handled at the AAL layer.\n"
- title: 4.4.  SRP Usage Packet Format
  contents:
  - "4.4.  SRP Usage Packet Format\n   SRP usage packets are sent out periodically\
    \ to propagate allowed\n   usage information to upstream nodes.  SRP usage packets\
    \ also perform\n   a keepalive function.  SRP usage packets should be sent approximately\n\
    \   every 106 usec.\n   If a receive interface has not seen a usage packet within\
    \ the\n   keepalive timeout interval it will trigger an L2 keepalive timeout\n\
    \   interrupt/event. The IPS software will subsequently mark that\n   interface\
    \ as faulty and initiate a protection switch around that\n   interface.  The keepalive\
    \ timeout interval should be set to 16 times\n   the SRP usage packet transmission\
    \ interval.\n   FIGURE 10. Usage Packet Format\n        0                   1\
    \                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  Time to Live |R| MOD | PRI |P|                               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  Originator MAC Address       +\n    \
    \   |                                                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \  Reserved                     |    Usage                      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   A USAGE of all ones indicates a value of NULL.\n"
- title: 4.5.  SRP Control Packet Format
  contents:
  - "4.5.  SRP Control Packet Format\n   If the MODE bits are set to 10X (SRP control)\
    \ then this indicates a\n   control message. Control messages are always received\
    \ and stripped by\n   the adjacent node.  They are by definition unicast, and\
    \ do not need\n   any addressing information.  The destination address field for\n\
    \   control packets should be set to 0's.  The source address field for a\n  \
    \ control packet should be set to the source address of the\n   transmitting node.\n\
    \   Two types of controls messages are defined : Pass to host and Locally\n  \
    \ buffered. Pass to host messages can be passed to the host software by\n   whatever\
    \ means is convenient. This is most often the same path used\n   to transfer data\
    \ packets to the host. Locally buffered control\n   messages are usually reserved\
    \ for protection messages.  These are\n   normally buffered locally in order to\
    \ not contend for resources with\n   data packets. The actual method of handling\
    \ these messages is up to\n   the implementor.\n   The control packet format is\
    \ shown in Figure 11.\n   FIGURE 11. Control Packet Format\n        0        \
    \           1                   2                   3\n        0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  Time to Live |R| MOD | PRI |P|                               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+     Destination Address       |\n    \
    \   |                                                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n       +  \
    \  Source Address             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |    \
    \                           |     Protocol Type = 0x2007    |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | Control Ver   | Control Type  |    Control Checksum           |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |   Control TTL                 |                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n       .\
    \                                                               .\n       .  \
    \ Payload                                                     .\n       .    \
    \                                                           .\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The priority (PRI) value should be set to 0x7 (all one's) when\n   sending\
    \ control packets and should be queued to the highest priority\n   transmit queue\
    \ available.  The Time to Live is not relevant since all\n   packets will be received\
    \ and stripped by the nearest downstream\n   neighbor and can be set to any value\
    \ (preferably this should be set\n   to 001).\n"
- title: 4.5.1.  Control Ver
  contents:
  - "4.5.1.  Control Ver\n   This one octet field is the version number associated\
    \ with the\n   control type field.  Initially, all control types will be version\
    \ 0.\n"
- title: 4.5.2.  Control Type
  contents:
  - "4.5.2.  Control Type\n   This one octet field represents the control message\
    \ type. Table 4\n   contains the currently defined control types.\n        TABLE\
    \ 4. Control Types\n        Control Type    Description\n        0x01        \
    \    Topology Discovery\n        0x02            IPS message\n        0x03-\n\
    \        0xFF            Reserved\n"
- title: 4.5.3.  Control TTL
  contents:
  - "4.5.3.  Control TTL\n   The Control TTL is a control layer hop-count that must\
    \ be decremented\n   every time a node forwards a control packet.  If a node receives\
    \ a\n   control packet with a control TTL <= 1, then it should accept the\n  \
    \ packet but not forward it.\n   Note that the control layer hop count is separate\
    \ from the SRP L2 TTL\n   which is always set to 1 for control messages.\n   The\
    \ originator of the control message should set the initial value of\n   the control\
    \ TTL to the SRP L2 TTL normally used for data packets.\n"
- title: 4.5.4.  Control Checksum
  contents:
  - "4.5.4.  Control Checksum\n   The checksum field is the 16 bit one's complement\
    \ of the one's\n   complement sum of all 16 bit words starting with the control\
    \ version.\n   If there are an odd number of octets to be checksummed, the last\n\
    \   octet is padded on the right with zeros to form a 16 bit word for\n   checksum\
    \ purposes.  The pad is not transmitted as part of the\n   segment.  While computing\
    \ the checksum, the checksum field itself is\n   replaced with zeros.  This is\
    \ the same checksum algorithm as that\n   used for TCP.  The checksum does not\
    \ cover the 32 bit SRP FCS.\n"
- title: 4.5.5.  Payload
  contents:
  - "4.5.5.  Payload\n   The payload is a variable length field dependent on the control\
    \ type.\n"
- title: 4.5.6.  Addressing
  contents:
  - "4.5.6.  Addressing\n   All nodes must have a globally unique IEEE 48 bit MAC\
    \ address. A\n   multicast bit is defined using canonical addressing conventions\
    \ i.e.\n   the multicast bit is the least significant bit of the most\n   significant\
    \ octet in the destination address.  It is acceptable but\n   not advisable to\
    \ change a node's MAC address to one that is known to\n   be unique within the\
    \ administrative layer 2 domain (that is the SRP\n   ring itself along with any\
    \ networks connected to the SRP ring via a\n   layer 2 transparent bridge).\n\
    \   FIGURE 12. Multicast bit position\n                   Destination Address\n\
    \        0                   1                   2                   3\n     \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |             |M|                                               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \                  ^\n                      |----Multicast bit\n   Note that for\
    \ SONET media, the network order is MSB of each octet\n   first, so that as viewed\
    \ on the line, the multicast bit will be the\n   8th bit of the destination address\
    \ sent. (For SRP on Ethernet media,\n   the multicast bit would be sent first).\n"
- title: 4.6.  Topology Discovery
  contents:
  - "4.6.  Topology Discovery\n   Each node performs topology discovery by sending\
    \ out topology\n   discovery packets on one or both rings.  The node originating\
    \ a\n   topology packet marks the packet with the egressing ring id, appends\n\
    \   the node's mac binding to the packet and sets the length field in the\n  \
    \ packet before sending out the packet. This packet is a point-to-point\n   packet\
    \ which hops around the ring from node to node. Each node\n   appends its mac\
    \ address binding, updates the length field and sends\n   it to the next hop on\
    \ the ring. If there is a wrap on the ring, the\n   wrapped node will indicate\
    \ a wrap when appending its mac binding and\n   wrap the packet. When the topology\
    \ packets travel on the wrapped\n   section with the ring identifier being different\
    \ from that of the\n   topology packet itself, the mac address bindings are not\
    \ added to the\n   packet.\n   Eventually the node that generated the topology\
    \ discovery packet gets\n   back the packet. The node makes sure that the packet\
    \ has the same\n   ingress and egress ring id before excepting the packet. A topology\n\
    \   map is changed only after receiving two topology packets which\n   indicate\
    \ the same new topology (to prevent topology changes on\n   transient conditions).\n\
    \   Note that the topology map only contains the reachable nodes. It does\n  \
    \ not correspond to the failure-free ring in case of wraps and ring\n   segmentations.\n\
    \   FIGURE 13. Topology Packet Format\n       Topology\n        0            \
    \       1                   2                   3\n        0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  Time to Live |R| MOD | PRI |P|                               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+     Destination Address       |\n    \
    \   |                                                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n       +  \
    \  Source Address             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |    \
    \                           |     Protocol Type = 0x2007    |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | Control Ver=0 | Control Type=1|    Control Checksum           |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |   Control TTL                 |   Topology Length             |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \       Originator's Globally Unique                            |\n       +  \
    \     MAC Address  (48 bits)  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |    \
    \                           |  MAC Type     |               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               +\n       |                   MAC Address (48 bits)          \
    \             |\n       +               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |               |   Other MAC bindings                          |\n  \
    \     +-+-+-+-+-+-+-+-+                                               +\n    \
    \   |                                                               |\n      \
    \ +                                                               +\n   Note that\
    \ the Source address should be set to the source address of\n   the TRANSMITTING\
    \ node (which is not necessarily the ORIGINATING\n   node).\n"
- title: 4.6.1.  Topology Length
  contents:
  - "4.6.1.  Topology Length\n   This two octet field represents the length of the\
    \ topology message in\n   octets starting with the first MAC Type/MAC Address\
    \ binding.\n"
- title: 4.6.2.  Topology Originator
  contents:
  - "4.6.2.  Topology Originator\n   A topology discovery packet is determined to\
    \ have been originated by\n   a node if the originator's globally unique MAC address\
    \ of the packet\n   is that node's globally unique MAC address (assigned by the\
    \ IEEE).\n   Because the mac addresses could be changed at a node, the IEEE MAC\n\
    \   address ensures that a unique identifier is used to determine that\n   the\
    \ topology packet has gone around the ring and is to be consumed.\n"
- title: 4.6.3.  MAC bindings
  contents:
  - "4.6.3.  MAC bindings\n   Each MAC binding shall consist of a MAC Type field followed\
    \ by the\n   node's 48 bit MAC address.  The first MAC binding shall be the MAC\n\
    \   binding of the originator.  Usually the originator's MAC address will\n  \
    \ be it's globally unique MAC Address but some implementations may\n   allow this\
    \ value to be overridden by the network administrator.\n"
- title: 4.6.4.  MAC Type Format
  contents:
  - "4.6.4.  MAC Type Format\n   This 8 bit field is encoded as follows:\n       \
    \ TABLE 5. MAC Type Format\n        Bit     Value\n        0       Reserved\n\
    \        1       Ring ID (1 or 0)\n        2       Wrapped Node (1) / Unwrapped\
    \ Node (0)\n        3-7     Reserved\n   Determination of whether a packet's egress\
    \ and ingress ring ID's are\n   a match should be done by using the Ring ID found\
    \ in the MAC Type\n   field of the last MAC binding as the ingress ring ID rather\
    \ than the\n   R bit found in the SRP header.  Although they should be the same,\
    \ it\n   is better to separate the two functions as some implementations may\n\
    \   not provide the SRP header to upper layer protocols.\n   The topology information\
    \ is not required for the IPS protection\n   mechanism. This information can be\
    \ used to calculate the number of\n   nodes in the ring as well as to calculate\
    \ hop distances to nodes to\n   determine the shortest path to a node (since there\
    \ are two counter-\n   rotating rings).\n   The implementation of the topology\
    \ discovery mechanism could be a\n   periodic activity or on \"a need to discover\"\
    \ basis. In the periodic\n   implementation, each node generates the topology\
    \ packet periodically\n   and uses the cached topology map until it gets a new\
    \ one. In the need\n   to discover implementation, each node generates a topology\
    \ discovery\n   packet whenever they need one e.g., on first entering a ring or\n\
    \   detecting a wrap.\n"
- title: 4.7.  Intelligent Protection Switching (IPS)
  contents:
  - "4.7.  Intelligent Protection Switching (IPS)\n   IPS is a method for automatically\
    \ recovering from various ring\n   failures and line degradation scenarios. The\
    \ IPS packet format is\n   outlined in Figure 14 below.\n   FIGURE 14. IPS Packet\
    \ Format\n        0                   1                   2                  \
    \ 3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \     |  Time to Live |R| MOD | PRI |P|                               |\n    \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+     Destination Address       |\n      \
    \ |                                                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \     +    Source Address             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                               |     Protocol Type = 0x2007    |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \ Control Ver=0 | Control Type=2|    Control Checksum           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |   Control TTL                 |                               |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n    \
    \   |             Originator MAC Address                            |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \   Ips Octet   |  Rsvd Octet   |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The IPS specific fields are detailed below.\n"
- title: 4.7.1.  Originator MAC Address
  contents:
  - "4.7.1.  Originator MAC Address\n   This is the MAC address of the originator\
    \ of the IPS message.  It is\n   not necessarily the same as the SRP Header Source\
    \ Address as a node\n   may be simply propagating an IPS message (see the section\
    \ \"SRP IPS\n   Protocol Rules\" Rule P.8 as an example).\n"
- title: 4.7.2.  IPS Octet
  contents:
  - "4.7.2.  IPS Octet\n   The IPS octet contains specific protection information.\
    \ The format of\n   the IPS octet is as follows:\n   FIGURE 15. IPS Octet Format:\n\
    \   Bits    Values (values not listed are reserved)\n   0-3     IPS Request Type\n\
    \           1101 - Forced Switch (FS)\n           1011 - Signal Fail (SF)\n  \
    \         1000 - Signal Degrade (SD)\n           0110 - Manual Switch (MS)\n \
    \          0101 - Wait to Restore (WTR)\n           0000 - No Request (IDLE)\n\
    \   4       Path indicator\n           0 - short (S)\n           1 - long (L)\n\
    \   5-7     Status Code\n           010 - Protection Switch Completed - traffic\
    \ Wrapped (W)\n           000 - Idle (I)\n   The currently defined request types\
    \ with values, hierarchy and\n   interpretation are as used in SONET BLSR [3],\
    \ [4], except as noted.\n"
- title: 4.8.  Circulating packet detection (stripping)
  contents:
  - "4.8.  Circulating packet detection (stripping)\n   Packets continue to circulate\
    \ when transmitted packets fail to get\n   stripped. Unicast packets are normally\
    \ stripped by the destination\n   station or by the source station if the destination\
    \ station has\n   failed. Multicast packets are only stripped by the source station.\
    \ If\n   both the source and destination stations drop out of the ring while a\n\
    \   unicast packet is in flight, or if the source node drops out while\n   its\
    \ multicast packet is in flight, the packet will rotate around the\n   ring continuously.\n\
    \   The solution to this problem is to have a TTL or Time To Live field\n   in\
    \ each packet that is set to at least twice the number of nodes in\n   the ring.\
    \ As each node forwards the packet, it decrements the TTL. If\n   the TTL reaches\
    \ zero it is stripped off of the ring.\n   The ring ID is used to qualify all\
    \ stripping and receive decisions.\n   This is necessary to handle the case where\
    \ packets are being wrapped\n   by some node in the ring. The sending node may\
    \ see its packet on the\n   reverse ring prior to reaching its destination so\
    \ must not source\n   strip it.  The exception is if a node is in wrap.  Logically,\
    \ a node\n   in wrap \"sees\" the packet on both rings.  However the usual\n \
    \  implementation is to receive the packet on one ring and to transmit\n   it\
    \ on the other ring.  Therefore, a node that is in the wrap state\n   ignores\
    \ the ring ID when making stripping and receiving decisions.\n   A potential optimization\
    \ would be to allow ring ID independent\n   destination stripping of unicast packets.\
    \  One problem with this is\n   that packets may be delivered out of order during\
    \ a transition to a\n   wrap condition. For this reason, the ring ID should always\
    \ be used as\n   a qualifier for all strip and receive decisions.\n"
- title: 5.  Packet acceptance and stripping
  contents:
  - "5.  Packet acceptance and stripping\n   A series of decisions based on the type\
    \ of packet (mode), source and\n   destination addresses are made on the MAC incoming\
    \ packets. Packets\n   can either be control or data packets.  Control packets\
    \ are stripped\n   once the information is extracted. The source and destination\n\
    \   addresses are checked in the case of data packets. The rules for\n   reception\
    \ and stripping are given below as well as in the flow chart\n   in Figure 16.\n\
    \      1. Decrement TTL on receipt of a packet, discard if it gets to\n      \
    \   zero; do not forward.\n      2. Strip unicast packets at the destination station.\
    \  Accept and\n         strip \"control\" packets.\n      3. Do not process packets\
    \ other than for TTL and forwarding if\n         they have the \"wrong\" ring_id\
    \ for the direction in which they\n         are received unless the node is in\
    \ wrap.  If the node is in\n         wrap then ignore the ring_id.\n      4. Do\
    \ not process packets other than for TTL and forwarding if the\n         mode\
    \ is not supported by the node (e.g. reserved modes, or ATM\n         cell mode\
    \ for packet nodes).\n      5. Packets accepted by the host because of the destination\
    \ address\n         should be discarded at the upper level if there is CRC error.\n\
    \      6. Control messages are point to point between neighbors and\n        \
    \ should always be accepted and stripped.\n      7. Packets whose source address\
    \ is that of the receiving station\n         and whose ring_id matches should\
    \ be stripped.  If a node is in\n         wrap then ignore the ring_id.\n   FIGURE\
    \ 16. SRP Receive Flowchart (Packet node)\n   if (MODE == 4,5)-------------------------------->[to\
    \ host]--->|\n           |                                                   \
    \  |\n           v                                                     |\n   if\
    \ (MODE == 6)---------------------------------->[strip]----->|\n           | \
    \                                                    |\n           v         \
    \                                            |\n   if (!WRAPPED              \
    \                                    |\n      & WRONG_RING_ID)-------------------------------------------|--->|\n\
    \           |                                                     |    |\n   \
    \        v                                                     |    |\n   if (MODE\
    \ == 0,1,2,3)------------------------------------------|--->|\n           |  \
    \                                                   |    |\n           v     \
    \                                                |    |\n   if (DA MATCH)--------------->if\
    \ !(SA MATCH)----->[to host]--->|    |\n           |                         \
    \   |                        |    |\n           |                            v\
    \                        |    |\n           |                    if (unicast)------->[to\
    \ host]--->|    |\n           |                            |                 \
    \       |    |\n           |                            v                    \
    \    |    |\n   if (SA MATCH)-------------------->[strip]-------------------->|\
    \    |\n           |                                                     |   \
    \ |\n           |                                                     |    v\n\
    \           |--------------------------->|<-----------------------|----|\n   \
    \                                     |                        |\n           \
    \                             v                        |\n                   \
    \             if (ttl < 2)------->[strip]----->|\n                           \
    \             |                        |\n                                   \
    \     v                        |\n                                [decrement ttl]\
    \                  |\n                                        |              \
    \          |\n                                [fwd pkt to tb]                \
    \  |\n                                        |                        v\n   \
    \                                     |<-----------------------|\n           \
    \                             v\n                                  [back to top]\n\
    \   Notes:  Host is responsible for discarding CRC errored packets.\n        \
    \   Conditionals (if statements) branch to the right if true\n           and branch\
    \ down if false.\n"
- title: 5.1.  Transmission and forwarding with priority
  contents:
  - "5.1.  Transmission and forwarding with priority\n   A node can transmit four\
    \ types of packets:\n      1. High priority packets from the high priority transit\n\
    \         buffer.\n      2. Low priority packets from the low priority transit\
    \ buffer.\n      3. High priority packets from the host Tx high priority fifo.\n\
    \      4. Low priority packets from the host Tx low priority fifo.\n   High priority\
    \ packets from the transit buffer are always sent first.\n   High priority packets\
    \ from the host are sent as long as the low\n   priority transit buffer is not\
    \ full.  Low priority packets are sent\n   as long as the transit buffer has not\
    \ crossed the low priority\n   threshold and the SRP-fa rules allow it (my_usage\
    \ < allowed_usage).\n   If nothing else can be sent, low priority packets from\
    \ the low\n   priority transit buffer are sent.\n   This decision tree is shown\
    \ in Figure 17.\n   FIGURE 17. SRP transmit flowchart\n   if (TB_High has pkt)----------->[send\
    \ pkt from TB_high]-->|\n           |                                        \
    \         |\n           v                                                 |\n\
    \   if (TB_Low full)------------------------------------------|---->|\n      \
    \     |                                                 |     |\n           v\
    \                                                 |     |\n   if (Tx_High has\
    \ pkt)----------->[send pkt from Tx_high]-->|     |\n           |            \
    \                                     |     |\n           v                  \
    \                               |     |\n   if (TB_Low > Hi threshold)--------------------------------|---->|\n\
    \           |                                                 |     |\n      \
    \     v                                                 |     |\n   if (my_usage\
    \ >= allowed_usage)----------------------------|---->|\n           |         \
    \                                        |     |\n           v               \
    \                                  |     |\n   if (Tx_Low has pkt)------------>[send\
    \ pkt from Tx_low]--->|     |\n           |                                  \
    \               |     |\n           |                                        \
    \         |     v\n           |<------------------------------------------------|-----|\n\
    \           |                                                 |\n           v\
    \                                                 |\n   if (TB_Low has pkt)------------>[send\
    \ pkt from TB_low]--->|\n           |                                        \
    \         v\n           |<------------------------------------------------|\n\
    \           |\n           v\n       [Go to Top]\n   Notes:  Conditionals (if statements)\
    \ branch to the right if true\n           and branch down if false.\n"
- title: 5.2.  Wrapping of Data
  contents:
  - "5.2.  Wrapping of Data\n   Normally, transmitted data is sent on the same ring\
    \ to the downstream\n   neighbor.  However, if a node is in the wrapped state,\
    \ transmitted\n   data is sent on the opposite ring to the upstream neighbor.\n"
- title: 6.  SRP-fa Rules Of Operation
  contents:
  - "6.  SRP-fa Rules Of Operation\n   The SRP-fa governs access to the ring.  The\
    \ SRP-fa only applies to\n   low priority traffic.  High priority traffic does\
    \ not follow SRP-fa\n   rules and may be transmitted at any time as long as there\
    \ is\n   sufficient transit buffer space.\n   The SRP-fa requires three counters\
    \ which control the traffic\n   forwarded and sourced on the SRP ring. The counters\
    \ are my_usage\n   (tracks the amount of traffic sourced on the ring), forward_rate\n\
    \   (amount of traffic forwarded on to the ring from sources other than\n   the\
    \ host) and allowed_usage (the current maximum transmit usage for\n   that node).\n\
    \   With no congestion all nodes build up allowed usage periodically.\n   Each\
    \ node can send up to max_usage.  Max_usage is a per node\n   parameter than limits\
    \ the maximum amount of low priority traffic a\n   node can send.\n   When a node\
    \ sees congestion it starts to advertise its my_usage which\n   has been low pass\
    \ filtered (lp_my_usage).\n   Congestion is measured by the transit buffer depth\
    \ crossing a\n   congestion threshold.\n   A node that receives a non-null usage\
    \ message (rcvd_usage) will set\n   its allowed usage to the value advertised.\
    \  However, if the source of\n   the rcvd_usage is the same node that received\
    \ it then the rcvd_usage\n   shall be treated as a null value.  When comparing\
    \ the rcvd_usage\n   source address the ring ID of the usage packet must match\
    \ the\n   receiver's ring ID in order to qualify as a valid compare.  The\n  \
    \ exception is if the receive node is in the wrap state in which case\n   the\
    \ usage packet's ring ID is ignored.\n   Nodes that are not congested and that\
    \ receive a non-null rcvd_usage\n   generally propagate rcvd_usage to their upstream\
    \ neighbor else\n   propagate a null value of usage (all 1's).  The exception\
    \ is when an\n   opportunity for local reuse is detected. Additional spatial reuse\n\
    \   (local reuse) is achieved by comparing the forwarded rate (low pass\n   filtered)\
    \ to allow_usage.  If the forwarded rate is less than the\n   allowed usage, then\
    \ a null value is propagated to the upstream\n   neighbor.\n   Nodes that are\
    \ congested propagate the smaller of lp_my_usage and\n   rcvd_usage.\n   Convergence\
    \ is dependent upon number of nodes and distance.\n   Simulation has shown simulation\
    \ convergence within 100 msec for rings\n   of several hundred miles.\n"
- title: 6.1.  SRP-fa pseudo-code
  contents:
  - "6.1.  SRP-fa pseudo-code\n   A more precise definition of the fairness algorithm\
    \ is shown below:\n"
- title: 'Variables:'
  contents:
  - 'Variables:

    '
- title: lo_tb_depth     low priority transit buffer depth
  contents:
  - 'lo_tb_depth     low priority transit buffer depth

    '
- title: my_usage        count of octets transmitted by host
  contents:
  - 'my_usage        count of octets transmitted by host

    '
- title: lp_my_usage     my_usage run through a low pass filter
  contents:
  - 'lp_my_usage     my_usage run through a low pass filter

    '
- title: my_usage_ok     flag indicating that host is allowed to transmit
  contents:
  - 'my_usage_ok     flag indicating that host is allowed to transmit

    '
- title: allow_usage     the fair amount each node is allowed to transmit
  contents:
  - 'allow_usage     the fair amount each node is allowed to transmit

    '
- title: fwd_rate        count of octets forwarded from upstream
  contents:
  - 'fwd_rate        count of octets forwarded from upstream

    '
- title: lp_fwd_rate     fwd_rate run through a low pass filter
  contents:
  - 'lp_fwd_rate     fwd_rate run through a low pass filter

    '
- title: congested       node cannot transmit host traffic without the TB buffer
  contents:
  - "congested       node cannot transmit host traffic without the TB buffer\n   \
    \             filling beyond its congestion threshold point.\n"
- title: rev_usage       the usage value passed along to the upstream neighbor
  contents:
  - 'rev_usage       the usage value passed along to the upstream neighbor

    '
- title: 'Constants:'
  contents:
  - 'Constants:

    '
- title: MAX_ALLOWANCE = configurable value for max allowed usage for this node
  contents:
  - 'MAX_ALLOWANCE = configurable value for max allowed usage for this node

    '
- title: DECAY_INTERVAL = 8000 octet times @ OC-12, 32,000 octet times @ OC-48
  contents:
  - 'DECAY_INTERVAL = 8000 octet times @ OC-12, 32,000 octet times @ OC-48

    '
- title: AGECOEFF = 4    // Aging coeff for my_usage and fwd_rate
  contents:
  - 'AGECOEFF = 4    // Aging coeff for my_usage and fwd_rate

    '
- title: LP_FWD  = 64    // Low pass filter for fwd_rate
  contents:
  - 'LP_FWD  = 64    // Low pass filter for fwd_rate

    '
- title: LP_MU   = 512   // Low pass filter for my usage
  contents:
  - 'LP_MU   = 512   // Low pass filter for my usage

    '
- title: LP_ALLOW = 64   // Low pass filter for allow usage auto increment
  contents:
  - 'LP_ALLOW = 64   // Low pass filter for allow usage auto increment

    '
- title: NULL_RCVD_INFO = All 1's in rcvd_usage field
  contents:
  - 'NULL_RCVD_INFO = All 1''s in rcvd_usage field

    '
- title: TB_LO_THRESHOLD // TB depth at which no more lo-prio host traffic
  contents:
  - "TB_LO_THRESHOLD // TB depth at which no more lo-prio host traffic\n         \
    \       // can be sent\n"
- title: MAX_LRATE = AGECOEFF * DECAY_INTERVAL = 128,000 for OC-48, 32000 for
  contents:
  - "MAX_LRATE = AGECOEFF * DECAY_INTERVAL = 128,000 for OC-48, 32000 for\n      \
    \      OC-12\n"
- title: 'THESE ARE UPDATED EVERY CLOCK CYCLE:'
  contents:
  - 'THESE ARE UPDATED EVERY CLOCK CYCLE:

    '
- title: =====================================
  contents:
  - '=====================================

    '
- title: my_usage        is incremented by 1 for every octet that is
  contents:
  - "my_usage        is incremented by 1 for every octet that is\n               \
    \ transmitted by the host (does not include data\n                transmitted\
    \ from the Transit Buffer).\n"
- title: fwd_rate        is incremented by 1 for every octet that enters the
  contents:
  - "fwd_rate        is incremented by 1 for every octet that enters the\n       \
    \         Transit Buffer\n"
- title: if ((my_usage < allow_usage) &&
  contents:
  - "if ((my_usage < allow_usage) &&\n        !((lo_tb_depth > 0) && (fwd_rate < my_usage))\
    \ &&\n                (my_usage < MAX_ALLOWANCE))\n        // true means OK to\
    \ send host packets\n        my_usage_ok = true;\n"
- title: 'UPDATED WHEN USAGE_PKT IS RECEIVED:'
  contents:
  - 'UPDATED WHEN USAGE_PKT IS RECEIVED:

    '
- title: ===================================
  contents:
  - '===================================

    '
- title: if (usage_pkt.SA == my_SA) &&
  contents:
  - "if (usage_pkt.SA == my_SA) &&\n        [(usage_pkt.RI == my_RingID) || (node_state\
    \ == wrapped)]\n        rcvd_usage = NULL_RCVD_INFO;\n"
- title: else
  contents:
  - "else\n        rcvd_usage = usage_pkt.usage;\n"
- title: 'THE FOLLOWING IS CALCULATED EVERY DECAY_INTERVAL:'
  contents:
  - 'THE FOLLOWING IS CALCULATED EVERY DECAY_INTERVAL:

    '
- title: ==================================================
  contents:
  - '==================================================

    '
- title: congested = (lo_tb_depth > TB_LO_THRESHOLD/2)
  contents:
  - 'congested = (lo_tb_depth > TB_LO_THRESHOLD/2)

    '
- title: lp_my_usage = ((LP_MU-1) * lp_my_usage + my_usage) / LP_MU
  contents:
  - 'lp_my_usage = ((LP_MU-1) * lp_my_usage + my_usage) / LP_MU

    '
- title: my_usage is decremented by min(allow_usage/AGECOEFF, my_usage/AGECOEFF)
  contents:
  - 'my_usage is decremented by min(allow_usage/AGECOEFF, my_usage/AGECOEFF)

    '
- title: lp_fwd_rate = ((LP_FWD-1) * lp_fwd_rate + fwd_rate) / LP_FWD
  contents:
  - 'lp_fwd_rate = ((LP_FWD-1) * lp_fwd_rate + fwd_rate) / LP_FWD

    '
- title: fwd_rate is decremented by fwd_rate/AGECOEFF
  contents:
  - 'fwd_rate is decremented by fwd_rate/AGECOEFF

    '
- title: '(Note: lp values must be calculated prior to decrement of non-lp'
  contents:
  - '(Note: lp values must be calculated prior to decrement of non-lp

    '
- title: values).
  contents:
  - 'values).

    '
- title: if (rcvd_usage != NULL_RCVD_INFO)
  contents:
  - "if (rcvd_usage != NULL_RCVD_INFO)\n        allow_usage = rcvd_usage;\n"
- title: else
  contents:
  - "else\n        allow_usage += (MAX_LRATE - allow_usage) / (LP_ALLOW);\n"
- title: if (congested)
  contents:
  - "if (congested)\n      {\n        if (lp_my_usage < rcvd_usage)\n            \
    \    rev_usage = lp_my_usage;\n        else\n                rev_usage =  rcvd_usage;\n\
    \        }\n"
- title: else if ((rcvd_usage != NULL_RCVD_INFO) &&
  contents:
  - "else if ((rcvd_usage != NULL_RCVD_INFO) &&\n         (lp_fwd_rate > allow_usage)\n\
    \    rev_usage = rcvd_usage;\n"
- title: else
  contents:
  - "else\n    rev_usage = NULL_RCVD_INFO\n"
- title: if (rev_usage > MAX_LRATE)
  contents:
  - "if (rev_usage > MAX_LRATE)\n        rev_usage = NULL_RCVD_INFO;\n"
- title: 6.2.  Threshold settings
  contents:
  - "6.2.  Threshold settings\n   The low priority transit buffer (TB_LO_THRESHOLD)\
    \ is currently sized\n   to about 4.4 msec or 320 KB at OC12 rates.  The TB_HI_THRESHOLD\
    \ is\n   set to about 870 usec higher than the TB_LO_THRESHOLD or at 458 KB at\n\
    \   OC12 rates.\n   The high priority transit buffer needs to hold 2 to 3 MTUs\
    \ or about\n   30KB.\n"
- title: 7.  SRP Synchronization
  contents:
  - "7.  SRP Synchronization\n   Each node operates in \"free-run\" mode. That is,\
    \ the receive clock is\n   derived from the incoming receive stream while the\
    \ transmit clock is\n   derived from a local oscillator. This eliminates the need\
    \ for\n   expensive clock synchronization as required in existing SONET\n   networks.\
    \ Differences in clock frequency are accommodated by\n   inserting a small amount\
    \ of idle bandwidth at each nodes output.\n   The clock source for the transmit\
    \ clock shall be selected to deviate\n   by no more than 20 ppm from the center\
    \ frequency. The overall\n   outgoing rate of the node shall be rate shaped to\
    \ accommodate the\n   worst case difference between receive and transmit clocks\
    \ of adjacent\n   nodes. This works as follows:\n   A transit buffer slip count\
    \ (tb_cnt) keeps track of the amount of\n   octets inserted into the TB minus\
    \ the amount of octets transmitted\n   and is a positive integer.\n   To account\
    \ for a startup condition where a packet is being inserted\n   into an empty TB\
    \ and the node was otherwise idle the tb_cnt is reset\n   if the transmit interface\
    \ is idle.  Idle is defined as no data being\n   sent even though there is opportunity\
    \ to send (i.e. the transmit\n   interface is not prohibited from transmitting\
    \ by the physical layer).\n   An interval counter defines the sample period over\
    \ which rate shaping\n   is performed.  This number should be sufficiently large\
    \ to get an\n   accurate rate shaping.\n   A token_bucket counter implements the\
    \ rate shaping and is a signed\n   integer.  We increment this counter by one\
    \ of two fixed values called\n   quantums each sample period.  Quantum1 sets the\
    \ rate at (Line_rate -\n   Delta) where delta is the clock inaccuracy we want\
    \ to accommodate.\n   Quantum2 sets the rate at (Line_rate + Delta).  If at the\
    \ beginning\n   of a sample period, tb_cnt >= sync_threshold, then we set the\
    \ rate to\n   Quantum2. This will allow us to catch up and causes the TB slip\
    \ count\n   to eventually go < sync_threshold.  If tb_cnt is < sync_threshold\n\
    \   then we set the rate to Quantum1.\n   When the input rate and output rates\
    \ are exactly equal, the tb_cnt\n   will vary between sync_threshold > tb_cnt\
    \ >= 0.  This will vary for\n   each implementation dependent upon the burst latencies\
    \ of the design.\n   The sync_threshold value should be set so that for equal\
    \ transmit and\n   receive clock rates, the transmit data rate is always Line_rate-Delta\n\
    \   and will be implementation dependent.\n   The token_bucket is decremented\
    \ each time data is transmitted.  When\n   token_bucket reaches a value <= 0,\
    \ a halt_transmit flag is asserted\n   which halts further transmission of data\
    \ (halting occurs on a packet\n   boundary of course which can cause token_bucket\
    \ to become a negative\n   number).\n"
- title: 7.1.  SRP Synchronization Examples
  contents:
  - "7.1.  SRP Synchronization Examples\n   Assume an interval of 2^^18 or 262144\
    \ clock cycles.  A Quantum1 value\n   must be picked such that the data rate will\
    \ = (LINE_RATE - DELTA).  A\n   Quantum2 value must be picked and used if the\
    \ tb_cnt shows that the\n   incoming rate is greater than the outgoing rate and\
    \ is = (LINE_RATE +\n   DELTA).  Assume that the source of the incoming and outgoing\
    \ rate\n   clocks are +/- 100 ppm.\n   For an OC12c SPE rate of 600 Mbps and a\
    \ system clock rate of 800 Mbps\n   (16 bits @ 50 Mhz).  The system clock rate\
    \ is the rate at which the\n   system transmits bytes to the framer (in most cases\
    \ the framer\n   transmit rate is asynchronous from the rate at which the system\n\
    \   transfers data to the framer).\n        Quantum1/Interval * 800 Mbps = 600\
    \ Mbps(1 - Delta)\n        Quantum1 = Interval * (600/800) * (1 - Delta)\n   \
    \     Quantum1 = Interval * (600/800) * (1 - 1e-4) = 196588\n        Quantum2/Interval\
    \ * 800 Mbps = 600 Mbps(1 + Delta)\n        Quantum2 = Interval * (600/800) *\
    \ (1 + Delta)\n        Quantum2 = Interval * (600/800) * (1 + 1e-4) = 196628\n\
    \   Note: The actual data rate for OC-12c is 599.04 Mbps.\n"
- title: 8.  IPS Protocol Description
  contents:
  - "8.  IPS Protocol Description\n   An SRP ring is composed of two counter-rotating,\
    \ single fiber rings.\n   If an equipment or fiber facility failure is detected,\
    \ traffic going\n   towards and from the failure direction is wrapped (looped)\
    \ back to go\n   in the opposite direction on the other ring. The wrap around\
    \ takes\n   place on the nodes adjacent to the failure, under software control.\n\
    \   This way the traffic is re-routed from the failed span.\n   Nodes communicate\
    \ between themselves using IPS signaling on both\n   inner and outer ring.\n \
    \  The IPS octet contains specific protection information. The format of\n   the\
    \ IPS octet is as follows:\n   FIGURE 18. IPS Octet format:\n   0-3     IPS Request\
    \ Type\n           1101 - Forced Switch (FS)\n           1011 - Signal Fail (SF)\n\
    \           1000 - Signal Degrade (SD)\n           0110 - Manual Switch (MS)\n\
    \           0101 - Wait to Restore (WTR)\n           0000 - No Request (IDLE)\n\
    \   4       Path indicator\n           0 - short (S)\n           1 - long (L)\n\
    \   5-7     Status Code\n           010 - Protection Switch Completed -traffic\
    \ Wrapped (W)\n           000 - Idle (I)\n   The IPS control messages are shown\
    \ in this document as:\n   {REQUEST_TYPE, SOURCE_ADDRESS, WRAP_STATUS, PATH_INDICATOR}\n"
- title: 8.1.  The IPS Request Types
  contents:
  - "8.1.  The IPS Request Types\n   The following is a list of the request types,\
    \ from the highest to the\n   lowest priority. All requests are signaled using\
    \ IPS control\n   messages.\n      1. Forced Switch (FS - operator originated)\n\
    \         This command performs the ring switch from the working channel\n   \
    \      to the protection, wrapping the traffic on the node at which\n        \
    \ the command is issued and at the adjacent node to which the\n         command\
    \ is destined.  Used for example to add another node to\n         the ring in\
    \ a controlled fashion.\n      2. Signal Fail (SF - automatic)\n         Protection\
    \ caused by a media \"hard failure\" or SRP keep- alive\n         failure.  SONET\
    \ examples of SF triggers are: Loss of Signal\n         (LOS), Loss of Frame (LOF),\
    \ Line Bit Error Rate (BER) above a\n         preselected SF threshold, Line Alarm\
    \ Indication Signal (AIS).\n         Note that the SRP keep-alive failure provides\
    \ end-to-end\n         coverage and as a result SONET Path triggers are not necessary.\n\
    \      3. Signal Degrade (SD - automatic)\n         Protection caused by a media\
    \ \"soft failure\". SONET example of a\n         SD is Line BER or Path BER above\
    \ a preselected SD threshold.\n      4. Manual Switch (MS - operator originated)\n\
    \         Like the FS, but of lower priority. Can be used for example to\n   \
    \      take down the WTR.\n      5. Wait to Restore (WTR - automatic)\n      \
    \   Entered after the working channel meets the restoration\n         threshold\
    \ after an SD or SF condition disappears. IPS waits WTR\n         timeout before\
    \ restoring traffic in order to prevent protection\n         switch oscillations.\n"
- title: 8.2.  SRP IPS Protocol States
  contents:
  - "8.2.  SRP IPS Protocol States\n   Each node in the IPS protocol is in one of\
    \ the following states for\n   each of the rings:\n"
- title: 8.2.1.  Idle
  contents:
  - "8.2.1.  Idle\n   In this mode the node is ready to perform the protection switches\
    \ and\n   it sends to both neighboring nodes \"idle\" IPS messages, which include\n\
    \   \"self\" in the source address field {IDLE, SELF, I, S}\n"
- title: 8.2.2.  Pass-through
  contents:
  - "8.2.2.  Pass-through\n   Node participates in a protection switch by passing\
    \ the wrapped\n   traffic and long path signaling through itself. This state is\
    \ entered\n   based on received IPS messages. If a long path message with not\
    \ null\n   request is received and if the node does not strip the message (see\n\
    \   Protocol Rules for stripping conditions) the node decrements the TTL\n   and\
    \ retransmits the message without modification.  Sending of the\n   Idle messages\
    \ is stopped in the direction in which the message with\n   not null request is\
    \ forwarded.\n"
- title: 8.2.3.  Wrapped
  contents:
  - "8.2.3.  Wrapped\n   Node participates in a protection switch with a wrap present.\
    \ This\n   state is entered based on a protection request issued locally or\n\
    \   based on received IPS messages.\n"
- title: 8.3.  IPS Protocol Rules
  contents:
  - '8.3.  IPS Protocol Rules

    '
- title: 8.3.1.  SRP IPS Packet Transfer Mechanism
  contents:
  - "8.3.1.  SRP IPS Packet Transfer Mechanism\n   R T.1:\n   IPS packets are transferred\
    \ in a store and forward mode between\n   adjacent nodes (packets do not travel\
    \ more than 1 hop between nodes\n   at a time). Received packet (payload portion)\
    \ is passed to software\n   based on interrupts.\n   R T.2:\n   All IPS messages\
    \ are sent to the neighboring nodes periodically on\n   both inner and outer rings.\
    \ The timeout period is configurable 1-600\n   sec (default 1 sec).  It is desirable\
    \ (but not required) that the\n   timeout is automatically decreased by a factor\
    \ of 10 for the short\n   path protection requests.\n"
- title: 8.3.2.  SRP IPS Signaling and Wrapping Mechanism
  contents:
  - "8.3.2.  SRP IPS Signaling and Wrapping Mechanism\n   R S.1:\n   IPS signaling\
    \ is performed using IPS control packets as defined in\n   Figure 14 \"IPS Packet\
    \ Format\".\n   R S.2:\n   Node executing a local request signals the protection\
    \ request on both\n   short (across the failed span) and long (around the ring)\
    \ paths after\n   performing the wrap.\n   R S.3:\n   Node executing a short path\
    \ protection request signals an idle\n   request with wrapped status on the short\
    \ (across the failed span)\n   path and a protection request on the long (around\
    \ the ring) path\n   after performing the wrap.\n   R S.4:\n   A node which is\
    \ neither executing a local request nor executing a\n   short path request signals\
    \ IDLE messages to its neighbors on the ring\n   if there is no long path message\
    \ passing through the node on that\n   ring.\n   R S.5:\n   Protection IPS packets\
    \ are never wrapped.\n   R S.6:\n   If the protocol calls for sending both short\
    \ and long path requests\n   on the same span (for example if a node has all fibers\
    \ disconnected),\n   only the short path request should be sent.\n   R S.7:\n\
    \   A node wraps and unwraps only on a local request or on a short path\n   request.\
    \ A node never wraps or unwraps as a result of a long path\n   request. Long path\
    \ requests are used only to maintain protection\n   hierarchy. (Since the long\
    \ path requests do not trigger protection,\n   there is no need for destination\
    \ addresses and no need for topology\n   maps)\n   In Figure 19, Node A detects\
    \ SF (local request/ self-detected\n   request) on the span between Node A and\
    \ Node B and starts sourcing\n   {SF, A, W, S} on the outer ring and {SF, A, W,\
    \ L} on the inner ring.\n   Node B receives the protection request from Node A\
    \ (short path\n   request) and starts sourcing {IDLE, B, W, S} on the inner ring\
    \ and\n   {SF, B, W, L} on the outer ring.\n   FIGURE 19. SRP IPS Signaling\n\
    \      {SF,A,W,S}\n               -------------------------------\n          \
    \    |  -----X---------------------  |\n              | |     fiber          \
    \       | |\n              | v     cut       {IDLE,B,W,S}| v\n             -----\
    \                         -----\n             | A |                         |\
    \ B |\n             |   |                         |   |\n             -----  \
    \                       -----\n              ^ | {SF,A,W,L}              i ^ |\
    \ o {SF,B,W,L}\n              | |                         n | | u\n          \
    \    | |                         n | | t\n              | |                  \
    \       e | | e\n              | v                         r | v r\n"
- title: 8.4.  SRP IPS Protocol Rules
  contents:
  - "8.4.  SRP IPS Protocol Rules\n   R P.1:\n   Protection Request Hierarchy is as\
    \ follows (Highest priority to the\n   lowest priority). In general a higher priority\
    \ request preempts a\n   lower priority request within the ring with exceptions\
    \ noted as\n   rules. The 4 bit values below correspond to the REQUEST_TYPE field\
    \ in\n   the IPS packet.\n         1101 - Forced Switch (FS)\n         1011 -\
    \ Signal Fail (SF)\n         1000 - Signal Degrade (SD)\n         0110 - Manual\
    \ Switch (MS)\n         0101 - Wait to Restore (WTR)\n         0000 - No Request\
    \ (IDLE): Lowest priority\n   R P.2:\n   Requests >= SF can coexist.\n   R P.3:\n\
    \   Requests < SF can not coexist with other requests.\n   R P.4:\n   A node always\
    \ honors the highest of {short path request, self\n   detected request} if there\
    \ is no higher long path message passing\n   through the node.\n   R P.5:\n  \
    \ When there are more requests of priority < SF, the first request to\n   complete\
    \ long path signaling will take priority.\n   R P.6:\n   A Node never forwards\
    \ an IPS packet received by it which was\n   originally generated by the node\
    \ itself (it has the node's source\n   address).\n   R P.7:\n   Nodes never forward\
    \ packets with the PATH_INDICATOR set to SHORT.\n   R P.8:\n   When a node receives\
    \ a long path request and the request is >= to the\n   highest of {short path\
    \ request, self detected request}, the node\n   checks the message to determine\
    \ if the message is coming from its\n   neighbor on the short path. If that is\
    \ the case then it does not\n   enter pass-thru and it strips the message.\n \
    \  R P.9:\n   When a node receives a long path request, it strips (terminates)\
    \ the\n   request if it is a wrapped node with a request >= than that in the\n\
    \   request; otherwise it passes it through and unwraps.\n   R P.10:\n   Each\
    \ node keeps track of the addresses of the immediate neighbors\n   (the neighbor\
    \ node address is gleaned from the short path IPS\n   messages).\n   R P.11:\n\
    \   When a wrapped node (which initially detected the failure) discovers\n   disappearance\
    \ of the failure, it enters WTR (user-configurable WTR\n   time-period). WTR can\
    \ be configured in the 10-600 sec range with a\n   default value of 60 sec.\n\
    \   R P.12:\n   When a node is in WTR mode, and detects that the new neighbor\
    \ (as\n   identified from the received short path IPS message) is not the same\n\
    \   as the old neighbor (stored at the time of wrap initiation), the node\n  \
    \ drops the WTR.\n   R P.13:\n   When a node is in WTR mode and long path request\
    \ Source is not equal\n   to the neighbor Id on the opposite side (as stored at\
    \ the time of\n   wrap initiation), the node drops the WTR.\n   R P.14:\n   When\
    \ a node receives a local protection request of type SD or SF and\n   it cannot\
    \ be executed (according to protocol rules) it keeps the\n   request pending.\
    \ (The request can be kept pending outside of the\n   protection protocol implementation).\n\
    \   R P.15:\n   If a local non-failure request (WTR, MS, FS) clears and if there\
    \ are\n   no other requests pending, the node enters idle state.\n   R P.16:\n\
    \   If there are two failures and two resulting WTR conditions on a\n   single\
    \ span, the second WTR to time out brings both the wraps down\n   (after the WTR\
    \ time expires a node does not unwrap automatically but\n   waits till it receives\
    \ idle messages from its neighbor on the\n   previously failed span)\n   R P.17:\n\
    \   If a short path FS request is present on a given side and a SF/SD\n   condition\
    \ takes place on the same side, accept and process the SF/SD\n   condition ignoring\
    \ the FS. Without this rule a single ended wrap\n   condition could take place.\
    \ (Wrap on one end of a span only).\n"
- title: 8.5.  State Transitions
  contents:
  - "8.5.  State Transitions\n   Figure 20 shows the simplified state transition diagram\
    \ for  the  IPS\n   protocol:\n   FIGURE 20. Simplified State Transitions Diagram\n\
    \                         Local FS,SF,SD,MS req.\n             ---------   or\
    \ Rx{REQ,SRC,W,S} from mate\n            |   IDLE  |-------------------------------------------\n\
    \            |         |<----------------------------------------  |\n       \
    \      ---------   Local REQ clears                       | |\n              \
    \  ^ |      or Rx{IDLE,SRC,I,S}                    | |\n                | |  \
    \                                           | |\n                | |         \
    \                                    | |\n                | |                \
    \                             | |\n                | |                       \
    \                      | |\n"
- title: Rx{IDLE,SRC,I,S}| | Rx{REQ,SRC,W,L}                             | |
  contents:
  - "Rx{IDLE,SRC,I,S}| | Rx{REQ,SRC,W,L}                             | |\n       \
    \         | |                                             | |\n              \
    \  | |                                             | |\n                | v  \
    \  Local FS,SF,SD,MS REQ > Active req.      | v\n             --------- or Rx{REQ,SRC,W,S},REQ\
    \ > Active req.  ---------\n            |  PASS   |------------------------------------>|\
    \ WRAPPED |\n            |  THRU   |<------------------------------------|   \
    \      |\n             ---------                                       ---------\n\
    \             Forwards                   Tx{REQ,SELF,W,S} for local REQ\n    \
    \         {REQ,SRC,W,L}              Tx{IDLE,SELF,W,S} for mate REQ\n        \
    \                                & Tx{REQ,SELF,W,L}\n   Legend: Mate = node on\
    \ the other end of the affected span\n           REQ = {FS | SF | SD | MS}\n"
- title: 8.6.  Failure Examples
  contents:
  - '8.6.  Failure Examples

    '
- title: 8.6.1.  Signal Failure - Single Fiber Cut Scenario
  contents:
  - "8.6.1.  Signal Failure - Single Fiber Cut Scenario\n   Sample scenario in a ring\
    \ of four nodes A, B, C and D, with\n   unidirectional failure on a fiber from\
    \ A to B, detected on B. Ring is\n   in the Idle state (all nodes are Idle) prior\
    \ to failure.\n   Signal Fail Scenario\n   1. Ring in Idle, all nodes transmit\
    \ (Tx) {IDLE, SELF, I, S} on both\n         rings (in both directions)\n   FIGURE\
    \ 21. An SRP Ring with outer ring fiber cut\n                        fiber cut\n\
    \               ---------X-----------------------------\n              |  -----------------------------------\
    \  |\n              | |                                   | |\n              |\
    \ v                                   | v\n             -----                \
    \                 -----\n             | A |                                 |\
    \ B |\n             |   |                                 |   |\n            \
    \ -----                                 -----\n              ^ |             \
    \                      ^ |\n            o | |                                \
    \ i | |\n            u | |                                 n | |\n           \
    \ t | |                                 n | |\n            e | |             \
    \                    e | |\n            r | |                                \
    \ r | |\n              | v                                   | v\n           \
    \  -----                                 -----\n             | D |           \
    \                      | C |\n             |   |                             \
    \    |   |\n             -----                                 -----\n       \
    \       | |                                   | |\n              | |         \
    \                          | |\n              |  -----------------------------------\
    \  |\n               ---------------------------------------\n      2. B detects\
    \ SF on the outer ring, transitions to Wrapped state\n         (performs a wrap),\
    \ Tx towards A on the inner ring/short path:\n         {SF, B, W, S} and on the\
    \ outer ring/long path: Tx {SF, B, W, L}\n      3. Node A receives protection\
    \ request on the short path,\n         transitions to Wrapped state, Tx towards\
    \ B on short path:\n         {IDLE, A, W, S} (message does not go through due\
    \ to the\n         failure) and on the long path: Tx {SF, A, W, L}\n      4. As\
    \ the nodes D and C receive a switch request, they enter a\n         pass-through\
    \ mode (in each direction) which mean they stop\n         sourcing the Idle messages\
    \ and start passing the messages\n         between A an B\n      5. Steady state\
    \ is reached\n   Signal Fail Clears\n      1. SF on B clears, B does not unwrap,\
    \ sets WTR timer, Tx {WTR, B,\n         W, S} on inner and Tx {WTR, B, W, L}\n\
    \      2. Node A receives WTR request on the short path, does not unwrap,\n  \
    \       Tx towards B on short path: {IDLE, A, W, S} (message does not\n      \
    \   go through due to the failure) and on the long path: Tx {WTR,\n         A,\
    \ W, L}\n      3. Nodes C and D relay long path messages without changing the\
    \ IPS\n         octet\n      4. Steady state is reached\n      5. WTR times out\
    \ on B. B transitions to idle state (unwraps) Tx\n         {IDLE, B, I, S} on\
    \ both inner and outer rings\n      6. A receives Rx {IDLE, B, I, S} and transitions\
    \ to Idle\n      7. As idle messages reach C and D the nodes enter the idle state\n\
    \         (start sourcing the Idle messages)\n      8. Steady state it reached\n"
- title: 8.6.2.  Signal Failure - Bidirectional Fiber Cut Scenario
  contents:
  - "8.6.2.  Signal Failure - Bidirectional Fiber Cut Scenario\n   Sample scenario\
    \ in a ring of four nodes A, B, C and D, with a\n   bidirectional failure between\
    \ A and B.  Ring is in the Idle state\n   (all nodes are Idle) prior to failure.\n\
    \   Signal Fail Scenario\n      1. Ring in Idle, all nodes transmit (Tx) {IDLE,\
    \ SELF, I, S} on\n         both rings (in both directions)\n      2. A detects\
    \ SF on the outer ring, transitions to Wrapped state\n         (performs a wrap),\
    \ Tx towards B on the inner ring/short path:\n         {SF, A, W, S} and on the\
    \ outer ring/long path: Tx {SF, A, W, L}\n      3. B detects SF on the outer ring,\
    \ transitions to Wrapped state\n         (performs a wrap), Tx towards A on the\
    \ inner ring/short path:\n         {SF, B, W, S} and on the outer ring/long path:\
    \ Tx {SF, B, W, L}\n   FIGURE 22. An SRP Ring with bidirectional fiber cut\n \
    \                       fiber cut\n               ---------X-----------------------------\n\
    \              |  -------X---------------------------  |\n              | |  \
    \     fiber cut                   | |\n              | v                     \
    \              | v\n             -----                                 -----\n\
    \             | A |                                 | B |\n             |   |\
    \                                 |   |\n             -----                  \
    \               -----\n              ^ |                                   ^ |\n\
    \            o | |                                 i | |\n            u | |  \
    \                               n | |\n            t | |                     \
    \            n | |\n            e | |                                 e | |\n\
    \            r | |                                 r | |\n              | v  \
    \                                 | v\n             -----                    \
    \             -----\n             | D |                                 | C |\n\
    \             |   |                                 |   |\n             -----\
    \                                 -----\n              | |                   \
    \                | |\n              | |                                   | |\n\
    \              |  -----------------------------------  |\n               ---------------------------------------\n\
    \      4. As the nodes D and C receive a switch request, they enter a\n      \
    \   pass-through mode (in each direction) which mean they stop\n         sourcing\
    \ the Idle messages and start passing the messages\n         between A an B\n\
    \      5. Steady state is reached\n   Signal Fail Clears\n      1. SF on A clears,\
    \ A does not unwrap, sets WTR timer, Tx {WTR, A,\n         W, S} towards B and\
    \ Tx {WTR, A, W, L} on the long path\n      2. SF on B clears, B does not unwrap.\
    \ Since it now has a short\n         path WTR request present from A it acts upon\
    \ this request.  It\n         keeps the wrap, Tx {IDLE, B, W, S} towards A and\
    \ Tx {WTR, B, W,\n         L} on the long path\n      3. Nodes C and D relay long\
    \ path messages without changing the IPS\n         octet\n      4. Steady state\
    \ is reached\n      5. WTR times out on A. A enters the idle state (drops wraps)\
    \ and\n         starts transmitting idle in both rings\n      6. B sees idle request\
    \ on short path and enters idle state\n      7. Remaining nodes in the ring enter\
    \ the idle state\n      8. Steady state is reached\n"
- title: 8.6.3.  Failed Node Scenario
  contents:
  - "8.6.3.  Failed Node Scenario\n   FIGURE 23. An SRP Ring with a failed node\n\
    \               ---------------------------------------\n              |  -----------------------------------\
    \  |\n              | |                                   | |\n              |\
    \ v                                   | v /\n             -----              \
    \                   ----/\n             | A |                                \
    \ | C/| failed\n             |   |                                 | / | node\
    \ C\n             -----                                 -/---\n              ^\
    \ |                                  /^ |\n            o | |                 \
    \                i | |\n            u | |                                 n |\
    \ |\n            t | |                                 n | |\n            e |\
    \ |                                 e | |\n            r | |                 \
    \                r | |\n              | v                                   |\
    \ v\n             -----                                 -----\n             |\
    \ D |                                 | B |\n             |   |              \
    \                   |   |\n             -----                                \
    \ -----\n              | |                                   | |\n           \
    \   | |                                   | |\n              |  -----------------------------------\
    \  |\n               ---------------------------------------\n   Sample scenario\
    \ in a ring where node C fails. Ring is in the Idle\n   state (all nodes are Idle)\
    \ prior to failure.\n   Node Failure (or fiber cuts on both sides of the node)\n\
    \      1. Ring in Idle, all nodes transmit (Tx) {IDLE, SELF, I, S} on\n      \
    \   both rings (in both directions)\n      2. Based on the source field of the\
    \ idle messages, all nodes\n         identify the neighbors and keep track of\
    \ them\n      3. B detects SF on the outer ring, transitions to Wrapped state\n\
    \         (performs a wrap), Tx towards C on the inner ring/short path:\n    \
    \     {SF, B, W, S} and on the outer ring/long path: Tx {SF, B, W, L}\n      4.\
    \ A detects SF on the inner ring, transitions to Wrapped state\n         (performs\
    \ a wrap), Tx towards C on the outer ring/short path:\n         {SF, A, W, S}\
    \ and on the inner ring/long path: Tx {SF, A, W, L}\n      5. As the nodes on\
    \ the long path between A and B receive a SF\n         request, they enter a pass-through\
    \ mode (in each direction),\n         stop sourcing the Idle messages and start\
    \ passing the messages\n         between A an B\n      6. Steady state is reached\n\
    \   Failed Node and One Span Return to Service\n   Note: Practically the node\
    \ will always return to service with one\n   span coming after the other (with\
    \ the time delta potentially close to\n   0). Here, a node is powered up with\
    \ the fibers connected and fault\n   free.\n      1. Node C and a span between\
    \ A and C return to service (SF between\n         A and C disappears)\n      2.\
    \ Node C, not seeing any faults starts to source idle messages\n         {IDLE,\
    \ C, I, S} in both directions.\n      3. Fault disappears on A and A enters a\
    \ WTR (briefly)\n      4. Node A receives idle message from node C. Because the\
    \ long path\n         protection request {SF, B, W, L} received over the long\
    \ span is\n         not originating from the short path neighbor (C), node A drops\n\
    \         the WTR and enters a PassThrough state passing requests between\n  \
    \       C and B\n      5. Steady state is reached\n   Second Span Returns to Service\n\
    \   The scenario is like the Bidirectional Fiber Cut fault clearing\n   scenario.\n"
- title: 8.6.4.  Bidirectional Fiber Cut and Node Addition Scenarios
  contents:
  - "8.6.4.  Bidirectional Fiber Cut and Node Addition Scenarios\n   FIGURE 24. An\
    \ SRP Ring with a failed node\n                    wrap\n               ----->|--------------------------------\n\
    \              |  -<--|------------------------------  |\n              | |  \
    \                                 | |\n              | v                     \
    \              | v\n             -----                                 ----\n\
    \             | A |                                 | C | Added\n            \
    \ |   |                                 |   | node\n             -----       \
    \                          -----\n              ^ |                          \
    \         ^ |\n            o | |                                 i | |\n     \
    \       u | |                                 n | |\n            t | |       \
    \                          n | |\n            e | |                          \
    \       e --- wrap\n            r | |                                 r ^ |\n\
    \              | v                                   | v\n             ----- \
    \                                -----\n             | D |                   \
    \              | B |\n             |   |                                 |   |\n\
    \             -----                                 -----\n              | | \
    \                                  | |\n              | |                    \
    \               | |\n              |  -----------------------------------  |\n\
    \               ---------------------------------------\n   Sample scenario in\
    \ a ring where initially nodes A and B are\n   connected.  Subsequently fibers\
    \ between the nodes A and B are\n   disconnected and a new node C is inserted.\n\
    \   Bidirectional Fiber Cut\n      1. Ring in Idle, all nodes transmit (Tx) {IDLE,\
    \ SELF, I, S} on\n         both rings (in both directions)\n      2. Fibers are\
    \ removed between nodes A and B\n      3. B detects SF on the outer ring, transitions\
    \ to Wrapped state\n         (performs a wrap), Tx towards A on the inner ring/short\
    \ path:\n         {SF, B, W, S} and on the outer ring/long path: Tx {SF, B, W,\
    \ L}\n      4. A detects SF on the inner ring, transitions to Wrapped state\n\
    \         (performs a wrap), Tx towards B on the inner ring/short path:\n    \
    \     {SF, A, W, S} and on the outer ring/long path: Tx {SF, A, W, L}\n      5.\
    \ As the nodes on the long path between A and B receive a SF\n         request,\
    \ they enter a pass-through mode (in each direction),\n         stop sourcing\
    \ the Idle messages and start passing the messages\n         between A an B\n\
    \      6. Steady state is reached\n   Node C is Powered Up and Fibers Between\
    \ Nodes A and C are Reconnected\n   This scenario is identical to the returning\
    \ a Failed Node to Service\n   scenario.\n   Second Span Put Into Service\n  \
    \ Nodes C and B are connected. The scenario is identical to\n   Bidirectional\
    \ Fiber Cut fault clearing scenario.\n"
- title: 9.  SRP over SONET/SDH
  contents:
  - "9.  SRP over SONET/SDH\n   Although SRP is media independent it is worth noting\
    \ how SRP is used\n   with a layer 1 media type. SRP over SONET/SDH is the first\
    \ media type\n   perceived for SRP applications.\n   Flag delimiting on SONET/SDH\
    \ uses the octet stuffing method defined\n   for POS.  The flags (0x7E) are packet\
    \ delimiters required for\n   SONET/SDH links but may not be necessary for SRP\
    \ on other media\n   types. End of a packet is delineated by the flag which could\
    \ also be\n   the same as the next packet's starting flag.  If the flag (0x7E)\
    \ or\n   an escape character (0x7D) are present anywhere inside the packet,\n\
    \   they have to be escaped by the escape character when used over\n   SONET/SDH\
    \ media.\n   SONET/SDH framing plus POS packet delimiting allows SRP to be used\n\
    \   directly over fiber or through an optical network (including WDM\n   equipment).\n\
    \   SRP may also connect to a SONET/SDH ring network via a tributary\n   connection\
    \ to a SONET/SDH ADM (Add Drop Multiplexor).  The two SRP\n   rings may be mapped\
    \ into two STS-Nc connections.  SONET/SDH networks\n   typically provide fully\
    \ redundant connections, so SRP mapped into two\n   STS-Nc connections will have\
    \ two levels of protection.  The SONET/SDH\n   network provides layer 1 protection,\
    \ and SRP provides layer 2\n   protection. In this case it is recommended to hold\
    \ off the SRP Signal\n   Fail IPS triggers (which correspond to failures which\
    \ can be\n   protected by SONET/SDH) for about 100 msec in order to allow the\n\
    \   SONET/SDH network to protect. Only if a failure persists for over 100\n  \
    \ msec (indicating SONET/SDH protection failure) should the IPS\n   protection\
    \ take place.\n   Since multiple protection levels over the same physical\n  \
    \ infrastructure are not very desirable, an alternate way of connecting\n   SRP\
    \ over a SONET/SDH network is configuring SONET/SDH without\n   protection. Since\
    \ the connection is unprotected at layer 1, SRP would\n   be the sole protection\
    \ mechanism.\n   Hybrid SRP rings may also be built where some parts of the ring\n\
    \   traverse over a SONET/SDH network while other parts do not.\n   Connections\
    \ to a SONET/SDH network would have to be synchronized to\n   network timing by\
    \ some means.  This can be accomplished by locking\n   the transmit connection\
    \ to the frequency of the receive connection\n   (called loop timing) or via an\
    \ external synchronization technique.\n   Connections made via dark fiber or over\
    \ a WDM optical network should\n   utilize internal timing as clock synchronization\
    \ is not necessary in\n   this case.\n"
- title: 10.  Pass-thru mode
  contents:
  - "10.  Pass-thru mode\n   An optional mode of operation is pass-thru mode.  In\
    \ pass-thru mode,\n   a node transparently forwards data.  The node does not source\n\
    \   packets, and does not modify any of the packets that it forwards.\n   Data\
    \ should continue to be sorted into high and low priority transit\n   buffers\
    \ with high priority transit buffers always emptied first.  The\n   node does\
    \ not source any control packets (e.g. topology discovery or\n   IPS) and basically\
    \ looks like a signal regenerator with delay (caused\n   by packets that happened\
    \ to be in the transit buffer when the\n   transition to pass-thru mode occurred).\n\
    \   A node can enter pass-thru mode because of an operator command or due\n  \
    \ to a error condition such as a software crash.\n"
- title: 11.  References
  contents:
  - "11.  References\n   [1]  ANSI X3T9 FDDI Specification\n   [2]  IEEE 802.5 Token\
    \ Ring Specification\n   [3]  Bellcore GR-1230, Issue 4, Dec. 1998, \"SONET Bidirectional\n\
    \        Line-Switched Ring Equipment Generic Criteria\".\n   [4]  ANSI T1.105.01-1998\
    \ \"Synchronous Optical Network (SONET)\n        Automatic Protection Switching\"\
    \n   [5]  Malis, A. and W. Simpson, \"PPP over SONET/SDH\", RFC 2615, June\n \
    \       1999.\n   [6]  Simpson, W., \"PPP in HDLC-like Framing\", STD 51, RFC\
    \ 1662, July\n        1994.\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   As in any shared media, packets that traverse\
    \ a node are available to\n   that node if that node is misconfigured or maliciously\
    \ configured.\n   Additionally, it is possible for a node to not only inspect\
    \ packets\n   meant for another node but to also prevent the intended node from\n\
    \   receiving the packets due to the destination stripping scheme used to\n  \
    \ obtain spatial reuse.  Topology discovery should be used to detect\n   duplicate\
    \ MAC addresses.\n"
- title: 13.  IPR Notice
  contents:
  - "13.  IPR Notice\n   The IETF has been notified of intellectual property rights\
    \ claimed in\n   regard to some or all of the specification contained in this\n\
    \   document.  For more information consult the online list of claimed\n   rights.\n"
- title: 14.  Acknowledgments
  contents:
  - "14.  Acknowledgments\n   The authors would like to acknowledge Hon Wah Chin who\
    \ came up with\n   the original version of the SRP-fa.  Besides the authors, the\n\
    \   original conceivers of SRP include Hon Wah Chin, Graeme Fraser, Tony\n   Bates,\
    \ Bruce Wilford, Feisal Daruwalla, and Robert Broberg.\n"
- title: 15.  Authors' Addresses
  contents:
  - "15.  Authors' Addresses\n   Comments should be sent to the authors at the following\
    \ addresses:\n   David Tsiang\n   Cisco Systems\n   170 W. Tasman Drive\n   San\
    \ Jose, CA 95134\n   Phone: (408) 526-8216\n   EMail: tsiang@cisco.com\n   George\
    \ Suwala\n   Cisco Systems\n   170 W. Tasman Drive\n   San Jose, CA 95134\n  \
    \ Phone: (408) 525-8674\n   EMail: gsuwala@cisco.com\n"
- title: 16.  Full Copyright Statement
  contents:
  - "16.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
