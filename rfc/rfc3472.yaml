- title: __initial_text__
  contents:
  - '     Generalized Multi-Protocol Label Switching (GMPLS) Signaling

    '
- title: Constraint-based Routed Label Distribution Protocol (CR-LDP) Extensions
  contents:
  - 'Constraint-based Routed Label Distribution Protocol (CR-LDP) Extensions

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes extensions to Multi-Protocol Label Switching\n\
    \   (MPLS) Constraint-based Routed Label Distribution Protocol (CR-LDP)\n   signaling\
    \ required to support Generalized MPLS.  Generalized MPLS\n   extends the MPLS\
    \ control plane to encompass time-division (e.g.,\n   Synchronous Optical Network\
    \ and Synchronous Digital Hierarchy,\n   SONET/SDH), wavelength (optical lambdas)\
    \ and spatial switching (e.g.,\n   incoming port or fiber to outgoing port or\
    \ fiber).  This document\n   presents a CR-LDP specific description of the extensions.\
    \  A generic\n   functional description can be found in separate documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   6.  Protection TLV  ............................................\
    \  10\n    6.1  Procedures  ..............................................  11\n\
    \   7.  Administrative Status Information  .........................  11\n   \
    \ 7.1  Admin Status TLV  ........................................  11\n    7.2\
    \  REQUEST and MAPPING Message Procedures  ..................  12\n    7.3  Notification\
    \ Message Procedures  .........................  13\n   8.  Control Channel Separation\
    \  ................................  14\n    8.1  Interface Identification  ................................\
    \  14\n    8.2  Errored Interface Identification  ........................  15\n\
    \   9.  Fault Handling     .........................................  17\n   10\
    \  Acknowledgments  ...........................................  17\n   11. Security\
    \ Considerations  ...................................  17\n   12. IANA Considerations\
    \  .......................................  17\n   13. Intellectual Property Considerations\
    \  ......................  18\n   14. References  ................................................\
    \  18\n    14.1  Normative References  ...................................  18\n\
    \    14.2  Informative References  .................................  19\n   15.\
    \ Contributors  ..............................................  19\n   16. Editors'\
    \ Addresses  ........................................  22\n   17. Full Copyright\
    \ Statement ...................................  23\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Generalized MPLS extends MPLS from supporting packet (PSC)\
    \ interfaces\n   and switching to include support of three new classes of interfaces\n\
    \   and switching: Time-Division Multiplex (TDM), Lambda Switch (LSC) and\n  \
    \ Fiber-Switch (FSC).  A functional description of the extensions to\n   MPLS\
    \ signaling needed to support the new classes of interfaces and\n   switching\
    \ is provided in [RFC3471].  This document presents CR-LDP\n   specific formats\
    \ and mechanisms needed to support all four classes of\n   interfaces.  RSVP-TE\
    \ extensions can be found in [RFC3473].\n   [RFC3471] should be viewed as a companion\
    \ document to this document.\n   The format of this document parallels [RFC3471].\
    \  It should be noted\n   that the RSVP-TE specific version of Generalized MPLS\
    \ includes RSVP\n   specific support for rapid failure notification, see Section\
    \ 4\n   [RFC3473].  For CR-LDP there is not currently a similar mechanism.\n \
    \  When a failure is detected it will be propagated with\n   RELEASE/WITHDRAW\
    \ messages radially outward from the point of failure.\n   Resources are to be\
    \ released in this phase and actual resource\n   information may be fed back to\
    \ the source using a feedback\n   mechanisms.\n   The key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted\
    \ as described in [RFC2119].\n"
- title: 2. Label Related Formats
  contents:
  - "2. Label Related Formats\n   This section defines formats for a generalized label\
    \ request, a\n   generalized label, support for waveband switching, suggested\
    \ label\n   and label sets.\n"
- title: 2.1. Generalized Label Request
  contents:
  - "2.1. Generalized Label Request\n   A REQUEST message SHOULD contain as specific\
    \ an LSP (Label Switched\n   Path) Encoding Type as possible to allow the maximum\
    \ flexibility in\n   switching by transit LSRs.  A Generalized Label Request Type,\
    \ Length,\n   and Value (TLV) is set by the ingress node, transparently passed\
    \ by\n   transit nodes, and used by the egress node.  The Switching Type field\n\
    \   may also be updated hop-by-hop.\n   The format of a Generalized Label Request\
    \ is:\n    0                   1                   2                     3\n \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x0824)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | LSP Enc. Type |Switching Type |             G-PID             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of parameters.\n"
- title: 2.1.1. Procedures
  contents:
  - "2.1.1. Procedures\n   A node processing a REQUEST message containing a Generalized\
    \ Label\n   Request must verify that the requested parameters can be satisfied\
    \ by\n   the incoming interface, the node and by the outgoing interface.  The\n\
    \   node may either directly support the LSP or it may use a tunnel (FA),\n  \
    \ i.e., another class of switching.  In either case, each parameter\n   must be\
    \ checked.\n   Note that local node policy dictates when tunnels may be used and\n\
    \   when they may be created.  Local policy may allow for tunnels to be\n   dynamically\
    \ established or may be solely administratively controlled.\n   For more information\
    \ on tunnels and processing of ER (Explicit Route)\n   hops when using tunnels\
    \ see [MPLS-HIERARCHY].\n   Transit and egress nodes MUST verify that the node\
    \ itself and, where\n   appropriate, that the outgoing interface or tunnel can\
    \ support the\n   requested LSP Encoding Type.  If encoding cannot be supported,\
    \ the\n   node MUST generate a NOTIFICATION message, with a \"Routing\n   problem/Unsupported\
    \ Encoding\" indication.\n   Nodes MUST verify that the type indicated in the\
    \ Switching Type\n   parameter is supported on the corresponding incoming interface.\
    \  If\n   the type cannot be supported, the node MUST generate a NOTIFICATION\n\
    \   message with a \"Routing problem/Switching Type\" indication.\n   The G-PID\
    \ parameter is normally only examined at the egress.  If the\n   indicated G-PID\
    \ cannot be supported then the egress MUST generate a\n   NOTIFICATION message,\
    \ with a \"Routing problem/Unsupported G-PID\"\n   indication.  In the case of\
    \ PSC and when penultimate hop popping\n   (PHP) is requested, the penultimate\
    \ hop also examines the (stored)\n   G-PID during the processing of the MAPPING\
    \ message.  In this case if\n   the G-PID is not supported, then the penultimate\
    \ hop MUST generate a\n   NOTIFICATION message with a \"Routing problem/Unacceptable\
    \ label\n   value\" indication.  The generated NOTIFICATION message MAY include\
    \ an\n   Acceptable Label Set, see Section 4.\n   When an error message is not\
    \ generated, normal processing occurs.  In\n   the transit case this will typically\
    \ result in a REQUEST message\n   being propagated.  In the egress case and PHP\
    \ special case this will\n   typically result in a MAPPING message being generated.\n"
- title: 2.1.2. Bandwidth Encoding
  contents:
  - "2.1.2. Bandwidth Encoding\n   Bandwidth encodings are carried in the CR-LDP Traffic\
    \ Parameters TLV.\n   See [RFC3471] for a definition of values to be used for\
    \ specific\n   signal types.  These values are set in the Peak and Committed Data\n\
    \   Rate fields of the Traffic Parameters TLV.  Other bandwidth/service\n   related\
    \ parameters in the TLV are ignored and carried transparently.\n"
- title: 2.2. Generalized Label
  contents:
  - "2.2. Generalized Label\n   The format of a Generalized Label is:\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x0825)         |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Label                             |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of parameters and encoding of labels.\n"
- title: 2.2.1. Procedures
  contents:
  - "2.2.1. Procedures\n   The Generalized Label travels in the upstream direction\
    \ in MAPPING\n   messages.\n   The presence of both a generalized and normal label\
    \ TLV in a MAPPING\n   message is a protocol error and should treated as a malformed\
    \ message\n   by the recipient.\n   The recipient of a MAPPING message containing\
    \ a Generalized Label\n   verifies that the values passed are acceptable.  If\
    \ the label is\n   unacceptable then the recipient MUST generate a NOTIFICATION\
    \ message\n   with a \"Routing problem/MPLS label allocation failure\" indication.\n\
    \   The generated NOTIFICATION message MAY include an Acceptable Label\n   Set,\
    \ see Section 4.\n"
- title: 2.3. Waveband Switching
  contents:
  - "2.3. Waveband Switching\n   Waveband switching uses the same format as the generalized\
    \ label, see\n   section 2.2.  The type 0x0828 is assigned for the Waveband Label.\n\
    \   In the context of waveband switching, the generalized label has the\n   following\
    \ format:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x0828)         |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Waveband Id                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Start Label                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           End Label                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of parameters.\n"
- title: 2.3.1. Procedures
  contents:
  - "2.3.1. Procedures\n   The procedures defined in Section 2.2.1 apply to waveband\
    \ switching.\n   This includes generating a NOTIFICATION message with a \"Routing\n\
    \   problem/MPLS label allocation failure\" indication if any of the label\n \
    \  fields are unrecognized or unacceptable.\n   Additionally, when a waveband\
    \ is switched to another waveband, it is\n   possible that the wavelengths within\
    \ the waveband will be mirrored\n   about a center frequency.  When this type\
    \ of switching is employed,\n   the start and end label in the waveband label\
    \ TLV MUST be swapped\n   before forwarding the label TLV with the new waveband\
    \ Id.  In this\n   manner an egress/ingress LSR that receives a waveband label\
    \ which has\n   these values inverted, knows that it must also invert its egress\n\
    \   association to pick up the proper wavelengths.  Without this\n   mechanism\
    \ and with an odd number of mirrored switching operations,\n   the egress LSRs\
    \ will not know that an input wavelength of say L1 will\n   emerge from the waveband\
    \ tunnel as L100.\n   This operation MUST be performed in both directions when\
    \ a\n   bidirectional waveband tunnel is being established.\n"
- title: 2.4. Suggested Label
  contents:
  - "2.4. Suggested Label\n   The format of a suggested label is identical to a generalized\
    \ label.\n   It is used in REQUEST messages.  Suggested Label uses type = 0x904.\n\
    \   Errors in received Suggested Labels MUST be ignored.  This includes\n   any\
    \ received inconsistent or unacceptable values.\n   Per [RFC3471], if a downstream\
    \ node passes a label value that differs\n   from the suggested label upstream,\
    \ the upstream LSR MUST either\n   reconfigure itself so that it uses the label\
    \ specified by the\n   downstream node or generate a NOTIFICATION message with\
    \ a \"Routing\n   problem/Unacceptable label value\" indication.  Furthermore,\
    \ an\n   ingress node SHOULD NOT transmit data traffic using a suggested label\n\
    \   until the downstream node passes corresponding a label upstream.\n"
- title: 2.5. Label Set
  contents:
  - "2.5. Label Set\n   The format of a Label Set is:\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|  Type (0x0827)            |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Action     |      Reserved     |        Label Type         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Subchannel 1                         |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                               :                               :\n   :  \
    \                             :                               :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Subchannel N                         |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Label Type: 14 bits\n      Indicates the type and format of the labels carried\
    \ in the TLV.\n      Values match the TLV type of the appropriate Label TLV.\n\
    \   See [RFC3471] for a description of other parameters.\n"
- title: 2.5.1. Procedures
  contents:
  - "2.5.1. Procedures\n   A Label Set is defined via one or more Label Set TLVs.\
    \  Specific\n   labels/subchannels can be added to or excluded from a Label Set\
    \ via\n   Action zero (0) and one (1) TLVs respectively.  Ranges of\n   labels/subchannels\
    \ can be added to or excluded from a Label Set via\n   Action two (2) and three\
    \ (3) TLVs respectively.  When the Label Set\n   TLVs only list labels/subchannels\
    \ to exclude, this implies that all\n   other labels are acceptable.\n   The absence\
    \ of any Label Set TLVs implies that all labels are\n   acceptable.  A Label Set\
    \ is included when a node wishes to restrict\n   the label(s) that may be used\
    \ downstream.\n   On reception of a REQUEST message, the receiving node will restrict\n\
    \   its choice of labels to one, which is in the Label Set.  Nodes\n   capable\
    \ of performing label conversion may also remove the Label Set\n   prior to forwarding\
    \ the REQUEST message.  If the node is unable to\n   pick a label from the Label\
    \ Set or if there is a problem parsing the\n   Label Set TLVs, then the request\
    \ is terminated and a NOTIFICATION\n   message with a \"Routing problem/Label\
    \ Set\" indication MUST be\n   generated.  It is a local matter if the Label Set\
    \ is stored for later\n   selection on the MAPPING message or if the selection\
    \ is made\n   immediately for propagation in the MAPPING message.\n   On reception\
    \ of a REQUEST message, the Label Set represented in the\n   message is compared\
    \ against the set of available labels at the\n   downstream interface and the\
    \ resulting intersecting Label Set is\n   forwarded in a REQUEST message.  When\
    \ the resulting Label Set is\n   empty, the REQUEST must be terminated, and a\
    \ NOTIFICATION message,\n   and a \"Routing problem/Label Set\" indication MUST\
    \ be generated.  Note\n   that intersection is based on the physical labels (actual\n\
    \   wavelength/band values) which may have different logical values on\n   different\
    \ links, as a result it is the responsibility of the node to\n   map these values\
    \ so that they have a consistent physical meaning, or\n   to drop the particular\
    \ values from the set if no suitable logical\n   label value exists.\n   When\
    \ processing a MAPPING message at an intermediate node, the label\n   propagated\
    \ upstream MUST fall within the Label Set.\n   Note, on reception of a MAPPING\
    \ message a node that is incapable of\n   performing label conversion has no other\
    \ choice than to use the same\n   physical label (wavelength/band) as received\
    \ in the MAPPING message.\n   In this case, the use and propagation of a Label\
    \ Set will\n   significantly reduce the chances that this allocation will fail.\n"
- title: 3. Bidirectional LSPs
  contents:
  - "3. Bidirectional LSPs\n   Bidirectional LSP setup is indicated by the presence\
    \ of an Upstream\n   Label in the REQUEST message.  An Upstream Label has the\
    \ same format\n   as the generalized label, see Section 2.2.  Upstream Label uses\
    \ type\n   = 0x0826.\n"
- title: 3.1. Procedures
  contents:
  - "3.1. Procedures\n   The process of establishing a bidirectional LSP follows the\n\
    \   establishment of a unidirectional LSP with some additions.  To\n   support\
    \ bidirectional LSPs an Upstream Label is added to the REQUEST\n   message.  The\
    \ Upstream Label MUST indicate a label that is valid for\n   forwarding at the\
    \ time the REQUEST message is sent.\n   When a REQUEST message containing an Upstream\
    \ Label is received, the\n   receiver first verifies that the upstream label is\
    \ acceptable.  If\n   the label is not acceptable, the receiver MUST issue a NOTIFICATION\n\
    \   message with a \"Routing problem/Unacceptable label value\" indication.\n\
    \   The generated NOTIFICATION message MAY include an Acceptable Label\n   Set,\
    \ see Section 4.\n   An intermediate node must also allocate a label on the outgoing\n\
    \   interface and establish internal data paths before filling in an\n   outgoing\
    \ Upstream Label and propagating the REQUEST message.  If an\n   intermediate\
    \ node is unable to allocate a label or internal\n   resources, then it MUST issue\
    \ a NOTIFICATION message with a \"Routing\n   problem/Label allocation failure\"\
    \ indication.\n   Terminator nodes process REQUEST messages as usual, with the\n\
    \   exception that the upstream label can immediately be used to\n   transport\
    \ data traffic associated with the LSP upstream towards the\n   initiator.\n \
    \  When a bidirectional LSP is removed, both upstream and downstream\n   labels\
    \ are invalidated and it is no longer valid to send data using\n   the associated\
    \ labels.\n"
- title: 4. Notification on Label Error
  contents:
  - "4. Notification on Label Error\n   This section defines the Acceptable Label\
    \ Set TLV to support\n   Notification on Label Error per [RFC3471].  An Acceptable\
    \ Label Set\n   TLV uses a type value of 0x082a.  The remaining contents of the\
    \ TLV\n   have the identical format as the Label Set TLV, see Section 2.5.\n \
    \  Acceptable Label Set TLVs may be carried in NOTIFICATION messages.\n   The\
    \ procedures for defining an Acceptable Label Set follow the\n   procedures for\
    \ defining a Label Set, see Section 2.5.1.\n   Specifically, an Acceptable Label\
    \ Set is defined via one or more\n   Acceptable Label Set TLVs.  Specific labels/subchannels\
    \ can be added\n   to or excluded from an Acceptable Label Set via Action zero\
    \ (0) and\n   one (1) TLVs respectively.  Ranges of labels/subchannels can be\
    \ added\n   to or excluded from an Acceptable Label Set via Action two (2) and\n\
    \   three (3) TLVs respectively.  When the Acceptable Label Set TLVs only\n  \
    \ list labels/subchannels to exclude, this implies that all other\n   labels are\
    \ acceptable.\n   The inclusion of Acceptable Label Set TLVs is optional.  If\
    \ included,\n   the NOTIFICATION message SHOULD contain a \"Routing\n   problem/Unacceptable\
    \ label value\" indication.  The absence of\n   Acceptable Label Set TLVs does\
    \ not have any specific meaning.\n"
- title: 5. Explicit Label Control
  contents:
  - "5. Explicit Label Control\n   The Label ER-Hop TLV is defined as follows:\n \
    \   0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|     Type (0x0829)         |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|U|      Reserved             |   Label                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Label (continued)                       |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of L, U and Label parameters.\n"
- title: 5.1. Procedures
  contents:
  - "5.1. Procedures\n   The Label ER-Hop follows a ER-Hop containing the IP address,\
    \ or the\n   interface identifier [MPLS-UNNUM], associated with the link on which\n\
    \   it is to be used.  Up to two label ER-Hops may be present, one for\n   the\
    \ downstream label and one for the upstream label.  The following\n   SHOULD result\
    \ in \"Bad EXPLICIT_ROUTE\" errors:\n   o   If the first label ER-Hop is not preceded\
    \ by a ER-Hop containing\n       an IP address, or a interface identifier [MPLS-UNNUM],\
    \ associated\n       with an output link.\n   o   For a label ER-Hop to follow\
    \ a ER-Hop that has the L-bit set.\n   o   On unidirectional LSP setup, for there\
    \ to be a label ER-Hop with\n       the U-bit set.\n   o   For there to be two\
    \ label ER-Hops with the same U-bit values.\n   To support the label ER-Hop, a\
    \ node must check to see if the ER-Hop\n   following its associate address/interface\
    \ is a label ER-Hop.  If it\n   is, one ER-Hop is examined for unidirectional\
    \ LSPs and two ER-Hops\n   for bidirectional LSPs.  If the U-bit of the ER-Hop\
    \ being examined is\n   clear (0), then value of the label is copied into a new\
    \ Label Set\n   TLV.  This Label Set TLV MUST be included on the corresponding\n\
    \   outgoing REQUEST message.\n   If the U-bit of the ER-Hop being examined is\
    \ set (1), then value of\n   the label is label to be used for upstream traffic\
    \ associated with\n   the bidirectional LSP.  If this label is not acceptable,\
    \ a \"Bad\n   EXPLICIT_ROUTE\" error SHOULD be generated.  If the label is\n \
    \  acceptable, the label is copied into a new Upstream Label TLV.  This\n   Upstream\
    \ Label TLV MUST be included on the corresponding outgoing\n   REQUEST message.\n\
    \   After processing, the label ER-Hops are removed from the ER.\n   Note an implication\
    \ of the above procedures is that the label ER-Hop\n   should never be the first\
    \ ER-Hop in a newly received message.  If the\n   label ER-Hop is the first ER-Hop\
    \ an a received ER, then it SHOULD be\n   treated as a \"Bad strict node\" error.\n\
    \   Procedures by which an LSR at the head-end of an LSP obtains the\n   information\
    \ needed to construct the Label ER-Hop are outside the\n   scope of this document.\n"
- title: 6. Protection TLV
  contents:
  - "6. Protection TLV\n   The use of the Protection TLV is optional.  The TLV is\
    \ included to\n   indicate specific protection attributes of an LSP.\n   The format\
    \ of Protection Information TLV is:\n    0                   1               \
    \    2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x0835)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S|                  Reserved                       | Link Flags|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of parameters.\n"
- title: 6.1. Procedures
  contents:
  - "6.1. Procedures\n   Transit nodes processing a REQUEST message containing a Protection\n\
    \   TLV MUST verify that the requested protection can be satisfied by the\n  \
    \ outgoing interface or tunnel (FA).  If it cannot, the node MUST\n   generate\
    \ a NOTIFICATION message, with a \"Routing problem/Unsupported\n   Link Protection\"\
    \ indication.\n"
- title: 7. Administrative Status Information
  contents:
  - "7. Administrative Status Information\n   Administrative Status Information is\
    \ carried in the Admin Status TLV.\n   The TLV provides information related to\
    \ the administrative state of a\n   particular LSP.  The information is used in\
    \ two ways.  In the first,\n   the TLV is carried in REQUEST and MAPPING messages\
    \ to indicate the\n   administrative state of an LSP.  In the second, the TLV\
    \ is carried in\n   Notification message to request a change to the administrative\
    \ state\n   of an LSP.\n"
- title: 7.1. Admin Status TLV
  contents:
  - "7.1. Admin Status TLV\n   The use of the Admin Status TLV is optional.  It uses\
    \ Type = 0x082b.\n   The format of the TLV is:\n   The format of Admin Status\
    \ TLV in REQUEST, MAPPING and Notification\n   Messages is:\n    0           \
    \        1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x082b)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|                          Reserved                     |T|A|D|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of parameters.\n"
- title: 7.2. REQUEST and MAPPING Message Procedures
  contents:
  - "7.2. REQUEST and MAPPING Message Procedures\n   The Admin Status TLV is used\
    \ to notify each node along the path of\n   the status of the LSP.  Each node\
    \ processes status information based\n   on local policy and then propagated in\
    \ the corresponding outgoing\n   messages.  The TLV is inserted in REQUEST messages\
    \ at the discretion\n   of the ingress node.  The absence of the TLV is the equivalent\
    \ to\n   receiving a TLV containing values all set to zero.\n   Transit nodes\
    \ receiving a REQUEST message containing an Admin Status\n   TLV, update their\
    \ local state, take any appropriate local action\n   based on the indicated status\
    \ and then propagate the received Admin\n   Status TLV in the outgoing REQUEST\
    \ message.\n   Edge nodes receiving a REQUEST message containing an Admin Status\n\
    \   TLV, also update their local state and take any appropriate local\n   action\
    \ based on the indicated status.  When the ADMIN Status TLV is\n   received with\
    \ the R bit set, the receiving edge node should reflect\n   the received values\
    \ in a corresponding MAPPING message.\n   Specifically, if an egress node receives\
    \ a Request message with the R\n   bit of the Admin_Status TLV set and the node\
    \ the node SHOULD send a\n   Mapping message containing an Admin_Status TLV with\
    \ the same values\n   set, with the exception of the R bit, as received in the\n\
    \   corresponding Request message.\n"
- title: 7.2.1. Deletion procedure
  contents:
  - "7.2.1. Deletion procedure\n   In some circumstances, particularly optical networks,\
    \ it is useful to\n   set the administrative status of an LSP before tearing it\
    \ down.\n   In such circumstances the procedure SHOULD be followed when deleting\n\
    \   an LSP from the ingress:\n   o   The ingress node precedes an LSP deletion\
    \ by inserting an Admin\n       Status TLV in a Notification Message setting the\
    \ Reflect (R) and\n       Delete (D) bits.\n   o   Transit nodes process the Admin\
    \ Status TLV by passing the\n       Notification message.  The egress node May\
    \ respond with a\n       Notification message with the Admin Status TLV.\n   o\
    \   Upon receiving the Admin Status TLV with the Delete (D) bit set\n       in\
    \ the Notification message, the egress SHOULD respond with a\n       LABEL WITHDRAW\
    \ message and normal CR-LDP processing takes place.\n   In such circumstances\
    \ the procedure SHOULD be followed when deleting\n   an LSP from the egress:\n\
    \   o   The egress node indicates its desire for deletion by inserting an\n  \
    \     Admin Status TLV in a Notification message and setting Delete (D)\n    \
    \   bit.\n   o   Transit nodes process the Admin Status TLV as described above.\n\
    \   o   Upon receiving the Admin Status TLV with the Delete (D) bit set\n    \
    \   in the Notification message, the ingress node sends a LABEL\n       RELEASE\
    \ message downstream to remove the LSP and normal CR-LDP\n       processing takes\
    \ place.\n"
- title: 7.3. Notification Message Procedures
  contents:
  - "7.3. Notification Message Procedures\n   Subsequent messaging Admin Status messaging\
    \ may be performed by\n   Notification Messages.  The ingress may begin the propagation\
    \ of a\n   Notification Message with an Admin Status TLV.  Each subsequent node\n\
    \   propagates the Notification with the Admin Status TLV from the\n   ingress\
    \ to the egress and then the egress node returns the\n   Notification messages\
    \ back Upstream carrying the Admin Status TLV.\n   Intermediate and egress nodes\
    \ may trigger the setting of\n   administrative status via the use of Notification\
    \ messages.  To\n   accomplish this, an intermediate or egress node generates\
    \ a\n   Notification message with the corresponding upstream notify session\n\
    \   information.  The Admin Status TLV MUST be included in the session\n   information,\
    \ with the appropriate bit or bits set.  The Reflect (R)\n   bit MUST NOT be set.\n\
    \   An ingress or egress node receiving a Notification message containing\n  \
    \ an Admin Status TLV with the Delete (D) bit set, SHOULD initiate the\n   deletion\
    \ procedure described in the previous section.\n"
- title: 7.3.1. Compatibility and Error Procedures
  contents:
  - "7.3.1. Compatibility and Error Procedures\n   Some special processing is required\
    \ in order to cover the case of\n   nodes that do not support the Admin Status\
    \ TLV and other error\n   conditions.  Specifically, a node that sends a Notification\
    \ message\n   containing an Admin Status TLV with the Down (D) bit set MUST verify\n\
    \   that it receives a corresponding LABEL RELEASE message within a\n   configurable\
    \ period of time.  By default this period of time SHOULD\n   be 30 seconds.  If\
    \ the node does not receive such a LABEL RELEASE\n   message, it SHOULD send a\
    \ Label Release message downstream and a\n   LABEL WITHDRAW message upstream.\n"
- title: 8. Control Channel Separation
  contents:
  - "8. Control Channel Separation\n   This section provides the protocol specific\
    \ formats and procedures to\n   required support a control channel not being in-band\
    \ with a data\n   channel.\n"
- title: 8.1. Interface Identification
  contents:
  - "8.1. Interface Identification\n   The choice of the data interface to use is\
    \ always made by the sender\n   of the REQUEST message.  The choice of the data\
    \ interface is\n   indicated by the sender of the REQUEST message by including\
    \ the data\n   channel's interface identifier in the message using a new Interface\n\
    \   TLV type.  For bidirectional LSPs, the sender chooses the data\n   interface\
    \ in each direction.  In all cases but bundling, the upstream\n   interface is\
    \ implied by the downstream interface.  For bundling, the\n   REQUEST sender explicitly\
    \ identifies the component interface used in\n   each direction.\n"
- title: 8.1.1. Interface ID TLV
  contents:
  - "8.1.1. Interface ID TLV\n   The format of IPV4 Interface ID  in REQUEST, MAPPING\
    \ Messages is:\n    0                   1                   2                \
    \   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |U|F|\
    \     Type (0x082d)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 IPv4 Next/Previous Hop Address                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Logical Interface ID                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              Interface ID TLVS see [RFC3471]                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The format of IPV6 Interface ID TLV in REQUEST, MAPPING Messages is:\n   \
    \ 0                   1                   2                   3\n    0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x082e)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 IPv6 Next/Previous Hop Address                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Logical Interface ID                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              Interface ID TLVS see [RFC3471]                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3471] for a description of parameters.\n   See [RFC3212] for a description\
    \ of signaling address.  See [RFC3471]\n   for a description of parameters and\
    \ encoding of TLVs.\n"
- title: 8.1.2. Procedures
  contents:
  - "8.1.2. Procedures\n   An IF_ID TLV is used on links where there is not a one-to-one\n\
    \   association of a control channel to a data channel, see [RFC3471].\n   The\
    \ LDP session uses the IF_ID TLV to identify the data channel(s)\n   associated\
    \ with the LSP.  For a unidirectional LSP, a downstream data\n   channel MUST\
    \ be indicated.  For bidirectional LSPs, a common\n   downstream and upstream\
    \ data channel is normally indicated.  In the\n   special case where a bidirectional\
    \ LSP that traverses a bundled link,\n   it is possible to specify a downstream\
    \ data channel that differs from\n   the upstream data channel.  Data channels\
    \ are specified from the\n   viewpoint of the sender of a REQUEST message.  The\
    \ IF_ID TLV SHOULD\n   NOT be used when no TLVs are needed.\n   A node receiving\
    \ one or more IF_ID TLVs in a REQUEST message saves\n   their values and returns\
    \ them in the subsequent MAPPING message sent\n   to the node that originated\
    \ the TLVs.\n   Note, the node originating an IF_ID TLV MUST ensure that the selected\n\
    \   outgoing interface, as specified in the IF_ID TLV, is consistent with\n  \
    \ an ERO.  A node that receives an IF_ID TLV SHOULD check whether the\n   information\
    \ carried in this TLV is consistent with the information\n   carried in a received\
    \ ERO, and if not it MUST send a LABEL ABORT\n   Message with the error code \"\
    Routing Error\" and error value of \"Bad\n   Explicit Routing TLV Error\" toward\
    \ the sender.  This check CANNOT be\n   performed when the initial ERO subobject\
    \ is not the incoming\n   interface.\n"
- title: 8.2. Errored Interface Identification
  contents:
  - "8.2. Errored Interface Identification\n   There are cases where it is useful\
    \ to indicate a specific interface\n   associated with an error.  To support these\
    \ cases the IF_ID Status\n   TLV are defined.\n"
- title: 8.2.1. IF_ID Status TLVs
  contents:
  - "8.2.1. IF_ID Status TLVs\n   The format of the IPv4 IF_ID Status TLV is:\n  \
    \  0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x082f)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 IPv4 Next/Previous Hop Address                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Status Code                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                            TLVs                             ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The format of the IPv6 IF_ID Status TLV is:\n    0                   1   \
    \                2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |U|F|     Type (0x0830)         |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                   IPv6 Error Node Address                   |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Status Code                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                            TLVs                             ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   See [RFC3036] for a description of status code value fields.  See\n   [RFC3471]\
    \ for a description of parameters and encoding of TLVs.\n"
- title: 8.2.2. Procedures
  contents:
  - "8.2.2. Procedures\n   Nodes wishing to indicate that an error is related to a\
    \ specific\n   interface SHOULD use the appropriate IF_ID Status TLV in the\n\
    \   corresponding LABEL WITHDRAW or LABEL RELEASE message.  IF_ID Status\n   TLV\
    \ SHOULD be generated and processed as any other Status TLV, see\n   [RFC3036].\n"
- title: 9. Fault Handling
  contents:
  - "9. Fault Handling\n   In optical transport networks, failures in the out-of-fiber\
    \ signaling\n   communication or optical control plane should not have service\
    \ impact\n   on the existing optical connections.  Under such circumstances, a\n\
    \   mechanism MUST exist to detect a signaling communication failure and\n   a\
    \ recovery procedure SHALL guarantee connection integrity at both\n   ends of\
    \ the signaling channel.\n   The LDP Fault tolerant document [LDP-FT] specifies\
    \ the procedures for\n   recovering LDP and CR-LDP sessions under failure.  Please\
    \ refer to\n   his document for procedures on recovering optical connections.\n\
    \   Currently the Fault tolerant document covers many of the common\n   failure\
    \ modes for a separated control and data plane.\n"
- title: 10. Acknowledgments
  contents:
  - "10. Acknowledgments\n   This document is the work of numerous authors and consists\
    \ of a\n   composition of a number of previous documents in this area.\n   Valuable\
    \ comments and input were received from a number of people,\n   notably Adrian\
    \ Farrel.\n"
- title: 11. Security Considerations
  contents:
  - "11. Security Considerations\n   This document introduces no new security considerations\
    \ to [RFC3212].\n"
- title: 12. IANA Considerations
  contents:
  - "12. IANA Considerations\n   This document uses the LDP [RFC3036] name spaces,\
    \ see\n   http://www.iana.org/assignments/ldp-namespaces, which lists the\n  \
    \ assignments for the following TLVs:\n   o Generalized Label Request (TLV 0x0824)\n\
    \   o Generalized Label (TLV 0x0825)\n   o Upstream Label (TLV 0x0826)\n   o Label\
    \ Set (TLV 0x0827)\n   o Waveband Label (TLV 0x0828)\n   o ER-Hop (TLV 0x0829)\n\
    \   o Acceptable Label Set (TLV 0x082a)\n   o Admin Status (TLV 0x082b)\n   o\
    \ Interface ID (TLV 0x082c)\n   o IPV4 Interface ID (TLV 0x082d)\n   o IPV6 Interface\
    \ ID (TLV 0x082e)\n   o IPv4 IF_ID Status (TLV 0x082f)\n   o IPv6 IF_ID Status\
    \ (TLV 0x0830)\n   o Protection (TLV 0x0835)\n"
- title: 13. Intellectual Property Considerations
  contents:
  - "13. Intellectual Property Considerations\n   This section is taken from Section\
    \ 10.4 of [RFC2026].\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 14. References
  contents:
  - '14. References

    '
- title: 14.1. Normative References
  contents:
  - "14.1. Normative References\n   [RFC2119]        Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n                    Requirement Levels,\" BCP 14, RFC\
    \ 2119. March 1997.\n   [RFC3036]        Andersson, L., Doolan, P., Feldman, N.,\
    \ Fredette, A.\n                    and B. Thomas, \"LDP Specification\", RFC\
    \ 3036,\n                    January 2001.\n   [RFC3212]        Jamoussi, B.,\
    \ Andersson, L., Callon, R., Dantu, R.,\n                    Wu, L., Doolan, P.,\
    \ Worster, T., Feldman, N.,\n                    Fredette, A., Girish, M., Gray,\
    \ E., Heinanen, J.,\n                    Kilty, T. and A. Malis, \"Constraint-Based\
    \ LSP Setup\n                    using LDP\", RFC 3212, January 2002.\n   [RFC3471]\
    \        Berger, L., Editor, \"Generalized Multi-Protocol\n                  \
    \  Label Switching (GMPLS) Signaling Functional\n                    Description\"\
    , RFC 3471, January 2003.\n"
- title: 14.2. Informative References
  contents:
  - "14.2. Informative References\n   [LDP-FT]         Farrel, A., et al, \"Fault\
    \ Tolerance for LDP and CR-\n                    LDP\", Work in Progress.\n  \
    \ [MPLS-HIERARCHY] Kompella, K. and Y. Rekhter, \"LSP Hierarchy with\n       \
    \             MPLS TE\", Work in Progress.\n   [MPLS-UNNUM]     Kompella, K.,\
    \ Rekhter, Y. and A. Kullberg,\n                    \"Signalling Unnumbered Links\
    \ in CR-LDP\", Work in\n                    Progress.\n   [RFC2026]        Bradner,\
    \ S., \"The Internet Standards Process --\n                    Revision 3,\" BCP\
    \ 9, RFC 2026, October 1996.\n   [RFC3473]        Berger, L., Editor, \"Generalized\
    \ Multi-Protocol\n                    Label Switching (GMPLS) Signaling - Resource\n\
    \                    ReserVation Protocol-Traffic Engineering (RSVP-TE)\n    \
    \                Extensions\", RFC 3473, January 2003.\n"
- title: 15. Contributors
  contents:
  - "15. Contributors\n   Peter Ashwood-Smith\n   Nortel Networks Corp.\n   P.O. Box\
    \ 3511 Station C,\n   Ottawa, ON K1Y 4H7\n   Canada\n   Phone:  +1 613 763 4534\n\
    \   EMail:  petera@nortelnetworks.com\n   Ayan Banerjee\n   Calient Networks\n\
    \   5853 Rue Ferrari\n   San Jose, CA 95138\n   Phone:  +1 408 972-3645\n   EMail:\
    \  abanerjee@calient.net\n   Lou Berger\n   Movaz Networks, Inc.\n   7926 Jones\
    \ Branch Drive\n   Suite 615\n   McLean VA, 22102\n   Phone:  +1 703 847-1801\n\
    \   EMail:  lberger@movaz.com\n   Greg Bernstein\n   EMail:  gregb@grotto-networking.com\n\
    \   Yanhe Fan\n   Axiowave Networks, Inc.\n   200 Nickerson Road\n   Marlborough,\
    \ MA 01752\n   Phone: + 1 774 348 4627\n   EMail: yfan@axiowave.com\n   Don Fedyk\n\
    \   Nortel Networks Corp.\n   600 Technology Park\n   Billerica  MA 01821\n  \
    \ Phone:  +1 978 288 3041\n   Fax:    +1 978 288 0620\n   EMail:  dwfedyk@nortelnetworks.com\n\
    \   Jonathan P. Lang\n   EMail:  jplang@ieee.org\n   Eric Mannie\n   Independent\
    \ Consultant\n   2 Avenue de la Folle Chanson\n   1050 Brussels\n   Belgium\n\
    \   EMail:  eric_mannie@hotmail.com\n   Bala Rajagopalan\n   Tellium, Inc.\n \
    \  2 Crescent Place\n   P.O. Box 901\n   Oceanport, NJ 07757-0901\n   Phone: \
    \ +1 732 923 4237\n   Fax:    +1 732 923 9804\n   EMail:  braja@tellium.com\n\
    \   Debanjan Saha\n   EMail:  debanjan@acm.org\n   Vishal Sharma\n   Metanoia,\
    \ Inc.\n   1600 Villa Street, Unit 352\n   Mountain View, CA 94041-1174\n   Phone:\
    \  +1 650-386-6723\n   EMail:  v.sharma@ieee.org\n   George Swallow\n   Cisco\
    \ Systems, Inc.\n   250 Apollo Drive\n   Chelmsford, MA 01824\n   Phone:  +1 978\
    \ 244 8143\n   EMail:  swallow@cisco.com\n   Z. Bo Tang\n   EMail:  botang01@yahoo.com\n"
- title: 16. Editors' Addresses
  contents:
  - "16. Editors' Addresses\n   Peter Ashwood-Smith\n   Nortel Networks Corp.\n  \
    \ P.O. Box 3511 Station C,\n   Ottawa, ON K1Y 4H7\n   Canada\n   Phone:  +1 613\
    \ 763 4534\n   EMail:  petera@nortelnetworks.com\n   Lou Berger\n   Movaz Networks,\
    \ Inc.\n   7926 Jones Branch Drive\n   Suite 615\n   McLean VA, 22102\n   Phone:\
    \  +1 703 847-1801\n   EMail:  lberger@movaz.com\n"
- title: 17.  Full Copyright Statement
  contents:
  - "17.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
