- title: __initial_text__
  contents:
  - '             A General Mechanism for RTP Header Extensions

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides a general mechanism to use the header\n \
    \  extension feature of RTP (the Real-time Transport Protocol).  It\n   provides\
    \ the option to use a small number of small extensions in each\n   RTP packet,\
    \ where the universe of possible extensions is large and\n   registration is decentralized.\
    \  The actual extensions in use in a\n   session are signaled in the setup information\
    \ for that session.  This\n   document obsoletes RFC 5285.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8285.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements Notation ...........................................3\n  \
    \ 3. Design Goals ....................................................3\n   4.\
    \ Packet Design ...................................................4\n      4.1.\
    \ General ....................................................4\n           4.1.1.\
    \ Transmission Considerations .........................5\n           4.1.2. Header\
    \ Extension Type Considerations ................6\n      4.2. One-Byte Header\
    \ ............................................8\n      4.3. Two-Byte Header ............................................9\n\
    \   5. SDP Signaling Design ...........................................10\n  \
    \ 6. SDP Signaling for Support of Mixed One-Byte and Two-Byte\n          Header\
    \ Extensions ..........................................12\n   7. SDP Offer/Answer\
    \ ...............................................13\n   8. BNF Syntax .....................................................17\n\
    \   9. Security Considerations ........................................17\n  \
    \ 10. IANA Considerations ...........................................18\n    \
    \  10.1. Identifier Space for IANA to Manage ......................18\n      10.2.\
    \ Registration of the SDP \"extmap\" Attribute ...............20\n      10.3.\
    \ Registration of the SDP \"extmap-allow-mixed\" Attribute ...20\n   11. Changes\
    \ from RFC 5285 .........................................21\n   12. References\
    \ ....................................................21\n      12.1. Normative\
    \ References .....................................21\n      12.2. Informative\
    \ References ...................................23\n   Acknowledgments ...................................................24\n\
    \   Authors' Addresses ................................................25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RTP specification [RFC3550] provides a capability to\
    \ extend the\n   RTP header.  Section 5.3.1 of [RFC3550] defines the header extension\n\
    \   format and rules for its use.  The existing header extension method\n   permits\
    \ at most one extension per RTP packet, identified by a 16-bit\n   identifier\
    \ and a 16-bit length field specifying the length of the\n   header extension\
    \ in 32-bit words.\n   This mechanism has two conspicuous drawbacks.  First, it\
    \ permits only\n   one header extension in a single RTP packet.  Second, the\n\
    \   specification gives no guidance as to how the 16-bit header extension\n  \
    \ identifiers are allocated to avoid collisions.\n   This specification removes\
    \ the first drawback by defining a backward-\n   compatible and extensible means\
    \ to carry multiple header extension\n   elements in a single RTP packet.  It\
    \ removes the second drawback by\n   defining that these extension elements are\
    \ named by URIs, defining an\n   IANA registry for extension elements defined\
    \ in IETF specifications,\n   and providing a Session Description Protocol (SDP)\
    \ method for mapping\n   between the naming URIs and the identifier values carried\
    \ in the RTP\n   packets.\n   This header extension applies to RTP/AVP (the Audio/Visual\
    \ Profile)\n   and its extensions.\n   This document obsoletes [RFC5285] and removes\
    \ a limitation from\n   RFC 5285 that did not allow sending both one-byte and\
    \ two-byte header\n   extensions in the same RTP stream.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Design Goals
  contents:
  - "3.  Design Goals\n   The goal of this design is to provide a simple mechanism\
    \ whereby\n   multiple identified extensions can be used in RTP packets, without\n\
    \   the need for formal registration of those extensions but nonetheless\n   avoiding\
    \ collisions.\n   This mechanism provides an alternative to the practice of burying\n\
    \   associated metadata into the media format bitstream.  This has often\n   been\
    \ done in media data sent over fixed-bandwidth channels.  Once\n   this is done,\
    \ a decoder for the specific media format needs to\n   extract the metadata. \
    \ Also, depending on the media format, the\n   metadata can be added at the time\
    \ of encoding the media so that the\n   bit-rate used for the metadata is taken\
    \ into account.  But the\n   metadata can be unknown at that time.  Inserting\
    \ metadata at a later\n   time can cause a decode and re-encode to meet bit-rate\
    \ requirements.\n   In some cases, a more appropriate and higher-level mechanism\
    \ may be\n   available, and if so, it can be used.  For cases where a higher-level\n\
    \   mechanism is not available, it is better to provide a mechanism at\n   the\
    \ RTP level than to have the metadata be tied to a specific form of\n   media\
    \ data.\n"
- title: 4.  Packet Design
  contents:
  - '4.  Packet Design

    '
- title: 4.1.  General
  contents:
  - "4.1.  General\n   The following design is fit into the \"header extension\" of\
    \ the RTP\n   extension, as described above.\n   The presence and format of this\
    \ header extension and its contents are\n   negotiated or defined out of band,\
    \ such as through signaling (see\n   below for SDP signaling).  The 16-bit identifier\
    \ for the two forms of\n   the RTP extension defined here is only an architectural\
    \ constant\n   (e.g., for use by network analyzers); it is the negotiation/\n\
    \   definition (e.g., in SDP) that is the definitive indication that this\n  \
    \ header extension is present.\n   The RTP specification [RFC3550] states that\
    \ RTP \"is designed so that\n   the header extension may be ignored by other interoperating\n\
    \   implementations that have not been extended.\"  The intent of this\n   restriction\
    \ is that RTP header extensions MUST NOT be used to extend\n   RTP itself in a\
    \ manner that is backward incompatible with\n   non-extended implementations.\
    \  For example, a header extension is not\n   allowed to change the meaning or\
    \ interpretation of the standard RTP\n   header fields or of the RTP Control Protocol\
    \ (RTCP).  Header\n   extensions MAY carry metadata in addition to the usual RTP\
    \ header\n   information, provided the RTP layer can function if that metadata\
    \ is\n   missing.  For example, RTP header extensions can be used to carry\n \
    \  data that's also sent in RTCP, as an optimization to lower latency,\n   since\
    \ they'll fall back to the original non-optimized behavior if the\n   header extension\
    \ is not present.  The use of header extensions to\n   convey information that\
    \ will, if missing, disrupt the behavior of a\n   higher-layer application that\
    \ builds on top of RTP is only acceptable\n   if this doesn't affect interoperability\
    \ at the RTP layer.  For\n   example, applications that use the SDP BUNDLE extension\
    \ with the\n   Media Identification (MID) RTP header extension [SDP-BUNDLE] to\n\
    \   correlate RTP streams with SDP \"m=\" lines likely won't work with full\n\
    \   functionality if the MID is missing, but the operation of the RTP\n   layer\
    \ of those applications will be unaffected.  Support for RTP\n   header extensions\
    \ based on this memo is negotiated using, for\n   example, SDP Offer/Answer [RFC3264];\
    \ intermediaries aware of the RTP\n   header extensions are advised to be cautious\
    \ when removing or\n   generating RTP header extensions.  See Section 4.7 of [RFC7667].\n\
    \   The RTP header extension is formed as a sequence of extension\n   elements,\
    \ with possible padding.  Each extension element has a local\n   identifier and\
    \ a length.  The local identifiers MAY be mapped to a\n   larger namespace in\
    \ the negotiation (e.g., session signaling).\n"
- title: 4.1.1.  Transmission Considerations
  contents:
  - "4.1.1.  Transmission Considerations\n   As is good network practice, data should\
    \ only be transmitted when\n   needed.  The RTP header extension SHOULD only be\
    \ present in a packet\n   if that packet also contains one or more extension elements,\
    \ as\n   defined here.  An extension element SHOULD only be present in a\n   packet\
    \ when needed; the signaling setup of extension elements\n   indicates only that\
    \ those elements can be present in some packets,\n   not that they are in fact\
    \ present in all (or indeed, any) packets.\n   Some general considerations for\
    \ getting the header extensions\n   delivered to the receiver are as follows:\n\
    \   1.  The probability for packet loss and burst loss determines how\n      \
    \ many repetitions of the header extensions will be required to\n       reach\
    \ a targeted delivery probability, and if burst loss is\n       likely, what distribution\
    \ would be needed to avoid losing all\n       repetitions of the header extensions\
    \ in a single burst.\n   2.  If a set of packets are all needed to enable decoding,\
    \ there is\n       commonly no reason for including the header extension in all\
    \ of\n       these packets, as they share fate.  Instead, at most one instance\n\
    \       of the header extension per independently decodable set of media\n   \
    \    data would be a more efficient use of the bandwidth.\n   3.  How early the\
    \ header extension item information is needed, from\n       the first received\
    \ RTP data or only after some set of packets are\n       received, can guide whether\
    \ the header extension(s) should be\n       (1) in all of the first N packets\
    \ or (2) included only once per\n       set of packets -- for example, once per\
    \ video frame.\n   4.  The use of RTP-level robustness mechanisms, such as RTP\n\
    \       retransmission [RFC4588] or Forward Error Correction (e.g.,\n       [RFC5109])\
    \ may treat packets differently from a robustness\n       perspective, and header\
    \ extensions should be added to packets\n       that get a treatment corresponding\
    \ to the relative importance of\n       receiving the information.\n   As a summary,\
    \ the number of header extension transmissions should be\n   tailored to a desired\
    \ probability of delivery, taking the receiver\n   population size into account.\
    \  For the very basic case, N repetitions\n   of the header extensions should\
    \ be sufficient but may not be optimal.\n   N is selected so that the header extension\
    \ target delivery\n   probability reaches 1-P^N, where P is the probability of\
    \ packet loss.\n   For point-to-point or small receiver populations, it might\
    \ also be\n   possible to use feedback, such as RTCP, to determine when the\n\
    \   information in the header extensions has reached all receivers and\n   stop\
    \ further repetitions.  Feedback that can be used includes the\n   RTCP Extended\
    \ Report (XR) Loss RLE Report Block [RFC3611], which will\n   indicate successful\
    \ delivery of particular packets.  If the RTP/AVPF\n   transport-layer feedback\
    \ messages for generic NACK [RFC4585] are\n   used, they can indicate failure\
    \ to deliver an RTP packet with the\n   header extension, thus indicating the\
    \ need for further repetitions.\n   The normal RTCP report blocks can also provide\
    \ an indicator of\n   successful delivery, if no losses are indicated for a reporting\n\
    \   interval covering the RTP packets with the header extension.  Note\n   that\
    \ loss of an RTCP packet reporting on an interval where RTP header\n   extension\
    \ packets were sent does not necessarily mean that the RTP\n   header extension\
    \ packets themselves were lost.\n"
- title: 4.1.2.  Header Extension Type Considerations
  contents:
  - "4.1.2.  Header Extension Type Considerations\n   Each extension element in a\
    \ packet has a local identifier (ID) and a\n   length.  The local identifiers\
    \ present in the stream MUST have been\n   negotiated or defined out of band.\
    \  There are no static allocations\n   of local identifiers.  Each distinct extension\
    \ MUST have a unique ID.\n   The ID value 0 is reserved for padding and MUST NOT\
    \ be used as a\n   local identifier.\n   An extension element with an ID value\
    \ equal to 0 MUST NOT have an\n   associated length field greater than 0.  If\
    \ such an extension element\n   is encountered, its length field MUST be ignored,\
    \ processing of the\n   entire extension MUST terminate at that point, and only\
    \ the extension\n   elements present prior to the element with ID 0 and a length\
    \ field\n   greater than 0 SHOULD be considered.\n   There are two variants of\
    \ the extension: one-byte and two-byte\n   headers.  Since it is expected that\
    \ (a) the number of extensions in\n   any given RTP session is small and (b) the\
    \ extensions themselves are\n   small, the one-byte header form is preferred and\
    \ MUST be supported by\n   all receivers.  A stream MUST contain only one-byte\
    \ headers or only\n   two-byte headers unless it is known that all recipients\
    \ support\n   mixing, by either SDP Offer/Answer [RFC3264] negotiation (see\n\
    \   Section 6) or out-of-band knowledge.  Each RTP packet with an RTP\n   header\
    \ extension following this specification will indicate whether\n   it contains\
    \ one-byte or two-byte header extensions through the use of\n   the \"defined\
    \ by profile\" field.  Extension element types that do not\n   match the header\
    \ extension format, i.e., one-byte or two-byte,\n   MUST NOT be used in that RTP\
    \ packet.  Transmitters SHOULD NOT use the\n   two-byte header form when all extensions\
    \ are small enough for the\n   one-byte header form.  Transmitters that intend\
    \ to send the two-byte\n   form SHOULD negotiate the use of IDs above 14 if they\
    \ want to let the\n   receivers know that they intend to use the two-byte form\
    \ -- for\n   example, if the RTP header extension is longer than 16 bytes.  A\n\
    \   transmitter may be aware that an intermediary may add RTP header\n   extensions;\
    \ in this case, the transmitter SHOULD use the two-byte\n   form.\n   A sequence\
    \ of extension elements, possibly with padding, forms the\n   header extension\
    \ defined in the RTP specification.  There are as many\n   extension elements\
    \ as will fit in the RTP header extension, as\n   indicated by the RTP header\
    \ extension length.  Since this length is\n   signaled in full 32-bit words, padding\
    \ bytes are used to pad to a\n   32-bit boundary.  The entire extension is parsed\
    \ byte by byte to find\n   each extension element (no alignment is needed), and\
    \ parsing stops\n   (1) at the end of the entire header extension or (2) in the\
    \ \"one-byte\n   headers only\" case, on encountering an identifier with the reserved\n\
    \   value of 15 -- whichever happens earlier.\n   In both forms, padding bytes\
    \ have the value of 0 (zero).  They MAY be\n   placed between extension elements,\
    \ if desired for alignment, or after\n   the last extension element, if needed\
    \ for padding.  A padding byte\n   does not supply the ID of an element, nor does\
    \ it supply the length\n   field.  When a padding byte is found, it is ignored,\
    \ and the parser\n   moves on to interpreting the next byte.\n   Note carefully\
    \ that the one-byte header form allows for data lengths\n   between 1 and 16 bytes,\
    \ by adding 1 to the signaled length value\n   (thus, 0 in the length field indicates\
    \ that one byte of data\n   follows).  This allows for the important case of 16-byte\
    \ payloads.\n   This addition is not performed for the two-byte headers, where\
    \ the\n   length field signals data lengths between 0 and 255 bytes.\n   Use of\
    \ RTP header extensions will reduce the efficiency of RTP header\n   compression,\
    \ since the header extension will be sent uncompressed\n   unless the RTP header\
    \ compression module is updated to recognize the\n   extension header.  If header\
    \ extensions are present in some packets\n   but not in others, this can also\
    \ reduce compression efficiency by\n   requiring an update to the fixed header\
    \ to be conveyed when header\n   extensions start or stop being sent.  The interactions\
    \ of the RTP\n   header extension and header compression are explored further\
    \ in\n   [RFC2508] and [RFC3095].\n"
- title: 4.2.  One-Byte Header
  contents:
  - "4.2.  One-Byte Header\n   In the one-byte header form of extensions, the 16-bit\
    \ value required\n   by the RTP specification for a header extension, labeled\
    \ in the RTP\n   specification as \"defined by profile\", MUST have the fixed\
    \ bit\n   pattern 0xBEDE (the pattern was picked for the trivial reason that\n\
    \   the first version of this specification was written on May 25th --\n   the\
    \ feast day of the Venerable Bede).\n   Each extension element MUST start with\
    \ a byte containing an ID and a\n   length:\n       0\n       0 1 2 3 4 5 6 7\n\
    \      +-+-+-+-+-+-+-+-+\n      |  ID   |  len  |\n      +-+-+-+-+-+-+-+-+\n \
    \  The 4-bit ID is the local identifier of this element in the range\n   1-14\
    \ inclusive.  In the signaling section, this is referred to as the\n   valid range.\n\
    \   The local identifier value 15 is reserved for a future extension and\n   MUST\
    \ NOT be used as an identifier.  If the ID value 15 is\n   encountered, its length\
    \ field MUST be ignored, processing of the\n   entire extension MUST terminate\
    \ at that point, and only the extension\n   elements present prior to the element\
    \ with ID 15 SHOULD be\n   considered.\n   The 4-bit length is the number, minus\
    \ one, of data bytes of this\n   header extension element following the one-byte\
    \ header.  Therefore,\n   the value zero (0) in this field indicates that one\
    \ byte of data\n   follows, and a value of 15 (the maximum) indicates element\
    \ data of\n   16 bytes.  (This permits carriage of 16-byte values, which is a\n\
    \   common length of labels and identifiers, while losing the possibility\n  \
    \ of zero-length values, which would often be padded anyway.)\n   An example header\
    \ extension, with three extension elements and some\n   padding, follows:\n  \
    \     0                   1                   2                   3\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       0xBE    |    0xDE       |           length=3            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  ID   | L=0   |     data      |  ID   |  L=1  |   data...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            ...data   |    0 (pad)    |    0 (pad)    |  ID   | L=3   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          data                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.3.  Two-Byte Header
  contents:
  - "4.3.  Two-Byte Header\n   In the two-byte header form, the 16-bit value defined\
    \ by the RTP\n   specification for a header extension, labeled in the RTP\n  \
    \ specification as \"defined by profile\", is defined as shown below.\n      \
    \ 0                   1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         0x100         |appbits|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The appbits field is 4 bits that are application dependent and MAY be\n  \
    \ defined to be any value or meaning; this topic is outside the scope\n   of this\
    \ specification.  For the purposes of signaling, this field is\n   treated as\
    \ a special extension value assigned to the local identifier\n   256.  If no extension\
    \ has been specified through configuration or\n   signaling for this local identifier\
    \ value (256), the appbits field\n   SHOULD be set to all 0s (zeros) by the sender\
    \ and MUST be ignored by\n   the receiver.\n   Each extension element starts with\
    \ a byte containing an ID and a byte\n   containing a length:\n       0      \
    \             1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       ID      |     length    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The 8-bit ID is the local identifier of this element in the range\n   1-255\
    \ inclusive.  In the signaling section, the range 1-256 is\n   referred to as\
    \ the valid range, with the values 1-255 referring to\n   extension elements and\
    \ the value 256 referring to the 4-bit appbits\n   field (above).  Note that there\
    \ is one ID space for both the one-byte\n   form and the two-byte form.  This\
    \ means that the lower values (1-14)\n   can be used in the 4-bit ID field in\
    \ the one-byte header format with\n   the same meanings.\n   The 8-bit length\
    \ field is the length of extension data in bytes, not\n   including the ID and\
    \ length fields.  The value zero (0) indicates\n   that there is no subsequent\
    \ data.\n   An example header extension, with three extension elements and some\n\
    \   padding, follows:\n       0                   1                   2      \
    \             3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       0x10    |    0x00       |           length=3            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      ID       |     L=0       |     ID        |     L=1       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       data    |    0 (pad)    |       ID      |      L=4      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          data                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 5.  SDP Signaling Design
  contents:
  - "5.  SDP Signaling Design\n   The indication of the presence of this extension,\
    \ and the mapping of\n   local identifiers used in the header extension to a larger\
    \ namespace,\n   MUST be performed out of band -- for example, as part of an SDP\n\
    \   Offer/Answer [RFC3264].  This section defines such signaling in SDP.\n   A\
    \ usable mapping MUST use IDs in the valid range, and each ID in this\n   range\
    \ MUST be used only once for each media section (or only once if\n   the mappings\
    \ are session level).  Mappings that do not conform to\n   these rules MAY be\
    \ presented, for instance, during SDP Offer/Answer\n   [RFC3264] negotiation as\
    \ described in the next section, but remapping\n   to conformant values is necessary\
    \ before they can be applied.\n   Each extension is named by a URI.  That URI\
    \ MUST be absolute; it\n   precisely identifies the format and meaning of the\
    \ extension.  URIs\n   that contain a domain name SHOULD also contain a month-date\
    \ in the\n   form mmyyyy.  The definition of the element and assignment of the\
    \ URI\n   MUST have been authorized by the owner of the domain name on or very\n\
    \   close to that date.  (This avoids problems when domain names change\n   ownership.)\
    \  If the resource or document defines several extensions,\n   then the URI MUST\
    \ identify the actual extension in use, e.g., using a\n   fragment or query identifier\
    \ (characters after a \"#\" or \"?\" in\n   the URI).\n   Rationale: The use of\
    \ URIs provides for a large, unallocated space\n   and gives documentation on\
    \ the extension.  The URIs do not have to be\n   dereferencable, in order to permit\
    \ confidential or experimental use,\n   or to cover the case when extensions continue\
    \ to be used after the\n   organization that defined them ceases to exist.\n \
    \  An extension URI with the same attributes MUST NOT appear more than\n   once\
    \ applying to the same stream, i.e., at session level or in the\n   declarations\
    \ for a single stream at media level.  (The same extension\n   can, of course,\
    \ be used for several streams and can appear with\n   different <extensionattributes>\
    \ for the same stream.)\n   For extensions defined in RFCs, the URI used SHOULD\
    \ be a URN starting\n   with \"urn:ietf:params:rtp-hdrext:\" followed by a registered,\n\
    \   descriptive name.\n   The registration requirements are detailed in Section\
    \ 10 (\"IANA\n   Considerations\").\n   An example where \"avt-example-metadata\"\
    \ is the hypothetical name of a\n   header extension might be:\n      urn:ietf:params:rtp-hdrext:avt-example-metadata\n\
    \   An example name not from the IETF might be:\n      http://example.com/082005/ext.htm#example-metadata\n\
    \   The mapping MAY be provided per media stream (in the media-level\n   section(s)\
    \ of SDP, i.e., after an \"m=\" line) or globally for all\n   streams (i.e., before\
    \ the first \"m=\" line, at session level).  The\n   definitions MUST be either\
    \ all session level or all media level; it\n   is not permitted to mix the two\
    \ styles.  In addition, as noted above,\n   the IDs used MUST be unique in each\
    \ media section of the SDP or\n   unique in the session for session-level SDP\
    \ declarations.\n   Each local identifier potentially used in the stream is mapped\
    \ to an\n   extension identified by a URI using an attribute of the form:\n  \
    \    a=extmap:<value>[\"/\"<direction>] <URI> <extensionattributes>\n   where\n\
    \   o  <value> is the local identifier (ID) of this extension and is an\n    \
    \  integer in the valid range (0 is reserved for padding in both\n      forms,\
    \ and 15 is reserved in the one-byte header form, as noted\n      above).\n  \
    \ o  <direction> is one of \"sendonly\", \"recvonly\", \"sendrecv\", or\n    \
    \  \"inactive\" (without the quotes) with relation to the device being\n     \
    \ configured.\n   o  <URI> is a URI, as above.\n   The formal BNF syntax is presented\
    \ in Section 8 of this\n   specification.\n   Example:\n      a=extmap:1 http://example.com/082005/ext.htm#ttime\n\
    \      a=extmap:2/sendrecv http://example.com/082005/ext.htm#xmeta short\n   When\
    \ SDP signaling is used for the RTP session, it is the presence of\n   the \"\
    extmap\" attribute(s) that is diagnostic that this style of\n   header extensions\
    \ is used, not the magic number (\"BEDE\" or \"100\")\n   indicated above.\n"
- title: 6.  SDP Signaling for Support of Mixed One-Byte and Two-Byte Header
  contents:
  - "6.  SDP Signaling for Support of Mixed One-Byte and Two-Byte Header\n    Extensions\n\
    \   In order to allow for backward interoperability with systems that\n   do not\
    \ support the mixing of one-byte and two-byte header extensions,\n   this document\
    \ defines the \"a=extmap-allow-mixed\" Session Description\n   Protocol (SDP)\
    \ [RFC4566] attribute to indicate if the participant is\n   capable of supporting\
    \ this new mode.  The attribute takes no value.\n   This attribute can be used\
    \ at the session level or the media level.\n   A participant that proposes the\
    \ use of this mode SHALL itself support\n   the reception of mixed one-byte and\
    \ two-byte header extensions.\n   If SDP Offer/Answer [RFC3264] is supported and\
    \ used, the negotiation\n   for mixed one-byte and two-byte extensions MUST be\
    \ negotiated using\n   SDP Offer/Answer per [RFC3264].  In the absence of negotiations\
    \ using\n   SDP Offer/Answer -- for example, when declarative SDP is used --\n\
    \   mixed headers MUST NOT occur unless the transmitter has some\n   (out-of-band)\
    \ knowledge that all potential recipients support\n   this mode.\n   The formal\
    \ definition of this attribute is:\n      Name: extmap-allow-mixed\n      Value:\
    \ None\n      Usage Level: session, media\n      Charset Dependent: No\n     \
    \ Example:\n         a=extmap-allow-mixed\n   When doing SDP Offer/Answer [RFC3264],\
    \ an offering client that wishes\n   to use both one-byte and two-byte extensions\
    \ MUST include the\n   attribute \"a=extmap-allow-mixed\" in the SDP offer.  If\n\
    \   \"a=extmap-allow-mixed\" is present in the SDP offer, the answerer that\n\
    \   supports this mode and wishes to use it SHALL include the\n   \"a=extmap-allow-mixed\"\
    \ attribute in the answer.  In the cases where\n   the attribute has been excluded,\
    \ both clients SHALL NOT use mixed\n   one-byte and two-byte extensions in the\
    \ same RTP stream but MAY use\n   the one-byte or two-byte form exclusively (see\
    \ Section 4.1.2).\n   When used per [SDP-BUNDLE], this attribute is specified\
    \ as the\n   IDENTICAL category [SDP-MUX].\n"
- title: 7.  SDP Offer/Answer
  contents:
  - "7.  SDP Offer/Answer\n   The simple signaling described above for the \"extmap\"\
    \ attribute MAY\n   be enhanced in an SDP Offer/Answer [RFC3264] context, to permit:\n\
    \   o  asymmetric behavior (extensions sent in only one direction),\n   o  the\
    \ offer of mutually exclusive alternatives, or\n   o  the offer of more extensions\
    \ than can be sent in a single session.\n   A direction attribute MAY be included\
    \ in an \"extmap\"; without it, the\n   direction implicitly inherits, of course,\
    \ from the stream direction\n   or is \"sendrecv\" for session-level attributes\
    \ or extensions of\n   \"inactive\" streams.  The direction MUST be one of \"\
    sendonly\",\n   \"recvonly\", \"sendrecv\", or \"inactive\" as specified in [RFC3264].\n\
    \   Extensions, with their directions, MAY be signaled for an \"inactive\"\n \
    \  stream.  It is an error to use an extension direction incompatible\n   with\
    \ the stream direction (e.g., a \"sendonly\" attribute for a\n   \"recvonly\"\
    \ stream).\n   If an offer or answer contains session-level mappings (and hence\
    \ no\n   media-level mappings) and different behavior is desired for each\n  \
    \ stream, then the entire set of extension map declarations MAY be\n   moved into\
    \ the media-level section(s) of the SDP.  (Note that this\n   specification does\
    \ not permit mixing global and local declarations,\n   to make identifier management\
    \ easier.)\n   If an extension map is offered as \"sendrecv\", explicitly or\n\
    \   implicitly, and asymmetric behavior is desired, the SDP answer MAY be\n  \
    \ changed to modify or add direction qualifiers for that extension.\n   If an\
    \ extension is marked as \"sendonly\" and the answerer desires to\n   receive\
    \ it, the extension MUST be marked as \"recvonly\" in the SDP\n   answer.  An\
    \ answerer that has no desire to receive the extension or\n   does not understand\
    \ the extension SHOULD remove it from the SDP\n   answer.  An answerer MAY want\
    \ to respond that he supports the\n   extension and does not want to receive it\
    \ at the moment, but he may\n   indicate a desire to receive it in a future offer\
    \ and will mark the\n   extension as \"inactive\".\n   If an extension is marked\
    \ as \"recvonly\" and the answerer desires to\n   send it, the extension MUST\
    \ be marked as \"sendonly\" in the SDP\n   answer.  An answerer that has no desire\
    \ to, or is unable to, send the\n   extension SHOULD remove it from the SDP answer.\
    \  An answerer MAY want\n   to respond that he supports this extension but has\
    \ no intention of\n   sending it now; he may indicate a desire to send it in a\
    \ future offer\n   by marking the extension as \"inactive\".\n   Local identifiers\
    \ in the valid range inclusive in an offer or answer\n   must not be used more\
    \ than once per media section (including the\n   session-level section).  The\
    \ local identifiers MUST be unique in an\n   RTP session, and the same identifier\
    \ MUST be used for the same\n   offered extension in the answer.  A session update\
    \ MAY change the\n   direction qualifiers of extensions being used.  A session\
    \ update MAY\n   add or remove extension(s).  Identifier values in the valid range\n\
    \   MUST NOT be altered (remapped).\n   Note that, under this rule, the same local\
    \ identifier cannot be used\n   for two extensions for the same media, even when\
    \ one is \"sendonly\"\n   and the other \"recvonly\", as it would then be impossible\
    \ to make\n   either of them \"sendrecv\" (since renumbering is not permitted\n\
    \   either).\n   If a party wishes to offer mutually exclusive alternatives, then\n\
    \   multiple extensions with the same identifier in the extended range\n   4096-4351\
    \ MAY be offered.  The answerer SHOULD select, at most, one\n   of the offered\
    \ extensions with the same identifier and remap it to a\n   free identifier in\
    \ the valid range for that extension to be usable.\n   Similarly, if more extensions\
    \ are offered than can be fit in the\n   valid range, identifiers in the range\
    \ 4096-4351 MAY be offered; the\n   answerer SHOULD choose those that are desired\
    \ and remap them to a\n   free identifier in the valid range.\n   An answerer\
    \ may copy an \"extmap\" for an identifier in the extended\n   range into the\
    \ answer to indicate to the offerer that it supports\n   that extension.  Of course,\
    \ such an extension cannot be used, since\n   there is no way to specify it in\
    \ an extension header.  If needed, the\n   offerer or answerer can update the\
    \ session to assign a valid\n   identifier to that extension URI.\n   Rationale:\
    \ The range 4096-4351 for these negotiation identifiers is\n   deliberately restricted\
    \ to allow expansion of the range of valid\n   identifiers in the future.\n  \
    \ Either party MAY include extensions in the stream other than those\n   negotiated,\
    \ or those negotiated as \"inactive\" (for example, for the\n   benefit of intermediate\
    \ nodes).  Only extensions that appeared with\n   an identifier in the valid range\
    \ in SDP originated by the sender can\n   be sent.\n   Example (port numbers,\
    \ RTP profiles, payload IDs, rtpmaps, etc. all\n   omitted for brevity):\n   The\
    \ offer:\n      a=extmap:1 URI-toffset\n      a=extmap:14 URI-obscure\n      a=extmap:4096\
    \ URI-gps-string\n      a=extmap:4096 URI-gps-binary\n      a=extmap:4097 URI-frametype\n\
    \      m=video\n      a=sendrecv\n      m=audio\n      a=sendrecv\n   The answerer\
    \ is interested in receiving GPS in string format only on\n   video but cannot\
    \ send GPS at all.  It is not interested in\n   transmission offsets on audio\
    \ and does not understand the URI-obscure\n   extension.  It therefore moves the\
    \ extensions from session level to\n   media level and adjusts the declarations:\n\
    \      m=video\n      a=sendrecv\n      a=extmap:1 URI-toffset\n      a=extmap:2/recvonly\
    \ URI-gps-string\n      a=extmap:3 URI-frametype\n      m=audio\n      a=sendrecv\n\
    \      a=extmap:1/sendonly URI-toffset\n   When using [SDP-BUNDLE] to bundle multiple\
    \ \"m=\" lines, the \"extmap\"\n   attribute falls under the SPECIAL category\
    \ of [SDP-MUX].  All the\n   \"m=\" lines in a BUNDLE group are considered to\
    \ be part of the same\n   local identifier (ID) space.  If an RTP header extension,\
    \ i.e., a\n   particular extension URI and configuration using\n   <extensionattributes>,\
    \ is offered in multiple \"m=\" lines that are\n   part of the same BUNDLE group,\
    \ it MUST use the same ID in all of\n   these \"m=\" lines.  Each \"m=\" line\
    \ in a BUNDLE group can include\n   different RTP header extensions allowing,\
    \ for example, audio and\n   video sources to use different sets of RTP header\
    \ extensions.  A\n   difference in configuration using any of the <extensionattributes>\
    \ is\n   important.  Unless an RTP header extension explicitly states\n   otherwise,\
    \ any such difference SHALL be communicated to all receivers\n   and SHALL cause\
    \ assignment of different IDs.  An RTP header extension\n   that does not follow\
    \ this rule MUST explicitly define what would\n   constitute compatible configurations\
    \ that can be sent with the\n   same ID.  The directionality of the RTP header\
    \ extensions in each\n   \"m=\" line of the BUNDLE group is handled in the same\
    \ way as handling\n   for non-bundled \"m=\" lines.  This allows for specifying\
    \ different\n   directionality for each of the repeated extension URIs in a BUNDLE\n\
    \   group.\n"
- title: 8.  BNF Syntax
  contents:
  - "8.  BNF Syntax\n   The syntax definition below uses ABNF according to [RFC5234].\
    \  The\n   syntax element \"URI\" is defined in [RFC3986] (only absolute URIs\
    \ are\n   permitted here).  The syntax element \"extmap\" is an attribute as\n\
    \   defined in [RFC4566], i.e., \"a=\" precedes the \"extmap\" definition.\n \
    \  Specific <extensionattributes> are defined by the specification that\n   defines\
    \ a specific extension name; there can be several.\n       Name: extmap\n    \
    \   Value: extmap-value\n       Syntax:\n          extmap-value = mapentry SP\
    \ extensionname\n                         [SP extensionattributes]\n         \
    \ mapentry = \"extmap:\" 1*5DIGIT [\"/\" direction]\n          extensionname =\
    \ URI\n          extensionattributes = byte-string\n          direction = \"sendonly\"\
    \ / \"recvonly\" / \"sendrecv\" / \"inactive\"\n          URI = <Defined in RFC\
    \ 3986>\n          byte-string = <Defined in RFC 4566>\n          SP = <Defined\
    \ in RFC 5234>\n          DIGIT = <Defined in RFC 5234>\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document defines only a place to transmit\
    \ information; the\n   security implications of each of the extensions must be\
    \ discussed\n   with those extensions.\n   Extension usage is negotiated using\
    \ [RFC3264], so integrity\n   protection and end-to-end authentication MUST be\
    \ implemented.  The\n   security considerations of [RFC3264] MUST be followed\
    \ to prevent, for\n   example, extension-usage blocking.\n   Header extensions\
    \ have the same security coverage as the RTP header\n   itself.  When the Secure\
    \ Real-time Transport Protocol (SRTP)\n   [RFC3711] is used to protect RTP sessions,\
    \ the RTP payload can be\n   both encrypted and integrity protected, while the\
    \ RTP header is\n   either unprotected or integrity protected.  In order to prevent\
    \ DoS\n   attacks (for example, by changing the header extension) integrity\n\
    \   protection SHOULD be used.  Lower-layer security protection such as\n   Datagram\
    \ Transport Layer Security (DTLS) [RFC6347] MAY be used.  RTP\n   header extensions\
    \ can carry sensitive information for which\n   participants in multimedia sessions\
    \ want confidentiality.  RFC 6904\n   [RFC6904] provides a mechanism that extends\
    \ the mechanisms of SRTP to\n   selectively encrypt RTP header extensions in SRTP.\n\
    \   The RTP application designer needs to consider their security needs,\n   that\
    \ includes cipher strength for SRTP packets in general and what\n   that means\
    \ for the integrity and confidentiality of the RTP header\n   extensions.  As\
    \ defined by RFC 6904 [RFC6904], the encryption stream\n   cipher for the header\
    \ extension is dependent on the chosen SRTP\n   cipher.\n   Other options for\
    \ securing RTP are discussed in [RFC7201].\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document updates the references in three IANA\
    \ registries to\n   point to this document instead of RFC 5285, and updates and\
    \ adds new\n   SDP attributes in Sections 10.2 and 10.3, respectively.\n"
- title: 10.1.  Identifier Space for IANA to Manage
  contents:
  - "10.1.  Identifier Space for IANA to Manage\n   The mapping from the naming URI\
    \ form to a reference to a\n   specification is managed by IANA.  Insertion into\
    \ this registry is\n   under the requirements of \"Expert Review\" as defined\
    \ in [RFC8126].\n   IANA will also maintain a server that contains all of the\
    \ registered\n   elements in a publicly accessible space.\n   Here is the formal\
    \ declaration to comply with the IETF URN\n   sub-namespace specification [RFC3553].\n\
    \   o  Registry name: RTP Compact Header Extensions\n   o  Specification: RFC\
    \ 5285 and RFCs updating RFC 5285\n   o  Information required:\n      A.  The\
    \ desired extension naming URI\n      B.  A formal reference to the publicly available\
    \ specification\n      C.  A short phrase describing the function of the extension\n\
    \      D.  Contact information for the organization or person making the\n   \
    \       registration\n      For extensions defined in RFCs, the URI SHOULD be\
    \ of the form\n      urn:ietf:params:rtp-hdrext:, and the formal reference is\
    \ the RFC\n      number of the RFC documenting the extension.\n   o  Review process:\
    \ Expert Review is REQUIRED.  The expert reviewer\n      SHOULD check the following\
    \ requirements:\n      1.  that the specification is publicly available;\n   \
    \   2.  that the extension complies with the requirements of RTP, and\n      \
    \    this specification, for header extensions (specifically, that\n         \
    \ the header extension can be ignored or discarded without\n          breaking\
    \ the RTP layer);\n      3.  that the extension specification is technically consistent\
    \ (in\n          itself and with RTP), complete, and comprehensible;\n      4.\
    \  that the extension does not duplicate functionality in\n          existing\
    \ IETF specifications (including RTP itself) or other\n          extensions already\
    \ registered;\n      5.  that the specification contains a security analysis regarding\n\
    \          the content of the header extension;\n      6.  that the extension\
    \ is generally applicable -- for example,\n          point-to-multipoint safe\
    \ -- and the specification correctly\n          describes limitations if they\
    \ exist;\n      7.  that the suggested naming URI form is appropriately chosen\
    \ and\n          unique; and\n      8.  that for multiplexed \"m=\" lines [SDP-BUNDLE],\
    \ any RTP header\n          extension with differences in configurations of\n\
    \          <extensionattributes> that do not require assignment of\n         \
    \ different IDs MUST explicitly indicate this and provide rules\n          for\
    \ what would constitute compatible configurations that can\n          be sent\
    \ with the same ID.\n   o  Size and format of entries: A mapping from a naming\
    \ URI string to\n      a formal reference to a publicly available specification,\
    \ with a\n      descriptive phrase and contact information.\n   o  Initial assignments:\
    \ None\n"
- title: 10.2.  Registration of the SDP "extmap" Attribute
  contents:
  - "10.2.  Registration of the SDP \"extmap\" Attribute\n   IANA has updated the\
    \ registration of the \"extmap\" SDP attribute\n   [RFC4566] in the \"att-field\
    \ (both session and media level)\"\n   subregistry of the \"Session Description\
    \ Protocol (SDP) Parameters\"\n   registry.\n   o  Contact Name and email address:\
    \ IETF, contacted via\n      <mmusic@ietf.org> (or a successor address designated\
    \ by the IESG)\n   o  Attribute Name: extmap\n   o  Attribute Syntax: See Section\
    \ 8 of RFC 8285.\n   o  Attribute Semantics: The details of appropriate values\
    \ are given\n      in RFC 8285.\n   o  Usage Level: Media or session level\n \
    \  o  Charset Dependent: No\n   o  Purpose: Defines the mapping from the extension\
    \ numbers used in\n      packet headers into extension names.\n   o  Offer/Answer\
    \ (O/A) Procedures: See Section 7 of RFC 8285.\n   o  MUX Category: SPECIAL\n\
    \   o  Reference: RFC 8285\n"
- title: 10.3.  Registration of the SDP "extmap-allow-mixed" Attribute
  contents:
  - "10.3.  Registration of the SDP \"extmap-allow-mixed\" Attribute\n   IANA has\
    \ registered one new SDP attribute in the \"att-field (both\n   session and media\
    \ level)\" subregistry of the \"Session Description\n   Protocol (SDP) Parameters\"\
    \ registry:\n   o  Contact Name and email address: IETF, contacted via\n     \
    \ <mmusic@ietf.org> (or a successor address designated by the IESG)\n   o  Attribute\
    \ Name: extmap-allow-mixed\n   o  Attribute Syntax: See Section 6 of RFC 8285.\n\
    \   o  Attribute Semantics: See Section 6 of RFC 8285.\n   o  Attribute Value:\
    \ None\n   o  Usage Level: Media or session level\n   o  Charset Dependent: No\n\
    \   o  Purpose: Negotiate the use of one byte and two bytes in the same\n    \
    \  RTP stream.\n   o  O/A Procedures: See Section 6 of RFC 8285.\n   o  MUX Category:\
    \ IDENTICAL\n   o  Reference: RFC 8285\n"
- title: 11.  Changes from RFC 5285
  contents:
  - "11.  Changes from RFC 5285\n   The major motivation for updating [RFC5285] was\
    \ to allow having\n   one-byte and two-byte RTP header extensions in the same\
    \ RTP stream\n   (but not in the same RTP packet).  The support for this case\
    \ is\n   negotiated using a new SDP attribute, \"extmap-allow-mixed\", specified\n\
    \   in this document.\n   The other major change is to update the requirement\
    \ from the RTP\n   specifications [RFC3550] and [RFC5285] that the header extension\
    \ \"is\n   designed so that the header extension may be ignored.\"  This is\n\
    \   described in Section 4.1.\n   More text was added to Section 4.1.1 (\"Transmission\
    \ Considerations\")\n   to clarify when and how many times to send the RTP header\
    \ extension\n   to provide a higher probability of delivery.\n   The Security\
    \ Considerations section was expanded.\n   The rest of the changes are editorial.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2508]  Casner, S. and V. Jacobson, \"Compressing IP/UDP/RTP\n        \
    \      Headers for Low-Speed Serial Links\", RFC 2508,\n              DOI 10.17487/RFC2508,\
    \ February 1999,\n              <https://www.rfc-editor.org/info/rfc2508>.\n \
    \  [RFC3095]  Bormann, C., Burmeister, C., Degermark, M., Fukushima, H.,\n   \
    \           Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T., Le,\n        \
    \      K., Liu, Z., Martensson, A., Miyazaki, A., Svanbro, K.,\n             \
    \ Wiebke, T., Yoshimura, T., and H. Zheng, \"RObust Header\n              Compression\
    \ (ROHC): Framework and four profiles: RTP, UDP,\n              ESP, and uncompressed\"\
    , RFC 3095, DOI 10.17487/RFC3095,\n              July 2001, <https://www.rfc-editor.org/info/rfc3095>.\n\
    \   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n   \
    \           with Session Description Protocol (SDP)\", RFC 3264,\n           \
    \   DOI 10.17487/RFC3264, June 2002,\n              <https://www.rfc-editor.org/info/rfc3264>.\n\
    \   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n   \
    \           Norrman, \"The Secure Real-time Transport Protocol (SRTP)\",\n   \
    \           RFC 3711, DOI 10.17487/RFC3711, March 2004,\n              <https://www.rfc-editor.org/info/rfc3711>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n   \
    \           Description Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n        \
    \      July 2006, <https://www.rfc-editor.org/info/rfc4566>.\n   [RFC5234]  Crocker,\
    \ D., Ed., and P. Overell, \"Augmented BNF for\n              Syntax Specifications:\
    \ ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n\
    \              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC6904]  Lennox,\
    \ J., \"Encryption of Header Extensions in the Secure\n              Real-time\
    \ Transport Protocol (SRTP)\", RFC 6904,\n              DOI 10.17487/RFC6904,\
    \ April 2013,\n              <https://www.rfc-editor.org/info/rfc6904>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in\n              RFC 2119\
    \ Key Words\", BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174, May 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \              Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550,\n     \
    \         July 2003, <https://www.rfc-editor.org/info/rfc3550>.\n   [RFC3553]\
    \  Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"An\n              IETF\
    \ URN Sub-namespace for Registered Protocol\n              Parameters\", BCP 73,\
    \ RFC 3553, DOI 10.17487/RFC3553,\n              June 2003, <https://www.rfc-editor.org/info/rfc3553>.\n\
    \   [RFC3611]  Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed.,\n     \
    \         \"RTP Control Protocol Extended Reports (RTCP XR)\",\n             \
    \ RFC 3611, DOI 10.17487/RFC3611, November 2003,\n              <https://www.rfc-editor.org/info/rfc3611>.\n\
    \   [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,\n  \
    \            \"Extended RTP Profile for Real-time Transport Control\n        \
    \      Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585,\n              DOI\
    \ 10.17487/RFC4585, July 2006,\n              <https://www.rfc-editor.org/info/rfc4585>.\n\
    \   [RFC4588]  Rey, J., Leon, D., Miyazaki, A., Varsa, V., and R.\n          \
    \    Hakenberg, \"RTP Retransmission Payload Format\", RFC 4588,\n           \
    \   DOI 10.17487/RFC4588, July 2006,\n              <https://www.rfc-editor.org/info/rfc4588>.\n\
    \   [RFC5109]  Li, A., Ed., \"RTP Payload Format for Generic Forward Error\n \
    \             Correction\", RFC 5109, DOI 10.17487/RFC5109,\n              December\
    \ 2007, <https://www.rfc-editor.org/info/rfc5109>.\n   [RFC5285]  Singer, D. and\
    \ H. Desineni, \"A General Mechanism for RTP\n              Header Extensions\"\
    , RFC 5285, DOI 10.17487/RFC5285,\n              July 2008, <https://www.rfc-editor.org/info/rfc5285>.\n\
    \   [RFC6347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n    \
    \          Security Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n         \
    \     January 2012, <https://www.rfc-editor.org/info/rfc6347>.\n   [RFC7201] \
    \ Westerlund, M. and C. Perkins, \"Options for Securing RTP\n              Sessions\"\
    , RFC 7201, DOI 10.17487/RFC7201, April 2014,\n              <https://www.rfc-editor.org/info/rfc7201>.\n\
    \   [RFC7667]  Westerlund, M. and S. Wenger, \"RTP Topologies\", RFC 7667,\n \
    \             DOI 10.17487/RFC7667, November 2015,\n              <https://www.rfc-editor.org/info/rfc7667>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [SDP-BUNDLE]\n              Holmberg, C., Alvestrand, H., and C. Jennings,\n\
    \              \"Negotiating Media Multiplexing Using the Session\n          \
    \    Description Protocol (SDP)\", Work in Progress,\n              draft-ietf-mmusic-sdp-bundle-negotiation-39,\
    \ August 2017.\n   [SDP-MUX]  Nandakumar, S., \"A Framework for SDP Attributes\
    \ when\n              Multiplexing\", Work in Progress, draft-ietf-mmusic-sdp-\n\
    \              mux-attributes-16, December 2016.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Both Brian Link and John Lazzaro provided helpful comments\
    \ on an\n   initial draft of this document.  Colin Perkins was helpful in\n  \
    \ reviewing and dealing with the details.  The use of URNs for\n   IETF-defined\
    \ extensions was suggested by Jonathan Lennox, and Pete\n   Cordell was instrumental\
    \ in improving the padding wording.  Dave Oran\n   provided feedback and text\
    \ in the review.  Mike Dolan contributed the\n   two-byte header form.  Magnus\
    \ Westerlund and Tom Taylor were\n   instrumental in managing the registration\
    \ text.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David Singer\n   Apple, Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   United States of America\n   Phone: +1 408 996 1010\n   Email:\
    \ singer@apple.com\n   URI:   https://support.apple.com/quicktime\n   Harikishan\
    \ Desineni\n   Qualcomm\n   10001 Pacific Heights Blvd.\n   San Diego, CA  92121\n\
    \   United States of America\n   Phone: +1 858 845 8996\n   Email: h3dnvb@gmail.com\n\
    \   Roni Even (editor)\n   Huawei Technologies\n   Tel Aviv\n   Israel\n   Email:\
    \ Roni.even@huawei.com\n"
