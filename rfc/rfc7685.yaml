- title: __initial_text__
  contents:
  - '     A Transport Layer Security (TLS) ClientHello Padding Extension

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a Transport Layer Security (TLS) extension that\n\
    \   can be used to pad ClientHello messages to a desired size.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7685.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Requirements Notation . . . . . . . . . . . . . . . .\
    \ . . . .   2\n   3.  Padding Extension . . . . . . . . . . . . . . . . . . .\
    \ . . .   2\n   4.  Example Usage . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   3\n   5.  Security Considerations . . . . . . . . . . . . . . . . . .\
    \ .   3\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .\
    \   4\n   7.  Normative References  . . . . . . . . . . . . . . . . . . . .  \
    \ 4\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   4\n\
    \   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   4\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Successive TLS [RFC5246] versions have added support for\
    \ more cipher\n   suites and, over time, more TLS extensions have been defined.\
    \  This\n   has caused the size of the TLS ClientHello to grow, and the\n   additional\
    \ size has caused some implementation bugs to come to light.\n   At least one\
    \ of these implementation bugs can be ameliorated by\n   making the ClientHello\
    \ even larger.  This is desirable given that\n   fully comprehensive patching\
    \ of affected implementations is difficult\n   to achieve.\n   This memo describes\
    \ a TLS extension that can be used to pad a\n   ClientHello to a desired size\
    \ in order to avoid implementation bugs\n   caused by certain ClientHello sizes.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Padding Extension
  contents:
  - "3.  Padding Extension\n   A new extension type (\"padding(21)\") is defined and\
    \ MAY be included\n   by the client in its ClientHello message.\n   enum {\n \
    \      padding(21), (65535)\n   } ExtensionType;\n   The \"extension_data\" for\
    \ the extension consists of an arbitrary\n   number of zero bytes.  For example,\
    \ the smallest \"padding\" extension\n   is four bytes long and is encoded as\
    \ 0x00 0x15 0x00 0x00.  A ten-byte\n   extension would include six bytes of \"\
    extension_data\" and would be\n   encoded as:\n   00 15 00 06 00 00 00 00 00 00\n\
    \   |---| |---| |---------------|\n     |     |           |\n     |     |    \
    \       \\- extension_data: 6 zero bytes\n     |     |\n     |     \\-------------\
    \ 16-bit, extension_data length\n     |\n     \\------------------- extension_type\
    \ for padding extension\n   The client MUST fill the padding extension completely\
    \ with zero\n   bytes, although the padding extension_data field may be empty.\n\
    \   The server MUST NOT echo the extension.\n"
- title: 4.  Example Usage
  contents:
  - "4.  Example Usage\n   As an example, consider a client that wishes to avoid sending\
    \ a\n   ClientHello with a TLSCiphertext.length between 256 and 511 bytes\n  \
    \ (inclusive).  This case is considered because at least one TLS\n   implementation\
    \ is known to hang the connection when such a\n   ClientHello record is received.\n\
    \   After building a ClientHello as normal, the client can add four bytes\n  \
    \ to the length (to account for the \"msg_type\" and \"length\" fields of\n  \
    \ the handshake protocol) and test whether the resulting length falls\n   into\
    \ that range.  If it does, a padding extension can be added in\n   order to push\
    \ the length to (at least) 512 bytes.\n   Note that if the original ClientHello\
    \ size was between 505 and 507\n   bytes, then, with the handshake protocol overhead,\
    \ the record payload\n   would be between 509 and 511 bytes long.  Since it's\
    \ not possible for\n   an extension to take less than four bytes of space, the\
    \ additional\n   padding would have to expand the ClientHello record payload beyond\n\
    \   512 bytes in these cases.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The contents of the padding extension could be\
    \ used as a covert\n   channel.  In order to prevent this, the contents are required\
    \ to be\n   all zeros, although the length of the extension can still be used\
    \ as\n   a much smaller covert channel.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has permanently registered value 21 (padding)\
    \ in the\n   \"ExtensionType Values\" registry.\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n       \
    \       DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The author gratefully acknowledges the contributions of\
    \ Wan-Teh Chang\n   and the suggestions of Eric Rescorla.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Adam Langley\n   Google Inc\n   Email: agl@google.com\n"
