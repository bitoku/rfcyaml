- title: __initial_text__
  contents:
  - '                    SNMP MIB Extension for X.25 LAPB

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in TCP/IP-based internets.\n   In\
    \ particular, it defines objects for managing the Link Layer of\n   X.25, LAPB.\
    \  The objects defined here, along with the objects in the\n   \"SNMP MIB Extension\
    \ for the Packet Layer of X.25\" [9] and the\n   \"Definitions of Managed Objects\
    \ for RS-232-like Hardware Devices\"\n   [8], combine to allow management of an\
    \ X.25 protocol stack.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. The Network Management Framework .......................\
    \    2\n   2. Objects ................................................    2\n\
    \   2.1 Format of Definitions .................................    3\n   3. Overview\
    \ ...............................................    3\n   3.1 Informal overview\
    \ .....................................    3\n   3.2 Textual Conventions ...................................\
    \    4\n   3.3 Formal overview .......................................    4\n\
    \   3.4 Tables ................................................    5\n   3.5 Traps\
    \ .................................................    6\n   4. Object Definitions\
    \ .....................................    6\n   5. Appendix: Revision History\
    \ .............................   27\n      July 30, 1992 ..........................................\
    \   27\n      June 12, 1992 ..........................................   27\n\
    \      May 18, 1992 ...........................................   28\n      April\
    \ 8, 1992 ..........................................   28\n      February 1992\
    \ ..........................................   28\n      October 1991 ...........................................\
    \   29\n      June 1991 ..............................................   30\n\
    \      April 1991 .............................................   30\n   6. Acknowledgements\
    \ .......................................   30\n   7. References .............................................\
    \   31\n   8. Security Considerations ................................   33\n\
    \   9. Authors' Addresses .....................................   33\n"
- title: 1.  The Network Management Framework
  contents:
  - "1.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  These components give the rules\
    \ for defining objects,\n   the definitions of objects, and the protocol for manipulating\n\
    \   objects.\n   The network management framework structures objects in an abstract\n\
    \   information tree. The branches of the tree name objects and the\n   leaves\
    \ of the tree contain the values manipulated to effect\n   management. This tree\
    \ is called the Management Information Base or\n   MIB. The concepts of this tree\
    \ are given in STD 16/RFC 1155 \"The\n   Structure of Management Information\"\
    \ or SMI [1]. The SMI defines the\n   trunk of the tree and the types of objects\
    \ used when defining the\n   leaves. STD 16/RFC 1212, \"Towards Concise MIB Definitions\"\
    \ [4],\n   defines a more concise description mechanism that preserves all the\n\
    \   principals of the SMI.\n   The core MIB definitions for the Internet suite\
    \ of protocols can be\n   found in RFC 1156 [2] \"Management Information Base\
    \ for Network\n   Management of TCP/IP-based internets\". STD 17/RFC 1213 [5]\
    \ defines\n   MIB-II, an evolution of MIB-I with changes to incorporate\n   implementation\
    \ experience and new operational requirements.\n   STD 15/RFC 1157 [3] defines\
    \ the SNMP protocol itself. The protocol\n   defines how to manipulate the objects\
    \ in a remote MIB.\n   The tree structure of the MIB allows new objects to be\
    \ defined for\n   the purpose of experimentation and evaluation.\n"
- title: 2.  Objects
  contents:
  - "2.  Objects\n   The definition of an object in the MIB requires an object name\
    \ and\n   type.  Object names and types are defined using the subset of the\n\
    \   Abstract Syntax Notation One (ASN.1) [6] defined in the SMI [1].\n   Objects\
    \ are named using ASN.1 object identifiers, administratively\n   assigned names,\
    \ to specify object types. The object name, together\n   with an optional object\
    \ instance, uniquely identifies a specific\n   instance of an object. For human\
    \ convenience, we often use a textual\n   string, termed the OBJECT DESCRIPTOR,\
    \ to also refer to objects.\n   Objects also have a syntax that defines the abstract\
    \ data structure\n   corresponding to that object type.  The ASN.1 language [6]\
    \ provides\n   the primitives used for this purpose.  The SMI [1] purposely\n\
    \   restricts the ASN.1 constructs which may be used for simplicity and\n   ease\
    \ of implementation.  The encoding of an object type simply\n   describes how\
    \ to represent an object using ASN.1 encoding rules [7],\n   for purposes of dealing\
    \ with the SNMP protocol.\n"
- title: 2.1.  Format of Definitions
  contents:
  - "2.1.  Format of Definitions\n   Section 4 contains the specification of all object\
    \ types defined in\n   this MIB module. The object definitions use the conventions\
    \ given in\n   the SMI [1] as amended by the concise MIB definitions [4].\n"
- title: 3.  Overview
  contents:
  - '3.  Overview

    '
- title: 3.1.  Informal overview
  contents:
  - "3.1.  Informal overview\n   This section describes how the objects defined below\
    \ relate with\n   other MIBs.  This section is only informational to help understand\n\
    \   how the pieces fit together.\n   The objects defined below are to be used\
    \ in conjunction with MIB-II\n   and other MIBs such as the X.25 packet level\
    \ MIB [9].  A system with\n   a complete X.25 stack running over a synchronous\
    \ line will have at\n   least two interfaces in the ifTable defined in MIB-II.\
    \  There will be\n   an interface for LAPB and another interface for the packet\
    \ layer of\n   X.25. There will also be objects defined in the RS-232-like MIB\
    \ for\n   the physical sync line.\n   Each software interface identifies the layer\
    \ below it used to send\n   and receive packets. The X.25 MIB object, x25InfoDataLinkId,\n\
    \   specifies an instance of lapbAdmnIndex for the LAPB interface under\n   that\
    \ X.25. The LAPB object, lapbOperPortId, defined below, identifies\n   an instance\
    \ of the rs232PortIndex for the the Sync line used by LAPB.\n   For X.25 running\
    \ over LAPB over Ethernet, the lapbAdmnPortId would\n   identify the instance\
    \ of ifIndex for the Ethernet interface.\n   Each X.25 subnetwork will have separate\
    \ entries in the ifTable.  Thus\n   a system with two X.25 lines would have two\
    \ ifTable entries for the\n   two X.25 packet layers and two other entries for\
    \ the two LAPB\n   interfaces. Each X.25 Packet Layer MIB would identify the instance\
    \ of\n   the LAPB MIB below it. Each LAPB MIB would identify the Sync line\n \
    \  below it. The system would also have two entries for rs232PortTable\n   and\
    \ rs232SyncPortTable for the two physical lines.\n   Since the ifTable as defined\
    \ in MIB-II is device independent, it\n   doesn't have anything specific for any\
    \ type of interface.  The\n   objects below define the LAPB specific information\
    \ for an interface\n   of type LAPB. Different LAPB interfaces can also be differentiated\
    \ by\n   matching the values of ifIndex with lapbAdmnIndex.\n"
- title: 3.2.  Textual Conventions
  contents:
  - "3.2.  Textual Conventions\n   Two new data types are introduced as a textual\
    \ conventions in this\n   MIB document.  These textual conventions enhance the\
    \ readability of\n   the specification and can ease comparison with other specifications\n\
    \   if appropriate.  It should be noted that the introduction of these\n   textual\
    \ conventions has no effect on either the syntax nor the\n   semantics of any\
    \ managed objects.  The use of these is merely an\n   artifact of the explanatory\
    \ method used.  Objects defined in terms of\n   one of these methods are always\
    \ encoded by means of the rules that\n   define the primitive type.  Hence, no\
    \ changes to the SMI or the SNMP\n   are necessary to accommodate these textual\
    \ conventions which are\n   adopted merely for the convenience of readers and\
    \ writers in pursuit\n   of the elusive goal of clear, concise, and unambiguous\
    \ MIB documents.\n   This MIB introduces the data types of:\n                \
    \    PositiveInteger\n                    ifIndexType\n"
- title: 3.3.  Formal overview
  contents:
  - "3.3.  Formal overview\n   Instances of the objects defined below represent attributes\
    \ of a LAPB\n   interface.  LAPB interfaces are identified by an ifType object\
    \ in the\n   Internet-standard MIB [5] of\n                lapb(16).\n   For these\
    \ interfaces, the value of the ifSpecific variable in the\n   MIB-II [5] has the\
    \ OBJECT IDENTIFIER value:\n                lapb    OBJECT IDENTIFIER ::= { transmission\
    \ 16 }\n   The relationship between a LAPB interface and an interface in the\n\
    \   context of the Internet-standard MIB [5] is one-to-one.  As such, the\n  \
    \ value of an ifIndex object instance can be directly used to identify\n   corresponding\
    \ instances of the objects defined below.\n   The objects defined below are defined\
    \ in the context of ISO 7776 [10]\n   and ISO 8885 [11]. Access to those documents\
    \ maybe useful (but isn't\n   essential) to understand the names and semantics\
    \ of some objects.\n   Where possible the object descriptions use the terminology\
    \ of ISO\n   7776; for example, one commonly used term refers to the peer LAPB\
    \ as\n   the DCE/remote DTE.  This terminology does not restrict the\n   instrumented\
    \ LAPB to function only as a DTE.  This MIB maybe applied\n   to a LAPB configured\
    \ as either a DCE or a DTE.\n   To the extent that some attributes defined in\
    \ the Internet standard\n   MIB [5] are applicable to LAPB, those objects have\
    \ not been\n   duplicated here.  In some instances some clarification of how to\n\
    \   apply those objects to LAPB has been given.\n   Some objects defined below\
    \ include a DEFVAL clause. This clause\n   provides reasonable (but not mandatory)\
    \ default values to use when\n   creating these objects.  This does not imply\
    \ this MIB defines any\n   mechanism for creating or deleting LAPB interfaces.\
    \  The creation and\n   deletion of the objects of this MIB depend on the implementation\n\
    \   method for creating and deleting LAPB interfaces.  The DEFVAL clause\n   provides\
    \ reasonable defaults to allow further extension of the MIB to\n   define methods\
    \ for creating and deleting LAPB interfaces without\n   having to deprecate these\
    \ objects for the lack of a DEFVAL clause.\n"
- title: 3.4.  Tables
  contents:
  - "3.4.  Tables\n   This extension adds four tables to the MIB.  These tables are:\n\
    \                       lapbAdmnTable,\n                       lapbOperTable,\n\
    \                       lapbFlowTable, and\n                       lapbXidTable.\n\
    \   The lapbAdmnTable provides objects for common parameters used by LAPB\n  \
    \ such as the T1 retransmission timer or the N2 retransmission counter.\n   Changes\
    \ to objects in this table need not affect a running interface\n   but provides\
    \ access to the values used to initialize an interface.\n   These values are read-write.\n\
    \   The lapbOperTable provides objects to determine the parameters\n   actually\
    \ in use by an interface.  These objects are read only.  The\n   values currently\
    \ in use maybe different from the lapbAdmnTable values\n   if the lapbAdmnTable\
    \ was changed after interface initialization or if\n   XID negotiation selected\
    \ different values.\n   The lapbFlowTable provides objects that report how the\
    \ LAPB interface\n   performs.  These are read-only objects used to monitor operation.\n\
    \   The lapbXidTable is not required for systems that do not transmit XID\n  \
    \ frames. For systems that do transmit XID frames, this table provides\n   the\
    \ values for the fields of the XID frame that are not already\n   present in the\
    \ lapbAdmnTable.  The objects in this table are read-\n   write.\n"
- title: 3.5.  Traps
  contents:
  - "3.5.  Traps\n   Since all LAPB interfaces have entries in the ifTable, significant\n\
    \   changes in the state of the interface should send a linkUp or\n   linkDown\
    \ trap. Thus an interface that receives or sends a Frame\n   Reject frame should\
    \ send a linkDown trap.  If the interface later\n   comes back up, it should then\
    \ send a linkUP trap.\n"
- title: 4.  Object Definitions
  contents:
  - "4.  Object Definitions\n          RFC1381-MIB DEFINITIONS ::= BEGIN\n       \
    \   IMPORTS\n                  Counter\n                          FROM RFC1155-SMI\n\
    \                  transmission\n                          FROM RFC1213-MIB\n\
    \                  OBJECT-TYPE\n                          FROM RFC-1212;\n   \
    \                       --  LAPB MIB\n          lapb    OBJECT IDENTIFIER ::=\
    \ { transmission 16 }\n          PositiveInteger ::= INTEGER (0..2147483647)\n\
    \          IfIndexType     ::= INTEGER (1..2147483647)\n          -- IfIndexType\
    \ specifies an index object for a table\n          -- with entries that match\
    \ entries in the MIB-II ifTable.\n          -- The value of the index for the\
    \ table will match the\n          -- ifIndex entry for same interface in the ifTable.\n\
    \          -- The values of this object range from 1 to ifNumber\n          --\
    \ inclusive.\n          -- ###########################################################\n\
    \          --                      LAPB Admn Table\n          -- ###########################################################\n\
    \          -- Support of the lapbAdmnTable is mandatory for all\n          --\
    \ agents of systems that implement LAPB.\n          lapbAdmnTable   OBJECT-TYPE\n\
    \                  SYNTAX  SEQUENCE OF LapbAdmnEntry\n                  ACCESS\
    \  not-accessible\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"This table contains objects that can be\n       \
    \                   changed to manage a LAPB interface.\n                    \
    \      Changing one of these parameters may take\n                          effect\
    \ in the operating LAPB immediately or\n                          may wait until\
    \ the interface is restarted\n                          depending on the details\
    \ of the\n                          implementation.\n                        \
    \  Most of the objects in this read-write table\n                          have\
    \ corresponding read-only objects in the\n                          lapbOperTable\
    \ that return the current\n                          operating value.\n      \
    \                    The operating values may be different from\n            \
    \              these configured values if changed by XID\n                   \
    \       negotiation or if a configured parameter was\n                       \
    \   changed after the interface was started.\"\n                  ::= { lapb 1\
    \ }\n          lapbAdmnEntry   OBJECT-TYPE\n                  SYNTAX  LapbAdmnEntry\n\
    \                  ACCESS  not-accessible\n                  STATUS  mandatory\n\
    \                  DESCRIPTION\n                          \"Configured parameter\
    \ values for a specific\n                          LAPB.\"\n                 \
    \ INDEX { lapbAdmnIndex }\n                  ::= { lapbAdmnTable 1 }\n       \
    \   LapbAdmnEntry ::= SEQUENCE {\n                  lapbAdmnIndex\n          \
    \                IfIndexType,\n                  lapbAdmnStationType\n       \
    \                   INTEGER,\n                  lapbAdmnControlField\n       \
    \                   INTEGER,\n                  lapbAdmnTransmitN1FrameSize\n\
    \                          PositiveInteger,\n                  lapbAdmnReceiveN1FrameSize\n\
    \                          PositiveInteger,\n                  lapbAdmnTransmitKWindowSize\n\
    \                          INTEGER,\n                  lapbAdmnReceiveKWindowSize\n\
    \                          INTEGER,\n                  lapbAdmnN2RxmitCount\n\
    \                  INTEGER,\n                  lapbAdmnT1AckTimer\n          \
    \                PositiveInteger,\n                  lapbAdmnT2AckDelayTimer\n\
    \                          PositiveInteger,\n                  lapbAdmnT3DisconnectTimer\n\
    \                          PositiveInteger,\n                  lapbAdmnT4IdleTimer\n\
    \                          PositiveInteger,\n                  lapbAdmnActionInitiate\n\
    \                          INTEGER,\n                  lapbAdmnActionRecvDM\n\
    \                          INTEGER\n                  }\n          lapbAdmnIndex\
    \   OBJECT-TYPE\n                  SYNTAX  IfIndexType\n                  ACCESS\
    \  read-only\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The ifIndex value for the LAPB interface.\"\n   \
    \               ::= { lapbAdmnEntry 1 }\n          lapbAdmnStationType     OBJECT-TYPE\n\
    \                  SYNTAX  INTEGER {\n                          dte (1),\n   \
    \                       dce (2),\n                          dxe (3)\n        \
    \                  }\n                  ACCESS  read-write\n                 \
    \ STATUS  mandatory\n                  DESCRIPTION\n                         \
    \ \"Identifies the desired station type of this\n                          interface.\"\
    \n                  REFERENCE \"ISO 7776 section 3.1\"\n                  DEFVAL\
    \ { dte }\n                  ::= { lapbAdmnEntry 2 }\n          lapbAdmnControlField\
    \ OBJECT-TYPE\n                  SYNTAX  INTEGER {\n                         \
    \ modulo8 (1),\n                          modulo128 (2)\n                    \
    \      }\n                  ACCESS  read-write\n                  STATUS  mandatory\n\
    \                  DESCRIPTION\n                          \"The desired size of\
    \ the sequence numbers\n                          used to number frames.\"\n \
    \                 REFERENCE \"ISO 8885 Table 3, Name: HDLC Option - 10\"\n   \
    \               DEFVAL { modulo8 }\n                  ::= { lapbAdmnEntry 3 }\n\
    \          lapbAdmnTransmitN1FrameSize OBJECT-TYPE\n                  SYNTAX \
    \ PositiveInteger\n                  ACCESS  read-write\n                  STATUS\
    \  mandatory\n                  DESCRIPTION\n                          \"The default\
    \ maximum N1 frame size desired\n                          in number of bits for\
    \ a frame transmitted by\n                          this DTE.  This excludes flags\
    \ and 0 bits\n                          inserted for transparency.\"\n       \
    \           REFERENCE \"ISO 8885 Table 3,\n                          Name: Information\
    \ Field length\"\n                  DEFVAL { 36000 } -- 4500 * 8; 802.5 Frame\
    \ size\n                  ::= { lapbAdmnEntry 4 }\n          lapbAdmnReceiveN1FrameSize\
    \ OBJECT-TYPE\n                  SYNTAX  PositiveInteger\n                  ACCESS\
    \  read-write\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The default maximum N1 frame size desired\n     \
    \                     in number of bits for a frame the DCE/remote\n         \
    \                 DTE transmits to this DTE.  This excludes\n                \
    \          flags and 0 bits inserted for transparency.\"\n                  DEFVAL\
    \ { 36000  } -- 4500 * 8; 802.5 Frame size\n                  ::= { lapbAdmnEntry\
    \ 5 }\n          lapbAdmnTransmitKWindowSize OBJECT-TYPE\n                  SYNTAX\
    \  INTEGER (1..127)\n                  ACCESS  read-write\n                  STATUS\
    \  mandatory\n                  DESCRIPTION\n                          \"The default\
    \ transmit window size for this\n                          Interface.  This is\
    \ the maximum number of\n                          unacknowledged sequenced PDUs\
    \ that may be\n                          outstanding from this DTE at any one\
    \ time.\"\n                  REFERENCE \"ISO 8885 Table 3, Name: Window size\"\
    \n                  DEFVAL { 7 }\n                  ::= { lapbAdmnEntry 6 }\n\
    \          lapbAdmnReceiveKWindowSize OBJECT-TYPE\n                  SYNTAX  INTEGER\
    \ (1..127)\n                  ACCESS  read-write\n                  STATUS  mandatory\n\
    \                  DESCRIPTION\n                          \"The default receive\
    \ window size for this\n                          Interface.  This is the maximum\
    \ number of\n                          unacknowledged sequenced PDUs that may\
    \ be\n                          outstanding from the DCE/remote DTE at any\n \
    \                         one time.\"\n                  REFERENCE \"ISO 8885\
    \ Table 3, Name: Window size\"\n                  DEFVAL { 7 }\n             \
    \     ::= { lapbAdmnEntry 7 }\n          lapbAdmnN2RxmitCount    OBJECT-TYPE\n\
    \                  SYNTAX  INTEGER (0..65535)\n                  ACCESS  read-write\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The default N2 retry counter for this\n                 \
    \         interface.  This specifies the number of\n                         \
    \ times a PDU will be resent after the T1\n                          timer expires\
    \ without an acknowledgement for\n                          the PDU.\"\n     \
    \             REFERENCE \"ISO 8885 Table 3,\n                          Name: Retransmission\
    \ Attempts\"\n                  DEFVAL { 20 }\n                  ::= { lapbAdmnEntry\
    \ 8 }\n          lapbAdmnT1AckTimer      OBJECT-TYPE\n                  SYNTAX\
    \  PositiveInteger\n                  ACCESS  read-write\n                  STATUS\
    \  mandatory\n                  DESCRIPTION\n                          \"The default\
    \ T1 timer for this interface.\n                          This specifies the maximum\
    \ time in\n                          Milliseconds to wait for acknowledgment of\
    \ a\n                          PDU.\"\n                  REFERENCE \"ISO 8885\
    \ Table 3, Name:\n                          Acknowledgement timer\"\n        \
    \          DEFVAL { 3000 }\n                  ::= { lapbAdmnEntry 9 }\n      \
    \    lapbAdmnT2AckDelayTimer         OBJECT-TYPE\n                  SYNTAX  PositiveInteger\n\
    \                  ACCESS  read-write\n                  STATUS  mandatory\n \
    \                 DESCRIPTION\n                          \"The default T2 timer\
    \ for this interface.\n                          This specifies the maximum time\
    \ in\n                          Milliseconds to wait before sending an\n     \
    \                     acknowledgment for a sequenced PDU.  A value\n         \
    \                 of zero means there will be no delay in\n                  \
    \        acknowledgement generation.\"\n                  REFERENCE \"ISO 8885\
    \ Table 3,\n                          Name: Reply delay timer\"\n            \
    \      DEFVAL { 0 }\n                  ::= { lapbAdmnEntry 10 }\n          lapbAdmnT3DisconnectTimer\
    \ OBJECT-TYPE\n                  SYNTAX  PositiveInteger\n                  ACCESS\
    \  read-write\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The T3 timer for this interface.  This\n        \
    \                  specifies the time in Milliseconds to wait\n              \
    \            before considering the link disconnected.  A\n                  \
    \        value of zero indicates the link will be\n                          considered\
    \ disconnected upon completion of\n                          the frame exchange\
    \ to disconnect the link.\"\n                  REFERENCE \"ISO 7776 section 5.7.1.3\"\
    \n                  DEFVAL { 60000 }\n                  ::= { lapbAdmnEntry 11\
    \ }\n          lapbAdmnT4IdleTimer OBJECT-TYPE\n                  SYNTAX  PositiveInteger\n\
    \                  ACCESS  read-write\n                  STATUS  mandatory\n \
    \                 DESCRIPTION\n                          \"The T4 timer for this\
    \ interface.  This\n                          specifies the maximum time in Milliseconds\n\
    \                          to allow without frames being exchanged on\n      \
    \                    the data link.  A value of 2147483647\n                 \
    \         indicates no idle timer is being kept.\"\n                  REFERENCE\
    \ \"ISO 7776 section 5.7.1.4\"\n                  DEFVAL { 2147483647 }\n    \
    \              ::= { lapbAdmnEntry 12 }\n          lapbAdmnActionInitiate OBJECT-TYPE\n\
    \                  SYNTAX  INTEGER {\n                  sendSABM (1),\n      \
    \                    sendDISC (2),\n                          sendDM (3),\n  \
    \                        none (4),\n                          other (5)\n    \
    \                      }\n                  ACCESS  read-write\n             \
    \     STATUS  mandatory\n                  DESCRIPTION\n                     \
    \     \"This identifies the action LAPB will take\n                          to\
    \ initiate link set-up.\"\n                  DEFVAL { sendSABM }\n           \
    \       ::= { lapbAdmnEntry 13 }\n          lapbAdmnActionRecvDM OBJECT-TYPE\n\
    \                  SYNTAX  INTEGER {\n                          sendSABM (1),\n\
    \                          sendDISC (2),\n                          other (3)\n\
    \                          }\n                  ACCESS  read-write\n         \
    \         STATUS  mandatory\n                  DESCRIPTION\n                 \
    \         \"This identifies the action LAPB will take\n                      \
    \    when it receives a DM response.\"\n                  DEFVAL { sendSABM }\n\
    \                  ::= { lapbAdmnEntry 14 }\n          -- ###########################################################\n\
    \          --                      LAPB operating parameters.\n          -- ###########################################################\n\
    \          -- Support of the lapbOperTable is mandatory for all\n          --\
    \ agents of systems that implement LAPB.\n          lapbOperTable   OBJECT-TYPE\n\
    \                  SYNTAX  SEQUENCE OF LapbOperEntry\n                  ACCESS\
    \  not-accessible\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"This table contains configuration\n             \
    \             information about interface parameters\n                       \
    \   currently set in the interface.  Many of\n                          these\
    \ objects have corresponding objects in\n                  the lapbAdmnTable.\"\
    \n                  ::= { lapb 2 }\n          lapbOperEntry   OBJECT-TYPE\n  \
    \                SYNTAX  LapbOperEntry\n                  ACCESS  not-accessible\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"Currently set parameter values for a\n                  \
    \        specific LAPB.\"\n                  INDEX { lapbOperIndex }\n       \
    \           ::= { lapbOperTable 1 }\n          LapbOperEntry ::= SEQUENCE {\n\
    \                  lapbOperIndex\n                          IfIndexType,\n   \
    \               lapbOperStationType\n                          INTEGER,\n    \
    \              lapbOperControlField\n                          INTEGER,\n    \
    \              lapbOperTransmitN1FrameSize\n                          PositiveInteger,\n\
    \                  lapbOperReceiveN1FrameSize\n                          PositiveInteger,\n\
    \                  lapbOperTransmitKWindowSize\n                          INTEGER,\n\
    \                  lapbOperReceiveKWindowSize\n                          INTEGER,\n\
    \                  lapbOperN2RxmitCount\n                          INTEGER,\n\
    \                  lapbOperT1AckTimer\n                          PositiveInteger,\n\
    \                  lapbOperT2AckDelayTimer\n                          PositiveInteger,\n\
    \                  lapbOperT3DisconnectTimer\n                          PositiveInteger,\n\
    \                  lapbOperT4IdleTimer\n                          PositiveInteger,\n\
    \                  lapbOperPortId\n                          OBJECT IDENTIFIER,\n\
    \                  lapbOperProtocolVersionId\n                          OBJECT\
    \ IDENTIFIER\n                  }\n          lapbOperIndex   OBJECT-TYPE\n   \
    \          SYNTAX       IfIndexType\n                  ACCESS  read-only\n   \
    \               STATUS  mandatory\n                  DESCRIPTION\n           \
    \               \"The ifIndex value for the LAPB interface.\"\n              \
    \    ::= { lapbOperEntry 1 }\n          lapbOperStationType     OBJECT-TYPE\n\
    \                  SYNTAX  INTEGER {\n                          dte (1),\n   \
    \                       dce (2),\n                          dxe (3)\n        \
    \                  }\n                  ACCESS  read-only\n                  STATUS\
    \  mandatory\n                  DESCRIPTION\n                          \"Identifies\
    \ the current operating station\n                          type of this interface.\
    \  A value of dxe (3)\n                          indicates XID negotiation has\
    \ not yet taken\n                          place.\"\n                  REFERENCE\
    \ \"ISO 7776 section 3.1\"\n                  ::= { lapbOperEntry 2 }\n      \
    \    lapbOperControlField OBJECT-TYPE\n                  SYNTAX  INTEGER {\n \
    \                         modulo8 (1),\n                          modulo128 (2)\n\
    \                          }\n                  ACCESS  read-only\n          \
    \        STATUS  mandatory\n                  DESCRIPTION\n                  \
    \        \"The current operating size of the sequence\n                      \
    \    numbers used to number frames.\"\n                  REFERENCE \"ISO 7776\
    \ section 3.3\"\n                  ::= { lapbOperEntry 3 }\n          lapbOperTransmitN1FrameSize\
    \ OBJECT-TYPE\n                  SYNTAX  PositiveInteger\n                  ACCESS\
    \  read-only\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The current operating N1 frame size used\n      \
    \                    for the maximum number of bits in a frame\n             \
    \             this DTE can transmit.  This excludes flags\n                  \
    \        and 0 bits inserted for transparency.\"\n                  REFERENCE\
    \ \"ISO 7776 section 5.7.3\"\n                  ::= { lapbOperEntry 4 }\n    \
    \      lapbOperReceiveN1FrameSize OBJECT-TYPE\n                  SYNTAX  PositiveInteger\n\
    \                  ACCESS  read-only\n                  STATUS  mandatory\n  \
    \                -- See lapbOperTransmitN1FrameSize above\n                  DESCRIPTION\n\
    \                          \"The current operating N1 frame size used\n      \
    \                    for the maximum number of bits in a frame\n             \
    \             the DCE/remote DTE can transmit.  This\n                       \
    \   excludes flags and 0 bits inserted for\n                          transparency.\"\
    \n                  ::= { lapbOperEntry 5 }\n          lapbOperTransmitKWindowSize\
    \ OBJECT-TYPE\n                  SYNTAX  INTEGER (1..127)\n                  ACCESS\
    \  read-only\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The current PDU window size this Interface\n    \
    \                      uses to transmit.  This is the maximum\n              \
    \            number of unacknowledged sequenced PDUs that\n                  \
    \        may be outstanding from this DTE at any one\n                       \
    \   time.\"\n                  REFERENCE \"ISO 7776 section 5.7.4\"\n        \
    \          ::= { lapbOperEntry 6 }\n          lapbOperReceiveKWindowSize OBJECT-TYPE\n\
    \                  SYNTAX  INTEGER (1..127)\n                  ACCESS  read-only\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The current receive PDU window size for\n               \
    \           this Interface.  This is the maximum number\n                    \
    \      of unacknowledged sequenced PDUs that may be\n                        \
    \  outstanding from the DCE/remote DTE at any\n                          one time.\"\
    \n                  REFERENCE \"ISO 7776 section 5.7.4\"\n                  ::=\
    \ { lapbOperEntry 7 }\n          lapbOperN2RxmitCount    OBJECT-TYPE\n       \
    \           SYNTAX  INTEGER (0..65535)\n                  ACCESS  read-only\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The current N2 retry counter used for this\n            \
    \              interface.  This specifies the number of\n                    \
    \      times a PDU will be resent after the T1\n                          timer\
    \ expires without an acknowledgement for\n                          the PDU.\"\
    \n                  REFERENCE \"ISO 7776 section 5.7.2\"\n                  ::=\
    \ { lapbOperEntry 8 }\n          lapbOperT1AckTimer      OBJECT-TYPE\n       \
    \           SYNTAX  PositiveInteger\n                  ACCESS  read-only\n   \
    \               STATUS  mandatory\n                  DESCRIPTION\n           \
    \               \"The current T1 timer for this interface.\n                 \
    \         This specifies the maximum time in\n                          Milliseconds\
    \ to wait for acknowledgment of a\n                          PDU.\"\n        \
    \          REFERENCE \"ISO 7776 section 5.7.1.1\"\n                  ::= { lapbOperEntry\
    \ 9 }\n          lapbOperT2AckDelayTimer         OBJECT-TYPE\n               \
    \   SYNTAX  PositiveInteger\n                  ACCESS  read-only\n           \
    \       STATUS  mandatory\n                  DESCRIPTION\n                   \
    \       \"The current T2 timer for this interface.\n                         \
    \ This specifies the maximum time in\n                          Milliseconds to\
    \ wait before sending an\n                          acknowledgment for a sequenced\
    \ PDU.  A value\n                          of zero means there will be no delay\
    \ in\n                          acknowledgement generation.\"\n              \
    \    REFERENCE \"ISO 7776 section 5.7.1.2\"\n                  ::= { lapbOperEntry\
    \ 10 }\n          lapbOperT3DisconnectTimer OBJECT-TYPE\n                  SYNTAX\
    \  PositiveInteger\n                  ACCESS  read-only\n                  STATUS\
    \  mandatory\n                  DESCRIPTION\n                          \"The current\
    \ T3 timer for this interface.\n                          This specifies the time\
    \ in Milliseconds to\n                          wait before considering the link\n\
    \                          disconnected.  A value of zero indicates the\n    \
    \                      link will be considered disconnected upon\n           \
    \               completion of the frame exchange to\n                        \
    \  disconnect the link.\"\n                  REFERENCE \"ISO 7776 section 5.7.1.3\"\
    \n                  ::= { lapbOperEntry 11 }\n          lapbOperT4IdleTimer OBJECT-TYPE\n\
    \                  SYNTAX  PositiveInteger\n                  ACCESS  read-write\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The current T4 timer for this interface.\n              \
    \            This specifies the maximum time in\n                          Milliseconds\
    \ to allow without frames being\n                          exchanged on the data\
    \ link.  A value of\n                          2147483647 indicates no idle timer\
    \ is being\n                          kept.\"\n                  REFERENCE \"\
    ISO 7776 section 5.7.1.4\"\n                  ::= { lapbOperEntry 12 }\n     \
    \     lapbOperPortId OBJECT-TYPE\n                  SYNTAX  OBJECT IDENTIFIER\n\
    \                  ACCESS  read-only\n                  STATUS  mandatory\n  \
    \                DESCRIPTION\n                          \"This object identifies\
    \ an instance of the\n                          index object in the first group\
    \ of objects\n                          in the MIB specific to the physical device\n\
    \                          or interface used to send and receive\n           \
    \               frames.  If an agent does not support any\n                  \
    \        such objects, it should return nullSpec\n                          OBJECT\
    \ IDENTIFIER {0 0}.\"\n                  ::= { lapbOperEntry 13 }\n          lapbOperProtocolVersionId\
    \       OBJECT-TYPE\n                  SYNTAX  OBJECT IDENTIFIER\n           \
    \       ACCESS  read-only\n                  STATUS  mandatory\n             \
    \     DESCRIPTION\n                          \"This object identifies the version\
    \ of the\n                          lapb protocol implemented by this\n      \
    \                    interface.\"\n                  ::= { lapbOperEntry 14 }\n\
    \          -- ###########################################################\n  \
    \        --                      LAPB    Flow Table\n          -- ###########################################################\n\
    \          -- Support of the lapbFlowTable is mandatory for all\n          --\
    \ agents of systems that implement LAPB.\n          lapbFlowTable OBJECT-TYPE\n\
    \                  SYNTAX  SEQUENCE OF LapbFlowEntry\n                  ACCESS\
    \  not-accessible\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"This table defines the objects recorded by\n    \
    \                      LAPB to provide information about the\n               \
    \           traffic flow through the interface.\"\n                  ::= { lapb\
    \ 3 }\n          lapbFlowEntry OBJECT-TYPE\n                  SYNTAX  LapbFlowEntry\n\
    \                  ACCESS  not-accessible\n                  STATUS  mandatory\n\
    \                  DESCRIPTION\n                          \"The information regarding\
    \ the effects of\n                          flow controls in LAPB.\"\n       \
    \            INDEX { lapbFlowIfIndex }\n                  ::= { lapbFlowTable\
    \ 1 }\n          LapbFlowEntry ::= SEQUENCE {\n                  lapbFlowIfIndex\n\
    \                          IfIndexType,\n                  lapbFlowStateChanges\n\
    \                          Counter,\n                  lapbFlowChangeReason\n\
    \                          INTEGER,\n                  lapbFlowCurrentMode\n \
    \                         INTEGER,\n                  lapbFlowBusyDefers\n   \
    \                       Counter,\n                  lapbFlowRejOutPkts\n     \
    \                     Counter,\n                  lapbFlowRejInPkts\n        \
    \                  Counter,\n                  lapbFlowT1Timeouts\n          \
    \                Counter,\n                  lapbFlowFrmrSent\n              \
    \    OCTET STRING,\n                  lapbFlowFrmrReceived\n                 \
    \         OCTET STRING,\n                  lapbFlowXidReceived\n             \
    \             OCTET STRING\n                  }\n          lapbFlowIfIndex OBJECT-TYPE\n\
    \                  SYNTAX  IfIndexType\n                  ACCESS  read-only\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The ifIndex value for the LAPB Interface.\"\n           \
    \       ::= { lapbFlowEntry 1 }\n          lapbFlowStateChanges OBJECT-TYPE\n\
    \                  SYNTAX  Counter\n                  ACCESS  read-only\n    \
    \              STATUS  mandatory\n                  DESCRIPTION\n            \
    \              \"The number of LAPB State Changes, including\n               \
    \           resets.\"\n                  ::= { lapbFlowEntry 2 }\n          lapbFlowChangeReason\
    \ OBJECT-TYPE\n                  SYNTAX  INTEGER {\n                         \
    \ notStarted (1),    -- Initial state\n                          abmEntered (2),\
    \    -- SABM or UA\n                          abmeEntered (3),   -- SABME or UA\n\
    \                          abmReset (4),      -- SABM in ABM\n               \
    \           abmeReset (5),     -- SABME in ABME\n                          dmReceived\
    \ (6),    -- DM Response\n                          dmSent (7),        -- DM sent\n\
    \                          discReceived (8),  -- DISC Response\n             \
    \             discSent (9),      -- DISC Sent\n                          frmrReceived\
    \ (10), -- FRMR Received\n                          frmrSent (11),     -- FRMR\
    \ Sent\n                          n2Timeout (12),    -- N2 Timer Expired\n   \
    \                       other (13)\n                            }\n          \
    \        ACCESS  read-only\n                  STATUS  mandatory\n            \
    \      DESCRIPTION\n                          \"The reason for the most recent\
    \ incrementing\n                          of lapbFlowStateChanges.  A DM or DISC\
    \ frame\n                          generated to initiate link set-up does not\n\
    \                          alter this object.  When the MIB-II object\n      \
    \                    ifOperStatus does not have a value of\n                 \
    \         testing, there exists a correlation between\n                      \
    \    this object and ifOperStatus.  IfOperStatus\n                          will\
    \ have a value of up when this object\n                          contains:  abmEntered,\
    \ abmeEntered,\n                          abmReset, or abmeReset.  IfOperStatus\
    \ will\n                          have a value of down when this object has a\n\
    \                          value of notStarted, or dmReceived through\n      \
    \                    n2Timeout.  There is no correlation when\n              \
    \            this object has the value other.\"\n                  ::= { lapbFlowEntry\
    \ 3 }\n          lapbFlowCurrentMode OBJECT-TYPE\n                  SYNTAX  INTEGER\
    \ {\n                          disconnected (1),\n                           \
    \       -- initial state or DISC received\n                          linkSetup\
    \ (2),\n                                  -- SABM sent\n                     \
    \     frameReject (3),\n                                  -- Invalid frame received\
    \ and\n                                  -- FRMR sent\n                      \
    \    disconnectRequest (4),\n                                  -- DISC sent\n\
    \                          informationTransfer (5),\n                        \
    \          -- normal information transfer state\n                            \
    \      -- SABM(E) sent and UA received, or\n                                 \
    \ -- SABM(E) received and UA sent\n                          rejFrameSent (6),\n\
    \                                  -- invalid NS received and REJ sent\n     \
    \                     waitingAcknowledgement (7),\n                          \
    \        -- T1 expired and RR sent\n                          stationBusy (8),\n\
    \                                  -- RNR sent\n                          remoteStationBusy\
    \ (9),\n                                  -- RNR received\n                  \
    \        bothStationsBusy (10),\n                                  -- RNR received\
    \ and RNR sent\n                          waitingAckStationBusy (11),\n      \
    \                            -- T1 expired, RNR sent\n                       \
    \   waitingAckRemoteBusy (12),\n                                  -- T1 expired,\
    \ RNR received\n                          waitingAckBothBusy (13),\n         \
    \                         -- T1 expired, RNR sent,\n                         \
    \         -- and RNR received\n                          rejFrameSentRemoteBusy\
    \ (14),\n                                  -- REJ sent and RNR received\n    \
    \                      xidFrameSent (15),\n                                  --\
    \ XID frame sent\n                          error (16),\n                    \
    \              -- An error state other than\n                                \
    \  -- a one defined above\n                          other (17)\n            \
    \                      --  A state not listed above\n                        \
    \    }\n                  ACCESS  read-only\n                  STATUS  mandatory\n\
    \                  DESCRIPTION\n                          \"The current condition\
    \ of the conversation.\"\n                  ::= { lapbFlowEntry 4 }\n        \
    \  lapbFlowBusyDefers OBJECT-TYPE\n                  SYNTAX  Counter\n       \
    \           ACCESS  read-only\n                  STATUS  mandatory\n         \
    \         DESCRIPTION\n                          \"The number of times this device\
    \ was unable\n                          to transmit a frame due to a perceived\n\
    \                          remote busy condition.  Busy conditions can\n     \
    \                     result from the receipt of an RNR from the\n           \
    \               remote device, the lack of valid sequence\n                  \
    \        number space (window saturation), or other\n                        \
    \  conditions.\"\n                  ::= { lapbFlowEntry 5 }\n          lapbFlowRejOutPkts\
    \ OBJECT-TYPE\n                  SYNTAX  Counter\n                  ACCESS  read-only\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The number of REJ or SREJ frames sent by\n              \
    \            this station.\"\n                  ::= { lapbFlowEntry 6 }\n    \
    \      lapbFlowRejInPkts OBJECT-TYPE\n                  SYNTAX  Counter\n    \
    \              ACCESS  read-only\n                  STATUS  mandatory\n      \
    \            DESCRIPTION\n                          \"The number of REJ or SREJ\
    \ frames received\n                          by this station.\"\n            \
    \      ::= { lapbFlowEntry 7 }\n          lapbFlowT1Timeouts OBJECT-TYPE\n   \
    \               SYNTAX  Counter\n                  ACCESS  read-only\n       \
    \           STATUS  mandatory\n                  DESCRIPTION\n               \
    \           \"The number of times a re-transmission was\n                    \
    \      effected by the T1 Timer expiring.\"\n                  ::= { lapbFlowEntry\
    \ 8 }\n          lapbFlowFrmrSent OBJECT-TYPE\n                  SYNTAX  OCTET\
    \ STRING (SIZE (0..7))\n                  ACCESS  read-only\n                \
    \  STATUS  mandatory\n                  DESCRIPTION\n                        \
    \  \"The Information Field of the FRMR most\n                          recently\
    \ sent.  If no FRMR has been sent\n                          (the normal case)\
    \ or the information isn't\n                          available, this will be\
    \ an OCTET STRING of\n                          zero length.\"\n             \
    \     REFERENCE \"ISO 7776 Section 4.3.9, tables 7 and 8\"\n                 \
    \ ::= { lapbFlowEntry 9 }\n          lapbFlowFrmrReceived OBJECT-TYPE\n      \
    \            SYNTAX  OCTET STRING (SIZE (0..7))\n                  ACCESS  read-only\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The Information Field of the FRMR most\n                \
    \          recently received.  If no FRMR has been\n                         \
    \ received (the normal case) or the\n                          information isn't\
    \ available, this will be an\n                          OCTET STRING of zero length.\"\
    \n                  REFERENCE \"ISO 7776 Section 4.3.9, tables 7 and 8\"\n   \
    \               ::= { lapbFlowEntry 10 }\n          lapbFlowXidReceived OBJECT-TYPE\n\
    \                  SYNTAX  OCTET STRING (SIZE (0..8206))\n                  ACCESS\
    \  read-only\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The Information Field of the XID frame most\n   \
    \                       recently received.  If no XID frame has been\n       \
    \                   received, this will be an OCTET STRING of\n              \
    \            zero length.\"\n                  REFERENCE \"ISO 8885\"\n      \
    \            ::= { lapbFlowEntry 11 }\n          -- ###########################################################\n\
    \          --                      LAPB    XID Table\n          -- ###########################################################\n\
    \          -- Support for the lapbXidTable is mandatory for all agents\n     \
    \     -- of systems that have a LAPB implementation using XID\n          -- negotiation.\
    \  Agents of systems without XID negotiation\n          -- support should not\
    \ implement this table.\n          lapbXidTable    OBJECT-TYPE\n             \
    \     SYNTAX  SEQUENCE OF LapbXidEntry\n                  ACCESS  not-accessible\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"This table defines values to use for XID\n              \
    \            negotiation that are not found in the\n                         \
    \ lapbAdmnTable.  This table is optional for\n                          implementations\
    \ that don't support XID and\n                          mandatory for implementations\
    \ that do\n                          initiate XID negotiation.\"\n           \
    \       ::= { lapb 4 }\n          lapbXidEntry    OBJECT-TYPE\n              \
    \    SYNTAX  LapbXidEntry\n             ACCESS       not-accessible\n        \
    \          STATUS  mandatory\n                  DESCRIPTION\n                \
    \          \"XId negotiation parameter values for a\n                        \
    \  specific LAPB.\"\n                  INDEX { lapbXidIndex }\n              \
    \    ::= { lapbXidTable 1 }\n          LapbXidEntry ::= SEQUENCE {\n         \
    \         lapbXidIndex\n                          IfIndexType,\n             \
    \     lapbXidAdRIdentifier\n                          OCTET STRING,\n        \
    \          lapbXidAdRAddress\n                          OCTET STRING,\n      \
    \            lapbXidParameterUniqueIdentifier\n                          OCTET\
    \ STRING,\n                  lapbXidGroupAddress\n                          OCTET\
    \ STRING,\n                  lapbXidPortNumber\n                          OCTET\
    \ STRING,\n                  lapbXidUserDataSubfield\n                       \
    \   OCTET STRING\n                  }\n          lapbXidIndex    OBJECT-TYPE\n\
    \                  SYNTAX  IfIndexType\n                  ACCESS  read-only\n\
    \                  STATUS  mandatory\n                  DESCRIPTION\n        \
    \                  \"The ifIndex value for the LAPB interface.\"\n           \
    \       ::= { lapbXidEntry 1 }\n          lapbXidAdRIdentifier OBJECT-TYPE\n \
    \                 SYNTAX  OCTET STRING (SIZE (0..255))\n                  ACCESS\
    \  read-write\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The value of the Address Resolution\n           \
    \               Identifier.  A zero length string indicates\n                \
    \          no Identifier value has been assigned.\"\n                  REFERENCE\
    \ \"ISO 8885 Table 2, Name: Identifier\"\n                  DEFVAL { ''h }\n \
    \                 ::= { lapbXidEntry 2 }\n          lapbXidAdRAddress OBJECT-TYPE\n\
    \                  SYNTAX  OCTET STRING (SIZE (0..255))\n                  ACCESS\
    \  read-write\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"The value of the Address Resolution\n           \
    \               Address.  A zero length string indicates no\n                \
    \          Address value has been assigned.\"\n                  REFERENCE \"\
    ISO 8885 Table 2, Name: Address\"\n                  DEFVAL { ''h }\n        \
    \          ::= { lapbXidEntry 3 }\n          lapbXidParameterUniqueIdentifier\
    \ OBJECT-TYPE\n                  SYNTAX  OCTET STRING (SIZE (0..255))\n      \
    \            ACCESS  read-write\n                  STATUS  mandatory\n       \
    \           DESCRIPTION\n                          \"The value of the parameter\
    \ unique\n                          Identifier.  A zero length string indicates\n\
    \                          no Unique identifier value has been\n             \
    \             assigned.\"\n                  REFERENCE \"ISO 8885 Table 3, Name:\
    \ Identifier\"\n                  DEFVAL { ''h }\n                  ::= { lapbXidEntry\
    \ 4 }\n          lapbXidGroupAddress OBJECT-TYPE\n                  SYNTAX  OCTET\
    \ STRING (SIZE (0..255))\n                  ACCESS  read-write\n             \
    \     STATUS  mandatory\n                  DESCRIPTION\n                     \
    \     \"The value of the parameter Group address.\n                          A\
    \ zero length string indicates no Group\n                          address value\
    \ has been assigned.\"\n                  REFERENCE \"ISO 8885 Table 3, Name:\
    \ Group address\"\n                  DEFVAL { ''h }\n                  ::= { lapbXidEntry\
    \ 5 }\n          lapbXidPortNumber OBJECT-TYPE\n                  SYNTAX  OCTET\
    \ STRING (SIZE (0..255))\n                  ACCESS  read-write\n             \
    \     STATUS  mandatory\n                  DESCRIPTION\n                     \
    \     \"The port number assigned for this link.  A\n                         \
    \ zero length string indicates no local port\n                          number\
    \ identifier has been assigned.\"\n                  REFERENCE \"ISO 8885 Table\
    \ 3, Name: Port number\"\n                  DEFVAL { ''h }\n                 \
    \ ::= { lapbXidEntry 6 }\n          lapbXidUserDataSubfield OBJECT-TYPE\n    \
    \              SYNTAX  OCTET STRING (SIZE (0..8206))\n                  ACCESS\
    \  read-write\n                  STATUS  mandatory\n                  DESCRIPTION\n\
    \                          \"A user data subfield, if any, to be\n           \
    \               transmitted in an XID frame.  A zero length\n                \
    \          frame indicates no user data subfield has\n                       \
    \   been assigned.  The octet string should\n                          include\
    \ both the User data identifier and\n                          User data field\
    \ as shown in Figures 1 and\n                          4.\"\n                \
    \  REFERENCE \"ISO 8885 section 4.3\"\n                  DEFVAL { ''h }\n    \
    \              ::= { lapbXidEntry 7 }\n          -- ###########################################################\n\
    \          --                      LAPB protocol versions\n          -- ###########################################################\n\
    \          lapbProtocolVersion OBJECT IDENTIFIER\n                  ::= { lapb\
    \ 5 }\n          lapbProtocolIso7776v1986 OBJECT IDENTIFIER\n                \
    \  ::= { lapbProtocolVersion 1 }\n          lapbProtocolCcittV1980 OBJECT IDENTIFIER\n\
    \                  ::= { lapbProtocolVersion 2 }\n          lapbProtocolCcittV1984\
    \ OBJECT IDENTIFIER\n                  ::= { lapbProtocolVersion 3 }\n       \
    \   -- The following describes some of the MIB-II interface\n          -- objects\
    \ and their relationship with the objects in this\n          -- MIB extension.\n\
    \          -- ifDescr:  describes the interface.   It should include\n       \
    \   -- identification information for the physical line and a\n          -- description\
    \ of the network.  For connections to PDNs,\n          -- it should name the PDN.\n\
    \          -- ifMtu: the maximum number of octets an upper layer can\n       \
    \   -- pass to this interface as a single frame.\n          -- ifSpeed:\n    \
    \      -- ifAdminStatus:\n          -- ifOperStatus:\n          -- ifLastChange:\
    \ the last time the state of the interface\n          -- changed.  A reset is\
    \ considered an instantaneous change to\n          -- the ndm state and back to\
    \ abm or abme.  This will be the\n          -- last time that lapbFlowChangeReason\
    \ and lapbFlowChanges\n          -- changed.\n          -- ifInOctets: contains\
    \ the number of octets\n          -- received from the peer LAPB including FCS.\n\
    \          -- ifInUcastPkts: contains the number of I-frames delivered\n     \
    \     -- by this interface to a higher layer interface.\n          -- ifInDiscards:\
    \ contains the number of received\n          -- frames discarded because of internal\
    \ conditions\n          -- (such as lack of buffering).\n          -- ifInErrors:\
    \ contains the number of Invalid frames received.\n          -- This does not\
    \ have any relationship with the number REJ,\n          -- or RNR frames sent\
    \ or received.\n          -- ifInUnknownProtos: contains the number of frames\n\
    \          -- that were correct but were dropped because they\n          -- were\
    \ inappropriate for the current state.  This\n          -- includes an invalid\
    \ Poll bit, an unknown address,\n          -- or other condition such as an RNR\
    \ when connection\n          -- not established.  This also includes the number\
    \ of\n          -- DISC or other frames that were ignored because the\n      \
    \    -- link was not established and this interface was not\n          -- configured\
    \ to perform link setup on that type frame.\n          -- ifOutOctets: number\
    \ of octets sent to peer including\n          -- FCS octets.\n          -- ifOutUcastPkts:\
    \ number of I-frames received from\n          -- a higher layer for transmission\
    \ to peer.\n          -- ifOutDiscards: number of frames to be sent that were\n\
    \          -- dropped due to internal conditions such as buffering etc.\n    \
    \      -- ifOutErrors: number of transmissions that failed\n          -- due to\
    \ errors or were considered invalid by the receiver.\n          -- This does not\
    \ have any relationship with the number REJ,\n          -- or RNR frames sent\
    \ or received.\n          -- ifOutQLen: number of frames waiting to be transmitted.\n\
    \          -- This MIB does not provide any support for:\n          --      Multilink\
    \ procedure (MLP) in ISO 7776 section 6\n          --      LLC Pbit timer\n  \
    \        --      LLC REJ timer\n          --      LLC Busy State Timer 7.8.1.4\n\
    \          -- ###########################################################\n  \
    \        END\n"
- title: '5.  Appendix: Revision History'
  contents:
  - '5.  Appendix: Revision History

    '
- title: July 30, 1992
  contents:
  - 'July 30, 1992

    '
- title: The July revision of this document (Editor's Internal Reference 2.10)
  contents:
  - 'The July revision of this document (Editor''s Internal Reference 2.10)

    '
- title: incorporated the comments of the SNMP directorate.
  contents:
  - "incorporated the comments of the SNMP directorate.\n      The ifIndexType textual\
    \ convention was added and used as the type\n      for all index objects.\n  \
    \    The enumeration xidDetection of the lapbAdmnStationType was\n      changed\
    \ to dxe to be consistent with other similar enumerations.\n      Conformance\
    \ statements were added at before every table as ASN.1\n      comments.\n"
- title: June 12, 1992
  contents:
  - "June 12, 1992\n   The June 12, 1992 revision of this document (Editor's Internal\n\
    \   Reference 2.9) incorporated some clarifications and updated the\n   status.\n\
    \      The range on PositiveInteger was changed to start at 0 rather than\n  \
    \    1.\n      The syntax of lapbXidIndex was changed to PositiveInteger.\n  \
    \    A value of dxe was added to lapbOperStationType.\n      The range of lapbAdmnN2RxmitCount\
    \ was change to (0..65535).\n      The definition of ifInOctets, ifInUcastPkts,\
    \ ifInErrors,\n      ifInUnknownProtos, ifOutOctets, and ifoutUcastPkts was clarified.\n"
- title: May 18, 1992
  contents:
  - "May 18, 1992\n   The May 18, 1992 revision of this document (Editor's Internal\n\
    \   Reference  2.8) incorporated the following changes:\n      The states of lapbFlowCurrentMode\
    \ were redefined.\n      The default value for lapbAdmnControlField was changed\
    \ from\n      module8 to modulo8.\n"
- title: April 8, 1992
  contents:
  - "April 8, 1992\n   The April 8, 1992 revision of this document (Editor's Internal\n\
    \   Reference 2.4) incorporated the following changes:\n      All reference comments\
    \ in the MIB were moved to the REFERENCE\n      field of the OBJECT-TYPE macro.\n\
    \      A type of PositiveInteger was introduced and used for common\n      integer\
    \ values including all timers.  This effectively made the\n      maximum value\
    \ for timers 2147483646 milliseconds.  The type of the\n      frame size was changed\
    \ to positiveInteger.\n      The reference to ISO 7776 has been broadened to say\
    \ the MIB\n      descriptions use the terminology of ISO 7776.\n      A comment\
    \ was added to the overview section discussing creation\n      and deletion of\
    \ tables.\n      The objects in the lapbParmTable and lapbDefTable were\n    \
    \  redistributed to create a lapbOperTable, a lapbAdmnTable, and a\n      lapbXidTable.\
    \  The lapbParmTable and lapbDefTable were deleted.\n      Objects were included\
    \ in the Admn table for t3 and t4.\n      An object identifier was added to identify\
    \ the protocol version.\n      A DEFVAL clause was added for all writable objects.\n\
    \      Some more overview text was included.\n"
- title: February 1992
  contents:
  - "February 1992\n   The February 1992 revision of this document (Editor's Internal\n\
    \   Reference 1.17) incorporated the following changes:\n      The name was changed\
    \ from HDLC to LAPB. This change was made\n      because other flavors of HDLC\
    \ such as LAPD, SDLC, and raw HDLC\n      framing, are different enough that this\
    \ MIB will not adequately\n      manage them.\n      The Historical Perspective\
    \ section at the beginning of the\n      document has been replaced with a more\
    \ concise Network Management\n      Framework section.\n      The name lapbParmKWindowSize\
    \ was changed to\n      lapbParmTransmitKWindowSize and the object\n      lapbParmReceiveKWindowSize\
    \ was added. This change was made because\n      section 5.7.4 of ISO 7776 and\
    \ Table 3 of ISO 8885 have provisions\n      for different values for the transmit\
    \ and receive window size.\n      The name lapbParmN1FrameSize was changed to\n\
    \      lapbParmTransmitN1FrameSize and the object\n      lapbParmReceiveN1FrameSize\
    \ was added. This change was made because\n      section 5.7.3 of ISO 7776 and\
    \ Table 3 of ISO 8886 have provisions\n      for different values for the transmit\
    \ and receive maximum frame\n      size.\n      The object lapbParmPortIndex was\
    \ deleted and the description of\n      lapbParmPortId was changed.  The object\
    \ lapbParmPortId now\n      identifies an instance of the index object for the\
    \ MIB of the\n      physical device or interface below LAPB.\n      The units\
    \ for the timers were changed to Milliseconds to be\n      consistent with ISO\
    \ 8885; see table 3.\n      The objects lapbParamT2AckDelayTimer and\n      lapbParamT3DisconnectTimer\
    \ both allow values of 0 to indicate the\n      timer is not being used.\n   \
    \   The object lapbParamT4IdleTimer has a value to indicate timer not\n      in\
    \ use.\n      The object lapbFlowXidReceived was added to the flow table.\n  \
    \    The lapbDefTable was added.\n      Ranges and sizes were added for all INTEGERs\
    \ and OCTET STRINGs\n      that didn't have them.\n"
- title: October 1991
  contents:
  - "October 1991\n   The October 1991 revision of this document basically changed\
    \ the name\n   from LAPB to HDLC to make the objects more appropriate for a broader\n\
    \   range of uses.  A number of minor changes were made to bring the\n   objects\
    \ in line with established conventions.  These changes are as\n   follows.\n \
    \     The enumerated values of hdlcParmStationType were renumbered from\n    \
    \  0 and 1 to 1 and 2.\n      The object hdlcFlowBusyDefer was renamed hdlcFlowBusyDefers.\n\
    \      The object hdlcFlowRejSent was rename hdlcFlowRejOutPkts.\n      The object\
    \ hdlcFlowRejReceived was renamed hdlcFlowRejInPkts.\n"
- title: June 1991
  contents:
  - "June 1991\n   The June revision of this document incorporated much of the E-mail\n\
    \   discussion of the first draft. In particular it replaced the\n   lapbStatTable\
    \ (and all contents) with the lapbFlowTable.\n"
- title: April 1991
  contents:
  - "April 1991\n   The April 24 version of this document was the first release. \
    \ At that\n   time this document was basically a bunch of objects synthesized\
    \ from\n   various vendor MIBs and a quick reading of ISO 7776 [10].  On first\n\
    \   reading it appeared to instrument too many LAPB normal functions and\n   too\
    \ few exceptional conditions.  The lapbStatTable was too long and\n   needed to\
    \ be redone.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was produced by the x25mib working group:\n\
    \                  Fred Baker, ACC\n                  Art Berggreen, ACC\n   \
    \               Frank Bieser\n                  Gary Bjerke, Tandem\n        \
    \          Bill Bowman, HP\n                  Christopher Bucci, Datability\n\
    \                  Charles Carvalho, ACC\n                  Jeff Case, Snmp Research\n\
    \                  Angela Chen, HP\n                  Carson Cheung, BNR\n   \
    \               Tom Daniel, Spider Systems\n                  Chuck Davin, MIT\n\
    \                  Billy Durham, Honeywell\n                  Richard Fox, Synoptics\n\
    \                  Doug Geller, Data General\n                  Herve Goguely,\
    \ LIR Corp\n                  Andy Goldthorpe, british-telecom\n             \
    \     Walter D. Guilarte\n                  David Gurevich\n                 \
    \ Steve Huston, Process Software Corporation\n                  Jon Infante, ICL\n\
    \                  Frank Kastenholz, Clearpoint\n                  Zbigniew Kielczewski,\
    \ Eicon\n                  Cheryl Krupezak, Georgia Tech\n                  Mats\
    \ Lindstrom, Diab Data AB\n                  Andrew Malis, BBN\n             \
    \     Evan McGinnis, 3Com\n                  Gary (G.P.)Mussar, BNR\n        \
    \          Chandy Nilakantan, 3Com\n                  Randy Pafford, Data General\n\
    \                  Ragnar Paulson, The Software Group Limited\n              \
    \    Dave Perkins, Synoptics\n                  Walter Pinkarschewsky, DEC\n \
    \                 Karen Quidley, Data General\n                  Chris Ranch,\
    \ Novell\n                  Paul S. Rarey, DHL Systems Inc.\n                \
    \  Jim Roche, Newbridge Research\n                  Philippe Roger, LIR Corp.\n\
    \                  Timon Sloane\n                  Mike Shand, DEC\n         \
    \         Brad Steina, Microcom\n                  Bob Stewart, Xyplex\n     \
    \             Tom Sullivan, Data General\n                  Rodney Thayer, Sable\
    \ Technology Corporation\n                  Mark Therieau, Microcom\n        \
    \          Jane Thorn, Data General\n                  Dean Throop, Data General\n\
    \                  Maurice Turcotte, Racal Datacom\n                  Mike Zendels,\
    \ Data General\n   In addition, the comments of the following individuals are\
    \ also\n   acknowledged:\n                  Keith McCloghrie\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Rose M., and K. McCloghrie, \"Structure and Identification\
    \ of\n       Management Information for TCP/IP-based internets\", STD 16, RFC\n\
    \       1155, Performance Systems International, Hughes LAN Systems, May\n   \
    \    1990.\n   [2] McCloghrie K., and M. Rose, \"Management Information Base for\n\
    \       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n   \
    \    LAN Systems, Performance Systems International, May 1990.\n   [3] Case, J.,\
    \ Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management\
    \ Protocol\", STD 15, RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [4] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\"\
    ,\n       STD 16, RFC 1212, Performance Systems International, Hughes LAN\n  \
    \     Systems, March 1991.\n   [5] Rose M., Editor, \"Management Information Base\
    \ for Network\n       Management of TCP/IP-based internets: MIB-II\", STD 17,\
    \ RFC 1213,\n       Performance Systems International, March 1991.\n   [6] Information\
    \ processing systems - Open Systems Interconnection -\n       Specification of\
    \ Abstract Syntax Notation One (ASN.1),\n       International Organization for\
    \ Standardization, International\n       Standard 8824, December 1987.\n   [7]\
    \ Information processing systems - Open Systems Interconnection -\n       Specification\
    \ of Basic Encoding Rules for Abstract Notation One\n       (ASN.1), International\
    \ Organization for Standardization,\n       International Standard 8825, December\
    \ 1987.\n   [8] Stewart, B., Editor, \"Definitions of Managed Objects for RS-232-\n\
    \       like Hardware Devices\", RFC 1317, Xyplex, Inc., April 1992.\n   [9] Throop,\
    \ D., Editor, \"SNMP MIB extension for the Packet Layer of\n       X.25\", RFC\
    \ 1382, Data General Corporation, November 1992.\n  [10] \"Information processing\
    \ systems - Data communication - High-level\n       data link control procedure\
    \ - Description of the X.25 LAPB-\n       compatible DTE data link procedures\"\
    , International Organization\n       for Standardization, International Standard\
    \ 7776, December 1986.\n  [11] \"Information technology - Telecommunications and\
    \ information\n       exchange between systems - High-level data link control\
    \ (HDLC)\n       procedures - General purpose XID frame information field contents\n\
    \       and format\", International Organization for Standardization,\n      \
    \ International Standard 8885.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Dean D. Throop\n   Data General Corporation\n   62\
    \ Alexander Dr.\n   Research Triangle Park, NC 27709\n   Phone: (919)248-8421\n\
    \   EMail: throop@dg-rtp.dg.com\n   Fred Baker\n   Advanced Computer Communications\n\
    \   315 Bollay Drive\n   Santa Barbara, CA 93101\n   Phone: (805) 685-4455\n \
    \  EMail: fbaker@acc.com\n   While the working group has completed discussion\
    \ of this document,\n   comments are still welcome.  Please send comments to the\
    \ x25mib\n   working group at: x25mib@dg-rtp.dg.com\n"
