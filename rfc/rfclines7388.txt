Abstract This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing IPv6 over Low Power Wireless Personal Area Networks (6LoWPANs).
This document defines a portion of the Management Information Base (MIB) for use with network management protocols.
In particular it defines objects for managing IPv6 over Low Power Wireless Personal Area Networks (6LoWPANs) [RFC4944].
While a MIB module provides a direct binding for accessing data via the Simple Network Management Protocol (SNMP) [RFC3410], supporting SNMP may not always be affordable on constrained devices.
Other protocols to access data modeled in MIB modules are possible and proposals have been made recently to provide bindings to the Constrained Application Protocol (CoAP)
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This document specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC2119].
The left part of Figure 1 provides an overview of the IETF protocols designed for constrained devices.
The right part lists the MIB modules providing monitoring and troubleshooting support ([RFC4113], [RFC4292], [RFC4293], and [RFC2863]).
The LOWPAN MIB defined in this document
fills a hole by providing monitoring and troubleshooting support for the 6LoWPAN layer.
The LOWPAN MIB module is primarily a collection of counters that reflect how 6LoWPAN datagrams are processed by the 6LoWPAN layer.
The objects are defined twice: once to report the global statistics as seen by the 6LoWPAN layer and once to report per interface 6LoWPAN layer statistics.
The per interface statistics are optional to implement.
The object identifier registration tree has the following structure:   lowpanMIB(1.3.6.1.2.1.226)   lowpanNotifications(0)
The counters defined in the LOWPAN MIB module provide information about the 6LoWPAN datagrams received and transmitted and how they are processed in the 6LoWPAN layer.
For link layers that use the 6LoWPAN dispatch byte as defined in [RFC4944]
(e.g., IEEE 802.15.4), a 6LoWPAN datagram is a datagram with a dispatch byte matching the bit patterns 01xxxxxx, 10xxxxxx, or 11xxxxxx.
Datagrams with a dispatch byte matching the bit pattern 00xxxxxx
(NALP not a LoWPAN frame) are not considered to be 6LoWPAN datagrams by this specification.
Other radio technologies may use different mechanisms to identify 6LoWPAN datagrams (e.g., the BLUETOOTH Low Energy Logical Link Control and Adaptation Protocol uses Channel Identifiers [IPV6 BTLE]).
The Case Diagram [CASE] in Figure 3 illustrates the conceptual relationships between the counters.
Implementations may choose to implement the processing of 6LoWPAN datagrams in a different order.
The generic InDiscards and OutDiscards counters can be incremented anytime 6LoWPAN datagrams are discarded due to reasons not covered by the other more specific counters.
For example, an implementation discarding 6LoWPAN datagrams while all buffers are used for ongoing packet reassemblies will increment the relevant InDiscards counters for each discarded 6LoWPAN datagram.
v interface layer Figure 3: Conceptual Relationship between LOWPAN MIB Counters
The fragmentation related counters have been modeled after the fragmentation related counters of the IP MIB [RFC4293].
The discard counters have been placed at the end of the input and output chains, but they can be bumped any time if a datagram is discarded for a reason not covered by the other counters.
The compression related counters provide insights into compression requests and, in particular, compression related failures.
Note that the diagram is conceptual in the sense that compression happens after reassembly for incoming 6LoWPAN datagrams, and compression happens before fragmentation for outgoing 6LoWPAN datagrams.
Implementations may choose to implement things slightly differently.
For example, implementations may decompress FRAG1 fragments as soon as they are received, not waiting for reassembly to complete.
The counters related to MESH header processing do not have an explicit discard counter.
Implementations that do not support mesh forwarding MUST count the number of received 6LoWPAN datagrams with a MESH header (lowpanInMeshReceives), but they MUST NOT increment the lowpanInMeshReceives and lowpanInMeshDelivers counters if these 6LoWPAN datagrams are dropped.
Relationship to Other MIB Modules
The MIB module imports definitions from SNMPv2
CONF [RFC2580], and IF MIB
IMPORTS MODULE IDENTITY, OBJECT TYPE, Unsigned32, Counter32, mib 2 FROM SNMPv2
IETF IPv6 over Networks of Resource constrained
Nodes Working Group" CONTACT INFO "
http://tools.ietf.org/wg/6lo/ Juergen Schoenwaelder Jacobs University Bremen Email:
j.schoenwaelder@jacobs university.de Anuj Sehgal Jacobs University Bremen Email: s.anuj@jacobs university.de Tina
Tsou Huawei Technologies Email: tina.tsou.zouting@huawei.com
Cathy Zhou Huawei Technologies Email: cathyzhou@huawei.com" DESCRIPTION "
The MIB module for monitoring nodes implementing the IPv6 over Low Power Wireless Personal Area Networks (6LoWPAN) protocol.
Copyright (c) 2014 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
" REVISION "201410100000Z"   October 10, 2014 DESCRIPTION "
"The maximum number of seconds that received fragments are held while they are awaiting reassembly at this entity."
"The total number of 6LoWPAN datagrams received, including those received in error."
"The number of received 6LoWPAN datagrams requiring mesh forwarding."
This includes both FRAG1 and FRAGN 6LoWPAN datagrams."
The number of failures detected by the re assembly algorithm (e.g., timeouts).  Note that this is not necessarily a count of discarded 6LoWPAN fragments since implementations can lose track of the number of fragments by combining them as received."
{ lowpanStats 8 } lowpanInReasmOKs OBJECT TYPE SYNTAX
"The number of IPv6 packets successfully reassembled."
{ lowpanStats 9 } lowpanInCompReqds OBJECT TYPE SYNTAX
"The number of 6LoWPAN datagrams requiring header decompression."
"The number of 6LoWPAN datagrams where header decompression failed (e.g., because the necessary context information was not available)."
"The number of 6LoWPAN datagrams where header decompression was successful."
"The number of received 6LoWPAN datagrams that were discarded (e.g., for lack of buffer space) even though no problems were encountered to prevent their continued processing.
Note that this counter does not include any datagrams discarded due to a reassembly failure or a compression failure."
"The total number of IPv6 packets successfully delivered to the IPv6 layer."
"The total number of IPv6 packets supplied by the IPv6 layer."
The total number of IPv6 packets for which header compression failed."
"The total number of IPv6 packets for which header compression was successful."
"The number of IPv6 packets that required fragmentation in order to be transmitted."
"The number of IPv6 packets that have been discarded because fragmentation failed."
"The number of IPv6 packets that have been successfully fragmented."
"The number of 6LoWPAN fragments that have been generated as a result of fragmentation.
This includes both FRAG1 and FRAGN 6LoWPAN datagrams."
"The number of 6LoWPAN datagrams with a MESH header that were dropped because there was no forwarding information available."
"The number of 6LoWPAN datagrams with a MESH header for which suitable forwarding information was available."
"The number of 6LoWPAN datagrams with a MESH header created."
"The total number of 6LoWPAN datagram that this entity supplied to the lower layers for transmission."
A table providing per interface statistics."
{ lowpanObjects 2 } lowpanIfStatsEntry OBJECT TYPE SYNTAX
An entry providing statistics for a specific interface."
"The maximum number of seconds that received fragments are held while they are awaiting reassembly at this interface."
{ lowpanIfStatsEntry 1 } lowpanIfInReceives OBJECT
"The total number of 6LoWPAN datagrams received on this interface, including those received in error."
"The number of 6LoWPAN datagrams received on this interface requiring mesh forwarding."
"The number of 6LoWPAN datagrams received on this interface with a MESH header delivered to the local system."
"The number of 6LoWPAN fragments received on this interface that needed to be reassembled.
This includes both FRAG1 and FRAGN 6LoWPAN datagrams."
"The number of failures detected by the reassembly algorithm (e.g., timeouts) for datagrams received on this interface.
Note that this is not necessarily a count of discarded 6LoWPAN fragments since implementations can lose track of the number of fragments by combining them as received."
"The number of IPv6 packets successfully reassembled from fragments received on this interface."
"The number of 6LoWPAN datagrams received on this interface where header decompression failed (e.g., because the necessary context information was not available).
"The number of 6LoWPAN datagrams received on this interface where header decompression was successful."
"The number of 6LoWPAN datagrams received on this interface that were discarded (e.g., for lack of buffer space) even though no problems were encountered to prevent their continued processing.
Note that this counter does not include any datagrams discarded due to a reassembly failure or a compression failure."
"The total number of IPv6 packets received on this interface that were successfully delivered to the IPv6 layer."
"The total number of IPv6 packets supplied by the IPv6 layer to be sent over this interface."
"The total number of IPv6 packets to be sent over this interface for which header compression was attempted."
"The total number of IPv6 packets to be sent over this interface for which header compression failed."
{ lowpanIfStatsEntry 17 } lowpanIfOutCompOKs OBJECT TYPE SYNTAX
"The total number of IPv6 packets to be sent over this interface for which header compression was successful."
"The number of IPv6 packets to be sent over this interface that have been discarded because fragmentation failed.
"The number of 6LoWPAN fragments that have been generated on this interface as a result of fragmentation.
This includes both FRAG1 and FRAGN 6LoWPAN datagrams."
"The number of 6LoWPAN datagrams to be sent on this interface with a MESH header created."
"The number of IPv6 packets to be sent over this interface that were discarded (e.g., for lack of buffer space) even though no problem was encountered to prevent their transmission to their destination."
6LoWPAN datagrams with a MESH header."
This group is mandatory for implementations that expose per interface statistics."
This group is mandatory for implementations that expose per interface statistics and that process or forward 6LoWPAN datagrams with a MESH header."
{ lowpanCompliances 1 } lowpanStatsGroup OBJECT GROUP OBJECTS { lowpanReasmTimeout, lowpanInReceives, lowpanInHdrErrors, lowpanInMeshReceives, lowpanInReasmReqds, lowpanInReasmFails, lowpanInReasmOKs, lowpanInCompReqds, lowpanInCompFails, lowpanInCompOKs, lowpanInDiscards, lowpanInDelivers, lowpanOutRequests, lowpanOutCompReqds, lowpanOutCompFails, lowpanOutCompOKs, lowpanOutFragReqds, lowpanOutFragFails, lowpanOutFragOKs, lowpanOutFragCreates,
A collection of objects providing information and statistics about the processing of 6LoWPAN datagrams with a MESH header."
A collection of objects providing per interface information and statistics about the processing of 6LoWPAN datagrams with a MESH header."
There are no management objects defined in this MIB module that have a MAX ACCESS clause of read write and/or read create.
So, if this MIB module is implemented correctly, then there is no risk that an intruder can alter or create any management objects of this MIB module via direct SNMP SET operations.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
The read only counters provide insights into the amount of 6LoWPAN traffic
a node is receiving or transmitting.
This might provide information regarding whether a device is regularly exchanging information with other devices or whether a device is mostly not participating in any communication (e.g., the device might be "easier" to take away unnoticed).
The reassembly counters could be used to direct denial of service attacks on the reassembly mechanism.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], Section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER value recorded in the SMI Numbers registry:
{ mib 2 226 }
