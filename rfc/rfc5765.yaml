- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                       H. Schulzrinne
  contents:
  - "Internet Research Task Force (IRTF)                       H. Schulzrinne\n  \
    \       Security Issues and Solutions in Peer-to-Peer Systems\n              \
    \        for Realtime Communications\n"
- title: Abstract
  contents:
  - "Abstract\n   Peer-to-peer (P2P) networks have become popular for certain\n  \
    \ applications and deployments for a variety of reasons, including\n   fault tolerance,\
    \ economics, and legal issues.  It has therefore\n   become reasonable for resource\
    \ consuming and typically centralized\n   applications like Voice over IP (VoIP)\
    \ and, in general, realtime\n   communication to adapt and exploit the benefits\
    \ of P2P.  Such a\n   migration needs to address a new set of P2P-specific security\n\
    \   problems.  This document describes some of the known issues found in\n   common\
    \ P2P networks, analyzing the relevance of such issues and the\n   applicability\
    \ of existing solutions when using P2P architectures for\n   realtime communication.\
    \  This document is a product of the P2P\n   Research Group.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Peer-to-Peer\n   Research Group of the Internet Research Task Force (IRTF).\
    \  Documents\n   approved for publication by the IRSG are not a candidate for\
    \ any\n   level of Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5765.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Purpose of This Document ...................................6\n  \
    \    1.2. Structure of This Document .................................7\n   2.\
    \ The Attackers ...................................................8\n      2.1.\
    \ Incentive of the Attacker ..................................8\n      2.2. Resources\
    \ Available to the Attacker ........................9\n      2.3. Victim of the\
    \ Attack ......................................10\n      2.4. Time of Attack ............................................10\n\
    \   3. Admission Control ..............................................10\n  \
    \ 4. Determining the Position in the Overlay ........................11\n   5.\
    \ Resilience against Malicious Peers .............................12\n      5.1.\
    \ Identification of Malicious Peers .........................13\n           5.1.1.\
    \ Proactive Identification ...........................13\n           5.1.2. Reactive\
    \ Identification ............................13\n      5.2. Reputation Management\
    \ Systems .............................14\n           5.2.1. Unstructured Reputation\
    \ Management .................14\n           5.2.2. Structured Reputation Management\
    \ ...................14\n   6. Routing and Data Integrity .....................................15\n\
    \      6.1. Data Integrity ............................................15\n  \
    \    6.2. Routing Integrity .........................................15\n   7.\
    \ Peer-to-Peer in Realtime Communication .........................16\n      7.1.\
    \ Peer Promotion ............................................17\n           7.1.1.\
    \ Active vs. Passive Upgrades ........................17\n           7.1.2. When\
    \ to Upgrade ....................................18\n           7.1.3. Which Clients\
    \ to Upgrade ...........................18\n           7.1.4. Incentives for Clients\
    \ .............................19\n      7.2. Security ..................................................19\n\
    \           7.2.1. Targeted Denial of Service .........................19\n  \
    \         7.2.2. Man-in-the-Middle Attack ...........................20\n    \
    \       7.2.3. Trust between Peers ................................20\n      \
    \     7.2.4. Routing Call Signaling .............................20\n        \
    \   7.2.5. Integrity of Location Bindings .....................21\n          \
    \ 7.2.6. Encrypting Content .................................21\n           7.2.7.\
    \ Other Issues .......................................22\n   8. Open Issues ....................................................22\n\
    \   9. Security Considerations ........................................23\n  \
    \ 10. Acknowledgments ...............................................23\n   11.\
    \ Informative References ........................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Peer-to-peer (P2P) overlays have become quite popular with\
    \ the advent\n   of file-sharing applications such as Napster [NAPSTER], KaZaa\n\
    \   [KAZAA], and BitTorrent [BITTORRENT].  After their success in file-\n   sharing\
    \ and content distribution [Androutsellis-Theotokis], P2P\n   networks are now\
    \ also being used for applications such as Voice over\n   IP (VoIP) [SKYPE] [Singh]\
    \ and television [PPLIVE] [COOLSTREAM].\n   However, most of these systems are\
    \ not purely P2P and have\n   centralized components like the login server in\
    \ Skype [Baset] or\n   moderators and trackers in BitTorrent [Pouwelse].  Securing\
    \ pure P2P\n   networks is therefore still a field of very active research\n \
    \  [Wallach].\n   P2P overlays can be broadly classified as structured and unstructured\n\
    \   [RFC4981], depending on their routing model.  Unstructured overlays\n   are\
    \ often relatively simple, but search operations in them, usually\n   based on\
    \ flooding, tend to be inefficient.  Structured P2P overlays\n   use distributed\
    \ hash tables (DHTs) [Stoica] [Maymounkov] [Rowstron]\n   to perform directed\
    \ searches, which make lookups more efficient in\n   locating data.  This document\
    \ will mostly focus on DHT-based P2P\n   overlays.\n   When analyzing the various\
    \ attacks that are possible on P2P systems,\n   it is important to first understand\
    \ the motivation of the attackers\n   as well as the resources (e.g., computation\
    \ power, access to\n   different IP subnets) that they would have at their disposal.\n\
    \   Once the threat has been identified, admission control is a first\n   step\
    \ towards security that can help avoid a substantial number of\n   attacks [Kim].\
    \  Most solutions rely on the assumption that malicious\n   nodes represent a\
    \ small fraction of all peers.  It is therefore\n   important to restrict their\
    \ number in the overlay.\n   Other P2P-specific security problems discussed here\
    \ include attacks\n   on the routing of queries, targeted denial-of-service attacks,\
    \ and\n   attacks on data integrity.\n   In the remainder of this document, we\
    \ outline the main security\n   issues and proposed solutions for P2P systems.\
    \  Following this, we\n   focus on a particular class of P2P applications that\
    \ provide realtime\n   communications.  Realtime communications use the same DHTs\
    \ used by\n   file-sharing applications; however, the data that is saved in these\n\
    \   DHTs is different.  In realtime communications, the contents stored\n   in\
    \ the DHTs comprises user location, the DHT being the substitute for\n   a centralized\
    \ registration server.\n   At first glance, it may appear that requirements on\
    \ peer-to-peer\n   systems for realtime communication services are no different\
    \ than\n   those for file-sharing services.  Table 1 demonstrates that there are\n\
    \   sizeable differences related to privacy, availability, and a marked\n   increase\
    \ in the general security requirements.\n   +-----------------+-----------------------+-------------------------+\n\
    \   |                 | File-sharing          | Realtime communication  |\n  \
    \ +-----------------+-----------------------+-------------------------+\n   |\
    \ Distributed     | Shared file locations | User locations are      |\n   | database\
    \        | are indexed in a      | indexed in a table      |\n   |           \
    \      | table distributed     | distributed among       |\n   |             \
    \    | among peers; often    | peers; rarely more than |\n   |               \
    \  | hundreds or thousands | one per peer.           |\n   |                 |\
    \ per peer.             |                         |\n   | Availability    | Same\
    \ files are        | Users are unique;       |\n   |                 | usually\
    \ available at  | attacks targeting       |\n   |                 | multiple locations\
    \    | single users may be     |\n   |                 | and failures        \
    \  | addressed both to the   |\n   |                 | involving single      |\
    \ distributed index and   |\n   |                 | instances are         | to\
    \ the user's device    |\n   |                 | overcome by abundancy | directly.\
    \               |\n   |                 | of resources; attacks |            \
    \             |\n   |                 | targeting single      |              \
    \           |\n   |                 | files need to be      |                \
    \         |\n   |                 | addressed to the      |                  \
    \       |\n   |                 | distributed index.    |                    \
    \     |\n   | Integrity       | Attackers may want to | Attackers may want to\
    \   |\n   |                 | share corrupted files | impersonate different  \
    \ |\n   |                 | in place of popular   | users in order to       |\n\
    \   |                 | content, e.g., to     | handle calls directed   |\n  \
    \ |                 | discourage users from | to them; constitute a   |\n   |\
    \                 | acquiring copyrighted | particular threat for   |\n   |  \
    \               | material; constitute  | the user as, in case of |\n   |    \
    \             | a threat for the      | success, the attacker   |\n   |      \
    \           | service, but not for  | acquires full control   |\n   |        \
    \         | the users.            | on the victim's         |\n   |          \
    \       |                       | personal                |\n   |            \
    \     |                       | communications.         |\n   | Confidentiality\
    \ | Shared files are, by  | Communications are      |\n   |                 |\
    \ definition, readable  | usually meant to be     |\n   |                 | by\
    \ all users; in some | private and need to be  |\n   |                 | cases,\
    \ encryption is  | encrypted;              |\n   |                 | used to avoid\
    \         | eavesdropping may       |\n   |                 | elements not involved\
    \ | reveal sensitive data   |\n   |                 | in the service to     |\
    \ and is a serious threat |\n   |                 | detect traffic.       | for\
    \ users.              |\n   | Bitrate and     | The file-transfer use | Realtime\
    \ traffic almost |\n   | latency         | case is particularly  | always requires\
    \ a       |\n   |                 | tolerant to unstable  | constant minimum \
    \       |\n   |                 | bitrates and ability  | bitrate and low latency\
    \ |\n   |                 | to burst on and off   | in order to avoid       |\n\
    \   |                 | as peers disappear or | problems like jitter.   |\n  \
    \ |                 | new ones become       | While this is not       |\n   |\
    \                 | available.            | directly related to a   |\n   |  \
    \               |                       | specific sort of        |\n   |    \
    \             |                       | attacks, it is a        |\n   |      \
    \           |                       | significant constraint  |\n   |        \
    \         |                       | to the design of        |\n   |          \
    \       |                       | certain design          |\n   |            \
    \     |                       | solutions, and in       |\n   |              \
    \   |                       | particular those that   |\n   |                \
    \ |                       | somehow affect routing. |\n   | Peer lifetime   |\
    \ File-sharing users do | Realtime communication  |\n   |                 | not\
    \ need to stay in   | applications need not   |\n   |                 | the overlay\
    \ more than | leave the overlay for   |\n   |                 | the time required\
    \ for | as long as the user     |\n   |                 | downloading the    \
    \   | wants to stay connected |\n   |                 | content they are     \
    \ | and be reachable.  This |\n   |                 | looking for.          |\
    \ gives the attackers     |\n   |                 |                       | longer\
    \ time for         |\n   |                 |                       | conducting\
    \ successful   |\n   |                 |                       | targeted attacks.\
    \       |\n   +-----------------+-----------------------+-------------------------+\n\
    \   Table 1: Main differences between P2P applications used for\n            \
    \   file-sharing and for realtime communication.\n"
- title: 1.1.  Purpose of This Document
  contents:
  - "1.1.  Purpose of This Document\n   The goal of this document is to provide authors\
    \ of P2P protocols for\n   realtime communications with background that they may\
    \ find useful\n   while designing security mechanisms for specific cases.  The\
    \ document\n   has been extensively discussed during face-to-face meetings and\
    \ on\n   the P2PRG mailing list; it has been reviewed both substantially and\n\
    \   editorially by two members of the research group and reflects the\n   consensus\
    \ of the group.\n   The content of this document was partially derived from the\
    \ article\n   \"Peer-to-peer Overlays for Real-Time Communication: Security Issues\n\
    \   and Solutions,\" published in IEEE Surveys & Tutorials, Vol. 11, No.\n   1,\
    \ and originally authored by Dhruv Chopra, Henning Schulzrinne,\n   Enrico Marocco,\
    \ and Emil Ivov.\n   It is important to note that this document considers \"security\"\
    \ from\n   the perspective of application developers and protocol architects.\n\
    \   It is hence entirely agnostic to potential legislation issues that\n   may\
    \ apply when protecting applications against a specific attack, as,\n   for example,\
    \ in the case of lawful interception.\n"
- title: 1.2.  Structure of This Document
  contents:
  - "1.2.  Structure of This Document\n   The document is organized as follows.  In\
    \ Section 2, we discuss P2P\n   security attackers.  We try to elaborate on their\
    \ motivation, the\n   resources that would generally be available to them, their\
    \ victims,\n   and the timing of their attacks.  In Section 3, we discuss admission\n\
    \   control problems.  In Section 4, we identify the problem of where a\n   node\
    \ joins in the overlay.  In Section 5, we describe problems\n   related to identification\
    \ of malicious nodes and the dissemination of\n   this information.  In Section\
    \ 6, we describe the issues of routing\n   and data integrity in P2P networks.\
    \  Finally, in Section 7 we discuss\n   how issues and solutions previously presented\
    \ apply in P2P overlays\n   for realtime communication.\n   Table 2 and Table\
    \ 3 provide an index of the attacks and the solutions\n   discussed in the rest\
    \ of this document.\n   +---------------------------------------+---------------------------+\n\
    \   | Attack name                           | Referring sections        |\n  \
    \ +---------------------------------------+---------------------------+\n   |\
    \ botnets (use of)                      | Section 2.1, Section 2.2  |\n   | denial\
    \ of service (DoS)               | Section 2.1,              |\n   |         \
    \                              | Section 7.2.1             |\n   | man in the\
    \ middle (MITM)              | Section 7.2.2             |\n   | poisoning   \
    \                          | Section 6.1,              |\n   |               \
    \                        | Section 7.2.2             |\n   | pollution       \
    \                      | Section 2.1, Section 6.1  |\n   | sybil             \
    \                    | Section 2.2, Section 4    |\n   | targeted denial of service\
    \            | Section 7.2.1             |\n   +---------------------------------------+---------------------------+\n\
    \   Table 2: Index of some of the more popular attacks and problems\n        \
    \                discussed in this document.\n   +---------------------------------------+---------------------------+\n\
    \   | Solution name                         | Referring sections        |\n  \
    \ +---------------------------------------+---------------------------+\n   |\
    \ admission control                     | Section 3                 |\n   | anonymity\
    \                             | Section 5.2               |\n   | asymmetric key\
    \ pair                   | Section 7.2.5             |\n   | CAPTCHA         \
    \                      | Section 3                 |\n   | certificates      \
    \                    | Section 7.2.3             |\n   | CONNECT (SIP method)\
    \                  | Section 7.2.4             |\n   | cryptographic puzzles \
    \                | Section 4                 |\n   | diametrically opposite IDs\
    \            | Section 4                 |\n   | end-to-end encryption       \
    \          | Section 7.2.4             |\n   | group authority               \
    \        | Section 3                 |\n   | group charter                   \
    \      | Section 3                 |\n   | iterative routing                 \
    \    | Section 7.2.2             |\n   | no profit for newcomers             \
    \  | Section 5.2               |\n   | online phone book                     |\
    \ Section 7.2.5             |\n   | passive upgrades                      | Section\
    \ 7.1.1             |\n   | peer promotion                        | Section 7.1\
    \               |\n   | proactive identification              | Section 5.1.1\
    \             |\n   | reactive identification               | Section 5.1.2  \
    \           |\n   | recommendation                        | Section 3        \
    \         |\n   | reputation management systems         | Section 5.2        \
    \       |\n   | self-policing                         | Section 5.2          \
    \     |\n   | signatures                            | Section 3              \
    \   |\n   | social networks (using)               | Section 4, Section 6.2,  \
    \ |\n   | SRTP                                  | Section 7.2.6             |\n\
    \   | structured reputation management      | Section 5.2.2             |\n  \
    \ | SybilGuard (protocol)                 | Section 4                 |\n   |\
    \ transitivity of trust                 | Section 5.2.2             |\n   | trust\
    \ and distrust vectors            | Section 5.2.1             |\n   | trust and\
    \ trusted nodes               | Section 3, Section 6.2,   |\n   |            \
    \                           | Section 7.2.3             |\n   | unstructured reputation\
    \ management    | Section 5.2.1             |\n   | voluntary moderators     \
    \             | Section 6.1               |\n   +---------------------------------------+---------------------------+\n\
    \   Table 3: Index of some of the more popular solutions discussed in\n      \
    \                        this document.\n"
- title: 2.  The Attackers
  contents:
  - '2.  The Attackers

    '
- title: 2.1.  Incentive of the Attacker
  contents:
  - "2.1.  Incentive of the Attacker\n   Attacks on networks happen for a variety\
    \ of reasons such as monetary\n   gain, personal enmity, or even for fame in the\
    \ hacker community.\n   There are quite a few well-known cases of denial-of-service\
    \ attacks\n   for extortion in the client-server model [McCue].  One of the salient\n\
    \   points of the P2P model is that the services it provides have higher\n   robustness\
    \ against failure.  However, denial-of-service attacks are\n   still possible\
    \ against individuals within the overlay if the\n   attackers possess sufficient\
    \ resources.  For instance, a network of\n   worm-infected malicious nodes spread\
    \ across the Internet and\n   controlled by an attacker (often referred to as\
    \ botnet) could\n   simultaneously bombard lookup queries for a particular key\
    \ in the\n   DHT.  The peer responsible for this key would then come under a lot\n\
    \   of load and could crash [Sit].  However, with replication of key-\n   value\
    \ pairs at multiple locations, such threats can be mitigated.\n   Attackers may\
    \ also have other incentives indirectly related to money.\n   With the growth\
    \ of illegal usage of sharing files with copyrights,\n   record companies have\
    \ been known to pollute content in the overlays\n   by putting up nodes with corrupt\
    \ chunks of data but with correct file\n   names to degrade the service [Liang]\
    \ and in hope that users would get\n   frustrated and stop using it.  Similarly,\
    \ competition between\n   different communication service providers, either or\
    \ both based on\n   P2P technologies, and the low level of traceability of attacks\n\
    \   targeted to single users could be considered as motivation for\n   attempting\
    \ service disruption.\n   Attacks can also be launched by novice attackers who\
    \ are attacking\n   the overlay for fun or fame in a community.  These are perhaps\
    \ less\n   likely to be successful or cause damage, since their resources tend\n\
    \   to be relatively limited.\n"
- title: 2.2.  Resources Available to the Attacker
  contents:
  - "2.2.  Resources Available to the Attacker\n   Resource constraints play an important\
    \ role in determining the nature\n   of the attack.  An attacker who controls\
    \ a botnet can use an Internet\n   relay channel and launch distributed denial-of-service\
    \ attacks\n   against another node.  With respect to attacks where a single node\n\
    \   impersonates multiple identities, as in the case of the Sybil attack\n   [Douceur]\
    \ described in Section 4, IP addresses are also an important\n   resource for\
    \ the attacker since in DHTs such as Chord [Stoica], the\n   position in the overlay\
    \ is determined by using a base hash function\n   such as SHA-1 [SHA1] on the\
    \ node's IP address.  The cryptographic\n   puzzles [Rowaihy] that are sometimes\
    \ suggested as a way to deter\n   Sybil attacks by making the join process harder\
    \ are futile against an\n   attacker with a botnet and virtually unlimited computation\
    \ power.\n   Douceur [Douceur] proves that even with the assumption that attackers\n\
    \   only have minimum resources at their disposal, it is not possible to\n   defend\
    \ against them in a pure P2P system.\n"
- title: 2.3.  Victim of the Attack
  contents:
  - "2.3.  Victim of the Attack\n   The victim of an attack could be an individual\
    \ node, a particular\n   content entry, or the entire overlay service.  If malicious\
    \ nodes are\n   strategically placed in the overlay, they can block a node from\
    \ using\n   its services.  Attacks could also be launched against specific\n \
    \  content [Sit] or even the entire overlay service.  For example, if\n   the\
    \ malicious nodes are randomly placed in the overlay and drop\n   packets or upload\
    \ malicious content, then the quality of the overlay\n   would deteriorate.\n"
- title: 2.4.  Time of Attack
  contents:
  - "2.4.  Time of Attack\n   A malicious node could start misbehaving as soon as\
    \ it enters the\n   overlay or it could follow the rules of the overlay for a\
    \ finite\n   amount of time and then attack.  The latter could prove to be more\n\
    \   harmful if the overlay design suggests accumulating trust in peers\n   based\
    \ on the amount of time they have been present and/or not\n   misbehaving.  In\
    \ Kademlia [Maymounkov], for instance, the routing\n   tables are populated with\
    \ nodes that have been up for a certain\n   amount of time.  While this provides\
    \ some robustness from attacks in\n   which the malicious nodes start dropping\
    \ routing requests from the\n   moment they enter, it would take time for the\
    \ algorithm to adapt to\n   nodes that start misbehaving in a later stage (i.e.,\
    \ after they have\n   been recorded in routing tables).  Similarly for reputation\n\
    \   management systems, it is important that they adapt to the current\n   behavior\
    \ of a peer.\n"
- title: 3.  Admission Control
  contents:
  - "3.  Admission Control\n   Admission control depends on who decides whether or\
    \ not to admit a\n   node and how this permission is granted.  Kim et al.  [Kim]\
    \ answer\n   these questions independently of any particular environment or\n\
    \   application.  They define two basic elements for admission in a peer\n   group,\
    \ a group charter, which is an electronic document that\n   specifies the procedure\
    \ of admission into the overlay, and a group\n   authority, which is an entity\
    \ that can certify group admission.  A\n   prospective member first gets a copy\
    \ of the group charter, satisfies\n   the requirements, and approaches the group\
    \ authority.  The group\n   authority then verifies the admission request and\
    \ grants a group\n   membership certificate.\n   The group charter and authority\
    \ verification can be provided by a\n   centralized certificate authority or a\
    \ trusted third party, or it\n   could be provided by the peers themselves (by\
    \ voting).  The former is\n   more practical and tends to make the certification\
    \ process simpler\n   although it is in violation of the pure P2P model and exposes\
    \ the\n   system to attacks typical for server-based solutions (e.g., denial-\n\
    \   of-service attacks targeted to the central authority).  In the latter\n  \
    \ case, the group authority could either be a fixed number of peers or\n   it\
    \ could be a dynamic number based on the total membership of the\n   group.  The\
    \ authors argue that even if the group charter requires a\n   prospective member\
    \ to get votes from peers, the group membership\n   certificate must be issued\
    \ by a distinct entity.  The reason for this\n   is that voters need to accompany\
    \ their votes with a certificate that\n   proves their own membership.  Possible\
    \ signature schemes that could\n   be used in voting such as plain digital signature,\
    \ threshold\n   signature, and accountable subgroup multisignature are also\n\
    \   described.  Saxena et al.  [Saxena] performed experiments with the\n   different\
    \ signature schemes and suggest the use of plain signatures\n   for groups of\
    \ moderate size and where bandwidth is not a concern.\n   For larger groups and\
    \ where bandwidth is a concern, they suggest\n   threshold signature [Kong] and\
    \ multisignature schemes [Ohta].\n   Another way of handling admission would be\
    \ to use mechanisms based on\n   trust and recommendation where each new applicant\
    \ has to be known and\n   vouched for by at least N existing members.  The difficulties\
    \ that\n   such models represent include identity assertion and preventing bot/\n\
    \   worm attacks.  A compromised node could have a valid certificate\n   identifying\
    \ a trustworthy peer, and it would be difficult to detect\n   this.  Possible\
    \ solutions include sending graphic or logic puzzles\n   easily addressed by humans\
    \ but hard to solve by computers, also known\n   as CAPTCHA [Ahn]; however, reliability\
    \ of such mechanisms is at the\n   time of writing a topic of lively debate [Tam]\
    \ [Chellapilla].\n"
- title: 4.  Determining the Position in the Overlay
  contents:
  - "4.  Determining the Position in the Overlay\n   For ring-based DHT overlays such\
    \ as Chord [Stoica], Kademlia\n   [Maymounkov], and Pastry [Rowstron], when a\
    \ node joins the overlay,\n   it uses a numeric identifier (ID) to determine its\
    \ position in the\n   ring.  The positioning of a node determines what information\
    \ it\n   stores and which nodes it serves.  To provide a degree of robustness,\n\
    \   content and services are often replicated across multiple nodes.\n   However,\
    \ it is possible for an adversary with sufficient resources to\n   undermine the\
    \ redundancy deployed in the overlay by representing\n   multiple identities.\
    \  Such an attack is called a Sybil attack\n   [Douceur].  This makes the assignment\
    \ of IDs very important.  One\n   possible scheme to tackle such attacks on the\
    \ ID mapping is to have a\n   temporal mechanism in which nodes need to re-join\
    \ the network after\n   some time [Condie] [Scheideler].  Such temporal solutions,\
    \ however,\n   have the drawback that they increase the maintenance traffic and\n\
    \   possibly deteriorate the efficiency of caching.  Danezis et al.\n   [Danezis]\
    \ suggest mechanisms to mitigate the effect of Sybil attacks\n   by reducing the\
    \ amount of information received from malicious nodes.\n   Their idea is to vary\
    \ the nodes used for routing with time.  This\n   helps avoiding trust bottlenecks\
    \ that may occur when applications\n   only route traffic through a limited set\
    \ of highly trusted nodes.\n   Other solutions suggest making the joining process\
    \ harder by\n   introducing cryptographic puzzles as suggested by Rowaihy et al.\n\
    \   [Rowaihy].  The assumption is that the adversary has limited\n   computational\
    \ resources, which may not be true if the adversary has\n   control over a botnet.\
    \  Another drawback of such methods is that non-\n   malicious nodes would also\
    \ have to perform the extra computations\n   before they can join the overlay.\n\
    \   A possible heuristic to hamper Sybil attacks is to employ redundancy\n   at\
    \ nodes with diametrically opposite IDs (in the DHT ID space)\n   instead of successive\
    \ IDs as in Chord.  The idea behind choosing\n   diametrically opposite nodes\
    \ is based on the fact that a malicious\n   peer can grant admission to others\
    \ as its successor without them\n   actually possessing the required IP address\
    \ (whose hash is adjacent\n   to the former's), and then they can cooperate to\
    \ control access to\n   that part of the ring.  If, however, admission decisions\
    \ and\n   redundant content (for robustness) also involve nodes that are the\n\
    \   farthest away (diametrically opposite) from a given position, then\n   the\
    \ adversary would require double resources (IP addresses) to\n   attack.  This\
    \ happens because the adversary would need presence in\n   the overlay at two\
    \ independent positions in the ring.\n   Another approach proposed by Yu et al.\
    \  [Yu] to limit Sybil attacks\n   is based on the usage of the social relations\
    \ between users.  The\n   solution exploits the fact that as a result of Sybil\
    \ attacks,\n   affected P2P overlays end up containing a large set of Sybil nodes\n\
    \   connected to the rest of the peers through an irregularly small\n   number\
    \ of edges.  The SybilGuard protocol [Yu] defines a method that\n   allows to\
    \ discover such kinds of discontinuities in the topology by\n   using a special\
    \ kind of a verifiable random walk and hence without\n   the need of one node\
    \ having a global vision of the graph.\n   It is also worth mentioning that in\
    \ DHT overlays using different\n   geometric concepts (e.g., hypercubes instead\
    \ of rings), peer\n   positions are usually not related to identifiers.  In the\
    \ content\n   addressable network (CAN) [Ratnasamy], for example, the position\
    \ of\n   an entering node may be either selected by the node itself or, with\n\
    \   little modification to the original algorithm, assigned by peers\n   already\
    \ in the overlay.  However, even when malicious nodes do not\n   know their position\
    \ before joining, the overlay is still vulnerable\n   to Sybil attacks.\n"
- title: 5.  Resilience against Malicious Peers
  contents:
  - "5.  Resilience against Malicious Peers\n   Making overlays robust against even\
    \ a small percentage of malicious\n   nodes is difficult [Castro].  It is therefore\
    \ important for other\n   peers to identify such nodes and keep track of their\
    \ number.  There\n   are two aspects to this problem.  One is the identification\
    \ itself,\n   and the second is the dissemination of this information amongst\
    \ the\n   peers.  Different metrics need to be defined depending on the peer\n\
    \   group for the former, and reputation management systems are needed\n   for\
    \ the latter.\n"
- title: 5.1.  Identification of Malicious Peers
  contents:
  - "5.1.  Identification of Malicious Peers\n   For identifying a node as malicious,\
    \ malicious activity has to be\n   observed first.  This could be done in either\
    \ a proactive way or a\n   reactive way.\n"
- title: 5.1.1.  Proactive Identification
  contents:
  - "5.1.1.  Proactive Identification\n   When acting proactively, peers perform periodic\
    \ operations with the\n   purpose of detecting malicious activity.  A malicious\
    \ node could\n   prevent access to content for which it is responsible (e.g.,\
    \ by\n   claiming the object doesn't exist), or return references to content\n\
    \   that does not match the original queries [Sit].  With this approach,\n   publishers\
    \ of content can later perform lookups for it at periodic\n   intervals and verify\
    \ the integrity of whatever is returned.  Any\n   inconsistencies could then be\
    \ interpreted as malicious activity.  The\n   problem with proactive identification\
    \ is the management of the\n   overhead it implies: if checks are performed too\
    \ often, they may\n   actually hinder scalability, while, if they are performed\
    \ too rarely,\n   they would probably be useless.\n   An additional approach for\
    \ mitigating routing attacks and identifying\n   malicious peers consists in sending\
    \ multiple copies of the same\n   message on different paths.  With such an approach,\
    \ implemented, for\n   example, in Kademlia [Maymounkov], the sending peer can\
    \ identify\n   anomalies comparing responses coming in from different paths.\n"
- title: 5.1.2.  Reactive Identification
  contents:
  - "5.1.2.  Reactive Identification\n   In a reactive strategy, the peers perform\
    \ normal operations and if\n   they happen to detect some malicious activity,\
    \ then they can label\n   the responsible node as malicious and avoid sending\
    \ any further\n   message to it.  In a file-sharing application, for example,\
    \ after\n   downloading content from a node, if the peer observes that data does\n\
    \   not match its original query it can identify the corresponding node\n   as\
    \ malicious.  Poon et al.  [Poon] suggest a strategy based on the\n   forwarding\
    \ of queries.  If routing is done in an iterative way, then\n   dropping of packets,\
    \ forwarding to an incorrect node, and delay in\n   forwarding arouse suspicion\
    \ and the corresponding peer is identified\n   as malicious.\n"
- title: 5.2.  Reputation Management Systems
  contents:
  - "5.2.  Reputation Management Systems\n   Reputation management systems are used\
    \ to allow peers to share\n   information about other peers based on their own\
    \ experience and thus\n   help in making better judgments.  Most reputation management\
    \ systems\n   proposed in the literature for file-sharing applications [Uzun]\n\
    \   [Damiani] [Lee] [Kamvar] aim at preventing misbehaving peers with low\n  \
    \ reputation to rejoin the network with a different ID and therefore\n   start\
    \ from a clean slate.  To achieve this, Lee et al.  [Lee] store\n   not only the\
    \ reputation of a peer but also the reputation of files\n   based on file name\
    \ and content to avoid spreading of a bad file.\n   Another method is to make\
    \ the reputation of a new peer the minimum\n   possible.  Kamvar et al.  [Kamvar]\
    \ define five design considerations\n   for reputation management systems:\n \
    \  o  The system should be self-policing.\n   o  The system should maintain anonymity.\n\
    \   o  The system should not assign any profit to newcomers.\n   o  The system\
    \ should have minimal overhead in terms of computation,\n      infrastructure,\
    \ storage, and message complexity.\n   o  The system should be robust to malicious\
    \ collectives of peers who\n      know one another and attempt to collectively\
    \ subvert the system.\n"
- title: 5.2.1.  Unstructured Reputation Management
  contents:
  - "5.2.1.  Unstructured Reputation Management\n   Unstructured reputation management\
    \ systems have been proposed by Uzun\n   et al.  [Uzun] and Damiani et al.  [Damiani].\
    \  The basic idea of\n   these is that each peer maintains information about its\
    \ own\n   experience with other peers and resources, and shares it with others\n\
    \   on demand.  In the system proposed by Uzun et al.  [Uzun], each node\n   maintains\
    \ trust and distrust vectors for every other node with which\n   it has interacted.\
    \  When reputation information about a peer is\n   required, a node first checks\
    \ its local database, and if insufficient\n   information is present, it sends\
    \ a query to its neighbors just as it\n   would when looking up content.  However,\
    \ such an approach requires\n   peers to get reputation information from as many\
    \ sources as possible;\n   otherwise, malicious nodes may successfully place targeted\
    \ attacks\n   returning false values for their victims.\n"
- title: 5.2.2.  Structured Reputation Management
  contents:
  - "5.2.2.  Structured Reputation Management\n   One of the problems with unstructured\
    \ reputation management systems\n   is that they either take the feedback from\
    \ few peers or, if they do\n   so from all, then they incur large traffic overhead.\
    \  Systems such as\n   those proposed by [Lee] [Kamvar] try to resolve it in a\
    \ structured\n   manner.  The idea of the eigen trust algorithm [Kamvar], for\
    \ example,\n   is transitivity of trust.  If a node trusts peer X, then it would\n\
    \   also trust the feedback it gives about other peers.  A node builds\n   such\
    \ information in an iterative way; for maintaining it in a\n   structured way,\
    \ the authors propose to use a content addressable\n   network (CAN) DHT [Ratnasamy].\
    \  The information about each peer is\n   stored and replicated on different peers\
    \ to provide robustness\n   against malicious nodes.  They also suggest favoring\
    \ peers\n   probabilistically with high trust values instead of doing it\n   deterministically,\
    \ to allow new peers to slowly develop a reputation.\n   Eventually, they suggest\
    \ the use of incentives for peers with high\n   reputation values.\n"
- title: 6.  Routing and Data Integrity
  contents:
  - "6.  Routing and Data Integrity\n   Preserving integrity of routing and data,\
    \ or, in other words,\n   preventing peers from returning corrupt responses to\
    \ queries and\n   routing through malicious peers, is an important security issue\
    \ in\n   P2P networks.  The data stored on a P2P overlay depends on the\n   applications\
    \ that are using it.  For file-sharing, this data would be\n   the files themselves,\
    \ their location, and owner information.  For\n   realtime communication, this\
    \ would include user location bindings and\n   other routing information.  We\
    \ describe such data integrity issues in\n   Section 7.\n"
- title: 6.1.  Data Integrity
  contents:
  - "6.1.  Data Integrity\n   For file-sharing applications, insertion of wrong content\
    \ (e.g.,\n   files not matching their names or descriptions) and introduction\
    \ of\n   corrupt data chunks (often referred to as poisoning and pollution)\n\
    \   are a significant problem.  BitTorrent uses voluntary moderators to\n   weed\
    \ out bogus files and the SHA-1 algorithm to determine the hash of\n   each piece\
    \ of a file to allow verification of integrity.  If a peer\n   detects a bad chunk,\
    \ it can download that chunk from another peer.\n   With this strategy, different\
    \ peers download different pieces of a\n   file before the original peer disappears\
    \ from the network.  However,\n   if a malicious peer modifies the pieces that\
    \ are only available on it\n   and the original peer disappears, then the object\
    \ distribution will\n   fail [Zhang].  An analysis of BitTorrent in terms of integrity\
    \ and\n   performance can be found in the work of Pouwelse et al.  [Pouwelse].\n"
- title: 6.2.  Routing Integrity
  contents:
  - "6.2.  Routing Integrity\n   To enhance the integrity of routing, it is important\
    \ to reduce the\n   number of queries forwarded to malicious nodes.  Marti et\
    \ al.\n   [Marti] developed a system that uses social network information to\n\
    \   route queries over trusted nodes.  Their algorithm uses trusted nodes\n  \
    \ to forward queries (if one exists and is closer to the required ID in\n   the\
    \ ID space).  Otherwise, they use the regular Chord [Stoica]\n   routing table\
    \ to forward queries.  While their results indicate good\n   average performance,\
    \ it cannot guarantee log(N) hops for all cases.\n   Danezis et al.  [Danezis]\
    \ suggest a method for routing in the\n   presence of a large number of Sybil\
    \ nodes.  Their method is to ensure\n   that a peer queries a diverse set of nodes\
    \ and does not place too\n   much trust in a node.  Both the above works have\
    \ been described based\n   on Chord.  However, unlike Chord, in DHTs like Pastry\
    \ [Rowstron] and\n   Kademlia [Maymounkov] there is flexibility in selecting nodes\
    \ for any\n   row in a peer's routing table.  Potentially many nodes have a common\n\
    \   ID prefix of a given length and are candidates for routing a given\n   query.\
    \  To exploit the social network information and still guarantee\n   log(N) hops,\
    \ a peer should select its friends to route a query, but\n   only when they are\
    \ present in the appropriate row selected by the DHT\n   algorithm.\n"
- title: 7.  Peer-to-Peer in Realtime Communication
  contents:
  - "7.  Peer-to-Peer in Realtime Communication\n   The idea of using P2P in realtime\
    \ communication essentially implies\n   distributing centralized entities from\
    \ conventional architectures\n   over P2P overlays and thus reducing the costs\
    \ of deployment and\n   increasing reliability of the different services.  Initiatives\
    \ such\n   as the P2PSIP working group in IETF [P2PSIP] are currently\n   concentrating\
    \ on achieving this by using a DHT for services such as\n   registration, location\
    \ lookup, and support for NAT traversal, which\n   are normally handled by dedicated\
    \ servers.\n   Even if based on the same technology, overlays used for realtime\n\
    \   communication differ from those used for file-sharing in at least two\n  \
    \ aspects:\n   o  Resource consumption.  Contrary to file-sharing systems where\
    \ the\n      DHT is used to store huge amounts of data (even if the distributed\n\
    \      database is used only for storing file locations, each user\n      usually\
    \ indexes hundreds or thousands of files), realtime\n      communication overlays\
    \ only require a subset of the resources\n      available at any given time as\
    \ users only register a limited\n      number of locations (rarely more than one).\n\
    \   o  Confidentiality.  In file-sharing applications, eavesdropping and\n   \
    \   identity theft do not constitute real threats; after all, files\n      are\
    \ supposed to be made publicly available.  This is not true in\n      realtime\
    \ communications, where the privacy and confidentiality of\n      the participants\
    \ are of paramount importance.  Furthermore, the\n      notion of identity plays\
    \ an important role in realtime\n      communications since it is the basis for\
    \ starting a communication\n      session.  As such, it is essential to have mechanisms\
    \ to\n      unequivocally assert identities in realtime communication systems.\n\
    \   In this section we go over the admission issues and security problems\n  \
    \ discussed in previous sections, and discuss solutions that would be\n   applicable\
    \ to realtime communication in P2P.\n"
- title: 7.1.  Peer Promotion
  contents:
  - "7.1.  Peer Promotion\n   In order to remain compatible with existing user agents,\
    \ P2P\n   communication architectures would have to allow certain nodes to use\n\
    \   their services without actually using overlay-specific semantics.\n   One\
    \ way to achieve this would be for overlay-agnostic nodes to\n   register with\
    \ an existing peer or a dedicated proxy via a standard\n   protocol like SIP [RFC3261].\
    \  Through the rest of this document, we\n   will refer to nodes that access the\
    \ service without actually joining\n   the overlay as \"clients\".\n   In most\
    \ cases, users would be able to benefit from the overlay by\n   only acting as\
    \ clients.  However, in order to keep the solution\n   scalable, at some point\
    \ clients would have to be promoted to peers\n   (admission to the DHT).  This\
    \ requires addressing the following\n   issues.\n"
- title: 7.1.1.  Active vs. Passive Upgrades
  contents:
  - "7.1.1.  Active vs. Passive Upgrades\n   Most existing P2P networks [KAZAA] [BITTORRENT]\
    \ [PPLIVE] would\n   generally leave it to the clients to determine if and when\
    \ they would\n   apply for becoming peers.  A well-known exception to this trend\
    \ is\n   the Skype network [SKYPE], arguably one of the most popular overlay\n\
    \   networks used for realtime communications today.  Instances of the\n   Skype\
    \ application are supposed to operate as either super-nodes,\n   directly contributing\
    \ to the distributed provision of the service, or\n   ordinary-nodes, simply using\
    \ the service, and the \"promotions\" are\n   decided by the higher levels of\
    \ the hierarchy [Baset].  Even if there\n   is not much difference for a client\
    \ whether it has to actively ask\n   for authorization to join an overlay or passively\
    \ wait for an\n   invitation, the latter approach has some advantages that fit\
    \ well in\n   overlays where only a subset of the peers is required to provide\
    \ the\n   service (as in realtime communication):\n   o  An attacker cannot estimate\
    \ in advance when and if it would be\n      invited to join the overlay as a peer.\n\
    \   o  It allows peers to perform long-lasting measurements on sets of\n     \
    \ candidates, in order to accurately select the most appropriate for\n      upgrading\
    \ and only invite it when they are \"ready\" to do so.  The\n      opposite approach,\
    \ that is, when clients initiate the join\n      themselves, adds an extra constraint\
    \ for the peer that has to act\n      upon the request since it doesn't know if\
    \ and when the peer would\n      attempt to join again.\n   o  It discourages\
    \ malicious peers from attempting Sybil and, more\n      generally, brute force\
    \ attacks, as only a small ratio of clients\n      has chances to join the overlay\
    \ (possibly after an accurate\n      examination).\n"
- title: 7.1.2.  When to Upgrade
  contents:
  - "7.1.2.  When to Upgrade\n   In order to answer this question, one would have\
    \ to define some\n   criteria that would allow determination of the load on a\
    \ peer and a\n   reasonable threshold.  When the load exceeds this threshold,\
    \ a client\n   is invited to become a peer and share the load.  Several mechanisms\n\
    \   to diagnose the status of P2P systems have recently been proposed\n   [P2PSIP-DIAG];\
    \ in general, reasonable criteria for determining load\n   can be:\n   o  Number\
    \ of clients attached.\n   o  Bandwidth usage for DHT maintenance, forwarding\
    \ requests, and\n      responses to and from peers and from the attached clients.\n\
    \   o  Memory usage for DHT routing table, DHT neighborhood table,\n      application-specific\
    \ data, and information about the attached\n      clients.\n"
- title: 7.1.3.  Which Clients to Upgrade
  contents:
  - "7.1.3.  Which Clients to Upgrade\n   Selecting which clients to upgrade would\
    \ require defining and keeping\n   track of new metrics.  The exact set of metrics\
    \ and how they\n   influence decisions should be the subject of serious analysis\
    \ and\n   experimentation.  These could be based on the following observations:\n\
    \   o  Uptime.  A peer could easily record the amount of time that it has\n  \
    \    been maintaining a connection with a client and take it into\n      account\
    \ when trying to determine whether or not to upgrade it.\n   o  Level of activity.\
    \  It is reasonable to assume that the more a\n      client uses the service (e.g.,\
    \ making phone calls), the less they\n      would be willing to degrade it.\n\
    \   o  Keeping track of history.  Peers could record history of the\n      clients\
    \ they invite and the way they contribute to the overlay.\n   Other metrics such\
    \ as public vs. private IP addresses, computation\n   power, and bandwidth should\
    \ also be taken into account even though\n   they do not necessarily have a direct\
    \ impact on security.\n   Note however that a set of colluded malicious peers\
    \ can manufacture\n   basically any criteria considered for the upgrade.  Furthermore,\n\
    \   sophisticated peers can overload the system or run denial-of-service\n   attacks\
    \ against existing super-nodes in order to improve their\n   chances of being\
    \ upgraded.\n"
- title: 7.1.4.  Incentives for Clients
  contents:
  - "7.1.4.  Incentives for Clients\n   Clients need to have incentives for accepting\
    \ upgrades in order to\n   prevent excessive burden on existing peers.  One way\
    \ to handle this\n   would be to maintain separate incentive management through\
    \ the use of\n   currency or credits.  Another option would involve embedding\
    \ these\n   incentives inside the protocol itself:\n   o  Peers share with clients\
    \ only a fraction of their bandwidth\n      (uplink and downlink).  This would\
    \ result in higher latency when\n      using the services of the overlay as a\
    \ client and better service\n      quality for peers.\n   o  Peers could restrict\
    \ the number or types of calls that they allow\n      clients to make.\n   Introducing\
    \ such incentives, however, may turn out to be somewhat\n   risky.  Differences\
    \ in quality would probably be perceptible for end\n   users who would not always\
    \ be able to understand the difference\n   between the roles that their user agent\
    \ is playing in the overlay.\n   Such behavior may therefore be interpreted as\
    \ arbitrary and make the\n   service look unreliable.\n"
- title: 7.2.  Security
  contents:
  - '7.2.  Security

    '
- title: 7.2.1.  Targeted Denial of Service
  contents:
  - "7.2.1.  Targeted Denial of Service\n   In addition to bombardment with queries\
    \ as described in Section 2,\n   the denial-of-service attack against an individual\
    \ node can be\n   conducted in DHTs if the peers that surround a particular ID\
    \ are\n   compromised.  These peers that act as proxy servers for the victim\n\
    \   can fake the responses from the victim by sending fictitious error\n   messages\
    \ back to peers trying to establish a session.  Danezis et\n   al.'s solution\
    \ [Danezis] can also provide protection against such\n   attacks, as in their\
    \ solution peers vary the nodes used in queries.\n"
- title: 7.2.2.  Man-in-the-Middle Attack
  contents:
  - "7.2.2.  Man-in-the-Middle Attack\n   The man-in-the-middle attack is well described\
    \ by Seedorf [Seedorf1]\n   in the particular case of P2PSIP [P2PSIP] and consists\
    \ of an attack\n   that exploits the lack of integrity when routing information.\
    \  A\n   malicious node could return IP addresses of other malicious nodes\n \
    \  when queried for a particular ID.  The requesting peer would then\n   establish\
    \ a session with a second malicious node, which would again\n   return a \"poisoned\"\
    \ reply.  This could go on until the Time to Live\n   (TTL) expires and the requester\
    \ gives up the \"wild goose chase\"\n   [Danezis].  A simple way for entities\
    \ to verify the correctness of\n   the routing lookup is to employ iterative routing\
    \ and to check the\n   node-ID of every routing hop that is returned, and it should\
    \ get\n   closer to the desired ID with every hop.  However, this is not a\n \
    \  strong check and can be defeated [Seedorf1].\n"
- title: 7.2.3.  Trust between Peers
  contents:
  - "7.2.3.  Trust between Peers\n   The effect of malicious peers could be mitigated\
    \ by introducing the\n   concept of trust within an overlay.  This can be done\
    \ in different\n   ways:\n   o  Using certificates assigned by an external authority.\
    \  The\n      drawback with this approach is that it requires a centralized\n\
    \      element.\n   o  Using certificates reciprocally signed by peers.  This\
    \ mechanism\n      is quite similar to PGP [Zimmermann]; every peer signs\n  \
    \    certificates of \"friend\" peers and trusts any other peer with a\n     \
    \ certificate signed by one of its friends.  However, even though it\n      might\
    \ be theoretically possible, in reality it is extremely\n      difficult to obtain\
    \ long enough trust chains.\n"
- title: 7.2.4.  Routing Call Signaling
  contents:
  - "7.2.4.  Routing Call Signaling\n   One way for implementing realtime communication\
    \ overlays (as we have\n   mentioned in earlier sections) would be to simply replace\
    \ centralized\n   entities in signaling protocols like SIP [RFC3261] with distributed\n\
    \   services.  In some cases, this might imply reusing existing protocol\n   mechanisms\
    \ for routing signaling messages.  In the case of SIP, this\n   would imply regarding\
    \ peers as SIP proxies.  However, the design of\n   SIP supposes that such proxies\
    \ are trusted, and makes it possible for\n   them to fork requests or change their\
    \ destination, add or remove\n   header fields, act as the remote party, and generally\
    \ manipulate\n   message content and semantics.\n   However, in a P2P environment\
    \ where messages may be routed through\n   numerous successive peers, some of\
    \ which might be compromised, it is\n   important not to treat them as trusted\
    \ proxies.  One way to limit\n   what peers can do is by protecting signaling\
    \ with some kind of end-\n   to-end encryption.\n   Another option would be to\
    \ extend existing signaling protocols and\n   modify the way they route messages\
    \ in order to guarantee secure end-\n   to-end transmission.  Gurbani et al. \
    \ [Gurbani] define a similar\n   mechanism for SIP that allows nodes to establish\
    \ a secure channel by\n   sending a CONNECT SIP request, and then tunnel all SIP\
    \ messages\n   through it, adopting a similar mechanism to the one used for\n\
    \   upgrading from HTTP to HTTPS [RFC2818].\n"
- title: 7.2.5.  Integrity of Location Bindings
  contents:
  - "7.2.5.  Integrity of Location Bindings\n   It is important to ensure that the\
    \ location that a user registers,\n   usually a (URI, IP) pair, is what is returned\
    \ to the requesting\n   party.  Or the entities that issue the lookup request\
    \ must be able to\n   verify the integrity of this pair.  A pure P2P approach\
    \ to allow\n   verification of the integrity of location binding information is\n\
    \   presented in [Seedorf2].  The idea is for an entity to choose an\n   asymmetric\
    \ key pair and hash its public key to generate its URI.  The\n   entity then signs\
    \ its present location with its private key and\n   registers with the quadruple\
    \ (URI, IP, signature, public key).  Any\n   entity that looks up the URI and\
    \ receives such a quadruple can then\n   verify its integrity by using the public\
    \ key and the certificate.\n   Another possible merit of such an approach could\
    \ be that it is\n   possible to identify the malicious nodes and maintain a black\
    \ list.\n   However, the resulting URIs are not easy to remember and associate\n\
    \   with entities.  Discovering these URIs and associating them with\n   entities\
    \ would therefore require some sort of a directory service.\n   The authors suggest\
    \ using existing authentication infrastructure for\n   this such as a certified\
    \ web service using SSL that can publish an\n   \"online phone book\" mapping\
    \ users to URIs.\n"
- title: 7.2.6.  Encrypting Content
  contents:
  - "7.2.6.  Encrypting Content\n   Using P2P overlays for realtime communication\
    \ implies that content is\n   likely to traverse numerous intermediate peers before\
    \ reaching its\n   destination.  A typical example could be the use of peers as\
    \ media\n   relays as a way of traversing NATs in VoIP calls.\n   Contrary to\
    \ publicly shared files, communication sessions are in most\n   cases expected\
    \ to be private.  It is therefore very important to make\n   sure that no media\
    \ leaves the client application without being\n   encrypted and securely transported\
    \ through a protocol like SRTP\n   [RFC3711].  However, the processing required\
    \ by the encryption\n   algorithms and the extra resources necessary for managing\
    \ the keying\n   material (e.g., for retrieving public keys when interacting with\n\
    \   unknown peers) may be expensive, especially for mobile devices.\n"
- title: 7.2.7.  Other Issues
  contents:
  - "7.2.7.  Other Issues\n   Details on cost and payment regimes could help identify\
    \ further\n   threats.  Such details could also be important when determining\
    \ the\n   impact of a potential attack in the context of the specific business\n\
    \   models associated with particular overlays.  In many cases, answers\n   to\
    \ the following simple questions significantly aid the design of\n   protection\
    \ mechanisms:\n   o  Whom do the users pay?\n   o  Do the users only pay when\
    \ accessing the public telephone network?\n   o  Is the billing done per call\
    \ or is it fixed?\n   For instance, the implications of an attack such as taking\
    \ control\n   over another's user agent or its identity and using it for outbound\n\
    \   calls would depend on whether or not this would be economically\n   advantageous\
    \ for the attacker.  Baumann et al.  [Baumann] suggest\n   that to prevent unwanted\
    \ communication costs, gateways for the public\n   telephone network should only\
    \ be accessible via authenticated servers\n   and dialing authorizations should\
    \ be enforced.  Also, it seems that\n   it would be difficult to do billing in\
    \ a pure P2P manner as it would\n   mean keeping the billing details with untrusted\
    \ peers.\n"
- title: 8.  Open Issues
  contents:
  - "8.  Open Issues\n   Existing systems used for file-sharing, media streaming,\
    \ and realtime\n   communications all achieve a reasonable level of security relying\
    \ on\n   centralized components (e.g., login servers in Skype [Baset],\n   moderators\
    \ and trackers in BitTorrent [Pouwelse]).  Securing pure P2P\n   networks is therefore\
    \ still a very active research field; at the time\n   of writing the main open\
    \ issues fall in five areas:\n   o  Secure assignment of node IDs.\n   o  Entity-identity\
    \ association.\n   o  Distributed trust among peers.\n   o  Resistance against\
    \ malicious peer collusion.\n   o  Robustness and damage recovery.\n   In general,\
    \ P2P overlays are designed to work when the vast majority\n   of their peers\
    \ are interested in the service provided by the system\n   and act benevolently.\
    \  Understanding how operations in different\n   overlays are perturbed as the\
    \ number of malicious or compromised\n   peers grows is another interesting area\
    \ of research.  Also, a widely\n   adopted methodology for the evaluation and\
    \ classification of security\n   solutions would be likely to help research in\
    \ the field of P2P\n   security progress more efficiently.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document, tutorial in nature, discusses\
    \ some of the security\n   issues of P2P systems used for realtime communications.\
    \  It does not\n   aim at identifying all possible threats and the corresponding\n\
    \   solutions; instead, starting from an analysis of the attackers, it\n   delves\
    \ into some important aspects of P2P security, referencing the\n   most relevant\
    \ works published at the time of writing and discussing\n   how they apply (or\
    \ could apply) to the case of realtime\n   communications.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   The authors are particularly grateful to Dhruv Chopra,\
    \ who\n   contributed to the writing of the article \"Peer-to-peer Overlays for\n\
    \   Real-Time Communication: Security Issues and Solutions\" (IEEE Surveys\n \
    \  & Tutorials, Vol. 11, No. 1) from which this work is partially\n   derived.\n\
    \   The authors would also like to thank Vijay Gurbani and Song Haibin\n   for\
    \ reviewing the document and the many others who provided useful\n   comments.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [Ahn]          Ahn, L., Blum, M., and J. Langford,\
    \ \"Telling humans\n                  and computers apart automatically\", Communications\
    \ of\n                  the ACM, vol. 47, no. 2, February 2004.\n   [Androutsellis-Theotokis]\n\
    \                  Androutsellis-Theotokis, S. and D. Spinellis, \"A\n       \
    \           survey of peer-to-peer content distribution\n                  technologies\"\
    , ACM CSUR, vol. 36, no. 4,\n                  December 2004.\n   [BITTORRENT]\
    \   \"BitTorrent\", <http://www.bittorrent.com/>.\n   [Baset]        Baset, S.\
    \ and H. Schulzrinne, \"An analysis of the\n                  skype peer-to-peer\
    \ internet telephony protocol\",\n                  Proceedings of IEEE INFOCOM\
    \ 2006, April 2006.\n   [Baumann]      Baumann, R., Cavin, S., and S. Schmid,\
    \ \"Voice Over IP\n                  - Security and SPIT\", Technical Report,\
    \ University of\n                  Berne, September 2006.\n   [COOLSTREAM]   \"\
    COOLSTREAMING\", <http://www.coolstreaming.us>.\n   [Castro]       Castro, M.,\
    \ Druschel, P., Ganesh, A., Rowstron, A.,\n                  and D.  Wallach,\
    \ \"Secure routing for structured\n                  peer-to-peer overlay networks\"\
    , Proceedings of 5th\n                  symposium on Operating systems design\
    \ and\n                  implementation, December 2002.\n   [Chellapilla]  Chellapilla,\
    \ K. and P. Simard, \"Using Machine Learning\n                  to Break Visual\
    \ Human Interaction Proofs (HIPs)\",\n                  Proceedings of Advances\
    \ in Neural Information\n                  Processing Systems, December 2004.\n\
    \   [Condie]       Condie, T., Kacholia, V., Sankararaman, S.,\n             \
    \     Hellerstein, J., and P. Maniatis, \"Maelstorm: Churn as\n              \
    \    Shelter\", Proceedings of 13th Annual Network and\n                  Distributed\
    \ System Security Symposium, November 2005.\n   [Damiani]      Damiani, E., Vimercati,\
    \ D., Paraboschi, S., Samarati,\n                  P., and F. Violante, \"A Reputation-Based\
    \ Approach for\n                  Choosing Reliable Resources in Peer-to-Peer\
    \ Networks\",\n                  Proceedings of Conference on Computer and\n \
    \                 Communications Security, November 2002.\n   [Danezis]      Danezis,\
    \ G., Lesniewski-Laas, C., Kaashoek, M., and R.\n                  Anderson, \"\
    Sybil-resistant DHT routing\", Proceedings\n                  of 10th European\
    \ Symposium on Research in Computer\n                  Security, September 2005.\n\
    \   [Douceur]      Douceur, J., \"The Sybil Attack\", Revised Papers\n       \
    \           from First International Workshop on Peer-to-Peer\n              \
    \    Systems, March 2002.\n   [Gurbani]      Gurbani, V., Willis, D., and F. Audet,\n\
    \                  \"Cryptographically Transparent Session Initiation\n      \
    \            Protocol (SIP) Proxies\", Proceedings of IEEE ICC '07,\n        \
    \          June 2007.\n   [KAZAA]        \"KaZaa\", <http://www.kazaa.com/>.\n\
    \   [Kamvar]       Kamvar, S., Garcia-Molina, H., and M. Schlosser, \"The\n  \
    \                EigenTrust Algorithm for Reputation Management in P2P\n     \
    \             Networks\", Proceedings of 12th international\n                \
    \  conference on World Wide Web, May 2003.\n   [Kim]          Kim, Y., Mazzocchi,\
    \ D., and G. Tsudik, \"Admission\n                  Control in Peer Groups\",\
    \ Proceedings of Second IEEE\n                  International Symposium on Network\
    \ Computing and\n                  Applications, April 2003.\n   [Kong]      \
    \   Kong, J., Zerfos, P., Luo, H., Lu, S., and L. Zhang,\n                  \"\
    Providing robust and ubiquitous security support for\n                  MANET\"\
    , Proceedings of 9th International Conference on\n                  Network Protocols,\
    \ November 2001.\n   [Lee]          Lee, S., Kwon, O., Kim, J., and S. Hong, \"\
    A Reputation\n                  Management System in Structured Peer-to-Peer\n\
    \                  Networks\", Proceedings of 14th IEEE International\n      \
    \            Workshops on Enabling Technologies: Infrastructure for\n        \
    \          Collaborative Enterprise, June 2005.\n   [Liang]        Liang, J.,\
    \ Kumar, R., Xi, Y., and K. Ross, \"Pollution\n                  in p2p file sharing\
    \ systems\", Proceedings of IEEE\n                  INFOCOM 2005, March 2005.\n\
    \   [Marti]        Marti, S., Ganesan, P., and H. Garcia-Molina, \"SPROUT:\n \
    \                 P2P Routing with Social Networks\", Proceedings\n          \
    \        of First International Workshop on Peer-to-Peer and\n               \
    \   Databases, March 2004.\n   [Maymounkov]   Maymounkov, P. and D. Mazi, \"Kademlia:\
    \ A Peer-to-peer\n                  Information System Based on the XOR Metric\"\
    ,\n                  Proceedings of First International Workshop on\n        \
    \          Peer-to-peer Systems, March 2002.\n   [McCue]        McCue, Andy.,\
    \ \"Bookie reveals 100,000 cost of\n                  denial-of-service extortion\
    \ attacks\", available from\n                  http://www.silicon.com, June 2004.\n\
    \   [NAPSTER]      \"Napster\", <http://www.napster.com/>.\n   [Ohta]        \
    \ Ohta, K., Micali, S., and L. Reyzin, \"Accountable\n                  Subgroup\
    \ Multisignatures\", Proceedings of 8th ACM\n                  conference on Computer\
    \ and Communications Security,\n                  November 2001.\n   [P2PSIP]\
    \       \"Peer-to-Peer Session Initiation Protocol (P2PSIP)\n                \
    \  IETF Working Group\",\n                  <http://www.ietf.org/html.charters/\n\
    \                  p2psip-charter.html>.\n   [P2PSIP-DIAG] Yongchao, S., Jiang,\
    \ X., Even, R., and D. Bryan,\n                  \"P2PSIP Overlay Diagnostics\"\
    , Work in Progress,\n                  December 2009.\n   [PPLIVE]       \"PPLive\"\
    , <http://www.pplive.com>.\n   [Poon]         Poon, W. and R. Chang, \"Robust\
    \ Forwarding in\n                  Structured Peer-to-Peer Overlay Networks\"\
    , Proceedings\n                  of ACM SIGCOMM 2004, August 2004.\n   [Pouwelse]\
    \     Pouwelse, J., Garbacki, P., Epema, D., and H. Sips,\n                  \"\
    The Bittorent P2P File-Sharing System: Measurements\n                  and Analysis\"\
    , Proceedings of 4th International\n                  Workshop of Peer-to-peer\
    \ Systems, February 2005.\n   [RFC2818]      Rescorla, E., \"HTTP Over TLS\",\
    \ RFC 2818, May 2000.\n   [RFC3261]      Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G.,\n                  Johnston, A., Peterson, J., Sparks, R., Handley, M.,\n\
    \                  and E.  Schooler, \"SIP: Session Initiation Protocol\",\n \
    \                 RFC 3261, June 2002.\n   [RFC3711]      Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and\n                  K.  Norrman, \"The Secure\
    \ Real-time Transport Protocol\n                  (SRTP)\", RFC 3711, March 2004.\n\
    \   [RFC4981]      Risson, J. and T. Moors, \"Survey of Research towards\n   \
    \               Robust Peer-to-Peer Networks: Search Methods\",\n            \
    \      RFC 4981, September 2007.\n   [Ratnasamy]    Ratnasamy, S., Francis, P.,\
    \ Handley, M., Karp, R., and\n                  S.  Shenker, \"A Scalable Content-Addressable\
    \ Network\",\n                  Proceedings of ACM SIGCOMM 2001, January 2001.\n\
    \   [Rowaihy]      Rowaihy, H., Enck, W., McDaniel, P., and T. Porta,\n      \
    \            \"Limiting Sybil attacks in structured peer-to-peer\n           \
    \       networks\", Proceedings of IEEE INFOCOM 2007, May 2007.\n   [Rowstron]\
    \     Rowstron, A. and P. Druschel, \"Pastry: Scalable,\n                  distributed\
    \ object location and routing for\n                  large-scale peer-to-peer\
    \ systems\", Proceedings of 18th\n                  IFIP/ACM International Conference\
    \ on Distributed\n                  Systems Platforms (Middleware 2001), November\
    \ 2001.\n   [SHA1]         180-1, FIPS., \"Secure Hash Standard\", April 2005.\n\
    \   [SKYPE]        \"Skype\", <http://www.skype.com/>.\n   [Saxena]       Saxena,\
    \ N., Tsudik, G., and J. Yi, \"Admission Control\n                  in Peer-to-Peer:\
    \ Design and Performance Evaluation\",\n                  Proceedings of 1st ACM\
    \ workshop on Security of ad hoc\n                  and sensor networks, October\
    \ 2003.\n   [Scheideler]   Scheideler, C., \"How to Spread Adversarial Nodes?:\n\
    \                  Rotate!\", Proceedings of 37th Annual ACM Symposium on\n  \
    \                Theory of Computing, May 2005.\n   [Seedorf1]     Seedorf, J.,\
    \ \"Security Challenges for Peer-to-Peer\n                  SIP\", IEEE Network,\
    \ vol. 20, no. 5, September 2006.\n   [Seedorf2]     Seedorf, J., \"Using Cryptographically\
    \ Generated\n                  SIP-URIs to Protect the Integrity of Content in\n\
    \                  P2P-SIP\", Proceedings of 3rd Annual VoIP Security\n      \
    \            Workshop, June 2006.\n   [Singh]        Singh, K. and H. Schulzrinne,\
    \ \"Peer-to-Peer Internet\n                  Telephony using SIP\", Proceedings\
    \ of International\n                  Workshop on Network and Operating System\
    \ Support for\n                  Digital Audio and Video, June 2005.\n   [Sit]\
    \          Sit, E. and R. Morris, \"Security considerations for\n            \
    \      peer- to-peer distributed hash tables\", Revised Papers\n             \
    \     from First International Workshop on Peer-to-Peer\n                  Systems,\
    \ March 2002.\n   [Stoica]       Stoica, I., Morris, R., Karger, D., Kaashoek,\
    \ M., and\n                  H.  Balakrishnan, \"Chord: A Scalable Peer-to-peer\n\
    \                  Lookup Service for Internet Applications\", Proceedings\n \
    \                 of Applications, Technologies, Architectures, and\n        \
    \          Protocols for Computer Communication 2001, May 2001.\n   [Tam]    \
    \      Tam, J., Simsa, J., Hyde, S., and L. Ahn, \"Breaking\n                \
    \  Audio CAPTCHAs with Machine Learning Techniques\",\n                  Proceedings\
    \ of Advances in Neural Information\n                  Processing Systems, December\
    \ 2009.\n   [Uzun]         Uzun, E., Pariente, M., and A. Selpk, \"A\n       \
    \           Reputation-Based Trust Management System for P2P\n               \
    \   Networks\", Proceedings of International Symposium on\n                  Cluster\
    \ Computing and the Grids, April 2004.\n   [Wallach]      Wallach, D., \"A Survey\
    \ of Peer-to-Peer Security\n                  Issues\", Proceedings of International\
    \ Symposium of\n                  Software Security 2002, November 2002,\n   \
    \               <http://www.cs.rice.edu/~dwallach/pub/\n                  tokyo-p2p2002.pdf>.\n\
    \   [Yu]           Yu, H., Kaminsky, M., Gibbons, P., and A. Flaxman,\n      \
    \            \"SybilGuard: Defending Against Sybil Attacks via\n             \
    \     Social Networks\", Proceedings of ACM SIGCOMM 2006,\n                  September\
    \ 2006.\n   [Zhang]        Zhang, X., Chen, S., and R. Sandhu, \"Enhancing Data\n\
    \                  Authenticity and Integrity in P2P Systems\", IEEE\n       \
    \           Internet Computing, vol. 9, no. 6, September 2005.\n   [Zimmermann]\
    \   Zimmermann, Philip., \"Pretty good privacy: public key\n                 \
    \ encryption for the masses\", Building in big brother:\n                  the\
    \ cryptographic policy debate pag. 103-107, 1995.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Henning Schulzrinne\n   Columbia University\n   1214 Amsterdam\
    \ Avenue\n   New York, NY  10027\n   USA\n   EMail: hgs@cs.columbia.edu\n   Enrico\
    \ Marocco\n   Telecom Italia\n   Via G. Reiss Romoli, 274\n   Turin  10148\n \
    \  Italy\n   EMail: enrico.marocco@telecomitalia.it\n   Emil Ivov\n   SIP Communicator\
    \ / University of Strasbourg\n   4 rue Blaise Pascal\n   Strasbourg Cedex  F-67070\n\
    \   France\n   EMail: emcho@sip-communicator.org\n"
