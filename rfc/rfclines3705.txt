Abstract This document presents a set of High Capacity Textual Conventions for use in MIB modules which require performance history based upon 15 minute intervals.
The Textual Conventions defined in this document extend the conventions presented in RFC 3593 to 64 bit resolution using the conventions presented in RFC 2856.
The Internet Standard Management Framework For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
In cases where a manager must obtain performance history data about the behavior of equipment it manages, several strategies can be followed in the design of a MIB module that represents the managed equipment, including:  The agent counts events on a continuous basis and, whenever desired, the manager obtains the value of the event counter and adjusts its understanding of the history of events at the agent.
The agent allocates events to 'buckets' where each bucket represents an interval of time.
Telecommunications equipment often makes use of the latter strategy.
For such equipment the standard practice is that history data is maintained by the agent in terms of 15 minute intervals [T1.231].
MIB modules for collecting performance history based on 15 minute intervals have been defined for the DS1/E1 [RFC2495], DS3/E3 [RFC2496], SONET/SDH [RFC3592], ADSL [RFC2662], HDLS2 and SHDSL [RFC3276] interface types.
These MIB modules use a common set of textual conventions defined in [RFC3593].
A need has arisen to define 64 bit versions of the textual conventions in [RFC3593].
Ideally, these high capacity textual conventions would be based on a Gauge64 or Unsigned64 data type, but unfortunately no such types exist in SMIv2.
The next best choice would be to base them on the CounterBasedGauge64 textual convention presented in [RFC2856], but that is not possible either since SMIv2 allows only base types to be used in defining textual conventions.
Therefore, the textual conventions presented in this memo are based directly on the Counter64 type, like those in [RFC2856].
the following limitations:  The MAX ACCESS of objects defined using these textual conventions must be read only, because the MAX ACCESS of the underlying Counter64 type is read only.
No sub range can be specified in object definitions using these textual conventions, because sub ranges are not allowed on Counter64 objects.
No DEFVAL clause can be specified in object definitions using these textual conventions, because DEFVALs are not allowed on Counter64 objects.
Objects defined using these textual conventions cannot be used in an INDEX clause, because there is no INDEX clause mapping defined for objects of type Counter64.
Use of the textual conventions presented in this memo assumes the following:
The agent supports 15 minute based history counters.
The agent is capable of keeping a history of 96 intervals of 15 minute performance data.
The agent may optionally support performance data aggregating the history intervals.
The agent will keep separate tables for the current interval, the history intervals, and the total aggregates.
BEGIN IMPORTS MODULE IDENTITY, Counter64, Unsigned32,
FROM SNMPv2 TC; hcPerfHistTCMIB MODULE IDENTITY LAST UPDATED "200402030000Z"   February 3, 2004 ORGANIZATION "ADSLMIB Working Group"
Mike Sneed Sand Channel Systems Postal:
Bob Ray PESA Switching Systems,
A Wynn Drive Huntsville, AL 35805
Sugar Bush Road Raleigh, NC 27612 3339
This MIB Module provides Textual Conventions to be used by systems supporting 15 minute based performance history counts that require high capacity counts.
This version of this MIB module is part of RFC 3705: see the RFC itself for full legal notices."
REVISION "200402030000Z"   February 3, 2004 DESCRIPTION "
mib 2 107 } HCPerfValidIntervals ::
TEXTUAL CONVENTION STATUS  current DESCRIPTION
"The number of near end intervals for which data was collected.
The value of an object with an HCPerfValidIntervals syntax will be 96 unless the measurement was (re )started within the last 1440 minutes, in which case the value will be the number of complete 15 minute intervals for which the agent has at least some data.
In certain cases (e.g., in the case where the agent is a proxy) it is possible that some intervals are unavailable.
In this case, this interval is the maximum interval number for which data is available."
TEXTUAL CONVENTION STATUS  current DESCRIPTION
"The number of near end intervals for which no data is available.
The value of an object with an HCPerfInvalidIntervals syntax will typically be zero except in cases where the data for some intervals are not available (e.g., in proxy situations)."
"The number of seconds that have elapsed since the beginning of the current measurement period.
If, for some reason, such as an adjustment in the system's time of day clock or the addition of a leap second, the duration of the current interval exceeds the maximum value, the agent will return the maximum value.
For 15 minute intervals, the range is limited to (0..899).
For 24 hour intervals, the range is limited to (0..86399)."
"This convention defines a range of values that may be set in a fault threshold alarm control.
As the number of seconds in a 15 minute interval numbers at most 900, objects of this type may have a range of 0...900, where the value of 0 disables the alarm."
TEXTUAL CONVENTION STATUS  current DESCRIPTION "
A gauge associated with a performance measurement in a current 15 minute measurement interval.
The value of an object with an HCPerfCurrentCount syntax starts from zero and is increased when associated events occur, until the end of the 15 minute interval.
At that time the value of the gauge is stored in the first 15 minute history interval, and the gauge is restarted at zero.
In the case where the agent has no valid data available for the current interval, the corresponding object instance is not available and upon a retrieval request a corresponding error message shall be returned to indicate that this instance does not exist.
This count represents a non negative integer, which may increase or decrease, but shall never exceed 2^64 1 (18446744073709551615 decimal), nor fall below 0.
The value of an object with HCPerfCurrentCount syntax assumes its maximum value whenever the underlying count exceeds 2^64 1.
If the underlying count subsequently decreases below 2^64 1 (due, e.g., to a retroactive adjustment as a result of entering or exiting unavailable time), then the object's value also decreases.
Note that this TC is not strictly supported in SMIv2, because the 'always increasing' and 'counter wrap' semantics associated with the Counter64 base type are not preserved.
It is possible that management applications which rely solely upon the (Counter64)
ASN.1 tag to determine object semantics will mistakenly operate upon objects of this type as they would for Counter64 objects.
This textual convention represents a limited and short  term solution, and may be deprecated as a long term solution is defined and deployed to replace it."
TEXTUAL CONVENTION STATUS  current DESCRIPTION "
A gauge associated with a performance measurement in a previous 15 minute measurement interval.
In the case where the agent has no valid data available for a particular interval, the corresponding object instance is not available and upon a retrieval request a corresponding error message shall be returned to indicate that this instance does not exist.
Let X be an object with HCPerfIntervalCount syntax.
Let Y be an object with HCPerfCurrentCount syntax.
Let Z be an object with HCPerfTotalCount syntax.
Then, in a system supporting a history of n intervals with X(1) and X(n) the most and least recent intervals respectively, the following applies at the end of a 15 minute interval: discard the value of X(n)
the value of X(i) becomes that of X(i 1) for n
the value of X(1) becomes that of Y. the value of Z, if supported, is adjusted.
This count represents a non negative integer, which may increase or decrease, but shall never exceed 2^64 1 (18446744073709551615 decimal), nor fall below 0.
The value of an object with HCPerfIntervalCount syntax assumes its maximum value whenever the underlying count exceeds 2^64 1.
If the underlying count subsequently decreases below 2^64 1 (due, e.g., to a retroactive adjustment as a result of entering or exiting unavailable time), then the value of the object also decreases.
Note that this TC is not strictly supported in SMIv2, because the 'always increasing' and 'counter wrap' semantics associated with the Counter64 base type are not preserved.
It is possible that management applications which rely solely upon the (Counter64)
ASN.1 tag to determine object semantics will mistakenly operate upon objects of this type as they would for Counter64 objects.
This textual convention represents a limited and short  term solution, and may be deprecated as a long term solution is defined and deployed to replace it."
TEXTUAL CONVENTION STATUS  current DESCRIPTION "
A gauge representing the aggregate of previous valid 15 minute measurement intervals.
Intervals for which no valid data was available are not counted.
This count represents a non negative integer, which may increase or decrease, but shall never exceed 2^64 1 (18446744073709551615 decimal), nor fall below 0.
The value of an object with HCPerfTotalCount syntax assumes its maximum value whenever the underlying count exceeds 2^64 1.
If the underlying count subsequently decreases below 2^64 1 (due, e.g., to a retroactive adjustment as a result of entering or exiting unavailable time), then the object's value also decreases.
Note that this TC is not strictly supported in SMIv2, because the 'always increasing' and 'counter wrap' semantics associated with the Counter64 base type are not preserved.
It is possible that management applications which rely solely upon the (Counter64)
ASN.1 tag to determine object semantics will mistakenly operate upon objects of this type as they would for Counter64 objects.
This textual convention represents a limited and short  term solution, and may be deprecated as a long term solution is defined and deployed to replace it."
This module does not define any management objects.
Instead, it defines a set of textual conventions which may be used by other MIB modules to define management objects.
Meaningful security considerations can only be written in the MIB modules that define management objects.
This document has therefore no impact on the security of the Internet.
