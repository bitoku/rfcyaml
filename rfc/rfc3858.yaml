- title: __initial_text__
  contents:
  - "      An Extensible Markup Language (XML) Based Format for Watcher\n        \
    \                      Information\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   Watchers are defined as entities that request (i.e., subscribe to)\n\
    \   information about a resource.  There is fairly complex state\n   associated\
    \ with these subscriptions.  The union of the state for all\n   subscriptions\
    \ to a particular resource is called the watcher\n   information for that resource.\
    \  This state is dynamic, changing as\n   subscribers come and go.  As a result,\
    \ it is possible, and indeed\n   useful, to subscribe to the watcher information\
    \ for a particular\n   resource.  In order to enable this, a format is needed\
    \ to describe\n   the state of watchers on a resource.  This specification describes\
    \ an\n   Extensible Markup Language (XML) document format for such state.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction ................................................\
    \   2\n   2.  Terminology ...............................................    \
    \ 2\n   3.  Structure of Watcher Information ...........................    2\n\
    \   4.  Computing Watcher Lists from the Document ..................    5\n  \
    \ 5.  Example ....................................................    6\n   6.\
    \  XML Schema .................................................    6\n   7.  Security\
    \ Considerations ....................................    8\n   8.  IANA Considerations\
    \ ........................................    9\n       8.1. application/watcherinfo+xml\
    \ MIME Registration .........    9\n       8.2. URN Sub-Namespace Registration\
    \ for\n            urn:ietf:params:xml:ns:watcherinfo ....................   10\n\
    \   9.  Normative References .......................................   10\n  \
    \ 10. Informative References .....................................   11\n   11.\
    \ Acknowledgements ...........................................   11\n   12. Contributors\
    \ ...............................................   12\n   13. Author's Address\
    \ ...........................................   13\n   14. Full Copyright Statement\
    \ ...................................   14\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Watchers are defined as entities that request (i.e., subscribe\
    \ to)\n   information about a resource, using the SIP event framework, RFC 3265\n\
    \   [1].  There is fairly complex state associated with these\n   subscriptions.\
    \  This state includes the identity of the subscriber,\n   the state of the subscription,\
    \ and so on.  The union of the state for\n   all subscriptions to a particular\
    \ resource is called the watcher\n   information for that resource.  This state\
    \ is dynamic, changing as\n   subscribers come and go.  As a result, it is possible,\
    \ and indeed\n   useful, to subscribe to the watcher information for a particular\n\
    \   resource.  An important application of this is the ability for a user\n  \
    \ to find out the set of subscribers to their presentity [11].  This\n   would\
    \ allow the user to provide an authorization decision for the\n   subscription.\n\
    \   To support subscriptions to watcher information, two components are\n   needed.\
    \  The first is the definition of a SIP event template-package\n   for watcher\
    \ information.  The other is the definition of a data\n   format to represent\
    \ watcher information.  The former is specified in\n   [2], and the latter is\
    \ specified here.\n"
- title: 2. Terminology
  contents:
  - "2. Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described in BCP 14,\
    \ RFC 2119\n   [3] and indicate requirement levels for compliant implementations.\n\
    \   This document also uses the terms subscriber, watcher, subscription,\n   notification,\
    \ watcherinfo subscription, watcherinfo subscriber, and\n   watcherinfo notification\
    \ with the meanings described in [2].\n"
- title: 3.  Structure of Watcher Information
  contents:
  - "3.  Structure of Watcher Information\n   Watcher information is an XML document\
    \ [4] that MUST be well-formed\n   and SHOULD be valid.  Watcher information documents\
    \ MUST be based on\n   XML 1.0 and MUST be encoded using UTF-8.  This specification\
    \ makes\n   use of XML namespaces for identifying watcherinfo documents and\n\
    \   document fragments.  The namespace URI for elements defined by this\n   specification\
    \ is a URN [5], using the namespace identifier 'ietf'\n   defined by [6] and extended\
    \ by [7].  This URN is:\n      urn:ietf:params:xml:ns:watcherinfo\n   A watcher\
    \ information document begins with the root element tag\n   \"watcherinfo\". \
    \ It consists of any number of \"watcher-list\" sub-\n   elements, each of which\
    \ is a list of watchers for a particular\n   resource.  Other elements from different\
    \ namespaces MAY be present\n   for the purposes of extensibility; elements or\
    \ attributes from\n   unknown namespaces MUST be ignored.  There are two attributes\n\
    \   associated with the \"watcherinfo\" element, both of which MUST be\n   present:\n\
    \   version: This attribute allows the recipient of watcherinfo documents\n  \
    \    to properly order them.  Versions start at 0, and increment by one\n    \
    \  for each new document sent to a watcherinfo subscriber.  Versions\n      are\
    \ scoped within a watcherinfo subscription.  Versions MUST be\n      representable\
    \ using a 32 bit integer.  However, versions do not\n      wrap.\n   state: This\
    \ attribute indicates whether the document contains\n      the full watcherinfo\
    \ state, or whether it contains only\n      information on those watchers which\
    \ have changed since the\n      previous document (partial).\n   Each \"watcher-list\"\
    \ element contains a list of \"watcher\" elements,\n   each of which describes\
    \ a watcher on a particular resource.  Other\n   elements from different namespaces\
    \ MAY be present for the purposes of\n   extensibility; elements or attributes\
    \ from unknown namespaces MUST be\n   ignored.  There are two attributes associated\
    \ with the \"watcher-list\"\n   element, both of which MUST be present:\n   resource:\
    \ This attribute contains a URI for the resource being\n      watched by that\
    \ list of watchers.  It is mandatory.\n   package: This attribute contains a token\
    \ indicating the event\n      package for which watcher information on that resource\
    \ is being\n      provided.  It is mandatory.\n   The \"watcher\" element describes\
    \ a watcher in the watcher list.  The\n   value of the \"watcher\" element is\
    \ a URI for the watcher.  This URI\n   SHOULD be the authenticated identity of\
    \ the watcher as determined by\n   the server processing the subscription.  As\
    \ such, this URI will\n   usually be an address-of-record (for example, sip:joe@example.com)\
    \ as\n   opposed to a device address (for example, sip:joe@192.0.2.3).  There\n\
    \   are three mandatory attributes which MUST be present:\n   id: A unique identifier\
    \ for the subscription described by the\n      watcher element.  The id MUST be\
    \ representable using the grammar\n      for token as specified by RFC 3261 [8].\
    \  It MUST be unique across\n      all other watchers reported in documents sent\
    \ in notifications for\n      a particular watcherinfo subscription.\n   status:\
    \ The status of the subscription.  The meaning of the\n      various statuses\
    \ are defined in the watcher information event\n      package [2].\n   event:\
    \ The event which caused the transition to the current\n      status.  The events\
    \ are defined in the watcher information event\n      package [2].\n   There are\
    \ also some optional, informative attributes of the watcher\n   element.  These\
    \ are:\n   display-name: A textual representation of the name of the\n      subscriber.\n\
    \   expiration: The amount of time, in seconds from the current\n      time, that\
    \ the subscription will expire.\n   duration-subscribed: The amount of time, expressed\
    \ in seconds,\n      between the time the SUBSCRIBE which created the subscription\
    \ was\n      received, and the current time.\n   The xml:lang attribute MAY be\
    \ used with the \"watcher\" element to\n   specify the language of the \"display-name\"\
    .\n   The number of watchers present for each resource, and the set of\n   resources\
    \ listed, depends on the type of data being provided, and to\n   whom.\n   For\
    \ example, consider a presence system using watcher information. In\n   one scenario,\
    \ a user, A, subscribes to the presence of another user,\n   B.  A would like\
    \ to find out about the status of their subscription.\n   To do so, A subscribes\
    \ to the watcher information for B's presence.\n   A does not have authorization\
    \ to learn the status of all watchers for\n   B's presence.  As a result, the\
    \ watcher information sent to A will\n   contain only one watcher - A themself.\n\
    \   In another scenario, a user, B, wishes to learn the set of people who\n  \
    \ have subscribed to B's presence.  To do this, B subscribes to the\n   watcher\
    \ information for B's presence.  Here, B is authorized to see\n   all the watchers\
    \ of B's presence.  As a result, the watcher\n   information sent to B will contain\
    \ all watchers of B's presence.\n   In the case where an administrator wishes\
    \ to learn the current status\n   in the system, the watcher information could\
    \ contain all watchers for\n   all resources.\n"
- title: 4. Computing Watcher Lists from the Document
  contents:
  - "4. Computing Watcher Lists from the Document\n   Typically, the watcherinfo NOTIFY\
    \ will only contain information about\n   those watchers whose state has changed.\
    \  To construct a coherent view\n   of the total state of all watchers, a watcherinfo\
    \ subscriber will\n   need to combine NOTIFYs received over time.  The watcherinfo\n\
    \   subscriber maintains a table for each watcher list it receives\n   information\
    \ about.  Each watcher list is uniquely identified by the\n   URI in the \"resource\"\
    \ attribute of the \"watcher-list\" element.  Each\n   table contains a row for\
    \ each watcher in that watcher list.  Each row\n   is indexed by the unique ID\
    \ for that watcher.  It is conveyed in the\n   \"id\" attribute of the \"watcher\"\
    \ element.  The contents of each row\n   contain the state of that watcher as\
    \ conveyed in the \"watcher\"\n   element.  The tables are also associated with\
    \ a version number.  The\n   version number MUST be initialized with the value\
    \ of the \"version\"\n   attribute from the \"watcherinfo\" element in the first\
    \ document\n   received.  Each time a new document is received, the value of the\n\
    \   local version number, and the \"version\" attribute in the new\n   document,\
    \ are compared.  If the value in the new document is one\n   higher than the local\
    \ version number, the local version number is\n   increased by one, and the document\
    \ is processed.  If the value in the\n   document is more than one higher than\
    \ the local version number, the\n   local version number is set to the value in\
    \ the new document, the\n   document is processed, and the watcherinfo subscriber\
    \ SHOULD generate\n   a refresh request to trigger a full state notification.\
    \  If the value\n   in the document is less than the local version, the document\
    \ is\n   discarded without processing.\n   The processing of the watcherinfo document\
    \ depends on whether it\n   contains full or partial state.  If it contains full\
    \ state, indicated\n   by the value of the \"state\" attribute in the \"watcherinfo\"\
    \ element,\n   the contents of all tables associated with this watcherinfo\n \
    \  subscription are flushed.  They are re-populated from the document.\n   A new\
    \ table is created for each \"watcher-list\" element, and a new row\n   in each\
    \ table is created for each \"watcher\" element.  If the\n   watcherinfo contains\
    \ partial state, as indicated by the value of the\n   \"state\" attribute in the\
    \ \"watcherinfo\" element, the document is used\n   to update the existing tables.\
    \  For each \"watcher-list\" element, the\n   watcherinfo subscriber checks to\
    \ see if a table exists for that list.\n   This check is done by comparing the\
    \ URI in the \"resource\" attribute\n   of the \"watcher-list\" element with the\
    \ URI associated with the table.\n   If a table doesn't exist for that list, one\
    \ is created.  For each\n   \"watcher\" element in the list, the watcherinfo subscriber\
    \ checks to\n   see whether a row exists for that watcher.  This check is done\
    \ by\n   comparing the ID in the \"id\" attribute of the \"watcher\" element with\n\
    \   the ID associated with the row.  If the watcher doesn't exist in the\n   table,\
    \ a row is added, and its state is set to the information from\n   that \"watcher\"\
    \ element.  If the watcher does exist, its state is\n   updated to be the information\
    \ from that \"watcher\" element.  If a row\n   is updated or created, such that\
    \ its state is now terminated, that\n   entry MAY be removed from the table at\
    \ any time.\n"
- title: 5.  Example
  contents:
  - "5.  Example\n   The following is an example of watcher information for a presentity,\n\
    \   who is a professor.  There are two watchers, userA and userB.\n"
- title: <?xml version="1.0"?>
  contents:
  - '<?xml version="1.0"?>

    '
- title: <watcherinfo xmlns="urn:ietf:params:xml:ns:watcherinfo"
  contents:
  - "<watcherinfo xmlns=\"urn:ietf:params:xml:ns:watcherinfo\"\n             version=\"\
    0\" state=\"full\">\n  <watcher-list resource=\"sip:professor@example.net\" package=\"\
    presence\">\n    <watcher status=\"active\"\n             id=\"8ajksjda7s\"\n\
    \             duration-subscribed=\"509\"\n             event=\"approved\" >sip:userA@example.net</watcher>\n\
    \    <watcher status=\"pending\"\n             id=\"hh8juja87s997-ass7\"\n   \
    \          display-name=\"Mr. Subscriber\"\n             event=\"subscribe\">sip:userB@example.org</watcher>\n\
    \  </watcher-list>\n"
- title: </watcherinfo>
  contents:
  - '</watcherinfo>

    '
- title: 6.  XML Schema
  contents:
  - "6.  XML Schema\n   The following is the schema definition of the watcherinfo\
    \ document\n   format:\n"
- title: <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  contents:
  - "<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n       targetNamespace=\"\
    urn:ietf:params:xml:ns:watcherinfo\"\n       xmlns:tns=\"urn:ietf:params:xml:ns:watcherinfo\"\
    \ >\n"
- title: <!-- This import brings in the XML language attribute xml:lang-->
  contents:
  - "<!-- This import brings in the XML language attribute xml:lang-->\n  <xs:import\
    \ namespace=\"http://www.w3.org/XML/1998/namespace\"\n             schemaLocation=\"\
    http://www.w3.org/2001/03/xml.xsd\" />\n  <xs:element name=\"watcherinfo\">\n\
    \    <xs:complexType>\n      <xs:sequence>\n        <xs:element ref=\"tns:watcher-list\"\
    \ minOccurs=\"0\"\n                    maxOccurs=\"unbounded\"/>\n        <xs:any\
    \ namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"\n            \
    \    maxOccurs=\"unbounded\"/>\n      </xs:sequence>\n      <xs:attribute name=\"\
    version\" type=\"xs:nonNegativeInteger\"\n                    use=\"required\"\
    />\n      <xs:attribute name=\"state\" use=\"required\">\n        <xs:simpleType>\n\
    \          <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"\
    full\"/>\n            <xs:enumeration value=\"partial\"/>\n          </xs:restriction>\n\
    \        </xs:simpleType>\n      </xs:attribute>\n    </xs:complexType>\n  </xs:element>\n\
    \  <xs:element name=\"watcher-list\">\n    <xs:complexType>\n      <xs:sequence>\n\
    \        <xs:element ref=\"tns:watcher\" minOccurs=\"0\" maxOccurs=\n        \
    \ \"unbounded\"/>\n          <xs:any namespace=\"##other\" processContents=\"\
    lax\"\n                  minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n      </xs:sequence>\n\
    \      <xs:attribute name=\"resource\" type=\"xs:anyURI\" use=\"required\"/>\n\
    \      <xs:attribute name=\"package\" type=\"xs:string\" use=\"required\"/>\n\
    \    </xs:complexType>\n  </xs:element>\n  <xs:element name=\"watcher\">\n   \
    \ <xs:complexType>\n      <xs:simpleContent>\n        <xs:extension base=\"xs:anyURI\"\
    >\n          <xs:attribute name=\"display-name\" type=\"xs:string\"/>\n      \
    \    <xs:attribute name=\"status\" use=\"required\">\n            <xs:simpleType>\n\
    \              <xs:restriction base=\"xs:string\">\n                <xs:enumeration\
    \ value=\"pending\"/>\n                <xs:enumeration value=\"active\"/>\n  \
    \              <xs:enumeration value=\"waiting\"/>\n                <xs:enumeration\
    \ value=\"terminated\"/>\n              </xs:restriction>\n            </xs:simpleType>\n\
    \          </xs:attribute>\n          <xs:attribute name=\"event\" use=\"required\"\
    >\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\"\
    >\n                <xs:enumeration value=\"subscribe\"/>\n                <xs:enumeration\
    \ value=\"approved\"/>\n                <xs:enumeration value=\"deactivated\"\
    />\n                <xs:enumeration value=\"probation\"/>\n                <xs:enumeration\
    \ value=\"rejected\"/>\n                <xs:enumeration value=\"timeout\"/>\n\
    \                <xs:enumeration value=\"giveup\"/>\n                <xs:enumeration\
    \ value=\"noresource\"/>\n              </xs:restriction>\n            </xs:simpleType>\n\
    \          </xs:attribute>\n          <xs:attribute name=\"expiration\" type=\"\
    xs:unsignedLong\"/>\n          <xs:attribute name=\"id\" type=\"xs:string\" use=\"\
    required\"/>\n          <xs:attribute name=\"duration-subscribed\"\n         \
    \     type=\"xs:unsignedLong\"/>\n          <xs:attribute ref=\"xml:lang\"/>\n\
    \        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n \
    \ </xs:element>\n"
- title: </xs:schema>
  contents:
  - '</xs:schema>

    '
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Watcher information is sensitive information.\
    \  The protocol used to\n   distribute it SHOULD ensure privacy, message integrity,\
    \ and\n   authentication.  Furthermore, the protocol should provide access\n \
    \  controls which restrict who can see who elses watcher information.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document registers a new MIME type, application/watcherinfo+xml,\n\
    \   and registers a new XML namespace.\n"
- title: 8.1.  application/watcherinfo+xml MIME Registration
  contents:
  - "8.1.  application/watcherinfo+xml MIME Registration\n   MIME media type name:\
    \ application\n   MIME subtype name: watcherinfo+xml\n   Mandatory parameters:\
    \ none\n   Optional parameters: Same as charset parameter application/xml\n  \
    \      as specified in RFC 3023 [9].\n   Encoding considerations: Same as encoding\
    \ considerations of\n        application/xml as specified in RFC 3023 [9].\n \
    \  Security considerations: See Section 10 of RFC 3023 [9] and\n        Section\
    \ 7 of this specification.\n   Interoperability considerations: none.\n   Published\
    \ specification: This document.\n   Applications which use this media type: This\
    \ document type has\n        been used to support subscriber authorization functions\
    \ for\n        SIP-based presence [10] [2].\n   Additional Information:\n    \
    \    Magic Number: None\n        File Extension: .wif or .xml\n        Macintosh\
    \ file type code: \"TEXT\"\n   Personal and email address for further information:\
    \ Jonathan\n        Rosenberg, <jdrosen@jdrosen.net>\n   Intended usage: COMMON\n\
    \   Author/Change controller: The IETF.\n"
- title: 8.2. URN Sub-Namespace Registration for
  contents:
  - "8.2. URN Sub-Namespace Registration for\n     urn:ietf:params:xml:ns:watcherinfo\n\
    \   This section registers a new XML namespace, as per the guidelines in\n   [7].\n\
    \   URI: The URI for this namespace is\n        urn:ietf:params:xml:ns:watcherinfo.\n\
    \   Registrant Contact: IETF, SIMPLE working group,\n         <simple@ietf.org>,\
    \ Jonathan Rosenberg\n         <jdrosen@jdrosen.net>.\n   XML:\n       BEGIN\n\
    \       <?xml version=\"1.0\"?>\n       <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML\
    \ Basic 1.0//EN\"\n                 \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\"\
    >\n       <html xmlns=\"http://www.w3.org/1999/xhtml\">\n       <head>\n     \
    \    <meta http-equiv=\"content-type\"\n            content=\"text/html;charset=iso-8859-1\"\
    />\n         <title>Watcher Information Namespace</title>\n       </head>\n  \
    \     <body>\n         <h1>Namespace for Watcher Information</h1>\n         <h2>urn:ietf:params:xml:ns:watcherinfo</h2>\n\
    \         <p>See <a href=\"ftp://ftp.rfc-editor.org/in-notes/rfc3858.txt\">\n\
    \            RFC3858</a>.</p>\n       </body>\n       </html>\n       END\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [1]  Roach, A. B., \"Session Initiation Protocol\
    \ (SIP)-Specific Event\n        Notification\", RFC 3265, June 2002.\n   [2] \
    \ Rosenberg, J., \"A Watcher Information Event Template-Package for\n        the\
    \ Session Initiation Protocol (SIP)\", RFC 3857, August 2004.\n   [3]  Bradner,\
    \ S., \"Key Words for Use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [4]  T. Bray, J. Paoli, and C. M. Sperberg-McQueen,\
    \ \"Extensible\n        Markup language (XML) 1.0 (second edition),\" W3C Recommendation\n\
    \        REC-xml-20001006, World Wide Web Consortium (W3C), Oct. 2000.\n     \
    \   Available at http://www.w3.org/XML/.\n   [5]  Moats, R., \"URN Syntax\", RFC\
    \ 2141, May 1997.\n   [6]  Moats, R., \"A URN Namespace for IETF Documents\",\
    \ RFC 2648,\n        August 1999.\n   [7]  Mealling, M., \"The IETF XML Registry\"\
    , BCP 81, RFC 3688, January\n        2004.\n   [8]  Rosenberg, J., Schulzrinne,\
    \ H., Camarillo, G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley,\
    \ M., and E. Schooler, \"SIP:\n        Session Initiation Protocol\", RFC 3261,\
    \ June 2002.\n   [9]  Murata, M., Laurent, S., and D. Kohn, \"XML Media Types\"\
    , RFC\n        3023, January 2001.\n   [10] Rosenberg, J., \"A Presence Event\
    \ Package for the Session\n        Initiation Protocol (SIP)\", RFC 3856, August\
    \ 2004.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [11] Day, M., Rosenberg, J., and H. Sugano, \"\
    A Model for Presence and\n        Instant Messaging\", RFC 2778, February 2000.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The authors would like to thank Sean Olson, Steve Donovan,\
    \ and Cullen\n   Jennings for their detailed comments and assistance with the\
    \ XML\n   schema.\n"
- title: 12.  Contributors
  contents:
  - "12.  Contributors\n   The following people were part of the original design team\
    \ that\n   developed the first version of this specification:\n   Dean Willis\n\
    \   dynamicsoft\n   5100 Tennyson Parkway, Suite 1200\n   Plano, Texas 75024\n\
    \   EMail: dwillis@dynamicsoft.com\n   Robert Sparks\n   dynamicsoft\n   5100\
    \ Tennyson Parkway, Suite 1200\n   Plano, Texas 75024\n   EMail: rsparks@dynamicsoft.com\n\
    \   Ben Campbell\n   EMail: ben@nostrum.com\n   Henning Schulzrinne\n   Columbia\
    \ University\n   M/S 0401\n   1214 Amsterdam Ave.\n   New York, NY 10027-7003\n\
    \   EMail: schulzrinne@cs.columbia.edu\n   Jonathan Lennox\n   Columbia University\n\
    \   M/S 0401\n   1214 Amsterdam Ave.\n   New York, NY 10027-7003\n   EMail: lennox@cs.columbia.edu\n\
    \   Christian Huitema\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond,\
    \ WA 98052-6399\n   EMail: huitema@microsoft.com\n   Bernard Aboba\n   Microsoft\
    \ Corporation\n   One Microsoft Way\n   Redmond, WA 98052-6399\n   EMail: bernarda@microsoft.com\n\
    \   David Gurle\n   Reuters Corporation\n   EMail: David.Gurle@reuters.com\n \
    \  Jonathan Lennox contributed the text for the DTD and its usage that\n   were\
    \ part of earlier versions of this specification.\n"
- title: 13.  Author's Address
  contents:
  - "13.  Author's Address\n   Jonathan Rosenberg\n   dynamicsoft\n   600 Lanidex\
    \ Plaza\n   Parsippany, NJ 07054\n   EMail: jdrosen@dynamicsoft.com\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
