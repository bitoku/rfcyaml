- title: __initial_text__
  contents:
  - "                The Use of RSA/SHA-1 Signatures within\n Encapsulating Security\
    \ Payload (ESP) and Authentication Header (AH)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the use of the RSA digital signature algorithm\
    \ as\n   an authentication algorithm within the revised IP Encapsulating\n   Security\
    \ Payload (ESP) as described in RFC 4303 and the revised IP\n   Authentication\
    \ Header (AH) as described in RFC 4302.  The use of a\n   digital signature algorithm,\
    \ such as RSA, provides data origin\n   authentication in applications when a\
    \ secret key method (e.g., HMAC)\n   does not provide this property.  One example\
    \ is the use of ESP and AH\n   to authenticate the sender of an IP multicast packet.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Algorithm and Mode ..............................................3\n  \
    \    2.1. Key Size Discussion ........................................4\n   3.\
    \ Performance .....................................................5\n   4. Interaction\
    \ with the ESP Cipher Mechanism .......................6\n   5. Key Management\
    \ Considerations ...................................6\n   6. Security Considerations\
    \ .........................................7\n      6.1. Eavesdropping ..............................................7\n\
    \      6.2. Replay .....................................................7\n  \
    \    6.3. Message Insertion ..........................................8\n    \
    \  6.4. Deletion ...................................................8\n      6.5.\
    \ Modification ...............................................8\n      6.6. Man\
    \ in the Middle ..........................................8\n      6.7. Denial\
    \ of Service ..........................................8\n   7. IANA Considerations\
    \ .............................................9\n   8. Acknowledgements ...............................................10\n\
    \   9. References .....................................................10\n  \
    \    9.1. Normative References ......................................10\n    \
    \  9.2. Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Encapsulating Security Payload  (ESP) [ESP] and Authentication\
    \ Header\n   (AH) [AH] headers can be used to protect both unicast traffic and\n\
    \   group (e.g., IPv4 and IPv6 multicast) traffic.  When unicast traffic\n   is\
    \ protected between a pair of entities, HMAC transforms (such as\n   [HMAC-SHA])\
    \ are sufficient to prove data origin authentication.  An\n   HMAC is sufficient\
    \ protection in that scenario because only the two\n   entities involved in the\
    \ communication have access to the key, and\n   proof-of-possession of the key\
    \ in the HMAC construct authenticates\n   the sender.  However, when ESP and AH\
    \ authenticate group traffic,\n   this property no longer holds because all group\
    \ members share the\n   single HMAC key.  In the group case, the identity of the\
    \ sender is\n   not uniquely established, since any of the key holders has the\n\
    \   ability to form the HMAC transform.  Although the HMAC transform\n   establishes\
    \ a group-level security property, data origin\n   authentication is not achieved.\n\
    \   Some group applications require true data origin authentication,\n   where\
    \ one group member cannot successfully impersonate another group\n   member. \
    \ The use of asymmetric digital signature algorithms, such as\n   RSA, can provide\
    \ true data origin authentication.\n   With asymmetric algorithms, the sender\
    \ generates a pair of keys, one\n   of which is never shared (called the \"private\
    \ key\") and one of which\n   is distributed to other group members (called the\
    \ \"public key\").\n   When the private key is used to sign the output of a cryptographic\n\
    \   hash algorithm, the result is called a \"digital signature\".  A\n   receiver\
    \ of the digital signature uses the public key, the signature\n   value, and an\
    \ independently computed hash to determine whether or not\n   the claimed origin\
    \ of the packet is correct.\n   This memo describes how RSA digital signatures\
    \ can be applied as an\n   ESP and AH authentication mechanism to provide data\
    \ origin\n   authentication.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL\n   NOT\",\"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"\
    MAY\", and \"OPTIONAL\" in\n   this document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Algorithm and Mode
  contents:
  - "2.  Algorithm and Mode\n   The RSA Public Key Algorithm [RSA] is a widely deployed\
    \ public key\n   algorithm commonly used for digital signatures.  Compared to\
    \ other\n   public key algorithms, signature verification is relatively\n   efficient.\
    \  This property is useful for groups where receivers may\n   have limited processing\
    \ capabilities.  The RSA algorithm is commonly\n   supported in hardware.\n  \
    \ Two digital signature encoding methods are supported in [RSA].\n   RSASSA-PKCS1-v1_5\
    \ MUST be supported by a conforming implementation.\n   RSASSA-PSS is generally\
    \ believed to be more secure, but at the time\n   of this writing is not ubiquitous.\
    \  RSASSA-PSS SHOULD be used\n   whenever it is available.  SHA-1 [SHA] MUST be\
    \ used as the signature\n   hash algorithm used by the RSA digital signature algorithm.\n\
    \   When specified for ESP, the Integrity Check Value (ICV) is equal in\n   size\
    \ to the RSA modulus, unless the RSA modulus is not a multiple of\n   8 bits.\
    \  In this case, the ICV MUST be prepended with between 1 and 7\n   bits set to\
    \ zero such that the ICV is a multiple of 8 bits.  This\n   specification matches\
    \ the output S [RSA, Section 8.1.1] (RSASSA-PSS)\n   and [RSA, Section 8.2.1]\
    \ (RSASSA-PKCS1-v1_5) when the RSA modulus is\n   not a multiple of 8 bits.  No\
    \ implicit ESP ICV Padding bits are\n   necessary.\n   When specified for AH,\
    \ the ICV is equal in size of the RSA modulus,\n   unless the RSA modulus is not\
    \ a multiple of 32 bits (IPv4) or 64 bits\n   (IPv6) [AH, Section 2.6].  In this\
    \ case, explicit ICV Padding bits\n   are necessary to create a suitably sized\
    \ ICV [AH, Section 3.3.3.2.1].\n   The distribution mechanism of the RSA public\
    \ key and its replacement\n   interval are a group policy matter.  The use of\
    \ an ephemeral key pair\n   with a lifetime of the ESP or AH Security Association\
    \ (SA) is\n   RECOMMENDED.  This recommended policy reduces the exposure of the\
    \ RSA\n   private key to the lifetime of the data being signed by the private\n\
    \   key.  Also, this obviates the need to revoke or transmit the validity\n  \
    \ period of the key pair.\n   Digital signature generation is performed as described\
    \ in [RSA,\n   Section 8.1.1] (RSASSA-PSS) and [RSA, Section 8.2.1](RSASSA-PKCS1-\n\
    \   v1_5).  The authenticated portion of the AH or ESP packet ([AH,\n   Section\
    \ 3.3.3], [ESP, Section 3.3.2]) is used as the message M, which\n   is passed\
    \ to the signature generation function.  The signer's RSA\n   private key is passed\
    \ as K.  Summarizing, the signature generation\n   process computes a SHA-1 hash\
    \ of the authenticated packet bytes,\n   signs the SHA-1 hash using the private\
    \ key, and encodes the result\n   with the specified RSA encoding type.  This\
    \ process results in a\n   value S, which is known as the ICV in AH and ESP.\n\
    \   Digital signature verification is performed as described in [RSA,\n   Section\
    \ 8.1.2] (RSASSA-PSS) and [RSA, Section 8.2.2]\n   (RSASSA-PKCS1-v1_5).  Upon\
    \ receipt, the ICV is passed to the\n   verification function as S.  The authenticated\
    \ portion of the AH or\n   ESP packet is used as the message M, and the RSA public\
    \ key is passed\n   as (n, e).  In summary, the verification function computes\
    \ a SHA-1\n   hash of the authenticated packet bytes, decrypts the SHA-1 hash\
    \ in\n   the ICV, and validates that the appropriate encoding was applied and\n\
    \   was correct.  The two SHA-1 hashes are compared, and if they are\n   identical\
    \ the validation is successful.\n"
- title: 2.1.  Key Size Discussion
  contents:
  - "2.1.  Key Size Discussion\n   The choice of RSA modulus size must be made carefully.\
    \  If too small\n   of a modulus size is chosen, an attacker may be able to reconstruct\n\
    \   the private key used to sign packets before the key is no longer used\n  \
    \ by the sender to sign packets.  This order of events may result in\n   the data\
    \ origin authentication property being compromised.  However,\n   choosing a modulus\
    \ size larger than necessary will result in an\n   unnecessarily high cost of\
    \ CPU cycles for the sender and all\n   receivers of the packet.\n   A conforming\
    \ implementation MUST support a modulus size of 1024 bits.\n   Recent guidance\
    \ [TWIRL, RSA-TR] on key sizes makes estimates as to\n   the amount of effort\
    \ an attacker would need to expend in order to\n   reconstruct an RSA private\
    \ key.  Table 1 summarizes the maximum\n   length of time that selected modulus\
    \ sizes should be used.  Note that\n   these recommendations are based on factors\
    \ such as the cost of\n   processing and memory, as well as cryptographic analysis\
    \ methods,\n   which were current at the time these documents were published.\
    \  As\n   those factors change, choices of key lifetimes should take them into\n\
    \   account.\n                    Number of     Recommended Maximum\n        \
    \           Modulus Bits         Lifetime\n                   ------------   \
    \ -------------------\n                       768               1 week\n     \
    \                  1024              1 year\n             Table 1.  RSA Key Use\
    \ Lifetime Recommendations\n"
- title: 3.  Performance
  contents:
  - "3.  Performance\n   The RSA asymmetric key algorithm is very costly in terms\
    \ of\n   processing time compared to the HMAC algorithms.  However, processing\n\
    \   cost is decreasing over time.  Faster general-purpose processors are\n   being\
    \ deployed, faster software implementations are being developed,\n   and hardware\
    \ acceleration support for the algorithm is becoming more\n   prevalent.\n   Care\
    \ should be taken that RSA signatures are not used for\n   applications when potential\
    \ receivers are known to lack sufficient\n   processing power to verify the signature.\
    \  It is also important to\n   use this scheme judiciously when any receiver may\
    \ be battery powered.\n   The RSA asymmetric key algorithm is best suited to protect\
    \ network\n   traffic for which:\n    o The sender has a substantial amount of\
    \ processing power, and\n    o The network traffic is small enough that adding\
    \ a relatively large\n      authentication tag (in the range of 62 to 256 bytes)\
    \ does not\n      cause packet fragmentation.\n   RSA key pair generation and\
    \ signing are substantially more expensive\n   operations than signature verification,\
    \ but these are isolated to the\n   sender.\n   The size of the RSA modulus affects\
    \ the processing required to create\n   and verify RSA digital signatures.  Care\
    \ should be taken to determine\n   the size of modulus needed for the application.\
    \  Smaller modulus\n   sizes may be chosen as long as the network traffic protected\
    \ by the\n   private key flows for less time than it is estimated that an attacker\n\
    \   would take to discover the private key.  This lifetime is\n   considerably\
    \ smaller than most public key applications that store the\n   signed data for\
    \ a period of time.  But since the digital signature is\n   used only for sender\
    \ verification purposes, a modulus that is\n   considered weak in another context\
    \ may be satisfactory.\n   The size of the RSA public exponent can affect the\
    \ processing\n   required to verify RSA digital signatures.  Low-exponent RSA\n\
    \   signatures may result in a lower verification processing cost.  At\n   the\
    \ time of this writing, no attacks are known against low-exponent\n   RSA signatures\
    \ that would allow an attacker to create a valid\n   signature using the RSAES-OAEP\
    \ scheme.\n   The addition of a digital signature as an authentication tag adds\
    \ a\n   significant number of bytes to the packet.  This increases the\n   likelihood\
    \ that the packet encapsulated in ESP or AH may be\n   fragmented.\n"
- title: 4.  Interaction with the ESP Cipher Mechanism
  contents:
  - "4.  Interaction with the ESP Cipher Mechanism\n   The RSA signature algorithm\
    \ cannot be used with an ESP Combined Mode\n   algorithm that includes an explicit\
    \ ICV.  The Combined Mode algorithm\n   will add the ESP ICV field, which does\
    \ not allow use of a separate\n   authentication algorithm to add the ESP ICV\
    \ field.  One example of\n   such an algorithm is the ESP Galois/Counter Mode\
    \ algorithm [AES-GCM].\n"
- title: 5.  Key Management Considerations
  contents:
  - "5.  Key Management Considerations\n   Key management mechanisms negotiating the\
    \ use of RSA signatures MUST\n   include the length of the RSA modulus during\
    \ policy negotiation using\n   the Authentication Key Length SA Attribute.  This\
    \ gives a device the\n   opportunity to decline use of the algorithm.  This is\
    \ especially\n   important for devices with constrained processors that might\
    \ not be\n   able to verify signatures using larger key sizes.\n   Key management\
    \ mechanisms negotiating the use of RSA signatures also\n   MUST include the encoding\
    \ method during policy negotiation using the\n   Signature Encoding Algorithm\
    \ SA Attribute.\n   A receiver must have the RSA public key in order to verify\
    \ integrity\n   of the packet.  When used with a group key management system (e.g.,\n\
    \   RFC 3547 [GDOI]), the public key SHOULD be sent as part of the key\n   download\
    \ policy.  If the group has multiple senders, the public key\n   of each sender\
    \ SHOULD be sent as part of the key download policy.\n   Use of this transform\
    \ to obtain data origin authentication for\n   pairwise SAs is NOT RECOMMENDED.\
    \  In the case of pairwise SAs (such\n   as negotiated by the Internet Key Exchange\
    \ [IKEV2]), data origin\n   authentication can be achieved with an HMAC transform.\
    \  Because the\n   performance impact of an RSA signature is typically greater\
    \ than an\n   HMAC, the value of using this transform for a pairwise connection\
    \ is\n   limited.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document provides a method of authentication\
    \ for ESP and AH\n   using digital signatures.  This feature provides the following\n\
    \   protections:\n    o Message modification integrity.  The digital signature\
    \ allows the\n      receiver of the message to verify that it was exactly the\
    \ same as\n      when the sender signed it.\n    o Host authentication.  The asymmetric\
    \ nature of the RSA public key\n      algorithm allows the sender to be uniquely\
    \ verified, even when the\n      message is sent to a group.\n   Non-repudiation\
    \ is not claimed as a property of this transform.  At\n   times, the property\
    \ of non-repudiation may be applied to digital\n   signatures on application-level\
    \ objects (e.g., electronic mail).\n   However, this document describes a means\
    \ of authenticating network-\n   level objects (i.e., IP packets), which are ephemeral\
    \ and not\n   directly correlated to any application.  Non-repudiation is not\n\
    \   applicable to network-level objects (i.e., IP packets).\n   A number of attacks\
    \ are suggested by [RFC3552].  The following\n   sections describe the risks those\
    \ attacks present when RSA signatures\n   are used for ESP and AH packet authentication.\n\
    \   SHA-1 has been scheduled to be phased out in 2010, due to the steady\n   advances\
    \ in technology by which an adversary can double its computing\n   power in roughly\
    \ eighteen months.  Recent attacks on SHA-1 underscore\n   the importance of replacing\
    \ SHA-1, but have not motivated replacing\n   it before that date [SHA-COMMENTS].\
    \  The use of this transform after\n   that date SHOULD be preceded by an analysis\
    \ as to its continued\n   suitability.\n"
- title: 6.1.  Eavesdropping
  contents:
  - "6.1.  Eavesdropping\n   This document does not address confidentiality.  That\
    \ function, if\n   desired, must be addressed by an ESP cipher that is used with\
    \ the RSA\n   signatures authentication method.  The RSA signature itself does\
    \ not\n   need to be protected from an eavesdropper.\n"
- title: 6.2.  Replay
  contents:
  - "6.2.  Replay\n   This document does not address replay attacks.  That function,\
    \ if\n   desired, is addressed through use of ESP and AH sequence numbers as\n\
    \   defined in [ESP] and [AH].\n"
- title: 6.3.  Message Insertion
  contents:
  - "6.3.  Message Insertion\n   This document directly addresses message insertion\
    \ attacks.  Inserted\n   messages will fail authentication and be dropped by the\
    \ receiver.\n"
- title: 6.4.  Deletion
  contents:
  - "6.4.  Deletion\n   This document does not address deletion attacks.  It is concerned\n\
    \   only with validating the legitimacy of messages that are not deleted.\n"
- title: 6.5.  Modification
  contents:
  - "6.5.  Modification\n   This document directly addresses message modification\
    \ attacks.\n   Modified messages will fail authentication and be dropped by the\n\
    \   receiver.\n"
- title: 6.6.  Man in the Middle
  contents:
  - "6.6.  Man in the Middle\n   As long as a receiver is given the sender RSA public\
    \ key in a trusted\n   manner (e.g., by a key management protocol), it will be\
    \ able to\n   verify that the digital signature is correct.  A man in the middle\n\
    \   will not be able to spoof the actual sender unless it acquires the\n   RSA\
    \ private key through some means.\n   The RSA modulus size must be chosen carefully\
    \ to ensure that the time\n   a man in the middle needs to determine the RSA private\
    \ key through\n   cryptanalysis is longer than the amount of time that packets\
    \ are\n   signed with that private key.\n"
- title: 6.7.  Denial of Service
  contents:
  - "6.7.  Denial of Service\n   According to IPsec processing rules, a receiver of\
    \ an ESP and AH\n   packet begins by looking up the Security Association in the\
    \ SA\n   database.  If one is found, the ESP or AH sequence number in the\n  \
    \ packet is verified.  No further processing will be applied to packets\n   with\
    \ an invalid sequence number.\n   An attacker that sends an ESP or AH packet matching\
    \ a valid SA on the\n   system and also having a valid sequence number will cause\
    \ the\n   receiver to perform the ESP or AH authentication step.  Because the\n\
    \   process of verifying an RSA digital signature consumes relatively\n   large\
    \ amounts of processing, many such packets could lead to a denial\n   of service\
    \ (DoS) attack on the receiver.\n   If the message was sent to an IPv4 or IPv6\
    \ multicast group, all group\n   members that received the packet would be under\
    \ attack\n   simultaneously.\n   This attack can be mitigated against most attackers\
    \ by encapsulating\n   ESP or AH using an RSA signature for authentication within\
    \ ESP or AH\n   using an HMAC transform for authentication.  In this case, the\
    \ HMAC\n   transform would be validated first, and as long as the attacker does\n\
    \   not possess the HMAC key no digital signatures would be evaluated on\n   the\
    \ attacker packets.  However, if the attacker does possess the HMAC\n   key (e.g.,\
    \ the attacker is a legitimate member of the group using the\n   SA), then the\
    \ DoS attack cannot be mitigated.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   An assigned number is required in the \"IPSec Authentication\n\
    \   Algorithm\" name space in the Internet Security Association and Key\n   Management\
    \ Protocol (ISAKMP) registry [ISAKMP-REG].  The mnemonic\n   should be \"SIG-RSA\"\
    .\n   An assigned number is also required in the \"IPSEC AH Transform\n   Identifiers\"\
    \ name space in the ISAKMP registry.  Its mnemonic should\n   be \"AH_RSA\".\n\
    \   A new \"IPSEC Security Association Attribute\" is required in the\n   ISAKMP\
    \ registry to pass the RSA modulus size.  The attribute class\n   should be called\
    \ \"Authentication Key Length\", and it should be a\n   Variable type.\n   A second\
    \ \"IPSEC Security Association Attribute\" is required in the\n   ISAKMP registry\
    \ to pass the RSA signature encoding type.  The\n   attribute class should be\
    \ called \"Signature Encoding Algorithm\", and\n   it should be a Basic type.\
    \  The following rules apply to define the\n   values of the attribute:\n    \
    \             Name                Value\n                 ----               \
    \ -----\n                 Reserved            0\n                 RSASSA-PKCS1-v1_5\
    \   1\n                 RSASSA-PSS          2\n   Values 3-61439 are reserved\
    \ to IANA.  New values MUST be added due to\n   a Standards Action as defined\
    \ in [RFC2434].  Values 61440-65535 are\n   for private use and may be allocated\
    \ by implementations for their own\n   purposes.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Scott Fluhrer and David McGrew provided advice regarding\
    \ applicable\n   key sizes.  Scott Fluhrer also provided advice regarding key\n\
    \   lifetimes.  Ian Jackson, Steve Kent, and Ran Canetti provided many\n   helpful\
    \ comments.  Sam Hartman, Russ Housley, and Lakshminth Dondeti\n   provided valuable\
    \ guidance in the development of this document.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [AH]           Kent, S., \"IP Authentication Header\"\
    , RFC 4302,\n                  December 2005.\n   [ESP]          Kent, S., \"\
    IP Encapsulating Security Payload (ESP)\",\n                  RFC 4303, December\
    \ 2005.\n   [ISAKMP-REG]   http://www.iana.org/assignments/isakmp-registry\n \
    \  [RFC2119]      Bradner, S., \"Key words for use in RFCs to Indicate\n     \
    \             Requirement Level\", BCP 14, RFC 2119, March 1997.\n   [RFC3552]\
    \      Rescorla, E. and B. Korver, \"Guidelines for Writing\n                \
    \  RFC Text on Security Considerations\", BCP 72, RFC\n                  3552,\
    \ July 2003.\n   [RSA]          Jonsson, J. and B. Kaliski,  \"Public-Key Cryptography\n\
    \                  Standard (PKCS) #1: RSA Cryptography Specifications\n     \
    \             Version 2.1\", RFC 3447, February 2003.\n   [SHA]          FIPS\
    \ PUB 180-2: Specifications for the Secure Hash\n                  Standard, August\
    \ 2002.  http://csrc.nist.gov/\n                  publications/fips/fips180-2/fips180-2.pdf.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [AES-GCM]      Viega, J. and D. McGrew, \"The\
    \ Use of Galois/Counter\n                  Mode (GCM) in IPsec Encapsulating Security\
    \ Payload\n                  (ESP)\", RFC 4106, June 2005.\n   [GDOI]        \
    \ Baugher, M., Weis, B., Hardjono, T., and H. Harney,\n                  \"The\
    \ Group Domain of Interpretation\", RFC 3547,\n                  December 2002.\n\
    \   [HMAC-SHA]     Madson, C. and R. Glenn, \"The Use of HMAC-SHA-1-96\n     \
    \             within ESP and AH\", RFC 2404, November 1998.\n   [IKEV2]      \
    \  Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\",\n                \
    \  RFC 4306, December 2005.\n   [RFC2434]      Narten, T. and H. Alvestrand, \"\
    Guidelines for Writing\n                  an IANA Considerations Section in RFCs\"\
    , BCP 26, RFC\n                  2434, October 1998.\n   [RSA-TR]       B. Kaliski,\
    \ \"TWIRL and RSA Key Size\", RSA Laboratories\n                  Technical Note,\
    \ http://www.rsasecurity.com/rsalabs/\n                  node.asp?id=2004, May\
    \ 6, 2003.\n   [SHA-COMMENTS] NIST Brief Comments on Recent Cryptanalytic Attacks\
    \ on\n                  Secure Hashing Functions and the Continued Security\n\
    \                  Provided by SHA-1, August, 2004.\n                  http://csrc.nist.gov/hash_standards_comments.pdf.\n\
    \   [TWIRL]        Shamir, A., and E. Tromer, \"Factoring Large Numbers\n    \
    \              with the TwIRL Device\", Work in Progress, February 9,\n      \
    \            2003.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Brian Weis\n   Cisco Systems\n   170 W. Tasman Drive,\n\
    \   San Jose, CA 95134-1706, USA\n   Phone: (408) 526-4796\n   EMail: bew@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
