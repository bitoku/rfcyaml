- title: __initial_text__
  contents:
  - "                    Introduction to Version 3 of the\n             Internet-standard\
    \ Network Management Framework\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The purpose of this document is to provide an overview of the third\n\
    \   version of the Internet-standard Management Framework, termed the\n   SNMP\
    \ version 3 Framework (SNMPv3).  This Framework is derived from\n   and builds\
    \ upon both the original Internet-standard Management\n   Framework (SNMPv1) and\
    \ the second Internet-standard Management\n   Framework (SNMPv2).\n   The architecture\
    \ is designed to be modular to allow the evolution of\n   the Framework over time.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 Introduction .....................................................2\n\
    \   2 The Internet Standard Management Framework .......................3\n  \
    \ 2.1 Basic Structure and Components .................................3\n   2.2\
    \ Architecture of the Internet Standard Management Framework .....3\n   3 The\
    \ SNMPv1 Management Framework ..................................4\n   3.1 The\
    \ SNMPv1 Data Definition Language ............................5\n   3.2 Management\
    \ Information .........................................6\n   3.3 Protocol Operations\
    \ ............................................6\n   3.4 SNMPv1 Security and Administration\
    \ .............................6\n   4 The SNMPv2 Management Framework ..................................7\n\
    \   5 The SNMPv3 Working Group .........................................8\n  \
    \ 6 SNMPv3 Framework Module Specifications ..........................10\n   6.1\
    \ Data Definition Language ......................................10\n   6.2 MIB\
    \ Modules ...................................................11\n   6.3 Protocol\
    \ Operations and Transport Mappings ....................12\n   6.4 SNMPv3 Security\
    \ and Administration ............................12\n   7 Document Summaries ..............................................13\n\
    \   7.1 Structure of Management Information ...........................13\n  \
    \ 7.1.1 Base SMI Specification ......................................13\n   7.1.2\
    \ Textual Conventions .........................................14\n   7.1.3 Conformance\
    \ Statements ......................................15\n   7.2 Protocol Operations\
    \ ...........................................15\n   7.3 Transport Mappings ............................................15\n\
    \   7.4 Protocol Instrumentation ......................................16\n  \
    \ 7.5 Architecture / Security and Administration ....................16\n   7.6\
    \ Message Processing and Dispatch (MPD) .........................16\n   7.7 SNMP\
    \ Applications .............................................17\n   7.8 User-based\
    \ Security Model (USM) ...............................17\n   7.9 View-based Access\
    \ Control (VACM) ..............................18\n   7.10 SNMPv3 Coexistence\
    \ and Transition ............................18\n   8 Security Considerations\
    \ .........................................19\n   9 Editors' Addresses ..............................................19\n\
    \   10 References .....................................................20\n  \
    \ 11 Full Copyright Statement .......................................23\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   This document is an introduction to the third version of the\n\
    \   Internet-standard Management Framework, termed the SNMP version 3\n   Management\
    \ Framework (SNMPv3) and has multiple purposes.\n   First, it describes the relationship\
    \ between the SNMP version 3\n   (SNMPv3) specifications and the specifications\
    \ of the SNMP version 1\n   (SNMPv1) Management Framework, the SNMP version 2\
    \ (SNMPv2) Management\n   Framework, and the Community-based Administrative Framework\
    \ for\n   SNMPv2.\n   Second, it provides a roadmap to the multiple documents\
    \ which contain\n   the relevant specifications.\n   Third, this document provides\
    \ a brief easy-to-read summary of the\n   contents of each of the relevant specification\
    \ documents.\n   This document is intentionally tutorial in nature and, as such,\
    \ may\n   occasionally be \"guilty\" of oversimplification.  In the event of a\n\
    \   conflict or contradiction between this document and the more detailed\n  \
    \ documents for which this document is a roadmap, the specifications in\n   the\
    \ more detailed documents shall prevail.\n   Further, the detailed documents attempt\
    \ to maintain separation\n   between the various component modules in order to\
    \ specify well-\n   defined interfaces between them.  This roadmap document, however,\n\
    \   takes a different approach and attempts to provide an integrated view\n  \
    \ of the various component modules in the interest of readability.\n"
- title: 2 The Internet Standard Management Framework
  contents:
  - "2 The Internet Standard Management Framework\n   The third version of the Internet\
    \ Standard Management Framework (the\n   SNMPv3 Framework) is derived from and\
    \ builds upon both the original\n   Internet-standard Management Framework (SNMPv1)\
    \ and the second\n   Internet-standard Management Framework (SNMPv2).\n   All\
    \ versions (SNMPv1, SNMPv2, and SNMPv3) of the Internet Standard\n   Management\
    \ Framework share the same basic structure and components.\n   Furthermore, all\
    \ versions of the specifications of the Internet\n   Standard Management Framework\
    \ follow the same architecture.\n"
- title: 2.1 Basic Structure and Components
  contents:
  - "2.1 Basic Structure and Components\n   An enterprise deploying the Internet Standard\
    \ Management Framework\n   contains four basic components:\n     * several (typically\
    \ many) managed nodes, each with an SNMP entity\n       which provides remote\
    \ access to management instrumentation\n       (traditionally called an agent);\n\
    \     * at least one SNMP entity with management applications (typically\n   \
    \    called a manager),\n     * a management protocol used to convey management\
    \ information\n       between the SNMP entities, and\n     * management information.\n\
    \   The management protocol is used to convey management information\n   between\
    \ SNMP entities such as managers and agents.\n   This basic structure is common\
    \ to all versions of the Internet\n   Standard Management Framework; i.e., SNMPv1,\
    \ SNMPv2, and SNMPv3.\n"
- title: 2.2 Architecture of the Internet Standard Management Framework
  contents:
  - "2.2 Architecture of the Internet Standard Management Framework\n   The specifications\
    \ of the Internet Standard Management Framework are\n   based on a modular architecture.\
    \  This framework is more than just a\n   protocol for moving data.  It consists\
    \ of:\n     * a data definition language,\n     * definitions of management information\
    \ (the Management\n       Information Base, or MIB),\n     * a protocol definition,\
    \ and\n     * security and administration.\n   Over time, as the Framework has\
    \ evolved from SNMPv1, through SNMPv2,\n   to SNMPv3, the definitions of each\
    \ of these architectural components\n   have become richer and more clearly defined,\
    \ but the fundamental\n   architecture has remained consistent.\n   One prime\
    \ motivator for this modularity was to enable the ongoing\n   evolution of the\
    \ Framework as is documented in RFC 1052 [14].  When\n   originally envisioned,\
    \ this capability was to be used to ease the\n   transition from SNMP-based management\
    \ of internets to management\n   based on OSI protocols.  To this end, the framework\
    \ was architected\n   with a protocol-independent data definition language and\
    \ Management\n   Information Base along with a MIB-independent protocol.  This\n\
    \   separation was designed to allow the SNMP-based protocol to be\n   replaced\
    \ without requiring the management information to be redefined\n   or reinstrumented.\
    \  History has shown that the selection of this\n   architecture was the right\
    \ decision for the wrong reason -- it turned\n   out that this architecture has\
    \ eased the transition from SNMPv1 to\n   SNMPv2 and from SNMPv2 to SNMPv3 rather\
    \ than easing the transition\n   away from management based on the Simple Network\
    \ Management Protocol.\n   The SNMPv3 Framework builds and extends these architectural\n\
    \   principles by:\n     * building on these four basic architectural components,\
    \ in some\n       cases incorporating them from the SNMPv2 Framework by reference,\n\
    \       and\n     * by using these same layering principles in the definition\
    \ of new\n       capabilities in the security and administration portion of the\n\
    \       architecture.\n   Those who are familiar with the architecture of the\
    \ SNMPv1 Management\n   Framework and the SNMPv2 Management Framework will find\
    \ many familiar\n   concepts in the architecture of the SNMPv3 Management Framework.\n\
    \   However, in some cases, the terminology may be somewhat different.\n"
- title: 3 The SNMPv1 Management Framework
  contents:
  - "3 The SNMPv1 Management Framework\n   The original Internet-standard Network\
    \ Management Framework (SNMPv1)\n   is defined in the following documents:\n \
    \    * STD 16, RFC 1155 [1] which defines the Structure of Management\n      \
    \ Information (SMI), the mechanisms used for describing and naming\n       objects\
    \ for the purpose of management.\n     * STD 16, RFC 1212 [2] which defines a\
    \ more concise description\n       mechanism for describing and naming management\
    \ information objects,\n       but which is wholly consistent with the SMI.\n\
    \     * STD 15, RFC 1157 [3] which defines the Simple Network Management\n   \
    \    Protocol (SNMP), the protocol used for network access to managed\n      \
    \ objects and event notification. Note this document also defines an\n       initial\
    \ set of event notifications.\n   Additionally, two documents are generally considered\
    \ to be companions\n   to these three:\n     * STD 17, RFC 1213 [13] which contains\
    \ definitions for the base\n       set of management information\n     * RFC 1215\
    \ [25] defines a concise description mechanism for\n       defining event notifications,\
    \ which are called traps in the SNMPv1\n       protocol. It also specifies the\
    \ generic traps from RFC 1157 in the\n       concise notation.\n   These documents\
    \ describe the four parts of the first version of the\n   SNMP Framework.\n"
- title: 3.1 The SNMPv1 Data Definition Language
  contents:
  - "3.1 The SNMPv1 Data Definition Language\n   The first two and the last document\
    \ describe the SNMPv1 data\n   definition language.   Note that due to the initial\
    \ requirement that\n   the SMI be protocol-independent, the first two SMI documents\
    \ do not\n   provide a means for defining event notifications (traps).  Instead,\n\
    \   the SNMP protocol document defines a few standardized event\n   notifications\
    \ (generic traps) and provides a means for additional\n   event notifications\
    \ to be defined. The last document specifies a\n   straight-forward approach towards\
    \ defining event notifications used\n   with the SNMPv1 protocol. At the time\
    \ that it was written, use of\n   traps in the Internet-standard network management\
    \ framework was\n   controversial.  As such, RFC 1215 was put forward with the\
    \ status of\n   \"Informational\", which was never updated because it was believed\
    \ that\n   the second version of the SNMP Framework would replace the first\n\
    \   version.  Note that the SNMPv1 data definition language is sometimes\n   referred\
    \ to as SMIv1.\n"
- title: 3.2 Management Information
  contents:
  - "3.2 Management Information\n   The data definition language described in the\
    \ first two documents was\n   first used to define the now-historic MIB-I as specified\
    \ in RFC 1066\n   [12], and was subsequently used to define MIB-II as specified\
    \ in RFC\n   1213 [13].\n   Later, after the publication of MIB-II, a different\
    \ approach to\n   management information definition was taken from the earlier\
    \ approach\n   of having a single committee staffed by generalists work on a single\n\
    \   document to define the Internet-standard MIB.  Rather, many mini-MIB\n   documents\
    \ were produced in a parallel and distributed fashion by\n   groups chartered\
    \ to produce a specification for a focused portion of\n   the Internet-standard\
    \ MIB and staffed by personnel with expertise in\n   those particular areas ranging\
    \ from various aspects of network\n   management, to system management, and application\
    \ management.\n"
- title: 3.3 Protocol Operations
  contents:
  - "3.3 Protocol Operations\n   The third document, STD 15, describes the SNMPv1\
    \ protocol operations\n   performed by protocol data units (PDUs) on lists of\
    \ variable bindings\n   and describes the format of SNMPv1 messages. The operators\
    \ defined by\n   SNMPv1 are:  get, get-next, get-response, set-request, and trap.\n\
    \   Typical layering of SNMP on a connectionless transport service is\n   also\
    \ defined.\n"
- title: 3.4 SNMPv1 Security and Administration
  contents:
  - "3.4 SNMPv1 Security and Administration\n   STD 15 also describes an approach\
    \ to security and administration.\n   Many of these concepts are carried forward\
    \ and some, particularly\n   security, are extended by the SNMPv3 Framework.\n\
    \   The SNMPv1 Framework describes the encapsulation of SNMPv1 PDUs in\n   SNMP\
    \ messages between SNMP entities and distinguishes between\n   application entities\
    \ and protocol entities.  In SNMPv3, these are\n   renamed applications and engines,\
    \ respectively.\n   The SNMPv1 Framework also introduces the concept of an authentication\n\
    \   service supporting one or more authentication schemes.  In addition\n   to\
    \ authentication, SNMPv3 defines the additional security capability\n   referred\
    \ to as privacy.  (Note: some literature from the security\n   community would\
    \ describe SNMPv3 security capabilities as providing\n   data integrity, source\
    \ authenticity, and confidentiality.)  The\n   modular nature of the SNMPv3 Framework\
    \ permits both changes and\n   additions to the security capabilities.\n   Finally,\
    \ the SNMPv1 Framework introduces access control based on a\n   concept called\
    \ an SNMP MIB view.  The SNMPv3 Framework specifies a\n   fundamentally similar\
    \ concept called view-based access control.  With\n   this capability, SNMPv3\
    \ provides the means for controlling access to\n   information on managed devices.\n\
    \   However, while the SNMPv1 Framework anticipated the definition of\n   multiple\
    \ authentication schemes, it did not define any such schemes\n   other than a\
    \ trivial authentication scheme based on community\n   strings.  This was a known\
    \ fundamental weakness in the SNMPv1\n   Framework but it was thought at that\
    \ time that the definition of\n   commercial grade security might be contentious\
    \ in its design and\n   difficult to get approved because \"security\" means many\
    \ different\n   things to different people.  To that end, and because some users\
    \ do\n   not require strong authentication, the SNMPv1 architected an\n   authentication\
    \ service as a separate block to be defined \"later\" and\n   the SNMPv3 Framework\
    \ provides an architecture for use within that\n   block as well as a definition\
    \ for its subsystems.\n"
- title: 4 The SNMPv2 Management Framework
  contents:
  - "4 The SNMPv2 Management Framework\n   The SNMPv2 Management Framework is fully\
    \ described in [4-9] and\n   coexistence and transition issues relating to SNMPv1\
    \ and SNMPv2 are\n   discussed in [10].\n   SNMPv2 provides several advantages\
    \ over SNMPv1, including:\n     * expanded data types (e.g., 64 bit counter)\n\
    \     * improved efficiency and performance (get-bulk operator)\n     * confirmed\
    \ event notification (inform operator)\n     * richer error handling (errors and\
    \ exceptions)\n     * improved sets, especially row creation and deletion\n  \
    \   * fine tuning of the data definition language\n   However, the SNMPv2 Framework,\
    \ as described in these documents, is\n   incomplete in that it does not meet\
    \ the original design goals of the\n   SNMPv2 project.  The unmet goals included\
    \ provision of security and\n   administration delivering so-called \"commercial\
    \ grade\" security with\n     * authentication:  origin identification, message\
    \ integrity,\n       and some aspects of replay protection;\n     * privacy: \
    \ confidentiality;\n     * authorization and access control; and\n     * suitable\
    \ remote configuration and administration capabilities\n       for these features.\n\
    \   The SNMPv3 Management Framework, as described in this document and\n   the\
    \ companion documents, addresses these significant deficiencies.\n"
- title: 5 The SNMPv3 Working Group
  contents:
  - "5 The SNMPv3 Working Group\n   This document, and its companion documents, were\
    \ produced by the\n   SNMPv3 Working Group of the Internet Engineering Task Force\
    \ (IETF).\n   The SNMPv3 Working Group was chartered to prepare recommendations\
    \ for\n   the next generation of SNMP.  The goal of the Working Group was to\n\
    \   produce the necessary set of documents that provide a single standard\n  \
    \ for the next generation of core SNMP functions.  The single, most\n   critical\
    \ need in the next generation is a definition of security and\n   administration\
    \ that makes SNMP-based management transactions secure\n   in a way which is useful\
    \ for users who wish to use SNMPv3 to manage\n   networks, the systems that make\
    \ up those networks, and the\n   applications which reside on those systems, including\
    \ manager-to-\n   agent, agent-to-manager, and manager-to-manager transactions.\n\
    \   In the several years prior to the chartering of the Working Group,\n   there\
    \ were a number of activities aimed at incorporating security and\n   other improvements\
    \ to SNMP.  These efforts included:\n     * \"SNMP Security\" circa 1991-1992\
    \ [RFC 1351 - RFC 1353],\n     * \"SMP\" circa 1992-1993,\n     * \"The Party-based\
    \ SNMPv2\" circa 1993-1995 [RFC 1441 - RFC 1452].\n   Each of these efforts incorporated\
    \ commercial grade, industrial\n   strength security including authentication,\
    \ privacy, authorization,\n   view-based access control, and administration, including\
    \ remote\n   configuration.\n   These efforts fed the development of the SNMPv2\
    \ Management Framework\n   as described in RFCs 1902 - 1908.  However, the Framework\
    \ described\n   in those RFCs had no standards-based security and administrative\n\
    \   framework of its own; rather, it was associated with multiple\n   security\
    \ and administrative frameworks, including:\n     * \"The Community-based SNMPv2\"\
    \ (SNMPv2c) [RFC 1901],\n     * \"SNMPv2u\" [RFCs 1909 - 1910] and\n     * \"\
    SNMPv2*\".\n   SNMPv2c had the endorsement of the IETF but no security and\n \
    \  administration whereas both SNMPv2u and SNMPv2* had security but\n   lacked\
    \ the endorsement of the IETF.\n   The SNMPv3 Working Group was chartered to produce\
    \ a single set of\n   specifications for the next generation of SNMP, based upon\
    \ a\n   convergence of the concepts and technical elements of SNMPv2u and\n  \
    \ SNMPv2*, as was suggested by an advisory team which was formed to\n   provide\
    \ a single recommended approach for SNMP evolution.\n   In so doing, the Working\
    \ Group charter defined the following\n   objectives:\n     * accommodate the\
    \ wide range of operational environments with\n       differing management demands;\n\
    \     * facilitate the need to transition from previous, multiple\n       protocols\
    \ to SNMPv3;\n     * facilitate the ease of setup and maintenance activities.\n\
    \   In the initial work of the SNMPv3 Working Group, the group focused on\n  \
    \ security and administration, including\n     * authentication and privacy,\n\
    \     * authorization and view-based access control, and\n     * standards-based\
    \ remote configuration of the above.\n   The SNMPv3 Working Group did not \"reinvent\
    \ the wheel,\" but reused the\n   SNMPv2 Draft Standard documents, i.e., RFCs\
    \ 1902 through 1908 for\n   those portions of the design that were outside the\
    \ focused scope.\n   Rather, the primary contributors to the SNMPv3 Working Group,\
    \ and the\n   Working Group in general, devoted their considerable efforts to\n\
    \   addressing the missing link -- security and administration -- and in\n   the\
    \ process made invaluable contributions to the state-of-the-art of\n   management.\n\
    \   They produced a design based on a modular architecture with\n   evolutionary\
    \ capabilities with emphasis on layering.  As a result,\n   SNMPv3 can be thought\
    \ of as SNMPv2 with additional security and\n   administration capabilities.\n\
    \   In doing so, the Working Group achieved the goal of producing a\n   single\
    \ specification which has not only the endorsement of the IETF\n   but also has\
    \ security and administration.\n"
- title: 6 SNMPv3 Framework Module Specifications
  contents:
  - "6 SNMPv3 Framework Module Specifications\n   The specification of the SNMPv3\
    \ Management Framework is partitioned\n   in a modular fashion among several documents.\
    \  It is the intention of\n   the SNMPv3 Working Group that, with proper care,\
    \ any or all of the\n   individual documents can be revised, upgraded, or replaced\
    \ as\n   requirements change, new understandings are obtained, and new\n   technologies\
    \ become available.\n   Whenever feasible, the initial document set which defines\
    \ the SNMPv3\n   Management Framework leverages prior investments defining and\n\
    \   implementing the SNMPv2 Management Framework by incorporating by\n   reference\
    \ each of the specifications of the SNMPv2 Management\n   Framework.\n   The SNMPv3\
    \ Framework augments those specifications with\n   specifications for security\
    \ and administration for SNMPv3.\n   The documents which specify the SNMPv3 Management\
    \ Framework follow\n   the same architecture as those of the prior versions and\
    \ can be\n   organized for expository purposes into four main categories as\n\
    \   follows:\n     * the data definition language,\n     * Management Information\
    \ Base (MIB) modules,\n     * protocol operations, and\n     * security and administration.\n\
    \   The first three sets of documents are incorporated from SNMPv2.  The\n   fourth\
    \ set of documents are new to SNMPv3, but, as described\n   previously, build\
    \ on significant prior related works.\n"
- title: 6.1 Data Definition Language
  contents:
  - "6.1 Data Definition Language\n   The specifications of the data definition language\
    \ includes STD 58,\n   RFC 2578, \"Structure of Management Information Version\
    \ 2 (SMIv2)\"\n   [26], and related specifications.  These documents are updates\
    \ of\n   RFCs 1902 - 1904 [4-6] which have evolved independently from the\n  \
    \ other parts of the framework and were republished as STD 58, RFCs\n   2578 -\
    \ 2580 [26-28] when promoted from Draft Standard.\n   The Structure of Management\
    \ Information (SMIv2) defines fundamental\n   data types, an object model, and\
    \ the rules for writing and revising\n   MIB modules.  Related specifications\
    \ include STD 58, RFCs 2579, 2580.\n   The updated data definition language is\
    \ sometimes referred to as\n   SMIv2.\n   STD 58, RFC 2579, \"Textual Conventions\
    \ for SMIv2\" [27], defines an\n   initial set of shorthand abbreviations which\
    \ are available for use\n   within all MIB modules for the convenience of human\
    \ readers and\n   writers.\n   STD 58, RFC 2580, \"Conformance Statements for\
    \ SMIv2\" [28], defines\n   the format for compliance statements which are used\
    \ for describing\n   requirements for agent implementations and capability statements\n\
    \   which can be used to document the characteristics of particular\n   implementations.\n"
- title: 6.2 MIB Modules
  contents:
  - "6.2 MIB Modules\n   MIB modules usually contain object definitions, may contain\n\
    \   definitions of event notifications, and sometimes include compliance\n   statements\
    \ specified in terms of appropriate object and event\n   notification groups.\
    \  As such, MIB modules define the management\n   information maintained by the\
    \ instrumentation in managed nodes, made\n   remotely accessible by management\
    \ agents, conveyed by the management\n   protocol, and manipulated by management\
    \ applications.\n   MIB modules are defined according the rules defined in the\
    \ documents\n   which specify the data definition language, principally the SMI\
    \ as\n   supplemented by the related specifications.\n   There is a large and\
    \ growing number of standards-based MIB modules,\n   as defined in the periodically\
    \ updated list of standard protocols\n   [STD 1, RFC 2400].  As of this writing,\
    \ there are nearly 100\n   standards-based MIB modules with a total number of\
    \ defined objects\n   approaching 10,000.  In addition, there is an even larger\
    \ and growing\n   number of enterprise-specific MIB modules defined unilaterally\
    \ by\n   various vendors, research groups, consortia, and the like resulting\n\
    \   in an unknown and virtually uncountable number of defined objects.\n   In\
    \ general, management information defined in any MIB module,\n   regardless of\
    \ the version of the data definition language used, can\n   be used with any version\
    \ of the protocol.  For example, MIB modules\n   defined in terms of the SNMPv1\
    \ SMI (SMIv1) are compatible with the\n   SNMPv3 Management Framework and can\
    \ be conveyed by the protocols\n   specified therein.  Furthermore, MIB modules\
    \ defined in terms of the\n   SNMPv2 SMI (SMIv2) are compatible with SNMPv1 protocol\
    \ operations and\n   can be conveyed by it.  However, there is one noteworthy\
    \ exception:\n   the Counter64 datatype which can be defined in a MIB module defined\n\
    \   in SMIv2 format but which cannot be conveyed by an SNMPv1 protocol\n   engine.\n"
- title: 6.3 Protocol Operations and Transport Mappings
  contents:
  - "6.3 Protocol Operations and Transport Mappings\n   The specifications for the\
    \ protocol operations and transport mappings\n   of the SNMPv3 Framework are incorporated\
    \ by reference to the two\n   SNMPv2 Framework documents.\n   The specification\
    \ for protocol operations is found in RFC 1905,\n   \"Protocol Operations for\
    \ Version 2 of the Simple Network Management\n   Protocol (SNMPv2)\" [7].  The\
    \ SNMPv3 Framework is designed to allow\n   various portions of the architecture\
    \ to evolve independently.  For\n   example, it might be possible for a new specification\
    \ of protocol\n   operations to be defined within the Framework to allow for additional\n\
    \   protocol operations.\n   The specification of transport mappings is found\
    \ in RFC 1906,\n   \"Transport Mappings for Version 2 of the Simple Network Management\n\
    \   Protocol (SNMPv2)\" [8].\n"
- title: 6.4 SNMPv3 Security and Administration
  contents:
  - "6.4 SNMPv3 Security and Administration\n   The SNMPv3 document series defined\
    \ by the SNMPv3 Working Group\n   consists of seven documents at this time:\n\
    \      RFC 2570, \"Introduction to Version 3 of the Internet-standard\n      Network\
    \ Management Framework\", which is this document.\n      RFC 2571, \"An Architecture\
    \ for Describing SNMP Management\n      Frameworks\" [15], describes the overall\
    \ architecture with special\n      emphasis on the architecture for security and\
    \ administration.\n      RFC 2572, \"Message Processing and Dispatching for the\
    \ Simple\n      Network Management Protocol (SNMP)\" [16], describes the possibly\n\
    \      multiple message processing models and the dispatcher portion that\n  \
    \    can be a part of an SNMP protocol engine.\n      RFC 2573, \"SNMP Applications\"\
    \ [17], describes the five types of\n      applications that can be associated\
    \ with an SNMPv3 engine and\n      their elements of procedure.\n      RFC 2574,\
    \ \"The User-Based Security Model for Version 3 of the\n      Simple Network Management\
    \ Protocol (SNMPv3)\" [18], describes the\n      threats, mechanisms, protocols,\
    \ and supporting data used to\n      provide SNMP message-level security.\n  \
    \    RFC 2575, \"View-based Access Control Model for the Simple Network\n    \
    \  Management Protocol (SNMP)\" [19], describes how view-based access\n      control\
    \ can be applied within command responder and notification\n      originator applications.\n\
    \      The Work in Progress, \"Coexistence between Version 1, Version 2,\n   \
    \   and Version 3 of the Internet-standard Network Management\n      Framework\"\
    \ [20], describes coexistence between the SNMPv3\n      Management Framework,\
    \ the SNMPv2 Management Framework, and the\n      original SNMPv1 Management Framework.\n"
- title: 7 Document Summaries
  contents:
  - "7 Document Summaries\n   The following sections provide brief summaries of each\
    \ document with\n   slightly more detail than is provided in the overviews above.\n"
- title: 7.1 Structure of Management Information
  contents:
  - "7.1 Structure of Management Information\n   Management information is viewed\
    \ as a collection of managed objects,\n   residing in a virtual information store,\
    \ termed the Management\n   Information Base (MIB).  Collections of related objects\
    \ are defined\n   in MIB modules.  These modules are written in the SNMP MIB module\n\
    \   language, which contains elements of OSI's Abstract Syntax Notation\n   One\
    \ (ASN.1) [11] language.   STD 58, RFCs 2578, 2579, 2580, together\n   define\
    \ the MIB module language, specify the base data types for\n   objects, specify\
    \ a core set of short-hand specifications for data\n   types called textual conventions,\
    \ and specify a few administrative\n   assignments of object identifier (OID)\
    \ values.\n   The SMI is divided into three parts:  module definitions, object\n\
    \   definitions, and notification definitions.\n   (1)  Module definitions are\
    \ used when describing information modules.\n        An ASN.1 macro, MODULE-IDENTITY,\
    \ is used to convey concisely the\n        semantics of an information module.\n\
    \   (2)  Object definitions are used when describing managed objects.  An\n  \
    \      ASN.1 macro, OBJECT-TYPE, is used to convey concisely the syntax\n    \
    \    and semantics of a managed object.\n   (3)  Notification definitions are\
    \ used when describing unsolicited\n        transmissions of management information.\
    \  An ASN.1 macro,\n        NOTIFICATION-TYPE, is used to convey concisely the\
    \ syntax and\n        semantics of a notification.\n"
- title: 7.1.1 Base SMI Specification
  contents:
  - "7.1.1 Base SMI Specification\n   STD 58, RFC 2578 specifies the base data types\
    \ for the MIB module\n   language, which include: Integer32, enumerated integers,\
    \ Unsigned32,\n   Gauge32, Counter32,  Counter64, TimeTicks, INTEGER, OCTET STRING,\n\
    \   OBJECT IDENTIFIER, IpAddress, Opaque, and BITS. It also assigns\n   values\
    \ to several object identifiers.  STD 58, RFC 2578 further\n   defines the following\
    \ constructs of the MIB module language:\n     * IMPORTS to allow the specification\
    \ of items that are used\n       in a MIB module, but defined in another MIB module.\n\
    \     * MODULE-IDENTITY to specify for a MIB module a description\n       and\
    \ administrative information such as contact and revision\n       history.\n \
    \    * OBJECT-IDENTITY and OID value assignments to specify a\n       an OID value.\n\
    \     * OBJECT-TYPE to specify the data type, status, and the semantics\n    \
    \   of managed objects.\n     * SEQUENCE type assignment to list the columnar\
    \ objects in\n       a table.\n     * NOTIFICATION-TYPE construct to specify an\
    \ event notification.\n"
- title: 7.1.2 Textual Conventions
  contents:
  - "7.1.2 Textual Conventions\n   When designing a MIB module, it is often useful\
    \ to specify in a\n   short-hand way the semantics for a set of objects with similar\n\
    \   behavior.  This is done by defining a new data type using a base data\n  \
    \ type specified in the SMI.  Each new type has a different name, and\n   specifies\
    \ a base type with more restrictive semantics.  These newly\n   defined types\
    \ are termed textual conventions, and are used for the\n   convenience of humans\
    \ reading a MIB module and potentially by\n   \"intelligent\" management applications.\
    \  It is the purpose of STD 58,\n   RFC 2579, Textual Conventions for SMIv2 [27],\
    \ to define the\n   construct, TEXTUAL-CONVENTION, of the MIB module language\
    \ used to\n   define such new types and to specify an initial set of textual\n\
    \   conventions available to all MIB modules.\n"
- title: 7.1.3 Conformance Statements
  contents:
  - "7.1.3 Conformance Statements\n   It may be useful to define the acceptable lower-bounds\
    \ of\n   implementation, along with the actual level of implementation\n   achieved.\
    \  It is the purpose of STD 58, RFC 2580, Conformance\n   Statements for SMIv2\
    \ [28], to define the constructs of the MIB module\n   language used for these\
    \ purposes.  There are two kinds of constructs:\n   (1)  Compliance statements\
    \ are used when describing requirements for\n        agents with respect to object\
    \ and event notification\n        definitions.  The MODULE-COMPLIANCE construct\
    \ is used to convey\n        concisely such requirements.\n   (2)  Capability\
    \ statements are used when describing capabilities of\n        agents with respect\
    \ to object and event notification\n        definitions.  The AGENT-CAPABILITIES\
    \ construct is used to convey\n        concisely such capabilities.\n   Finally,\
    \ collections of related objects and collections of related\n   event notifications\
    \ are grouped together to form a unit of\n   conformance.  The OBJECT-GROUP construct\
    \ is used to convey concisely\n   the objects in and the semantics of an object\
    \ group. The\n   NOTIFICATION-GROUP construct is used to convey concisely the\
    \ event\n   notifications in and the semantics of an event notification group.\n"
- title: 7.2 Protocol Operations
  contents:
  - "7.2 Protocol Operations\n   The management protocol provides for the exchange\
    \ of messages which\n   convey management information between the agents and the\
    \ management\n   stations.  The form of these messages is a message \"wrapper\"\
    \ which\n   encapsulates a Protocol Data Unit (PDU).\n   It is the purpose of\
    \ RFC 1905, Protocol Operations for SNMPv2 [7], to\n   define the operations of\
    \ the protocol with respect to the sending and\n   receiving of the PDUs.\n"
- title: 7.3 Transport Mappings
  contents:
  - "7.3 Transport Mappings\n   SNMP Messages may be used over a variety of protocol\
    \ suites.  It is\n   the purpose of RFC 1906, Transport Mappings for SNMPv2 [8],\
    \ to define\n   how SNMP messages maps onto an initial set of transport domains.\n\
    \   Other mappings may be defined in the future.\n   Although several mappings\
    \ are defined, the mapping onto UDP is the\n   preferred mapping.  As such, to\
    \ provide for the greatest level of\n   interoperability, systems which choose\
    \ to deploy other mappings\n   should also provide for proxy service to the UDP\
    \ mapping.\n"
- title: 7.4 Protocol Instrumentation
  contents:
  - "7.4 Protocol Instrumentation\n   It is the purpose of RFC 1907, the Management\
    \ Information Base for\n   SNMPv2 document [9] to define managed objects which\
    \ describe the\n   behavior of an SNMPv2 entity.\n"
- title: 7.5 Architecture / Security and Administration
  contents:
  - "7.5 Architecture / Security and Administration\n   It is the purpose of RFC 2571,\
    \ \"An Architecture for Describing SNMP\n   Management Frameworks\" [15], to define\
    \ an architecture for specifying\n   SNMP Management Frameworks.  While addressing\
    \ general architectural\n   issues, it focuses on aspects related to security\
    \ and administration.\n   It defines a number of terms used throughout the SNMPv3\
    \ Management\n   Framework and, in so doing, clarifies and extends the naming\
    \ of\n     * engines and applications,\n     * entities (service providers such\
    \ as the engines in agents\n       and managers),\n     * identities (service\
    \ users), and\n     * management information, including support for multiple\n\
    \       logical contexts.\n   The document contains a small MIB module which is\
    \ implemented by all\n   authoritative SNMPv3 protocol engines.\n"
- title: 7.6 Message Processing and Dispatch (MPD)
  contents:
  - "7.6 Message Processing and Dispatch (MPD)\n   RFC 2572, \"Message Processing\
    \ and Dispatching for the Simple Network\n   Management Protocol (SNMP)\" [16],\
    \ describes the Message Processing\n   and Dispatching for SNMP messages within\
    \ the SNMP architecture.  It\n   defines the procedures for dispatching potentially\
    \ multiple versions\n   of SNMP messages to the proper SNMP Message Processing\
    \ Models, and\n   for dispatching PDUs to SNMP applications.  This document also\n\
    \   describes one Message Processing Model - the SNMPv3 Message\n   Processing\
    \ Model.\n   It is expected that an SNMPv3 protocol engine MUST support at least\n\
    \   one Message Processing Model.  An SNMPv3 protocol engine MAY support\n   more\
    \ than one, for example in a multi-lingual system which provides\n   simultaneous\
    \ support of SNMPv3 and SNMPv1 and/or SNMPv2c.\n"
- title: 7.7 SNMP Applications
  contents:
  - "7.7 SNMP Applications\n   It is the purpose of RFC 2573, \"SNMP Applications\"\
    \ to describe the\n   five types of applications which can be associated with\
    \ an SNMP\n   engine.  They are: Command Generators, Command Responders,\n   Notification\
    \ Originators, Notification Receivers, and Proxy\n   Forwarders.\n   The document\
    \ also defines MIB modules for specifying targets of\n   management operations\
    \ (including notifications), for notification\n   filtering, and for proxy forwarding.\n"
- title: 7.8 User-based Security Model (USM)
  contents:
  - "7.8 User-based Security Model (USM)\n   RFC 2574, the \"User-based Security Model\
    \ (USM) for version 3 of the\n   Simple Network Management Protocol (SNMPv3)\"\
    \ describes the User-based\n   Security Model for SNMPv3.  It defines the Elements\
    \ of Procedure for\n   providing SNMP message-level security.\n   The document\
    \ describes the two primary and two secondary threats\n   which are defended against\
    \ by the User-based Security Model.  They\n   are:  modification of information,\
    \ masquerade, message stream\n   modification, and disclosure.\n   The USM utilizes\
    \ MD5 [21] and the Secure Hash Algorithm [22] as keyed\n   hashing algorithms\
    \ [23] for digest computation to provide data\n   integrity\n     * to directly\
    \ protect against data modification attacks,\n     * to indirectly provide data\
    \ origin authentication, and\n     * to defend against masquerade attacks.\n \
    \  The USM uses loosely synchronized monotonically increasing time\n   indicators\
    \ to defend against certain message stream modification\n   attacks.  Automatic\
    \ clock synchronization mechanisms based on the\n   protocol are specified without\
    \ dependence on third-party time sources\n   and concomitant security considerations.\n\
    \   The USM uses the Data Encryption Standard (DES) [24] in the cipher\n   block\
    \ chaining mode (CBC) if disclosure protection is desired.\n   Support for DES\
    \ in the USM is optional, primarily because export and\n   usage restrictions\
    \ in many countries make it difficult to export and\n   use products which include\
    \ cryptographic technology.\n   The document also includes a MIB suitable for\
    \ remotely monitoring and\n   managing the configuration parameters for the USM,\
    \ including key\n   distribution and key management.\n   An entity may provide\
    \ simultaneous support for multiple security\n   models as well as multiple authentication\
    \ and privacy protocols.  All\n   of the protocols used by the USM are based on\
    \ pre-placed keys, i.e.,\n   private key mechanisms.  The SNMPv3 architecture\
    \ permits the use of\n   asymmetric mechanisms and protocols (commonly called\
    \ \"public key\n   cryptography\") but as of this writing, no such SNMPv3 security\
    \ models\n   utilizing public key cryptography have been published.\n"
- title: 7.9 View-based Access Control (VACM)
  contents:
  - "7.9 View-based Access Control (VACM)\n   The purpose of RFC 2575, the \"View-based\
    \ Access Control Model (VACM)\n   for the Simple Network Management Protocol (SNMP)\"\
    \ is to describe the\n   View-based Access Control Model for use in the SNMP architecture.\n\
    \   The VACM can simultaneously be associated in a single engine\n   implementation\
    \ with multiple Message Processing Models and multiple\n   Security Models.\n\
    \   It is architecturally possible to have multiple, different, Access\n   Control\
    \ Models active and present simultaneously in a single engine\n   implementation,\
    \ but this is expected to be *_very_* rare in practice\n   and *_far_* less common\
    \ than simultaneous support for multiple\n   Message Processing Models and/or\
    \ multiple Security Models.\n"
- title: 7.10 SNMPv3 Coexistence and Transition
  contents:
  - "7.10 SNMPv3 Coexistence and Transition\n   The purpose of \"Coexistence between\
    \ Version 1, Version 2, and Version\n   3 of the Internet-standard Network Management\
    \ Framework\" is to\n   describe coexistence between the SNMPv3 Management Framework,\
    \ the\n   SNMPv2 Management Framework, and the original SNMPv1 Management\n  \
    \ Framework.  In particular, this document describes four aspects of\n   coexistence:\n\
    \     *  Conversion of MIB documents from SMIv1 to SMIv2 format\n     *  Mapping\
    \ of notification parameters\n     *  Approaches to coexistence between entities\
    \ which support\n        the various versions of SNMP in a multi-lingual network,\
    \ in\n        particular the processing of protocol operations in\n        multi-lingual\
    \ implementations, as well as behavior of\n        proxy implementations\n   \
    \  *  The SNMPv1 Message Processing Model and Community-Based\n        Security\
    \ Model, which provides mechanisms for adapting\n        SNMPv1 and SNMPv2c into\
    \ the View-Based Access Control Model\n        (VACM) [19]\n"
- title: 8 Security Considerations
  contents:
  - "8 Security Considerations\n   As this document is primarily a roadmap document,\
    \ it introduces no\n   new security considerations.  The reader is referred to\
    \ the relevant\n   sections of each of the referenced documents for information\
    \ about\n   security considerations.\n"
- title: 9 Editors' Addresses
  contents:
  - "9 Editors' Addresses\n   Jeffrey Case\n   SNMP Research, Inc.\n   3001 Kimberlin\
    \ Heights Road\n   Knoxville, TN 37920-9716\n   USA\n   Phone:  +1 423 573 1434\n\
    \   EMail:  case@snmp.com\n   Russ Mundy\n   TIS Labs at Network Associates\n\
    \   3060 Washington Rd\n   Glenwood, MD 21738\n   USA\n   Phone:  +1 301 854 6889\n\
    \   EMail:  mundy@tislabs.com\n   David Partain\n   Ericsson Radio Systems\n \
    \  Research and Innovation\n   P.O. Box 1248\n   SE-581 12 Linkoping\n   Sweden\n\
    \   Phone:  +46 13 28 41 44\n   EMail:  David.Partain@ericsson.com\n   Bob Stewart\n\
    \   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA 95134-1706\n\
    \   U.S.A.\n   Phone:  +1 603 654 6923\n   EMail:  bstewart@cisco.com\n"
- title: 10 References
  contents:
  - "10 References\n   [1]  Rose, M. and K. McCloghrie, \"Structure and Identification\
    \ of\n        Management Information for TCP/IP-based internets\", STD 16, RFC\n\
    \        1155, May 1990.\n   [2]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD 16,\n        RFC 1212, March 1991.\n   [3]  Case, J., Fedor, M., Schoffstall,\
    \ M. and J. Davin, \"Simple\n        Network Management Protocol\", STD 15, RFC\
    \ 1157, May 1990.\n   [4]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose,\
    \ M., and S.\n        Waldbusser, \"Structure of Management Information for Version\
    \ 2\n        of the Simple Network Management Protocol (SNMPv2)\", RFC 1902,\n\
    \        January 1996.\n   [5]  SNMPv2 Working Group, Case, J., McCloghrie, K.,\
    \ Rose, M., and S.\n        Waldbusser, \"Textual Conventions for Version 2 of\
    \ the Simple\n        Network Management Protocol (SNMPv2)\", RFC 1903, January\
    \ 1996.\n   [6]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and\
    \ S.\n        Waldbusser, \"Conformance Statements for Version 2 of the Simple\n\
    \        Network Management Protocol (SNMPv2)\", RFC 1904, January 1996.\n   [7]\
    \  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M. and S.\n        Waldbusser,\
    \ \"Protocol Operations for Version 2 of the Simple\n        Network Management\
    \ Protocol (SNMPv2)\", RFC 1905, January 1996.\n   [8]  SNMPv2 Working Group,\
    \ Case, J., McCloghrie, K., Rose, M. and S.\n        Waldbusser, \"Transport Mappings\
    \ for Version 2 of the Simple\n        Network Management Protocol (SNMPv2)\"\
    , RFC 1906, January 1996.\n   [9]  SNMPv2 Working Group, Case, J., McCloghrie,\
    \ K., Rose, M. and S.\n        Waldbusser, \"Management Information Base for Version\
    \ 2 of the\n        Simple Network Management Protocol (SNMPv2)\", RFC 1907, January\n\
    \        1996.\n   [10] SNMPv2 Working Group, Case, J., McCloghrie, K., Rose,\
    \ M. and S.\n        Waldbusser, \"Coexistence between Version 1 and Version 2\
    \ of the\n        Internet-standard Network Management Framework\", RFC 1908,\n\
    \        January 1996.\n   [11] Information processing systems - Open Systems\
    \ Interconnection -\n        Specification of Abstract Syntax Notation One (ASN.1),\n\
    \        International Organization for Standardization.  International\n    \
    \    Standard 8824, (December, 1987).\n   [12] McCloghrie, K. and M. Rose, \"\
    Management Information Base for\n        Network Management of TCP/IP-based Internets\"\
    , RFC 1066, August\n        1988.\n   [13] McCloghrie, K. and M. Rose, \"Management\
    \ Information Base for\n        Network Management of TCP/IP-based internets:\
    \  MIB-II, STD 17,\n        RFC 1213, March 1991.\n   [14] Cerf, V., \"IAB Recommendations\
    \ for the Development of Internet\n        Network Management Standards\", RFC\
    \ 1052, April 1988.\n   [15] Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture\
    \ for\n        Describing SNMP Management Frameworks\", RFC 2571, April 1999.\n\
    \   [16] Case, J., Harrington, D., Presuhn, R. and B. Wijnen, \"Message\n    \
    \    Processing and Dispatching for the Simple Network Management\n        Protocol\
    \ (SNMP)\", RFC 2572, April 1999.\n   [17] Levi, D., Meyer, P. and B. Stewart,\
    \ \"SNMP Applications\", RFC\n        2573, April 1999.\n   [18] Blumenthal, U.\
    \ and B. Wijnen, \"The User-Based Security Model for\n        Version 3 of the\
    \ Simple Network Management Protocol (SNMPv3)\",\n        RFC 2574, April 1999.\n\
    \   [19] Wijnen, B., Presuhn, R. and K. McCloghrie, \"View-based Access\n    \
    \    Control Model for the Simple Network Management Protocol\n        (SNMP)\"\
    , RFC 2575, April 1999.\n   [20] Frye, R., Levi, D., Routhier, S., and B. Wijnen,\
    \ \"Coexistence\n        between Version 1, Version 2, and Version 3 of the Internet-\n\
    \        standard Network Management Framework\", Work in Progress.\n   [21] Rivest,\
    \ R., \"Message Digest Algorithm MD5\", RFC 1321, April\n        1992.\n   [22]\
    \ Secure Hash Algorithm. NIST FIPS 180-1, (April, 1995)\n        http://csrc.nist.gov/fips/fip180-1.txt\
    \ (ASCII)\n        http://csrc.nist.gov/fips/fip180-1.ps  (Postscript)\n   [23]\
    \ Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC:  Keyed-Hashing\n        for\
    \ Message Authentication\", RFC 2104, February 1997.\n   [24] Data Encryption\
    \ Standard, National Institute of Standards and\n        Technology.  Federal\
    \ Information Processing Standard (FIPS)\n        Publication 46-1.  Supersedes\
    \ FIPS Publication 46, (January,\n        1977; reaffirmed January, 1988).\n \
    \  [25] Rose, M., \"A Convention for Defining Traps for use with the\n       \
    \ SNMP\", RFC 1215, March 1991.\n   [26] McCloghrie, K., Perkins, D., Schoenwaelder,\
    \ J., Case, J., Rose,\n        M. and S. Waldbusser, \"Structure of Management\
    \ Information\n        Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n  \
    \ [27] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n     \
    \   M. and S. Waldbusser, \"Textual Conventions for SMIv2\", STD 58,\n       \
    \ RFC 2579, April 1999.\n   [28] McCloghrie, K., Perkins, D., Schoenwaelder, J.,\
    \ Case, J., Rose,\n        M. and S. Waldbusser, \"Conformance Statements for\
    \ SMIv2\", STD\n        58, RFC 2580, April 1999.\n"
- title: 11 Full Copyright Statement
  contents:
  - "11 Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\"\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by\n   the Internet Society.\n"
