- title: __initial_text__
  contents:
  - "           Generalized Multi-Protocol Label Switching (GMPLS)\n             \
    \       Signaling Functional Description\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes extensions to Multi-Protocol Label Switching\n\
    \   (MPLS) signaling required to support Generalized MPLS.  Generalized\n   MPLS\
    \ extends the MPLS control plane to encompass time-division (e.g.,\n   Synchronous\
    \ Optical Network and Synchronous Digital Hierarchy,\n   SONET/SDH), wavelength\
    \ (optical lambdas) and spatial switching (e.g.,\n   incoming port or fiber to\
    \ outgoing port or fiber).  This document\n   presents a functional description\
    \ of the extensions.  Protocol\n   specific formats and mechanisms, and technology\
    \ specific details are\n   specified in separate documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   7.  Protection Information  .....................................\
    \  21\n     7.1  Required Information  ....................................  22\n\
    \   8.  Administrative Status Information  ..........................  23\n  \
    \   8.1  Required Information  ....................................  24\n   9.\
    \  Control Channel Separation  .................................  25\n     9.1\
    \  Interface Identification  ................................  25\n     9.2  Fault\
    \ Handling  ..........................................  27\n   10. Acknowledgments\
    \  ............................................  27\n   11. Security Considerations\
    \  ....................................  28\n   12. IANA Considerations  ........................................\
    \  28\n   13. Intellectual Property Considerations  .......................  29\n\
    \   14. References  .................................................  29\n  \
    \   14.1  Normative References  ...................................  29\n    \
    \ 14.2  Informative References  .................................  30\n   15.\
    \ Contributors  ...............................................  31\n   16. Editor's\
    \ Address  ...........................................  33\n   17. Full Copyright\
    \ Statement  ...................................  34\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Multiprotocol Label Switching (MPLS) architecture [RFC3031]\
    \ has\n   been defined to support the forwarding of data based on a label.  In\n\
    \   this architecture, Label Switching Routers (LSRs) were assumed to\n   have\
    \ a forwarding plane that is capable of (a) recognizing either\n   packet or cell\
    \ boundaries, and (b) being able to process either\n   packet headers (for LSRs\
    \ capable of recognizing packet boundaries) or\n   cell headers (for LSRs capable\
    \ of recognizing cell boundaries).\n   The original architecture has recently\
    \ been extended to include LSRs\n   whose forwarding plane recognizes neither\
    \ packet, nor cell\n   boundaries, and therefore, can't forward data based on\
    \ the\n   information carried in either packet or cell headers.  Specifically,\n\
    \   such LSRs include devices where the forwarding decision is based on\n   time\
    \ slots, wavelengths, or physical ports.\n   Given the above, LSRs, or more precisely\
    \ interfaces on LSRs, can be\n   subdivided into the following classes:\n   1.\
    \ Interfaces that recognize packet/cell boundaries and can forward\n      data\
    \ based on the content of the packet/cell header.  Examples\n      include interfaces\
    \ on routers that forward data based on the\n      content of the \"shim\" header,\
    \ interfaces on (Asynchronous Transfer\n      Mode) ATM-LSRs that forward data\
    \ based on the ATM VPI/VCI.  Such\n      interfaces are referred to as Packet-Switch\
    \ Capable (PSC).\n   2. Interfaces that forward data based on the data's time\
    \ slot in a\n      repeating cycle.  An example of such an interface is an interface\n\
    \      on a SONET/SDH Cross-Connect.  Such interfaces are referred to as\n   \
    \   Time-Division Multiplex Capable (TDM).\n   3. Interfaces that forward data\
    \ based on the wavelength on which the\n      data is received.  An example of\
    \ such an interface is an interface\n      on an Optical Cross-Connect that can\
    \ operate at the level of an\n      individual wavelength.  Such interfaces are\
    \ referred to as Lambda\n      Switch Capable (LSC).\n   4. Interfaces that forward\
    \ data based on a position of the data in\n      the real world physical spaces.\
    \  An example of such an interface\n      is an interface on an Optical Cross-Connect\
    \ that can operate at\n      the level of a single (or multiple) fibers.  Such\
    \ interfaces are\n      referred to as Fiber-Switch Capable (FSC).\n   Using the\
    \ concept of nested Label Switched Paths (LSPs) allows the\n   system to scale\
    \ by building a forwarding hierarchy.  At the top of\n   this hierarchy are FSC\
    \ interfaces, followed by LSC interfaces,\n   followed by TDM interfaces, followed\
    \ by PSC interfaces.  This way, an\n   LSP that starts and ends on a PSC interface\
    \ can be nested (together\n   with other LSPs) into an LSP that starts and ends\
    \ on a TDM interface.\n   This LSP, in turn, can be nested (together with other\
    \ LSPs) into an\n   LSP that starts and ends on an LSC interface, which in turn\
    \ can be\n   nested (together with other LSPs) into an LSP that starts and ends\
    \ on\n   a FSC interface.  See [MPLS-HIERARCHY] for more information on LSP\n\
    \   hierarchies.\n   The establishment of LSPs that span only the first class\
    \ of\n   interfaces is defined in [RFC3036, RFC3212, RFC3209].  This document\n\
    \   presents a functional description of the extensions needed to\n   generalize\
    \ the MPLS control plane to support each of the four classes\n   of interfaces.\
    \  Only signaling protocol independent formats and\n   definitions are provided\
    \ in this document.  Protocol specific formats\n   are defined in [RFC3473] and\
    \ [RFC3472].  Technology specific details\n   are outside the scope of this document\
    \ and will be specified in\n   technology specific documents, such as [GMPLS-SONET].\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2. Overview
  contents:
  - "2. Overview\n   Generalized MPLS differs from traditional MPLS in that it supports\n\
    \   multiple types of switching, i.e., the addition of support for TDM,\n   lambda,\
    \ and fiber (port) switching.  The support for the additional\n   types of switching\
    \ has driven generalized MPLS to extend certain base\n   functions of traditional\
    \ MPLS and, in some cases, to add\n   functionality.  These changes and additions\
    \ impact basic LSP\n   properties, how labels are requested and communicated,\
    \ the\n   unidirectional nature of LSPs, how errors are propagated, and\n   information\
    \ provided for synchronizing the ingress and egress.\n   In traditional MPLS Traffic\
    \ Engineering, links traversed by an LSP\n   can include an intermix of links\
    \ with heterogeneous label encodings.\n   For example, an LSP may span links between\
    \ routers, links between\n   routers and ATM-LSRs, and links between ATM-LSRs.\
    \  Generalized MPLS\n   extends this by including links where the label is encoded\
    \ as a time\n   slot, or a wavelength, or a position in the real world physical\n\
    \   space.  Just like with traditional MPLS TE, where not all LSRs are\n   capable\
    \ of recognizing (IP) packet boundaries (e.g., an ATM-LSR) in\n   their forwarding\
    \ plane, generalized MPLS includes support for LSRs\n   that can't recognize (IP)\
    \ packet boundaries in their forwarding\n   plane.  In traditional MPLS TE an\
    \ LSP that carries IP has to start\n   and end on a router.  Generalized MPLS\
    \ extends this by requiring an\n   LSP to start and end on similar type of LSRs.\
    \  Also, in generalized\n   MPLS the type of a payload that can be carried by\
    \ an LSP is extended\n   to allow such payloads as SONET/SDH, or 1 or 10Gb Ethernet.\
    \  These\n   changes from traditional MPLS are reflected in how labels are\n \
    \  requested and communicated in generalized MPLS, see Sections 3.1 and\n   3.2.\
    \  A special case of Lambda switching, called Waveband switching\n   is also described\
    \ in Section 3.3.\n   Another basic difference between traditional and non-PSC\
    \ types of\n   generalized MPLS LSPs, is that bandwidth allocation for an LSP\
    \ can be\n   performed only in discrete units, see Section 3.1.3.  There are also\n\
    \   likely to be (much) fewer labels on non-PSC links than on PSC links.\n   Note\
    \ that the use of Forwarding Adjacencies (FA), see [MPLS-\n   HIERARCHY], provides\
    \ a mechanism that may improve bandwidth\n   utilization, when bandwidth allocation\
    \ can be performed only in\n   discrete units, as well as a mechanism to aggregate\
    \ forwarding state,\n   thus allowing the number of required labels to be reduced.\n\
    \   Generalized MPLS allows for a label to be suggested by an upstream\n   node,\
    \ see Section 3.4.  This suggestion may be overridden by a\n   downstream node\
    \ but, in some cases, at the cost of higher LSP setup\n   time.  The suggested\
    \ label is valuable when establishing LSPs through\n   certain kinds of optical\
    \ equipment where there may be a lengthy (in\n   electrical terms) delay in configuring\
    \ the switching fabric.  For\n   example micro mirrors may have to be elevated\
    \ or moved, and this\n   physical motion and subsequent damping takes time.  If\
    \ the labels and\n   hence switching fabric are configured in the reverse direction\
    \ (the\n   norm) the MAPPING/Resv message may need to be delayed by 10's of\n\
    \   milliseconds per hop in order to establish a usable forwarding path.\n   The\
    \ suggested label is also valuable when recovering from nodal\n   faults.\n  \
    \ Generalized MPLS extends on the notion of restricting the range of\n   labels\
    \ that may be selected by a downstream node, see Section 3.5.\n   In generalized\
    \ MPLS, an ingress or other upstream node may restrict\n   the labels that may\
    \ be used by an LSP along either a single hop or\n   along the whole LSP path.\
    \  This feature is driven from the optical\n   domain where there are cases where\
    \ wavelengths used by the path must\n   be restricted either to a small subset\
    \ of possible wavelengths, or to\n   one specific wavelength.  This requirement\
    \ occurs because some\n   equipment may only be able to generate a small set of\
    \ the wavelengths\n   that intermediate equipment may be able to switch, or because\n\
    \   intermediate equipment may not be able to switch a wavelength at all,\n  \
    \ being only able to redirect it to a different fiber.\n   While traditional traffic\
    \ engineered MPLS (and even LDP) are\n   unidirectional, generalized MPLS supports\
    \ the establishment of\n   bidirectional LSPs, see Section 4.  The need for bidirectional\
    \ LSPs\n   comes from non-PSC applications.  There are multiple reasons why such\n\
    \   LSPs are needed, particularly possible resource contention when\n   allocating\
    \ reciprocal LSPs via separate signaling sessions, and\n   simplifying failure\
    \ restoration procedures in the non-PSC case.\n   Bidirectional LSPs also have\
    \ the benefit of lower setup latency and\n   lower number of messages required\
    \ during setup.\n   Generalized MPLS supports the communication of a specific\
    \ label to\n   use on a specific interface, see Section 6.  [RFC3473] also supports\n\
    \   an RSVP specific mechanism for rapid failure notification.\n   Generalized\
    \ MPLS formalizes possible separation of control and data\n   channels, see Section\
    \ 9.  Such support is particularly important to\n   support technologies where\
    \ control traffic cannot be sent in-band\n   with the data traffic.\n   Generalized\
    \ MPLS also allows for the inclusion of technology specific\n   parameters in\
    \ signaling.  The intent is for all technology specific\n   parameters to be carried,\
    \ when using RSVP, in the SENDER_TSPEC and\n   other related objects, and when\
    \ using CR-LDP, in the Traffic\n   Parameters TLV.  Technology specific formats\
    \ will be defined on an as\n   needed basis.  For an example definition, see [GMPLS-SONET].\n"
- title: 3. Label Related Formats
  contents:
  - "3. Label Related Formats\n   To deal with the widening scope of MPLS into the\
    \ optical and time\n   domain, several new forms of \"label\" are required.  These\
    \ new forms\n   of label are collectively referred to as a \"generalized label\"\
    .  A\n   generalized label contains enough information to allow the receiving\n\
    \   node to program its cross connect, regardless of the type of this\n   cross\
    \ connect, such that the ingress segments of the path are\n   properly joined.\
    \  This section defines a generalized label request, a\n   generalized label,\
    \ support for waveband switching, suggested label\n   and label sets.\n   Note\
    \ that since the nodes sending and receiving the new form of label\n   know what\
    \ kinds of link they are using, the generalized label does\n   not contain a type\
    \ field, instead the nodes are expected to know from\n   context what type of\
    \ label to expect.\n"
- title: 3.1. Generalized Label Request
  contents:
  - "3.1. Generalized Label Request\n   The Generalized Label Request supports communication\
    \ of\n   characteristics required to support the LSP being requested.  These\n\
    \   characteristics include LSP encoding and LSP payload.  Note that\n   these\
    \ characteristics may be used by transit nodes, e.g., to support\n   penultimate\
    \ hop popping.\n   The Generalized Label Request carries an LSP encoding parameter,\n\
    \   called LSP Encoding Type.  This parameter indicates the encoding\n   type,\
    \ e.g., SONET/SDH/GigE etc., that will be used with the data\n   associated with\
    \ the LSP.  The LSP Encoding Type represents the nature\n   of the LSP, and not\
    \ the nature of the links that the LSP traverses.\n   A link may support a set\
    \ of encoding formats, where support means\n   that a link is able to carry and\
    \ switch a signal of one or more of\n   these encoding formats depending on the\
    \ resource availability and\n   capacity of the link.  For example, consider an\
    \ LSP signaled with\n   \"lambda\" encoding.   It is expected that such an LSP\
    \ would be\n   supported with no electrical conversion and no knowledge of the\n\
    \   modulation and speed by the transit nodes.  Other formats normally\n   require\
    \ framing knowledge, and field parameters are broken into the\n   framing type\
    \ and speed as shown below.\n   The Generalized Label Request also indicates the\
    \ type of switching\n   that is being requested on a link.  This field normally\
    \ is consistent\n   across all links of an LSP.\n"
- title: 3.1.1. Required Information
  contents:
  - "3.1.1. Required Information\n   The information carried in a Generalized Label\
    \ Request is:\n    0                   1                   2                 \
    \  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | LSP\
    \ Enc. Type |Switching Type |             G-PID             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      LSP Encoding Type: 8 bits\n         Indicates the encoding of the LSP being\
    \ requested.  The\n         following shows permitted values and their meaning:\n\
    \   Value       Type\n   -----       ----\n     1         Packet\n     2     \
    \    Ethernet\n     3         ANSI/ETSI PDH\n     4         Reserved\n     5 \
    \        SDH ITU-T G.707 / SONET ANSI T1.105\n     6         Reserved\n     7\
    \         Digital Wrapper\n     8         Lambda (photonic)\n     9         Fiber\n\
    \    10         Reserved\n    11         FiberChannel\n         The ANSI PDH and\
    \ ETSI PDH types designate these respective\n         networking technologies.\
    \  DS1 and DS3 are examples of ANSI PDH\n         LSPs.  An E1 LSP would be ETSI\
    \ PDH.  The Lambda encoding type\n         refers to an LSP that encompasses a\
    \ whole wavelengths.  The\n         Fiber encoding type refers to an LSP that\
    \ encompasses a whole\n         fiber port.\n      Switching Type: 8 bits\n  \
    \       Indicates the type of switching that should be performed on a\n      \
    \   particular link.  This field is needed for links that advertise\n        \
    \ more than one type of switching capability.  This field should\n         map\
    \ to one of the values advertised for the corresponding link\n         in the\
    \ routing Switching Capability Descriptor, see [GMPLS-\n         RTG].\n     \
    \    The following are currently defined values:\n   Value       Type\n   -----\
    \       ----\n     1         Packet-Switch Capable-1 (PSC-1)\n     2         Packet-Switch\
    \ Capable-2 (PSC-2)\n     3         Packet-Switch Capable-3 (PSC-3)\n     4  \
    \       Packet-Switch Capable-4 (PSC-4)\n     51        Layer-2 Switch Capable\
    \  (L2SC)\n     100       Time-Division-Multiplex Capable (TDM)\n     150    \
    \   Lambda-Switch Capable   (LSC)\n     200       Fiber-Switch Capable    (FSC)\n\
    \      Generalized PID (G-PID): 16 bits\n         An identifier of the payload\
    \ carried by an LSP, i.e., an\n         identifier of the client layer of that\
    \ LSP.  This is used by\n         the nodes at the endpoints of the LSP, and in\
    \ some cases by the\n         penultimate hop.  Standard Ethertype values are\
    \ used for packet\n         and Ethernet LSPs; other values are:\n   Value   Type\
    \                                   Technology\n   -----   ----              \
    \                     ----------\n     0     Unknown                         \
    \       All\n     1     Reserved\n     2     Reserved\n     3     Reserved\n \
    \    4     Reserved\n     5     Asynchronous mapping of E4             SDH\n \
    \    6     Asynchronous mapping of DS3/T3         SDH\n     7     Asynchronous\
    \ mapping of E3             SDH\n     8     Bit synchronous mapping of E3    \
    \      SDH\n     9     Byte synchronous mapping of E3         SDH\n    10    \
    \ Asynchronous mapping of DS2/T2         SDH\n    11     Bit synchronous mapping\
    \ of DS2/T2      SDH\n    12     Reserved\n    13     Asynchronous mapping of\
    \ E1             SDH\n    14     Byte synchronous mapping of E1         SDH\n\
    \    15     Byte synchronous mapping of 31 * DS0   SDH\n    16     Asynchronous\
    \ mapping of DS1/T1         SDH\n    17     Bit synchronous mapping of DS1/T1\
    \      SDH\n    18     Byte synchronous mapping of DS1/T1     SDH\n    19    \
    \ VC-11 in VC-12                         SDH\n    20     Reserved\n    21    \
    \ Reserved\n    22     DS1 SF Asynchronous                    SONET\n    23  \
    \   DS1 ESF Asynchronous                   SONET\n    24     DS3 M23 Asynchronous\
    \                   SONET\n    25     DS3 C-Bit Parity Asynchronous          SONET\n\
    \    26     VT/LOVC                                SDH\n    27     STS SPE/HOVC\
    \                           SDH\n    28     POS - No Scrambling, 16 bit CRC  \
    \      SDH\n    29     POS - No Scrambling, 32 bit CRC        SDH\n    30    \
    \ POS - Scrambling, 16 bit CRC           SDH\n    31     POS - Scrambling, 32\
    \ bit CRC           SDH\n    32     ATM mapping                            SDH\n\
    \    33     Ethernet                               SDH, Lambda, Fiber\n    34\
    \     SONET/SDH                              Lambda, Fiber\n    35     Reserved\
    \ (SONET deprecated)            Lambda, Fiber\n    36     Digital Wrapper    \
    \                    Lambda, Fiber\n    37     Lambda                        \
    \         Fiber\n    38     ANSI/ETSI PDH                          SDH\n    39\
    \     Reserved                               SDH\n    40     Link Access Protocol\
    \ SDH               SDH\n           (LAPS - X.85 and X.86)\n    41     FDDI  \
    \                                 SDH, Lambda, Fiber\n    42     DQDB (ETSI ETS\
    \ 300 216)                SDH\n    43     FiberChannel-3 (Services)          \
    \    FiberChannel\n    44     HDLC                                   SDH\n   \
    \ 45     Ethernet V2/DIX (only)                 SDH, Lambda, Fiber\n    46   \
    \  Ethernet 802.3 (only)                  SDH, Lambda, Fiber\n"
- title: 3.1.2. Bandwidth Encoding
  contents:
  - "3.1.2. Bandwidth Encoding\n   Bandwidth encodings are carried in 32 bit number\
    \ in IEEE floating\n   point format (the unit is bytes per second).  For non-packet\
    \ LSPs, it\n   is useful to define discrete values to identify the bandwidth of\
    \ the\n   LSP.  Some typical values for the requested bandwidth are enumerated\n\
    \   below.  (These values are guidelines.)  Additional values will be\n   defined\
    \ as needed.  Bandwidth encoding values are carried in a per\n   protocol specific\
    \ manner, see [RFC3473] and [RFC3472].\n     Signal Type   (Bit-rate)        \
    \      Value (Bytes/Sec)\n                                         (IEEE Floating\
    \ point)\n   --------------  ---------------       ---------------------\n   \
    \           DS0  (0.064 Mbps)              0x45FA0000\n              DS1  (1.544\
    \ Mbps)              0x483C7A00\n               E1  (2.048 Mbps)             \
    \ 0x487A0000\n              DS2  (6.312 Mbps)              0x4940A080\n      \
    \         E2  (8.448 Mbps)              0x4980E800\n         Ethernet  (10.00\
    \ Mbps)              0x49989680\n               E3  (34.368 Mbps)            \
    \ 0x4A831A80\n              DS3  (44.736 Mbps)             0x4AAAA780\n      \
    \      STS-1  (51.84 Mbps)              0x4AC5C100\n    Fast Ethernet  (100.00\
    \ Mbps)             0x4B3EBC20\n               E4  (139.264 Mbps)            0x4B84D000\n\
    \        FC-0 133M                            0x4B7DAD68\n       OC-3/STM-1  (155.52\
    \ Mbps)             0x4B9450C0\n        FC-0 266M                            0x4BFDAD68\n\
    \        FC-0 531M                            0x4C7D3356\n      OC-12/STM-4  (622.08\
    \ Mbps)             0x4C9450C0\n             GigE  (1000.00 Mbps)            0x4CEE6B28\n\
    \       FC-0 1062M                            0x4CFD3356\n     OC-48/STM-16  (2488.32\
    \ Mbps)            0x4D9450C0\n    OC-192/STM-64  (9953.28 Mbps)            0x4E9450C0\n\
    \       10GigE-LAN  (10000.00 Mbps)           0x4E9502F9\n   OC-768/STM-256  (39813.12\
    \ Mbps)           0x4F9450C0\n"
- title: 3.2. Generalized Label
  contents:
  - "3.2. Generalized Label\n   The Generalized Label extends the traditional label\
    \ by allowing the\n   representation of not only labels which travel in-band with\n\
    \   associated data packets, but also labels which identify time-slots,\n   wavelengths,\
    \ or space division multiplexed positions.  For example,\n   the Generalized Label\
    \ may carry a label that represents (a) a single\n   fiber in a bundle, (b) a\
    \ single waveband within fiber, (c) a single\n   wavelength within a waveband\
    \ (or fiber), or (d) a set of time-slots\n   within a wavelength (or fiber). \
    \ It may also carry a label that\n   represents a generic MPLS label, a Frame\
    \ Relay label, or an ATM label\n   (VCI/VPI).\n   A Generalized Label does not\
    \ identify the \"class\" to which the label\n   belongs.  This is implicit in\
    \ the multiplexing capabilities of the\n   link on which the label is used.\n\
    \   A Generalized Label only carries a single level of label, i.e., it is\n  \
    \ non-hierarchical.  When multiple levels of label (LSPs within LSPs)\n   are\
    \ required, each LSP must be established separately, see [MPLS-\n   HIERARCHY].\n\
    \   Each Generalized Label object/TLV carries a variable length label\n   parameter.\n"
- title: 3.2.1. Required Information
  contents:
  - "3.2.1. Required Information\n   The information carried in a Generalized Label\
    \ is:\n    0                   1                   2                   3\n   \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Label                             |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Label: Variable Length\n         Carries label information.  The interpretation\
    \ of this field\n         depends on the type of the link over which the label\
    \ is used.\n"
- title: 3.2.1.1. Port and Wavelength Labels
  contents:
  - "3.2.1.1. Port and Wavelength Labels\n   Some configurations of fiber switching\
    \ (FSC) and lambda switching\n   (LSC) use multiple data channels/links controlled\
    \ by a single control\n   channel.  In such cases the label indicates the data\
    \ channel/link to\n   be used for the LSP.  Note that this case is not the same\
    \ as when\n   [MPLS-BUNDLE] is being used.\n   The information carried in a Port\
    \ and Wavelength label is:\n    0                   1                   2    \
    \               3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Label                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Label: 32 bits\n      Indicates port/fiber or lambda to be used, from the\
    \ perspective of\n      the sender of the object/TLV.  Values used in this field\
    \ only have\n      significance between two neighbors, and the receiver may need\
    \ to\n      convert the received value into a value that has local\n      significance.\
    \  Values may be configured or dynamically determined\n      using a protocol\
    \ such as [LMP].\n"
- title: 3.2.1.2. Other Labels
  contents:
  - "3.2.1.2. Other Labels\n   Generic MPLS labels and Frame Relay labels are encoded\
    \ right\n   justified aligned in 32 bits (4 octets).  ATM labels are encoded with\n\
    \   the VPI right justified in bits 0-15 and the VCI right justified in\n   bits\
    \ 16-31.\n"
- title: 3.3. Waveband Switching
  contents:
  - "3.3. Waveband Switching\n   A special case of lambda switching is waveband switching.\
    \  A waveband\n   represents a set of contiguous wavelengths which can be switched\n\
    \   together to a new waveband.  For optimization reasons it may be\n   desirable\
    \ for an optical cross connect to optically switch multiple\n   wavelengths as\
    \ a unit.  This may reduce the distortion on the\n   individual wavelengths and\
    \ may allow tighter separation of the\n   individual wavelengths.  The Waveband\
    \ Label is defined to support\n   this special case.\n   Waveband switching naturally\
    \ introduces another level of label\n   hierarchy and as such the waveband is\
    \ treated the same way all other\n   upper layer labels are treated.\n   As far\
    \ as the MPLS protocols are concerned there is little difference\n   between a\
    \ waveband label and a wavelength label except that\n   semantically the waveband\
    \ can be subdivided into wavelengths whereas\n   the wavelength can only be subdivided\
    \ into time or statistically\n   multiplexed labels.\n"
- title: 3.3.1. Required information
  contents:
  - "3.3.1. Required information\n   Waveband switching uses the same format as the\
    \ generalized label, see\n   section 3.2.1.\n   In the context of waveband switching,\
    \ the generalized label has the\n   following format:\n    0                 \
    \  1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Waveband Id                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Start Label                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           End Label                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Waveband Id: 32 bits\n         A waveband identifier.  The value is selected\
    \ by the sender and\n         reused in all subsequent related messages.\n   \
    \   Start Label: 32 bits\n         Indicates the channel identifier of the lowest\
    \ value wavelength\n         making up the waveband, from the object/TLV sender's\n\
    \         perspective.\n      End Label: 32 bits\n         Indicates the channel\
    \ identifier of the highest value\n         wavelength making up the waveband,\
    \ from the object/TLV sender's\n         perspective.\n   Channel identifiers\
    \ are established either by configuration or by\n   means of a protocol such as\
    \ LMP [LMP].  They are normally used in the\n   label parameter of the Generalized\
    \ Label one PSC and LSC.\n"
- title: 3.4. Suggested Label
  contents:
  - "3.4. Suggested Label\n   The Suggested Label is used to provide a downstream\
    \ node with the\n   upstream node's label preference.  This permits the upstream\
    \ node to\n   start configuring its hardware with the proposed label before the\n\
    \   label is communicated by the downstream node.  Such early\n   configuration\
    \ is valuable to systems that take non-trivial time to\n   establish a label in\
    \ hardware.  Such early configuration can reduce\n   setup latency, and may be\
    \ important for restoration purposes where\n   alternate LSPs may need to be rapidly\
    \ established as a result of\n   network failures.\n   The use of Suggested Label\
    \ is only an optimization.  If a downstream\n   node passes a different label\
    \ upstream, an upstream LSR reconfigures\n   itself so that it uses the label\
    \ specified by the downstream node,\n   thereby maintaining the downstream control\
    \ of a label.  Note, the\n   transmission of a suggested label does not imply\
    \ that the suggested\n   label is available for use.  In particular, an ingress\
    \ node should\n   not transmit data traffic on a suggested label until the downstream\n\
    \   node passes a label upstream.\n   The information carried in a suggested label\
    \ is identical to a\n   generalized label.  Note, values used in the label field\
    \ of a\n   suggested label are from the object/TLV sender's perspective.\n"
- title: 3.5. Label Set
  contents:
  - "3.5. Label Set\n   The Label Set is used to limit the label choices of a downstream\
    \ node\n   to a set of acceptable labels.  This limitation applies on a per hop\n\
    \   basis.\n   We describe four cases where a Label Set is useful in the optical\n\
    \   domain.  The first case is where the end equipment is only capable of\n  \
    \ transmitting on a small specific set of wavelengths/bands.  The\n   second case\
    \ is where there is a sequence of interfaces which cannot\n   support wavelength\
    \ conversion (CI-incapable) and require the same\n   wavelength be used end-to-end\
    \ over a sequence of hops, or even an\n   entire path.  The third case is where\
    \ it is desirable to limit the\n   amount of wavelength conversion being performed\
    \ to reduce the\n   distortion on the optical signals.  The last case is where\
    \ two ends\n   of a link support different sets of wavelengths.\n   Label Set\
    \ is used to restrict label ranges that may be used for a\n   particular LSP between\
    \ two peers.  The receiver of a Label Set must\n   restrict its choice of labels\
    \ to one which is in the Label Set.  Much\n   like a label, a Label Set may be\
    \ present across multiple hops.  In\n   this case each node generates its own\
    \ outgoing Label Set, possibly\n   based on the incoming Label Set and the node's\
    \ hardware capabilities.\n   This case is expected to be the norm for nodes with\
    \ conversion\n   incapable (CI-incapable) interfaces.\n   The use of Label Set\
    \ is optional, if not present, all labels from the\n   valid label range may be\
    \ used.  Conceptually the absence of a Label\n   Set implies a Label Set whose\
    \ value is {U}, the set of all valid\n   labels.\n"
- title: 3.5.1. Required Information
  contents:
  - "3.5.1. Required Information\n   A label set is composed of one or more Label_Set\
    \ objects/TLVs.  Each\n   object/TLV contains one or more elements of the Label\
    \ Set.  Each\n   element is referred to as a subchannel identifier and has the\
    \ same\n   format as a generalized label.\n   The information carried in a Label_Set\
    \ is:\n    0                   1                   2                   3\n   \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Action     |      Reserved     |        Label Type         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Subchannel 1                         |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                               :                               :\n   :  \
    \                             :                               :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Subchannel N                         |\n   |  \
    \                            ...                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Action: 8 bits\n      0 - Inclusive List\n         Indicates that the object/TLV\
    \ contains one or more subchannel\n         elements that are included in the\
    \ Label Set.\n      1 - Exclusive List\n         Indicates that the object/TLV\
    \ contains one or more subchannel\n         elements that are excluded from the\
    \ Label Set.\n      2 - Inclusive Range\n         Indicates that the object/TLV\
    \ contains a range of labels.  The\n         object/TLV contains two subchannel\
    \ elements.  The first element\n         indicates the start of the range.  The\
    \ second element indicates\n         the end of the range.  A value of zero indicates\
    \ that there is\n         no bound on the corresponding portion of the range.\n\
    \      3 - Exclusive Range\n         Indicates that the object/TLV contains a\
    \ range of labels that\n         are excluded from the Label Set.  The object/TLV\
    \ contains two\n         subchannel elements.  The first element indicates the\
    \ start of\n         the range.  The second element indicates the end of the range.\n\
    \         A value of zero indicates that there is no bound on the\n         corresponding\
    \ portion of the range.\n   Reserved: 10 bits\n      This field is reserved. It\
    \ MUST be set to zero on transmission and\n      MUST be ignored on receipt.\n\
    \   Label Type: 14 bits\n      Indicates the type and format of the labels carried\
    \ in the\n      object/TLV.  Values are signaling protocol specific.\n   Subchannel:\n\
    \      The subchannel represents the label (wavelength, fiber ... ) which\n  \
    \    is eligible for allocation.  This field has the same format as\n      described\
    \ for labels under section 3.2.\n      Note that subchannel to local channel identifiers\
    \ (e.g.,\n      wavelength) mappings are a local matter.\n"
- title: 4. Bidirectional LSPs
  contents:
  - "4. Bidirectional LSPs\n   This section defines direct support of bidirectional\
    \ LSPs.  Support\n   is defined for LSPs that have the same traffic engineering\n\
    \   requirements including fate sharing, protection and restoration,\n   LSRs,\
    \ and resource requirements (e.g., latency and jitter) in each\n   direction.\
    \  In the remainder of this section, the term \"initiator\" is\n   used to refer\
    \ to a node that starts the establishment of an LSP and\n   the term \"terminator\"\
    \ is used to refer to the node that is the target\n   of the LSP.  Note that for\
    \ bidirectional LSPs, there is only one\n   \"initiator\" and one \"terminator\"\
    .\n   Normally to establish a bidirectional LSP when using [RFC3209] or\n   [RFC3212]\
    \ two unidirectional paths must be independently established.\n   This approach\
    \ has the following disadvantages:\n   *  The latency to establish the bidirectional\
    \ LSP is equal to one\n      round trip signaling time plus one initiator-terminator\
    \ signaling\n      transit delay.  This not only extends the setup latency for\n\
    \      successful LSP establishment, but it extends the worst-case\n      latency\
    \ for discovering an unsuccessful LSP to as much as two\n      times the initiator-terminator\
    \ transit delay.  These delays are\n      particularly significant for LSPs that\
    \ are established for\n      restoration purposes.\n   *  The control overhead\
    \ is twice that of a unidirectional LSP.  This\n      is because separate control\
    \ messages (e.g., Path and Resv) must be\n      generated for both segments of\
    \ the bidirectional LSP.\n   *  Because the resources are established in separate\
    \ segments, route\n      selection is complicated.  There is also additional potential\
    \ race\n      for conditions in assignment of resources, which decreases the\n\
    \      overall probability of successfully establishing the bidirectional\n  \
    \    connection.\n   *  It is more difficult to provide a clean interface for\
    \ SONET/SDH\n      equipment that may rely on bidirectional hop-by-hop paths for\n\
    \      protection switching.\n   *  Bidirectional optical LSPs (or lightpaths)\
    \ are seen as a\n      requirement for many optical networking service providers.\n\
    \   With bidirectional LSPs both the downstream and upstream data paths,\n   i.e.,\
    \ from initiator to terminator and terminator to initiator, they\n   are established\
    \ using a single set of signaling messages.  This\n   reduces the setup latency\
    \ to essentially one initiator-terminator\n   round trip time plus processing\
    \ time, and limits the control overhead\n   to the same number of messages as\
    \ a unidirectional LSP.\n"
- title: 4.1. Required Information
  contents:
  - "4.1. Required Information\n   For bidirectional LSPs, two labels must be allocated.\
    \  Bidirectional\n   LSP setup is indicated by the presence of an Upstream Label\n\
    \   object/TLV in the appropriate signaling message.  An Upstream Label\n   has\
    \ the same format as the generalized label, see Section 3.2.\n"
- title: 4.2. Contention Resolution
  contents:
  - "4.2. Contention Resolution\n   Contention for labels may occur between two bidirectional\
    \ LSP setup\n   requests traveling in opposite directions.  This contention occurs\n\
    \   when both sides allocate the same resources (labels) at effectively\n   the\
    \ same time.  If there is no restriction on the labels that can be\n   used for\
    \ bidirectional LSPs and if there are alternate resources,\n   then both nodes\
    \ will pass different labels upstream and there is no\n   contention.  However,\
    \ if there is a restriction on the labels that\n   can be used for the bidirectional\
    \ LSPs (for example, if they must be\n   physically coupled on a single I/O card),\
    \ or if there are no more\n   resources available, then the contention must be\
    \ resolved by other\n   means.  To resolve contention, the node with the higher\
    \ node ID will\n   win the contention and it MUST issue a PathErr/NOTIFICATION\
    \ message\n   with a \"Routing problem/Label allocation failure\" indication.\
    \  Upon\n   receipt of such an error, the node SHOULD try to allocate a different\n\
    \   Upstream label (and a different Suggested Label if used) to the\n   bidirectional\
    \ path.  However, if no other resources are available,\n   the node must proceed\
    \ with standard error handling.\n   To reduce the probability of contention, one\
    \ may impose a policy that\n   the node with the lower ID never suggests a label\
    \ in the downstream\n   direction and always accepts a Suggested Label from an\
    \ upstream node\n   with a higher ID.  Furthermore, since the labels may be exchanged\n\
    \   using LMP, an alternative local policy could further be imposed such\n   that\
    \ (with respect to the higher numbered node's label set) the\n   higher numbered\
    \ node could allocate labels from the high end of the\n   label range while the\
    \ lower numbered node allocates labels from the\n   low end of the label range.\
    \  This mechanism would augment any close\n   packing algorithms that may be used\
    \ for bandwidth (or wavelength)\n   optimization.  One special case that should\
    \ be noted when using RSVP\n   and supporting this approach is that the neighbor's\
    \ node ID might not\n   be known when sending an initial Path message.  When this\
    \ case\n   occurs, a node should suggest a label chosen at random from the\n \
    \  available label space.\n   An example of contention between two nodes (PXC\
    \ 1 and PXC 2) is shown\n   in Figure 1.  In this example PXC 1 assigns an Upstream\
    \ Label for the\n   channel corresponding to local BCId=2 (local BCId=7 on PXC\
    \ 2) and\n   sends a Suggested Label for the channel corresponding to local BCId=1\n\
    \   (local BCId=6 on PXC 2).  Simultaneously, PXC 2 assigns an Upstream\n   Label\
    \ for the channel corresponding to its local BCId=6 (local BCId=1\n   on PXC 1)\
    \ and sends a Suggested Label for the channel corresponding\n   to its local BCId=7\
    \ (local BCId=2 on PXC 1).  If there is no\n   restriction on the labels that\
    \ can be used for bidirectional LSPs and\n   if there are alternate resources\
    \ available, then both PXC 1 and PXC 2\n   will pass different labels upstream\
    \ and the contention is resolved\n   naturally (see Fig. 2).  However, if there\
    \ is a restriction on the\n   labels that can be used for bidirectional LSPs (for\
    \ example, if they\n   must be physically coupled on a single I/O card), then\
    \ the contention\n   must be resolved using the node ID (see Fig. 3).\n      \
    \  +------------+                         +------------+\n        +   PXC 1  \
    \  +                         +   PXC 2    +\n        +            +          \
    \       SL1,UL2 +            +\n        +          1 +------------------------>+\
    \ 6          +\n        +            + UL1, SL2                +            +\n\
    \        +          2 +<------------------------+ 7          +\n        +    \
    \        +                         +            +\n        +            +    \
    \                     +            +\n        +          3 +------------------------>+\
    \ 8          +\n        +            +                         +            +\n\
    \        +          4 +<------------------------+ 9          +\n        +------------+\
    \                         +------------+\n                           Figure 1.\
    \  Label Contention\n   In this example, PXC 1 assigns an Upstream Label using\
    \ BCId=2 (BCId=7\n   on PXC 2) and a Suggested Label using BCId=1 (BCId=6 on PXC\
    \ 2).\n   Simultaneously, PXC 2 assigns an Upstream Label using BCId=6 (BCId=1\n\
    \   on PXC 1) and a Suggested Label using BCId=7 (BCId=2 on PXC 1).\n        +------------+\
    \                         +------------+\n        +   PXC 1    +             \
    \            +   PXC 2    +\n        +            +                     UL2 +\
    \            +\n        +          1 +------------------------>+ 6          +\n\
    \        +            + UL1                     +            +\n        +    \
    \      2 +<------------------------+ 7          +\n        +            +    \
    \                     +            +\n        +            +                 \
    \     L1 +            +\n        +          3 +------------------------>+ 8  \
    \        +\n        +            + L2                      +            +\n  \
    \      +          4 +<------------------------+ 9          +\n        +------------+\
    \                         +------------+\n    Figure 2. Label Contention Resolution\
    \ without resource restrictions\n   In this example, there is no restriction on\
    \ the labels that can be\n   used by the bidirectional connection and there is\
    \ no contention.\n        +------------+                         +------------+\n\
    \        +   PXC 1    +                         +   PXC 2    +\n        +    \
    \        +                     UL2 +            +\n        +          1 +------------------------>+\
    \ 6          +\n        +            + L2                      +            +\n\
    \        +          2 +<------------------------+ 7          +\n        +    \
    \        +                         +            +\n        +            +    \
    \                  L1 +            +\n        +          3 +------------------------>+\
    \ 8          +\n        +            +  UL1                    +            +\n\
    \        +          4 +<------------------------+ 9          +\n        +------------+\
    \                         +------------+\n     Figure 3. Label Contention Resolution\
    \ with resource restrictions\n   In this example, labels 1,2 and 3,4 on PXC 1\
    \ (labels 6,7 and 8,9 on\n   PXC 2, respectively) must be used by the same bidirectional\n\
    \   connection.  Since PXC 2 has a higher node ID, it wins the contention\n  \
    \ and PXC 1 must use a different set of labels.\n"
- title: 5. Notification on Label Error
  contents:
  - "5. Notification on Label Error\n   There are cases in traditional MPLS and in\
    \ GMPLS that result in an\n   error message containing an \"Unacceptable label\
    \ value\" indication,\n   see [RFC3209], [RFC3472] and [RFC3473].  When these\
    \ cases occur, it\n   can be useful for the node generating the error message\
    \ to indicate\n   which labels would be acceptable.  To cover this case, GMPLS\n\
    \   introduces the ability to convey such information via the \"Acceptable\n \
    \  Label Set\".  An Acceptable Label Set is carried in appropriate\n   protocol\
    \ specific error messages, see [RFC3472] and [RFC3473].\n   The format of an Acceptable\
    \ Label Set is identical to a Label Set,\n   see section 3.5.1.\n"
- title: 6. Explicit Label Control
  contents:
  - "6. Explicit Label Control\n   In traditional MPLS, the interfaces used by an\
    \ LSP may be controlled\n   via an explicit route, i.e., ERO or ER-Hop.  This\
    \ enables the\n   inclusion of a particular node/interface, and the termination\
    \ of an\n   LSP on a particular outgoing interface of the egress LSR.  Where the\n\
    \   interface may be numbered or unnumbered, see [MPLS-UNNUM].\n   There are cases\
    \ where the existing explicit route semantics do not\n   provide enough information\
    \ to control the LSP to the degree desired.\n   This occurs in the case when the\
    \ LSP initiator wishes to select a\n   label used on a link.  Specifically, the\
    \ problem is that ERO and ER-\n   Hop do not support explicit label sub-objects.\
    \  An example case where\n   such a mechanism is desirable is where there are\
    \ two LSPs to be\n   \"spliced\" together, i.e., where the tail of the first LSP\
    \ would be\n   \"spliced\" into the head of the second LSP.  This last case is\
    \ more\n   likely to be used in the non-PSC classes of links.\n   To cover this\
    \ case, the Label ERO subobject / ER Hop is introduced.\n"
- title: 6.1. Required Information
  contents:
  - "6.1. Required Information\n   The Label Explicit and Record Routes contains:\n\
    \      L: 1 bit\n         This bit must be set to 0.\n      U: 1 bit\n       \
    \  This bit indicates the direction of the label.  It is 0 for the\n         downstream\
    \ label.  It is set to 1 for the upstream label and is\n         only used on\
    \ bidirectional LSPs.\n      Label: Variable\n         This field identifies the\
    \ label to be used.  The format of this\n         field is identical to the one\
    \ used by the Label field in\n         Generalized Label, see Section 3.2.1.\n\
    \   Placement and ordering of these parameters are signaling protocol\n   specific.\n"
- title: 7. Protection Information
  contents:
  - "7. Protection Information\n   Protection Information is carried in a new object/TLV.\
    \  It is used to\n   indicate link related protection attributes of a requested\
    \ LSP.  The\n   use of Protection Information for a particular LSP is optional.\n\
    \   Protection Information currently indicates the link protection type\n   desired\
    \ for the LSP.  If a particular protection type, i.e., 1+1, or\n   1:N, is requested,\
    \ then a connection request is processed only if the\n   desired protection type\
    \ can be honored.  Note that the protection\n   capabilities of a link may be\
    \ advertised in routing, see [GMPLS-RTG].\n   Path computation algorithms may\
    \ take this information into account\n   when computing paths for setting up LSPs.\n\
    \   Protection Information also indicates if the LSP is a primary or\n   secondary\
    \ LSP.  A secondary LSP is a backup to a primary LSP.  The\n   resources of a\
    \ secondary LSP are not used until the primary LSP\n   fails.  The resources allocated\
    \ for a secondary LSP MAY be used by\n   other LSPs until the primary LSP fails\
    \ over to the secondary LSP.  At\n   that point, any LSP that is using the resources\
    \ for the secondary LSP\n   MUST be preempted.\n"
- title: 7.1. Required Information
  contents:
  - "7.1. Required Information\n   The following information is carried in Protection\
    \ Information:\n    0                   1                   2                \
    \   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |S| \
    \                 Reserved                       | Link Flags|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Secondary (S): 1 bit\n         When set, indicates that the requested LSP\
    \ is a secondary LSP.\n      Reserved: 25 bits\n         This field is reserved.\
    \ It MUST be set to zero on transmission\n         and MUST be ignored on receipt.\
    \  These bits SHOULD be pass\n         through unmodified by transit nodes.\n\
    \      Link Flags: 6 bits\n         Indicates desired link protection type.  As\
    \ previously\n         mentioned, protection capabilities of a link may be advertised\n\
    \         in routing.  A value of 0 implies that any, including no, link\n   \
    \      protection may be used.  More than one bit may be set to\n         indicate\
    \ when multiple protection types are acceptable.  When\n         multiple bits\
    \ are set and multiple protection types are\n         available, the choice of\
    \ protection type is a local (policy)\n         decision.\n         The following\
    \ flags are defined:\n         0x20  Enhanced\n      Indicates that a protection\
    \ scheme that is more reliable than\n      Dedicated 1+1 should be used, e.g.,\
    \ 4 fiber BLSR/MS-SPRING.\n         0x10  Dedicated 1+1\n            Indicates\
    \ that a dedicated link layer protection scheme,\n            i.e., 1+1 protection,\
    \ should be used to support the LSP.\n         0x08  Dedicated 1:1\n         \
    \   Indicates that a dedicated link layer protection scheme,\n            i.e.,\
    \ 1:1 protection, should be used to support the LSP.\n         0x04  Shared\n\
    \            Indicates that a shared link layer protection scheme, such\n    \
    \        as 1:N protection, should be used to support the LSP.\n         0x02\
    \  Unprotected\n            Indicates that the LSP should not use any link layer\n\
    \            protection.\n         0x01  Extra Traffic\n            Indicates\
    \ that the LSP should use links that are protecting\n            other (primary)\
    \ traffic.  Such LSPs may be preempted when\n            the links carrying the\
    \ (primary) traffic being protected\n            fail.\n"
- title: 8. Administrative Status Information
  contents:
  - "8. Administrative Status Information\n   Administrative Status Information is\
    \ carried in a new object/TLV.\n   Administrative Status Information is currently\
    \ used in two ways.  In\n   the first, the information indicates administrative\
    \ state with\n   respect to a particular LSP.  In this usage, Administrative Status\n\
    \   Information indicates the state of the LSP.  State indications\n   include\
    \ \"up\" or \"down\", if it is in a \"testing\" mode, and if deletion\n   is in\
    \ progress.  The actions taken by a node based on a state local\n   decision.\
    \  An example action that may be taken is to inhibit alarm\n   reporting when\
    \ an LSP is in \"down\" or \"testing\" states, or to report\n   alarms associated\
    \ with the connection at a priority equal to or less\n   than \"Non service affecting\"\
    .\n   In the second usage of Administrative Status Information, the\n   information\
    \ indicates a request to set an LSP's administrative state.\n   This information\
    \ is always relayed to the ingress node which acts on\n   the request.\n   The\
    \ different usages are distinguished in a protocol specific\n   fashion.  See\
    \ [RFC3473] and [RFC3472] for details.  The use of\n   Administrative Status Information\
    \ for a particular LSP is optional.\n"
- title: 8.1. Required Information
  contents:
  - "8.1. Required Information\n   The following information is carried in Administrative\
    \ Status\n   Information:\n    0                   1                   2     \
    \              3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |R|                        Reserved                       |T|A|D|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Reflect (R): 1 bit\n         When set, indicates that the edge node SHOULD\
    \ reflect the\n         object/TLV back in the appropriate message.  This bit\
    \ MUST NOT\n         be set in state change request, i.e., Notify, messages.\n\
    \      Reserved: 28 bits\n         This field is reserved.  It MUST be set to\
    \ zero on transmission\n         and MUST be ignored on receipt.  These bits SHOULD\
    \ be pass\n         through unmodified by transit nodes.\n      Testing (T): 1\
    \ bit\n         When set, indicates that the local actions related to the\n  \
    \       \"testing\" mode should be taken.\n      Administratively down (A): 1\
    \ bit\n         When set, indicates that the local actions related to the\n  \
    \       \"administratively down\" state should be taken.\n      Deletion in progress\
    \ (D): 1 bit\n         When set, indicates that that the local actions related\
    \ to LSP\n         teardown should be taken.  Edge nodes may use this flag to\n\
    \         control connection teardown.\n"
- title: 9. Control Channel Separation
  contents:
  - "9. Control Channel Separation\n   The concept of a control channel being different\
    \ than a data channel\n   being signaled was introduced to MPLS in connection\
    \ with link\n   bundling, see [MPLS-BUNDLE].  In GMPLS, the separation of control\
    \ and\n   data channel may be due to any number of factors.  (Including\n   bundling\
    \ and other cases such as data channels that cannot carry in-\n   band control\
    \ information.)  This section will cover the two critical\n   related issues:\
    \ the identification of data channels in signaling and\n   handling of control\
    \ channel failures that don't impact data channels.\n"
- title: 9.1. Interface Identification
  contents:
  - "9.1. Interface Identification\n   In traditional MPLS there is an implicit one-to-one\
    \ association of a\n   control channel to a data channel.  When such an association\
    \ is\n   present, no additional or special information is required to\n   associate\
    \ a particular LSP setup transaction with a particular data\n   channel.  (It\
    \ is implicit in the control channel over which the\n   signaling messages are\
    \ sent.)\n   In cases where there is not an explicit one-to-one association of\n\
    \   control channels to data channels it is necessary to convey\n   additional\
    \ information in signaling to identify the particular data\n   channel being controlled.\
    \  GMPLS supports explicit data channel\n   identification by providing interface\
    \ identification information.\n   GMPLS allows the use of a number of interface\
    \ identification schemes\n   including IPv4 or IPv6 addresses, interface indexes\
    \ (see [MPLS-\n   UNNUM]) and component interfaces (established via configuration\
    \ or a\n   protocol such as [LMP]).  In all cases the choice of the data\n   interface\
    \ is indicated by the upstream node using addresses and\n   identifiers used by\
    \ the upstream node.\n"
- title: 9.1.1. Required Information
  contents:
  - "9.1.1. Required Information\n   The following information is carried in Interface_ID:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                            TLVs                             ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Where each TLV has the following format:\n    0                   1      \
    \             2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              Type             |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                           Value                             ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Length: 16 bits\n         Indicates the total length of the TLV, i.e.,\
    \ 4 + the length of\n         the value field in octets.  A value field whose\
    \ length is not a\n         multiple of four MUST be zero-padded so that the TLV\
    \ is four-\n         octet aligned.\n      Type: 16 bits\n         Indicates type\
    \ of interface being identified.  Defined values\n         are:\n   Type Length\
    \ Format     Description\n   --------------------------------------------------------------------\n\
    \    1      8   IPv4 Addr. IPv4\n    2     20   IPv6 Addr. IPv6\n    3     12\
    \   See below  IF_INDEX                (Interface Index)\n    4     12   See below\
    \  COMPONENT_IF_DOWNSTREAM (Component interface)\n    5     12   See below  COMPONENT_IF_UPSTREAM\
    \   (Component interface)\n   For types 3, 4 and 5 the Value field has the format:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                            IP Address                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Interface ID                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      IP Address: 32 bits\n         The IP address field may carry either an\
    \ IP address of a link\n         or an IP address associated with the router,\
    \ where associated\n         address is the value carried in a router address\
    \ TLV of\n         routing.\n      Interface ID: 32 bits\n         For type 3\
    \ usage, the Interface ID carries an interface\n         identifier.\n       \
    \  For types 4 and 5, the Interface ID indicates a bundled\n         component\
    \ link.  The special value 0xFFFFFFFF can be used to\n         indicate the same\
    \ label is to be valid across all component\n         links.\n"
- title: 9.2. Fault Handling
  contents:
  - "9.2. Fault Handling\n   There are two new faults that must be handled when the\
    \ control\n   channel is independent of the data channel.  In the first, there\
    \ is a\n   link or other type of failure that limits the ability of neighboring\n\
    \   nodes to pass control messages.  In this situation, neighboring nodes\n  \
    \ are unable to exchange control messages for a period of time.  Once\n   communication\
    \ is restored the underlying signaling protocol must\n   indicate that the nodes\
    \ have maintained their state through the\n   failure.  The signaling protocol\
    \ must also ensure that any state\n   changes that were instantiated during the\
    \ failure are synchronized\n   between the nodes.\n   In the second, a node's\
    \ control plane fails and then restarts and\n   losses most of its state information.\
    \  In this case, both upstream\n   and downstream nodes must synchronize their\
    \ state information with\n   the restarted node.  In order for any resynchronization\
    \ to occur the\n   node undergoing the restart will need to preserve some information,\n\
    \   such as its mappings of incoming to outgoing labels.\n   Both cases are addressed\
    \ in protocol specific fashions, see [RFC3473]\n   and [RFC3472].\n   Note that\
    \ these cases only apply when there are mechanisms to detect\n   data channel\
    \ failures independent of control channel failures.\n"
- title: 10. Acknowledgments
  contents:
  - "10. Acknowledgments\n   This document is the work of numerous authors and consists\
    \ of a\n   composition of a number of previous documents in this area.\n   Valuable\
    \ comments and input were received from a number of people,\n   including Igor\
    \ Bryskin, Adrian Farrel, Ben Mack-Crane, Dimitri\n   Papadimitriou, Fong Liaw\
    \ and Juergen Heiles.  Some sections of this\n   document are based on text proposed\
    \ by Fong Liaw.\n"
- title: 11. Security Considerations
  contents:
  - "11. Security Considerations\n   This document introduce no new security considerations\
    \ to either\n   [RFC3212] or [RFC3209].  The security considerations mentioned\
    \ in\n   [RFC3212] or [RFC3209] apply to the respective protocol specific\n  \
    \ forms of GMPLS, see [RFC3473] and [RFC3472].\n"
- title: 12. IANA Considerations
  contents:
  - "12. IANA Considerations\n   The IANA will administer assignment of new values\
    \ for namespaces\n   defined in this document.  This section uses the terminology\
    \ of BCP\n   26 \"Guidelines for Writing an IANA Considerations Section in RFCs\"\
    \n   [BCP26].\n   This document defines the following namespaces:\n      o LSP\
    \ Encoding Type: 8 bits\n      o Switching Type: 8 bits\n      o Generalized PID\
    \ (G-PID): 16 bits\n      o Action: 8 bits\n      o Interface_ID Type: 16 bits\n\
    \   All future assignments should be allocated through IETF Consensus\n   action\
    \ or documented in a Specification.\n   LSP Encoding Type - valid value range\
    \ is 1-255.  This document\n   defines values 1-11.\n   Switching Type - valid\
    \ value range is 1-255.  This document defines\n   values 1-4, 100, 150 and 200.\n\
    \   Generalized PID (G-PID) - valid value range is 0-1500.  This document\n  \
    \ defines values 0-46.\n   Action - valid value range is 0-255.  This document\
    \ defines values\n   0-3.\n   Interface_ID Type - valid value range is 1-65535.\
    \  This document\n   defines values 1-5.\n"
- title: 13. Intellectual Property Considerations
  contents:
  - "13. Intellectual Property Considerations\n   This section is taken from Section\
    \ 10.4 of [RFC2026].\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 14. References
  contents:
  - '14. References

    '
- title: 14.1. Normative References
  contents:
  - "14.1. Normative References\n   [RFC2119]        Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n                    Requirement Levels,\" BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC3036]        Andersson, L., Doolan, P., Feldman, N.,\
    \ Fredette, A.\n                    and B. Thomas, \"LDP Specification\", RFC\
    \ 3036,\n                    January 2001.\n   [RFC3209]        Awduche, D., Berger,\
    \ L., Gan, D., Li, T.,\n                    Srinivasan, V.  and G. Swallow, \"\
    RSVP-TE: Extensions\n                    to RSVP for LSP Tunnels\", RFC 3209,\
    \ December 2001.\n   [RFC3212]        Jamoussi, B., Andersson, L., Callon, R.,\
    \ Dantu, R.,\n                    Wu, L., Doolan, P., Worster, T., Feldman, N.,\n\
    \                    Fredette, A., Girish, M., Gray, E., Heinanen, J.,\n     \
    \               Kilty, T. and A. Malis, \"Constraint-Based LSP Setup\n       \
    \             using LDP\", RFC 3212, January 2002.\n   [RFC3472]        Ashwood-Smith,\
    \ P. and L. Berger, Editors,\n                    \"Generalized Multi-Protocol\
    \ Label Switching (GMPLS)\n                    Signaling - Constraint-based Routed\
    \ Label\n                    Distribution Protocol (CR-LDP) Extensions\", RFC\n\
    \                    3472, January 2003.\n   [RFC3473]        Berger, L., Editor\
    \ \"Generalized Multi-Protocol Label\n                    Switching (GMPLS) Signaling\
    \ - Resource ReserVation\n                    Protocol-Traffic Engineering (RSVP-TE)\
    \ Extensions\",\n                    RFC 3473, January 2003.\n"
- title: 14.2. Informative References
  contents:
  - "14.2. Informative References\n   [GMPLS-RTG]      Kompella, K., et al., \"Routing\
    \ Extensions in Support\n                    of Generalized MPLS\", Work in Progress.\n\
    \   [GMPLS-SONET]    Ashwood-Smith, P., et al., \"GMPLS - SONET / SDH\n      \
    \              Specifics\", Work in Progress.\n   [LMP]            Lang, et al.,\
    \ \"Link Management Protocol\", Work in\n                    Progress.\n   [MPLS-BUNDLE]\
    \    Kompella, K., Rekhter, Y. and L. Berger, \"Link\n                    Bundling\
    \ in MPLS Traffic Engineering\", Work in\n                    Progress.\n   [MPLS-HIERARCHY]\
    \ Kompella, K. and Y. Rekhter, \"LSP Hierarchy with\n                    MPLS\
    \ TE\", Work in Progress.\n   [RFC2026]        Bradner, S., \"The Internet Standards\
    \ Process --\n                    Revision 3,\" BCP 9, RFC 2026, October 1996.\n\
    \   [RFC2434]        Narten, T. and H. Alvestrand, \"Guidelines for\n        \
    \            Writing an IANA Considerations Section in RFCs\", BCP\n         \
    \           26, RFC 2434, October 1998.\n   [RFC3031]        Rosen, E., Viswanathan,\
    \ A. and R. Callon,\n                    \"Multiprotocol label switching Architecture\"\
    , RFC\n                    3031, January 2001.\n"
- title: 15. Contributors
  contents:
  - "15. Contributors\n   Peter Ashwood-Smith\n   Nortel Networks Corp.\n   P.O. Box\
    \ 3511 Station C,\n   Ottawa, ON K1Y 4H7\n   Canada\n   Phone:  +1 613 763 4534\n\
    \   EMail:  petera@nortelnetworks.com\n   Ayan Banerjee\n   Calient Networks\n\
    \   5853 Rue Ferrari\n   San Jose, CA 95138\n   Phone:  +1 408 972-3645\n   EMail:\
    \  abanerjee@calient.net\n   Lou Berger\n   Movaz Networks, Inc.\n   7926 Jones\
    \ Branch Drive\n   Suite 615\n   McLean VA, 22102\n   Phone:  +1 703 847-1801\n\
    \   EMail:  lberger@movaz.com\n   Greg Bernstein\n   EMail:  gregb@grotto-networking.com\n\
    \   John Drake\n   Calient Networks\n   5853 Rue Ferrari\n   San Jose, CA 95138\n\
    \   Phone:  +1 408 972 3720\n   EMail:  jdrake@calient.net\n   Yanhe Fan\n   Axiowave\
    \ Networks, Inc.\n   200 Nickerson Road\n   Marlborough, MA 01752\n   Phone: +\
    \ 1 774 348 4627\n   EMail: yfan@axiowave.com\n   Kireeti Kompella\n   Juniper\
    \ Networks, Inc.\n   1194 N. Mathilda Ave.\n   Sunnyvale, CA 94089\n   EMail:\
    \  kireeti@juniper.net\n   Jonathan P. Lang\n   EMail:  jplang@ieee.org\n   Eric\
    \ Mannie\n   Independent Consultant\n   2 Avenue de la Folle Chanson\n   1050\
    \ Brussels\n   Belgium\n   EMail:  eric_mannie@hotmail.com\n   Bala Rajagopalan\n\
    \   Tellium, Inc.\n   2 Crescent Place\n   P.O. Box 901\n   Oceanport, NJ 07757-0901\n\
    \   Phone:  +1 732 923 4237\n   Fax:    +1 732 923 9804\n   EMail:  braja@tellium.com\n\
    \   Yakov Rekhter\n   Juniper Networks, Inc.\n   EMail:  yakov@juniper.net\n \
    \  Debanjan Saha\n   EMail:  debanjan@acm.org\n   Vishal Sharma\n   Metanoia,\
    \ Inc.\n   1600 Villa Street, Unit 352\n   Mountain View, CA 94041-1174\n   Phone:\
    \  +1 650-386-6723\n   EMail:  v.sharma@ieee.org\n   George Swallow\n   Cisco\
    \ Systems, Inc.\n   250 Apollo Drive\n   Chelmsford, MA 01824\n   Phone:  +1 978\
    \ 244 8143\n   EMail:  swallow@cisco.com\n   Z. Bo Tang\n   EMail:  botang01@yahoo.com\n"
- title: 16. Editor's Address
  contents:
  - "16. Editor's Address\n   Lou Berger\n   Movaz Networks, Inc.\n   7926 Jones Branch\
    \ Drive\n   Suite 615\n   McLean VA, 22102\n   Phone:  +1 703 847-1801\n   EMail:\
    \  lberger@movaz.com\n"
- title: 17.  Full Copyright Statement
  contents:
  - "17.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
