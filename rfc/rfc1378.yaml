- title: __initial_text__
  contents:
  - '               The PPP AppleTalk Control Protocol (ATCP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ of\n   encapsulating Network Layer protocol information over point-to-point\n\
    \   links.  PPP also defines an extensible Link Control Protocol, and\n   proposes\
    \ a family of Network Control Protocols (NCPs) for\n   establishing and configuring\
    \ different network-layer protocols.\n   This document defines the NCP for establishing\
    \ and configuring the\n   AppleTalk Protocol [3] over PPP.\n   This memo is a\
    \ joint effort of the AppleTalk-IP Working Group and the\n   Point-to-Point Protocol\
    \ Working Group of the Internet Engineering\n   Task Force (IETF).  Comments on\
    \ this memo should be submitted to the\n   ietf-ppp@ucdavis.edu mailing list.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   2.     A PPP Network Control Protocol (NCP) for AppleTalk\
    \ ....    2\n   ACKNOWLEDGEMENTS .............................................\
    \   15\n   SECURITY CONSIDERATIONS ......................................   16\n\
    \   CHAIR'S ADDRESS ..............................................   16\n   AUTHOR'S\
    \ ADDRESS .............................................   16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   PPP has three main components:\n      1. A method for encapsulating\
    \ datagrams over serial links.\n      2. A Link Control Protocol (LCP) for establishing,\
    \ configuring,\n         and testing the data-link connection.\n      3. A family\
    \ of Network Control Protocols (NCPs) for establishing\n         and configuring\
    \ different network-layer protocols.\n   In order to establish communications\
    \ over a point-to-point link, each\n   end of the PPP link must first send LCP\
    \ packets to configure and test\n   the data link.  After the link has been established\
    \ and optional\n   facilities have been negotiated as needed by the LCP, PPP must\
    \ send\n   NCP packets to choose and configure one or more network-layer\n   protocols.\
    \  Once each of the chosen network-layer protocols has been\n   configured, datagrams\
    \ from each network-layer protocol can be sent\n   over the link.\n   The link\
    \ will remain configured for communications until explicit LCP\n   or NCP packets\
    \ close the link down, or until some external event\n   occurs (an inactivity\
    \ timer expires or network administrator\n   intervention).\n"
- title: 2.  A PPP Network Control Protocol (NCP) for AppleTalk
  contents:
  - "2.  A PPP Network Control Protocol (NCP) for AppleTalk\n   The AppleTalk Control\
    \ Protocol (ATCP) is responsible for configuring,\n   enabling, and disabling\
    \ the AppleTalk protocol modules on both ends\n   of the point-to-point link.\
    \  ATCP uses the same packet exchange\n   machanism as the Link Control Protocol\
    \ (LCP).  ATCP packets may not\n   be exchanged until PPP has reached the Network-Layer\
    \ Protocol phase.\n   ATCP packets received before this phase is reached should\
    \ be silently\n   discarded.\n   The AppleTalk Control Protocol is exactly the\
    \ same as the Link\n   Control Protocol [1] with the following exceptions:\n \
    \  Frame Modifications\n      The packet may utilize any modifications to the\
    \ basic frame format\n      which have been negotiated during the Link Establishment\
    \ phase.\n   Data Link Layer Protocol Field\n      Exactly one ATCP packet is\
    \ encapsulated in the Information field\n      of a PPP Data Link Layer frame\
    \ where the Protocol field indicates\n      type hex 8029 (AppleTalk Control Protocol).\n\
    \   Code field\n      Only Codes 1 through 7 (Configure-Request, Configure-Ack,\n\
    \      Configure-Nak, Configure-Reject, Terminate-Request, Terminate-Ack\n   \
    \   and Code-Reject) are used.  Other Codes should be treated as\n      unrecognized\
    \ and should result in Code-Rejects.\n   Timeouts\n      ATCP packets may not\
    \ be exchanged until PPP has reached the\n      Network-Layer Protocol phase.\
    \  An implementation should be\n      prepared to wait for Authentication and\
    \ Link Quality Determination\n      to finish before timing out waiting for a\
    \ Configure-Ack or other\n      response.  It is suggested that an implementation\
    \ give up only\n      after user intervention or a configurable amount of time.\n\
    \   Configuration Option Types\n      ATCP has a distinct set of Configuration\
    \ Options, which are\n      defined below.\n"
- title: 2.1.  Sending AppleTalk Datagrams
  contents:
  - "2.1.  Sending AppleTalk Datagrams\n   Before any AppleTalk packets may be communicated,\
    \ PPP must reach the\n   Network-Layer Protocol phase, and the AppleTalk Control\
    \ Protocol must\n   reach the Opened state.\n   Unless otherwise negotiated (via\
    \ option 4), exactly one AppleTalk\n   packet is encapsulated in the Information\
    \ field of a PPP Data Link\n   Layer frame where the Protocol field indicates\
    \ type hex 0029\n   (AppleTalk).\n   Note that the negotiation of compression\
    \ may imply the use of\n   different encapsulation and hence different protocol\
    \ fields.  These\n   different protocol fields imply packet types which are sub-protocols\n\
    \   of the base AppleTalk NCP.\n   An encapsulated AppleTalk packet begins with\
    \ an extended DDP\n   (Datagram Delivery Protocol) header -- also known as a Long\
    \ DDP\n   header.  The maximum length of a DDP datagram is 599 octets.\n   Since\
    \ there is no standard method for fragmenting and reassembling\n   AppleTalk datagrams,\
    \ it is required that PPP links supporting\n   AppleTalk allow at least 599 octets\
    \ in the information field of a\n   data link layer frame.\n"
- title: 2.2.  Half-Routers
  contents:
  - "2.2.  Half-Routers\n   One model for routers in [3] is two remote AppleTalk routers\
    \ linked\n   as \"half-routers\" without a Node ID or Network number assigned\
    \ to\n   either side of the link.  When acting as half-routers, the only\n   effect\
    \ on transported packets is that the hop count is incremented\n   when it is received\
    \ over the link.  Routing updates received over a\n   half-router link should\
    \ also increment the hop count of routing table\n   updates.\n   As part of normal\
    \ operation, AppleTalk will send RTMP Routing updates\n   every 10 seconds.\n"
- title: 3.  ATCP Configuration Options
  contents:
  - "3.  ATCP Configuration Options\n   ATCP Configuration Options allow negotiation\
    \ of desirable AppleTalk\n   parameters.  ATCP uses the same Configuration Option\
    \ format defined\n   for LCP [1], with a separate set of Options.\n   The most\
    \ up-to-date values of the ATCP Option Type field are\n   specified in the most\
    \ recent \"Assigned Numbers\" RFC [2].  Current\n   values are assigned as follows:\n\
    \   1       AppleTalk-Address\n   2       Routing-Protocol\n   3       Suppress-Broadcasts\n\
    \   4       AT-Compression-Protocol\n   5       RESERVED\n   6       Server-information\n\
    \   7       Zone-information\n   8       Default-Router-Address\n"
- title: 3.1.  AppleTalk-Address
  contents:
  - "3.1.  AppleTalk-Address\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the\n      AppleTalk network and node number to be used on\
    \ the local end of\n      the link.  It allows the sender of the Configure-Request\
    \ to state\n      which AppleTalk-address is desired, or to request that the peer\n\
    \      provide the information.  The peer can provide this information by\n  \
    \    NAKing the option, and returning a valid AppleTalk-address.\n      If negotiation\
    \ about the remote AppleTalk-address is required, and\n      the peer did not\
    \ provide the option in its Configure-Request, the\n      option SHOULD be appended\
    \ to a Configure-Nak.  The value of the\n      AppleTalk-address given must be\
    \ acceptable as the remote\n      AppleTalk-address, or indicate a request that\
    \ the peer provide the\n      information.\n      By default, no AppleTalk address\
    \ is assigned.  A network or node\n      number specified as zero in a Configure-Request\
    \ shall be\n      interpreted as requesting the remote end to specify a value\
    \ via a\n      Configure-Nak.  A network or node number specified as zero in a\n\
    \      Configure-Ack shall be interpreted as agreement that no value\n      exists.\n\
    \      An implementation which requires that no AppleTalk addresses be\n     \
    \ assigned (such as a intermediate system to intermediate system\n      \"half-routing\"\
    ) MUST Configure-Reject all AppleTalk-Address\n      Configuration Options.\n\
    \      An implementation which requires that AppleTalk addresses be\n      assigned\
    \ to it (such as a end system) MUST fail configuration if\n      the remote side\
    \ Configure-Rejects all AppleTalk-Address requests,\n      or fails to provide\
    \ a valid value.\n      If this option is negotiated, the two sides MUST negotiate\
    \ a\n      common AppleTalk network number and two unique Appletalk node\n   \
    \   numbers.  The network number MAY be zero but the Appletalk node\n      numbers\
    \ MUST be non-zero.  Values selected for network and node\n      numbers must\
    \ adhere to the ranges defined in [3].\n      The AppleTalk protocol, phase 2,\
    \ defines the concept of \"extended\"\n      and \"non-extended\" networks.  Extended\
    \ networks can support a\n      large number (hundreds) of nodes, and requires\
    \ multiple network\n      numbers and multiple zone names to be managed effectively.\
    \  Non-\n      extended networks can only support a small number of devices, and\n\
    \      require only a single network number and zone name to be managed\n    \
    \  effectively.\n      If a PPP link transporting AppleTalk is assigned an AppleTalk\n\
    \      address, it must have the \"non-extended\" characteristics as\n      defined\
    \ in [3].\n      The format of the network and node data is defined to be the\
    \ same\n      as the \"AppleTalk address\" in [3], chapter 3, \"AppleTalk AARP\n\
    \      packet formats on Ethernet and token ring\".\n   A summary of the AppleTalk-Address\
    \ Configuration Option format is\n   shown below.  The fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |    Reserved   |     AT-Net    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     AT-Net    |    AT-Node    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      1\n   Length\n      6\n   Reserved\n      This octet is reserved\
    \ and MUST be set to zero on transmission and\n      ignored on reception.\n \
    \  AT-Net\n      The two octet AT-Net is the desired local AppleTalk network number\n\
    \      of the sender of the Configure-Request.  This two octet quantity\n    \
    \  represents a 16 bit unsigned number sent \"network byte order\"\n      (most\
    \ significant octet first).\n   AT-Node\n      The one octet AT-Node is the desired\
    \ local AppleTalk node ID of\n      the sender of the Configure-Request.\n"
- title: 3.2.  Routing-Protocol
  contents:
  - "3.2.  Routing-Protocol\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the use of a\n      specific routing protocol.  In particular,\
    \ \"half-routers\" may want\n      to exchange routing information using a protocol\
    \ optimized for the\n      PPP connection.  By default, AppleTalk RTMP (Routing\
    \ Table\n      Maintenance Protocol) routing information is sent over the PPP\n\
    \      connection.\n      By default, AppleTalk RTMP routing information is sent\
    \ over the\n      PPP connection.\n   A summary of the Routing-Protocol Configuration\
    \ Option format is\n   shown below.  The fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |       Routing-Protocol        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Data ...\n   +-+-+-+-+\n   Type\n      2\n   Length\n      >= 4\n   Routing-Protocol\n\
    \      The Routing-Protocol field is two octets and indicates the type of\n  \
    \    Routing-Protocol desired.  This two octet quantity represents a 16\n    \
    \  bit number sent \"network byte order\" (most significant octet\n      first).\n\
    \      Negotiation of some routing protocols implies that you will\n      receive\
    \ packet types which transport these protocols.\n      For example, negotiating\
    \ AppleTalk AURP to exchange routing\n      information implies both sides will\
    \ accept EDDP type packets,\n      since this is the transport type used by AURP.\n\
    \      Initial values are assigned as follows:\n      Value       Protocol\n \
    \       0         No routing information exchange\n        1         AppleTalk\
    \ RTMP is used to exchange routing information\n        2         AppleTalk AURP\
    \ is used to exchange routing information\n        3         AppleTalk ABGP is\
    \ used to exchange routing information\n   Data\n      The Data field is zero\
    \ or more octets and contains additional data\n      as determined by the routing\
    \ protocol indicated in the Routing-\n      Protocol field.\n      None of the\
    \ Routing-Protocol options defined here require\n      additional data.\n"
- title: 3.3.  Suppress-Broadcasts
  contents:
  - "3.3.  Suppress-Broadcasts\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the\n      suppression of AppleTalk broadcast datagrams which\
    \ might otherwise\n      use up limitted PPP bandwidth.  This Configuration Option\
    \ is used\n      to inform the remote end that no AppleTalk broadcast datagrams\
    \ of\n      a given DDP type should be sent.\n      This option is useful when\
    \ negotiated by a single end system.  It\n      allows the local end system to\
    \ request that broadcast packets\n      generated on a remote network not be propagated\
    \ across the PPP\n      link.  In the case of a single end system connected to\
    \ a large\n      network, this can be used to suppress regular NBP lookups\n \
    \     generated by other end systems on the remote network.  This will\n     \
    \ mean that protocols such as NBP can no longer be used to find\n      network\
    \ entities on the local system, but since the option\n      configuration is asymmetric,\
    \ it does not inhibit the local\n      system's ability to find network entities\
    \ on the remote network.\n      By default, no AppleTalk broadcast datagrams are\
    \ suppressed.  Note\n      that this option may conflict with other options (such\
    \ as Routing\n      Protocol).  If so, the Suppress-Broadcasts option takes\n\
    \      precedence.\n   A summary of the Suppress-Broadcasts Configuration Option\
    \ format is\n   shown below.  The fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |  DDP-Type  1  |  DDP-Type  2  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | etc...\n   +-+-+-+-+\n   Type\n      3\n   Length\n      >= 2\n   DDP-Types\n\
    \      A vector of one or more single octet DDP type values, each of\n      which\
    \ are to be suppressed if sent to the broadcast address.\n      If no data is\
    \ present (the length = 2), all broadcast packets are\n      to be suppressed,\
    \ regardless of DDP type.\n"
- title: 3.4.  AT-Compression-Protocol
  contents:
  - "3.4.  AT-Compression-Protocol\n   Description\n      This Configuration Option\
    \ provides a way to negotiate the use of a\n      specific compression protocol.\
    \  By default, compression is not\n      enabled.\n   A summary of the AT-Compression-Protocol\
    \ Configuration Option format\n   is shown below.  The fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |   AT-Compression-Protocol     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Data ...\n   +-+-+-+-+\n   Type\n      4\n   Length\n      >= 4\n   AT-Compression-Protocol\n\
    \      The AT-Compression-Protocol field is two octets and indicates the\n   \
    \   compression protocol desired.  Values for this field are always\n      the\
    \ same as the PPP Data Link Layer Protocol field values for that\n      same compression\
    \ protocol.\n      The most up-to-date values of the AT-Compression-Protocol field\n\
    \      are specified in the most recent \"Assigned Numbers\" RFC [2].\n      Current\
    \ values are assigned as follows:\n         Value (in hex)          Protocol\n\
    \                                 none defined\n   Data\n      The Data field\
    \ is zero or more octets and contains additional data\n      as determined by\
    \ the particular compression protocol.\n"
- title: 3.5.  Server-information
  contents:
  - "3.5.  Server-information\n   Description\n      This Configuration Option provides\
    \ a way to obtain information\n      about the communications server providing\
    \ the remote side of the\n      PPP connection.\n      The nature of this option\
    \ is advisory only.  It is provided as a\n      means of improving an end system's\
    \ ability to provide a simple\n      user interface.\n   A summary of the Server-Information\
    \ Option format is shown below.\n   The fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |          Server-class         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Server-implementation-id                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Server-name ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+\n   Type\n      6\n   Length\n\
    \      >= 8\n   Server-class\n      The Server-class field is two octets and indicates\
    \ the class of\n      the communication server providing the remote end of the\
    \ PPP\n      connection.\n      Initial values are assigned as follows:\n    \
    \  Value        Class\n        1          AppleTalk PPP Dial-in server.\n    \
    \               The server-implementation-id is a four byte version\n        \
    \           id, with the first byte defined as the major\n                   version\
    \ number (1-255) and the second byte defined\n                   as the minor\
    \ version number (1-255).\n                   The third and fourth bytes are undefined\
    \ and should\n                   be zero.\n        2          Generic AppleTalk\
    \ PPP implementation.\n                   The server-implementation-id is undefined\
    \ and\n                   vendor specific.\n        3          Both dial-in server\
    \ and router\n   Server-implementation-id\n      The Server-implementation-id\
    \ field is four octets and indicates\n      the version of the communication server\
    \ providing the remote end\n      of the PPP connection.\n   Server-name\n   \
    \   This optional field contains the \"AppleTalk ASCII\" name of the\n      server.\
    \  The character codes used in \"AppleTalk ASCII\" are defined\n      in [3],\
    \ appendix D, \"Character codes\".  The length of the name is\n      bounded by\
    \ the option length.\n"
- title: 3.6.  Zone-Information
  contents:
  - "3.6.  Zone-Information\n   Description\n      This Configuration Option provides\
    \ a way to obtain information\n      about the AppleTalk zone used for the PPP\
    \ connection.\n      The nature of this option is advisory only.  It is provided\
    \ as a\n      means of improving the end system's ability to provide a simple\n\
    \      user interface.\n   A summary of the Zone-Information Option format is\
    \ shown below.  The\n   fields are transmitted from left to right.\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |           Zone-name...        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      7\n   Length\n      >= 3\n   Zone-name\n      This field contains\
    \ the \"AppleTalk ASCII\" zone name in which the\n      server resides.  The character\
    \ codes used in \"AppleTalk ASCII\" are\n      defined in [3], appendix D, \"\
    Character codes\".  The length of the\n      name is bounded by the option length.\n"
- title: 3.7.  Default-Router-Address
  contents:
  - "3.7.  Default-Router-Address\n   Description\n      This Configuration Option\
    \ provides a way to obtain information\n      about a \"default\" Appletalk router\
    \ which may be used to obtain\n      network information such as zone names. \
    \ It is provided as a means\n      of obtaining the address of a router in the\
    \ case both sides of the\n      link are end systems.\n      Any AppleTalk RTMP\
    \ packets received should supercede information\n      negotiated in this option.\n\
    \      By default, no default router is present.\n   A summary of the Default-Router-Address\
    \ Option format is shown below.\n   The fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |    Reserved   |     AT-Net    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     AT-Net    |    AT-Node    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      8\n   Length\n      6\n   Reserved\n      This octet is reserved\
    \ and MUST be set to zero on transmission and\n      ignored on reception.\n \
    \  AT-Net\n      The two octet AT-Net is the AppleTalk network number of the\n\
    \      default router.  This two octet quantity represents a 16 bit\n      unsigned\
    \ number sent in \"network byte order\" (most significant\n      octet first).\n\
    \   AT-Node\n      The one octet AT-Node is the AppleTalk node ID of the default\n\
    \      router.\n"
- title: A.  ATCP Recommended Options
  contents:
  - "A.  ATCP Recommended Options\n   The ATCP is designed to support three different\
    \ modes of operation.\n   Each mode places constraints on the configuration options\
    \ used and\n   the values negotiated.\n   The options for server information,\
    \ zone information and default\n   router address are \"informational\" options\
    \ provided by one end of the\n   connection and are not intended to be negotiated.\
    \  These options are\n   provided to support a higher level of service to dial-in\
    \ end systems.\n   The options which SHOULD be negotiated in each case are outlined\n\
    \   below.  Any option not listed may be rejected.\n"
- title: End System to Intermediate System - "dial-in"
  contents:
  - "End System to Intermediate System - \"dial-in\"\n   This mode of operation is\
    \ intended to support end system dial-in.\n         1       AppleTalk-Address\
    \ (required)\n         2       Routing-Protocol (required, no routing protocol)\n\
    \         3       Suppress-Broadcasts (optional)\n         4       AT-Compression-Protocol\
    \ (optional)\n         6       Server-information (optional, request from end\
    \ system)\n"
- title: Intermediate system to Intermediate system - with network number
  contents:
  - "Intermediate system to Intermediate system - with network number\n   This mode\
    \ of operation is intended to support WAN-to-WAN, i.e.,\n   router to router,\
    \ connections where the link is configured with a\n   network number.\n      \
    \   1      AppleTalk-Address (required, nets must be zero or equal)\n        \
    \ 2      Routing-Protocol (optional)\n         3      Suppress-Broadcasts (optional)\n"
- title: Intermediate system to Intermediate system - without network number
  contents:
  - "Intermediate system to Intermediate system - without network number\n   This\
    \ mode of operation is intended to support WAN-to-WAN, i.e.,\n   router to router,\
    \ connections where the link is not configured with a\n   network number.  Routers\
    \ in this mode are referred to as \"half-\n   routers\" in [3].\n         1  \
    \    AppleTalk-Address (optional, nets & nodes MUST be zero)\n         2     \
    \ Routing-Protocol (optional)\n         3      Suppress-Broadcasts (optional,\
    \ suppress all broadcasts)\n"
- title: References
  contents:
  - "References\n   [1] Simpson, W., \"The Point-to-Point Protocol (PPP)\", RFC 1331,\n\
    \       Daydreamer, May 1992.\n   [2] Reynolds, J., and J. Postel, \"Assigned\
    \ Numbers\", STD 2, RFC 1340,\n       USC/Information Sciences Institute, July\
    \ 1992.\n   [3] Sidhu G., Andrews, R., and A. Oppenheimer, \"Inside AppleTalk,\n\
    \       Second Edition\", Addison-Wesley Publishing Company, Inc., May\n     \
    \  1990.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Some of the text in this document is taken from previous\
    \ documents\n   produced by the Point-to-Point Protocol Working Group of the Internet\n\
    \   Engineering Task Force (IETF).\n   This document is derivative of drafts written\
    \ by the following\n   people.  Many thanks for their work, and for taking an\
    \ initial stab\n   at the protocol:\n   Steve Senum (sjs@network.com), Network\
    \ Systems Corporation\n   Jim Muchow (muchow@anubis.network.com), Network Systems\
    \ Corporation\n   Frank Slaughter (fgs@Shiva.COM), Shiva Corporation\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working groups can be contacted via the current chairs:\n\
    \   Brian Lloyd\n   Lloyd & Associates\n   3420 Sudbury Road\n   Cameron Park,\
    \ California 95682\n   Phone: (916) 676-1147\n   EMail: brian@lloyd.com\n   John\
    \ Veizades\n   Apple Computer, Inc.\n   20525 Mariani Avenue\n   Cupertino, CA\
    \ 95014\n   Phone: (408) 996-1010\n   EMail: veizades@apple.com\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Questions about this memo can also be directed to:\n   Brad\
    \ Parker\n   Cayman Systems, Inc.\n   26 Landsdowne Street\n   Cambridge, Ma 02139\n\
    \   EMail: brad@cayman.com\n"
