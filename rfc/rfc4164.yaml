- title: __initial_text__
  contents:
  - "                   RObust Header Compression (ROHC):\n                 Context\
    \ Replication for ROHC Profiles\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines context replication, a complement to the\n\
    \   context initialization procedure found in Robust Header Compression\n   (ROHC),\
    \ as specified in RFC 3095.  Profiles defining support for\n   context replication\
    \ may use the mechanism described herein to\n   establish a new context based\
    \ on another already existing context.\n   Context replication is introduced to\
    \ reduce the overhead of the\n   context establishment procedure.  It may be especially\
    \ useful for the\n   compression of multiple short-lived flows that may be occurring\n\
    \   simultaneously or near-simultaneously, such as short-lived TCP flows.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Context Replication for ROHC Profiles ...........................5\n    \
    \  3.1. Robustness Considerations ..................................5\n      3.2.\
    \ Replication of Control Fields ..............................5\n      3.3. Compressor\
    \ States and Logic ................................6\n           3.3.1. Context\
    \ Replication (CR) State ......................6\n           3.3.2. State Machine\
    \ with Context Replication ..............7\n           3.3.3. State Transition\
    \ Logic ..............................7\n                  3.3.3.1. Selection\
    \ of Base Context, Upward\n                           Transition .................................8\n\
    \                  3.3.3.2. Optimistic Approach, Upward Transition .....9\n  \
    \                3.3.3.3. Optional Acknowledgements (ACKs),\n                \
    \           Upward Transition ..........................9\n                  3.3.3.4.\
    \ Negative ACKs (NACKs), Downward\n                           Transition .................................9\n\
    \      3.4. Decompressor Logic ........................................10\n  \
    \         3.4.1. Replication and Context Initialization .............10\n    \
    \       3.4.2. Reconstruction and Verification ....................10\n      \
    \     3.4.3. Actions upon Failure ...............................11\n        \
    \   3.4.4. Feedback Logic .....................................11\n      3.5.\
    \ Packet Formats ............................................11\n           3.5.1.\
    \ CRCs in the IR-CR Packet ...........................12\n                  3.5.1.1.\
    \ 7-bit CRC .................................13\n                  3.5.1.2. 8-bit\
    \ CRC .................................13\n           3.5.2. General Format of\
    \ the IR-CR Packet .................13\n           3.5.3. Properties of the Base\
    \ Context Identifier (BCID) ...15\n   4. Security Considerations ........................................15\n\
    \   5. Acknowledgements ...............................................15\n  \
    \ 6. References .....................................................16\n    \
    \  6.1. Normative References ......................................16\n      6.2.\
    \ Informative References ....................................16\n   Appendix A:\
    \ General Format of the IR-CR Packet (Informative).......17\n      A.1.  General\
    \ Structure (Informative) ..........................17\n      A.2.  Profile-Specific\
    \ Replication Information (Informative) ...17\n   Appendix B: Inter-Profile Context\
    \ Replication (Informative)........18\n      B.1.  Defining Support for Inter-Profile\
    \ Context Replication ...18\n      B.2.  Compatibility between Different Profiles\
    \ (Informative) ...19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   There is often some redundancy between header fields of\
    \ different\n   flows that pass through the same compressor-decompressor pair.\
    \  This\n   means that some of the information needed to initialize the context\n\
    \   for decompressing the headers of a new flow may already be present at\n  \
    \ the decompressor.  It may be desirable to reuse this information and\n   remove\
    \ some of the overhead normally required for the initialization\n   of a new header\
    \ compression context at both the compressor and\n   decompressor.\n   Reducing\
    \ the overhead of the context establishment procedure is\n   particularly useful\
    \ when multiple short-lived connections (or flows)\n   occur simultaneously, or\
    \ near-simultaneously, between the same\n   compressor-decompressor pair.  Because\
    \ each new packet stream\n   requires most of the header information to be sent\
    \ during the\n   initialization phase before smaller compressed headers can be\
    \ used, a\n   multitude of short-lived connections may significantly reduce the\n\
    \   overall gain from header compression.\n   Context replication allows some\
    \ header fields, such as the IP source\n   and/or destination addresses (16 octets\
    \ each for IPv6), to be omitted\n   within the special Initiation and Refresh\
    \ (IR) packet type\n   specifically defined for replication.  It also allows other\
    \ fields,\n   such as source and/or destination ports, to be either omitted or\
    \ sent\n   in a compressed form from the very first packet of the header\n   compressed\
    \ flow.\n   Context replication is herein defined as a general ROHC mechanism.\n\
    \   The benefits of context replication are not limited to any particular\n  \
    \ protocol and its support may be defined for any ROHC profile.\n   In particular,\
    \ context replication is applicable to TCP compression\n   because many TCP transfers\
    \ are short-lived; a behavior analysis of\n   TCP/IP header fields among multiple\
    \ short-lived connections may be\n   found in [5].  In addition, [4] introduces\
    \ considerations and\n   requirements for the ROHC-TCP profile [3] to efficiently\
    \ compress\n   such short-lived TCP transfers.\n   For profiles supporting this\
    \ mechanism, the compressor performs\n   context replication by reusing or creating\
    \ a copy of an existing\n   context, i.e., a base context, to create the replicated\
    \ context.  The\n   replicated context is then updated to match the header fields\
    \ of the\n   new flow.  The compressor then sends to the decompressor a packet\n\
    \   that contains a reference to the selected base context, along with\n   some\
    \ data for the fields that need to be updated when creating the\n   replicated\
    \ context.  Finally, the decompressor creates the replicated\n   context based\
    \ on the reference to the base context along with the\n   uncompressed and compressed\
    \ data from the received packet.\n   This document specifies the context replication\
    \ procedure for ROHC\n   profiles.  It defines the general compressor and decompressor\
    \ logic\n   used during context replication, as well as the general format of\
    \ the\n   special IR packet required for this procedure.  Profiles defining\n\
    \   support for context replication must further specify the specific\n   format(s)\
    \ of this packet.\n   The fundamentals of the ROHC framework may be found in [2].\
    \  It is\n   assumed throughout this document that these are understood.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [1].\n   This document reuses some of the terminology found in [2].  In\n\
    \   addition, this document defines the following terms:\n   Base context\n  \
    \    A base context is a context that has been validated by both the\n      compressor\
    \ and the decompressor.  The compressor can use a base\n      context as the reference\
    \ when building a new context using\n      replication.\n   Base CID (BCID)\n\
    \      The Base Context Identifier is the CID used to identify the base\n    \
    \  context, from which information needed for context replication can\n      be\
    \ extracted.\n   Context replication\n      Context replication is the mechanism\
    \ that initializes a new\n      context based on another already existing context\
    \ (a base\n      context).\n"
- title: 3.  Context Replication for ROHC Profiles
  contents:
  - "3.  Context Replication for ROHC Profiles\n   For profiles defining its support,\
    \ context replication may be used as\n   an alternative to the context initialization\
    \ procedure found in [2].\n   Note that for such profiles, only the decompressor\
    \ is mandated to\n   support context replication; the use of the IR-CR packet\
    \ is optional\n   for the compressor.\n   This section describes the compressor\
    \ and decompressor logic as well\n   as the general format of the IR packet used\
    \ with context replication.\n"
- title: 3.1.  Robustness Considerations
  contents:
  - "3.1.  Robustness Considerations\n   Context replication deviates from the initialization\
    \ procedure\n   defined in [2] in that it is able to achieve a certain level of\n\
    \   compression from the first packet used to initialize the context for\n   a\
    \ new flow.  Therefore, it is of particular importance that the\n   context replication\
    \ procedure be robust.  This requires that a base\n   context suitable for replication\
    \ be used, that the integrity of the\n   initialization packet be guaranteed,\
    \ and finally that the outcome of\n   the replication process be verified.\n \
    \  The primary mechanisms used to achieve robustness of the context\n   replication\
    \ procedure are the selection of the base context (based on\n   prior feedback\
    \ from the decompressor) and the use of checksums.\n   Specifically, the compressor\
    \ must obtain enough confidence that the\n   base context selected for replication\
    \ is valid and available at the\n   decompressor before initiating the replication\
    \ procedure.  Thus, the\n   most reliable way to select the base context is to\
    \ choose a context\n   for which at least the static part to be replicated has\
    \ previously\n   been acknowledged by the decompressor.\n   In addition, the presence\
    \ of a CRC covering the information that\n   initializes the context ensures the\
    \ integrity of the IR header used\n   for replication.  Finally, an additional\
    \ CRC calculated over the\n   original uncompressed header allows the decompressor\
    \ to validate the\n   reconstructed header and the outcome of the replication\
    \ process.\n"
- title: 3.2.  Replication of Control Fields
  contents:
  - "3.2.  Replication of Control Fields\n   Control fields are fields that are either\
    \ transmitted from a ROHC\n   compressor to a ROHC decompressor or inferred based\
    \ on the behavior\n   of other fields, but are not part of the uncompressed header\
    \ itself.\n   They can be used to control compression and decompression behavior,\n\
    \   in particular, the set of packet formats to be used.  Control fields\n   are\
    \ profile-specific.  Examples of such fields include the NBO and\n   RND flags\
    \ [2], which indicate whether the IP-ID field is in Network\n   Byte Order and\
    \ the type of behavior of the field, respectively.\n   Another example is the\
    \ parameter indicating the mode of operation\n   [2].\n   The IR-CR differs from\
    \ the IR packet [2] in that its purpose is to\n   entirely specify what part of\
    \ the base context is replicated, and to\n   convey the complementary information\
    \ needed to create a new context.\n   Because of this, a profile supporting the\
    \ use of the IR-CR packet\n   SHOULD define for each control field if the value\
    \ of the field is\n   replicated from the base context to the new context, or\
    \ if its value\n   is reinitialized.\n   In addition, a compressor MUST NOT initiate\
    \ context replication while\n   a control field that is not reinitialized by replication\
    \ is being\n   updated, e.g., during the handshake for a mode transition [2].\n"
- title: 3.3.  Compressor States and Logic
  contents:
  - "3.3.  Compressor States and Logic\n   Compression with ROHC normally starts in\
    \ the IR state, where IR\n   packets must be sent to initialize a new context\
    \ at the decompressor.\n   IR packets include all static and non-static fields\
    \ of the original\n   header in uncompressed form plus some additional information.\
    \  The\n   compressor stays in the IR state until it obtains confidence that the\n\
    \   decompressor has received the information.\n   Context replication provides\
    \ an optional mechanism to complement the\n   ROHC initialization procedure. \
    \ It defines a packet type, the IR\n   packet for Context Replication (IR-CR),\
    \ which can be used to\n   initialize a new context.  Consequently, the Context\
    \ Replication (CR)\n   state is introduced to the compressor state machine to\
    \ encompass the\n   additional logic required for the use of the IR-CR packet.\n\
    \   For profiles defining support for context replication, the compressor\n  \
    \ may thus transit directly from the IR state to the CR state if an\n   already\
    \ existing context can be selected as a base context for\n   replication.  This\
    \ effectively replaces any IR/IR-DYN packets sent\n   during the context establishment\
    \ procedure with an IR-CR packet.\n"
- title: 3.3.1.  Context Replication (CR) State
  contents:
  - "3.3.1.  Context Replication (CR) State\n   The purpose of the CR state is to\
    \ initialize a new context by reusing\n   an already existing context.  In this\
    \ state, the compressor sends a\n   combination of uncompressed and compressed\
    \ information, along with a\n   reference to a base context plus some additional\
    \ information.\n   Therefore, header information pertaining to fields that are\
    \ being\n   replicated is not sent.\n   The compressor stays in the CR state until\
    \ it is confident that the\n   decompressor has received the replication information\
    \ correctly.\n"
- title: 3.3.2.  State Machine with Context Replication
  contents:
  - "3.3.2.  State Machine with Context Replication\n   The compressor always starts\
    \ in the lower compression state (IR), and\n   transits to the context replication\
    \ state (CR) under the constraint\n   that the compressor can select a base context\
    \ that is suitable for\n   the flow being compressed (see also Section 3.3.3.1).\n\
    \   The transition from the CR state to a higher compression state (e.g.,\n  \
    \ the CO state for [3]) is based on the optimistic approach principle\n   or feedback\
    \ received from the decompressor.\n   The figure below shows the additional state\
    \ for the compressor.  The\n   details of the state transitions and compression\
    \ logic are given in\n   sub-sections following the figure.\n              BCID\
    \ selection       Optimistic approach / ACK\n           +----->----->------+ \
    \   +----->----->----->-----+\n           |                  |    |          \
    \             |\n           |                  v    |                       v\n\
    \      +---------+          +---------+              +-------------+\n      |\
    \   IR    |          |   CR    |              |   Higher    |\n      |  state\
    \  |          |  state  |              | order state |\n      +---------+    \
    \      +---------+              +-------------+\n           ^                \
    \    |\n           | NACK / STATIC-NACK |\n           +---<-----<-----<----+\n\
    \   Note that context replication is a complement to the normal\n   initialization\
    \ procedure for ROHC profiles that support it.\n   Therefore, the compressor transition\
    \ to the CR state is an optional\n   addition to the state machine, and does not\
    \ affect already existing\n   transitions between the IR state and higher order\
    \ state(s).\n"
- title: 3.3.3.  State Transition Logic
  contents:
  - "3.3.3.  State Transition Logic\n   Decisions about transition to and from the\
    \ CR state are taken by the\n   compressor on the basis of:\n   - availability\
    \ of a base context\n   - positive feedback from the decompressor (Acknowledgements\
    \ -- ACKs)\n   - negative feedback from the decompressor (Negative ACKs -- NACKs)\n\
    \   - confidence level regarding error-free decompression of a packet\n   Context\
    \ replication is designed to operate over links where a\n   feedback channel is\
    \ available.  This is necessary to ensure that the\n   information used to create\
    \ a new context is synchronized between the\n   compressor and the decompressor.\
    \  In addition, context replication\n   may also make use of feedback from decompressor\
    \ to compressor for\n   transition back to the IR state and for OPTIONAL improved\
    \ forward\n   transition towards a state with a higher compression ratio.\n  \
    \ The format that must be used by all profiles for the feedback field\n   within\
    \ the general ROHC format is specified in Section 5.2.2 of [2];\n   the feedback\
    \ information is structured using two possible formats:\n   FEEDBACK-1 and FEEDBACK-2.\
    \  In particular, FEEDBACK-2 can carry one\n   of three possible types of feedback\
    \ information: ACK, NACK, or\n   STATIC-NACK.\n"
- title: 3.3.3.1.  Selection of Base Context, Upward Transition
  contents:
  - "3.3.3.1.  Selection of Base Context, Upward Transition\n   The compressor may\
    \ initiate a transition from the IR state to the CR\n   state when a suitable\
    \ base context can be identified.  To perform\n   this transition, the compressor\
    \ selects a context that has previously\n   been acknowledged by the decompressor\
    \ as the base context.  The\n   selected context MUST have been acknowledged by\
    \ the decompressor\n   using the CRC option (see also [2], Section 5.7.6.3) in\
    \ the feedback\n   message.  The static part of the base context to be replicated\
    \ MUST\n   have been acknowledged by the decompressor and the base context MUST\n\
    \   be valid at replication time.\n   This also implies that a compressor is not\
    \ allowed to use the context\n   replication mechanism if a feedback channel is\
    \ not present.  However,\n   note that the presence of the feedback channel cannot\
    \ provide the\n   guarantee that a base context selected for replication has not\
    \ been\n   corrupted after it has been acknowledged, or that it is still part\
    \ of\n   the state managed by the decompressor when the IR-CR will be\n   received.\n\
    \   More specifically, RFC 3095 [2] defines the context identifier (CID)\n   as\
    \ a reference to the state information (i.e., the context) used for\n   compression\
    \ and decompression.  Multiple packet streams, each having\n   its own context,\
    \ may thus share a channel; and the CID space along\n   with its representation\
    \ within packet formats may be negotiated as\n   part of the channel state.  However,\
    \ because RFC 3095 [2] does not\n   explicitly define context state management\
    \ between compressor and\n   decompressor, in particular for connection-oriented\
    \ flows (e.g.,\n   TCP), no more than a high degree of confidence can be achieved\
    \ when\n   selecting a base context.\n   In the case where feedback is not used\
    \ by the decompressor, the\n   compressor may have to periodically transit back\
    \ to the IR state.  In\n   such a case, the same logic applies for the transition\
    \ back to the\n   higher order state via the CR state: a base context, previously\n\
    \   acknowledged and suitable for replication, must be re-selected.\n   The criteria\
    \ for whether an existing context is a suitable base\n   context for replication\
    \ for a new flow are left to implementations.\n   Whenever the sequencing information\
    \ from the last acknowledgement\n   received is available, the compressor MAY\
    \ use it to determine what\n   fields can be replicated to avoid replicating any\
    \ fields that have\n   changed significantly from the state corresponding to the\n\
    \   acknowledged packet.\n"
- title: 3.3.3.2.  Optimistic Approach, Upward Transition
  contents:
  - "3.3.3.2.  Optimistic Approach, Upward Transition\n   Transition to a higher order\
    \ state can be carried out according to\n   the optimistic approach principle.\
    \  This means that the compressor\n   may perform an upward state transition when\
    \ it is fairly confident\n   that the decompressor has received enough information\
    \ to correctly\n   decompress packets sent according to the higher compression\
    \ state.\n   In general, there are many approaches where the compressor can obtain\n\
    \   such information.  The compressor may obtain its confidence by\n   sending\
    \ several IR-CR packets with the same information.\n"
- title: 3.3.3.3.  Optional Acknowledgements (ACKs), Upward Transition
  contents:
  - "3.3.3.3.  Optional Acknowledgements (ACKs), Upward Transition\n   An ACK may\
    \ be sent by the decompressor to indicate that a context has\n   been successfully\
    \ initialized during context replication.\n   Upon reception of an ACK, the compressor\
    \ may assume that the context\n   replication procedure was successful and transit\
    \ from its initial\n   state (e.g., IR state) to a higher compression state.\n"
- title: 3.3.3.4.  Negative ACKs (NACKs), Downward Transition
  contents:
  - "3.3.3.4.  Negative ACKs (NACKs), Downward Transition\n   A STATIC-NACK sent by\
    \ the decompressor may indicate that the\n   decompressor could not initialize\
    \ a valid context during context\n   replication, and that the corresponding context\
    \ has been invalidated.\n   Upon reception of a STATIC-NACK, the compressor MUST\
    \ transit back to\n   its initial no context state.  The compressor SHOULD also\
    \ refrain\n   from sending IR-CR packets using the same base context, at least\n\
    \   until an acknowledgement subsequent to the reception of the\n   STATIC-NACK\
    \ makes this context suitable for replication (Section\n   3.3.3.1).  The compressor\
    \ SHOULD re-initialize the decompressor\n   context using an IR packet.\n   A\
    \ NACK sent by the decompressor may indicate that a valid context has\n   been\
    \ successfully initialized but that the decompression of one or\n   more subsequent\
    \ packets has failed.\n   Upon reception of a NACK, the compressor MAY assume\
    \ that the static\n   part of the decompressor context is valid, but that the\
    \ dynamic part\n   is invalid; the compressor may take actions accordingly.\n"
- title: 3.4.  Decompressor Logic
  contents:
  - '3.4.  Decompressor Logic

    '
- title: 3.4.1.  Replication and Context Initialization
  contents:
  - "3.4.1.  Replication and Context Initialization\n   Upon reception of an IR-CR\
    \ packet, the decompressor first determines\n   its content ([2], Section 5.2.6).\
    \  The profile indicated in the IR-CR\n   packet determines how it is to be processed.\
    \  If the CRC (8-bit CRC)\n   fails to verify the packet, the packet MUST be discarded.\n\
    \   If the profile as indicated in the IR-CR packet defines the use of\n   the\
    \ Base CID, and if its corresponding field is present within the\n   packet format,\
    \ this field is used to identify the base context;\n   otherwise, the CID is used.\n"
- title: 3.4.2.  Reconstruction and Verification
  contents:
  - "3.4.2.  Reconstruction and Verification\n   The decompressor creates a new context\
    \ using the information present\n   in the IR-CR packet together with the identified\
    \ base context, and\n   decompresses the original header.\n   The CRC calculated\
    \ over the original uncompressed header and carried\n   within the profile-specific\
    \ part of the IR-CR headers (7-bit CRC)\n   MUST be used to verify decompression.\n\
    \   When the decompression is verified and successful, the decompressor\n   initializes\
    \ or updates the context with the information received in\n   the current header.\
    \  The decompressor SHOULD send an ACK when it\n   successfully validates the\
    \ context as a result of the decompression\n   of one or more IR-CR packets.\n\
    \   Otherwise, if the reconstructed header fails the CRC check, changes\n   (either\
    \ initialization or update) to the context MUST NOT be\n   performed.  When the\
    \ decompressor fails to validate the header,\n   actions as specified in Section\
    \ 3.4.3 are taken.\n"
- title: 3.4.3.  Actions upon Failure
  contents:
  - "3.4.3.  Actions upon Failure\n   For profiles supporting context replication,\
    \ the feedback logic of a\n   decompressor is similar to the logic used for context\
    \ initialization,\n   as described in [2].\n   Specifically, when the decompressor\
    \ fails to validate the context\n   following the decompression of one or more\
    \ initial IR-CR packets, it\n   MUST invalidate the context and remain in its\
    \ initial state.  In\n   addition, the decompressor SHOULD send a STATIC-NACK.\
    \  In particular,\n   a decompressor implementation performing strict memory management,\n\
    \   such as deleting context state information when a connection-oriented\n  \
    \ flow (e.g., TCP) is known to have terminated, SHOULD send STATIC-NACK\n   in\
    \ this case.  Otherwise, there is a risk that the compressor will\n   maintain\
    \ a specific CID as a potential candidate for a later\n   replication attempt,\
    \ while actually there is insufficient state left\n   in the decompressor for\
    \ this CID to act as a Base CID.\n   If the context has been successfully validated\
    \ from the decompression\n   of one or more initial IR-CR packets, the decompressor\
    \ SHOULD send a\n   NACK when it fails to verify the context following the decompression\n\
    \   of one or more subsequent IR-CR packets.\n"
- title: 3.4.4.  Feedback Logic
  contents:
  - "3.4.4.  Feedback Logic\n   The decompressor SHOULD use the CRC option (see [2],\
    \ Section 5.7.6.3)\n   when sending feedback corresponding to an IR or an IR-CR\
    \ packet.\n"
- title: 3.5.  Packet Formats
  contents:
  - "3.5.  Packet Formats\n   The format of the IR-CR packet has been designed under\
    \ the following\n   constraints:\n   a) it must be possible to either overwrite\
    \ a CID during context\n      replication, or to use a different CID than the\
    \ Base CID for the\n      replicated context;\n   b) it must be possible to selectively\
    \ include or exclude from the\n      packet format some fields that may be replicable;\n\
    \   c) it must be possible for some fields that may be replicable to be\n    \
    \  represented within the packet format using either a compressed or\n      an\
    \ uncompressed form;\n   d) it must be possible for the decompressor to verify\
    \ the success of\n      the replication procedure;\n   e) it is anticipated that\
    \ profiles, other than ROHC-TCP [3], will\n      also define support for context\
    \ replication.  Therefore it is\n      desirable that the packet format be profile\
    \ independent.\n"
- title: 3.5.1.  CRCs in the IR-CR Packet
  contents:
  - "3.5.1.  CRCs in the IR-CR Packet\n   The IR packet, as defined in [2], is used\
    \ to communicate static\n   and/or dynamic parts of a context, and typically initialize\
    \ the\n   context.  For example, the static and dynamic chains of IR packets\n\
    \   may contain an uncompressed representation of the original header.\n   The\
    \ IR packet format includes an 8-bit CRC, calculated over the\n   initial part\
    \ of the IR packet.  This CRC is meant to protect any\n   information that initializes\
    \ the context.  In particular, its\n   coverage always includes any CID information\
    \ as well as the profile\n   used to interpret the remainder of the IR packet.\n\
    \   The purpose of the 8-bit CRC is to ensure the integrity of the IR\n   header\
    \ itself.  Profiles may extend the coverage of this CRC to\n   include the entire\
    \ IR header, thus allowing the verification of the\n   integrity of the entire\
    \ uncompressed header.  However, because the\n   format of the IR packet is common\
    \ to all ROHC profiles and verified\n   as part of the initial processing of a\
    \ ROHC decompressor (see  [2],\n   Section 5.2.6.), profiles may not redefine\
    \ this CRC beyond the extent\n   of its coverage.\n   RFC 3095 [2] also defines\
    \ a 3-bit CRC and a 7-bit CRC for compressed\n   headers, used to verify proper\
    \ decompression and validate the\n   context.  This type of CRC is calculated\
    \ over the original\n   uncompressed header, as it is not sufficient to protect\
    \ only the\n   compressed data being exchanged between compressor and decompressor\n\
    \   for the purpose of ensuring a robust reconstruction of the original\n   header.\n\
    \   Thus, there is a clear distinction in purpose between the 8-bit CRC\n   found\
    \ in the IR packet and the 3-bit or 7-bit CRC found in compressed\n   headers.\
    \  With context replication, where the IR-CR packet may\n   contain both compressed\
    \ as well as uncompressed information and omit\n   entirely replicable fields,\
    \ this distinction in no longer present.\n   Profiles supporting context replication\
    \ MUST define a CRC over the\n   original uncompressed header as part of the profile-specific\n\
    \   information in the IR-CR packet.  This is necessary to allow a\n   decompressor\
    \ to verify that the replication process has succeeded.\n"
- title: 3.5.1.1.  7-bit CRC
  contents:
  - "3.5.1.1.  7-bit CRC\n   The 7-bit CRC in the IR-CR packet is calculated over\
    \ all octets of\n   the entire original header, before replication, in the same\
    \ manner as\n   described in Section 5.9.2 of [2].\n   The initial content of\
    \ the CRC register is to be preset to all 1's.\n   The CRC polynomial used for\
    \ the 7-bit CRC in the IR-CR is:\n      C(x) = 1 + x + x^2 + x^3 + x^6 + x^7\n"
- title: 3.5.1.2.  8-bit CRC
  contents:
  - "3.5.1.2.  8-bit CRC\n   The coverage of the 8-bit CRC in the IR-CR packet is\
    \ not profile\n   dependent, as opposed to the ROHC IR(-DYN) packet (see [2],\
    \ Sections\n   5.2.3 and 5.2.4).  It MUST cover the entire packet, excluding the\n\
    \   payload.  In particular, this includes the CID or any add-CID octet\n   as\
    \ well as the Base CID field, if present.  For profiles that define\n   the usage\
    \ of the Base CID within the packet format of the IR-CR as\n   optional, this\
    \ CRC MUST also cover the information used to indicate\n   the presence of this\
    \ field within the packet.\n   The initial content of the CRC register is to be\
    \ preset to all 1's.\n   The CRC polynomial used for the 8-bit CRC in the IR-CR\
    \ is:\n      C(x) = 1 + x + x^2 + x^8\n"
- title: 3.5.2.  General Format of the IR-CR Packet
  contents:
  - "3.5.2.  General Format of the IR-CR Packet\n   The context replication mechanism\
    \ requires a dedicated IR packet\n   format that uniquely identifies the IR-CR\
    \ packet.  This packet\n   communicates the static and the dynamic parts of the\
    \ replicated\n   context.  It may also communicate a reference to a base context.\n\
    \   With consideration to the extensibility of the IR packet type defined\n  \
    \ in [2], support for replication can be added using the profile-\n   specific\
    \ part of the IR packet.  Note that there is one bit, (x),\n   left in the IR\
    \ header for \"Profile specific information\".  The\n   definition of this bit\
    \ is profile specific.  Thus, profiles\n   supporting context replication MAY\
    \ use this bit as a flag indicating\n   whether the packet is an IR packet or\
    \ an IR-CR packet.  Note also\n   that profiles may define an alternative method\
    \ to identify the IR-CR\n   packet within the profile-specific information, instead\
    \ of using this\n   bit.\n   The IR-CR header associates a CID with a profile,\
    \ and initializes the\n   context using the context replication mechanism.  It\
    \ is not\n   recommended to use this packet to repair a damaged context.\n   \
    \   The IR-CR has the following general format:\n        0   1   2   3   4   5\
    \   6   7\n       --- --- --- --- --- --- --- ---\n      :         Add-CID octet\
    \         : if for small CIDs and (CID != 0)\n      +---+---+---+---+---+---+---+---+\n\
    \      | 1   1   1   1   1   1   0   x | IR type octet\n      +---+---+---+---+---+---+---+---+\n\
    \      :                               :\n      /      0-2 octets of CID     \
    \   / 1-2 octets if for large CIDs\n      :                               :\n\
    \      +---+---+---+---+---+---+---+---+\n      |            Profile         \
    \   | 1 octet\n      +---+---+---+---+---+---+---+---+\n      |              CRC\
    \              | 1 octet\n      +---+---+---+---+---+---+---+---+\n      |   \
    \                            |\n      / Profile-specific information  / variable\
    \ length\n      |                               |\n       - - - - - - - - - -\
    \ - - - - - -\n      |                               |\n      /           Payload\
    \             / variable length\n      |                               |\n   \
    \    - - - - - - - - - - - - - - - -\n      x:        Profile-specific information.\
    \  Interpreted according to\n                the profile indicated in the Profile\
    \ field.\n      Profile:  The profile to be associated with the CID.  In the IR-CR\n\
    \                packet, the profile identifier is abbreviated to the 8\n    \
    \            least significant bits (LSBs).  It selects the highest-\n       \
    \         number profile in the channel state parameter PROFILES\n           \
    \     that matches the 8 LSBs given (see also [2]).\n      CRC:      8-bit CRC\
    \ computed using the polynomial of Section\n                3.5.1.2.\n      Profile-specific\
    \ information:  The contents of this part of the\n                IR-CR packet\
    \ are defined by the individual profiles.\n                This information is\
    \ interpreted according to the profile\n                indicated in the Profile\
    \ field.  It MUST include a 7-bit\n                CRC over the original uncompressed\
    \ header using the\n                polynomial of Section 3.5.1.1.  It also includes\
    \ the\n                static and dynamic subheader information used for\n   \
    \             replication; thus, which header fields are replicated\n        \
    \        and their respective encoding methods are outside the\n             \
    \   scope of this document.\n      Payload:  The payload of the corresponding\
    \ original packet, if\n                any.\n"
- title: 3.5.3.  Properties of the Base Context Identifier (BCID)
  contents:
  - "3.5.3.  Properties of the Base Context Identifier (BCID)\n   The Base CID within\
    \ the packet format of the IR-CR may be assigned a\n   different value than the\
    \ context identifier associated with the new\n   flow (i.e., BCID != CID); otherwise,\
    \ the base context is overwritten\n   with the new context by the replication\
    \ process.\n   When the channel uses small CIDs, a four-bit field within the packet\n\
    \   format of the IR-CR minimally represents the BCID with a value from 0\n  \
    \ to 15.  In particular, the four bits of Add-CID used with small CIDs\n   [2]\
    \ are not needed for the BCID, as this information is already\n   provided by\
    \ the CID of the IR-CR packet itself.  When large CIDs are\n   used, the BCID\
    \ is represented in the IR-CR with one or two octets,\n   and it is coded in the\
    \ same way as a large CID [2].\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document adds an alternative mechanism for\
    \ ROHC profiles to\n   increase the compression efficiency when initializing a\
    \ new context,\n   by reusing information already existing at the decompressor.\
    \  This is\n   achieved by introducing new state transition logic, new feedback\n\
    \   logic, and a new packet type -- all based on logic and packet formats\n  \
    \ already defined in RFC 3095 [2].\n   In this respect, this document is not believed\
    \ to bring any\n   additional weakness to potential attacks to those already listed\
    \ in\n   [2].  However, it does increase the potential impacts of these\n   attacks\
    \ by creating dependencies between multiple contexts.\n   Specifically, corruption\
    \ of one context can fail compressor attempts\n   to initialize another context\
    \ at the decompressor, or to propagate to\n   another context, if the compressor\
    \ uses a corrupted context as a base\n   for replication.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The author would like to thank Richard Price, Kristofer\
    \ Sandlund,\n   Fredrik Lindstroem, Zhigang Liu, and HongBin Liao for valuable\
    \ input,\n   as well as Mark West and Lars-Erik Jonsson who also served as\n \
    \  committed working group document reviewers.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Bormann, C., Burmeister, C., Degermark, M., Fukushima, H.,\n        Hannu,\
    \ H., Jonsson, L-E., Hakenberg, R., Koren, T., Le, K., Liu,\n        Z., Martensson,\
    \ A., Miyazaki, A., Svanbro, K., Wiebke, T.,\n        Yoshimura, T., and H. Zheng,\
    \ \"RObust Header Compression (ROHC):\n        Framework and four profiles: RTP,\
    \ UDP, ESP, and uncompressed\",\n        RFC 3095, July 2001.\n"
- title: 6.2. Informative References
  contents:
  - "6.2. Informative References\n   [3]  Pelletier, G., Jonsson, L-E., Sandlund,\
    \ K., and M. West, \"RObust\n        Header Compression (ROHC): A Profile for\
    \ TCP/IP (ROHC-TCP)\",\n        Work in Progress, July 2005.\n   [4]  Jonsson,\
    \ L-E., \"RObust Header Compression (ROHC): Requirements\n        on TCP/IP Header\
    \ Compression\", RFC 4163, August 2005.\n   [5]  West, M. and S. McCann, \"TCP/IP\
    \ Field Behavior\", Work in\n        Progress, October 2004.\n   [6]  Finking,\
    \ R. and G. Pelletier, \"Formal Notation for Robust Header\n        Compression\
    \ (ROHC-FN)\", Work in Progress, June 2005.\n"
- title: 'Appendix A: General Format of the IR-CR Packet (Informative)'
  contents:
  - 'Appendix A: General Format of the IR-CR Packet (Informative)

    '
- title: A.1.  General Structure (Informative)
  contents:
  - "A.1.  General Structure (Informative)\n   This section provides an example of\
    \ the format of the profile-\n   specific information within the general format\
    \ of the IR-CR.\n     0   1   2   3   4   5   6   7\n   +---+---+---+---+---+---+---+---+\n\
    \   |                               |\n   / replication base information  / variable\
    \ length\n   |                               |\n   +---+---+---+---+---+---+---+---+\n\
    \   |                               |\n   /    replication information    / variable\
    \ length\n   |                               |\n    - - - - - - - - - - - - -\
    \ - - -\n   Replication base information: The contents of this part of the IR-CR\n\
    \      packet are defined by the individual profiles.  This information\n    \
    \  is interpreted according to the profile indicated in the Profile\n      field.\
    \  It MUST include a 7-bit CRC over the original uncompressed\n      header using\
    \ the polynomial of Section 3.4.1.1.  See Appendix A.2.\n   Replication information:\
    \ The contents of this part of the IR-CR\n      packet are also defined by the\
    \ individual profiles.  This part\n      contains the static and dynamic subheader\
    \ information used for\n      replication.  How this information is structured\
    \ is profile\n      specific; profiles may define the contents of this field using\
    \ a\n      chain structure (static and dynamic replication chains) or by\n   \
    \   defining header formats for replication (e.g., ROHC-TCP [3]).\n"
- title: A.2.  Profile-Specific Replication Information (Informative)
  contents:
  - "A.2.  Profile-Specific Replication Information (Informative)\n   This section\
    \ provides a more detailed example of the possible format\n   of the replication\
    \ information field described in Appendix A.1:\n   +---+---+---+---+---+---+---+---+\n\
    \   | B |          CRC7             |  1 octet\n   +---+---+---+---+---+---+---+---+\n\
    \   |                               |  present if B = 1,\n   /           Base\
    \ CID            /  1 octet if for small CIDs, or\n   |                      \
    \         |  1-2 octets if for large CIDs\n   +---+---+---+---+---+---+---+---+\n\
    \   B:        B = 1 indicates that the Base CID field is present.\n   CRC7:  \
    \  The CRC over the original, uncompressed, header.  This 7-bit\n            CRC\
    \ is computed according to Section 3.4.1.1.\n   Base CID: The CID identifying\
    \ the base context used for replication.\n"
- title: 'Appendix B: Inter-Profile Context Replication (Informative)'
  contents:
  - "Appendix B: Inter-Profile Context Replication (Informative)\n   Context replication\
    \ as defined in this document does not explicitly\n   support the concept of context\
    \ replication between profiles.\n   However, it might be of interest when developing\
    \ new compression\n   profiles.\n   Inter-profile context replication would require\
    \ that the decompressor\n   have access to data structures from the base context,\
    \ which belongs\n   to a profile different than the profile using replication.\
    \  This\n   information would have to be made available in a format consistent\n\
    \   with the data structures and encoding method(s) in use for all header\n  \
    \ fields that are being replicated.\n"
- title: B.1.  Defining Support for Inter-Profile Context Replication
  contents:
  - "B.1.  Defining Support for Inter-Profile Context Replication\n   A ROHC profile\
    \ describes how to compress a specific protocol stack,\n   and includes one or\
    \ more sets of packet formats.  The packet formats\n   will typically compress\
    \ the protocol headers relative to a context of\n   field values from previous\
    \ headers in a flow.  This context may also\n   contain some control data.  Thus,\
    \ the packet formats specify a\n   mapping between the uncompressed and compressed\
    \ version of a protocol\n   field.\n   This mapping is achieved through the use\
    \ of one or more encoding\n   methods, which are simply functions applied to compress\
    \ or decompress\n   a field.  An encoding method is in turn defined using a name,\
    \ a set\n   of function parameters, and a formal expression (i.e., using the\n\
    \   ROHC-FN [6]) or a textual description (i.e., a la RFC 3095 [2]) of\n   its\
    \ behaviour.\n   To compress one or more fields of a specific protocol stack,\n\
    \   different profiles may define their packet formats using different\n   encoding\
    \ methods, or using a variant of a similar technique.  A\n   typical example of\
    \ the latter is list compression, such as used for\n   IP extension headers. \
    \ This implies that context entries for a field\n   belonging to a specific protocol\
    \ stack may differ in their content,\n   representation, and structure from one\
    \ profile to another.\n   As a consequence of the above, a profile that supports\
    \ context\n   replication can only use a base context from another profile\n \
    \  explicitly supporting the concept of a base context.  That is,\n   existing\
    \ profiles not supporting this concept must be updated first\n   to ensure that\
    \ they can export the necessary context data entries\n   that use a meaningful\
    \ representation during replication.\n   Specifically, inter-profile context replication\
    \ would require that\n   decompressor implementations (including existing ones)\
    \ of other\n   profiles be updated when adding support for a profile that uses\n\
    \   context replication.  Therefore, inter-profile context replication\n   cannot\
    \ be seen as an implementation-specific issue.\n   The compressor must know if\
    \ the decompressor supports inter-profile\n   context replication before initiating\
    \ the procedure.  The compressor\n   must also know which contexts (belonging\
    \ to which profile) may be\n   used as a base context.  Therefore, a compressor\
    \ cannot initiate\n   context replication using a base context belonging to a\
    \ different\n   profile, unless that profile explicitly provides the proper mapping\n\
    \   for its context entries or that profile is defined formally using\n   ROHC-FN\
    \ [6] in a manner that makes both profiles compatible.  The set\n   of profiles\
    \ negotiated for the channel (see also RFC 3095 [2]) can\n   then be used to determine\
    \ if a context for a specific profile can be\n   used as a base context.\n"
- title: B.2.  Compatibility between Different Profiles (Informative)
  contents:
  - "B.2.  Compatibility between Different Profiles (Informative)\n   Compatibility\
    \ between profiles, when replicating a field for a\n   particular protocol stack,\
    \ can be expressed as follow: a field that\n   is compressed by different profiles\
    \ is compatible for inter-profile\n   replication if it is defined in the set\
    \ of packet formats using the\n   same mapping function between its uncompressed\
    \ and compressed\n   version.\n   For example, the IP Destination Address field\
    \ which, based on the\n   packet formats and compression strategies defined in\
    \ RFC 3095 [2], is\n   implicitly compressed using an encoding method equivalent\
    \ to the\n   static() method defined in ROHC-FN [6].\n   In particular, for profiles\
    \ that define their packet formats using a\n   formal notation such as ROHC-FN\
    \ [6], two different encoding methods\n   may not have the same name.  Thus, a\
    \ field from a protocol stack is\n   said to be compatible for replication between\
    \ two different profiles\n   if it has an equivalent definition within respective\
    \ packet formats.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ghyslain Pelletier\n   Box 920\n   Ericsson AB\n   SE-971\
    \ 28 Lulea, Sweden\n   Phone: +46 8 404 29 43\n   Fax:   +46 920 996 21\n   EMail:\
    \ ghyslain.pelletier@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
