- title: __initial_text__
  contents:
  - "                      RSVP-TE Signaling Procedure for\n             End-to-End\
    \ GMPLS Restoration and Resource Sharing\n"
- title: Abstract
  contents:
  - "Abstract\n   In non-packet transport networks, there are requirements where the\n\
    \   Generalized Multiprotocol Label Switching (GMPLS) end-to-end recovery\n  \
    \ scheme needs to employ a restoration Label Switched Path (LSP) while\n   keeping\
    \ resources for the working and/or protecting LSPs reserved in\n   the network\
    \ after the failure occurs.\n   This document reviews how the LSP association\
    \ is to be provided using\n   Resource Reservation Protocol - Traffic Engineering\
    \ (RSVP-TE)\n   signaling in the context of a GMPLS end-to-end recovery scheme\
    \ when\n   using restoration LSP where failed LSP is not torn down.  In\n   addition,\
    \ this document discusses resource sharing-based setup and\n   teardown of LSPs\
    \ as well as LSP reversion procedures.  No new\n   signaling extensions are defined\
    \ by this document, and it is strictly\n   informative in nature.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8131.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................4\n  \
    \    2.1. Terminology ................................................4\n    \
    \  2.2. Abbreviations ..............................................4\n   3. Overview\
    \ ........................................................4\n      3.1. Examples\
    \ of Restoration Schemes ............................5\n           3.1.1. 1+R\
    \ Restoration .....................................5\n           3.1.2. 1+1+R\
    \ Restoration ...................................6\n                  3.1.2.1.\
    \ 1+1+R Restoration - Variants ...............7\n      3.2. Resource Sharing by\
    \ Restoration LSP ........................7\n   4. RSVP-TE Signaling Procedure\
    \ .....................................8\n      4.1. Restoration LSP Association\
    \ ................................8\n      4.2. Resource Sharing-Based Restoration\
    \ LSP Setup ...............8\n      4.3. LSP Reversion .............................................10\n\
    \           4.3.1. Make-While-Break Reversion .........................10\n  \
    \         4.3.2. Make-Before-Break Reversion ........................11\n   5.\
    \ Security Considerations ........................................12\n   6. IANA\
    \ Considerations ............................................13\n   7. References\
    \ .....................................................13\n      7.1. Normative\
    \ References ......................................13\n      7.2. Informative\
    \ References ....................................13\n   Acknowledgements  .................................................14\n\
    \   Contributors ......................................................14\n  \
    \ Authors' Addresses ................................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Generalized Multiprotocol Label Switching (GMPLS) [RFC3945]\
    \ defines a\n   set of protocols, including Open Shortest Path First - Traffic\n\
    \   Engineering (OSPF-TE) [RFC4203] and Resource Reservation Protocol -\n   Traffic\
    \ Engineering (RSVP-TE) [RFC3473].  These protocols can be used\n   to set up\
    \ Label Switched Paths (LSPs) in non-packet transport\n   networks.  The GMPLS\
    \ protocol extends MPLS to support interfaces\n   capable of Time Division Multiplexing\
    \ (TDM), Lambda Switching and\n   Fiber Switching.  These switching technologies\
    \ provide several\n   protection schemes [RFC4426] [RFC4427] (e.g., 1+1, 1:N,\
    \ and M:N).\n   RSVP-TE signaling has been extended to support various GMPLS recovery\n\
    \   schemes, such as end-to-end recovery [RFC4872] and segment recovery\n   [RFC4873].\
    \  As described in [RFC6689], an ASSOCIATION object with\n   Association Type\
    \ \"Recovery\" [RFC4872] can be signaled in the RSVP\n   Path message to identify\
    \ the LSPs for restoration.  Also, an\n   ASSOCIATION object with Association\
    \ Type \"Resource Sharing\" [RFC4873]\n   can be signaled in the RSVP Path message\
    \ to identify the LSPs for\n   resource sharing.  Section 2.2 of [RFC6689] reviews\
    \ the procedure for\n   providing LSP associations for GMPLS end-to-end recovery,\
    \ and Section\n   2.4 of that document reviews the procedure for providing LSP\n\
    \   associations for sharing resources.\n   Generally, GMPLS end-to-end recovery\
    \ schemes have the restoration LSP\n   set up after the failure has been detected\
    \ and notified on the\n   working LSP.  For a recovery scheme with revertive behavior,\
    \ a\n   restoration LSP is set up while the working LSP and/or protecting LSP\n\
    \   are not torn down in the control plane due to a failure.  In non-\n   packet\
    \ transport networks, because working LSPs are typically set up\n   over preferred\
    \ paths, service providers would like to keep resources\n   associated with the\
    \ working LSPs reserved.  This is to make sure that\n   the service can be reverted\
    \ to the preferred path (working LSP) when\n   the failure is repaired to provide\
    \ deterministic behavior and a\n   guaranteed Service Level Agreement (SLA).\n\
    \   In this document, we review procedures for GMPLS LSP associations,\n   resource-sharing-based\
    \ LSP setup, teardown, and LSP reversion for\n   non-packet transport networks,\
    \ including the following:\n   o  The procedure for providing LSP associations\
    \ for the GMPLS end-to-\n      end recovery using restoration LSP where working\
    \ and protecting\n      LSPs are not torn down and resources are kept reserved\
    \ in the\n      network after the failure.\n   o  The procedure for resource sharing\
    \ using the Shared Explicit (SE)\n      flag in conjunction with an ASSOCIATION\
    \ object.  In [RFC3209], the\n      Make-Before-Break (MBB) method assumes the\
    \ old and new LSPs share\n      the SESSION object and signal SE flag in the SESSION_ATTRIBUTE\n\
    \      object for sharing resources.  According to [RFC6689], an\n      ASSOCIATION\
    \ object with Association Type \"Resource Sharing\" in the\n      Path message\
    \ enables the sharing of resources across LSPs with\n      different SESSION objects.\n\
    \   o  The procedures for LSP reversion and resource sharing, when using\n   \
    \   end-to-end recovery scheme with revertive behavior.\n   This document is strictly\
    \ informative in nature and does not define\n   any RSVP-TE signaling extensions.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - '2.  Conventions Used in This Document

    '
- title: 2.1.  Terminology
  contents:
  - "2.1.  Terminology\n   The reader is assumed to be familiar with the terminology\
    \ in\n   [RFC3209], [RFC3473], [RFC4872], and [RFC4873].  The terminology for\n\
    \   GMPLS recovery is defined in [RFC4427].\n"
- title: 2.2.  Abbreviations
  contents:
  - "2.2.  Abbreviations\n   GMPLS: Generalized Multiprotocol Label Switching\n  \
    \ LSP: Label Switched Path\n   MBB: Make-Before-Break\n   MPLS: Multiprotocol\
    \ Label Switching\n   RSVP: Resource Reservation Protocol\n   SE: Shared Explicit\
    \ (flag)\n   TDM: Time Division Multiplexing\n   TE: Traffic Engineering\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   The GMPLS end-to-end recovery scheme, as defined in [RFC4872]\
    \ and\n   discussed in this document, switches normal traffic to an alternate\n\
    \   LSP that is not even partially established only after the working LSP\n  \
    \ failure occurs.  The new alternate route is selected at the LSP head-\n   end\
    \ node, it may reuse resources of the failed LSP at intermediate\n   nodes and\
    \ may include additional intermediate nodes and/or links.\n"
- title: 3.1.  Examples of Restoration Schemes
  contents:
  - "3.1.  Examples of Restoration Schemes\n   Two forms of end-to-end recovery schemes,\
    \ 1+R restoration and 1+1+R\n   restoration, are described in the following sections.\
    \  Other forms of\n   end-to-end recovery schemes also exist, and they can use\
    \ these\n   signaling techniques.\n"
- title: 3.1.1.  1+R Restoration
  contents:
  - "3.1.1.  1+R Restoration\n   One example of the recovery scheme considered in\
    \ this document is 1+R\n   recovery.  The 1+R recovery scheme is exemplified in\
    \ Figure 1.  In\n   this example, a working LSP on path A-B-C-Z is pre-established.\n\
    \   Typically, after a failure detection and notification on the working\n   LSP,\
    \ a second LSP on path A-H-I-J-Z is established as a restoration\n   LSP.  Unlike\
    \ a protecting LSP, which is set up before the failure, a\n   restoration LSP\
    \ is set up when needed, after the failure.\n          +-----+    +-----+    \
    \ +-----+     +-----+\n          |  A  +----+  B  +-----+  C  +-----+  Z  |\n\
    \          +--+--+    +-----+     +-----+     +--+--+\n              \\      \
    \                          /\n               \\                              /\n\
    \             +--+--+       +-----+        +--+--+\n             |  H  +-------+\
    \  I  +--------+  J  |\n             +-----+       +-----+        +-----+\n  \
    \        Figure 1: An Example of 1+R Recovery Scheme\n   During failure switchover\
    \ with 1+R recovery scheme, in general,\n   working LSP resources are not released\
    \ so that working and\n   restoration LSPs coexist in the network.  Nonetheless,\
    \ working and\n   restoration LSPs can share network resources.  Typically, when\
    \ the\n   failure has recovered on the working LSP, the restoration LSP is no\n\
    \   longer required and is torn down while the traffic is reverted to the\n  \
    \ original working LSP.\n"
- title: 3.1.2.  1+1+R Restoration
  contents:
  - "3.1.2.  1+1+R Restoration\n   Another example of the recovery scheme considered\
    \ in this document is\n   1+1+R.  In 1+1+R, a restoration LSP is set up for the\
    \ working LSP\n   and/or the protecting LSP after the failure has been detected;\
    \ this\n   recovery scheme is exemplified in Figure 2.\n             +-----+ \
    \      +-----+        +-----+\n             |  D  +-------+  E  +--------+  F\
    \  |\n             +--+--+       +-----+        +--+--+\n               /    \
    \                          \\\n              /                               \
    \ \\\n          +--+--+    +-----+     +-----+     +--+--+\n          |  A  +----+\
    \  B  +-----+  C  +-----+  Z  |\n          +--+--+    +-----+     +-----+    \
    \ +--+--+\n              \\                                /\n               \\\
    \                              /\n             +--+--+       +-----+        +--+--+\n\
    \             |  H  +-------+  I  +--------+  J  |\n             +-----+     \
    \  +-----+        +-----+\n          Figure 2: An Example of 1+1+R Recovery Scheme\n\
    \   In this example, a working LSP on path A-B-C-Z and a protecting LSP\n   on\
    \ path A-D-E-F-Z are pre-established.  After a failure detection and\n   notification\
    \ on the working LSP or protecting LSP, a third LSP on\n   path A-H-I-J-Z is established\
    \ as a restoration LSP.  The restoration\n   LSP, in this case, provides protection\
    \ against failure of both the\n   working and protecting LSPs.  During failure\
    \ switchover with the\n   1+1+R recovery scheme, in general, failed LSP resources\
    \ are not\n   released so that working, protecting, and restoration LSPs coexist\
    \ in\n   the network.  The restoration LSP can share network resources with\n\
    \   the working LSP, and it can share network resources with the\n   protecting\
    \ LSP.  Typically, the restoration LSP is torn down when the\n   traffic is reverted\
    \ to the original LSP and is no longer needed.\n   There are two possible models\
    \ when using a restoration LSP with 1+1+R\n   recovery scheme:\n   o  A restoration\
    \ LSP is set up after either a working or a protecting\n      LSP fails.  Only\
    \ one restoration LSP is present at a time.\n   o  A restoration LSP is set up\
    \ after both the working and protecting\n      LSPs fail.  Only one restoration\
    \ LSP is present at a time.\n"
- title: 3.1.2.1.  1+1+R Restoration - Variants
  contents:
  - "3.1.2.1.  1+1+R Restoration - Variants\n   Two other possible variants exist\
    \ when using a restoration LSP with\n   1+1+R recovery scheme:\n   o  A restoration\
    \ LSP is set up after either a working or protecting\n      LSP fails.  Two different\
    \ restoration LSPs may be present, one for\n      the working LSP and one for\
    \ the protecting LSP.\n   o  Two different restoration LSPs are set up after both\
    \ working and\n      protecting LSPs fail, one for the working LSP and one for\
    \ the\n      protecting LSP.\n   In all these models, if a restoration LSP also\
    \ fails, it is torn down\n   and a new restoration LSP is set up.\n"
- title: 3.2.  Resource Sharing by Restoration LSP
  contents:
  - "3.2.  Resource Sharing by Restoration LSP\n                              +-----+\
    \      +-----+\n                              |  F  +------+  G  +--------+\n\
    \                              +--+--+      +-----+        |\n               \
    \                  |                        |\n                              \
    \   |                        |\n       +-----+    +-----+     +--+--+      +-----+\
    \     +--+--+\n       |  A  +----+  B  +-----+  C  +--X---+  D  +-----+  E  |\n\
    \       +-----+    +-----+     +-----+      +-----+     +-----+\n         Figure\
    \ 3: Resource Sharing in 1+R Recovery Scheme\n   Using the network shown in Figure\
    \ 3 as an example using 1+R recovery\n   scheme, LSP1 (A-B-C-D-E) is the working\
    \ LSP; assume it allows for\n   resource sharing when the LSP traffic is dynamically\
    \ restored.  Upon\n   detecting the failure of a link along the LSP1, e.g., Link\
    \ C-D, node\n   A needs to decide which alternative path it will use to signal\n\
    \   restoration LSP and reroute traffic.  In this case, A-B-C-F-G-E is\n   chosen\
    \ as the restoration LSP path, and the resources on the path\n   segment A-B-C\
    \ are reused by this LSP.  The working LSP is not torn\n   down and coexists with\
    \ the restoration LSP.  When the head-end node A\n   signals the restoration LSP,\
    \ nodes C, F, G, and E reconfigure the\n   resources (as listed in Table 1 of\
    \ this document) to set up the LSP\n   by sending cross-connection command to\
    \ the data plane.\n   In the recovery scheme employing revertive behavior, after\
    \ the\n   failure is repaired, the resources on nodes C and E need to be\n   reconfigured\
    \ to set up the working LSP (using a procedure described\n   in Section 4.3 of\
    \ this document) by sending cross-connection command\n   to the data plane.  The\
    \ traffic is then reverted back to the original\n   working LSP.\n"
- title: 4.  RSVP-TE Signaling Procedure
  contents:
  - '4.  RSVP-TE Signaling Procedure

    '
- title: 4.1.  Restoration LSP Association
  contents:
  - "4.1.  Restoration LSP Association\n   Where GMPLS end-to-end recovery scheme\
    \ needs to employ a restoration\n   LSP while keeping resources for the working\
    \ and/or protecting LSPs\n   reserved in the network after the failure, the restoration\
    \ LSP is set\n   up with an ASSOCIATION object that has the Association Type set\
    \ to\n   \"Recovery\" [RFC4872], the Association ID and the Association Source\n\
    \   set to the corresponding Association ID and the Association Source\n   signaled\
    \ in the Path message of the LSP it is restoring.  For\n   example, when a restoration\
    \ LSP is signaled for a failed working LSP,\n   the ASSOCIATION object in the\
    \ Path message of the restoration LSP\n   contains the Association ID and Association\
    \ Source set to the\n   Association ID and Association Source signaled in the\
    \ working LSP for\n   the \"Recovery\" Association Type.  Similarly, when a restoration\
    \ LSP\n   is set up for a failed protecting LSP, the ASSOCIATION object in the\n\
    \   Path message of the restoration LSP contains the Association ID and\n   Association\
    \ Source is set to the Association ID and Association\n   Source signaled in the\
    \ protecting LSP for the \"Recovery\" Association\n   Type.\n   The procedure\
    \ for signaling the PROTECTION object is specified in\n   [RFC4872].  Specifically,\
    \ the restoration LSP used for a working LSP\n   is set up with the P bit cleared\
    \ in the PROTECTION object in the Path\n   message of the restoration LSP and\
    \ the restoration LSP used for a\n   protecting LSP is set up with the P bit set\
    \ in the PROTECTION object\n   in the Path message of the restoration LSP.\n"
- title: 4.2.  Resource Sharing-Based Restoration LSP Setup
  contents:
  - "4.2.  Resource Sharing-Based Restoration LSP Setup\n   GMPLS LSPs can share resources\
    \ during LSP setup if they have the\n   Shared Explicit (SE) flag set in the SESSION_ATTRIBUTE\
    \ objects\n   [RFC3209] in the Path messages that create them and:\n   o  As defined\
    \ in [RFC3209], LSPs have identical SESSION objects,\n      and/or\n   o  As defined\
    \ in [RFC6689], LSPs have matching ASSOCIATION objects\n      with the Association\
    \ Type set to \"Resource Sharing\" signaled in\n      their Path messages.  In\
    \ this case, LSPs can have different\n      SESSION objects i.e., a different\
    \ Tunnel ID, Source and/or\n      Destination signaled in their Path messages.\n\
    \   As described in Section 2.5 of [RFC3209], the purpose of make-before-\n  \
    \ break is not to disrupt traffic, or adversely impact network\n   operations\
    \ while TE tunnel rerouting is in progress.  In non-packet\n   transport networks,\
    \ during the RSVP-TE signaling procedure, the nodes\n   set up cross-connections\
    \ along the LSP accordingly.  Because the\n   cross-connection cannot simultaneously\
    \ connect a shared resource to\n   different resources in two alternative LSPs,\
    \ nodes may not be able to\n   fulfill this request when LSPs share resources.\n\
    \   For LSP restoration upon failure, as explained in Section 11 of\n   [RFC4872],\
    \ the reroute procedure may reuse existing resources.  The\n   action of the intermediate\
    \ nodes during the rerouting process to\n   reconfigure cross-connections does\
    \ not further impact the traffic\n   since it has been interrupted due to the\
    \ already failed LSP.\n   The node actions for setting up the restoration LSP\
    \ can be\n   categorized into the following:\n   -----------------------------------+---------------------------------\n\
    \   |        Category                  |        Action                  |\n  \
    \ -----------------------------------+---------------------------------\n   |\
    \ Reusing existing resource on     | This type of node needs to     |\n   | both\
    \ input and output interfaces | reserve the existing resources |\n   | (nodes\
    \ A & B in Figure 3).       | and no cross-connection        |\n   |         \
    \                         | command is needed.             |\n   -----------------------------------+---------------------------------\n\
    \   | Reusing an existing resource only| This type of node needs to     |\n  \
    \ | on one of the interfaces, either | reserve the resources and send |\n   |\
    \ input or output interfaces, and  | the reconfiguration            |\n   | using\
    \ new resource on the        | cross-connection command to its|\n   | other interfaces.\
    \                | corresponding data plane       |\n   | (nodes C & E in Figure\
    \ 3).       | node on the interfaces where   |\n   |                         \
    \         | new resources are needed, and  |\n   |                           \
    \       | it needs to reuse the existing |\n   |                             \
    \     | resources on the other         |\n   |                               \
    \   | interfaces.                    |\n   -----------------------------------+---------------------------------\n\
    \   | Using new resources on both      | This type of node needs to     |\n  \
    \ | interfaces.                      | reserve the new resources      |\n   |\
    \ (nodes F & G in Figure 3).       | and send the cross-connection  |\n   |  \
    \                                | command on both interfaces.    |\n   -----------------------------------+---------------------------------\n\
    \         Table 1: Node Actions during Restoration LSP Setup\n   Depending on\
    \ whether or not the resource is reused, the node actions\n   differ.  This deviates\
    \ from normal LSP setup, since some nodes do not\n   need to reconfigure the cross-connection.\
    \  Also, the judgment of\n   whether the control plane node needs to send a cross-connection\
    \ setup\n   or modification command to its corresponding data plane node(s)\n\
    \   relies on the check whether the LSPs are sharing resources.\n"
- title: 4.3.  LSP Reversion
  contents:
  - "4.3.  LSP Reversion\n   If the end-to-end LSP recovery scheme employs the revertive\
    \ behavior,\n   as described in Section 3 of this document, traffic can be reverted\n\
    \   from the restoration LSP to the working or protecting LSP after its\n   failure\
    \ is recovered.  The LSP reversion can be achieved using two\n   methods:\n  \
    \ 1. Make-While-Break Reversion: resources associated with a working or\n    \
    \  protecting LSP are reconfigured while removing reservations for\n      the\
    \ restoration LSP.\n   2. Make-Before-Break Reversion: resources associated with\
    \ a working\n      or protecting LSP are reconfigured before removing reservations\n\
    \      for the restoration LSP.\n   In non-packet transport networks, both of\
    \ the above reversion methods\n   will result in some traffic disruption when\
    \ the restoration LSP and\n   the LSP being restored are sharing resources and\
    \ the cross-\n   connections need to be reconfigured on intermediate nodes.\n"
- title: 4.3.1.  Make-While-Break Reversion
  contents:
  - "4.3.1.  Make-While-Break Reversion\n   In this reversion method, restoration\
    \ LSP is simply requested to be\n   deleted by the head-end.  Removing reservations\
    \ for restoration LSP\n   triggers reconfiguration of resources associated with\
    \ a working or\n   protecting LSP on every node where resources are shared.  The\
    \ working\n   or protecting LSP state was not removed from the nodes when the\n\
    \   failure occurred.  Whenever reservation for restoration LSP is\n   removed\
    \ from a node, data plane configuration changes to reflect\n   reservations of\
    \ working or protecting LSP as signaling progresses.\n   Eventually, after the\
    \ whole restoration LSP is deleted, data plane\n   configuration will fully match\
    \ working or protecting LSP reservations\n   on the whole path.  Thus, reversion\
    \ is complete.\n   Make-while-break, while being relatively simple in its logic,\
    \ has a\n   few limitations as follows which may not be acceptable in some\n \
    \  networks:\n   o  No rollback\n   If, for some reason, reconfiguration of the\
    \ data plane on one of the\n   nodes, to match working or protecting LSP reservations,\
    \ fails,\n   falling back to restoration LSP is no longer an option, as its state\n\
    \   might have already been removed from other nodes.\n   o  No completion guarantee\n\
    \   Deletion of an LSP provides no guarantees of completion.  In\n   particular,\
    \ if RSVP packets are lost due to a node or link failure,\n   it is possible for\
    \ an LSP to be only partially deleted.  To mitigate\n   this, RSVP could maintain\
    \ soft state reservations and, hence,\n   eventually remove remaining reservations\
    \ due to refresh timeouts.\n   This approach is not feasible in non-packet transport\
    \ networks,\n   however, where control and data channels are often separated;\
    \ hence,\n   soft state reservations are not useful.\n   Finally, one could argue\
    \ that graceful LSP deletion [RFC3473] would\n   provide a guarantee of completion.\
    \  While this is true for most\n   cases, many implementations will time out graceful\
    \ deletion if LSP is\n   not removed within certain amount of time, e.g., due\
    \ to a transit\n   node fault.  After that, deletion procedures that provide no\n\
    \   completion guarantees will be attempted.  Hence, in corner cases a\n   completion\
    \ guarantee cannot be provided.\n   o  No explicit notification of completion\
    \ to head-end node\n   In some cases, it may be useful for a head-end node to\
    \ know when the\n   data plane has been reconfigured to match working or protecting\
    \ LSP\n   reservations.  This knowledge could be used for initiating operations\n\
    \   like enabling alarm monitoring, power equalization, and others.\n   Unfortunately,\
    \ for the reasons mentioned above, make-while-break\n   reversion lacks such explicit\
    \ notification.\n"
- title: 4.3.2.  Make-Before-Break Reversion
  contents:
  - "4.3.2.  Make-Before-Break Reversion\n   This reversion method can be used to\
    \ overcome limitations of make-\n   while-break reversion.  It is similar in spirit\
    \ to the MBB concept\n   used for re-optimization.  Instead of relying on deletion\
    \ of the\n   restoration LSP, the head-end chooses to establish a new reversion\n\
    \   LSP that duplicates the configuration of the resources on the working\n  \
    \ or protecting LSP and uses identical ASSOCIATION and PROTECTION\n   objects\
    \ in the Path message of that LSP.  Only if the setup of this\n   LSP is successful\
    \ will other (restoration and working or protecting)\n   LSPs be deleted by the\
    \ head-end.  MBB reversion consists of two\n   parts:\n   A) Make part:\n   Creating\
    \ a new reversion LSP following working or protecting the LSP.\n   The reversion\
    \ LSP shares all of the resources of the working or\n   protecting LSP and may\
    \ share resources with the restoration LSP.  As\n   the reversion LSP is created,\
    \ resources are\n   reconfigured to match its reservations.  Hence, after the\
    \ reversion\n   LSP is created, data plane configuration reflects working or\n\
    \   protecting LSP reservations.\n   B) Break part:\n   After the \"make\" part\
    \ is finished, the original working or protecting\n   and restoration LSPs are\
    \ torn down, and the reversion LSP becomes the\n   new working or protecting LSP.\
    \  Removing reservations for working or\n   restoration LSPs does not cause any\
    \ resource reconfiguration on the\n   reversion LSP -- nodes follow same procedures\
    \ for the \"break\" part of\n   any MBB operation.  Hence, after working or protecting\
    \ and\n   restoration LSPs are removed, the data plane configuration is exactly\n\
    \   the same as before starting restoration.  Thus, reversion is\n   complete.\n\
    \   MBB reversion uses make-before-break characteristics to overcome\n   challenges\
    \ related to make-while-break reversion as follow:\n   o  Rollback\n   If the\
    \ \"make\" part fails, the (existing) restoration LSP will still\n   be used to\
    \ carry existing traffic as the restoration LSP state was\n   not removed.  Same\
    \ logic applies here as for any MBB operation\n   failure.\n   o  Completion guarantee\n\
    \   LSP setup is resilient against RSVP message loss, as Path and Resv\n   messages\
    \ are refreshed periodically.  Hence, given that the network\n   recovers from\
    \ node and link failures eventually, reversion LSP setup\n   is guaranteed to\
    \ finish with either success or failure.\n   o  Explicit notification of completion\
    \ to head-end node\n   The head-end knows that the data plane has been reconfigured\
    \ to match\n   working or protecting LSP reservations on the intermediate nodes\
    \ when\n   it receives a Resv message for the reversion LSP.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document reviews procedures defined in [RFC3209],\
    \ [RFC4872],\n   [RFC4873], and [RFC6689] and does not define any new procedures.\n\
    \   This document does not introduce any new security issues; security\n   issues\
    \ were already covered in [RFC3209], [RFC4872], [RFC4873], and\n   [RFC6689].\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC3209]   Awduche, D., Berger, L., Gan, D.,\
    \ Li, T., Srinivasan, V.,\n               and G. Swallow, \"RSVP-TE: Extensions\
    \ to RSVP for LSP\n               Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December\
    \ 2001,\n               <http://www.rfc-editor.org/info/rfc3209>.\n   [RFC3473]\
    \   Berger, L., Ed., \"Generalized Multi-Protocol Label\n               Switching\
    \ (GMPLS) Signaling Resource ReserVation\n               Protocol-Traffic Engineering\
    \ (RSVP-TE) Extensions\",\n               RFC 3473, DOI 10.17487/RFC3473, January\
    \ 2003,\n               <http://www.rfc-editor.org/info/rfc3473>.\n   [RFC4872]\
    \   Lang, J., Ed., Rekhter, Y., Ed., and D. Papadimitriou,\n               Ed.,\
    \ \"RSVP-TE Extensions in Support of End-to-End\n               Generalized Multi-Protocol\
    \ Label Switching (GMPLS)\n               Recovery\", RFC 4872, DOI 10.17487/RFC4872,\
    \ May 2007,\n               <http://www.rfc-editor.org/info/rfc4872>.\n   [RFC4873]\
    \   Berger, L., Bryskin, I., Papadimitriou, D., and A.\n               Farrel,\
    \ \"GMPLS Segment Recovery\", RFC 4873,\n               DOI 10.17487/RFC4873,\
    \ May 2007,\n               <http://www.rfc-editor.org/info/rfc4873>.\n   [RFC6689]\
    \   Berger, L., \"Usage of the RSVP ASSOCIATION Object\",\n               RFC\
    \ 6689, DOI 10.17487/RFC6689, July 2012,\n               <http://www.rfc-editor.org/info/rfc6689>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC3945]   Mannie, E., Ed., \"Generalized Multi-Protocol\
    \ Label\n               Switching (GMPLS) Architecture\", RFC 3945,\n        \
    \       DOI 10.17487/RFC3945, October 2004,\n               <http://www.rfc-editor.org/info/rfc3945>.\n\
    \   [RFC4203]   Kompella, K., Ed., and Y. Rekhter, Ed., \"OSPF Extensions\n  \
    \             in Support of Generalized Multi-Protocol Label Switching\n     \
    \          (GMPLS)\", RFC 4203, DOI 10.17487/RFC4203, October 2005,\n        \
    \       <http://www.rfc-editor.org/info/rfc4203>.\n   [RFC4426]   Lang, J., Ed.,\
    \ Rajagopalan, B., Ed., and D.\n               Papadimitriou, Ed., \"Generalized\
    \ Multi-Protocol Label\n               Switching (GMPLS) Recovery Functional Specification\"\
    ,\n               RFC 4426, DOI 10.17487/RFC4426, March 2006,\n              \
    \ <http://www.rfc-editor.org/info/rfc4426>.\n   [RFC4427]   Mannie, E., Ed., and\
    \ D. Papadimitriou, Ed., \"Recovery\n               (Protection and Restoration)\
    \ Terminology for Generalized\n               Multi-Protocol Label Switching (GMPLS)\"\
    , RFC 4427,\n               DOI 10.17487/RFC4427, March 2006,\n              \
    \ <http://www.rfc-editor.org/info/rfc4427>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank:\n   -  George Swallow for\
    \ the discussions on the GMPLS restoration.\n   -  Lou Berger for the guidance\
    \ on this work.\n   -  Lou Berger, Vishnu Pavan Beeram, and Christian Hopps for\
    \ reviewing\n      this document and providing valuable comments.\n   A special\
    \ thanks to Dale Worley for his thorough review of this\n   document.\n"
- title: Contributors
  contents:
  - "Contributors\n   Gabriele Maria Galimberti\n   Cisco Systems, Inc.\n   Email:\
    \ ggalimbe@cisco.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Xian Zhang\n   Huawei Technologies\n   F3-1-B R&D Center,\
    \ Huawei Base\n   Bantian, Longgang District\n   Shenzhen 518129\n   China\n \
    \  Email: zhang.xian@huawei.com\n   Haomian Zheng (editor)\n   Huawei Technologies\n\
    \   F3-1-B R&D Center, Huawei Base\n   Bantian, Longgang District\n   Shenzhen\
    \ 518129\n   China\n   Email: zhenghaomian@huawei.com\n   Rakesh Gandhi (editor)\n\
    \   Cisco Systems, Inc.\n   Email: rgandhi@cisco.com\n   Zafar Ali\n   Cisco Systems,\
    \ Inc.\n   Email: zali@cisco.com\n   Pawel Brzozowski\n   ADVA Optical\n   Email:\
    \ PBrzozowski@advaoptical.com\n"
