- title: __initial_text__
  contents:
  - "             Additional Policies for the Partially Reliable\n             Stream\
    \ Control Transmission Protocol Extension\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines two additional policies for the Partially\n\
    \   Reliable Stream Control Transmission Protocol (PR-SCTP) extension.\n   These\
    \ policies allow limitation of the number of retransmissions and\n   prioritization\
    \ of user messages for more efficient usage of the send\n   buffer.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7496.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Conventions . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Additional PR-SCTP Policies . . . . . . . . . . . . . .\
    \ . . .   3\n     3.1.  Limited Retransmissions Policy  . . . . . . . . . . .\
    \ . .   3\n     3.2.  Priority Policy . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n   4.  Socket API Considerations . . . . . . . . . . . . . . . . . .\
    \   4\n     4.1.  Data Types  . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n     4.2.  Support for Added PR-SCTP Policies  . . . . . . . . . . .   5\n\
    \     4.3.  Socket Option for Getting the Stream-Specific PR-SCTP\n          \
    \ Status (SCTP_PR_STREAM_STATUS)  . . . . . . . . . . . . .   6\n     4.4.  Socket\
    \ Option for Getting the Association-Specific\n           PR-SCTP Status (SCTP_PR_ASSOC_STATUS)\
    \ . . . . . . . . . .   7\n     4.5.  Socket Option for Getting and Setting the\
    \ PR-SCTP Support\n           (SCTP_PR_SUPPORTED) . . . . . . . . . . . . . .\
    \ . . . . .   8\n   5.  Security Considerations . . . . . . . . . . . . . . .\
    \ . . . .   9\n   6.  References  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   9\n     6.1.  Normative References  . . . . . . . . . . . . . . . .\
    \ . .   9\n     6.2.  Informative References  . . . . . . . . . . . . . . . .\
    \ .   9\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  10\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Partially Reliable SCTP (PR-SCTP) extension defined\
    \ in [RFC3758]\n   provides a generic method for senders to abandon user messages.\
    \  The\n   decision to abandon a user message is sender side only, and the exact\n\
    \   condition is called a \"PR-SCTP policy\" ([RFC3758] refers to them as\n  \
    \ \"PR-SCTP Services\").  [RFC3758] also defines one particular PR-SCTP\n   policy,\
    \ called \"Timed Reliability\".  This allows the sender to\n   specify a timeout\
    \ for a user message after which the SCTP stack\n   abandons the user message.\n\
    \   This document specifies the following two additional PR-SCTP\n   policies:\n\
    \   Limited Retransmission Policy:  Allows limitation of the number of\n     \
    \ retransmissions.\n   Priority Policy:  Allows removal of lower-priority messages\
    \ if space\n      for higher-priority messages is needed in the send buffer.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Additional PR-SCTP Policies
  contents:
  - "3.  Additional PR-SCTP Policies\n   This section defines two new PR-SCTP policies,\
    \ one in each\n   subsection.\n   Please note that it is REQUIRED to implement\
    \ [RFC3758], if you want\n   to implement these additional policies.  However,\
    \ these additional\n   policies are OPTIONAL when implementing [RFC3758].\n"
- title: 3.1.  Limited Retransmissions Policy
  contents:
  - "3.1.  Limited Retransmissions Policy\n   Using the Limited Retransmission Policy\
    \ allows the sender of a user\n   message to specify an upper limit for the number\
    \ of retransmissions\n   for each DATA chunk of the given user messages.  The\
    \ sender MUST\n   abandon a user message if the number of retransmissions of any\
    \ of the\n   DATA chunks of the user message would exceed the provided limit.\
    \  The\n   sender MUST perform all other actions required for processing the\n\
    \   retransmission event, such as adapting the congestion window and the\n   retransmission\
    \ timeout.  Please note that the number of\n   retransmissions includes both fast\
    \ and timer-based retransmissions.\n   The sender MAY limit the number of retransmissions\
    \ to 0.  This will\n   result in abandoning the message when it would get retransmitted\
    \ for\n   the first time.  The use of this setting provides a service similar\n\
    \   to UDP, which also does not perform any retransmissions.\n   Please note that\
    \ using this policy does not affect the handling of\n   the thresholds 'Association.Max.Retrans'\
    \ and 'Path.Max.Retrans' as\n   specified in Section 8 of [RFC4960].\n   The WebRTC\
    \ protocol stack (see [DATA-CHAN]) is an example of where\n   the Limited Retransmissions\
    \ Policy is used.\n"
- title: 3.2.  Priority Policy
  contents:
  - "3.2.  Priority Policy\n   Using the Priority Policy allows the sender of a user\
    \ message to\n   specify a priority.  When storing a user message in the send\
    \ buffer\n   while there is not enough available space, the SCTP stack at the\n\
    \   sender side MAY abandon other user message(s) of the same SCTP\n   association\
    \ (with the same or a different stream) with a priority\n   lower than the provided\
    \ one.  User messages sent reliably are\n   considered to have a priority higher\
    \ than all messages sent with the\n   Priority Policy.  The algorithm for selecting\
    \ the message(s) being\n   abandoned is implementation specific.\n   After lower-priority\
    \ messages have been abandoned, high-priority\n   messages can be transferred\
    \ without the send call blocking (if used\n   in blocking mode) or the send call\
    \ failing (if used in non-blocking\n   mode).\n   The IP Flow Information Export\
    \ (IPFIX) protocol stack (see [RFC7011])\n   is an example of where the Priority\
    \ Policy can be used.  Template\n   records would be sent with full reliability,\
    \ while flow records\n   related to billing, security, and other monitoring would\
    \ be sent\n   using the Priority Policy with varying priority.  The priority of\n\
    \   security-related flow records would be set higher than the priority\n   of\
    \ monitoring-related flow records.\n"
- title: 4.  Socket API Considerations
  contents:
  - "4.  Socket API Considerations\n   This section describes how the socket API defined\
    \ in [RFC6458] is\n   extended to support the newly defined PR-SCTP policies,\
    \ to provide\n   some statistical information, and to control the negotiation\
    \ of the\n   PR-SCTP extension during the SCTP association setup.\n   Please note\
    \ that this section is informational only.\n"
- title: 4.1.  Data Types
  contents:
  - "4.1.  Data Types\n   This section uses data types from [IEEE.1003-1G.1997]: uintN_t\
    \ means\n   an unsigned integer of exactly N bits (e.g., uint16_t).  This is the\n\
    \   same as in [RFC6458].\n"
- title: 4.2.  Support for Added PR-SCTP Policies
  contents:
  - "4.2.  Support for Added PR-SCTP Policies\n   As defined in [RFC6458], the PR-SCTP\
    \ policy is specified and\n   configured by using the following sctp_prinfo structure:\n\
    \   struct sctp_prinfo {\n     uint16_t pr_policy;\n     uint32_t pr_value;\n\
    \   };\n   When the Limited Retransmission Policy described in Section 3.1 is\n\
    \   used, pr_policy has the value SCTP_PR_SCTP_RTX and the number of\n   retransmissions\
    \ is given in pr_value.\n   When using the Priority Policy described in Section\
    \ 3.2, pr_policy\n   has the value SCTP_PR_SCTP_PRIO.  The priority is given in\
    \ pr_value.\n   The value of zero is the highest priority, and larger numbers\
    \ in\n   pr_value denote lower priorities.\n   The following table summarizes\
    \ the possible parameter settings\n   defined in [RFC6458] and this document:\n\
    \     +-------------------+---------------------------+---------------+\n    \
    \ | pr_policy         | pr_value                  | Specification |\n     +-------------------+---------------------------+---------------+\n\
    \     | SCTP_PR_SCTP_NONE | Ignored                   | [RFC6458]     |\n    \
    \ | SCTP_PR_SCTP_TTL  | Lifetime in ms            | [RFC6458]     |\n     | SCTP_PR_SCTP_RTX\
    \  | Number of retransmissions | Section 3.1   |\n     | SCTP_PR_SCTP_PRIO | Priority\
    \                  | Section 3.2   |\n     +-------------------+---------------------------+---------------+\n"
- title: 4.3.  Socket Option for Getting the Stream-Specific PR-SCTP Status
  contents:
  - "4.3.  Socket Option for Getting the Stream-Specific PR-SCTP Status\n      (SCTP_PR_STREAM_STATUS)\n\
    \   This socket option uses IPPROTO_SCTP as its level and\n   SCTP_PR_STREAM_STATUS\
    \ as its name.  It can only be used with\n   getsockopt() but not with setsockopt().\
    \  The socket option value uses\n   the following structure:\n   struct sctp_prstatus\
    \ {\n     sctp_assoc_t sprstat_assoc_id;\n     uint16_t sprstat_sid;\n     uint16_t\
    \ sprstat_policy;\n     uint64_t sprstat_abandoned_unsent;\n     uint64_t sprstat_abandoned_sent;\n\
    \   };\n   sprstat_assoc_id:  This parameter is ignored for one-to-one style\n\
    \      sockets.  For one-to-many style sockets, this parameter indicates\n   \
    \   for which association the user wants the information.  It is an\n      error\
    \ to use SCTP_{CURRENT|ALL|FUTURE}_ASSOC in sprstat_assoc_id.\n   sprstat_sid:\
    \  This parameter indicates for which outgoing SCTP stream\n      the user wants\
    \ the information.\n   sprstat_policy:  This parameter indicates for which PR-SCTP\
    \ policy\n      the user wants the information.  It is an error to use\n     \
    \ SCTP_PR_SCTP_NONE in sprstat_policy.  If SCTP_PR_SCTP_ALL is used,\n      the\
    \ counters provided are aggregated over all supported policies.\n   sprstat_abandoned_unsent:\
    \  The number of user messages that have been\n      abandoned using the policy\
    \ specified in sprstat_policy on the\n      stream specified in sprstat_sid for\
    \ the association specified by\n      sprstat_assoc_id, before any part of the\
    \ user message could be\n      sent.\n   sprstat_abandoned_sent:  The number of\
    \ user messages that have been\n      abandoned using the policy specified in\
    \ sprstat_policy on the\n      stream specified in sprstat_sid for the association\
    \ specified by\n      sprstat_assoc_id, after a part of the user message has been\
    \ sent.\n   There are separate counters for unsent and sent user messages because\n\
    \   the SCTP_SEND_FAILED_EVENT supports a similar differentiation.\n   Please\
    \ note that an abandoned large user message requiring SCTP-level\n   fragmentation\
    \ is reported in the sprstat_abandoned_sent counter as\n   soon as at least one\
    \ fragment of it has been sent.  Therefore, each\n   abandoned user message is\
    \ counted in either sprstat_abandoned_unsent\n   or sprstat_abandoned_sent.\n\
    \   If more detailed information about abandoned user messages is\n   required,\
    \ the subscription to the SCTP_SEND_FAILED_EVENT is\n   recommended.  Please note\
    \ that some implementations might choose not\n   to support this option, since\
    \ it increases the resources needed for\n   an outgoing SCTP stream.  For the\
    \ same reasons, some implementations\n   might only support using SCTP_PR_SCTP_ALL\
    \ in sprstat_policy.\n   sctp_opt_info() needs to be extended to support\n   SCTP_PR_STREAM_STATUS.\n"
- title: 4.4.  Socket Option for Getting the Association-Specific PR-SCTP Status
  contents:
  - "4.4.  Socket Option for Getting the Association-Specific PR-SCTP Status\n   \
    \   (SCTP_PR_ASSOC_STATUS)\n   This socket option uses IPPROTO_SCTP as its level\
    \ and\n   SCTP_PR_ASSOC_STATUS as its name.  It can only be used with\n   getsockopt(),\
    \ but not with setsockopt().  The socket option value\n   uses the same structure\
    \ as described in Section 4.3:\n   struct sctp_prstatus {\n     sctp_assoc_t sprstat_assoc_id;\n\
    \     uint16_t sprstat_sid;\n     uint16_t sprstat_policy;\n     uint64_t sprstat_abandoned_unsent;\n\
    \     uint64_t sprstat_abandoned_sent;\n   };\n   sprstat_assoc_id:  This parameter\
    \ is ignored for one-to-one style\n      sockets.  For one-to-many style sockets,\
    \ this parameter indicates\n      for which association the user wants the information.\
    \  It is an\n      error to use SCTP_{CURRENT|ALL|FUTURE}_ASSOC in sprstat_assoc_id.\n\
    \   sprstat_sid:  This parameter is ignored.\n   sprstat_policy:  This parameter\
    \ indicates for which PR-SCTP policy\n      the user wants the information.  It\
    \ is an error to use\n      SCTP_PR_SCTP_NONE in sprstat_policy.  If SCTP_PR_SCTP_ALL\
    \ is used,\n      the counters provided are aggregated over all supported policies.\n\
    \   sprstat_abandoned_unsent:  The number of user messages that have been\n  \
    \    abandoned using the policy specified in sprstat_policy for the\n      association\
    \ specified by sprstat_assoc_id, before any part of the\n      user message could\
    \ be sent.\n   sprstat_abandoned_sent:  The number of user messages that have\
    \ been\n      abandoned using the policy specified in sprstat_policy for the\n\
    \      association specified by sprstat_assoc_id, after a part of the\n      user\
    \ message has been sent.\n   There are separate counters for unsent and sent user\
    \ messages because\n   the SCTP_SEND_FAILED_EVENT supports a similar differentiation.\n\
    \   Please note that an abandoned large user message requiring SCTP-level\n  \
    \ fragmentation is reported in the sprstat_abandoned_sent counter as\n   soon\
    \ as at least one fragment of it has been sent.  Therefore, each\n   abandoned\
    \ user message is counted in either sprstat_abandoned_unsent\n   or sprstat_abandoned_sent.\n\
    \   If more detailed information about abandoned user messages is\n   required,\
    \ the usage of the option described in Section 4.3 or the\n   subscription to\
    \ the SCTP_SEND_FAILED_EVENT is recommended.\n   sctp_opt_info() needs to be extended\
    \ to support SCTP_PR_ASSOC_STATUS.\n"
- title: 4.5.  Socket Option for Getting and Setting the PR-SCTP Support
  contents:
  - "4.5.  Socket Option for Getting and Setting the PR-SCTP Support\n      (SCTP_PR_SUPPORTED)\n\
    \   This socket option allows the enabling or disabling of the\n   negotiation\
    \ of PR-SCTP support for future associations.  For existing\n   associations,\
    \ it allows one to query whether or not PR-SCTP support\n   was negotiated on\
    \ a particular association.\n   Whether or not PR-SCTP is enabled by default is\
    \ implementation\n   specific.\n   This socket option uses IPPROTO_SCTP as its\
    \ level and\n   SCTP_PR_SUPPORTED as its name.  It can be used with getsockopt()\
    \ and\n   setsockopt().  The socket option value uses the following structure\n\
    \   defined in [RFC6458]:\n   struct sctp_assoc_value {\n     sctp_assoc_t assoc_id;\n\
    \     uint32_t assoc_value;\n   };\n   assoc_id:  This parameter is ignored for\
    \ one-to-one style sockets.\n      For one-to-many style sockets, this parameter\
    \ indicates upon which\n      association the user is performing an action.  The\
    \ special\n      sctp_assoc_t SCTP_FUTURE_ASSOC can also be used; it is an error\
    \ to\n      use SCTP_{CURRENT|ALL}_ASSOC in assoc_id.\n   assoc_value:  A non-zero\
    \ value encodes the enabling of PR-SCTP,\n      whereas a value of 0 encodes the\
    \ disabling of PR-SCTP.\n   sctp_opt_info() needs to be extended to support SCTP_PR_SUPPORTED.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document does not add any security considerations\
    \ to those given\n   in [RFC4960], [RFC3758], and [RFC6458].  As indicated in\
    \ the Security\n   Considerations of [RFC3758], transport-layer security in the\
    \ form of\n   TLS over SCTP (see [RFC3436]) can't be used for PR-SCTP.  However,\n\
    \   DTLS over SCTP (see [RFC6083]) could be used instead.  If DTLS over\n   SCTP\
    \ as specified in [RFC6083] is used, the Security Considerations\n   of [RFC6083]\
    \ do apply.  It should also be noted that using PR-SCTP\n   for an SCTP association\
    \ doesn't allow that association to behave more\n   aggressively than an SCTP\
    \ association not using PR-SCTP.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3758]\
    \  Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and P.\n              Conrad,\
    \ \"Stream Control Transmission Protocol (SCTP)\n              Partial Reliability\
    \ Extension\", RFC 3758, May 2004,\n              <http://www.rfc-editor.org/info/rfc3758>.\n\
    \   [RFC4960]  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n \
    \             RFC 4960, September 2007,\n              <http://www.rfc-editor.org/info/rfc4960>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC3436]  Jungmaier, A., Rescorla, E., and\
    \ M. Tuexen, \"Transport\n              Layer Security over Stream Control Transmission\
    \ Protocol\",\n              RFC 3436, December 2002,\n              <http://www.rfc-editor.org/info/rfc3436>.\n\
    \   [RFC6083]  Tuexen, M., Seggelmann, R., and E. Rescorla, \"Datagram\n     \
    \         Transport Layer Security (DTLS) for Stream Control\n              Transmission\
    \ Protocol (SCTP)\", RFC 6083, January 2011,\n              <http://www.rfc-editor.org/info/rfc6083>.\n\
    \   [RFC6458]  Stewart, R., Tuexen, M., Poon, K., Lei, P., and V.\n          \
    \    Yasevich, \"Sockets API Extensions for the Stream Control\n             \
    \ Transmission Protocol (SCTP)\", RFC 6458, December 2011,\n              <http://www.rfc-editor.org/info/rfc6458>.\n\
    \   [RFC7011]  Claise, B., Ed., Trammell, B., Ed., and P. Aitken,\n          \
    \    \"Specification of the IP Flow Information Export (IPFIX)\n             \
    \ Protocol for the Exchange of Flow Information\", STD 77,\n              RFC\
    \ 7011, September 2013,\n              <http://www.rfc-editor.org/info/rfc7011>.\n\
    \   [DATA-CHAN]\n              Jesup, R., Loreto, S., and M. Tuexen, \"WebRTC\
    \ Data\n              Channels\", Work in Progress, draft-ietf-rtcweb-data-\n\
    \              channel-13, January 2015.\n   [IEEE.1003-1G.1997]\n           \
    \   IEEE, \"Protocol Independent Interfaces\", IEEE Standard\n              1003.1G,\
    \ March 1997.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors wish to thank Benoit Claise, Spencer Dawkins,\
    \ Gorry\n   Fairhurst, Stephen Farrell, Barry Leiba, Karen Egede Nielsen,\n  \
    \ Ka-Cheong Poon, Dan Romascanu, Irene Ruengeler, Jamal Hadi Salim,\n   Joseph\
    \ Salowey, Brian Trammell, and Vlad Yasevich for their\n   invaluable comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael Tuexen\n   Muenster University of Applied Sciences\n\
    \   Stegerwaldstrasse 39\n   48565 Steinfurt\n   Germany\n   EMail: tuexen@fh-muenster.de\n\
    \   Robin Seggelmann\n   Metafinanz Informationssysteme GmbH\n   Leopoldstrasse\
    \ 146\n   80804 Muenchen\n   Germany\n   EMail: rfc@robin-seggelmann.com\n   Randall\
    \ R. Stewart\n   Netflix, Inc.\n   Chapin, SC  29036\n   United States\n   EMail:\
    \ randall@lakerest.net\n   Salvatore Loreto\n   Ericsson\n   Hirsalantie 11\n\
    \   Jorvas  02420\n   Finland\n   EMail: Salvatore.Loreto@ericsson.com\n"
