- title: __initial_text__
  contents:
  - '                  With-defaults Capability for NETCONF

    '
- title: Abstract
  contents:
  - "Abstract\n   The Network Configuration Protocol (NETCONF) defines ways to read\
    \ and\n   edit configuration data from a NETCONF server.  In some cases, part\n\
    \   of this data may not be set by the NETCONF client, but rather a\n   default\
    \ value known to the server is used instead.  In many\n   situations the NETCONF\
    \ client has a priori knowledge about default\n   data, so the NETCONF server\
    \ does not need to save it in a NETCONF\n   configuration datastore or send it\
    \ to the client in a retrieval\n   operation reply.  In other situations the NETCONF\
    \ client will need\n   this data from the server.  Not all server implementations\
    \ treat this\n   default data the same way.  This document defines a capability-based\n\
    \   extension to the NETCONF protocol that allows the NETCONF client to\n   identify\
    \ how defaults are processed by the server, and also defines\n   new mechanisms\
    \ for client control of server processing of default\n   data.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6243.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  Default-Handling Behavior  . . . . . . . . . . . .\
    \ . . . .  5\n     1.3.  Client Controlled Retrieval of Default Data  . . . .\
    \ . . .  5\n   2.  Default-Handling Basic Modes . . . . . . . . . . . . . . .\
    \ . .  6\n     2.1.  'report-all' Basic Mode  . . . . . . . . . . . . . . . .\
    \ .  6\n       2.1.1.  'report-all' Basic Mode Retrieval  . . . . . . . . . .\
    \  6\n       2.1.2.  'report-all' <with-defaults> Retrieval . . . . . . . .  6\n\
    \       2.1.3.  'report-all' <edit-config> and <copy-config>\n               Behavior\
    \ . . . . . . . . . . . . . . . . . . . . . . .  6\n     2.2.  'trim' Basic Mode\
    \  . . . . . . . . . . . . . . . . . . . .  7\n       2.2.1.  'trim' Basic Mode\
    \ Retrieval  . . . . . . . . . . . . .  7\n       2.2.2.  'trim' <with-defaults>\
    \ Retrieval . . . . . . . . . . .  7\n       2.2.3.  'trim' <edit-config> and\
    \ <copy-config> Behavior  . . .  7\n     2.3.  'explicit' Basic Mode  . . . .\
    \ . . . . . . . . . . . . . .  8\n       2.3.1.  'explicit' Basic Mode Retrieval\
    \  . . . . . . . . . . .  8\n       2.3.2.  'explicit' <with-defaults> Retrieval\
    \ . . . . . . . . .  8\n       2.3.3.  'explicit' <edit-config> and <copy-config>\
    \ Behavior  .  8\n   3.  Retrieval of Default Data  . . . . . . . . . . . . .\
    \ . . . . .  9\n     3.1.  'report-all' Retrieval Mode  . . . . . . . . . . .\
    \ . . . .  9\n     3.2.  'trim' Retrieval Mode  . . . . . . . . . . . . . . .\
    \ . . .  9\n     3.3.  'explicit' Retrieval Mode  . . . . . . . . . . . . . .\
    \ . .  9\n     3.4.  'report-all-tagged' Retrieval Mode . . . . . . . . . . .\
    \ .  9\n   4.  With-defaults Capability . . . . . . . . . . . . . . . . . . .\
    \ 10\n     4.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . 10\n\
    \     4.2.  Dependencies . . . . . . . . . . . . . . . . . . . . . . . 10\n  \
    \   4.3.  Capability Identifier  . . . . . . . . . . . . . . . . . . 10\n    \
    \ 4.4.  New Operations . . . . . . . . . . . . . . . . . . . . . . 11\n     4.5.\
    \  Modifications to Existing Operations . . . . . . . . . . . 11\n       4.5.1.\
    \  <get>, <get-config>, and <copy-config> Operations  . . 11\n       4.5.2.  <edit-config>\
    \ Operation  . . . . . . . . . . . . . . . 12\n       4.5.3.  Other Operations\
    \ . . . . . . . . . . . . . . . . . . . 13\n     4.6.  Interactions with Other\
    \ Capabilities . . . . . . . . . . . 13\n   5.  YANG Module for the <with-defaults>\
    \ Parameter  . . . . . . . . 13\n   6.  XSD for the 'default' Attribute  . . .\
    \ . . . . . . . . . . . . 17\n   7.  IANA Considerations  . . . . . . . . . .\
    \ . . . . . . . . . . . 18\n   8.  Security Considerations  . . . . . . . . .\
    \ . . . . . . . . . . 18\n   9.  Acknowledgements . . . . . . . . . . . . . .\
    \ . . . . . . . . . 19\n   10. Normative References . . . . . . . . . . . . .\
    \ . . . . . . . . 19\n   Appendix A.  Usage Examples  . . . . . . . . . . . .\
    \ . . . . . . . 20\n     A.1.  Example YANG Module  . . . . . . . . . . . . .\
    \ . . . . . . 20\n     A.2.  Example Data Set . . . . . . . . . . . . . . . .\
    \ . . . . . 21\n     A.3.  Protocol Operation Examples  . . . . . . . . . . .\
    \ . . . . 22\n       A.3.1.  <with-defaults> = 'report-all' . . . . . . . . .\
    \ . . . 22\n       A.3.2.  <with-defaults> = 'report-all-tagged'  . . . . . .\
    \ . . 23\n       A.3.3.  <with-defaults> = 'trim' . . . . . . . . . . . . . .\
    \ . 24\n       A.3.4.  <with-defaults> = 'explicit' . . . . . . . . . . . . .\
    \ 25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The NETCONF protocol [RFC6241] defines ways to read configuration\
    \ and\n   state data from a NETCONF server.  Part of the configuration data may\n\
    \   not be set by the NETCONF client, but rather by a default value from\n   the\
    \ data model.  In many situations the NETCONF client has a priori\n   knowledge\
    \ about default data, so the NETCONF server does not need to\n   send it to the\
    \ client.  A priori knowledge can be obtained, e.g.,\n   from a document formally\
    \ describing the data models supported by the\n   NETCONF server.\n   It can be\
    \ important for a client to know exactly how a server\n   implementation will\
    \ handle default data.  There are subtle\n   differences in some protocol operations\
    \ where the default-handling\n   behavior of the server will affect the outcome\
    \ of the operation.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n   Data model schema:  A document or set of documents describing\
    \ the\n      data models supported by the NETCONF server.\n   Management application:\
    \  A computer program running outside the\n      NETCONF server that configures\
    \ or supervises the NETCONF server.\n      A management application can reach\
    \ the device, e.g., via NETCONF,\n      command line interface (CLI), or the Simple\
    \ Network Management\n      Protocol (SNMP).\n   Schema default data:  Data specified\
    \ in the data model schema as\n      default, that is, set or used by the device\
    \ whenever the NETCONF\n      client or other management application/user does\
    \ not provide a\n      specific value for the relevant data node.  Schema default\
    \ data\n      may or may not be stored as part of a configuration datastore,\n\
    \      depending on the basic mode used by a particular server.\n   Default data:\
    \  Conceptual data containing a default value.  Default\n      data is not kept\
    \ in a datastore.  Not all servers use the same\n      criteria to decide if a\
    \ data node is actually instantiated in a\n      datastore.  If a data node is\
    \ not present in a datastore, and a\n      schema default definition is in use\
    \ by the server instead, then it\n      is considered to be a default data node.\n\
    \   Default value:  A default value is a value for a data node instance\n    \
    \  that is conceptually in use by the server, when the data node\n      instance\
    \ does not exist.\n   Explicitly set data:  Data that is set to any value by a\
    \ NETCONF\n      client or other management application by the way of an explicit\n\
    \      management operation, including any data model schema default\n      value.\
    \  Any value set by the NETCONF server that is not the schema\n      defined default\
    \ value is also considered explicitly set data.\n   <with-defaults> retrieval:\
    \  Refers to a protocol operation that\n      includes the <with-default> parameter\
    \ to control the handling of\n      default data.\n   :with-defaults:  The shorthand\
    \ notation for the with-defaults\n      capability identifier.\n   The following\
    \ terms are defined in [RFC6241]:\n   o  client\n   o  datastore\n   o  operation\n\
    \   o  server\n   The following term is defined in [RFC6020]:\n   o  data node\n"
- title: 1.2.  Default-Handling Behavior
  contents:
  - "1.2.  Default-Handling Behavior\n   The default-handling behavior used by a server\
    \ will impact NETCONF\n   protocol operations in two ways:\n   1.  Data retrieval:\
    \ A server is normally allowed to exclude data\n       nodes that it considers\
    \ to contain the default value.  The actual\n       nodes omitted depend on the\
    \ default-handling behavior used by the\n       server.\n   2.  Create and delete\
    \ operations: The <edit-config> 'operation'\n       attribute can be used to create\
    \ and/or delete specific data\n       nodes.  These operations depend on whether\
    \ or not the target node\n       currently exists.  The server's default-handling\
    \ behavior will\n       determine whether or not the requested node currently\
    \ exists in\n       the configuration datastore.\n"
- title: 1.3.  Client Controlled Retrieval of Default Data
  contents:
  - "1.3.  Client Controlled Retrieval of Default Data\n   A networking device may\
    \ have a large number of default values.  Often\n   the default values are specifically\
    \ defined with a reasonable value,\n   documented and well-known, so that the\
    \ management user does not need\n   to handle them.  For these reasons, it is\
    \ quite common for networking\n   devices to suppress the output of parameters\
    \ having the default\n   value.\n   However, there are use-cases when a NETCONF\
    \ client will need the\n   default data from the server:\n   o  The management\
    \ application often needs a single, definitive, and\n      complete set of configuration\
    \ values that determine how the\n      networking device works.\n   o  Documentation\
    \ about default values can be unreliable or\n      unavailable.\n   o  Some management\
    \ applications might not have the capabilities to\n      correctly parse and interpret\
    \ formal data models.\n   o  Human users might want to understand the received\
    \ data without\n      consultation of the documentation.\n   In all these cases,\
    \ the NETCONF client will need a mechanism to\n   retrieve default data from a\
    \ NETCONF server.\n   This document defines a NETCONF protocol capability to identify\
    \ the\n   server's default-handling behavior, an XML\n   [W3C.REC-xmlschema-0-20041028]\
    \ attribute to identify default data,\n   and a YANG module extension to the NETCONF\
    \ protocol that allows the\n   NETCONF client to control whether default data\
    \ is returned by the\n   server.\n"
- title: 2.  Default-Handling Basic Modes
  contents:
  - "2.  Default-Handling Basic Modes\n   Not all server implementations treat default\
    \ data in the same way.\n   Instead of forcing a single implementation strategy,\
    \ this document\n   allows a server to advertise a particular style of default-handling,\n\
    \   and the client can adjust accordingly.  Client implementations are\n   expected\
    \ to be powerful enough to support all three of the server\n   basic default-handling\
    \ modes.\n   NETCONF servers report default data in different ways.  This document\n\
    \   specifies three standard default-handling basic modes that a server\n   implementer\
    \ may choose from:\n   o  report-all\n   o  trim\n   o  explicit\n   A server\
    \ MUST select one of the three basic modes defined in this\n   section for handling\
    \ default data.\n"
- title: 2.1.  'report-all' Basic Mode
  contents:
  - "2.1.  'report-all' Basic Mode\n   A server that uses the 'report-all' basic mode\
    \ does not consider any\n   data node to be default data, even schema default\
    \ data.\n"
- title: 2.1.1.  'report-all' Basic Mode Retrieval
  contents:
  - "2.1.1.  'report-all' Basic Mode Retrieval\n   When data is retrieved from a server\
    \ using the 'report-all' basic\n   mode, and the <with-defaults> parameter is\
    \ not present, all data\n   nodes MUST be reported.\n"
- title: 2.1.2.  'report-all' <with-defaults> Retrieval
  contents:
  - "2.1.2.  'report-all' <with-defaults> Retrieval\n   If the 'report-all' basic\
    \ mode is used by the server, then the server\n   MUST support the <with-defaults>\
    \ parameter with a value equal to\n   'report-all', as specified in Section 3.1.\n"
- title: 2.1.3.  'report-all' <edit-config> and <copy-config> Behavior
  contents:
  - "2.1.3.  'report-all' <edit-config> and <copy-config> Behavior\n   The server\
    \ MUST consider every data node to exist, even those\n   containing a schema default\
    \ value.  A valid 'create' operation\n   attribute for a data node that contains\
    \ its schema default value MUST\n   fail with a 'data-exists' error-tag.  A valid\
    \ 'delete' operation\n   attribute for a data node that contains its schema default\
    \ value MUST\n   succeed, even though the data node is immediately replaced by\
    \ the\n   server with the default value.\n   A server that uses the 'report-all'\
    \ basic mode has no concept of a\n   default node, so the 'report-all-tagged'\
    \ <with-defaults> retrieval\n   mode is not relevant.  There will never be any\
    \ tagged nodes, since\n   there are no nodes that are omitted in a basic-mode\
    \ retrieval\n   operation.  If the 'default' attribute is present in any\n   configuration\
    \ data, the server MUST return an <rpc-error> response\n   with an 'unknown-attribute'\
    \ error-tag.\n"
- title: 2.2.  'trim' Basic Mode
  contents:
  - "2.2.  'trim' Basic Mode\n   A server that uses the 'trim' basic mode MUST consider\
    \ any data node\n   set to its schema default value to be default data.\n"
- title: 2.2.1.  'trim' Basic Mode Retrieval
  contents:
  - "2.2.1.  'trim' Basic Mode Retrieval\n   When data is retrieved from a server\
    \ using the 'trim' basic mode, and\n   the <with-defaults> parameter is not present,\
    \ data nodes MUST NOT be\n   reported if they contain the schema default value.\
    \  Non-configuration\n   data nodes containing the schema default value MUST NOT\
    \ be reported.\n"
- title: 2.2.2.  'trim' <with-defaults> Retrieval
  contents:
  - "2.2.2.  'trim' <with-defaults> Retrieval\n   If the 'trim' basic mode is used\
    \ by the server, then the server MUST\n   support the <with-defaults> parameter\
    \ with a value equal to 'trim',\n   as specified in Section 3.2.\n"
- title: 2.2.3.  'trim' <edit-config> and <copy-config> Behavior
  contents:
  - "2.2.3.  'trim' <edit-config> and <copy-config> Behavior\n   The server MUST consider\
    \ any data node that does not contain its\n   schema default value to exist. \
    \ A valid 'create' operation attribute\n   for a data node that has a schema default\
    \ value defined MUST succeed.\n   A valid 'delete' operation attribute for a missing\
    \ data node that has\n   a schema default value MUST fail.  The server MUST return\
    \ an\n   <rpc-error> response with a 'data-missing' error-tag.\n   If a client\
    \ sets a data node to its schema default value, using any\n   valid operation,\
    \ it MUST succeed, although the data node MUST NOT be\n   saved in the NETCONF\
    \ configuration datastore.  This has the same\n   effect as removing the data\
    \ node and treating it as default data.\n   If the server supports the 'report-all-tagged'\
    \ value for the\n   <with-defaults> parameter, then the 'default' attribute MUST\
    \ be\n   accepted in configuration input, as described in Section 4.5.1 and\n\
    \   Section 4.5.2.\n"
- title: 2.3.  'explicit' Basic Mode
  contents:
  - "2.3.  'explicit' Basic Mode\n   A server that uses the 'explicit' basic mode\
    \ MUST consider any data\n   node that is not explicitly set data to be default\
    \ data.\n"
- title: 2.3.1.  'explicit' Basic Mode Retrieval
  contents:
  - "2.3.1.  'explicit' Basic Mode Retrieval\n   When data is retrieved from a server\
    \ using the 'explicit' basic mode,\n   and the <with-defaults> parameter is not\
    \ present, data nodes MUST be\n   reported if explicitly set by the client, even\
    \ if they contain the\n   schema default value.  Non-configuration data nodes\
    \ containing the\n   schema default value MUST be reported.\n"
- title: 2.3.2.  'explicit' <with-defaults> Retrieval
  contents:
  - "2.3.2.  'explicit' <with-defaults> Retrieval\n   If the 'explicit' basic mode\
    \ is used by the server, the server MUST\n   support the <with-defaults> parameter\
    \ with a value equal to\n   'explicit', as specified in Section 3.3.\n"
- title: 2.3.3.  'explicit' <edit-config> and <copy-config> Behavior
  contents:
  - "2.3.3.  'explicit' <edit-config> and <copy-config> Behavior\n   The server considers\
    \ any data node that is explicitly set data to\n   exist.  A valid 'create' operation\
    \ attribute for a data node that has\n   been set by a client to its schema default\
    \ value MUST fail with a\n   'data-exists' error-tag.  A valid 'create' operation\
    \ attribute for a\n   data node that has been set by the server to its schema\
    \ default value\n   MUST succeed.  A valid 'delete' operation attribute for a\
    \ data node\n   that has been set by a client to its schema default value MUST\n\
    \   succeed.  A valid 'delete' operation attribute for a data node that\n   has\
    \ been set by the server to its schema default value MUST fail with\n   a 'data-missing'\
    \ error-tag.\n   If the server supports the 'report-all-tagged' retrieval mode\
    \ in its\n   :with-defaults capability, then the 'default' attribute MUST be\n\
    \   accepted in configuration input.  If all NETCONF <edit-config> or\n   <copy-config>\
    \ parameters are valid, then the server will treat a\n   tagged data node (i.e.,\
    \ the 'default' attribute set to 'true' or '1')\n   as a request to return that\
    \ node to default data.  If this request is\n   valid within the context of the\
    \ requested NETCONF operation, then the\n   data node is removed and returned\
    \ to its default value.  The data\n   node within the NETCONF message MUST contain\
    \ a value in this case,\n   which MUST be equal to the schema default value. \
    \ If not, the server\n   MUST return an <rpc-error> response with an 'invalid-value'\
    \ error-\n   tag.\n"
- title: 3.  Retrieval of Default Data
  contents:
  - "3.  Retrieval of Default Data\n   This document defines a new parameter, called\
    \ <with-defaults>, which\n   can be added to specific NETCONF operation request\
    \ messages to\n   control how retrieval of default data is treated by the server.\n\
    \   A server that implements this specification MUST accept the\n   <with-defaults>\
    \ parameter containing the enumeration for any of the\n   default-handling modes\
    \ it supports.  The <with-defaults> parameter\n   contains one of the four enumerations\
    \ defined in this section.\n"
- title: 3.1.  'report-all' Retrieval Mode
  contents:
  - "3.1.  'report-all' Retrieval Mode\n   When data is retrieved with a <with-defaults>\
    \ parameter equal to\n   'report-all', all data nodes MUST be reported, including\
    \ any data\n   nodes considered to be default data by the server.\n"
- title: 3.2.  'trim' Retrieval Mode
  contents:
  - "3.2.  'trim' Retrieval Mode\n   When data is retrieved with a <with-defaults>\
    \ parameter equal to\n   'trim', data nodes MUST NOT be reported if they contain\
    \ the schema\n   default value.  Non-configuration data nodes containing the schema\n\
    \   default value MUST NOT be reported.\n"
- title: 3.3.  'explicit' Retrieval Mode
  contents:
  - "3.3.  'explicit' Retrieval Mode\n   When data is retrieved with a <with-defaults>\
    \ parameter equal to\n   'explicit', a data node that was set by a client to its\
    \ schema\n   default value MUST be reported.  A conceptual data node that would\
    \ be\n   set by the server to the schema default value MUST NOT be reported.\n\
    \   Non-configuration data nodes containing the schema default value MUST\n  \
    \ be reported.\n"
- title: 3.4.  'report-all-tagged' Retrieval Mode
  contents:
  - "3.4.  'report-all-tagged' Retrieval Mode\n   In addition to the basic modes,\
    \ a special variant of the 'report-all'\n   basic mode is available called 'report-all-tagged'.\
    \  This mode MUST\n   be supported on a server if the 'also-supported' parameter\
    \ in the\n   :with-defaults capability contains the 'report-all-tagged' option.\n\
    \   Refer to Section 4 for encoding details for this capability.\n   In this mode\
    \ the server returns all data nodes, just like the\n   'report-all' mode, except\
    \ a data node that is considered by the\n   server to contain default data will\
    \ include an XML attribute to\n   indicate this condition.  This is useful for\
    \ an application to\n   determine which nodes are considered to contain default\
    \ data by the\n   server, within a single retrieval operation.\n   A server that\
    \ supports 'report-all-tagged' MUST also accept the\n   'default' XML attribute\
    \ within configuration input to the\n   <edit-config> or <copy-config> operations.\
    \  Refer to Section 6 for\n   XML encoding details of the 'default' XML attribute.\n"
- title: 4.  With-defaults Capability
  contents:
  - '4.  With-defaults Capability

    '
- title: 4.1.  Overview
  contents:
  - "4.1.  Overview\n   The :with-defaults capability indicates which default-handling\
    \ basic\n   mode is supported by the server.  It may also indicate support for\n\
    \   additional defaults retrieval modes.  These retrieval modes allow a\n   NETCONF\
    \ client to control whether default data is returned by the\n   server.  The capability\
    \ affects both configuration and state data\n   (while acknowledging that the\
    \ usage of default values for state data\n   is less prevalent).  Sending of default\
    \ data is controlled for each\n   individual operation separately.\n   A NETCONF\
    \ server implementing the :with-defaults capability:\n   o  MUST indicate its\
    \ basic mode behavior by including the 'basic-\n      mode' parameter in the capability\
    \ URI, as defined in Section 4.3.\n   o  MUST support the YANG module defined\
    \ in Section 5 for the default-\n      handling mode indicated by the 'basic-mode'\
    \ parameter.\n   o  SHOULD support the YANG module in Section 5 for the default-\n\
    \      handling mode identified by the 'report-all' or 'report-all-\n      tagged'\
    \ enumeration value.\n   o  If the 'report-all-tagged' default-handling mode is\
    \ supported,\n      then the 'default' attribute MUST be supported.\n   o  MAY\
    \ support the YANG module in Section 5 for additional default-\n      handling\
    \ modes.\n"
- title: 4.2.  Dependencies
  contents:
  - "4.2.  Dependencies\n   None.\n"
- title: 4.3.  Capability Identifier
  contents:
  - "4.3.  Capability Identifier\n   urn:ietf:params:netconf:capability:with-defaults:1.0\n\
    \   The identifier MUST have a parameter: \"basic-mode\".  This indicates\n  \
    \ how the server will treat default data, as defined in Section 2.  The\n   allowed\
    \ values of this parameter are 'report-all', 'trim', and\n   'explicit', as defined\
    \ in Section 2.\n   The identifier MAY have another parameter: \"also-supported\"\
    .  This\n   parameter indicates which additional enumeration values (besides the\n\
    \   basic-mode enumeration) the server will accept for the\n   <with-defaults>\
    \ parameter in Section 5.  The value of the parameter\n   is a comma-separated\
    \ list of one or more modes that are supported\n   besides the mode indicated\
    \ in the 'basic-mode' parameter.  Possible\n   modes are 'report-all', 'report-all-tagged',\
    \ 'trim', and 'explicit',\n   as defined in Section 3.\n   Note that this protocol\
    \ capability URI is separate from the YANG\n   module capability URI for the YANG\
    \ module in Section 5.  A server\n   that implements this module MUST also advertise\
    \ a YANG module\n   capability URI according to the rules specified in [RFC6020].\n\
    \   Examples:\n   urn:ietf:params:netconf:capability:with-defaults:1.0?basic-\n\
    \   mode=explicit\n   urn:ietf:params:netconf:capability:with-defaults:1.0?basic-\n\
    \   mode=explicit&also-supported=report-all,report-all-tagged\n"
- title: 4.4.  New Operations
  contents:
  - "4.4.  New Operations\n   None.\n"
- title: 4.5.  Modifications to Existing Operations
  contents:
  - '4.5.  Modifications to Existing Operations

    '
- title: 4.5.1.  <get>, <get-config>, and <copy-config> Operations
  contents:
  - "4.5.1.  <get>, <get-config>, and <copy-config> Operations\n   A new <with-defaults>\
    \ XML element is added to the input for the\n   <get>, <get-config>, and <copy-config>\
    \ operations.  If the\n   <with-defaults> element is present, it controls the\
    \ reporting of\n   default data.  The server MUST return default data in the NETCONF\n\
    \   <rpc-reply> messages according to the value of this element, if the\n   server\
    \ supports the specified retrieval mode.\n   This parameter only controls these\
    \ specified retrieval operations,\n   and does not impact any other operations\
    \ or the non-volatile storage\n   of configuration data.\n   The <with-defaults>\
    \ element is defined in the XML namespace for the\n   ietf-netconf-with-defaults.yang\
    \ module in Section 5, not the XML\n   namespace for the <get>, <get-config>,\
    \ and <copy-config> operations.\n   Allowed values of the with-defaults element\
    \ are taken from the 'with-\n   defaults-type' typedef in Section 5.  The allowed\
    \ values for a\n   particular server are restricted to the values that the server\n\
    \   indicates it supports within the :with-defaults capability, in the\n   'basic-mode'\
    \ and 'also-supported' parameters.\n   If an unsupported value is used, the NETCONF\
    \ server MUST return an\n   <rpc-error> response with an 'invalid-value' error-tag.\n\
    \   If the <with-defaults> element is not present, the server MUST follow\n  \
    \ its basic mode behavior as indicated by the :with-defaults capability\n   identifier's\
    \ 'basic-mode' parameter, defined in Section 4.3.\n   The <get> and <get-config>\
    \ operations support a separate filtering\n   mechanism, using the <filter> parameter.\
    \  The defaults filtering is\n   conceptually done before the <filter> parameter\
    \ is processed.  For\n   example, if the <with-defaults> parameter is equal to\
    \ 'report-all',\n   then the <filter> parameter is conceptually applied to all\
    \ data nodes\n   and all default data.\n   The <copy-config> operation is only\
    \ affected by the <with-defaults>\n   parameter if the target of the operation\
    \ is specified with the <url>\n   parameter.  If the target is a NETCONF configuration\
    \ datastore (i.e.,\n   running, candidate, or startup), the <with-defaults> parameter\
    \ has no\n   effect.  The server MUST use its basic mode when copying data to\
    \ a\n   NETCONF configuration datastore.  If the <with-defaults> parameter is\n\
    \   present in this case, it MUST be silently ignored by the server.\n   If the\
    \ server supports the 'report-all-tagged' mode, then the\n   'default' attribute\
    \ defined in Section 6 also impacts the\n   <copy-config> operation.  If the 'default'\
    \ attribute is present and\n   set to 'true' or '1', then the server MUST treat\
    \ the new data node as\n   a request to return that node to its default value\
    \ (i.e., remove it\n   from the configuration datastore).  The data node within\
    \ the NETCONF\n   message MUST contain a value in this case, which MUST be equal\
    \ to the\n   schema default value.  If not, the server MUST return an <rpc-error>\n\
    \   response with an 'invalid-value' error-tag.\n"
- title: 4.5.2.  <edit-config> Operation
  contents:
  - "4.5.2.  <edit-config> Operation\n   The <edit-config> operation has several editing\
    \ modes.  The 'create'\n   and 'delete' editing operations are affected by the\
    \ default-handling\n   basic mode.  The other enumeration values for the NETCONF\
    \ operation\n   attribute are not affected.\n   If the operation attribute contains\
    \ the value 'create', and the data\n   node already exists in the target configuration\
    \ datastore, then the\n   server MUST return an <rpc-error> response with an 'invalid-value'\n\
    \   error-tag.\n   If the client sets a data node to its schema default value,\
    \ the\n   server MUST accept the request if it is valid.  The server MUST keep\n\
    \   or discard the new value based on its default-handling basic mode.\n   For\
    \ the 'trim' basic mode, all schema default values are discarded;\n   otherwise,\
    \ a client-provided schema default value is saved in a\n   NETCONF configuration\
    \ datastore.\n   If the server supports the 'report-all-tagged' mode, then the\n\
    \   'default' attribute defined in Section 6 also impacts the\n   <edit-config>\
    \ operation.  If the 'default' attribute is present and\n   set to 'true' or '1',\
    \ then the server MUST treat the new data node as\n   a request to return that\
    \ node to its default value (i.e., remove it\n   from the configuration datastore).\
    \  The data node within the NETCONF\n   message MUST contain a value in this case,\
    \ which MUST be equal to the\n   schema default value.  If not, the server MUST\
    \ return an <rpc-error>\n   response with an 'invalid-value' error-tag.\n   If\
    \ the 'default' attribute is present, then the effective operation\n   for the\
    \ target data node MUST be 'create', 'merge', or 'replace'.  If\n   not, then\
    \ the server MUST return an <rpc-error> response with an\n   'invalid-value' error-tag.\
    \  For example, if 'create' is the effective\n   operation, then the create request\
    \ must be valid on its own (e.g.,\n   current data node MUST NOT exist).  The\
    \ procedure for determining the\n   effective operation is defined in [RFC6241].\
    \  It is derived from the\n   'default-operation' parameter and/or any operation\
    \ attributes that\n   are present in the data node or any of its ancestor nodes,\
    \ within the\n   <edit-config> request.\n"
- title: 4.5.3.  Other Operations
  contents:
  - "4.5.3.  Other Operations\n   Other operations that return configuration data\
    \ SHOULD also handle\n   default data according to the rules set in this document,\
    \ and\n   explicitly state this in their documentation.  If this is not\n   specified\
    \ in the document defining the respective operation, the\n   default-handling\
    \ rules described herein do not affect these\n   operations.\n"
- title: 4.6.  Interactions with Other Capabilities
  contents:
  - "4.6.  Interactions with Other Capabilities\n   None.\n"
- title: 5.  YANG Module for the <with-defaults> Parameter
  contents:
  - "5.  YANG Module for the <with-defaults> Parameter\n   The following YANG module\
    \ defines the addition of the with-defaults\n   element to the <get>, <get-config>,\
    \ and <copy-config> operations.\n   The YANG language is defined in [RFC6020].\
    \  The above operations are\n   defined in YANG in [RFC6241].  Every NETCONF server\
    \ that supports the\n   :with-defaults capability MUST implement this YANG module.\n\
    \  <CODE BEGINS> file=\"ietf-netconf-with-defaults@2011-06-01.yang\"\n  module\
    \ ietf-netconf-with-defaults {\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\"\
    ;\n     prefix ncwd;\n     import ietf-netconf { prefix nc; }\n     organization\n\
    \      \"IETF NETCONF (Network Configuration Protocol) Working Group\";\n    \
    \ contact\n      \"WG Web:   <http://tools.ietf.org/wg/netconf/>\n       WG List:\
    \  <netconf@ietf.org>\n       WG Chair: Bert Wijnen\n                 <bertietf@bwijnen.net>\n\
    \       WG Chair: Mehmet Ersue\n                 <mehmet.ersue@nsn.com>\n    \
    \   Editor: Andy Bierman\n               <andy.bierman@brocade.com>\n       Editor:\
    \ Balazs Lengyel\n               <balazs.lengyel@ericsson.com>\";\n     description\n\
    \      \"This module defines an extension to the NETCONF protocol\n       that\
    \ allows the NETCONF client to control how default\n       values are handled\
    \ by the server in particular NETCONF\n       operations.\n       Copyright (c)\
    \ 2011 IETF Trust and the persons identified as\n       the document authors.\
    \  All rights reserved.\n       Redistribution and use in source and binary forms,\
    \ with or\n       without modification, is permitted pursuant to, and subject\n\
    \       to the license terms contained in, the Simplified BSD License\n      \
    \ set forth in Section 4.c of the IETF Trust's Legal Provisions\n       Relating\
    \ to IETF Documents\n       (http://trustee.ietf.org/license-info).\n       This\
    \ version of this YANG module is part of RFC 6243; see\n       the RFC itself\
    \ for full legal notices.\";\n     revision 2011-06-01 {\n       description\n\
    \         \"Initial version.\";\n       reference\n        \"RFC 6243: With-defaults\
    \ Capability for NETCONF\";\n     }\n     typedef with-defaults-mode {\n     \
    \   description\n          \"Possible modes to report default data.\";\n     \
    \   reference\n           \"RFC 6243; Section 3.\";\n        type enumeration\
    \ {\n           enum report-all {\n               description\n              \
    \   \"All default data is reported.\";\n               reference\n           \
    \      \"RFC 6243; Section 3.1\";\n           }\n           enum report-all-tagged\
    \ {\n               description\n                 \"All default data is reported.\n\
    \                  Any nodes considered to be default data\n                 \
    \ will contain a 'default' XML attribute,\n                  set to 'true' or\
    \ '1'.\";\n               reference\n                 \"RFC 6243; Section 3.4\"\
    ;\n           }\n           enum trim {\n               description\n        \
    \         \"Values are not reported if they contain the default.\";\n        \
    \       reference\n                 \"RFC 6243; Section 3.2\";\n           }\n\
    \           enum explicit {\n               description\n                 \"Report\
    \ values that contain the definition of\n                  explicitly set data.\"\
    ;\n               reference\n                 \"RFC 6243; Section 3.3\";\n   \
    \        }\n       }\n     }\n     grouping with-defaults-parameters {\n     \
    \  description\n         \"Contains the <with-defaults> parameter for control\n\
    \          of defaults in NETCONF retrieval operations.\";\n       leaf with-defaults\
    \ {\n         description\n           \"The explicit defaults processing mode\
    \ requested.\";\n         reference\n           \"RFC 6243; Section 4.5.1\";\n\
    \         type with-defaults-mode;\n       }\n     }\n     // extending the get-config\
    \ operation\n     augment /nc:get-config/nc:input {\n         description\n  \
    \         \"Adds the <with-defaults> parameter to the\n            input of the\
    \ NETCONF <get-config> operation.\";\n         reference\n           \"RFC 6243;\
    \ Section 4.5.1\";\n         uses with-defaults-parameters;\n     }\n     // extending\
    \ the get operation\n     augment /nc:get/nc:input {\n         description\n \
    \          \"Adds the <with-defaults> parameter to\n            the input of the\
    \ NETCONF <get> operation.\";\n         reference\n           \"RFC 6243; Section\
    \ 4.5.1\";\n         uses with-defaults-parameters;\n     }\n     // extending\
    \ the copy-config operation\n     augment /nc:copy-config/nc:input {\n       \
    \  description\n           \"Adds the <with-defaults> parameter to\n         \
    \   the input of the NETCONF <copy-config> operation.\";\n         reference\n\
    \           \"RFC 6243; Section 4.5.1\";\n         uses with-defaults-parameters;\n\
    \     }\n  }\n  <CODE ENDS>\n"
- title: 6.  XSD for the 'default' Attribute
  contents:
  - "6.  XSD for the 'default' Attribute\n   The following XML Schema document [W3C.REC-xml-20081126]\
    \ defines the\n   'default' attribute, described within this document.  This XSD\
    \ is\n   only relevant if the server supports the 'report-all-tagged' defaults\n\
    \   retrieval mode.\n   The 'default' attribute uses the XSD data type 'boolean'.\
    \  In\n   accordance with Section 3.2.2.1 of XML Schema Part 2: Datatypes, the\n\
    \   allowable lexical representations for the xs:boolean datatype are the\n  \
    \ strings \"0\" and \"false\" for the concept of false and the strings \"1\"\n\
    \   and \"true\" for the concept of true.  Implementations MUST support\n   both\
    \ styles of lexical representation.\n"
- title: <CODE BEGINS> file="defaults.xsd"
  contents:
  - '<CODE BEGINS> file="defaults.xsd"

    '
- title: <?xml version="1.0" encoding="UTF-8"?>
  contents:
  - '<?xml version="1.0" encoding="UTF-8"?>

    '
- title: <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  contents:
  - "<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n           xmlns=\"\
    urn:ietf:params:xml:ns:netconf:default:1.0\"\n           targetNamespace=\"urn:ietf:params:xml:ns:netconf:default:1.0\"\
    \n           elementFormDefault=\"qualified\"\n           attributeFormDefault=\"\
    unqualified\"\n           xml:lang=\"en\">\n  <xs:annotation>\n    <xs:documentation>\n\
    \      This schema defines the syntax for the 'default' attribute\n      described\
    \ within this document.\n    </xs:documentation>\n  </xs:annotation>\n  <!--\n\
    \    default attribute\n    -->\n  <xs:attribute name=\"default\" type=\"xs:boolean\"\
    \ default=\"false\">\n    <xs:annotation>\n      <xs:documentation>\n        This\
    \ attribute indicates whether the data node represented\n        by the XML element\
    \ containing this attribute is considered\n        by the server to be default\
    \ data.  If set to 'true' or '1', then\n        the data node is default data.\
    \  If 'false' or '0', then the\n        data node is not default data.\n     \
    \ </xs:documentation>\n    </xs:annotation>\n  </xs:attribute>\n"
- title: </xs:schema>
  contents:
  - '</xs:schema>

    '
- title: <CODE ENDS>
  contents:
  - '<CODE ENDS>

    '
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document registers the following capability\
    \ identifier URN in\n   the 'Network Configuration Protocol (NETCONF) Capability\
    \ URNs'\n   registry:\n      urn:ietf:params:netconf:capability:with-defaults:1.0\n\
    \   This document registers two XML namespace URNs in the 'IETF XML\n   registry',\
    \ following the format defined in [RFC3688].\n      URI: urn:ietf:params:xml:ns:netconf:default:1.0\n\
    \      URI: urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\n   Registrant\
    \ Contact: The NETCONF WG of the IETF.\n   XML: N/A, the requested URIs are XML\
    \ namespaces.\n   This document registers one module name in the 'YANG Module\
    \ Names'\n   registry, defined in [RFC6020] .\n      name: ietf-netconf-with-defaults\n\
    \      prefix: ncwd\n      namespace: urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\n\
    \      RFC: 6243\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document defines an extension to existing\
    \ NETCONF protocol\n   operations.  It does not introduce any new or increased\
    \ security\n   risks into the management system.\n   The 'with-defaults' capability\
    \ gives clients control over the\n   retrieval of default data from a NETCONF\
    \ datastore.  The security\n   consideration of [RFC6241] applies to this document\
    \ as well.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Thanks to Martin Bjorklund, Sharon Chisholm, Phil Shafer,\
    \ Juergen\n   Schoenwaelder, Kent Watsen, Washam Fan, and many other members of\
    \ the\n   NETCONF WG for providing important input to this document.\n"
- title: 10.  Normative References
  contents:
  - "10.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n\
    \              January 2004.\n   [RFC6020]  Bjorklund, M., \"YANG - A Data Modeling\
    \ Language for the\n              Network Configuration Protocol (NETCONF)\",\
    \ RFC 6020,\n              October 2010.\n   [RFC6241]  Enns, R., Ed., Bjorklund,\
    \ M., Ed., Schoenwaelder, J., Ed.,\n              and A.  Bierman, Ed., \"Network\
    \ Configuration Protocol\n              (NETCONF)\", RFC 6241, June 2011.\n  \
    \ [W3C.REC-xml-20081126]\n              Bray, T., Paoli, J., Sperberg-McQueen,\
    \ C., Maler, E., and\n              F. Yergeau, \"Extensible Markup Language (XML)\
    \ 1.0 (Fifth\n              Edition)\", World Wide Web Consortium Recommendation\
    \ REC-\n              xml-20081126, November 2008,\n              <http://www.w3.org/TR/2008/REC-xml-20081126>.\n\
    \   [W3C.REC-xmlschema-0-20041028]\n              Fallside, D. and P. Walmsley,\
    \ \"XML Schema Part 0: Primer\n              Second Edition\", World Wide Web\
    \ Consortium Recommendation\n              REC-xmlschema-0-20041028, October 2004,\n\
    \              <http://www.w3.org/TR/2004/REC-xmlschema-0-20041028>.\n"
- title: Appendix A.  Usage Examples
  contents:
  - 'Appendix A.  Usage Examples

    '
- title: A.1.  Example YANG Module
  contents:
  - "A.1.  Example YANG Module\n   The following YANG module defines an example interfaces\
    \ table to\n   demonstrate how the <with-defaults> parameter behaves for a specific\n\
    \   data model.\n   Note that this is not a real module, and implementation of\
    \ this\n   module is not required for conformance to the :with-defaults\n   capability,\
    \ defined in Section 4.  This module is not to be\n   registered with IANA, and\
    \ is not considered to be a code component.\n   It is intentionally very terse,\
    \ and includes few descriptive\n   statements.\n     module example {\n     namespace\
    \ \"http://example.com/ns/interfaces\";\n     prefix exam;\n     typedef status-type\
    \ {\n        description \"Interface status\";\n        type enumeration {\n \
    \         enum ok;\n          enum 'waking up';\n          enum 'not feeling so\
    \ good';\n          enum 'better check it out';\n          enum 'better call for\
    \ help';\n        }\n        default ok;\n     }\n     container interfaces {\n\
    \         description \"Example interfaces group\";\n         list interface {\n\
    \           description \"Example interface entry\";\n           key name;\n \
    \          leaf name {\n             description\n               \"The administrative\
    \ name of the interface.\n                This is an identifier that is only unique\n\
    \                within the scope of this list, and only\n                within\
    \ a specific server.\";\n             type string {\n               length \"\
    1 .. max\";\n             }\n           }\n           leaf mtu {\n           \
    \  description\n               \"The maximum transmission unit (MTU) value assigned\
    \ to\n                this interface.\";\n             type uint32;\n        \
    \     default 1500;\n           }\n           leaf status {\n             description\n\
    \               \"The current status of this interface.\";\n             type\
    \ status-type;\n             config false;\n           }\n         }\n       }\n\
    \     }\n"
- title: A.2.  Example Data Set
  contents:
  - "A.2.  Example Data Set\n   The following data element shows the conceptual contents\
    \ of the\n   example server for the protocol operation examples in the next\n\
    \   section.  This includes all the configuration data nodes, non-\n   configuration\
    \ data nodes, and default leafs.\n       <data xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n         <interfaces xmlns=\"http://example.com/ns/interfaces\">\n        \
    \   <interface>\n             <name>eth0</name>\n             <mtu>8192</mtu>\n\
    \             <status>up</status>\n           </interface>\n           <interface>\n\
    \             <name>eth1</name>\n             <mtu>1500</mtu>\n             <status>up</status>\n\
    \           </interface>\n           <interface>\n             <name>eth2</name>\n\
    \             <mtu>9000</mtu>\n             <status>not feeling so good</status>\n\
    \           </interface>\n           <interface>\n             <name>eth3</name>\n\
    \             <mtu>1500</mtu>\n             <status>waking up</status>\n     \
    \      </interface>\n         </interfaces>\n       </data>\n   In this example,\
    \ the 'mtu' field for each interface entry is set in\n   the following manner:\n\
    \              +--------------+--------------+--------------+\n              |\
    \ name         | set by       | mtu          |\n              +--------------+--------------+--------------+\n\
    \              | eth0         | client       | 8192         |\n              |\
    \ eth1         | server       | 1500         |\n              | eth2         |\
    \ client       | 9000         |\n              | eth3         | client       |\
    \ 1500         |\n              +--------------+--------------+--------------+\n"
- title: A.3.  Protocol Operation Examples
  contents:
  - "A.3.  Protocol Operation Examples\n   The following examples show some <get>\
    \ operations using the 'with-\n   defaults' element.  The data model used for\
    \ these examples is defined\n   in Appendix A.1.\n   The client is retrieving\
    \ all the data nodes within the 'interfaces'\n   object, filtered with the <with-defaults>\
    \ parameter.\n"
- title: A.3.1.  <with-defaults> = 'report-all'
  contents:
  - "A.3.1.  <with-defaults> = 'report-all'\n   The behavior of the <with-defaults>\
    \ parameter handling for the value\n   'report-all' is demonstrated in this example.\n\
    \    <rpc message-id=\"101\"\n         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <get>\n        <filter type=\"subtree\">\n          <interfaces xmlns=\"\
    http://example.com/ns/interfaces\"/>\n        </filter>\n        <with-defaults\n\
    \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\">\n\
    \          report-all\n        </with-defaults>\n      </get>\n    </rpc>\n  \
    \  <rpc-reply message-id=\"101\"\n               xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <data>\n        <interfaces xmlns=\"http://example.com/ns/interfaces\"\
    >\n          <interface>\n            <name>eth0</name>\n            <mtu>8192</mtu>\n\
    \            <status>up</status>\n          </interface>\n          <interface>\n\
    \            <name>eth1</name>\n            <mtu>1500</mtu>\n            <status>up</status>\n\
    \          </interface>\n          <interface>\n            <name>eth2</name>\n\
    \            <mtu>9000</mtu>\n            <status>not feeling so good</status>\n\
    \          </interface>\n          <interface>\n            <name>eth3</name>\n\
    \            <mtu>1500</mtu>\n            <status>waking up</status>\n       \
    \   </interface>\n        </interfaces>\n      </data>\n    </rpc-reply>\n"
- title: A.3.2.  <with-defaults> = 'report-all-tagged'
  contents:
  - "A.3.2.  <with-defaults> = 'report-all-tagged'\n   The behavior of the <with-defaults>\
    \ parameter handling for the value\n   'report-all-tagged' is demonstrated in\
    \ this example.  A 'tagged' data\n   node is an element that contains the 'default'\
    \ XML attribute, set to\n   'true' or '1'.\n   The actual data nodes tagged by\
    \ the server depend on the default-\n   handling basic mode used by the server.\
    \  Only the data nodes that are\n   considered to be default data will be tagged.\n\
    \   In this example, the server's basic mode is equal to 'trim', so all\n   data\
    \ nodes that would contain the schema default value are tagged.\n   If the server's\
    \ basic mode is 'explicit', then only data nodes that\n   are not explicitly set\
    \ data are tagged.  If the server's basic mode\n   is 'report-all', then no data\
    \ nodes are tagged.\n    <rpc message-id=\"102\"\n         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <get>\n        <filter type=\"subtree\">\n          <interfaces xmlns=\"\
    http://example.com/ns/interfaces\"/>\n        </filter>\n        <with-defaults\n\
    \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\">\n\
    \          report-all-tagged\n        </with-defaults>\n      </get>\n    </rpc>\n\
    \    <rpc-reply message-id=\"102\"\n               xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    \n               xmlns:wd=\"urn:ietf:params:xml:ns:netconf:default:1.0\">\n  \
    \    <data>\n        <interfaces xmlns=\"http://example.com/ns/interfaces\">\n\
    \          <interface>\n            <name>eth0</name>\n            <mtu>8192</mtu>\n\
    \            <status wd:default=\"true\">up</status>\n          </interface>\n\
    \          <interface>\n            <name>eth1</name>\n            <mtu wd:default=\"\
    true\">1500</mtu>\n            <status wd:default=\"true\">up</status>\n     \
    \     </interface>\n          <interface>\n            <name>eth2</name>\n   \
    \         <mtu>9000</mtu>\n            <status>not feeling so good</status>\n\
    \          </interface>\n          <interface>\n            <name>eth3</name>\n\
    \            <mtu wd:default=\"true\">1500</mtu>\n            <status>waking up</status>\n\
    \          </interface>\n        </interfaces>\n      </data>\n    </rpc-reply>\n"
- title: A.3.3.  <with-defaults> = 'trim'
  contents:
  - "A.3.3.  <with-defaults> = 'trim'\n   The behavior of the <with-defaults> parameter\
    \ handling for the value\n   'trim' is demonstrated in this example.\n    <rpc\
    \ message-id=\"103\"\n         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <get>\n        <filter type=\"subtree\">\n          <interfaces xmlns=\"\
    http://example.com/ns/interfaces\"/>\n        </filter>\n        <with-defaults\n\
    \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\">\n\
    \          trim\n        </with-defaults>\n      </get>\n    </rpc>\n    <rpc-reply\
    \ message-id=\"103\"\n               xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <data>\n        <interfaces xmlns=\"http://example.com/ns/interfaces\"\
    >\n          <interface>\n            <name>eth0</name>\n            <mtu>8192</mtu>\n\
    \          </interface>\n          <interface>\n            <name>eth1</name>\n\
    \          </interface>\n          <interface>\n            <name>eth2</name>\n\
    \            <mtu>9000</mtu>\n            <status>not feeling so good</status>\n\
    \          </interface>\n          <interface>\n            <name>eth3</name>\n\
    \            <status>waking up</status>\n          </interface>\n        </interfaces>\n\
    \      </data>\n    </rpc-reply>\n"
- title: A.3.4.  <with-defaults> = 'explicit'
  contents:
  - "A.3.4.  <with-defaults> = 'explicit'\n   The behavior of the <with-defaults>\
    \ parameter handling for the value\n   'explicit' is demonstrated in this example.\n\
    \    <rpc message-id=\"104\"\n         xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <get>\n        <filter type=\"subtree\">\n          <interfaces xmlns=\"\
    http://example.com/ns/interfaces\"/>\n        </filter>\n        <with-defaults\n\
    \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-with-defaults\">\n\
    \          explicit\n        </with-defaults>\n      </get>\n    </rpc>\n    <rpc-reply\
    \ message-id=\"104\"\n               xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n      <data>\n        <interfaces xmlns=\"http://example.com/ns/interfaces\"\
    >\n          <interface>\n            <name>eth0</name>\n            <mtu>8192</mtu>\n\
    \            <status>up</status>\n          </interface>\n          <interface>\n\
    \            <name>eth1</name>\n            <status>up</status>\n          </interface>\n\
    \          <interface>\n            <name>eth2</name>\n            <mtu>9000</mtu>\n\
    \            <status>not feeling so good</status>\n          </interface>\n  \
    \        <interface>\n            <name>eth3</name>\n            <mtu>1500</mtu>\n\
    \            <status>waking up</status>\n          </interface>\n        </interfaces>\n\
    \      </data>\n    </rpc-reply>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andy Bierman\n   Brocade\n   EMail: andy.bierman@brocade.com\n\
    \   Balazs Lengyel\n   Ericsson\n   Budapest,\n   Hungary\n   EMail: balazs.lengyel@ericsson.com\n"
