- title: __initial_text__
  contents:
  - '           Advanced SNA/IP : A Simple SNA Transport Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This RFC provides information for the Internet community about a\n\
    \   method for establishing and maintaining SNA sessions over an IP\n   internet.\
    \  While the issues discussed may not be directly relevant to\n   the research\
    \ problems of the Internet, they may be interesting to a\n   number of researchers\
    \ and implementors.  Any questions or comments\n   relative to the contents of\
    \ this RFC may be sent to the following\n   Internet address: snaip@mcdata.com.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction..................................................\
    \  2\n   2. Motivation and Rationale......................................  2\n\
    \   3. SNA/IP Protocol Specification.................................  3\n   3.1\
    \ Glossary.....................................................  3\n   3.2 Conventions\
    \ and Assumptions..................................  3\n   3.3 The Protocol.................................................\
    \  3\n   3.3.1 Connection Establishment...................................  3\n\
    \   3.3.2 Data Transfer..............................................  5\n   3.3.3\
    \ Connection Termination and Loss............................  6\n   3.3.4 Session\
    \ Data Flow..........................................  7\n   3.3.5 State Transition\
    \ Table for the Initiating Node.............  8\n   4. LLC to SNA/IP Conversion......................................\
    \  8\n   5. Performance...................................................  8\n\
    \   6. VTAM Definition...............................................  9\n   7.\
    \ Acknowledgments...............................................  9\n   8. References....................................................\
    \  9\n   9. Security Considerations....................................... 10\n\
    \   10. Authors' Addresses........................................... 10\n   11.\
    \ Disclaimer................................................... 10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Advanced SNA/IP suggests a method for the transmission of\
    \ SNA session\n   data over an IP network.  This memo documents the SNA/IP protocol\
    \ as\n   implemented in the McDATA LinkMaster(R) 6200 Network Gateway, McDATA\n\
    \   LinkMaster(R) 7100 Network Controller, and I/O Concepts X-Direct\n   TN3270\
    \ Server.\n   Advanced SNA/IP differs from other protocols designed to enable\n\
    \   routing of SNA session traffic over an IP network.  SNA/IP was\n   originally\
    \ designed for implementation in peripheral network nodes\n   like SNA gateways\
    \ and downstream nodes (DSNs).  It is the authors'\n   view, however, that SNA/IP\
    \ could also be implemented in intermediate\n   network nodes like routers as\
    \ the base for an LLC to IP subnet\n   gateway or data link switch function.\n"
- title: 2.  Motivation and Rationale
  contents:
  - "2.  Motivation and Rationale\n   The token-ring media access control (MAC) protocol\
    \ 802.5 and logical\n   link control (LLC) protocol 802.2 were the first set of\
    \ LAN protocols\n   used to provide a reliable and connection-oriented data link\
    \ service\n   for SNA sessions in a LAN environment.\n   McDATA's experience with\
    \ transporting SNA over 802.5 networks led to\n   an 802.3/802.2 (Ethernet) based\
    \ variation.  As prospective customers\n   were introduced to these Ethernet products,\
    \ the question of\n   routability arose.  Network administrators, accustomed to\
    \ working\n   with Ethernet networks and the IP-based protocols, required an IP\n\
    \   routable solution.  McDATA's \"SNA over Ethernet\" products were\n   bridgeable,\
    \ but were not routable.\n   SNA sessions require a reliable and connection-oriented\
    \ data link.\n   TCP running over IP provides a reliable and connection-oriented\n\
    \   transport service and has the added benefit of being routable.  It\n   seemed\
    \ the UDP and TCP protocols could be used in place of 802.2 Type\n   I and Type\
    \ II levels of service used in traditional SNA token-ring\n   implementations.\
    \  Advanced SNA/IP was created as a result of these\n   observations.\n"
- title: 3.  SNA/IP Protocol Specification
  contents:
  - '3.  SNA/IP Protocol Specification

    '
- title: 3.1.  Glossary
  contents:
  - "3.1.  Glossary\n   Data Link Switching (DLSw) - This is best described as a routing\n\
    \   protocol used for the conversion of LLC-based SNA sessions to an IP\n   form.\
    \  The initial version of the DLSw protocol is documented in the\n   informational\
    \ RFC 1434 [1].\n   Downstream Node (DSN) - An SNA Physical Unit (PU) type 2.0\
    \ or 2.1\n   device connected to the SNA network via a LAN (802.5, 802.3, etc.)\
    \ as\n   opposed to an SDLC, X.25, or channel connection.\n   SNA Gateway - A\
    \ device that provides a data link control (DLC)\n   conversion function for SNA\
    \ PU type 5 (host) devices and LAN-\n   attached DSNs.\n   Subnet SNA Gateway\
    \ - A device connected to both a traditional SNA\n   token-ring segment and an\
    \ IP network that performs local termination\n   of the LLC connections, a mapping\
    \ function of source address to\n   destination IP address, and a conversion (switching)\
    \ function of LLC\n   to IP.\n"
- title: 3.2.  Conventions and Assumptions
  contents:
  - "3.2.  Conventions and Assumptions\n   Frame formats are shown starting with the\
    \ IP header.  Other headers\n   will, of course, appear in the actual frames sent,\
    \ but these headers,\n   and the numbers of them, will vary across MAC types.\n\
    \   It is assumed the reader is familiar with both the standard SNA\n   protocol\
    \ (to the extent it applies to SNA Gateway and DSN functions)\n   and the base\
    \ set of TCP/IP protocols.  Where practical, the reader is\n   asked to refer\
    \ to appropriate SNA and TCP/IP documentation.\n"
- title: 3.3.  The Protocol
  contents:
  - "3.3.  The Protocol\n   Conceptually, there are three phases to the Advanced SNA/IP\
    \ protocol:\n   the Connection Establishment phase, the Data Transfer phase, and\
    \ the\n   Connection Termination phase.\n"
- title: 3.3.1.  Connection Establishment
  contents:
  - "3.3.1.  Connection Establishment\n   Connection Establishment involves the exchange\
    \ of logical XID packets\n   between the connecting end nodes and culminates in\
    \ the establishment\n   of a TCP connection.  This process is similar to the IBM-specified\n\
    \   Test, XID, SABME and UA exchange used to establish a Type II 802.2\n   connection\
    \ for SNA traffic [2].  In place of the 802.2 Type I\n   messages, SNA/IP defines\
    \ the following set of UDP datagrams:\n  Logical Null XID\n     Use: Sent by an\
    \ initiating node (such as a DSN) when the\n          connection to another SNA\
    \ node is desired.\n          The Logical Null XID communicates the sending node's\n\
    \          desire to negotiate connection parameters.  Once those\n          parameters\
    \ are established, the Logical Null XID\n          communicates the sender's TCP\
    \ port to which a connection\n          is to be made.\n     Format:\n       \
    \ ------------------------------------\n        | IP Header  |  UDP Header  |\
    \ 0xBF |\n        ------------------------------------\n        Source IP address:\
    \       The IP address of the initiating\n                                 node.\n\
    \        Destination IP address:  The IP address of the partner SNA\n        \
    \                         node.\n        Source UDP Port:         Must match the\
    \ TCP port number to be\n                                 used in the eventual\
    \ TCP connection.\n        Destination UDP Port:    A known port on the partner\
    \ node\n                                 that expects SNA/IP datagrams.\n    \
    \ XID Request\n     Use: Sent in response to a Logical Null XID and requests the\n\
    \          receiving node to send a Logical SNA XID datagram.\n     Format:\n\
    \        ------------------------------------\n        | IP Header  |  UDP Header\
    \  | 0xBF |\n        ------------------------------------\n        The source\
    \ and destination IP and UDP port numbers follow,\n        logically, from those\
    \ provided in the Logical Null XID\n        datagram.\n        The format of the\
    \ XID Request and Logical Null XID are the\n        same.  The two types are distinguished\
    \ by the roles assumed by\n        the two nodes.  In current implementations,\
    \ the DSN initiates\n        the XID exchange by sending the Logical Null XID.\
    \  The SNA\n        Gateway responds with the XID request.\n  Logical SNA XID\n\
    \     Use: Sent in response to an XID Request and in the context of\n        \
    \  SNA XID negotiation.\n     Format:\n        ----------------------------------------------------\n\
    \        | IP Header  |  UDP Header  | 0xBF | SNA XID data  |\n        ----------------------------------------------------\n\
    \        For PU 2.0 nodes, the SNA XID data consists of a Format 0 XID\n     \
    \   [3].\n        For PU 2.1 nodes, the SNA XID data consists of a Format 3 XID\n\
    \        [3].\n   A typical Connection Establishment data flow appears below.\n\
    \     Node 1                                    Node 2\n     Logical Null XID\
    \ ------------------------->\n                       <------------------------\
    \ XID Request\n     Logical SNA XID -------------------------->\n            \
    \           <------------------------ TCP SYN\n     TCP SYN ACK ----------------------------->\n\
    \                       <------------------------ TCP ACK\n   Note:  The source\
    \ UDP port of the Logical Null XID equals the\n   destination TCP port of the\
    \ TCP SYN segment.\n   Retries of the Logical Null XID by the initiating node\
    \ should occur\n   periodically until an XID Request is received in reply. The\
    \ frequency\n   of the retries is left up to the implementor.  The lower bound\
    \ on the\n   retry timer should be more than the expected round trip time for\
    \ a\n   packet on the network.\n"
- title: 3.3.2.  Data Transfer
  contents:
  - "3.3.2.  Data Transfer\n   There are no special packets defined for the Data Transfer\
    \ phase.\n   Once the TCP connection is established, SNA Request Units (RUs) may\n\
    \   be exchanged between the two end nodes.  The SNA session data appears\n  \
    \ as TCP segment data.  The only added SNA/IP requirement is that each\n   SNA\
    \ message consisting of a Transmission Header (TH),\n   Request/Response Header\
    \ (RH) and an optional Request/Response Request\n   Unit (RU) be preceded by a\
    \ two octet length field.  Examples of Data\n   Transfer frames are shown below.\n\
    \      -------------------------------------------------------\n      | IP Header\
    \ | TCP Header | SNA Msg 1 len | SNA Msg 1  |\n      -------------------------------------------------------\n\
    \      ----------------------------------------------\n      | IP Header | TCP\
    \ Header | SNA Msg 1 cont'd  ->\n      ----------------------------------------------\n\
    \           --------------------------------\n              | SNA Msg 2 len |\
    \ SNA Msg 2 |\n           --------------------------------\n   The length field\
    \ is passed in big endian format.  0 is a valid length\n   value.\n   The format\
    \ of the SNA Message pieces are as defined by SNA [3].\n   Reliable and sequential\
    \ delivery of data is provided by the TCP\n   protocol [5,6].\n"
- title: 3.3.3.  Connection Termination and Loss
  contents:
  - "3.3.3.  Connection Termination and Loss\n   Either SNA node may, at any time,\
    \ terminate the logical SNA\n   connection by issuing a TCP-level FIN segment.\
    \  Dictates of the TCP\n   protocol apply to this termination process [5,6].\n\
    \   A connection is also terminated, though not as cleanly, if a TCP\n   Reset\
    \ segment is sent by either SNA node.\n   Once a connection is terminated, a new\
    \ connection may be established\n   by the process outlined in the Connection\
    \ Establishment section.  For\n   reconnections made to the LinkMaster 6200 gateway,\
    \ the same UDP\n   source port must be used by the initiating node.  This implies\
    \ that\n   the same TCP port is used. This requirement stems from the fact the\n\
    \   gateway may not always be aware that a TCP connection has been\n   terminated.\
    \  This would happen if the DSN became disabled prior to\n   sending a FIN or\
    \ Reset segment.  Under these circumstances, SNA host\n   resources remain allocated\
    \ and a reconnection from a DSN, which the\n   host believes to already be in\
    \ session, is not allowed.  By requiring\n   the DSN to use the same port when\
    \ reestablishing a connection, the\n   LinkMaster 6200 is able to recognize when\
    \ a reset of the host\n   connection is required.\n"
- title: 3.3.4.  Complete Session Data Flow
  contents:
  - "3.3.4.  Complete Session Data Flow\n      Node 1                            \
    \        Node 2\n     Logical Null XID ------------------------->\n      (UDP\
    \ Datagram)\n     Logical Null XID ------------------------->\n      (UDP Datagram)\n\
    \                       <------------------------ XID Request\n              \
    \                                    (UDP Datagram)\n     Logical SNA XID -------------------------->\n\
    \       (UDP Datagram)\n                       <------------------------ TCP SYN\n\
    \                                                  (TCP Message)\n     TCP SYN\
    \ ACK ----------------------------->\n       (TCP Message)\n                 \
    \      <------------------------ TCP SYN\n                                   \
    \               (TCP Message)\n      ****************** Connection Established\
    \ *******************\n                       <------------------------ SNA ACTPU\n\
    \                                                  (TCP Message)\n       SNA ACTPU\
    \ Response --------------------->\n        (TCP Message)\n                   \
    \    <------------------------ SNA ACTLU\n                                   \
    \               (TCP Message)\n       SNA ACTLU Response --------------------->\n\
    \        (TCP Message)\n                                   .\n               \
    \                    .\n                                   .\n               \
    \        <------------------------ TCP FIN\n                                 \
    \                 (TCP Message)\n       TCP FIN ACK     ------------------------>\n\
    \        (TCP Message)\n                       <------------------------ TCP ACK\n\
    \                                                  (TCP Message)\n      ********************\
    \ Connection Closed *********************\n       Logical Null XID ----------------------->\n\
    \        (UDP Datagram)\n             .\n             .\n             .\n    \
    \         .\n"
- title: 3.3.5.  State Transition Table for the Initiating Node
  contents:
  - "3.3.5.  State Transition Table for the Initiating Node\n                    \
    \         Transition State\n   Given State | No Conn | Null XID Sent | SNA XID\
    \ Sent | Conn Estb\n   ------------+---------+---------------+--------------+-----------\n\
    \   No          |         | Internal Act. |              |\n   Connection  | \
    \        | Stimulus      |              |\n               |         | ---> Sends\
    \    |              |\n               |         |  1st Null XID |            \
    \  |\n   ------------+---------+---------------+--------------+-----------\n \
    \  Null XID    |         |  Internal     | XID Request  |\n   Sent        |  \
    \       | Timer Event   | Received     |\n               |         | ----> Resend\
    \  | ----> Sends  |\n               |         | Null XID      | SNA XID      |\n\
    \   ------------+---------+---------------+--------------+-----------\n   SNA\
    \ XID     |         | Internal      | SNA XID      | Indication\n   Sent     \
    \   |         | Timer Event   | Received     | that TCP\n               |    \
    \     | ----> Resend  | ----> Send   | connection\n               |         |\
    \ Null XID      | SNA XID      | is estb.\n               |         |        \
    \       |              |\n   ------------+---------+---------------+--------------+-----------\n\
    \   Connection  | Indica- |               |              | SNA\n   Established\
    \ | tion    |               |              | Session\n               | that  \
    \  |               |              | Data\n               | TCP conn|         \
    \      |              |\n               | term.   |               |          \
    \    |\n   A gateway state transition table is not provided here because the\n\
    \   state transitions are dependent on the nature of the SNA host\n   interface\
    \ (3172 Channel Protocol, 3174 Channel Protocol, SDLC, etc.).\n"
- title: 4.  LLC to SNA/IP Conversion
  contents:
  - "4.  LLC to SNA/IP Conversion\n   The use of Advanced SNA/IP to convert conventional\
    \ token ring- based\n   SNA traffic to a routable form is both conceivable and\
    \ practical.\n   While interesting, a discussion of this application falls outside\
    \ the\n   context of this RFC.  Very briefly, it can be said that an SNA/IP-\n\
    \   based \"subnet SNA gateway\" application could do many of the things\n   being\
    \ discussed in the context of the DLSw specification [1].\n"
- title: 5.  Performance
  contents:
  - "5.  Performance\n   The performance of SNA sessions running over an SNA/IP connection\n\
    \   will be affected by the bandwidth available on the network and by how\n  \
    \ much traffic is on the network.  SNA/IP is poised to take full\n   advantage\
    \ of the prioritization and class of service enhancements\n   promised in the\
    \ next generation of IP.  Today, SNA/IP can take\n   advantage of router packet\
    \ prioritization schemes based on port\n   number.  SNA/IP also leaves intact\
    \ the standard SNA class of service\n   prioritization protocol.\n   Performance\
    \ measures taken at McDATA comparing the throughput of\n   SNA/IP and LLC across\
    \ a single token-ring segment showed\n   approximately a 15 percent decrease in\
    \ the maximum transactions per\n   hour (1500 bytes to the DSN, 50 bytes out to\
    \ the host) for SNA/IP.\n   This decrease is well within the expected levels given\
    \ the added\n   processing requirements of TCP/IP over LLC in the LinkMaster 6200\
    \ and\n   LinkMaster 7100 operating environments.\n"
- title: 6.  VTAM Definition
  contents:
  - "6.  VTAM Definition\n   The host VTAM definition of SNA/IP downstream nodes is\
    \ dependent on\n   the gateway implementation.  Downstream nodes may appear as\
    \ switched\n   major nodes connected to an XCA or as downstream nodes connected\
    \ to a\n   PU 2.0 controller [4].\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The authors wish to acknowledge that the definition of\
    \ SNA/IP was a\n   collaborative effort involving many individuals ranging from\n\
    \   customers to sales and marketing personnel to engineers. Particular\n   thanks\
    \ go to David Beal, Steve Cartwright, Tracey Floming, Audrey\n   McEwen, Mark\
    \ Platte, Paul Schroeder, Chuck Weil, and Marty Wright,\n   who all played key\
    \ roles in the development and testing of this\n   protocol and also in the editing\
    \ of this RFC.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1] Dixon, R., and D. Kushi, \"Data Link Switching: Switch-to-Switch\n\
    \       Protocol\", RFC 1434, IBM, March 1993.\n   [2] \"Token-Ring Network Architecture\
    \ Reference\", IBM document #SC30-\n       3374-02.\n   [3] \"Systems Network\
    \ Architecture Formats\", IBM document #GA27-3136-\n       12.\n   [4] \"VTAM\
    \ Resource Definition Reference\", IBM document #SC31-6438-1.\n   [5] Comer, D.,\
    \ \"Internetworking with TCP/IP Volume I\", Prentice Hall\n       1991.\n   [6]\
    \ Postel, J., \"Transmission Control Protocol - DARPA Internet\n       Program\
    \ Protocol Specification\", STD 7, RFC 793, USC/Information\n       Sciences Institute,\
    \ September 1981.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This RFC does not address issues of security.\
    \  SNA level security\n   procedures and protocols apply when SNA/IP is used as\
    \ the transport.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Wilfred Behl\n   310 Interlocken Parkway\n   Broomfield,\
    \ Colorado  80021\n   Phone:  303-460-4142\n   Email:  wil@mcdata.com\n   Barbara\
    \ Sterling\n   310 Interlocken Parkway\n   Broomfield, Colorado  80021\n   Phone:\
    \  303-460-4211\n   Email:  bjs@mcdata.com\n   William Teskey\n   2125 112th Ave.\
    \ North East\n   Suite 303\n   Bellevue, WA  98004\n   Phone:  206-450-0650\n\
    \   Email:  wct@ioc-sea.com\n   Note: Any questions or comments relative to the\
    \ contents of this RFC\n   should be sent to snaip@mcdata.com.  This address will\
    \ be used to\n   coordinate the handling of responses.\n"
- title: 11.  Disclaimer
  contents:
  - "11.  Disclaimer\n   McDATA, the McDATA logo, and LinkMaster are registered trademarks\
    \ of\n   McDATA Corporation. All other product names and identifications are\n\
    \   trademarks of their respective manufacturers, who are not affiliated\n   with\
    \ McDATA Corporation.\n"
