- title: __initial_text__
  contents:
  - "     Internet Calendaring and Scheduling Core Object Specification\n        \
    \                      (iCalendar)\n"
- title: Abstract
  contents:
  - 'Abstract

    '
- title: This document defines the iCalendar data format for representing and
  contents:
  - 'This document defines the iCalendar data format for representing and

    '
- title: exchanging calendaring and scheduling information such as events,
  contents:
  - 'exchanging calendaring and scheduling information such as events,

    '
- title: to-dos, journal entries, and free/busy information, independent of any
  contents:
  - 'to-dos, journal entries, and free/busy information, independent of any

    '
- title: particular calendar service or protocol.
  contents:
  - 'particular calendar service or protocol.

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright and License Notice
  contents:
  - "Copyright and License Notice\n   Copyright (c) 2009 IETF Trust and the persons\
    \ identified as the\n   document authors.  All rights reserved.\n   This document\
    \ is subject to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF\
    \ Documents\n   (http://trustee.ietf.org/license-info) in effect on the date of\n\
    \   publication of this document.  Please review these documents\n   carefully,\
    \ as they describe your rights and restrictions with respect\n   to this document.\
    \  Code Components extracted from this document must\n   include Simplified BSD\
    \ License text as described in Section 4.e of\n   the Trust Legal Provisions and\
    \ are provided without warranty as\n   described in the BSD License.\n   This\
    \ document may contain material from IETF Documents or IETF\n   Contributions\
    \ published or made publicly available before November\n   10, 2008.  The person(s)\
    \ controlling the copyright in some of this\n   material may not have granted\
    \ the IETF Trust the right to allow\n   modifications of such material outside\
    \ the IETF Standards Process.\n   Without obtaining an adequate license from the\
    \ person(s) controlling\n   the copyright in such materials, this document may\
    \ not be modified\n   outside the IETF Standards Process, and derivative works\
    \ of it may\n   not be created outside the IETF Standards Process, except to format\n\
    \   it for publication as an RFC or to translate it into languages other\n   than\
    \ English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   5\n   2.  Basic Grammar and Conventions . . . . . . . . . . . .\
    \ . . . .   6\n     2.1.  Formatting Conventions  . . . . . . . . . . . . . .\
    \ . . .   6\n     2.2.  Related Memos . . . . . . . . . . . . . . . . . . . .\
    \ . .   7\n   3.  iCalendar Object Specification  . . . . . . . . . . . . . .\
    \ .   8\n     3.1.  Content Lines . . . . . . . . . . . . . . . . . . . . . .\
    \   8\n       3.1.1.  List and Field Separators . . . . . . . . . . . . . .  11\n\
    \       3.1.2.  Multiple Values . . . . . . . . . . . . . . . . . . .  11\n  \
    \     3.1.3.  Binary Content  . . . . . . . . . . . . . . . . . . .  11\n    \
    \   3.1.4.  Character Set . . . . . . . . . . . . . . . . . . . .  12\n     3.2.\
    \  Property Parameters . . . . . . . . . . . . . . . . . . .  12\n       3.2.1.\
    \  Alternate Text Representation . . . . . . . . . . . .  13\n       3.2.2.  Common\
    \ Name . . . . . . . . . . . . . . . . . . . . .  15\n       3.2.3.  Calendar\
    \ User Type  . . . . . . . . . . . . . . . . .  15\n       3.2.4.  Delegators\
    \  . . . . . . . . . . . . . . . . . . . . .  16\n       3.2.5.  Delegatees  .\
    \ . . . . . . . . . . . . . . . . . . . .  16\n       3.2.6.  Directory Entry\
    \ Reference . . . . . . . . . . . . . .  17\n       3.2.7.  Inline Encoding .\
    \ . . . . . . . . . . . . . . . . . .  17\n       3.2.8.  Format Type . . . .\
    \ . . . . . . . . . . . . . . . . .  18\n       3.2.9.  Free/Busy Time Type .\
    \ . . . . . . . . . . . . . . . .  19\n       3.2.10. Language  . . . . . . .\
    \ . . . . . . . . . . . . . . .  20\n       3.2.11. Group or List Membership \
    \ . . . . . . . . . . . . . .  20\n       3.2.12. Participation Status  . . .\
    \ . . . . . . . . . . . . .  21\n       3.2.13. Recurrence Identifier Range .\
    \ . . . . . . . . . . . .  22\n       3.2.14. Alarm Trigger Relationship  . .\
    \ . . . . . . . . . . .  23\n       3.2.15. Relationship Type . . . . . . . .\
    \ . . . . . . . . . .  24\n       3.2.16. Participation Role  . . . . . . . .\
    \ . . . . . . . . .  25\n       3.2.17. RSVP Expectation  . . . . . . . . . .\
    \ . . . . . . . .  25\n       3.2.18. Sent By . . . . . . . . . . . . . . . .\
    \ . . . . . . .  26\n       3.2.19. Time Zone Identifier  . . . . . . . . . .\
    \ . . . . . .  26\n       3.2.20. Value Data Types  . . . . . . . . . . . . .\
    \ . . . . .  28\n     3.3.  Property Value Data Types . . . . . . . . . . . .\
    \ . . . .  29\n       3.3.1.  Binary  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  29\n       3.3.2.  Boolean . . . . . . . . . . . . . . . . . . . . .\
    \ . .  30\n       3.3.3.  Calendar User Address . . . . . . . . . . . . . . .\
    \ .  30\n       3.3.4.  Date  . . . . . . . . . . . . . . . . . . . . . . . .\
    \  31\n       3.3.5.  Date-Time . . . . . . . . . . . . . . . . . . . . . .  31\n\
    \       3.3.6.  Duration  . . . . . . . . . . . . . . . . . . . . . .  34\n  \
    \     3.3.7.  Float . . . . . . . . . . . . . . . . . . . . . . . .  35\n    \
    \   3.3.8.  Integer . . . . . . . . . . . . . . . . . . . . . . .  35\n      \
    \ 3.3.9.  Period of Time  . . . . . . . . . . . . . . . . . . .  36\n       3.3.10.\
    \ Recurrence Rule . . . . . . . . . . . . . . . . . . .  37\n       3.3.11. Text\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  45\n       3.3.12. Time  .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  46\n       3.3.13. URI . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  48\n       3.3.14. UTC Offset \
    \ . . . . . . . . . . . . . . . . . . . . .  49\n     3.4.  iCalendar Object \
    \ . . . . . . . . . . . . . . . . . . . .  49\n     3.5.  Property  . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  50\n     3.6.  Calendar Components .\
    \ . . . . . . . . . . . . . . . . . .  50\n       3.6.1.  Event Component . .\
    \ . . . . . . . . . . . . . . . . .  52\n       3.6.2.  To-Do Component . . .\
    \ . . . . . . . . . . . . . . . .  56\n       3.6.3.  Journal Component . . .\
    \ . . . . . . . . . . . . . . .  58\n       3.6.4.  Free/Busy Component . . .\
    \ . . . . . . . . . . . . . .  60\n       3.6.5.  Time Zone Component . . . .\
    \ . . . . . . . . . . . . .  63\n       3.6.6.  Alarm Component . . . . . . .\
    \ . . . . . . . . . . . .  72\n     3.7.  Calendar Properties . . . . . . . .\
    \ . . . . . . . . . . .  77\n       3.7.1.  Calendar Scale  . . . . . . . . .\
    \ . . . . . . . . . .  77\n       3.7.2.  Method  . . . . . . . . . . . . . .\
    \ . . . . . . . . .  78\n       3.7.3.  Product Identifier  . . . . . . . . .\
    \ . . . . . . . .  79\n       3.7.4.  Version . . . . . . . . . . . . . . . .\
    \ . . . . . . .  80\n     3.8.  Component Properties  . . . . . . . . . . . .\
    \ . . . . . .  81\n       3.8.1.  Descriptive Component Properties  . . . . .\
    \ . . . . .  81\n         3.8.1.1.  Attachment  . . . . . . . . . . . . . . .\
    \ . . . .  81\n         3.8.1.2.  Categories  . . . . . . . . . . . . . . . .\
    \ . . .  82\n         3.8.1.3.  Classification  . . . . . . . . . . . . . . .\
    \ . .  83\n         3.8.1.4.  Comment . . . . . . . . . . . . . . . . . . . .\
    \ .  84\n         3.8.1.5.  Description . . . . . . . . . . . . . . . . . . .\
    \  85\n         3.8.1.6.  Geographic Position . . . . . . . . . . . . . . .  87\n\
    \         3.8.1.7.  Location  . . . . . . . . . . . . . . . . . . . .  88\n  \
    \       3.8.1.8.  Percent Complete  . . . . . . . . . . . . . . . .  89\n    \
    \     3.8.1.9.  Priority  . . . . . . . . . . . . . . . . . . . .  90\n      \
    \   3.8.1.10. Resources . . . . . . . . . . . . . . . . . . . .  92\n        \
    \ 3.8.1.11. Status  . . . . . . . . . . . . . . . . . . . . .  93\n         3.8.1.12.\
    \ Summary . . . . . . . . . . . . . . . . . . . . .  94\n       3.8.2.  Date and\
    \ Time Component Properties  . . . . . . . . .  95\n         3.8.2.1.  Date-Time\
    \ Completed . . . . . . . . . . . . . . .  95\n         3.8.2.2.  Date-Time End\
    \ . . . . . . . . . . . . . . . . . .  96\n         3.8.2.3.  Date-Time Due .\
    \ . . . . . . . . . . . . . . . . .  97\n         3.8.2.4.  Date-Time Start .\
    \ . . . . . . . . . . . . . . . .  99\n         3.8.2.5.  Duration  . . . . .\
    \ . . . . . . . . . . . . . . . 100\n         3.8.2.6.  Free/Busy Time  . . .\
    \ . . . . . . . . . . . . . . 101\n         3.8.2.7.  Time Transparency . . .\
    \ . . . . . . . . . . . . . 102\n       3.8.3.  Time Zone Component Properties\
    \  . . . . . . . . . . . 103\n         3.8.3.1.  Time Zone Identifier  . . . .\
    \ . . . . . . . . . . 103\n         3.8.3.2.  Time Zone Name  . . . . . . . .\
    \ . . . . . . . . . 105\n         3.8.3.3.  Time Zone Offset From . . . . . .\
    \ . . . . . . . . 106\n         3.8.3.4.  Time Zone Offset To . . . . . . . .\
    \ . . . . . . . 106\n         3.8.3.5.  Time Zone URL . . . . . . . . . . . .\
    \ . . . . . . 107\n       3.8.4.  Relationship Component Properties . . . . .\
    \ . . . . . 108\n         3.8.4.1.  Attendee  . . . . . . . . . . . . . . . .\
    \ . . . . 108\n         3.8.4.2.  Contact . . . . . . . . . . . . . . . . . .\
    \ . . . 111\n         3.8.4.3.  Organizer . . . . . . . . . . . . . . . . . .\
    \ . . 113\n         3.8.4.4.  Recurrence ID . . . . . . . . . . . . . . . . .\
    \ . 114\n         3.8.4.5.  Related To  . . . . . . . . . . . . . . . . . . .\
    \ 117\n         3.8.4.6.  Uniform Resource Locator  . . . . . . . . . . . . 118\n\
    \         3.8.4.7.  Unique Identifier . . . . . . . . . . . . . . . . 119\n  \
    \     3.8.5.  Recurrence Component Properties . . . . . . . . . . . 120\n    \
    \     3.8.5.1.  Exception Date-Times  . . . . . . . . . . . . . . 120\n      \
    \   3.8.5.2.  Recurrence Date-Times . . . . . . . . . . . . . . 122\n        \
    \ 3.8.5.3.  Recurrence Rule . . . . . . . . . . . . . . . . . 124\n       3.8.6.\
    \  Alarm Component Properties  . . . . . . . . . . . . . 134\n         3.8.6.1.\
    \  Action  . . . . . . . . . . . . . . . . . . . . . 134\n         3.8.6.2.  Repeat\
    \ Count  . . . . . . . . . . . . . . . . . . 135\n         3.8.6.3.  Trigger .\
    \ . . . . . . . . . . . . . . . . . . . . 135\n       3.8.7.  Change Management\
    \ Component Properties  . . . . . . . 138\n         3.8.7.1.  Date-Time Created\
    \ . . . . . . . . . . . . . . . . 138\n         3.8.7.2.  Date-Time Stamp . .\
    \ . . . . . . . . . . . . . . . 139\n         3.8.7.3.  Last Modified . . . .\
    \ . . . . . . . . . . . . . . 140\n         3.8.7.4.  Sequence Number . . . .\
    \ . . . . . . . . . . . . . 141\n       3.8.8.  Miscellaneous Component Properties\
    \  . . . . . . . . . 142\n         3.8.8.1.  IANA Properties . . . . . . . . .\
    \ . . . . . . . . 142\n         3.8.8.2.  Non-Standard Properties . . . . . .\
    \ . . . . . . . 142\n         3.8.8.3.  Request Status  . . . . . . . . . . .\
    \ . . . . . . 144\n   4.  iCalendar Object Examples . . . . . . . . . . . . .\
    \ . . . . . 146\n   5.  Recommended Practices . . . . . . . . . . . . . . . .\
    \ . . . . 150\n   6.  Internationalization Considerations . . . . . . . . . .\
    \ . . . 151\n   7.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . . 151\n   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . .\
    \ . 151\n     8.1.  iCalendar Media Type Registration . . . . . . . . . . . .\
    \ 151\n     8.2.  New iCalendar Elements Registration . . . . . . . . . . . 155\n\
    \       8.2.1.  iCalendar Elements Registration Procedure . . . . . . 155\n  \
    \     8.2.2.  Registration Template for Components  . . . . . . . . 155\n    \
    \   8.2.3.  Registration Template for Properties  . . . . . . . . 156\n      \
    \ 8.2.4.  Registration Template for Parameters  . . . . . . . . 156\n       8.2.5.\
    \  Registration Template for Value Data Types  . . . . . 157\n       8.2.6.  Registration\
    \ Template for Values  . . . . . . . . . . 157\n     8.3.  Initial iCalendar Elements\
    \ Registries . . . . . . . . . . 158\n       8.3.1.  Components Registry . . .\
    \ . . . . . . . . . . . . . . 158\n       8.3.2.  Properties Registry . . . .\
    \ . . . . . . . . . . . . . 158\n       8.3.3.  Parameters Registry . . . . .\
    \ . . . . . . . . . . . . 161\n       8.3.4.  Value Data Types Registry . . .\
    \ . . . . . . . . . . . 162\n       8.3.5.  Calendar User Types Registry  . .\
    \ . . . . . . . . . . 162\n       8.3.6.  Free/Busy Time Types Registry . . .\
    \ . . . . . . . . . 163\n       8.3.7.  Participation Statuses Registry . . .\
    \ . . . . . . . . 163\n       8.3.8.  Relationship Types Registry . . . . . .\
    \ . . . . . . . 164\n       8.3.9.  Participation Roles Registry  . . . . . .\
    \ . . . . . . 164\n       8.3.10. Actions Registry  . . . . . . . . . . . . .\
    \ . . . . . 165\n       8.3.11. Classifications Registry  . . . . . . . . . .\
    \ . . . . 165\n       8.3.12. Methods Registry  . . . . . . . . . . . . . . .\
    \ . . . 165\n   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . .\
    \ . . 165\n   10. References  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 166\n     10.1. Normative References  . . . . . . . . . . . . . . . . . .\
    \ 166\n     10.2. Informative References  . . . . . . . . . . . . . . . . . 167\n\
    \   Appendix A.  Differences from RFC 2445  . . . . . . . . . . . . . 169\n  \
    \   A.1.  New Restrictions  . . . . . . . . . . . . . . . . . . . . 169\n    \
    \ A.2.  Restrictions Removed  . . . . . . . . . . . . . . . . . . 169\n     A.3.\
    \  Deprecated Features . . . . . . . . . . . . . . . . . . . 169\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The use of calendaring and scheduling has grown considerably\
    \ in the\n   last decade.  Enterprise and inter-enterprise business has become\n\
    \   dependent on rapid scheduling of events and actions using this\n   information\
    \ technology.  This memo is intended to progress the level\n   of interoperability\
    \ possible between dissimilar calendaring and\n   scheduling applications.  This\
    \ memo defines a MIME content type for\n   exchanging electronic calendaring and\
    \ scheduling information.  The\n   Internet Calendaring and Scheduling Core Object\
    \ Specification, or\n   iCalendar, allows for the capture and exchange of information\n\
    \   normally stored within a calendaring and scheduling application; such\n  \
    \ as a Personal Information Manager (PIM) or a Group-Scheduling\n   product.\n\
    \   The iCalendar format is suitable as an exchange format between\n   applications\
    \ or systems.  The format is defined in terms of a MIME\n   content type.  This\
    \ will enable the object to be exchanged using\n   several transports, including\
    \ but not limited to SMTP, HTTP, a file\n   system, desktop interactive protocols\
    \ such as the use of a memory-\n   based clipboard or drag/drop interactions,\
    \ point-to-point\n   asynchronous communication, wired-network transport, or some\
    \ form of\n   unwired transport such as infrared.\n   The memo also provides for\
    \ the definition of iCalendar object methods\n   that will map this content type\
    \ to a set of messages for supporting\n   calendaring and scheduling operations\
    \ such as requesting, replying\n   to, modifying, and canceling meetings or appointments,\
    \ to-dos, and\n   journal entries.  The iCalendar object methods can be used to\
    \ define\n   other calendaring and scheduling operations such as requesting for\n\
    \   and replying with free/busy time data.  Such a scheduling protocol is\n  \
    \ defined in the iCalendar Transport-independent Interoperability\n   Protocol\
    \ (iTIP) defined in [2446bis].\n   The memo also includes a formal grammar for\
    \ the content type based on\n   the Internet ABNF defined in [RFC5234].  This\
    \ ABNF is required for\n   the implementation of parsers and to serve as the definitive\n\
    \   reference when ambiguities or questions arise in interpreting the\n   descriptive\
    \ prose definition of the memo.  Additional restrictions\n   that could not easily\
    \ be expressed with the ABNF syntax are specified\n   as comments in the ABNF.\
    \  Comments with normative statements should\n   be treated as such.\n"
- title: 2.  Basic Grammar and Conventions
  contents:
  - "2.  Basic Grammar and Conventions\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   This memo makes use of both a descriptive prose and a more\
    \ formal\n   notation for defining the calendaring and scheduling format.\n  \
    \ The notation used in this memo is the ABNF notation of [RFC5234].\n   Readers\
    \ intending on implementing the format defined in this memo\n   should be familiar\
    \ with this notation in order to properly interpret\n   the specifications of\
    \ this memo.\n   All numeric values used in this memo are given in decimal notation.\n\
    \   All names of properties, property parameters, enumerated property\n   values,\
    \ and property parameter values are case-insensitive.  However,\n   all other\
    \ property values are case-sensitive, unless otherwise\n   stated.\n      Note:\
    \ All indented editorial notes, such as this one, are intended\n      to provide\
    \ the reader with additional information.  The\n      information is not essential\
    \ to the building of an implementation\n      conformant with this memo.  The\
    \ information is provided to\n      highlight a particular feature or characteristic\
    \ of the memo.\n   The format for the iCalendar object is based on the syntax\
    \ of the\n   text/directory media type [RFC2425].  While the iCalendar object\
    \ is\n   not a profile of the text/directory media type [RFC2425], it does\n \
    \  reuse a number of the elements from the [RFC2425] specification.\n"
- title: 2.1.  Formatting Conventions
  contents:
  - "2.1.  Formatting Conventions\n   The elements defined in this memo are defined\
    \ in prose.  Many of the\n   terms used to describe these have common usage that\
    \ is different than\n   the standards usage of this memo.  In order to reference,\
    \ within this\n   memo, elements of the calendaring and scheduling model, core\
    \ object\n   (this memo), or interoperability protocol [2446bis] some formatting\n\
    \   conventions have been used.  Calendaring and scheduling roles are\n   referred\
    \ to in quoted-strings of text with the first character of\n   each word in uppercase.\
    \  For example, \"Organizer\" refers to a role of\n   a \"Calendar User\" within\
    \ the scheduling protocol defined by\n   [2446bis].  Calendar components defined\
    \ by this memo are referred to\n   with capitalized, quoted-strings of text. \
    \ All calendar components\n   start with the letter \"V\".  For example, \"VEVENT\"\
    \ refers to the event\n   calendar component, \"VTODO\" refers to the to-do calendar\
    \ component,\n   and \"VJOURNAL\" refers to the daily journal calendar component.\n\
    \   Scheduling methods defined by iTIP [2446bis] are referred to with\n   capitalized,\
    \ quoted-strings of text.  For example, \"REQUEST\" refers\n   to the method for\
    \ requesting a scheduling calendar component be\n   created or modified, and \"\
    REPLY\" refers to the method a recipient of\n   a request uses to update their\
    \ status with the \"Organizer\" of the\n   calendar component.\n   The properties\
    \ defined by this memo are referred to with capitalized,\n   quoted-strings of\
    \ text, followed by the word \"property\".  For\n   example, \"ATTENDEE\" property\
    \ refers to the iCalendar property used to\n   convey the calendar address of\
    \ a calendar user.  Property parameters\n   defined by this memo are referred\
    \ to with lowercase, quoted-strings\n   of text, followed by the word \"parameter\"\
    .  For example, \"value\"\n   parameter refers to the iCalendar property parameter\
    \ used to override\n   the default value type for a property value.  Enumerated\
    \ values\n   defined by this memo are referred to with capitalized text, either\n\
    \   alone or followed by the word \"value\".  For example, the \"MINUTELY\"\n\
    \   value can be used with the \"FREQ\" component of the \"RECUR\" value type\n\
    \   to specify repeating components based on an interval of one minute or\n  \
    \ more.\n   The following table lists the different characters from the\n   [US-ASCII]\
    \ character set that is referenced in this document.  For\n   each character,\
    \ the table specifies the character name used\n   throughout this document, along\
    \ with its US-ASCII decimal codepoint.\n              +------------------------+-------------------+\n\
    \              | Character name         | Decimal codepoint |\n              +------------------------+-------------------+\n\
    \              | HTAB                   | 9                 |\n              |\
    \ LF                     | 10                |\n              | CR           \
    \          | 13                |\n              | DQUOTE                 | 22\
    \                |\n              | SPACE                  | 32              \
    \  |\n              | PLUS SIGN              | 43                |\n         \
    \     | COMMA                  | 44                |\n              | HYPHEN-MINUS\
    \           | 45                |\n              | PERIOD                 | 46\
    \                |\n              | SOLIDUS                | 47              \
    \  |\n              | COLON                  | 58                |\n         \
    \     | SEMICOLON              | 59                |\n              | LATIN CAPITAL\
    \ LETTER N | 78                |\n              | LATIN CAPITAL LETTER T | 84\
    \                |\n              | LATIN CAPITAL LETTER X | 88              \
    \  |\n              | LATIN CAPITAL LETTER Z | 90                |\n         \
    \     | BACKSLASH              | 92                |\n              | LATIN SMALL\
    \ LETTER N   | 110               |\n              +------------------------+-------------------+\n"
- title: 2.2.  Related Memos
  contents:
  - "2.2.  Related Memos\n   Implementers will need to be familiar with several other\
    \ memos that,\n   along with this memo, form a framework for Internet calendaring\
    \ and\n   scheduling standards.  This memo specifies a core specification of\n\
    \   objects, value types, properties, and property parameters.\n   o  iTIP [2446bis]\
    \ specifies an interoperability protocol for\n      scheduling between different\
    \ implementations;\n   o  iCalendar Message-Based Interoperability Protocol (iMIP)\
    \ [2447bis]\n      specifies an Internet email binding for [2446bis].\n   This\
    \ memo does not attempt to repeat the specification of concepts or\n   definitions\
    \ from these other memos.  Where possible, references are\n   made to the memo\
    \ that provides for the specification of these\n   concepts or definitions.\n"
- title: 3.  iCalendar Object Specification
  contents:
  - "3.  iCalendar Object Specification\n   The following sections define the details\
    \ of a Calendaring and\n   Scheduling Core Object Specification.  The Calendaring\
    \ and Scheduling\n   Core Object is a collection of calendaring and scheduling\n\
    \   information.  Typically, this information will consist of an\n   iCalendar\
    \ stream with one or more iCalendar objects.  The body of the\n   iCalendar object\
    \ consists of a sequence of calendar properties and\n   one or more calendar components.\n\
    \   Section 3.1 defines the content line format; Section 3.2 defines the\n   property\
    \ parameter format; Section 3.3 defines the data types for\n   property values;\
    \ Section 3.4 defines the iCalendar object format;\n   Section 3.5 defines the\
    \ iCalendar property format; Section 3.6\n   defines the calendar component format;\
    \ Section 3.7 defines calendar\n   properties; and Section 3.8 defines calendar\
    \ component properties.\n   This information is intended to be an integral part\
    \ of the MIME\n   content type registration.  In addition, this information can\
    \ be used\n   independent of such content registration.  In particular, this memo\n\
    \   has direct applicability for use as a calendaring and scheduling\n   exchange\
    \ format in file-, memory-, or network-based transport\n   mechanisms.\n"
- title: 3.1.  Content Lines
  contents:
  - "3.1.  Content Lines\n   The iCalendar object is organized into individual lines\
    \ of text,\n   called content lines.  Content lines are delimited by a line break,\n\
    \   which is a CRLF sequence (CR character followed by LF character).\n   Lines\
    \ of text SHOULD NOT be longer than 75 octets, excluding the line\n   break. \
    \ Long content lines SHOULD be split into a multiple line\n   representations\
    \ using a line \"folding\" technique.  That is, a long\n   line can be split between\
    \ any two characters by inserting a CRLF\n   immediately followed by a single\
    \ linear white-space character (i.e.,\n   SPACE or HTAB).  Any sequence of CRLF\
    \ followed immediately by a\n   single linear white-space character is ignored\
    \ (i.e., removed) when\n   processing the content type.\n   For example, the line:\n\
    \     DESCRIPTION:This is a long description that exists on a long line.\n   Can\
    \ be represented as:\n     DESCRIPTION:This is a lo\n      ng description\n  \
    \     that exists on a long line.\n   The process of moving from this folded multiple-line\
    \ representation\n   to its single-line representation is called \"unfolding\"\
    .  Unfolding\n   is accomplished by removing the CRLF and the linear white-space\n\
    \   character that immediately follows.\n   When parsing a content line, folded\
    \ lines MUST first be unfolded\n   according to the unfolding procedure described\
    \ above.\n      Note: It is possible for very simple implementations to generate\n\
    \      improperly folded lines in the middle of a UTF-8 multi-octet\n      sequence.\
    \  For this reason, implementations need to unfold lines\n      in such a way\
    \ to properly restore the original sequence.\n   The content information associated\
    \ with an iCalendar object is\n   formatted using a syntax similar to that defined\
    \ by [RFC2425].  That\n   is, the content information consists of CRLF-separated\
    \ content lines.\n   The following notation defines the lines of content in an\
    \ iCalendar\n   object:\n     contentline   = name *(\";\" param ) \":\" value\
    \ CRLF\n     ; This ABNF is just a general definition for an initial parsing\n\
    \     ; of the content line into its property name, parameter list,\n     ; and\
    \ value string\n     ; When parsing a content line, folded lines MUST first\n\
    \     ; be unfolded according to the unfolding procedure\n     ; described above.\
    \  When generating a content line, lines\n     ; longer than 75 octets SHOULD\
    \ be folded according to\n     ; the folding procedure described above.\n    \
    \ name          = iana-token / x-name\n     iana-token    = 1*(ALPHA / DIGIT /\
    \ \"-\")\n     ; iCalendar identifier registered with IANA\n     x-name      \
    \  = \"X-\" [vendorid \"-\"] 1*(ALPHA / DIGIT / \"-\")\n     ; Reserved for experimental\
    \ use.\n     vendorid      = 3*(ALPHA / DIGIT)\n     ; Vendor identification\n\
    \     param         = param-name \"=\" param-value *(\",\" param-value)\n    \
    \ ; Each property defines the specific ABNF for the parameters\n     ; allowed\
    \ on the property.  Refer to specific properties for\n     ; precise parameter\
    \ ABNF.\n     param-name    = iana-token / x-name\n     param-value   = paramtext\
    \ / quoted-string\n     paramtext     = *SAFE-CHAR\n     value         = *VALUE-CHAR\n\
    \     quoted-string = DQUOTE *QSAFE-CHAR DQUOTE\n     QSAFE-CHAR    = WSP / %x21\
    \ / %x23-7E / NON-US-ASCII\n     ; Any character except CONTROL and DQUOTE\n \
    \    SAFE-CHAR     = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E\n              \
    \     / NON-US-ASCII\n     ; Any character except CONTROL, DQUOTE, \";\", \":\"\
    , \",\"\n     VALUE-CHAR    = WSP / %x21-7E / NON-US-ASCII\n     ; Any textual\
    \ character\n     NON-US-ASCII  = UTF8-2 / UTF8-3 / UTF8-4\n     ; UTF8-2, UTF8-3,\
    \ and UTF8-4 are defined in [RFC3629]\n     CONTROL       = %x00-08 / %x0A-1F\
    \ / %x7F\n     ; All the controls except HTAB\n   The property value component\
    \ of a content line has a format that is\n   property specific.  Refer to the\
    \ section describing each property for\n   a definition of this format.\n   All\
    \ names of properties, property parameters, enumerated property\n   values and\
    \ property parameter values are case-insensitive.  However,\n   all other property\
    \ values are case-sensitive, unless otherwise\n   stated.\n"
- title: 3.1.1.  List and Field Separators
  contents:
  - "3.1.1.  List and Field Separators\n   Some properties and parameters allow a\
    \ list of values.  Values in a\n   list of values MUST be separated by a COMMA\
    \ character.  There is no\n   significance to the order of values in a list. \
    \ For those parameter\n   values (such as those that specify URI values) that\
    \ are specified in\n   quoted-strings, the individual quoted-strings are separated\
    \ by a\n   COMMA character.\n   Some property values are defined in terms of multiple\
    \ parts.  These\n   structured property values MUST have their value parts separated\
    \ by a\n   SEMICOLON character.\n   Some properties allow a list of parameters.\
    \  Each property parameter\n   in a list of property parameters MUST be separated\
    \ by a SEMICOLON\n   character.\n   Property parameters with values containing\
    \ a COLON character, a\n   SEMICOLON character or a COMMA character MUST be placed\
    \ in quoted\n   text.\n   For example, in the following properties, a SEMICOLON\
    \ is used to\n   separate property parameters from each other and a COMMA character\
    \ is\n   used to separate property values in a value list.\n     ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT:mailto:\n\
    \      jsmith@example.com\n     RDATE;VALUE=DATE:19970304,19970504,19970704,19970904\n"
- title: 3.1.2.  Multiple Values
  contents:
  - "3.1.2.  Multiple Values\n   Some properties defined in the iCalendar object can\
    \ have multiple\n   values.  The general rule for encoding multi-valued items\
    \ is to\n   simply create a new content line for each value, including the\n \
    \  property name.  However, it should be noted that some properties\n   support\
    \ encoding multiple values in a single property by separating\n   the values with\
    \ a COMMA character.  Individual property definitions\n   should be consulted\
    \ for determining whether a specific property\n   allows multiple values and in\
    \ which of these two forms.  Multi-valued\n   properties MUST NOT be used to specify\
    \ multiple language variants of\n   the same value.  Calendar applications SHOULD\
    \ display all values.\n"
- title: 3.1.3.  Binary Content
  contents:
  - "3.1.3.  Binary Content\n   Binary content information in an iCalendar object\
    \ SHOULD be\n   referenced using a URI within a property value.  That is, the\
    \ binary\n   content information SHOULD be placed in an external MIME entity that\n\
    \   can be referenced by a URI from within the iCalendar object.  In\n   applications\
    \ where this is not feasible, binary content information\n   can be included within\
    \ an iCalendar object, but only after first\n   encoding it into text using the\
    \ \"BASE64\" encoding method defined in\n   [RFC4648].  Inline binary content\
    \ SHOULD only be used in applications\n   whose special circumstances demand that\
    \ an iCalendar object be\n   expressed as a single entity.  A property containing\
    \ inline binary\n   content information MUST specify the \"ENCODING\" property\
    \ parameter.\n   Binary content information placed external to the iCalendar object\n\
    \   MUST be referenced by a uniform resource identifier (URI).\n   The following\
    \ example specifies an \"ATTACH\" property that references\n   an attachment external\
    \ to the iCalendar object with a URI reference:\n     ATTACH:http://example.com/public/quarterly-report.doc\n\
    \   The following example specifies an \"ATTACH\" property with inline\n   binary\
    \ encoded content information:\n     ATTACH;FMTTYPE=text/plain;ENCODING=BASE64;VALUE=BINARY:VGhlIH\n\
    \      F1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4\n"
- title: 3.1.4.  Character Set
  contents:
  - "3.1.4.  Character Set\n   There is not a property parameter to declare the charset\
    \ used in a\n   property value.  The default charset for an iCalendar stream is\
    \ UTF-8\n   as defined in [RFC3629].\n   The \"charset\" Content-Type parameter\
    \ MUST be used in MIME transports\n   to specify the charset being used.\n"
- title: 3.2.  Property Parameters
  contents:
  - "3.2.  Property Parameters\n   A property can have attributes with which it is\
    \ associated.  These\n   \"property parameters\" contain meta-information about\
    \ the property or\n   the property value.  Property parameters are provided to\
    \ specify such\n   information as the location of an alternate text representation\
    \ for a\n   property value, the language of a text property value, the value type\n\
    \   of the property value, and other attributes.\n   Property parameter values\
    \ that contain the COLON, SEMICOLON, or COMMA\n   character separators MUST be\
    \ specified as quoted-string text values.\n   Property parameter values MUST NOT\
    \ contain the DQUOTE character.  The\n   DQUOTE character is used as a delimiter\
    \ for parameter values that\n   contain restricted characters or URI text.  For\
    \ example:\n     DESCRIPTION;ALTREP=\"cid:part1.0001@example.org\":The Fall'98\
    \ Wild\n       Wizards Conference - - Las Vegas\\, NV\\, USA\n   Property parameter\
    \ values that are not in quoted-strings are case-\n   insensitive.\n   The general\
    \ property parameters defined by this memo are defined by\n   the following notation:\n\
    \     icalparameter = altrepparam       ; Alternate text representation\n    \
    \               / cnparam           ; Common name\n                   / cutypeparam\
    \       ; Calendar user type\n                   / delfromparam      ; Delegator\n\
    \                   / deltoparam        ; Delegatee\n                   / dirparam\
    \          ; Directory entry\n                   / encodingparam     ; Inline\
    \ encoding\n                   / fmttypeparam      ; Format type\n           \
    \        / fbtypeparam       ; Free/busy time type\n                   / languageparam\
    \     ; Language for text\n                   / memberparam       ; Group or list\
    \ membership\n                   / partstatparam     ; Participation status\n\
    \                   / rangeparam        ; Recurrence identifier range\n      \
    \             / trigrelparam      ; Alarm trigger relationship\n             \
    \      / reltypeparam      ; Relationship type\n                   / roleparam\
    \         ; Participation role\n                   / rsvpparam         ; RSVP\
    \ expectation\n                   / sentbyparam       ; Sent by\n            \
    \       / tzidparam         ; Reference to time zone object\n                \
    \   / valuetypeparam    ; Property value data type\n                   / other-param\n\
    \     other-param   = (iana-param / x-param)\n     iana-param  = iana-token \"\
    =\" param-value *(\",\" param-value)\n     ; Some other IANA-registered iCalendar\
    \ parameter.\n     x-param     = x-name \"=\" param-value *(\",\" param-value)\n\
    \     ; A non-standard, experimental parameter.\n   Applications MUST ignore x-param\
    \ and iana-param values they don't\n   recognize.\n"
- title: 3.2.1.  Alternate Text Representation
  contents:
  - "3.2.1.  Alternate Text Representation\n   Parameter Name:  ALTREP\n   Purpose:\
    \  To specify an alternate text representation for the\n      property value.\n\
    \   Format Definition:  This property parameter is defined by the\n      following\
    \ notation:\n     altrepparam = \"ALTREP\" \"=\" DQUOTE uri DQUOTE\n   Description:\
    \  This parameter specifies a URI that points to an\n      alternate representation\
    \ for a textual property value.  A property\n      specifying this parameter MUST\
    \ also include a value that reflects\n      the default representation of the\
    \ text value.  The URI parameter\n      value MUST be specified in a quoted-string.\n\
    \         Note: While there is no restriction imposed on the URI schemes\n   \
    \      allowed for this parameter, Content Identifier (CID) [RFC2392],\n     \
    \    HTTP [RFC2616], and HTTPS [RFC2818] are the URI schemes most\n         commonly\
    \ used by current implementations.\n   Example:\n       DESCRIPTION;ALTREP=\"\
    CID:part3.msg.970415T083000@example.com\":\n        Project XYZ Review Meeting\
    \ will include the following agenda\n         items: (a) Market Overview\\, (b)\
    \ Finances\\, (c) Project Man\n        agement\n      The \"ALTREP\" property\
    \ parameter value might point to a \"text/html\"\n      content portion.\n   \
    \    Content-Type:text/html\n       Content-Id:<part3.msg.970415T083000@example.com>\n\
    \       <html>\n         <head>\n          <title></title>\n         </head>\n\
    \         <body>\n           <p>\n             <b>Project XYZ Review Meeting</b>\
    \ will include\n             the following agenda items:\n             <ol>\n\
    \               <li>Market Overview</li>\n               <li>Finances</li>\n \
    \              <li>Project Management</li>\n             </ol>\n           </p>\n\
    \         </body>\n       </html>\n"
- title: 3.2.2.  Common Name
  contents:
  - "3.2.2.  Common Name\n   Parameter Name:  CN\n   Purpose:  To specify the common\
    \ name to be associated with the\n      calendar user specified by the property.\n\
    \   Format Definition:  This property parameter is defined by the\n      following\
    \ notation:\n     cnparam    = \"CN\" \"=\" param-value\n   Description:  This\
    \ parameter can be specified on properties with a\n      CAL-ADDRESS value type.\
    \  The parameter specifies the common name\n      to be associated with the calendar\
    \ user specified by the property.\n      The parameter value is text.  The parameter\
    \ value can be used for\n      display text to be associated with the calendar\
    \ address specified\n      by the property.\n   Example:\n       ORGANIZER;CN=\"\
    John Smith\":mailto:jsmith@example.com\n"
- title: 3.2.3.  Calendar User Type
  contents:
  - "3.2.3.  Calendar User Type\n   Parameter Name:  CUTYPE\n   Purpose:  To identify\
    \ the type of calendar user specified by the\n      property.\n   Format Definition:\
    \  This property parameter is defined by the\n      following notation:\n    \
    \   cutypeparam        = \"CUTYPE\" \"=\"\n                          (\"INDIVIDUAL\"\
    \   ; An individual\n                         / \"GROUP\"        ; A group of\
    \ individuals\n                         / \"RESOURCE\"     ; A physical resource\n\
    \                         / \"ROOM\"         ; A room resource\n             \
    \            / \"UNKNOWN\"      ; Otherwise not known\n                      \
    \   / x-name         ; Experimental type\n                         / iana-token)\
    \    ; Other IANA-registered\n                                          ; type\n\
    \       ; Default is INDIVIDUAL\n   Description:  This parameter can be specified\
    \ on properties with a\n      CAL-ADDRESS value type.  The parameter identifies\
    \ the type of\n      calendar user specified by the property.  If not specified\
    \ on a\n      property that allows this parameter, the default is INDIVIDUAL.\n\
    \      Applications MUST treat x-name and iana-token values they don't\n     \
    \ recognize the same way as they would the UNKNOWN value.\n   Example:\n     \
    \  ATTENDEE;CUTYPE=GROUP:mailto:ietf-calsch@example.org\n"
- title: 3.2.4.  Delegators
  contents:
  - "3.2.4.  Delegators\n   Parameter Name:  DELEGATED-FROM\n   Purpose:  To specify\
    \ the calendar users that have delegated their\n      participation to the calendar\
    \ user specified by the property.\n   Format Definition:  This property parameter\
    \ is defined by the\n      following notation:\n       delfromparam       = \"\
    DELEGATED-FROM\" \"=\" DQUOTE cal-address\n                             DQUOTE\
    \ *(\",\" DQUOTE cal-address DQUOTE)\n   Description:  This parameter can be specified\
    \ on properties with a\n      CAL-ADDRESS value type.  This parameter specifies\
    \ those calendar\n      users that have delegated their participation in a group-scheduled\n\
    \      event or to-do to the calendar user specified by the property.\n      The\
    \ individual calendar address parameter values MUST each be\n      specified in\
    \ a quoted-string.\n   Example:\n       ATTENDEE;DELEGATED-FROM=\"mailto:jsmith@example.com\"\
    :mailto:\n        jdoe@example.com\n"
- title: 3.2.5.  Delegatees
  contents:
  - "3.2.5.  Delegatees\n   Parameter Name:  DELEGATED-TO\n   Purpose:  To specify\
    \ the calendar users to whom the calendar user\n      specified by the property\
    \ has delegated participation.\n   Format Definition:  This property parameter\
    \ is defined by the\n      following notation:\n       deltoparam = \"DELEGATED-TO\"\
    \ \"=\" DQUOTE cal-address DQUOTE\n                    *(\",\" DQUOTE cal-address\
    \ DQUOTE)\n   Description:  This parameter can be specified on properties with\
    \ a\n      CAL-ADDRESS value type.  This parameter specifies those calendar\n\
    \      users whom have been delegated participation in a group-scheduled\n   \
    \   event or to-do by the calendar user specified by the property.\n      The\
    \ individual calendar address parameter values MUST each be\n      specified in\
    \ a quoted-string.\n   Example:\n       ATTENDEE;DELEGATED-TO=\"mailto:jdoe@example.com\"\
    ,\"mailto:jqpublic\n        @example.com\":mailto:jsmith@example.com\n"
- title: 3.2.6.  Directory Entry Reference
  contents:
  - "3.2.6.  Directory Entry Reference\n   Parameter Name:  DIR\n   Purpose:  To specify\
    \ reference to a directory entry associated with\n      the calendar user specified\
    \ by the property.\n   Format Definition:  This property parameter is defined\
    \ by the\n      following notation:\n       dirparam   = \"DIR\" \"=\" DQUOTE\
    \ uri DQUOTE\n   Description:  This parameter can be specified on properties with\
    \ a\n      CAL-ADDRESS value type.  The parameter specifies a reference to\n \
    \     the directory entry associated with the calendar user specified by\n   \
    \   the property.  The parameter value is a URI.  The URI parameter\n      value\
    \ MUST be specified in a quoted-string.\n         Note: While there is no restriction\
    \ imposed on the URI schemes\n         allowed for this parameter, CID [RFC2392],\
    \ DATA [RFC2397], FILE\n         [RFC1738], FTP [RFC1738], HTTP [RFC2616], HTTPS\
    \ [RFC2818], LDAP\n         [RFC4516], and MID [RFC2392] are the URI schemes most\
    \ commonly\n         used by current implementations.\n   Example:\n       ORGANIZER;DIR=\"\
    ldap://example.com:6666/o=ABC%20Industries,\n        c=US???(cn=Jim%20Dolittle)\"\
    :mailto:jimdo@example.com\n"
- title: 3.2.7.  Inline Encoding
  contents:
  - "3.2.7.  Inline Encoding\n   Parameter Name:  ENCODING\n   Purpose:  To specify\
    \ an alternate inline encoding for the property\n      value.\n   Format Definition:\
    \  This property parameter is defined by the\n      following notation:\n    \
    \   encodingparam      = \"ENCODING\" \"=\"\n                          ( \"8BIT\"\
    \n          ; \"8bit\" text encoding is defined in [RFC2045]\n               \
    \           / \"BASE64\"\n          ; \"BASE64\" binary encoding format is defined\
    \ in [RFC4648]\n                          )\n   Description:  This property parameter\
    \ identifies the inline encoding\n      used in a property value.  The default\
    \ encoding is \"8BIT\",\n      corresponding to a property value consisting of\
    \ text.  The\n      \"BASE64\" encoding type corresponds to a property value encoded\n\
    \      using the \"BASE64\" encoding defined in [RFC2045].\n      If the value\
    \ type parameter is \";VALUE=BINARY\", then the inline\n      encoding parameter\
    \ MUST be specified with the value\n      \";ENCODING=BASE64\".\n   Example:\n\
    \     ATTACH;FMTTYPE=text/plain;ENCODING=BASE64;VALUE=BINARY:TG9yZW\n      0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW\n\
    \      5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IG\n      xhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbm\n\
    \      ltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIG\n      xhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdW\n\
    \      F0LiBEdWlzIGF1dGUgaXJ1cmUgZG9sb3IgaW4gcmVwcmVoZW5kZXJpdCBpbi\n      B2b2x1cHRhdGUgdmVsaXQgZXNzZSBjaWxsdW0gZG9sb3JlIGV1IGZ1Z2lhdC\n\
    \      BudWxsYSBwYXJpYXR1ci4gRXhjZXB0ZXVyIHNpbnQgb2NjYWVjYXQgY3VwaW\n      RhdGF0IG5vbiBwcm9pZGVudCwgc3VudCBpbiBjdWxwYSBxdWkgb2ZmaWNpYS\n\
    \      BkZXNlcnVudCBtb2xsaXQgYW5pbSBpZCBlc3QgbGFib3J1bS4=\n"
- title: 3.2.8.  Format Type
  contents:
  - "3.2.8.  Format Type\n   Parameter Name:  FMTTYPE\n   Purpose:  To specify the\
    \ content type of a referenced object.\n   Format Definition:  This property parameter\
    \ is defined by the\n      following notation:\n       fmttypeparam = \"FMTTYPE\"\
    \ \"=\" type-name \"/\" subtype-name\n                      ; Where \"type-name\"\
    \ and \"subtype-name\" are\n                      ; defined in Section 4.2 of\
    \ [RFC4288].\n   Description:  This parameter can be specified on properties that\
    \ are\n      used to reference an object.  The parameter specifies the media\n\
    \      type [RFC4288] of the referenced object.  For example, on the\n      \"\
    ATTACH\" property, an FTP type URI value does not, by itself,\n      necessarily\
    \ convey the type of content associated with the\n      resource.  The parameter\
    \ value MUST be the text for either an\n      IANA-registered media type or a\
    \ non-standard media type.\n   Example:\n       ATTACH;FMTTYPE=application/msword:ftp://example.com/pub/docs/\n\
    \        agenda.doc\n"
- title: 3.2.9.  Free/Busy Time Type
  contents:
  - "3.2.9.  Free/Busy Time Type\n   Parameter Name:  FBTYPE\n   Purpose:  To specify\
    \ the free or busy time type.\n   Format Definition:  This property parameter\
    \ is defined by the\n      following notation:\n       fbtypeparam        = \"\
    FBTYPE\" \"=\" (\"FREE\" / \"BUSY\"\n                          / \"BUSY-UNAVAILABLE\"\
    \ / \"BUSY-TENTATIVE\"\n                          / x-name\n                ;\
    \ Some experimental iCalendar free/busy type.\n                          / iana-token)\n\
    \                ; Some other IANA-registered iCalendar free/busy type.\n   Description:\
    \  This parameter specifies the free or busy time type.\n      The value FREE\
    \ indicates that the time interval is free for\n      scheduling.  The value BUSY\
    \ indicates that the time interval is\n      busy because one or more events have\
    \ been scheduled for that\n      interval.  The value BUSY-UNAVAILABLE indicates\
    \ that the time\n      interval is busy and that the interval can not be scheduled.\
    \  The\n      value BUSY-TENTATIVE indicates that the time interval is busy\n\
    \      because one or more events have been tentatively scheduled for\n      that\
    \ interval.  If not specified on a property that allows this\n      parameter,\
    \ the default is BUSY.  Applications MUST treat x-name\n      and iana-token values\
    \ they don't recognize the same way as they\n      would the BUSY value.\n   Example:\
    \  The following is an example of this parameter on a\n      \"FREEBUSY\" property.\n\
    \       FREEBUSY;FBTYPE=BUSY:19980415T133000Z/19980415T170000Z\n"
- title: 3.2.10.  Language
  contents:
  - "3.2.10.  Language\n   Parameter Name:  LANGUAGE\n   Purpose:  To specify the\
    \ language for text values in a property or\n      property parameter.\n   Format\
    \ Definition:  This property parameter is defined by the\n      following notation:\n\
    \       languageparam = \"LANGUAGE\" \"=\" language\n       language = Language-Tag\n\
    \                  ; As defined in [RFC5646].\n   Description:  This parameter\
    \ identifies the language of the text in\n      the property value and of all\
    \ property parameter values of the\n      property.  The value of the \"LANGUAGE\"\
    \ property parameter is that\n      defined in [RFC5646].\n      For transport\
    \ in a MIME entity, the Content-Language header field\n      can be used to set\
    \ the default language for the entire body part.\n      Otherwise, no default\
    \ language is assumed.\n   Example:  The following are examples of this parameter\
    \ on the\n      \"SUMMARY\" and \"LOCATION\" properties:\n       SUMMARY;LANGUAGE=en-US:Company\
    \ Holiday Party\n       LOCATION;LANGUAGE=en:Germany\n       LOCATION;LANGUAGE=no:Tyskland\n"
- title: 3.2.11.  Group or List Membership
  contents:
  - "3.2.11.  Group or List Membership\n   Parameter Name:  MEMBER\n   Purpose:  To\
    \ specify the group or list membership of the calendar\n      user specified by\
    \ the property.\n   Format Definition:  This property parameter is defined by\
    \ the\n      following notation:\n       memberparam        = \"MEMBER\" \"=\"\
    \ DQUOTE cal-address DQUOTE\n                            *(\",\" DQUOTE cal-address\
    \ DQUOTE)\n   Description:  This parameter can be specified on properties with\
    \ a\n      CAL-ADDRESS value type.  The parameter identifies the groups or\n \
    \     list membership for the calendar user specified by the property.\n     \
    \ The parameter value is either a single calendar address in a\n      quoted-string\
    \ or a COMMA-separated list of calendar addresses,\n      each in a quoted-string.\
    \  The individual calendar address\n      parameter values MUST each be specified\
    \ in a quoted-string.\n   Example:\n       ATTENDEE;MEMBER=\"mailto:ietf-calsch@example.org\"\
    :mailto:\n        jsmith@example.com\n       ATTENDEE;MEMBER=\"mailto:projectA@example.com\"\
    ,\"mailto:pr\n        ojectB@example.com\":mailto:janedoe@example.com\n"
- title: 3.2.12.  Participation Status
  contents:
  - "3.2.12.  Participation Status\n   Parameter Name:  PARTSTAT\n   Purpose:  To\
    \ specify the participation status for the calendar user\n      specified by the\
    \ property.\n   Format Definition:  This property parameter is defined by the\n\
    \      following notation:\n       partstatparam    = \"PARTSTAT\" \"=\"\n   \
    \                      (partstat-event\n                        / partstat-todo\n\
    \                        / partstat-jour)\n       partstat-event   = (\"NEEDS-ACTION\"\
    \    ; Event needs action\n                        / \"ACCEPTED\"         ; Event\
    \ accepted\n                        / \"DECLINED\"         ; Event declined\n\
    \                        / \"TENTATIVE\"        ; Event tentatively\n        \
    \                                     ; accepted\n                        / \"\
    DELEGATED\"        ; Event delegated\n                        / x-name       \
    \      ; Experimental status\n                        / iana-token)        ; Other\
    \ IANA-registered\n                                             ; status\n   \
    \    ; These are the participation statuses for a \"VEVENT\".\n       ; Default\
    \ is NEEDS-ACTION.\n       partstat-todo    = (\"NEEDS-ACTION\"    ; To-do needs\
    \ action\n                        / \"ACCEPTED\"         ; To-do accepted\n  \
    \                      / \"DECLINED\"         ; To-do declined\n             \
    \           / \"TENTATIVE\"        ; To-do tentatively\n                     \
    \                        ; accepted\n                        / \"DELEGATED\" \
    \       ; To-do delegated\n                        / \"COMPLETED\"        ; To-do\
    \ completed\n                                             ; COMPLETED property\
    \ has\n                                             ; DATE-TIME completed\n  \
    \                      / \"IN-PROCESS\"       ; To-do in process of\n        \
    \                                     ; being completed\n                    \
    \    / x-name             ; Experimental status\n                        / iana-token)\
    \        ; Other IANA-registered\n                                           \
    \  ; status\n       ; These are the participation statuses for a \"VTODO\".\n\
    \       ; Default is NEEDS-ACTION.\n       partstat-jour    = (\"NEEDS-ACTION\"\
    \    ; Journal needs action\n                        / \"ACCEPTED\"         ;\
    \ Journal accepted\n                        / \"DECLINED\"         ; Journal declined\n\
    \                        / x-name             ; Experimental status\n        \
    \                / iana-token)        ; Other IANA-registered\n              \
    \                               ; status\n       ; These are the participation\
    \ statuses for a \"VJOURNAL\".\n       ; Default is NEEDS-ACTION.\n   Description:\
    \  This parameter can be specified on properties with a\n      CAL-ADDRESS value\
    \ type.  The parameter identifies the\n      participation status for the calendar\
    \ user specified by the\n      property value.  The parameter values differ depending\
    \ on whether\n      they are associated with a group-scheduled \"VEVENT\", \"\
    VTODO\", or\n      \"VJOURNAL\".  The values MUST match one of the values allowed\
    \ for\n      the given calendar component.  If not specified on a property that\n\
    \      allows this parameter, the default value is NEEDS-ACTION.\n      Applications\
    \ MUST treat x-name and iana-token values they don't\n      recognize the same\
    \ way as they would the NEEDS-ACTION value.\n   Example:\n       ATTENDEE;PARTSTAT=DECLINED:mailto:jsmith@example.com\n"
- title: 3.2.13.  Recurrence Identifier Range
  contents:
  - "3.2.13.  Recurrence Identifier Range\n   Parameter Name:  RANGE\n   Purpose:\
    \  To specify the effective range of recurrence instances from\n      the instance\
    \ specified by the recurrence identifier specified by\n      the property.\n \
    \  Format Definition:  This property parameter is defined by the\n      following\
    \ notation:\n       rangeparam = \"RANGE\" \"=\" \"THISANDFUTURE\"\n       ; To\
    \ specify the instance specified by the recurrence identifier\n       ; and all\
    \ subsequent recurrence instances.\n   Description:  This parameter can be specified\
    \ on a property that\n      specifies a recurrence identifier.  The parameter\
    \ specifies the\n      effective range of recurrence instances that is specified\
    \ by the\n      property.  The effective range is from the recurrence identifier\n\
    \      specified by the property.  If this parameter is not specified on\n   \
    \   an allowed property, then the default range is the single instance\n     \
    \ specified by the recurrence identifier value of the property.  The\n      parameter\
    \ value can only be \"THISANDFUTURE\" to indicate a range\n      defined by the\
    \ recurrence identifier and all subsequent instances.\n      The value \"THISANDPRIOR\"\
    \ is deprecated by this revision of\n      iCalendar and MUST NOT be generated\
    \ by applications.\n   Example:\n       RECURRENCE-ID;RANGE=THISANDFUTURE:19980401T133000Z\n"
- title: 3.2.14.  Alarm Trigger Relationship
  contents:
  - "3.2.14.  Alarm Trigger Relationship\n   Parameter Name:  RELATED\n   Purpose:\
    \  To specify the relationship of the alarm trigger with\n      respect to the\
    \ start or end of the calendar component.\n   Format Definition:  This property\
    \ parameter is defined by the\n      following notation:\n       trigrelparam\
    \       = \"RELATED\" \"=\"\n                           (\"START\"       ; Trigger\
    \ off of start\n                          / \"END\")        ; Trigger off of end\n\
    \   Description:  This parameter can be specified on properties that\n      specify\
    \ an alarm trigger with a \"DURATION\" value type.  The\n      parameter specifies\
    \ whether the alarm will trigger relative to the\n      start or end of the calendar\
    \ component.  The parameter value START\n      will set the alarm to trigger off\
    \ the start of the calendar\n      component; the parameter value END will set\
    \ the alarm to trigger\n      off the end of the calendar component.  If the parameter\
    \ is not\n      specified on an allowable property, then the default is START.\n\
    \   Example:\n       TRIGGER;RELATED=END:PT5M\n"
- title: 3.2.15.  Relationship Type
  contents:
  - "3.2.15.  Relationship Type\n   Parameter Name:  RELTYPE\n   Purpose:  To specify\
    \ the type of hierarchical relationship associated\n      with the calendar component\
    \ specified by the property.\n   Format Definition:  This property parameter is\
    \ defined by the\n      following notation:\n       reltypeparam       = \"RELTYPE\"\
    \ \"=\"\n                           (\"PARENT\"    ; Parent relationship - Default\n\
    \                          / \"CHILD\"     ; Child relationship\n            \
    \              / \"SIBLING\"   ; Sibling relationship\n                      \
    \    / iana-token  ; Some other IANA-registered\n                            \
    \            ; iCalendar relationship type\n                          / x-name)\
    \     ; A non-standard, experimental\n                                       \
    \ ; relationship type\n   Description:  This parameter can be specified on a property\
    \ that\n      references another related calendar.  The parameter specifies the\n\
    \      hierarchical relationship type of the calendar component\n      referenced\
    \ by the property.  The parameter value can be PARENT, to\n      indicate that\
    \ the referenced calendar component is a superior of\n      calendar component;\
    \ CHILD to indicate that the referenced calendar\n      component is a subordinate\
    \ of the calendar component; or SIBLING\n      to indicate that the referenced\
    \ calendar component is a peer of\n      the calendar component.  If this parameter\
    \ is not specified on an\n      allowable property, the default relationship type\
    \ is PARENT.\n      Applications MUST treat x-name and iana-token values they\
    \ don't\n      recognize the same way as they would the PARENT value.\n   Example:\n\
    \       RELATED-TO;RELTYPE=SIBLING:19960401-080045-4000F192713@\n        example.com\n"
- title: 3.2.16.  Participation Role
  contents:
  - "3.2.16.  Participation Role\n   Parameter Name:  ROLE\n   Purpose:  To specify\
    \ the participation role for the calendar user\n      specified by the property.\n\
    \   Format Definition:  This property parameter is defined by the\n      following\
    \ notation:\n       roleparam  = \"ROLE\" \"=\"\n                   (\"CHAIR\"\
    \             ; Indicates chair of the\n                                     \
    \   ; calendar entity\n                  / \"REQ-PARTICIPANT\"   ; Indicates a\
    \ participant whose\n                                        ; participation is\
    \ required\n                  / \"OPT-PARTICIPANT\"   ; Indicates a participant\
    \ whose\n                                        ; participation is optional\n\
    \                  / \"NON-PARTICIPANT\"   ; Indicates a participant who\n   \
    \                                     ; is copied for information\n          \
    \                              ; purposes only\n                  / x-name   \
    \           ; Experimental role\n                  / iana-token)         ; Other\
    \ IANA role\n       ; Default is REQ-PARTICIPANT\n   Description:  This parameter\
    \ can be specified on properties with a\n      CAL-ADDRESS value type.  The parameter\
    \ specifies the participation\n      role for the calendar user specified by the\
    \ property in the group\n      schedule calendar component.  If not specified\
    \ on a property that\n      allows this parameter, the default value is REQ-PARTICIPANT.\n\
    \      Applications MUST treat x-name and iana-token values they don't\n     \
    \ recognize the same way as they would the REQ-PARTICIPANT value.\n   Example:\n\
    \       ATTENDEE;ROLE=CHAIR:mailto:mrbig@example.com\n"
- title: 3.2.17.  RSVP Expectation
  contents:
  - "3.2.17.  RSVP Expectation\n   Parameter Name:  RSVP\n   Purpose:  To specify\
    \ whether there is an expectation of a favor of a\n      reply from the calendar\
    \ user specified by the property value.\n   Format Definition:  This property\
    \ parameter is defined by the\n      following notation:\n       rsvpparam = \"\
    RSVP\" \"=\" (\"TRUE\" / \"FALSE\")\n       ; Default is FALSE\n   Description:\
    \  This parameter can be specified on properties with a\n      CAL-ADDRESS value\
    \ type.  The parameter identifies the expectation\n      of a reply from the calendar\
    \ user specified by the property value.\n      This parameter is used by the \"\
    Organizer\" to request a\n      participation status reply from an \"Attendee\"\
    \ of a group-scheduled\n      event or to-do.  If not specified on a property\
    \ that allows this\n      parameter, the default value is FALSE.\n   Example:\n\
    \       ATTENDEE;RSVP=TRUE:mailto:jsmith@example.com\n"
- title: 3.2.18.  Sent By
  contents:
  - "3.2.18.  Sent By\n   Parameter Name:  SENT-BY\n   Purpose:  To specify the calendar\
    \ user that is acting on behalf of\n      the calendar user specified by the property.\n\
    \   Format Definition:  This property parameter is defined by the\n      following\
    \ notation:\n       sentbyparam        = \"SENT-BY\" \"=\" DQUOTE cal-address\
    \ DQUOTE\n   Description:  This parameter can be specified on properties with\
    \ a\n      CAL-ADDRESS value type.  The parameter specifies the calendar user\n\
    \      that is acting on behalf of the calendar user specified by the\n      property.\
    \  The parameter value MUST be a mailto URI as defined in\n      [RFC2368].  The\
    \ individual calendar address parameter values MUST\n      each be specified in\
    \ a quoted-string.\n   Example:\n       ORGANIZER;SENT-BY=\"mailto:sray@example.com\"\
    :mailto:\n        jsmith@example.com\n"
- title: 3.2.19.  Time Zone Identifier
  contents:
  - "3.2.19.  Time Zone Identifier\n   Parameter Name:  TZID\n   Purpose:  To specify\
    \ the identifier for the time zone definition for\n      a time component in the\
    \ property value.\n   Format Definition:  This property parameter is defined by\
    \ the\n      following notation:\n       tzidparam  = \"TZID\" \"=\" [tzidprefix]\
    \ paramtext\n       tzidprefix = \"/\"\n   Description:  This parameter MUST be\
    \ specified on the \"DTSTART\",\n      \"DTEND\", \"DUE\", \"EXDATE\", and \"\
    RDATE\" properties when either a\n      DATE-TIME or TIME value type is specified\
    \ and when the value is\n      neither a UTC or a \"floating\" time.  Refer to\
    \ the DATE-TIME or\n      TIME value type definition for a description of UTC\
    \ and \"floating\n      time\" formats.  This property parameter specifies a text\
    \ value\n      that uniquely identifies the \"VTIMEZONE\" calendar component to\
    \ be\n      used when evaluating the time portion of the property.  The value\n\
    \      of the \"TZID\" property parameter will be equal to the value of the\n\
    \      \"TZID\" property for the matching time zone definition.  An\n      individual\
    \ \"VTIMEZONE\" calendar component MUST be specified for\n      each unique \"\
    TZID\" parameter value specified in the iCalendar\n      object.\n      The parameter\
    \ MUST be specified on properties with a DATE-TIME\n      value if the DATE-TIME\
    \ is not either a UTC or a \"floating\" time.\n      Failure to include and follow\
    \ VTIMEZONE definitions in iCalendar\n      objects may lead to inconsistent understanding\
    \ of the local time\n      at any given location.\n      The presence of the SOLIDUS\
    \ character as a prefix, indicates that\n      this \"TZID\" represents a unique\
    \ ID in a globally defined time zone\n      registry (when such registry is defined).\n\
    \         Note: This document does not define a naming convention for\n      \
    \   time zone identifiers.  Implementers may want to use the naming\n        \
    \ conventions defined in existing time zone specifications such\n         as the\
    \ public-domain TZ database [TZDB].  The specification of\n         globally unique\
    \ time zone identifiers is not addressed by this\n         document and is left\
    \ for future study.\n      The following are examples of this property parameter:\n\
    \       DTSTART;TZID=America/New_York:19980119T020000\n       DTEND;TZID=America/New_York:19980119T030000\n\
    \      The \"TZID\" property parameter MUST NOT be applied to DATE\n      properties\
    \ and DATE-TIME or TIME properties whose time values are\n      specified in UTC.\n\
    \      The use of local time in a DATE-TIME or TIME value without the\n      \"\
    TZID\" property parameter is to be interpreted as floating time,\n      regardless\
    \ of the existence of \"VTIMEZONE\" calendar components in\n      the iCalendar\
    \ object.\n      For more information, see the sections on the value types DATE-\n\
    \      TIME and TIME.\n"
- title: 3.2.20.  Value Data Types
  contents:
  - "3.2.20.  Value Data Types\n   Parameter Name:  VALUE\n   Purpose:  To explicitly\
    \ specify the value type format for a property\n      value.\n   Format Definition:\
    \  This property parameter is defined by the\n      following notation:\n    \
    \   valuetypeparam = \"VALUE\" \"=\" valuetype\n       valuetype  = (\"BINARY\"\
    \n                  / \"BOOLEAN\"\n                  / \"CAL-ADDRESS\"\n     \
    \             / \"DATE\"\n                  / \"DATE-TIME\"\n                \
    \  / \"DURATION\"\n                  / \"FLOAT\"\n                  / \"INTEGER\"\
    \n                  / \"PERIOD\"\n                  / \"RECUR\"\n            \
    \      / \"TEXT\"\n                  / \"TIME\"\n                  / \"URI\"\n\
    \                  / \"UTC-OFFSET\"\n                  / x-name\n            \
    \      ; Some experimental iCalendar value type.\n                  / iana-token)\n\
    \                  ; Some other IANA-registered iCalendar value type.\n   Description:\
    \  This parameter specifies the value type and format of\n      the property value.\
    \  The property values MUST be of a single value\n      type.  For example, a\
    \ \"RDATE\" property cannot have a combination\n      of DATE-TIME and TIME value\
    \ types.\n      If the property's value is the default value type, then this\n\
    \      parameter need not be specified.  However, if the property's\n      default\
    \ value type is overridden by some other allowable value\n      type, then this\
    \ parameter MUST be specified.\n      Applications MUST preserve the value data\
    \ for x-name and iana-\n      token values that they don't recognize without attempting\
    \ to\n      interpret or parse the value data.\n"
- title: 3.3.  Property Value Data Types
  contents:
  - "3.3.  Property Value Data Types\n   The properties in an iCalendar object are\
    \ strongly typed.  The\n   definition of each property restricts the value to\
    \ be one of the\n   value data types, or simply value types, defined in this section.\n\
    \   The value type for a property will either be specified implicitly as\n   the\
    \ default value type or will be explicitly specified with the\n   \"VALUE\" parameter.\
    \  If the value type of a property is one of the\n   alternate valid types, then\
    \ it MUST be explicitly specified with the\n   \"VALUE\" parameter.\n"
- title: 3.3.1.  Binary
  contents:
  - "3.3.1.  Binary\n   Value Name:  BINARY\n   Purpose:  This value type is used\
    \ to identify properties that contain\n      a character encoding of inline binary\
    \ data.  For example, an\n      inline attachment of a document might be included\
    \ in an iCalendar\n      object.\n   Format Definition:  This value type is defined\
    \ by the following\n      notation:\n       binary     = *(4b-char) [b-end]\n\
    \       ; A \"BASE64\" encoded character string, as defined by [RFC4648].\n  \
    \     b-end      = (2b-char \"==\") / (3b-char \"=\")\n       b-char = ALPHA /\
    \ DIGIT / \"+\" / \"/\"\n   Description:  Property values with this value type\
    \ MUST also include\n      the inline encoding parameter sequence of \";ENCODING=BASE64\"\
    .\n      That is, all inline binary data MUST first be character encoded\n   \
    \   using the \"BASE64\" encoding method defined in [RFC2045].  No\n      additional\
    \ content value encoding (i.e., BACKSLASH character\n      encoding, see Section\
    \ 3.3.11) is defined for this value type.\n   Example:  The following is an example\
    \ of a \"BASE64\" encoded binary\n      value data:\n     ATTACH;FMTTYPE=image/vnd.microsoft.icon;ENCODING=BASE64;VALUE\n\
    \      =BINARY:AAABAAEAEBAQAAEABAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAA\n      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgIAAAICAgADAwMAA////AAAA\n\
    \      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n      AAAAAAAAAAAAAAAAAAAAAAMwAAAAAAABNEMQAAAAAAAkQgAAAAAAJEREQgAA\n\
    \      ACECQ0QgEgAAQxQzM0E0AABERCRCREQAADRDJEJEQwAAAhA0QwEQAAAAAERE\n      AAAAAAAAREQAAAAAAAAkQgAAAAAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\
    \      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n      AAAAAAAAAAAA\n"
- title: 3.3.2.  Boolean
  contents:
  - "3.3.2.  Boolean\n   Value Name:  BOOLEAN\n   Purpose:  This value type is used\
    \ to identify properties that contain\n      either a \"TRUE\" or \"FALSE\" Boolean\
    \ value.\n   Format Definition:  This value type is defined by the following\n\
    \      notation:\n       boolean    = \"TRUE\" / \"FALSE\"\n   Description:  These\
    \ values are case-insensitive text.  No additional\n      content value encoding\
    \ (i.e., BACKSLASH character encoding, see\n      Section 3.3.11) is defined for\
    \ this value type.\n   Example:  The following is an example of a hypothetical\
    \ property that\n      has a BOOLEAN value type:\n       TRUE\n"
- title: 3.3.3.  Calendar User Address
  contents:
  - "3.3.3.  Calendar User Address\n   Value Name:  CAL-ADDRESS\n   Purpose:  This\
    \ value type is used to identify properties that contain\n      a calendar user\
    \ address.\n   Format Definition:  This value type is defined by the following\n\
    \      notation:\n       cal-address        = uri\n   Description:  The value\
    \ is a URI as defined by [RFC3986] or any other\n      IANA-registered form for\
    \ a URI.  When used to address an Internet\n      email transport address for\
    \ a calendar user, the value MUST be a\n      mailto URI, as defined by [RFC2368].\
    \  No additional content value\n      encoding (i.e., BACKSLASH character encoding,\
    \ see Section 3.3.11)\n      is defined for this value type.\n   Example:\n  \
    \  mailto:jane_doe@example.com\n"
- title: 3.3.4.  Date
  contents:
  - "3.3.4.  Date\n   Value Name:  DATE\n   Purpose:  This value type is used to identify\
    \ values that contain a\n      calendar date.\n   Format Definition:  This value\
    \ type is defined by the following\n      notation:\n       date             \
    \  = date-value\n       date-value         = date-fullyear date-month date-mday\n\
    \       date-fullyear      = 4DIGIT\n       date-month         = 2DIGIT      \
    \  ;01-12\n       date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31\n\
    \                                          ;based on month/year\n   Description:\
    \  If the property permits, multiple \"date\" values are\n      specified as a\
    \ COMMA-separated list of values.  The format for the\n      value type is based\
    \ on the [ISO.8601.2004] complete\n      representation, basic format for a calendar\
    \ date.  The textual\n      format specifies a four-digit year, two-digit month,\
    \ and two-digit\n      day of the month.  There are no separator characters between\
    \ the\n      year, month, and day component text.\n      No additional content\
    \ value encoding (i.e., BACKSLASH character\n      encoding, see Section 3.3.11)\
    \ is defined for this value type.\n   Example:  The following represents July\
    \ 14, 1997:\n       19970714\n"
- title: 3.3.5.  Date-Time
  contents:
  - "3.3.5.  Date-Time\n   Value Name:  DATE-TIME\n   Purpose:  This value type is\
    \ used to identify values that specify a\n      precise calendar date and time\
    \ of day.\n   Format Definition:  This value type is defined by the following\n\
    \      notation:\n       date-time  = date \"T\" time ;As specified in the DATE\
    \ and TIME\n                                  ;value definitions\n   Description:\
    \  If the property permits, multiple \"DATE-TIME\" values\n      are specified\
    \ as a COMMA-separated list of values.  No additional\n      content value encoding\
    \ (i.e., BACKSLASH character encoding, see\n      Section 3.3.11) is defined for\
    \ this value type.\n      The \"DATE-TIME\" value type is used to identify values\
    \ that contain\n      a precise calendar date and time of day.  The format is\
    \ based on\n      the [ISO.8601.2004] complete representation, basic format for\
    \ a\n      calendar date and time of day.  The text format is a concatenation\n\
    \      of the \"date\", followed by the LATIN CAPITAL LETTER T character,\n  \
    \    the time designator, followed by the \"time\" format.\n      The \"DATE-TIME\"\
    \ value type expresses time values in three forms:\n      The form of date and\
    \ time with UTC offset MUST NOT be used.  For\n      example, the following is\
    \ not valid for a DATE-TIME value:\n       19980119T230000-0800       ;Invalid\
    \ time format\n      FORM #1: DATE WITH LOCAL TIME\n      The date with local\
    \ time form is simply a DATE-TIME value that\n      does not contain the UTC designator\
    \ nor does it reference a time\n      zone.  For example, the following represents\
    \ January 18, 1998, at\n      11 PM:\n       19980118T230000\n      DATE-TIME\
    \ values of this type are said to be \"floating\" and are\n      not bound to\
    \ any time zone in particular.  They are used to\n      represent the same hour,\
    \ minute, and second value regardless of\n      which time zone is currently being\
    \ observed.  For example, an\n      event can be defined that indicates that an\
    \ individual will be\n      busy from 11:00 AM to 1:00 PM every day, no matter\
    \ which time zone\n      the person is in.  In these cases, a local time can be\
    \ specified.\n      The recipient of an iCalendar object with a property value\n\
    \      consisting of a local time, without any relative time zone\n      information,\
    \ SHOULD interpret the value as being fixed to whatever\n      time zone the \"\
    ATTENDEE\" is in at any given moment.  This means\n      that two \"Attendees\"\
    , in different time zones, receiving the same\n      event definition as a floating\
    \ time, may be participating in the\n      event at different actual times.  Floating\
    \ time SHOULD only be\n      used where that is the reasonable behavior.\n   \
    \   In most cases, a fixed time is desired.  To properly communicate a\n     \
    \ fixed time in a property value, either UTC time or local time with\n      time\
    \ zone reference MUST be specified.\n      The use of local time in a DATE-TIME\
    \ value without the \"TZID\"\n      property parameter is to be interpreted as\
    \ floating time,\n      regardless of the existence of \"VTIMEZONE\" calendar\
    \ components in\n      the iCalendar object.\n      FORM #2: DATE WITH UTC TIME\n\
    \      The date with UTC time, or absolute time, is identified by a LATIN\n  \
    \    CAPITAL LETTER Z suffix character, the UTC designator, appended to\n    \
    \  the time value.  For example, the following represents January 19,\n      1998,\
    \ at 0700 UTC:\n       19980119T070000Z\n      The \"TZID\" property parameter\
    \ MUST NOT be applied to DATE-TIME\n      properties whose time values are specified\
    \ in UTC.\n      FORM #3: DATE WITH LOCAL TIME AND TIME ZONE REFERENCE\n     \
    \ The date and local time with reference to time zone information is\n      identified\
    \ by the use the \"TZID\" property parameter to reference\n      the appropriate\
    \ time zone definition.  \"TZID\" is discussed in\n      detail in Section 3.2.19.\
    \  For example, the following represents\n      2:00 A.M. in New York on January\
    \ 19, 1998:\n       TZID=America/New_York:19980119T020000\n      If, based on\
    \ the definition of the referenced time zone, the local\n      time described\
    \ occurs more than once (when changing from daylight\n      to standard time),\
    \ the DATE-TIME value refers to the first\n      occurrence of the referenced\
    \ time.  Thus, TZID=America/\n      New_York:20071104T013000 indicates November\
    \ 4, 2007 at 1:30 A.M.\n      EDT (UTC-04:00).  If the local time described does\
    \ not occur (when\n      changing from standard to daylight time), the DATE-TIME\
    \ value is\n      interpreted using the UTC offset before the gap in local times.\n\
    \      Thus, TZID=America/New_York:20070311T023000 indicates March 11,\n     \
    \ 2007 at 3:30 A.M. EDT (UTC-04:00), one hour after 1:30 A.M. EST\n      (UTC-05:00).\n\
    \      A time value MUST only specify the second 60 when specifying a\n      positive\
    \ leap second.  For example:\n       19970630T235960Z\n      Implementations that\
    \ do not support leap seconds SHOULD interpret\n      the second 60 as equivalent\
    \ to the second 59.\n   Example:  The following represents July 14, 1997, at 1:30\
    \ PM in New\n      York City in each of the three time formats, using the \"DTSTART\"\
    \n      property.\n       DTSTART:19970714T133000                   ; Local time\n\
    \       DTSTART:19970714T173000Z                  ; UTC time\n       DTSTART;TZID=America/New_York:19970714T133000\n\
    \                                                 ; Local time and time\n    \
    \                                             ; zone reference\n"
- title: 3.3.6.  Duration
  contents:
  - "3.3.6.  Duration\n   Value Name:  DURATION\n   Purpose:  This value type is used\
    \ to identify properties that contain\n      a duration of time.\n   Format Definition:\
    \  This value type is defined by the following\n      notation:\n       dur-value\
    \  = ([\"+\"] / \"-\") \"P\" (dur-date / dur-time / dur-week)\n       dur-date\
    \   = dur-day [dur-time]\n       dur-time   = \"T\" (dur-hour / dur-minute / dur-second)\n\
    \       dur-week   = 1*DIGIT \"W\"\n       dur-hour   = 1*DIGIT \"H\" [dur-minute]\n\
    \       dur-minute = 1*DIGIT \"M\" [dur-second]\n       dur-second = 1*DIGIT \"\
    S\"\n       dur-day    = 1*DIGIT \"D\"\n   Description:  If the property permits,\
    \ multiple \"duration\" values are\n      specified by a COMMA-separated list\
    \ of values.  The format is\n      based on the [ISO.8601.2004] complete representation\
    \ basic format\n      with designators for the duration of time.  The format can\n\
    \      represent nominal durations (weeks and days) and accurate\n      durations\
    \ (hours, minutes, and seconds).  Note that unlike\n      [ISO.8601.2004], this\
    \ value type doesn't support the \"Y\" and \"M\"\n      designators to specify\
    \ durations in terms of years and months.\n      The duration of a week or a day\
    \ depends on its position in the\n      calendar.  In the case of discontinuities\
    \ in the time scale, such\n      as the change from standard time to daylight\
    \ time and back, the\n      computation of the exact duration requires the subtraction\
    \ or\n      addition of the change of duration of the discontinuity.  Leap\n \
    \     seconds MUST NOT be considered when computing an exact duration.\n     \
    \ When computing an exact duration, the greatest order time\n      components\
    \ MUST be added first, that is, the number of days MUST\n      be added first,\
    \ followed by the number of hours, number of\n      minutes, and number of seconds.\n\
    \      Negative durations are typically used to schedule an alarm to\n      trigger\
    \ before an associated time (see Section 3.8.6.3).\n      No additional content\
    \ value encoding (i.e., BACKSLASH character\n      encoding, see Section 3.3.11)\
    \ are defined for this value type.\n   Example:  A duration of 15 days, 5 hours,\
    \ and 20 seconds would be:\n       P15DT5H0M20S\n      A duration of 7 weeks would\
    \ be:\n       P7W\n"
- title: 3.3.7.  Float
  contents:
  - "3.3.7.  Float\n   Value Name:  FLOAT\n   Purpose:  This value type is used to\
    \ identify properties that contain\n      a real-number value.\n   Format Definition:\
    \  This value type is defined by the following\n      notation:\n       float\
    \      = ([\"+\"] / \"-\") 1*DIGIT [\".\" 1*DIGIT]\n   Description:  If the property\
    \ permits, multiple \"float\" values are\n      specified by a COMMA-separated\
    \ list of values.\n      No additional content value encoding (i.e., BACKSLASH\
    \ character\n      encoding, see Section 3.3.11) is defined for this value type.\n\
    \   Example:\n       1000000.0000001\n       1.333\n       -3.14\n"
- title: 3.3.8.  Integer
  contents:
  - "3.3.8.  Integer\n   Value Name:  INTEGER\n   Purpose:  This value type is used\
    \ to identify properties that contain\n      a signed integer value.\n   Format\
    \ Definition:  This value type is defined by the following\n      notation:\n\
    \       integer    = ([\"+\"] / \"-\") 1*DIGIT\n   Description:  If the property\
    \ permits, multiple \"integer\" values are\n      specified by a COMMA-separated\
    \ list of values.  The valid range\n      for \"integer\" is -2147483648 to 2147483647.\
    \  If the sign is not\n      specified, then the value is assumed to be positive.\n\
    \      No additional content value encoding (i.e., BACKSLASH character\n     \
    \ encoding, see Section 3.3.11) is defined for this value type.\n   Example:\n\
    \       1234567890\n       -1234567890\n       +1234567890\n       432109876\n"
- title: 3.3.9.  Period of Time
  contents:
  - "3.3.9.  Period of Time\n   Value Name:  PERIOD\n   Purpose:  This value type\
    \ is used to identify values that contain a\n      precise period of time.\n \
    \  Format Definition:  This value type is defined by the following\n      notation:\n\
    \       period     = period-explicit / period-start\n       period-explicit =\
    \ date-time \"/\" date-time\n       ; [ISO.8601.2004] complete representation\
    \ basic format for a\n       ; period of time consisting of a start and end. \
    \ The start MUST\n       ; be before the end.\n       period-start = date-time\
    \ \"/\" dur-value\n       ; [ISO.8601.2004] complete representation basic format\
    \ for a\n       ; period of time consisting of a start and positive duration\n\
    \       ; of time.\n   Description:  If the property permits, multiple \"period\"\
    \ values are\n      specified by a COMMA-separated list of values.  There are\
    \ two\n      forms of a period of time.  First, a period of time is identified\n\
    \      by its start and its end.  This format is based on the\n      [ISO.8601.2004]\
    \ complete representation, basic format for \"DATE-\n      TIME\" start of the\
    \ period, followed by a SOLIDUS character\n      followed by the \"DATE-TIME\"\
    \ of the end of the period.  The start\n      of the period MUST be before the\
    \ end of the period.  Second, a\n      period of time can also be defined by a\
    \ start and a positive\n      duration of time.  The format is based on the [ISO.8601.2004]\n\
    \      complete representation, basic format for the \"DATE-TIME\" start of\n\
    \      the period, followed by a SOLIDUS character, followed by the\n      [ISO.8601.2004]\
    \ basic format for \"DURATION\" of the period.\n   Example:  The period starting\
    \ at 18:00:00 UTC, on January 1, 1997 and\n      ending at 07:00:00 UTC on January\
    \ 2, 1997 would be:\n       19970101T180000Z/19970102T070000Z\n      The period\
    \ start at 18:00:00 on January 1, 1997 and lasting 5\n      hours and 30 minutes\
    \ would be:\n       19970101T180000Z/PT5H30M\n      No additional content value\
    \ encoding (i.e., BACKSLASH character\n      encoding, see Section 3.3.11) is\
    \ defined for this value type.\n"
- title: 3.3.10.  Recurrence Rule
  contents:
  - "3.3.10.  Recurrence Rule\n   Value Name:  RECUR\n   Purpose:  This value type\
    \ is used to identify properties that contain\n      a recurrence rule specification.\n\
    \   Format Definition:  This value type is defined by the following\n      notation:\n\
    \       recur           = recur-rule-part *( \";\" recur-rule-part )\n       \
    \                ;\n                       ; The rule parts are not ordered in\
    \ any\n                       ; particular sequence.\n                       ;\n\
    \                       ; The FREQ rule part is REQUIRED,\n                  \
    \     ; but MUST NOT occur more than once.\n                       ;\n       \
    \                ; The UNTIL or COUNT rule parts are OPTIONAL,\n             \
    \          ; but they MUST NOT occur in the same 'recur'.\n                  \
    \     ;\n                       ; The other rule parts are OPTIONAL,\n       \
    \                ; but MUST NOT occur more than once.\n       recur-rule-part\
    \ = ( \"FREQ\" \"=\" freq )\n                       / ( \"UNTIL\" \"=\" enddate\
    \ )\n                       / ( \"COUNT\" \"=\" 1*DIGIT )\n                  \
    \     / ( \"INTERVAL\" \"=\" 1*DIGIT )\n                       / ( \"BYSECOND\"\
    \ \"=\" byseclist )\n                       / ( \"BYMINUTE\" \"=\" byminlist )\n\
    \                       / ( \"BYHOUR\" \"=\" byhrlist )\n                    \
    \   / ( \"BYDAY\" \"=\" bywdaylist )\n                       / ( \"BYMONTHDAY\"\
    \ \"=\" bymodaylist )\n                       / ( \"BYYEARDAY\" \"=\" byyrdaylist\
    \ )\n                       / ( \"BYWEEKNO\" \"=\" bywknolist )\n            \
    \           / ( \"BYMONTH\" \"=\" bymolist )\n                       / ( \"BYSETPOS\"\
    \ \"=\" bysplist )\n                       / ( \"WKST\" \"=\" weekday )\n    \
    \   freq        = \"SECONDLY\" / \"MINUTELY\" / \"HOURLY\" / \"DAILY\"\n     \
    \              / \"WEEKLY\" / \"MONTHLY\" / \"YEARLY\"\n       enddate     = date\
    \ / date-time\n       byseclist   = ( seconds *(\",\" seconds) )\n       seconds\
    \     = 1*2DIGIT       ;0 to 60\n       byminlist   = ( minutes *(\",\" minutes)\
    \ )\n       minutes     = 1*2DIGIT       ;0 to 59\n       byhrlist    = ( hour\
    \ *(\",\" hour) )\n       hour        = 1*2DIGIT       ;0 to 23\n       bywdaylist\
    \  = ( weekdaynum *(\",\" weekdaynum) )\n       weekdaynum  = [[plus / minus]\
    \ ordwk] weekday\n       plus        = \"+\"\n       minus       = \"-\"\n   \
    \    ordwk       = 1*2DIGIT       ;1 to 53\n       weekday     = \"SU\" / \"MO\"\
    \ / \"TU\" / \"WE\" / \"TH\" / \"FR\" / \"SA\"\n       ;Corresponding to SUNDAY,\
    \ MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n       ;FRIDAY, and SATURDAY days of\
    \ the week.\n       bymodaylist = ( monthdaynum *(\",\" monthdaynum) )\n     \
    \  monthdaynum = [plus / minus] ordmoday\n       ordmoday    = 1*2DIGIT      \
    \ ;1 to 31\n       byyrdaylist = ( yeardaynum *(\",\" yeardaynum) )\n       yeardaynum\
    \  = [plus / minus] ordyrday\n       ordyrday    = 1*3DIGIT      ;1 to 366\n \
    \      bywknolist  = ( weeknum *(\",\" weeknum) )\n       weeknum     = [plus\
    \ / minus] ordwk\n       bymolist    = ( monthnum *(\",\" monthnum) )\n      \
    \ monthnum    = 1*2DIGIT       ;1 to 12\n       bysplist    = ( setposday *(\"\
    ,\" setposday) )\n       setposday   = yeardaynum\n   Description:  This value\
    \ type is a structured value consisting of a\n      list of one or more recurrence\
    \ grammar parts.  Each rule part is\n      defined by a NAME=VALUE pair.  The\
    \ rule parts are separated from\n      each other by the SEMICOLON character.\
    \  The rule parts are not\n      ordered in any particular sequence.  Individual\
    \ rule parts MUST\n      only be specified once.  Compliant applications MUST\
    \ accept rule\n      parts ordered in any sequence, but to ensure backward\n \
    \     compatibility with applications that pre-date this revision of\n      iCalendar\
    \ the FREQ rule part MUST be the first rule part specified\n      in a RECUR value.\n\
    \      The FREQ rule part identifies the type of recurrence rule.  This\n    \
    \  rule part MUST be specified in the recurrence rule.  Valid values\n      include\
    \ SECONDLY, to specify repeating events based on an interval\n      of a second\
    \ or more; MINUTELY, to specify repeating events based\n      on an interval of\
    \ a minute or more; HOURLY, to specify repeating\n      events based on an interval\
    \ of an hour or more; DAILY, to specify\n      repeating events based on an interval\
    \ of a day or more; WEEKLY, to\n      specify repeating events based on an interval\
    \ of a week or more;\n      MONTHLY, to specify repeating events based on an interval\
    \ of a\n      month or more; and YEARLY, to specify repeating events based on\
    \ an\n      interval of a year or more.\n      The INTERVAL rule part contains\
    \ a positive integer representing at\n      which intervals the recurrence rule\
    \ repeats.  The default value is\n      \"1\", meaning every second for a SECONDLY\
    \ rule, every minute for a\n      MINUTELY rule, every hour for an HOURLY rule,\
    \ every day for a\n      DAILY rule, every week for a WEEKLY rule, every month\
    \ for a\n      MONTHLY rule, and every year for a YEARLY rule.  For example,\n\
    \      within a DAILY rule, a value of \"8\" means every eight days.\n      The\
    \ UNTIL rule part defines a DATE or DATE-TIME value that bounds\n      the recurrence\
    \ rule in an inclusive manner.  If the value\n      specified by UNTIL is synchronized\
    \ with the specified recurrence,\n      this DATE or DATE-TIME becomes the last\
    \ instance of the\n      recurrence.  The value of the UNTIL rule part MUST have\
    \ the same\n      value type as the \"DTSTART\" property.  Furthermore, if the\n\
    \      \"DTSTART\" property is specified as a date with local time, then\n   \
    \   the UNTIL rule part MUST also be specified as a date with local\n      time.\
    \  If the \"DTSTART\" property is specified as a date with UTC\n      time or\
    \ a date with local time and time zone reference, then the\n      UNTIL rule part\
    \ MUST be specified as a date with UTC time.  In the\n      case of the \"STANDARD\"\
    \ and \"DAYLIGHT\" sub-components the UNTIL\n      rule part MUST always be specified\
    \ as a date with UTC time.  If\n      specified as a DATE-TIME value, then it\
    \ MUST be specified in a UTC\n      time format.  If not present, and the COUNT\
    \ rule part is also not\n      present, the \"RRULE\" is considered to repeat\
    \ forever.\n      The COUNT rule part defines the number of occurrences at which\
    \ to\n      range-bound the recurrence.  The \"DTSTART\" property value always\n\
    \      counts as the first occurrence.\n      The BYSECOND rule part specifies\
    \ a COMMA-separated list of seconds\n      within a minute.  Valid values are\
    \ 0 to 60.  The BYMINUTE rule\n      part specifies a COMMA-separated list of\
    \ minutes within an hour.\n      Valid values are 0 to 59.  The BYHOUR rule part\
    \ specifies a COMMA-\n      separated list of hours of the day.  Valid values\
    \ are 0 to 23.\n      The BYSECOND, BYMINUTE and BYHOUR rule parts MUST NOT be\
    \ specified\n      when the associated \"DTSTART\" property has a DATE value type.\n\
    \      These rule parts MUST be ignored in RECUR value that violate the\n    \
    \  above requirement (e.g., generated by applications that pre-date\n      this\
    \ revision of iCalendar).\n      The BYDAY rule part specifies a COMMA-separated\
    \ list of days of\n      the week; SU indicates Sunday; MO indicates Monday; TU\
    \ indicates\n      Tuesday; WE indicates Wednesday; TH indicates Thursday; FR\n\
    \      indicates Friday; and SA indicates Saturday.\n      Each BYDAY value can\
    \ also be preceded by a positive (+n) or\n      negative (-n) integer.  If present,\
    \ this indicates the nth\n      occurrence of a specific day within the MONTHLY\
    \ or YEARLY \"RRULE\".\n      For example, within a MONTHLY rule, +1MO (or simply\
    \ 1MO)\n      represents the first Monday within the month, whereas -1MO\n   \
    \   represents the last Monday of the month.  The numeric value in a\n      BYDAY\
    \ rule part with the FREQ rule part set to YEARLY corresponds\n      to an offset\
    \ within the month when the BYMONTH rule part is\n      present, and corresponds\
    \ to an offset within the year when the\n      BYWEEKNO or BYMONTH rule parts\
    \ are present.  If an integer\n      modifier is not present, it means all days\
    \ of this type within the\n      specified frequency.  For example, within a MONTHLY\
    \ rule, MO\n      represents all Mondays within the month.  The BYDAY rule part\
    \ MUST\n      NOT be specified with a numeric value when the FREQ rule part is\n\
    \      not set to MONTHLY or YEARLY.  Furthermore, the BYDAY rule part\n     \
    \ MUST NOT be specified with a numeric value with the FREQ rule part\n      set\
    \ to YEARLY when the BYWEEKNO rule part is specified.\n      The BYMONTHDAY rule\
    \ part specifies a COMMA-separated list of days\n      of the month.  Valid values\
    \ are 1 to 31 or -31 to -1.  For\n      example, -10 represents the tenth to the\
    \ last day of the month.\n      The BYMONTHDAY rule part MUST NOT be specified\
    \ when the FREQ rule\n      part is set to WEEKLY.\n      The BYYEARDAY rule part\
    \ specifies a COMMA-separated list of days\n      of the year.  Valid values are\
    \ 1 to 366 or -366 to -1.  For\n      example, -1 represents the last day of the\
    \ year (December 31st)\n      and -306 represents the 306th to the last day of\
    \ the year (March\n      1st).  The BYYEARDAY rule part MUST NOT be specified\
    \ when the FREQ\n      rule part is set to DAILY, WEEKLY, or MONTHLY.\n      The\
    \ BYWEEKNO rule part specifies a COMMA-separated list of\n      ordinals specifying\
    \ weeks of the year.  Valid values are 1 to 53\n      or -53 to -1.  This corresponds\
    \ to weeks according to week\n      numbering as defined in [ISO.8601.2004]. \
    \ A week is defined as a\n      seven day period, starting on the day of the week\
    \ defined to be\n      the week start (see WKST).  Week number one of the calendar\
    \ year\n      is the first week that contains at least four (4) days in that\n\
    \      calendar year.  This rule part MUST NOT be used when the FREQ rule\n  \
    \    part is set to anything other than YEARLY.  For example, 3\n      represents\
    \ the third week of the year.\n         Note: Assuming a Monday week start, week\
    \ 53 can only occur when\n         Thursday is January 1 or if it is a leap year\
    \ and Wednesday is\n         January 1.\n      The BYMONTH rule part specifies\
    \ a COMMA-separated list of months\n      of the year.  Valid values are 1 to\
    \ 12.\n      The WKST rule part specifies the day on which the workweek starts.\n\
    \      Valid values are MO, TU, WE, TH, FR, SA, and SU.  This is\n      significant\
    \ when a WEEKLY \"RRULE\" has an interval greater than 1,\n      and a BYDAY rule\
    \ part is specified.  This is also significant when\n      in a YEARLY \"RRULE\"\
    \ when a BYWEEKNO rule part is specified.  The\n      default value is MO.\n \
    \     The BYSETPOS rule part specifies a COMMA-separated list of values\n    \
    \  that corresponds to the nth occurrence within the set of\n      recurrence\
    \ instances specified by the rule.  BYSETPOS operates on\n      a set of recurrence\
    \ instances in one interval of the recurrence\n      rule.  For example, in a\
    \ WEEKLY rule, the interval would be one\n      week A set of recurrence instances\
    \ starts at the beginning of the\n      interval defined by the FREQ rule part.\
    \  Valid values are 1 to 366\n      or -366 to -1.  It MUST only be used in conjunction\
    \ with another\n      BYxxx rule part.  For example \"the last work day of the\
    \ month\"\n      could be represented as:\n       FREQ=MONTHLY;BYDAY=MO,TU,WE,TH,FR;BYSETPOS=-1\n\
    \      Each BYSETPOS value can include a positive (+n) or negative (-n)\n    \
    \  integer.  If present, this indicates the nth occurrence of the\n      specific\
    \ occurrence within the set of occurrences specified by the\n      rule.\n   \
    \   Recurrence rules may generate recurrence instances with an invalid\n     \
    \ date (e.g., February 30) or nonexistent local time (e.g., 1:30 AM\n      on\
    \ a day where the local time is moved forward by an hour at 1:00\n      AM). \
    \ Such recurrence instances MUST be ignored and MUST NOT be\n      counted as\
    \ part of the recurrence set.\n      Information, not contained in the rule, necessary\
    \ to determine the\n      various recurrence instance start time and dates are\
    \ derived from\n      the Start Time (\"DTSTART\") component attribute.  For example,\n\
    \      \"FREQ=YEARLY;BYMONTH=1\" doesn't specify a specific day within the\n \
    \     month or a time.  This information would be the same as what is\n      specified\
    \ for \"DTSTART\".\n      BYxxx rule parts modify the recurrence in some manner.\
    \  BYxxx rule\n      parts for a period of time that is the same or greater than\
    \ the\n      frequency generally reduce or limit the number of occurrences of\n\
    \      the recurrence generated.  For example, \"FREQ=DAILY;BYMONTH=1\"\n    \
    \  reduces the number of recurrence instances from all days (if\n      BYMONTH\
    \ rule part is not present) to all days in January.  BYxxx\n      rule parts for\
    \ a period of time less than the frequency generally\n      increase or expand\
    \ the number of occurrences of the recurrence.\n      For example, \"FREQ=YEARLY;BYMONTH=1,2\"\
    \ increases the number of\n      days within the yearly recurrence set from 1\
    \ (if BYMONTH rule part\n      is not present) to 2.\n      If multiple BYxxx\
    \ rule parts are specified, then after evaluating\n      the specified FREQ and\
    \ INTERVAL rule parts, the BYxxx rule parts\n      are applied to the current\
    \ set of evaluated occurrences in the\n      following order: BYMONTH, BYWEEKNO,\
    \ BYYEARDAY, BYMONTHDAY, BYDAY,\n      BYHOUR, BYMINUTE, BYSECOND and BYSETPOS;\
    \ then COUNT and UNTIL are\n      evaluated.\n      The table below summarizes\
    \ the dependency of BYxxx rule part\n      expand or limit behavior on the FREQ\
    \ rule part value.\n      The term \"N/A\" means that the corresponding BYxxx\
    \ rule part MUST\n      NOT be used with the corresponding FREQ value.\n     \
    \ BYDAY has some special behavior depending on the FREQ value and\n      this\
    \ is described in separate notes below the table.\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |          |SECONDLY|MINUTELY|HOURLY |DAILY  |WEEKLY|MONTHLY|YEARLY|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYMONTH   |Limit   |Limit   |Limit  |Limit  |Limit |Limit  |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYWEEKNO  |N/A     |N/A     |N/A    |N/A    |N/A   |N/A    |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYYEARDAY |Limit   |Limit   |Limit  |N/A    |N/A   |N/A    |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYMONTHDAY|Limit   |Limit   |Limit  |Limit  |N/A   |Expand |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYDAY     |Limit   |Limit   |Limit  |Limit  |Expand|Note 1 |Note 2|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYHOUR    |Limit   |Limit   |Limit  |Expand |Expand|Expand |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYMINUTE  |Limit   |Limit   |Expand |Expand |Expand|Expand |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYSECOND  |Limit   |Expand  |Expand |Expand |Expand|Expand |Expand|\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \   |BYSETPOS  |Limit   |Limit   |Limit  |Limit  |Limit |Limit  |Limit |\n   +----------+--------+--------+-------+-------+------+-------+------+\n\
    \      Note 1:  Limit if BYMONTHDAY is present; otherwise, special expand\n  \
    \             for MONTHLY.\n      Note 2:  Limit if BYYEARDAY or BYMONTHDAY is\
    \ present; otherwise,\n               special expand for WEEKLY if BYWEEKNO present;\
    \ otherwise,\n               special expand for MONTHLY if BYMONTH present; otherwise,\n\
    \               special expand for YEARLY.\n      Here is an example of evaluating\
    \ multiple BYxxx rule parts.\n       DTSTART;TZID=America/New_York:19970105T083000\n\
    \       RRULE:FREQ=YEARLY;INTERVAL=2;BYMONTH=1;BYDAY=SU;BYHOUR=8,9;\n        BYMINUTE=30\n\
    \      First, the \"INTERVAL=2\" would be applied to \"FREQ=YEARLY\" to\n    \
    \  arrive at \"every other year\".  Then, \"BYMONTH=1\" would be applied\n   \
    \   to arrive at \"every January, every other year\".  Then, \"BYDAY=SU\"\n  \
    \    would be applied to arrive at \"every Sunday in January, every\n      other\
    \ year\".  Then, \"BYHOUR=8,9\" would be applied to arrive at\n      \"every Sunday\
    \ in January at 8 AM and 9 AM, every other year\".\n      Then, \"BYMINUTE=30\"\
    \ would be applied to arrive at \"every Sunday in\n      January at 8:30 AM and\
    \ 9:30 AM, every other year\".  Then, lacking\n      information from \"RRULE\"\
    , the second is derived from \"DTSTART\", to\n      end up in \"every Sunday in\
    \ January at 8:30:00 AM and 9:30:00 AM,\n      every other year\".  Similarly,\
    \ if the BYMINUTE, BYHOUR, BYDAY,\n      BYMONTHDAY, or BYMONTH rule part were\
    \ missing, the appropriate\n      minute, hour, day, or month would have been\
    \ retrieved from the\n      \"DTSTART\" property.\n      If the computed local\
    \ start time of a recurrence instance does not\n      exist, or occurs more than\
    \ once, for the specified time zone, the\n      time of the recurrence instance\
    \ is interpreted in the same manner\n      as an explicit DATE-TIME value describing\
    \ that date and time, as\n      specified in Section 3.3.5.\n      No additional\
    \ content value encoding (i.e., BACKSLASH character\n      encoding, see Section\
    \ 3.3.11) is defined for this value type.\n   Example:  The following is a rule\
    \ that specifies 10 occurrences that\n      occur every other day:\n       FREQ=DAILY;COUNT=10;INTERVAL=2\n\
    \      There are other examples specified in Section 3.8.5.3.\n"
- title: 3.3.11.  Text
  contents:
  - "3.3.11.  Text\n   Value Name:  TEXT\n   Purpose:  This value type is used to\
    \ identify values that contain\n      human-readable text.\n   Format Definition:\
    \  This value type is defined by the following\n      notation:\n       text \
    \      = *(TSAFE-CHAR / \":\" / DQUOTE / ESCAPED-CHAR)\n          ; Folded according\
    \ to description above\n       ESCAPED-CHAR = (\"\\\\\" / \"\\;\" / \"\\,\" /\
    \ \"\\N\" / \"\\n\")\n          ; \\\\ encodes \\, \\N or \\n encodes newline\n\
    \          ; \\; encodes ;, \\, encodes ,\n       TSAFE-CHAR = WSP / %x21 / %x23-2B\
    \ / %x2D-39 / %x3C-5B /\n                    %x5D-7E / NON-US-ASCII\n        \
    \  ; Any character except CONTROLs not needed by the current\n          ; character\
    \ set, DQUOTE, \";\", \":\", \"\\\", \",\"\n   Description:  If the property permits,\
    \ multiple TEXT values are\n      specified by a COMMA-separated list of values.\n\
    \      The language in which the text is represented can be controlled by\n  \
    \    the \"LANGUAGE\" property parameter.\n      An intentional formatted text\
    \ line break MUST only be included in\n      a \"TEXT\" property value by representing\
    \ the line break with the\n      character sequence of BACKSLASH, followed by\
    \ a LATIN SMALL LETTER\n      N or a LATIN CAPITAL LETTER N, that is \"\\n\" or\
    \ \"\\N\".\n      The \"TEXT\" property values may also contain special characters\n\
    \      that are used to signify delimiters, such as a COMMA character for\n  \
    \    lists of values or a SEMICOLON character for structured values.\n      In\
    \ order to support the inclusion of these special characters in\n      \"TEXT\"\
    \ property values, they MUST be escaped with a BACKSLASH\n      character.  A\
    \ BACKSLASH character in a \"TEXT\" property value MUST\n      be escaped with\
    \ another BACKSLASH character.  A COMMA character in\n      a \"TEXT\" property\
    \ value MUST be escaped with a BACKSLASH\n      character.  A SEMICOLON character\
    \ in a \"TEXT\" property value MUST\n      be escaped with a BACKSLASH character.\
    \  However, a COLON character\n      in a \"TEXT\" property value SHALL NOT be\
    \ escaped with a BACKSLASH\n      character.\n   Example:  A multiple line value\
    \ of:\n       Project XYZ Final Review\n       Conference Room - 3B\n       Come\
    \ Prepared.\n      would be represented as:\n       Project XYZ Final Review\\\
    nConference Room - 3B\\nCome Prepared.\n"
- title: 3.3.12.  Time
  contents:
  - "3.3.12.  Time\n   Value Name:  TIME\n   Purpose:  This value type is used to\
    \ identify values that contain a\n      time of day.\n   Format Definition:  This\
    \ value type is defined by the following\n      notation:\n       time       \
    \  = time-hour time-minute time-second [time-utc]\n       time-hour    = 2DIGIT\
    \        ;00-23\n       time-minute  = 2DIGIT        ;00-59\n       time-second\
    \  = 2DIGIT        ;00-60\n       ;The \"60\" value is used to account for positive\
    \ \"leap\" seconds.\n       time-utc     = \"Z\"\n   Description:  If the property\
    \ permits, multiple \"time\" values are\n      specified by a COMMA-separated\
    \ list of values.  No additional\n      content value encoding (i.e., BACKSLASH\
    \ character encoding, see\n      Section 3.3.11) is defined for this value type.\n\
    \      The \"TIME\" value type is used to identify values that contain a\n   \
    \   time of day.  The format is based on the [ISO.8601.2004] complete\n      representation,\
    \ basic format for a time of day.  The text format\n      consists of a two-digit,\
    \ 24-hour of the day (i.e., values 00-23),\n      two-digit minute in the hour\
    \ (i.e., values 00-59), and two-digit\n      seconds in the minute (i.e., values\
    \ 00-60).  The seconds value of\n      60 MUST only be used to account for positive\
    \ \"leap\" seconds.\n      Fractions of a second are not supported by this format.\n\
    \      In parallel to the \"DATE-TIME\" definition above, the \"TIME\" value\n\
    \      type expresses time values in three forms:\n      The form of time with\
    \ UTC offset MUST NOT be used.  For example,\n      the following is not valid\
    \ for a time value:\n       230000-0800        ;Invalid time format\n      FORM\
    \ #1 LOCAL TIME\n      The local time form is simply a time value that does not\
    \ contain\n      the UTC designator nor does it reference a time zone.  For\n\
    \      example, 11:00 PM:\n       230000\n      Time values of this type are said\
    \ to be \"floating\" and are not\n      bound to any time zone in particular.\
    \  They are used to represent\n      the same hour, minute, and second value regardless\
    \ of which time\n      zone is currently being observed.  For example, an event\
    \ can be\n      defined that indicates that an individual will be busy from 11:00\n\
    \      AM to 1:00 PM every day, no matter which time zone the person is\n    \
    \  in.  In these cases, a local time can be specified.  The recipient\n      of\
    \ an iCalendar object with a property value consisting of a local\n      time,\
    \ without any relative time zone information, SHOULD interpret\n      the value\
    \ as being fixed to whatever time zone the \"ATTENDEE\" is\n      in at any given\
    \ moment.  This means that two \"Attendees\", may\n      participate in the same\
    \ event at different UTC times; floating\n      time SHOULD only be used where\
    \ that is reasonable behavior.\n      In most cases, a fixed time is desired.\
    \  To properly communicate a\n      fixed time in a property value, either UTC\
    \ time or local time with\n      time zone reference MUST be specified.\n    \
    \  The use of local time in a TIME value without the \"TZID\" property\n     \
    \ parameter is to be interpreted as floating time, regardless of the\n      existence\
    \ of \"VTIMEZONE\" calendar components in the iCalendar\n      object.\n     \
    \ FORM #2: UTC TIME\n      UTC time, or absolute time, is identified by a LATIN\
    \ CAPITAL\n      LETTER Z suffix character, the UTC designator, appended to the\n\
    \      time value.  For example, the following represents 07:00 AM UTC:\n    \
    \   070000Z\n      The \"TZID\" property parameter MUST NOT be applied to TIME\n\
    \      properties whose time values are specified in UTC.\n      FORM #3: LOCAL\
    \ TIME AND TIME ZONE REFERENCE\n      The local time with reference to time zone\
    \ information form is\n      identified by the use the \"TZID\" property parameter\
    \ to reference\n      the appropriate time zone definition.  \"TZID\" is discussed\
    \ in\n      detail in Section 3.2.19.\n   Example:  The following represents 8:30\
    \ AM in New York in winter,\n      five hours behind UTC, in each of the three\
    \ formats:\n       083000\n       133000Z\n       TZID=America/New_York:083000\n"
- title: 3.3.13.  URI
  contents:
  - "3.3.13.  URI\n   Value Name:  URI\n   Purpose:  This value type is used to identify\
    \ values that contain a\n      uniform resource identifier (URI) type of reference\
    \ to the\n      property value.\n   Format Definition:  This value type is defined\
    \ by the following\n      notation:\n       uri = <As defined in Section 3 of\
    \ [RFC3986]>\n   Description:  This value type might be used to reference binary\n\
    \      information, for values that are large, or otherwise undesirable\n    \
    \  to include directly in the iCalendar object.\n      Property values with this\
    \ value type MUST follow the generic URI\n      syntax defined in [RFC3986].\n\
    \      When a property parameter value is a URI value type, the URI MUST\n   \
    \   be specified as a quoted-string value.\n      No additional content value\
    \ encoding (i.e., BACKSLASH character\n      encoding, see Section 3.3.11) is\
    \ defined for this value type.\n   Example:  The following is a URI for a network\
    \ file:\n       http://example.com/my-report.txt\n"
- title: 3.3.14.  UTC Offset
  contents:
  - "3.3.14.  UTC Offset\n   Value Name:  UTC-OFFSET\n   Purpose:  This value type\
    \ is used to identify properties that contain\n      an offset from UTC to local\
    \ time.\n   Format Definition:  This value type is defined by the following\n\
    \      notation:\n       utc-offset = time-numzone\n       time-numzone = (\"\
    +\" / \"-\") time-hour time-minute [time-second]\n   Description:  The PLUS SIGN\
    \ character MUST be specified for positive\n      UTC offsets (i.e., ahead of\
    \ UTC).  The HYPHEN-MINUS character MUST\n      be specified for negative UTC\
    \ offsets (i.e., behind of UTC).  The\n      value of \"-0000\" and \"-000000\"\
    \ are not allowed.  The time-second,\n      if present, MUST NOT be 60; if absent,\
    \ it defaults to zero.\n      No additional content value encoding (i.e., BACKSLASH\
    \ character\n      encoding, see Section 3.3.11) is defined for this value type.\n\
    \   Example:  The following UTC offsets are given for standard time for\n    \
    \  New York (five hours behind UTC) and Geneva (one hour ahead of\n      UTC):\n\
    \       -0500\n       +0100\n"
- title: 3.4.  iCalendar Object
  contents:
  - "3.4.  iCalendar Object\n   The Calendaring and Scheduling Core Object is a collection\
    \ of\n   calendaring and scheduling information.  Typically, this information\n\
    \   will consist of an iCalendar stream with a single iCalendar object.\n   However,\
    \ multiple iCalendar objects can be sequentially grouped\n   together in an iCalendar\
    \ stream.  The first line and last line of the\n   iCalendar object MUST contain\
    \ a pair of iCalendar object delimiter\n   strings.  The syntax for an iCalendar\
    \ stream is as follows:\n       icalstream = 1*icalobject\n       icalobject =\
    \ \"BEGIN\" \":\" \"VCALENDAR\" CRLF\n                    icalbody\n         \
    \           \"END\" \":\" \"VCALENDAR\" CRLF\n   The following is a simple example\
    \ of an iCalendar object:\n       BEGIN:VCALENDAR\n       VERSION:2.0\n      \
    \ PRODID:-//hacksw/handcal//NONSGML v1.0//EN\n       BEGIN:VEVENT\n       UID:19970610T172345Z-AF23B2@example.com\n\
    \       DTSTAMP:19970610T172345Z\n       DTSTART:19970714T170000Z\n       DTEND:19970715T040000Z\n\
    \       SUMMARY:Bastille Day Party\n       END:VEVENT\n       END:VCALENDAR\n"
- title: 3.5.  Property
  contents:
  - "3.5.  Property\n   A property is the definition of an individual attribute describing\
    \ a\n   calendar object or a calendar component.  A property takes the form\n\
    \   defined by the \"contentline\" notation defined in Section 3.1.\n   The following\
    \ is an example of a property:\n       DTSTART:19960415T133000Z\n   This memo\
    \ imposes no ordering of properties within an iCalendar\n   object.\n   Property\
    \ names, parameter names, and enumerated parameter values are\n   case-insensitive.\
    \  For example, the property name \"DUE\" is the same\n   as \"due\" and \"Due\"\
    , DTSTART;TZID=America/New_York:19980714T120000 is\n   the same as DtStart;TzID=America/New_York:19980714T120000.\n"
- title: 3.6.  Calendar Components
  contents:
  - "3.6.  Calendar Components\n   The body of the iCalendar object consists of a\
    \ sequence of calendar\n   properties and one or more calendar components.  The\
    \ calendar\n   properties are attributes that apply to the calendar object as\
    \ a\n   whole.  The calendar components are collections of properties that\n \
    \  express a particular calendar semantic.  For example, the calendar\n   component\
    \ can specify an event, a to-do, a journal entry, time zone\n   information, free/busy\
    \ time information, or an alarm.\n   The body of the iCalendar object is defined\
    \ by the following\n   notation:\n       icalbody   = calprops component\n   \
    \    calprops   = *(\n                  ;\n                  ; The following are\
    \ REQUIRED,\n                  ; but MUST NOT occur more than once.\n        \
    \          ;\n                  prodid / version /\n                  ;\n    \
    \              ; The following are OPTIONAL,\n                  ; but MUST NOT\
    \ occur more than once.\n                  ;\n                  calscale / method\
    \ /\n                  ;\n                  ; The following are OPTIONAL,\n  \
    \                ; and MAY occur more than once.\n                  ;\n      \
    \            x-prop / iana-prop\n                  ;\n                  )\n  \
    \     component  = 1*(eventc / todoc / journalc / freebusyc /\n              \
    \      timezonec / iana-comp / x-comp)\n       iana-comp  = \"BEGIN\" \":\" iana-token\
    \ CRLF\n                    1*contentline\n                    \"END\" \":\" iana-token\
    \ CRLF\n       x-comp     = \"BEGIN\" \":\" x-name CRLF\n                    1*contentline\n\
    \                    \"END\" \":\" x-name CRLF\n   An iCalendar object MUST include\
    \ the \"PRODID\" and \"VERSION\" calendar\n   properties.  In addition, it MUST\
    \ include at least one calendar\n   component.  Special forms of iCalendar objects\
    \ are possible to\n   publish just busy time (i.e., only a \"VFREEBUSY\" calendar\
    \ component)\n   or time zone (i.e., only a \"VTIMEZONE\" calendar component)\n\
    \   information.  In addition, a complex iCalendar object that is used to\n  \
    \ capture a complete snapshot of the contents of a calendar is possible\n   (e.g.,\
    \ composite of many different calendar components).  More\n   commonly, an iCalendar\
    \ object will consist of just a single \"VEVENT\",\n   \"VTODO\", or \"VJOURNAL\"\
    \ calendar component.  Applications MUST ignore\n   x-comp and iana-comp values\
    \ they don't recognize.  Applications that\n   support importing iCalendar objects\
    \ SHOULD support all of the\n   component types defined in this document, and\
    \ SHOULD NOT silently\n   drop any components as that can lead to user data loss.\n"
- title: 3.6.1.  Event Component
  contents:
  - "3.6.1.  Event Component\n   Component Name:  VEVENT\n   Purpose:  Provide a grouping\
    \ of component properties that describe an\n      event.\n   Format Definition:\
    \  A \"VEVENT\" calendar component is defined by the\n      following notation:\n\
    \       eventc     = \"BEGIN\" \":\" \"VEVENT\" CRLF\n                    eventprop\
    \ *alarmc\n                    \"END\" \":\" \"VEVENT\" CRLF\n       eventprop\
    \  = *(\n                  ;\n                  ; The following are REQUIRED,\n\
    \                  ; but MUST NOT occur more than once.\n                  ;\n\
    \                  dtstamp / uid /\n                  ;\n                  ; The\
    \ following is REQUIRED if the component\n                  ; appears in an iCalendar\
    \ object that doesn't\n                  ; specify the \"METHOD\" property; otherwise,\
    \ it\n                  ; is OPTIONAL; in any case, it MUST NOT occur\n      \
    \            ; more than once.\n                  ;\n                  dtstart\
    \ /\n                  ;\n                  ; The following are OPTIONAL,\n  \
    \                ; but MUST NOT occur more than once.\n                  ;\n \
    \                 class / created / description / geo /\n                  last-mod\
    \ / location / organizer / priority /\n                  seq / status / summary\
    \ / transp /\n                  url / recurid /\n                  ;\n       \
    \           ; The following is OPTIONAL,\n                  ; but SHOULD NOT occur\
    \ more than once.\n                  ;\n                  rrule /\n          \
    \        ;\n                  ; Either 'dtend' or 'duration' MAY appear in\n \
    \                 ; a 'eventprop', but 'dtend' and 'duration'\n              \
    \    ; MUST NOT occur in the same 'eventprop'.\n                  ;\n        \
    \          dtend / duration /\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; and MAY occur more than once.\n         \
    \         ;\n                  attach / attendee / categories / comment /\n  \
    \                contact / exdate / rstatus / related /\n                  resources\
    \ / rdate / x-prop / iana-prop\n                  ;\n                  )\n   Description:\
    \  A \"VEVENT\" calendar component is a grouping of\n      component properties,\
    \ possibly including \"VALARM\" calendar\n      components, that represents a\
    \ scheduled amount of time on a\n      calendar.  For example, it can be an activity;\
    \ such as a one-hour\n      long, department meeting from 8:00 AM to 9:00 AM,\
    \ tomorrow.\n      Generally, an event will take up time on an individual calendar.\n\
    \      Hence, the event will appear as an opaque interval in a search for\n  \
    \    busy time.  Alternately, the event can have its Time Transparency\n     \
    \ set to \"TRANSPARENT\" in order to prevent blocking of the event in\n      searches\
    \ for busy time.\n      The \"VEVENT\" is also the calendar component used to\
    \ specify an\n      anniversary or daily reminder within a calendar.  These events\n\
    \      have a DATE value type for the \"DTSTART\" property instead of the\n  \
    \    default value type of DATE-TIME.  If such a \"VEVENT\" has a \"DTEND\"\n\
    \      property, it MUST be specified as a DATE value also.  The\n      anniversary\
    \ type of \"VEVENT\" can span more than one date (i.e.,\n      \"DTEND\" property\
    \ value is set to a calendar date after the\n      \"DTSTART\" property value).\
    \  If such a \"VEVENT\" has a \"DURATION\"\n      property, it MUST be specified\
    \ as a \"dur-day\" or \"dur-week\" value.\n      The \"DTSTART\" property for\
    \ a \"VEVENT\" specifies the inclusive\n      start of the event.  For recurring\
    \ events, it also specifies the\n      very first instance in the recurrence set.\
    \  The \"DTEND\" property\n      for a \"VEVENT\" calendar component specifies\
    \ the non-inclusive end\n      of the event.  For cases where a \"VEVENT\" calendar\
    \ component\n      specifies a \"DTSTART\" property with a DATE value type but\
    \ no\n      \"DTEND\" nor \"DURATION\" property, the event's duration is taken\
    \ to\n      be one day.  For cases where a \"VEVENT\" calendar component\n   \
    \   specifies a \"DTSTART\" property with a DATE-TIME value type but no\n    \
    \  \"DTEND\" property, the event ends on the same calendar date and\n      time\
    \ of day specified by the \"DTSTART\" property.\n      The \"VEVENT\" calendar\
    \ component cannot be nested within another\n      calendar component.  However,\
    \ \"VEVENT\" calendar components can be\n      related to each other or to a \"\
    VTODO\" or to a \"VJOURNAL\" calendar\n      component with the \"RELATED-TO\"\
    \ property.\n   Example:  The following is an example of the \"VEVENT\" calendar\n\
    \      component used to represent a meeting that will also be opaque to\n   \
    \   searches for busy time:\n       BEGIN:VEVENT\n       UID:19970901T130000Z-123401@example.com\n\
    \       DTSTAMP:19970901T130000Z\n       DTSTART:19970903T163000Z\n       DTEND:19970903T190000Z\n\
    \       SUMMARY:Annual Employee Review\n       CLASS:PRIVATE\n       CATEGORIES:BUSINESS,HUMAN\
    \ RESOURCES\n       END:VEVENT\n      The following is an example of the \"VEVENT\"\
    \ calendar component\n      used to represent a reminder that will not be opaque,\
    \ but rather\n      transparent, to searches for busy time:\n       BEGIN:VEVENT\n\
    \       UID:19970901T130000Z-123402@example.com\n       DTSTAMP:19970901T130000Z\n\
    \       DTSTART:19970401T163000Z\n       DTEND:19970402T010000Z\n       SUMMARY:Laurel\
    \ is in sensitivity awareness class.\n       CLASS:PUBLIC\n       CATEGORIES:BUSINESS,HUMAN\
    \ RESOURCES\n       TRANSP:TRANSPARENT\n       END:VEVENT\n      The following\
    \ is an example of the \"VEVENT\" calendar component\n      used to represent\
    \ an anniversary that will occur annually:\n       BEGIN:VEVENT\n       UID:19970901T130000Z-123403@example.com\n\
    \       DTSTAMP:19970901T130000Z\n       DTSTART;VALUE=DATE:19971102\n       SUMMARY:Our\
    \ Blissful Anniversary\n       TRANSP:TRANSPARENT\n       CLASS:CONFIDENTIAL\n\
    \       CATEGORIES:ANNIVERSARY,PERSONAL,SPECIAL OCCASION\n       RRULE:FREQ=YEARLY\n\
    \       END:VEVENT\n      The following is an example of the \"VEVENT\" calendar\
    \ component\n      used to represent a multi-day event scheduled from June 28th,\
    \ 2007\n      to July 8th, 2007 inclusively.  Note that the \"DTEND\" property\
    \ is\n      set to July 9th, 2007, since the \"DTEND\" property specifies the\n\
    \      non-inclusive end of the event.\n       BEGIN:VEVENT\n       UID:20070423T123432Z-541111@example.com\n\
    \       DTSTAMP:20070423T123432Z\n       DTSTART;VALUE=DATE:20070628\n       DTEND;VALUE=DATE:20070709\n\
    \       SUMMARY:Festival International de Jazz de Montreal\n       TRANSP:TRANSPARENT\n\
    \       END:VEVENT\n"
- title: 3.6.2.  To-Do Component
  contents:
  - "3.6.2.  To-Do Component\n   Component Name:  VTODO\n   Purpose:  Provide a grouping\
    \ of calendar properties that describe a\n      to-do.\n   Format Definition:\
    \  A \"VTODO\" calendar component is defined by the\n      following notation:\n\
    \       todoc      = \"BEGIN\" \":\" \"VTODO\" CRLF\n                    todoprop\
    \ *alarmc\n                    \"END\" \":\" \"VTODO\" CRLF\n       todoprop \
    \  = *(\n                  ;\n                  ; The following are REQUIRED,\n\
    \                  ; but MUST NOT occur more than once.\n                  ;\n\
    \                  dtstamp / uid /\n                  ;\n                  ; The\
    \ following are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n\
    \                  ;\n                  class / completed / created / description\
    \ /\n                  dtstart / geo / last-mod / location / organizer /\n   \
    \               percent / priority / recurid / seq / status /\n              \
    \    summary / url /\n                  ;\n                  ; The following is\
    \ OPTIONAL,\n                  ; but SHOULD NOT occur more than once.\n      \
    \            ;\n                  rrule /\n                  ;\n             \
    \     ; Either 'due' or 'duration' MAY appear in\n                  ; a 'todoprop',\
    \ but 'due' and 'duration'\n                  ; MUST NOT occur in the same 'todoprop'.\n\
    \                  ; If 'duration' appear in a 'todoprop',\n                 \
    \ ; then 'dtstart' MUST also appear in\n                  ; the same 'todoprop'.\n\
    \                  ;\n                  due / duration /\n                  ;\n\
    \                  ; The following are OPTIONAL,\n                  ; and MAY\
    \ occur more than once.\n                  ;\n                  attach / attendee\
    \ / categories / comment / contact /\n                  exdate / rstatus / related\
    \ / resources /\n                  rdate / x-prop / iana-prop\n              \
    \    ;\n                  )\n   Description:  A \"VTODO\" calendar component is\
    \ a grouping of component\n      properties and possibly \"VALARM\" calendar components\
    \ that\n      represent an action-item or assignment.  For example, it can be\n\
    \      used to represent an item of work assigned to an individual; such\n   \
    \   as \"turn in travel expense today\".\n      The \"VTODO\" calendar component\
    \ cannot be nested within another\n      calendar component.  However, \"VTODO\"\
    \ calendar components can be\n      related to each other or to a \"VEVENT\" or\
    \ to a \"VJOURNAL\" calendar\n      component with the \"RELATED-TO\" property.\n\
    \      A \"VTODO\" calendar component without the \"DTSTART\" and \"DUE\" (or\n\
    \      \"DURATION\") properties specifies a to-do that will be associated\n  \
    \    with each successive calendar date, until it is completed.\n   Examples:\
    \  The following is an example of a \"VTODO\" calendar\n      component that needs\
    \ to be completed before May 1st, 2007.  On\n      midnight May 1st, 2007 this\
    \ to-do would be considered overdue.\n       BEGIN:VTODO\n       UID:20070313T123432Z-456553@example.com\n\
    \       DTSTAMP:20070313T123432Z\n       DUE;VALUE=DATE:20070501\n       SUMMARY:Submit\
    \ Quebec Income Tax Return for 2006\n       CLASS:CONFIDENTIAL\n       CATEGORIES:FAMILY,FINANCE\n\
    \       STATUS:NEEDS-ACTION\n       END:VTODO\n      The following is an example\
    \ of a \"VTODO\" calendar component that\n      was due before 1:00 P.M. UTC on\
    \ July 9th, 2007 and was completed\n      on July 7th, 2007 at 10:00 A.M. UTC.\n\
    \       BEGIN:VTODO\n       UID:20070514T103211Z-123404@example.com\n       DTSTAMP:20070514T103211Z\n\
    \       DTSTART:20070514T110000Z\n       DUE:20070709T130000Z\n       COMPLETED:20070707T100000Z\n\
    \       SUMMARY:Submit Revised Internet-Draft\n       PRIORITY:1\n       STATUS:NEEDS-ACTION\n\
    \       END:VTODO\n"
- title: 3.6.3.  Journal Component
  contents:
  - "3.6.3.  Journal Component\n   Component Name:  VJOURNAL\n   Purpose:  Provide\
    \ a grouping of component properties that describe a\n      journal entry.\n \
    \  Format Definition:  A \"VJOURNAL\" calendar component is defined by the\n \
    \     following notation:\n       journalc   = \"BEGIN\" \":\" \"VJOURNAL\" CRLF\n\
    \                    jourprop\n                    \"END\" \":\" \"VJOURNAL\"\
    \ CRLF\n       jourprop   = *(\n                  ;\n                  ; The following\
    \ are REQUIRED,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  dtstamp / uid /\n                  ;\n   \
    \               ; The following are OPTIONAL,\n                  ; but MUST NOT\
    \ occur more than once.\n                  ;\n                  class / created\
    \ / dtstart /\n                  last-mod / organizer / recurid / seq /\n    \
    \              status / summary / url /\n                  ;\n               \
    \   ; The following is OPTIONAL,\n                  ; but SHOULD NOT occur more\
    \ than once.\n                  ;\n                  rrule /\n               \
    \   ;\n                  ; The following are OPTIONAL,\n                  ; and\
    \ MAY occur more than once.\n                  ;\n                  attach / attendee\
    \ / categories / comment /\n                  contact / description / exdate /\
    \ related / rdate /\n                  rstatus / x-prop / iana-prop\n        \
    \          ;\n                  )\n   Description:  A \"VJOURNAL\" calendar component\
    \ is a grouping of\n      component properties that represent one or more descriptive\
    \ text\n      notes associated with a particular calendar date.  The \"DTSTART\"\
    \n      property is used to specify the calendar date with which the\n      journal\
    \ entry is associated.  Generally, it will have a DATE value\n      data type,\
    \ but it can also be used to specify a DATE-TIME value\n      data type.  Examples\
    \ of a journal entry include a daily record of\n      a legislative body or a\
    \ journal entry of individual telephone\n      contacts for the day or an ordered\
    \ list of accomplishments for the\n      day.  The \"VJOURNAL\" calendar component\
    \ can also be used to\n      associate a document with a calendar date.\n    \
    \  The \"VJOURNAL\" calendar component does not take up time on a\n      calendar.\
    \  Hence, it does not play a role in free or busy time\n      searches -- it is\
    \ as though it has a time transparency value of\n      TRANSPARENT.  It is transparent\
    \ to any such searches.\n      The \"VJOURNAL\" calendar component cannot be nested\
    \ within another\n      calendar component.  However, \"VJOURNAL\" calendar components\
    \ can\n      be related to each other or to a \"VEVENT\" or to a \"VTODO\" calendar\n\
    \      component, with the \"RELATED-TO\" property.\n   Example:  The following\
    \ is an example of the \"VJOURNAL\" calendar\n      component:\n       BEGIN:VJOURNAL\n\
    \       UID:19970901T130000Z-123405@example.com\n       DTSTAMP:19970901T130000Z\n\
    \       DTSTART;VALUE=DATE:19970317\n       SUMMARY:Staff meeting minutes\n  \
    \     DESCRIPTION:1. Staff meeting: Participants include Joe\\,\n         Lisa\\\
    , and Bob. Aurora project plans were reviewed.\n         There is currently no\
    \ budget reserves for this project.\n         Lisa will escalate to management.\
    \ Next meeting on Tuesday.\\n\n        2. Telephone Conference: ABC Corp. sales\
    \ representative\n         called to discuss new printer. Promised to get us a\
    \ demo by\n         Friday.\\n3. Henry Miller (Handsoff Insurance): Car was\n\
    \         totaled by tree. Is looking into a loaner car. 555-2323\n         (tel).\n\
    \       END:VJOURNAL\n"
- title: 3.6.4.  Free/Busy Component
  contents:
  - "3.6.4.  Free/Busy Component\n   Component Name:  VFREEBUSY\n   Purpose:  Provide\
    \ a grouping of component properties that describe\n      either a request for\
    \ free/busy time, describe a response to a\n      request for free/busy time,\
    \ or describe a published set of busy\n      time.\n   Format Definition:  A \"\
    VFREEBUSY\" calendar component is defined by\n      the following notation:\n\
    \       freebusyc  = \"BEGIN\" \":\" \"VFREEBUSY\" CRLF\n                    fbprop\n\
    \                    \"END\" \":\" \"VFREEBUSY\" CRLF\n       fbprop     = *(\n\
    \                  ;\n                  ; The following are REQUIRED,\n      \
    \            ; but MUST NOT occur more than once.\n                  ;\n     \
    \             dtstamp / uid /\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  contact / dtstart / dtend /\n            \
    \      organizer / url /\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; and MAY occur more than once.\n         \
    \         ;\n                  attendee / comment / freebusy / rstatus / x-prop\
    \ /\n                  iana-prop\n                  ;\n                  )\n \
    \  Description:  A \"VFREEBUSY\" calendar component is a grouping of\n      component\
    \ properties that represents either a request for free or\n      busy time information,\
    \ a reply to a request for free or busy time\n      information, or a published\
    \ set of busy time information.\n      When used to request free/busy time information,\
    \ the \"ATTENDEE\"\n      property specifies the calendar users whose free/busy\
    \ time is\n      being requested; the \"ORGANIZER\" property specifies the calendar\n\
    \      user who is requesting the free/busy time; the \"DTSTART\" and\n      \"\
    DTEND\" properties specify the window of time for which the free/\n      busy\
    \ time is being requested; the \"UID\" and \"DTSTAMP\" properties\n      are specified\
    \ to assist in proper sequencing of multiple free/busy\n      time requests.\n\
    \      When used to reply to a request for free/busy time, the \"ATTENDEE\"\n\
    \      property specifies the calendar user responding to the free/busy\n    \
    \  time request; the \"ORGANIZER\" property specifies the calendar user\n    \
    \  that originally requested the free/busy time; the \"FREEBUSY\"\n      property\
    \ specifies the free/busy time information (if it exists);\n      and the \"UID\"\
    \ and \"DTSTAMP\" properties are specified to assist in\n      proper sequencing\
    \ of multiple free/busy time replies.\n      When used to publish busy time, the\
    \ \"ORGANIZER\" property specifies\n      the calendar user associated with the\
    \ published busy time; the\n      \"DTSTART\" and \"DTEND\" properties specify\
    \ an inclusive time window\n      that surrounds the busy time information; the\
    \ \"FREEBUSY\" property\n      specifies the published busy time information;\
    \ and the \"DTSTAMP\"\n      property specifies the DATE-TIME that iCalendar object\
    \ was\n      created.\n      The \"VFREEBUSY\" calendar component cannot be nested\
    \ within another\n      calendar component.  Multiple \"VFREEBUSY\" calendar components\
    \ can\n      be specified within an iCalendar object.  This permits the\n    \
    \  grouping of free/busy information into logical collections, such\n      as\
    \ monthly groups of busy time information.\n      The \"VFREEBUSY\" calendar component\
    \ is intended for use in\n      iCalendar object methods involving requests for\
    \ free time,\n      requests for busy time, requests for both free and busy, and\
    \ the\n      associated replies.\n      Free/Busy information is represented with\
    \ the \"FREEBUSY\" property.\n      This property provides a terse representation\
    \ of time periods.\n      One or more \"FREEBUSY\" properties can be specified\
    \ in the\n      \"VFREEBUSY\" calendar component.\n      When present in a \"\
    VFREEBUSY\" calendar component, the \"DTSTART\"\n      and \"DTEND\" properties\
    \ SHOULD be specified prior to any \"FREEBUSY\"\n      properties.\n      The\
    \ recurrence properties (\"RRULE\", \"RDATE\", \"EXDATE\") are not\n      permitted\
    \ within a \"VFREEBUSY\" calendar component.  Any recurring\n      events are\
    \ resolved into their individual busy time periods using\n      the \"FREEBUSY\"\
    \ property.\n   Example:  The following is an example of a \"VFREEBUSY\" calendar\n\
    \      component used to request free or busy time information:\n       BEGIN:VFREEBUSY\n\
    \       UID:19970901T082949Z-FA43EF@example.com\n       ORGANIZER:mailto:jane_doe@example.com\n\
    \       ATTENDEE:mailto:john_public@example.com\n       DTSTART:19971015T050000Z\n\
    \       DTEND:19971016T050000Z\n       DTSTAMP:19970901T083000Z\n       END:VFREEBUSY\n\
    \      The following is an example of a \"VFREEBUSY\" calendar component\n   \
    \   used to reply to the request with busy time information:\n       BEGIN:VFREEBUSY\n\
    \       UID:19970901T095957Z-76A912@example.com\n       ORGANIZER:mailto:jane_doe@example.com\n\
    \       ATTENDEE:mailto:john_public@example.com\n       DTSTAMP:19970901T100000Z\n\
    \       FREEBUSY:19971015T050000Z/PT8H30M,\n        19971015T160000Z/PT5H30M,19971015T223000Z/PT6H30M\n\
    \       URL:http://example.com/pub/busy/jpublic-01.ifb\n       COMMENT:This iCalendar\
    \ file contains busy time information for\n         the next three months.\n \
    \      END:VFREEBUSY\n      The following is an example of a \"VFREEBUSY\" calendar\
    \ component\n      used to publish busy time information:\n       BEGIN:VFREEBUSY\n\
    \       UID:19970901T115957Z-76A912@example.com\n       DTSTAMP:19970901T120000Z\n\
    \       ORGANIZER:jsmith@example.com\n       DTSTART:19980313T141711Z\n      \
    \ DTEND:19980410T141711Z\n       FREEBUSY:19980314T233000Z/19980315T003000Z\n\
    \       FREEBUSY:19980316T153000Z/19980316T163000Z\n       FREEBUSY:19980318T030000Z/19980318T040000Z\n\
    \       URL:http://www.example.com/calendar/busytime/jsmith.ifb\n       END:VFREEBUSY\n"
- title: 3.6.5.  Time Zone Component
  contents:
  - "3.6.5.  Time Zone Component\n   Component Name:  VTIMEZONE\n   Purpose:  Provide\
    \ a grouping of component properties that defines a\n      time zone.\n   Format\
    \ Definition:  A \"VTIMEZONE\" calendar component is defined by\n      the following\
    \ notation:\n       timezonec  = \"BEGIN\" \":\" \"VTIMEZONE\" CRLF\n        \
    \            *(\n                    ;\n                    ; 'tzid' is REQUIRED,\
    \ but MUST NOT occur more\n                    ; than once.\n                \
    \    ;\n                    tzid /\n                    ;\n                  \
    \  ; 'last-mod' and 'tzurl' are OPTIONAL,\n                    ; but MUST NOT\
    \ occur more than once.\n                    ;\n                    last-mod /\
    \ tzurl /\n                    ;\n                    ; One of 'standardc' or\
    \ 'daylightc' MUST occur\n                    ; and each MAY occur more than once.\n\
    \                    ;\n                    standardc / daylightc /\n        \
    \            ;\n                    ; The following are OPTIONAL,\n          \
    \          ; and MAY occur more than once.\n                    ;\n          \
    \          x-prop / iana-prop\n                    ;\n                    )\n\
    \                    \"END\" \":\" \"VTIMEZONE\" CRLF\n       standardc  = \"\
    BEGIN\" \":\" \"STANDARD\" CRLF\n                    tzprop\n                \
    \    \"END\" \":\" \"STANDARD\" CRLF\n       daylightc  = \"BEGIN\" \":\" \"DAYLIGHT\"\
    \ CRLF\n                    tzprop\n                    \"END\" \":\" \"DAYLIGHT\"\
    \ CRLF\n       tzprop     = *(\n                    ;\n                    ; The\
    \ following are REQUIRED,\n                    ; but MUST NOT occur more than\
    \ once.\n                    ;\n                    dtstart / tzoffsetto / tzoffsetfrom\
    \ /\n                    ;\n                    ; The following is OPTIONAL,\n\
    \                    ; but SHOULD NOT occur more than once.\n                \
    \    ;\n                    rrule /\n                    ;\n                 \
    \   ; The following are OPTIONAL,\n                    ; and MAY occur more than\
    \ once.\n                    ;\n                    comment / rdate / tzname /\
    \ x-prop / iana-prop\n                    ;\n                    )\n   Description:\
    \  A time zone is unambiguously defined by the set of time\n      measurement\
    \ rules determined by the governing body for a given\n      geographic area. \
    \ These rules describe, at a minimum, the base\n      offset from UTC for the\
    \ time zone, often referred to as the\n      Standard Time offset.  Many locations\
    \ adjust their Standard Time\n      forward or backward by one hour, in order\
    \ to accommodate seasonal\n      changes in number of daylight hours, often referred\
    \ to as Daylight\n      Saving Time.  Some locations adjust their time by a fraction\
    \ of an\n      hour.  Standard Time is also known as Winter Time.  Daylight\n\
    \      Saving Time is also known as Advanced Time, Summer Time, or Legal\n   \
    \   Time in certain countries.  The following table shows the changes\n      in\
    \ time zone rules in effect for New York City starting from 1967.\n      Each\
    \ line represents a description or rule for a particular\n      observance.\n\
    \                         Effective Observance Rule\n     +-----------+--------------------------+--------+--------------+\n\
    \     | Date      | (Date-Time)              | Offset | Abbreviation |\n     +-----------+--------------------------+--------+--------------+\n\
    \     | 1967-1973 | last Sun in Apr, 02:00   | -0400  | EDT          |\n     |\
    \           |                          |        |              |\n     | 1967-2006\
    \ | last Sun in Oct, 02:00   | -0500  | EST          |\n     |           |   \
    \                       |        |              |\n     | 1974-1974 | Jan 6, 02:00\
    \             | -0400  | EDT          |\n     |           |                  \
    \        |        |              |\n     | 1975-1975 | Feb 23, 02:00         \
    \   | -0400  | EDT          |\n     |           |                          | \
    \       |              |\n     | 1976-1986 | last Sun in Apr, 02:00   | -0400\
    \  | EDT          |\n     |           |                          |        |  \
    \            |\n     | 1987-2006 | first Sun in Apr, 02:00  | -0400  | EDT   \
    \       |\n     |           |                          |        |            \
    \  |\n     | 2007-*    | second Sun in Mar, 02:00 | -0400  | EDT          |\n\
    \     |           |                          |        |              |\n     |\
    \ 2007-*    | first Sun in Nov, 02:00  | -0500  | EST          |\n     +-----------+--------------------------+--------+--------------+\n\
    \   Note: The specification of a global time zone registry is not\n         addressed\
    \ by this document and is left for future study.\n         However, implementers\
    \ may find the TZ database [TZDB] a useful\n         reference.  It is an informal,\
    \ public-domain collection of time\n         zone information, which is currently\
    \ being maintained by\n         volunteer Internet participants, and is used in\
    \ several\n         operating systems.  This database contains current and\n \
    \        historical time zone information for a wide variety of\n         locations\
    \ around the globe; it provides a time zone identifier\n         for every unique\
    \ time zone rule set in actual use since 1970,\n         with historical data\
    \ going back to the introduction of standard\n         time.\n      Interoperability\
    \ between two calendaring and scheduling\n      applications, especially for recurring\
    \ events, to-dos or journal\n      entries, is dependent on the ability to capture\
    \ and convey date\n      and time information in an unambiguous format.  The specification\n\
    \      of current time zone information is integral to this behavior.\n      If\
    \ present, the \"VTIMEZONE\" calendar component defines the set of\n      Standard\
    \ Time and Daylight Saving Time observances (or rules) for\n      a particular\
    \ time zone for a given interval of time.  The\n      \"VTIMEZONE\" calendar component\
    \ cannot be nested within other\n      calendar components.  Multiple \"VTIMEZONE\"\
    \ calendar components can\n      exist in an iCalendar object.  In this situation,\
    \ each \"VTIMEZONE\"\n      MUST represent a unique time zone definition.  This\
    \ is necessary\n      for some classes of events, such as airline flights, that\
    \ start in\n      one time zone and end in another.\n      The \"VTIMEZONE\" calendar\
    \ component MUST include the \"TZID\"\n      property and at least one definition\
    \ of a \"STANDARD\" or \"DAYLIGHT\"\n      sub-component.  The \"STANDARD\" or\
    \ \"DAYLIGHT\" sub-component MUST\n      include the \"DTSTART\", \"TZOFFSETFROM\"\
    , and \"TZOFFSETTO\"\n      properties.\n      An individual \"VTIMEZONE\" calendar\
    \ component MUST be specified for\n      each unique \"TZID\" parameter value\
    \ specified in the iCalendar\n      object.  In addition, a \"VTIMEZONE\" calendar\
    \ component, referred\n      to by a recurring calendar component, MUST provide\
    \ valid time zone\n      information for all recurrence instances.\n      Each\
    \ \"VTIMEZONE\" calendar component consists of a collection of\n      one or more\
    \ sub-components that describe the rule for a particular\n      observance (either\
    \ a Standard Time or a Daylight Saving Time\n      observance).  The \"STANDARD\"\
    \ sub-component consists of a\n      collection of properties that describe Standard\
    \ Time.  The\n      \"DAYLIGHT\" sub-component consists of a collection of properties\n\
    \      that describe Daylight Saving Time.  In general, this collection\n    \
    \  of properties consists of:\n      *  the first onset DATE-TIME for the observance;\n\
    \      *  the last onset DATE-TIME for the observance, if a last onset is\n  \
    \       known;\n      *  the offset to be applied for the observance;\n      *\
    \  a rule that describes the day and time when the observance\n         takes\
    \ effect;\n      *  an optional name for the observance.\n      For a given time\
    \ zone, there may be multiple unique definitions of\n      the observances over\
    \ a period of time.  Each observance is\n      described using either a \"STANDARD\"\
    \ or \"DAYLIGHT\" sub-component.\n      The collection of these sub-components\
    \ is used to describe the\n      time zone for a given period of time.  The offset\
    \ to apply at any\n      given time is found by locating the observance that has\
    \ the last\n      onset date and time before the time in question, and using the\n\
    \      offset value from that observance.\n      The top-level properties in a\
    \ \"VTIMEZONE\" calendar component are:\n      The mandatory \"TZID\" property\
    \ is a text value that uniquely\n      identifies the \"VTIMEZONE\" calendar component\
    \ within the scope of\n      an iCalendar object.\n      The optional \"LAST-MODIFIED\"\
    \ property is a UTC value that\n      specifies the date and time that this time\
    \ zone definition was\n      last updated.\n      The optional \"TZURL\" property\
    \ is a url value that points to a\n      published \"VTIMEZONE\" definition. \
    \ \"TZURL\" SHOULD refer to a\n      resource that is accessible by anyone who\
    \ might need to interpret\n      the object.  This SHOULD NOT normally be a \"\
    file\" URL or other URL\n      that is not widely accessible.\n      The collection\
    \ of properties that are used to define the\n      \"STANDARD\" and \"DAYLIGHT\"\
    \ sub-components include:\n      The mandatory \"DTSTART\" property gives the\
    \ effective onset date\n      and local time for the time zone sub-component definition.\n\
    \      \"DTSTART\" in this usage MUST be specified as a date with a local\n  \
    \    time value.\n      The mandatory \"TZOFFSETFROM\" property gives the UTC\
    \ offset that is\n      in use when the onset of this time zone observance begins.\n\
    \      \"TZOFFSETFROM\" is combined with \"DTSTART\" to define the effective\n\
    \      onset for the time zone sub-component definition.  For example,\n     \
    \ the following represents the time at which the observance of\n      Standard\
    \ Time took effect in Fall 1967 for New York City:\n       DTSTART:19671029T020000\n\
    \       TZOFFSETFROM:-0400\n      The mandatory \"TZOFFSETTO\" property gives\
    \ the UTC offset for the\n      time zone sub-component (Standard Time or Daylight\
    \ Saving Time)\n      when this observance is in use.\n      The optional \"TZNAME\"\
    \ property is the customary name for the time\n      zone.  This could be used\
    \ for displaying dates.\n      The onset DATE-TIME values for the observance defined\
    \ by the time\n      zone sub-component is defined by the \"DTSTART\", \"RRULE\"\
    , and\n      \"RDATE\" properties.\n      The \"RRULE\" property defines the recurrence\
    \ rule for the onset of\n      the observance defined by this time zone sub-component.\
    \  Some\n      specific requirements for the usage of \"RRULE\" for this purpose\n\
    \      include:\n      *  If observance is known to have an effective end date,\
    \ the\n         \"UNTIL\" recurrence rule parameter MUST be used to specify the\n\
    \         last valid onset of this observance (i.e., the UNTIL DATE-TIME\n   \
    \      will be equal to the last instance generated by the recurrence\n      \
    \   pattern).  It MUST be specified in UTC time.\n      *  The \"DTSTART\" and\
    \ the \"TZOFFSETFROM\" properties MUST be used\n         when generating the onset\
    \ DATE-TIME values (instances) from the\n         \"RRULE\".\n      The \"RDATE\"\
    \ property can also be used to define the onset of the\n      observance by giving\
    \ the individual onset date and times.  \"RDATE\"\n      in this usage MUST be\
    \ specified as a date with local time value,\n      relative to the UTC offset\
    \ specified in the \"TZOFFSETFROM\"\n      property.\n      The optional \"COMMENT\"\
    \ property is also allowed for descriptive\n      explanatory text.\n   Example:\
    \  The following are examples of the \"VTIMEZONE\" calendar\n      component:\n\
    \      This is an example showing all the time zone rules for New York\n     \
    \ City since April 30, 1967 at 03:00:00 EDT.\n       BEGIN:VTIMEZONE\n       TZID:America/New_York\n\
    \       LAST-MODIFIED:20050809T050000Z\n       BEGIN:DAYLIGHT\n       DTSTART:19670430T020000\n\
    \       RRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=-1SU;UNTIL=19730429T070000Z\n      \
    \ TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n       END:DAYLIGHT\n\
    \       BEGIN:STANDARD\n       DTSTART:19671029T020000\n       RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU;UNTIL=20061029T060000Z\n\
    \       TZOFFSETFROM:-0400\n       TZOFFSETTO:-0500\n       TZNAME:EST\n     \
    \  END:STANDARD\n       BEGIN:DAYLIGHT\n       DTSTART:19740106T020000\n     \
    \  RDATE:19750223T020000\n       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n\
    \       TZNAME:EDT\n       END:DAYLIGHT\n       BEGIN:DAYLIGHT\n       DTSTART:19760425T020000\n\
    \       RRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=-1SU;UNTIL=19860427T070000Z\n      \
    \ TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n       END:DAYLIGHT\n\
    \       BEGIN:DAYLIGHT\n       DTSTART:19870405T020000\n       RRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU;UNTIL=20060402T070000Z\n\
    \       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n     \
    \  END:DAYLIGHT\n       BEGIN:DAYLIGHT\n       DTSTART:20070311T020000\n     \
    \  RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\n       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n\
    \       TZNAME:EDT\n       END:DAYLIGHT\n       BEGIN:STANDARD\n       DTSTART:20071104T020000\n\
    \       RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\n       TZOFFSETFROM:-0400\n  \
    \     TZOFFSETTO:-0500\n       TZNAME:EST\n       END:STANDARD\n       END:VTIMEZONE\n\
    \      This is an example showing time zone information for New York City\n  \
    \    using only the \"DTSTART\" property.  Note that this is only\n      suitable\
    \ for a recurring event that starts on or later than March\n      11, 2007 at\
    \ 03:00:00 EDT (i.e., the earliest effective transition\n      date and time)\
    \ and ends no later than March 9, 2008 at 01:59:59\n      EST (i.e., latest valid\
    \ date and time for EST in this scenario).\n      For example, this can be used\
    \ for a recurring event that occurs\n      every Friday, 8:00 A.M.-9:00 A.M.,\
    \ starting June 1, 2007, ending\n      December 31, 2007,\n       BEGIN:VTIMEZONE\n\
    \       TZID:America/New_York\n       LAST-MODIFIED:20050809T050000Z\n       BEGIN:STANDARD\n\
    \       DTSTART:20071104T020000\n       TZOFFSETFROM:-0400\n       TZOFFSETTO:-0500\n\
    \       TZNAME:EST\n       END:STANDARD\n       BEGIN:DAYLIGHT\n       DTSTART:20070311T020000\n\
    \       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n     \
    \  END:DAYLIGHT\n       END:VTIMEZONE\n      This is a simple example showing\
    \ the current time zone rules for\n      New York City using a \"RRULE\" recurrence\
    \ pattern.  Note that there\n      is no effective end date to either of the Standard\
    \ Time or\n      Daylight Time rules.  This information would be valid for a\n\
    \      recurring event starting today and continuing indefinitely.\n       BEGIN:VTIMEZONE\n\
    \       TZID:America/New_York\n       LAST-MODIFIED:20050809T050000Z\n       TZURL:http://zones.example.com/tz/America-New_York.ics\n\
    \       BEGIN:STANDARD\n       DTSTART:20071104T020000\n       RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\n\
    \       TZOFFSETFROM:-0400\n       TZOFFSETTO:-0500\n       TZNAME:EST\n     \
    \  END:STANDARD\n       BEGIN:DAYLIGHT\n       DTSTART:20070311T020000\n     \
    \  RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\n       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n\
    \       TZNAME:EDT\n       END:DAYLIGHT\n       END:VTIMEZONE\n      This is an\
    \ example showing a set of rules for a fictitious time\n      zone where the Daylight\
    \ Time rule has an effective end date (i.e.,\n      after that date, Daylight\
    \ Time is no longer observed).\n       BEGIN:VTIMEZONE\n       TZID:Fictitious\n\
    \       LAST-MODIFIED:19870101T000000Z\n       BEGIN:STANDARD\n       DTSTART:19671029T020000\n\
    \       RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n       TZOFFSETFROM:-0400\n \
    \      TZOFFSETTO:-0500\n       TZNAME:EST\n       END:STANDARD\n       BEGIN:DAYLIGHT\n\
    \       DTSTART:19870405T020000\n       RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=19980404T070000Z\n\
    \       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n     \
    \  END:DAYLIGHT\n       END:VTIMEZONE\n      This is an example showing a set\
    \ of rules for a fictitious time\n      zone where the first Daylight Time rule\
    \ has an effective end date.\n      There is a second Daylight Time rule that\
    \ picks up where the other\n      left off.\n       BEGIN:VTIMEZONE\n       TZID:Fictitious\n\
    \       LAST-MODIFIED:19870101T000000Z\n       BEGIN:STANDARD\n       DTSTART:19671029T020000\n\
    \       RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n       TZOFFSETFROM:-0400\n \
    \      TZOFFSETTO:-0500\n       TZNAME:EST\n       END:STANDARD\n       BEGIN:DAYLIGHT\n\
    \       DTSTART:19870405T020000\n       RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=19980404T070000Z\n\
    \       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n     \
    \  END:DAYLIGHT\n       BEGIN:DAYLIGHT\n       DTSTART:19990424T020000\n     \
    \  RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=4\n       TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n\
    \       TZNAME:EDT\n       END:DAYLIGHT\n       END:VTIMEZONE\n"
- title: 3.6.6.  Alarm Component
  contents:
  - "3.6.6.  Alarm Component\n   Component Name:  VALARM\n   Purpose:  Provide a grouping\
    \ of component properties that define an\n      alarm.\n   Format Definition:\
    \  A \"VALARM\" calendar component is defined by the\n      following notation:\n\
    \       alarmc     = \"BEGIN\" \":\" \"VALARM\" CRLF\n                    (audioprop\
    \ / dispprop / emailprop)\n                    \"END\" \":\" \"VALARM\" CRLF\n\
    \       audioprop  = *(\n                  ;\n                  ; 'action' and\
    \ 'trigger' are both REQUIRED,\n                  ; but MUST NOT occur more than\
    \ once.\n                  ;\n                  action / trigger /\n         \
    \         ;\n                  ; 'duration' and 'repeat' are both OPTIONAL,\n\
    \                  ; and MUST NOT occur more than once each;\n               \
    \   ; but if one occurs, so MUST the other.\n                  ;\n           \
    \       duration / repeat /\n                  ;\n                  ; The following\
    \ is OPTIONAL,\n                  ; but MUST NOT occur more than once.\n     \
    \             ;\n                  attach /\n                  ;\n           \
    \       ; The following is OPTIONAL,\n                  ; and MAY occur more than\
    \ once.\n                  ;\n                  x-prop / iana-prop\n         \
    \         ;\n                  )\n       dispprop   = *(\n                  ;\n\
    \                  ; The following are REQUIRED,\n                  ; but MUST\
    \ NOT occur more than once.\n                  ;\n                  action / description\
    \ / trigger /\n                  ;\n                  ; 'duration' and 'repeat'\
    \ are both OPTIONAL,\n                  ; and MUST NOT occur more than once each;\n\
    \                  ; but if one occurs, so MUST the other.\n                 \
    \ ;\n                  duration / repeat /\n                  ;\n            \
    \      ; The following is OPTIONAL,\n                  ; and MAY occur more than\
    \ once.\n                  ;\n                  x-prop / iana-prop\n         \
    \         ;\n                  )\n       emailprop  = *(\n                  ;\n\
    \                  ; The following are all REQUIRED,\n                  ; but\
    \ MUST NOT occur more than once.\n                  ;\n                  action\
    \ / description / trigger / summary /\n                  ;\n                 \
    \ ; The following is REQUIRED,\n                  ; and MAY occur more than once.\n\
    \                  ;\n                  attendee /\n                  ;\n    \
    \              ; 'duration' and 'repeat' are both OPTIONAL,\n                \
    \  ; and MUST NOT occur more than once each;\n                  ; but if one occurs,\
    \ so MUST the other.\n                  ;\n                  duration / repeat\
    \ /\n                  ;\n                  ; The following are OPTIONAL,\n  \
    \                ; and MAY occur more than once.\n                  ;\n      \
    \            attach / x-prop / iana-prop\n                  ;\n              \
    \    )\n   Description:  A \"VALARM\" calendar component is a grouping of\n  \
    \    component properties that is a reminder or alarm for an event or a\n    \
    \  to-do.  For example, it may be used to define a reminder for a\n      pending\
    \ event or an overdue to-do.\n      The \"VALARM\" calendar component MUST include\
    \ the \"ACTION\" and\n      \"TRIGGER\" properties.  The \"ACTION\" property further\
    \ constrains\n      the \"VALARM\" calendar component in the following ways:\n\
    \      When the action is \"AUDIO\", the alarm can also include one and\n    \
    \  only one \"ATTACH\" property, which MUST point to a sound resource,\n     \
    \ which is rendered when the alarm is triggered.\n      When the action is \"\
    DISPLAY\", the alarm MUST also include a\n      \"DESCRIPTION\" property, which\
    \ contains the text to be displayed\n      when the alarm is triggered.\n    \
    \  When the action is \"EMAIL\", the alarm MUST include a \"DESCRIPTION\"\n  \
    \    property, which contains the text to be used as the message body,\n     \
    \ a \"SUMMARY\" property, which contains the text to be used as the\n      message\
    \ subject, and one or more \"ATTENDEE\" properties, which\n      contain the email\
    \ address of attendees to receive the message.  It\n      can also include one\
    \ or more \"ATTACH\" properties, which are\n      intended to be sent as message\
    \ attachments.  When the alarm is\n      triggered, the email message is sent.\n\
    \      The \"VALARM\" calendar component MUST only appear within either a\n  \
    \    \"VEVENT\" or \"VTODO\" calendar component.  \"VALARM\" calendar\n      components\
    \ cannot be nested.  Multiple mutually independent\n      \"VALARM\" calendar\
    \ components can be specified for a single\n      \"VEVENT\" or \"VTODO\" calendar\
    \ component.\n      The \"TRIGGER\" property specifies when the alarm will be\
    \ triggered.\n      The \"TRIGGER\" property specifies a duration prior to the\
    \ start of\n      an event or a to-do.  The \"TRIGGER\" edge may be explicitly\
    \ set to\n      be relative to the \"START\" or \"END\" of the event or to-do\
    \ with the\n      \"RELATED\" parameter of the \"TRIGGER\" property.  The \"TRIGGER\"\
    \n      property value type can alternatively be set to an absolute\n      calendar\
    \ date with UTC time.\n      In an alarm set to trigger on the \"START\" of an\
    \ event or to-do,\n      the \"DTSTART\" property MUST be present in the associated\
    \ event or\n      to-do.  In an alarm in a \"VEVENT\" calendar component set to\n\
    \      trigger on the \"END\" of the event, either the \"DTEND\" property\n  \
    \    MUST be present, or the \"DTSTART\" and \"DURATION\" properties MUST\n  \
    \    both be present.  In an alarm in a \"VTODO\" calendar component set\n   \
    \   to trigger on the \"END\" of the to-do, either the \"DUE\" property\n    \
    \  MUST be present, or the \"DTSTART\" and \"DURATION\" properties MUST\n    \
    \  both be present.\n      The alarm can be defined such that it triggers repeatedly.\
    \  A\n      definition of an alarm with a repeating trigger MUST include both\n\
    \      the \"DURATION\" and \"REPEAT\" properties.  The \"DURATION\" property\n\
    \      specifies the delay period, after which the alarm will repeat.\n      The\
    \ \"REPEAT\" property specifies the number of additional\n      repetitions that\
    \ the alarm will be triggered.  This repetition\n      count is in addition to\
    \ the initial triggering of the alarm.  Both\n      of these properties MUST be\
    \ present in order to specify a\n      repeating alarm.  If one of these two properties\
    \ is absent, then\n      the alarm will not repeat beyond the initial trigger.\n\
    \      The \"ACTION\" property is used within the \"VALARM\" calendar\n      component\
    \ to specify the type of action invoked when the alarm is\n      triggered.  The\
    \ \"VALARM\" properties provide enough information for\n      a specific action\
    \ to be invoked.  It is typically the\n      responsibility of a \"Calendar User\
    \ Agent\" (CUA) to deliver the\n      alarm in the specified fashion.  An \"ACTION\"\
    \ property value of\n      AUDIO specifies an alarm that causes a sound to be\
    \ played to alert\n      the user; DISPLAY specifies an alarm that causes a text\
    \ message to\n      be displayed to the user; and EMAIL specifies an alarm that\
    \ causes\n      an electronic email message to be delivered to one or more email\n\
    \      addresses.\n      In an AUDIO alarm, if the optional \"ATTACH\" property\
    \ is included,\n      it MUST specify an audio sound resource.  The intention\
    \ is that\n      the sound will be played as the alarm effect.  If an \"ATTACH\"\
    \n      property is specified that does not refer to a sound resource, or\n  \
    \    if the specified sound resource cannot be rendered (because its\n      format\
    \ is unsupported, or because it cannot be retrieved), then\n      the CUA or other\
    \ entity responsible for playing the sound may\n      choose a fallback action,\
    \ such as playing a built-in default\n      sound, or playing no sound at all.\n\
    \      In a DISPLAY alarm, the intended alarm effect is for the text\n      value\
    \ of the \"DESCRIPTION\" property to be displayed to the user.\n      In an EMAIL\
    \ alarm, the intended alarm effect is for an email\n      message to be composed\
    \ and delivered to all the addresses\n      specified by the \"ATTENDEE\" properties\
    \ in the \"VALARM\" calendar\n      component.  The \"DESCRIPTION\" property of\
    \ the \"VALARM\" calendar\n      component MUST be used as the body text of the\
    \ message, and the\n      \"SUMMARY\" property MUST be used as the subject text.\
    \  Any \"ATTACH\"\n      properties in the \"VALARM\" calendar component SHOULD\
    \ be sent as\n      attachments to the message.\n         Note: Implementations\
    \ should carefully consider whether they\n         accept alarm components from\
    \ untrusted sources, e.g., when\n         importing calendar objects from external\
    \ sources.  One\n         reasonable policy is to always ignore alarm components\
    \ that the\n         calendar user has not set herself, or at least ask for\n\
    \         confirmation in such a case.\n   Example:  The following example is\
    \ for a \"VALARM\" calendar component\n      that specifies an audio alarm that\
    \ will sound at a precise time\n      and repeat 4 more times at 15-minute intervals:\n\
    \       BEGIN:VALARM\n       TRIGGER;VALUE=DATE-TIME:19970317T133000Z\n      \
    \ REPEAT:4\n       DURATION:PT15M\n       ACTION:AUDIO\n       ATTACH;FMTTYPE=audio/basic:ftp://example.com/pub/\n\
    \        sounds/bell-01.aud\n       END:VALARM\n      The following example is\
    \ for a \"VALARM\" calendar component that\n      specifies a display alarm that\
    \ will trigger 30 minutes before the\n      scheduled start of the event or of\
    \ the to-do it is associated with\n      and will repeat 2 more times at 15-minute\
    \ intervals:\n       BEGIN:VALARM\n       TRIGGER:-PT30M\n       REPEAT:2\n  \
    \     DURATION:PT15M\n       ACTION:DISPLAY\n       DESCRIPTION:Breakfast meeting\
    \ with executive\\n\n        team at 8:30 AM EST.\n       END:VALARM\n      The\
    \ following example is for a \"VALARM\" calendar component that\n      specifies\
    \ an email alarm that will trigger 2 days before the\n      scheduled due DATE-TIME\
    \ of a to-do with which it is associated.\n      It does not repeat.  The email\
    \ has a subject, body, and attachment\n      link.\n       BEGIN:VALARM\n    \
    \   TRIGGER;RELATED=END:-P2D\n       ACTION:EMAIL\n       ATTENDEE:mailto:john_doe@example.com\n\
    \       SUMMARY:*** REMINDER: SEND AGENDA FOR WEEKLY STAFF MEETING ***\n     \
    \  DESCRIPTION:A draft agenda needs to be sent out to the attendees\n        \
    \ to the weekly managers meeting (MGR-LIST). Attached is a\n         pointer the\
    \ document template for the agenda file.\n       ATTACH;FMTTYPE=application/msword:http://example.com/\n\
    \        templates/agenda.doc\n       END:VALARM\n"
- title: 3.7.  Calendar Properties
  contents:
  - "3.7.  Calendar Properties\n   The Calendar Properties are attributes that apply\
    \ to the iCalendar\n   object, as a whole.  These properties do not appear within\
    \ a calendar\n   component.  They SHOULD be specified after the \"BEGIN:VCALENDAR\"\
    \n   delimiter string and prior to any calendar component.\n"
- title: 3.7.1.  Calendar Scale
  contents:
  - "3.7.1.  Calendar Scale\n   Property Name:  CALSCALE\n   Purpose:  This property\
    \ defines the calendar scale used for the\n      calendar information specified\
    \ in the iCalendar object.\n   Value Type:  TEXT\n   Property Parameters:  IANA\
    \ and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  This property can be specified once in an iCalendar\n      object.\
    \  The default value is \"GREGORIAN\".\n   Description:  This memo is based on\
    \ the Gregorian calendar scale.\n      The Gregorian calendar scale is assumed\
    \ if this property is not\n      specified in the iCalendar object.  It is expected\
    \ that other\n      calendar scales will be defined in other specifications or\
    \ by\n      future versions of this memo.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       calscale   = \"CALSCALE\"\
    \ calparam \":\" calvalue CRLF\n       calparam   = *(\";\" other-param)\n   \
    \    calvalue   = \"GREGORIAN\"\n   Example:  The following is an example of this\
    \ property:\n       CALSCALE:GREGORIAN\n"
- title: 3.7.2.  Method
  contents:
  - "3.7.2.  Method\n   Property Name:  METHOD\n   Purpose:  This property defines\
    \ the iCalendar object method\n      associated with the calendar object.\n  \
    \ Value Type:  TEXT\n   Property Parameters:  IANA and non-standard property parameters\
    \ can\n      be specified on this property.\n   Conformance:  This property can\
    \ be specified once in an iCalendar\n      object.\n   Description:  When used\
    \ in a MIME message entity, the value of this\n      property MUST be the same\
    \ as the Content-Type \"method\" parameter\n      value.  If either the \"METHOD\"\
    \ property or the Content-Type\n      \"method\" parameter is specified, then\
    \ the other MUST also be\n      specified.\n      No methods are defined by this\
    \ specification.  This is the subject\n      of other specifications, such as\
    \ the iCalendar Transport-\n      independent Interoperability Protocol (iTIP)\
    \ defined by [2446bis].\n      If this property is not present in the iCalendar\
    \ object, then a\n      scheduling transaction MUST NOT be assumed.  In such cases,\
    \ the\n      iCalendar object is merely being used to transport a snapshot of\n\
    \      some calendar information; without the intention of conveying a\n     \
    \ scheduling semantic.\n   Format Definition:  This property is defined by the\
    \ following\n      notation:\n       method     = \"METHOD\" metparam \":\" metvalue\
    \ CRLF\n       metparam   = *(\";\" other-param)\n       metvalue   = iana-token\n\
    \   Example:  The following is a hypothetical example of this property to\n  \
    \    convey that the iCalendar object is a scheduling request:\n       METHOD:REQUEST\n"
- title: 3.7.3.  Product Identifier
  contents:
  - "3.7.3.  Product Identifier\n   Property Name:  PRODID\n   Purpose:  This property\
    \ specifies the identifier for the product that\n      created the iCalendar object.\n\
    \   Value Type:  TEXT\n   Property Parameters:  IANA and non-standard property\
    \ parameters can\n      be specified on this property.\n   Conformance:  The property\
    \ MUST be specified once in an iCalendar\n      object.\n   Description:  The\
    \ vendor of the implementation SHOULD assure that\n      this is a globally unique\
    \ identifier; using some technique such as\n      an FPI value, as defined in\
    \ [ISO.9070.1991].\n      This property SHOULD NOT be used to alter the interpretation\
    \ of an\n      iCalendar object beyond the semantics specified in this memo. \
    \ For\n      example, it is not to be used to further the understanding of non-\n\
    \      standard properties.\n   Format Definition:  This property is defined by\
    \ the following\n      notation:\n       prodid     = \"PRODID\" pidparam \":\"\
    \ pidvalue CRLF\n       pidparam   = *(\";\" other-param)\n       pidvalue   =\
    \ text\n       ;Any text that describes the product and version\n       ;and that\
    \ is generally assured of being unique.\n   Example:  The following is an example\
    \ of this property.  It does not\n      imply that English is the default language.\n\
    \       PRODID:-//ABC Corporation//NONSGML My Product//EN\n"
- title: 3.7.4.  Version
  contents:
  - "3.7.4.  Version\n   Property Name:  VERSION\n   Purpose:  This property specifies\
    \ the identifier corresponding to the\n      highest version number or the minimum\
    \ and maximum range of the\n      iCalendar specification that is required in\
    \ order to interpret the\n      iCalendar object.\n   Value Type:  TEXT\n   Property\
    \ Parameters:  IANA and non-standard property parameters can\n      be specified\
    \ on this property.\n   Conformance:  This property MUST be specified once in\
    \ an iCalendar\n      object.\n   Description:  A value of \"2.0\" corresponds\
    \ to this memo.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       version    = \"VERSION\" verparam \":\" vervalue CRLF\n\
    \       verparam   = *(\";\" other-param)\n       vervalue   = \"2.0\"       \
    \  ;This memo\n                  / maxver\n                  / (minver \";\" maxver)\n\
    \       minver     = <A IANA-registered iCalendar version identifier>\n      \
    \ ;Minimum iCalendar version needed to parse the iCalendar object.\n       maxver\
    \     = <A IANA-registered iCalendar version identifier>\n       ;Maximum iCalendar\
    \ version needed to parse the iCalendar object.\n   Example:  The following is\
    \ an example of this property:\n       VERSION:2.0\n"
- title: 3.8.  Component Properties
  contents:
  - "3.8.  Component Properties\n   The following properties can appear within calendar\
    \ components, as\n   specified by each component property definition.\n"
- title: 3.8.1.  Descriptive Component Properties
  contents:
  - "3.8.1.  Descriptive Component Properties\n   The following properties specify\
    \ descriptive information about\n   calendar components.\n"
- title: 3.8.1.1.  Attachment
  contents:
  - "3.8.1.1.  Attachment\n   Property Name:  ATTACH\n   Purpose:  This property provides\
    \ the capability to associate a\n      document object with a calendar component.\n\
    \   Value Type:  The default value type for this property is URI.  The\n     \
    \ value type can also be set to BINARY to indicate inline binary\n      encoded\
    \ content information.\n   Property Parameters:  IANA, non-standard, inline encoding,\
    \ and value\n      data type property parameters can be specified on this property.\n\
    \      The format type parameter can be specified on this property and is\n  \
    \    RECOMMENDED for inline binary encoded content information.\n   Conformance:\
    \  This property can be specified multiple times in a\n      \"VEVENT\", \"VTODO\"\
    , \"VJOURNAL\", or \"VALARM\" calendar component with\n      the exception of\
    \ AUDIO alarm that only allows this property to\n      occur once.\n   Description:\
    \  This property is used in \"VEVENT\", \"VTODO\", and\n      \"VJOURNAL\" calendar\
    \ components to associate a resource (e.g.,\n      document) with the calendar\
    \ component.  This property is used in\n      \"VALARM\" calendar components to\
    \ specify an audio sound resource or\n      an email message attachment.  This\
    \ property can be specified as a\n      URI pointing to a resource or as inline\
    \ binary encoded content.\n      When this property is specified as inline binary\
    \ encoded content,\n      calendar applications MAY attempt to guess the media\
    \ type of the\n      resource via inspection of its content if and only if the\
    \ media\n      type of the resource is not given by the \"FMTTYPE\" parameter.\
    \  If\n      the media type remains unknown, calendar applications SHOULD treat\n\
    \      it as type \"application/octet-stream\".\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       attach     = \"ATTACH\"\
    \ attachparam ( \":\" uri ) /\n                    (\n                      \"\
    ;\" \"ENCODING\" \"=\" \"BASE64\"\n                      \";\" \"VALUE\" \"=\"\
    \ \"BINARY\"\n                      \":\" binary\n                    )\n    \
    \                CRLF\n       attachparam = *(\n                   ;\n       \
    \            ; The following is OPTIONAL for a URI value,\n                  \
    \ ; RECOMMENDED for a BINARY value,\n                   ; and MUST NOT occur more\
    \ than once.\n                   ;\n                   (\";\" fmttypeparam) /\n\
    \                   ;\n                   ; The following is OPTIONAL,\n     \
    \              ; and MAY occur more than once.\n                   ;\n       \
    \            (\";\" other-param)\n                   ;\n                   )\n\
    \   Example:  The following are examples of this property:\n       ATTACH:CID:jsmith.part3.960817T083000.xyzMail@example.com\n\
    \       ATTACH;FMTTYPE=application/postscript:ftp://example.com/pub/\n       \
    \ reports/r-960812.ps\n"
- title: 3.8.1.2.  Categories
  contents:
  - "3.8.1.2.  Categories\n   Property Name:  CATEGORIES\n   Purpose:  This property\
    \ defines the categories for a calendar\n      component.\n   Value Type:  TEXT\n\
    \   Property Parameters:  IANA, non-standard, and language property\n      parameters\
    \ can be specified on this property.\n   Conformance:  The property can be specified\
    \ within \"VEVENT\", \"VTODO\",\n      or \"VJOURNAL\" calendar components.\n\
    \   Description:  This property is used to specify categories or subtypes\n  \
    \    of the calendar component.  The categories are useful in searching\n    \
    \  for a calendar component of a particular type and category.\n      Within the\
    \ \"VEVENT\", \"VTODO\", or \"VJOURNAL\" calendar components,\n      more than\
    \ one category can be specified as a COMMA-separated list\n      of categories.\n\
    \   Format Definition:  This property is defined by the following\n      notation:\n\
    \       categories = \"CATEGORIES\" catparam \":\" text *(\",\" text)\n      \
    \              CRLF\n       catparam   = *(\n                  ;\n           \
    \       ; The following is OPTIONAL,\n                  ; but MUST NOT occur more\
    \ than once.\n                  ;\n                  (\";\" languageparam ) /\n\
    \                  ;\n                  ; The following is OPTIONAL,\n       \
    \           ; and MAY occur more than once.\n                  ;\n           \
    \       (\";\" other-param)\n                  ;\n                  )\n   Example:\
    \  The following are examples of this property:\n       CATEGORIES:APPOINTMENT,EDUCATION\n\
    \       CATEGORIES:MEETING\n"
- title: 3.8.1.3.  Classification
  contents:
  - "3.8.1.3.  Classification\n   Property Name:  CLASS\n   Purpose:  This property\
    \ defines the access classification for a\n      calendar component.\n   Value\
    \ Type:  TEXT\n   Property Parameters:  IANA and non-standard property parameters\
    \ can\n      be specified on this property.\n   Conformance:  The property can\
    \ be specified once in a \"VEVENT\",\n      \"VTODO\", or \"VJOURNAL\" calendar\
    \ components.\n   Description:  An access classification is only one component\
    \ of the\n      general security system within a calendar application.  It\n \
    \     provides a method of capturing the scope of the access the\n      calendar\
    \ owner intends for information within an individual\n      calendar entry.  The\
    \ access classification of an individual\n      iCalendar component is useful\
    \ when measured along with the other\n      security components of a calendar\
    \ system (e.g., calendar user\n      authentication, authorization, access rights,\
    \ access role, etc.).\n      Hence, the semantics of the individual access classifications\n\
    \      cannot be completely defined by this memo alone.  Additionally,\n     \
    \ due to the \"blind\" nature of most exchange processes using this\n      memo,\
    \ these access classifications cannot serve as an enforcement\n      statement\
    \ for a system receiving an iCalendar object.  Rather,\n      they provide a method\
    \ for capturing the intention of the calendar\n      owner for the access to the\
    \ calendar component.  If not specified\n      in a component that allows this\
    \ property, the default value is\n      PUBLIC.  Applications MUST treat x-name\
    \ and iana-token values they\n      don't recognize the same way as they would\
    \ the PRIVATE value.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       class      = \"CLASS\" classparam \":\" classvalue CRLF\n\
    \       classparam = *(\";\" other-param)\n       classvalue = \"PUBLIC\" / \"\
    PRIVATE\" / \"CONFIDENTIAL\" / iana-token\n                  / x-name\n      \
    \ ;Default is PUBLIC\n   Example:  The following is an example of this property:\n\
    \       CLASS:PUBLIC\n"
- title: 3.8.1.4.  Comment
  contents:
  - "3.8.1.4.  Comment\n   Property Name:  COMMENT\n   Purpose:  This property specifies\
    \ non-processing information intended\n      to provide a comment to the calendar\
    \ user.\n   Value Type:  TEXT\n   Property Parameters:  IANA, non-standard, alternate\
    \ text\n      representation, and language property parameters can be specified\n\
    \      on this property.\n   Conformance:  This property can be specified multiple\
    \ times in\n      \"VEVENT\", \"VTODO\", \"VJOURNAL\", and \"VFREEBUSY\" calendar\
    \ components\n      as well as in the \"STANDARD\" and \"DAYLIGHT\" sub-components.\n\
    \   Description:  This property is used to specify a comment to the\n      calendar\
    \ user.\n   Format Definition:  This property is defined by the following\n  \
    \    notation:\n       comment    = \"COMMENT\" commparam \":\" text CRLF\n  \
    \     commparam  = *(\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  (\";\" altrepparam) / (\";\" languageparam)\
    \ /\n                  ;\n                  ; The following is OPTIONAL,\n   \
    \               ; and MAY occur more than once.\n                  ;\n       \
    \           (\";\" other-param)\n                  ;\n                  )\n  \
    \ Example:  The following is an example of this property:\n       COMMENT:The\
    \ meeting really needs to include both ourselves\n         and the customer. We\
    \ can't hold this meeting without them.\n         As a matter of fact\\, the venue\
    \ for the meeting ought to be at\n         their site. - - John\n"
- title: 3.8.1.5.  Description
  contents:
  - "3.8.1.5.  Description\n   Property Name:  DESCRIPTION\n   Purpose:  This property\
    \ provides a more complete description of the\n      calendar component than that\
    \ provided by the \"SUMMARY\" property.\n   Value Type:  TEXT\n   Property Parameters:\
    \  IANA, non-standard, alternate text\n      representation, and language property\
    \ parameters can be specified\n      on this property.\n   Conformance:  The property\
    \ can be specified in the \"VEVENT\", \"VTODO\",\n      \"VJOURNAL\", or \"VALARM\"\
    \ calendar components.  The property can be\n      specified multiple times only\
    \ within a \"VJOURNAL\" calendar\n      component.\n   Description:  This property\
    \ is used in the \"VEVENT\" and \"VTODO\" to\n      capture lengthy textual descriptions\
    \ associated with the activity.\n      This property is used in the \"VJOURNAL\"\
    \ calendar component to\n      capture one or more textual journal entries.\n\
    \      This property is used in the \"VALARM\" calendar component to\n      capture\
    \ the display text for a DISPLAY category of alarm, and to\n      capture the\
    \ body text for an EMAIL category of alarm.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       description = \"DESCRIPTION\"\
    \ descparam \":\" text CRLF\n       descparam   = *(\n                   ;\n \
    \                  ; The following are OPTIONAL,\n                   ; but MUST\
    \ NOT occur more than once.\n                   ;\n                   (\";\" altrepparam)\
    \ / (\";\" languageparam) /\n                   ;\n                   ; The following\
    \ is OPTIONAL,\n                   ; and MAY occur more than once.\n         \
    \          ;\n                   (\";\" other-param)\n                   ;\n \
    \                  )\n   Example:  The following is an example of this property\
    \ with formatted\n      line breaks in the property value:\n       DESCRIPTION:Meeting\
    \ to provide technical review for \"Phoenix\"\n         design.\\nHappy Face Conference\
    \ Room. Phoenix design team\n         MUST attend this meeting.\\nRSVP to team\
    \ leader.\n"
- title: 3.8.1.6.  Geographic Position
  contents:
  - "3.8.1.6.  Geographic Position\n   Property Name:  GEO\n   Purpose:  This property\
    \ specifies information related to the global\n      position for the activity\
    \ specified by a calendar component.\n   Value Type:  FLOAT.  The value MUST be\
    \ two SEMICOLON-separated FLOAT\n      values.\n   Property Parameters:  IANA\
    \ and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  This property can be specified in \"VEVENT\" or \"VTODO\"\n\
    \      calendar components.\n   Description:  This property value specifies latitude\
    \ and longitude,\n      in that order (i.e., \"LAT LON\" ordering).  The longitude\n\
    \      represents the location east or west of the prime meridian as a\n     \
    \ positive or negative real number, respectively.  The longitude and\n      latitude\
    \ values MAY be specified up to six decimal places, which\n      will allow for\
    \ accuracy to within one meter of geographical\n      position.  Receiving applications\
    \ MUST accept values of this\n      precision and MAY truncate values of greater\
    \ precision.\n      Values for latitude and longitude shall be expressed as decimal\n\
    \      fractions of degrees.  Whole degrees of latitude shall be\n      represented\
    \ by a two-digit decimal number ranging from 0 through\n      90.  Whole degrees\
    \ of longitude shall be represented by a decimal\n      number ranging from 0\
    \ through 180.  When a decimal fraction of a\n      degree is specified, it shall\
    \ be separated from the whole number\n      of degrees by a decimal point.\n \
    \     Latitudes north of the equator shall be specified by a plus sign\n     \
    \ (+), or by the absence of a minus sign (-), preceding the digits\n      designating\
    \ degrees.  Latitudes south of the Equator shall be\n      designated by a minus\
    \ sign (-) preceding the digits designating\n      degrees.  A point on the Equator\
    \ shall be assigned to the Northern\n      Hemisphere.\n      Longitudes east\
    \ of the prime meridian shall be specified by a plus\n      sign (+), or by the\
    \ absence of a minus sign (-), preceding the\n      digits designating degrees.\
    \  Longitudes west of the meridian shall\n      be designated by minus sign (-)\
    \ preceding the digits designating\n      degrees.  A point on the prime meridian\
    \ shall be assigned to the\n      Eastern Hemisphere.  A point on the 180th meridian\
    \ shall be\n      assigned to the Western Hemisphere.  One exception to this last\n\
    \      convention is permitted.  For the special condition of describing\n   \
    \   a band of latitude around the earth, the East Bounding Coordinate\n      data\
    \ element shall be assigned the value +180 (180) degrees.\n      Any spatial address\
    \ with a latitude of +90 (90) or -90 degrees\n      will specify the position\
    \ at the North or South Pole,\n      respectively.  The component for longitude\
    \ may have any legal\n      value.\n      With the exception of the special condition\
    \ described above, this\n      form is specified in [ANSI INCITS 61-1986].\n \
    \     The simple formula for converting degrees-minutes-seconds into\n      decimal\
    \ degrees is:\n      decimal = degrees + minutes/60 + seconds/3600.\n   Format\
    \ Definition:  This property is defined by the following\n      notation:\n  \
    \     geo        = \"GEO\" geoparam \":\" geovalue CRLF\n       geoparam   = *(\"\
    ;\" other-param)\n       geovalue   = float \";\" float\n       ;Latitude and\
    \ Longitude components\n   Example:  The following is an example of this property:\n\
    \       GEO:37.386013;-122.082932\n"
- title: 3.8.1.7.  Location
  contents:
  - "3.8.1.7.  Location\n   Property Name:  LOCATION\n   Purpose:  This property defines\
    \ the intended venue for the activity\n      defined by a calendar component.\n\
    \   Value Type:  TEXT\n   Property Parameters:  IANA, non-standard, alternate\
    \ text\n      representation, and language property parameters can be specified\n\
    \      on this property.\n   Conformance:  This property can be specified in \"\
    VEVENT\" or \"VTODO\"\n      calendar component.\n   Description:  Specific venues\
    \ such as conference or meeting rooms may\n      be explicitly specified using\
    \ this property.  An alternate\n      representation may be specified that is\
    \ a URI that points to\n      directory information with more structured specification\
    \ of the\n      location.  For example, the alternate representation may specify\n\
    \      either an LDAP URL [RFC4516] pointing to an LDAP server entry or a\n  \
    \    CID URL [RFC2392] pointing to a MIME body part containing a\n      Virtual-Information\
    \ Card (vCard) [RFC2426] for the location.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       location   = \"LOCATION\"\
    \  locparam \":\" text CRLF\n       locparam   = *(\n                  ;\n   \
    \               ; The following are OPTIONAL,\n                  ; but MUST NOT\
    \ occur more than once.\n                  ;\n                  (\";\" altrepparam)\
    \ / (\";\" languageparam) /\n                  ;\n                  ; The following\
    \ is OPTIONAL,\n                  ; and MAY occur more than once.\n          \
    \        ;\n                  (\";\" other-param)\n                  ;\n     \
    \             )\n   Example:  The following are some examples of this property:\n\
    \       LOCATION:Conference Room - F123\\, Bldg. 002\n       LOCATION;ALTREP=\"\
    http://xyzcorp.com/conf-rooms/f123.vcf\":\n        Conference Room - F123\\, Bldg.\
    \ 002\n"
- title: 3.8.1.8.  Percent Complete
  contents:
  - "3.8.1.8.  Percent Complete\n   Property Name:  PERCENT-COMPLETE\n   Purpose:\
    \  This property is used by an assignee or delegatee of a\n      to-do to convey\
    \ the percent completion of a to-do to the\n      \"Organizer\".\n   Value Type:\
    \  INTEGER\n   Property Parameters:  IANA and non-standard property parameters\
    \ can\n      be specified on this property.\n   Conformance:  This property can\
    \ be specified once in a \"VTODO\"\n      calendar component.\n   Description:\
    \  The property value is a positive integer between 0 and\n      100.  A value\
    \ of \"0\" indicates the to-do has not yet been started.\n      A value of \"\
    100\" indicates that the to-do has been completed.\n      Integer values in between\
    \ indicate the percent partially complete.\n      When a to-do is assigned to\
    \ multiple individuals, the property\n      value indicates the percent complete\
    \ for that portion of the to-do\n      assigned to the assignee or delegatee.\
    \  For example, if a to-do is\n      assigned to both individuals \"A\" and \"\
    B\".  A reply from \"A\" with a\n      percent complete of \"70\" indicates that\
    \ \"A\" has completed 70% of\n      the to-do assigned to them.  A reply from\
    \ \"B\" with a percent\n      complete of \"50\" indicates \"B\" has completed\
    \ 50% of the to-do\n      assigned to them.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       percent = \"PERCENT-COMPLETE\"\
    \ pctparam \":\" integer CRLF\n       pctparam   = *(\";\" other-param)\n   Example:\
    \  The following is an example of this property to show 39%\n      completion:\n\
    \       PERCENT-COMPLETE:39\n"
- title: 3.8.1.9.  Priority
  contents:
  - "3.8.1.9.  Priority\n   Property Name:  PRIORITY\n   Purpose:  This property defines\
    \ the relative priority for a calendar\n      component.\n   Value Type:  INTEGER\n\
    \   Property Parameters:  IANA and non-standard property parameters can\n    \
    \  be specified on this property.\n   Conformance:  This property can be specified\
    \ in \"VEVENT\" and \"VTODO\"\n      calendar components.\n   Description:  This\
    \ priority is specified as an integer in the range 0\n      to 9.  A value of\
    \ 0 specifies an undefined priority.  A value of 1\n      is the highest priority.\
    \  A value of 2 is the second highest\n      priority.  Subsequent numbers specify\
    \ a decreasing ordinal\n      priority.  A value of 9 is the lowest priority.\n\
    \      A CUA with a three-level priority scheme of \"HIGH\", \"MEDIUM\", and\n\
    \      \"LOW\" is mapped into this property such that a property value in\n  \
    \    the range of 1 to 4 specifies \"HIGH\" priority.  A value of 5 is\n     \
    \ the normal or \"MEDIUM\" priority.  A value in the range of 6 to 9\n      is\
    \ \"LOW\" priority.\n      A CUA with a priority schema of \"A1\", \"A2\", \"\
    A3\", \"B1\", \"B2\", ...,\n      \"C3\" is mapped into this property such that\
    \ a property value of 1\n      specifies \"A1\", a property value of 2 specifies\
    \ \"A2\", a property\n      value of 3 specifies \"A3\", and so forth up to a\
    \ property value of\n      9 specifies \"C3\".\n      Other integer values are\
    \ reserved for future use.\n      Within a \"VEVENT\" calendar component, this\
    \ property specifies a\n      priority for the event.  This property may be useful\
    \ when more\n      than one event is scheduled for a given time period.\n    \
    \  Within a \"VTODO\" calendar component, this property specified a\n      priority\
    \ for the to-do.  This property is useful in prioritizing\n      multiple action\
    \ items for a given time period.\n   Format Definition:  This property is defined\
    \ by the following\n      notation:\n       priority   = \"PRIORITY\" prioparam\
    \ \":\" priovalue CRLF\n       ;Default is zero (i.e., undefined).\n       prioparam\
    \  = *(\";\" other-param)\n       priovalue   = integer       ;Must be in the\
    \ range [0..9]\n          ; All other values are reserved for future use.\n  \
    \ Example:  The following is an example of a property with the highest\n     \
    \ priority:\n       PRIORITY:1\n      The following is an example of a property\
    \ with a next highest\n      priority:\n       PRIORITY:2\n      The following\
    \ is an example of a property with no priority.  This\n      is equivalent to\
    \ not specifying the \"PRIORITY\" property:\n       PRIORITY:0\n"
- title: 3.8.1.10.  Resources
  contents:
  - "3.8.1.10.  Resources\n   Property Name:  RESOURCES\n   Purpose:  This property\
    \ defines the equipment or resources\n      anticipated for an activity specified\
    \ by a calendar component.\n   Value Type:  TEXT\n   Property Parameters:  IANA,\
    \ non-standard, alternate text\n      representation, and language property parameters\
    \ can be specified\n      on this property.\n   Conformance:  This property can\
    \ be specified once in \"VEVENT\" or\n      \"VTODO\" calendar component.\n  \
    \ Description:  The property value is an arbitrary text.  More than one\n    \
    \  resource can be specified as a COMMA-separated list of resources.\n   Format\
    \ Definition:  This property is defined by the following\n      notation:\n  \
    \     resources  = \"RESOURCES\" resrcparam \":\" text *(\",\" text) CRLF\n  \
    \     resrcparam = *(\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  (\";\" altrepparam) / (\";\" languageparam)\
    \ /\n                  ;\n                  ; The following is OPTIONAL,\n   \
    \               ; and MAY occur more than once.\n                  ;\n       \
    \           (\";\" other-param)\n                  ;\n                  )\n  \
    \ Example:  The following is an example of this property:\n       RESOURCES:EASEL,PROJECTOR,VCR\n\
    \       RESOURCES;LANGUAGE=fr:Nettoyeur haute pression\n"
- title: 3.8.1.11.  Status
  contents:
  - "3.8.1.11.  Status\n   Property Name:  STATUS\n   Purpose:  This property defines\
    \ the overall status or confirmation\n      for the calendar component.\n   Value\
    \ Type:  TEXT\n   Property Parameters:  IANA and non-standard property parameters\
    \ can\n      be specified on this property.\n   Conformance:  This property can\
    \ be specified once in \"VEVENT\",\n      \"VTODO\", or \"VJOURNAL\" calendar\
    \ components.\n   Description:  In a group-scheduled calendar component, the property\n\
    \      is used by the \"Organizer\" to provide a confirmation of the event\n \
    \     to the \"Attendees\".  For example in a \"VEVENT\" calendar component,\n\
    \      the \"Organizer\" can indicate that a meeting is tentative,\n      confirmed,\
    \ or cancelled.  In a \"VTODO\" calendar component, the\n      \"Organizer\" can\
    \ indicate that an action item needs action, is\n      completed, is in process\
    \ or being worked on, or has been\n      cancelled.  In a \"VJOURNAL\" calendar\
    \ component, the \"Organizer\"\n      can indicate that a journal entry is draft,\
    \ final, or has been\n      cancelled or removed.\n   Format Definition:  This\
    \ property is defined by the following\n      notation:\n       status       \
    \   = \"STATUS\" statparam \":\" statvalue CRLF\n       statparam       = *(\"\
    ;\" other-param)\n       statvalue       = (statvalue-event\n                \
    \       /  statvalue-todo\n                       /  statvalue-jour)\n       statvalue-event\
    \ = \"TENTATIVE\"    ;Indicates event is tentative.\n                       /\
    \ \"CONFIRMED\"    ;Indicates event is definite.\n                       / \"\
    CANCELLED\"    ;Indicates event was cancelled.\n       ;Status values for a \"\
    VEVENT\"\n       statvalue-todo  = \"NEEDS-ACTION\" ;Indicates to-do needs action.\n\
    \                       / \"COMPLETED\"    ;Indicates to-do completed.\n     \
    \                  / \"IN-PROCESS\"   ;Indicates to-do in process of.\n      \
    \                 / \"CANCELLED\"    ;Indicates to-do was cancelled.\n       ;Status\
    \ values for \"VTODO\".\n       statvalue-jour  = \"DRAFT\"        ;Indicates\
    \ journal is draft.\n                       / \"FINAL\"        ;Indicates journal\
    \ is final.\n                       / \"CANCELLED\"    ;Indicates journal is removed.\n\
    \      ;Status values for \"VJOURNAL\".\n   Example:  The following is an example\
    \ of this property for a \"VEVENT\"\n      calendar component:\n       STATUS:TENTATIVE\n\
    \      The following is an example of this property for a \"VTODO\"\n      calendar\
    \ component:\n       STATUS:NEEDS-ACTION\n      The following is an example of\
    \ this property for a \"VJOURNAL\"\n      calendar component:\n       STATUS:DRAFT\n"
- title: 3.8.1.12.  Summary
  contents:
  - "3.8.1.12.  Summary\n   Property Name:  SUMMARY\n   Purpose:  This property defines\
    \ a short summary or subject for the\n      calendar component.\n   Value Type:\
    \  TEXT\n   Property Parameters:  IANA, non-standard, alternate text\n      representation,\
    \ and language property parameters can be specified\n      on this property.\n\
    \   Conformance:  The property can be specified in \"VEVENT\", \"VTODO\",\n  \
    \    \"VJOURNAL\", or \"VALARM\" calendar components.\n   Description:  This property\
    \ is used in the \"VEVENT\", \"VTODO\", and\n      \"VJOURNAL\" calendar components\
    \ to capture a short, one-line\n      summary about the activity or journal entry.\n\
    \      This property is used in the \"VALARM\" calendar component to\n      capture\
    \ the subject of an EMAIL category of alarm.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       summary    = \"SUMMARY\"\
    \ summparam \":\" text CRLF\n       summparam  = *(\n                  ;\n   \
    \               ; The following are OPTIONAL,\n                  ; but MUST NOT\
    \ occur more than once.\n                  ;\n                  (\";\" altrepparam)\
    \ / (\";\" languageparam) /\n                  ;\n                  ; The following\
    \ is OPTIONAL,\n                  ; and MAY occur more than once.\n          \
    \        ;\n                  (\";\" other-param)\n                  ;\n     \
    \             )\n   Example:  The following is an example of this property:\n\
    \       SUMMARY:Department Party\n"
- title: 3.8.2.  Date and Time Component Properties
  contents:
  - "3.8.2.  Date and Time Component Properties\n   The following properties specify\
    \ date and time related information in\n   calendar components.\n"
- title: 3.8.2.1.  Date-Time Completed
  contents:
  - "3.8.2.1.  Date-Time Completed\n   Property Name:  COMPLETED\n   Purpose:  This\
    \ property defines the date and time that a to-do was\n      actually completed.\n\
    \   Value Type:  DATE-TIME\n   Property Parameters:  IANA and non-standard property\
    \ parameters can\n      be specified on this property.\n   Conformance:  The property\
    \ can be specified in a \"VTODO\" calendar\n      component.  The value MUST be\
    \ specified as a date with UTC time.\n   Description:  This property defines the\
    \ date and time that a to-do\n      was actually completed.\n   Format Definition:\
    \  This property is defined by the following\n      notation:\n       completed\
    \  = \"COMPLETED\" compparam \":\" date-time CRLF\n       compparam  = *(\";\"\
    \ other-param)\n   Example:  The following is an example of this property:\n \
    \   COMPLETED:19960401T150000Z\n"
- title: 3.8.2.2.  Date-Time End
  contents:
  - "3.8.2.2.  Date-Time End\n   Property Name:  DTEND\n   Purpose:  This property\
    \ specifies the date and time that a calendar\n      component ends.\n   Value\
    \ Type:  The default value type is DATE-TIME.  The value type can\n      be set\
    \ to a DATE value type.\n   Property Parameters:  IANA, non-standard, value data\
    \ type, and time\n      zone identifier property parameters can be specified on\
    \ this\n      property.\n   Conformance:  This property can be specified in \"\
    VEVENT\" or\n      \"VFREEBUSY\" calendar components.\n   Description:  Within\
    \ the \"VEVENT\" calendar component, this property\n      defines the date and\
    \ time by which the event ends.  The value type\n      of this property MUST be\
    \ the same as the \"DTSTART\" property, and\n      its value MUST be later in\
    \ time than the value of the \"DTSTART\"\n      property.  Furthermore, this property\
    \ MUST be specified as a date\n      with local time if and only if the \"DTSTART\"\
    \ property is also\n      specified as a date with local time.\n      Within the\
    \ \"VFREEBUSY\" calendar component, this property defines\n      the end date\
    \ and time for the free or busy time information.  The\n      time MUST be specified\
    \ in the UTC time format.  The value MUST be\n      later in time than the value\
    \ of the \"DTSTART\" property.\n   Format Definition:  This property is defined\
    \ by the following\n      notation:\n       dtend      = \"DTEND\" dtendparam\
    \ \":\" dtendval CRLF\n       dtendparam = *(\n                  ;\n         \
    \         ; The following are OPTIONAL,\n                  ; but MUST NOT occur\
    \ more than once.\n                  ;\n                  (\";\" \"VALUE\" \"\
    =\" (\"DATE-TIME\" / \"DATE\")) /\n                  (\";\" tzidparam) /\n   \
    \               ;\n                  ; The following is OPTIONAL,\n          \
    \        ; and MAY occur more than once.\n                  ;\n              \
    \    (\";\" other-param)\n                  ;\n                  )\n       dtendval\
    \   = date-time / date\n       ;Value MUST match value type\n   Example:  The\
    \ following is an example of this property:\n       DTEND:19960401T150000Z\n \
    \      DTEND;VALUE=DATE:19980704\n"
- title: 3.8.2.3.  Date-Time Due
  contents:
  - "3.8.2.3.  Date-Time Due\n   Property Name:  DUE\n   Purpose:  This property defines\
    \ the date and time that a to-do is\n      expected to be completed.\n   Value\
    \ Type:  The default value type is DATE-TIME.  The value type can\n      be set\
    \ to a DATE value type.\n   Property Parameters:  IANA, non-standard, value data\
    \ type, and time\n      zone identifier property parameters can be specified on\
    \ this\n      property.\n   Conformance:  The property can be specified once in\
    \ a \"VTODO\"\n      calendar component.\n   Description:  This property defines\
    \ the date and time before which a\n      to-do is expected to be completed. \
    \ For cases where this property\n      is specified in a \"VTODO\" calendar component\
    \ that also specifies a\n      \"DTSTART\" property, the value type of this property\
    \ MUST be the\n      same as the \"DTSTART\" property, and the value of this property\n\
    \      MUST be later in time than the value of the \"DTSTART\" property.\n   \
    \   Furthermore, this property MUST be specified as a date with local\n      time\
    \ if and only if the \"DTSTART\" property is also specified as a\n      date with\
    \ local time.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       due        = \"DUE\" dueparam \":\" dueval CRLF\n   \
    \    dueparam   = *(\n                  ;\n                  ; The following are\
    \ OPTIONAL,\n                  ; but MUST NOT occur more than once.\n        \
    \          ;\n                  (\";\" \"VALUE\" \"=\" (\"DATE-TIME\" / \"DATE\"\
    )) /\n                  (\";\" tzidparam) /\n                  ;\n           \
    \       ; The following is OPTIONAL,\n                  ; and MAY occur more than\
    \ once.\n                  ;\n                  (\";\" other-param)\n        \
    \          ;\n                  )\n       dueval     = date-time / date\n    \
    \   ;Value MUST match value type\n   Example:  The following is an example of\
    \ this property:\n       DUE:19980430T000000Z\n"
- title: 3.8.2.4.  Date-Time Start
  contents:
  - "3.8.2.4.  Date-Time Start\n   Property Name:  DTSTART\n   Purpose:  This property\
    \ specifies when the calendar component begins.\n   Value Type:  The default value\
    \ type is DATE-TIME.  The time value\n      MUST be one of the forms defined for\
    \ the DATE-TIME value type.\n      The value type can be set to a DATE value type.\n\
    \   Property Parameters:  IANA, non-standard, value data type, and time\n    \
    \  zone identifier property parameters can be specified on this\n      property.\n\
    \   Conformance:  This property can be specified once in the \"VEVENT\",\n   \
    \   \"VTODO\", or \"VFREEBUSY\" calendar components as well as in the\n      \"\
    STANDARD\" and \"DAYLIGHT\" sub-components.  This property is\n      REQUIRED\
    \ in all types of recurring calendar components that\n      specify the \"RRULE\"\
    \ property.  This property is also REQUIRED in\n      \"VEVENT\" calendar components\
    \ contained in iCalendar objects that\n      don't specify the \"METHOD\" property.\n\
    \   Description:  Within the \"VEVENT\" calendar component, this property\n  \
    \    defines the start date and time for the event.\n      Within the \"VFREEBUSY\"\
    \ calendar component, this property defines\n      the start date and time for\
    \ the free or busy time information.\n      The time MUST be specified in UTC\
    \ time.\n      Within the \"STANDARD\" and \"DAYLIGHT\" sub-components, this property\n\
    \      defines the effective start date and time for a time zone\n      specification.\
    \  This property is REQUIRED within each \"STANDARD\"\n      and \"DAYLIGHT\"\
    \ sub-components included in \"VTIMEZONE\" calendar\n      components and MUST\
    \ be specified as a date with local time without\n      the \"TZID\" property\
    \ parameter.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       dtstart    = \"DTSTART\" dtstparam \":\" dtstval CRLF\n\
    \       dtstparam  = *(\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  (\";\" \"VALUE\" \"=\" (\"DATE-TIME\" / \"\
    DATE\")) /\n                  (\";\" tzidparam) /\n                  ;\n     \
    \             ; The following is OPTIONAL,\n                  ; and MAY occur\
    \ more than once.\n                  ;\n                  (\";\" other-param)\n\
    \                  ;\n                  )\n       dtstval    = date-time / date\n\
    \       ;Value MUST match value type\n   Example:  The following is an example\
    \ of this property:\n       DTSTART:19980118T073000Z\n"
- title: 3.8.2.5.  Duration
  contents:
  - "3.8.2.5.  Duration\n   Property Name:  DURATION\n   Purpose:  This property specifies\
    \ a positive duration of time.\n   Value Type:  DURATION\n   Property Parameters:\
    \  IANA and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  This property can be specified in \"VEVENT\", \"VTODO\", or\n\
    \      \"VALARM\" calendar components.\n   Description:  In a \"VEVENT\" calendar\
    \ component the property may be\n      used to specify a duration of the event,\
    \ instead of an explicit\n      end DATE-TIME.  In a \"VTODO\" calendar component\
    \ the property may\n      be used to specify a duration for the to-do, instead\
    \ of an\n      explicit due DATE-TIME.  In a \"VALARM\" calendar component the\n\
    \      property may be used to specify the delay period prior to\n      repeating\
    \ an alarm.  When the \"DURATION\" property relates to a\n      \"DTSTART\" property\
    \ that is specified as a DATE value, then the\n      \"DURATION\" property MUST\
    \ be specified as a \"dur-day\" or \"dur-week\"\n      value.\n   Format Definition:\
    \  This property is defined by the following\n      notation:\n       duration\
    \   = \"DURATION\" durparam \":\" dur-value CRLF\n                    ;consisting\
    \ of a positive duration of time.\n       durparam   = *(\";\" other-param)\n\
    \   Example:  The following is an example of this property that specifies\n  \
    \    an interval of time of one hour and zero minutes and zero seconds:\n    \
    \   DURATION:PT1H0M0S\n      The following is an example of this property that\
    \ specifies an\n      interval of time of 15 minutes.\n       DURATION:PT15M\n"
- title: 3.8.2.6.  Free/Busy Time
  contents:
  - "3.8.2.6.  Free/Busy Time\n   Property Name:  FREEBUSY\n   Purpose:  This property\
    \ defines one or more free or busy time\n      intervals.\n   Value Type:  PERIOD\n\
    \   Property Parameters:  IANA, non-standard, and free/busy time type\n      property\
    \ parameters can be specified on this property.\n   Conformance:  The property\
    \ can be specified in a \"VFREEBUSY\" calendar\n      component.\n   Description:\
    \  These time periods can be specified as either a start\n      and end DATE-TIME\
    \ or a start DATE-TIME and DURATION.  The date and\n      time MUST be a UTC time\
    \ format.\n      \"FREEBUSY\" properties within the \"VFREEBUSY\" calendar component\n\
    \      SHOULD be sorted in ascending order, based on start time and then\n   \
    \   end time, with the earliest periods first.\n      The \"FREEBUSY\" property\
    \ can specify more than one value, separated\n      by the COMMA character.  In\
    \ such cases, the \"FREEBUSY\" property\n      values MUST all be of the same\
    \ \"FBTYPE\" property parameter type\n      (e.g., all values of a particular\
    \ \"FBTYPE\" listed together in a\n      single property).\n   Format Definition:\
    \  This property is defined by the following\n      notation:\n       freebusy\
    \   = \"FREEBUSY\" fbparam \":\" fbvalue CRLF\n       fbparam    = *(\n      \
    \            ;\n                  ; The following is OPTIONAL,\n             \
    \     ; but MUST NOT occur more than once.\n                  ;\n            \
    \      (\";\" fbtypeparam) /\n                  ;\n                  ; The following\
    \ is OPTIONAL,\n                  ; and MAY occur more than once.\n          \
    \        ;\n                  (\";\" other-param)\n                  ;\n     \
    \             )\n       fbvalue    = period *(\",\" period)\n       ;Time value\
    \ MUST be in the UTC time format.\n   Example:  The following are some examples\
    \ of this property:\n       FREEBUSY;FBTYPE=BUSY-UNAVAILABLE:19970308T160000Z/PT8H30M\n\
    \       FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H\n   \
    \    FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H\n      \
    \  ,19970308T230000Z/19970309T000000Z\n"
- title: 3.8.2.7.  Time Transparency
  contents:
  - "3.8.2.7.  Time Transparency\n   Property Name:  TRANSP\n   Purpose:  This property\
    \ defines whether or not an event is\n      transparent to busy time searches.\n\
    \   Value Type:  TEXT\n   Property Parameters:  IANA and non-standard property\
    \ parameters can\n      be specified on this property.\n   Conformance:  This\
    \ property can be specified once in a \"VEVENT\"\n      calendar component.\n\
    \   Description:  Time Transparency is the characteristic of an event\n      that\
    \ determines whether it appears to consume time on a calendar.\n      Events that\
    \ consume actual time for the individual or resource\n      associated with the\
    \ calendar SHOULD be recorded as OPAQUE,\n      allowing them to be detected by\
    \ free/busy time searches.  Other\n      events, which do not take up the individual's\
    \ (or resource's) time\n      SHOULD be recorded as TRANSPARENT, making them invisible\
    \ to free/\n      busy time searches.\n   Format Definition:  This property is\
    \ defined by the following\n      notation:\n       transp     = \"TRANSP\" transparam\
    \ \":\" transvalue CRLF\n       transparam = *(\";\" other-param)\n       transvalue\
    \ = \"OPAQUE\"\n                   ;Blocks or opaque on busy time searches.\n\
    \                   / \"TRANSPARENT\"\n                   ;Transparent on busy\
    \ time searches.\n       ;Default value is OPAQUE\n   Example:  The following\
    \ is an example of this property for an event\n      that is transparent or does\
    \ not block on free/busy time searches:\n       TRANSP:TRANSPARENT\n      The\
    \ following is an example of this property for an event that is\n      opaque\
    \ or blocks on free/busy time searches:\n       TRANSP:OPAQUE\n"
- title: 3.8.3.  Time Zone Component Properties
  contents:
  - "3.8.3.  Time Zone Component Properties\n   The following properties specify time\
    \ zone information in calendar\n   components.\n"
- title: 3.8.3.1.  Time Zone Identifier
  contents:
  - "3.8.3.1.  Time Zone Identifier\n   Property Name:  TZID\n   Purpose:  This property\
    \ specifies the text value that uniquely\n      identifies the \"VTIMEZONE\" calendar\
    \ component in the scope of an\n      iCalendar object.\n   Value Type:  TEXT\n\
    \   Property Parameters:  IANA and non-standard property parameters can\n    \
    \  be specified on this property.\n   Conformance:  This property MUST be specified\
    \ in a \"VTIMEZONE\"\n      calendar component.\n   Description:  This is the\
    \ label by which a time zone calendar\n      component is referenced by any iCalendar\
    \ properties whose value\n      type is either DATE-TIME or TIME and not intended\
    \ to specify a UTC\n      or a \"floating\" time.  The presence of the SOLIDUS\
    \ character as a\n      prefix, indicates that this \"TZID\" represents an unique\
    \ ID in a\n      globally defined time zone registry (when such registry is\n\
    \      defined).\n         Note: This document does not define a naming convention\
    \ for\n         time zone identifiers.  Implementers may want to use the naming\n\
    \         conventions defined in existing time zone specifications such\n    \
    \     as the public-domain TZ database [TZDB].  The specification of\n       \
    \  globally unique time zone identifiers is not addressed by this\n         document\
    \ and is left for future study.\n   Format Definition:  This property is defined\
    \ by the following\n      notation:\n       tzid       = \"TZID\" tzidpropparam\
    \ \":\" [tzidprefix] text CRLF\n       tzidpropparam      = *(\";\" other-param)\n\
    \       ;tzidprefix        = \"/\"\n       ; Defined previously. Just listed here\
    \ for reader convenience.\n   Example:  The following are examples of non-globally\
    \ unique time zone\n      identifiers:\n       TZID:America/New_York\n       TZID:America/Los_Angeles\n\
    \      The following is an example of a fictitious globally unique time\n    \
    \  zone identifier:\n       TZID:/example.org/America/New_York\n"
- title: 3.8.3.2.  Time Zone Name
  contents:
  - "3.8.3.2.  Time Zone Name\n   Property Name:  TZNAME\n   Purpose:  This property\
    \ specifies the customary designation for a\n      time zone description.\n  \
    \ Value Type:  TEXT\n   Property Parameters:  IANA, non-standard, and language\
    \ property\n      parameters can be specified on this property.\n   Conformance:\
    \  This property can be specified in \"STANDARD\" and\n      \"DAYLIGHT\" sub-components.\n\
    \   Description:  This property specifies a customary name that can be\n     \
    \ used when displaying dates that occur during the observance\n      defined by\
    \ the time zone sub-component.\n   Format Definition:  This property is defined\
    \ by the following\n      notation:\n       tzname     = \"TZNAME\" tznparam \"\
    :\" text CRLF\n       tznparam   = *(\n                  ;\n                 \
    \ ; The following is OPTIONAL,\n                  ; but MUST NOT occur more than\
    \ once.\n                  ;\n                  (\";\" languageparam) /\n    \
    \              ;\n                  ; The following is OPTIONAL,\n           \
    \       ; and MAY occur more than once.\n                  ;\n               \
    \   (\";\" other-param)\n                  ;\n                  )\n   Example:\
    \  The following are examples of this property:\n       TZNAME:EST\n       TZNAME;LANGUAGE=fr-CA:HNE\n"
- title: 3.8.3.3.  Time Zone Offset From
  contents:
  - "3.8.3.3.  Time Zone Offset From\n   Property Name:  TZOFFSETFROM\n   Purpose:\
    \  This property specifies the offset that is in use prior to\n      this time\
    \ zone observance.\n   Value Type:  UTC-OFFSET\n   Property Parameters:  IANA\
    \ and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  This property MUST be specified in \"STANDARD\" and\n      \"\
    DAYLIGHT\" sub-components.\n   Description:  This property specifies the offset\
    \ that is in use prior\n      to this time observance.  It is used to calculate\
    \ the absolute\n      time at which the transition to a given observance takes\
    \ place.\n      This property MUST only be specified in a \"VTIMEZONE\" calendar\n\
    \      component.  A \"VTIMEZONE\" calendar component MUST include this\n    \
    \  property.  The property value is a signed numeric indicating the\n      number\
    \ of hours and possibly minutes from UTC.  Positive numbers\n      represent time\
    \ zones east of the prime meridian, or ahead of UTC.\n      Negative numbers represent\
    \ time zones west of the prime meridian,\n      or behind UTC.\n   Format Definition:\
    \  This property is defined by the following\n      notation:\n       tzoffsetfrom\
    \       = \"TZOFFSETFROM\" frmparam \":\" utc-offset\n                       \
    \     CRLF\n       frmparam   = *(\";\" other-param)\n   Example:  The following\
    \ are examples of this property:\n       TZOFFSETFROM:-0500\n       TZOFFSETFROM:+1345\n"
- title: 3.8.3.4.  Time Zone Offset To
  contents:
  - "3.8.3.4.  Time Zone Offset To\n   Property Name:  TZOFFSETTO\n   Purpose:  This\
    \ property specifies the offset that is in use in this\n      time zone observance.\n\
    \   Value Type:  UTC-OFFSET\n   Property Parameters:  IANA and non-standard property\
    \ parameters can\n      be specified on this property.\n   Conformance:  This\
    \ property MUST be specified in \"STANDARD\" and\n      \"DAYLIGHT\" sub-components.\n\
    \   Description:  This property specifies the offset that is in use in\n     \
    \ this time zone observance.  It is used to calculate the absolute\n      time\
    \ for the new observance.  The property value is a signed\n      numeric indicating\
    \ the number of hours and possibly minutes from\n      UTC.  Positive numbers\
    \ represent time zones east of the prime\n      meridian, or ahead of UTC.  Negative\
    \ numbers represent time zones\n      west of the prime meridian, or behind UTC.\n\
    \   Format Definition:  This property is defined by the following\n      notation:\n\
    \       tzoffsetto = \"TZOFFSETTO\" toparam \":\" utc-offset CRLF\n       toparam\
    \    = *(\";\" other-param)\n   Example:  The following are examples of this property:\n\
    \       TZOFFSETTO:-0400\n       TZOFFSETTO:+1245\n"
- title: 3.8.3.5.  Time Zone URL
  contents:
  - "3.8.3.5.  Time Zone URL\n   Property Name:  TZURL\n   Purpose:  This property\
    \ provides a means for a \"VTIMEZONE\" component\n      to point to a network\
    \ location that can be used to retrieve an up-\n      to-date version of itself.\n\
    \   Value Type:  URI\n   Property Parameters:  IANA and non-standard property\
    \ parameters can\n      be specified on this property.\n   Conformance:  This\
    \ property can be specified in a \"VTIMEZONE\"\n      calendar component.\n  \
    \ Description:  This property provides a means for a \"VTIMEZONE\"\n      component\
    \ to point to a network location that can be used to\n      retrieve an up-to-date\
    \ version of itself.  This provides a hook to\n      handle changes government\
    \ bodies impose upon time zone\n      definitions.  Retrieval of this resource\
    \ results in an iCalendar\n      object containing a single \"VTIMEZONE\" component\
    \ and a \"METHOD\"\n      property set to PUBLISH.\n   Format Definition:  This\
    \ property is defined by the following\n      notation:\n       tzurl      = \"\
    TZURL\" tzurlparam \":\" uri CRLF\n       tzurlparam = *(\";\" other-param)\n\
    \   Example:  The following is an example of this property:\n    TZURL:http://timezones.example.org/tz/America-Los_Angeles.ics\n"
- title: 3.8.4.  Relationship Component Properties
  contents:
  - "3.8.4.  Relationship Component Properties\n   The following properties specify\
    \ relationship information in calendar\n   components.\n"
- title: 3.8.4.1.  Attendee
  contents:
  - "3.8.4.1.  Attendee\n   Property Name:  ATTENDEE\n   Purpose:  This property defines\
    \ an \"Attendee\" within a calendar\n      component.\n   Value Type:  CAL-ADDRESS\n\
    \   Property Parameters:  IANA, non-standard, language, calendar user\n      type,\
    \ group or list membership, participation role, participation\n      status, RSVP\
    \ expectation, delegatee, delegator, sent by, common\n      name, or directory\
    \ entry reference property parameters can be\n      specified on this property.\n\
    \   Conformance:  This property MUST be specified in an iCalendar object\n   \
    \   that specifies a group-scheduled calendar entity.  This property\n      MUST\
    \ NOT be specified in an iCalendar object when publishing the\n      calendar\
    \ information (e.g., NOT in an iCalendar object that\n      specifies the publication\
    \ of a calendar user's busy time, event,\n      to-do, or journal).  This property\
    \ is not specified in an\n      iCalendar object that specifies only a time zone\
    \ definition or\n      that defines calendar components that are not group-scheduled\n\
    \      components, but are components only on a single user's calendar.\n   Description:\
    \  This property MUST only be specified within calendar\n      components to specify\
    \ participants, non-participants, and the\n      chair of a group-scheduled calendar\
    \ entity.  The property is\n      specified within an \"EMAIL\" category of the\
    \ \"VALARM\" calendar\n      component to specify an email address that is to\
    \ receive the email\n      type of iCalendar alarm.\n      The property parameter\
    \ \"CN\" is for the common or displayable name\n      associated with the calendar\
    \ address; \"ROLE\", for the intended\n      role that the attendee will have\
    \ in the calendar component;\n      \"PARTSTAT\", for the status of the attendee's\
    \ participation;\n      \"RSVP\", for indicating whether the favor of a reply\
    \ is requested;\n      \"CUTYPE\", to indicate the type of calendar user; \"MEMBER\"\
    , to\n      indicate the groups that the attendee belongs to; \"DELEGATED-TO\"\
    ,\n      to indicate the calendar users that the original request was\n      delegated\
    \ to; and \"DELEGATED-FROM\", to indicate whom the request\n      was delegated\
    \ from; \"SENT-BY\", to indicate whom is acting on\n      behalf of the \"ATTENDEE\"\
    ; and \"DIR\", to indicate the URI that\n      points to the directory information\
    \ corresponding to the attendee.\n      These property parameters can be specified\
    \ on an \"ATTENDEE\"\n      property in either a \"VEVENT\", \"VTODO\", or \"\
    VJOURNAL\" calendar\n      component.  They MUST NOT be specified in an \"ATTENDEE\"\
    \ property\n      in a \"VFREEBUSY\" or \"VALARM\" calendar component.  If the\n\
    \      \"LANGUAGE\" property parameter is specified, the identified\n      language\
    \ applies to the \"CN\" parameter.\n      A recipient delegated a request MUST\
    \ inherit the \"RSVP\" and \"ROLE\"\n      values from the attendee that delegated\
    \ the request to them.\n      Multiple attendees can be specified by including\
    \ multiple\n      \"ATTENDEE\" properties within the calendar component.\n   Format\
    \ Definition:  This property is defined by the following\n      notation:\n  \
    \     attendee   = \"ATTENDEE\" attparam \":\" cal-address CRLF\n       attparam\
    \   = *(\n                  ;\n                  ; The following are OPTIONAL,\n\
    \                  ; but MUST NOT occur more than once.\n                  ;\n\
    \                  (\";\" cutypeparam) / (\";\" memberparam) /\n             \
    \     (\";\" roleparam) / (\";\" partstatparam) /\n                  (\";\" rsvpparam)\
    \ / (\";\" deltoparam) /\n                  (\";\" delfromparam) / (\";\" sentbyparam)\
    \ /\n                  (\";\" cnparam) / (\";\" dirparam) /\n                \
    \  (\";\" languageparam) /\n                  ;\n                  ; The following\
    \ is OPTIONAL,\n                  ; and MAY occur more than once.\n          \
    \        ;\n                  (\";\" other-param)\n                  ;\n     \
    \             )\n   Example:  The following are examples of this property's use\
    \ for a\n      to-do:\n       ATTENDEE;MEMBER=\"mailto:DEV-GROUP@example.com\"\
    :\n        mailto:joecool@example.com\n       ATTENDEE;DELEGATED-FROM=\"mailto:immud@example.com\"\
    :\n        mailto:ildoit@example.com\n      The following is an example of this\
    \ property used for specifying\n      multiple attendees to an event:\n      \
    \ ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;CN=Henry\n        Cabot:mailto:hcabot@example.com\n\
    \       ATTENDEE;ROLE=REQ-PARTICIPANT;DELEGATED-FROM=\"mailto:bob@\n        example.com\"\
    ;PARTSTAT=ACCEPTED;CN=Jane Doe:mailto:jdoe@\n        example.com\n      The following\
    \ is an example of this property with a URI to the\n      directory information\
    \ associated with the attendee:\n       ATTENDEE;CN=John Smith;DIR=\"ldap://example.com:6666/o=ABC%\n\
    \        20Industries,c=US???(cn=Jim%20Dolittle)\":mailto:jimdo@\n        example.com\n\
    \      The following is an example of this property with \"delegatee\" and\n \
    \     \"delegator\" information for an event:\n       ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;DELEGATED-FROM=\n\
    \        \"mailto:iamboss@example.com\";CN=Henry Cabot:mailto:hcabot@\n      \
    \  example.com\n       ATTENDEE;ROLE=NON-PARTICIPANT;PARTSTAT=DELEGATED;DELEGATED-TO=\n\
    \        \"mailto:hcabot@example.com\";CN=The Big Cheese:mailto:iamboss\n    \
    \    @example.com\n       ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED;CN=Jane\
    \ Doe\n        :mailto:jdoe@example.com\n   Example:  The following is an example\
    \ of this property's use when\n      another calendar user is acting on behalf\
    \ of the \"Attendee\":\n       ATTENDEE;SENT-BY=mailto:jan_doe@example.com;CN=John\
    \ Smith:\n        mailto:jsmith@example.com\n"
- title: 3.8.4.2.  Contact
  contents:
  - "3.8.4.2.  Contact\n   Property Name:  CONTACT\n   Purpose:  This property is\
    \ used to represent contact information or\n      alternately a reference to contact\
    \ information associated with the\n      calendar component.\n   Value Type: \
    \ TEXT\n   Property Parameters:  IANA, non-standard, alternate text\n      representation,\
    \ and language property parameters can be specified\n      on this property.\n\
    \   Conformance:  This property can be specified in a \"VEVENT\", \"VTODO\",\n\
    \      \"VJOURNAL\", or \"VFREEBUSY\" calendar component.\n   Description:  The\
    \ property value consists of textual contact\n      information.  An alternative\
    \ representation for the property value\n      can also be specified that refers\
    \ to a URI pointing to an\n      alternate form, such as a vCard [RFC2426], for\
    \ the contact\n      information.\n   Format Definition:  This property is defined\
    \ by the following\n      notation:\n       contact    = \"CONTACT\" contparam\
    \ \":\" text CRLF\n       contparam  = *(\n                  ;\n             \
    \     ; The following are OPTIONAL,\n                  ; but MUST NOT occur more\
    \ than once.\n                  ;\n                  (\";\" altrepparam) / (\"\
    ;\" languageparam) /\n                  ;\n                  ; The following is\
    \ OPTIONAL,\n                  ; and MAY occur more than once.\n             \
    \     ;\n                  (\";\" other-param)\n                  ;\n        \
    \          )\n   Example:  The following is an example of this property referencing\n\
    \      textual contact information:\n       CONTACT:Jim Dolittle\\, ABC Industries\\\
    , +1-919-555-1234\n      The following is an example of this property with an\
    \ alternate\n      representation of an LDAP URI to a directory entry containing\
    \ the\n      contact information:\n       CONTACT;ALTREP=\"ldap://example.com:6666/o=ABC%20Industries\\\
    ,\n        c=US???(cn=Jim%20Dolittle)\":Jim Dolittle\\, ABC Industries\\,\n  \
    \      +1-919-555-1234\n      The following is an example of this property with\
    \ an alternate\n      representation of a MIME body part containing the contact\n\
    \      information, such as a vCard [RFC2426] embedded in a text/\n      directory\
    \ media type [RFC2425]:\n       CONTACT;ALTREP=\"CID:part3.msg970930T083000SILVER@example.com\"\
    :\n        Jim Dolittle\\, ABC Industries\\, +1-919-555-1234\n      The following\
    \ is an example of this property referencing a network\n      resource, such as\
    \ a vCard [RFC2426] object containing the contact\n      information:\n      \
    \ CONTACT;ALTREP=\"http://example.com/pdi/jdoe.vcf\":Jim\n         Dolittle\\\
    , ABC Industries\\, +1-919-555-1234\n"
- title: 3.8.4.3.  Organizer
  contents:
  - "3.8.4.3.  Organizer\n   Property Name:  ORGANIZER\n   Purpose:  This property\
    \ defines the organizer for a calendar\n      component.\n   Value Type:  CAL-ADDRESS\n\
    \   Property Parameters:  IANA, non-standard, language, common name,\n      directory\
    \ entry reference, and sent-by property parameters can be\n      specified on\
    \ this property.\n   Conformance:  This property MUST be specified in an iCalendar\
    \ object\n      that specifies a group-scheduled calendar entity.  This property\n\
    \      MUST be specified in an iCalendar object that specifies the\n      publication\
    \ of a calendar user's busy time.  This property MUST\n      NOT be specified\
    \ in an iCalendar object that specifies only a time\n      zone definition or\
    \ that defines calendar components that are not\n      group-scheduled components,\
    \ but are components only on a single\n      user's calendar.\n   Description:\
    \  This property is specified within the \"VEVENT\",\n      \"VTODO\", and \"\
    VJOURNAL\" calendar components to specify the\n      organizer of a group-scheduled\
    \ calendar entity.  The property is\n      specified within the \"VFREEBUSY\"\
    \ calendar component to specify the\n      calendar user requesting the free or\
    \ busy time.  When publishing a\n      \"VFREEBUSY\" calendar component, the property\
    \ is used to specify\n      the calendar that the published busy time came from.\n\
    \      The property has the property parameters \"CN\", for specifying the\n \
    \     common or display name associated with the \"Organizer\", \"DIR\", for\n\
    \      specifying a pointer to the directory information associated with\n   \
    \   the \"Organizer\", \"SENT-BY\", for specifying another calendar user\n   \
    \   that is acting on behalf of the \"Organizer\".  The non-standard\n      parameters\
    \ may also be specified on this property.  If the\n      \"LANGUAGE\" property\
    \ parameter is specified, the identified\n      language applies to the \"CN\"\
    \ parameter value.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       organizer  = \"ORGANIZER\" orgparam \":\"\n         \
    \           cal-address CRLF\n       orgparam   = *(\n                  ;\n  \
    \                ; The following are OPTIONAL,\n                  ; but MUST NOT\
    \ occur more than once.\n                  ;\n                  (\";\" cnparam)\
    \ / (\";\" dirparam) / (\";\" sentbyparam) /\n                  (\";\" languageparam)\
    \ /\n                  ;\n                  ; The following is OPTIONAL,\n   \
    \               ; and MAY occur more than once.\n                  ;\n       \
    \           (\";\" other-param)\n                  ;\n                  )\n  \
    \ Example:  The following is an example of this property:\n       ORGANIZER;CN=John\
    \ Smith:mailto:jsmith@example.com\n      The following is an example of this property\
    \ with a pointer to the\n      directory information associated with the organizer:\n\
    \       ORGANIZER;CN=JohnSmith;DIR=\"ldap://example.com:6666/o=DC%20Ass\n    \
    \    ociates,c=US???(cn=John%20Smith)\":mailto:jsmith@example.com\n      The following\
    \ is an example of this property used by another\n      calendar user who is acting\
    \ on behalf of the organizer, with\n      responses intended to be sent back to\
    \ the organizer, not the other\n      calendar user:\n       ORGANIZER;SENT-BY=\"\
    mailto:jane_doe@example.com\":\n        mailto:jsmith@example.com\n"
- title: 3.8.4.4.  Recurrence ID
  contents:
  - "3.8.4.4.  Recurrence ID\n   Property Name:  RECURRENCE-ID\n   Purpose:  This\
    \ property is used in conjunction with the \"UID\" and\n      \"SEQUENCE\" properties\
    \ to identify a specific instance of a\n      recurring \"VEVENT\", \"VTODO\"\
    , or \"VJOURNAL\" calendar component.\n      The property value is the original\
    \ value of the \"DTSTART\" property\n      of the recurrence instance.\n   Value\
    \ Type:  The default value type is DATE-TIME.  The value type can\n      be set\
    \ to a DATE value type.  This property MUST have the same\n      value type as\
    \ the \"DTSTART\" property contained within the\n      recurring component.  Furthermore,\
    \ this property MUST be specified\n      as a date with local time if and only\
    \ if the \"DTSTART\" property\n      contained within the recurring component\
    \ is specified as a date\n      with local time.\n   Property Parameters:  IANA,\
    \ non-standard, value data type, time zone\n      identifier, and recurrence identifier\
    \ range parameters can be\n      specified on this property.\n   Conformance:\
    \  This property can be specified in an iCalendar object\n      containing a recurring\
    \ calendar component.\n   Description:  The full range of calendar components\
    \ specified by a\n      recurrence set is referenced by referring to just the\
    \ \"UID\"\n      property value corresponding to the calendar component.  The\n\
    \      \"RECURRENCE-ID\" property allows the reference to an individual\n    \
    \  instance within the recurrence set.\n      If the value of the \"DTSTART\"\
    \ property is a DATE type value, then\n      the value MUST be the calendar date\
    \ for the recurrence instance.\n      The DATE-TIME value is set to the time when\
    \ the original\n      recurrence instance would occur; meaning that if the intent\
    \ is to\n      change a Friday meeting to Thursday, the DATE-TIME is still set\
    \ to\n      the original Friday meeting.\n      The \"RECURRENCE-ID\" property\
    \ is used in conjunction with the \"UID\"\n      and \"SEQUENCE\" properties to\
    \ identify a particular instance of a\n      recurring event, to-do, or journal.\
    \  For a given pair of \"UID\" and\n      \"SEQUENCE\" property values, the \"\
    RECURRENCE-ID\" value for a\n      recurrence instance is fixed.\n      The \"\
    RANGE\" parameter is used to specify the effective range of\n      recurrence\
    \ instances from the instance specified by the\n      \"RECURRENCE-ID\" property\
    \ value.  The value for the range parameter\n      can only be \"THISANDFUTURE\"\
    \ to indicate a range defined by the\n      given recurrence instance and all\
    \ subsequent instances.\n      Subsequent instances are determined by their \"\
    RECURRENCE-ID\" value\n      and not their current scheduled start time.  Subsequent\
    \ instances\n      defined in separate components are not impacted by the given\n\
    \      recurrence instance.  When the given recurrence instance is\n      rescheduled,\
    \ all subsequent instances are also rescheduled by the\n      same time difference.\
    \  For instance, if the given recurrence\n      instance is rescheduled to start\
    \ 2 hours later, then all\n      subsequent instances are also rescheduled 2 hours\
    \ later.\n      Similarly, if the duration of the given recurrence instance is\n\
    \      modified, then all subsequence instances are also modified to have\n  \
    \    this same duration.\n         Note: The \"RANGE\" parameter may not be appropriate\
    \ to\n         reschedule specific subsequent instances of complex recurring\n\
    \         calendar component.  Assuming an unbounded recurring calendar\n    \
    \     component scheduled to occur on Mondays and Wednesdays, the\n         \"\
    RANGE\" parameter could not be used to reschedule only the\n         future Monday\
    \ instances to occur on Tuesday instead.  In such\n         cases, the calendar\
    \ application could simply truncate the\n         unbounded recurring calendar\
    \ component (i.e., with the \"COUNT\"\n         or \"UNTIL\" rule parts), and\
    \ create two new unbounded recurring\n         calendar components for the future\
    \ instances.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       recurid    = \"RECURRENCE-ID\" ridparam \":\" ridval\
    \ CRLF\n       ridparam   = *(\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  (\";\" \"VALUE\" \"=\" (\"DATE-TIME\" / \"\
    DATE\")) /\n                  (\";\" tzidparam) / (\";\" rangeparam) /\n     \
    \             ;\n                  ; The following is OPTIONAL,\n            \
    \      ; and MAY occur more than once.\n                  ;\n                \
    \  (\";\" other-param)\n                  ;\n                  )\n       ridval\
    \     = date-time / date\n       ;Value MUST match value type\n   Example:  The\
    \ following are examples of this property:\n       RECURRENCE-ID;VALUE=DATE:19960401\n\
    \       RECURRENCE-ID;RANGE=THISANDFUTURE:19960120T120000Z\n"
- title: 3.8.4.5.  Related To
  contents:
  - "3.8.4.5.  Related To\n   Property Name:  RELATED-TO\n   Purpose:  This property\
    \ is used to represent a relationship or\n      reference between one calendar\
    \ component and another.\n   Value Type:  TEXT\n   Property Parameters:  IANA,\
    \ non-standard, and relationship type\n      property parameters can be specified\
    \ on this property.\n   Conformance:  This property can be specified in the \"\
    VEVENT\",\n      \"VTODO\", and \"VJOURNAL\" calendar components.\n   Description:\
    \  The property value consists of the persistent, globally\n      unique identifier\
    \ of another calendar component.  This value would\n      be represented in a\
    \ calendar component by the \"UID\" property.\n      By default, the property\
    \ value points to another calendar\n      component that has a PARENT relationship\
    \ to the referencing\n      object.  The \"RELTYPE\" property parameter is used\
    \ to either\n      explicitly state the default PARENT relationship type to the\n\
    \      referenced calendar component or to override the default PARENT\n     \
    \ relationship type and specify either a CHILD or SIBLING\n      relationship.\
    \  The PARENT relationship indicates that the calendar\n      component is a subordinate\
    \ of the referenced calendar component.\n      The CHILD relationship indicates\
    \ that the calendar component is a\n      superior of the referenced calendar\
    \ component.  The SIBLING\n      relationship indicates that the calendar component\
    \ is a peer of\n      the referenced calendar component.\n      Changes to a calendar\
    \ component referenced by this property can\n      have an implicit impact on\
    \ the related calendar component.  For\n      example, if a group event changes\
    \ its start or end date or time,\n      then the related, dependent events will\
    \ need to have their start\n      and end dates changed in a corresponding way.\
    \  Similarly, if a\n      PARENT calendar component is cancelled or deleted, then\
    \ there is\n      an implied impact to the related CHILD calendar components.\
    \  This\n      property is intended only to provide information on the\n     \
    \ relationship of calendar components.  It is up to the target\n      calendar\
    \ system to maintain any property implications of this\n      relationship.\n\
    \   Format Definition:  This property is defined by the following\n      notation:\n\
    \       related    = \"RELATED-TO\" relparam \":\" text CRLF\n       relparam\
    \   = *(\n                  ;\n                  ; The following is OPTIONAL,\n\
    \                  ; but MUST NOT occur more than once.\n                  ;\n\
    \                  (\";\" reltypeparam) /\n                  ;\n             \
    \     ; The following is OPTIONAL,\n                  ; and MAY occur more than\
    \ once.\n                  ;\n                  (\";\" other-param)\n        \
    \          ;\n                  )\n      The following is an example of this property:\n\
    \       RELATED-TO:jsmith.part7.19960817T083000.xyzMail@example.com\n       RELATED-TO:19960401-080045-4000F192713-0052@example.com\n"
- title: 3.8.4.6.  Uniform Resource Locator
  contents:
  - "3.8.4.6.  Uniform Resource Locator\n   Property Name:  URL\n   Purpose:  This\
    \ property defines a Uniform Resource Locator (URL)\n      associated with the\
    \ iCalendar object.\n   Value Type:  URI\n   Property Parameters:  IANA and non-standard\
    \ property parameters can\n      be specified on this property.\n   Conformance:\
    \  This property can be specified once in the \"VEVENT\",\n      \"VTODO\", \"\
    VJOURNAL\", or \"VFREEBUSY\" calendar components.\n   Description:  This property\
    \ may be used in a calendar component to\n      convey a location where a more\
    \ dynamic rendition of the calendar\n      information associated with the calendar\
    \ component can be found.\n      This memo does not attempt to standardize the\
    \ form of the URI, nor\n      the format of the resource pointed to by the property\
    \ value.  If\n      the URL property and Content-Location MIME header are both\n\
    \      specified, they MUST point to the same resource.\n   Format Definition:\
    \  This property is defined by the following\n      notation:\n       url    \
    \    = \"URL\" urlparam \":\" uri CRLF\n       urlparam   = *(\";\" other-param)\n\
    \   Example:  The following is an example of this property:\n       URL:http://example.com/pub/calendars/jsmith/mytime.ics\n"
- title: 3.8.4.7.  Unique Identifier
  contents:
  - "3.8.4.7.  Unique Identifier\n   Property Name:  UID\n   Purpose:  This property\
    \ defines the persistent, globally unique\n      identifier for the calendar component.\n\
    \   Value Type:  TEXT\n   Property Parameters:  IANA and non-standard property\
    \ parameters can\n      be specified on this property.\n   Conformance:  The property\
    \ MUST be specified in the \"VEVENT\",\n      \"VTODO\", \"VJOURNAL\", or \"VFREEBUSY\"\
    \ calendar components.\n   Description:  The \"UID\" itself MUST be a globally\
    \ unique identifier.\n      The generator of the identifier MUST guarantee that\
    \ the identifier\n      is unique.  There are several algorithms that can be used\
    \ to\n      accomplish this.  A good method to assure uniqueness is to put the\n\
    \      domain name or a domain literal IP address of the host on which\n     \
    \ the identifier was created on the right-hand side of an \"@\", and\n      on\
    \ the left-hand side, put a combination of the current calendar\n      date and\
    \ time of day (i.e., formatted in as a DATE-TIME value)\n      along with some\
    \ other currently unique (perhaps sequential)\n      identifier available on the\
    \ system (for example, a process id\n      number).  Using a DATE-TIME value on\
    \ the left-hand side and a\n      domain name or domain literal on the right-hand\
    \ side makes it\n      possible to guarantee uniqueness since no two hosts should\
    \ be\n      using the same domain name or IP address at the same time.  Though\n\
    \      other algorithms will work, it is RECOMMENDED that the right-hand\n   \
    \   side contain some domain identifier (either of the host itself or\n      otherwise)\
    \ such that the generator of the message identifier can\n      guarantee the uniqueness\
    \ of the left-hand side within the scope of\n      that domain.\n      This is\
    \ the method for correlating scheduling messages with the\n      referenced \"\
    VEVENT\", \"VTODO\", or \"VJOURNAL\" calendar component.\n      The full range\
    \ of calendar components specified by a recurrence\n      set is referenced by\
    \ referring to just the \"UID\" property value\n      corresponding to the calendar\
    \ component.  The \"RECURRENCE-ID\"\n      property allows the reference to an\
    \ individual instance within the\n      recurrence set.\n      This property is\
    \ an important method for group-scheduling\n      applications to match requests\
    \ with later replies, modifications,\n      or deletion requests.  Calendaring\
    \ and scheduling applications\n      MUST generate this property in \"VEVENT\"\
    , \"VTODO\", and \"VJOURNAL\"\n      calendar components to assure interoperability\
    \ with other group-\n      scheduling applications.  This identifier is created\
    \ by the\n      calendar system that generates an iCalendar object.\n      Implementations\
    \ MUST be able to receive and persist values of at\n      least 255 octets for\
    \ this property, but they MUST NOT truncate\n      values in the middle of a UTF-8\
    \ multi-octet sequence.\n   Format Definition:  This property is defined by the\
    \ following\n      notation:\n       uid        = \"UID\" uidparam \":\" text\
    \ CRLF\n       uidparam   = *(\";\" other-param)\n   Example:  The following is\
    \ an example of this property:\n       UID:19960401T080045Z-4000F192713-0052@example.com\n"
- title: 3.8.5.  Recurrence Component Properties
  contents:
  - "3.8.5.  Recurrence Component Properties\n   The following properties specify\
    \ recurrence information in calendar\n   components.\n"
- title: 3.8.5.1.  Exception Date-Times
  contents:
  - "3.8.5.1.  Exception Date-Times\n   Property Name:  EXDATE\n   Purpose:  This\
    \ property defines the list of DATE-TIME exceptions for\n      recurring events,\
    \ to-dos, journal entries, or time zone\n      definitions.\n   Value Type:  The\
    \ default value type for this property is DATE-TIME.\n      The value type can\
    \ be set to DATE.\n   Property Parameters:  IANA, non-standard, value data type,\
    \ and time\n      zone identifier property parameters can be specified on this\n\
    \      property.\n   Conformance:  This property can be specified in recurring\
    \ \"VEVENT\",\n      \"VTODO\", and \"VJOURNAL\" calendar components as well as\
    \ in the\n      \"STANDARD\" and \"DAYLIGHT\" sub-components of the \"VTIMEZONE\"\
    \n      calendar component.\n   Description:  The exception dates, if specified,\
    \ are used in\n      computing the recurrence set.  The recurrence set is the\
    \ complete\n      set of recurrence instances for a calendar component.  The\n\
    \      recurrence set is generated by considering the initial \"DTSTART\"\n  \
    \    property along with the \"RRULE\", \"RDATE\", and \"EXDATE\" properties\n\
    \      contained within the recurring component.  The \"DTSTART\" property\n \
    \     defines the first instance in the recurrence set.  The \"DTSTART\"\n   \
    \   property value SHOULD match the pattern of the recurrence rule, if\n     \
    \ specified.  The recurrence set generated with a \"DTSTART\" property\n     \
    \ value that doesn't match the pattern of the rule is undefined.\n      The final\
    \ recurrence set is generated by gathering all of the\n      start DATE-TIME values\
    \ generated by any of the specified \"RRULE\"\n      and \"RDATE\" properties,\
    \ and then excluding any start DATE-TIME\n      values specified by \"EXDATE\"\
    \ properties.  This implies that start\n      DATE-TIME values specified by \"\
    EXDATE\" properties take precedence\n      over those specified by inclusion properties\
    \ (i.e., \"RDATE\" and\n      \"RRULE\").  When duplicate instances are generated\
    \ by the \"RRULE\"\n      and \"RDATE\" properties, only one recurrence is considered.\n\
    \      Duplicate instances are ignored.\n      The \"EXDATE\" property can be\
    \ used to exclude the value specified\n      in \"DTSTART\".  However, in such\
    \ cases, the original \"DTSTART\" date\n      MUST still be maintained by the\
    \ calendaring and scheduling system\n      because the original \"DTSTART\" value\
    \ has inherent usage\n      dependencies by other properties such as the \"RECURRENCE-ID\"\
    .\n   Format Definition:  This property is defined by the following\n      notation:\n\
    \       exdate     = \"EXDATE\" exdtparam \":\" exdtval *(\",\" exdtval) CRLF\n\
    \       exdtparam  = *(\n                  ;\n                  ; The following\
    \ are OPTIONAL,\n                  ; but MUST NOT occur more than once.\n    \
    \              ;\n                  (\";\" \"VALUE\" \"=\" (\"DATE-TIME\" / \"\
    DATE\")) /\n                  ;\n                  (\";\" tzidparam) /\n     \
    \             ;\n                  ; The following is OPTIONAL,\n            \
    \      ; and MAY occur more than once.\n                  ;\n                \
    \  (\";\" other-param)\n                  ;\n                  )\n       exdtval\
    \    = date-time / date\n       ;Value MUST match value type\n   Example:  The\
    \ following is an example of this property:\n       EXDATE:19960402T010000Z,19960403T010000Z,19960404T010000Z\n"
- title: 3.8.5.2.  Recurrence Date-Times
  contents:
  - "3.8.5.2.  Recurrence Date-Times\n   Property Name:  RDATE\n   Purpose:  This\
    \ property defines the list of DATE-TIME values for\n      recurring events, to-dos,\
    \ journal entries, or time zone\n      definitions.\n   Value Type:  The default\
    \ value type for this property is DATE-TIME.\n      The value type can be set\
    \ to DATE or PERIOD.\n   Property Parameters:  IANA, non-standard, value data\
    \ type, and time\n      zone identifier property parameters can be specified on\
    \ this\n      property.\n   Conformance:  This property can be specified in recurring\
    \ \"VEVENT\",\n      \"VTODO\", and \"VJOURNAL\" calendar components as well as\
    \ in the\n      \"STANDARD\" and \"DAYLIGHT\" sub-components of the \"VTIMEZONE\"\
    \n      calendar component.\n   Description:  This property can appear along with\
    \ the \"RRULE\"\n      property to define an aggregate set of repeating occurrences.\n\
    \      When they both appear in a recurring component, the recurrence\n      instances\
    \ are defined by the union of occurrences defined by both\n      the \"RDATE\"\
    \ and \"RRULE\".\n      The recurrence dates, if specified, are used in computing\
    \ the\n      recurrence set.  The recurrence set is the complete set of\n    \
    \  recurrence instances for a calendar component.  The recurrence set\n      is\
    \ generated by considering the initial \"DTSTART\" property along\n      with\
    \ the \"RRULE\", \"RDATE\", and \"EXDATE\" properties contained\n      within\
    \ the recurring component.  The \"DTSTART\" property defines\n      the first\
    \ instance in the recurrence set.  The \"DTSTART\" property\n      value SHOULD\
    \ match the pattern of the recurrence rule, if\n      specified.  The recurrence\
    \ set generated with a \"DTSTART\" property\n      value that doesn't match the\
    \ pattern of the rule is undefined.\n      The final recurrence set is generated\
    \ by gathering all of the\n      start DATE-TIME values generated by any of the\
    \ specified \"RRULE\"\n      and \"RDATE\" properties, and then excluding any\
    \ start DATE-TIME\n      values specified by \"EXDATE\" properties.  This implies\
    \ that start\n      DATE-TIME values specified by \"EXDATE\" properties take precedence\n\
    \      over those specified by inclusion properties (i.e., \"RDATE\" and\n   \
    \   \"RRULE\").  Where duplicate instances are generated by the \"RRULE\"\n  \
    \    and \"RDATE\" properties, only one recurrence is considered.\n      Duplicate\
    \ instances are ignored.\n   Format Definition:  This property is defined by the\
    \ following\n      notation:\n       rdate      = \"RDATE\" rdtparam \":\" rdtval\
    \ *(\",\" rdtval) CRLF\n       rdtparam   = *(\n                  ;\n        \
    \          ; The following are OPTIONAL,\n                  ; but MUST NOT occur\
    \ more than once.\n                  ;\n                  (\";\" \"VALUE\" \"\
    =\" (\"DATE-TIME\" / \"DATE\" / \"PERIOD\")) /\n                  (\";\" tzidparam)\
    \ /\n                  ;\n                  ; The following is OPTIONAL,\n   \
    \               ; and MAY occur more than once.\n                  ;\n       \
    \           (\";\" other-param)\n                  ;\n                  )\n  \
    \     rdtval     = date-time / date / period\n       ;Value MUST match value type\n\
    \   Example:  The following are examples of this property:\n       RDATE:19970714T123000Z\n\
    \       RDATE;TZID=America/New_York:19970714T083000\n       RDATE;VALUE=PERIOD:19960403T020000Z/19960403T040000Z,\n\
    \        19960404T010000Z/PT3H\n       RDATE;VALUE=DATE:19970101,19970120,19970217,19970421\n\
    \        19970526,19970704,19970901,19971014,19971128,19971129,19971225\n"
- title: 3.8.5.3.  Recurrence Rule
  contents:
  - "3.8.5.3.  Recurrence Rule\n   Property Name:  RRULE\n   Purpose:  This property\
    \ defines a rule or repeating pattern for\n      recurring events, to-dos, journal\
    \ entries, or time zone\n      definitions.\n   Value Type:  RECUR\n   Property\
    \ Parameters:  IANA and non-standard property parameters can\n      be specified\
    \ on this property.\n   Conformance:  This property can be specified in recurring\
    \ \"VEVENT\",\n      \"VTODO\", and \"VJOURNAL\" calendar components as well as\
    \ in the\n      \"STANDARD\" and \"DAYLIGHT\" sub-components of the \"VTIMEZONE\"\
    \n      calendar component, but it SHOULD NOT be specified more than once.\n \
    \     The recurrence set generated with multiple \"RRULE\" properties is\n   \
    \   undefined.\n   Description:  The recurrence rule, if specified, is used in\
    \ computing\n      the recurrence set.  The recurrence set is the complete set\
    \ of\n      recurrence instances for a calendar component.  The recurrence set\n\
    \      is generated by considering the initial \"DTSTART\" property along\n  \
    \    with the \"RRULE\", \"RDATE\", and \"EXDATE\" properties contained\n    \
    \  within the recurring component.  The \"DTSTART\" property defines\n      the\
    \ first instance in the recurrence set.  The \"DTSTART\" property\n      value\
    \ SHOULD be synchronized with the recurrence rule, if\n      specified.  The recurrence\
    \ set generated with a \"DTSTART\" property\n      value not synchronized with\
    \ the recurrence rule is undefined.  The\n      final recurrence set is generated\
    \ by gathering all of the start\n      DATE-TIME values generated by any of the\
    \ specified \"RRULE\" and\n      \"RDATE\" properties, and then excluding any\
    \ start DATE-TIME values\n      specified by \"EXDATE\" properties.  This implies\
    \ that start DATE-\n      TIME values specified by \"EXDATE\" properties take\
    \ precedence over\n      those specified by inclusion properties (i.e., \"RDATE\"\
    \ and\n      \"RRULE\").  Where duplicate instances are generated by the \"RRULE\"\
    \n      and \"RDATE\" properties, only one recurrence is considered.\n      Duplicate\
    \ instances are ignored.\n      The \"DTSTART\" property specified within the\
    \ iCalendar object\n      defines the first instance of the recurrence.  In most\
    \ cases, a\n      \"DTSTART\" property of DATE-TIME value type used with a recurrence\n\
    \      rule, should be specified as a date with local time and time zone\n   \
    \   reference to make sure all the recurrence instances start at the\n      same\
    \ local time regardless of time zone changes.\n      If the duration of the recurring\
    \ component is specified with the\n      \"DTEND\" or \"DUE\" property, then the\
    \ same exact duration will apply\n      to all the members of the generated recurrence\
    \ set.  Else, if the\n      duration of the recurring component is specified with\
    \ the\n      \"DURATION\" property, then the same nominal duration will apply\
    \ to\n      all the members of the generated recurrence set and the exact\n  \
    \    duration of each recurrence instance will depend on its specific\n      start\
    \ time.  For example, recurrence instances of a nominal\n      duration of one\
    \ day will have an exact duration of more or less\n      than 24 hours on a day\
    \ where a time zone shift occurs.  The\n      duration of a specific recurrence\
    \ may be modified in an exception\n      component or simply by using an \"RDATE\"\
    \ property of PERIOD value\n      type.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       rrule      = \"RRULE\"\
    \ rrulparam \":\" recur CRLF\n       rrulparam  = *(\";\" other-param)\n   Example:\
    \  All examples assume the Eastern United States time zone.\n      Daily for 10\
    \ occurrences:\n       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=DAILY;COUNT=10\n\
    \       ==> (1997 9:00 AM EDT) September 2-11\n      Daily until December 24,\
    \ 1997:\n       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=DAILY;UNTIL=19971224T000000Z\n\
    \       ==> (1997 9:00 AM EDT) September 2-30;October 1-25\n           (1997 9:00\
    \ AM EST) October 26-31;November 1-30;December 1-23\n      Every other day - forever:\n\
    \       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=DAILY;INTERVAL=2\n\
    \       ==> (1997 9:00 AM EDT) September 2,4,6,8...24,26,28,30;\n            \
    \                  October 2,4,6...20,22,24\n           (1997 9:00 AM EST) October\
    \ 26,28,30;\n                              November 1,3,5,7...25,27,29;\n    \
    \                          December 1,3,...\n      Every 10 days, 5 occurrences:\n\
    \       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=DAILY;INTERVAL=10;COUNT=5\n\
    \       ==> (1997 9:00 AM EDT) September 2,12,22;\n                          \
    \    October 2,12\n      Every day in January, for 3 years:\n       DTSTART;TZID=America/New_York:19980101T090000\n\
    \       RRULE:FREQ=YEARLY;UNTIL=20000131T140000Z;\n        BYMONTH=1;BYDAY=SU,MO,TU,WE,TH,FR,SA\n\
    \       or\n       RRULE:FREQ=DAILY;UNTIL=20000131T140000Z;BYMONTH=1\n       ==>\
    \ (1998 9:00 AM EST)January 1-31\n           (1999 9:00 AM EST)January 1-31\n\
    \           (2000 9:00 AM EST)January 1-31\n      Weekly for 10 occurrences:\n\
    \       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=WEEKLY;COUNT=10\n\
    \       ==> (1997 9:00 AM EDT) September 2,9,16,23,30;October 7,14,21\n      \
    \     (1997 9:00 AM EST) October 28;November 4\n      Weekly until December 24,\
    \ 1997:\n       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=WEEKLY;UNTIL=19971224T000000Z\n\
    \       ==> (1997 9:00 AM EDT) September 2,9,16,23,30;\n                     \
    \         October 7,14,21\n           (1997 9:00 AM EST) October 28;\n       \
    \                       November 4,11,18,25;\n                              December\
    \ 2,9,16,23\n      Every other week - forever:\n       DTSTART;TZID=America/New_York:19970902T090000\n\
    \       RRULE:FREQ=WEEKLY;INTERVAL=2;WKST=SU\n       ==> (1997 9:00 AM EDT) September\
    \ 2,16,30;\n                              October 14\n           (1997 9:00 AM\
    \ EST) October 28;\n                              November 11,25;\n          \
    \                    December 9,23\n           (1998 9:00 AM EST) January 6,20;\n\
    \                              February 3, 17\n           ...\n      Weekly on\
    \ Tuesday and Thursday for five weeks:\n       DTSTART;TZID=America/New_York:19970902T090000\n\
    \       RRULE:FREQ=WEEKLY;UNTIL=19971007T000000Z;WKST=SU;BYDAY=TU,TH\n       or\n\
    \       RRULE:FREQ=WEEKLY;COUNT=10;WKST=SU;BYDAY=TU,TH\n       ==> (1997 9:00\
    \ AM EDT) September 2,4,9,11,16,18,23,25,30;\n                              October\
    \ 2\n      Every other week on Monday, Wednesday, and Friday until December\n\
    \      24, 1997, starting on Monday, September 1, 1997:\n       DTSTART;TZID=America/New_York:19970901T090000\n\
    \       RRULE:FREQ=WEEKLY;INTERVAL=2;UNTIL=19971224T000000Z;WKST=SU;\n       \
    \ BYDAY=MO,WE,FR\n       ==> (1997 9:00 AM EDT) September 1,3,5,15,17,19,29;\n\
    \                              October 1,3,13,15,17\n           (1997 9:00 AM\
    \ EST) October 27,29,31;\n                              November 10,12,14,24,26,28;\n\
    \                              December 8,10,12,22\n      Every other week on\
    \ Tuesday and Thursday, for 8 occurrences:\n       DTSTART;TZID=America/New_York:19970902T090000\n\
    \       RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=8;WKST=SU;BYDAY=TU,TH\n       ==> (1997\
    \ 9:00 AM EDT) September 2,4,16,18,30;\n                              October\
    \ 2,14,16\n      Monthly on the first Friday for 10 occurrences:\n       DTSTART;TZID=America/New_York:19970905T090000\n\
    \       RRULE:FREQ=MONTHLY;COUNT=10;BYDAY=1FR\n       ==> (1997 9:00 AM EDT) September\
    \ 5;October 3\n           (1997 9:00 AM EST) November 7;December 5\n         \
    \  (1998 9:00 AM EST) January 2;February 6;March 6;April 3\n           (1998 9:00\
    \ AM EDT) May 1;June 5\n      Monthly on the first Friday until December 24, 1997:\n\
    \       DTSTART;TZID=America/New_York:19970905T090000\n       RRULE:FREQ=MONTHLY;UNTIL=19971224T000000Z;BYDAY=1FR\n\
    \       ==> (1997 9:00 AM EDT) September 5; October 3\n           (1997 9:00 AM\
    \ EST) November 7; December 5\n      Every other month on the first and last Sunday\
    \ of the month for 10\n      occurrences:\n       DTSTART;TZID=America/New_York:19970907T090000\n\
    \       RRULE:FREQ=MONTHLY;INTERVAL=2;COUNT=10;BYDAY=1SU,-1SU\n       ==> (1997\
    \ 9:00 AM EDT) September 7,28\n           (1997 9:00 AM EST) November 2,30\n \
    \          (1998 9:00 AM EST) January 4,25;March 1,29\n           (1998 9:00 AM\
    \ EDT) May 3,31\n      Monthly on the second-to-last Monday of the month for 6\
    \ months:\n       DTSTART;TZID=America/New_York:19970922T090000\n       RRULE:FREQ=MONTHLY;COUNT=6;BYDAY=-2MO\n\
    \       ==> (1997 9:00 AM EDT) September 22;October 20\n           (1997 9:00\
    \ AM EST) November 17;December 22\n           (1998 9:00 AM EST) January 19;February\
    \ 16\n      Monthly on the third-to-the-last day of the month, forever:\n    \
    \   DTSTART;TZID=America/New_York:19970928T090000\n       RRULE:FREQ=MONTHLY;BYMONTHDAY=-3\n\
    \       ==> (1997 9:00 AM EDT) September 28\n           (1997 9:00 AM EST) October\
    \ 29;November 28;December 29\n           (1998 9:00 AM EST) January 29;February\
    \ 26\n           ...\n      Monthly on the 2nd and 15th of the month for 10 occurrences:\n\
    \       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=MONTHLY;COUNT=10;BYMONTHDAY=2,15\n\
    \       ==> (1997 9:00 AM EDT) September 2,15;October 2,15\n           (1997 9:00\
    \ AM EST) November 2,15;December 2,15\n           (1998 9:00 AM EST) January 2,15\n\
    \      Monthly on the first and last day of the month for 10 occurrences:\n  \
    \     DTSTART;TZID=America/New_York:19970930T090000\n       RRULE:FREQ=MONTHLY;COUNT=10;BYMONTHDAY=1,-1\n\
    \       ==> (1997 9:00 AM EDT) September 30;October 1\n           (1997 9:00 AM\
    \ EST) October 31;November 1,30;December 1,31\n           (1998 9:00 AM EST) January\
    \ 1,31;February 1\n      Every 18 months on the 10th thru 15th of the month for\
    \ 10\n      occurrences:\n       DTSTART;TZID=America/New_York:19970910T090000\n\
    \       RRULE:FREQ=MONTHLY;INTERVAL=18;COUNT=10;BYMONTHDAY=10,11,12,\n       \
    \ 13,14,15\n       ==> (1997 9:00 AM EDT) September 10,11,12,13,14,15\n      \
    \     (1999 9:00 AM EST) March 10,11,12,13\n      Every Tuesday, every other month:\n\
    \       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=MONTHLY;INTERVAL=2;BYDAY=TU\n\
    \       ==> (1997 9:00 AM EDT) September 2,9,16,23,30\n           (1997 9:00 AM\
    \ EST) November 4,11,18,25\n           (1998 9:00 AM EST) January 6,13,20,27;March\
    \ 3,10,17,24,31\n           ...\n      Yearly in June and July for 10 occurrences:\n\
    \       DTSTART;TZID=America/New_York:19970610T090000\n       RRULE:FREQ=YEARLY;COUNT=10;BYMONTH=6,7\n\
    \       ==> (1997 9:00 AM EDT) June 10;July 10\n           (1998 9:00 AM EDT)\
    \ June 10;July 10\n           (1999 9:00 AM EDT) June 10;July 10\n           (2000\
    \ 9:00 AM EDT) June 10;July 10\n           (2001 9:00 AM EDT) June 10;July 10\n\
    \         Note: Since none of the BYDAY, BYMONTHDAY, or BYYEARDAY\n         components\
    \ are specified, the day is gotten from \"DTSTART\".\n      Every other year on\
    \ January, February, and March for 10\n      occurrences:\n       DTSTART;TZID=America/New_York:19970310T090000\n\
    \       RRULE:FREQ=YEARLY;INTERVAL=2;COUNT=10;BYMONTH=1,2,3\n       ==> (1997\
    \ 9:00 AM EST) March 10\n           (1999 9:00 AM EST) January 10;February 10;March\
    \ 10\n           (2001 9:00 AM EST) January 10;February 10;March 10\n        \
    \   (2003 9:00 AM EST) January 10;February 10;March 10\n      Every third year\
    \ on the 1st, 100th, and 200th day for 10\n      occurrences:\n       DTSTART;TZID=America/New_York:19970101T090000\n\
    \       RRULE:FREQ=YEARLY;INTERVAL=3;COUNT=10;BYYEARDAY=1,100,200\n       ==>\
    \ (1997 9:00 AM EST) January 1\n           (1997 9:00 AM EDT) April 10;July 19\n\
    \           (2000 9:00 AM EST) January 1\n           (2000 9:00 AM EDT) April\
    \ 9;July 18\n           (2003 9:00 AM EST) January 1\n           (2003 9:00 AM\
    \ EDT) April 10;July 19\n           (2006 9:00 AM EST) January 1\n      Every\
    \ 20th Monday of the year, forever:\n       DTSTART;TZID=America/New_York:19970519T090000\n\
    \       RRULE:FREQ=YEARLY;BYDAY=20MO\n       ==> (1997 9:00 AM EDT) May 19\n \
    \          (1998 9:00 AM EDT) May 18\n           (1999 9:00 AM EDT) May 17\n \
    \          ...\n      Monday of week number 20 (where the default start of the\
    \ week is\n      Monday), forever:\n       DTSTART;TZID=America/New_York:19970512T090000\n\
    \       RRULE:FREQ=YEARLY;BYWEEKNO=20;BYDAY=MO\n       ==> (1997 9:00 AM EDT)\
    \ May 12\n           (1998 9:00 AM EDT) May 11\n           (1999 9:00 AM EDT)\
    \ May 17\n           ...\n      Every Thursday in March, forever:\n       DTSTART;TZID=America/New_York:19970313T090000\n\
    \       RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=TH\n       ==> (1997 9:00 AM EST) March\
    \ 13,20,27\n           (1998 9:00 AM EST) March 5,12,19,26\n           (1999 9:00\
    \ AM EST) March 4,11,18,25\n           ...\n      Every Thursday, but only during\
    \ June, July, and August, forever:\n       DTSTART;TZID=America/New_York:19970605T090000\n\
    \       RRULE:FREQ=YEARLY;BYDAY=TH;BYMONTH=6,7,8\n       ==> (1997 9:00 AM EDT)\
    \ June 5,12,19,26;July 3,10,17,24,31;\n                              August 7,14,21,28\n\
    \           (1998 9:00 AM EDT) June 4,11,18,25;July 2,9,16,23,30;\n          \
    \                    August 6,13,20,27\n           (1999 9:00 AM EDT) June 3,10,17,24;July\
    \ 1,8,15,22,29;\n                              August 5,12,19,26\n           ...\n\
    \      Every Friday the 13th, forever:\n       DTSTART;TZID=America/New_York:19970902T090000\n\
    \       EXDATE;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=MONTHLY;BYDAY=FR;BYMONTHDAY=13\n\
    \       ==> (1998 9:00 AM EST) February 13;March 13;November 13\n           (1999\
    \ 9:00 AM EDT) August 13\n           (2000 9:00 AM EDT) October 13\n         \
    \  ...\n      The first Saturday that follows the first Sunday of the month,\n\
    \      forever:\n       DTSTART;TZID=America/New_York:19970913T090000\n      \
    \ RRULE:FREQ=MONTHLY;BYDAY=SA;BYMONTHDAY=7,8,9,10,11,12,13\n       ==> (1997 9:00\
    \ AM EDT) September 13;October 11\n           (1997 9:00 AM EST) November 8;December\
    \ 13\n           (1998 9:00 AM EST) January 10;February 7;March 7\n          \
    \ (1998 9:00 AM EDT) April 11;May 9;June 13...\n           ...\n      Every 4\
    \ years, the first Tuesday after a Monday in November,\n      forever (U.S. Presidential\
    \ Election day):\n       DTSTART;TZID=America/New_York:19961105T090000\n     \
    \  RRULE:FREQ=YEARLY;INTERVAL=4;BYMONTH=11;BYDAY=TU;\n        BYMONTHDAY=2,3,4,5,6,7,8\n\
    \        ==> (1996 9:00 AM EST) November 5\n            (2000 9:00 AM EST) November\
    \ 7\n            (2004 9:00 AM EST) November 2\n            ...\n      The third\
    \ instance into the month of one of Tuesday, Wednesday, or\n      Thursday, for\
    \ the next 3 months:\n       DTSTART;TZID=America/New_York:19970904T090000\n \
    \      RRULE:FREQ=MONTHLY;COUNT=3;BYDAY=TU,WE,TH;BYSETPOS=3\n       ==> (1997\
    \ 9:00 AM EDT) September 4;October 7\n           (1997 9:00 AM EST) November 6\n\
    \      The second-to-last weekday of the month:\n       DTSTART;TZID=America/New_York:19970929T090000\n\
    \       RRULE:FREQ=MONTHLY;BYDAY=MO,TU,WE,TH,FR;BYSETPOS=-2\n       ==> (1997\
    \ 9:00 AM EDT) September 29\n           (1997 9:00 AM EST) October 30;November\
    \ 27;December 30\n           (1998 9:00 AM EST) January 29;February 26;March 30\n\
    \           ...\n      Every 3 hours from 9:00 AM to 5:00 PM on a specific day:\n\
    \       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=19970902T170000Z\n\
    \       ==> (September 2, 1997 EDT) 09:00,12:00,15:00\n      Every 15 minutes\
    \ for 6 occurrences:\n       DTSTART;TZID=America/New_York:19970902T090000\n \
    \      RRULE:FREQ=MINUTELY;INTERVAL=15;COUNT=6\n       ==> (September 2, 1997\
    \ EDT) 09:00,09:15,09:30,09:45,10:00,10:15\n      Every hour and a half for 4\
    \ occurrences:\n       DTSTART;TZID=America/New_York:19970902T090000\n       RRULE:FREQ=MINUTELY;INTERVAL=90;COUNT=4\n\
    \       ==> (September 2, 1997 EDT) 09:00,10:30;12:00;13:30\n      Every 20 minutes\
    \ from 9:00 AM to 4:40 PM every day:\n       DTSTART;TZID=America/New_York:19970902T090000\n\
    \       RRULE:FREQ=DAILY;BYHOUR=9,10,11,12,13,14,15,16;BYMINUTE=0,20,40\n    \
    \   or\n       RRULE:FREQ=MINUTELY;INTERVAL=20;BYHOUR=9,10,11,12,13,14,15,16\n\
    \       ==> (September 2, 1997 EDT) 9:00,9:20,9:40,10:00,10:20,\n            \
    \                       ... 16:00,16:20,16:40\n           (September 3, 1997 EDT)\
    \ 9:00,9:20,9:40,10:00,10:20,\n                                   ...16:00,16:20,16:40\n\
    \           ...\n      An example where the days generated makes a difference\
    \ because of\n      WKST:\n       DTSTART;TZID=America/New_York:19970805T090000\n\
    \       RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=4;BYDAY=TU,SU;WKST=MO\n       ==> (1997\
    \ EDT) August 5,10,19,24\n      changing only WKST from MO to SU, yields different\
    \ results...\n       DTSTART;TZID=America/New_York:19970805T090000\n       RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=4;BYDAY=TU,SU;WKST=SU\n\
    \       ==> (1997 EDT) August 5,17,19,31\n      An example where an invalid date\
    \ (i.e., February 30) is ignored.\n       DTSTART;TZID=America/New_York:20070115T090000\n\
    \       RRULE:FREQ=MONTHLY;BYMONTHDAY=15,30;COUNT=5\n       ==> (2007 EST) January\
    \ 15,30\n           (2007 EST) February 15\n           (2007 EDT) March 15,30\n"
- title: 3.8.6.  Alarm Component Properties
  contents:
  - "3.8.6.  Alarm Component Properties\n   The following properties specify alarm\
    \ information in calendar\n   components.\n"
- title: 3.8.6.1.  Action
  contents:
  - "3.8.6.1.  Action\n   Property Name:  ACTION\n   Purpose:  This property defines\
    \ the action to be invoked when an\n      alarm is triggered.\n   Value Type:\
    \  TEXT\n   Property Parameters:  IANA and non-standard property parameters can\n\
    \      be specified on this property.\n   Conformance:  This property MUST be\
    \ specified once in a \"VALARM\"\n      calendar component.\n   Description: \
    \ Each \"VALARM\" calendar component has a particular type\n      of action with\
    \ which it is associated.  This property specifies\n      the type of action.\
    \  Applications MUST ignore alarms with x-name\n      and iana-token values they\
    \ don't recognize.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       action      = \"ACTION\" actionparam \":\" actionvalue\
    \ CRLF\n       actionparam = *(\";\" other-param)\n       actionvalue = \"AUDIO\"\
    \ / \"DISPLAY\" / \"EMAIL\"\n                   / iana-token / x-name\n   Example:\
    \  The following are examples of this property in a \"VALARM\"\n      calendar\
    \ component:\n       ACTION:AUDIO\n       ACTION:DISPLAY\n"
- title: 3.8.6.2.  Repeat Count
  contents:
  - "3.8.6.2.  Repeat Count\n   Property Name:  REPEAT\n   Purpose:  This property\
    \ defines the number of times the alarm should\n      be repeated, after the initial\
    \ trigger.\n   Value Type:  INTEGER\n   Property Parameters:  IANA and non-standard\
    \ property parameters can\n      be specified on this property.\n   Conformance:\
    \  This property can be specified in a \"VALARM\" calendar\n      component.\n\
    \   Description:  This property defines the number of times an alarm\n      should\
    \ be repeated after its initial trigger.  If the alarm\n      triggers more than\
    \ once, then this property MUST be specified\n      along with the \"DURATION\"\
    \ property.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       repeat  = \"REPEAT\" repparam \":\" integer CRLF\n  \
    \     ;Default is \"0\", zero.\n       repparam   = *(\";\" other-param)\n   Example:\
    \  The following is an example of this property for an alarm\n      that repeats\
    \ 4 additional times with a 5-minute delay after the\n      initial triggering\
    \ of the alarm:\n       REPEAT:4\n       DURATION:PT5M\n"
- title: 3.8.6.3.  Trigger
  contents:
  - "3.8.6.3.  Trigger\n   Property Name:  TRIGGER\n   Purpose:  This property specifies\
    \ when an alarm will trigger.\n   Value Type:  The default value type is DURATION.\
    \  The value type can\n      be set to a DATE-TIME value type, in which case the\
    \ value MUST\n      specify a UTC-formatted DATE-TIME value.\n   Property Parameters:\
    \  IANA, non-standard, value data type, time zone\n      identifier, or trigger\
    \ relationship property parameters can be\n      specified on this property. \
    \ The trigger relationship property\n      parameter MUST only be specified when\
    \ the value type is\n      \"DURATION\".\n   Conformance:  This property MUST\
    \ be specified in the \"VALARM\"\n      calendar component.\n   Description: \
    \ This property defines when an alarm will trigger.  The\n      default value\
    \ type is DURATION, specifying a relative time for the\n      trigger of the alarm.\
    \  The default duration is relative to the\n      start of an event or to-do with\
    \ which the alarm is associated.\n      The duration can be explicitly set to\
    \ trigger from either the end\n      or the start of the associated event or to-do\
    \ with the \"RELATED\"\n      parameter.  A value of START will set the alarm\
    \ to trigger off the\n      start of the associated event or to-do.  A value of\
    \ END will set\n      the alarm to trigger off the end of the associated event\
    \ or to-do.\n      Either a positive or negative duration may be specified for\
    \ the\n      \"TRIGGER\" property.  An alarm with a positive duration is\n   \
    \   triggered after the associated start or end of the event or to-do.\n     \
    \ An alarm with a negative duration is triggered before the\n      associated\
    \ start or end of the event or to-do.\n      The \"RELATED\" property parameter\
    \ is not valid if the value type of\n      the property is set to DATE-TIME (i.e.,\
    \ for an absolute date and\n      time alarm trigger).  If a value type of DATE-TIME\
    \ is specified,\n      then the property value MUST be specified in the UTC time\
    \ format.\n      If an absolute trigger is specified on an alarm for a recurring\n\
    \      event or to-do, then the alarm will only trigger for the specified\n  \
    \    absolute DATE-TIME, along with any specified repeating instances.\n     \
    \ If the trigger is set relative to START, then the \"DTSTART\"\n      property\
    \ MUST be present in the associated \"VEVENT\" or \"VTODO\"\n      calendar component.\
    \  If an alarm is specified for an event with\n      the trigger set relative\
    \ to the END, then the \"DTEND\" property or\n      the \"DTSTART\" and \"DURATION\
    \ \" properties MUST be present in the\n      associated \"VEVENT\" calendar component.\
    \  If the alarm is specified\n      for a to-do with a trigger set relative to\
    \ the END, then either\n      the \"DUE\" property or the \"DTSTART\" and \"DURATION\
    \ \" properties\n      MUST be present in the associated \"VTODO\" calendar component.\n\
    \      Alarms specified in an event or to-do that is defined in terms of\n   \
    \   a DATE value type will be triggered relative to 00:00:00 of the\n      user's\
    \ configured time zone on the specified date, or relative to\n      00:00:00 UTC\
    \ on the specified date if no configured time zone can\n      be found for the\
    \ user.  For example, if \"DTSTART\" is a DATE value\n      set to 19980205 then\
    \ the duration trigger will be relative to\n      19980205T000000 America/New_York\
    \ for a user configured with the\n      America/New_York time zone.\n   Format\
    \ Definition:  This property is defined by the following\n      notation:\n  \
    \     trigger    = \"TRIGGER\" (trigrel / trigabs) CRLF\n       trigrel    = *(\n\
    \                  ;\n                  ; The following are OPTIONAL,\n      \
    \            ; but MUST NOT occur more than once.\n                  ;\n     \
    \             (\";\" \"VALUE\" \"=\" \"DURATION\") /\n                  (\";\"\
    \ trigrelparam) /\n                  ;\n                  ; The following is OPTIONAL,\n\
    \                  ; and MAY occur more than once.\n                  ;\n    \
    \              (\";\" other-param)\n                  ;\n                  ) \"\
    :\"  dur-value\n       trigabs    = *(\n                  ;\n                \
    \  ; The following is REQUIRED,\n                  ; but MUST NOT occur more than\
    \ once.\n                  ;\n                  (\";\" \"VALUE\" \"=\" \"DATE-TIME\"\
    ) /\n                  ;\n                  ; The following is OPTIONAL,\n   \
    \               ; and MAY occur more than once.\n                  ;\n       \
    \           (\";\" other-param)\n                  ;\n                  ) \":\"\
    \ date-time\n   Example:  A trigger set 15 minutes prior to the start of the event\
    \ or\n      to-do.\n       TRIGGER:-PT15M\n      A trigger set five minutes after\
    \ the end of an event or the due\n      date of a to-do.\n       TRIGGER;RELATED=END:PT5M\n\
    \      A trigger set to an absolute DATE-TIME.\n       TRIGGER;VALUE=DATE-TIME:19980101T050000Z\n"
- title: 3.8.7.  Change Management Component Properties
  contents:
  - "3.8.7.  Change Management Component Properties\n   The following properties specify\
    \ change management information in\n   calendar components.\n"
- title: 3.8.7.1.  Date-Time Created
  contents:
  - "3.8.7.1.  Date-Time Created\n   Property Name:  CREATED\n   Purpose:  This property\
    \ specifies the date and time that the calendar\n      information was created\
    \ by the calendar user agent in the calendar\n      store.\n         Note: This\
    \ is analogous to the creation date and time for a\n         file in the file\
    \ system.\n   Value Type:  DATE-TIME\n   Property Parameters:  IANA and non-standard\
    \ property parameters can\n      be specified on this property.\n   Conformance:\
    \  The property can be specified once in \"VEVENT\",\n      \"VTODO\", or \"VJOURNAL\"\
    \ calendar components.  The value MUST be\n      specified as a date with UTC\
    \ time.\n   Description:  This property specifies the date and time that the\n\
    \      calendar information was created by the calendar user agent in the\n  \
    \    calendar store.\n   Format Definition:  This property is defined by the following\n\
    \      notation:\n       created    = \"CREATED\" creaparam \":\" date-time CRLF\n\
    \       creaparam  = *(\";\" other-param)\n   Example:  The following is an example\
    \ of this property:\n       CREATED:19960329T133000Z\n"
- title: 3.8.7.2.  Date-Time Stamp
  contents:
  - "3.8.7.2.  Date-Time Stamp\n   Property Name:  DTSTAMP\n   Purpose:  In the case\
    \ of an iCalendar object that specifies a\n      \"METHOD\" property, this property\
    \ specifies the date and time that\n      the instance of the iCalendar object\
    \ was created.  In the case of\n      an iCalendar object that doesn't specify\
    \ a \"METHOD\" property, this\n      property specifies the date and time that\
    \ the information\n      associated with the calendar component was last revised\
    \ in the\n      calendar store.\n   Value Type:  DATE-TIME\n   Property Parameters:\
    \  IANA and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  This property MUST be included in the \"VEVENT\",\n      \"\
    VTODO\", \"VJOURNAL\", or \"VFREEBUSY\" calendar components.\n   Description:\
    \  The value MUST be specified in the UTC time format.\n      This property is\
    \ also useful to protocols such as [2447bis] that\n      have inherent latency\
    \ issues with the delivery of content.  This\n      property will assist in the\
    \ proper sequencing of messages\n      containing iCalendar objects.\n      In\
    \ the case of an iCalendar object that specifies a \"METHOD\"\n      property,\
    \ this property differs from the \"CREATED\" and \"LAST-\n      MODIFIED\" properties.\
    \  These two properties are used to specify\n      when the particular calendar\
    \ data in the calendar store was\n      created and last modified.  This is different\
    \ than when the\n      iCalendar object representation of the calendar service\n\
    \      information was created or last modified.\n      In the case of an iCalendar\
    \ object that doesn't specify a \"METHOD\"\n      property, this property is equivalent\
    \ to the \"LAST-MODIFIED\"\n      property.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       dtstamp    = \"DTSTAMP\"\
    \ stmparam \":\" date-time CRLF\n       stmparam   = *(\";\" other-param)\n  \
    \ Example:\n       DTSTAMP:19971210T080000Z\n"
- title: 3.8.7.3.  Last Modified
  contents:
  - "3.8.7.3.  Last Modified\n   Property Name:  LAST-MODIFIED\n   Purpose:  This\
    \ property specifies the date and time that the\n      information associated\
    \ with the calendar component was last\n      revised in the calendar store.\n\
    \         Note: This is analogous to the modification date and time for a\n  \
    \       file in the file system.\n   Value Type:  DATE-TIME\n   Property Parameters:\
    \  IANA and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  This property can be specified in the \"VEVENT\",\n      \"\
    VTODO\", \"VJOURNAL\", or \"VTIMEZONE\" calendar components.\n   Description:\
    \  The property value MUST be specified in the UTC time\n      format.\n   Format\
    \ Definition:  This property is defined by the following\n      notation:\n  \
    \     last-mod   = \"LAST-MODIFIED\" lstparam \":\" date-time CRLF\n       lstparam\
    \   = *(\";\" other-param)\n   Example:  The following is an example of this property:\n\
    \       LAST-MODIFIED:19960817T133000Z\n"
- title: 3.8.7.4.  Sequence Number
  contents:
  - "3.8.7.4.  Sequence Number\n   Property Name:  SEQUENCE\n   Purpose:  This property\
    \ defines the revision sequence number of the\n      calendar component within\
    \ a sequence of revisions.\n   Value Type:  INTEGER\n   Property Parameters: \
    \ IANA and non-standard property parameters can\n      be specified on this property.\n\
    \   Conformance:  The property can be specified in \"VEVENT\", \"VTODO\", or\n\
    \      \"VJOURNAL\" calendar component.\n   Description:  When a calendar component\
    \ is created, its sequence\n      number is 0.  It is monotonically incremented\
    \ by the \"Organizer's\"\n      CUA each time the \"Organizer\" makes a significant\
    \ revision to the\n      calendar component.\n      The \"Organizer\" includes\
    \ this property in an iCalendar object that\n      it sends to an \"Attendee\"\
    \ to specify the current version of the\n      calendar component.\n      The\
    \ \"Attendee\" includes this property in an iCalendar object that\n      it sends\
    \ to the \"Organizer\" to specify the version of the calendar\n      component\
    \ to which the \"Attendee\" is referring.\n      A change to the sequence number\
    \ is not the mechanism that an\n      \"Organizer\" uses to request a response\
    \ from the \"Attendees\".  The\n      \"RSVP\" parameter on the \"ATTENDEE\" property\
    \ is used by the\n      \"Organizer\" to indicate that a response from the \"\
    Attendees\" is\n      requested.\n      Recurrence instances of a recurring component\
    \ MAY have different\n      sequence numbers.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       seq = \"SEQUENCE\" seqparam\
    \ \":\" integer CRLF\n       ; Default is \"0\"\n       seqparam   = *(\";\" other-param)\n\
    \   Example:  The following is an example of this property for a calendar\n  \
    \    component that was just created by the \"Organizer\":\n       SEQUENCE:0\n\
    \      The following is an example of this property for a calendar\n      component\
    \ that has been revised two different times by the\n      \"Organizer\":\n   \
    \    SEQUENCE:2\n"
- title: 3.8.8.  Miscellaneous Component Properties
  contents:
  - "3.8.8.  Miscellaneous Component Properties\n   The following properties specify\
    \ information about a number of\n   miscellaneous features of calendar components.\n"
- title: 3.8.8.1.  IANA Properties
  contents:
  - "3.8.8.1.  IANA Properties\n   Property Name:  An IANA-registered property name\n\
    \   Value Type:  The default value type is TEXT.  The value type can be\n    \
    \  set to any value type.\n   Property Parameters:  Any parameter can be specified\
    \ on this\n      property.\n   Description:  This specification allows other properties\
    \ registered\n      with IANA to be specified in any calendar components.  Compliant\n\
    \      applications are expected to be able to parse these other IANA-\n     \
    \ registered properties but can ignore them.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       iana-prop = iana-token\
    \ *(\";\" icalparameter) \":\" value CRLF\n   Example:  The following are examples\
    \ of properties that might be\n      registered to IANA:\n       DRESSCODE:CASUAL\n\
    \       NON-SMOKING;VALUE=BOOLEAN:TRUE\n"
- title: 3.8.8.2.  Non-Standard Properties
  contents:
  - "3.8.8.2.  Non-Standard Properties\n   Property Name:  Any property name with\
    \ a \"X-\" prefix\n   Purpose:  This class of property provides a framework for\
    \ defining\n      non-standard properties.\n   Value Type:  The default value\
    \ type is TEXT.  The value type can be\n      set to any value type.\n   Property\
    \ Parameters:  IANA, non-standard, and language property\n      parameters can\
    \ be specified on this property.\n   Conformance:  This property can be specified\
    \ in any calendar\n      component.\n   Description:  The MIME Calendaring and\
    \ Scheduling Content Type\n      provides a \"standard mechanism for doing non-standard\
    \ things\".\n      This extension support is provided for implementers to \"push\
    \ the\n      envelope\" on the existing version of the memo.  Extension\n    \
    \  properties are specified by property and/or property parameter\n      names\
    \ that have the prefix text of \"X-\" (the two-character\n      sequence: LATIN\
    \ CAPITAL LETTER X character followed by the HYPHEN-\n      MINUS character).\
    \  It is recommended that vendors concatenate onto\n      this sentinel another\
    \ short prefix text to identify the vendor.\n      This will facilitate readability\
    \ of the extensions and minimize\n      possible collision of names between different\
    \ vendors.  User\n      agents that support this content type are expected to\
    \ be able to\n      parse the extension properties and property parameters but\
    \ can\n      ignore them.\n      At present, there is no registration authority\
    \ for names of\n      extension properties and property parameters.  The value\
    \ type for\n      this property is TEXT.  Optionally, the value type can be any\
    \ of\n      the other valid value types.\n   Format Definition:  This property\
    \ is defined by the following\n      notation:\n       x-prop = x-name *(\";\"\
    \ icalparameter) \":\" value CRLF\n   Example:  The following might be the ABC\
    \ vendor's extension for an\n      audio-clip form of subject property:\n    \
    \   X-ABC-MMSUBJ;VALUE=URI;FMTTYPE=audio/basic:http://www.example.\n        org/mysubj.au\n"
- title: 3.8.8.3.  Request Status
  contents:
  - "3.8.8.3.  Request Status\n   Property Name:  REQUEST-STATUS\n   Purpose:  This\
    \ property defines the status code returned for a\n      scheduling request.\n\
    \   Value Type:  TEXT\n   Property Parameters:  IANA, non-standard, and language\
    \ property\n      parameters can be specified on this property.\n   Conformance:\
    \  The property can be specified in the \"VEVENT\", \"VTODO\",\n      \"VJOURNAL\"\
    , or \"VFREEBUSY\" calendar component.\n   Description:  This property is used\
    \ to return status code information\n      related to the processing of an associated\
    \ iCalendar object.  The\n      value type for this property is TEXT.\n      The\
    \ value consists of a short return status component, a longer\n      return status\
    \ description component, and optionally a status-\n      specific data component.\
    \  The components of the value are\n      separated by the SEMICOLON character.\n\
    \      The short return status is a PERIOD character separated pair or\n     \
    \ 3-tuple of integers.  For example, \"3.1\" or \"3.1.1\".  The\n      successive\
    \ levels of integers provide for a successive level of\n      status code granularity.\n\
    \      The following are initial classes for the return status code.\n      Individual\
    \ iCalendar object methods will define specific return\n      status codes for\
    \ these classes.  In addition, other classes for\n      the return status code\
    \ may be defined using the registration\n      process defined later in this memo.\n\
    \   +--------+----------------------------------------------------------+\n  \
    \ | Short  | Longer Return Status Description                         |\n   |\
    \ Return |                                                          |\n   | Status\
    \ |                                                          |\n   | Code   |\
    \                                                          |\n   +--------+----------------------------------------------------------+\n\
    \   | 1.xx   | Preliminary success.  This class of status code          |\n  \
    \ |        | indicates that the request has been initially processed  |\n   |\
    \        | but that completion is pending.                          |\n   |  \
    \      |                                                          |\n   | 2.xx\
    \   | Successful.  This class of status code indicates that    |\n   |       \
    \ | the request was completed successfully.  However, the    |\n   |        |\
    \ exact status code can indicate that a fallback has been  |\n   |        | taken.\
    \                                                   |\n   |        |         \
    \                                                 |\n   | 3.xx   | Client Error.\
    \  This class of status code indicates that  |\n   |        | the request was\
    \ not successful.  The error is the result |\n   |        | of either a syntax\
    \ or a semantic error in the client-    |\n   |        | formatted request.  Request\
    \ should not be retried until  |\n   |        | the condition in the request is\
    \ corrected.               |\n   |        |                                  \
    \                        |\n   | 4.xx   | Scheduling Error.  This class of status\
    \ code indicates   |\n   |        | that the request was not successful.  Some\
    \ sort of error |\n   |        | occurred within the calendaring and scheduling\
    \ service,  |\n   |        | not directly related to the request itself.     \
    \         |\n   +--------+----------------------------------------------------------+\n\
    \   Format Definition:  This property is defined by the following\n      notation:\n\
    \       rstatus    = \"REQUEST-STATUS\" rstatparam \":\"\n                   \
    \ statcode \";\" statdesc [\";\" extdata]\n       rstatparam = *(\n          \
    \        ;\n                  ; The following is OPTIONAL,\n                 \
    \ ; but MUST NOT occur more than once.\n                  ;\n                \
    \  (\";\" languageparam) /\n                  ;\n                  ; The following\
    \ is OPTIONAL,\n                  ; and MAY occur more than once.\n          \
    \        ;\n                  (\";\" other-param)\n                  ;\n     \
    \             )\n       statcode   = 1*DIGIT 1*2(\".\" 1*DIGIT)\n       ;Hierarchical,\
    \ numeric return status code\n       statdesc   = text\n       ;Textual status\
    \ description\n       extdata    = text\n       ;Textual exception data.  For\
    \ example, the offending property\n       ;name and value or complete property\
    \ line.\n   Example:  The following are some possible examples of this property.\n\
    \      The COMMA and SEMICOLON separator characters in the property value\n  \
    \    are BACKSLASH character escaped because they appear in a text\n      value.\n\
    \       REQUEST-STATUS:2.0;Success\n       REQUEST-STATUS:3.1;Invalid property\
    \ value;DTSTART:96-Apr-01\n       REQUEST-STATUS:2.8; Success\\, repeating event\
    \ ignored. Scheduled\n        as a single event.;RRULE:FREQ=WEEKLY\\;INTERVAL=2\n\
    \       REQUEST-STATUS:4.1;Event conflict.  Date-time is busy.\n       REQUEST-STATUS:3.7;Invalid\
    \ calendar user;ATTENDEE:\n        mailto:jsmith@example.com\n"
- title: 4.  iCalendar Object Examples
  contents:
  - "4.  iCalendar Object Examples\n   The following examples are provided as an informational\
    \ source of\n   illustrative iCalendar objects consistent with this content type.\n\
    \   The following example specifies a three-day conference that begins at\n  \
    \ 2:30 P.M. UTC, September 18, 1996 and ends at 10:00 P.M. UTC,\n   September\
    \ 20, 1996.\n       BEGIN:VCALENDAR\n       PRODID:-//xyz Corp//NONSGML PDA Calendar\
    \ Version 1.0//EN\n       VERSION:2.0\n       BEGIN:VEVENT\n       DTSTAMP:19960704T120000Z\n\
    \       UID:uid1@example.com\n       ORGANIZER:mailto:jsmith@example.com\n   \
    \    DTSTART:19960918T143000Z\n       DTEND:19960920T220000Z\n       STATUS:CONFIRMED\n\
    \       CATEGORIES:CONFERENCE\n       SUMMARY:Networld+Interop Conference\n  \
    \     DESCRIPTION:Networld+Interop Conference\n         and Exhibit\\nAtlanta\
    \ World Congress Center\\n\n        Atlanta\\, Georgia\n       END:VEVENT\n  \
    \     END:VCALENDAR\n   The following example specifies a group-scheduled meeting\
    \ that begins\n   at 8:30 AM EST on March 12, 1998 and ends at 9:30 AM EST on\
    \ March 12,\n   1998.  The \"Organizer\" has scheduled the meeting with one or\
    \ more\n   calendar users in a group.  A time zone specification for Eastern\n\
    \   United States has been specified.\n       BEGIN:VCALENDAR\n       PRODID:-//RDU\
    \ Software//NONSGML HandCal//EN\n       VERSION:2.0\n       BEGIN:VTIMEZONE\n\
    \       TZID:America/New_York\n       BEGIN:STANDARD\n       DTSTART:19981025T020000\n\
    \       TZOFFSETFROM:-0400\n       TZOFFSETTO:-0500\n       TZNAME:EST\n     \
    \  END:STANDARD\n       BEGIN:DAYLIGHT\n       DTSTART:19990404T020000\n     \
    \  TZOFFSETFROM:-0500\n       TZOFFSETTO:-0400\n       TZNAME:EDT\n       END:DAYLIGHT\n\
    \       END:VTIMEZONE\n       BEGIN:VEVENT\n       DTSTAMP:19980309T231000Z\n\
    \       UID:guid-1.example.com\n       ORGANIZER:mailto:mrbig@example.com\n  \
    \     ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:\n        mailto:employee-A@example.com\n\
    \       DESCRIPTION:Project XYZ Review Meeting\n       CATEGORIES:MEETING\n  \
    \     CLASS:PUBLIC\n       CREATED:19980309T130000Z\n       SUMMARY:XYZ Project\
    \ Review\n       DTSTART;TZID=America/New_York:19980312T083000\n       DTEND;TZID=America/New_York:19980312T093000\n\
    \       LOCATION:1CP Conference Room 4350\n       END:VEVENT\n       END:VCALENDAR\n\
    \   The following is an example of an iCalendar object passed in a MIME\n   message\
    \ with a single body part consisting of a \"text/calendar\"\n   Content Type.\n\
    \       TO:jsmith@example.com\n       FROM:jdoe@example.com\n       MIME-VERSION:1.0\n\
    \       MESSAGE-ID:<id3@example.com>\n       CONTENT-TYPE:text/calendar; method=\"\
    xyz\"; component=\"VEVENT\"\n       BEGIN:VCALENDAR\n       METHOD:xyz\n     \
    \  VERSION:2.0\n       PRODID:-//ABC Corporation//NONSGML My Product//EN\n   \
    \    BEGIN:VEVENT\n       DTSTAMP:19970324T120000Z\n       SEQUENCE:0\n      \
    \ UID:uid3@example.com\n       ORGANIZER:mailto:jdoe@example.com\n       ATTENDEE;RSVP=TRUE:mailto:jsmith@example.com\n\
    \       DTSTART:19970324T123000Z\n       DTEND:19970324T210000Z\n       CATEGORIES:MEETING,PROJECT\n\
    \       CLASS:PUBLIC\n       SUMMARY:Calendaring Interoperability Planning Meeting\n\
    \       DESCRIPTION:Discuss how we can test c&s interoperability\\n\n        using\
    \ iCalendar and other IETF standards.\n       LOCATION:LDB Lobby\n       ATTACH;FMTTYPE=application/postscript:ftp://example.com/pub/\n\
    \        conf/bkgrnd.ps\n       END:VEVENT\n       END:VCALENDAR\n   The following\
    \ is an example of a to-do due on April 15, 1998.  An\n   audio alarm has been\
    \ specified to remind the calendar user at noon,\n   the day before the to-do\
    \ is expected to be completed and repeat\n   hourly, four additional times.  The\
    \ to-do definition has been\n   modified twice since it was initially created.\n\
    \       BEGIN:VCALENDAR\n       VERSION:2.0\n       PRODID:-//ABC Corporation//NONSGML\
    \ My Product//EN\n       BEGIN:VTODO\n       DTSTAMP:19980130T134500Z\n      \
    \ SEQUENCE:2\n       UID:uid4@example.com\n       ORGANIZER:mailto:unclesam@example.com\n\
    \       ATTENDEE;PARTSTAT=ACCEPTED:mailto:jqpublic@example.com\n       DUE:19980415T000000\n\
    \       STATUS:NEEDS-ACTION\n       SUMMARY:Submit Income Taxes\n       BEGIN:VALARM\n\
    \       ACTION:AUDIO\n       TRIGGER:19980403T120000Z\n       ATTACH;FMTTYPE=audio/basic:http://example.com/pub/audio-\n\
    \        files/ssbanner.aud\n       REPEAT:4\n       DURATION:PT1H\n       END:VALARM\n\
    \       END:VTODO\n       END:VCALENDAR\n   The following is an example of a journal\
    \ entry:\n       BEGIN:VCALENDAR\n       VERSION:2.0\n       PRODID:-//ABC Corporation//NONSGML\
    \ My Product//EN\n       BEGIN:VJOURNAL\n       DTSTAMP:19970324T120000Z\n   \
    \    UID:uid5@example.com\n       ORGANIZER:mailto:jsmith@example.com\n      \
    \ STATUS:DRAFT\n       CLASS:PUBLIC\n       CATEGORIES:Project Report,XYZ,Weekly\
    \ Meeting\n       DESCRIPTION:Project xyz Review Meeting Minutes\\n\n        Agenda\\\
    n1. Review of project version 1.0 requirements.\\n2.\n         Definition\n  \
    \      of project processes.\\n3. Review of project schedule.\\n\n        Participants:\
    \ John Smith\\, Jane Doe\\, Jim Dandy\\n-It was\n         decided that the requirements\
    \ need to be signed off by\n         product marketing.\\n-Project processes were\
    \ accepted.\\n\n        -Project schedule needs to account for scheduled holidays\n\
    \         and employee vacation time. Check with HR for specific\n         dates.\\\
    n-New schedule will be distributed by Friday.\\n-\n        Next weeks meeting\
    \ is cancelled. No meeting until 3/23.\n       END:VJOURNAL\n       END:VCALENDAR\n\
    \   The following is an example of published busy time information.  The\n   iCalendar\
    \ object might be placed in the network resource\n   http://www.example.com/calendar/busytime/jsmith.ifb.\n\
    \       BEGIN:VCALENDAR\n       VERSION:2.0\n       PRODID:-//RDU Software//NONSGML\
    \ HandCal//EN\n       BEGIN:VFREEBUSY\n       ORGANIZER:mailto:jsmith@example.com\n\
    \       DTSTART:19980313T141711Z\n       DTEND:19980410T141711Z\n       FREEBUSY:19980314T233000Z/19980315T003000Z\n\
    \       FREEBUSY:19980316T153000Z/19980316T163000Z\n       FREEBUSY:19980318T030000Z/19980318T040000Z\n\
    \       URL:http://www.example.com/calendar/busytime/jsmith.ifb\n       END:VFREEBUSY\n\
    \       END:VCALENDAR\n"
- title: 5.  Recommended Practices
  contents:
  - "5.  Recommended Practices\n   These recommended practices should be followed\
    \ in order to assure\n   consistent handling of the following cases for an iCalendar\
    \ object.\n   1.  Content lines longer than 75 octets SHOULD be folded.\n   2.\
    \  When the combination of the \"RRULE\" and \"RDATE\" properties in a\n     \
    \  recurring component produces multiple instances having the same\n       start\
    \ DATE-TIME value, they should be collapsed to, and\n       considered as, a single\
    \ instance.  If the \"RDATE\" property is\n       specified as a PERIOD value\
    \ the duration of the recurrence\n       instance will be the one specified by\
    \ the \"RDATE\" property, and\n       not the duration of the recurrence instance\
    \ defined by the\n       \"DTSTART\" property.\n   3.  When a calendar user receives\
    \ multiple requests for the same\n       calendar component (e.g., REQUEST for\
    \ a \"VEVENT\" calendar\n       component) as a result of being on multiple mailing\
    \ lists\n       specified by \"ATTENDEE\" properties in the request, they SHOULD\n\
    \       respond to only one of the requests.  The calendar user SHOULD\n     \
    \  also specify (using the \"MEMBER\" parameter of the \"ATTENDEE\"\n       property)\
    \ of which mailing list they are a member.\n   4.  An implementation can truncate\
    \ a \"SUMMARY\" property value to 255\n       octets, but it MUST NOT truncate\
    \ the value in the middle of a\n       UTF-8 multi-octet sequence.\n   5.  If\
    \ seconds of the minute are not supported by an implementation,\n       then a\
    \ value of \"00\" SHOULD be specified for the seconds\n       component in a time\
    \ value.\n   6.  \"TZURL\" values SHOULD NOT be specified as a file URI type.\
    \  This\n       URI form can be useful within an organization, but is problematic\n\
    \       in the Internet.\n   7.  Some possible English values for \"CATEGORIES\"\
    \ property include:\n       \"ANNIVERSARY\", \"APPOINTMENT\", \"BUSINESS\", \"\
    EDUCATION\", \"HOLIDAY\",\n       \"MEETING\", \"MISCELLANEOUS\", \"NON-WORKING\
    \ HOURS\", \"NOT IN OFFICE\",\n       \"PERSONAL\", \"PHONE CALL\", \"SICK DAY\"\
    , \"SPECIAL OCCASION\",\n       \"TRAVEL\", \"VACATION\".  Categories can be specified\
    \ in any\n       registered language.\n   8.  Some possible English values for\
    \ the \"RESOURCES\" property\n       include: \"CATERING\", \"CHAIRS\", \"COMPUTER\
    \ PROJECTOR\", \"EASEL\",\n       \"OVERHEAD PROJECTOR\", \"SPEAKER PHONE\", \"\
    TABLE\", \"TV\", \"VCR\",\n       \"VIDEO PHONE\", \"VEHICLE\".  Resources can\
    \ be specified in any\n       registered language.\n"
- title: 6.  Internationalization Considerations
  contents:
  - "6.  Internationalization Considerations\n   Applications MUST generate iCalendar\
    \ streams in the UTF-8 charset and\n   MUST accept an iCalendar stream in the\
    \ UTF-8 or US-ASCII charset.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Because calendaring and scheduling information\
    \ is very privacy-\n   sensitive, the protocol used for the transmission of calendaring\
    \ and\n   scheduling information should have capabilities to protect the\n   information\
    \ from possible threats, such as eavesdropping, replay,\n   message insertion,\
    \ deletion, modification, and man-in-the-middle\n   attacks.\n   As this document\
    \ only defines the data format and media type of text/\n   calendar that is independent\
    \ of any calendar service or protocol, it\n   is up to the actual protocol specifications\
    \ such as iTIP [2446bis],\n   iMIP [2447bis], and \"Calendaring Extensions to\
    \ WebDAV (CalDAV)\"\n   [RFC4791] to describe the threats that the above attacks\
    \ present, as\n   well as ways in which to mitigate them.\n"
- title: 8.  IANA Considerations
  contents:
  - '8.  IANA Considerations

    '
- title: 8.1.  iCalendar Media Type Registration
  contents:
  - "8.1.  iCalendar Media Type Registration\n   The Calendaring and Scheduling Core\
    \ Object Specification is intended\n   for use as a MIME content type.\n   To:\
    \ ietf-types@iana.org\n   Subject: Registration of media type text/calendar\n\
    \   Type name:  text\n   Subtype name:  calendar\n   Required parameters:  none\n\
    \   Optional parameters:  charset, method, component, and optinfo\n      The \"\
    charset\" parameter is defined in [RFC2046] for subtypes of\n      the \"text\"\
    \ media type.  It is used to indicate the charset used in\n      the body part.\
    \  The charset supported by this revision of\n      iCalendar is UTF-8.  The use\
    \ of any other charset is deprecated by\n      this revision of iCalendar; however,\
    \ note that this revision\n      requires that compliant applications MUST accept\
    \ iCalendar streams\n      using either the UTF-8 or US-ASCII charset.\n     \
    \ The \"method\" parameter is used to convey the iCalendar object\n      method\
    \ or transaction semantics for the calendaring and scheduling\n      information.\
    \  It also is an identifier for the restricted set of\n      properties and values\
    \ of which the iCalendar object consists.  The\n      parameter is to be used\
    \ as a guide for applications interpreting\n      the information contained within\
    \ the body part.  It SHOULD NOT be\n      used to exclude or require particular\
    \ pieces of information unless\n      the identified method definition specifically\
    \ calls for this\n      behavior.  Unless specifically forbidden by a particular\
    \ method\n      definition, a text/calendar content type can contain any set of\n\
    \      properties permitted by the Calendaring and Scheduling Core Object\n  \
    \    Specification.  The \"method\" parameter MUST be specified and MUST\n   \
    \   be set to the same value as the \"METHOD\" component property of the\n   \
    \   iCalendar objects of the iCalendar stream if and only if the\n      iCalendar\
    \ objects in the iCalendar stream all have a \"METHOD\"\n      component property\
    \ set to the same value.\n      The value for the \"method\" parameter is defined\
    \ as follows:\n       method  = 1*(ALPHA / DIGIT / \"-\")\n       ; IANA-registered\
    \ iCalendar object method\n      The \"component\" parameter conveys the type\
    \ of iCalendar calendar\n      component within the body part.  If the iCalendar\
    \ object contains\n      more than one calendar component type, then multiple\
    \ component\n      parameters MUST be specified.\n      The value for the \"component\"\
    \ parameter is defined as follows:\n       component = \"VEVENT\"\n          \
    \       / \"VTODO\"\n                 / \"VJOURNAL\"\n                 / \"VFREEBUSY\"\
    \n                 / \"VTIMEZONE\"\n                 / iana-token\n          \
    \       / x-name\n      The \"optinfo\" parameter conveys optional information\
    \ about the\n      iCalendar object within the body part.  This parameter can\
    \ only\n      specify semantics already specified by the iCalendar object and\n\
    \      that can be otherwise determined by parsing the body part.  In\n      addition,\
    \ the optional information specified by this parameter\n      MUST be consistent\
    \ with that information specified by the\n      iCalendar object.  For example,\
    \ it can be used to convey the\n      \"Attendee\" response status to a meeting\
    \ request.  The parameter\n      value consists of a string value.\n      The\
    \ parameter can be specified multiple times.\n      The value for the \"optinfo\"\
    \ parameter is defined as follows:\n       optinfo    = infovalue / qinfovalue\n\
    \       infovalue  = iana-token / x-name\n       qinfovalue = DQUOTE (infovalue)\
    \ DQUOTE\n   Encoding considerations:  This media type can contain 8bit\n    \
    \  characters, so the use of quoted-printable or base64 MIME Content-\n      Transfer-Encodings\
    \ might be necessary when iCalendar objects are\n      transferred across protocols\
    \ restricted to the 7bit repertoire.\n      Note that a text valued property in\
    \ the content entity can also\n      have content encoding of special characters\
    \ using a BACKSLASH\n      character escapement technique.  This means that content\
    \ values\n      can end up being encoded twice.\n   Security considerations: \
    \ See Section 7.\n   Interoperability considerations:  This media type is intended\
    \ to\n      define a common format for conveying calendaring and scheduling\n\
    \      information between different systems.  It is heavily based on the\n  \
    \    earlier [VCAL] industry specification.\n   Published specification:  This\
    \ specification.\n   Applications that use this media type:  This media type is\
    \ designed\n      for widespread use by Internet calendaring and scheduling\n\
    \      applications.  In addition, applications in the workflow and\n      document\
    \ management area might find this content-type applicable.\n      The iTIP [2446bis],\
    \ iMIP [2447bis], and CalDAV [RFC4791] Internet\n      protocols directly use\
    \ this media type also.\n   Additional information:\n      Magic number(s):  None.\n\
    \      File extension(s):  The file extension of \"ics\" is to be used to\n  \
    \       designate a file containing (an arbitrary set of) calendaring\n      \
    \   and scheduling information consistent with this MIME content\n         type.\n\
    \         The file extension of \"ifb\" is to be used to designate a file\n  \
    \       containing free or busy time information consistent with this\n      \
    \   MIME content type.\n      Macintosh file type code(s):  The file type code\
    \ of \"iCal\" is to\n         be used in Apple MacIntosh operating system environments\
    \ to\n         designate a file containing calendaring and scheduling\n      \
    \   information consistent with this MIME media type.\n         The file type\
    \ code of \"iFBf\" is to be used in Apple MacIntosh\n         operating system\
    \ environments to designate a file containing\n         free or busy time information\
    \ consistent with this MIME media\n         type.\n   Person & email address to\
    \ contact for further information:  See the\n      \"Author's Address\" section\
    \ of this document.\n   Intended usage:  COMMON\n   Restrictions on usage:  There\
    \ are no restrictions on where this media\n      type can be used.\n   Author:\
    \  See the \"Author's Address\" section of this document.\n   Change controller:\
    \  IETF\n"
- title: 8.2.  New iCalendar Elements Registration
  contents:
  - "8.2.  New iCalendar Elements Registration\n   This section defines the process\
    \ to register new or modified\n   iCalendar elements, that is, components, properties,\
    \ parameters,\n   value data types, and values, with IANA.\n"
- title: 8.2.1.  iCalendar Elements Registration Procedure
  contents:
  - "8.2.1.  iCalendar Elements Registration Procedure\n   The IETF will create a\
    \ mailing list, icalendar@ietf.org, which can be\n   used for public discussion\
    \ of iCalendar elements proposals prior to\n   registration.  Use of the mailing\
    \ list is strongly encouraged.  The\n   IESG will appoint a designated expert\
    \ who will monitor the\n   icalendar@ietf.org mailing list and review registrations.\n\
    \   Registration of new iCalendar elements MUST be reviewed by the\n   designated\
    \ expert and published in an RFC.  A Standards Track RFC is\n   REQUIRED for the\
    \ registration of new value data types that modify\n   existing properties, as\
    \ well as for the registration of participation\n   status values to be used in\
    \ \"VEVENT\" calendar components.  A\n   Standards Track RFC is also REQUIRED\
    \ for registration of iCalendar\n   elements that modify iCalendar elements previously\
    \ documented in a\n   Standards Track RFC.\n   The registration procedure begins\
    \ when a completed registration\n   template, defined in the sections below, is\
    \ sent to\n   icalendar@ietf.org and iana@iana.org.  The designated expert is\n\
    \   expected to tell IANA and the submitter of the registration within\n   two\
    \ weeks whether the registration is approved, approved with minor\n   changes,\
    \ or rejected with cause.  When a registration is rejected\n   with cause, it\
    \ can be re-submitted if the concerns listed in the\n   cause are addressed. \
    \ Decisions made by the designated expert can be\n   appealed to the IESG Applications\
    \ Area Director, then to the IESG.\n   They follow the normal appeals procedure\
    \ for IESG decisions.\n"
- title: 8.2.2.  Registration Template for Components
  contents:
  - "8.2.2.  Registration Template for Components\n   A component is defined by completing\
    \ the following template.\n   Component name:  The name of the component.\n  \
    \ Purpose:  The purpose of the component.  Give a short but clear\n      description.\n\
    \   Format definition:  The ABNF for the component definition needs to be\n  \
    \    specified.\n   Description:  Any special notes about the component, how it\
    \ is to be\n      used, etc.\n   Example(s):  One or more examples of instances\
    \ of the component need\n      to be specified.\n"
- title: 8.2.3.  Registration Template for Properties
  contents:
  - "8.2.3.  Registration Template for Properties\n   A property is defined by completing\
    \ the following template.\n   Property name:  The name of the property.\n   Purpose:\
    \  The purpose of the property.  Give a short but clear\n      description.\n\
    \   Value type:  Any of the valid value types for the property value need\n  \
    \    to be specified.  The default value type also needs to be\n      specified.\n\
    \   Property parameters:  Any of the valid property parameters for the\n     \
    \ property MUST be specified.\n   Conformance:  The calendar components in which\
    \ the property can\n      appear MUST be specified.\n   Description:  Any special\
    \ notes about the property, how it is to be\n      used, etc.\n   Format definition:\
    \  The ABNF for the property definition needs to be\n      specified.\n   Example(s):\
    \  One or more examples of instances of the property need\n      to be specified.\n"
- title: 8.2.4.  Registration Template for Parameters
  contents:
  - "8.2.4.  Registration Template for Parameters\n   A parameter is defined by completing\
    \ the following template.\n   Parameter name:  The name of the parameter.\n  \
    \ Purpose:  The purpose of the parameter.  Give a short but clear\n      description.\n\
    \   Format definition:  The ABNF for the parameter definition needs to be\n  \
    \    specified.\n   Description:  Any special notes about the parameter, how it\
    \ is to be\n      used, etc.\n   Example(s):  One or more examples of instances\
    \ of the parameter need\n      to be specified.\n"
- title: 8.2.5.  Registration Template for Value Data Types
  contents:
  - "8.2.5.  Registration Template for Value Data Types\n   A value data type is defined\
    \ by completing the following template.\n   Value name:  The name of the value\
    \ type.\n   Purpose:  The purpose of the value type.  Give a short but clear\n\
    \      description.\n   Format definition:  The ABNF for the value type definition\
    \ needs to\n      be specified.\n   Description:  Any special notes about the\
    \ value type, how it is to be\n      used, etc.\n   Example(s):  One or more examples\
    \ of instances of the value type need\n      to be specified.\n"
- title: 8.2.6.  Registration Template for Values
  contents:
  - "8.2.6.  Registration Template for Values\n   A value is defined by completing\
    \ the following template.\n   Value:  The value literal.\n   Purpose:  The purpose\
    \ of the value.  Give a short but clear\n      description.\n   Conformance: \
    \ The calendar properties and/or parameters that can take\n      this value need\
    \ to be specified.\n   Example(s):  One or more examples of instances of the value\
    \ need to\n      be specified.\n   The following is a fictitious example of a\
    \ registration of an\n   iCalendar value:\n   Value:  TOP-SECRET\n   Purpose:\
    \  This value is used to specify the access classification of\n      top-secret\
    \ calendar components.\n   Conformance:  This value can be used with the \"CLASS\"\
    \ property.\n   Example(s):  The following is an example of this value used with\
    \ the\n      \"CLASS\" property:\n     CLASS:TOP-SECRET\n"
- title: 8.3.  Initial iCalendar Elements Registries
  contents:
  - "8.3.  Initial iCalendar Elements Registries\n   The IANA created and maintains\
    \ the following registries for iCalendar\n   elements with pointers to appropriate\
    \ reference documents.\n"
- title: 8.3.1.  Components Registry
  contents:
  - "8.3.1.  Components Registry\n   The following table has been used to initialize\
    \ the components\n   registry.\n             +-----------+---------+-------------------------+\n\
    \             | Component | Status  | Reference               |\n            \
    \ +-----------+---------+-------------------------+\n             | VCALENDAR\
    \ | Current | RFC 5545, Section 3.4   |\n             |           |         |\
    \                         |\n             | VEVENT    | Current | RFC 5545, Section\
    \ 3.6.1 |\n             |           |         |                         |\n  \
    \           | VTODO     | Current | RFC 5545, Section 3.6.2 |\n             |\
    \           |         |                         |\n             | VJOURNAL  |\
    \ Current | RFC 5545, Section 3.6.3 |\n             |           |         |  \
    \                       |\n             | VFREEBUSY | Current | RFC 5545, Section\
    \ 3.6.4 |\n             |           |         |                         |\n  \
    \           | VTIMEZONE | Current | RFC 5545, Section 3.6.5 |\n             |\
    \           |         |                         |\n             | VALARM    |\
    \ Current | RFC 5545, Section 3.6.6 |\n             |           |         |  \
    \                       |\n             | STANDARD  | Current | RFC 5545, Section\
    \ 3.6.5 |\n             |           |         |                         |\n  \
    \           | DAYLIGHT  | Current | RFC 5545, Section 3.6.5 |\n             +-----------+---------+-------------------------+\n"
- title: 8.3.2.  Properties Registry
  contents:
  - "8.3.2.  Properties Registry\n   The following table is has been used to initialize\
    \ the properties\n   registry.\n      +------------------+------------+----------------------------+\n\
    \      | Property         | Status     | Reference                  |\n      +------------------+------------+----------------------------+\n\
    \      | CALSCALE         | Current    | RFC 5545, Section 3.7.1    |\n      |\
    \ METHOD           | Current    | RFC 5545, Section 3.7.2    |\n      |      \
    \            |            |                            |\n      | PRODID     \
    \      | Current    | RFC 5545, Section 3.7.3    |\n      |                  |\
    \            |                            |\n      | VERSION          | Current\
    \    | RFC 5545, Section 3.7.4    |\n      |                  |            | \
    \                           |\n      | ATTACH           | Current    | RFC 5545,\
    \ Section 3.8.1.1  |\n      |                  |            |                \
    \            |\n      | CATEGORIES       | Current    | RFC 5545, Section 3.8.1.2\
    \  |\n      |                  |            |                            |\n \
    \     | CLASS            | Current    | RFC 5545, Section 3.8.1.3  |\n      |\
    \                  |            |                            |\n      | COMMENT\
    \          | Current    | RFC 5545, Section 3.8.1.4  |\n      |              \
    \    |            |                            |\n      | DESCRIPTION      | Current\
    \    | RFC 5545, Section 3.8.1.5  |\n      |                  |            | \
    \                           |\n      | GEO              | Current    | RFC 5545,\
    \ Section 3.8.1.6  |\n      |                  |            |                \
    \            |\n      | LOCATION         | Current    | RFC 5545, Section 3.8.1.7\
    \  |\n      |                  |            |                            |\n \
    \     | PERCENT-COMPLETE | Current    | RFC 5545, Section 3.8.1.8  |\n      |\
    \                  |            |                            |\n      | PRIORITY\
    \         | Current    | RFC 5545, Section 3.8.1.9  |\n      |               \
    \   |            |                            |\n      | RESOURCES        | Current\
    \    | RFC 5545, Section 3.8.1.10 |\n      |                  |            | \
    \                           |\n      | STATUS           | Current    | RFC 5545,\
    \ Section 3.8.1.11 |\n      |                  |            |                \
    \            |\n      | SUMMARY          | Current    | RFC 5545, Section 3.8.1.12\
    \ |\n      |                  |            |                            |\n  \
    \    | COMPLETED        | Current    | RFC 5545, Section 3.8.2.1  |\n      | \
    \                 |            |                            |\n      | DTEND \
    \           | Current    | RFC 5545, Section 3.8.2.2  |\n      |             \
    \     |            |                            |\n      | DUE              |\
    \ Current    | RFC 5545, Section 3.8.2.3  |\n      |                  |      \
    \      |                            |\n      | DTSTART          | Current    |\
    \ RFC 5545, Section 3.8.2.4  |\n      |                  |            |      \
    \                      |\n      | DURATION         | Current    | RFC 5545, Section\
    \ 3.8.2.5  |\n      |                  |            |                        \
    \    |\n      | FREEBUSY         | Current    | RFC 5545, Section 3.8.2.6  |\n\
    \      |                  |            |                            |\n      |\
    \ TRANSP           | Current    | RFC 5545, Section 3.8.2.7  |\n      |      \
    \            |            |                            |\n      | TZID       \
    \      | Current    | RFC 5545, Section 3.8.3.1  |\n      |                  |\
    \            |                            |\n      | TZNAME           | Current\
    \    | RFC 5545, Section 3.8.3.2  |\n      |                  |            | \
    \                           |\n      | TZOFFSETFROM     | Current    | RFC 5545,\
    \ Section 3.8.3.3  |\n      |                  |            |                \
    \            |\n      | TZOFFSETTO       | Current    | RFC 5545, Section 3.8.3.4\
    \  |\n      |                  |            |                            |\n \
    \     | TZURL            | Current    | RFC 5545, Section 3.8.3.5  |\n      |\
    \                  |            |                            |\n      | ATTENDEE\
    \         | Current    | RFC 5545, Section 3.8.4.1  |\n      |               \
    \   |            |                            |\n      | CONTACT          | Current\
    \    | RFC 5545, Section 3.8.4.2  |\n      |                  |            | \
    \                           |\n      | ORGANIZER        | Current    | RFC 5545,\
    \ Section 3.8.4.3  |\n      |                  |            |                \
    \            |\n      | RECURRENCE-ID    | Current    | RFC 5545, Section 3.8.4.4\
    \  |\n      |                  |            |                            |\n \
    \     | RELATED-TO       | Current    | RFC 5545, Section 3.8.4.5  |\n      |\
    \                  |            |                            |\n      | URL  \
    \            | Current    | RFC 5545, Section 3.8.4.6  |\n      |            \
    \      |            |                            |\n      | UID              |\
    \ Current    | RFC 5545, Section 3.8.4.7  |\n      |                  |      \
    \      |                            |\n      | EXDATE           | Current    |\
    \ RFC 5545, Section 3.8.5.1  |\n      |                  |            |      \
    \                      |\n      | EXRULE           | Deprecated | [RFC2445], Section\
    \ 4.8.5.2 |\n      |                  |            |                         \
    \   |\n      | RDATE            | Current    | RFC 5545, Section 3.8.5.2  |\n\
    \      |                  |            |                            |\n      |\
    \ RRULE            | Current    | RFC 5545, Section 3.8.5.3  |\n      |      \
    \            |            |                            |\n      | ACTION     \
    \      | Current    | RFC 5545, Section 3.8.6.1  |\n      |                  |\
    \            |                            |\n      | REPEAT           | Current\
    \    | RFC 5545, Section 3.8.6.2  |\n      |                  |            | \
    \                           |\n      | TRIGGER          | Current    | RFC 5545,\
    \ Section 3.8.6.3  |\n      |                  |            |                \
    \            |\n      | CREATED          | Current    | RFC 5545, Section 3.8.7.1\
    \  |\n      |                  |            |                            |\n \
    \     | DTSTAMP          | Current    | RFC 5545, Section 3.8.7.2  |\n      |\
    \                  |            |                            |\n      | LAST-MODIFIED\
    \    | Current    | RFC 5545, Section 3.8.7.3  |\n      |                  | \
    \           |                            |\n      | SEQUENCE         | Current\
    \    | RFC 5545, Section 3.8.7.4  |\n      |                  |            | \
    \                           |\n      | REQUEST-STATUS   | Current    | RFC 5545,\
    \ Section 3.8.8.3  |\n      +------------------+------------+----------------------------+\n"
- title: 8.3.3.  Parameters Registry
  contents:
  - "8.3.3.  Parameters Registry\n   The following table has been used to initialize\
    \ the parameters\n   registry.\n          +----------------+---------+--------------------------+\n\
    \          | Parameter      | Status  | Reference                |\n         \
    \ +----------------+---------+--------------------------+\n          | ALTREP\
    \         | Current | RFC 5545, Section 3.2.1  |\n          |                |\
    \         |                          |\n          | CN             | Current |\
    \ RFC 5545, Section 3.2.2  |\n          |                |         |         \
    \                 |\n          | CUTYPE         | Current | RFC 5545, Section\
    \ 3.2.3  |\n          |                |         |                          |\n\
    \          | DELEGATED-FROM | Current | RFC 5545, Section 3.2.4  |\n         \
    \ |                |         |                          |\n          | DELEGATED-TO\
    \   | Current | RFC 5545, Section 3.2.5  |\n          |                |     \
    \    |                          |\n          | DIR            | Current | RFC\
    \ 5545, Section 3.2.6  |\n          |                |         |             \
    \             |\n          | ENCODING       | Current | RFC 5545, Section 3.2.7\
    \  |\n          |                |         |                          |\n    \
    \      | FMTTYPE        | Current | RFC 5545, Section 3.2.8  |\n          |  \
    \              |         |                          |\n          | FBTYPE    \
    \     | Current | RFC 5545, Section 3.2.9  |\n          |                |   \
    \      |                          |\n          | LANGUAGE       | Current | RFC\
    \ 5545, Section 3.2.10 |\n          |                |         |             \
    \             |\n          | MEMBER         | Current | RFC 5545, Section 3.2.11\
    \ |\n          |                |         |                          |\n     \
    \     | PARTSTAT       | Current | RFC 5545, Section 3.2.12 |\n          |   \
    \             |         |                          |\n          | RANGE      \
    \    | Current | RFC 5545, Section 3.2.13 |\n          |                |    \
    \     |                          |\n          | RELATED        | Current | RFC\
    \ 5545, Section 3.2.14 |\n          |                |         |             \
    \             |\n          | RELTYPE        | Current | RFC 5545, Section 3.2.15\
    \ |\n          |                |         |                          |\n     \
    \     | ROLE           | Current | RFC 5545, Section 3.2.16 |\n          |   \
    \             |         |                          |\n          | RSVP       \
    \    | Current | RFC 5545, Section 3.2.17 |\n          |                |    \
    \     |                          |\n          | SENT-BY        | Current | RFC\
    \ 5545, Section 3.2.18 |\n          |                |         |             \
    \             |\n          | TZID           | Current | RFC 5545, Section 3.2.19\
    \ |\n          |                |         |                          |\n     \
    \     | VALUE          | Current | RFC 5545, Section 3.2.20 |\n          +----------------+---------+--------------------------+\n"
- title: 8.3.4.  Value Data Types Registry
  contents:
  - "8.3.4.  Value Data Types Registry\n   The following table has been used to initialize\
    \ the value data types\n   registry.\n         +-----------------+---------+--------------------------+\n\
    \         | Value Data Type | Status  | Reference                |\n         +-----------------+---------+--------------------------+\n\
    \         | BINARY          | Current | RFC 5545, Section 3.3.1  |\n         |\
    \                 |         |                          |\n         | BOOLEAN \
    \        | Current | RFC 5545, Section 3.3.2  |\n         |                 |\
    \         |                          |\n         | CAL-ADDRESS     | Current |\
    \ RFC 5545, Section 3.3.3  |\n         |                 |         |         \
    \                 |\n         | DATE            | Current | RFC 5545, Section\
    \ 3.3.4  |\n         |                 |         |                          |\n\
    \         | DATE-TIME       | Current | RFC 5545, Section 3.3.5  |\n         |\
    \                 |         |                          |\n         | DURATION\
    \        | Current | RFC 5545, Section 3.3.6  |\n         |                 |\
    \         |                          |\n         | FLOAT           | Current |\
    \ RFC 5545, Section 3.3.7  |\n         |                 |         |         \
    \                 |\n         | INTEGER         | Current | RFC 5545, Section\
    \ 3.3.8  |\n         |                 |         |                          |\n\
    \         | PERIOD          | Current | RFC 5545, Section 3.3.9  |\n         |\
    \                 |         |                          |\n         | RECUR   \
    \        | Current | RFC 5545, Section 3.3.10 |\n         |                 |\
    \         |                          |\n         | TEXT            | Current |\
    \ RFC 5545, Section 3.3.11 |\n         |                 |         |         \
    \                 |\n         | TIME            | Current | RFC 5545, Section\
    \ 3.3.12 |\n         |                 |         |                          |\n\
    \         | URI             | Current | RFC 5545, Section 3.3.13 |\n         |\
    \                 |         |                          |\n         | UTC-OFFSET\
    \      | Current | RFC 5545, Section 3.3.14 |\n         +-----------------+---------+--------------------------+\n"
- title: 8.3.5.  Calendar User Types Registry
  contents:
  - "8.3.5.  Calendar User Types Registry\n   The following table has been used to\
    \ initialize the calendar user\n   types registry.\n        +--------------------+---------+-------------------------+\n\
    \        | Calendar User Type | Status  | Reference               |\n        +--------------------+---------+-------------------------+\n\
    \        | INDIVIDUAL         | Current | RFC 5545, Section 3.2.3 |\n        |\
    \                    |         |                         |\n        | GROUP  \
    \            | Current | RFC 5545, Section 3.2.3 |\n        |                \
    \    |         |                         |\n        | RESOURCE           | Current\
    \ | RFC 5545, Section 3.2.3 |\n        |                    |         |      \
    \                   |\n        | ROOM               | Current | RFC 5545, Section\
    \ 3.2.3 |\n        |                    |         |                         |\n\
    \        | UNKNOWN            | Current | RFC 5545, Section 3.2.3 |\n        +--------------------+---------+-------------------------+\n"
- title: 8.3.6.  Free/Busy Time Types Registry
  contents:
  - "8.3.6.  Free/Busy Time Types Registry\n   The following table has been used to\
    \ initialize the free/busy time\n   types registry.\n        +---------------------+---------+-------------------------+\n\
    \        | Free/Busy Time Type | Status  | Reference               |\n       \
    \ +---------------------+---------+-------------------------+\n        | FREE\
    \                | Current | RFC 5545, Section 3.2.9 |\n        |            \
    \         |         |                         |\n        | BUSY              \
    \  | Current | RFC 5545, Section 3.2.9 |\n        |                     |    \
    \     |                         |\n        | BUSY-UNAVAILABLE    | Current | RFC\
    \ 5545, Section 3.2.9 |\n        |                     |         |           \
    \              |\n        | BUSY-TENTATIVE      | Current | RFC 5545, Section\
    \ 3.2.9 |\n        +---------------------+---------+-------------------------+\n"
- title: 8.3.7.  Participation Statuses Registry
  contents:
  - "8.3.7.  Participation Statuses Registry\n   The following table has been used\
    \ to initialize the participation\n   statuses registry.\n        +--------------------+---------+--------------------------+\n\
    \        | Participant Status | Status  | Reference                |\n       \
    \ +--------------------+---------+--------------------------+\n        | NEEDS-ACTION\
    \       | Current | RFC 5545, Section 3.2.12 |\n        |                    |\
    \         |                          |\n        | ACCEPTED           | Current\
    \ | RFC 5545, Section 3.2.12 |\n        |                    |         |     \
    \                     |\n        | DECLINED           | Current | RFC 5545, Section\
    \ 3.2.12 |\n        |                    |         |                         \
    \ |\n        | TENTATIVE          | Current | RFC 5545, Section 3.2.12 |\n   \
    \     |                    |         |                          |\n        | DELEGATED\
    \          | Current | RFC 5545, Section 3.2.12 |\n        |                 \
    \   |         |                          |\n        | COMPLETED          | Current\
    \ | RFC 5545, Section 3.2.12 |\n        |                    |         |     \
    \                     |\n        | IN-PROCESS         | Current | RFC 5545, Section\
    \ 3.2.12 |\n        +--------------------+---------+--------------------------+\n"
- title: 8.3.8.  Relationship Types Registry
  contents:
  - "8.3.8.  Relationship Types Registry\n   The following table has been used to\
    \ initialize the relationship\n   types registry.\n        +-------------------+---------+--------------------------+\n\
    \        | Relationship Type | Status  | Reference                |\n        +-------------------+---------+--------------------------+\n\
    \        | CHILD             | Current | RFC 5545, Section 3.2.15 |\n        |\
    \                   |         |                          |\n        | PARENT \
    \           | Current | RFC 5545, Section 3.2.15 |\n        |                \
    \   |         |                          |\n        | SIBLING           | Current\
    \ | RFC 5545, Section 3.2.15 |\n        +-------------------+---------+--------------------------+\n"
- title: 8.3.9.  Participation Roles Registry
  contents:
  - "8.3.9.  Participation Roles Registry\n   The following table has been used to\
    \ initialize the participation\n   roles registry.\n         +-----------------+---------+--------------------------+\n\
    \         | Role Type       | Status  | Reference                |\n         +-----------------+---------+--------------------------+\n\
    \         | CHAIR           | Current | RFC 5545, Section 3.2.16 |\n         |\
    \                 |         |                          |\n         | REQ-PARTICIPANT\
    \ | Current | RFC 5545, Section 3.2.16 |\n         |                 |       \
    \  |                          |\n         | OPT-PARTICIPANT | Current | RFC 5545,\
    \ Section 3.2.16 |\n         |                 |         |                   \
    \       |\n         | NON-PARTICIPANT | Current | RFC 5545, Section 3.2.16 |\n\
    \         +-----------------+---------+--------------------------+\n"
- title: 8.3.10.  Actions Registry
  contents:
  - "8.3.10.  Actions Registry\n   The following table has been used to initialize\
    \ the actions registry.\n          +-----------+------------+----------------------------+\n\
    \          | Action    | Status     | Reference                  |\n         \
    \ +-----------+------------+----------------------------+\n          | AUDIO \
    \    | Current    | RFC 5545, Section 3.8.6.1  |\n          |           |    \
    \        |                            |\n          | DISPLAY   | Current    |\
    \ RFC 5545, Section 3.8.6.1  |\n          |           |            |         \
    \                   |\n          | EMAIL     | Current    | RFC 5545, Section\
    \ 3.8.6.1  |\n          |           |            |                           \
    \ |\n          | PROCEDURE | Deprecated | [RFC2445], Section 4.8.6.1 |\n     \
    \     +-----------+------------+----------------------------+\n"
- title: 8.3.11.  Classifications Registry
  contents:
  - "8.3.11.  Classifications Registry\n   The following table has been used to initialize\
    \ the classifications\n   registry.\n         +----------------+---------+---------------------------+\n\
    \         | Classification | Status  | Reference                 |\n         +----------------+---------+---------------------------+\n\
    \         | PUBLIC         | Current | RFC 5545, Section 3.8.1.3 |\n         |\
    \                |         |                           |\n         | PRIVATE \
    \       | Current | RFC 5545, Section 3.8.1.3 |\n         |                | \
    \        |                           |\n         | CONFIDENTIAL   | Current |\
    \ RFC 5545, Section 3.8.1.3 |\n         +----------------+---------+---------------------------+\n"
- title: 8.3.12.  Methods Registry
  contents:
  - "8.3.12.  Methods Registry\n   No values are defined in this document for the\
    \ \"METHOD\" property.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The editor of this document wishes to thank Frank Dawson\
    \ and Derik\n   Stenerson, the original authors of RFC 2445, as well as the following\n\
    \   individuals who have participated in the drafting, review, and\n   discussion\
    \ of this memo:\n   Joe Abley, Hervey Allen, Steve Allen, Jay Batson, Oliver Block,\n\
    \   Stephane Bortzmeyer, Chris Bryant, Tantek Celik, Mark Crispin, Cyrus\n   Daboo,\
    \ Mike Douglass, Andrew N. Dowden, Lisa Dusseault, Lars Eggert,\n   Gren Eliot,\
    \ Pasi Eronen, Ben Fortuna, Ned Freed, Neal Gafter, Ted\n   Hardie, Tim Hare,\
    \ Jeffrey Harris, Helge Hess, Paul B. Hill, Thomas\n   Hnetila, Russ Housley,\
    \ Leif Johansson, Ciny Joy, Bruce Kahn, Reinhold\n   Kainhofer, Martin Kiff, Patrice\
    \ Lapierre, Michiel van Leeuwen,\n   Jonathan Lennox, Jeff McCullough, Bill McQuillan,\
    \ Alexey Melnikov,\n   John W. Noerenberg II, Chuck Norris, Mark Paterson, Simon\
    \ Pilette,\n   Arnaud Quillaud, Robert Ransdell, Julian F. Reschke, Caleb\n  \
    \ Richardson, Sam Roberts, Dan Romascanu, Mike Samuel, George Sexton,\n   Nigel\
    \ Swinson, Clint Talbert, Simon Vaillancourt, Magnus Westerlund,\n   and Sandy\
    \ Wills.\n   A special thanks to the working group chairs Aki Niemi and Eliot\
    \ Lear\n   for their support and guidance.\n   The editor would also like to thank\
    \ the Calendaring and Scheduling\n   Consortium for advice with this specification,\
    \ and for organizing\n   interoperability testing events to help refine it.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [ISO.8601.2004]        International Organization\
    \ for\n                          Standardization, \"Data elements and\n      \
    \                    interchange formats -- Information interchange\n        \
    \                  -- Representation of dates and times\", 2004.\n   [ISO.9070.1991]\
    \        International Organization for\n                          Standardization,\
    \ \"Information Technology_SGML\n                          Support Facilities\
    \ -- Registration Procedures\n                          for Public Text Owner\
    \ Identifiers, Second\n                          Edition\", April 1991.\n   [RFC2045]\
    \              Freed, N. and N. Borenstein, \"Multipurpose\n                 \
    \         Internet Mail Extensions (MIME) Part One:\n                        \
    \  Format of Internet Message Bodies\", RFC 2045,\n                          November\
    \ 1996.\n   [RFC2046]              Freed, N. and N. Borenstein, \"Multipurpose\n\
    \                          Internet Mail Extensions (MIME) Part Two:\n       \
    \                   Media Types\", RFC 2046, November 1996.\n   [RFC2119]    \
    \          Bradner, S., \"Key words for use in RFCs to\n                     \
    \     Indicate Requirement Levels\", BCP 14,\n                          RFC 2119,\
    \ March 1997.\n   [RFC2368]              Hoffman, P., Masinter, L., and J. Zawinski,\n\
    \                          \"The mailto URL scheme\", RFC 2368, July 1998.\n \
    \  [RFC3629]              Yergeau, F., \"UTF-8, a transformation format\n    \
    \                      of ISO 10646\", STD 63, RFC 3629,\n                   \
    \       November 2003.\n   [RFC3986]              Berners-Lee, T., Fielding, R.,\
    \ and L.\n                          Masinter, \"Uniform Resource Identifier (URI):\n\
    \                          Generic Syntax\", STD 66, RFC 3986,\n             \
    \             January 2005.\n   [RFC4288]              Freed, N. and J. Klensin,\
    \ \"Media Type\n                          Specifications and Registration Procedures\"\
    ,\n                          BCP 13, RFC 4288, December 2005.\n   [RFC4648]  \
    \            Josefsson, S., \"The Base16, Base32, and Base64\n               \
    \           Data Encodings\", RFC 4648, October 2006.\n   [RFC5234]          \
    \    Crocker, D. and P. Overell, \"Augmented BNF for\n                       \
    \   Syntax Specifications: ABNF\", STD 68,\n                          RFC 5234,\
    \ January 2008.\n   [RFC5646]              Phillips, A., Ed., and M. Davis, Ed.,\
    \ \"Tags\n                          for Identifying Languages\", BCP 47, RFC 5646,\n\
    \                          September 2009.\n   [US-ASCII]             American\
    \ National Standards Institute, \"Coded\n                          Character Set\
    \ - 7-bit American Standard Code\n                          for Information Interchange\"\
    , ANSI X3.4, 1986.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [2446bis]              Daboo, C., \"iCalendar\
    \ Transport-Independent\n                          Interoperability Protocol (iTIP)\"\
    , Work\n                          in Progress, April 2009.\n   [2447bis]     \
    \         Melnikov, A., \"iCalendar Message-Based\n                          Interoperability\
    \ Protocol (iMIP)\", Work\n                          in Progress, June 2008.\n\
    \   [ANSI INCITS 61-1986]  International Committee for Information\n         \
    \                 Technology, \"Representation of Geographic\n               \
    \           Point Locations for Information Interchange\n                    \
    \      (formerly ANSI X3.61-1986 (R1997))\", ANSI\n                          INCITS\
    \ 61-1986 (R2007), 2007.\n   [RFC1738]              Berners-Lee, T., Masinter,\
    \ L., and M.\n                          McCahill, \"Uniform Resource Locators\
    \ (URL)\",\n                          RFC 1738, December 1994.\n   [RFC2392] \
    \             Levinson, E., \"Content-ID and Message-ID\n                    \
    \      Uniform Resource Locators\", RFC 2392,\n                          August\
    \ 1998.\n   [RFC2397]              Masinter, L., \"The \"data\" URL scheme\",\n\
    \                          RFC 2397, August 1998.\n   [RFC2425]              Howes,\
    \ T., Smith, M., and F. Dawson, \"A MIME\n                          Content-Type\
    \ for Directory Information\",\n                          RFC 2425, September\
    \ 1998.\n   [RFC2426]              Dawson, F. and T. Howes, \"vCard MIME Directory\n\
    \                          Profile\", RFC 2426, September 1998.\n   [RFC2445]\
    \              Dawson, F. and Stenerson, D., \"Internet\n                    \
    \      Calendaring and Scheduling Core Object\n                          Specification\
    \ (iCalendar)\", RFC 2445,\n                          November 1998.\n   [RFC2616]\
    \              Fielding, R., Gettys, J., Mogul, J., Frystyk,\n               \
    \           H., Masinter, L., Leach, P., and T. Berners-\n                   \
    \       Lee, \"Hypertext Transfer Protocol --\n                          HTTP/1.1\"\
    , RFC 2616, June 1999.\n   [RFC2818]              Rescorla, E., \"HTTP Over TLS\"\
    , RFC 2818,\n                          May 2000.\n   [RFC4516]              Smith,\
    \ M. and T. Howes, \"Lightweight Directory\n                          Access Protocol\
    \ (LDAP): Uniform Resource\n                          Locator\", RFC 4516, June\
    \ 2006.\n   [RFC4791]              Daboo, C., Desruisseaux, B., and L. Dusseault,\n\
    \                          \"Calendaring Extensions to WebDAV (CalDAV)\",\n  \
    \                        RFC 4791, March 2007.\n   [TZDB]                 Eggert,\
    \ P. and A.D. Olson, \"Sources for Time\n                          Zone and Daylight\
    \ Saving Time Data\",\n                          July 2009,\n                \
    \          <http://www.twinsun.com/tz/tz-link.htm>.\n   [VCAL]               \
    \  Internet Mail Consortium, \"vCalendar: The\n                          Electronic\
    \ Calendaring and Scheduling Exchange\n                          Format\", September\
    \ 1996,\n                          <http://www.imc.org/pdi/vcal-10.txt>.\n"
- title: Appendix A.  Differences from RFC 2445
  contents:
  - "Appendix A.  Differences from RFC 2445\n   This appendix contains a list of changes\
    \ that have been made in the\n   Internet Calendaring and Scheduling Core Object\
    \ Specification from\n   RFC 2445.\n"
- title: A.1.  New Restrictions
  contents:
  - "A.1.  New Restrictions\n   1.  The \"DTSTART\" property SHOULD be synchronized\
    \ with the recurrence\n       rule, if specified.\n   2.  The \"RRULE\" property\
    \ SHOULD NOT occur more than once in a\n       component.\n   3.  The BYHOUR,\
    \ BYMINUTE, and BYSECOND rule parts MUST NOT be\n       specified in the \"RRULE\"\
    \ property when the \"DTSTART\" property is\n       specified as a DATE value.\n\
    \   4.  The value type of the \"DTEND\" or \"DUE\" properties MUST match the\n\
    \       value type of \"DTSTART\" property.\n   5.  The \"DURATION\" property\
    \ can no longer appear in \"VFREEBUSY\"\n       components.\n"
- title: A.2.  Restrictions Removed
  contents:
  - "A.2.  Restrictions Removed\n   1.  The \"DTSTART\" and \"DTEND\" properties are\
    \ no longer required to be\n       specified as date with local time and time\
    \ zone reference when\n       used with a recurrence rule.\n"
- title: A.3.  Deprecated Features
  contents:
  - "A.3.  Deprecated Features\n   1.  The \"EXRULE\" property can no longer be specified\
    \ in a component.\n   2.  The \"THISANDPRIOR\" value can no longer be used with\
    \ the \"RANGE\"\n       parameter.\n   3.  The \"PROCEDURE\" value can no longer\
    \ be used with the \"ACTION\"\n       property.\n   4.  The value type RECUR no\
    \ longer allows multiple values to be\n       specified by a COMMA-separated list\
    \ of values.\n   5.  x-name rule parts can no longer be specified in properties\
    \ of\n       RECUR value type (e.g., \"RRULE\"). x-param can be used on RECUR\n\
    \       value type properties instead.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Bernard Desruisseaux (editor)\n   Oracle Corporation\n \
    \  600 blvd. de Maisonneuve West\n   Suite 1900\n   Montreal, QC  H3A 3J2\n  \
    \ CANADA\n   EMail: bernard.desruisseaux@oracle.com\n   URI:   http://www.oracle.com/\n"
