- title: __initial_text__
  contents:
  - '            The Secure Shell (SSH) Protocol Assigned Numbers

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the instructions to the IANA and the initial\n\
    \   state of the IANA assigned numbers for the Secure Shell (SSH)\n   protocol.\
    \  It is intended only for the initialization of the IANA\n   registries referenced\
    \ in the set of SSH documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Contributors ....................................................3\n  \
    \ 3. Conventions Used in This Document ...............................3\n    \
    \  3.1. RFC 2119 Keywords ..........................................3\n      3.2.\
    \ RFC 2434 Keywords ..........................................3\n      3.3. Protocol\
    \ Fields and Values .................................4\n   4. IANA Considerations\
    \ .............................................5\n      4.1. Message Numbers ............................................5\n\
    \           4.1.1. Conventions .........................................5\n  \
    \         4.1.2. Initial Assignments .................................6\n    \
    \       4.1.3. Future Assignments ..................................6\n      4.2.\
    \ Disconnection Messages Reason Codes and Descriptions .......7\n           4.2.1.\
    \ Conventions .........................................7\n           4.2.2. Initial\
    \ Assignments .................................7\n           4.2.3. Future Assignments\
    \ ..................................8\n      4.3. Channel Connection Failure Reason\
    \ Codes and Descriptions ...8\n           4.3.1. Conventions .........................................8\n\
    \           4.3.2. Initial Assignments .................................8\n  \
    \         4.3.3. Future Assignments ..................................8\n    \
    \       4.3.4. Notes about the PRIVATE USE Range ...................9\n      4.4.\
    \ Extended Channel Data Transfer data_type_code and Data .....9\n           4.4.1.\
    \ Conventions .........................................9\n           4.4.2. Initial\
    \ Assignments ................................10\n           4.4.3. Future Assignments\
    \ .................................10\n      4.5. Pseudo-Terminal Encoded Terminal\
    \ Modes ....................10\n           4.5.1. Conventions ........................................10\n\
    \           4.5.2. Initial Assignments ................................10\n  \
    \         4.5.3. Future Assignments .................................12\n    \
    \  4.6. Names .....................................................12\n      \
    \     4.6.1. Conventions for Names ..............................13\n        \
    \   4.6.2. Future Assignments of Names ........................13\n      4.7.\
    \ Service Names .............................................13\n      4.8. Authentication\
    \ Method Names ...............................14\n      4.9. Connection Protocol\
    \ Assigned Names ........................14\n           4.9.1. Connection Protocol\
    \ Channel Types ..................14\n           4.9.2. Connection Protocol Global\
    \ Request Names ...........14\n           4.9.3. Connection Protocol Channel Request\
    \ Names ..........15\n           4.9.4. Initial Assignment of Signal Names .................15\n\
    \           4.9.5. Connection Protocol Subsystem Names ................15\n  \
    \    4.10. Key Exchange Method Names ................................16\n    \
    \  4.11. Assigned Algorithm Names .................................16\n      \
    \     4.11.1. Encryption Algorithm Names ........................16\n        \
    \   4.11.2. MAC Algorithm Names ...............................17\n          \
    \ 4.11.3. Public Key Algorithm Names ........................17\n           4.11.4.\
    \ Compression Algorithm Names .......................17\n   5. Security Considerations\
    \ ........................................17\n   6. References .....................................................18\n\
    \      6.1. Normative References ......................................18\n  \
    \    6.2. Informative References ....................................18\n   Authors'\
    \ Addresses ................................................19\n   Trademark Notice\
    \ ..................................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document does not define any new protocols.  It is\
    \ intended only\n   to create the initial state of the IANA databases for the\
    \ SSH\n   protocol and also contains instructions for future assignments.\n  \
    \ Except for one HISTORIC algorithm generally regarded as obsolete,\n   this document\
    \ does not define any new protocols or number ranges not\n   already defined in:\
    \ [SSH-ARCH], [SSH-TRANS], [SSH-USERAUTH],\n   [SSH-CONNECT].\n"
- title: 2.  Contributors
  contents:
  - "2.  Contributors\n   The major original contributors of this set of documents\
    \ have been:\n   Tatu Ylonen, Tero Kivinen, Timo J. Rinne, Sami Lehtinen (all\
    \ of SSH\n   Communications Security Corp), and Markku-Juhani O. Saarinen\n  \
    \ (University of Jyvaskyla).  Darren Moffat was the original editor of\n   this\
    \ set of documents and also made very substantial contributions.\n   Many people\
    \ contributed to the development of this document over the\n   years.  People\
    \ who should be acknowledged include Mats Andersson, Ben\n   Harris, Bill Sommerfeld,\
    \ Brent McClure, Niels Moller, Damien Miller,\n   Derek Fawcus, Frank Cusack,\
    \ Heikki Nousiainen, Jakob Schlyter, Jeff\n   Van Dyke, Jeffrey Altman, Jeffrey\
    \ Hutzelman, Jon Bright, Joseph\n   Galbraith, Ken Hornstein, Markus Friedl, Martin\
    \ Forssen, Nicolas\n   Williams, Niels Provos, Perry Metzger, Peter Gutmann, Simon\n\
    \   Josefsson, Simon Tatham, Wei Dai, Denis Bider, der Mouse, and\n   Tadayoshi\
    \ Kohno.  Listing their names here does not mean that they\n   endorse this document,\
    \ but that they have contributed to it.\n"
- title: 3.  Conventions Used in This Document
  contents:
  - '3.  Conventions Used in This Document

    '
- title: 3.1.  RFC 2119 Keywords
  contents:
  - "3.1.  RFC 2119 Keywords\n   All documents related to the SSH protocols shall\
    \ use the keywords\n   \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL\
    \ NOT\", \"SHOULD\",\n   \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"\
    \ to describe\n   requirements.  These keywords are to be interpreted as described\
    \ in\n   [RFC2119].\n"
- title: 3.2.  RFC 2434 Keywords
  contents:
  - "3.2.  RFC 2434 Keywords\n   The keywords \"PRIVATE USE\", \"HIERARCHICAL ALLOCATION\"\
    , \"FIRST COME\n   FIRST SERVED\", \"EXPERT REVIEW\", \"SPECIFICATION REQUIRED\"\
    , \"IESG\n   APPROVAL\", \"IETF CONSENSUS\", and \"STANDARDS ACTION\" that appear\
    \ in\n   this document when used to describe namespace allocation are to be\n\
    \   interpreted as described in [RFC2434].  These designations are\n   repeated\
    \ in this document for clarity.\n   PRIVATE USE - For private or local use only,\
    \ with the type and\n   purpose defined by the local site.  No attempt is made\
    \ to prevent\n   multiple sites from using the same value in different (and\n\
    \   incompatible) ways.  There is no need for IANA to review such\n   assignments\
    \ and assignments are not generally useful for\n   interoperability.\n   HIERARCHICAL\
    \ ALLOCATION - Delegated managers can assign values\n   provided they have been\
    \ given control over that part of the name\n   space.  IANA controls the higher\
    \ levels of the namespace according to\n   one of the other policies.\n   FIRST\
    \ COME FIRST SERVED - Anyone can obtain an assigned number, so\n   long as they\
    \ provide a point of contact and a brief description of\n   what the value would\
    \ be used for.  For numbers, the exact value is\n   generally assigned by the\
    \ IANA; with names, specific names are\n   usually requested.\n   EXPERT REVIEW\
    \ - approval by a Designated Expert is required.\n   SPECIFICATION REQUIRED -\
    \ Values and their meaning must be documented\n   in an RFC or other permanent\
    \ and readily available reference, in\n   sufficient detail so that interoperability\
    \ between independent\n   implementations is possible.\n   IESG APPROVAL - New\
    \ assignments must be approved by the IESG, but\n   there is no requirement that\
    \ the request be documented in an RFC\n   (though the IESG has discretion to request\
    \ documents or other\n   supporting materials on a case-by-case basis).\n   IETF\
    \ CONSENSUS - New values are assigned through the IETF consensus\n   process.\
    \  Specifically, new assignments are made via RFCs approved by\n   the IESG. \
    \ Typically, the IESG will seek input on prospective\n   assignments from appropriate\
    \ persons (e.g., a relevant Working Group\n   if one exists).\n   STANDARDS ACTION\
    \ - Values are assigned only for Standards Track RFCs\n   approved by the IESG.\n"
- title: 3.3.  Protocol Fields and Values
  contents:
  - "3.3.  Protocol Fields and Values\n   Protocol fields and possible values to fill\
    \ them are defined in this\n   set of documents.  Protocol fields will be defined\
    \ in the message\n   definitions.  As an example, SSH_MSG_CHANNEL_DATA is defined\
    \ as\n   follows.\n      byte      SSH_MSG_CHANNEL_DATA\n      uint32    recipient\
    \ channel\n      string    data\n   Throughout these documents, when the fields\
    \ are referenced, they will\n   appear within single quotes.  When values to fill\
    \ those fields are\n   referenced, they will appear within double quotes.  Using\
    \ the above\n   example, possible values for 'data' are \"foo\" and \"bar\".\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This entire document is the IANA considerations for\
    \ the SSH protocol,\n   as defined in [SSH-ARCH], [SSH-TRANS], [SSH-USERAUTH],\
    \ [SSH-CONNECT].\n   This section contains conventions used in naming the namespaces,\
    \ the\n   initial state of the registry, and instructions for future\n   assignments.\n"
- title: 4.1.  Message Numbers
  contents:
  - "4.1.  Message Numbers\n   The Message Number is a byte value that describes the\
    \ payload of a\n   packet.\n"
- title: 4.1.1.  Conventions
  contents:
  - "4.1.1.  Conventions\n   Protocol packets have message numbers in the range 1\
    \ to 255.  These\n   numbers are allocated as follows:\n      Transport layer\
    \ protocol:\n        1 to 19    Transport layer generic (e.g., disconnect, ignore,\n\
    \                   debug, etc.)\n        20 to 29   Algorithm negotiation\n \
    \       30 to 49   Key exchange method specific (numbers can be reused\n     \
    \              for different authentication methods)\n      User authentication\
    \ protocol:\n        50 to 59   User authentication generic\n        60 to 79\
    \   User authentication method specific (numbers can be\n                   reused\
    \ for different authentication methods)\n      Connection protocol:\n        80\
    \ to 89   Connection protocol generic\n        90 to 127  Channel related messages\n\
    \      Reserved for client protocols:\n        128 to 191 Reserved\n      Local\
    \ extensions:\n        192 to 255 Local extensions\n"
- title: 4.1.2.  Initial Assignments
  contents:
  - "4.1.2.  Initial Assignments\n   The following table identifies the initial assignments\
    \ of the Message\n   ID values.\n         Message ID                         \
    \   Value    Reference\n         -----------                           ----- \
    \   ---------\n         SSH_MSG_DISCONNECT                       1     [SSH-TRANS]\n\
    \         SSH_MSG_IGNORE                           2     [SSH-TRANS]\n       \
    \  SSH_MSG_UNIMPLEMENTED                    3     [SSH-TRANS]\n         SSH_MSG_DEBUG\
    \                            4     [SSH-TRANS]\n         SSH_MSG_SERVICE_REQUEST\
    \                  5     [SSH-TRANS]\n         SSH_MSG_SERVICE_ACCEPT        \
    \           6     [SSH-TRANS]\n         SSH_MSG_KEXINIT                      \
    \   20     [SSH-TRANS]\n         SSH_MSG_NEWKEYS                         21  \
    \   [SSH-TRANS]\n         SSH_MSG_USERAUTH_REQUEST                50     [SSH-USERAUTH]\n\
    \         SSH_MSG_USERAUTH_FAILURE                51     [SSH-USERAUTH]\n    \
    \     SSH_MSG_USERAUTH_SUCCESS                52     [SSH-USERAUTH]\n        \
    \ SSH_MSG_USERAUTH_BANNER                 53     [SSH-USERAUTH]\n         SSH_MSG_GLOBAL_REQUEST\
    \                  80     [SSH-CONNECT]\n         SSH_MSG_REQUEST_SUCCESS    \
    \             81     [SSH-CONNECT]\n         SSH_MSG_REQUEST_FAILURE         \
    \        82     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_OPEN                 \
    \   90     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_OPEN_CONFIRMATION       91\
    \     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_OPEN_FAILURE            92     [SSH-CONNECT]\n\
    \         SSH_MSG_CHANNEL_WINDOW_ADJUST           93     [SSH-CONNECT]\n     \
    \    SSH_MSG_CHANNEL_DATA                    94     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_EXTENDED_DATA\
    \           95     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_EOF               \
    \      96     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_CLOSE                  \
    \ 97     [SSH-CONNECT]\n         SSH_MSG_CHANNEL_REQUEST                 98  \
    \   [SSH-CONNECT]\n         SSH_MSG_CHANNEL_SUCCESS                 99     [SSH-CONNECT]\n\
    \         SSH_MSG_CHANNEL_FAILURE                100     [SSH-CONNECT]\n"
- title: 4.1.3.  Future Assignments
  contents:
  - "4.1.3.  Future Assignments\n   Requests for assignments of new message numbers\
    \ in the range of 1 to\n   29, 50 to 59, and 80 to 127 MUST be done through the\
    \ STANDARDS ACTION\n   method, as described in [RFC2434].\n   The meanings of\
    \ message numbers in the range of 30 to 49 are specific\n   to the key exchange\
    \ method in use, and their meaning will be\n   specified by the definition of\
    \ that method.\n   The meanings of message numbers in the range of 60 to 79 are\
    \ specific\n   to the user authentication method in use, and their meaning will\
    \ be\n   specified by the definition of that method.\n   Requests for assignments\
    \ of new message numbers in the range of 128\n   to 191 MUST be done through the\
    \ IETF CONSENSUS method, as described\n   in [RFC2434].\n   The IANA will not\
    \ control the message numbers in the range of 192\n   through 255.  This range\
    \ will be left for PRIVATE USE.\n"
- title: 4.2.  Disconnection Messages Reason Codes and Descriptions
  contents:
  - "4.2.  Disconnection Messages Reason Codes and Descriptions\n   The Disconnection\
    \ Message 'reason code' is a uint32 value.  The\n   associated Disconnection Message\
    \ 'description' is a human-readable\n   message that describes the disconnect\
    \ reason.\n"
- title: 4.2.1.  Conventions
  contents:
  - "4.2.1.  Conventions\n   Protocol packets containing the SSH_MSG_DISCONNECT message\
    \ MUST have\n   Disconnection Message 'reason code' values in the range of 0x00000001\n\
    \   to 0xFFFFFFFF.  These are described in [SSH-TRANS].\n"
- title: 4.2.2.  Initial Assignments
  contents:
  - "4.2.2.  Initial Assignments\n   The following table identifies the initial assignments\
    \ of the\n   SSH_MSG_DISCONNECT 'description' and 'reason code' values.\n    \
    \     Symbolic Name                                  reason code\n         -------------\
    \                                  -----------\n         SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT\
    \          1\n         SSH_DISCONNECT_PROTOCOL_ERROR                       2\n\
    \         SSH_DISCONNECT_KEY_EXCHANGE_FAILED                  3\n         SSH_DISCONNECT_RESERVED\
    \                             4\n         SSH_DISCONNECT_MAC_ERROR           \
    \                 5\n         SSH_DISCONNECT_COMPRESSION_ERROR               \
    \     6\n         SSH_DISCONNECT_SERVICE_NOT_AVAILABLE                7\n    \
    \     SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED       8\n         SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE\
    \              9\n         SSH_DISCONNECT_CONNECTION_LOST                    \
    \ 10\n         SSH_DISCONNECT_BY_APPLICATION                      11\n       \
    \  SSH_DISCONNECT_TOO_MANY_CONNECTIONS                12\n         SSH_DISCONNECT_AUTH_CANCELLED_BY_USER\
    \              13\n         SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE    \
    \  14\n         SSH_DISCONNECT_ILLEGAL_USER_NAME                   15\n"
- title: 4.2.3.  Future Assignments
  contents:
  - "4.2.3.  Future Assignments\n   Disconnection Message 'reason code' values MUST\
    \ be assigned\n   sequentially.  Requests for assignments of new Disconnection\
    \ Message\n   'reason code' values, and their associated Disconnection Message\n\
    \   'description' text, in the range of 0x00000010 through 0xFDFFFFFF,\n   MUST\
    \ be done through the IETF CONSENSUS method, as described in\n   [RFC2434].  The\
    \ IANA will not assign Disconnection Message 'reason\n   code' values in the range\
    \ of 0xFE000000 through 0xFFFFFFFF.\n   Disconnection Message 'reason code' values\
    \ in that range are left for\n   PRIVATE USE, as described in [RFC2434].\n"
- title: 4.3.  Channel Connection Failure Reason Codes and Descriptions
  contents:
  - "4.3.  Channel Connection Failure Reason Codes and Descriptions\n   The Channel\
    \ Connection Failure 'reason code' is a uint32 value.  The\n   associated Channel\
    \ Connection Failure 'description' text is a human-\n   readable message that\
    \ describes the channel connection failure\n   reason.  This is described in [SSH-CONNECT].\n"
- title: 4.3.1.  Conventions
  contents:
  - "4.3.1.  Conventions\n   Protocol packets containing the SSH_MSG_CHANNEL_OPEN_FAILURE\
    \ message\n   MUST have Channel Connection Failure 'reason code' values in the\n\
    \   range of 0x00000001 to 0xFFFFFFFF.\n"
- title: 4.3.2.  Initial Assignments
  contents:
  - "4.3.2.  Initial Assignments\n   The initial assignments for the 'reason code'\
    \ values and\n   'description' values are given in the table below.  Note that\
    \ the\n   values for the 'reason code' are given in decimal format for\n   readability,\
    \ but they are actually uint32 values.\n         Symbolic Name               \
    \                   reason code\n         -------------                      \
    \            -----------\n         SSH_OPEN_ADMINISTRATIVELY_PROHIBITED      \
    \          1\n         SSH_OPEN_CONNECT_FAILED                             2\n\
    \         SSH_OPEN_UNKNOWN_CHANNEL_TYPE                       3\n         SSH_OPEN_RESOURCE_SHORTAGE\
    \                          4\n"
- title: 4.3.3.  Future Assignments
  contents:
  - "4.3.3.  Future Assignments\n   Channel Connection Failure 'reason code' values\
    \ MUST be assigned\n   sequentially.  Requests for assignments of new Channel\
    \ Connection\n   Failure 'reason code' values, and their associated Channel Connection\n\
    \   Failure 'description string', in the range of 0x00000005 to\n   0xFDFFFFFF\
    \ MUST be done through the IETF CONSENSUS method, as\n   described in [RFC2434].\
    \  The IANA will not assign Channel Connection\n   Failure 'reason code' values\
    \ in the range of 0xFE000000 to\n   0xFFFFFFFF.  Channel Connection Failure 'reason\
    \ code' values in that\n   range are left for PRIVATE USE, as described in [RFC2434].\n"
- title: 4.3.4.  Notes about the PRIVATE USE Range
  contents:
  - "4.3.4.  Notes about the PRIVATE USE Range\n   While it is understood that the\
    \ IANA will have no control over the\n   range of 0xFE000000 to 0xFFFFFFFF, this\
    \ range will be split in two\n   parts and administered by the following conventions.\n\
    \   o  The range of 0xFE000000 to 0xFEFFFFFF is to be used in conjunction\n  \
    \    with locally assigned channels.  For example, if a channel is\n      proposed\
    \ with a 'channel type' of \"example_session@example.com\"\n      but fails, then\
    \ the server will respond with either a 'reason\n      code' assigned by the IANA\
    \ (as listed above and in the range of\n      0x00000001 to 0xFDFFFFFF), or with\
    \ a locally assigned value in the\n      range of 0xFE000000 to 0xFEFFFFFF.  Naturally,\
    \ if the server does\n      not understand the proposed 'channel type', even if\
    \ it is a\n      locally defined 'channel type', then the 'reason code' MUST be\n\
    \      0x00000003, as described above.  If the server does understand the\n  \
    \    'channel type', but the channel still fails to open, then the\n      server\
    \ SHOULD respond with a locally assigned 'reason code' value\n      that is consistent\
    \ with the proposed local 'channel type'.  It is\n      assumed that practitioners\
    \ will first attempt to use the IANA-\n      assigned 'reason code' values and\
    \ then document their locally\n      assigned 'reason code' values.\n   o  There\
    \ are no restrictions or suggestions for the range starting\n      with 0xFF.\
    \  No interoperability is expected for anything used in\n      this range.  Essentially,\
    \ it is for experimentation.\n"
- title: 4.4.  Extended Channel Data Transfer data_type_code and Data
  contents:
  - "4.4.  Extended Channel Data Transfer data_type_code and Data\n   The Extended\
    \ Channel Data Transfer 'data_type_code' is a uint32\n   value.  The associated\
    \ Extended Channel Data Transfer 'data' is a\n   human-readable message that describes\
    \ the type of data allowed to be\n   transferred in the channel.\n"
- title: 4.4.1.  Conventions
  contents:
  - "4.4.1.  Conventions\n   Protocol packets containing the SSH_MSG_CHANNEL_EXTENDED_DATA\
    \ message\n   MUST have Extended Channel Data Transfer 'data_type_code' values\
    \ in\n   the range of 0x00000001 to 0xFFFFFFFF.  This is described in\n   [SSH-CONNECT].\n"
- title: 4.4.2.  Initial Assignments
  contents:
  - "4.4.2.  Initial Assignments\n   The initial assignments for the 'data_type_code'\
    \ values and 'data'\n   values are given in the table below.  Note that the value\
    \ for the\n   'data_type_code' is given in decimal format for readability, but\
    \ the\n   values are actually uint32 values.\n         Symbolic name         \
    \               data_type_code\n         -------------                       \
    \ --------------\n         SSH_EXTENDED_DATA_STDERR                   1\n"
- title: 4.4.3.  Future Assignments
  contents:
  - "4.4.3.  Future Assignments\n   Extended Channel Data Transfer 'data_type_code'\
    \ values MUST be\n   assigned sequentially.  Requests for assignments of new Extended\n\
    \   Channel Data Transfer 'data_type_code' values, and their associated\n   Extended\
    \ Channel Data Transfer 'data' strings, in the range of\n   0x00000002 to 0xFDFFFFFF,\
    \ MUST be done through the IETF CONSENSUS\n   method, as described in [RFC2434].\
    \  The IANA will not assign Extended\n   Channel Data Transfer 'data_type_code'\
    \ values in the range of\n   0xFE000000 to 0xFFFFFFFF.  Extended Channel Data\
    \ Transfer\n   'data_type_code' values in that range are left for PRIVATE USE,\
    \ as\n   described in [RFC2434].\n"
- title: 4.5.  Pseudo-Terminal Encoded Terminal Modes
  contents:
  - "4.5.  Pseudo-Terminal Encoded Terminal Modes\n   SSH_MSG_CHANNEL_REQUEST messages\
    \ with a \"pty-req\" string MUST contain\n   'encoded terminal modes'.  The 'encoded\
    \ terminal modes' value is a\n   byte stream of opcode-argument pairs.\n"
- title: 4.5.1.  Conventions
  contents:
  - "4.5.1.  Conventions\n   Protocol packets containing the SSH_MSG_CHANNEL_REQUEST\
    \ message with\n   a \"pty-req\" string MUST contain an 'encoded terminal modes'\
    \ value.\n   The opcode values consist of a single byte and are in the range of\
    \ 1\n   to 255.  Opcodes 1 to 159 have a uint32 argument.  Opcodes 160 to 255\n\
    \   are not yet defined.\n"
- title: 4.5.2.  Initial Assignments
  contents:
  - "4.5.2.  Initial Assignments\n   The following table identifies the initial assignments\
    \ of the opcode\n   values that are used in the 'encoded terminal modes' value.\n\
    \         opcode  mnemonic       description\n         ------  --------      \
    \ -----------\n         0     TTY_OP_END  Indicates end of options.\n        \
    \ 1     VINTR       Interrupt character; 255 if none.  Similarly\n           \
    \                 for the other characters.  Not all of these\n              \
    \              characters are supported on all systems.\n         2     VQUIT\
    \       The quit character (sends SIGQUIT signal on\n                        \
    \    POSIX systems).\n         3     VERASE      Erase the character to left of\
    \ the cursor.\n         4     VKILL       Kill the current input line.\n     \
    \    5     VEOF        End-of-file character (sends EOF from the\n           \
    \                 terminal).\n         6     VEOL        End-of-line character\
    \ in addition to\n                            carriage return and/or linefeed.\n\
    \         7     VEOL2       Additional end-of-line character.\n         8    \
    \ VSTART      Continues paused output (normally\n                            control-Q).\n\
    \         9     VSTOP       Pauses output (normally control-S).\n         10 \
    \   VSUSP       Suspends the current program.\n         11    VDSUSP      Another\
    \ suspend character.\n         12    VREPRINT    Reprints the current input line.\n\
    \         13    VWERASE     Erases a word left of cursor.\n         14    VLNEXT\
    \      Enter the next character typed literally,\n                           \
    \ even if it is a special character\n         15    VFLUSH      Character to flush\
    \ output.\n         16    VSWTCH      Switch to a different shell layer.\n   \
    \      17    VSTATUS     Prints system status line (load, command,\n         \
    \                   pid, etc).\n         18    VDISCARD    Toggles the flushing\
    \ of terminal output.\n         30    IGNPAR      The ignore parity flag.  The\
    \ parameter\n                            SHOULD be 0 if this flag is FALSE,\n\
    \                            and 1 if it is TRUE.\n         31    PARMRK     \
    \ Mark parity and framing errors.\n         32    INPCK       Enable checking\
    \ of parity errors.\n         33    ISTRIP      Strip 8th bit off characters.\n\
    \         34    INLCR       Map NL into CR on input.\n         35    IGNCR   \
    \    Ignore CR on input.\n         36    ICRNL       Map CR to NL on input.\n\
    \         37    IUCLC       Translate uppercase characters to\n              \
    \              lowercase.\n         38    IXON        Enable output flow control.\n\
    \         39    IXANY       Any char will restart after stop.\n         40   \
    \ IXOFF       Enable input flow control.\n         41    IMAXBEL     Ring bell\
    \ on input queue full.\n         50    ISIG        Enable signals INTR, QUIT,\
    \ [D]SUSP.\n         51    ICANON      Canonicalize input lines.\n         52\
    \    XCASE       Enable input and output of uppercase\n                      \
    \      characters by preceding their lowercase\n                            equivalents\
    \ with \"\\\".\n         53    ECHO        Enable echoing.\n         54    ECHOE\
    \       Visually erase chars.\n         55    ECHOK       Kill character discards\
    \ current line.\n         56    ECHONL      Echo NL even if ECHO is off.\n   \
    \      57    NOFLSH      Don't flush after interrupt.\n         58    TOSTOP \
    \     Stop background jobs from output.\n         59    IEXTEN      Enable extensions.\n\
    \         60    ECHOCTL     Echo control characters as ^(Char).\n         61 \
    \   ECHOKE      Visual erase for line kill.\n         62    PENDIN      Retype\
    \ pending input.\n         70    OPOST       Enable output processing.\n     \
    \    71    OLCUC       Convert lowercase to uppercase.\n         72    ONLCR \
    \      Map NL to CR-NL.\n         73    OCRNL       Translate carriage return\
    \ to newline\n                            (output).\n         74    ONOCR    \
    \   Translate newline to carriage\n                            return-newline\
    \ (output).\n         75    ONLRET      Newline performs a carriage return\n \
    \                           (output).\n         90    CS7         7 bit mode.\n\
    \         91    CS8         8 bit mode.\n         92    PARENB      Parity enable.\n\
    \         93    PARODD      Odd parity, else even.\n         128 TTY_OP_ISPEED\
    \  Specifies the input baud rate in\n                             bits per second.\n\
    \         129 TTY_OP_OSPEED  Specifies the output baud rate in\n             \
    \                bits per second.\n"
- title: 4.5.3.  Future Assignments
  contents:
  - "4.5.3.  Future Assignments\n   Requests for assignments of new opcodes and their\
    \ associated\n   arguments MUST be done through the IETF CONSENSUS method, as\n\
    \   described in [RFC2434].\n"
- title: 4.6.  Names
  contents:
  - "4.6.  Names\n   In the following sections, the values for the name spaces are\n\
    \   textual.  The conventions and instructions to the IANA for future\n   assignments\
    \ are given in this section.  The initial assignments are\n   given in their respective\
    \ sections.\n"
- title: 4.6.1.  Conventions for Names
  contents:
  - "4.6.1.  Conventions for Names\n   All names registered by the IANA in the following\
    \ sections MUST be\n   printable US-ASCII strings, and MUST NOT contain the characters\
    \ at-\n   sign (\"@\"), comma (\",\"), whitespace, control characters (ASCII codes\n\
    \   32 or less), or the ASCII code 127 (DEL).  Names are case-sensitive,\n   and\
    \ MUST NOT be longer than 64 characters.\n   A provision is made here for locally\
    \ extensible names.  The IANA will\n   not register, and will not control, names\
    \ with the at-sign in them.\n   Names with the at-sign in them will have the format\
    \ of\n   \"name@domainname\" (without the double quotes) where the part\n   preceding\
    \ the at-sign is the name.  The format of the part preceding\n   the at-sign is\
    \ not specified; however, these names MUST be printable\n   US-ASCII strings,\
    \ and MUST NOT contain the comma character (\",\"),\n   whitespace, control characters\
    \ (ASCII codes 32 or less), or the ASCII\n   code 127 (DEL).  They MUST have only\
    \ a single at-sign in them.  The\n   part following the at-sign MUST be a valid,\
    \ fully qualified internet\n   domain name [RFC1034] controlled by the person\
    \ or organization\n   defining the name.  Names are case-sensitive, and MUST NOT\
    \ be longer\n   than 64 characters.  It is up to each domain how it manages its\
    \ local\n   namespace.  It has been noted that these names resemble STD 11\n \
    \  [RFC0822] email addresses.  This is purely coincidental and has\n   nothing\
    \ to do with STD 11 [RFC0822].  An example of a locally defined\n   name is \"\
    ourcipher-cbc@example.com\" (without the double quotes).\n"
- title: 4.6.2.  Future Assignments of Names
  contents:
  - "4.6.2.  Future Assignments of Names\n   Requests for assignments of new names\
    \ MUST be done through the IETF\n   CONSENSUS method, as described in [RFC2434].\n"
- title: 4.7.  Service Names
  contents:
  - "4.7.  Service Names\n   The 'service name' is used to describe a protocol layer.\
    \  The\n   following table lists the initial assignments of the 'service name'\n\
    \   values.\n         Service Name                  Reference\n         -------------\
    \                 ---------\n         ssh-userauth                  [SSH-USERAUTH]\n\
    \         ssh-connection                [SSH-CONNECT]\n"
- title: 4.8.  Authentication Method Names
  contents:
  - "4.8.  Authentication Method Names\n   The Authentication Method Name is used\
    \ to describe an authentication\n   method for the \"ssh-userauth\" service [SSH-USERAUTH].\
    \  The following\n   table identifies the initial assignments of the Authentication\
    \ Method\n   Names.\n         Method Name                   Reference\n      \
    \   ------------                  ---------\n         publickey              \
    \       [SSH-USERAUTH, Section 7]\n         password                      [SSH-USERAUTH,\
    \ Section 8]\n         hostbased                     [SSH-USERAUTH, Section 9]\n\
    \         none                          [SSH-USERAUTH, Section 5.2]\n"
- title: 4.9.  Connection Protocol Assigned Names
  contents:
  - "4.9.  Connection Protocol Assigned Names\n   The following table lists the initial\
    \ assignments to the Connection\n   Protocol Type and Request names.\n"
- title: 4.9.1.  Connection Protocol Channel Types
  contents:
  - "4.9.1.  Connection Protocol Channel Types\n   The following table lists the initial\
    \ assignments of the Connection\n   Protocol Channel Types.\n         Channel\
    \ type                  Reference\n         ------------                  ---------\n\
    \         session                       [SSH-CONNECT, Section 6.1]\n         x11\
    \                           [SSH-CONNECT, Section 6.3.2]\n         forwarded-tcpip\
    \               [SSH-CONNECT, Section 7.2]\n         direct-tcpip            \
    \      [SSH-CONNECT, Section 7.2]\n"
- title: 4.9.2.  Connection Protocol Global Request Names
  contents:
  - "4.9.2.  Connection Protocol Global Request Names\n   The following table lists\
    \ the initial assignments of the Connection\n   Protocol Global Request Names.\n\
    \         Request type                  Reference\n         ------------     \
    \             ---------\n         tcpip-forward                 [SSH-CONNECT,\
    \ Section 7.1]\n         cancel-tcpip-forward          [SSH-CONNECT, Section 7.1]\n"
- title: 4.9.3.  Connection Protocol Channel Request Names
  contents:
  - "4.9.3.  Connection Protocol Channel Request Names\n   The following table lists\
    \ the initial assignments of the Connection\n   Protocol Channel Request Names.\n\
    \         Request type                  Reference\n         ------------     \
    \             ---------\n         pty-req                       [SSH-CONNECT,\
    \ Section 6.2]\n         x11-req                       [SSH-CONNECT, Section 6.3.1]\n\
    \         env                           [SSH-CONNECT, Section 6.4]\n         shell\
    \                         [SSH-CONNECT, Section 6.5]\n         exec          \
    \                [SSH-CONNECT, Section 6.5]\n         subsystem              \
    \       [SSH-CONNECT, Section 6.5]\n         window-change                 [SSH-CONNECT,\
    \ Section 6.7]\n         xon-xoff                      [SSH-CONNECT, Section 6.8]\n\
    \         signal                        [SSH-CONNECT, Section 6.9]\n         exit-status\
    \                   [SSH-CONNECT, Section 6.10]\n         exit-signal        \
    \           [SSH-CONNECT, Section 6.10]\n"
- title: 4.9.4.  Initial Assignment of Signal Names
  contents:
  - "4.9.4.  Initial Assignment of Signal Names\n   The following table lists the\
    \ initial assignments of the Signal\n   Names.\n         Signal              \
    \          Reference\n         ------                        ---------\n     \
    \     ABRT                         [SSH-CONNECT]\n          ALRM             \
    \            [SSH-CONNECT]\n          FPE                          [SSH-CONNECT]\n\
    \          HUP                          [SSH-CONNECT]\n          ILL         \
    \                 [SSH-CONNECT]\n          INT                          [SSH-CONNECT]\n\
    \          KILL                         [SSH-CONNECT]\n          PIPE        \
    \                 [SSH-CONNECT]\n          QUIT                         [SSH-CONNECT]\n\
    \          SEGV                         [SSH-CONNECT]\n          TERM        \
    \                 [SSH-CONNECT]\n          USR1                         [SSH-CONNECT]\n\
    \          USR2                         [SSH-CONNECT]\n"
- title: 4.9.5.  Connection Protocol Subsystem Names
  contents:
  - "4.9.5.  Connection Protocol Subsystem Names\n   There are no initial assignments\
    \ of the Connection Protocol Subsystem\n   Names.\n"
- title: 4.10.  Key Exchange Method Names
  contents:
  - "4.10.  Key Exchange Method Names\n   The name \"diffie-hellman-group1-sha1\"\
    \ is used for a key exchange\n   method using an Oakley group, as defined in [RFC2409].\
    \  SSH maintains\n   its own group identifier space, which is logically distinct\
    \ from\n   Oakley [RFC2412] and IKE; however, for one additional group, the\n\
    \   Working Group adopted the number assigned by [RFC3526], using\n   \"diffie-hellman-group14-sha1\"\
    \ for the name of the second defined\n   group.  Implementations should treat\
    \ these names as opaque\n   identifiers and should not assume any relationship\
    \ between the groups\n   used by SSH and the groups defined for IKE.\n   The following\
    \ table identifies the initial assignments of the key\n   exchange methods.\n\
    \         Method name                          Reference\n         ------------\
    \                         ---------\n         diffie-hellman-group1-sha1     [SSH-TRANS,\
    \ Section 8.1]\n         diffie-hellman-group14-sha1    [SSH-TRANS, Section 8.2]\n"
- title: 4.11.  Assigned Algorithm Names
  contents:
  - '4.11.  Assigned Algorithm Names

    '
- title: 4.11.1.  Encryption Algorithm Names
  contents:
  - "4.11.1.  Encryption Algorithm Names\n   The following table identifies the initial\
    \ assignment of the\n   Encryption Algorithm Names.\n         Encryption Algorithm\
    \ Name                   Reference\n         -------------------------       \
    \            ---------\n         3des-cbc                           [SSH-TRANS,\
    \ Section 6.3]\n         blowfish-cbc                       [SSH-TRANS, Section\
    \ 6.3]\n         twofish256-cbc                     [SSH-TRANS, Section 6.3]\n\
    \         twofish-cbc                        [SSH-TRANS, Section 6.3]\n      \
    \   twofish192-cbc                     [SSH-TRANS, Section 6.3]\n         twofish128-cbc\
    \                     [SSH-TRANS, Section 6.3]\n         aes256-cbc          \
    \               [SSH-TRANS, Section 6.3]\n         aes192-cbc                \
    \         [SSH-TRANS, Section 6.3]\n         aes128-cbc                      \
    \   [SSH-TRANS, Section 6.3]\n         serpent256-cbc                     [SSH-TRANS,\
    \ Section 6.3]\n         serpent192-cbc                     [SSH-TRANS, Section\
    \ 6.3]\n         serpent128-cbc                     [SSH-TRANS, Section 6.3]\n\
    \         arcfour                            [SSH-TRANS, Section 6.3]\n      \
    \   idea-cbc                           [SSH-TRANS, Section 6.3]\n         cast128-cbc\
    \                        [SSH-TRANS, Section 6.3]\n         none             \
    \                  [SSH-TRANS, Section 6.3]\n         des-cbc                \
    \            [FIPS-46-3] HISTORIC; See\n                                     \
    \         page 4 of [FIPS-46-3]\n"
- title: 4.11.2.  MAC Algorithm Names
  contents:
  - "4.11.2.  MAC Algorithm Names\n   The following table identifies the initial assignments\
    \ of the MAC\n   Algorithm Names.\n         MAC Algorithm Name               \
    \       Reference\n         ------------------                      ---------\n\
    \         hmac-sha1                         [SSH-TRANS, Section 6.4]\n       \
    \  hmac-sha1-96                      [SSH-TRANS, Section 6.4]\n         hmac-md5\
    \                          [SSH-TRANS, Section 6.4]\n         hmac-md5-96    \
    \                   [SSH-TRANS, Section 6.4]\n         none                  \
    \            [SSH-TRANS, Section 6.4]\n"
- title: 4.11.3.  Public Key Algorithm Names
  contents:
  - "4.11.3.  Public Key Algorithm Names\n   The following table identifies the initial\
    \ assignments of the Public\n   Key Algorithm names.\n         Public Key Algorithm\
    \ Name                 Reference\n         -------------------------         \
    \        ---------\n         ssh-dss                            [SSH-TRANS, Section\
    \ 6.6]\n         ssh-rsa                            [SSH-TRANS, Section 6.6]\n\
    \         pgp-sign-rsa                       [SSH-TRANS, Section 6.6]\n      \
    \   pgp-sign-dss                       [SSH-TRANS, Section 6.6]\n"
- title: 4.11.4.  Compression Algorithm Names
  contents:
  - "4.11.4.  Compression Algorithm Names\n   The following table identifies the initial\
    \ assignments of the\n   Compression Algorithm names.\n         Compression Algorithm\
    \ Name                Reference\n         --------------------------         \
    \       ---------\n         none                               [SSH-TRANS, Section\
    \ 6.2]\n         zlib                               [SSH-TRANS, Section 6.2]\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This protocol provides a secure encrypted channel\
    \ over an insecure\n   network.\n   Full security considerations for this protocol\
    \ are provided in\n   [SSH-ARCH].\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [SSH-ARCH]     Ylonen, T. and C. Lonvick, Ed.,\
    \ \"The Secure Shell\n                  (SSH) Protocol Architecture\", RFC 4251,\
    \ January 2006.\n   [SSH-TRANS]    Ylonen, T. and C. Lonvick, Ed., \"The Secure\
    \ Shell\n                  (SSH) Transport Layer Protocol\", RFC 4253, January\n\
    \                  2006.\n   [SSH-USERAUTH] Ylonen, T. and C. Lonvick, Ed., \"\
    The Secure Shell\n                  (SSH) Authentication Protocol\", RFC 4252,\
    \ January\n                  2006.\n   [SSH-CONNECT]  Ylonen, T. and C. Lonvick,\
    \ Ed., \"The Secure Shell\n                  (SSH) Connection Protocol\", RFC\
    \ 4254, January 2006.\n   [RFC2119]      Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n                  Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2409]      Harkins, D. and D. Carrel, \"The Internet Key Exchange\n\
    \                  (IKE)\", RFC 2409, November 1998.\n   [RFC2434]      Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing\n                  an IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC\n                  2434, October 1998.\n   [RFC3526]\
    \      Kivinen, T. and M. Kojo, \"More Modular Exponential\n                 \
    \ (MODP) Diffie-Hellman groups for Internet Key Exchange\n                  (IKE)\"\
    , RFC 3526, May 2003.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC0822]      Crocker, D., \"Standard for the\
    \ format of ARPA Internet\n                  text messages\", STD 11, RFC 822,\
    \ August 1982.\n   [RFC1034]      Mockapetris, P., \"Domain names - concepts and\n\
    \                  facilities\", STD 13, RFC 1034, November 1987.\n   [RFC2412]\
    \      Orman, H., \"The OAKLEY Key Determination Protocol\",\n               \
    \   RFC 2412, November 1998.\n   [FIPS-46-3]    US National Institute of Standards\
    \ and Technology,\n                  \"Data Encryption Standard (DES)\", Federal\
    \ Information\n                  Processing Standards Publication 46-3, October\
    \ 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Sami Lehtinen\n   SSH Communications Security Corp\n \
    \  Valimotie 17\n   00380 Helsinki\n   Finland\n   EMail: sjl@ssh.com\n   Chris\
    \ Lonvick (editor)\n   Cisco Systems, Inc.\n   12515 Research Blvd.\n   Austin\
    \  78759\n   USA\n   EMail: clonvick@cisco.com\n"
- title: Trademark Notice
  contents:
  - "Trademark Notice\n   \"ssh\" is a registered trademark in the United States and/or\
    \ other\n   countries.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
