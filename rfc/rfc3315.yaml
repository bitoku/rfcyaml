- title: __initial_text__
  contents:
  - '         Dynamic Host Configuration Protocol for IPv6 (DHCPv6)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Dynamic Host Configuration Protocol for IPv6 (DHCP) enables\
    \ DHCP\n   servers to pass configuration parameters such as IPv6 network\n   addresses\
    \ to IPv6 nodes.  It offers the capability of automatic\n   allocation of reusable\
    \ network addresses and additional configuration\n   flexibility.  This protocol\
    \ is a stateful counterpart to \"IPv6\n   Stateless Address Autoconfiguration\"\
    \ (RFC 2462), and can be used\n   separately or concurrently with the latter to\
    \ obtain configuration\n   parameters.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Overview . . . . . . . . . . . . .\
    \ . . . . .   5\n       1.1.   Protocols and Addressing . . . . . . . . . . .\
    \ . . . .   6\n       1.2.   Client-server Exchanges Involving Two Messages .\
    \ . . .   6\n       1.3.   Client-server Exchanges Involving Four Messages. .\
    \ . .   7\n   2.  Requirements. . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   7\n   3.  Background. . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   8\n   4.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 8\n       4.1.   IPv6 Terminology . . . . . . . . . . . . . . . . . . .   9\n\
    \       4.2.   DHCP Terminology . . . . . . . . . . . . . . . . . . .  10\n  \
    \ 5.  DHCP Constants. . . . . . . . . . . . . . . . . . . . . . . .  12\n    \
    \   5.1.   Multicast Addresses. . . . . . . . . . . . . . . . . .  13\n      \
    \ 5.2.   UDP Ports. . . . . . . . . . . . . . . . . . . . . . .  13\n       5.3.\
    \   DHCP Message Types . . . . . . . . . . . . . . . . . .  13\n       5.4.  \
    \ Status Codes . . . . . . . . . . . . . . . . . . . . .  15\n       5.5.   Transmission\
    \ and Retransmission Parameters . . . . . .  16\n       5.6    Representation\
    \ of time values and \"Infinity\" as a time\n              value. . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  16\n   6.  Client/Server Message Formats\
    \ . . . . . . . . . . . . . . . .  16\n   7.  Relay Agent/Server Message Formats.\
    \ . . . . . . . . . . . . .  17\n       7.1.   Relay-forward Message. . . . .\
    \ . . . . . . . . . . . .  18\n       7.2.   Relay-reply Message. . . . . . .\
    \ . . . . . . . . . . .  19\n   8.  Representation and Use of Domain Names. .\
    \ . . . . . . . . . .  19\n   9.  DHCP Unique Identifier (DUID) . . . . . . .\
    \ . . . . . . . . .  19\n       9.1.   DUID Contents. . . . . . . . . . . . .\
    \ . . . . . . . .  20\n       9.2.   DUID Based on Link-layer Address Plus Time\
    \ [DUID-LLT].  20\n       9.3.   DUID Assigned by Vendor Based on Enterprise Number\n\
    \              [DUID-EN]. . . . . . . . . . . . . . . . . . . . . . .  22\n  \
    \     9.4.   DUID Based on Link-layer Address [DUID-LL] . . . . . .  22\n   10.\
    \ Identity Association. . . . . . . . . . . . . . . . . . . . .  23\n   11. Selecting\
    \ Addresses for Assignment to an IA . . . . . . . . .  24\n   12. Management of\
    \ Temporary Addresses . . . . . . . . . . . . . .  25\n   13. Transmission of\
    \ Messages by a Client. . . . . . . . . . . . .  25\n   14. Reliability of Client\
    \ Initiated Message Exchanges . . . . . .  26\n   15. Message Validation. . .\
    \ . . . . . . . . . . . . . . . . . . .  27\n       15.1.  Use of Transaction\
    \ IDs . . . . . . . . . . . . . . . .  28\n       15.2.  Solicit Message. . .\
    \ . . . . . . . . . . . . . . . . .  28\n       15.3.  Advertise Message. . .\
    \ . . . . . . . . . . . . . . . .  28\n       15.4.  Request Message. . . . .\
    \ . . . . . . . . . . . . . . .  29\n       15.5.  Confirm Message. . . . . .\
    \ . . . . . . . . . . . . . .  29\n       15.6.  Renew Message. . . . . . . .\
    \ . . . . . . . . . . . . .  29\n       15.7.  Rebind Message . . . . . . . .\
    \ . . . . . . . . . . . .  29\n       15.8.  Decline Messages . . . . . . . .\
    \ . . . . . . . . . . .  30\n       15.9.  Release Message. . . . . . . . . .\
    \ . . . . . . . . . .  30\n       15.10. Reply Message. . . . . . . . . . . .\
    \ . . . . . . . . .  30\n       15.11. Reconfigure Message. . . . . . . . . .\
    \ . . . . . . . .  31\n       15.12. Information-request Message. . . . . . .\
    \ . . . . . . .  31\n       15.13. Relay-forward Message. . . . . . . . . . .\
    \ . . . . . .  31\n       15.14. Relay-reply Message. . . . . . . . . . . . .\
    \ . . . . .  31\n   16. Client Source Address and Interface Selection . . . .\
    \ . . . .  32\n   17. DHCP Server Solicitation. . . . . . . . . . . . . . . .\
    \ . . .  32\n       17.1.  Client Behavior. . . . . . . . . . . . . . . . . .\
    \ . .  32\n              17.1.1. Creation of Solicit Messages . . . . . . . .\
    \ .  32\n              17.1.2. Transmission of Solicit Messages . . . . . . .\
    \  33\n              17.1.3. Receipt of Advertise Messages. . . . . . . . .  35\n\
    \              17.1.4. Receipt of Reply Message . . . . . . . . . . .  35\n  \
    \     17.2.  Server Behavior. . . . . . . . . . . . . . . . . . . .  36\n    \
    \          17.2.1. Receipt of Solicit Messages  . . . . . . . . .  36\n      \
    \        17.2.2. Creation and Transmission of Advertise Messages 36\n        \
    \      17.2.3. Creation and Transmission of Reply Messages. .  38\n   18. DHCP\
    \ Client-Initiated Configuration Exchange. . . . . . . . .  38\n       18.1. \
    \ Client Behavior. . . . . . . . . . . . . . . . . . . .  39\n              18.1.1.\
    \ Creation and Transmission of Request Messages.  39\n              18.1.2. Creation\
    \ and Transmission of Confirm Messages.  40\n              18.1.3. Creation and\
    \ Transmission of Renew Messages. .  41\n              18.1.4. Creation and Transmission\
    \ of Rebind Messages .  43\n              18.1.5. Creation and Transmission of\
    \ Information-\n                      request Messages  . . .. . . . . . . . .\
    \ . . .  44\n              18.1.6. Creation and Transmission of Release Messages.\
    \  44\n              18.1.7. Creation and Transmission of Decline Messages.  46\n\
    \              18.1.8. Receipt of Reply Messages. . . . . . . . . . .  46\n  \
    \     18.2.  Server Behavior. . . . . . . . . . . . . . . . . . . .  48\n    \
    \          18.2.1. Receipt of Request Messages. . . . . . . . . .  49\n      \
    \        18.2.2. Receipt of Confirm Messages. . . . . . . . . .  50\n        \
    \      18.2.3. Receipt of Renew Messages. . . . . . . . . . .  51\n          \
    \    18.2.4. Receipt of Rebind Messages . . . . . . . . . .  51\n            \
    \  18.2.5. Receipt of Information-request Messages. . . .  52\n              18.2.6.\
    \ Receipt of Release Messages. . . . . . . . . .  53\n              18.2.7. Receipt\
    \ of Decline Messages. . . . . . . . . .  53\n              18.2.8. Transmission\
    \ of Reply Messages . . . . . . . .  54\n   19. DHCP Server-Initiated Configuration\
    \ Exchange. . . . . . . . .  54\n       19.1.  Server Behavior. . . . . . . .\
    \ . . . . . . . . . . . .  55\n              19.1.1. Creation and Transmission\
    \ of Reconfigure\n                      Messages . . . . . . . . . . . . . . .\
    \ . . . .  55\n              19.1.2. Time Out and Retransmission of Reconfigure\n\
    \                      Messages . . . . . . . . . . . . . . . . . . .  56\n  \
    \     19.2.  Receipt of Renew Messages. . . . . . . . . . . . . . .  56\n    \
    \   19.3.  Receipt of Information-request Messages. . . . . . . .  56\n      \
    \ 19.4.  Client Behavior. . . . . . . . . . . . . . . . . . . .  57\n        \
    \      19.4.1. Receipt of Reconfigure Messages. . . . . . . .  57\n          \
    \    19.4.2. Creation and Transmission of Renew Messages. .  58\n            \
    \  19.4.3. Creation and Transmission of Information-\n                      request\
    \ Messages . . . . . . . . . . . . . . .  58\n              19.4.4. Time Out and\
    \ Retransmission of Renew or\n                      Information-request Messages\
    \ . . . . . . . . .  58\n              19.4.5. Receipt of Reply Messages. . .\
    \ . . . . . . . .  58\n   20. Relay Agent Behavior. . . . . . . . . . . . . .\
    \ . . . . . . .  58\n       20.1.  Relaying a Client Message or a Relay-forward\
    \ Message .  59\n              20.1.1. Relaying a Message from a Client . . .\
    \ . . . .  59\n              20.1.2. Relaying a Message from a Relay Agent. .\
    \ . . .  59\n       20.2.  Relaying a Relay-reply Message . . . . . . . . . .\
    \ . .  60\n       20.3.  Construction of Relay-reply Messages . . . . . . . .\
    \ .  60\n   21. Authentication of DHCP Messages . . . . . . . . . . . . . . .\
    \  61\n       21.1.  Security of Messages Sent Between Servers and Relay\n   \
    \           Agents  . . . . . .  . . . . . . . . . . . . . . . . .  61\n     \
    \  21.2.  Summary of DHCP Authentication . . . . . . . . . . . .  63\n       21.3.\
    \  Replay Detection . . . . . . . . . . . . . . . . . . .  63\n       21.4.  Delayed\
    \ Authentication Protocol. . . . . . . . . . . .  63\n              21.4.1. Use\
    \ of the Authentication Option in the Delayed\n                      Authentication\
    \ Protocol. . . . . . . . . . . .  64\n              21.4.2. Message Validation\
    \ . . . . . . . . . . . . . .  65\n              21.4.3. Key Utilization  . .\
    \ . . . . . . . . . . . . .  65\n              21.4.4. Client Considerations for\
    \ Delayed Authentication\n                      Protocol . . . . . . . . . . .\
    \ . . . . . . . .  66\n              21.4.5. Server Considerations for Delayed\
    \ Authentication\n                      Protocol . . . . . . . . . . . . . . .\
    \ . . . .  67\n       21.5.  Reconfigure Key Authentication Protocol. . . . .\
    \ . . .  68\n              21.5.1. Use of the Authentication Option in the\n \
    \                     Reconfigure Key Authentication Protocol. . . .  69\n   \
    \           21.5.2. Server considerations for Reconfigure Key\n              \
    \        protocol . . . . . . . . . . . . . . . . . . .  69\n              21.5.3.\
    \ Client considerations for Reconfigure Key\n                      protocol .\
    \ . . . . . . . . . . . . . . . . . .  70\n   22. DHCP Options. . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  70\n       22.1.  Format of DHCP Options\
    \ . . . . . . . . . . . . . . . .  71\n       22.2.  Client Identifier Option\
    \ . . . . . . . . . . . . . . .  71\n       22.3.  Server Identifier Option .\
    \ . . . . . . . . . . . . . .  72\n       22.4.  Identity Association for Non-temporary\
    \ Addresses Option 72\n       22.5.  Identity Association for Temporary Addresses\
    \ Option. .  75\n       22.6.  IA Address Option. . . . . . . . . . . . . . .\
    \ . . . .  76\n       22.7.  Option Request Option. . . . . . . . . . . . . .\
    \ . . .  78\n       22.8.  Preference Option. . . . . . . . . . . . . . . . .\
    \ . .  79\n       22.9.  Elapsed Time Option. . . . . . . . . . . . . . . . .\
    \ .  79\n       22.10. Relay Message Option . . . . . . . . . . . . . . . . .\
    \  80\n       22.11. Authentication Option. . . . . . . . . . . . . . . . .  81\n\
    \       22.12. Server Unicast Option. . . . . . . . . . . . . . . . .  82\n  \
    \     22.13. Status Code Option . . . . . . . . . . . . . . . . . .  82\n    \
    \   22.14. Rapid Commit Option. . . . . . . . . . . . . . . . . .  83\n      \
    \ 22.15. User Class Option. . . . . . . . . . . . . . . . . . .  84\n       22.16.\
    \ Vendor Class Option. . . . . . . . . . . . . . . . . .  85\n       22.17. Vendor-specific\
    \ Information Option . . . . . . . . . .  86\n       22.18. Interface-Id Option.\
    \ . . . . . . . . . . . . . . . . .  87\n       22.19. Reconfigure Message Option\
    \ . . . . . . . . . . . . . .  88\n       22.20. Reconfigure Accept Option. .\
    \ . . . . . . . . . . . . .  89\n   23. Security Considerations . . . . . . .\
    \ . . . . . . . . . . . .  89\n   24. IANA Considerations . . . . . . . . . .\
    \ . . . . . . . . . . .  91\n       24.1.  Multicast Addresses. . . . . . . .\
    \ . . . . . . . . . .  92\n       24.2.  DHCP Message Types . . . . . . . . .\
    \ . . . . . . . . .  93\n       24.3.  DHCP Options . . . . . . . . . . . . .\
    \ . . . . . . . .  94\n       24.4.  Status Codes . . . . . . . . . . . . . .\
    \ . . . . . . .  95\n       24.5.  DUID . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  95\n   25. Acknowledgments . . . . . . . . . . . . . . . . . .\
    \ . . . . .  95\n   26. References. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  96\n       26.1.  Normative References . . . . . . . . . . . . . .\
    \ . . .  96\n       26.2.  Informative References . . . . . . . . . . . . . .\
    \ . .  97\n   A. Appearance of Options in Message Types . . . . . . . . . . .\
    \ .  98\n   B. Appearance of Options in the Options Field of DHCP Options . .\
    \  99\n   Chair's Address . . . . . . . . . . . . . . . . . . . . . . . . .  99\n\
    \   Authors' Addresses. . . . . . . . . . . . . . . . . . . . . . . . 100\n  \
    \ Full Copyright Statement. . . . . . . . . . . . . . . . . . . . . 101\n"
- title: 1. Introduction and Overview
  contents:
  - "1. Introduction and Overview\n   This document describes DHCP for IPv6 (DHCP),\
    \ a client/server\n   protocol that provides managed configuration of devices.\n\
    \   DHCP can provide a device with addresses assigned by a DHCP server\n   and\
    \ other configuration information, which are carried in options.\n   DHCP can\
    \ be extended through the definition of new options to carry\n   configuration\
    \ information not specified in this document.\n   DHCP is the \"stateful address\
    \ autoconfiguration protocol\" and the\n   \"stateful autoconfiguration protocol\"\
    \ referred to in \"IPv6 Stateless\n   Address Autoconfiguration\" [17].\n   The\
    \ operational models and relevant configuration information for\n   DHCPv4 [18][19]\
    \ and DHCPv6 are sufficiently different that\n   integration between the two services\
    \ is not included in this\n   document.  If there is sufficient interest and demand,\
    \ integration\n   can be specified in a document that extends DHCPv6 to carry\
    \ IPv4\n   addresses and configuration information.\n   The remainder of this\
    \ introduction summarizes DHCP, explaining the\n   message exchange mechanisms\
    \ and example message flows.  The message\n   flows in sections 1.2 and 1.3 are\
    \ intended as illustrations of DHCP\n   operation rather than an exhaustive list\
    \ of all possible\n   client-server interactions.  Sections 17, 18, and 19 explain\
    \ client\n   and server operation in detail.\n"
- title: 1.1. Protocols and Addressing
  contents:
  - "1.1. Protocols and Addressing\n   Clients and servers exchange DHCP messages\
    \ using UDP [15].  The\n   client uses a link-local address or addresses determined\
    \ through\n   other mechanisms for transmitting and receiving DHCP messages.\n\
    \   DHCP servers receive messages from clients using a reserved,\n   link-scoped\
    \ multicast address.  A DHCP client transmits most messages\n   to this reserved\
    \ multicast address, so that the client need not be\n   configured with the address\
    \ or addresses of DHCP servers.\n   To allow a DHCP client to send a message to\
    \ a DHCP server that is not\n   attached to the same link, a DHCP relay agent\
    \ on the client's link\n   will relay messages between the client and server.\
    \  The operation of\n   the relay agent is transparent to the client and the discussion\
    \ of\n   message exchanges in the remainder of this section will omit the\n  \
    \ description of message relaying by relay agents.\n   Once the client has determined\
    \ the address of a server, it may under\n   some circumstances send messages directly\
    \ to the server using\n   unicast.\n"
- title: 1.2. Client-server Exchanges Involving Two Messages
  contents:
  - "1.2. Client-server Exchanges Involving Two Messages\n   When a DHCP client does\
    \ not need to have a DHCP server assign it IP\n   addresses, the client can obtain\
    \ configuration information such as a\n   list of available DNS servers [20] or\
    \ NTP servers [21] through a\n   single message and reply exchanged with a DHCP\
    \ server.  To obtain\n   configuration information the client first sends an\n\
    \   Information-Request message to the All_DHCP_Relay_Agents_and_Servers\n   multicast\
    \ address.  Servers respond with a Reply message containing\n   the configuration\
    \ information for the client.\n   This message exchange assumes that the client\
    \ requires only\n   configuration information and does not require the assignment\
    \ of any\n   IPv6 addresses.\n   When a server has IPv6 addresses and other configuration\
    \ information\n   committed to a client, the client and server may be able to\
    \ complete\n   the exchange using only two messages, instead of four messages\
    \ as\n   described in the next section.  In this case, the client sends a\n  \
    \ Solicit message to the All_DHCP_Relay_Agents_and_Servers requesting\n   the\
    \ assignment of addresses and other configuration information.\n   This message\
    \ includes an indication that the client is willing to\n   accept an immediate\
    \ Reply message from the server.  The server that\n   is willing to commit the\
    \ assignment of addresses to the client\n   immediately responds with a Reply\
    \ message.  The configuration\n   information and the addresses in the Reply message\
    \ are then\n   immediately available for use by the client.\n   Each address assigned\
    \ to the client has associated preferred and\n   valid lifetimes specified by\
    \ the server.  To request an extension of\n   the lifetimes assigned to an address,\
    \ the client sends a Renew\n   message to the server.  The server sends a Reply\
    \ message to the\n   client with the new lifetimes, allowing the client to continue\
    \ to use\n   the address without interruption.\n"
- title: 1.3. Client-server Exchanges Involving Four Messages
  contents:
  - "1.3. Client-server Exchanges Involving Four Messages\n   To request the assignment\
    \ of one or more IPv6 addresses, a client\n   first locates a DHCP server and\
    \ then requests the assignment of\n   addresses and other configuration information\
    \ from the server.  The\n   client sends a Solicit message to the\n   All_DHCP_Relay_Agents_and_Servers\
    \ address to find available DHCP\n   servers.  Any server that can meet the client's\
    \ requirements responds\n   with an Advertise message.  The client then chooses\
    \ one of the\n   servers and sends a Request message to the server asking for\n\
    \   confirmed assignment of addresses and other configuration\n   information.\
    \  The server responds with a Reply message that contains\n   the confirmed addresses\
    \ and configuration.\n   As described in the previous section, the client sends\
    \ a Renew\n   message to the server to extend the lifetimes associated with its\n\
    \   addresses, allowing the client to continue to use those addresses\n   without\
    \ interruption.\n"
- title: 2. Requirements
  contents:
  - "2. Requirements\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT,\
    \ SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in\
    \ this\n   document, are to be interpreted as described in [1].\n   This document\
    \ also makes use of internal conceptual variables to\n   describe protocol behavior\
    \ and external variables that an\n   implementation must allow system administrators\
    \ to change.  The\n   specific variable names, how their values change, and how\
    \ their\n   settings influence protocol behavior are provided to demonstrate\n\
    \   protocol behavior.  An implementation is not required to have them in\n  \
    \ the exact form described here, so long as its external behavior is\n   consistent\
    \ with that described in this document.\n"
- title: 3. Background
  contents:
  - "3. Background\n   The IPv6 Specification provides the base architecture and design\
    \ of\n   IPv6.  Related work in IPv6 that would best serve an implementor to\n\
    \   study includes the IPv6 Specification [3], the IPv6 Addressing\n   Architecture\
    \ [5], IPv6 Stateless Address Autoconfiguration [17], IPv6\n   Neighbor Discovery\
    \ Processing [13], and Dynamic Updates to DNS [22].\n   These specifications enable\
    \ DHCP to build upon the IPv6 work to\n   provide both robust stateful autoconfiguration\
    \ and autoregistration\n   of DNS Host Names.\n   The IPv6 Addressing Architecture\
    \ specification [5] defines the\n   address scope that can be used in an IPv6\
    \ implementation, and the\n   various configuration architecture guidelines for\
    \ network designers\n   of the IPv6 address space.  Two advantages of IPv6 are\
    \ that support\n   for multicast is required and nodes can create link-local addresses\n\
    \   during initialization.  The availability of these features means that\n  \
    \ a client can use its link-local address and a well-known multicast\n   address\
    \ to discover and communicate with DHCP servers or relay agents\n   on its link.\n\
    \   IPv6 Stateless Address Autoconfiguration [17] specifies procedures by\n  \
    \ which a node may autoconfigure addresses based on router\n   advertisements\
    \ [13], and the use of a valid lifetime to support\n   renumbering of addresses\
    \ on the Internet.  In addition, the protocol\n   interaction by which a node\
    \ begins stateless or stateful\n   autoconfiguration is specified.  DHCP is one\
    \ vehicle to perform\n   stateful autoconfiguration.  Compatibility with stateless\
    \ address\n   autoconfiguration is a design requirement of DHCP.\n   IPv6 Neighbor\
    \ Discovery [13] is the node discovery protocol in IPv6\n   which replaces and\
    \ enhances functions of ARP [14].  To understand\n   IPv6 and stateless address\
    \ autoconfiguration, it is strongly\n   recommended that implementors understand\
    \ IPv6 Neighbor Discovery.\n   Dynamic Updates to DNS [22] is a specification\
    \ that supports the\n   dynamic update of DNS records for both IPv4 and IPv6.\
    \  DHCP can use\n   the dynamic updates to DNS to integrate addresses and name\
    \ space to\n   not only support autoconfiguration, but also autoregistration in\n\
    \   IPv6.\n"
- title: 4. Terminology
  contents:
  - "4. Terminology\n   This sections defines terminology specific to IPv6 and DHCP\
    \ used in\n   this document.\n"
- title: 4.1. IPv6 Terminology
  contents:
  - "4.1. IPv6 Terminology\n   IPv6 terminology relevant to this specification from\
    \ the IPv6\n   Protocol [3], IPv6 Addressing Architecture [5], and IPv6 Stateless\n\
    \   Address Autoconfiguration [17] is included below.\n      address         \
    \          An IP layer identifier for an interface\n                         \
    \       or a set of interfaces.\n      host                      Any node that\
    \ is not a router.\n      IP                        Internet Protocol Version\
    \ 6 (IPv6).  The\n                                terms IPv4 and IPv6 are used\
    \ only in\n                                contexts where it is necessary to avoid\n\
    \                                ambiguity.\n      interface                 A\
    \ node's attachment to a link.\n      link                      A communication\
    \ facility or medium over\n                                which nodes can communicate\
    \ at the link\n                                layer, i.e., the layer immediately\n\
    \                                below IP.  Examples are Ethernet (simple\n  \
    \                              or bridged); Token Ring; PPP links,\n         \
    \                       X.25, Frame Relay, or ATM networks; and\n            \
    \                    Internet (or higher) layer \"tunnels\",\n               \
    \                 such as tunnels over IPv4 or IPv6\n                        \
    \        itself.\n      link-layer identifier     A link-layer identifier for\
    \ an\n                                interface.  Examples include IEEE 802\n\
    \                                addresses for Ethernet or Token Ring\n      \
    \                          network interfaces, and E.164 addresses\n         \
    \                       for ISDN links.\n      link-local address        An IPv6\
    \ address having a link-only\n                                scope, indicated\
    \ by having the prefix\n                                (FE80::/10), that can\
    \ be used to reach\n                                neighboring nodes attached\
    \ to the same\n                                link.  Every interface has a link-local\n\
    \                                address.\n      multicast address         An\
    \ identifier for a set of interfaces\n                                (typically\
    \ belonging to different\n                                nodes).  A packet sent\
    \ to a multicast\n                                address is delivered to all\
    \ interfaces\n                                identified by that address.\n  \
    \    neighbor                  A node attached to the same link.\n      node \
    \                     A device that implements IP.\n      packet             \
    \       An IP header plus payload.\n      prefix                    The initial\
    \ bits of an address, or a\n                                set of IP addresses\
    \ that share the same\n                                initial bits.\n      prefix\
    \ length             The number of bits in a prefix.\n      router           \
    \         A node that forwards IP packets not\n                              \
    \  explicitly addressed to itself.\n      unicast address           An identifier\
    \ for a single interface.\n                                A packet sent to a\
    \ unicast address is\n                                delivered to the interface\
    \ identified by\n                                that address.\n"
- title: 4.2. DHCP Terminology
  contents:
  - "4.2. DHCP Terminology\n   Terminology specific to DHCP can be found below.\n\
    \      appropriate to the link   An address is \"appropriate to the link\"\n \
    \                               when the address is consistent with the\n    \
    \                            DHCP server's knowledge of the network\n        \
    \                        topology, prefix assignment and address\n           \
    \                     assignment policies.\n      binding                   A\
    \ binding (or, client binding) is a\n                                group of\
    \ server data records containing\n                                the information\
    \ the server has about\n                                the addresses in an IA\
    \ or configuration\n                                information explicitly assigned\
    \ to the\n                                client.  Configuration information that\n\
    \                                has been returned to a client through a\n   \
    \                             policy - for example, the information\n        \
    \                        returned to all clients on the same\n               \
    \                 link - does not require a binding.  A\n                    \
    \            binding containing information about\n                          \
    \      an IA is indexed by the tuple <DUID,\n                                IA-type,\
    \ IAID> (where IA-type is the\n                                type of address\
    \ in the IA; for example,\n                                temporary).  A binding\
    \ containing\n                                configuration information for a\
    \ client\n                                is indexed by <DUID>.\n      configuration\
    \ parameter   An element of the configuration\n                              \
    \  information set on the server and\n                                delivered\
    \ to the client using DHCP.\n                                Such parameters may\
    \ be used to carry\n                                information to be used by\
    \ a node to\n                                configure its network subsystem and\n\
    \                                enable communication on a link or\n         \
    \                       internetwork, for example.\n      DHCP               \
    \       Dynamic Host Configuration Protocol\n                                for\
    \ IPv6.  The terms DHCPv4 and DHCPv6\n                                are used\
    \ only in contexts where it is\n                                necessary to avoid\
    \ ambiguity.\n      DHCP client (or client)   A node that initiates requests on\
    \ a link\n                                to obtain configuration parameters from\n\
    \                                one or more DHCP servers.\n      DHCP domain\
    \               A set of links managed by DHCP and\n                         \
    \       operated by a single administrative\n                                entity.\n\
    \      DHCP realm                A name used to identify the DHCP\n          \
    \                      administrative domain from which a DHCP\n             \
    \                   authentication key was selected.\n      DHCP relay agent (or\
    \ relay agent) A node that acts as an\n                                intermediary\
    \ to deliver DHCP messages\n                                between clients and\
    \ servers, and is on\n                                the same link as the client.\n\
    \      DHCP server (or server)   A node that responds to requests from\n     \
    \                           clients, and may or may not be on the\n          \
    \                      same link as the client(s).\n      DUID               \
    \       A DHCP Unique IDentifier for a DHCP\n                                participant;\
    \ each DHCP client and server\n                                has exactly one\
    \ DUID.  See section 9 for\n                                details of the ways\
    \ in which a DUID may\n                                be constructed.\n     \
    \ Identity association (IA) A collection of addresses assigned to\n          \
    \                      a client.  Each IA has an associated\n                \
    \                IAID.  A client may have more than one\n                    \
    \            IA assigned to it; for example, one for\n                       \
    \         each of its interfaces.\n                                Each IA holds\
    \ one type of address;\n                                for example, an identity\
    \ association\n                                for temporary addresses (IA_TA)\
    \ holds\n                                temporary addresses (see \"identity\n\
    \                                association for temporary addresses\").\n   \
    \                             Throughout this document, \"IA\" is used\n     \
    \                           to refer to an identity association\n            \
    \                    without identifying the type of\n                       \
    \         addresses in the IA.\n      Identity association identifier (IAID) An\
    \ identifier for an IA,\n                                chosen by the client.\
    \  Each IA has an\n                                IAID, which is chosen to be\
    \ unique among\n                                all IAIDs for IAs belonging to\
    \ that\n                                client.\n      Identity association for\
    \ non-temporary addresses (IA_NA) An IA\n                                that\
    \ carries assigned addresses that are\n                                not temporary\
    \ addresses (see \"identity\n                                association for temporary\
    \ addresses\")\n      Identity association for temporary addresses (IA_TA) An\
    \ IA that\n                                carries temporary addresses (see RFC\n\
    \                                3041 [12]).\n      message                  \
    \ A unit of data carried as the payload\n                                of a\
    \ UDP datagram, exchanged among DHCP\n                                servers,\
    \ relay agents and clients.\n      Reconfigure key           A key supplied to\
    \ a client by a server\n                                used to provide security\
    \ for Reconfigure\n                                messages.\n      relaying \
    \                 A DHCP relay agent relays DHCP messages\n                  \
    \              between DHCP participants.\n      transaction ID            An\
    \ opaque value used to match responses\n                                with replies\
    \ initiated either by a\n                                client or server.\n"
- title: 5. DHCP Constants
  contents:
  - "5. DHCP Constants\n   This section describes various program and networking constants\
    \ used\n   by DHCP.\n"
- title: 5.1. Multicast Addresses
  contents:
  - "5.1. Multicast Addresses\n   DHCP makes use of the following multicast addresses:\n\
    \      All_DHCP_Relay_Agents_and_Servers (FF02::1:2) A link-scoped\n         \
    \         multicast address used by a client to communicate with\n           \
    \       neighboring (i.e., on-link) relay agents and servers.\n              \
    \    All servers and relay agents are members of this\n                  multicast\
    \ group.\n      All_DHCP_Servers (FF05::1:3) A site-scoped multicast address used\n\
    \                  by a relay agent to communicate with servers, either\n    \
    \              because the relay agent wants to send messages to\n           \
    \       all servers or because it does not know the unicast\n                \
    \  addresses of the servers.  Note that in order for\n                  a relay\
    \ agent to use this address, it must have an\n                  address of sufficient\
    \ scope to be reachable by the\n                  servers.  All servers within\
    \ the site are members of\n                  this multicast group.\n"
- title: 5.2. UDP Ports
  contents:
  - "5.2. UDP Ports\n   Clients listen for DHCP messages on UDP port 546.  Servers\
    \ and relay\n   agents listen for DHCP messages on UDP port 547.\n"
- title: 5.3. DHCP Message Types
  contents:
  - "5.3. DHCP Message Types\n   DHCP defines the following message types.  More detail\
    \ on these\n   message types can be found in sections 6 and 7.  Message types\
    \ not\n   listed here are reserved for future use.  The numeric encoding for\n\
    \   each message type is shown in parentheses.\n      SOLICIT (1)        A client\
    \ sends a Solicit message to locate\n                         servers.\n     \
    \ ADVERTISE (2)      A server sends an Advertise message to indicate\n       \
    \                  that it is available for DHCP service, in\n               \
    \          response to a Solicit message received from a\n                   \
    \      client.\n      REQUEST (3)        A client sends a Request message to request\n\
    \                         configuration parameters, including IP\n           \
    \              addresses, from a specific server.\n      CONFIRM (4)        A\
    \ client sends a Confirm message to any\n                         available server\
    \ to determine whether the\n                         addresses it was assigned\
    \ are still appropriate\n                         to the link to which the client\
    \ is connected.\n      RENEW (5)          A client sends a Renew message to the\
    \ server\n                         that originally provided the client's addresses\n\
    \                         and configuration parameters to extend the\n       \
    \                  lifetimes on the addresses assigned to the\n              \
    \           client and to update other configuration\n                       \
    \  parameters.\n      REBIND (6)         A client sends a Rebind message to any\n\
    \                         available server to extend the lifetimes on the\n  \
    \                       addresses assigned to the client and to update\n     \
    \                    other configuration parameters; this message is\n       \
    \                  sent after a client receives no response to a\n           \
    \              Renew message.\n      REPLY (7)          A server sends a Reply\
    \ message containing\n                         assigned addresses and configuration\
    \ parameters\n                         in response to a Solicit, Request, Renew,\n\
    \                         Rebind message received from a client.  A\n        \
    \                 server sends a Reply message containing\n                  \
    \       configuration parameters in response to an\n                         Information-request\
    \ message.  A server sends a\n                         Reply message in response\
    \ to a Confirm message\n                         confirming or denying that the\
    \ addresses\n                         assigned to the client are appropriate to\
    \ the\n                         link to which the client is connected.  A\n  \
    \                       server sends a Reply message to acknowledge\n        \
    \                 receipt of a Release or Decline message.\n      RELEASE (8)\
    \        A client sends a Release message to the server\n                    \
    \     that assigned addresses to the client to\n                         indicate\
    \ that the client will no longer use one\n                         or more of\
    \ the assigned addresses.\n      DECLINE (9)        A client sends a Decline message\
    \ to a server to\n                         indicate that the client has determined\
    \ that\n                         one or more addresses assigned by the server\n\
    \                         are already in use on the link to which the\n      \
    \                   client is connected.\n      RECONFIGURE (10)   A server sends\
    \ a Reconfigure message to a\n                         client to inform the client\
    \ that the server has\n                         new or updated configuration parameters,\
    \ and\n                         that the client is to initiate a Renew/Reply\n\
    \                         or Information-request/Reply transaction with\n    \
    \                     the server in order to receive the updated\n           \
    \              information.\n      INFORMATION-REQUEST (11) A client sends an\
    \ Information-request\n                         message to a server to request\
    \ configuration\n                         parameters without the assignment of\
    \ any IP\n                         addresses to the client.\n      RELAY-FORW\
    \ (12)    A relay agent sends a Relay-forward message\n                      \
    \   to relay messages to servers, either directly\n                         or\
    \ through another relay agent.  The received\n                         message,\
    \ either a client message or a\n                         Relay-forward message\
    \ from another relay\n                         agent, is encapsulated in an option\
    \ in the\n                         Relay-forward message.\n      RELAY-REPL (13)\
    \    A server sends a Relay-reply message to a relay\n                       \
    \  agent containing a message that the relay\n                         agent delivers\
    \ to a client.  The Relay-reply\n                         message may be relayed\
    \ by other relay agents\n                         for delivery to the destination\
    \ relay agent.\n                         The server encapsulates the client message\
    \ as\n                         an option in the Relay-reply message, which the\n\
    \                         relay agent extracts and relays to the client.\n"
- title: 5.4. Status Codes
  contents:
  - "5.4. Status Codes\n   DHCPv6 uses status codes to communicate the success or\
    \ failure of\n   operations requested in messages from clients and servers, and\
    \ to\n   provide additional information about the specific cause of the\n   failure\
    \ of a message.  The specific status codes are defined in\n   section 24.4.\n"
- title: 5.5. Transmission and Retransmission Parameters
  contents:
  - "5.5. Transmission and Retransmission Parameters\n   This section presents a table\
    \ of values used to describe the message\n   transmission behavior of clients\
    \ and servers.\n   Parameter     Default  Description\n   -------------------------------------\n\
    \   SOL_MAX_DELAY     1 sec   Max delay of first Solicit\n   SOL_TIMEOUT     \
    \  1 sec   Initial Solicit timeout\n   SOL_MAX_RT      120 secs  Max Solicit timeout\
    \ value\n   REQ_TIMEOUT       1 sec   Initial Request timeout\n   REQ_MAX_RT \
    \      30 secs  Max Request timeout value\n   REQ_MAX_RC       10       Max Request\
    \ retry attempts\n   CNF_MAX_DELAY     1 sec   Max delay of first Confirm\n  \
    \ CNF_TIMEOUT       1 sec   Initial Confirm timeout\n   CNF_MAX_RT        4 secs\
    \  Max Confirm timeout\n   CNF_MAX_RD       10 secs  Max Confirm duration\n  \
    \ REN_TIMEOUT      10 secs  Initial Renew timeout\n   REN_MAX_RT      600 secs\
    \  Max Renew timeout value\n   REB_TIMEOUT      10 secs  Initial Rebind timeout\n\
    \   REB_MAX_RT      600 secs  Max Rebind timeout value\n   INF_MAX_DELAY     1\
    \ sec   Max delay of first Information-request\n   INF_TIMEOUT       1 sec   Initial\
    \ Information-request timeout\n   INF_MAX_RT      120 secs  Max Information-request\
    \ timeout value\n   REL_TIMEOUT       1 sec   Initial Release timeout\n   REL_MAX_RC\
    \        5       MAX Release attempts\n   DEC_TIMEOUT       1 sec   Initial Decline\
    \ timeout\n   DEC_MAX_RC        5       Max Decline attempts\n   REC_TIMEOUT \
    \      2 secs  Initial Reconfigure timeout\n   REC_MAX_RC        8       Max Reconfigure\
    \ attempts\n   HOP_COUNT_LIMIT  32       Max hop count in a Relay-forward message\n"
- title: 5.6  Representation of time values and "Infinity" as a time value
  contents:
  - "5.6  Representation of time values and \"Infinity\" as a time value\n   All time\
    \ values for lifetimes, T1 and T2 are unsigned integers.  The\n   value 0xffffffff\
    \ is taken to mean \"infinity\" when used as a lifetime\n   (as in RFC2461 [17])\
    \ or a value for T1 or T2.\n"
- title: 6. Client/Server Message Formats
  contents:
  - "6. Client/Server Message Formats\n   All DHCP messages sent between clients and\
    \ servers share an identical\n   fixed format header and a variable format area\
    \ for options.\n   All values in the message header and in options are in network\
    \ byte\n   order.\n   Options are stored serially in the options field, with no\
    \ padding\n   between the options.  Options are byte-aligned but are not aligned\
    \ in\n   any other way such as on 2 or 4 byte boundaries.\n   The following diagram\
    \ illustrates the format of DHCP messages sent\n   between clients and servers:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    msg-type   |               transaction-id                  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      .   \
    \                         options                            .\n      .      \
    \                     (variable)                          .\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      msg-type             Identifies the DHCP message type; the\n          \
    \                 available message types are listed in\n                    \
    \       section 5.3.\n      transaction-id       The transaction ID for this message\
    \ exchange.\n      options              Options carried in this message; options\
    \ are\n                           described in section 22.\n"
- title: 7. Relay Agent/Server Message Formats
  contents:
  - "7. Relay Agent/Server Message Formats\n   Relay agents exchange messages with\
    \ servers to relay messages between\n   clients and servers that are not connected\
    \ to the same link.\n   All values in the message header and in options are in\
    \ network byte\n   order.\n   Options are stored serially in the options field,\
    \ with no padding\n   between the options.  Options are byte-aligned but are not\
    \ aligned in\n   any other way such as on 2 or 4 byte boundaries.\n   There are\
    \ two relay agent messages, which share the following format:\n       0      \
    \             1                   2                   3\n       0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    msg-type   |   hop-count   |                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |\n      |\
    \                                                               |\n      |   \
    \                      link-address                          |\n      |      \
    \                                                         |\n      |         \
    \                      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|\n      |            \
    \                   |                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n      |                                   \
    \                            |\n      |                         peer-address \
    \                         |\n      |                                         \
    \                      |\n      |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|\n\
    \      |                               |                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |\n      .\
    \                                                               .\n      .   \
    \         options (variable number and length)   ....        .\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The following sections describe the use of the Relay Agent message\n   header.\n"
- title: 7.1. Relay-forward Message
  contents:
  - "7.1. Relay-forward Message\n   The following table defines the use of message\
    \ fields in a Relay-\n   forward message.\n      msg-type       RELAY-FORW\n \
    \     hop-count      Number of relay agents that have relayed this\n         \
    \            message.\n      link-address   A global or site-local address that\
    \ will be used by\n                     the server to identify the link on which\
    \ the client\n                     is located.\n      peer-address   The address\
    \ of the client or relay agent from which\n                     the message to\
    \ be relayed was received.\n      options        MUST include a \"Relay Message\
    \ option\" (see\n                     section 22.10); MAY include other options\
    \ added by\n                     the relay agent.\n"
- title: 7.2. Relay-reply Message
  contents:
  - "7.2. Relay-reply Message\n   The following table defines the use of message fields\
    \ in a\n   Relay-reply message.\n      msg-type       RELAY-REPL\n      hop-count\
    \      Copied from the Relay-forward message\n      link-address   Copied from\
    \ the Relay-forward message\n      peer-address   Copied from the Relay-forward\
    \ message\n      options        MUST include a \"Relay Message option\"; see\n\
    \                     section 22.10; MAY include other options\n"
- title: 8. Representation and Use of Domain Names
  contents:
  - "8. Representation and Use of Domain Names\n   So that domain names may be encoded\
    \ uniformly, a domain name or a\n   list of domain names is encoded using the\
    \ technique described in\n   section 3.1 of RFC 1035 [10].  A domain name, or\
    \ list of domain\n   names, in DHCP MUST NOT be stored in compressed form, as\
    \ described in\n   section 4.1.4 of RFC 1035.\n"
- title: 9. DHCP Unique Identifier (DUID)
  contents:
  - "9. DHCP Unique Identifier (DUID)\n   Each DHCP client and server has a DUID.\
    \  DHCP servers use DUIDs to\n   identify clients for the selection of configuration\
    \ parameters and in\n   the association of IAs with clients.  DHCP clients use\
    \ DUIDs to\n   identify a server in messages where a server needs to be identified.\n\
    \   See sections 22.2 and 22.3 for the representation of a DUID in a DHCP\n  \
    \ message.\n   Clients and servers MUST treat DUIDs as opaque values and MUST\
    \ only\n   compare DUIDs for equality.  Clients and servers MUST NOT in any\n\
    \   other way interpret DUIDs.  Clients and servers MUST NOT restrict\n   DUIDs\
    \ to the types defined in this document, as additional DUID types\n   may be defined\
    \ in the future.\n   The DUID is carried in an option because it may be variable\
    \ length\n   and because it is not required in all DHCP messages.  The DUID is\n\
    \   designed to be unique across all DHCP clients and servers, and stable\n  \
    \ for any specific client or server - that is, the DUID used by a\n   client or\
    \ server SHOULD NOT change over time if at all possible; for\n   example, a device's\
    \ DUID should not change as a result of a change in\n   the device's network hardware.\n\
    \   The motivation for having more than one type of DUID is that the DUID\n  \
    \ must be globally unique, and must also be easy to generate.  The sort\n   of\
    \ globally-unique identifier that is easy to generate for any given\n   device\
    \ can differ quite widely.  Also, some devices may not contain\n   any persistent\
    \ storage.  Retaining a generated DUID in such a device\n   is not possible, so\
    \ the DUID scheme must accommodate such devices.\n"
- title: 9.1. DUID Contents
  contents:
  - "9.1. DUID Contents\n   A DUID consists of a two-octet type code represented in\
    \ network byte\n   order, followed by a variable number of octets that make up\
    \ the\n   actual identifier.  A DUID can be no more than 128 octets long (not\n\
    \   including the type code).  The following types are currently defined:\n  \
    \    1        Link-layer address plus time\n      2        Vendor-assigned unique\
    \ ID based on Enterprise Number\n      3        Link-layer address\n   Formats\
    \ for the variable field of the DUID for each of the above\n   types are shown\
    \ below.\n"
- title: 9.2. DUID Based on Link-layer Address Plus Time [DUID-LLT]
  contents:
  - "9.2. DUID Based on Link-layer Address Plus Time [DUID-LLT]\n   This type of DUID\
    \ consists of a two octet type field containing the\n   value 1, a two octet hardware\
    \ type code, four octets containing a\n   time value, followed by link-layer address\
    \ of any one network\n   interface that is connected to the DHCP device at the\
    \ time that the\n   DUID is generated.  The time value is the time that the DUID\
    \ is\n   generated represented in seconds since midnight (UTC), January 1,\n \
    \  2000, modulo 2^32.  The hardware type MUST be a valid hardware type\n   assigned\
    \ by the IANA as described in RFC 826 [14].  Both the time and\n   the hardware\
    \ type are stored in network byte order.  The link-layer\n   address is stored\
    \ in canonical form, as described in RFC 2464 [2].\n   The following diagram illustrates\
    \ the format of a DUID-LLT:\n     0                   1                   2  \
    \                 3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |               1               |    hardware type (16 bits)    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                        time (32 bits)                         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    .                                                               .\n    .\
    \             link-layer address (variable length)              .\n    .     \
    \                                                          .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The choice of network interface can be completely arbitrary, as long\n   as\
    \ that interface provides a globally unique link-layer address for\n   the link\
    \ type, and the same DUID-LLT SHOULD be used in configuring\n   all network interfaces\
    \ connected to the device, regardless of which\n   interface's link-layer address\
    \ was used to generate the DUID-LLT.\n   Clients and servers using this type of\
    \ DUID MUST store the DUID-LLT\n   in stable storage, and MUST continue to use\
    \ this DUID-LLT even if the\n   network interface used to generate the DUID-LLT\
    \ is removed.  Clients\n   and servers that do not have any stable storage MUST\
    \ NOT use this\n   type of DUID.\n   Clients and servers that use this DUID SHOULD\
    \ attempt to configure\n   the time prior to generating the DUID, if that is possible,\
    \ and MUST\n   use some sort of time source (for example, a real-time clock) in\n\
    \   generating the DUID, even if that time source could not be configured\n  \
    \ prior to generating the DUID.  The use of a time source makes it\n   unlikely\
    \ that two identical DUID-LLTs will be generated if the\n   network interface\
    \ is removed from the client and another client then\n   uses the same network\
    \ interface to generate a DUID-LLT.  A collision\n   between two DUID-LLTs is\
    \ very unlikely even if the clocks have not\n   been configured prior to generating\
    \ the DUID.\n   This method of DUID generation is recommended for all general\
    \ purpose\n   computing devices such as desktop computers and laptop computers,\
    \ and\n   also for devices such as printers, routers, and so on, that contain\n\
    \   some form of writable non-volatile storage.\n   Despite our best efforts,\
    \ it is possible that this algorithm for\n   generating a DUID could result in\
    \ a client identifier collision.  A\n   DHCP client that generates a DUID-LLT\
    \ using this mechanism MUST\n   provide an administrative interface that replaces\
    \ the existing DUID\n   with a newly-generated DUID-LLT.\n"
- title: 9.3. DUID Assigned by Vendor Based on Enterprise Number [DUID-EN]
  contents:
  - "9.3. DUID Assigned by Vendor Based on Enterprise Number [DUID-EN]\n   This form\
    \ of DUID is assigned by the vendor to the device.  It\n   consists of the vendor's\
    \ registered Private Enterprise Number as\n   maintained by IANA [6] followed\
    \ by a unique identifier assigned by\n   the vendor.  The following diagram summarizes\
    \ the structure of a\n   DUID-EN:\n     0                   1                \
    \   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |               2               |       enterprise-number       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   enterprise-number (contd)   |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n    .                           identifier\
    \                          .\n    .                       (variable length)  \
    \                     .\n    .                                               \
    \                .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The source of the identifier is left up to the vendor defining it,\n   but\
    \ each identifier part of each DUID-EN MUST be unique to the device\n   that is\
    \ using it, and MUST be assigned to the device at the time it\n   is manufactured\
    \ and stored in some form of non-volatile storage.  The\n   generated DUID SHOULD\
    \ be recorded in non-erasable storage.  The\n   enterprise-number is the vendor's\
    \ registered Private Enterprise\n   Number as maintained by IANA [6].  The enterprise-number\
    \ is stored as\n   an unsigned 32 bit number.\n   An example DUID of this type\
    \ might look like this:\n    +---+---+---+---+---+---+---+---+\n    | 0 | 2 |\
    \ 0 | 0 | 0 |  9| 12|192|\n    +---+---+---+---+---+---+---+---+\n    |132|221|\
    \ 3 | 0 | 9 | 18|\n    +---+---+---+---+---+---+\n   This example includes the\
    \ two-octet type of 2, the Enterprise Number\n   (9), followed by eight octets\
    \ of identifier data\n   (0x0CC084D303000912).\n"
- title: 9.4. DUID Based on Link-layer Address [DUID-LL]
  contents:
  - "9.4. DUID Based on Link-layer Address [DUID-LL]\n   This type of DUID consists\
    \ of two octets containing the DUID type 3,\n   a two octet network hardware type\
    \ code, followed by the link-layer\n   address of any one network interface that\
    \ is permanently connected to\n   the client or server device.  For example, a\
    \ host that has a network\n   interface implemented in a chip that is unlikely\
    \ to be removed and\n   used elsewhere could use a DUID-LL.  The hardware type\
    \ MUST be a\n   valid hardware type assigned by the IANA, as described in RFC\
    \ 826\n   [14].  The hardware type is stored in network byte order.  The\n   link-layer\
    \ address is stored in canonical form, as described in RFC\n   2464 [2].  The\
    \ following diagram illustrates the format of a DUID-LL:\n     0             \
    \      1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |               3               |    hardware type (16 bits)    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    .                                                               .\n    .\
    \             link-layer address (variable length)              .\n    .     \
    \                                                          .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The choice of network interface can be completely arbitrary, as long\n   as\
    \ that interface provides a unique link-layer address and is\n   permanently attached\
    \ to the device on which the DUID-LL is being\n   generated.  The same DUID-LL\
    \ SHOULD be used in configuring all\n   network interfaces connected to the device,\
    \ regardless of which\n   interface's link-layer address was used to generate\
    \ the DUID.\n   DUID-LL is recommended for devices that have a permanently-connected\n\
    \   network interface with a link-layer address, and do not have\n   nonvolatile,\
    \ writable stable storage.  DUID-LL MUST NOT be used by\n   DHCP clients or servers\
    \ that cannot tell whether or not a network\n   interface is permanently attached\
    \ to the device on which the DHCP\n   client is running.\n"
- title: 10. Identity Association
  contents:
  - "10. Identity Association\n   An \"identity-association\" (IA) is a construct\
    \ through which a server\n   and a client can identify, group, and manage a set\
    \ of related IPv6\n   addresses.  Each IA consists of an IAID and associated configuration\n\
    \   information.\n   A client must associate at least one distinct IA with each\
    \ of its\n   network interfaces for which it is to request the assignment of IPv6\n\
    \   addresses from a DHCP server.  The client uses the IAs assigned to an\n  \
    \ interface to obtain configuration information from a server for that\n   interface.\
    \  Each IA must be associated with exactly one interface.\n   The IAID uniquely\
    \ identifies the IA and must be chosen to be unique\n   among the IAIDs on the\
    \ client.  The IAID is chosen by the client.\n   For any given use of an IA by\
    \ the client, the IAID for that IA MUST\n   be consistent across restarts of the\
    \ DHCP client.  The client may\n   maintain consistency either by storing the\
    \ IAID in non-volatile\n   storage or by using an algorithm that will consistently\
    \ produce the\n   same IAID as long as the configuration of the client has not\
    \ changed.\n   There may be no way for a client to maintain consistency of the\
    \ IAIDs\n   if it does not have non-volatile storage and the client's hardware\n\
    \   configuration changes.\n   The configuration information in an IA consists\
    \ of one or more IPv6\n   addresses along with the times T1 and T2 for the IA.\
    \  See section\n   22.4 for the representation of an IA in a DHCP message.\n \
    \  Each address in an IA has a preferred lifetime and a valid lifetime,\n   as\
    \ defined in RFC 2462 [17].  The lifetimes are transmitted from the\n   DHCP server\
    \ to the client in the IA option.  The lifetimes apply to\n   the use of IPv6\
    \ addresses, as described in section 5.5.4 of RFC 2462.\n"
- title: 11. Selecting Addresses for Assignment to an IA
  contents:
  - "11. Selecting Addresses for Assignment to an IA\n   A server selects addresses\
    \ to be assigned to an IA according to the\n   address assignment policies determined\
    \ by the server administrator\n   and the specific information the server determines\
    \ about the client\n   from some combination of the following sources:\n   - \
    \ The link to which the client is attached.  The server determines\n      the\
    \ link as follows:\n      *  If the server receives the message directly from\
    \ the client and\n         the source address in the IP datagram in which the\
    \ message was\n         received is a link-local address, then the client is on\
    \ the\n         same link to which the interface over which the message was\n\
    \         received is attached.\n      *  If the server receives the message from\
    \ a forwarding relay\n         agent, then the client is on the same link as the\
    \ one to which\n         the interface, identified by the link-address field in\
    \ the\n         message from the relay agent, is attached.\n      *  If the server\
    \ receives the message directly from the client and\n         the source address\
    \ in the IP datagram in which the message was\n         received is not a link-local\
    \ address, then the client is on the\n         link identified by the source address\
    \ in the IP datagram (note\n         that this situation can occur only if the\
    \ server has enabled\n         the use of unicast message delivery by the client\
    \ and the\n         client has sent a message for which unicast delivery is\n\
    \         allowed).\n   -  The DUID supplied by the client.\n   -  Other information\
    \ in options supplied by the client.\n   -  Other information in options supplied\
    \ by the relay agent.\n   Any address assigned by a server that is based on an\
    \ EUI-64\n   identifier MUST include an interface identifier with the \"u\"\n\
    \   (universal/local) and \"g\" (individual/group) bits of the interface\n   identifier\
    \ set appropriately, as indicated in section 2.5.1 of RFC\n   2373 [5].\n   A\
    \ server MUST NOT assign an address that is otherwise reserved for\n   some other\
    \ purpose.  For example, a server MUST NOT assign reserved\n   anycast addresses,\
    \ as defined in RFC 2526, from any subnet.\n"
- title: 12. Management of Temporary Addresses
  contents:
  - "12. Management of Temporary Addresses\n   A client may request the assignment\
    \ of temporary addresses (see RFC\n   3041 [12] for the definition of temporary\
    \ addresses).  DHCPv6\n   handling of address assignment is no different for temporary\n\
    \   addresses.  DHCPv6 says nothing about details of temporary addresses\n   like\
    \ lifetimes, how clients use temporary addresses, rules for\n   generating successive\
    \ temporary addresses, etc.\n   Clients ask for temporary addresses and servers\
    \ assign them.\n   Temporary addresses are carried in the Identity Association\
    \ for\n   Temporary Addresses (IA_TA) option (see section 22.5).  Each IA_TA\n\
    \   option contains at most one temporary address for each of the\n   prefixes\
    \ on the link to which the client is attached.\n   The IAID number space for the\
    \ IA_TA option IAID number space is\n   separate from the IA_NA option IAID number\
    \ space.\n   The server MAY update the DNS for a temporary address, as described\n\
    \   in section 4 of RFC 3041.\n"
- title: 13. Transmission of Messages by a Client
  contents:
  - "13. Transmission of Messages by a Client\n   Unless otherwise specified in this\
    \ document, or in a document that\n   describes how IPv6 is carried over a specific\
    \ type of link (for link\n   types that do not support multicast), a client sends\
    \ DHCP messages to\n   the All_DHCP_Relay_Agents_and_Servers.\n   A client uses\
    \ multicast to reach all servers or an individual server.\n   An individual server\
    \ is indicated by specifying that server's DUID in\n   a Server Identifier option\
    \ (see section 22.3) in the client's message\n   (all servers will receive this\
    \ message but only the indicated server\n   will respond).  All servers are indicated\
    \ by not supplying this\n   option.\n   A client may send some messages directly\
    \ to a server using unicast,\n   as described in section 22.12.\n"
- title: 14. Reliability of Client Initiated Message Exchanges
  contents:
  - "14. Reliability of Client Initiated Message Exchanges\n   DHCP clients are responsible\
    \ for reliable delivery of messages in the\n   client-initiated message exchanges\
    \ described in sections 17 and 18.\n   If a DHCP client fails to receive an expected\
    \ response from a server,\n   the client must retransmit its message.  This section\
    \ describes the\n   retransmission strategy to be used by clients in client-initiated\n\
    \   message exchanges.\n   Note that the procedure described in this section is\
    \ slightly\n   modified when used with the Solicit message.  The modified procedure\n\
    \   is described in section 17.1.2.\n   The client begins the message exchange\
    \ by transmitting a message to\n   the server.  The message exchange terminates\
    \ when either the client\n   successfully receives the appropriate response or\
    \ responses from a\n   server or servers, or when the message exchange is considered\
    \ to have\n   failed according to the retransmission mechanism described below.\n\
    \   The client retransmission behavior is controlled and described by the\n  \
    \ following variables:\n      RT     Retransmission timeout\n      IRT    Initial\
    \ retransmission time\n      MRC    Maximum retransmission count\n      MRT  \
    \  Maximum retransmission time\n      MRD    Maximum retransmission duration\n\
    \      RAND   Randomization factor\n   With each message transmission or retransmission,\
    \ the client sets RT\n   according to the rules given below.  If RT expires before\
    \ the message\n   exchange terminates, the client recomputes RT and retransmits\
    \ the\n   message.\n   Each of the computations of a new RT include a randomization\
    \ factor\n   (RAND), which is a random number chosen with a uniform distribution\n\
    \   between -0.1 and +0.1.  The randomization factor is included to\n   minimize\
    \ synchronization of messages transmitted by DHCP clients.\n   The algorithm for\
    \ choosing a random number does not need to be\n   cryptographically sound.  The\
    \ algorithm SHOULD produce a different\n   sequence of random numbers from each\
    \ invocation of the DHCP client.\n   RT for the first message transmission is\
    \ based on IRT:\n      RT = IRT + RAND*IRT\n   RT for each subsequent message\
    \ transmission is based on the previous\n   value of RT:\n      RT = 2*RTprev\
    \ + RAND*RTprev\n   MRT specifies an upper bound on the value of RT (disregarding\
    \ the\n   randomization added by the use of RAND).  If MRT has a value of 0,\n\
    \   there is no upper limit on the value of RT.  Otherwise:\n      if (RT > MRT)\n\
    \         RT = MRT + RAND*MRT\n   MRC specifies an upper bound on the number of\
    \ times a client may\n   retransmit a message.  Unless MRC is zero, the message\
    \ exchange fails\n   once the client has transmitted the message MRC times.\n\
    \   MRD specifies an upper bound on the length of time a client may\n   retransmit\
    \ a message.  Unless MRD is zero, the message exchange fails\n   once MRD seconds\
    \ have elapsed since the client first transmitted the\n   message.\n   If both\
    \ MRC and MRD are non-zero, the message exchange fails whenever\n   either of\
    \ the conditions specified in the previous two paragraphs are\n   met.\n   If\
    \ both MRC and MRD are zero, the client continues to transmit the\n   message\
    \ until it receives a response.\n"
- title: 15. Message Validation
  contents:
  - "15. Message Validation\n   Clients and servers SHOULD discard any messages that\
    \ contain options\n   that are not allowed to appear in the received message.\
    \  For example,\n   an IA option is not allowed to appear in an Information-request\n\
    \   message.  Clients and servers MAY choose to extract information from\n   such\
    \ a message if the information is of use to the recipient.\n   A server MUST discard\
    \ any Solicit, Confirm, Rebind or\n   Information-request messages it receives\
    \ with a unicast destination\n   address.\n   Message validation based on DHCP\
    \ authentication is discussed in\n   section 21.4.2.\n   If a server receives\
    \ a message that contains options it should not\n   contain (such as an Information-request\
    \ message with an IA option),\n   is missing options that it should contain, or\
    \ is otherwise not valid,\n   it MAY send a Reply (or Advertise as appropriate)\
    \ with a Server\n   Identifier option, a Client Identifier option if one was included\
    \ in\n   the message and a Status Code option with status UnSpecFail.\n"
- title: 15.1. Use of Transaction IDs
  contents:
  - "15.1. Use of Transaction IDs\n   The \"transaction-id\" field holds a value used\
    \ by clients and servers\n   to synchronize server responses to client messages.\
    \  A client SHOULD\n   generate a random number that cannot easily be guessed\
    \ or predicted\n   to use as the transaction ID for each new message it sends.\
    \  Note\n   that if a client generates easily predictable transaction\n   identifiers,\
    \ it may become more vulnerable to certain kinds of\n   attacks from off-path\
    \ intruders.  A client MUST leave the transaction\n   ID unchanged in retransmissions\
    \ of a message.\n"
- title: 15.2. Solicit Message
  contents:
  - "15.2. Solicit Message\n   Clients MUST discard any received Solicit messages.\n\
    \   Servers MUST discard any Solicit messages that do not include a\n   Client\
    \ Identifier option or that do include a Server Identifier\n   option.\n"
- title: 15.3. Advertise Message
  contents:
  - "15.3. Advertise Message\n   Clients MUST discard any received Advertise messages\
    \ that meet any of\n   the following conditions:\n   -  the message does not include\
    \ a Server Identifier option.\n   -  the message does not include a Client Identifier\
    \ option.\n   -  the contents of the Client Identifier option does not match the\n\
    \      client's DUID.\n   -  the \"transaction-id\" field value does not match\
    \ the value the\n      client used in its Solicit message.\n   Servers and relay\
    \ agents MUST discard any received Advertise\n   messages.\n"
- title: 15.4. Request Message
  contents:
  - "15.4. Request Message\n   Clients MUST discard any received Request messages.\n\
    \   Servers MUST discard any received Request message that meet any of\n   the\
    \ following conditions:\n   -  the message does not include a Server Identifier\
    \ option.\n   -  the contents of the Server Identifier option do not match the\n\
    \      server's DUID.\n   -  the message does not include a Client Identifier\
    \ option.\n"
- title: 15.5. Confirm Message
  contents:
  - "15.5. Confirm Message\n   Clients MUST discard any received Confirm messages.\n\
    \   Servers MUST discard any received Confirm messages that do not\n   include\
    \ a Client Identifier option or that do include a Server\n   Identifier option.\n"
- title: 15.6. Renew Message
  contents:
  - "15.6. Renew Message\n   Clients MUST discard any received Renew messages.\n \
    \  Servers MUST discard any received Renew message that meets any of the\n   following\
    \ conditions:\n   -  the message does not include a Server Identifier option.\n\
    \   -  the contents of the Server Identifier option does not match the\n     \
    \ server's identifier.\n   -  the message does not include a Client Identifier\
    \ option.\n"
- title: 15.7. Rebind Message
  contents:
  - "15.7. Rebind Message\n   Clients MUST discard any received Rebind messages.\n\
    \   Servers MUST discard any received Rebind messages that do not include\n  \
    \ a Client Identifier option or that do include a Server Identifier\n   option.\n"
- title: 15.8. Decline Messages
  contents:
  - "15.8. Decline Messages\n   Clients MUST discard any received Decline messages.\n\
    \   Servers MUST discard any received Decline message that meets any of\n   the\
    \ following conditions:\n   -  the message does not include a Server Identifier\
    \ option.\n   -  the contents of the Server Identifier option does not match the\n\
    \      server's identifier.\n   -  the message does not include a Client Identifier\
    \ option.\n"
- title: 15.9. Release Message
  contents:
  - "15.9. Release Message\n   Clients MUST discard any received Release messages.\n\
    \   Servers MUST discard any received Release message that meets any of\n   the\
    \ following conditions:\n   -  the message does not include a Server Identifier\
    \ option.\n   -  the contents of the Server Identifier option does not match the\n\
    \      server's identifier.\n   -  the message does not include a Client Identifier\
    \ option.\n"
- title: 15.10. Reply Message
  contents:
  - "15.10. Reply Message\n   Clients MUST discard any received Reply message that\
    \ meets any of the\n   following conditions:\n   -  the message does not include\
    \ a Server Identifier option.\n   -  the \"transaction-id\" field in the message\
    \ does not match the value\n      used in the original message.\n   If the client\
    \ included a Client Identifier option in the original\n   message, the Reply message\
    \ MUST include a Client Identifier option\n   and the contents of the Client Identifier\
    \ option MUST match the DUID\n   of the client; OR, if the client did not include\
    \ a Client Identifier\n   option in the original message, the Reply message MUST\
    \ NOT include a\n   Client Identifier option.\n   Servers and relay agents MUST\
    \ discard any received Reply messages.\n"
- title: 15.11. Reconfigure Message
  contents:
  - "15.11. Reconfigure Message\n   Servers and relay agents MUST discard any received\
    \ Reconfigure\n   messages.\n   Clients MUST discard any Reconfigure messages\
    \ that meets any of the\n   following conditions:\n   -  the message was not unicast\
    \ to the client.\n   -  the message does not include a Server Identifier option.\n\
    \   -  the message does not include a Client Identifier option that\n      contains\
    \ the client's DUID.\n   -  the message does not contain a Reconfigure Message\
    \ option and the\n      msg-type must be a valid value.\n   -  the message includes\
    \ any IA options and the msg-type in the\n      Reconfigure Message option is\
    \ INFORMATION-REQUEST.\n   -  the message does not include DHCP authentication:\n\
    \      *  the message does not contain an authentication option.\n      *  the\
    \ message does not pass the authentication validation\n         performed by the\
    \ client.\n"
- title: 15.12. Information-request Message
  contents:
  - "15.12. Information-request Message\n   Clients MUST discard any received Information-request\
    \ messages.\n   Servers MUST discard any received Information-request message\
    \ that\n   meets any of the following conditions:\n   -  The message includes\
    \ a Server Identifier option and the DUID in\n      the option does not match\
    \ the server's DUID.\n   -  The message includes an IA option.\n"
- title: 15.13. Relay-forward Message
  contents:
  - "15.13. Relay-forward Message\n   Clients MUST discard any received Relay-forward\
    \ messages.\n"
- title: 15.14. Relay-reply Message
  contents:
  - "15.14. Relay-reply Message\n   Clients and servers MUST discard any received\
    \ Relay-reply messages.\n"
- title: 16. Client Source Address and Interface Selection
  contents:
  - "16. Client Source Address and Interface Selection\n   When a client sends a DHCP\
    \ message to the\n   All_DHCP_Relay_Agents_and_Servers address, it SHOULD send\
    \ the message\n   through the interface for which configuration information is\
    \ being\n   requested.  However, the client MAY send the message through another\n\
    \   interface attached to the same link, if and only if the client is\n   certain\
    \ the two interfaces are attached to the same link.  The client\n   MUST use a\
    \ link-local address assigned to the interface for which it\n   is requesting\
    \ configuration information as the source address in the\n   header of the IP\
    \ datagram.\n   When a client sends a DHCP message directly to a server using\
    \ unicast\n   (after receiving the Server Unicast option from that server), the\n\
    \   source address in the header of the IP datagram MUST be an address\n   assigned\
    \ to the interface for which the client is interested in\n   obtaining configuration\
    \ and which is suitable for use by the server\n   in responding to the client.\n"
- title: 17. DHCP Server Solicitation
  contents:
  - "17. DHCP Server Solicitation\n   This section describes how a client locates\
    \ servers that will assign\n   addresses to IAs belonging to the client.\n   The\
    \ client is responsible for creating IAs and requesting that a\n   server assign\
    \ IPv6 addresses to the IA.  The client first creates an\n   IA and assigns it\
    \ an IAID.  The client then transmits a Solicit\n   message containing an IA option\
    \ describing the IA.  Servers that can\n   assign addresses to the IA respond\
    \ to the client with an Advertise\n   message.  The client then initiates a configuration\
    \ exchange as\n   described in section 18.\n   If the client will accept a Reply\
    \ message with committed address\n   assignments and other resources in response\
    \ to the Solicit message,\n   the client includes a Rapid Commit option (see section\
    \ 22.14) in the\n   Solicit message.\n"
- title: 17.1. Client Behavior
  contents:
  - "17.1. Client Behavior\n   A client uses the Solicit message to discover DHCP\
    \ servers configured\n   to assign addresses or return other configuration parameters\
    \ on the\n   link to which the client is attached.\n"
- title: 17.1.1. Creation of Solicit Messages
  contents:
  - "17.1.1. Creation of Solicit Messages\n   The client sets the \"msg-type\" field\
    \ to SOLICIT.  The client\n   generates a transaction ID and inserts this value\
    \ in the\n   \"transaction-id\" field.\n   The client MUST include a Client Identifier\
    \ option to identify itself\n   to the server.  The client includes IA options\
    \ for any IAs to which\n   it wants the server to assign addresses.  The client\
    \ MAY include\n   addresses in the IAs as a hint to the server about addresses\
    \ for\n   which the client has a preference.  The client MUST NOT include any\n\
    \   other options in the Solicit message, except as specifically allowed\n   in\
    \ the definition of individual options.\n   The client uses IA_NA options to request\
    \ the assignment of non-\n   temporary addresses and uses IA_TA options to request\
    \ the assignment\n   of temporary addresses.  Either IA_NA or IA_TA options, or\
    \ a\n   combination of both, can be included in DHCP messages.\n   The client\
    \ SHOULD include an Option Request option (see section 22.7)\n   to indicate the\
    \ options the client is interested in receiving.  The\n   client MAY additionally\
    \ include instances of those options that are\n   identified in the Option Request\
    \ option, with data values as hints to\n   the server about parameter values the\
    \ client would like to have\n   returned.\n   The client includes a Reconfigure\
    \ Accept option (see section 22.20)\n   if the client is willing to accept Reconfigure\
    \ messages from the\n   server.\n"
- title: 17.1.2. Transmission of Solicit Messages
  contents:
  - "17.1.2. Transmission of Solicit Messages\n   The first Solicit message from the\
    \ client on the interface MUST be\n   delayed by a random amount of time between\
    \ 0 and SOL_MAX_DELAY.  In\n   the case of a Solicit message transmitted when\
    \ DHCP is initiated by\n   IPv6 Neighbor Discovery, the delay gives the amount\
    \ of time to wait\n   after IPv6 Neighbor Discovery causes the client to invoke\
    \ the\n   stateful address autoconfiguration protocol (see section 5.5.3 of RFC\n\
    \   2462).  This random delay desynchronizes clients which start at the\n   same\
    \ time (for example, after a power outage).\n   The client transmits the message\
    \ according to section 14, using the\n   following parameters:\n      IRT   SOL_TIMEOUT\n\
    \      MRT   SOL_MAX_RT\n      MRC   0\n      MRD   0\n   If the client has included\
    \ a Rapid Commit option in its Solicit\n   message, the client terminates the\
    \ waiting process as soon as a Reply\n   message with a Rapid Commit option is\
    \ received.\n   If the client is waiting for an Advertise message, the mechanism\
    \ in\n   section 14 is modified as follows for use in the transmission of\n  \
    \ Solicit messages.  The message exchange is not terminated by the\n   receipt\
    \ of an Advertise before the first RT has elapsed.  Rather, the\n   client collects\
    \ Advertise messages until the first RT has elapsed.\n   Also, the first RT MUST\
    \ be selected to be strictly greater than IRT\n   by choosing RAND to be strictly\
    \ greater than 0.\n   A client MUST collect Advertise messages for the first RT\
    \ seconds,\n   unless it receives an Advertise message with a preference value\
    \ of\n   255.  The preference value is carried in the Preference option\n   (section\
    \ 22.8).  Any Advertise that does not include a Preference\n   option is considered\
    \ to have a preference value of 0.  If the client\n   receives an Advertise message\
    \ that includes a Preference option with\n   a preference value of 255, the client\
    \ immediately begins a client-\n   initiated message exchange (as described in\
    \ section 18) by sending a\n   Request message to the server from which the Advertise\
    \ message was\n   received.  If the client receives an Advertise message that\
    \ does not\n   include a Preference option with a preference value of 255, the\n\
    \   client continues to wait until the first RT elapses.  If the first RT\n  \
    \ elapses and the client has received an Advertise message, the client\n   SHOULD\
    \ continue with a client-initiated message exchange by sending a\n   Request message.\n\
    \   If the client does not receive any Advertise messages before the\n   first\
    \ RT has elapsed, it begins the retransmission mechanism\n   described in section\
    \ 14.  The client terminates the retransmission\n   process as soon as it receives\
    \ any Advertise message, and the client\n   acts on the received Advertise message\
    \ without waiting for any\n   additional Advertise messages.\n   A DHCP client\
    \ SHOULD choose MRC and MRD to be 0.  If the DHCP client\n   is configured with\
    \ either MRC or MRD set to a value other than 0, it\n   MUST stop trying to configure\
    \ the interface if the message exchange\n   fails.  After the DHCP client stops\
    \ trying to configure the\n   interface, it SHOULD restart the reconfiguration\
    \ process after some\n   external event, such as user input, system restart, or\
    \ when the\n   client is attached to a new link.\n"
- title: 17.1.3. Receipt of Advertise Messages
  contents:
  - "17.1.3. Receipt of Advertise Messages\n   The client MUST ignore any Advertise\
    \ message that includes a Status\n   Code option containing the value NoAddrsAvail,\
    \ with the exception\n   that the client MAY display the associated status message\
    \ to the\n   user.\n   Upon receipt of one or more valid Advertise messages, the\
    \ client\n   selects one or more Advertise messages based upon the following\n\
    \   criteria.\n   -  Those Advertise messages with the highest server preference\
    \ value\n      are preferred over all other Advertise messages.\n   -  Within\
    \ a group of Advertise messages with the same server\n      preference value,\
    \ a client MAY select those servers whose\n      Advertise messages advertise\
    \ information of interest to the\n      client.  For example, the client may choose\
    \ a server that returned\n      an advertisement with configuration options of\
    \ interest to the\n      client.\n   -  The client MAY choose a less-preferred\
    \ server if that server has a\n      better set of advertised parameters, such\
    \ as the available\n      addresses advertised in IAs.\n   Once a client has selected\
    \ Advertise message(s), the client will\n   typically store information about\
    \ each server, such as server\n   preference value, addresses advertised, when\
    \ the advertisement was\n   received, and so on.\n   If the client needs to select\
    \ an alternate server in the case that a\n   chosen server does not respond, the\
    \ client chooses the next server\n   according to the criteria given above.\n"
- title: 17.1.4. Receipt of Reply Message
  contents:
  - "17.1.4. Receipt of Reply Message\n   If the client includes a Rapid Commit option\
    \ in the Solicit message,\n   it will expect a Reply message that includes a Rapid\
    \ Commit option in\n   response.  The client discards any Reply messages it receives\
    \ that do\n   not include a Rapid Commit option.  If the client receives a valid\n\
    \   Reply message that includes a Rapid Commit option, it processes the\n   message\
    \ as described in section 18.1.8.  If it does not receive such\n   a Reply message\
    \ and does receive a valid Advertise message, the\n   client processes the Advertise\
    \ message as described in section\n   17.1.3.\n   If the client subsequently receives\
    \ a valid Reply message that\n   includes a Rapid Commit option, it either:\n\
    \      processes the Reply message as described in section 18.1.8, and\n     \
    \ discards any Reply messages received in response to the Request\n      message,\
    \ or\n      processes any Reply messages received in response to the Request\n\
    \      message and discards the Reply message that includes the Rapid\n      Commit\
    \ option.\n"
- title: 17.2. Server Behavior
  contents:
  - "17.2. Server Behavior\n   A server sends an Advertise message in response to\
    \ valid Solicit\n   messages it receives to announce the availability of the server\
    \ to\n   the client.\n"
- title: 17.2.1. Receipt of Solicit Messages
  contents:
  - "17.2.1. Receipt of Solicit Messages\n   The server determines the information\
    \ about the client and its\n   location as described in section 11 and checks\
    \ its administrative\n   policy about responding to the client.  If the server\
    \ is not\n   permitted to respond to the client, the server discards the Solicit\n\
    \   message.  For example, if the administrative policy for the server is\n  \
    \ that it may only respond to a client that is willing to accept a\n   Reconfigure\
    \ message, if the client indicates with a Reconfigure\n   Accept option in the\
    \ Solicit message that it will not accept a\n   Reconfigure message, the servers\
    \ discard the Solicit message.\n   If the client has included a Rapid Commit option\
    \ in the Solicit\n   message and the server has been configured to respond with\
    \ committed\n   address assignments and other resources, the server responds to\
    \ the\n   Solicit with a Reply message as described in section 17.2.3.\n   Otherwise,\
    \ the server ignores the Rapid Commit option and processes\n   the remainder of\
    \ the message as if no Rapid Commit option were\n   present.\n"
- title: 17.2.2. Creation and Transmission of Advertise Messages
  contents:
  - "17.2.2. Creation and Transmission of Advertise Messages\n   The server sets the\
    \ \"msg-type\" field to ADVERTISE and copies the\n   contents of the transaction-id\
    \ field from the Solicit message\n   received from the client to the Advertise\
    \ message.  The server\n   includes its server identifier in a Server Identifier\
    \ option and\n   copies the Client Identifier from the Solicit message into the\n\
    \   Advertise message.\n   The server MAY add a Preference option to carry the\
    \ preference value\n   for the Advertise message.  The server implementation SHOULD\
    \ allow\n   the setting of a server preference value by the administrator.  The\n\
    \   server preference value MUST default to zero unless otherwise\n   configured\
    \ by the server administrator.\n   The server includes a Reconfigure Accept option\
    \ if the server wants\n   to require that the client accept Reconfigure messages.\n\
    \   The server includes options the server will return to the client in a\n  \
    \ subsequent Reply message.  The information in these options may be\n   used\
    \ by the client in the selection of a server if the client\n   receives more than\
    \ one Advertise message.  If the client has included\n   an Option Request option\
    \ in the Solicit message, the server includes\n   options in the Advertise message\
    \ containing configuration parameters\n   for all of the options identified in\
    \ the Option Request option that\n   the server has been configured to return\
    \ to the client.  The server\n   MAY return additional options to the client if\
    \ it has been configured\n   to do so.  The server must be aware of the recommendations\
    \ on packet\n   sizes and the use of fragmentation in section 5 of RFC 2460.\n\
    \   If the Solicit message from the client included one or more IA\n   options,\
    \ the server MUST include IA options in the Advertise message\n   containing any\
    \ addresses that would be assigned to IAs contained in\n   the Solicit message\
    \ from the client.  If the client has included\n   addresses in the IAs in the\
    \ Solicit message, the server uses those\n   addresses as hints about the addresses\
    \ the client would like to\n   receive.\n   If the server will not assign any\
    \ addresses to any IAs in a\n   subsequent Request from the client, the server\
    \ MUST send an Advertise\n   message to the client that includes only a Status\
    \ Code option with\n   code NoAddrsAvail and a status message for the user, a\
    \ Server\n   Identifier option with the server's DUID, and a Client Identifier\n\
    \   option with the client's DUID.\n   If the Solicit message was received directly\
    \ by the server, the\n   server unicasts the Advertise message directly to the\
    \ client using\n   the address in the source address field from the IP datagram\
    \ in which\n   the Solicit message was received.  The Advertise message MUST be\n\
    \   unicast on the link from which the Solicit message was received.\n   If the\
    \ Solicit message was received in a Relay-forward message, the\n   server constructs\
    \ a Relay-reply message with the Advertise message in\n   the payload of a \"\
    relay-message\" option.  If the Relay-forward\n   messages included an Interface-id\
    \ option, the server copies that\n   option to the Relay-reply message.  The server\
    \ unicasts the\n   Relay-reply message directly to the relay agent using the address\
    \ in\n   the source address field from the IP datagram in which the Relay-\n \
    \  forward message was received.\n"
- title: 17.2.3. Creation and Transmission of Reply Messages
  contents:
  - "17.2.3. Creation and Transmission of Reply Messages\n   The server MUST commit\
    \ the assignment of any addresses or other\n   configuration information message\
    \ before sending a Reply message to a\n   client in response to a Solicit message.\n\
    \   DISCUSSION:\n      When using the Solicit-Reply message exchange, the server\
    \ commits\n      the assignment of any addresses before sending the Reply message.\n\
    \      The client can assume it has been assigned the addresses in the\n     \
    \ Reply message and does not need to send a Request message for\n      those addresses.\n\
    \      Typically, servers that are configured to use the Solicit-Reply\n     \
    \ message exchange will be deployed so that only one server will\n      respond\
    \ to a Solicit message.  If more than one server responds,\n      the client will\
    \ only use the addresses from one of the servers,\n      while the addresses from\
    \ the other servers will be committed to\n      the client but not used by the\
    \ client.\n   The server includes a Rapid Commit option in the Reply message to\n\
    \   indicate that the Reply is in response to a Solicit message.\n   The server\
    \ includes a Reconfigure Accept option if the server wants\n   to require that\
    \ the client accept Reconfigure messages.\n   The server produces the Reply message\
    \ as though it had received a\n   Request message, as described in section 18.2.1.\
    \  The server\n   transmits the Reply message as described in section 18.2.8.\n"
- title: 18. DHCP Client-Initiated Configuration Exchange
  contents:
  - "18. DHCP Client-Initiated Configuration Exchange\n   A client initiates a message\
    \ exchange with a server or servers to\n   acquire or update configuration information\
    \ of interest.  The client\n   may initiate the configuration exchange as part\
    \ of the operating\n   system configuration process, when requested to do so by\
    \ the\n   application layer, when required by Stateless Address\n   Autoconfiguration\
    \ or as required to extend the lifetime of an address\n   (Renew and Rebind messages).\n"
- title: 18.1. Client Behavior
  contents:
  - "18.1. Client Behavior\n   A client uses Request, Renew, Rebind, Release and Decline\
    \ messages\n   during the normal life cycle of addresses.  It uses Confirm to\n\
    \   validate addresses when it may have moved to a new link.  It uses\n   Information-Request\
    \ messages when it needs configuration information\n   but no addresses.\n   If\
    \ the client has a source address of sufficient scope that can be\n   used by\
    \ the server as a return address, and the client has received a\n   Server Unicast\
    \ option (section 22.12) from the server, the client\n   SHOULD unicast any Request,\
    \ Renew, Release and Decline messages to\n   the server.\n   DISCUSSION:\n   \
    \   Use of unicast may avoid delays due to the relaying of messages by\n     \
    \ relay agents, as well as avoid overhead and duplicate responses by\n      servers\
    \ due to the delivery of client messages to multiple\n      servers.  Requiring\
    \ the client to relay all DHCP messages through\n      a relay agent enables the\
    \ inclusion of relay agent options in all\n      messages sent by the client.\
    \  The server should enable the use of\n      unicast only when relay agent options\
    \ will not be used.\n"
- title: 18.1.1. Creation and Transmission of Request Messages
  contents:
  - "18.1.1. Creation and Transmission of Request Messages\n   The client uses a Request\
    \ message to populate IAs with addresses and\n   obtain other configuration information.\
    \  The client includes one or\n   more IA options in the Request message.  The\
    \ server then returns\n   addresses and other information about the IAs to the\
    \ client in IA\n   options in a Reply message.\n   The client generates a transaction\
    \ ID and inserts this value in the\n   \"transaction-id\" field.\n   The client\
    \ places the identifier of the destination server in a\n   Server Identifier option.\n\
    \   The client MUST include a Client Identifier option to identify itself\n  \
    \ to the server.  The client adds any other appropriate options,\n   including\
    \ one or more IA options (if the client is requesting that\n   the server assign\
    \ it some network addresses).\n   The client MUST include an Option Request option\
    \ (see section 22.7)\n   to indicate the options the client is interested in receiving.\
    \  The\n   client MAY include options with data values as hints to the server\n\
    \   about parameter values the client would like to have returned.\n   The client\
    \ includes a Reconfigure Accept option (see section 22.20)\n   indicating whether\
    \ or not the client is willing to accept Reconfigure\n   messages from the server.\n\
    \   The client transmits the message according to section 14, using the\n   following\
    \ parameters:\n      IRT   REQ_TIMEOUT\n      MRT   REQ_MAX_RT\n      MRC   REQ_MAX_RC\n\
    \      MRD   0\n   If the message exchange fails, the client takes an action based\
    \ on\n   the client's local policy.  Examples of actions the client might take\n\
    \   include:\n   -  Select another server from a list of servers known to the\
    \ client;\n      for example, servers that responded with an Advertise message.\n\
    \   -  Initiate the server discovery process described in section 17.\n   -  Terminate\
    \ the configuration process and report failure.\n"
- title: 18.1.2. Creation and Transmission of Confirm Messages
  contents:
  - "18.1.2. Creation and Transmission of Confirm Messages\n   Whenever a client may\
    \ have moved to a new link, the prefixes from the\n   addresses assigned to the\
    \ interfaces on that link may no longer be\n   appropriate for the link to which\
    \ the client is attached.  Examples\n   of times when a client may have moved\
    \ to a new link include:\n   o  The client reboots.\n   o  The client is physically\
    \ connected to a wired connection.\n   o  The client returns from sleep mode.\n\
    \   o  The client using a wireless technology changes access points.\n   In any\
    \ situation when a client may have moved to a new link, the\n   client MUST initiate\
    \ a Confirm/Reply message exchange.  The client\n   includes any IAs assigned\
    \ to the interface that may have moved to a\n   new link, along with the addresses\
    \ associated with those IAs, in its\n   Confirm message.  Any responding servers\
    \ will indicate whether those\n   addresses are appropriate for the link to which\
    \ the client is\n   attached with the status in the Reply message it returns to\
    \ the\n   client.\n   The client sets the \"msg-type\" field to CONFIRM.  The\
    \ client\n   generates a transaction ID and inserts this value in the\n   \"transaction-id\"\
    \ field.\n   The client MUST include a Client Identifier option to identify itself\n\
    \   to the server.  The client includes IA options for all of the IAs\n   assigned\
    \ to the interface for which the Confirm message is being\n   sent.  The IA options\
    \ include all of the addresses the client\n   currently has associated with those\
    \ IAs.  The client SHOULD set the\n   T1 and T2 fields in any IA_NA options, and\
    \ the preferred-lifetime and\n   valid-lifetime fields in the IA Address options\
    \ to 0, as the server\n   will ignore these fields.\n   The first Confirm message\
    \ from the client on the interface MUST be\n   delayed by a random amount of time\
    \ between 0 and CNF_MAX_DELAY.  The\n   client transmits the message according\
    \ to section 14, using the\n   following parameters:\n      IRT   CNF_TIMEOUT\n\
    \      MRT   CNF_MAX_RT\n      MRC   0\n      MRD   CNF_MAX_RD\n   If the client\
    \ receives no responses before the message transmission\n   process terminates,\
    \ as described in section 14, the client SHOULD\n   continue to use any IP addresses,\
    \ using the last known lifetimes for\n   those addresses, and SHOULD continue\
    \ to use any other previously\n   obtained configuration parameters.\n"
- title: 18.1.3. Creation and Transmission of Renew Messages
  contents:
  - "18.1.3. Creation and Transmission of Renew Messages\n   To extend the valid and\
    \ preferred lifetimes for the addresses\n   associated with an IA, the client\
    \ sends a Renew message to the server\n   from which the client obtained the addresses\
    \ in the IA containing an\n   IA option for the IA.  The client includes IA Address\
    \ options in the\n   IA option for the addresses associated with the IA.  The\
    \ server\n   determines new lifetimes for the addresses in the IA according to\
    \ the\n   administrative configuration of the server.  The server may also add\n\
    \   new addresses to the IA.  The server may remove addresses from the IA\n  \
    \ by setting the preferred and valid lifetimes of those addresses to\n   zero.\n\
    \   The server controls the time at which the client contacts the server\n   to\
    \ extend the lifetimes on assigned addresses through the T1 and T2\n   parameters\
    \ assigned to an IA.\n   At time T1 for an IA, the client initiates a Renew/Reply\
    \ message\n   exchange to extend the lifetimes on any addresses in the IA.  The\n\
    \   client includes an IA option with all addresses currently assigned to\n  \
    \ the IA in its Renew message.\n   If T1 or T2 is set to 0 by the server (for\
    \ an IA_NA) or there are no\n   T1 or T2 times (for an IA_TA), the client may\
    \ send a Renew or Rebind\n   message, respectively, at the client's discretion.\n\
    \   The client sets the \"msg-type\" field to RENEW.  The client generates\n \
    \  a transaction ID and inserts this value in the \"transaction-id\"\n   field.\n\
    \   The client places the identifier of the destination server in a\n   Server\
    \ Identifier option.\n   The client MUST include a Client Identifier option to\
    \ identify itself\n   to the server.  The client adds any appropriate options,\
    \ including\n   one or more IA options.  The client MUST include the list of\n\
    \   addresses the client currently has associated with the IAs in the\n   Renew\
    \ message.\n   The client MUST include an Option Request option (see section 22.7)\n\
    \   to indicate the options the client is interested in receiving.  The\n   client\
    \ MAY include options with data values as hints to the server\n   about parameter\
    \ values the client would like to have returned.\n   The client transmits the\
    \ message according to section 14, using the\n   following parameters:\n     \
    \ IRT   REN_TIMEOUT\n      MRT   REN_MAX_RT\n      MRC   0\n      MRD   Remaining\
    \ time until T2\n   The message exchange is terminated when time T2 is reached\
    \ (see\n   section 18.1.4), at which time the client begins a Rebind message\n\
    \   exchange.\n"
- title: 18.1.4. Creation and Transmission of Rebind Messages
  contents:
  - "18.1.4. Creation and Transmission of Rebind Messages\n   At time T2 for an IA\
    \ (which will only be reached if the server to\n   which the Renew message was\
    \ sent at time T1 has not responded), the\n   client initiates a Rebind/Reply\
    \ message exchange with any available\n   server.  The client includes an IA option\
    \ with all addresses\n   currently assigned to the IA in its Rebind message.\n\
    \   The client sets the \"msg-type\" field to REBIND.  The client generates\n\
    \   a transaction ID and inserts this value in the \"transaction-id\"\n   field.\n\
    \   The client MUST include a Client Identifier option to identify itself\n  \
    \ to the server.  The client adds any appropriate options, including\n   one or\
    \ more IA options.  The client MUST include the list of\n   addresses the client\
    \ currently has associated with the IAs in the\n   Rebind message.\n   The client\
    \ MUST include an Option Request option (see section 22.7)\n   to indicate the\
    \ options the client is interested in receiving.  The\n   client MAY include options\
    \ with data values as hints to the server\n   about parameter values the client\
    \ would like to have returned.\n   The client transmits the message according\
    \ to section 14, using the\n   following parameters:\n      IRT   REB_TIMEOUT\n\
    \      MRT   REB_MAX_RT\n      MRC   0\n      MRD   Remaining time until valid\
    \ lifetimes of all addresses have\n            expired\n   The message exchange\
    \ is terminated when the valid lifetimes of all\n   the addresses assigned to\
    \ the IA expire (see section 10), at which\n   time the client has several alternative\
    \ actions to choose from; for\n   example:\n   -  The client may choose to use\
    \ a Solicit message to locate a new\n      DHCP server and send a Request for\
    \ the expired IA to the new\n      server.\n   -  The client may have other addresses\
    \ in other IAs, so the client\n      may choose to discard the expired IA and\
    \ use the addresses in the\n      other IAs.\n"
- title: 18.1.5. Creation and Transmission of Information-request Messages
  contents:
  - "18.1.5. Creation and Transmission of Information-request Messages\n   The client\
    \ uses an Information-request message to obtain\n   configuration information\
    \ without having addresses assigned to it.\n   The client sets the \"msg-type\"\
    \ field to INFORMATION-REQUEST.  The\n   client generates a transaction ID and\
    \ inserts this value in the\n   \"transaction-id\" field.\n   The client SHOULD\
    \ include a Client Identifier option to identify\n   itself to the server.  If\
    \ the client does not include a Client\n   Identifier option, the server will\
    \ not be able to return any client-\n   specific options to the client, or the\
    \ server may choose not to\n   respond to the message at all.  The client MUST\
    \ include a Client\n   Identifier option if the Information-Request message will\
    \ be\n   authenticated.\n   The client MUST include an Option Request option (see\
    \ section 22.7)\n   to indicate the options the client is interested in receiving.\
    \  The\n   client MAY include options with data values as hints to the server\n\
    \   about parameter values the client would like to have returned.\n   The first\
    \ Information-request message from the client on the\n   interface MUST be delayed\
    \ by a random amount of time between 0 and\n   INF_MAX_DELAY.  The client transmits\
    \ the message according to section\n   14, using the following parameters:\n \
    \     IRT   INF_TIMEOUT\n      MRT   INF_MAX_RT\n      MRC   0\n      MRD   0\n"
- title: 18.1.6. Creation and Transmission of Release Messages
  contents:
  - "18.1.6. Creation and Transmission of Release Messages\n   To release one or more\
    \ addresses, a client sends a Release message to\n   the server.\n   The client\
    \ sets the \"msg-type\" field to RELEASE.  The client\n   generates a transaction\
    \ ID and places this value in the\n   \"transaction-id\" field.\n   The client\
    \ places the identifier of the server that allocated the\n   address(es) in a\
    \ Server Identifier option.\n   The client MUST include a Client Identifier option\
    \ to identify itself\n   to the server.  The client includes options containing\
    \ the IAs for\n   the addresses it is releasing in the \"options\" field.  The\
    \ addresses\n   to be released MUST be included in the IAs.  Any addresses for\
    \ the\n   IAs the client wishes to continue to use MUST NOT be added to the\n\
    \   IAs.\n   The client MUST NOT use any of the addresses it is releasing as the\n\
    \   source address in the Release message or in any subsequently\n   transmitted\
    \ message.\n   Because Release messages may be lost, the client should retransmit\n\
    \   the Release if no Reply is received.  However, there are scenarios\n   where\
    \ the client may not wish to wait for the normal retransmission\n   timeout before\
    \ giving up (e.g., on power down).  Implementations\n   SHOULD retransmit one\
    \ or more times, but MAY choose to terminate the\n   retransmission procedure\
    \ early.\n   The client transmits the message according to section 14, using the\n\
    \   following parameters:\n      IRT   REL_TIMEOUT\n      MRT   0\n      MRC \
    \  REL_MAX_RC\n      MRD   0\n   The client MUST stop using all of the addresses\
    \ being released as\n   soon as the client begins the Release message exchange\
    \ process.  If\n   addresses are released but the Reply from a DHCP server is\
    \ lost, the\n   client will retransmit the Release message, and the server may\n\
    \   respond with a Reply indicating a status of NoBinding.  Therefore,\n   the\
    \ client does not treat a Reply message with a status of NoBinding\n   in a Release\
    \ message exchange as if it indicates an error.\n   Note that if the client fails\
    \ to release the addresses, each address\n   assigned to the IA will be reclaimed\
    \ by the server when the valid\n   lifetime of that address expires.\n"
- title: 18.1.7. Creation and Transmission of Decline Messages
  contents:
  - "18.1.7. Creation and Transmission of Decline Messages\n   If a client detects\
    \ that one or more addresses assigned to it by a\n   server are already in use\
    \ by another node, the client sends a Decline\n   message to the server to inform\
    \ it that the address is suspect.\n   The client sets the \"msg-type\" field to\
    \ DECLINE.  The client\n   generates a transaction ID and places this value in\
    \ the\n   \"transaction-id\" field.\n   The client places the identifier of the\
    \ server that allocated the\n   address(es) in a Server Identifier option.\n \
    \  The client MUST include a Client Identifier option to identify itself\n   to\
    \ the server.  The client includes options containing the IAs for\n   the addresses\
    \ it is declining in the \"options\" field.  The addresses\n   to be declined\
    \ MUST be included in the IAs.  Any addresses for the\n   IAs the client wishes\
    \ to continue to use should not be in added to\n   the IAs.\n   The client MUST\
    \ NOT use any of the addresses it is declining as the\n   source address in the\
    \ Decline message or in any subsequently\n   transmitted message.\n   The client\
    \ transmits the message according to section 14, using the\n   following parameters:\n\
    \      IRT   DEC_TIMEOUT\n      MRT   0\n      MRC   DEC_MAX_RC\n      MRD   0\n\
    \   If addresses are declined but the Reply from a DHCP server is lost,\n   the\
    \ client will retransmit the Decline message, and the server may\n   respond with\
    \ a Reply indicating a status of NoBinding.  Therefore,\n   the client does not\
    \ treat a Reply message with a status of NoBinding\n   in a Decline message exchange\
    \ as if it indicates an error.\n"
- title: 18.1.8. Receipt of Reply Messages
  contents:
  - "18.1.8. Receipt of Reply Messages\n   Upon the receipt of a valid Reply message\
    \ in response to a Solicit\n   (with a Rapid Commit option), Request, Confirm,\
    \ Renew, Rebind or\n   Information-request message, the client extracts the configuration\n\
    \   information contained in the Reply.  The client MAY choose to report\n   any\
    \ status code or message from the status code option in the Reply\n   message.\n\
    \   The client SHOULD perform duplicate address detection [17] on each of\n  \
    \ the addresses in any IAs it receives in the Reply message before\n   using that\
    \ address for traffic.  If any of the addresses are found to\n   be in use on\
    \ the link, the client sends a Decline message to the\n   server as described\
    \ in section 18.1.7.\n   If the Reply was received in response to a Solicit (with\
    \ a Rapid\n   Commit option), Request, Renew or Rebind message, the client updates\n\
    \   the information it has recorded about IAs from the IA options\n   contained\
    \ in the Reply message:\n   -  Record T1 and T2 times.\n   -  Add any new addresses\
    \ in the IA option to the IA as recorded by\n      the client.\n   -  Update lifetimes\
    \ for any addresses in the IA option that the\n      client already has recorded\
    \ in the IA.\n   -  Discard any addresses from the IA, as recorded by the client,\
    \ that\n      have a valid lifetime of 0 in the IA Address option.\n   -  Leave\
    \ unchanged any information about addresses the client has\n      recorded in\
    \ the IA but that were not included in the IA from the\n      server.\n   Management\
    \ of the specific configuration information is detailed in\n   the definition\
    \ of each option in section 22.\n   If the client receives a Reply message with\
    \ a Status Code containing\n   UnspecFail, the server is indicating that it was\
    \ unable to process\n   the message due to an unspecified failure condition. \
    \ If the client\n   retransmits the original message to the same server to retry\
    \ the\n   desired operation, the client MUST limit the rate at which it\n   retransmits\
    \ the message and limit the duration of the time during\n   which it retransmits\
    \ the message.\n   When the client receives a Reply message with a Status Code\
    \ option\n   with the value UseMulticast, the client records the receipt of the\n\
    \   message and sends subsequent messages to the server through the\n   interface\
    \ on which the message was received using multicast.  The\n   client resends the\
    \ original message using multicast.\n   When the client receives a NotOnLink status\
    \ from the server in\n   response to a Confirm message, the client performs DHCP\
    \ server\n   solicitation, as described in section 17, and client-initiated\n\
    \   configuration as described in section 18.  If the client receives any\n  \
    \ Reply messages that do not indicate a NotOnLink status, the client\n   can use\
    \ the addresses in the IA and ignore any messages that indicate\n   a NotOnLink\
    \ status.\n   When the client receives a NotOnLink status from the server in\n\
    \   response to a Request, the client can either re-issue the Request\n   without\
    \ specifying any addresses or restart the DHCP server discovery\n   process (see\
    \ section 17).\n   The client examines the status code in each IA individually.\
    \  If the\n   status code is NoAddrsAvail, the client has received no usable\n\
    \   addresses in the IA and may choose to try obtaining addresses for the\n  \
    \ IA from another server.  The client uses addresses and other\n   information\
    \ from any IAs that do not contain a Status Code option\n   with the NoAddrsAvail\
    \ code.  If the client receives no addresses in\n   any of the IAs, it may either\
    \ try another server (perhaps restarting\n   the DHCP server discovery process)\
    \ or use the Information-request\n   message to obtain other configuration information\
    \ only.\n   When the client receives a Reply message in response to a Renew or\n\
    \   Rebind message, the client examines each IA independently.  For each\n   IA\
    \ in the original Renew or Rebind message, the client:\n   -  sends a Request\
    \ message if the IA contained a Status Code option\n      with the NoBinding status\
    \ (and does not send any additional\n      Renew/Rebind messages)\n   -  sends\
    \ a Renew/Rebind if the IA is not in the Reply message\n   -  otherwise accepts\
    \ the information in the IA\n   When the client receives a valid Reply message\
    \ in response to a\n   Release message, the client considers the Release event\
    \ completed,\n   regardless of the Status Code option(s) returned by the server.\n\
    \   When the client receives a valid Reply message in response to a\n   Decline\
    \ message, the client considers the Decline event completed,\n   regardless of\
    \ the Status Code option(s) returned by the server.\n"
- title: 18.2. Server Behavior
  contents:
  - "18.2. Server Behavior\n   For this discussion, the Server is assumed to have\
    \ been configured in\n   an implementation specific manner with configuration\
    \ of interest to\n   clients.\n   In most instances, the server will send a Reply\
    \ in response to a\n   client message.  This Reply message MUST always contain\
    \ the Server\n   Identifier option containing the server's DUID and the Client\n\
    \   Identifier option from the client message if one was present.\n   In most\
    \ Reply messages, the server includes options containing\n   configuration information\
    \ for the client.  The server must be aware\n   of the recommendations on packet\
    \ sizes and the use of fragmentation\n   in section 5 of RFC 2460.  If the client\
    \ included an Option Request\n   option in its message, the server includes options\
    \ in the Reply\n   message containing configuration parameters for all of the\
    \ options\n   identified in the Option Request option that the server has been\n\
    \   configured to return to the client.  The server MAY return additional\n  \
    \ options to the client if it has been configured to do so.\n"
- title: 18.2.1. Receipt of Request Messages
  contents:
  - "18.2.1. Receipt of Request Messages\n   When the server receives a Request message\
    \ via unicast from a client\n   to which the server has not sent a unicast option,\
    \ the server\n   discards the Request message and responds with a Reply message\n\
    \   containing a Status Code option with the value UseMulticast, a Server\n  \
    \ Identifier option containing the server's DUID, the Client Identifier\n   option\
    \ from the client message, and no other options.\n   When the server receives\
    \ a valid Request message, the server creates\n   the bindings for that client\
    \ according to the server's policy and\n   configuration information and records\
    \ the IAs and other information\n   requested by the client.\n   The server constructs\
    \ a Reply message by setting the \"msg-type\" field\n   to REPLY, and copying\
    \ the transaction ID from the Request message\n   into the transaction-id field.\n\
    \   The server MUST include a Server Identifier option containing the\n   server's\
    \ DUID and the Client Identifier option from the Request\n   message in the Reply\
    \ message.\n   If the server finds that the prefix on one or more IP addresses\
    \ in\n   any IA in the message from the client is not appropriate for the link\n\
    \   to which the client is connected, the server MUST return the IA to\n   the\
    \ client with a Status Code option with the value NotOnLink.\n   If the server\
    \ cannot assign any addresses to an IA in the message\n   from the client, the\
    \ server MUST include the IA in the Reply message\n   with no addresses in the\
    \ IA and a Status Code option in the IA\n   containing status code NoAddrsAvail.\n\
    \   For any IAs to which the server can assign addresses, the server\n   includes\
    \ the IA with addresses and other configuration parameters,\n   and records the\
    \ IA as a new client binding.\n   The server includes a Reconfigure Accept option\
    \ if the server wants\n   to require that the client accept Reconfigure messages.\n\
    \   The server includes other options containing configuration\n   information\
    \ to be returned to the client as described in section\n   18.2.\n   If the server\
    \ finds that the client has included an IA in the Request\n   message for which\
    \ the server already has a binding that associates\n   the IA with the client,\
    \ the client has resent a Request message for\n   which it did not receive a Reply\
    \ message.  The server either resends\n   a previously cached Reply message or\
    \ sends a new Reply message.\n"
- title: 18.2.2. Receipt of Confirm Messages
  contents:
  - "18.2.2. Receipt of Confirm Messages\n   When the server receives a Confirm message,\
    \ the server determines\n   whether the addresses in the Confirm message are appropriate\
    \ for the\n   link to which the client is attached.  If all of the addresses in\
    \ the\n   Confirm message pass this test, the server returns a status of\n   Success.\
    \  If any of the addresses do not pass this test, the server\n   returns a status\
    \ of NotOnLink.  If the server is unable to perform\n   this test (for example,\
    \ the server does not have information about\n   prefixes on the link to which\
    \ the client is connected), or there were\n   no addresses in any of the IAs sent\
    \ by the client, the server MUST\n   NOT send a reply to the client.\n   The server\
    \ ignores the T1 and T2 fields in the IA options and the\n   preferred-lifetime\
    \ and valid-lifetime fields in the IA Address\n   options.\n   The server constructs\
    \ a Reply message by setting the \"msg-type\" field\n   to REPLY, and copying\
    \ the transaction ID from the Confirm message\n   into the transaction-id field.\n\
    \   The server MUST include a Server Identifier option containing the\n   server's\
    \ DUID and the Client Identifier option from the Confirm\n   message in the Reply\
    \ message.  The server includes a Status Code\n   option indicating the status\
    \ of the Confirm message.\n"
- title: 18.2.3. Receipt of Renew Messages
  contents:
  - "18.2.3. Receipt of Renew Messages\n   When the server receives a Renew message\
    \ via unicast from a client to\n   which the server has not sent a unicast option,\
    \ the server discards\n   the Renew message and responds with a Reply message\
    \ containing a\n   Status Code option with the value UseMulticast, a Server Identifier\n\
    \   option containing the server's DUID, the Client Identifier option\n   from\
    \ the client message, and no other options.\n   When the server receives a Renew\
    \ message that contains an IA option\n   from a client, it locates the client's\
    \ binding and verifies that the\n   information in the IA from the client matches\
    \ the information stored\n   for that client.\n   If the server cannot find a\
    \ client entry for the IA the server\n   returns the IA containing no addresses\
    \ with a Status Code option set\n   to NoBinding in the Reply message.\n   If\
    \ the server finds that any of the addresses are not appropriate for\n   the link\
    \ to which the client is attached, the server returns the\n   address to the client\
    \ with lifetimes of 0.\n   If the server finds the addresses in the IA for the\
    \ client then the\n   server sends back the IA to the client with new lifetimes\
    \ and T1/T2\n   times.  The server may choose to change the list of addresses\
    \ and the\n   lifetimes of addresses in IAs that are returned to the client.\n\
    \   The server constructs a Reply message by setting the \"msg-type\" field\n\
    \   to REPLY, and copying the transaction ID from the Renew message into\n   the\
    \ transaction-id field.\n   The server MUST include a Server Identifier option\
    \ containing the\n   server's DUID and the Client Identifier option from the Renew\
    \ message\n   in the Reply message.\n   The server includes other options containing\
    \ configuration\n   information to be returned to the client as described in section\n\
    \   18.2.\n"
- title: 18.2.4. Receipt of Rebind Messages
  contents:
  - "18.2.4. Receipt of Rebind Messages\n   When the server receives a Rebind message\
    \ that contains an IA option\n   from a client, it locates the client's binding\
    \ and verifies that the\n   information in the IA from the client matches the\
    \ information stored\n   for that client.\n   If the server cannot find a client\
    \ entry for the IA and the server\n   determines that the addresses in the IA\
    \ are not appropriate for the\n   link to which the client's interface is attached\
    \ according to the\n   server's explicit configuration information, the server\
    \ MAY send a\n   Reply message to the client containing the client's IA, with\
    \ the\n   lifetimes for the addresses in the IA set to zero.  This Reply\n   constitutes\
    \ an explicit notification to the client that the addresses\n   in the IA are\
    \ no longer valid.  In this situation, if the server does\n   not send a Reply\
    \ message it silently discards the Rebind message.\n   If the server finds that\
    \ any of the addresses are no longer\n   appropriate for the link to which the\
    \ client is attached, the server\n   returns the address to the client with lifetimes\
    \ of 0.\n   If the server finds the addresses in the IA for the client then the\n\
    \   server SHOULD send back the IA to the client with new lifetimes and\n   T1/T2\
    \ times.\n   The server constructs a Reply message by setting the \"msg-type\"\
    \ field\n   to REPLY, and copying the transaction ID from the Rebind message into\n\
    \   the transaction-id field.\n   The server MUST include a Server Identifier\
    \ option containing the\n   server's DUID and the Client Identifier option from\
    \ the Rebind\n   message in the Reply message.\n   The server includes other options\
    \ containing configuration\n   information to be returned to the client as described\
    \ in section\n   18.2.\n"
- title: 18.2.5. Receipt of Information-request Messages
  contents:
  - "18.2.5. Receipt of Information-request Messages\n   When the server receives\
    \ an Information-request message, the client\n   is requesting configuration information\
    \ that does not include the\n   assignment of any addresses.  The server determines\
    \ all configuration\n   parameters appropriate to the client, based on the server\n\
    \   configuration policies known to the server.\n   The server constructs a Reply\
    \ message by setting the \"msg-type\" field\n   to REPLY, and copying the transaction\
    \ ID from the Information-request\n   message into the transaction-id field.\n\
    \   The server MUST include a Server Identifier option containing the\n   server's\
    \ DUID in the Reply message.  If the client included a Client\n   Identification\
    \ option in the Information-request message, the server\n   copies that option\
    \ to the Reply message.\n   The server includes options containing configuration\
    \ information to\n   be returned to the client as described in section 18.2.\n\
    \   If the Information-request message received from the client did not\n   include\
    \ a Client Identifier option, the server SHOULD respond with a\n   Reply message\
    \ containing any configuration parameters that are not\n   determined by the client's\
    \ identity.  If the server chooses not to\n   respond, the client may continue\
    \ to retransmit the\n   Information-request message indefinitely.\n"
- title: 18.2.6. Receipt of Release Messages
  contents:
  - "18.2.6. Receipt of Release Messages\n   When the server receives a Release message\
    \ via unicast from a client\n   to which the server has not sent a unicast option,\
    \ the server\n   discards the Release message and responds with a Reply message\n\
    \   containing a Status Code option with value UseMulticast, a Server\n   Identifier\
    \ option containing the server's DUID, the Client Identifier\n   option from the\
    \ client message, and no other options.\n   Upon the receipt of a valid Release\
    \ message, the server examines the\n   IAs and the addresses in the IAs for validity.\
    \  If the IAs in the\n   message are in a binding for the client, and the addresses\
    \ in the IAs\n   have been assigned by the server to those IAs, the server deletes\
    \ the\n   addresses from the IAs and makes the addresses available for\n   assignment\
    \ to other clients.  The server ignores addresses not\n   assigned to the IA,\
    \ although it may choose to log an error.\n   After all the addresses have been\
    \ processed, the server generates a\n   Reply message and includes a Status Code\
    \ option with value Success, a\n   Server Identifier option with the server's\
    \ DUID, and a Client\n   Identifier option with the client's DUID.  For each IA\
    \ in the Release\n   message for which the server has no binding information,\
    \ the server\n   adds an IA option using the IAID from the Release message, and\n\
    \   includes a Status Code option with the value NoBinding in the IA\n   option.\
    \  No other options are included in the IA option.\n   A server may choose to\
    \ retain a record of assigned addresses and IAs\n   after the lifetimes on the\
    \ addresses have expired to allow the server\n   to reassign the previously assigned\
    \ addresses to a client.\n"
- title: 18.2.7. Receipt of Decline Messages
  contents:
  - "18.2.7. Receipt of Decline Messages\n   When the server receives a Decline message\
    \ via unicast from a client\n   to which the server has not sent a unicast option,\
    \ the server\n   discards the Decline message and responds with a Reply message\n\
    \   containing a Status Code option with the value UseMulticast, a Server\n  \
    \ Identifier option containing the server's DUID, the Client Identifier\n   option\
    \ from the client message, and no other options.\n   Upon the receipt of a valid\
    \ Decline message, the server examines the\n   IAs and the addresses in the IAs\
    \ for validity.  If the IAs in the\n   message are in a binding for the client,\
    \ and the addresses in the IAs\n   have been assigned by the server to those IAs,\
    \ the server deletes the\n   addresses from the IAs.  The server ignores addresses\
    \ not assigned to\n   the IA (though it may choose to log an error if it finds\
    \ such an\n   address).\n   The client has found any addresses in the Decline\
    \ messages to be\n   already in use on its link.  Therefore, the server SHOULD\
    \ mark the\n   addresses declined by the client so that those addresses are not\n\
    \   assigned to other clients, and MAY choose to make a notification that\n  \
    \ addresses were declined.  Local policy on the server determines when\n   the\
    \ addresses identified in a Decline message may be made available\n   for assignment.\n\
    \   After all the addresses have been processed, the server generates a\n   Reply\
    \ message and includes a Status Code option with the value\n   Success, a Server\
    \ Identifier option with the server's DUID, and a\n   Client Identifier option\
    \ with the client's DUID.  For each IA in the\n   Decline message for which the\
    \ server has no binding information, the\n   server adds an IA option using the\
    \ IAID from the Release message and\n   includes a Status Code option with the\
    \ value NoBinding in the IA\n   option.  No other options are included in the\
    \ IA option.\n"
- title: 18.2.8. Transmission of Reply Messages
  contents:
  - "18.2.8. Transmission of Reply Messages\n   If the original message was received\
    \ directly by the server, the\n   server unicasts the Reply message directly to\
    \ the client using the\n   address in the source address field from the IP datagram\
    \ in which the\n   original message was received.  The Reply message MUST be unicast\n\
    \   through the interface on which the original message was received.\n   If the\
    \ original message was received in a Relay-forward message, the\n   server constructs\
    \ a Relay-reply message with the Reply message in the\n   payload of a Relay Message\
    \ option (see section 22.10).  If the\n   Relay-forward messages included an Interface-id\
    \ option, the server\n   copies that option to the Relay-reply message.  The server\
    \ unicasts\n   the Relay-reply message directly to the relay agent using the address\n\
    \   in the source address field from the IP datagram in which the\n   Relay-forward\
    \ message was received.\n"
- title: 19. DHCP Server-Initiated Configuration Exchange
  contents:
  - "19. DHCP Server-Initiated Configuration Exchange\n   A server initiates a configuration\
    \ exchange to cause DHCP clients to\n   obtain new addresses and other configuration\
    \ information.  For\n   example, an administrator may use a server-initiated configuration\n\
    \   exchange when links in the DHCP domain are to be renumbered.  Other\n   examples\
    \ include changes in the location of directory servers,\n   addition of new services\
    \ such as printing, and availability of new\n   software.\n"
- title: 19.1. Server Behavior
  contents:
  - "19.1. Server Behavior\n   A server sends a Reconfigure message to cause a client\
    \ to initiate\n   immediately a Renew/Reply or Information-request/Reply message\n\
    \   exchange with the server.\n"
- title: 19.1.1. Creation and Transmission of Reconfigure Messages
  contents:
  - "19.1.1. Creation and Transmission of Reconfigure Messages\n   The server sets\
    \ the \"msg-type\" field to RECONFIGURE.  The server sets\n   the transaction-id\
    \ field to 0.  The server includes a Server\n   Identifier option containing its\
    \ DUID and a Client Identifier option\n   containing the client's DUID in the\
    \ Reconfigure message.\n   The server MAY include an Option Request option to\
    \ inform the client\n   of what information has been changed or new information\
    \ that has been\n   added.  In particular, the server specifies the IA option\
    \ in the\n   Option Request option if the server wants the client to obtain new\n\
    \   address information.  If the server identifies the IA option in the\n   Option\
    \ Request option, the server MUST include an IA option that\n   contains no other\
    \ sub-options to identify each IA that is to be\n   reconfigured on the client.\n\
    \   Because of the risk of denial of service attacks against DHCP\n   clients,\
    \ the use of a security mechanism is mandated in Reconfigure\n   messages.  The\
    \ server MUST use DHCP authentication in the Reconfigure\n   message.\n   The\
    \ server MUST include a Reconfigure Message option (defined in\n   section 22.19)\
    \ to select whether the client responds with a Renew\n   message or an Information-Request\
    \ message.\n   The server MUST NOT include any other options in the Reconfigure\n\
    \   except as specifically allowed in the definition of individual\n   options.\n\
    \   A server sends each Reconfigure message to a single DHCP client,\n   using\
    \ an IPv6 unicast address of sufficient scope belonging to the\n   DHCP client.\
    \  If the server does not have an address to which it can\n   send the Reconfigure\
    \ message directly to the client, the server uses\n   a Relay-reply message (as\
    \ described in section 20.3) to send the\n   Reconfigure message to a relay agent\
    \ that will relay the message to\n   the client.  The server may obtain the address\
    \ of the client (and the\n   appropriate relay agent, if required) through the\
    \ information the\n   server has about clients that have been in contact with\
    \ the server,\n   or through some external agent.\n   To reconfigure more than\
    \ one client, the server unicasts a separate\n   message to each client.  The\
    \ server may initiate the reconfiguration\n   of multiple clients concurrently;\
    \ for example, a server may send a\n   Reconfigure message to additional clients\
    \ while previous\n   reconfiguration message exchanges are still in progress.\n\
    \   The Reconfigure message causes the client to initiate a Renew/Reply\n   or\
    \ Information-request/Reply message exchange with the server.  The\n   server\
    \ interprets the receipt of a Renew or Information-request\n   message (whichever\
    \ was specified in the original Reconfigure message)\n   from the client as satisfying\
    \ the Reconfigure message request.\n"
- title: 19.1.2. Time Out and Retransmission of Reconfigure Messages
  contents:
  - "19.1.2. Time Out and Retransmission of Reconfigure Messages\n   If the server\
    \ does not receive a Renew or Information-request message\n   from the client\
    \ in REC_TIMEOUT milliseconds, the server retransmits\n   the Reconfigure message,\
    \ doubles the REC_TIMEOUT value and waits\n   again.  The server continues this\
    \ process until REC_MAX_RC\n   unsuccessful attempts have been made, at which\
    \ point the server\n   SHOULD abort the reconfigure process for that client.\n\
    \   Default and initial values for REC_TIMEOUT and REC_MAX_RC are\n   documented\
    \ in section 5.5.\n"
- title: 19.2. Receipt of Renew Messages
  contents:
  - "19.2. Receipt of Renew Messages\n   The server generates and sends a Reply message\
    \ to the client as\n   described in sections 18.2.3 and 18.2.8, including options\
    \ for\n   configuration parameters.\n   The server MAY include options containing\
    \ the IAs and new values for\n   other configuration parameters in the Reply message,\
    \ even if those\n   IAs and parameters were not requested in the Renew message\
    \ from the\n   client.\n"
- title: 19.3. Receipt of Information-request Messages
  contents:
  - "19.3. Receipt of Information-request Messages\n   The server generates and sends\
    \ a Reply message to the client as\n   described in sections 18.2.5 and 18.2.8,\
    \ including options for\n   configuration parameters.\n   The server MAY include\
    \ options containing new values for other\n   configuration parameters in the\
    \ Reply message, even if those\n   parameters were not requested in the Information-request\
    \ message from\n   the client.\n"
- title: 19.4. Client Behavior
  contents:
  - "19.4. Client Behavior\n   A client receives Reconfigure messages sent to the\
    \ UDP port 546 on\n   interfaces for which it has acquired configuration information\n\
    \   through DHCP.  These messages may be sent at any time.  Since the\n   results\
    \ of a reconfiguration event may affect application layer\n   programs, the client\
    \ SHOULD log these events, and MAY notify these\n   programs of the change through\
    \ an implementation-specific interface.\n"
- title: 19.4.1. Receipt of Reconfigure Messages
  contents:
  - "19.4.1. Receipt of Reconfigure Messages\n   Upon receipt of a valid Reconfigure\
    \ message, the client responds with\n   either a Renew message or an Information-request\
    \ message as indicated\n   by the Reconfigure Message option (as defined in section\
    \ 22.19).  The\n   client ignores the transaction-id field in the received Reconfigure\n\
    \   message.  While the transaction is in progress, the client silently\n   discards\
    \ any Reconfigure messages it receives.\n   DISCUSSION:\n      The Reconfigure\
    \ message acts as a trigger that signals the client\n      to complete a successful\
    \ message exchange.  Once the client has\n      received a Reconfigure, the client\
    \ proceeds with the message\n      exchange (retransmitting the Renew or Information-request\
    \ message\n      if necessary); the client ignores any additional Reconfigure\n\
    \      messages until the exchange is complete.  Subsequent Reconfigure\n    \
    \  messages cause the client to initiate a new exchange.\n      How does this\
    \ mechanism work in the face of duplicated or\n      retransmitted Reconfigure\
    \ messages?  Duplicate messages will be\n      ignored because the client will\
    \ begin the exchange after the\n      receipt of the first Reconfigure.  Retransmitted\
    \ messages will\n      either trigger the exchange (if the first Reconfigure was\
    \ not\n      received by the client) or will be ignored.  The server can\n   \
    \   discontinue retransmission of Reconfigure messages to the client\n      once\
    \ the server receives the Renew or Information-request message\n      from the\
    \ client.\n      It might be possible for a duplicate or retransmitted Reconfigure\n\
    \      to be sufficiently delayed (and delivered out of order) to arrive\n   \
    \   at the client after the exchange (initiated by the original\n      Reconfigure)\
    \ has been completed.  In this case, the client would\n      initiate a redundant\
    \ exchange.  The likelihood of delayed and out\n      of order delivery is small\
    \ enough to be ignored.  The consequence\n      of the redundant exchange is inefficiency\
    \ rather than incorrect\n      operation.\n"
- title: 19.4.2. Creation and Transmission of Renew Messages
  contents:
  - "19.4.2. Creation and Transmission of Renew Messages\n   When responding to a\
    \ Reconfigure, the client creates and sends the\n   Renew message in exactly the\
    \ same manner as outlined in section\n   18.1.3, with the exception that the client\
    \ copies the Option Request\n   option and any IA options from the Reconfigure\
    \ message into the Renew\n   message.\n"
- title: 19.4.3. Creation and Transmission of Information-request Messages
  contents:
  - "19.4.3. Creation and Transmission of Information-request Messages\n   When responding\
    \ to a Reconfigure, the client creates and sends the\n   Information-request message\
    \ in exactly the same manner as outlined in\n   section 18.1.5, with the exception\
    \ that the client includes a Server\n   Identifier option with the identifier\
    \ from the Reconfigure message to\n   which the client is responding.\n"
- title: 19.4.4. Time Out and Retransmission of Renew or Information-request
  contents:
  - "19.4.4. Time Out and Retransmission of Renew or Information-request\n       \
    \ Messages\n   The client uses the same variables and retransmission algorithm\
    \ as it\n   does with Renew or Information-request messages generated as part\
    \ of\n   a client-initiated configuration exchange.  See sections 18.1.3 and\n\
    \   18.1.5 for details.  If the client does not receive a response from\n   the\
    \ server by the end of the retransmission process, the client\n   ignores and\
    \ discards the Reconfigure message.\n"
- title: 19.4.5. Receipt of Reply Messages
  contents:
  - "19.4.5. Receipt of Reply Messages\n   Upon the receipt of a valid Reply message,\
    \ the client processes the\n   options and sets (or resets) configuration parameters\
    \ appropriately.\n   The client records and updates the lifetimes for any addresses\n\
    \   specified in IAs in the Reply message.\n"
- title: 20. Relay Agent Behavior
  contents:
  - "20. Relay Agent Behavior\n   The relay agent MAY be configured to use a list\
    \ of destination\n   addresses, which MAY include unicast addresses, the All_DHCP_Servers\n\
    \   multicast address, or other addresses selected by the network\n   administrator.\
    \  If the relay agent has not been explicitly\n   configured, it MUST use the\
    \ All_DHCP_Servers multicast address as the\n   default.\n   If the relay agent\
    \ relays messages to the All_DHCP_Servers multicast\n   address or other multicast\
    \ addresses, it sets the Hop Limit field to\n   32.\n"
- title: 20.1. Relaying a Client Message or a Relay-forward Message
  contents:
  - "20.1. Relaying a Client Message or a Relay-forward Message\n   A relay agent\
    \ relays both messages from clients and Relay-forward\n   messages from other\
    \ relay agents.  When a relay agent receives a\n   valid message to be relayed,\
    \ it constructs a new Relay-forward\n   message.  The relay agent copies the source\
    \ address from the header\n   of the IP datagram in which the message was received\
    \ to the\n   peer-address field of the Relay-forward message.  The relay agent\n\
    \   copies the received DHCP message (excluding any IP or UDP headers)\n   into\
    \ a Relay Message option in the new message.  The relay agent adds\n   to the\
    \ Relay-forward message any other options it is configured to\n   include.\n"
- title: 20.1.1. Relaying a Message from a Client
  contents:
  - "20.1.1. Relaying a Message from a Client\n   If the relay agent received the\
    \ message to be relayed from a client,\n   the relay agent places a global or\
    \ site-scoped address with a prefix\n   assigned to the link on which the client\
    \ should be assigned an\n   address in the link-address field.  This address will\
    \ be used by the\n   server to determine the link from which the client should\
    \ be assigned\n   an address and other configuration information.  The hop-count\
    \ in the\n   Relay-forward message is set to 0.\n   If the relay agent cannot\
    \ use the address in the link-address field\n   to identify the interface through\
    \ which the response to the client\n   will be relayed, the relay agent MUST include\
    \ an Interface-id option\n   (see section 22.18) in the Relay-forward message.\
    \  The server will\n   include the Interface-id option in its Relay-reply message.\
    \  The\n   relay agent fills in the link-address field as described in the\n \
    \  previous paragraph regardless of whether the relay agent includes an\n   Interface-id\
    \ option in the Relay-forward message.\n"
- title: 20.1.2. Relaying a Message from a Relay Agent
  contents:
  - "20.1.2. Relaying a Message from a Relay Agent\n   If the message received by\
    \ the relay agent is a Relay-forward message\n   and the hop-count in the message\
    \ is greater than or equal to\n   HOP_COUNT_LIMIT, the relay agent discards the\
    \ received message.\n   The relay agent copies the source address from the IP\
    \ datagram in\n   which the message was received from the client into the peer-address\n\
    \   field in the Relay-forward message and sets the hop-count field to\n   the\
    \ value of the hop-count field in the received message incremented\n   by 1.\n\
    \   If the source address from the IP datagram header of the received\n   message\
    \ is a global or site-local address (and the device on which\n   the relay agent\
    \ is running belongs to only one site), the relay agent\n   sets the link-address\
    \ field to 0; otherwise the relay agent sets the\n   link-address field to a global\
    \ or site-local address assigned to the\n   interface on which the message was\
    \ received, or includes an\n   Interface-ID option to identify the interface on\
    \ which the message\n   was received.\n"
- title: 20.2. Relaying a Relay-reply Message
  contents:
  - "20.2. Relaying a Relay-reply Message\n   The relay agent processes any options\
    \ included in the Relay-reply\n   message in addition to the Relay Message option,\
    \ and then discards\n   those options.\n   The relay agent extracts the message\
    \ from the Relay Message option\n   and relays it to the address contained in\
    \ the peer-address field of\n   the Relay-reply message.\n   If the Relay-reply\
    \ message includes an Interface-id option, the relay\n   agent relays the message\
    \ from the server to the client on the link\n   identified by the Interface-id\
    \ option.  Otherwise, if the\n   link-address field is not set to zero, the relay\
    \ agent relays the\n   message on the link identified by the link-address field.\n"
- title: 20.3. Construction of Relay-reply Messages
  contents:
  - "20.3. Construction of Relay-reply Messages\n   A server uses a Relay-reply message\
    \ to return a response to a client\n   if the original message from the client\
    \ was relayed to the server in\n   a Relay-forward message or to send a Reconfigure\
    \ message to a client\n   if the server does not have an address it can use to\
    \ send the message\n   directly to the client.\n   A response to the client MUST\
    \ be relayed through the same relay\n   agents as the original client message.\
    \  The server causes this to\n   happen by creating a Relay-reply message that\
    \ includes a Relay\n   Message option containing the message for the next relay\
    \ agent in the\n   return path to the client.  The contained Relay-reply message\n\
    \   contains another Relay Message option to be sent to the next relay\n   agent,\
    \ and so on.  The server must record the contents of the\n   peer-address fields\
    \ in the received message so it can construct the\n   appropriate Relay-reply\
    \ message carrying the response from the\n   server.\n   For example, if client\
    \ C sent a message that was relayed by relay\n   agent A to relay agent B and\
    \ then to the server, the server would\n   send the following Relay-Reply message\
    \ to relay agent B:\n   msg-type:       RELAY-REPLY\n   hop-count:      1\n  \
    \ link-address:   0\n   peer-address:   A\n   Relay Message option, containing:\n\
    \     msg-type:     RELAY-REPLY\n     hop-count:    0\n     link-address: address\
    \ from link to which C is attached\n     peer-address: C\n     Relay Message option:\
    \ <response from server>\n   When sending a Reconfigure message to a client through\
    \ a relay agent,\n   the server creates a Relay-reply message that includes a\
    \ Relay\n   Message option containing the Reconfigure message for the next relay\n\
    \   agent in the return path to the client.  The server sets the\n   peer-address\
    \ field in the Relay-reply message header to the address\n   of the client, and\
    \ sets the link-address field as required by the\n   relay agent to relay the\
    \ Reconfigure message to the client.  The\n   server obtains the addresses of\
    \ the client and the relay agent\n   through prior interaction with the client\
    \ or through some external\n   mechanism.\n"
- title: 21. Authentication of DHCP Messages
  contents:
  - "21. Authentication of DHCP Messages\n   Some network administrators may wish\
    \ to provide authentication of the\n   source and contents of DHCP messages. \
    \ For example, clients may be\n   subject to denial of service attacks through\
    \ the use of bogus DHCP\n   servers, or may simply be misconfigured due to unintentionally\n\
    \   instantiated DHCP servers.  Network administrators may wish to\n   constrain\
    \ the allocation of addresses to authorized hosts to avoid\n   denial of service\
    \ attacks in \"hostile\" environments where the network\n   medium is not physically\
    \ secured, such as wireless networks or\n   college residence halls.\n   The DHCP\
    \ authentication mechanism is based on the design of\n   authentication for DHCPv4\
    \ [4].\n"
- title: 21.1. Security of Messages Sent Between Servers and Relay Agents
  contents:
  - "21.1. Security of Messages Sent Between Servers and Relay Agents\n   Relay agents\
    \ and servers that exchange messages securely use the\n   IPsec mechanisms for\
    \ IPv6 [7].  If a client message is relayed\n   through multiple relay agents,\
    \ each of the relay agents must have\n   established independent, pairwise trust\
    \ relationships.  That is, if\n   messages from client C will be relayed by relay\
    \ agent A to relay\n   agent B and then to the server, relay agents A and B must\
    \ be\n   configured to use IPSec for the messages they exchange, and relay\n \
    \  agent B and the server must be configured to use IPSec for the\n   messages\
    \ they exchange.\n   Relay agents and servers that support secure relay agent\
    \ to server or\n   relay agent to relay agent communication use IPsec under the\n\
    \   following conditions:\n      Selectors        Relay agents are manually configured\
    \ with the\n                       addresses of the relay agent or server to which\n\
    \                       DHCP messages are to be forwarded.  Each relay\n     \
    \                  agent and server that will be using IPsec for\n           \
    \            securing DHCP messages must also be configured\n                \
    \       with a list of the relay agents to which messages\n                  \
    \     will be returned.  The selectors for the relay\n                       agents\
    \ and servers will be the pairs of addresses\n                       defining\
    \ relay agents and servers that exchange\n                       DHCP messages\
    \ on the DHCPv6 UDP ports 546 and\n                       547.\n      Mode   \
    \          Relay agents and servers use transport mode and\n                 \
    \      ESP. The information in DHCP messages is not\n                       generally\
    \ considered confidential, so encryption\n                       need not be used\
    \ (i.e., NULL encryption can be\n                       used).\n      Key management\
    \   Because the relay agents and servers are used\n                       within\
    \ an organization, public key schemes are\n                       not necessary.\
    \  Because the relay agents and\n                       servers must be manually\
    \ configured, manually\n                       configured key management may suffice,\
    \ but does\n                       not provide defense against replayed messages.\n\
    \                       Accordingly, IKE with preshared secrets SHOULD be\n  \
    \                     supported.  IKE with public keys MAY be\n              \
    \         supported.\n      Security policy  DHCP messages between relay agents\
    \ and servers\n                       should only be accepted from DHCP peers\
    \ as\n                       identified in the local configuration.\n      Authentication\
    \   Shared keys, indexed to the source IP address of\n                       the\
    \ received DHCP message, are adequate in this\n                       application.\n\
    \      Availability     Appropriate IPsec implementations are likely to\n    \
    \                   be available for servers and for relay agents in\n       \
    \                more featureful devices used in enterprise and\n            \
    \           core ISP networks.  IPsec is less likely to be\n                 \
    \      available for relay agents in low end devices\n                       primarily\
    \ used in the home or small office\n                       markets.\n"
- title: 21.2. Summary of DHCP Authentication
  contents:
  - "21.2. Summary of DHCP Authentication\n   Authentication of DHCP messages is accomplished\
    \ through the use of\n   the Authentication option (see section 22.11).  The authentication\n\
    \   information carried in the Authentication option can be used to\n   reliably\
    \ identify the source of a DHCP message and to confirm that\n   the contents of\
    \ the DHCP message have not been tampered with.\n   The Authentication option\
    \ provides a framework for multiple\n   authentication protocols.  Two such protocols\
    \ are defined here.\n   Other protocols defined in the future will be specified\
    \ in separate\n   documents.\n   Any DHCP message MUST NOT include more than one\
    \ Authentication\n   option.\n   The protocol field in the Authentication option\
    \ identifies the\n   specific protocol used to generate the authentication information\n\
    \   carried in the option.  The algorithm field identifies a specific\n   algorithm\
    \ within the authentication protocol; for example, the\n   algorithm field specifies\
    \ the hash algorithm used to generate the\n   message authentication code (MAC)\
    \ in the authentication option.  The\n   replay detection method (RDM) field specifies\
    \ the type of replay\n   detection used in the replay detection field.\n"
- title: 21.3. Replay Detection
  contents:
  - "21.3. Replay Detection\n   The Replay Detection Method (RDM) field determines\
    \ the type of replay\n   detection used in the Replay Detection field.\n   If\
    \ the RDM field contains 0x00, the replay detection field MUST be\n   set to the\
    \ value of a monotonically increasing counter.  Using a\n   counter value, such\
    \ as the current time of day (for example, an NTP-\n   format timestamp [9]),\
    \ can reduce the danger of replay attacks.  This\n   method MUST be supported\
    \ by all protocols.\n"
- title: 21.4. Delayed Authentication Protocol
  contents:
  - "21.4. Delayed Authentication Protocol\n   If the protocol field is 2, the message\
    \ is using the \"delayed\n   authentication\" mechanism.  In delayed authentication,\
    \ the client\n   requests authentication in its Solicit message, and the server\n\
    \   replies with an Advertise message that includes authentication\n   information.\
    \  This authentication information contains a nonce value\n   generated by the\
    \ source as a message authentication code (MAC) to\n   provide message authentication\
    \ and entity authentication.\n   The use of a particular technique based on the\
    \ HMAC protocol [8]\n   using the MD5 hash [16] is defined here.\n"
- title: 21.4.1. Use of the Authentication Option in the Delayed Authentication
  contents:
  - "21.4.1. Use of the Authentication Option in the Delayed Authentication\n    \
    \    Protocol\n   In a Solicit message, the client fills in the protocol, algorithm\
    \ and\n   RDM fields in the Authentication option with the client's\n   preferences.\
    \  The client sets the replay detection field to zero and\n   omits the authentication\
    \ information field.  The client sets the\n   option-len field to 11.\n   In all\
    \ other messages, the protocol and algorithm fields identify the\n   method used\
    \ to construct the contents of the authentication\n   information field.  The\
    \ RDM field identifies the method used to\n   construct the contents of the replay\
    \ detection field.\n   The format of the Authentication information is:\n    \
    \ 0                   1                   2                   3\n     0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          DHCP realm                           |\n    |\
    \                      (variable length)                        |\n    .     \
    \                                                          .\n    .          \
    \                                                     .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                            key ID                             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                           HMAC-MD5                            |\n    |     \
    \                     (128 bits)                           |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      DHCP realm  The DHCP realm that identifies the key used to\n          \
    \        generate the HMAC-MD5 value.\n      key ID      The key identifier that\
    \ identified the key used to\n                  generate the HMAC-MD5 value.\n\
    \      HMAC-MD5    The message authentication code generated by applying\n   \
    \               MD5 to the DHCP message using the key identified by\n        \
    \          the DHCP realm, client DUID, and key ID.\n   The sender computes the\
    \ MAC using the HMAC generation algorithm [8]\n   and the MD5 hash function [16].\
    \  The entire DHCP message (setting the\n   MAC field of the authentication option\
    \ to zero), including the DHCP\n   message header and the options field, is used\
    \ as input to the HMAC-\n   MD5 computation function.\n   DISCUSSION:\n      Algorithm\
    \ 1 specifies the use of HMAC-MD5.  Use of a different\n      technique, such\
    \ as HMAC-SHA, will be specified as a separate\n      protocol.\n      The DHCP\
    \ realm used to identify authentication keys is chosen to\n      be unique among\
    \ administrative domains.  Use of the DHCP realm\n      allows DHCP administrators\
    \ to avoid conflict in the use of key\n      identifiers, and allows a host using\
    \ DHCP to use authenticated\n      DHCP while roaming among DHCP administrative\
    \ domains.\n"
- title: 21.4.2. Message Validation
  contents:
  - "21.4.2. Message Validation\n   Any DHCP message that includes more than one authentication\
    \ option\n   MUST be discarded.\n   To validate an incoming message, the receiver\
    \ first checks that the\n   value in the replay detection field is acceptable\
    \ according to the\n   replay detection method specified by the RDM field.  Next,\
    \ the\n   receiver computes the MAC as described in [8].  The entire DHCP\n  \
    \ message (setting the MAC field of the authentication option to 0) is\n   used\
    \ as input to the HMAC-MD5 computation function.  If the MAC\n   computed by the\
    \ receiver does not match the MAC contained in the\n   authentication option,\
    \ the receiver MUST discard the DHCP message.\n"
- title: 21.4.3. Key Utilization
  contents:
  - "21.4.3. Key Utilization\n   Each DHCP client has a set of keys.  Each key is\
    \ identified by <DHCP\n   realm, client DUID, key id>.  Each key also has a lifetime.\
    \  The key\n   may not be used past the end of its lifetime.  The client's keys\
    \ are\n   initially distributed to the client through some out-of-band\n   mechanism.\
    \  The lifetime for each key is distributed with the key.\n   Mechanisms for key\
    \ distribution and lifetime specification are beyond\n   the scope of this document.\n\
    \   The client and server use one of the client's keys to authenticate\n   DHCP\
    \ messages during a session (until the next Solicit message sent\n   by the client).\n"
- title: 21.4.4. Client Considerations for Delayed Authentication Protocol
  contents:
  - "21.4.4. Client Considerations for Delayed Authentication Protocol\n   The client\
    \ announces its intention to use DHCP authentication by\n   including an Authentication\
    \ option in its Solicit message.  The\n   server selects a key for the client\
    \ based on the client's DUID.  The\n   client and server use that key to authenticate\
    \ all DHCP messages\n   exchanged during the session.\n"
- title: 21.4.4.1. Sending Solicit Messages
  contents:
  - "21.4.4.1. Sending Solicit Messages\n   When the client sends a Solicit message\
    \ and wishes to use\n   authentication, it includes an Authentication option with\
    \ the desired\n   protocol, algorithm and RDM as described in section 21.4.  The\
    \ client\n   does not include any replay detection or authentication information\n\
    \   in the Authentication option.\n"
- title: 21.4.4.2. Receiving Advertise Messages
  contents:
  - "21.4.4.2. Receiving Advertise Messages\n   The client validates any Advertise\
    \ messages containing an\n   Authentication option specifying the delayed authentication\
    \ protocol\n   using the validation test described in section 21.4.2.\n   Client\
    \ behavior, if no Advertise messages include authentication\n   information or\
    \ pass the validation test, is controlled by local\n   policy on the client. \
    \ According to client policy, the client MAY\n   choose to respond to an Advertise\
    \ message that has not been\n   authenticated.\n   The decision to set local policy\
    \ to accept unauthenticated messages\n   should be made with care.  Accepting\
    \ an unauthenticated Advertise\n   message can make the client vulnerable to spoofing\
    \ and other attacks.\n   If local users are not explicitly informed that the client\
    \ has\n   accepted an unauthenticated Advertise message, the users may\n   incorrectly\
    \ assume that the client has received an authenticated\n   address and is not\
    \ subject to DHCP attacks through unauthenticated\n   messages.\n   A client MUST\
    \ be configurable to discard unauthenticated messages,\n   and SHOULD be configured\
    \ by default to discard unauthenticated\n   messages if the client has been configured\
    \ with an authentication key\n   or other authentication information.  A client\
    \ MAY choose to\n   differentiate between Advertise messages with no authentication\n\
    \   information and Advertise messages that do not pass the validation\n   test;\
    \ for example, a client might accept the former and discard the\n   latter.  If\
    \ a client does accept an unauthenticated message, the\n   client SHOULD inform\
    \ any local users and SHOULD log the event.\n"
- title: 21.4.4.3. Sending Request, Confirm, Renew, Rebind, Decline or Release
  contents:
  - "21.4.4.3. Sending Request, Confirm, Renew, Rebind, Decline or Release\n     \
    \     Messages\n   If the client authenticated the Advertise message through which\
    \ the\n   client selected the server, the client MUST generate authentication\n\
    \   information for subsequent Request, Confirm, Renew, Rebind or Release\n  \
    \ messages sent to the server, as described in section 21.4.  When the\n   client\
    \ sends a subsequent message, it MUST use the same key used by\n   the server\
    \ to generate the authentication information.\n"
- title: 21.4.4.4. Sending Information-request Messages
  contents:
  - "21.4.4.4. Sending Information-request Messages\n   If the server has selected\
    \ a key for the client in a previous message\n   exchange (see section 21.4.5.1),\
    \ the client MUST use the same key to\n   generate the authentication information\
    \ throughout the session.\n"
- title: 21.4.4.5. Receiving Reply Messages
  contents:
  - "21.4.4.5. Receiving Reply Messages\n   If the client authenticated the Advertise\
    \ it accepted, the client\n   MUST validate the associated Reply message from\
    \ the server.  The\n   client MUST discard the Reply if the message fails to pass\
    \ the\n   validation test and MAY log the validation failure.  If the Reply\n\
    \   fails to pass the validation test, the client MUST restart the DHCP\n   configuration\
    \ process by sending a Solicit message.\n   If the client accepted an Advertise\
    \ message that did not include\n   authentication information or did not pass\
    \ the validation test, the\n   client MAY accept an unauthenticated Reply message\
    \ from the server.\n"
- title: 21.4.4.6. Receiving Reconfigure Messages
  contents:
  - "21.4.4.6. Receiving Reconfigure Messages\n   The client MUST discard the Reconfigure\
    \ if the message fails to pass\n   the validation test and MAY log the validation\
    \ failure.\n"
- title: 21.4.5. Server Considerations for Delayed Authentication Protocol
  contents:
  - "21.4.5. Server Considerations for Delayed Authentication Protocol\n   After receiving\
    \ a Solicit message that contains an Authentication\n   option, the server selects\
    \ a key for the client, based on the\n   client's DUID and key selection policies\
    \ with which the server has\n   been configured.  The server identifies the selected\
    \ key in the\n   Advertise message and uses the key to validate subsequent messages\n\
    \   between the client and the server.\n"
- title: 21.4.5.1. Receiving Solicit Messages and Sending Advertise Messages
  contents:
  - "21.4.5.1. Receiving Solicit Messages and Sending Advertise Messages\n   The server\
    \ selects a key for the client and includes authentication\n   information in\
    \ the Advertise message returned to the client as\n   specified in section 21.4.\
    \  The server MUST record the identifier of\n   the key selected for the client\
    \ and use that same key for validating\n   subsequent messages with the client.\n"
- title: 21.4.5.2. Receiving Request, Confirm, Renew, Rebind or Release Messages
  contents:
  - "21.4.5.2. Receiving Request, Confirm, Renew, Rebind or Release Messages\n   \
    \       and Sending Reply Messages\n   The server uses the key identified in the\
    \ message and validates the\n   message as specified in section 21.4.2.  If the\
    \ message fails to pass\n   the validation test or the server does not know the\
    \ key identified by\n   the 'key ID' field, the server MUST discard the message\
    \ and MAY\n   choose to log the validation failure.\n   If the message passes\
    \ the validation test, the server responds to the\n   specific message as described\
    \ in section 18.2.  The server MUST\n   include authentication information generated\
    \ using the key identified\n   in the received message, as specified in section\
    \ 21.4.\n"
- title: 21.5. Reconfigure Key Authentication Protocol
  contents:
  - "21.5. Reconfigure Key Authentication Protocol\n   The Reconfigure key authentication\
    \ protocol provides protection\n   against misconfiguration of a client caused\
    \ by a Reconfigure message\n   sent by a malicious DHCP server.  In this protocol,\
    \ a DHCP server\n   sends a Reconfigure Key to the client in the initial exchange\
    \ of DHCP\n   messages.  The client records the Reconfigure Key for use in\n \
    \  authenticating subsequent Reconfigure messages from that server.  The\n   server\
    \ then includes an HMAC computed from the Reconfigure Key in\n   subsequent Reconfigure\
    \ messages.\n   Both the Reconfigure Key sent from the server to the client and\
    \ the\n   HMAC in subsequent Reconfigure messages are carried as the\n   Authentication\
    \ information in an Authentication option.  The format\n   of the Authentication\
    \ information is defined in the following\n   section.\n   The Reconfigure Key\
    \ protocol is used (initiated by the server) only\n   if the client and server\
    \ are not using any other authentication\n   protocol and the client and server\
    \ have negotiated to use Reconfigure\n   messages.\n"
- title: 21.5.1. Use of the Authentication Option in the Reconfigure Key
  contents:
  - "21.5.1. Use of the Authentication Option in the Reconfigure Key\n        Authentication\
    \ Protocol\n   The following fields are set in an Authentication option for the\n\
    \   Reconfigure Key Authentication Protocol:\n      protocol    3\n      algorithm\
    \   1\n      RDM         0\n   The format of the Authentication information for\
    \ the Reconfigure Key\n   Authentication Protocol is:\n     0                \
    \   1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |                 Value (128 bits)              |\n    +-+-+-+-+-+-+-+-+\
    \                                               |\n    .                     \
    \                                          .\n    .                          \
    \                                     .\n    .                               \
    \                +-+-+-+-+-+-+-+-+\n    |                                    \
    \           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Type\
    \    Type of data in Value field carried in this option:\n                 1 \
    \  Reconfigure Key value (used in Reply message).\n                 2   HMAC-MD5\
    \ digest of the message (used in Reconfigure\n                     message).\n\
    \      Value   Data as defined by field.\n"
- title: 21.5.2. Server considerations for Reconfigure Key protocol
  contents:
  - "21.5.2. Server considerations for Reconfigure Key protocol\n   The server selects\
    \ a Reconfigure Key for a client during the\n   Request/Reply, Solicit/Reply or\
    \ Information-request/Reply message\n   exchange.  The server records the Reconfigure\
    \ Key and transmits that\n   key to the client in an Authentication option in\
    \ the Reply message.\n   The Reconfigure Key is 128 bits long, and MUST be a cryptographically\n\
    \   strong random or pseudo-random number that cannot easily be\n   predicted.\n\
    \   To provide authentication for a Reconfigure message, the server\n   selects\
    \ a replay detection value according to the RDM selected by the\n   server, and\
    \ computes an HMAC-MD5 of the Reconfigure message using the\n   Reconfigure Key\
    \ for the client.  The server computes the HMAC-MD5\n   over the entire DHCP Reconfigure\
    \ message, including the\n   Authentication option; the HMAC-MD5 field in the\
    \ Authentication\n   option is set to zero for the HMAC-MD5 computation.  The\
    \ server\n   includes the HMAC-MD5 in the authentication information field in\
    \ an\n   Authentication option included in the Reconfigure message sent to the\n\
    \   client.\n"
- title: 21.5.3. Client considerations for Reconfigure Key protocol
  contents:
  - "21.5.3. Client considerations for Reconfigure Key protocol\n   The client will\
    \ receive a Reconfigure Key from the server in the\n   initial Reply message from\
    \ the server.  The client records the\n   Reconfigure Key for use in authenticating\
    \ subsequent Reconfigure\n   messages.\n   To authenticate a Reconfigure message,\
    \ the client computes an\n   HMAC-MD5 over the DHCP Reconfigure message, using\
    \ the Reconfigure Key\n   received from the server.  If this computed HMAC-MD5\
    \ matches the\n   value in the Authentication option, the client accepts the\n\
    \   Reconfigure message.\n"
- title: 22. DHCP Options
  contents:
  - "22. DHCP Options\n   Options are used to carry additional information and parameters\
    \ in\n   DHCP messages.  Every option shares a common base format, as\n   described\
    \ in section 22.1.  All values in options are represented in\n   network byte\
    \ order.\n   This document describes the DHCP options defined as part of the base\n\
    \   DHCP specification.  Other options may be defined in the future in\n   separate\
    \ documents.\n   Unless otherwise noted, each option may appear only in the options\n\
    \   area of a DHCP message and may appear only once.  If an option does\n   appear\
    \ multiple times, each instance is considered separate and the\n   data areas\
    \ of the options MUST NOT be concatenated or otherwise\n   combined.\n"
- title: 22.1. Format of DHCP Options
  contents:
  - "22.1. Format of DHCP Options\n   The format of DHCP options is:\n       0   \
    \                1                   2                   3\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          option-code          |           option-len          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          option-data                          |\n      |   \
    \                   (option-len octets)                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code   An unsigned integer identifying the specific option\n   \
    \                 type carried in this option.\n      option-len    An unsigned\
    \ integer giving the length of the\n                    option-data field in this\
    \ option in octets.\n      option-data   The data for the option; the format of\
    \ this data\n                    depends on the definition of the option.\n  \
    \ DHCPv6 options are scoped by using encapsulation.  Some options apply\n   generally\
    \ to the client, some are specific to an IA, and some are\n   specific to the\
    \ addresses within an IA.  These latter two cases are\n   discussed in sections\
    \ 22.4 and 22.6.\n"
- title: 22.2. Client Identifier Option
  contents:
  - "22.2. Client Identifier Option\n   The Client Identifier option is used to carry\
    \ a DUID (see section 9)\n   identifying a client between a client and a server.\
    \  The format of\n   the Client Identifier option is:\n       0              \
    \     1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        OPTION_CLIENTID        |          option-len           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      .\
    \                                                               .\n      .   \
    \                           DUID                             .\n      .      \
    \                  (variable length)                      .\n      .         \
    \                                                      .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code   OPTION_CLIENTID (1).\n      option-len    Length of DUID\
    \ in octets.\n      DUID          The DUID for the client.\n"
- title: 22.3. Server Identifier Option
  contents:
  - "22.3. Server Identifier Option\n   The Server Identifier option is used to carry\
    \ a DUID (see section 9)\n   identifying a server between a client and a server.\
    \  The format of\n   the Server Identifier option is:\n       0              \
    \     1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        OPTION_SERVERID        |          option-len           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      .\
    \                                                               .\n      .   \
    \                           DUID                             .\n      .      \
    \                  (variable length)                      .\n      .         \
    \                                                      .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code   OPTION_SERVERID (2).\n      option-len    Length of DUID\
    \ in octets.\n      DUID          The DUID for the server.\n"
- title: 22.4. Identity Association for Non-temporary Addresses Option
  contents:
  - "22.4. Identity Association for Non-temporary Addresses Option\n   The Identity\
    \ Association for Non-temporary Addresses option (IA_NA\n   option) is used to\
    \ carry an IA_NA, the parameters associated with the\n   IA_NA, and the non-temporary\
    \ addresses associated with the IA_NA.\n   Addresses appearing in an IA_NA option\
    \ are not temporary addresses\n   (see section 22.5).\n   The format of the IA_NA\
    \ option is:\n       0                   1                   2               \
    \    3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |          OPTION_IA_NA         |          option-len           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        IAID (4 octets)                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                              T1                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                              T2                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      .   \
    \                      IA_NA-options                         .\n      .      \
    \                                                         .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_IA_NA (3).\n      option-len           12 +\
    \ length of IA_NA-options field.\n      IAID                 The unique identifier\
    \ for this IA_NA; the\n                           IAID must be unique among the\
    \ identifiers for\n                           all of this client's IA_NAs.  The\
    \ number\n                           space for IA_NA IAIDs is separate from the\n\
    \                           number space for IA_TA IAIDs.\n      T1          \
    \         The time at which the client contacts the\n                        \
    \   server from which the addresses in the IA_NA\n                           were\
    \ obtained to extend the lifetimes of the\n                           addresses\
    \ assigned to the IA_NA; T1 is a\n                           time duration relative\
    \ to the current time\n                           expressed in units of seconds.\n\
    \      T2                   The time at which the client contacts any\n      \
    \                     available server to extend the lifetimes of\n          \
    \                 the addresses assigned to the IA_NA; T2 is a\n             \
    \              time duration relative to the current time\n                  \
    \         expressed in units of seconds.\n      IA_NA-options        Options associated\
    \ with this IA_NA.\n   The IA_NA-options field encapsulates those options that\
    \ are specific\n   to this IA_NA.  For example, all of the IA Address Options\
    \ carrying\n   the addresses associated with this IA_NA are in the IA_NA-options\n\
    \   field.\n   An IA_NA option may only appear in the options area of a DHCP\n\
    \   message.  A DHCP message may contain multiple IA_NA options.\n   The status\
    \ of any operations involving this IA_NA is indicated in a\n   Status Code option\
    \ in the IA_NA-options field.\n   Note that an IA_NA has no explicit \"lifetime\"\
    \ or \"lease length\" of\n   its own.  When the valid lifetimes of all of the\
    \ addresses in an\n   IA_NA have expired, the IA_NA can be considered as having\
    \ expired.\n   T1 and T2 are included to give servers explicit control over when\
    \ a\n   client recontacts the server about a specific IA_NA.\n   In a message\
    \ sent by a client to a server, values in the T1 and T2\n   fields indicate the\
    \ client's preference for those parameters.  The\n   client sets T1 and T2 to\
    \ 0 if it has no preference for those values.\n   In a message sent by a server\
    \ to a client, the client MUST use the\n   values in the T1 and T2 fields for\
    \ the T1 and T2 parameters, unless\n   those values in those fields are 0.  The\
    \ values in the T1 and T2\n   fields are the number of seconds until T1 and T2.\n\
    \   The server selects the T1 and T2 times to allow the client to extend\n   the\
    \ lifetimes of any addresses in the IA_NA before the lifetimes\n   expire, even\
    \ if the server is unavailable for some short period of\n   time.  Recommended\
    \ values for T1 and T2 are .5 and .8 times the\n   shortest preferred lifetime\
    \ of the addresses in the IA that the\n   server is willing to extend, respectively.\
    \  If the \"shortest\"\n   preferred lifetime is 0xffffffff (\"infinity\"), the\
    \ recommended T1 and\n   T2 values are also 0xffffffff.  If the time at which\
    \ the addresses in\n   an IA_NA are to be renewed is to be left to the discretion\
    \ of the\n   client, the server sets T1 and T2 to 0.\n   If a server receives\
    \ an IA_NA with T1 greater than T2, and both T1\n   and T2 are greater than 0,\
    \ the server ignores the invalid values of\n   T1 and T2 and processes the IA_NA\
    \ as though the client had set T1 and\n   T2 to 0.\n   If a client receives an\
    \ IA_NA with T1 greater than T2, and both T1\n   and T2 are greater than 0, the\
    \ client discards the IA_NA option and\n   processes the remainder of the message\
    \ as though the server had not\n   included the invalid IA_NA option.\n   Care\
    \ should be taken in setting T1 or T2 to 0xffffffff (\"infinity\").\n   A client\
    \ will never attempt to extend the lifetimes of any addresses\n   in an IA with\
    \ T1 set to 0xffffffff.  A client will never attempt to\n   use a Rebind message\
    \ to locate a different server to extend the\n   lifetimes of any addresses in\
    \ an IA with T2 set to 0xffffffff.\n"
- title: 22.5. Identity Association for Temporary Addresses Option
  contents:
  - "22.5. Identity Association for Temporary Addresses Option\n   The Identity Association\
    \ for the Temporary Addresses (IA_TA) option\n   is used to carry an IA_TA, the\
    \ parameters associated with the IA_TA\n   and the addresses associated with the\
    \ IA_TA.  All of the addresses in\n   this option are used by the client as temporary\
    \ addresses, as defined\n   in RFC 3041 [12].  The format of the IA_TA option\
    \ is:\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \         OPTION_IA_TA          |          option-len           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        IAID (4 octets)                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      .   \
    \                      IA_TA-options                         .\n      .      \
    \                                                         .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_IA_TA (4).\n      option-len           4 +\
    \ length of IA_TA-options field.\n      IAID                 The unique identifier\
    \ for this IA_TA; the\n                           IAID must be unique among the\
    \ identifiers\n                           for all of this client's IA_TAs.  The\
    \ number\n                           space for IA_TA IAIDs is separate from the\n\
    \                           number space for IA_NA IAIDs.\n      IA_TA-options\
    \        Options associated with this IA_TA.\n   The IA_TA-Options field encapsulates\
    \ those options that are specific\n   to this IA_TA.  For example, all of the\
    \ IA Address Options carrying\n   the addresses associated with this IA_TA are\
    \ in the IA_TA-options\n   field.\n   Each IA_TA carries one \"set\" of temporary\
    \ addresses; that is, at most\n   one address from each prefix assigned to the\
    \ link to which the client\n   is attached.\n   An IA_TA option may only appear\
    \ in the options area of a DHCP\n   message.  A DHCP message may contain multiple\
    \ IA_TA options.\n   The status of any operations involving this IA_TA is indicated\
    \ in a\n   Status Code option in the IA_TA-options field.\n   Note that an IA\
    \ has no explicit \"lifetime\" or \"lease length\" of its\n   own.  When the valid\
    \ lifetimes of all of the addresses in an IA_TA\n   have expired, the IA can be\
    \ considered as having expired.\n   An IA_TA option does not include values for\
    \ T1 and T2.  A client MAY\n   request that the lifetimes on temporary addresses\
    \ be extended by\n   including the addresses in a IA_TA option sent in a Renew\
    \ or Rebind\n   message to a server.  For example, a client would request an\n\
    \   extension on the lifetime of a temporary address to allow an\n   application\
    \ to continue to use an established TCP connection.\n   The client obtains new\
    \ temporary addresses by sending an IA_TA option\n   with a new IAID to a server.\
    \  Requesting new temporary addresses from\n   the server is the equivalent of\
    \ generating new temporary addresses as\n   described in RFC 3041.  The server\
    \ will generate new temporary\n   addresses and return them to the client.  The\
    \ client should request\n   new temporary addresses before the lifetimes on the\
    \ previously\n   assigned addresses expire.\n   A server MUST return the same\
    \ set of temporary address for the same\n   IA_TA (as identified by the IAID)\
    \ as long as those addresses are\n   still valid.  After the lifetimes of the\
    \ addresses in an IA_TA have\n   expired, the IAID may be reused to identify a\
    \ new IA_TA with new\n   temporary addresses.\n   This option MAY appear in a\
    \ Confirm message if the lifetimes on the\n   temporary addresses in the associated\
    \ IA have not expired.\n"
- title: 22.6. IA Address Option
  contents:
  - "22.6. IA Address Option\n   The IA Address option is used to specify IPv6 addresses\
    \ associated\n   with an IA_NA or an IA_TA.  The IA Address option must be\n \
    \  encapsulated in the Options field of an IA_NA or IA_TA option.  The\n   Options\
    \ field encapsulates those options that are specific to this\n   address.\n  \
    \ The format of the IA Address option is:\n       0                   1      \
    \             2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          OPTION_IAADDR        |          option-len           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                      IPv6 address                          |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      preferred-lifetime                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                        valid-lifetime                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      .                                                               .\n   \
    \   .                        IAaddr-options                         .\n      .\
    \                                                               .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code   OPTION_IAADDR (5).\n      option-len    24 + length of IAaddr-options\
    \ field.\n      IPv6 address  An IPv6 address.\n      preferred-lifetime The preferred\
    \ lifetime for the IPv6 address in\n                    the option, expressed\
    \ in units of seconds.\n      valid-lifetime The valid lifetime for the IPv6 address\
    \ in the\n                    option, expressed in units of seconds.\n      IAaddr-options\
    \ Options associated with this address.\n   In a message sent by a client to a\
    \ server, values in the preferred\n   and valid lifetime fields indicate the client's\
    \ preference for those\n   parameters.  The client may send 0 if it has no preference\
    \ for the\n   preferred and valid lifetimes.  In a message sent by a server to\
    \ a\n   client, the client MUST use the values in the preferred and valid\n  \
    \ lifetime fields for the preferred and valid lifetimes.  The values in\n   the\
    \ preferred and valid lifetimes are the number of seconds remaining\n   in each\
    \ lifetime.\n   A client discards any addresses for which the preferred lifetime\
    \ is\n   greater than the valid lifetime.  A server ignores the lifetimes set\n\
    \   by the client if the preferred lifetime is greater than the valid\n   lifetime\
    \ and ignores the values for T1 and T2 set by the client if\n   those values are\
    \ greater than the preferred lifetime.\n   Care should be taken in setting the\
    \ valid lifetime of an address to\n   0xffffffff (\"infinity\"), which amounts\
    \ to a permanent assignment of\n   an address to a client.\n   An IA Address option\
    \ may appear only in an IA_NA option or an IA_TA\n   option.  More than one IA\
    \ Address Option can appear in an IA_NA\n   option or an IA_TA option.\n   The\
    \ status of any operations involving this IA Address is indicated\n   in a Status\
    \ Code option in the IAaddr-options field.\n"
- title: 22.7. Option Request Option
  contents:
  - "22.7. Option Request Option\n   The Option Request option is used to identify\
    \ a list of options in a\n   message between a client and a server.  The format\
    \ of the Option\n   Request option is:\n       0                   1         \
    \          2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           OPTION_ORO          |           option-len          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    requested-option-code-1    |    requested-option-code-2    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                              ...                              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      option-code\
    \   OPTION_ORO (6).\n      option-len    2 * number of requested options.\n  \
    \    requested-option-code-n The option code for an option requested by\n    \
    \                the client.\n   A client MAY include an Option Request option\
    \ in a Solicit, Request,\n   Renew, Rebind, Confirm or Information-request message\
    \ to inform the\n   server about options the client wants the server to send to\
    \ the\n   client.  A server MAY include an Option Request option in a\n   Reconfigure\
    \ option to indicate which options the client should\n   request from the server.\n"
- title: 22.8. Preference Option
  contents:
  - "22.8. Preference Option\n   The Preference option is sent by a server to a client\
    \ to affect the\n   selection of a server by the client.\n   The format of the\
    \ Preference option is:\n       0                   1                   2    \
    \               3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       OPTION_PREFERENCE       |          option-len           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  pref-value   |\n      +-+-+-+-+-+-+-+-+\n      option-code   OPTION_PREFERENCE\
    \ (7).\n      option-len    1.\n      pref-value    The preference value for the\
    \ server in this message.\n   A server MAY include a Preference option in an Advertise\
    \ message to\n   control the selection of a server by the client.  See section\
    \ 17.1.3\n   for the use of the Preference option by the client and the\n   interpretation\
    \ of Preference option data value.\n"
- title: 22.9. Elapsed Time Option
  contents:
  - "22.9. Elapsed Time Option\n       0                   1                   2 \
    \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      OPTION_ELAPSED_TIME      |           option-len          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          elapsed-time         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \     option-code   OPTION_ELAPSED_TIME (8).\n      option-len    2.\n      elapsed-time\
    \  The amount of time since the client began its\n                    current\
    \ DHCP transaction.  This time is expressed in\n                    hundredths\
    \ of a second (10^-2 seconds).\n   A client MUST include an Elapsed Time option\
    \ in messages to indicate\n   how long the client has been trying to complete\
    \ a DHCP message\n   exchange.  The elapsed time is measured from the time at\
    \ which the\n   client sent the first message in the message exchange, and the\n\
    \   elapsed-time field is set to 0 in the first message in the message\n   exchange.\
    \  Servers and Relay Agents use the data value in this option\n   as input to\
    \ policy controlling how a server responds to a client\n   message.  For example,\
    \ the elapsed time option allows a secondary\n   DHCP server to respond to a request\
    \ when a primary server has not\n   answered in a reasonable time.  The elapsed\
    \ time value is an\n   unsigned, 16 bit integer.  The client uses the value 0xffff\
    \ to\n   represent any elapsed time values greater than the largest time value\n\
    \   that can be represented in the Elapsed Time option.\n"
- title: 22.10. Relay Message Option
  contents:
  - "22.10. Relay Message Option\n   The Relay Message option carries a DHCP message\
    \ in a Relay-forward or\n   Relay-reply message.\n   The format of the Relay Message\
    \ option is:\n       0                   1                   2               \
    \    3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |        OPTION_RELAY_MSG       |           option-len          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   .                       DHCP-relay-message                      .\n      .\
    \                                                               .\n      .   \
    \                                                            .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code   OPTION_RELAY_MSG (9)\n      option-len    Length of DHCP-relay-message\n\
    \      DHCP-relay-message In a Relay-forward message, the received\n         \
    \           message, relayed verbatim to the next relay agent\n              \
    \      or server; in a Relay-reply message, the message to\n                 \
    \   be copied and relayed to the relay agent or client\n                    whose\
    \ address is in the peer-address field of the\n                    Relay-reply\
    \ message\n"
- title: 22.11. Authentication Option
  contents:
  - "22.11. Authentication Option\n   The Authentication option carries authentication\
    \ information to\n   authenticate the identity and contents of DHCP messages.\
    \  The use of\n   the Authentication option is described in section 21.  The format\
    \ of\n   the Authentication option is:\n     0                   1           \
    \        2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          OPTION_AUTH          |          option-len           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   protocol    |   algorithm   |      RDM      |               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               |\n    |                                                     \
    \          |\n    |          replay detection (64 bits)           +-+-+-+-+-+-+-+-+\n\
    \    |                                               |   auth-info   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               |\n    .                   authentication information        \
    \          .\n    .                       (variable length)                  \
    \     .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code                  OPTION_AUTH (11)\n      option-len       \
    \            11 + length of authentication\n                                 \
    \  information field\n      protocol                     The authentication protocol\
    \ used in\n                                   this authentication option\n   \
    \   algorithm                    The algorithm used in the\n                 \
    \                  authentication protocol\n      RDM                        \
    \  The replay detection method used in\n                                   this\
    \ authentication option\n      Replay detection             The replay detection\
    \ information for\n                                   the RDM\n      authentication\
    \ information   The authentication information,\n                            \
    \       as specified by the protocol and\n                                   algorithm\
    \ used in this authentication\n                                   option\n"
- title: 22.12. Server Unicast Option
  contents:
  - "22.12. Server Unicast Option\n   The server sends this option to a client to\
    \ indicate to the client\n   that it is allowed to unicast messages to the server.\
    \  The format of\n   the Server Unicast option is:\n     0                   1\
    \                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          OPTION_UNICAST       |        option-len             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                       server-address                          |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code     OPTION_UNICAST (12).\n      option-len      16.\n     \
    \ server-address  The IP address to which the client should send\n           \
    \           messages delivered using unicast.\n   The server specifies the IPv6\
    \ address to which the client is to send\n   unicast messages in the server-address\
    \ field.  When a client receives\n   this option, where permissible and appropriate,\
    \ the client sends\n   messages directly to the server using the IPv6 address\
    \ specified in\n   the server-address field of the option.\n   When the server\
    \ sends a Unicast option to the client, some messages\n   from the client will\
    \ not be relayed by Relay Agents, and will not\n   include Relay Agent options\
    \ from the Relay Agents.  Therefore, a\n   server should only send a Unicast option\
    \ to a client when Relay\n   Agents are not sending Relay Agent options.  A DHCP\
    \ server rejects\n   any messages sent inappropriately using unicast to ensure\
    \ that\n   messages are relayed by Relay Agents when Relay Agent options are in\n\
    \   use.\n   Details about when the client may send messages to the server using\n\
    \   unicast are in section 18.\n"
- title: 22.13. Status Code Option
  contents:
  - "22.13. Status Code Option\n   This option returns a status indication related\
    \ to the DHCP message\n   or option in which it appears.  The format of the Status\
    \ Code option\n   is:\n     0                   1                   2        \
    \           3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |       OPTION_STATUS_CODE      |         option-len            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          status-code          |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n    .                                     \
    \                          .\n    .                        status-message    \
    \                     .\n    .                                               \
    \                .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_STATUS_CODE (13).\n      option-len       \
    \    2 + length of status-message.\n      status-code          The numeric code\
    \ for the status encoded in\n                           this option.  The status\
    \ codes are defined in\n                           section 24.4.\n      status-message\
    \       A UTF-8 encoded text string suitable for\n                           display\
    \ to an end user, which MUST NOT be\n                           null-terminated.\n\
    \   A Status Code option may appear in the options field of a DHCP\n   message\
    \ and/or in the options field of another option.  If the Status\n   Code option\
    \ does not appear in a message in which the option could\n   appear, the status\
    \ of the message is assumed to be Success.\n"
- title: 22.14. Rapid Commit Option
  contents:
  - "22.14. Rapid Commit Option\n   The Rapid Commit option is used to signal the\
    \ use of the two message\n   exchange for address assignment.  The format of the\
    \ Rapid Commit\n   option is:\n     0                   1                   2\
    \                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      OPTION_RAPID_COMMIT      |               0               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code     OPTION_RAPID_COMMIT (14).\n      option-len      0.\n \
    \  A client MAY include this option in a Solicit message if the client\n   is\
    \ prepared to perform the Solicit-Reply message exchange described\n   in section\
    \ 17.1.1.\n   A server MUST include this option in a Reply message sent in response\n\
    \   to a Solicit message when completing the Solicit-Reply message\n   exchange.\n\
    \   DISCUSSION:\n      Each server that responds with a Reply to a Solicit that\
    \ includes\n      a Rapid Commit option will commit the assigned addresses in\
    \ the\n      Reply message to the client, and will not receive any confirmation\n\
    \      that the client has received the Reply message.  Therefore, if\n      more\
    \ than one server responds to a Solicit that includes a Rapid\n      Commit option,\
    \ some servers will commit addresses that are not\n      actually used by the\
    \ client.\n      The problem of unused addresses can be minimized, for example,\
    \ by\n      designing the DHCP service so that only one server responds to the\n\
    \      Solicit or by using relatively short lifetimes for assigned\n      addresses.\n"
- title: 22.15. User Class Option
  contents:
  - "22.15. User Class Option\n   The User Class option is used by a client to identify\
    \ the type or\n   category of user or applications it represents.\n   The format\
    \ of the User Class option is:\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       OPTION_USER_CLASS       |          option-len           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      .\
    \                                                               .\n      .   \
    \                       user-class-data                      .\n      .      \
    \                                                         .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_USER_CLASS (15).\n      option-len        \
    \   Length of user class data field.\n      user-class-data      The user classes\
    \ carried by the client.\n   The information contained in the data area of this\
    \ option is\n   contained in one or more opaque fields that represent the user\
    \ class\n   or classes of which the client is a member.  A server selects\n  \
    \ configuration information for the client based on the classes\n   identified\
    \ in this option.  For example, the User Class option can be\n   used to configure\
    \ all clients of people in the accounting department\n   with a different printer\
    \ than clients of people in the marketing\n   department.  The user class information\
    \ carried in this option MUST\n   be configurable on the client.\n   The data\
    \ area of the user class option MUST contain one or more\n   instances of user\
    \ class data.  Each instance of the user class data\n   is formatted as follows:\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+\n   \
    \   |        user-class-len         |          opaque-data          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+\n\
    \   The user-class-len is two octets long and specifies the length of the\n  \
    \ opaque user class data in network byte order.\n   A server interprets the classes\
    \ identified in this option according\n   to its configuration to select the appropriate\
    \ configuration\n   information for the client.  A server may use only those user\
    \ classes\n   that it is configured to interpret in selecting configuration\n\
    \   information for a client and ignore any other user classes.  In\n   response\
    \ to a message containing a User Class option, a server\n   includes a User Class\
    \ option containing those classes that were\n   successfully interpreted by the\
    \ server, so that the client can be\n   informed of the classes interpreted by\
    \ the server.\n"
- title: 22.16. Vendor Class Option
  contents:
  - "22.16. Vendor Class Option\n   This option is used by a client to identify the\
    \ vendor that\n   manufactured the hardware on which the client is running.  The\n\
    \   information contained in the data area of this option is contained in\n  \
    \ one or more opaque fields that identify details of the hardware\n   configuration.\
    \  The format of the Vendor Class option is:\n       0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      OPTION_VENDOR_CLASS      |           option-len          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       enterprise-number                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      .                                                               .\n   \
    \   .                       vendor-class-data                       .\n      .\
    \                             . . .                             .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_VENDOR_CLASS (16).\n      option-len      \
    \     4 + length of vendor class data field.\n      enterprise-number    The vendor's\
    \ registered Enterprise Number as\n                           registered with\
    \ IANA [6].\n      vendor-class-data    The hardware configuration of the host\
    \ on\n                           which the client is running.\n   The vendor-class-data\
    \ is composed of a series of separate items, each\n   of which describes some\
    \ characteristic of the client's hardware\n   configuration.  Examples of vendor-class-data\
    \ instances might include\n   the version of the operating system the client is\
    \ running or the\n   amount of memory installed on the client.\n   Each instance\
    \ of the vendor-class-data is formatted as follows:\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+\n\
    \      |       vendor-class-len        |          opaque-data          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+\n   The\
    \ vendor-class-len is two octets long and specifies the length of\n   the opaque\
    \ vendor class data in network byte order.\n"
- title: 22.17. Vendor-specific Information Option
  contents:
  - "22.17. Vendor-specific Information Option\n   This option is used by clients\
    \ and servers to exchange\n   vendor-specific information.\n   The format of the\
    \ Vendor-specific Information option is:\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      OPTION_VENDOR_OPTS       |           option-len          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       enterprise-number                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      .                                                               .\n   \
    \   .                          option-data                          .\n      .\
    \                                                               .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_VENDOR_OPTS (17)\n      option-len        \
    \   4 + length of option-data field\n      enterprise-number    The vendor's registered\
    \ Enterprise Number as\n                           registered with IANA [6].\n\
    \      option-data          An opaque object of option-len octets,\n         \
    \                  interpreted by vendor-specific code on the\n              \
    \             clients and servers\n   The definition of the information carried\
    \ in this option is vendor\n   specific.  The vendor is indicated in the enterprise-number\
    \ field.\n   Use of vendor-specific information allows enhanced operation,\n \
    \  utilizing additional features in a vendor's DHCP implementation.  A\n   DHCP\
    \ client that does not receive requested vendor-specific\n   information will\
    \ still configure the host device's IPv6 stack to be\n   functional.\n   The encapsulated\
    \ vendor-specific options field MUST be encoded as a\n   sequence of code/length/value\
    \ fields of identical format to the DHCP\n   options field.  The option codes\
    \ are defined by the vendor identified\n   in the enterprise-number field and\
    \ are not managed by IANA.  Each of\n   the encapsulated options is formatted\
    \ as follows:\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          opt-code             |             option-len        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      .\
    \                                                               .\n      .   \
    \                       option-data                          .\n      .      \
    \                                                         .\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      opt-code             The code for the encapsulated option.\n      option-len\
    \           An unsigned integer giving the length of the\n                   \
    \        option-data field in this encapsulated option\n                     \
    \      in octets.\n      option-data          The data area for the encapsulated\
    \ option.\n   Multiple instances of the Vendor-specific Information option may\n\
    \   appear in a DHCP message.  Each instance of the option is interpreted\n  \
    \ according to the option codes defined by the vendor identified by the\n   Enterprise\
    \ Number in that option.\n"
- title: 22.18. Interface-Id Option
  contents:
  - "22.18. Interface-Id Option\n   The relay agent MAY send the Interface-id option\
    \ to identify the\n   interface on which the client message was received.  If\
    \ a relay agent\n   receives a Relay-reply message with an Interface-id option,\
    \ the relay\n   agent relays the message to the client through the interface\n\
    \   identified by the option.\n   The format of the Interface ID option is:\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      OPTION_INTERFACE_ID      |         option-len            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    .                                                               .\n    .\
    \                         interface-id                          .\n    .     \
    \                                                          .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code          OPTION_INTERFACE_ID (18).\n      option-len      \
    \     Length of interface-id field.\n      interface-id         An opaque value\
    \ of arbitrary length generated\n                           by the relay agent\
    \ to identify one of the\n                           relay agent's interfaces.\n\
    \   The server MUST copy the Interface-Id option from the Relay-Forward\n   message\
    \ into the Relay-Reply message the server sends to the relay\n   agent in response\
    \ to the Relay-Forward message.  This option MUST NOT\n   appear in any message\
    \ except a Relay-Forward or Relay-Reply message.\n   Servers MAY use the Interface-ID\
    \ for parameter assignment policies.\n   The Interface-ID SHOULD be considered\
    \ an opaque value, with policies\n   based on exact match only; that is, the Interface-ID\
    \ SHOULD NOT be\n   internally parsed by the server.  The Interface-ID value for\
    \ an\n   interface SHOULD be stable and remain unchanged, for example, after\n\
    \   the relay agent is restarted; if the Interface-ID changes, a server\n   will\
    \ not be able to use it reliably in parameter assignment policies.\n"
- title: 22.19. Reconfigure Message Option
  contents:
  - "22.19. Reconfigure Message Option\n   A server includes a Reconfigure Message\
    \ option in a Reconfigure\n   message to indicate to the client whether the client\
    \ responds with a\n   Renew message or an Information-request message.  The format\
    \ of this\n   option is:\n     0                   1                   2     \
    \              3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      OPTION_RECONF_MSG        |         option-len            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |    msg-type   |\n    +-+-+-+-+-+-+-+-+\n      option-code          OPTION_RECONF_MSG\
    \ (19).\n      option-len           1.\n      msg-type             5 for Renew\
    \ message, 11 for\n                           Information-request message.\n \
    \  The Reconfigure Message option can only appear in a Reconfigure\n   message.\n"
- title: 22.20. Reconfigure Accept Option
  contents:
  - "22.20. Reconfigure Accept Option\n   A client uses the Reconfigure Accept option\
    \ to announce to the server\n   whether the client is willing to accept Reconfigure\
    \ messages, and a\n   server uses this option to tell the client whether or not\
    \ to accept\n   Reconfigure messages.  The default behavior, in the absence of\
    \ this\n   option, means unwillingness to accept Reconfigure messages, or\n  \
    \ instruction not to accept Reconfigure messages, for the client and\n   server\
    \ messages, respectively.  The following figure gives the format\n   of the Reconfigure\
    \ Accept option:\n     0                   1                   2             \
    \      3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \     OPTION_RECONF_ACCEPT      |               0               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      option-code   OPTION_RECONF_ACCEPT (20).\n      option-len    0.\n"
- title: 23. Security Considerations
  contents:
  - "23. Security Considerations\n   The threat to DHCP is inherently an insider threat\
    \ (assuming a\n   properly configured network where DHCPv6 ports are blocked on\
    \ the\n   perimeter gateways of the enterprise).  Regardless of the gateway\n\
    \   configuration, however, the potential attacks by insiders and\n   outsiders\
    \ are the same.\n   Use of manually configured preshared keys for IPsec between\
    \ relay\n   agents and servers does not defend against replayed DHCP messages.\n\
    \   Replayed messages can represent a DOS attack through exhaustion of\n   processing\
    \ resources, but not through mis-configuration or exhaustion\n   of other resources\
    \ such as assignable addresses.\n   One attack specific to a DHCP client is the\
    \ establishment of a\n   malicious server with the intent of providing incorrect\
    \ configuration\n   information to the client.  The motivation for doing so may\
    \ be to\n   mount a \"man in the middle\" attack that causes the client to\n \
    \  communicate with a malicious server instead of a valid server for\n   some\
    \ service such as DNS or NTP.  The malicious server may also mount\n   a denial\
    \ of service attack through misconfiguration of the client\n   that causes all\
    \ network communication from the client to fail.\n   There is another threat to\
    \ DHCP clients from mistakenly or\n   accidentally configured DHCP servers that\
    \ answer DHCP client requests\n   with unintentionally incorrect configuration\
    \ parameters.\n   A DHCP client may also be subject to attack through the receipt\
    \ of a\n   Reconfigure message from a malicious server that causes the client\
    \ to\n   obtain incorrect configuration information from that server.  Note\n\
    \   that although a client sends its response (Renew or\n   Information-request\
    \ message) through a relay agent and, therefore,\n   that response will only be\
    \ received by servers to which DHCP messages\n   are relayed, a malicious server\
    \ could send a Reconfigure message to a\n   client, followed (after an appropriate\
    \ delay) by a Reply message that\n   would be accepted by the client.  Thus, a\
    \ malicious server that is\n   not on the network path between the client and\
    \ the server may still\n   be able to mount a Reconfigure attack on a client.\
    \  The use of\n   transaction IDs that are cryptographically sound and cannot\
    \ easily be\n   predicted will also reduce the probability that such an attack\
    \ will\n   be successful.\n   The threat specific to a DHCP server is an invalid\
    \ client\n   masquerading as a valid client.  The motivation for this may be for\n\
    \   theft of service, or to circumvent auditing for any number of\n   nefarious\
    \ purposes.\n   The threat common to both the client and the server is the resource\n\
    \   \"denial of service\" (DoS) attack.  These attacks typically involve\n   the\
    \ exhaustion of available addresses, or the exhaustion of CPU or\n   network bandwidth,\
    \ and are present anytime there is a shared\n   resource.\n   In the case where\
    \ relay agents add additional options to Relay\n   Forward messages, the messages\
    \ exchanged between relay agents and\n   servers may be used to mount a \"man\
    \ in the middle\" or denial of\n   service attack.\n   This threat model does\
    \ not consider the privacy of the contents of\n   DHCP messages to be important.\
    \  DHCP is not used to exchange\n   authentication or configuration information\
    \ that must be kept secret\n   from other networks nodes.\n   DHCP authentication\
    \ provides for authentication of the identity of\n   DHCP clients and servers,\
    \ and for the integrity of messages delivered\n   between DHCP clients and servers.\
    \  DHCP authentication does not\n   provide any privacy for the contents of DHCP\
    \ messages.\n   The Delayed Authentication protocol described in section 21.4\
    \ uses a\n   secret key that is shared between a client and a server.  The use\
    \ of\n   a \"DHCP realm\" in the shared key allows identification of\n   administrative\
    \ domains so that a client can select the appropriate\n   key or keys when roaming\
    \ between administrative domains.  However,\n   the Delayed Authentication protocol\
    \ does not define any mechanism for\n   sharing of keys, so a client may require\
    \ separate keys for each\n   administrative domain it encounters.  The use of\
    \ shared keys may not\n   scale well and does not provide for repudiation of compromised\
    \ keys.\n   This protocol is focused on solving the intradomain problem where\
    \ the\n   out-of-band exchange of a shared key is feasible.\n   Because of the\
    \ opportunity for attack through the Reconfigure\n   message, a DHCP client MUST\
    \ discard any Reconfigure message that does\n   not include authentication or\
    \ that does not pass the validation\n   process for the authentication protocol.\n\
    \   The Reconfigure Key protocol described in section 21.5 provides\n   protection\
    \ against the use of a Reconfigure message by a malicious\n   DHCP server to mount\
    \ a denial of service or man-in-the-middle attack\n   on a client.  This protocol\
    \ can be compromised by an attacker that\n   can intercept the initial message\
    \ in which the DHCP server sends the\n   key to the client.\n   Communication\
    \ between a server and a relay agent, and communication\n   between relay agents,\
    \ can be secured through the use of IPSec, as\n   described in section 21.1. \
    \ The use of manual configuration and\n   installation of static keys are acceptable\
    \ in this instance because\n   relay agents and the server will belong to the\
    \ same administrative\n   domain and the relay agents will require other specific\
    \ configuration\n   (for example, configuration of the DHCP server address) as\
    \ well as\n   the IPSec configuration.\n"
- title: 24. IANA Considerations
  contents:
  - "24. IANA Considerations\n   This document defines several new name spaces associated\
    \ with DHCPv6\n   and DHCPv6 options:\n      -  Message types\n      -  Status\
    \ codes\n      -  DUID\n      -  Option codes\n   IANA has established a registry\
    \ of values for each of these name\n   spaces, which are described in the remainder\
    \ of this section.  These\n   name spaces will be managed by the IANA and all\
    \ will be managed\n   separately from the name spaces defined for DHCPv4.\n  \
    \ New multicast addresses, message types, status codes, and DUID types\n   are\
    \ assigned via Standards Action [11].\n   New DHCP option codes are tentatively\
    \ assigned after the\n   specification for the associated option, published as\
    \ an Internet\n   Draft, has received expert review by a designated expert [11].\
    \  The\n   final assignment of DHCP option codes is through Standards Action,\
    \ as\n   defined in RFC 2434 [11].\n   This document also references three name\
    \ spaces in section 21 that\n   are associated with the Authentication Option\
    \ (section 22.11).  These\n   name spaces are defined by the authentication mechanism\
    \ for DHCPv4 in\n   RFC 3118 [4].\n   The authentication name spaces currently\
    \ registered by IANA will\n   apply to both DHCPv6 and DHCPv4.  In the future,\
    \ specifications that\n   define new Protocol, Algorithm and RDM mechanisms will\
    \ explicitly\n   define whether the new mechanisms are used with DHCPv4, DHCPv6\
    \ or\n   both.\n"
- title: 24.1. Multicast Addresses
  contents:
  - "24.1. Multicast Addresses\n   Section 5.1 defines the following multicast addresses,\
    \ which have\n   been assigned by IANA for use by DHCPv6:\n      All_DHCP_Relay_Agents_and_Servers\
    \ address:   FF02::1:2\n      All_DHCP_Servers address:                    FF05::1:3\n"
- title: 24.2. DHCP Message Types
  contents:
  - "24.2. DHCP Message Types\n   IANA has recorded the following message types (defined\
    \ in section\n   5.3).  IANA will maintain the registry of DHCP message types.\n\
    \      SOLICIT               1\n      ADVERTISE             2\n      REQUEST \
    \              3\n      CONFIRM               4\n      RENEW                 5\n\
    \      REBIND                6\n      REPLY                 7\n      RELEASE \
    \              8\n      DECLINE               9\n      RECONFIGURE           10\n\
    \      INFORMATION-REQUEST   11\n      RELAY-FORW            12\n      RELAY-REPL\
    \            13\n"
- title: 24.3. DHCP Options
  contents:
  - "24.3. DHCP Options\n   IANA has recorded the following option-codes (as defined\
    \ in section\n   22).  IANA will maintain the registry of DHCP option codes.\n\
    \      OPTION_CLIENTID       1\n      OPTION_SERVERID       2\n      OPTION_IA_NA\
    \          3\n      OPTION_IA_TA          4\n      OPTION_IAADDR         5\n \
    \     OPTION_ORO            6\n      OPTION_PREFERENCE     7\n      OPTION_ELAPSED_TIME\
    \   8\n      OPTION_RELAY_MSG      9\n      OPTION_AUTH           11\n      OPTION_UNICAST\
    \        12\n      OPTION_STATUS_CODE    13\n      OPTION_RAPID_COMMIT   14\n\
    \      OPTION_USER_CLASS     15\n      OPTION_VENDOR_CLASS   16\n      OPTION_VENDOR_OPTS\
    \    17\n      OPTION_INTERFACE_ID   18\n      OPTION_RECONF_MSG     19\n    \
    \  OPTION_RECONF_ACCEPT  20\n"
- title: 24.4. Status Codes
  contents:
  - "24.4. Status Codes\n   IANA has recorded the status codes defined in the following\
    \ table.\n   IANA will manage the definition of additional status codes in the\n\
    \   future.\n   Name         Code Description\n   ----------   ---- -----------\n\
    \   Success         0 Success.\n   UnspecFail      1 Failure, reason unspecified;\
    \ this\n                     status code is sent by either a client\n        \
    \             or a server to indicate a failure\n                     not explicitly\
    \ specified in this\n                     document.\n   NoAddrsAvail    2 Server\
    \ has no addresses available to assign to\n                     the IA(s).\n \
    \  NoBinding       3 Client record (binding) unavailable.\n   NotOnLink      \
    \ 4 The prefix for the address is not appropriate for\n                     the\
    \ link to which the client is attached.\n   UseMulticast    5 Sent by a server\
    \ to a client to force the\n                     client to send messages to the\
    \ server.\n                     using the All_DHCP_Relay_Agents_and_Servers\n\
    \                     address.\n"
- title: 24.5. DUID
  contents:
  - "24.5. DUID\n   IANA has recorded the following DUID types (as defined in section\n\
    \   9.1).  IANA will manage the definition of additional DUID types in\n   the\
    \ future.\n      DUID-LLT                       1\n      DUID-EN             \
    \           2\n      DUID-LL                        3\n"
- title: 25. Acknowledgments
  contents:
  - "25. Acknowledgments\n   Thanks to the DHC Working Group and the members of the\
    \ IETF for their\n   time and input into the specification.  In particular, thanks\
    \ also\n   for the consistent input, ideas, and review by (in alphabetical\n \
    \  order) Bernard Aboba, Bill Arbaugh, Thirumalesh Bhat, Steve Bellovin,\n   A.\
    \ K. Vijayabhaskar, Brian Carpenter, Matt Crawford, Francis Dupont,\n   Richard\
    \ Hussong, Kim Kinnear, Fredrik Lindholm, Tony Lindstrom, Josh\n   Littlefield,\
    \ Gerald Maguire, Jack McCann, Shin Miyakawa, Thomas\n   Narten, Erik Nordmark,\
    \ Jarno Rajahalme, Yakov Rekhter, Mark Stapp,\n   Matt Thomas, Sue Thomson, Tatuya\
    \ Jinmei and Phil Wells.\n   Thanks to Steve Deering and Bob Hinden, who have\
    \ consistently taken\n   the time to discuss the more complex parts of the IPv6\n\
    \   specifications.\n   And, thanks to Steve Deering for pointing out at IETF\
    \ 51 in London\n   that the DHCPv6 specification has the highest revision number\
    \ of any\n   Internet Draft.\n"
- title: 26. References
  contents:
  - '26. References

    '
- title: 26.1. Normative References
  contents:
  - "26.1. Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Crawford, M., \"Transmission of IPv6 Packets over Ethernet\n        Networks\"\
    , RFC 2464, December 1998.\n   [3]  Deering, S. and R. Hinden, \"Internet Protocol,\
    \ Version 6 (IPv6)\n        Specification\", RFC 2460, December 1998.\n   [4]\
    \  Droms, R., Ed. and W. Arbaugh, Ed., \"Authentication for DHCP\n        Messages\"\
    , RFC 3118, June 2001.\n   [5]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \        Architecture\", RFC 2373, July 1998.\n   [6]  IANA.  Private Enterprise\
    \ Numbers.\n        http://www.iana.org/assignments/enterprise-numbers.html.\n\
    \   [7]  Kent, S. and R. Atkinson, \"Security Architecture for the\n        Internet\
    \ Protocol\", RFC 2401, November 1998.\n   [8]  Krawczyk, H., Bellare, M. and\
    \ R. Canetti, \"HMAC: Keyed-Hashing\n        for Message Authentication\", RFC\
    \ 2104, February 1997.\n   [9]  Mills, D., \"Network Time Protocol (Version 3)\
    \ Specification,\n        Implementation\", RFC 1305, March 1992.\n   [10] Mockapetris,\
    \ P., \"Domain names - implementation and\n        specification\", RFC 1035,\
    \ November 1987.\n   [11] Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an IANA\n        Considerations Section in RFCs\", BCP 26, RFC 2434, October\
    \ 1998.\n   [12] Narten, T. and R. Draves, \"Privacy Extensions for Stateless\n\
    \        Address Autoconfiguration in IPv6\", RFC 3041, January 2001.\n   [13]\
    \ Narten, T., Nordmark, E. and W. Simpson, \"Neighbor Discovery for\n        IP\
    \ Version 6 (IPv6)\", RFC 2461, December 1998.\n   [14] Plummer, D.C., \"Ethernet\
    \ Address Resolution Protocol:  Or\n        converting network protocol addresses\
    \ to 48.bit Ethernet address\n        for transmission on Ethernet hardware\"\
    , STD 37, RFC 826,\n        November 1982.\n   [15] Postel, J., \"User Datagram\
    \ Protocol\", STD 6, RFC 768, August\n        1980.\n   [16] Rivest, R., \"The\
    \ MD5 Message-Digest Algorithm\", RFC 1321, April\n        1992.\n   [17] Thomson,\
    \ S. and T. Narten, \"IPv6 Stateless Address\n        Autoconfiguration\", RFC\
    \ 2462, December 1998.\n"
- title: 26.2. Informative References
  contents:
  - "26.2. Informative References\n   [18] Alexander, S. and R. Droms, \"DHCP Options\
    \ and BOOTP Vendor\n        Extensions\", RFC 2132, March 1997.\n   [19] Droms,\
    \ R., \"Dynamic Host Configuration Protocol\", RFC 2131,\n        March 1997.\n\
    \   [20] R. Droms, Ed.  DNS Configuration options for DHCPv6.  April\n       \
    \ 2002.  Work in Progress.\n   [21] A. K. Vijayabhaskar.  Time Configuration Options\
    \ for DHCPv6.\n        May 2002.  Work in Progress.\n   [22] Vixie, P., Ed., Thomson,\
    \ S., Rekhter, Y. and J. Bound, \"Dynamic\n        Updates in the Domain Name\
    \ System (DNS UPDATE)\", RFC 2136, April\n        1997.\n"
- title: A. Appearance of Options in Message Types
  contents:
  - "A. Appearance of Options in Message Types\n   The following table indicates with\
    \ a \"*\" the options are allowed in\n   each DHCP message type:\n           Client\
    \ Server IA_NA  Option Pref  Time Relay Auth. Server\n             ID     ID \
    \  IA_TA  Request            Msg.       Unica.\n   Solicit   *             * \
    \     *           *           *\n   Advert.   *      *      *            *   \
    \              *\n   Request   *      *      *      *           *           *\n\
    \   Confirm   *             *      *           *           *\n   Renew     * \
    \     *      *      *           *           *\n   Rebind    *             *  \
    \    *           *           *\n   Decline   *      *      *      *          \
    \ *           *\n   Release   *      *      *      *           *           *\n\
    \   Reply     *      *      *            *                 *     *\n   Reconf.\
    \   *      *             *                       *\n   Inform.   * (see note)\
    \         *           *           *\n   R-forw.                              \
    \            *     *\n   R-repl.                                          *  \
    \   *\n   NOTE:\n      Only included in Information-Request messages that are\
    \ sent\n      in response to a Reconfigure (see section 19.4.3).\n           \
    \ Status  Rap. User  Vendor Vendor Inter. Recon. Recon.\n             Code  Comm.\
    \ Class Class  Spec.    ID    Msg.  Accept\n   Solicit           *     *     *\
    \      *                    *\n   Advert.    *            *     *      *     \
    \               *\n   Request                 *     *      *                 \
    \   *\n   Confirm                 *     *      *\n   Renew                   *\
    \     *      *                    *\n   Rebind                  *     *      *\
    \                    *\n   Decline                 *     *      *\n   Release\
    \                 *     *      *\n   Reply      *      *     *     *      *  \
    \                  *\n   Reconf.                                            *\n\
    \   Inform.                 *     *      *                    *\n   R-forw.  \
    \               *     *      *      *\n   R-repl.                 *     *    \
    \  *      *\n"
- title: B. Appearance of Options in the Options Field of DHCP Options
  contents:
  - "B. Appearance of Options in the Options Field of DHCP Options\n   The following\
    \ table indicates with a \"*\" where options can appear in\n   the options field\
    \ of other options:\n                Option  IA_NA/ IAADDR Relay  Relay\n    \
    \            Field   IA_TA         Forw.  Reply\n   Client ID      *\n   Server\
    \ ID      *\n   IA_NA/IA_TA    *\n   IAADDR                 *\n   ORO        \
    \    *\n   Preference     *\n   Elapsed Time   *\n   Relay Message           \
    \             *      *\n   Authentic.     *\n   Server Uni.    *\n   Status Code\
    \    *       *       *\n   Rapid Comm.    *\n   User Class     *\n   Vendor Class\
    \   *\n   Vendor Info.   *\n   Interf. ID                           *      *\n\
    \   Reconf. MSG.   *\n   Reconf. Accept *\n   Note: \"Relay Forw\" / \"Relay Reply\"\
    \ options appear in the options\n   field of the message but may only appear in\
    \ these messages.\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \   Ralph Droms\n   Cisco Systems\n   1414 Massachusetts Avenue\n   Boxborough,\
    \ MA 01719\n   Phone: (978) 936-1674\n   EMail: rdroms@cisco.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jim Bound\n   Hewlett Packard Corporation\n   ZK3-3/W20\n\
    \   110 Spit Brook Road\n   Nashua, NH 03062-2698\n   USA\n   Phone:  +1 603 884\
    \ 0062\n   EMail:  Jim.Bound@hp.com\n   Bernie Volz\n   116 Hawkins Pond Road\n\
    \   Center Harbor, NH  03226-3103\n   USA\n   Phone:  +1-508-259-3734\n   EMail:\
    \  volz@metrocast.net\n   Ted Lemon\n   Nominum, Inc.\n   950 Charter Street\n\
    \   Redwood City, CA 94043\n   USA\n   EMail:  Ted.Lemon@nominum.com\n   Charles\
    \ E. Perkins\n   Communications Systems Lab\n   Nokia Research Center\n   313\
    \ Fairchild Drive\n   Mountain View, California 94043\n   USA\n   Phone:  +1-650\
    \ 625-2986\n   EMail:  charles.perkins@nokia.com\n   Mike Carney\n   Sun Microsystems,\
    \ Inc\n   17 Network Circle\n   Menlo Park, CA 94025\n   USA\n   Phone:  +1-650-786-4171\n\
    \   EMail:  michael.carney@sun.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
