- contents:
  - '               Connection of IPv6 Domains via IPv4 Clouds

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo specifies an optional interim mechanism for IPv6 sites
    to\n   communicate with each other over the IPv4 network without explicit\n   tunnel
    setup, and for them to communicate with native IPv6 domains\n   via relay routers.
    \ Effectively it treats the wide area IPv4 network\n   as a unicast point-to-point
    link layer.  The mechanism is intended as\n   a start-up transition tool used
    during the period of co-existence of\n   IPv4 and IPv6.  It is not intended as
    a permanent solution.\n   The document defines a method for assigning an interim
    unique IPv6\n   address prefix to any site that currently has at least one globally\n
    \  unique IPv4 address, and specifies an encapsulation mechanism for\n   transmitting
    IPv6 packets using such a prefix over the global IPv4\n   network.\n   The motivation
    for this method is to allow isolated IPv6 domains or\n   hosts, attached to an
    IPv4 network which has no native IPv6 support,\n   to communicate with other such
    IPv6 domains or hosts with minimal\n   manual configuration, before they can obtain
    natuve IPv6\n   connectivity.  It incidentally provides an interim globally unique\n
    \  IPv6 address prefix to any site with at least one globally unique\n   IPv4
    address, even if combined with an IPv4 Network Address\n   Translator (NAT).\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction.................................................
    2\n   1.1. Terminology................................................ 4\n   2.
    IPv6 Prefix Allocation....................................... 5\n   2.1 Address
    Selection........................................... 6\n   3. Encapsulation in
    IPv4........................................ 6\n   3.1. Link-Local Address and
    NUD................................. 7\n   4. Maximum Transmission Unit....................................
    7\n   5. Unicast scenarios, scaling, and transition to normal prefixes 8\n   5.1
    Simple scenario - all sites work the same................... 8\n   5.2 Mixed scenario
    with relay to native IPv6...................  9\n   5.2.1 Variant scenario with
    ISP relay.......................... 12\n   5.2.2 Summary of relay router configuration....................
    12\n   5.2.2.1. BGP4+ not used........................................ 12\n   5.2.2.2.
    BGP4+ used............................................ 12\n   5.2.2.3. Relay router
    scaling.................................. 13\n   5.2.3 Unwilling to relay.......................................
    13\n   5.3 Sending and decapsulation rules............................ 13\n   5.4
    Variant scenario with tunnel to IPv6 space................. 14\n   5.5 Fragmented
    Scenarios....................................... 14\n   5.6 Multihoming................................................
    16\n   5.7 Transition Considerations.................................. 16\n   5.8
    Coexistence with firewall, NAT or RSIP..................... 16\n   5.9 Usage within
    Intranets..................................... 17\n   5.10 Summary of impact on
    routing.............................. 18\n   5.11. Routing loop prevention..................................
    18\n   6. Multicast and Anycast....................................... 19\n   7.
    ICMP messages............................................... 19\n   8. IANA Considerations.........................................
    19\n   9. Security Considerations..................................... 19\n   Acknowledgements...............................................
    20\n   References..................................................... 20\n   Authors'
    Addresses............................................. 22\n   Intellectual Property..........................................
    22\n   Full Copyright Statement....................................... 23\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   This memo specifies an optional interim mechanism for IPv6
    sites to\n   communicate with each other over the IPv4 network without explicit\n
    \  tunnel setup, and for them to communicate with native IPv6 domains\n   via
    relay routers.  Effectively it treats the wide area IPv4 network\n   as a unicast
    point-to-point link layer.  The mechanism is intended as\n   a start-up transition
    tool used during the period of co-existence of\n   IPv4 and IPv6.  It is not intended
    as a permanent solution.\n   The document defines a method for assigning an interim
    unique IPv6\n   address prefix to any site that currently has at least one globally\n
    \  unique IPv4 address, and specifies an encapsulation mechanism for\n   transmitting
    IPv6 packets using such a prefix over the global IPv4\n   network.  It also describes
    scenarios for using such prefixes during\n   the co-existence phase of IPv4 to
    IPv6 transition.  Note that these\n   scenarios are only part of the total picture
    of transition to IPv6.\n   Also note that this is considered to be an interim
    solution and that\n   sites should migrate when possible to native IPv6 prefixes
    and native\n   IPv6 connectivity.  This will be possible as soon as the site's
    ISP\n   offers native IPv6 connectivity.\n   The basic mechanism described in
    the present document, which applies\n   to sites rather than individual hosts,
    will scale indefinitely by\n   limiting the number of sites served by a given
    relay router (see\n   Section 5.2).  It will introduce no new entries in the IPv4
    routing\n   table, and exactly one new entry in the native IPv6 routing table\n
    \  (see Section 5.10).\n   Although the mechanism is specified for an IPv6 site,
    it can equally\n   be applied to an individual IPv6 host or very small site, as
    long as\n   it has at least one globally unique IPv4 address.  However, the\n
    \  latter case raises serious scaling issues which are the subject of\n   further
    study [SCALE].\n   The motivation for this method is to allow isolated IPv6 sites
    or\n   hosts, attached to a wide area network which has no native IPv6\n   support,
    to communicate with other such IPv6 domains or hosts with\n   minimal manual configuration.\n
    \  IPv6 sites or hosts connected using this method do not require IPv4-\n   compatible
    IPv6 addresses [MECH] or configured tunnels.  In this way\n   IPv6 gains considerable
    independence of the underlying wide area\n   network and can step over many hops
    of IPv4 subnets.  The abbreviated\n   name of this mechanism is 6to4 (not to be
    confused with [6OVER4]).\n   The 6to4 mechanism is typically implemented almost
    entirely in border\n   routers, without specific host modifications except a suggested\n
    \  address selection default.  Only a modest amount of router\n   configuration
    is required.\n   Sections 2 to 4 of this document specify the 6to4 scheme technically.\n
    \  Section 5 discusses some, but not all, usage scenarios, including\n   routing
    aspects, for 6to4 sites.  Scenarios for isolated 6to4 hosts\n   are not discussed
    in this document.  Sections 6 to 9 discuss other\n   general considerations.\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n
    \  document are to be interpreted as described in [RFC2119].\n"
  - contents:
    - "1.1. Terminology\n   The terminology of [IPV6] applies to this document.\n
      \  6to4 pseudo-interface:\n         6to4 encapsulation of IPv6 packets inside
      IPv4 packets occurs\n         at a point that is logically equivalent to an
      IPv6 interface,\n         with the link layer being the IPv4 unicast network.
      \ This point\n         is referred to as a pseudo-interface.  Some implementors
      may\n         treat it exactly like any other interface and others may treat\n
      \        it like a tunnel end-point.\n   6to4 prefix:\n         an IPv6 prefix
      constructed according to the rule in Section 2\n         below.\n   6to4 address:
      \ an IPv6 address constructed using a 6to4 prefix.\n   Native IPv6 address:
      \ an IPv6 address constructed using another type\n         of prefix than 6to4.\n
      \  6to4 router (or 6to4 border router):\n         an IPv6 router supporting
      a 6to4 pseudo-interface.  It is\n         normally the border router between
      an IPv6 site and a wide-area\n         IPv4 network.\n   6to4 host:\n         an
      IPv6 host which happens to have at least one 6to4 address.\n         In all
      other respects it is a standard IPv6 host.\n   Note: an IPv6 node may in some
      cases use a 6to4 address for a\n   configured tunnel.  Such a node may function
      as an IPv6 host using a\n   6to4 address on its configured tunnel interface,
      and it may also\n   serve as a IPv6 router for other hosts via a 6to4 pseudo-interface,\n
      \  but these are distinct functions.\n   6to4 site:\n         a site running
      IPv6 internally using 6to4 addresses, therefore\n         containing at least
      one 6to4 host and at least one 6to4 router.\n   Relay router:\n         a 6to4
      router configured to support transit routing between\n         6to4 addresses
      and native IPv6 addresses.\n   6to4 exterior routing domain:\n         a routing
      domain interconnecting a set of 6to4 routers and\n         relay routers.  It
      is distinct from an IPv6 site's interior\n         routing domain, and distinct
      from all native IPv6 exterior\n         routing domains.\n"
    title: 1.1. Terminology
  title: 1. Introduction
- contents:
  - "2. IPv6 Prefix Allocation\n   Suppose that a subscriber site has at least one
    valid, globally\n   unique 32-bit IPv4 address, referred to in this document as
    V4ADDR.\n   This address MUST be duly allocated to the site by an address\n   registry
    (possibly via a service provider) and it MUST NOT be a\n   private address [RFC
    1918].\n   The IANA has permanently assigned one 13-bit IPv6 Top Level\n   Aggregator
    (TLA) identifier under the IPv6 Format Prefix 001 [AARCH,\n   AGGR] for the 6to4
    scheme.Its numeric value is 0x0002, i.e., it is\n   2002::/16 when expressed as
    an IPv6 address prefix.\n   The subscriber site is then deemed to have the following
    IPv6 address\n   prefix, without any further assignment procedures being necessary:\n
    \     Prefix length: 48 bits\n      Format prefix: 001\n      TLA value: 0x0002\n
    \     NLA value: V4ADDR\n   This is illustrated as follows:\n     | 3 |  13  |
    \   32     |   16   |          64 bits               |\n     +---+------+-----------+--------+--------------------------------+\n
    \    |FP | TLA  | V4ADDR    | SLA ID |         Interface ID           |\n     |001|0x0002|
    \          |        |                                |\n     +---+------+-----------+--------+--------------------------------+\n
    \  Thus, this prefix has exactly the same format as normal /48 prefixes\n   assigned
    according to [AGGR].  It can be abbreviated as\n   2002:V4ADDR::/48.  Within the
    subscriber site it can be used exactly\n   like any other valid IPv6 prefix, e.g.,
    for automated address\n   assignment and discovery according to the normal mechanisms
    such as\n   [CONF, DISC], for native IPv6 routing, or for the \"6over4\" mechanism\n
    \  [6OVER4].\n   Note that if the IPv4 address is assigned dynamically, the\n
    \  corresponding IPv6 prefix will also be dynamic in nature, with the\n   same
    lifetime.\n"
  - contents:
    - "2.1 Address Selection\n   To ensure the correct operation of 6to4 in complex
      topologies, source\n   and destination address selection must be appropriately
      implemented.\n   If the source IPv6 host sending a packet has at least one 2002::\n
      \  address assigned to it, and if the set of IPv6 addresses returned by\n   the
      DNS for the destination host contains at least one 2002::\n   address, then
      the source host must make an appropriate choice of the\n   source and destination
      addresses to be used.  The mechanisms for\n   address selection in general are
      under study at the time of writing\n   [SELECT].  Subject to those general mechanisms,
      the principle that\n   will normally allow correct operation of 6to4 is this:\n
      \  If one host has only a 6to4 address, and the other one has both a\n   6to4
      and a native IPv6 address, then the 6to4 address should be used\n   for both.\n
      \  If both hosts have a 6to4 address and a native IPv6 address, then\n   either
      the 6to4 address should be used for both, or the native IPv6\n   address should
      be used for both.  The choice should be configurable.\n   The default configuration
      should be native IPv6 for both.\n"
    title: 2.1 Address Selection
  title: 2. IPv6 Prefix Allocation
- contents:
  - "3. Encapsulation in IPv4\n   IPv6 packets from a 6to4 site are encapsulated in
    IPv4 packets when\n   they leave the site via its external IPv4 connection.  Note
    that the\n   IPv4 interface that is carrying the 6to4 traffic is notionally\n
    \  equivalent to an IPv6 interface, and is referred to below as a\n   pseudo-interface,
    although this phrase is not intended to define an\n   implementation technique.
    \ V4ADDR MUST be configured on the IPv4\n   interface.\n   IPv6 packets are transmitted
    in IPv4 packets [RFC 791] with an IPv4\n   protocol type of 41, the same as has
    been assigned [MECH] for IPv6\n   packets that are tunneled inside of IPv4 frames.
    \ The IPv4 header\n   contains the Destination and Source IPv4 addresses.  One
    or both of\n   these will be identical to the V4ADDR field of an IPv6 prefix formed\n
    \  as specified above (see section 5 for more details).  The IPv4 packet\n   body
    contains the IPv6 header and payload.\n      0                   1                   2
    \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |Version|  IHL  |Type of Service|          Total Length         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |         Identification        |Flags|      Fragment Offset    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |  Time to Live | Protocol 41   |         Header Checksum       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |                       Source Address                          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |                    Destination Address                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |                    Options                    |    Padding    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |            IPv6 header and payload ...              /\n     +-------+-------+-------+-------+-------+------+------+\n
    \  The IPv4 Time to Live will be set as normal [RFC 791], as will the\n   encapsulated
    IPv6 hop limit [IPv6].  Other considerations are as\n   described in Section 4.1.2
    of [MECH].\n"
  - contents:
    - "3.1. Link-Local Address and NUD\n   The link-local address of a 6to4 pseudo-interface
      performing 6to4\n   encapsulation would, if needed, be formed as described in
      Section 3.7\n   of [MECH].  However, no scenario is known in which such an address\n
      \  would be useful, since a peer 6to4 gateway cannot determine the\n   appropriate
      link-layer (IPv4) address to send to.\n   Neighbor Unreachability Detection
      (NUD) is handled as described in\n   Section 3.8 of [MECH].\n"
    title: 3.1. Link-Local Address and NUD
  title: 3. Encapsulation in IPv4
- contents:
  - "4. Maximum Transmission Unit\n   MTU size considerations are as described for
    tunnels in [MECH].\n   If the IPv6 MTU size proves to be too large for some intermediate\n
    \  IPv4 subnet, IPv4 fragmentation will ensue.  While undesirable, this\n   is
    not necessarily disastrous, unless the fragments are delivered to\n   different
    IPv4 destinations due to some form of IPv4 anycast.  The\n   IPv4 \"do not fragment\"
    bit SHOULD NOT be set in the encapsulating\n   IPv4 header.\n"
  title: 4. Maximum Transmission Unit
- contents:
  - '5. Unicast scenarios, scaling, and transition to normal prefixes

    '
  - contents:
    - "5.1 Simple scenario - all sites work the same\n   The simplest deployment scenario
      for 6to4 is to use it between a\n   number of sites, each of which has at least
      one connection to a\n   shared IPv4 Internet.  This could be the global Internet,
      or it could\n   be a corporate IP network.  In the case of the global Internet,
      there\n   is no requirement that the sites all connect to the same Internet\n
      \  service provider.  The only requirement is that any of the sites is\n   able
      to send IPv4 packets with protocol type 41 to any of the others.\n   By definition,
      each site has an IPv6 prefix in the format defined in\n   Section 2.  It will
      therefore create DNS records for these addresses.\n   For example, site A which
      owns IPv4 address 192.1.2.3 will create DNS\n   records with the IPv6 prefix
      {FP=001,TLA=0x0002,NLA=192.1.2.3}/48\n   (i.e., 2002:c001:0203::/48).  Site
      B which owns address 9.254.253.252\n   will create DNS records with the IPv6
      prefix\n   {FP=001,TLA=0x0002,NLA=9.254.253.252}/48 (i.e., 2002:09fe:fdfc::/48).\n
      \  When an IPv6 host on site B queries the DNS entry for a host on site\n   A,
      or otherwise obtains its address, it obtains an address with the\n   prefix
      {FP=001,TLA=0x0002,NLA=192.1.2.3}/48 and whatever SLA and\n   Interface ID applies.
      \ The converse applies when a host on site A\n   queries the DNS for a host
      on site B.  IPv6 packets are formed and\n   transmitted in the normal way within
      both sites.\n                            _______________________________\n                           |
      \                              |\n                           |  Wide Area IPv4
      Network       |\n                           |_______________________________|\n
      \                                 /                    \\\n                        192.1.2.3/
      \        9.254.253.252\\\n _______________________________/_   ____________________\\____________\n"
    - '|                              /  | |                     \           |

      '
    - '|IPv4 Site A          ##########  | |IPv4 Site B          ##########  |

      '
    - '| ____________________# 6to4   #_ | | ____________________# 6to4   #_ |

      '
    - '||                    # router # || ||                    # router # ||

      '
    - '||IPv6 Site A         ########## || ||IPv6 Site B         ########## ||

      '
    - '||2002:c001:0203::/48            || ||2002:09fe:fdfc::/48            ||

      '
    - '||_______________________________|| ||_______________________________||

      '
    - '|                                 | |                                 |

      '
    - "|_________________________________| |_________________________________|\n   Within
      a 6to4 site, addresses with the 2002::/16 prefix, apart from\n   those with
      the local 2002:V4ADDR::/48 prefix, will be handled like\n   any other non-local
      IPv6 address, i.e., by a default or explicit\n   route towards the 6to4 border
      router.\n   When an outgoing packet reaches the 6to4 router, it is encapsulated\n
      \  as defined in Section 3, according to the additional sending rule\n   defined
      in Section 5.3.  Incoming packets are decapsulated according\n   to the additional
      decapsulation rule defined in Section 5.3.  The\n   additional sending and decapsulation
      rules are the only changes to\n   IPv6 forwarding, and they occur only at border
      routers.  No IPv4\n   routing information is imported into IPv6 routing (nor
      vice versa).\n   In this scenario, any number of 6to4 sites can interoperate
      with no\n   tunnel configuration, and no special requirements from the IPv4\n
      \  service.  All that is required is the appropriate DNS entries and the\n   additional
      sending and decapsulation rules configured in the 6to4\n   router.  This router
      SHOULD also generate the appropriate IPv6 prefix\n   announcements [CONF, DISC].\n
      \  Although site A and site B will each need to run IPv6 routing\n   internally,
      they do not need to run an IPv6 exterior routing protocol\n   in this simple
      scenario; IPv4 exterior routing does the job for them.\n   It is RECOMMENDED
      that in any case each site should use only one IPv4\n   address per 6to4 router,
      and that should be the address assigned to\n   the external interface of the
      6to4 router.  Single-homed sites\n   therefore SHOULD use only one IPv4 address
      for 6to4 routing.  Multi-\n   homed sites are discussed briefly in section 5.6.\n
      \  Because of the lack of configuration, and the distributed deployment\n   model,
      there are believed to be no particular scaling issues with the\n   basic 6to4
      mechanism apart from encapsulation overhead.\n   Specifically, it introduces
      no new entries in IPv4 routing tables.\n"
    title: 5.1 Simple scenario - all sites work the same
  - contents:
    - "5.2 Mixed scenario with relay to native IPv6\n   During the transition to IPv6
      we can expect some sites to fit the\n   model just described (isolated sites
      whose only connectivity is the\n   IPv4 Internet), whereas others will be part
      of larger islands of\n   native or tunneled IPv6 using normal IPv6 TLA address
      space.  The\n   6to4 sites will need connectivity to these native IPv6 islands
      and\n   vice versa.  In the 6to4 model, this connectivity is accomplished by\n
      \  IPv6 routers which possess both 6to4 and native IPv6 addresses.\n   Although
      they behave essentially as standard IPv6 routers, for the\n   purposes of this
      document they are referred to as relay routers to\n   distinguish them from
      routers supporting only 6to4, or only native\n   IPv6.\n   There must be at
      least one router acting as a relay between the 6to4\n   domain and a given native
      IPv6 domain.  There is nothing special\n   about it; it is simply a normal router
      which happens to have at least\n   one logical 6to4 pseudo-interface and at
      least one other IPv6\n   interface.  Since it is a 6to4 router, it implements
      the additional\n   sending and decapsulation rules defined in Section 5.3.\n
      \  We now have three distinct classes of routing domain to consider:\n      1.
      \ the internal IPv6 routing domain of each 6to4 site;\n      2.  an exterior
      IPv6 routing domain interconnecting\n          a given set of 6to4 border routers,
      including relay routers,\n          among themselves, i.e., a 6to4 exterior
      routing domain;\n      3.  the exterior IPv6 routing domain of each native IPv6
      island.\n   1. The internal routing domain of a 6to4 site behaves as described
      in\n   section 5.1.\n   2. There are two deployment options for a 6to4 exterior
      routing\n   domain:\n   2.1 No IPv6 exterior routing protocol is used.  The
      6to4 routers\n   using a given relay router each have a default IPv6 route pointing
      to\n   the relay router.  The relay router MAY apply source address based\n
      \  filters to accept traffic only from  specific 6to4 routers.\n   2.2 An IPv6
      exterior routing protocol is used.  The set of 6to4\n   routers using a given
      relay router obtain native IPv6 routes from the\n   relay router using a routing
      protocol such as BGP4+ [RFC 2283,\n   BGP4+].  The relay router will advertise
      whatever native IPv6 routing\n   prefixes are appropriate on its 6to4 pseudo-interface.
      \ These\n   prefixes will indicate the regions of native IPv6 topology that
      the\n   relay router is willing to relay to.  Their choice is a matter of\n
      \  routing policy.  It is necessary for network operators to carefully\n   consider
      desirable traffic patterns and topology when choosing the\n   scope of such
      routing advertisements.  The relay router will\n   establish BGP peering only
      with specific 6to4 routers whose traffic\n   it is willing to accept.\n   Although
      this solution is more complex, it provides effective policy\n   control, i.e.,
      BGP4+ policy determines which 6to4 routers are able to\n   use which relay router.\n
      \  3. A relay router MUST advertise a route to 2002::/16 into the native\n   IPv6
      exterior routing domain.  It is a matter of routing policy how\n   far this
      routing advertisement of 2002::/16 is propagated in the\n   native IPv6 routing
      system.  Since there will in general be multiple\n   relay routers advertising
      it, network operators will require to\n   filter it in a managed way.  Incorrect
      policy in this area will lead\n   to potential unreachability or to perverse
      traffic patterns.\n   6to4 prefixes more specific than 2002::/16 must not be
      propagated in\n   native IPv6 routing, to prevent pollution of the IPv6 routing
      table\n   by elements of the IPv4 routing table.  Therefore, a 6to4 site which\n
      \  also has a native IPv6 connection MUST NOT advertise its 2002::/48\n   routing
      prefix on that connection, and all native IPv6 network\n   operators MUST filter
      out and discard any 2002:: routing prefix\n   advertisements longer than /16.\n
      \  Sites which have at least one native IPv6 connection, in addition to\n   a
      6to4 connection, will therefore have at least one IPv6 prefix which\n   is not
      a 2002:: prefix.  Such sites' DNS entries will reflect this\n   and DNS lookups
      will return multiple addresses.  If two such sites\n   need to interoperate,
      whether the 6to4 route or the native route will\n   be used depends on IPv6
      address selection by the individual hosts (or\n   even applications).\n   Now
      consider again the example of the previous section.  Suppose an\n   IPv6 host
      on site B queries the DNS entry for a host on site A, and\n   the DNS returns
      multiple IPv6 addresses with different prefixes.\n            ____________________________
      \        ______________________\n           |                            |       |
      \                     |\n           |  Wide Area IPv4 Network    |       |   Native
      IPv6        |\n           |                            |       |   Wide Area
      Network  |\n           |____________________________|       |______________________|\n
      \               /                    \\             //\n      192.1.2.3/         9.254.253.252\\
      \          // 2001:0600::/48\n  ____________/_   ____________________\\_________//_\n
      \            /  | |                     \\       //  |\n    ##########  | |IPv4
      Site B          ##########  |\n  __# 6to4   #_ | | ____________________# 6to4
      \  #_ |\n    # router # || ||                    # router # ||\n    ##########
      || ||IPv6 Site B         ########## ||\n               || ||2002:09fe:fdfc::/48
      \           ||\n  __Site A_____|| ||2001:0600::/48_________________||\n    as
      before   | |                                 |\n  ______________| |_________________________________|\n
      \  If the host picks the 6to4 prefix according to some rule for multiple\n   prefixes,
      it will simply send packets to an IPv6 address formed with\n   the prefix {FP=001,TLA=0x0002,NLA=192.1.2.3}/48.
      \ It is essential\n   that they are sourced from the prefix\n   {FP=001,TLA=0x0002,NLA=9.254.253.252}/48
      for two-way connectivity to\n   be possible.  The address selection mechanism
      of Section 2.1 will\n   ensure this.\n"
    - contents:
      - "5.2.1 Variant scenario with ISP relay\n   The previous scenario assumes that
        the relay router is provided by a\n   cooperative 6to4 user site.  A variant
        of this is for an Internet\n   Service Provider, that already offers native
        IPv6 connectivity, to\n   operate a relay router.  Technically this is no
        different from the\n   previous scenario; site B is simply an internal 6to4
        site of the ISP,\n   possibly containing only one system, i.e., the relay
        router itself.\n"
      title: 5.2.1 Variant scenario with ISP relay
    - contents:
      - "5.2.2 Summary of relay router configuration\n   A relay router participates
        in IPv6 unicast routing protocols on its\n   native IPv6 interface and may
        do so on its 6to4 pseudo-interface, but\n   these are independent routing
        domains with separate policies, even if\n   the same protocol, probably BGP4+,
        is used in both cases.\n   A relay router also participates in IPv4 unicast
        routing protocols on\n   its IPv4 interface used to support 6to4, but this
        is not further\n   discussed here.\n   On its native IPv6 interface, the relay
        router MUST advertise a route\n   to 2002::/16.  It MUST NOT advertise a longer
        2002:: routing prefix\n   on that interface.  Routing policy within the native
        IPv6 routing\n   domain determines the scope of that advertisement, thereby
        limiting\n   the visibility of the relay router in that domain.\n   IPv6 packets
        received by the relay router whose next hop IPv6 address\n   matches 2002::/16
        will be routed to its 6to4 pseudo-interface and\n   treated according to the
        sending rule of Section 5.1.\n"
      - contents:
        - "5.2.2.1. BGP4+ not used\n   If BGP4+ is not deployed in the 6to4 exterior
          routing domain (option\n   2.1 of Section 5.2), the relay router will be
          configured to accept\n   and relay all IPv6 traffic only from its client
          6to4 sites.  Each\n   6to4 router served by the relay router will be configured
          with a\n   default IPv6 route to the relay router (for example, Site A's
          default\n   IPv6 route ::/0 would point to the relay router's address under\n
          \  prefix 2002:09fe:fdfc::/48).\n"
        title: 5.2.2.1. BGP4+ not used
      - contents:
        - "5.2.2.2. BGP4+ used\n   If BGP4+ is deployed in the 6to4 exterior routing
          domain (option 2.2\n   of Section 5.2), the relay router advertises IPv6
          native routing\n   prefixes on its 6to4 pseudo-interface, peering only with
          the 6to4\n   routers that it serves.  (An alternative is that these routes
          could\n   be advertised along with IPv4 routes using BGP4 over IPv4, rather\n
          \  than by running a separate BGP4+ session.)  The specific routes\n   advertised
          depend on applicable routing policy, but they must be\n   chosen from among
          those reachable through the relay router's native\n   IPv6 interface.  In
          the simplest case, a default route to the whole\n   IPv6 address space could
          be advertised.  When multiple relay routers\n   are in use, more specific
          routing prefixes would be advertised\n   according to the desired routing
          policy.  The usage of BGP4+ is\n   completely standard so is not discussed
          further in this document.\n"
        title: 5.2.2.2. BGP4+ used
      - contents:
        - "5.2.2.3. Relay router scaling\n   Relay routers introduce the potential
          for scaling issues.  In general\n   a relay router should not attempt to
          serve more sites than any other\n   transit router, allowing for the encapsulation
          overhead.\n"
        title: 5.2.2.3. Relay router scaling
      title: 5.2.2 Summary of relay router configuration
    - contents:
      - "5.2.3 Unwilling to relay\n   It may arise that a site has a router with both
        6to4 pseudo-\n   interfaces and native IPv6 interfaces, but is unwilling to
        act as a\n   relay router.  Such a site MUST NOT advertise any 2002:: routing\n
        \  prefix into the native IPv6 domain and MUST NOT advertise any native\n
        \  IPv6 routing prefixes or a default IPv6 route into the 6to4 domain.\n   Within
        the 6to4 domain it will behave exactly as in the basic 6to4\n   scenario of
        Section 5.1.\n"
      title: 5.2.3 Unwilling to relay
    title: 5.2 Mixed scenario with relay to native IPv6
  - contents:
    - "5.3 Sending and decapsulation rules\n   The only change to standard IPv6 forwarding
      is that every 6to4 router\n   (and only 6to4 routers) MUST implement the following
      additional\n   sending and decapsulation rules.\n   In the sending rule, \"next
      hop\" refers to the next IPv6 node that the\n   packet will be sent to, which
      is not necessarily the final\n   destination, but rather the next IPv6 neighbor
      indicated by normal\n   IPv6 routing mechanisms.  If the final destination is
      a 6to4 address,\n   it will be considered as the next hop for the purpose of
      this rule.\n   If the final destination is not a 6to4 address, and is not local,
      the\n   next hop indicated by routing will be the 6to4 address of a relay\n
      \  router.\n   ADDITIONAL SENDING RULE for 6to4 routers\n        if the next
      hop IPv6 address for an IPv6 packet\n           does match the prefix 2002::/16,
      and\n           does not match any prefix of the local site\n               then\n
      \              apply any security checks (see Section 8);\n               encapsulate
      the packet in IPv4 as in Section 3,\n               with IPv4 destination address
      = the NLA value V4ADDR\n               extracted from the next hop IPv6 address;\n
      \              queue the packet for IPv4 forwarding.\n   A simple decapsulation
      rule for incoming IPv4 packets with protocol\n   type 41 MUST be implemented:\n
      \  ADDITIONAL DECAPSULATION RULE for 6to4 routers\n          apply any security
      checks (see Section 8);\n          remove the IPv4 header;\n          submit
      the packet to local IPv6 routing.\n"
    title: 5.3 Sending and decapsulation rules
  - contents:
    - "5.4 Variant scenario with tunnel to IPv6 space\n   A 6to4 site which has no
      IPv6 connections to the \"native\" IPv6\n   Internet can acquire effective connectivity
      to the v6 Internet via a\n   \"configured tunnel\" (using the terminology in
      [MECH]) to a\n   cooperating router which does have IPv6 access, but which does
      not\n   need to be a 6to4 router. Such tunnels could be autoconfigured using\n
      \  an IPv4 anycast address, but this is outside of the scope of this\n   document.
      \ Alternatively a tunnel broker can be used.  This scenario\n   would be suitable
      for a small user-managed site.\n   These mechanisms are not described in detail
      in this document.\n"
    title: 5.4 Variant scenario with tunnel to IPv6 space
  - contents:
    - "5.5 Fragmented Scenarios\n   If there are multiple relay routers between native
      IPv6 and the 6to4\n   world, different parts of the 6to4 world will be served
      by different\n   relays.  The only complexity that this introduces is in the
      scoping\n   of 2002::/16 routing advertisements within the native IPv6 world.\n
      \  Like any BGP4+ advertisements, their scope must be correctly defined\n   by
      routing policy to ensure that traffic to 2002::/16 follows the\n   intended
      paths.\n   If there are multiple IPv6 stubs all interconnected by 6to4 through\n
      \  the global IPv4 Internet, this is a simple generalization of the\n   basic
      scenarios of sections 5.1. and 5.2 and no new issues arise.\n   This is shown
      in the following figure.  Subject to consistent\n   configuration of routing
      advertisements, there are no known issues\n   with this scenario.\n                    ______________\n
      \                  |     AS3      |\n                   |_IPv6 Network_| Both
      AS1 and AS2 advertise\n                   | AS1  | AS2   | 2002::/16, but only
      one of\n                   |______|_______| them reaches AS3.\n                    //
      \         \\\\\n         __________//_          _\\\\__________         ______________\n
      \       | 6to4 Relay1 |        | 6to4 Relay2 |       | IPv6 Network |\n        |_____________|
      \       |_____________|       |    AS4       |\n               |                      |
      \             |______________|\n       ________|______________________|________
      \            |\n      |                                        |      ______|______\n
      \     |       Global IPv4 Network              |-----| 6to4 Relay3 |\n      |________________________________________|
      \    |_____________|\n         |          |            |          |\n     ____|___
      \   ___|____    ____|___    ___|____\n    |  6to4  |  |  6to4  |  |  6to4  |
      \ |  6to4  |\n    | Site A |  | Site B |  | Site C |  | Site D |\n    |________|
      \ |________|  |________|  |________|\n   If multiple IPv6 stubs are interconnected
      through multiple, disjoint\n   IPv4 networks (i.e., a fragmented IPv4 world)
      then the 6to4 world is\n   also fragmented; this is the one scenario that must
      be avoided.  It\n   is illustrated below to show why it does not work, since
      the\n   2002::/16 advertisement from Relay1 will be invisible to Relay2, and\n
      \  vice versa.  Sites A and B therefore have no connectivity to sites C\n   and
      D.\n                    ______________\n                   |     AS3      |\n
      \                  |_IPv6 Network_| Both AS1 and AS2 advertise\n                   |
      AS1  | AS2   | 2002::/16, but sites A and B\n                   |______|_______|
      cannot reach C and D.\n                    //          \\\\\n         __________//_
      \         _\\\\__________\n        | 6to4 Relay1 |        | 6to4 Relay2 |\n
      \       |_____________|        |_____________|\n               |                      |\n
      \      ________|_______        _______|________\n      | IPv4 Network   |      |
      IPv4 Network   |\n      | Segment 1      |      | Segment 2      |\n      |________________|
      \     |________________|\n         |          |            |          |\n     ____|___
      \   ___|____    ____|___    ___|____\n    |  6to4  |  |  6to4  |  |  6to4  |
      \ |  6to4  |\n    | Site A |  | Site B |  | Site C |  | Site D |\n    |________|
      \ |________|  |________|  |________|\n"
    title: 5.5 Fragmented Scenarios
  - contents:
    - "5.6 Multihoming\n   Sites which are multihomed on IPv4 MAY extend the 6to4
      scenario by\n   using a 2002:: prefix for each IPv4 border router, thereby obtaining\n
      \  a simple form of IPv6 multihoming by using multiple simultaneous IPv6\n   prefixes
      and multiple simultaneous relay routers.\n"
    title: 5.6 Multihoming
  - contents:
    - "5.7 Transition Considerations\n   If the above rules for routing advertisements
      and address selection\n   are followed, then a site can migrate from using 6to4
      to using native\n   IPv6 connections over a long period of co-existence, with
      no need to\n   stop 6to4 until it has ceased to be used.  The stages involved
      are\n   1. Run IPv6 on site using any suitable implementation.  True native\n
      \  IPv6, [6OVER4], or tunnels are all acceptable.\n   2. Configure a border
      router (or router plus IPv4 NAT) connected to\n   the external IPv4 network
      to support 6to4, including advertising the\n   appropriate 2002:: routing prefix
      locally.  Configure IPv6 DNS\n   entries using this prefix.  At this point the
      6to4 mechanism is\n   automatically available, and the site has obtained a \"free\"
      IPv6\n   prefix.\n   3. Identify a 6to4 relay router willing to relay the site's
      traffic\n   to the native IPv6 world.  This could either be at another\n   cooperative
      6to4 site, or an ISP service.  If no exterior routing\n   protocol is in use
      in the 6to4 exterior routing domain, the site's\n   6to4 router will be configured
      with a default IPv6 route pointing to\n   that relay router's 6to4 address.
      \ If an exterior routing protocol\n   such as BGP4+ is in use, the site's 6to4
      router will be configured to\n   establish appropriate BGP peerings.\n   4.
      When native external IPv6 connectivity becomes available, add a\n   second (native)
      IPv6 prefix to both the border router configuration\n   and the DNS configuration.
      \ At this point, an address selection rule\n   will determine when 6to4 and
      when native IPv6 will be used.\n   5. When 6to4 usage is determined to have
      ceased (which may be several\n   years later), remove the 6to4 configuration.\n"
    title: 5.7 Transition Considerations
  - contents:
    - "5.8 Coexistence with firewall, NAT or RSIP\n   The 6to4 mechanisms appear to
      be unaffected by the presence of a\n   firewall at the border router.\n   If
      the site concerned has very limited global IPv4 address space, and\n   is running
      an IPv4 network address translator (NAT), all of the above\n   mechanisms remain
      valid.  The NAT box must also contain a fully\n   functional IPv6 router including
      the 6to4 mechanism.  The address\n   used for V4ADDR will simply be a globally
      unique IPv4 address\n   allocated to the NAT.  In the example of Section 5.1
      above, the 6to4\n   routers would also be the sites' IPv4 NATs, which would
      own the\n   globally unique IPv4 addresses 192.1.2.3 and 9.254.253.252.\n   Combining
      a 6to4 router with an IPv4 NAT in this way offers  the site\n   concerned a
      globally unique IPv6 /48 prefix, automatically, behind\n   the IPv4 address
      of the NAT.  Thus every host behind the NAT can\n   become an IPv6 host with
      no need for additional address space\n   allocation, and no intervention by
      the Internet service provider.  No\n   address translation is needed by these
      IPv6 hosts.\n   A more complex situation arises if a host is more than one NAT
      hop\n   away from the globally unique IPv4 address space, since only the\n   outermost
      NAT has a unique IPv4 address.  All IPv6 hosts in this\n   situation must use
      addresses derived from the 2002: prefix\n   constructed from the global IPv4
      address of the outermost NAT.  The\n   IPv4 addresses of the inner NATs are
      not globally unique and play no\n   part in the 6to4 mechanism, and 6to4 encapsulation
      and decapsulation\n   can only take place at the outermost NAT.\n   The Realm-Specific
      IP (RSIP) mechanism [RSIP] can also co-exist with\n   6to4.  If a 6to4 border
      router is combined with an RSIP border\n   router, it can support IPv6 hosts
      using 6to4 addresses, IPv4 hosts\n   using RSIP, or dual stack hosts using both.
      \ The RSIP function\n   provides fine-grained management of dynamic global IPv4
      address\n   allocation and the 6to4 function provides a stable IPv6 global\n
      \  address to each host.  As with NAT, the IPv4 address used to\n   construct
      the site's 2002:  prefix will be one of the global\n   addresses of the RSIP
      border router.\n"
    title: 5.8 Coexistence with firewall, NAT or RSIP
  - contents:
    - "5.9 Usage within Intranets\n   There is nothing to stop the above scenario
      being deployed within a\n   private corporate network as part of its internal
      transition to IPv6;\n   the corporate IPv4 backbone would serve as the virtual
      link layer for\n   individual corporate sites using 2002:: prefixes.  The V4ADDR
      MUST be\n   a duly allocated global IPv4 address, which MUST be unique within
      the\n   private network.  The Intranet thereby obtains globally unique IPv6\n
      \  addresses even if it is internally using private IPv4 addresses [RFC\n   1918].\n"
    title: 5.9 Usage within Intranets
  - contents:
    - "5.10 Summary of impact on routing\n   IGP (site) routing will treat the local
      site's 2002::/48  prefix\n   exactly like a native IPv6 site prefix assigned
      to the local site.\n   There will also be an IGP route to the generic 2002::/16
      prefix,\n   which will be a route to the site's 6to4 router, unless this is\n
      \  handled as a default route.\n   EGP (i.e., BGP) routing will include advertisements
      for the 2002::/16\n   prefix from relay routers into the native IPv6 domain,
      whose scope is\n   limited by routing policy.  This is the only non-native IPv6
      prefix\n   advertised by BGP.\n   It will be necessary for 6to4 routers to obtain
      routes to relay\n   routers in order to access the native IPv6 domain.  In the
      simplest\n   case there will be a manually configured default IPv6 route to
      a\n   relay router's address under the prefix\n   {FP=001,TLA=0x0002,NLA=V4ADDR}/48,
      where V4ADDR is the IPv4 address\n   of the relay router.  Such a route could
      be used to establish a BGP\n   session for the exchange of additional IPv6 routes.\n
      \  By construction, unicast IPv6 traffic within a 6to4 domain will\n   follow
      exactly the same path as unicast IPv4 traffic.\n"
    title: 5.10 Summary of impact on routing
  - contents:
    - "5.11. Routing loop prevention\n   Since 6to4 has no impact on IPv4 routing,
      it cannot induce routing\n   loops in IPv4.  Since 2002: prefixes behave exactly
      like standard\n   IPv6 prefixes, they will not create any new mechanisms for
      routing\n   loops in IPv6 unless misconfigured.  One very dangerous\n   misconfiguration
      would be an announcement of the 2002::/16 prefix\n   into a 6to4 exterior routing
      domain, since this would attract all\n   6to4 traffic into the site making the
      announcement.  Its 6to4 router\n   would then resend non-local 6to4 traffic
      back out, forming a loop.\n   The 2002::/16 routing prefix may be legitimately
      advertised into the\n   native IPv6 routing domain by a relay router, and into
      an IPv6 site's\n   local IPv6 routing domain; hence there is a risk of misconfiguration\n
      \  causing it to be advertised into a 6to4 exterior routing domain.\n   To summarize,
      the 2002::/16 prefix MUST NOT be advertised to a 6to4\n   exterior routing domain.\n"
    title: 5.11. Routing loop prevention
  title: 5. Unicast scenarios, scaling, and transition to normal prefixes
- contents:
  - "6. Multicast and Anycast\n   It is not possible to assume the general availability
    of wide-area\n   IPv4 multicast, so (unlike [6OVER4]) the 6to4 mechanism must
    assume\n   only unicast capability in its underlying IPv4 carrier network.  An\n
    \  IPv6 multicast routing protocol is needed [MULTI].\n   The allocated anycast
    address space [ANYCAST] is compatible with\n   2002:: prefixes, i.e., anycast
    addresses formed with such prefixes\n   may be used inside a 6to4 site.\n"
  title: 6. Multicast and Anycast
- contents:
  - "7. ICMP messages\n   ICMP \"unreachable\" and other messages returned by the
    IPv4 routing\n   system will be returned to the 6to4 router that generated a\n
    \  encapsulated 2002:: packet.  However, this router will often be\n   unable
    to return an ICMPv6 message to the originating IPv6 node, due\n   to the lack
    of sufficient information in the \"unreachable\" message.\n   This means that
    the IPv4 network will appear as an undiagnosable link\n   layer for IPv6 operational
    purposes.  Other considerations are as\n   described in Section 4.1.3 of [MECH].\n"
  title: 7. ICMP messages
- contents:
  - "8. IANA Considerations\n   No assignments by the IANA are required beyond the
    special TLA value\n   0x0002 already assigned.\n"
  title: 8. IANA Considerations
- contents:
  - "9. Security Considerations\n   Implementors should be aware that, in addition
    to possible attacks\n   against IPv6, security attacks against IPv4 must also
    be considered.\n   Use of IP security at both IPv4 and IPv6 levels should nevertheless\n
    \  be avoided, for efficiency reasons.  For example, if IPv6 is running\n   encrypted,
    encryption of IPv4 would be redundant except if traffic\n   analysis is felt to
    be a threat.  If IPv6 is running authenticated,\n   then authentication of IPv4
    will add little.  Conversely, IPv4\n   security will not protect IPv6 traffic
    once it leaves the 6to4\n   domain.  Therefore, implementing IPv6 security is
    required even if\n   IPv4 security is available.\n   By default, 6to4 traffic
    will be accepted and decapsulated from any\n   source from which regular IPv4
    traffic is accepted.  If this is for\n   any reason felt to be a security risk
    (for example, if IPv6 spoofing\n   is felt to be more likely than IPv4 spoofing),
    then additional source\n   address based packet filtering could be applied.  A
    possible\n   plausibility check is whether the encapsulating IPv4 address is\n
    \  consistent with the encapsulated 2002:: address.  If this check is\n   applied,
    exceptions to it must be configured to admit traffic from\n   relay routers (Section
    5).  2002:: traffic must also be excepted from\n   checks applied to prevent spoofing
    of \"6 over 4\" traffic [6OVER4].\n   In any case, any 6to4 traffic whose source
    or destination address\n   embeds a V4ADDR which is not in the format of a global
    unicast\n   address MUST be silently discarded by both encapsulators and\n   decapsulators.
    \ Specifically, this means that IPv4 addresses defined\n   in [RFC 1918], broadcast,
    subnet broadcast, multicast and loopback\n   addresses are unacceptable.\n"
  title: 9. Security Considerations
- contents:
  - "Acknowledgements\n   The basic idea presented above is probably not original,
    and we have\n   had invaluable comments from Magnus Ahltorp, Harald Alvestrand,
    Jim\n   Bound, Scott Bradner, Randy Bush, Matt Crawford, Richard Draves,\n   Jun-ichiro
    itojun Hagino, Joel Halpern, Tony Hain, Andy Hazeltine,\n   Bob Hinden, Geoff
    Huston, Perry Metzger, Thomas Narten, Erik\n   Nordmark, Markku Savela, Ole Troan,
    Sowmini Varadhan, members of the\n   Compaq IPv6 engineering team, and other members
    of the NGTRANS\n   working group.  Some text has been copied from [6OVER4].  George\n
    \  Tsirtsis kindly drafted two of the diagrams.\n"
  title: Acknowledgements
- contents:
  - "References\n   [AARCH]    Hinden, R. and S. Deering, \"IP Version 6 Addressing\n
    \             Architecture\", RFC 2373, July 1998.\n   [AGGR]     Hinden., R,
    O'Dell, M. and S. Deering, \"An IPv6\n              Aggregatable Global Unicast
    Address Format\", RFC 2374,\n              July 1998.\n   [API]      Gilligan,
    R., Thomson, S., Bound, J. and W. Stevens,\n              \"Basic Socket Interface
    Extensions for IPv6\", RFC 2553,\n              March 1999.\n   [BGP4+]    Marques,
    P. and F. Dupont, \"Use of BGP-4 Multiprotocol\n              Extensions for IPv6
    Inter-Domain Routing\", RFC 2545, March\n              1999.\n   [CONF]     Thomson,
    S. and T. Narten, \"IPv6 Stateless Address\n              Autoconfiguration\",
    RFC 2462, December 1998.\n   [DISC]     Narten, T., Nordmark, E. and W. Simpson,
    \"Neighbor\n              Discovery for IP Version 6 (IPv6)\", RFC 2461, December\n
    \             1998.\n   [IPV6]     Deering, S. and R. Hinden, \"Internet Protocol,
    Version 6\n              (IPv6) Specification\", RFC 2460, December 1998.\n   [6OVER4]
    \  Carpenter, B. and C. Jung, \"Transmission of IPv6 over IPv4\n              Domains
    without Explicit Tunnels\", RFC 2529, March 1999.\n   [ANYCAST]  Johnson, D. and
    S. Deering, \"Reserved IPv6 Subnet Anycast\n              Addresses\", Work in
    Progress.\n   [MULTI]    Thaler, D., \"Support for Multicast over 6to4 Networks\",\n
    \             Work in Progress.\n   [SCALE]    Hain, T., \"6to4-relay discovery
    and scaling\", Work in\n              Progress.\n   [SELECT]   Draves, R., \"Default
    Address Selection for IPv6\", Work in\n              Progress.\n   [RFC 791]  Postel,
    J., \"Internet Protocol\", STD 5, RFC 791, September\n              1981.\n   [RFC
    1918] Rekhter, Y., Moskowitz, R., Karrenberg, D., de Groot, G.\n              and
    E. Lear, \"Address Allocation for Private Internets\",\n              BCP 5, RFC
    1918, February 1996.\n   [MECH]     Gilligan, R. and E. Nordmark, \"Transition
    Mechanisms for\n              IPv6 Hosts and Routers\", RFC 2893, August 2000.\n
    \  [RSIP]     Borella, M., Grabelsky, D., Lo, J. and K. Tuniguchi,\n              \"Realm
    Specific IP: Protocol Specification\", Work in\n              Progress.\n   [RFC
    2119] Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
    Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC 2283] Bates, T., Chandra, R.,
    Katz, D. and Y. Rekhter,\n              \"Multiprotocol Extensions for BGP-4\",
    RFC 2283, February\n              1998.\n"
  title: References
- contents:
  - "Authors' Addresses\n   Brian E. Carpenter\n   IBM\n   iCAIR, Suite 150\n   1890
    Maple Avenue\n   Evanston IL 60201, USA\n   EMail: brian@icair.org\n   Keith Moore\n
    \  UT Computer Science Department\n   1122 Volunteer Blvd, Ste 203\n   Knoxville,
    TN  37996-3450\n   USA\n   EMail: moore@cs.utk.edu\n"
  title: Authors' Addresses
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   intellectual property or other rights that might be claimed to\n
    \  pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; neither does it represent that it\n   has made any effort to
    identify any such rights.  Information on the\n   IETF's procedures with respect
    to rights in standards-track and\n   standards-related documentation can be found
    in BCP-11.  Copies of\n   claims of rights made available for publication and
    any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: Intellectual Property
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
