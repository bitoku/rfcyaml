- title: __initial_text__
  contents:
  - "                    Transmission of IPv6, IPv4, and\n      Address Resolution\
    \ Protocol (ARP) Packets over Fibre Channel\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the way of encapsulating IPv6, IPv4, and\n\
    \   Address Resolution Protocol (ARP) packets over Fibre Channel.  This\n   document\
    \ also specifies the method of forming IPv6 link-local\n   addresses and statelessly\
    \ autoconfigured IPv6 addresses on Fibre\n   Channel networks, and a mechanism\
    \ to perform IPv4 address resolution\n   over Fibre Channel networks.\n   This\
    \ document obsoletes RFC 2625 and RFC 3831.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Summary of Fibre Channel ........................................4\n  \
    \    2.1. Overview ...................................................4\n    \
    \  2.2. Identifiers and Login ......................................5\n      2.3.\
    \ FC Levels and Frame Format .................................5\n      2.4. Sequences\
    \ and Exchanges ....................................6\n   3. IP-capable Nx_Ports\
    \ .............................................7\n   4. IPv6, IPv4, and ARP Encapsulation\
    \ ...............................7\n      4.1. FC Sequence Format for IPv6 and\
    \ IPv4 Packets ...............7\n      4.2. FC Sequence Format for ARP Packets\
    \ .........................9\n      4.3. FC Classes of Service .....................................10\n\
    \      4.4. FC Header Code Points .....................................10\n  \
    \    4.5. FC Network_Header .........................................11\n    \
    \  4.6. LLC/SNAP Header ...........................................12\n      4.7.\
    \ Bit and Byte Ordering .....................................12\n      4.8. Maximum\
    \ Transfer Unit .....................................12\n   5. IPv6 Stateless\
    \ Address Autoconfiguration .......................13\n      5.1. IPv6 Interface\
    \ Identifier and Address Prefix ..............13\n      5.2. Generating an Interface\
    \ ID from a Format 1 N_Port_Name ....14\n      5.3. Generating an Interface ID\
    \ from a Format 2 N_Port_Name ....15\n      5.4. Generating an Interface ID from\
    \ a Format 5 N_Port_Name ....16\n      5.5. Generating an Interface ID from an\
    \ EUI-64 Mapped\n           N_Port_Name ...............................................17\n\
    \   6. Link-local Addresses ...........................................18\n  \
    \ 7. ARP Packet Format ..............................................18\n   8.\
    \ Link-layer Address/Hardware Address ............................20\n   9. Address\
    \ Mapping for Unicast ....................................20\n      9.1. Overview\
    \ ..................................................20\n      9.2. IPv6 Address\
    \ Mapping ......................................20\n      9.3. IPv4 Address Mapping\
    \ ......................................21\n   10. Address Mapping for Multicast\
    \ .................................22\n   11. Sequence Management ...........................................23\n\
    \   12. Exchange Management ...........................................23\n  \
    \ 13. Interoperability with RFC 2625 ................................24\n   14.\
    \ Security Considerations .......................................25\n   15. IANA\
    \ Considerations ...........................................25\n   16. Acknowledgements\
    \ ..............................................25\n   17. Normative References\
    \ ..........................................26\n   18. Informative References\
    \ ........................................26\n   A. Transmission of a Broadcast\
    \ FC Sequence over FC Topologies\n      (Informative) ..................................................28\n\
    \   B. Validation of the <N_Port_Name, N_Port_ID> Mapping\n      (Informative)\
    \ ..................................................29\n   C. Fibre Channel Bit\
    \ and Byte Numbering Guidance ..................30\n   D. Changes from RFC 2625\
    \ ..........................................31\n   E. Changes from RFC 3831 ..........................................31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Fibre Channel (FC) is a high-speed serial interface technology\
    \ that\n   supports several Upper Layer Protocols including Small Computer\n \
    \  System Interface (SCSI), IPv6 [IPv6], and IPv4 [IPv4].\n   [RFC-2625] defined\
    \ how to encapsulate IPv4 and Address Resolution\n   Protocol (ARP) packets over\
    \ Fibre Channel for a subset of Fibre\n   Channel devices.  This specification\
    \ enables the support of IPv4 for\n   a broader category of Fibre Channel devices.\
    \  In addition, this\n   specification simplifies [RFC-2625] by removing unused\
    \ options and\n   clarifying current implementations.  This document obsoletes\n\
    \   [RFC-2625].\n   Specific [RFC-2625] limitations that this document aims to\
    \ resolve\n   are the following:\n   -  N_Port_Name format restriction.  [RFC-2625]\
    \ restricts the use of\n      IPv4 to Fibre Channel devices having the format\
    \ 0x1 N_Port_Name,\n      but many current implementations use other N_Port_Name\
    \ formats.\n   -  Use of Fibre Channel Address Resolution Protocol (FARP).\n \
    \     [RFC-2625] requires the support of FARP to map N_Port_Names to\n      N_Port_IDs,\
    \ but many current implementations use other methods,\n      such as the Fibre\
    \ Channel Name Server.\n   -  Missing support for IPv4 multicast.  [RFC-2625]\
    \ does not specify\n      how to transmit IPv4 packets with a multicast destination\
    \ address\n      over Fibre Channel.\n   [RFC-3831] defines how to encapsulate\
    \ IPv6 over Fibre Channel and a\n   method of forming IPv6 link-local addresses\
    \ [AARCH] and statelessly\n   autoconfigured IPv6 addresses on Fibre Channel networks.\
    \  [RFC-3831]\n   also describes the content of the Source/Target Link-layer Address\n\
    \   option used in Neighbor Discovery [DISC] when the messages are\n   transmitted\
    \ on a Fibre Channel network.  This document obsoletes\n   [RFC-3831].\n   Warning\
    \ to readers familiar with Fibre Channel: both Fibre Channel\n   and IETF standards\
    \ use the same byte transmission order.  However,\n   the bit numbering is different.\
    \  See Appendix C for guidance.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [KEYWORDS].\n"
- title: 2.  Summary of Fibre Channel
  contents:
  - '2.  Summary of Fibre Channel

    '
- title: 2.1.  Overview
  contents:
  - "2.1.  Overview\n   Fibre Channel (FC) is a gigabit-speed network technology primarily\n\
    \   used for storage networking.  Fibre Channel is standardized in the\n   T11\
    \ Technical Committee of the InterNational Committee for\n   Information Technology\
    \ Standards (INCITS), an American National\n   Standard Institute (ANSI) accredited\
    \ standards committee.\n   Fibre Channel devices are called Nodes.  Each Node\
    \ has one or more\n   Ports that connect to Ports of other devices.  Fibre Channel\
    \ may be\n   implemented using any combination of the following three topologies:\n\
    \   -  a point-to-point link between two Ports;\n   -  a set of Ports interconnected\
    \ by a switching network called a\n      Fabric, as defined in [FC-FS];\n   -\
    \  a set of Ports interconnected with a loop topology, as defined in\n      [FC-AL-2].\n\
    \   A Node Port that does not operate in a loop topology is called an\n   N_Port.\
    \  A Node Port that operates in a loop topology using the\n   loop-specific protocols\
    \ is designated as an NL_Port.  The term\n   Nx_Port is used to indicate a Node\
    \ Port that is capable of operating\n   in either mode.\n   A Fabric Port that\
    \ does not operate in a loop topology is called an\n   F_Port.  A Fabric Port\
    \ that operates in a loop topology using the\n   loop-specific protocols is designated\
    \ as an FL_Port.  The term\n   Fx_Port is used to indicate a Fabric Port that\
    \ is capable of\n   operating in either mode.\n   A Fibre Channel network, built\
    \ with any combination of the FC\n   topologies described above, is a multiaccess\
    \ network with broadcast\n   capabilities.\n   From an IPv6 point of view, a Fibre\
    \ Channel network is an IPv6 Link\n   [IPv6].  IP-capable Nx_Ports are what [IPv6]\
    \ calls Interfaces.\n   From an IPv4 point of view, a Fibre Channel network is\
    \ an IPv4 Local\n   Network [IPv4].  IP-capable Nx_Ports are what [IPv4] calls\
    \ Local\n   Network Interfaces.\n"
- title: 2.2.  Identifiers and Login
  contents:
  - "2.2.  Identifiers and Login\n   Fibre Channel entities are identified by non-volatile\
    \ 64-bit\n   Name_Identifiers.  [FC-FS] defines several formats of\n   Name_Identifiers.\
    \  The value of the most significant 4 bits defines\n   the format of a Name_Identifier.\
    \  These Name_Identifiers are referred\n   to in a more concise manner as follows:\n\
    \   -  an Nx_Port's Name_Identifier is called N_Port_Name;\n   -  an Fx_Port's\
    \ Name_Identifier is called F_Port_Name;\n   -  a Node's Name_Identifier is called\
    \ Node_Name;\n   -  a Fabric's Name_Identifier is called Fabric_Name.\n   An Nx_Port\
    \ connected to a Fibre Channel network is associated with\n   two identifiers,\
    \ its non-volatile N_Port_Name and a volatile 24-bit\n   address called N_Port_ID.\
    \  The N_Port_Name is used to identify the\n   Nx_Port, and the N_Port_ID is used\
    \ for communications among Nx_Ports.\n   Each Nx_Port acquires an N_Port_ID from\
    \ the Fabric by performing a\n   process called Fabric Login, or FLOGI.  The FLOGI\
    \ process is used\n   also to negotiate several communications parameters between\
    \ the\n   Nx_Port and the Fabric, such as the receive data field size, which\n\
    \   determines the maximum size of the Fibre Channel frames that may be\n   transferred\
    \ between the Nx_Port and the Fabric.\n   Before effective communication may take\
    \ place between two Nx_Ports,\n   they must complete a process called Port Login,\
    \ or PLOGI.  The PLOGI\n   process provides each Nx_Port with the other Nx_Port's\
    \ N_Port_Name,\n   and negotiates several communication parameters, such as the\
    \ receive\n   data field size, which determines the maximum size of the Fibre\n\
    \   Channel frames that may be transferred between the two Nx_Ports.\n   Both\
    \ Fabric Login and Port Login may be explicit (i.e., performed\n   using specific\
    \ FC control messages called Extended Link Services, or\n   ELSes) or implicit\
    \ (i.e., in which the parameters are specified by\n   configuration or other methods).\n"
- title: 2.3.  FC Levels and Frame Format
  contents:
  - "2.3.  FC Levels and Frame Format\n   [FC-FS] describes the Fibre Channel protocol\
    \ using 5 different\n   levels.  The FC-2 and FC-4 levels are relevant for this\n\
    \   specification.  The FC-2 level defines the FC frame format, the\n   transport\
    \ services, and the control functions necessary for\n   information transfer.\
    \  The FC-4 level supports Upper Level Protocols,\n   such as IPv6, IPv4, and\
    \ SCSI.  The Fibre Channel frame format is\n   shown in figure 1.\n      +-----+-----------+-----------+--------//-------+-----+-----+\n\
    \      |     |           |         Data Field          |     |     |\n      |\
    \ SOF | FC Header |<--------------------------->| CRC | EOF |\n      |     | \
    \          | Optional  | Frame           |     |     |\n      |     |        \
    \   | Header(s) | Payload         |     |     |\n      +-----+-----------+-----------+--------//-------+-----+-----+\n\
    \                      Figure 1: Fibre Channel Frame Format\n   The Start of Frame\
    \ (SOF) and End of Frame (EOF) are special FC\n   transmission words that act\
    \ as frame delimiters.  The Cyclic\n   Redundancy Check (CRC) is 4 octets long\
    \ and is used to verify the\n   integrity of a frame.\n   The FC Header is 24\
    \ octets long and contains several fields\n   associated with the identification\
    \ and control of the Data Field.\n   The Data Field is of variable size, ranging\
    \ from 0 to 2112 octets,\n   and includes the user data in the Frame Payload field\
    \ and Optional\n   Headers.  The currently defined Optional Headers are the following:\n\
    \   -  ESP_Header;\n   -  Network_Header;\n   -  Association_Header;\n   -  Device_Header.\n\
    \   The value of the SOF field determines the FC Class of service\n   associated\
    \ with the frame.  Five Classes of service are specified in\n   [FC-FS].  They\
    \ are distinguished primarily by the method of flow\n   control between the communicating\
    \ Nx_Ports and by the level of data\n   integrity provided.  A given Fabric or\
    \ Nx_Port may support one or\n   more of the following Classes of service:\n \
    \  -  Class 1: Dedicated physical connection with delivery confirmation;\n   -\
    \  Class 2: Frame multiplexed service with delivery confirmation;\n   -  Class\
    \ 3: Datagram service;\n   -  Class 4: Fractional bandwidth;\n   -  Class 6: Reliable\
    \ multicast via dedicated connections.\n   Classes 3 and 2 are commonly used for\
    \ storage networking\n   applications; Classes 1 and 6 are typically used for\
    \ specialized\n   applications in avionics.  Class 3 is recommended for IPv6,\
    \ IPv4, and\n   ARP (see section 4.3).\n"
- title: 2.4.  Sequences and Exchanges
  contents:
  - "2.4.  Sequences and Exchanges\n   An application-level payload such as an IPv6\
    \ or IPv4 packet is called\n   an Information Unit at the FC-4 level of Fibre\
    \ Channel.  Each FC-4\n   Information Unit is mapped to an FC Sequence by the\
    \ FC-2 level.  An\n   FC Sequence consists of one or more FC frames related by\
    \ the value of\n   the Sequence_ID (SEQ_ID) field of the FC Header.\n   The architectural\
    \ maximum data that may be carried by an FC frame is\n   2112 octets.  The maximum\
    \ usable frame size depends on the Fabric and\n   Nx_Port implementations and\
    \ is negotiated during the Login process.\n   Whenever an Information Unit to\
    \ be transmitted exceeds this value,\n   the FC-2 level segments it into multiple\
    \ FC frames, sent as a single\n   Sequence.  The receiving Nx_Port reassembles\
    \ the Sequence of frames\n   and delivers a reassembled Information Unit to the\
    \ FC-4 level.  The\n   Sequence Count (SEQ_CNT) field of the FC Header may be\
    \ used to ensure\n   frame ordering.\n   Multiple Sequences may be grouped together\
    \ as belonging to the same\n   FC Exchange.  The Exchange is a mechanism used\
    \ by two Nx_Ports to\n   identify and manage an operation between them.  The Exchange\
    \ is\n   opened when the operation is started between the two Nx_Ports, and\n\
    \   closed when the operation ends.  FC frames belonging to the same\n   Exchange\
    \ are related by the value of the Exchange_ID fields in the FC\n   Header.  An\
    \ Originator Exchange_ID (OX_ID) and a Responder\n   Exchange_ID (RX_ID) uniquely\
    \ identify the Exchange between a pair of\n   Nx_Ports.\n"
- title: 3.  IP-capable Nx_Ports
  contents:
  - "3.  IP-capable Nx_Ports\n   This specification requires an IP-capable Nx_Port\
    \ to have the\n   following properties:\n   -  The format of its N_Port_Name MUST\
    \ be one of 0x1, 0x2, 0x5, 0xC,\n      0xD, 0xE, 0xF (see section 5.1);\n   -\
    \  It MUST support Class 3;\n   -  It MUST support continuously increasing SEQ_CNT\
    \ [FC-FS];\n   -  It MUST be able to transmit and receive an FC-4 Information\
    \ Unit\n      at least 1304 octets long (see section 4.1);\n   -  It SHOULD support\
    \ a receive data field size for Device_Data FC\n      frames of at least 1024\
    \ octets (see section 10).\n"
- title: 4.  IPv6, IPv4, and ARP Encapsulation
  contents:
  - '4.  IPv6, IPv4, and ARP Encapsulation

    '
- title: 4.1.  FC Sequence Format for IPv6 and IPv4 Packets
  contents:
  - "4.1.  FC Sequence Format for IPv6 and IPv4 Packets\n   An IPv6 or IPv4 packet\
    \ is mapped to an Information Unit at the FC-4\n   level of Fibre Channel, which\
    \ in turn is mapped to an FC Sequence by\n   the FC-2 level [FC-FS].  An FC Information\
    \ Unit containing an IP\n   packet MUST carry the FC Network_Header [FC-FS] and\
    \ the Logical Link\n   Control/SubNetwork Access Protocol (LLC/SNAP) header [IEEE-LLC],\n\
    \   resulting in the FC Information Unit format shown in figure 2.\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      |\
    \                        Network_Header                         |\n      +-  \
    \                       (16 octets)                         -+\n      |      \
    \                                                         |\n      +-        \
    \                                                     -+\n      |            \
    \                                                   |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                        LLC/SNAP header                        |\n   \
    \   +-                          (8 octets)                         -+\n      |\
    \                                                               |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      /\
    \                      IPv6 or IPv4 Packet                      /\n      /   \
    \                                                            /\n      +-     \
    \                                                        -+\n      |         \
    \                                                      |\n      +---------------+---------------+---------------+---------------+\n\
    \               Figure 2: FC Information Unit Mapping an IP Packet\n   In order\
    \ to support the minimum IPv6 MTU (i.e., 1280 octets), an\n   Nx_Port supporting\
    \ IP MUST be able to transmit and receive an FC-4\n   Information Unit at least\
    \ 1304 octets long (i.e., 1280 + 8 + 16).\n   The FC ESP_Header [FC-FS] MAY be\
    \ used to secure the FC frames\n   composing an IP FC Sequence.  Other FC Optional\
    \ Headers MUST NOT be\n   used in an IP FC Sequence.\n   An IP FC Sequence often\
    \ consists of more than one frame, all frames\n   having the same TYPE (see section\
    \ 4.4).  The first frame of the\n   Sequence MUST include the FC Network_Header\
    \ and the LLC/SNAP header.\n   The other frames MUST NOT include them, as shown\
    \ in figure 3.\n                       First Frame of an IP FC Sequence\n   +-----------+-------------------+-----------------+-------//--------+\n\
    \   | FC Header | FC Network_Header | LLC/SNAP header | First chunk of  |\n  \
    \ |           |                   |                 | the IP Packet   |\n   +-----------+-------------------+-----------------+-------//--------+\n\
    \         Subsequent Frames of an IP FC Sequence\n   +-----------+-----------------//--------------------+\n\
    \   | FC Header |   Additional chunk of the IP Packet   |\n   +-----------+----------------//---------------------+\n\
    \               Figure 3: Optional Headers in an IP FC Sequence\n"
- title: 4.2.  FC Sequence Format for ARP Packets
  contents:
  - "4.2.  FC Sequence Format for ARP Packets\n   An ARP packet is mapped to an Information\
    \ Unit at the FC-4 level of\n   Fibre Channel, which in turn is mapped to an FC\
    \ Sequence by the FC-2\n   level.  An FC Information Unit containing an ARP packet\
    \ MUST carry\n   the FC Network_Header [FC-FS] and the LLC/SNAP header [IEEE-LLC],\n\
    \   resulting in the FC Information Unit format shown in figure 4.\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      |\
    \                        Network_Header                         |\n      +-  \
    \                       (16 octets)                         -+\n      |      \
    \                                                         |\n      +-        \
    \                                                     -+\n      |            \
    \                                                   |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                        LLC/SNAP header                        |\n   \
    \   +-                          (8 octets)                         -+\n      |\
    \                                                               |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      /\
    \                           ARP Packet                          /\n      /   \
    \                                                            /\n      +-     \
    \                                                        -+\n      |         \
    \                                                      |\n      +---------------+---------------+---------------+---------------+\n\
    \               Figure 4: FC Information Unit Mapping an ARP Packet\n   Given\
    \ the limited size of an ARP packet (see section 7), an FC\n   Sequence carrying\
    \ an ARP packet MUST be mapped to a single FC frame\n   that MUST include the\
    \ FC Network_Header and the LLC/SNAP header.\n   The FC ESP_Header [FC-FS] MAY\
    \ be used to secure an FC frame carrying\n   an ARP packet.  Other FC Optional\
    \ Headers MUST NOT be used in an FC\n   frame carrying an ARP packet.\n"
- title: 4.3.  FC Classes of Service
  contents:
  - "4.3.  FC Classes of Service\n   This specification uses FC Class 3.  The following\
    \ types of packets\n   MUST be mapped in Class 3 FC frames:\n   -  multicast IPv6\
    \ packets;\n   -  multicast/broadcast IPv4 packets;\n   -  Control Protocol packets\
    \ (e.g., ARP packets; IPv6 packets carrying\n      ICMPv6 [ICMPv6], Neighbor Discovery\
    \ [DISC], or Multicast Listener\n      Discovery [MLDv2] messages; IPv4 packets\
    \ carrying ICMP [ICMPv4] or\n      IGMP [IGMPv3] messages; IPv6 and IPv4 Routing\
    \ Protocols packets).\n   Other IPv6 and IPv4 packets (i.e., unicast IP packets\
    \ carrying data\n   traffic) SHOULD be mapped in Class 3 FC frames as well.  Support\
    \ for\n   reception of IPv4 or IPv6 packets mapped in FC frames of any Class\n\
    \   other than Class 3 is OPTIONAL; receivers MAY ignore them.\n"
- title: 4.4.  FC Header Code Points
  contents:
  - "4.4.  FC Header Code Points\n   The fields of the Fibre Channel Header are shown\
    \ in figure 5.  The\n   D_ID and S_ID fields contain, respectively, the destination\
    \ N_Port_ID\n   and the source N_Port_ID.\n       0                   1      \
    \             2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     R_CTL     |                      D_ID                     |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \  CS_CTL/Prio  |                      S_ID                     |\n      +---------------+---------------+---------------+---------------+\n\
    \      |     TYPE      |                     F_CTL                     |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \    SEQ_ID     |    DF_CTL     |            SEQ_CNT            |\n      +---------------+---------------+---------------+---------------+\n\
    \      |             OX_ID             |             RX_ID             |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \                           Parameter                           |\n      +---------------+---------------+---------------+---------------+\n\
    \                           Figure 5: FC Header Format\n   To encapsulate IPv6\
    \ and IPv4 over Fibre Channel, the following code\n   points apply.  When a single\
    \ value is listed without further\n   qualification, that value MUST be used:\n\
    \   -  R_CTL: 0x04 (Device_Data frame with Unsolicited Data Information\n    \
    \  Category [FC-FS]);\n   -  TYPE: 0x05 (IP over Fibre Channel);\n   -  CS_CTL/Prio:\
    \ 0x00 is the default, see [FC-FS] for other values;\n   -  DF_CTL: 0x20 (Network_Header)\
    \ for the first FC frame of an IPv6 or\n      IPv4 Sequence, 0x00 for the following\
    \ FC frames.  If the FC\n      ESP_Header is used, then 0x60 for the first FC\
    \ frame of an IPv6 or\n      IPv4 Sequence, 0x40 for the following FC frames;\n\
    \   -  F_CTL, SEQ_ID, SEQ_CNT, OX_ID, RX_ID: see section 11, section 12,\n   \
    \   and [FC-FS] for additional requirements;\n   -  Parameter: if Relative Offset\
    \ [FC-FS] is not used, the content of\n      this field MUST be ignored by the\
    \ receiver, and SHOULD be set to\n      zero by the sender.  If Relative Offset\
    \ is used, see [FC-FS].\n   To encapsulate ARP over Fibre Channel, the following\
    \ code points\n   apply.  When a single value is listed without further qualification,\n\
    \   that value MUST be used:\n   -  R_CTL: 0x04 (Device_Data frame with Unsolicited\
    \ Data Information\n      Category [FC-FS]);\n   -  TYPE: 0x05 (IP over Fibre\
    \ Channel);\n   -  CS_CTL/Prio: 0x00 is the default, see [FC-FS] for other values;\n\
    \   -  DF_CTL: 0x20 (Network_Header).  If the FC ESP_Header is used, then\n  \
    \    0x60;\n   -  F_CTL, SEQ_ID, SEQ_CNT, OX_ID, RX_ID: see section 11, section\
    \ 12,\n      and [FC-FS] for additional requirements;\n   -  Parameter: SHOULD\
    \ be set to zero.\n"
- title: 4.5.  FC Network_Header
  contents:
  - "4.5.  FC Network_Header\n   The fields of the FC Network_Header are shown in\
    \ figure 6.  For use\n   with IPv6, IPv4, and ARP, the N_Port_Names formats MUST\
    \ be one of\n   0x1, 0x2, 0x5, 0xC, 0xD, 0xE, 0xF [FC-FS].\n       0         \
    \          1                   2                   3\n       0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +-                   Destination N_Port_Name                   -+\n      |\
    \                                                               |\n      +---------------------------------------------------------------+\n\
    \      |                                                               |\n   \
    \   +-                     Source N_Port_Name                      -+\n      |\
    \                                                               |\n      +---------------------------------------------------------------+\n\
    \                       Figure 6: FC Network_Header Format\n"
- title: 4.6.  LLC/SNAP Header
  contents:
  - "4.6.  LLC/SNAP Header\n   The fields of the LLC/SNAP header [IEEE-LLC] are shown\
    \ in figure 7.\n       0                   1                   2             \
    \      3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     DSAP      |     SSAP      |     CTRL      |      OUI      |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \              OUI              |              PID              |\n      +---------------+---------------+---------------+---------------+\n\
    \                        Figure 7: LLC/SNAP Header Format\n   To encapsulate IPv6,\
    \ IPv4, and ARP over Fibre Channel, the following\n   code points MUST be used:\n\
    \   -  DSAP: 0xAA;\n   -  SSAP: 0xAA;\n   -  CTRL: 0x03;\n   -  OUI:  0x000000;\n\
    \   -  PID:  0x86DD for IPv6, 0x0800 for IPv4, 0x0806 for ARP.\n"
- title: 4.7.  Bit and Byte Ordering
  contents:
  - "4.7.  Bit and Byte Ordering\n   IPv6, IPv4, and ARP packets are mapped to the\
    \ FC-4 level using the\n   big-endian byte ordering that corresponds to the standard\
    \ network\n   byte order or canonical form.\n"
- title: 4.8.  Maximum Transfer Unit
  contents:
  - "4.8.  Maximum Transfer Unit\n   The default MTU size for IPv6 packets over Fibre\
    \ Channel is 65280\n   octets.  Large IPv6 packets are mapped to a Sequence of\
    \ FC frames\n   (see section 2.4).  This size may be reduced by a Router\n   Advertisement\
    \ [DISC] containing an MTU option that specifies a\n   smaller MTU, or by manual\
    \ configuration of each Nx_Port.  However, as\n   required by [IPv6], the MTU\
    \ MUST NOT be lower than 1280 octets.  If a\n   Router Advertisement received\
    \ on an Nx_Port has an MTU option\n   specifying an MTU larger than 65280, or\
    \ larger than a manually\n   configured value, that MTU option MAY be logged to\
    \ system management\n   but MUST be otherwise ignored.\n   As the default MTU\
    \ size far exceeds the message sizes typically used\n   in the Internet, an IPv6\
    \ over FC implementation SHOULD implement Path\n   MTU Discovery [PMTUD6], or\
    \ at least maintain different MTU values for\n   on-link and off-link destinations.\n\
    \   For correct operation of IPv6 in a routed environment, it is\n   critically\
    \ important to configure an appropriate MTU option in Router\n   Advertisements.\n\
    \   For correct operation of IPv6 when mixed media (e.g., Ethernet and\n   Fibre\
    \ Channel) are bridged together, the smallest MTU of all the\n   media must be\
    \ advertised by routers in an MTU option.  If there are\n   no routers present,\
    \ this MTU must be manually configured in each node\n   that is connected to a\
    \ medium with a default MTU larger than the\n   smallest MTU.\n   The default\
    \ MTU size for IPv4 packets over Fibre Channel is 65280\n   octets.  Large IPv4\
    \ packets are mapped to a Sequence of FC frames\n   (see section 2.4).  This size\
    \ may be reduced by manual configuration\n   of each Nx_Port or by the Path MTU\
    \ Discovery technique [PMTUD4].\n"
- title: 5.  IPv6 Stateless Address Autoconfiguration
  contents:
  - '5.  IPv6 Stateless Address Autoconfiguration

    '
- title: 5.1.  IPv6 Interface Identifier and Address Prefix
  contents:
  - "5.1.  IPv6 Interface Identifier and Address Prefix\n   The IPv6 Interface ID\
    \ [AARCH] for an Nx_Port is based on the EUI-64\n   address [EUI64] derived from\
    \ the Nx_Port's N_Port_Name.  The IPv6\n   Interface Identifier is obtained by\
    \ complementing the Universal/Local\n   (U/L) bit of the OUI field of the derived\
    \ EUI-64 address.  The U/L\n   bit has no function in Fibre Channel; however,\
    \ it has to be properly\n   handled when a Name_Identifier is converted to an\
    \ EUI-64 address.\n   [FC-FS] specifies a method to map format 0x1 (IEEE 48-bit\
    \ address),\n   0x2 (IEEE Extended), or 0x5 (IEEE Registered) FC Name_Identifiers\
    \ in\n   EUI-64 addresses.  This allows the usage of these Name_Identifiers to\n\
    \   support IPv6.  [FC-FS] also defines EUI-64 mapped FC Name_Identifiers\n  \
    \ (formats 0xC, 0xD, 0xE, and 0xF) that are derived from an EUI-64\n   address.\
    \  It is possible to reverse this address mapping to obtain\n   the original EUI-64\
    \ address in order to support IPv6.\n   IPv6 stateless address autoconfiguration\
    \ MUST be performed as\n   specified in [ACONF].  An IPv6 Address Prefix used\
    \ for stateless\n   address autoconfiguration of an Nx_Port MUST have a length\
    \ of 64\n   bits.\n"
- title: 5.2.  Generating an Interface ID from a Format 1 N_Port_Name
  contents:
  - "5.2.  Generating an Interface ID from a Format 1 N_Port_Name\n   The Name_Identifier\
    \ format 0x1 is shown in figure 8.\n       0                   1             \
    \      2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0 0 0 1|         0x000         |              OUI              |\n   \
    \   +-------+-------+---------------+---------------+---------------+\n      |\
    \      OUI      |                      VSID                     |\n      +---------------+---------------+---------------+---------------+\n\
    \                      Figure 8: Format 0x1 Name_Identifier\n   The EUI-64 address\
    \ derived from this Name_Identifier has the format\n   shown in figure 9 [FC-FS].\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         OUI with complemented U/L bit         |0 0 0 1|  VSID |\n   \
    \   +---------------+---------------+-------+-------+-------+-------+\n      |\
    \                   VSID                |         0x000         |\n      +---------------+---------------+-------+-------+---------------+\n\
    \           Figure 9: EUI-64 Address from a Format 0x1 Name_Identifier\n   The\
    \ IPv6 Interface Identifier is obtained from this EUI-64 address by\n   complementing\
    \ the U/L bit in the OUI field.  Therefore, the OUI in\n   the IPv6 Interface\
    \ ID is exactly as in the FC Name_Identifier.  The\n   resulting IPv6 Interface\
    \ Identifier has local scope [AARCH] and the\n   format shown in figure 10.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      OUI                      |0 0 0 1|  VSID |\n   \
    \   +---------------+---------------+-------+-------+-------+-------+\n      |\
    \                   VSID                |         0x000         |\n      +---------------+---------------+-------+-------+---------------+\n\
    \         Figure 10: IPv6 Interface ID from a Format 0x1 Name_Identifier\n   As\
    \ an example, the FC Name_Identifier 0x10-00-34-63-46-AB-CD-EF\n   generates the\
    \ IPv6 Interface Identifier 3463:461A:BCDE:F000.\n"
- title: 5.3.  Generating an Interface ID from a Format 2 N_Port_Name
  contents:
  - "5.3.  Generating an Interface ID from a Format 2 N_Port_Name\n   The Name_Identifier\
    \ format 0x2 is shown in figure 11.\n       0                   1            \
    \       2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0 0 1 0|    Vendor Specific    |              OUI              |\n   \
    \   +-------+-------+---------------+---------------+---------------+\n      |\
    \      OUI      |                      VSID                     |\n      +---------------+---------------+---------------+---------------+\n\
    \                      Figure 11: Format 0x2 Name_Identifier\n   The EUI-64 address\
    \ derived from this Name_Identifier has the format\n   shown in figure 12 [FC-FS].\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         OUI with complemented U/L bit         |0 0 1 0|  VSID |\n   \
    \   +---------------+-----------------------+-------+-------+-------+\n      |\
    \                   VSID                |    Vendor Specific    |\n      +---------------+-----------------------+-------+---------------+\n\
    \           Figure 12: EUI-64 Address from a Format 0x2 Name_Identifier\n   The\
    \ IPv6 Interface Identifier is obtained from this EUI-64 address by\n   complementing\
    \ the U/L bit in the OUI field.  Therefore, the OUI in\n   the IPv6 Interface\
    \ ID is exactly as in the FC Name_Identifier.  The\n   resulting IPv6 Interface\
    \ Identifier has local scope [AARCH] and the\n   format shown in figure 13.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      OUI                      |0 0 1 0|  VSID |\n   \
    \   +---------------+-----------------------+-------+-------+-------+\n      |\
    \                   VSID                |    Vendor Specific    |\n      +---------------+-----------------------+-------+---------------+\n\
    \         Figure 13: IPv6 Interface ID from a Format 0x2 Name_Identifier\n   As\
    \ an example, the FC Name_Identifier 0x27-89-34-63-46-AB-CD-EF\n   generates the\
    \ IPv6 Interface Identifier 3463:462A:BCDE:F789.\n"
- title: 5.4.  Generating an Interface ID from a Format 5 N_Port_Name
  contents:
  - "5.4.  Generating an Interface ID from a Format 5 N_Port_Name\n   The Name_Identifier\
    \ format 0x5 is shown in figure 14.\n       0                   1            \
    \       2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0 1 0 1|                      OUI                      |  VSID |\n   \
    \   +-------+-------+---------------+---------------+-------+-------+\n      |\
    \                             VSID                              |\n      +---------------+---------------+---------------+---------------+\n\
    \                      Figure 14: Format 0x5 Name_Identifier\n   The EUI-64 address\
    \ derived from this Name_Identifier has the format\n   shown in figure 15 [FC-FS].\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         OUI with complemented U/L bit         |0 1 0 1|  VSID |\n   \
    \   +---------------+---------------+---------------+-------+-------+\n      |\
    \                             VSID                              |\n      +---------------+---------------+---------------+---------------+\n\
    \           Figure 15: EUI-64 Address from a Format 0x5 Name_Identifier\n   The\
    \ IPv6 Interface Identifier is obtained from this EUI-64 address\n   complementing\
    \ the U/L bit in the OUI field.  Therefore, the OUI in\n   the IPv6 Interface\
    \ ID is exactly as in the FC Name_Identifier.  The\n   resulting IPv6 Interface\
    \ Identifier has local scope [AARCH] and the\n   format shown in figure 16.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      OUI                      |0 1 0 1|  VSID |\n   \
    \   +---------------+---------------+---------------+-------+-------+\n      |\
    \                             VSID                              |\n      +---------------+---------------+---------------+---------------+\n\
    \         Figure 16: IPv6 Interface ID from a Format 0x5 Name_Identifier\n   As\
    \ an example, the FC Name_Identifier 0x53-46-34-6A-BC-DE-F7-89\n   generates the\
    \ IPv6 Interface Identifier 3463:465A:BCDE:F789.\n"
- title: 5.5.  Generating an Interface ID from an EUI-64 Mapped N_Port_Name
  contents:
  - "5.5.  Generating an Interface ID from an EUI-64 Mapped N_Port_Name\n   The EUI-64\
    \ mapped Name_Identifiers formats (formats 0xC through 0xF)\n   are derived from\
    \ an EUI-64 address by compressing the OUI field of\n   such addresses.  The compression\
    \ is performed by removing the\n   Universal/Local and Individual/Group bits from\
    \ the OUI, and by\n   putting bits 0 to 5 of the OUI in the first octet of the\n\
    \   Name_Identifier, and bits 8 to 23 of the OUI in the second and third\n   octet\
    \ of the Name_Identifier, as shown in figure 17.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1 1| OUI[0..5] |           OUI[8..23]          |      VSID     |\n   \
    \   +---+-----------+---------------+---------------+---------------+\n      |\
    \                             VSID                              |\n      +---------------+---------------+---------------+---------------+\n\
    \                Figure 17: EUI-64 Mapped Name_Identifiers Format\n   The EUI-64\
    \ address used to generate the Name_Identifier shown in\n   figure 17 has the\
    \ format shown in figure 18.\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | OUI[0..5] |0 0|           OUI[8..23]          |      VSID     |\n   \
    \   +-----------+---+---------------+---------------+---------------+\n      |\
    \                             VSID                              |\n      +---------------+---------------+---------------+---------------+\n\
    \       Figure 18: EUI-64 Address from an EUI-64 Mapped Name_Identifier\n   The\
    \ IPv6 Interface Identifier is obtained from this EUI-64 address by\n   complementing\
    \ the U/L bit in the OUI field.  The resulting IPv6\n   Interface Identifier has\
    \ global scope [AARCH] and the format shown in\n   figure 19.\n       0      \
    \             1                   2                   3\n       0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | OUI[0..5] |1 0|           OUI[8..23]          |      VSID     |\n   \
    \   +-----------+---+---------------+---------------+---------------+\n      |\
    \                             VSID                              |\n      +---------------+---------------+---------------+---------------+\n\
    \      Figure 19: IPv6 Interface ID from an EUI-64 Mapped Name_Identifier\n  \
    \ As an example, the FC Name_Identifier 0xCD-63-46-AB-01-25-78-9A\n   generates\
    \ the IPv6 Interface Identifier 3663:46AB:0125:789A.\n"
- title: 6.  Link-local Addresses
  contents:
  - "6.  Link-local Addresses\n   The IPv6 link-local address [AARCH] for an Nx_Port\
    \ is formed by\n   appending the Interface Identifier (as defined in section 5)\
    \ to the\n   prefix FE80::/64.  The resulting address is shown in figure 20.\n\
    \        10 bits            54 bits                  64 bits\n      +----------+-----------------------+----------------------------+\n\
    \      |1111111010|         (zeros)       |    Interface Identifier    |\n   \
    \   +----------+-----------------------+----------------------------+\n      \
    \              Figure 20: IPv6 Link-local Address Format\n"
- title: 7.  ARP Packet Format
  contents:
  - "7.  ARP Packet Format\n   The Address Resolution Protocol defined in [ARP] is\
    \ designed to be a\n   general purpose protocol, to accommodate many network technologies\n\
    \   and many Upper Layer Protocols.\n   [RFC-2625] chose to use for Fibre Channel\
    \ the same ARP packet format\n   used for Ethernet networks.  In order to do that,\
    \ [RFC-2625]\n   restricted the use of IPv4 to Nx_Ports having N_Port_Name format\
    \ 0x1.\n   Although this may have been a reasonable choice at that time, today\n\
    \   there are Nx_Ports with an N_Port_Name format other than 0x1 in\n   widespread\
    \ use.\n   This specification accommodates Nx_Ports with N_Port_Names of a\n \
    \  format different from 0x1 by defining a Fibre Channel specific\n   version\
    \ of the ARP protocol (FC ARP), carrying both N_Port_Name and\n   N_Port_ID as\
    \ Hardware (HW) Address.\n   IANA has registered the number 18 (decimal) to identify\
    \ Fibre Channel\n   as ARP HW type.  The FC ARP packet format is shown in figure\
    \ 21.  The\n   length of the FC ARP packet is 40 octets.\n       0           \
    \        1                   2                   3\n       0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        HW Type = 0x0012       |       Protocol = 0x0800       |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \  HW Len = 12  | Proto Len = 4 |            Opcode             |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      |\
    \                      HW Address of Sender                     |\n      +-  \
    \                                                           -+\n      |      \
    \                                                         |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                   Protocol Address of Sender                  |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \                                                               |\n      +-  \
    \                                                           -+\n      |      \
    \                HW Address of Target                     |\n      +-        \
    \                                                     -+\n      |            \
    \                                                   |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                   Protocol Address of Target                  |\n   \
    \   +---------------+---------------+---------------+---------------+\n      \
    \                   Figure 21: FC ARP Packet Format\n   The following code points\
    \ MUST be used with FC ARP:\n   -  HW Type:   0x0012 (Fibre Channel);\n   -  Protocol:\
    \  0x0800 (IPv4);\n   -  HW Len:    12 (Length in octets of the HW Address);\n\
    \   -  Proto Len: 4  (Length in octets of the Protocol Address);\n   -  Opcode:\
    \    0x0001 for ARP Request, 0x0002 for ARP Reply [ARP];\n   -  HW Address of\
    \ Sender: the HW Address (see section 8) of the\n      Requester in an ARP Request,\
    \ or the HW Address of the Responder in\n      an ARP Reply;\n   -  Protocol Address\
    \ of Sender: the IPv4 address of the Requester in\n      an ARP Request, or that\
    \ of the Responder in an ARP Reply;\n   -  HW Address of Target: set to zero in\
    \ an ARP Request, and to the HW\n      Address (see section 8) of the Requester\
    \ in an ARP Reply;\n   -  Protocol Address of Target: the IPv4 address of the\
    \ Responder in\n      an ARP Request, or that of the Requester in an ARP Reply.\n"
- title: 8.  Link-layer Address/Hardware Address
  contents:
  - "8.  Link-layer Address/Hardware Address\n   The Link-layer Address used in the\
    \ Source/Target Link-layer Address\n   option (see section 9.2) and the Hardware\
    \ Address used in FC ARP (see\n   section 7) have the same format, shown in figure\
    \ 22.\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      +-  \
    \                       N_Port_Name                         -+\n      |      \
    \                                                         |\n      +---------------+---------------+---------------+---------------+\n\
    \      |   Reserved    |                   N_Port_ID                   |\n   \
    \   +---------------+---------------+---------------+---------------+\n      \
    \           Figure 22: Link-layer Address/HW Address Format\n   Reserved fields\
    \ MUST be set to zero when transmitting, and MUST be\n   ignored when receiving.\n"
- title: 9.  Address Mapping for Unicast
  contents:
  - '9.  Address Mapping for Unicast

    '
- title: 9.1.  Overview
  contents:
  - "9.1.  Overview\n   An Nx_Port has two kinds of Fibre Channel addresses:\n   -\
    \  a non-volatile 64-bit address, called N_Port_Name;\n   -  a volatile 24-bit\
    \ address, called N_Port_ID.\n   The N_Port_Name is used to uniquely identify\
    \ the Nx_Port, and the\n   N_Port_ID is used to route frames to the Nx_Port. \
    \ Both FC addresses\n   are required to resolve an IPv6 or IPv4 unicast address.\
    \  The fact\n   that the N_Port_ID is volatile implies that an Nx_Port MUST validate\n\
    \   the mapping between its N_Port_Name and N_Port_ID when certain Fibre\n   Channel\
    \ events occur (see Appendix B).\n"
- title: 9.2.  IPv6 Address Mapping
  contents:
  - "9.2.  IPv6 Address Mapping\n   The procedure for mapping IPv6 unicast addresses\
    \ into Fibre Channel\n   link-layer addresses uses the Neighbor Discovery Protocol\
    \ [DISC].\n   The Source/Target Link-layer Address option has the format shown\
    \ in\n   figure 23 when the link layer is Fibre Channel.\n       0           \
    \        1                   2                   3\n       0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |  Length = 2   |                               |\n   \
    \   +---------------+---------------+                              -+\n      |\
    \                                                               |\n      +-  \
    \                   Link-layer Address                      -+\n      |      \
    \                                                         |\n      +-        \
    \                      +---------------+---------------+\n      |            \
    \                   |            Padding            |\n      +---------------+---------------+---------------+---------------+\n\
    \    Figure 23: Source/Target Link-layer Address Option for Fibre Channel\n  \
    \    Type:               1 for Source Link-layer address.\n                  \
    \        2 for Target Link-layer address.\n      Length:             2 (in units\
    \ of 8 octets).\n      Padding:            MUST be set to zero when transmitting,\n\
    \                          MUST be ignored when receiving.\n      Link-layer Address:\
    \ the Nx_Port's Link-layer Address (see section\n      8).\n"
- title: 9.3.  IPv4 Address Mapping
  contents:
  - "9.3.  IPv4 Address Mapping\n   The procedure for mapping IPv4 unicast addresses\
    \ into Fibre Channel\n   link-layer addresses uses the FC ARP protocol, as specified\
    \ in\n   section 7 and [ARP].  A source Nx_Port that has to send IPv4 packets\n\
    \   to a destination Nx_Port, known by its IPv4 address, MUST perform the\n  \
    \ following steps:\n   1) The source Nx_Port first consults its local mapping\
    \ tables for a\n      mapping <destination IPv4 address, N_Port_Name, N_Port_ID>.\n\
    \   2) If such a mapping is found, and a valid Port Login is in place\n      with\
    \ the destination Nx_Port, then the source Nx_Port sends the\n      IPv4 packets\
    \ to the destination Nx_Port using the retrieved\n      N_Port_ID as D_ID.\n \
    \  3) If such a mapping is not found, or a valid Port Login is not in\n      place\
    \ with the destination Nx_Port, then the source Nx_Port sends\n      a broadcast\
    \ FC ARP Request (see section 10) to its connected FC\n      network.\n   4) When\
    \ a broadcast FC ARP Request is received by the Nx_Port with\n      the matching\
    \ IPv4 address, that Nx_Port caches the information\n      carried in the FC ARP\
    \ Request in its local mapping tables and\n      generates a unicast FC ARP Reply.\
    \  If a valid Port Login to the\n      Nx_Port that sent the broadcast FC ARP\
    \ Request does not exist, the\n      Nx_Port MUST perform such a Port Login, and\
    \ then use it for the\n      unicast reply.  The N_Port_ID to which the Port Login\
    \ is directed\n      is taken from the N_Port_ID field of the Sender HW Address\
    \ field\n      in the received FC ARP packet.\n   5) If no Nx_Port has the matching\
    \ IPv4 address, no unicast FC ARP\n      Reply is returned.\n"
- title: 10.  Address Mapping for Multicast
  contents:
  - "10.  Address Mapping for Multicast\n   IPv6 multicast packets, IPv4 multicast/broadcast\
    \ packets, and ARP\n   broadcast packets MUST be mapped to FC Sequences addressed\
    \ to the\n   broadcast N_Port_ID 0xFFFFFF, sent in FC Class 3 in a unidirectional\n\
    \   Exchange (see section 12).  Appendix A specifies how to transmit a\n   Class\
    \ 3 broadcast FC Sequence over various Fibre Channel topologies.\n   The Destination\
    \ N_Port_Name field of the FC Network_Header MUST be\n   set to the value:\n \
    \  -  for broadcast ARP and IPv4 packets: 0x10-00-FF-FF-FF-FF-FF-FF;\n   -  for\
    \ multicast IPv6 packets: 0x10-00-33-33-XX-YY-ZZ-QQ, where\n      XX-YY-ZZ-QQ\
    \ are the 4 least significant octets of the multicast\n      destination IPv6\
    \ address;\n   -  for multicast IPv4 packets: 0x10-00-01-00-5E-XX-YY-ZZ, where\
    \ the\n      23 least significant bits of XX-YY-ZZ are the 23 least significant\n\
    \      bits of the multicast destination IPv4 address and the most\n      significant\
    \ bit of XX-YY-ZZ is set to zero.\n   An Nx_Port supporting IPv6 or IPv4 MUST\
    \ be able to map a received\n   broadcast Class 3 Device_Data FC frame to an implicit\
    \ Port Login\n   context in order to handle IPv6 multicast packets, IPv4 multicast\
    \ or\n   broadcast packets, and ARP broadcast packets.  The receive data field\n\
    \   size of this implicit Port Login MUST be the same across all the\n   Nx_Ports\
    \ connected to the same Fabric, otherwise FC broadcast\n   transmission does not\
    \ work.  In order to reduce the need for FC\n   Sequence segmentation, the receive\
    \ data field size of this implicit\n   Port Login SHOULD be 1024 octets.  This\
    \ receive data field size\n   requirement applies to broadcast Device_Data FC\
    \ frames, not to ELSes.\n   Receiving an FC Sequence carrying an IPv6 multicast\
    \ packet, an IPv4\n   multicast/broadcast packet, or an FC ARP broadcast packet\
    \ triggers\n   some additional processing by the Nx_Port when that IPv6, IPv4,\
    \ or\n   FC ARP packet requires a unicast reply.  In this case, if a valid\n \
    \  Port Login to the Nx_Port that sent the multicast or broadcast packet\n   does\
    \ not exist, the Nx_Port MUST perform such a Port Login, and then\n   use it for\
    \ the unicast reply.  In the case of Neighbor Discovery\n   messages [DISC], the\
    \ N_Port_ID to which the Port Login is directed is\n   taken from the N_Port_ID\
    \ field of the Source Link-layer Address in\n   the received Neighbor Discovery\
    \ message.  In the case of FC ARP\n   messages, the N_Port_ID to which the Port\
    \ Login is directed is taken\n   from the N_Port_ID field of the Sender HW Address\
    \ field in the\n   received FC ARP packet.\n   As an example, if a received broadcast\
    \ FC Sequence carries an IPv6\n   multicast unsolicited Router Advertisement [DISC],\
    \ the receiving\n   Nx_Port processes it simply by passing the carried IPv6 packet\
    \ to the\n   IPv6 layer.  Instead, if a received broadcast FC Sequence carries\
    \ an\n   IPv6 multicast solicitation message [DISC] requiring a unicast reply,\n\
    \   and no valid Port Login exists with the Nx_Port sender of the\n   multicast\
    \ packet, then a Port Login MUST be performed in order to\n   send the unicast\
    \ reply message.  If a received broadcast FC Sequence\n   carries an IPv6 multicast\
    \ solicitation message [DISC] requiring a\n   multicast reply, the reply is sent\
    \ to the broadcast N_Port_ID\n   0xFFFFFF.\n"
- title: 11.  Sequence Management
  contents:
  - "11.  Sequence Management\n   FC Sequences carrying IPv6, IPv4, or ARP packets\
    \ are REQUIRED to be\n   non-streamed [FC-FS].  In order to avoid missing FC frame\
    \ aliasing by\n   Sequence_ID reuse, an Nx_Port supporting IPv6 or IPv4 is REQUIRED\
    \ to\n   use continuously increasing SEQ_CNT [FC-FS].  Each Exchange MUST\n  \
    \ start by setting SEQ_CNT to zero in the first frame; every frame\n   transmitted\
    \ after that MUST increment the previous SEQ_CNT by one.\n   The Continue Sequence\
    \ Condition field in the F_CTL field of the FC\n   Header MUST be set to zero\
    \ [FC-FS].\n"
- title: 12.  Exchange Management
  contents:
  - "12.  Exchange Management\n   To transmit IPv6, IPv4, or ARP packets to another\
    \ Nx_Port or to a\n   multicast/broadcast address, an Nx_Port MUST use dedicated\n\
    \   unidirectional Exchanges (i.e., Exchanges dedicated to IPv6, IPv4, or\n  \
    \ ARP packet transmission and that do not transfer Sequence\n   Initiative). \
    \ As such, the Sequence Initiative bit in the F_CTL field\n   of the FC Header\
    \ MUST be set to zero [FC-FS].  The RX_ID field of the\n   FC Header MUST be set\
    \ to 0xFFFF.\n   Unicast FC Sequences carrying unicast Control Protocol packets\
    \ (e.g.,\n   ARP packets; IPv6 packets carrying ICMPv6 [ICMPv6], Neighbor\n  \
    \ Discovery [DISC], or Multicast Listener Discovery [MLDv2] messages;\n   IPv4\
    \ packets carrying ICMP [ICMPv4] or IGMP [IGMPv3] messages) SHOULD\n   be sent\
    \ in short-lived unidirectional Exchanges (i.e., Exchanges\n   containing only\
    \ one Sequence, in which both the First_Sequence and\n   Last_Sequence bits in\
    \ the F_CTL field of the FC Header are set to one\n   [FC-FS]).  Unicast FC Sequences\
    \ carrying other IPv6 and IPv4 packets\n   (i.e., unicast IP packets carrying\
    \ data traffic) MUST be sent in a\n   long-lived unidirectional Exchange (i.e.,\
    \ an Exchange containing one\n   or more Sequences).  IP multicast packets MUST\
    \ NOT be carried in\n   unicast FC Sequences (see section 10).\n   Broadcast FC\
    \ Sequences carrying multicast or broadcast Control\n   Protocol packets (e.g.,\
    \ ARP packets; IPv6 packets carrying ICMPv6\n   [ICMPv6], Neighbor Discovery [DISC],\
    \ or Multicast Listener Discovery\n   [MLDv2] messages; IPv4 packets carrying\
    \ ICMP [ICMPv4] or IGMP\n   [IGMPv3] messages) MUST be sent in short-lived unidirectional\n\
    \   Exchanges.  Broadcast FC Sequences carrying other IPv6 or IPv4\n   multicast\
    \ traffic (i.e., multicast IP packets carrying data traffic)\n   MAY be sent in\
    \ long-lived unidirectional Exchanges to enable a more\n   efficient multicast\
    \ distribution.\n   Reasons to terminate a long-lived Exchange include the termination\
    \ of\n   Port Login and the completion of the IP communication.  A long-lived\n\
    \   Exchange MAY be terminated by setting the Last_Sequence bit in the\n   F_CTL\
    \ field of the FC Header to one, or via the ABTS (Abort Sequence)\n   protocol\
    \ [FC-FS].  A long-lived Exchange SHOULD NOT be terminated by\n   transmitting\
    \ the LOGO ELS, since this may terminate active Exchanges\n   on other FC-4s [FC-FS].\n"
- title: 13.  Interoperability with RFC 2625
  contents:
  - "13.  Interoperability with RFC 2625\n   The IPv4 encapsulation defined in this\
    \ document, along with Exchange\n   and Sequence management, are as defined in\
    \ [RFC-2625].\n   Implementations following this specification are expected to\n\
    \   interoperate with implementations compliant to [RFC-2625] for IPv4\n   packet\
    \ transmission and reception.\n   The main difference between this document and\
    \ [RFC-2625] is in the\n   address resolution procedure.  [RFC-2625] uses the\
    \ Ethernet format of\n   the ARP protocol and requires all Nx_Ports to have a\
    \ format 0x1\n   N_Port_Name.  This specification defines a Fibre Channel format\
    \ for\n   the ARP protocol that supports all commonly used N_Port_Names.  In\n\
    \   addition, this specification does not use FARP [RFC-2625].\n   An Nx_Port\
    \ following this specification, and not having a format 0x1\n   N_Port_Name, is\
    \ able to interoperate with an [RFC-2625]\n   implementation by manually configuring\
    \ the mapping <destination IPv4\n   address, N_Port_Name, N_Port_ID> on the involved\
    \ Nx_Ports.  Through\n   this manual configuration, the ARP protocol does not\
    \ need to be\n   performed.  However, IPv4 communication is not possible if the\n\
    \   [RFC-2625] implementation strictly enforces the requirement for\n   Nx_Ports\
    \ to use N_Port_Names of format 0x1.\n   An Nx_Port following this specification,\
    \ and having a format 0x1\n   N_Port_Name, is able to interoperate with an [RFC-2625]\n\
    \   implementation by manually configuring the mapping <destination IPv4\n   address,\
    \ N_Port_Name, N_Port_ID> on the involved Nx_Ports, or by\n   performing the IPv4\
    \ address resolution in compatibility mode, as\n   described below:\n   -  When\
    \ IPv4 address resolution is attempted, the Nx_Port MUST send\n      two ARP Requests,\
    \ the first one according to the FC ARP format and\n      the second one according\
    \ to the Ethernet ARP format.  If only an\n      Ethernet ARP Reply is received,\
    \ it provides the N_Port_Name of the\n      Nx_Port having the destination IPv4\
    \ address.  The N_Port_ID\n      associated with the N_Port_Name received in an\
    \ Ethernet ARP Reply\n      may be retrieved from the S_ID field of the received\
    \ ARP Reply, or\n      by querying the Fibre Channel Name Server;\n   -  The Nx_Port\
    \ MUST respond to a received Ethernet ARP Request with\n      an Ethernet ARP\
    \ Reply;\n   -  The Nx_Port MAY respond to FARP Requests [RFC-2625].\n   The reception\
    \ of a particular format of ARP message does not imply\n   that the sending Nx_Port\
    \ will continue to use the same format later.\n   Support of compatibility mode\
    \ is REQUIRED by each implementation.\n   The use of compatibility mode MUST be\
    \ administratively configurable.\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   IPv6, IPv4, and ARP do not introduce any additional\
    \ security concerns\n   beyond those that already exist within the Fibre Channel\
    \ protocols.\n   Zoning techniques based on FC Name Server masking (soft zoning)\
    \ do\n   not work with IPv6 and IPv4, because IPv6 and IPv4 over Fibre Channel\n\
    \   do not use the FC Name Server.  The FC ESP_Header [FC-FS] may be used\n  \
    \ to secure the FC frames composing FC Sequences carrying IPv6, IPv4,\n   and\
    \ ARP packets.  All the techniques defined to secure IP traffic at\n   the IP\
    \ layer may be used in a Fibre Channel environment.\n"
- title: 15.  IANA Considerations
  contents:
  - "15.  IANA Considerations\n   The directory of ARP parameters has been updated\
    \ to reference this\n   document for hardware type 18.\n"
- title: 16.  Acknowledgements
  contents:
  - "16.  Acknowledgements\n   The authors would like to acknowledge the ANSI INCITS\
    \ T11.3 Task\n   Group members who reviewed this document as well as the authors\
    \ of\n   [RFC-2625] and [RFC-3831].  The authors also thank the IMSS WG and\n\
    \   Brian Haberman for their review and comments.\n"
- title: 17.  Normative References
  contents:
  - "17.  Normative References\n   [FC-FS]     ANSI INCITS 373-2003, \"Fibre Channel\
    \ - Framing and\n               Signaling (FC-FS)\".\n   [FC-AL-2]   ANSI INCITS\
    \ 332-1999, \"Fibre Channel - Arbitrated Loop-2\n               (FC-AL-2)\".\n\
    \   [IPv6]      Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n  \
    \             (IPv6) Specification\", RFC 2460, December 1998.\n   [AARCH]   \
    \  Hinden, R. and S. Deering, \"Internet Protocol Version 6\n               (IPv6)\
    \ Addressing Architecture\", RFC 3513, April 2003.\n   [ACONF]     Thomson, S.\
    \ and T. Narten, \"IPv6 Stateless Address\n               Autoconfiguration\"\
    , RFC 2462, December 1998.\n   [DISC]      Narten, T., Nordmark, E., and W. Simpson,\
    \ \"Neighbor\n               Discovery for IP Version 6 (IPv6)\", RFC 2461, December\n\
    \               1998.\n   [PMTUD6]    McCann, J., Deering, S., and J. Mogul, \"\
    Path MTU\n               Discovery for IP version 6\", RFC 1981, August 1996.\n\
    \   [IPv4]      Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n         \
    \      September 1981.\n   [ARP]       Plummer, D., \"Ethernet Address Resolution\
    \ Protocol: Or\n               converting network protocol addresses to 48.bit\
    \ Ethernet\n               address for transmission on Ethernet hardware\", STD\
    \ 37,\n               RFC 826, November 1982.\n   [IEEE-LLC]  IEEE Std 802-2001,\
    \ \"IEEE Standard for Local and\n               Metropolitan Area Networks: Overview\
    \ and Architecture\".\n   [KEYWORDS]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 18.  Informative References
  contents:
  - "18.  Informative References\n   [RFC-3831]  DeSanti, C., \"Transmission of IPv6\
    \ Packets over Fibre\n               Channel\", RFC 3831, July 2004.\n   [RFC-2625]\
    \  Rajagopal, M., Bhagwat, R., and W. Rickard, \"IP and ARP\n               over\
    \ Fibre Channel\", RFC 2625, June 1999.\n   [MLDv2]     Vida, R. and L. Costa,\
    \ \"Multicast Listener Discovery\n               Version 2 (MLDv2) for IPv6\"\
    , RFC 3810, June 2004.\n   [IGMPv3]    Cain, B., Deering, S., Kouvelas, I., Fenner,\
    \ B., and A.\n               Thyagarajan, \"Internet Group Management Protocol,\
    \ Version\n               3\", RFC 3376, October 2002.\n   [PMTUD4]    Mogul,\
    \ J. and S. Deering, \"Path MTU discovery\", RFC 1191,\n               November\
    \ 1990.\n   [ICMPv6]    Conta, A. and S. Deering, \"Internet Control Message\n\
    \               Protocol (ICMPv6) for the Internet Protocol Version 6\n      \
    \         (IPv6) Specification\", RFC 2463, December 1998.\n   [ICMPv4]    Postel,\
    \ J., \"Internet Control Message Protocol\", STD 5,\n               RFC 792, September\
    \ 1981.\n   [EUI64]     \"Guidelines For 64-bit Global Identifier (EUI-64)\n \
    \              Registration Authority\",\n               http://standards.ieee.org/regauth/oui/tutorials/\n\
    \               EUI64.html\n"
- title: A.  Transmission of a Broadcast FC Sequence over FC Topologies
  contents:
  - "A.  Transmission of a Broadcast FC Sequence over FC Topologies\n    (Informative)\n"
- title: A.1.  Point-to-Point Topology
  contents:
  - "A.1.  Point-to-Point Topology\n   No particular mechanisms are required for this\
    \ case.  The Nx_Port\n   connected at the other side of the cable receives the\
    \ broadcast FC\n   Sequence having D_ID 0xFFFFFF.\n"
- title: A.2.  Private Loop Topology
  contents:
  - "A.2.  Private Loop Topology\n   An NL_Port attached to a private loop must transmit\
    \ a Class 3\n   broadcast FC Sequence by using the OPN(fr) primitive signal\n\
    \   [FC-AL-2].\n   1) The source NL_Port first sends an Open Broadcast Replicate\n\
    \      (OPN(fr)) primitive signal, forcing all the NL_Ports in the loop\n    \
    \  (except itself) to replicate the frames that they receive while\n      examining\
    \ the FC Header's D_ID field.\n   2) The source NL_Port then removes the OPN(fr)\
    \ signal when it returns\n      to it.\n   3) The source NL_Port then sends the\
    \ Class 3 broadcast FC Sequence\n      having D_ID 0xFFFFFF.\n"
- title: A.3.  Public Loop Topology
  contents:
  - "A.3.  Public Loop Topology\n   An NL_Port attached to a public loop must not\
    \ use the OPN(fr)\n   primitive signal.  Rather, it must send the Class 3 broadcast\
    \ FC\n   Sequence having D_ID 0xFFFFFF to the FL_Port at AL_PA = 0x00\n   [FC-AL-2].\n\
    \   The Fabric propagates the broadcast to all other FC_Ports [FC-FS],\n   including\
    \ the FL_Port that the broadcast arrives on.  This includes\n   all F_Ports, and\
    \ other FL_Ports.\n   Each FL_Port propagates the broadcast by using the primitive\
    \ signal\n   OPN(fr), in order to prepare the loop to receive the broadcast\n\
    \   sequence.\n"
- title: A.4.  Fabric Topology
  contents:
  - "A.4.  Fabric Topology\n   An N_Port connected to an F_Port must transmit the\
    \ Class 3 broadcast\n   FC Sequence having D_ID 0xFFFFFF to the F_Port.  The Fabric\n\
    \   propagates the broadcast to all other FC_Ports [FC-FS].\n"
- title: B.  Validation of the <N_Port_Name, N_Port_ID> Mapping
  contents:
  - "B.  Validation of the <N_Port_Name, N_Port_ID> Mapping\n    (Informative)\n"
- title: B.1.  Overview
  contents:
  - "B.1.  Overview\n   At all times, the <N_Port_Name, N_Port_ID> mapping must be\
    \ valid\n   before use.\n   After an FC link interruption occurs, the N_Port_ID\
    \ of an Nx_Port may\n   change, as well as the N_Port_IDs of all other Nx_Ports\
    \ that have\n   previously performed Port Login with this Nx_Port.  Because of\
    \ this,\n   address validation is required after a Loop Initialization Primitive\n\
    \   Sequence (LIP) in a loop topology [FC-AL-2] or after Not_Operational\n   Primitive\
    \ Sequence / Offline Primitive Sequence (NOS/OLS) in a\n   point-to-point topology\
    \ [FC-FS].\n   N_Port_IDs do not change as a result of Link Reset (LR) [FC-FS];\n\
    \   thus, address validation is not required in this case.\n"
- title: B.2.  FC Layer Address Validation in a Point-to-Point Topology
  contents:
  - "B.2.  FC Layer Address Validation in a Point-to-Point Topology\n   No validation\
    \ is required after Link Reset (LR).  In a point-to-point\n   topology, NOS/OLS\
    \ causes implicit Logout of each N_Port and after an\n   NOS/OLS each N_Port must\
    \ again perform a Port Login [FC-FS].\n"
- title: B.3.  FC Layer Address Validation in a Private Loop Topology
  contents:
  - "B.3.  FC Layer Address Validation in a Private Loop Topology\n   After a LIP\
    \ [FC-AL-2], an NL_Port must not transmit any data to\n   another NL_Port until\
    \ the address of the other port has been\n   validated.  The validation consists\
    \ of completing the Address\n   Discovery procedure with the ADISC ELS [FC-FS].\n\
    \   If the three FC addresses (N_Port_ID, N_Port_Name, Node_Name) of a\n   logged\
    \ remote NL_Port exactly match the values prior to the LIP, then\n   any active\
    \ Exchange with that NL_Port may continue.\n   If any of the three FC addresses\
    \ has changed, then the remote NL_Port\n   must be logged out.\n   If an NL_Port's\
    \ N_Port_ID changes after a LIP, then all active\n   logged-in NL_Ports must be\
    \ logged out.\n"
- title: B.4.  FC Layer Address Validation in a Public Loop Topology
  contents:
  - "B.4.  FC Layer Address Validation in a Public Loop Topology\n   A Fabric Address\
    \ Notification (FAN) ELS may be sent by the Fabric to\n   all known previously\
    \ logged-in NL_Ports following an initialization\n   event.  Therefore, after\
    \ a LIP [FC-AL-2], NL_Ports may wait for this\n   notification to arrive, or they\
    \ may perform an FLOGI.\n   If the F_Port_Name and Fabric_Name contained in the\
    \ FAN ELS or FLOGI\n   response exactly match the values before the LIP and if\
    \ the AL_PA\n   [FC-AL-2] obtained by the NL_Port is the same as the one before\
    \ the\n   LIP, then the port may resume all Exchanges.  If not, then FLOGI must\n\
    \   be performed with the Fabric and all logged-in Nx_Ports must be\n   logged\
    \ out.\n   A public loop NL_Port must perform the private loop validation as\n\
    \   specified in section B.3 to any NL_Port on the local loop that has an\n  \
    \ N_Port_ID of the form 0x00-00-XX (i.e., to any private loop NL_Port).\n"
- title: B.5.  FC Layer Address Validation in a Fabric Topology
  contents:
  - "B.5.  FC Layer Address Validation in a Fabric Topology\n   No validation is required\
    \ after Link Reset (LR).\n   After NOS/OLS, an N_Port must perform FLOGI.  If,\
    \ after FLOGI, the\n   N_Port's N_Port_ID, the F_Port_Name, and the Fabric_Name\
    \ are the same\n   as before the NOS/OLS, then the N_Port may resume all Exchanges.\
    \  If\n   not, all logged-in Nx_Ports must be logged out [FC-FS].\n"
- title: C.  Fibre Channel Bit and Byte Numbering Guidance
  contents:
  - "C.  Fibre Channel Bit and Byte Numbering Guidance\n   Both Fibre Channel and\
    \ IETF standards use the same byte transmission\n   order.  However, the bit numbering\
    \ is different.\n   Fibre Channel bit numbering can be observed if the data structure\n\
    \   heading shown in figure 24 is cut and pasted at the top of the\n   figures\
    \ present in this document.\n         3                   2                  \
    \ 1                   0\n       1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9\
    \ 8 7 6 5 4 3 2 1 0\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     Figure 24: Fibre Channel Bit Numbering\n"
- title: D.  Changes from RFC 2625
  contents:
  - "D.  Changes from RFC 2625\n   -  Nx_Ports with N_Port_Name format 0x2, 0x5, 0xC,\
    \ 0xD, 0xE, and 0xF\n      are supported, in addition to format 0x1;\n   -  An\
    \ IP-capable Nx_Port MUST support Class 3;\n   -  An IP-capable Nx_Port MUST support\
    \ continuously increasing\n      SEQ_CNT;\n   -  An IP-capable Nx_Port SHOULD\
    \ support a receive data field size for\n      Device_Data FC frames of at least\
    \ 1024 octets;\n   -  The FC ESP_Header MAY be used;\n   -  FC Classes of services\
    \ other than 3 are not recommended;\n   -  Defined a new FC ARP format;\n   -\
    \  Removed support for FARP because some FC implementations do not\n      tolerate\
    \ receiving broadcast ELSes;\n   -  Added support for IPv4 multicast;\n   -  Clarified\
    \ the usage of the CS_CTL and Parameter fields of the FC\n      Header;\n   -\
    \  Clarified the usage of FC Classes of service;\n   -  Clarified the usage of\
    \ FC Sequences and Exchanges.\n"
- title: E.  Changes from RFC 3831
  contents:
  - "E.  Changes from RFC 3831\n   -  Clarified the usage of the CS_CTL and Parameter\
    \ fields of the FC\n      Header;\n   -  Clarified the usage of FC Classes of\
    \ service;\n   -  Clarified and updated the mapping of IPv6 multicast on Fibre\n\
    \      Channel;\n   -  Clarified the usage of FC Sequences and Exchanges;\n  \
    \ -  Clarified and updated the format of the Neighbor Discovery\n      Link-layer\
    \ option for Fibre Channel.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Claudio DeSanti\n   Cisco Systems, Inc.\n   170 W. Tasman\
    \ Dr.\n   San Jose, CA 95134\n   USA\n   Phone:  +1 408 853-9172\n   EMail:  cds@cisco.com\n\
    \   Craig W. Carlson\n   QLogic Corporation\n   6321 Bury Drive\n   Eden Prairie,\
    \ MN 55346\n   USA\n   Phone:  +1 952 932-4064\n   EMail:  craig.carlson@qlogic.com\n\
    \   Robert Nixon\n   Emulex\n   3333 Susan Street\n   Costa Mesa, CA 92626\n \
    \  USA\n   Phone:  +1 714 885-3525\n   EMail:  bob.nixon@emulex.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
