Abstract This document describes the use of the Advanced Encryption Standard (AES)
Cipher Algorithm in Cipher Block Chaining
(CBC) Mode, with an explicit Initialization Vector (IV), as a confidentiality mechanism within the context of the IPsec Encapsulating Security Payload (ESP).
As the culmination of a four year competitive process, NIST (the National Institute of Standards and Technology) has selected the AES (Advanced Encryption Standard), the successor to the venerable DES (Data Encryption Standard).
The competition was an open one, with public participation and comment solicited at each step of the process.
The AES [AES], formerly known as Rijndael, was chosen from a field of five finalists.
The AES selection was made on the basis of several characteristics:
security    unclassified    publicly disclosed    available royalty free, worldwide    capable of handling a block size of at least 128 bits    at a minimum, capable of handling key sizes of 128, 192, and 256 bits
computational efficiency and memory requirements on a variety of software and hardware, including smart cards    flexibility, simplicity and ease of implementation
The AES will be the government's designated encryption cipher.
The expectation is that the AES will suffice to protect sensitive (unclassified) government information until at least the next century.
It is also expected to be widely adopted by businesses and financial institutions.
It is the intention of the IETF IPsec Working Group that AES will eventually be adopted as the default IPsec ESP cipher and will obtain the status of MUST be included in compliant IPsec implementations.
The remainder of this document specifies the use of the AES within the context of IPsec ESP.
For further information on how the various pieces of ESP fit together to provide security services, refer to [ARCH], [ESP], and [ROAD]. 1.1.
The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" that appear in this document are to be interpreted as described in [RFC 2119].
All symmetric block cipher algorithms share common characteristics and variables, including mode, key size, weak keys, block size, and rounds.
The following sections contain descriptions of the relevant characteristics of the AES cipher.
Mode NIST has defined 5 modes of operation for AES and other FIPS approved ciphers [MODES]:
CBC (Cipher Block Chaining), ECB (Electronic CodeBook), CFB (Cipher FeedBack), OFB (Output FeedBack) and CTR (Counter).
The CBC mode is well defined and well understood for symmetric ciphers, and is currently required for all other ESP ciphers.
This document specifies the use of the AES cipher in CBC mode within ESP.
This mode requires an Initialization Vector (IV)
that is the same size as the block size.
Use of a randomly generated IV prevents generation of identical ciphertext from packets which have identical data that spans the first block of the cipher algorithm's block size.
The IV is XOR'd with the first plaintext block before it is encrypted.
Then for successive blocks, the previous ciphertext block is XOR'd with the current plaintext, before it is encrypted.
More information on CBC mode can be obtained in [MODES, CRYPTO S].
For the use of CBC mode in ESP with 64 bit ciphers, see [CBC].
Key Size and Number of Rounds AES supports three key sizes: 128 bits, 192 bits, and 256 bits.
The default key size is 128 bits, and all implementations MUST support this key size.
Implementations MAY also support key sizes of 192 bits and 256 bits.
AES uses a different number of rounds for each of the defined key sizes.
When a 128 bit key is used, implementations MUST use 10 rounds.
When a 192 bit key is used, implementations MUST use 12 rounds.
When a 256 bit key is used, implementations MUST use 14 rounds.
At the time of writing this document there are no known weak keys for the AES.
Some cipher algorithms have weak keys or keys that MUST not be used due to their interaction with some aspect of the cipher's definition.
If weak keys are discovered for the AES, then weak keys SHOULD be checked for and discarded when using manual key management.
When using dynamic key management, such as [IKE], weak key checks SHOULD NOT be performed as they are seen as an unnecessary added code complexity that could weaken the intended security [EVALUATION].
The AES uses a block size of sixteen octets (128 bits).
Padding is required by the AES to maintain a 16 octet (128 bit) blocksize.
Padding MUST be added, as specified in [ESP], such that the data to be encrypted (which includes the ESP Pad Length and Next Header fields) has a length that is a multiple of 16 octets.
Because of the algorithm specific padding requirement, no additional padding is required to ensure that the ciphertext terminates on a 4  octet boundary (i.e., maintaining a 16 octet blocksize guarantees that the ESP Pad Length and Next Header fields will be right aligned within a 4 octet word).
Additional padding MAY be included, as specified in [ESP], as long as the 16 octet blocksize is maintained.
Additional Information AES was invented by Joan Daemen from Banksys/PWI and Vincent Rijmen from ESAT COSIC, both in Belgium, and is available world wide on a royalty free basis.
It is not covered by any patents, and the Rijndael homepage contains the following statement: "Rijndael is available for free.
You can use it for whatever purposes you want, irrespective of whether it is accepted as AES or not."
AES's description can be found in [AES].
The Rijndael homepage is: http://www.esat.kuleuven.ac.be/~rijmen/rijndael/.
The AES homepage, http://www.nist.gov/aes, contains a wealth of information about the AES, including a definitive description of the AES algorithm, performance statistics, test vectors and intellectual property information.
This site also contains information on how to obtain an AES reference implementation from NIST.
Performance For a comparison table of the estimated speeds of AES and other cipher algorithms, please see [PERF 1], [PERF 2], [PERF 3], or [PERF 4].
The AES homepage has pointers to other analyses.
The ESP payload is made up of the IV followed by raw cipher text.
The IV MUST be chosen at random, and MUST be unpredictable.
Including the IV in each datagram ensures that decryption of each received datagram can be performed, even when some datagrams are dropped, or datagrams are re ordered in transit.
To avoid CBC encryption of very similar plaintext blocks in different packets, implementations MUST NOT use a counter or other low Hamming distance source for IVs.
Currently, there are no known issues regarding interactions between the AES and other aspects of ESP, such as use of certain authentication schemes.
The minimum number of bits sent from the key exchange protocol to the ESP algorithm must be greater than or equal to the key size.
The cipher's encryption and decryption key is taken from the first <x> bits of the keying material, where <x> represents the required key size.
The first 4 test cases test AES CBC encryption.
Each test case includes the key, the plaintext, and the resulting ciphertext.
The values of keys and data are either hexadecimal numbers (prefixed by "0x") or ASCII character strings (surrounded by double quotes).
If a value is an ASCII character string, then the AES CBC computation for the corresponding test case DOES NOT include the trailing null character ('\0') of the string.
The computed cyphertext values are all hexadecimal numbers.
The last 4 test cases illustrate sample ESP packets using AES CBC for encryption.
All data are hexadecimal numbers (not prefixed by "0x").
These test cases were verified using 2 independent implementations: the NIST AES CBC reference implementation and an implementation provided by the authors of the Rijndael algorithm (http://csrc.nist.gov/encryption/aes/rijndael/ rijndael unix refc.tar).
Case #1: Encrypting 16 bytes (1 block) using AES CBC with 128 bit key
Plaintext : "Single block msg" Ciphertext:
Case #2: Encrypting 32 bytes (2 blocks) using AES CBC with 128 bit key
Case #3: Encrypting 48 bytes (3 blocks) using AES CBC with 128 bit key
This is a 48 byte message (exactly 3 AES blocks)" Ciphertext: 0xd0a02b3836451753d493665d33f0e886 2dea54cdb293abc7506939276772f8d5 021c19216bad525c8579695d83ba2684
Case #4: Encrypting 64 bytes (4 blocks) using AES CBC with 128 bit key
0xc30e32ffedc0774e6aff6af0869f71aa 0f3af07a9a31a9c684db207eb0ef8e4e 35907aa632c3ffdf868bb7b29d3d46ad 83ce9f9a102ee99d49a53e87f4c3da55 Case #5:
Sample transport mode ESP packet (ping 192.168.123.100)
Sequence number: 1 IV: e96e8c08 ab465763 fd098d45 dd3ff893 Original packet: IP header (20 bytes): 45000054 08f20000 4001f9fe c0a87b03 c0a87b64 Data (64 bytes):
2c2d2e2f 30313233 34353637 Augment data with: Padding: 01020304
Pre encryption Data with padding, pad length and next header (80 bytes):
05060708 090a0b0c 0d0e0e01 Post encryption packet with SPI, Sequence number, IV: IP header:
4500007c 08f20000 4032f9a5 c0a87b03 c0a87b64
e96e8c08 ab465763 fd098d45 dd3ff893 Encrypted Data (80 bytes):
f663c25d 325c18c6 a9453e19 4e120849 a4870b66 cc6b9965 330013b4
Sample transport mode ESP packet (ping  p 77
Sequence number: 8 IV: 69d08df7 d203329d b093fc49
24e5bd80 Original packet: IP header (20 bytes): 45000030 08fe0000
4001fa16 c0a87b03 c0a87b64 Data (28 bytes): 0800b5e8 a80a0500 a69c083d 0b660e00
77777777 77777777 77777777 Augment data with: Padding:
Pre encryption Data with padding, pad length and next header (32 bytes):
77777777 01020201 Post encryption packet with SPI, Sequence number, IV:
IV: 69d08df7 d203329d b093fc49 24e5bd80 Encrypted Data (32 bytes): f5199588 1ec4e0c4
Sample tunnel mode ESP packet (ping 192.168.123.200)
SPI: 8765 Source address: 192.168.123.3 Destination address:
Sequence number: 2 IV: f4e76524 4f6407ad
Original packet: IP header (20 bytes): 45000054 09040000 4001f988 c0a87b03 c0a87bc8 Data (64 bytes):
2c2d2e2f 30313233 34353637 Augment data with: Padding: 01020304
Next header: 04 (IP in IP)
Pre encryption Data with original IP header, padding, pad length and next header (96 bytes): 45000054 09040000
090a0a04 Post encryption packet with SPI, Sequence number, IV:
IP header: 4500008c 09050000 4032f91e c0a87b03
773b5241 a4c44922 5e4f3ce5 ed611b0c 237ca96c f74a9301 3c1b0ea1 a0cf70f8 e4ecaec7
ecd136e5 c177f132 ad3fbfb2 201ac990 4c74ee0a 109e0ca1
ESP packet (ping  p ff  s
SPI: 8765 Source address: 192.168.123.3 Destination address:
Sequence number: 5 IV: 85d47224 b5f3dd5d 2101d4ea 8dffab22 Original packet:
IP header (20 bytes): 45000044 090c0000 4001f990 c0a87b03 c0a87bc8 Data (48 bytes):
c69c083d a3de0300 ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff Augment data with: Padding:
Next header: 04 (IP in IP)
Pre encryption Data with original IP header, padding, pad length and next header (80 bytes): 45000044
c69c083d a3de0300 ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff 01020304 05060708
090a0a04 Post encryption packet with SPI, Sequence number, IV:
4032f926 c0a87b03 c0a87bc8 SPI/Seq #:
00008765 00000005 IV: 85d47224 b5f3dd5d 2101d4ea 8dffab22 Encrypted Data (80 bytes):
Phase 1 Identifier For Phase 1 negotiations, IANA has assigned an Encryption Algorithm ID of 7 for AES CBC.
Phase 2 Identifier For Phase 2 negotiations, IANA has assigned an ESP Transform Identifier of 12 for ESP AES.
Since the AES allows variable key lengths, the Key Length attribute MUST be specified in both a Phase 1 exchange [IKE] and a Phase 2 exchange [DOI].
A companion competition, to select the successor to SHA 1, the widely used hash algorithm, recently concluded.
The resulting hashes, called SHA 256, SHA 384 and SHA 512
[SHA2 1, SHA2 2] are capable of producing output of three different lengths (256, 384 and 512 bits), sufficient for the generation (within IKE) and authentication (within ESP) of the three AES key sizes (128, 192 and 256 bits).
However, HMAC SHA 1 [HMAC SHA] and HMAC MD5 [HMAC MD5] are currently considered of sufficient strength to serve both as IKE generators of 128 bit AES keys and as ESP authenticators for AES encryption using 128 bit keys.
Security Considerations Implementations are encouraged to use the largest key sizes they can when taking into account performance considerations for their particular hardware and software configuration.
Note that encryption necessarily impacts both sides of a secure channel, so such consideration must take into account not only the client side, but the server as well.
However, a key size of 128 bits is considered secure for the foreseeable future.
For more information regarding the necessary use of random IV values, see [CRYPTO B].
For further security considerations, the reader is encouraged to read [AES].
IANA Considerations IANA has assigned Encryption Algorithm ID 7 to AES CBC.
IANA has assigned ESP Transform Identifier 12 to ESP AES.
