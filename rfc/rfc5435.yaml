- title: __initial_text__
  contents:
  - '           Sieve Email Filtering: Extension for Notifications

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ (http://trustee.ietf.org/\n   license-info) in effect on the date of publication\
    \ of this document.\n   Please review these documents carefully, as they describe\
    \ your rights\n   and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   Users go to great lengths to be notified as quickly as possible\
    \ that\n   they have received new mail.  Most of these methods involve polling\n\
    \   to check for new messages periodically.  A push method handled by the\n  \
    \ final delivery agent gives users quicker notifications and saves\n   server\
    \ resources.  This document does not specify the notification\n   method, but\
    \ it is expected that using existing instant messaging\n   infrastructure such\
    \ as Extensible Messaging and Presence Protocol\n   (XMPP), or Global System for\
    \ Mobile Communications (GSM) Short\n   Message Service (SMS) messages will be\
    \ popular.  This document\n   describes an extension to the Sieve mail filtering\
    \ language that\n   allows users to give specific rules for how and when notifications\n\
    \   should be sent.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. Capability Identifier ...........................................3\n   3.\
    \ Notify Action ...................................................3\n      3.1.\
    \ Notify Action Syntax and Semantics .........................3\n      3.2. Notify\
    \ Parameter \"method\" ..................................3\n      3.3. Notify\
    \ Tag \":from\" .........................................4\n      3.4. Notify\
    \ Tag \":importance\" ...................................4\n      3.5. Notify\
    \ Tag \":options\" ......................................5\n      3.6. Notify\
    \ Tag \":message\" ......................................5\n      3.7. Examples\
    \ ...................................................6\n      3.8. Requirements\
    \ on Notification Methods Specifications ........7\n   4. Test valid_notify_method\
    \ ........................................8\n   5. Test notify_method_capability\
    \ ...................................9\n   6. Modifier encodeurl to the 'set'\
    \ Action .........................10\n   7. Interactions with Other Sieve Actions\
    \ ..........................11\n   8. Security Considerations ........................................11\n\
    \   9. IANA Considerations ............................................13\n  \
    \    9.1. Registration of Sieve Extension ...........................13\n    \
    \  9.2. New Registry for Sieve Notification Mechanisms ............14\n      9.3.\
    \ New Registry for Notification-Capability Parameters .......14\n   10. Acknowledgements\
    \ ..............................................15\n   11. References ....................................................16\n\
    \      11.1. Normative References .....................................16\n  \
    \    11.2. Informative References ...................................16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This is an extension to the Sieve language defined by [Sieve]\
    \ for\n   providing instant notifications.  It defines the new action \"notify\"\
    .\n   This document does not specify the notification methods.  Examples of\n\
    \   possible notification methods are email and XMPP.  To allow for the\n   portability\
    \ of scripts that use notifications, implementation of the\n   [MailTo] method\
    \ is mandatory.  Other available methods shall depend\n   upon the implementation\
    \ and configuration of the system.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   Conventions for notations are as\
    \ in [Sieve], Section 1.1, including\n   the use of [ABNF].\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in [Kwds].\n"
- title: 2.  Capability Identifier
  contents:
  - "2.  Capability Identifier\n   The capability string associated with the extension\
    \ defined in this\n   document is \"enotify\".\n"
- title: 3.  Notify Action
  contents:
  - '3.  Notify Action

    '
- title: 3.1.  Notify Action Syntax and Semantics
  contents:
  - "3.1.  Notify Action Syntax and Semantics\n   Usage:  notify [\":from\" string]\n\
    \           [\":importance\" <\"1\" / \"2\" / \"3\">]\n           [\":options\"\
    \ string-list]\n           [\":message\" string]\n           <method: string>\n\
    \   The \"notify\" action specifies that a notification should be sent to a\n\
    \   user.  The format of the notification is implementation-defined and\n   is\
    \ also affected by the notification method used (see Section 3.2).\n   However,\
    \ all content specified in the \":message\" parameter SHOULD be\n   included.\n"
- title: 3.2.  Notify Parameter "method"
  contents:
  - "3.2.  Notify Parameter \"method\"\n   The \"method\" positional parameter identifies\
    \ the notification method\n   that will be used; it is a URI [URI].  For example,\
    \ the notification\n   method can be a tel URI [TEL-URI] with a phone number to\
    \ send SMS\n   messages to, or an XMPP [XMPP] URI containing an XMPP identifier\n\
    \   [XMPP-URI].\n   The supported URI values will be site-specific, but support\
    \ for the\n   [MailTo] method is REQUIRED in order to ensure interoperability.\
    \  If\n   a URI schema is specified that the implementation does not support,\n\
    \   the notification MUST cause an error condition at run time.  Sieve\n   scripts\
    \ can check the supported methods using the valid_notify_method\n   test to be\
    \ sure that they only use supported ones, to avoid such\n   error conditions.\n\
    \   If the \"method\" parameter contains a supported URI schema, then the\n  \
    \ URI MUST be checked for syntactic validity.  Invalid URI syntax or an\n   unsupported\
    \ URI extension MUST cause an error.  An implementation MAY\n   enforce other\
    \ semantic restrictions on URIs -- for example, to\n   restrict phone numbers\
    \ in a tel: URI to a particular geographical\n   region -- and will treat violations\
    \ of such semantic restrictions as\n   errors.\n"
- title: 3.3.  Notify Tag ":from"
  contents:
  - "3.3.  Notify Tag \":from\"\n   A \":from\" tag may be used to specify an author\
    \ of the notification.\n   The syntax of this parameter's value is method-specific.\n\
    \   Implementations SHOULD check the syntax according to the notification\n  \
    \ method specification and generate an error when a syntactically\n   invalid\
    \ \":from\" tag is specified.\n   In order to minimize/prevent forgery of the\
    \ author value,\n   implementations SHOULD impose restrictions on what values\
    \ can be\n   specified in a \":from\" tag.  For example, an implementation may\n\
    \   restrict this value to be a member of a list of known author\n   addresses\
    \ or to belong to a particular domain.  It is suggested that\n   values that don't\
    \ satisfy such restrictions simply be ignored rather\n   than causing the \"notify\"\
    \ action to fail.\n"
- title: 3.4.  Notify Tag ":importance"
  contents:
  - "3.4.  Notify Tag \":importance\"\n   The \":importance\" tag specifies the importance\
    \ of quick delivery of\n   the notification, as perceived by the Sieve script\
    \ owner.  The\n   \":importance\" tag is followed by a numeric value represented\
    \ as a\n   string: \"1\" (high importance), \"2\" (normal importance), and \"\
    3\" (low\n   importance).  If no importance is given, the default value \"2\"\
    \ SHOULD\n   be assumed.  A notification method MAY treat the importance value\
    \ as\n   a transport indicator.  For example, it might deliver notifications\n\
    \   of high importance quicker than notifications of normal or low\n   importance.\
    \  Some notification methods allow users to specify their\n   state of activity\
    \ (for example, \"busy\" or \"away from keyboard\").  If\n   the notification\
    \ method provides this information, it SHOULD be used\n   to selectively send\
    \ notifications.  If, for example, the user marks\n   herself as \"busy\", a notification\
    \ method can require that a\n   notification with importance of \"3\" is not to\
    \ be sent; however, the\n   user might be notified of a notification with higher\
    \ importance.\n   If the notification method allows users to filter messages based\
    \ upon\n   certain parameters in the message, users SHOULD be able to filter\n\
    \   based upon importance.  If the notification method does not support\n   importance,\
    \ then this parameter MUST be ignored.  An implementation\n   MAY include the\
    \ importance value in the default message, Section 3.6,\n   if one is not provided.\n"
- title: 3.5.  Notify Tag ":options"
  contents:
  - "3.5.  Notify Tag \":options\"\n   The \":options\" tag is used to send additional\
    \ parameters to the\n   notification method.  Interpretation of the parameters\
    \ is method-\n   specific.  This document doesn't specify any such additional\n\
    \   parameter.\n   Each string in the options string list has the following syntax:\n\
    \   \"<optionname>=<value>\"\n   where optionname has the following ABNF [ABNF]:\n\
    \      l-d = ALPHA / DIGIT\n      l-d-p = l-d / \".\" / \"-\" / \"_\"\n      optionname\
    \ = l-d *l-d-p\n      value = *(%x01-09 / %x0B-0C / %x0E-FF)\n"
- title: 3.6.  Notify Tag ":message"
  contents:
  - "3.6.  Notify Tag \":message\"\n   The \":message\" tag specifies the message\
    \ data to be included in the\n   notification.  The entirety of the string SHOULD\
    \ be sent, but\n   implementations MAY shorten the message for technical or aesthetic\n\
    \   reasons.  If the \":message\" parameter is absent, a default\n   implementation-specific\
    \ message is used.  Unless otherwise specified\n   by a particular notification\
    \ mechanism, an implementation default\n   containing at least the value of the\
    \ \"From\" header field and the\n   value of the \"Subject\" header field is RECOMMENDED.\n\
    \   In order to construct more complex messages, the notify extension can\n  \
    \ be used together with the Sieve variables extension [Variables], as\n   shown\
    \ in the examples below.\n"
- title: 3.7.  Examples
  contents:
  - "3.7.  Examples\n   Example 1:\n       require [\"enotify\", \"fileinto\", \"\
    variables\"];\n       if header :contains \"from\" \"boss@example.org\" {\n  \
    \         notify :importance \"1\"\n               :message \"This is probably\
    \ very important\"\n                           \"mailto:alm@example.com\";\n \
    \          # Don't send any further notifications\n           stop;\n       }\n\
    \       if header :contains \"to\" \"sievemailinglist@example.org\" {\n      \
    \     # :matches is used to get the value of the Subject header\n           if\
    \ header :matches \"Subject\" \"*\" {\n               set \"subject\" \"${1}\"\
    ;\n           }\n           # :matches is used to get the value of the From header\n\
    \           if header :matches \"From\" \"*\" {\n               set \"from\" \"\
    ${1}\";\n           }\n           notify :importance \"3\"\n               :message\
    \ \"[SIEVE] ${from}: ${subject}\"\n               \"mailto:alm@example.com\";\n\
    \           fileinto \"INBOX.sieve\";\n       }\n   Example 2:\n       require\
    \ [\"enotify\", \"fileinto\", \"variables\", \"envelope\"];\n       if header\
    \ :matches \"from\" \"*@*.example.org\" {\n           # :matches is used to get\
    \ the MAIL FROM address\n           if envelope :all :matches \"from\" \"*\" {\n\
    \               set \"env_from\" \" [really: ${1}]\";\n           }\n        \
    \   # :matches is used to get the value of the Subject header\n           if header\
    \ :matches \"Subject\" \"*\" {\n               set \"subject\" \"${1}\";\n   \
    \        }\n           # :matches is used to get the address from the From header\n\
    \           if address :matches :all \"from\" \"*\" {\n               set \"from_addr\"\
    \ \"${1}\";\n           }\n           notify :message \"${from_addr}${env_from}:\
    \ ${subject}\"\n                           \"mailto:alm@example.com\";\n     \
    \  }\n Example 3:\n     require [\"enotify\", \"variables\"];\n     set \"notif_method\"\
    \n     \"xmpp:tim@example.com?message;subject=SIEVE;body=You%20got%20mail\";\n\
    \     if header :contains \"subject\" \"Your dog\" {\n         set \"notif_method\"\
    \ \"tel:+14085551212\";\n     }\n     if header :contains \"to\" \"sievemailinglist@example.org\"\
    \ {\n         set \"notif_method\" \"\";\n     }\n     if not string :is \"${notif_method}\"\
    \ \"\" {\n         notify \"${notif_method}\";\n     }\n     if header :contains\
    \ \"from\" \"boss@example.org\" {\n         # :matches is used to get the value\
    \ of the Subject header\n         if header :matches \"Subject\" \"*\" {\n   \
    \          set \"subject\" \"${1}\";\n         }\n         # don't need high importance\
    \ notification for\n         # a 'for your information'\n         if not header\
    \ :contains \"subject\" \"FYI:\" {\n             notify :importance \"1\" :message\
    \ \"BOSS: ${subject}\"\n                                \"tel:+14085551212\";\n\
    \         }\n     }\n"
- title: 3.8.  Requirements on Notification Methods Specifications
  contents:
  - "3.8.  Requirements on Notification Methods Specifications\n   This section describes\
    \ requirements for documents that define\n   specific Sieve notification methods.\n\
    \   Notification mechanisms MUST NOT add new Sieve tags to the \"notify\"\n  \
    \ action.\n   A notification method MAY allow modification of the final\n   notification\
    \ text -- for example, truncating it if it exceeds a\n   length limit or modifying\
    \ characters that can not be represented in\n   the target character set.  Characters\
    \ in the notification text that\n   can't be represented by the notification method\
    \ SHOULD be replaced\n   with a symbol indicating an unknown character.  Allowed\
    \ modifications\n   MUST be documented in the document describing the notification\n\
    \   method.\n   A notification method MAY ignore parameters specified in the \"\
    notify\"\n   action.\n   A notification method MAY recommend the default message\
    \ value to be\n   used if the \":message\" argument is not specified.\n   Notifications\
    \ SHOULD include timestamps, if the notification method\n   allows for their transmission\
    \ outside of the textual message.\n   Implementation methods that can only transmit\
    \ timestamps in the\n   textual message MAY include them in the textual message.\n\
    \   A notification MUST include means to identify/track its origin in\n   order\
    \ to allow a recipient to stop notifications or find out how to\n   contact the\
    \ sender.  This requirement is to help with tracking a\n   misconfigured or abusive\
    \ origin of notifications.\n   Methods SHOULD NOT include any other extraneous\
    \ information not\n   specified in parameters to the \"notify\" action.\n   Methods\
    \ MUST specify which URI parameters (if any) must be ignored,\n   which ones must\
    \ be used in the resulting notification, and which ones\n   must cause an error.\n\
    \   Methods MUST specify what values are returned by the\n   notify_method_capability\
    \ test, Section 5, in particular for the\n   \"online\" notification-capability.\n\
    \   If there are errors sending the notification, the Sieve interpreter\n   SHOULD\
    \ ignore the notification and not retry indefinitely.  The Sieve\n   interpreter\
    \ MAY throttle notifications; if it does, a request to send\n   a notification\
    \ MAY be silently ignored.  Documents describing\n   notification methods SHOULD\
    \ describe how retries, throttling,\n   duplicate suppression (if any), etc. are\
    \ to be handled by\n   implementations.\n"
- title: 4.  Test valid_notify_method
  contents:
  - "4.  Test valid_notify_method\n   Usage:  valid_notify_method <notification-uris:\
    \ string-list>\n   The valid_notify_method test is true if the notification methods\n\
    \   listed in the notification-uris argument are supported and they are\n   valid\
    \ both syntactically (including URI parameters) and semantically\n   (including\
    \ implementation-specific semantic restrictions).  This test\n   MUST perform\
    \ exactly the same validation as would be performed on the\n   \"method\" parameter\
    \ to the \"notify\" action.\n   The test is true only if ALL of the listed notification\
    \ methods are\n   supported and valid.\n   Example 4 (partial):\n            \
    \ if not valid_notify_method [\"mailto:\",\n                     \"http://gw.example.net/notify?test\"\
    ] {\n                 stop;\n             }\n"
- title: 5.  Test notify_method_capability
  contents:
  - "5.  Test notify_method_capability\n   Usage:  notify_method_capability [COMPARATOR]\
    \ [MATCH-TYPE]\n           <notification-uri: string>\n           <notification-capability:\
    \ string>\n           <key-list: string-list>\n   The notify_method_capability\
    \ test retrieves the notification\n   capability specified by the notification-capability\
    \ string that is\n   specific to the notification-uri and matches it to the values\n\
    \   specified in the key-list.  The test succeeds if a match occurs.  The\n  \
    \ type of match defaults to \":is\", and the default comparator is\n   \"i;ascii-casemap\"\
    .\n   The notification-capability parameter is case insensitive.\n   The notify_method_capability\
    \ test MUST fail unconditionally if the\n   specified notification-uri is syntactically\
    \ invalid (as determined by\n   the valid_notify_method test, Section 4) or specifies\
    \ an unsupported\n   notification method.  However this MUST NOT cause an error.\n\
    \   The notify_method_capability test MUST fail unconditionally if the\n   specified\
    \ notification-capability item is not known to the Sieve\n   interpreter.  A script\
    \ MUST NOT fail with an error if the item does\n   not exist.  This allows scripts\
    \ to be written that handle nonexistent\n   items gracefully.\n   This document\
    \ defines a single notification-capability value\n   \"online\", which is described\
    \ below.  Additional notification-\n   capability values may be defined by using\
    \ the procedure defined in\n   Section 9.3.\n   The \"relational\" extension [Relational]\
    \ adds a match type called\n   \":count\".  The count of an notify_method_capability\
    \ test is 0, if the\n   returned information is the empty string, or 1.\n   For\
    \ the \"online\" notification-capability, the\n   notify_method_capability test\
    \ can match one of the following key-list\n   values:\n   o  \"yes\" - the entity\
    \ identified by the notification-uri can receive\n      a notify notification\
    \ immediately.  Note that even after this\n      value is returned, there is no\
    \ guarantee that the entity would\n      actually be able to receive any notification\
    \ immediately or even\n      receive it at all.  Transport errors, recipient policy,\
    \ etc. can\n      prevent that.\n   o  \"no\" - the entity identified by the notification-uri\
    \ is not\n      currently available to receive an immediate notification.\n  \
    \ o  \"maybe\" - the Sieve interpreter can't determine if the entity\n      identified\
    \ by the notification-uri is online or not.\n   Example 5:\n             require\
    \ [\"enotify\"];\n             if notify_method_capability\n                 \
    \   \"xmpp:tim@example.com?message;subject=SIEVE\"\n                    \"Online\"\
    \n                    \"yes\" {\n                 notify :importance \"1\" :message\
    \ \"You got mail\"\n                      \"xmpp:tim@example.com?message;subject=SIEVE\"\
    ;\n             } else {\n                 notify :message \"You got mail\" \"\
    tel:+14085551212\";\n             }\n"
- title: 6.  Modifier encodeurl to the 'set' Action
  contents:
  - "6.  Modifier encodeurl to the 'set' Action\n   Usage:  \":encodeurl\"\n   When\
    \ the Sieve script specifies both \"variables\" [Variables] and\n   \"enotify\"\
    \ capabilities in the \"require\", a new \"set\" action modifier\n   (see [Variables])\
    \ \":encodeurl\" becomes available to Sieve scripts.\n   This modifier performs\
    \ percent-encoding of any octet in the string\n   that doesn't belong to the \"\
    unreserved\" set (see [URI]).  The\n   percent-encoding procedure is described\
    \ in [URI].\n   The \":encodeurl\" modifier has precedence 15.\n   Example 6:\n\
    \       require [\"enotify\", \"variables\"];\n       set :encodeurl \"body_param\"\
    \ \"Safe body&evil=evilbody\";\n       notify \"mailto:tim@example.com?body=${body_param}\"\
    ;\n"
- title: 7.  Interactions with Other Sieve Actions
  contents:
  - "7.  Interactions with Other Sieve Actions\n   The \"notify\" action is compatible\
    \ with all other actions, and does\n   not affect the operation of other actions.\
    \  In particular, the\n   \"notify\" action MUST NOT cancel the implicit keep.\n\
    \   Multiple executed \"notify\" actions are allowed.  Specific\n   notification\
    \ methods MAY allow multiple notifications from the same\n   script to be collapsed\
    \ into one.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security considerations are discussed in [Sieve].\
    \  Additionally,\n   implementations must be careful to follow the security considerations\n\
    \   of the specific notification methods.\n   The \"notify\" action is potentially\
    \ very dangerous.  The path the\n   notification takes through the network may\
    \ not be secure.  An error\n   in the options string may cause the message to\
    \ be transmitted to\n   someone it was not intended for, or may expose information\
    \ to\n   eavesdroppers.\n   Just because a notification is received doesn't mean\
    \ that it was sent\n   by the Sieve implementation.  It might be possible to forge\n\
    \   notifications or modify parts of valid notifications with some\n   notification\
    \ methods.\n   Forgery of the \":importance\" value (for example, by unauthorized\n\
    \   script modification) can potentially result in slowdown in\n   notification\
    \ delivery.\n   Note that some components of notifications should not be trusted.\n\
    \   For example, the timestamp field can be easily forged or modified\n   when\
    \ some notification transports are used.  Even if the timestamp is\n   believed\
    \ to be correct by the sender and is not modified in transit,\n   it might be\
    \ misleading on the receiving system due to clock\n   differences.\n   An organization\
    \ may have a policy about the forwarding of classified\n   information to unclassified\
    \ networks.  Unless the policy is also\n   enforced in the module responsible\
    \ for the generating (or sending) of\n   notifications, users can use the extension\
    \ defined in this document\n   to extract classified information and bypass the\
    \ policy.\n   Notifications can result in loops and bounces.  Also, allowing a\n\
    \   single script to notify multiple destinations can be used as a means\n   of\
    \ amplifying the number of messages in an attack.  Moreover, if loop\n   detection\
    \ is not properly implemented, it may be possible to set up\n   exponentially\
    \ growing notification loops.  Accordingly, Sieve\n   notification methods:\n\
    \   1.  MUST provide mechanisms for avoiding notification loops.\n   2.  MUST\
    \ provide the means for administrators to limit the ability of\n       users to\
    \ abuse notify.  In particular, it MUST be possible to\n       limit the number\
    \ of \"notify\" actions a script can perform.\n       Additionally, if no use\
    \ cases exist for using \"notify\" with\n       multiple destinations, this limit\
    \ SHOULD be set to 1.  Additional\n       limits, such as the ability to restrict\
    \ \"notify\" to local users,\n       MAY also be implemented.\n   3.  MUST provide\
    \ facilities to log the use of \"notify\" in order to\n       facilitate tracking\
    \ down abuse.\n   4.  MAY use script analysis to determine whether or not a given\n\
    \       script can be executed safely.  While the Sieve language is\n       sufficiently\
    \ complex so that full analysis of all possible\n       scripts is computationally\
    \ infeasible, the majority of real-world\n       scripts are amenable to analysis.\
    \  For example, an implementation\n       might allow scripts that it has determined\
    \ to be safe to run\n       unhindered, block scripts that are potentially problematic,\
    \ and\n       subject unclassifiable scripts to additional auditing and\n    \
    \   logging.\n   Allowing \"notify\" action at all may not be appropriate in situations\n\
    \   where Sieve scripts are associated with email accounts that are\n   freely-available\
    \ and/or not trackable to a human who can be held\n   accountable for creating\
    \ message bombs or other abuse.\n   Implementations that construct URIs internally\
    \ from various notify\n   parameters MUST make sure that all components of such\
    \ URIs are\n   properly percent-encoded (see [URI]).  In particular, this applies\
    \ to\n   values of the \":from\" and \":message\" tagged arguments and may apply\n\
    \   to the \":options\" values.\n   Header/envelope tests [Sieve], together with\
    \ Sieve variables, can be\n   used to extract the list of users to receive notifications\
    \ from the\n   incoming email message or its envelope.  This is potentially quite\n\
    \   dangerous, as this can be used for denial-of-service attacks on\n   recipients\
    \ controlled by the message sender.  For this reason,\n   implementations SHOULD\
    \ NOT allow the use of variables containing\n   values extracted from the email\
    \ message in the \"method\" parameter to\n   the \"notify\" action.  Note that\
    \ violation of this SHOULD NOT may\n   result in the creation of an open relay,\
    \ i.e., any sender would be\n   able to create specially crafted email messages\
    \ that would result in\n   notifications delivered to recipients under the control\
    \ of the\n   sender.  In the worst case, this might result in financial loss by\n\
    \   the user controlling the Sieve script and/or by recipients of\n   notifications\
    \ (e.g., if a notification is an SMS message).\n   Note that the last SHOULD NOT\
    \ is not a generic prohibition of use of\n   variables in the \"notify\" action,\
    \ as controlling the target of a\n   notification by extracting it from user-owned\
    \ data stores (such as\n   user's Lightweight Directory Access Protocol (LDAP)\
    \ entry) is\n   considered to be useful.\n   It is imperative that whatever implementations\
    \ use to store the user-\n   defined filtering scripts protect them from unauthorized\n\
    \   modification, to preserve the integrity of the mail system.  An\n   attacker\
    \ who can modify a script can cause mail to be discarded,\n   rejected, or forwarded\
    \ to an unauthorized recipient.  In addition,\n   it's possible that Sieve scripts\
    \ might expose private information,\n   such as mailbox names or email addresses\
    \ of favored (or disfavored)\n   correspondents.  Because of that, scripts SHOULD\
    \ also be protected\n   from unauthorized retrieval.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  Registration of Sieve Extension
  contents:
  - "9.1.  Registration of Sieve Extension\n   To:  iana@iana.org\n   Subject:  Registration\
    \ of new Sieve extension\n   Capability name:  enotify\n   Description:  adds\
    \ the \"notify\" action for notifying user about the\n      received message.\
    \  It also provides two new tests:\n         valid_notify_method checks notification\
    \ URIs for validity;\n         notify_method_capability can check recipients capabilities.\n\
    \   RFC number:  this RFC\n   Contact address:  The Sieve discussion list\n  \
    \    <ietf-mta-filters@imc.org>\n   This information has been added to the list\
    \ of Sieve extensions\n   available from http://www.iana.org/.\n"
- title: 9.2.  New Registry for Sieve Notification Mechanisms
  contents:
  - "9.2.  New Registry for Sieve Notification Mechanisms\n   IANA has created a new\
    \ registry for Sieve notification mechanisms.\n   This registry contains both\
    \ vendor-controlled notification mechanism\n   names (beginning with \"vnd.\"\
    ) and IETF-controlled notification\n   mechanism names.  Vendor-controlled notification\
    \ mechanism names have\n   the format as defined in the following paragraph and\
    \ may be\n   registered on a \"First Come First Served\" basis [IANA-GUIDELINES],\
    \ by\n   applying to IANA with the form specified later in this section.\n   Registration\
    \ of notification mechanisms that do not begin with \"vnd.\"\n   are registered\
    \ using a \"Specification Required\" policy\n   [IANA-GUIDELINES].\n   Vendor-controlled\
    \ notification mechanism names MUST have the form\n   \"vnd.<vendor-name>.<mechanism-name>\"\
    , where <vendor-name> is as\n   specified in the Application Configuration Access\
    \ Protocol (ACAP)\n   Vendor Subtree registry [ACAP].\n   This defines the template\
    \ for a new registry for Sieve notification\n   mechanisms, which has been created\
    \ and is available from\n   http://www.iana.org/.  There are no initial entries\
    \ for this\n   registry.\n   To:  iana@iana.org\n   Subject:  Registration of\
    \ new Sieve notification mechanism\n   Mechanism name:  [the name of the mechanism]\n\
    \   Mechanism URI:  [the RFC number of the document that defines the URI\n   \
    \   used by this mechanism.  Different mechanisms MUST use different\n      URI\
    \ schema.]\n   Mechanism-specific options:  [the names of any Sieve notify options\n\
    \      (as used in the \":options\" parameter) that are specific to this\n   \
    \   mechanism, or \"none\"]\n   Permanent and readily available reference:  [the\
    \ RFC number or an URL\n      of the document that defines this notification mechanism]\n\
    \   Person and email address to contact for further information:  [the\n     \
    \ name and email address of the technical contact for information\n      about\
    \ this mechanism]\n"
- title: 9.3.  New Registry for Notification-Capability Parameters
  contents:
  - "9.3.  New Registry for Notification-Capability Parameters\n   IANA has created\
    \ a new registry for the notification-capability\n   parameters of the notify_method_capability\
    \ test.  This registry\n   contains both vendor-controlled notification-capability\
    \ values\n   (beginning with \"vnd.\") and IETF-controlled notification-capability\n\
    \   values.  Vendor-controlled notification-capability values have the\n   format\
    \ as defined in the following paragraph and may be registered on\n   a \"First\
    \ Come First Served\" basis [IANA-GUIDELINES], by applying to\n   IANA with the\
    \ form specified later in this section.  Registration of\n   notification-capability\
    \ values that do not begin with \"vnd.\" are\n   registered using the \"Specification\
    \ Required\" policy\n   [IANA-GUIDELINES].\n   Vendor-controlled notification-capability\
    \ values MUST have the form\n   \"vnd.<vendor-name>.<capability-name>\", where\
    \ <vendor-name> is as\n   specified in the ACAP Vendor Subtree registry [ACAP].\n\
    \   The following template must be used for registering notification-\n   capability\
    \ parameters:\n   To:  iana@iana.org\n   Subject:  Registration of a new notification-capability\
    \ parameter\n   Capability name:  [the name of the notification-capability]\n\
    \   Description:  [an explanation of the purpose of the notification-\n      capability]\n\
    \   Syntax:  [formal definition of allowed values and their syntax]\n   Permanent\
    \ and readily available reference(s):  [the RFC number(s) or\n      an URL of\
    \ the document that defines this notification mechanism]\n   Contact information:\
    \  [the name and email address of the technical\n      contact for information\
    \ about this mechanism]\n   Below is the registration form for the \"online\"\
    \ notification-\n   capability:\n   To:  iana@iana.org\n   Subject:  Registration\
    \ of a new notification-capability parameter\n   Capability name:  online\n  \
    \ Description:  Returns whether the entity identified by the\n      notification-uri\
    \ parameter to the notify_method_capability test\n      can receive a notify notification\
    \ immediately.\n   Syntax:  Can contain one of three values: \"yes\", \"no\",\
    \ and, \"maybe\".\n      Values MUST be in lowercase.\n   Permanent and readily\
    \ available reference(s):  This RFC\n   Contact information:  The Sieve discussion\
    \ list\n      <ietf-mta-filters@imc.org>\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Thanks to Larry Greenfield, Sarah Robeson, Tim Showalter,\
    \ Cyrus\n   Daboo, Nigel Swinson, Kjetil Torgrim Homme, Michael Haardt, Mark E.\n\
    \   Mallett, Ned Freed, Lisa Dusseault, Dilyan Palauzov, Arnt\n   Gulbrandsen,\
    \ Peter Saint-Andre, Sean Turner, Cullen Jennings, and\n   Pasi Eronen for help\
    \ with this document.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [ABNF]             Crocker, D., Ed. and P. Overell,\
    \ \"Augmented BNF\n                      for Syntax Specifications: ABNF\", STD\
    \ 68,\n                      RFC 5234, January 2008.\n   [Kwds]             Bradner,\
    \ S., \"Key words for use in RFCs to\n                      Indicate Requirement\
    \ Levels\", BCP 14, RFC 2119,\n                      March 1997.\n   [MailTo]\
    \           Leiba, B. and M. Haardt, \"Sieve Notification\n                  \
    \    Mechanism: mailto\", RFC 5436, January 2009.\n   [Relational]       Segmuller,\
    \ W. and B. Leiba, \"Sieve Extension:\n                      Relational Tests\"\
    , RFC 5231, January 2008.\n   [Sieve]            Guenther, P., Ed. and T. Showalter,\
    \ Ed., \"Sieve:\n                      An Email Filtering Language\", RFC 5228,\n\
    \                      January 2008.\n   [URI]              Berners-Lee, T., Fielding,\
    \ R., and L. Masinter,\n                      \"Uniform Resource Identifier (URI):\
    \ Generic\n                      Syntax\", STD 66, RFC 3986, January 2005.\n \
    \  [Variables]        Homme, K., \"Sieve Extension: Variables\", RFC 5229,\n \
    \                     January 2008.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [ACAP]             Newman, C. and J. Myers,\
    \ \"ACAP -- Application\n                      Configuration Access Protocol\"\
    , RFC 2244,\n                      November 1997.\n   [IANA-GUIDELINES]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for\n                      Writing an IANA\
    \ Considerations Section in RFCs\",\n                      BCP 26, RFC 5226, May\
    \ 2008.\n   [TEL-URI]          Schulzrinne, H., \"The tel URI for Telephone\n\
    \                      Numbers\", RFC 3966, December 2004.\n   [XMPP]        \
    \     Saint-Andre, Ed., P., \"Extensible Messaging and\n                     \
    \ Presence Protocol (XMPP): Core\", RFC 3920,\n                      October 2004.\n\
    \   [XMPP-URI]         Saint-Andre, P., \"Internationalized Resource\n       \
    \               Identifiers (IRIs) and Uniform Resource\n                    \
    \  Identifiers (URIs) for the Extensible Messaging\n                      and\
    \ Presence Protocol (XMPP)\", RFC 5122,\n                      February 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alexey Melnikov (editor)\n   Isode Limited\n   5 Castle\
    \ Business Village\n   36 Station Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n\
    \   EMail: Alexey.Melnikov@isode.com\n   Barry Leiba (editor)\n   IBM T.J. Watson\
    \ Research Center\n   19 Skyline Drive\n   Hawthorne, NY  10532\n   US\n   Phone:\
    \ +1 914 784 7941\n   EMail: leiba@watson.ibm.com\n   Wolfgang Segmuller\n   IBM\
    \ T.J. Watson Research Center\n   19 Skyline Drive\n   Hawthorne, NY  10532\n\
    \   US\n   Phone: +1 914 784 7408\n   EMail: werewolf@us.ibm.com\n   Tim Martin\n\
    \   Endless Crossword\n   672 Haight st.\n   San Francisco, CA  94117\n   US\n\
    \   Phone: +1 510 260-4175\n   EMail: timmartin@alumni.cmu.edu\n"
