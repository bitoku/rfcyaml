- contents:
  - '                   The ESP CBC-Mode Cipher Algorithms

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes how to use CBC-mode cipher algorithms with\n
    \  the IPSec ESP (Encapsulating Security Payload) Protocol.  It not only\n   clearly
    states how to use certain cipher algorithms, but also how to\n   use all CBC-mode
    cipher algorithms.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction...................................................2\n
    \    1.1 Specification of Requirements...............................2\n     1.2
    Intellectual Property Rights Statement......................2\n   2. Cipher Algorithms..............................................2\n
    \    2.1 Mode........................................................3\n     2.2
    Key Size....................................................3\n     2.3 Weak Keys...................................................4\n
    \    2.4 Block Size and Padding......................................5\n     2.5
    Rounds......................................................6\n     2.6 Backgrounds.................................................6\n
    \    2.7 Performance.................................................8\n   3.
    ESP Payload....................................................8\n     3.1 ESP
    Environmental Considerations............................9\n     3.2 Keying Material.............................................9\n
    \  4. Security Considerations........................................9\n   5.
    References....................................................10\n   6. Acknowledgments...............................................11\n
    \  7. Editors' Addresses............................................12\n   8.
    Full Copyright Statement......................................14\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   The Encapsulating Security Payload (ESP) [Kent98] provides\n
    \  confidentiality for IP datagrams by encrypting the payload data to be\n   protected.
    \ This specification describes the ESP use of CBC-mode\n   cipher algorithms.\n
    \  While this document does not describe the use of the default cipher\n   algorithm
    DES, the reader should be familiar with that document.\n   [Madson98]\n   It is
    assumed that the reader is familiar with the terms and concepts\n   described
    in the \"Security Architecture for the Internet Protocol\"\n   [Atkinson95], \"IP
    Security Document Roadmap\" [Thayer97], and \"IP\n   Encapsulating Security Payload
    (ESP)\" [Kent98] documents.\n   Furthermore, this document is a companion to [Kent98]
    and MUST be\n   read in its context.\n"
  - contents:
    - "1.1 Specification of Requirements\n   The keywords \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\",\n   and \"MAY\" that appear in this
      document are to be interpreted as\n   described in [Bradner97].\n"
    title: 1.1 Specification of Requirements
  - contents:
    - "1.2 Intellectual Property Rights Statement\n   The IETF takes no position regarding
      the validity or scope of any\n   intellectual property or other rights that
      might be claimed to\n   pertain to the implementation or use of the technology
      described in\n   this document or the extent to which any license under such
      rights\n   might or might not be available; neither does it represent that it\n
      \  has made any effort to identify any such rights.  Information on the\n   IETF's
      procedures with respect to rights in standards-track and\n   standards-related
      documentation can be found in BCP-11.  Copies of\n   claims of rights made available
      for publication and any assurances of\n   licenses to be made available, or
      the result of an attempt made to\n   obtain a general license or permission
      for the use of such\n   proprietary rights by implementers or users of this
      specification can\n   be obtained from the IETF Secretariat.\n"
    title: 1.2 Intellectual Property Rights Statement
  title: 1. Introduction
- contents:
  - "2. Cipher Algorithms\n   All symmetric block cipher algorithms share common characteristics\n
    \  and variables.  These include mode, key size, weak keys, block size,\n   and
    rounds.  All of which will be explained below.\n   While this document illustrates
    certain cipher algorithms such as\n   Blowfish [Schneier93], CAST-128 [Adams97],
    3DES, IDEA [Lai] [MOV],\n   and RC5 [Baldwin96], any other block cipher algorithm
    may be used\n   with ESP if all of the variables described within this document
    are\n   clearly defined.\n"
  - contents:
    - "2.1 Mode\n   All symmetric block cipher algorithms described or insinuated
      within\n   this document use Cipher Block Chaining (CBC) mode.  This mode\n
      \  requires an Initialization Vector (IV) that is the same size as the\n   block
      size.  Use of a randomly generated IV prevents generation of\n   identical ciphertext
      from packets which have identical data that\n   spans the first block of the
      cipher algorithm's blocksize.\n   The IV is XOR'd with the first plaintext block,
      before it is\n   encrypted.  Then for successive blocks, the previous ciphertext
      block\n   is XOR'd with the current plaintext, before it is encrypted.\n   More
      information on CBC mode can be obtained in [Schneier95].\n"
    title: 2.1 Mode
  - contents:
    - "2.2 Key Size\n   Some cipher algorithms allow for variable sized keys, while
      others\n   only allow a specific key size.  The length of the key correlates\n
      \  with the strength of that algorithm, thus larger keys are always\n   harder
      to break than shorter ones.\n   This document stipulates that all key sizes
      MUST be a multiple of 8\n   bits.\n   This document does specify the default
      key size for each cipher\n   algorithm.  This size was chosen by consulting
      experts on the\n   algorithm and by balancing strength of the algorithm with\n
      \  performance.\n   +==============+==================+=================+==========+\n
      \  | Algorithm    | Key Sizes (bits) | Popular Sizes   | Default  |\n   +==============+==================+=================+==========+\n
      \  | CAST-128 [1] | 40 to 128        | 40, 64, 80, 128 | 128      |\n   +--------------+------------------+-----------------+----------+\n
      \  | RC5          | 40 to 2040       | 40, 128, 160    | 128      |\n   +--------------+------------------+-----------------+----------+\n
      \  | IDEA         | 128              | 128             | 128      |\n   +--------------+------------------+-----------------+----------+\n
      \  | Blowfish     | 40 to 448        | 128             | 128      |\n   +--------------+------------------+-----------------+----------+\n
      \  | 3DES [2]     | 192              | 192             | 192      |\n   +--------------+------------------+-----------------+----------+\n
      \  Notes:\n   [1] With CAST-128, keys less than 128 bits MUST be padded with
      zeros\n   in the rightmost, or least significant, positions out to 128 bits\n
      \  since the CAST-128 key schedule assumes an input key of 128 bits.\n   Thus
      if you had a key with a size of 80 bits '3B5D831CFE', it would\n   be padded
      to produce a key with a size of 128 bits\n   '3B5D831CFE000000'.\n   [2] The
      first 3DES key is taken from the first 64 bits, the second\n   from the next
      64 bits, and the third from the last 64 bits.\n   Implementations MUST take
      into consideration the parity bits when\n   initially accepting a new set of
      keys.  Each of the three keys is\n   really 56 bits in length with the extra
      8 bits used for parity.\n   The reader should note that the minimum key size
      for all of the above\n   cipher algorithms is 40 bits, and that the authors
      strongly advise\n   that implementations do NOT use key sizes smaller than 40
      bits.\n"
    title: 2.2 Key Size
  - contents:
    - "2.3 Weak Keys\n   Weak key checks SHOULD be performed.  If such a key is found,
      the key\n   SHOULD be rejected and a new SA requested.  Some cipher algorithms\n
      \  have weak keys or keys that MUST not be used due to their weak\n   nature.\n
      \  New weak keys might be discovered, so this document does not in any\n   way
      contain all possible weak keys for these ciphers.  Please check\n   with other
      sources of cryptography such as [MOV] and [Schneier] for\n   further weak keys.\n
      \  CAST-128:\n   No known weak keys.\n   RC5:\n   No known weak keys when used
      with 16 rounds.\n   IDEA:\n   IDEA has been found to have weak keys.  Please
      check with [MOV] and\n   [Schneier] for more information.\n   Blowfish:\n   Weak
      keys for Blowfish have been discovered.  Weak keys are keys that\n   produce
      the identical entries in a given S-box.  Unfortunately, there\n   is no way
      to test for weak keys before the S- box values are\n   generated.  However,
      the chances of randomly generating such a key\n   are small.\n   3DES:\n   DES
      has 64 known weak keys, including so-called semi-weak keys and\n   possibly-weak
      keys [Schneier95, pp 280-282].  The likelihood of\n   picking one at random
      is negligible.\n   For DES-EDE3, there is no known need to reject weak or\n
      \  complementation keys.  Any weakness is obviated by the use of\n   multiple
      keys.\n   However, if the first two or last two independent 64-bit keys are\n
      \  equal (k1 == k2 or k2 == k3), then the 3DES operation is simply the\n   same
      as DES.  Implementers MUST reject keys that exhibit this\n   property.\n"
    title: 2.3 Weak Keys
  - contents:
    - "2.4 Block Size and Padding\n   All of the algorithms described in this document
      use a block size of\n   eight octets (64 bits).\n   Padding is used to align
      the payload type and pad length octets as\n   specified in [Kent98].  Padding
      must be sufficient to align the data\n   to be encrypted to an eight octet (64
      bit) boundary.\n"
    title: 2.4 Block Size and Padding
  - contents:
    - "2.5 Rounds\n   This variable determines how many times a block is encrypted.
      \ While\n   this variable MAY be negotiated, a default value MUST always exist\n
      \  when it is not negotiated.\n   +====================+============+======================+\n
      \  | Algorithm          | Negotiable | Default Rounds       |\n   +====================+============+======================+\n
      \  | CAST-128           | No         | key<=80 bits, 12     |\n   |                    |
      \           | key>80 bits, 16      |\n   +--------------------+------------+----------------------+\n
      \  | RC5                | No         | 16                   |\n   +--------------------+------------+----------------------+\n
      \  | IDEA               | No         | 8                    |\n   +--------------------+------------+----------------------+\n
      \  | Blowfish           | No         | 16                   |\n   +--------------------+------------+----------------------+\n
      \  | 3DES               | No         | 48 (16x3)            |\n   +--------------------+------------+----------------------+\n"
    title: 2.5 Rounds
  - contents:
    - "2.6 Backgrounds\n   CAST-128:\n   The CAST design procedure was originally
      developed by Carlisle Adams\n   and Stafford Tavares at Queen's University,
      Kingston, Ontario,\n   Canada.  Subsequent enhancements have been made over
      the years by\n   Carlisle Adams and Michael Wiener of Entrust Technologies.
      \ CAST-128\n   is the result of applying the CAST Design Procedure as outlined
      in\n   [Adams97].\n   RC5:\n   The RC5 encryption algorithm was developed by
      Ron Rivest for RSA Data\n   Security Inc. in order to address the need for a
      high- performance\n   software and hardware ciphering alternative to DES. It
      is patented\n   (pat.no. 5,724,428).  A description of RC5 may be found in [MOV]
      and\n   [Schneier].\n   IDEA:\n   Xuejia Lai and James Massey developed the
      IDEA (International Data\n   Encryption Algorithm) algorithm.  The algorithm
      is described in\n   detail in [Lai], [Schneier] and [MOV].\n   The IDEA algorithm
      is patented in Europe and in the United States\n   with patent application pending
      in Japan.  Licenses are required for\n   commercial uses of IDEA.\n   For patent
      and licensing information, contact:\n         Ascom Systec AG, Dept. CMVV\n
      \        Gewerbepark, CH-5506\n         Magenwil, Switzerland\n         Phone:
      +41 64 56 59 83\n         Fax: +41 64 56 59 90\n         idea@ascom.ch\n         http://www.ascom.ch/Web/systec/policy/normal/exhibit1.html\n
      \  Blowfish:\n   Bruce Schneier of Counterpane Systems developed the Blowfish
      block\n   cipher algorithm.  The algorithm is described in detail in\n   [Schneier93],
      [Schneier95] and [Schneier].\n   3DES:\n   This DES variant, colloquially known
      as \"Triple DES\" or as DES-EDE3,\n   processes each block three times, each
      time with a different key.\n   This technique of using more than one DES operation
      was proposed in\n   [Tuchman79].\n                        P1             P2
      \            Pi\n                         |              |              |\n
      \                 IV->->(X)    +>->->->(X)    +>->->->(X)\n                         v
      \    ^        v     ^        v\n                      +-----+  ^     +-----+
      \ ^     +-----+\n                  k1->|  E  |  ^ k1->|  E  |  ^ k1->|  E  |\n
      \                     +-----+  ^     +-----+  ^     +-----+\n                         |
      \    ^        |     ^        |\n                         v     ^        v     ^
      \       v\n                      +-----+  ^     +-----+  ^     +-----+\n                  k2->|
      \ D  |  ^ k2->|  D  |  ^ k2->|  D  |\n                      +-----+  ^     +-----+
      \ ^     +-----+\n                         |     ^        |     ^        |\n
      \                        v     ^        v     ^        v\n                      +-----+
      \ ^     +-----+  ^     +-----+\n                  k3->|  E  |  ^ k3->|  E  |
      \ ^ k3->|  E  |\n                      +-----+  ^     +-----+  ^     +-----+\n
      \                        |     ^        |     ^        |\n                         +>->->+
      \       +>->->+        +>->->\n                         |              |              |\n
      \                        C1             C2             Ci\n   The DES-EDE3-CBC
      algorithm is a simple variant of the DES-CBC\n   algorithm [FIPS-46].  The \"outer\"
      chaining technique is used.\n   In DES-EDE3-CBC, an Initialization Vector (IV)
      is XOR'd with the\n   first 64-bit (8 byte) plaintext block (P1).  The keyed
      DES function\n   is iterated three times, an encryption (Ek1) followed by a
      decryption\n   (Dk2) followed by an encryption (Ek3), and generates the ciphertext\n
      \  (C1) for the block.  Each iteration uses an independent key: k1, k2\n   and
      k3.\n   For successive blocks, the previous ciphertext block is XOR'd with\n
      \  the current plaintext (Pi).  The keyed DES-EDE3 encryption function\n   generates
      the ciphertext (Ci) for that block.\n   To decrypt, the order of the functions
      is reversed: decrypt with k3,\n   encrypt with k2, decrypt with k1, and XOR
      the previous ciphertext\n   block.\n   Note that when all three keys (k1, k2
      and k3) are the same, DES-\n   EDE3-CBC is equivalent to DES-CBC.  This property
      allows the DES-EDE3\n   hardware implementations to operate in DES mode without
      modification.\n   For more explanation and implementation information for Triple
      DES,\n   see [Schneier95].\n"
    title: 2.6 Backgrounds
  - contents:
    - "2.7 Performance\n   For a comparison table of the estimated speed of any of
      these and\n   other cipher algorithms, please see [Schneier97] or for an up-to-date\n
      \  performance comparison, please see [Bosseleaers].\n"
    title: 2.7 Performance
  title: 2. Cipher Algorithms
- contents:
  - "3. ESP Payload\n   The ESP payload is made up of the IV followed by raw cipher-text.\n
    \  Thus the payload field, as defined in [Kent98], is broken down\n   according
    to the following diagram:\n   +---------------+---------------+---------------+---------------+\n
    \  |                                                               |\n   +               Initialization
    Vector (8 octets)                +\n   |                                                               |\n
    \  +---------------+---------------+---------------+---------------+\n   |                                                               |\n
    \  ~              Encrypted Payload (variable length)              ~\n   |                                                               |\n
    \  +---------------------------------------------------------------+\n    1 2
    3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8\n   The IV field MUST
    be same size as the block size of the cipher\n   algorithm being used.  The IV
    MUST be chosen at random.  Common\n   practice is to use random data for the first
    IV and the last block of\n   encrypted data from an encryption process as the
    IV for the next\n   encryption process.\n   Including the IV in each datagram
    ensures that decryption of each\n   received datagram can be performed, even when
    some datagrams are\n   dropped, or datagrams are re-ordered in transit.\n   To
    avoid ECB encryption of very similar plaintext blocks in different\n   packets,
    implementations MUST NOT use a counter or other low-Hamming\n   distance source
    for IVs.\n"
  - contents:
    - "3.1 ESP Environmental Considerations\n   Currently, there are no known issues
      regarding interactions between\n   these algorithms and other aspects of ESP,
      such as use of certain\n   authentication schemes.\n"
    title: 3.1 ESP Environmental Considerations
  - contents:
    - "3.2 Keying Material\n   The minimum number of bits sent from the key exchange
      protocol to\n   this ESP algorithm must be greater or equal to the key size.\n
      \  The cipher's encryption and decryption key is taken from the first\n   <x>
      bits of the keying material, where <x> represents the required\n   key size.\n"
    title: 3.2 Keying Material
  title: 3. ESP Payload
- contents:
  - "4. Security Considerations\n   Implementations are encouraged to use the largest
    key sizes they can\n   when taking into account performance considerations for
    their\n   particular hardware and software configuration.  Note that encryption\n
    \  necessarily impacts both sides of a secure channel, so such\n   consideration
    must take into account not only the client side, but\n   the server as well.\n
    \  For information on the case for using random values please see\n   [Bell97].\n
    \  For further security considerations, the reader is encouraged to read\n   the
    documents that describe the actual cipher algorithms.\n"
  title: 4. Security Considerations
- contents:
  - "5. References\n   [Adams97]   Adams, C, \"The CAST-128 Encryption Algorithm\",\n
    \              RFC2144, 1997.\n   [Atkinson98]Kent, S. and R. Atkinson, \"Security
    Architecture for the\n               Internet Protocol\", RFC 2401, November 1998.\n
    \  [Baldwin96] Baldwin, R. and R. Rivest, \"The RC5, RC5-CBC, RC5-CBC-\n               Pad,
    and RC5-CTS Algorithms\", RFC 2040, October 1996.\n   [Bell97]    S. Bellovin,
    \"Probable Plaintext Cryptanalysis of the IP\n               Security Protocols\",
    Proceedings of the Symposium on\n               Network and Distributed System
    Security, San Diego, CA,\n               pp. 155-160, February 1997 (also\n               http://www.research.att.com/~smb/probtxt.{ps,
    pdf}).\n   [Bosselaers]A. Bosselaers, \"Performance of Pentium implementations\",\n
    \              http://www.esat.kuleuven.ac.be/~bosselae/\n   [Bradner97] Bradner,
    S., \"Key words for use in RFCs to indicate\n               Requirement Levels\",
    BCP 14, RFC 2119, March 1997.\n   [Crypto93]  J. Daemen, R. Govaerts, J. Vandewalle,
    \"Weak Keys for\n               IDEA\", Advances in Cryptology, CRYPTO 93 Proceedings,\n
    \              Springer-Verlag, pp. 224-230.\n   [FIPS-46]   US National Bureau
    of Standards, \"Data Encryption\n               Standard\", Federal Information
    Processing Standard (FIPS)\n               Publication 46, January 1977.\n   [Kent98]
    \   Kent, S. and R. Atkinson, \"IP Encapsulating Security\n               Payload
    (ESP)\", RFC 2406, November 1998.\n   [Lai]       X. Lai, \"On the Design and
    Security of Block Ciphers\",\n               ETH Series in Information Processing,
    v. 1, Konstanz:\n               Hartung-Gorre Verlag, 1992.\n   [Madson98]  Madson,
    C. and N. Dorswamy, \"The ESP DES-CBC Cipher\n               Algorithm With Explicit
    IV\", RFC 2405, November 1998.\n   [MOV]       A. Menezes, P. Van Oorschot, S.
    Vanstone, \"Handbook of\n               Applied Cryptography\", CRC Press, 1997.
    ISBN 0-8493-\n               8523-7\n   [Schneier]  B. Schneier, \"Applied Cryptography
    Second Edition\", John\n               Wiley & Sons, New York, NY, 1995.  ISBN
    0-471-12845-7\n   [Schneier93]B. Schneier, \"Description of a New Variable-Length
    Key,\n               64-Bit Block Cipher\", from \"Fast Software Encryption,\n
    \              Cambridge Security Workshop Proceedings\", Springer-\n               Verlag,
    1994, pp. 191-204.\n               http://www.counterpane.com/bfsverlag.html\n
    \  [Schneier95]B. Schneier, \"The Blowfish Encryption Algorithm - One\n               Year
    Later\", Dr. Dobb's Journal, September 1995,\n               http://www.counterpane.com/bfdobsoyl.html\n
    \  [Schneier97]B. Scheier, \"Speed Comparisons of Block Ciphers on a\n               Pentium.\"
    February 1997,\n               http://www.counterpane.com/speed.html\n   [Thayer97]
    \ Thayer, R., Doraswamy, N. and R. Glenn, \"IP Security\n               Document
    Roadmap\", RFC 2411, November 1998.\n   [Tuchman79] Tuchman, W, \"Hellman Presents
    No Shortcut Solutions to\n               DES\", IEEE Spectrum, v. 16 n. 7, July
    1979, pp. 40-41.\n"
  title: 5. References
- contents:
  - "6. Acknowledgments\n   This document is a merger of most of the ESP cipher algorithm\n
    \  documents.  This merger was done to facilitate greater understanding\n   of
    the commonality of all of the ESP algorithms and to further the\n   development
    of these algorithm within ESP.\n   The content of this document is based on suggestions
    originally from\n   Stephen Kent and subsequent discussions from the IPSec mailing
    list\n   as well as other IPSec documents.\n   Special thanks to Carlisle Adams
    and Paul Van Oorschot both of\n   Entrust Technologies who provided input and
    review of CAST.\n   Thanks to all of the editors of the previous ESP 3DES documents;
    W.\n   Simpson, N. Doraswamy, P. Metzger, and P. Karn.\n   Thanks to Brett Howard
    from TimeStep for his original work of ESP-\n   RC5.\n   Thanks to Markku-Juhani
    Saarinen, Helger Lipmaa and Bart Preneel for\n   their input on IDEA and other
    ciphers.\n"
  title: 6. Acknowledgments
- contents:
  - "7. Editors' Addresses\n   Roy Pereira\n   TimeStep Corporation\n   Phone: +1
    (613) 599-3610 x 4808\n   EMail: rpereira@timestep.com\n   Rob Adams\n   Cisco
    Systems Inc.\n   Phone: +1 (408) 457-5397\n   EMail: adams@cisco.com\n   Contributors:\n
    \  Robert W. Baldwin\n   RSA Data Security, Inc.\n   Phone: +1 (415) 595-8782\n
    \  EMail: baldwin@rsa.com or baldwin@lcs.mit.edu\n   Greg Carter\n   Entrust Technologies\n
    \  Phone: +1 (613) 763-1358\n   EMail: carterg@entrust.com\n   Rodney Thayer\n
    \  Sable Technology Corporation\n   Phone: +1 (617) 332-7292\n   EMail: rodney@sabletech.com\n
    \  The IPSec working group can be contacted via the IPSec working\n   group's
    mailing list (ipsec@tis.com) or through its chairs:\n   Robert Moskowitz\n   International
    Computer Security Association\n   EMail: rgm@icsa.net\n   Theodore Y. Ts'o\n   Massachusetts
    Institute of Technology\n   EMail: tytso@MIT.EDU\n"
  title: 7. Editors' Addresses
- contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 8.  Full Copyright Statement
