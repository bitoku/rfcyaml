Abstract This document describes the use of the SEED block cipher algorithm in the Cipher Block Chaining Mode, with an explicit IV, as a confidentiality mechanism within the context of the IPsec Encapsulating Security Payload (ESP).
SEED SEED is a national industrial association standard [TTASSEED] and is widely used in South Korea for electronic commerce and financial services that are operated on wired and wireless communications.
SEED is a 128 bit symmetric key block cipher that has been developed by KISA (Korea Information Security Agency) and a group of experts since 1998.
The input/output block size of SEED is 128 bit and the key length is also 128 bit.
SEED has the 16 round Feistel structure.
A 128 bit input is divided into two 64 bit blocks, and the right 64  bit block is an input to the round function with a 64 bit subkey that is generated from the key scheduling.
SEED is easily implemented in various software and hardware, and it can be effectively adopted to a computing environment with restricted resources, such as mobile devices and smart cards.
SEED is robust against known attacks including DC (Differential cryptanalysis), LC (Linear cryptanalysis), and related key attacks.
SEED has gone through wide public scrutinizing procedures.
It has been evaluated and is considered cryptographically secure by credible organizations such as ISO/IEC JTC 1/SC 27 and Japan CRYPTREC (Cryptography Research and Evaluation Committees)[ISOSEED][CRYPTREC].
The remainder of this document specifies the use of SEED within the context of IPsec ESP.
For further information on how the various pieces of ESP fit together to provide security services, please refer to [ARCH], [ESP], and [ROAD].
The key words "MUST", "MUST NOT", "REQUIRED", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document (in uppercase, as shown) are to be interpreted as described in RFC 2119 [KEYWORDS].
All symmetric block cipher algorithms share common characteristics and variables, including mode, key size, weak keys, block size, and rounds.
The following sections contain descriptions of the relevant characteristics of SEED.
The algorithm specification and object identifiers are described in [ISOSEED] [SEED].
The SEED homepage, http://www.kisa.or.kr/seed/seed eng.html, contains a wealth of information about SEED, including a detailed specification, evaluation report, test vectors, and so on.
Mode NIST has defined 5 modes of operation for the Advanced Encryption Standard (AES)
[AES] and other FIPS approved ciphers [MODES]
: CBC (Cipher Block Chaining), ECB (Electronic Codebook), CFB (Cipher FeedBack), OFB (Output FeedBack), and CTR (Counter).
The CBC mode is well defined and well understood for symmetric ciphers, and is currently required for all other ESP ciphers.
This document specifies the use of the SEED cipher in the CBC mode within ESP.
This mode requires an Initialization Vector (IV)
that is the same size as the block size.
Use of a randomly generated IV prevents generation of identical ciphertext from packets that have identical data that spans the first block of the cipher algorithm's block size
The IV is XOR'd with the first plaintext block before it is encrypted.
Then for successive blocks, the previous ciphertext block is XOR'd with the current plaintext before it is encrypted.
More information on the CBC mode can be obtained in [MODES]
For use of the CBC mode in ESP with 64 bit ciphers, please see [CBC].
Key Size and Numbers of Rounds SEED supports 128 bit key and has the 16 round Feistel structure.
At the time this document was written, there were no known weak keys for SEED.
Block Size and Padding SEED uses a block size of 16 octets (128 bits).
Padding is required by SEED to maintain a 16 octet (128 bit) blocksize.
Padding MUST be added, as specified in [ESP], such that the data to be encrypted (which includes the ESP Pad Length and Next Header fields) has a length that is a multiple of 16 octets.
Because of the algorithm specific padding requirement, no additional padding is required to ensure that the ciphertext terminates on a 4  octet boundary (i.e., maintaining a 16 octet blocksize guarantees that the ESP Pad Length and Next Header fields will be right aligned within a 4 octet word).
Additional padding MAY be included, as specified in [ESP], as long as the 16 octet blocksize is maintained.
Performance Performance figures of SEED are available at http://www.kisa.or.kr/seed/seed
The ESP Payload is made up of the Initialization Vector(IV) of 16 octets followed by the encrypted payload.
The IV MUST be chosen at random and MUST be unpredictable.
Including the IV in each datagram ensures that decryption of each received datagram can be performed, even when some datagrams are dropped or re ordered in transit.
To avoid CBC encryption of very similar plaintext blocks in different packets, implementations MUST NOT use a counter or other low hamming distance source for IVs.
The first 2 test cases test SEED CBC encryption.
Each test case includes key, the plaintext, and the resulting ciphertext.
All data are hexadecimal numbers (not prefixed by "0x").
The last 4 test cases illustrate sample ESP packets using SEED CBC for encryption.
All data are hexadecimal numbers (not prefixed by "0x").
Encrypting 64 bytes (4 blocks) using SEED CBC with 128 bit key
Case #3  : Sample transport mode ESP packet (ping 192.168.123.100)
: IP header (20 bytes) : 45000054 08f20000 4001f9fe  c0a87b03  c0a87b64 Data (64 bytes) : 08000ebd
Next header : 01 (ICMP)
Pre encryption Data with padding, pad length and next header(80 bytes):
0d0e0e01 Post encryption packet with SPI, Sequence number, IV :
IP Header : 45000054 08f20000 4001f9fe  c0a87b03  c0a87b64
Sample transport mode ESP packet (ping  p 77
4001fa16 c0a87b03 c0a87b64 Data (28 bytes) : 0800b5e8 a80a0500 a69c083d 0b660e00
Next header : 01 (ICMP)
Pre encryption Data with padding, pad length and next header(32 bytes):
77777777 01020201 Post encryption packet with SPI, Sequence number,
5bb5efd1 Case #5 : Sample tunnel mode ESP packet (ping 192.168.123.200)
Next header : 04 (IP in IP)
Pre encryption Data with original IP header, padding, pad length and next header (96 bytes) : 45000054
090a0a04 Post encryption packet with SPI, Sequence number, IV :
ESP packet (ping  p ff  s
8dffab22 Original packet : IP header (20 bytes) : 45000044
4001f990  c0a87b03  c0a87bc8 Data (48 bytes) : 0800d63c
Next header : 04 (IP in IP)
Pre encryption Data with original IP header, padding, pad length and next header (80 bytes): 45000044
090a0a04 Post encryption packet with SPI, Sequence number, IV :
8dffab22 Encrypted Data (80 bytes) : 311168e0  bc36ac4e  59802bd5
This section describes the use of IKE [IKE] to establish IPsec ESP security associations (SAs) that employ SEED in CBC mode.
Phase 1 Identifier For Phase 1 negotiations, the object identifier of SEED CBC is defined in [SEED].
Phase 2 Identifier For Phase 2 negotiations, IANA has assigned an ESP Transform Identifier of (21) for ESP SEED CBC.
Since the SEED supports 128 bit key lengths, the Key Length attribute is set with 128 bits.
Hash Algorithm Considerations HMAC SHA 1
[HMAC SHA] and HMAC MD5 [HMAC MD5] are currently considered of sufficient strength to serve both as IKE generators of 128 bit SEED keys and as ESP authenticators for SEED encryption using 128 bit keys.
No security problem has been found on SEED.
SEED is secure against all known attacks including Differential cryptanalysis, Linear cryptanalysis, and related key attacks.
The best known attack is only an exhaustive search for the key (by [CRYPTREC]).
For further security considerations, the reader is encouraged to read [CRYPTREC], [ISOSEED], and [SEED EVAL].
IANA Considerations IANA has assigned ESP Transform Identifier (21) to ESP SEED CBC.
