- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        P. Calhoun
  contents:
  - "Independent Submission                                        P. Calhoun\n  \
    \                 Lightweight Access Point Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   In recent years, there has been a shift in wireless LAN (WLAN)\n\
    \   product architectures from autonomous access points to centralized\n   control\
    \ of lightweight access points.  The general goal has been to\n   move most of\
    \ the traditional wireless functionality such as access\n   control (user authentication\
    \ and authorization), mobility, and radio\n   management out of the access point\
    \ into a centralized controller.\n   The IETF's CAPWAP (Control and Provisioning\
    \ of Wireless Access\n   Points) WG has identified that a standards-based protocol\
    \ is\n   necessary between a wireless Access Controller and Wireless\n   Termination\
    \ Points (the latter are also commonly referred to as\n   Lightweight Access Points).\
    \  This specification defines the\n   Lightweight Access Point Protocol (LWAPP),\
    \ which addresses the\n   CAPWAP's (Control and Provisioning of Wireless Access\
    \ Points)\n   protocol requirements.  Although the LWAPP protocol is designed\
    \ to be\n   flexible enough to be used for a variety of wireless technologies,\n\
    \   this specific document describes the base protocol and an extension\n   that\
    \ allows it to be used with the IEEE's 802.11 wireless LAN\n   protocol.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for the historical record.\n   This document defines a Historic\
    \ Document for the Internet community.\n   This is a contribution to the RFC Series,\
    \ independently of any other\n   RFC stream.  The RFC Editor has chosen to publish\
    \ this document at\n   its discretion and makes no statement about its value for\n\
    \   implementation or deployment.  Documents approved for publication by\n   the\
    \ RFC Editor are not a candidate for any level of Internet\n   Standard; see Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5412.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This RFC documents the LWAPP protocol as it was when submitted\
    \ to the\n   IETF as a basis for further work in the CAPWAP Working Group, and\n\
    \   therefore it may resemble the CAPWAP protocol specification in RFC\n   5415\
    \ as well as other IETF work.  This RFC is being published solely\n   for the\
    \ historical record.  The protocol described in this RFC has\n   not been thoroughly\
    \ reviewed and may contain errors and omissions.\n   RFC 5415 documents the standards\
    \ track solution for the CAPWAP\n   Working Group and obsoletes any and all mechanisms\
    \ defined in this\n   RFC.  This RFC is not a candidate for any level of Internet\
    \ Standard\n   and should not be used as a basis for any sort of Internet\n  \
    \ deployment.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................8\n\
    \      1.1. Conventions Used in This Document ..........................9\n  \
    \ 2. Protocol Overview ..............................................10\n    \
    \  2.1. Wireless Binding Definition ...............................11\n      2.2.\
    \ LWAPP State Machine Definition ............................12\n   3. LWAPP Transport\
    \ Layers .........................................20\n      3.1. LWAPP Transport\
    \ Header ....................................21\n           3.1.1. VER Field ..........................................21\n\
    \           3.1.2. RID Field ..........................................21\n  \
    \         3.1.3. C Bit ..............................................21\n    \
    \       3.1.4. F Bit ..............................................21\n      \
    \     3.1.5. L Bit ..............................................22\n        \
    \   3.1.6. Fragment ID ........................................22\n          \
    \ 3.1.7. Length .............................................22\n           3.1.8.\
    \ Status and WLANS ...................................22\n           3.1.9. Payload\
    \ ............................................22\n      3.2. Using IEEE 802.3\
    \ MAC as LWAPP Transport ...................22\n           3.2.1. Framing ............................................23\n\
    \           3.2.2. AC Discovery .......................................23\n  \
    \         3.2.3. LWAPP Message Header Format over IEEE 802.3\n               \
    \   MAC Transport ......................................23\n           3.2.4.\
    \ Fragmentation/Reassembly ...........................24\n           3.2.5. Multiplexing\
    \ .......................................24\n      3.3. Using IP/UDP as LWAPP\
    \ Transport ...........................24\n           3.3.1. Framing ............................................24\n\
    \           3.3.2. AC Discovery .......................................25\n  \
    \         3.3.3. LWAPP Message Header Format over IP/UDP Transport ..25\n    \
    \       3.3.4. Fragmentation/Reassembly for IPv4 ..................26\n      \
    \     3.3.5. Fragmentation/Reassembly for IPv6 ..................26\n        \
    \   3.3.6. Multiplexing .......................................26\n   4. LWAPP\
    \ Packet Definitions .......................................26\n      4.1. LWAPP\
    \ Data Messages .......................................27\n      4.2. LWAPP Control\
    \ Messages Overview ...........................27\n           4.2.1. Control Message\
    \ Format .............................28\n           4.2.2. Message Element Format\
    \ .............................29\n           4.2.3. Quality of Service .................................31\n\
    \   5. LWAPP Discovery Operations .....................................31\n  \
    \    5.1. Discovery Request .........................................31\n    \
    \       5.1.1. Discovery Type .....................................32\n      \
    \     5.1.2. WTP Descriptor .....................................33\n        \
    \   5.1.3. WTP Radio Information ..............................34\n      5.2.\
    \ Discovery Response ........................................34\n           5.2.1.\
    \ AC Address .........................................35\n           5.2.2. AC\
    \ Descriptor ......................................35\n           5.2.3. AC Name\
    \ ............................................36\n           5.2.4. WTP Manager\
    \ Control IPv4 Address ...................37\n           5.2.5. WTP Manager Control\
    \ IPv6 Address ...................37\n      5.3. Primary Discovery Request .................................38\n\
    \           5.3.1. Discovery Type .....................................38\n  \
    \         5.3.2. WTP Descriptor .....................................38\n    \
    \       5.3.3. WTP Radio Information ..............................38\n      5.4.\
    \ Primary Discovery Response ................................38\n           5.4.1.\
    \ AC Descriptor ......................................39\n           5.4.2. AC\
    \ Name ............................................39\n           5.4.3. WTP Manager\
    \ Control IPv4 Address ...................39\n           5.4.4. WTP Manager Control\
    \ IPv6 Address ...................39\n   6. Control Channel Management .....................................39\n\
    \      6.1. Join Request ..............................................39\n  \
    \         6.1.1. WTP Descriptor .....................................40\n    \
    \       6.1.2. AC Address .........................................40\n      \
    \     6.1.3. WTP Name ...........................................40\n        \
    \   6.1.4. Location Data ......................................41\n          \
    \ 6.1.5. WTP Radio Information ..............................41\n           6.1.6.\
    \ Certificate ........................................41\n           6.1.7. Session\
    \ ID .........................................42\n           6.1.8. Test ...............................................42\n\
    \           6.1.9. XNonce .............................................42\n  \
    \    6.2. Join Response .............................................43\n    \
    \       6.2.1. Result Code ........................................44\n      \
    \     6.2.2. Status .............................................44\n        \
    \   6.2.3. Certificate ........................................45\n          \
    \ 6.2.4. WTP Manager Data IPv4 Address ......................45\n           6.2.5.\
    \ WTP Manager Data IPv6 Address ......................45\n           6.2.6. AC\
    \ IPv4 List .......................................46\n           6.2.7. AC IPv6\
    \ List .......................................46\n           6.2.8. ANonce .............................................47\n\
    \           6.2.9. PSK-MIC ............................................48\n  \
    \    6.3. Join ACK ..................................................48\n    \
    \       6.3.1. Session ID .........................................49\n      \
    \     6.3.2. WNonce .............................................49\n        \
    \   6.3.3. PSK-MIC ............................................49\n      6.4.\
    \ Join Confirm ..............................................49\n           6.4.1.\
    \ Session ID .........................................50\n           6.4.2. PSK-MIC\
    \ ............................................50\n      6.5. Echo Request ..............................................50\n\
    \      6.6. Echo Response .............................................50\n  \
    \    6.7. Key Update Request ........................................51\n    \
    \       6.7.1. Session ID .........................................51\n      \
    \     6.7.2. XNonce .............................................51\n      6.8.\
    \ Key Update Response .......................................51\n           6.8.1.\
    \ Session ID .........................................51\n           6.8.2. ANonce\
    \ .............................................51\n           6.8.3. PSK-MIC ............................................52\n\
    \      6.9. Key Update ACK ............................................52\n  \
    \         6.9.1. WNonce .............................................52\n    \
    \       6.9.2. PSK-MIC ............................................52\n      6.10.\
    \ Key Update Confirm .......................................52\n           6.10.1.\
    \ PSK-MIC ...........................................52\n      6.11. Key Update\
    \ Trigger .......................................52\n           6.11.1. Session\
    \ ID ........................................53\n   7. WTP Configuration Management\
    \ ...................................53\n      7.1. Configuration Consistency\
    \ .................................53\n      7.2. Configure Request .........................................54\n\
    \           7.2.1. Administrative State ...............................54\n  \
    \         7.2.2. AC Name ............................................55\n    \
    \       7.2.3. AC Name with Index .................................55\n      \
    \     7.2.4. WTP Board Data .....................................56\n        \
    \   7.2.5. Statistics Timer ...................................56\n          \
    \ 7.2.6. WTP Static IP Address Information ..................57\n           7.2.7.\
    \ WTP Reboot Statistics ..............................58\n      7.3. Configure\
    \ Response ........................................58\n           7.3.1. Decryption\
    \ Error Report Period .....................59\n           7.3.2. Change State\
    \ Event .................................59\n           7.3.3. LWAPP Timers .......................................60\n\
    \           7.3.4. AC IPv4 List .......................................60\n  \
    \         7.3.5. AC IPv6 List .......................................61\n    \
    \       7.3.6. WTP Fallback .......................................61\n      \
    \     7.3.7. Idle Timeout .......................................61\n      7.4.\
    \ Configuration Update Request ..............................62\n           7.4.1.\
    \ WTP Name ...........................................62\n           7.4.2. Change\
    \ State Event .................................62\n           7.4.3. Administrative\
    \ State ...............................62\n           7.4.4. Statistics Timer\
    \ ...................................62\n           7.4.5. Location Data ......................................62\n\
    \           7.4.6. Decryption Error Report Period .....................62\n  \
    \         7.4.7. AC IPv4 List .......................................62\n    \
    \       7.4.8. AC IPv6 List .......................................62\n      \
    \     7.4.9. Add Blacklist Entry ................................63\n        \
    \   7.4.10. Delete Blacklist Entry ............................63\n          \
    \ 7.4.11. Add Static Blacklist Entry ........................64\n           7.4.12.\
    \ Delete Static Blacklist Entry .....................64\n           7.4.13. LWAPP\
    \ Timers ......................................65\n           7.4.14. AC Name\
    \ with Index ................................65\n           7.4.15. WTP Fallback\
    \ ......................................65\n           7.4.16. Idle Timeout ......................................65\n\
    \      7.5. Configuration Update Response .............................65\n  \
    \         7.5.1. Result Code ........................................65\n    \
    \  7.6. Change State Event Request ................................65\n      \
    \     7.6.1. Change State Event .................................66\n      7.7.\
    \ Change State Event Response ...............................66\n      7.8. Clear\
    \ Config Indication ...................................66\n   8. Device Management\
    \ Operations ...................................66\n      8.1. Image Data Request\
    \ ........................................66\n           8.1.1. Image Download\
    \ .....................................67\n           8.1.2. Image Data .........................................67\n\
    \      8.2. Image Data Response .......................................68\n  \
    \    8.3. Reset Request .............................................68\n    \
    \  8.4. Reset Response ............................................68\n      8.5.\
    \ WTP Event Request .........................................68\n           8.5.1.\
    \ Decryption Error Report ............................69\n           8.5.2. Duplicate\
    \ IPv4 Address .............................69\n           8.5.3. Duplicate IPv6\
    \ Address .............................70\n      8.6. WTP Event Response ........................................70\n\
    \      8.7. Data Transfer Request .....................................71\n  \
    \         8.7.1. Data Transfer Mode .................................71\n    \
    \       8.7.2. Data Transfer Data .................................71\n      8.8.\
    \ Data Transfer Response ....................................72\n   9. Mobile\
    \ Session Management ......................................72\n      9.1. Mobile\
    \ Config Request .....................................72\n           9.1.1. Delete\
    \ Mobile ......................................73\n      9.2. Mobile Config Response\
    \ ....................................73\n           9.2.1. Result Code ........................................74\n\
    \   10. LWAPP Security ................................................74\n  \
    \    10.1. Securing WTP-AC Communications ...........................74\n    \
    \  10.2. LWAPP Frame Encryption ...................................75\n      10.3.\
    \ Authenticated Key Exchange ...............................76\n           10.3.1.\
    \ Terminology .......................................76\n           10.3.2. Initial\
    \ Key Generation ............................77\n           10.3.3. Refreshing\
    \ Cryptographic Keys .....................81\n      10.4. Certificate Usage ........................................82\n\
    \   11. IEEE 802.11 Binding ...........................................82\n  \
    \    11.1. Division of Labor ........................................82\n    \
    \       11.1.1. Split MAC .........................................83\n      \
    \     11.1.2. Local MAC .........................................85\n      11.2.\
    \ Roaming Behavior and 802.11 Security .....................87\n      11.3. Transport-Specific\
    \ Bindings ..............................88\n           11.3.1. Status and WLANS\
    \ Field ............................88\n      11.4. BSSID to WLAN ID Mapping .................................89\n\
    \      11.5. Quality of Service .......................................89\n  \
    \    11.6. Data Message Bindings ....................................90\n    \
    \  11.7. Control Message Bindings .................................90\n      \
    \     11.7.1. Mobile Config Request .............................90\n        \
    \   11.7.2. WTP Event Request .................................96\n      11.8.\
    \ 802.11 Control Messages ..................................97\n           11.8.1.\
    \ IEEE 802.11 WLAN Config Request ...................98\n           11.8.2. IEEE\
    \ 802.11 WLAN Config Response .................103\n           11.8.3. IEEE 802.11\
    \ WTP Event ............................103\n      11.9. Message Element Bindings\
    \ ................................105\n           11.9.1. IEEE 802.11 WTP WLAN\
    \ Radio Configuration .........105\n           11.9.2. IEEE 802.11 Rate Set .............................107\n\
    \           11.9.3. IEEE 802.11 Multi-Domain Capability ..............107\n  \
    \         11.9.4. IEEE 802.11 MAC Operation ........................108\n    \
    \       11.9.5. IEEE 802.11 Tx Power .............................109\n      \
    \     11.9.6. IEEE 802.11 Tx Power Level .......................110\n        \
    \   11.9.7. IEEE 802.11 Direct Sequence Control ..............110\n          \
    \ 11.9.8. IEEE 802.11 OFDM Control .........................111\n           11.9.9.\
    \ IEEE 802.11 Antenna ..............................112\n           11.9.10. IEEE\
    \ 802.11 Supported Rates .....................113\n           11.9.11. IEEE 802.11\
    \ CFP Status ..........................114\n           11.9.12. IEEE 802.11 WTP\
    \ Mode and Type ...................114\n           11.9.13. IEEE 802.11 Broadcast\
    \ Probe Mode ................115\n           11.9.14. IEEE 802.11 WTP Quality\
    \ of Service ..............115\n           11.9.15. IEEE 802.11 MIC Error Report\
    \ From Mobile ........117\n      11.10. IEEE 802.11 Message Element Values .....................117\n\
    \   12. LWAPP Protocol Timers ........................................118\n  \
    \    12.1. MaxDiscoveryInterval ....................................118\n    \
    \  12.2. SilentInterval ..........................................118\n      12.3.\
    \ NeighborDeadInterval ....................................118\n      12.4. EchoInterval\
    \ ............................................118\n      12.5. DiscoveryInterval\
    \ .......................................118\n      12.6. RetransmitInterval ......................................119\n\
    \      12.7. ResponseTimeout .........................................119\n  \
    \    12.8. KeyLifetime .............................................119\n   13.\
    \ LWAPP Protocol Variables .....................................119\n      13.1.\
    \ MaxDiscoveries ..........................................119\n      13.2. DiscoveryCount\
    \ ..........................................119\n      13.3. RetransmitCount .........................................119\n\
    \      13.4. MaxRetransmit ...........................................120\n  \
    \ 14. NAT Considerations ...........................................120\n   15.\
    \ Security Considerations ......................................121\n      15.1.\
    \ Certificate-Based Session Key Establishment .............122\n      15.2. PSK-Based\
    \ Session Key Establishment .....................123\n   16. Acknowledgements\
    \ .............................................123\n   17. References ...................................................123\n\
    \      17.1. Normative References ....................................123\n  \
    \    17.2. Informative References ..................................124\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Unlike wired network elements, Wireless Termination Points\
    \ (WTPs)\n   require a set of dynamic management and control functions related\
    \ to\n   their primary task of connecting the wireless and wired mediums.\n  \
    \ Today, protocols for managing WTPs are either manual static\n   configuration\
    \ via HTTP, proprietary Layer 2-specific, or non-existent\n   (if the WTPs are\
    \ self-contained).  The emergence of simple 802.11\n   WTPs that are managed by\
    \ a WLAN appliance or switch (also known as an\n   Access Controller, or AC) suggests\
    \ that having a standardized,\n   interoperable protocol could radically simplify\
    \ the deployment and\n   management of wireless networks.  In many cases, the\
    \ overall control\n   and management functions themselves are generic and could\
    \ apply to an\n   AP for any wireless Layer 2 (L2) protocol.  Being independent\
    \ of\n   specific wireless Layer 2 technologies, such a protocol could better\n\
    \   support interoperability between Layer 2 devices and enable smoother\n   intertechnology\
    \ handovers.\n   The details of how these functions would be implemented are dependent\n\
    \   on the particular Layer 2 wireless technology.  Such a protocol would\n  \
    \ need provisions for binding to specific technologies.\n   LWAPP assumes a network\
    \ configuration that consists of multiple WTPs\n   communicating either via Layer\
    \ 2 (Medium Access Control (MAC)) or\n   Layer 3 (IP) to an AC.  The WTPs can\
    \ be considered as remote radio\n   frequency (RF) interfaces, being controlled\
    \ by the AC.  The AC\n   forwards all L2 frames it wants to transmit to a WTP\
    \ via the LWAPP\n   protocol.  Packets from mobile nodes are forwarded by the\
    \ WTP to the\n   AC, also via this protocol.  Figure 1 illustrates this arrangement\
    \ as\n   applied to an IEEE 802.11 binding.\n                  +-+         802.11\
    \ frames          +-+\n                  | |--------------------------------|\
    \ |\n                  | |              +-+               | |\n              \
    \    | |--------------| |---------------| |\n                  | |  802.11 PHY/\
    \ | |     LWAPP     | |\n                  | | MAC sublayer | |              \
    \ | |\n                  +-+              +-+               +-+\n            \
    \      STA              WTP                AC\n                        Figure\
    \ 1: LWAPP Architecture\n   Security is another aspect of Wireless Termination\
    \ Point management\n   that is not well served by existing solutions.  Provisioning\
    \ WTPs\n   with security credentials, and managing which WTPs are authorized to\n\
    \   provide service are today handled by proprietary solutions.  Allowing\n  \
    \ these functions to be performed from a centralized AC in an\n   interoperable\
    \ fashion increases manageability and allows network\n   operators to more tightly\
    \ control their wireless network\n   infrastructure.\n   This document describes\
    \ the Lightweight Access Point Protocol\n   (LWAPP), allowing an AC to manage\
    \ a collection of WTPs.  The protocol\n   is defined to be independent of Layer\
    \ 2 technology, but an 802.11\n   binding is provided for use in growing 802.11\
    \ wireless LAN networks.\n   Goals:\n   The following are goals for this protocol:\n\
    \   1. Centralization of the bridging, forwarding, authentication, and\n     \
    \ policy enforcement functions for a wireless network.  Optionally,\n      the\
    \ AC may also provide centralized encryption of user traffic.\n      This will\
    \ permit reduced cost and higher efficiency when applying\n      the capabilities\
    \ of network processing silicon to the wireless\n      network, as it has already\
    \ been applied to wired LANs.\n   2. Permit shifting of the higher-level protocol\
    \ processing burden\n      away from the WTP.  This leaves the computing resource\
    \ of the WTP\n      to the timing-critical applications of wireless control and\n\
    \      access.  This makes the most efficient use of the computing power\n   \
    \   available in WTPs that are the subject of severe cost pressure.\n   3. Providing\
    \ a generic encapsulation and transport mechanism, the\n      protocol may be\
    \ applied to other access point types in the future\n      by adding the binding.\n\
    \   The LWAPP protocol concerns itself solely with the interface between\n   the\
    \ WTP and the AC.  Inter-AC, or mobile-to-AC communication is\n   strictly outside\
    \ the scope of this document.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [1].\n"
- title: 2.  Protocol Overview
  contents:
  - "2.  Protocol Overview\n   LWAPP is a generic protocol defining how Wireless Termination\
    \ Points\n   communicate with Access Controllers.  Wireless Termination Points\
    \ and\n   Access Controllers may communicate either by means of Layer 2\n   protocols\
    \ or by means of a routed IP network.\n   LWAPP messages and procedures defined\
    \ in this document apply to both\n   types of transports unless specified otherwise.\
    \  Transport\n   independence is achieved by defining formats for both MAC-level\
    \ and\n   IP-level transport (see Section 3).  Also defined are framing,\n   fragmentation/reassembly,\
    \ and multiplexing services to LWAPP for each\n   transport type.\n   The LWAPP\
    \ Transport layer carries two types of payload.  LWAPP data\n   messages are forwarded\
    \ wireless frames.  LWAPP control messages are\n   management messages exchanged\
    \ between a WTP and an AC.  The LWAPP\n   transport header defines the \"C-bit\"\
    , which is used to distinguish\n   data and control traffic.  When used over IP,\
    \ the LWAPP data and\n   control traffic are also sent over separate UDP ports.\
    \  Since both\n   data and control frames can exceed Path Maximum Transmission\
    \ Unit\n   (PMTU), the payload of an LWAPP data or control message can be\n  \
    \ fragmented.  The fragmentation behavior is highly dependent upon the\n   lower-layer\
    \ transport and is defined in Section 3.\n   The Lightweight Access Protocol (LWAPP)\
    \ begins with a discovery\n   phase.  The WTPs send a Discovery Request frame,\
    \ causing any Access\n   Controller (AC), receiving that frame to respond with\
    \ a Discovery\n   Response.  From the Discovery Responses received, a WTP will\
    \ select\n   an AC with which to associate, using the Join Request and Join\n\
    \   Response.  The Join Request also provides an MTU discovery mechanism,\n  \
    \ to determine whether there is support for the transport of large\n   frames\
    \ between the WTP and its AC.  If support for large frames is\n   not present,\
    \ the LWAPP frames will be fragmented to the maximum\n   length discovered to\
    \ be supported by the network.\n   Once the WTP and the AC have joined, a configuration\
    \ exchange is\n   accomplished that will cause both devices to agree on version\n\
    \   information.  During this exchange, the WTP may receive provisioning\n   settings.\
    \  For the 802.11 binding, this information would typically\n   include a name\
    \ (802.11 Service Set Identifier, SSID), and security\n   parameters, the data\
    \ rates to be advertised, as well as the radio\n   channel (channels, if the WTP\
    \ is capable of operating more than one\n   802.11 MAC and Physical Layer (PHY)\
    \ simultaneously) to be used.\n   Finally, the WTPs are enabled for operation.\n\
    \   When the WTP and AC have completed the version and provision exchange\n  \
    \ and the WTP is enabled, the LWAPP encapsulates the wireless frames\n   sent\
    \ between them.  LWAPP will fragment its packets, if the size of\n   the encapsulated\
    \ wireless user data (Data) or protocol control\n   (Management) frames cause\
    \ the resultant LWAPP packet to exceed the\n   MTU supported between the WTP and\
    \ AC.  Fragmented LWAPP packets are\n   reassembled to reconstitute the original\
    \ encapsulated payload.\n   In addition to the functions thus far described, LWAPP\
    \ also provides\n   for the delivery of commands from the AC to the WTP for the\n\
    \   management of devices that are communicating with the WTP.  This may\n   include\
    \ the creation of local data structures in the WTP for the\n   managed devices\
    \ and the collection of statistical information about\n   the communication between\
    \ the WTP and the 802.11 devices.  LWAPP\n   provides the ability for the AC to\
    \ obtain any statistical information\n   collected by the WTP.\n   LWAPP also\
    \ provides for a keepalive feature that preserves the\n   communication channel\
    \ between the WTP and AC.  If the AC fails to\n   appear alive, the WTP will try\
    \ to discover a new AC to communicate\n   through.\n   This document uses terminology\
    \ defined in [5].\n"
- title: 2.1.  Wireless Binding Definition
  contents:
  - "2.1.  Wireless Binding Definition\n   This draft standard specifies a protocol\
    \ independent of a specific\n   wireless access point radio technology.  Elements\
    \ of the protocol are\n   designed to accommodate specific needs of each wireless\
    \ technology in\n   a standard way.  Implementation of this standard for a particular\n\
    \   wireless technology must follow the binding requirements defined for\n   that\
    \ technology.  This specification includes a binding for the IEEE\n   802.11 (see\
    \ Section 11).\n   When defining a binding for other technologies, the authors\
    \ MUST\n   include any necessary definitions for technology-specific messages\n\
    \   and all technology-specific message elements for those messages.  At\n   a\
    \ minimum, a binding MUST provide the definition for a binding-\n   specific Statistics\
    \ message element, which is carried in the WTP\n   Event Request message, and\
    \ Add Mobile message element, which is\n   carried in the Mobile Configure Request.\
    \  If any technology-specific\n   message elements are required for any of the\
    \ existing LWAPP messages\n   defined in this specification, they MUST also be\
    \ defined in the\n   technology-binding document.\n   The naming of binding-specific\
    \ message elements MUST begin with the\n   name of the technology type, e.g.,\
    \ the binding for IEEE 802.11,\n   provided in this standard, begins with \"IEEE\
    \ 802.11\".\n"
- title: 2.2.  LWAPP State Machine Definition
  contents:
  - "2.2.  LWAPP State Machine Definition\n   The following state diagram represents\
    \ the life cycle of a WTP-AC\n   session:\n      /-------------\\\n      |   \
    \          v\n      |       +------------+\n      |      C|    Idle    |<-----------------------------------\\\
    \n      |       +------------+<-----------------------\\           |\n      |\
    \        ^    |a    ^                         |           |\n      |        |\
    \    |     \\----\\                    |           |\n      |        |    |  \
    \        |                 +------------+ |\n      |        |    |          |\
    \          -------| Key Confirm| |\n      |        |    |          |        w/\
    \       +------------+ |\n      |        |    |          |        |          \
    \ ^           |\n      |        |    |          |t       V           |5      \
    \    |\n      |        |    |        +-----------+       +------------+ |\n  \
    \    |       /     |       C|    Run    |       | Key Update | |\n      |    \
    \ /       |       r+-----------+------>+------------+ |\n      |    /        |\
    \              ^    |s      u        x|     |\n      |   |         v         \
    \     |    |                 |     |\n      |   |   +--------------+     |   \
    \ |                 v     |y\n      |   |  C|  Discovery   |    q|    \\--------------->+-------+\n\
    \      |   |  b+--------------+    +-------------+        | Reset |\n      | \
    \  |     |d     f|  ^      |  Configure  |------->+-------+\n      |   |     |\
    \       |  |      +-------------+p           ^\n      |   |e    v       |  | \
    \             ^                  |\n      |  +---------+    v  |i            2|\
    \                  |\n      | C| Sulking |   +------------+    +--------------+\
    \    |\n      |  +---------+  C|    Join    |--->| Join-Confirm |    |\n     \
    \ |               g+------------+z   +--------------+    |\n      |          \
    \         |h      m|        3|       |4      |\n      |                   |  \
    \      |         |       v       |o\n      |\\                  |        |   \
    \      |     +------------+\n       \\\\-----------------/         \\--------+---->|\
    \ Image Data |C\n        \\------------------------------------/     +------------+n\n\
    \                        Figure 2: LWAPP State Machine\n   The LWAPP state machine,\
    \ depicted above, is used by both the AC and\n   the WTP.  For every state defined,\
    \ only certain messages are\n   permitted to be sent and received.  In all of\
    \ the LWAPP control\n   messages defined in this document, the state for which\
    \ each command\n   is valid is specified.\n   Note that in the state diagram figure\
    \ above, the 'C' character is\n   used to represent a condition that causes the\
    \ state to remain the\n   same.\n   The following text discusses the various state\
    \ transitions, and the\n   events that cause them.\n   Idle to Discovery (a):\
    \  This is the initialization state.\n      WTP:  The WTP enters the Discovery\
    \ state prior to transmitting the\n            first Discovery Request (see Section\
    \ 5.1).  Upon entering\n            this state, the WTP sets the DiscoveryInterval\
    \ timer (see\n            Section 12).  The WTP resets the DiscoveryCount counter\
    \ to\n            zero (0) (see Section 13).  The WTP also clears all\n      \
    \      information from ACs (e.g., AC Addresses) it may have\n            received\
    \ during a previous discovery phase.\n       AC:  The AC does not need to maintain\
    \ state information for the\n            WTP upon reception of the Discovery Request,\
    \ but it MUST\n            respond with a Discovery Response (see Section 5.2).\n\
    \   Discovery to Discovery (b):  This is the state the WTP uses to\n   determine\
    \ to which AC it wishes to connect.\n      WTP:  This event occurs when the DiscoveryInterval\
    \ timer expires.\n            The WTP transmits a Discovery Request to every AC\
    \ to which\n            the WTP hasn't received a response.  For every transition\
    \ to\n            this event, the WTP increments the DisoveryCount counter.\n\
    \            See Section 5.1 for more information on how the WTP knows to\n  \
    \          which ACs it should transmit the Discovery Requests.  The\n       \
    \     WTP restarts the DiscoveryInterval timer.\n       AC:  This is a noop.\n\
    \   Discovery to Sulking (d):  This state occurs on a WTP when Discovery\n   or\
    \ connectivity to the AC fails.\n      WTP:  The WTP enters this state when the\
    \ DiscoveryInterval timer\n            expires and the DiscoveryCount variable\
    \ is equal to the\n            MaxDiscoveries variable (see Section 13).  Upon\
    \ entering\n            this state, the WTP will start the SilentInterval timer.\n\
    \            While in the Sulking state, all LWAPP messages received are\n   \
    \         ignored.\n       AC:  This is a noop.\n   Sulking to Idle (e):  This\
    \ state occurs on a WTP when it must restart\n   the discovery phase.\n      WTP:\
    \  The WTP enters this state when the SilentInterval timer (see\n            Section\
    \ 12) expires.\n       AC:  This is a noop.\n   Discovery to Join (f):  This state\
    \ is used by the WTP to confirm its\n   commitment to an AC that it wishes to\
    \ be provided service.\n      WTP:  The WTP selects the best AC based on the information\
    \ it\n            gathered during the discovery phase.  It then transmits a\n\
    \            Join Request (see Section 6.1) to its preferred AC.  The WTP\n  \
    \          starts the WaitJoin timer (see Section 12).\n       AC:  The AC enters\
    \ this state for the given WTP upon reception of\n            a Join Request.\
    \  The AC processes the request and responds\n            with a Join Response.\n\
    \   Join to Join (g):  This state transition occurs during the join\n   phase.\n\
    \      WTP:  The WTP enters this state when the WaitJoin timer expires,\n    \
    \        and the underlying transport requires LWAPP MTU detection\n         \
    \   (Section 3).\n       AC:  This state occurs when the AC receives a retransmission\
    \ of a\n            Join Request.  The WTP processes the request and responds\n\
    \            with the Join Response.\n   Join to Idle (h):  This state is used\
    \ when the join process has\n   failed.\n      WTP:  This state transition occurs\
    \ if the WTP is configured to use\n            pre-shared key (PSK) security and\
    \ receives a Join Response\n            that includes an invalid PSK-MIC (Message\
    \ Integrity Check)\n            message element.\n       AC:  The AC enters this\
    \ state when it transmits an unsuccessful\n            Join Response.\n   Join\
    \ to Discovery (i):  This state is used when the join process has\n   failed.\n\
    \      WTP:  The WTP enters this state when it receives an unsuccessful\n    \
    \        Join Response.  Upon entering this state, the WTP sets the\n        \
    \    DiscoveryInterval timer (see Section 12).  The WTP resets\n            the\
    \ DiscoveryCount counter to zero (0) (see Section 13).\n            This state\
    \ transition may also occur if the PSK-MIC (see\n            Section 6.2.9) message\
    \ element is invalid.\n       AC:  This state transition is invalid.\n   Join\
    \ to Join-Confirm (z):  This state is used to provide key\n   confirmation during\
    \ the join process.\n      WTP:  This state is entered when the WTP receives a\
    \ Join Response.\n            In the event that certificate-based security is\
    \ utilized,\n            this transition will occur if the Certificate message\n\
    \            element is present and valid in the Join Response.  For pre-\n  \
    \          shared key security, the Join Response must include a valid\n     \
    \       and authenticated PSK-MIC message element.  The WTP MUST\n           \
    \ respond with a Join ACK, which is used to provide key\n            confirmation.\n\
    \       AC:  The AC enters this state when it receives a valid Join ACK.\n   \
    \         For certificate-based security, the Join ACK MUST include\n        \
    \    the WNonce message element.  For pre-shared key security,\n            the\
    \ message must include a valid PSK-MIC message element.\n            The AC MUST\
    \ respond with a Join Confirm message, which\n            includes the Session\
    \ Key message element.\n   Join-Confirm to Idle (3):  This state is used when\
    \ the join process\n   has failed.\n      WTP:  This state transition occurs when\
    \ the WTP receives an\n            invalid Join Confirm.\n       AC:  The AC enters\
    \ this state when it receives an invalid Join\n            ACK.\n   Join-Confirm\
    \ to Configure (2):  This state is used by the WTP and the\n   AC to exchange\
    \ configuration information.\n      WTP:  The WTP enters this state when it receives\
    \ a successful Join\n            Confirm and determines that its version number\
    \ and the\n            version number advertised by the AC are the same.  The\
    \ WTP\n            transmits the Configure Request (see Section 7.2) message to\n\
    \            the AC with a snapshot of its current configuration.  The\n     \
    \       WTP also starts the ResponseTimeout timer (see Section 12).\n       AC:\
    \  This state transition occurs when the AC receives the\n            Configure\
    \ Request from the WTP.  The AC must transmit a\n            Configure Response\
    \ (see Section 7.3) to the WTP, and may\n            include specific message\
    \ elements to override the WTP's\n            configuration.\n   Join-Confirm\
    \ to Image Data (4):  This state is used by the WTP and\n   the AC to download\
    \ executable firmware.\n      WTP:  The WTP enters this state when it receives\
    \ a successful Join\n            Confirm, and determines that its version number\
    \ and the\n            version number advertised by the AC are different.  The\
    \ WTP\n            transmits the Image Data Request (see Section 8.1) message\n\
    \            requesting that the AC's latest firmware be initiated.\n       AC:\
    \  This state transition occurs when the AC receives the Image\n            Data\
    \ Request from the WTP.  The AC must transmit an Image\n            Data Response\
    \ (see Section 8.2) to the WTP, which includes a\n            portion of the firmware.\n\
    \   Image Data to Image Data (n):  This state is used by the WTP and the\n   AC\
    \ during the firmware download phase.\n      WTP:  The WTP enters this state when\
    \ it receives an Image Data\n            Response that indicates that the AC has\
    \ more data to send.\n       AC:  This state transition occurs when the AC receives\
    \ the Image\n            Data Request from the WTP while already in this state,\
    \ and\n            it detects that the firmware download has not completed.\n\
    \   Image Data to Reset (o):  This state is used when the firmware\n   download\
    \ is completed.\n      WTP:  The WTP enters this state when it receives an Image\
    \ Data\n            Response that indicates that the AC has no more data to\n\
    \            send, or if the underlying LWAPP transport indicates a link\n   \
    \         failure.  At this point, the WTP reboots itself.\n       AC:  This state\
    \ transition occurs when the AC receives the Image\n            Data Request from\
    \ the WTP while already in this state, and\n            it detects that the firmware\
    \ download has completed or if\n            the underlying LWAPP transport indicates\
    \ a link failure.\n            Note that the AC itself does not reset, but it\
    \ places the\n            specific WTP's context it is communicating with in the\
    \ reset\n            state: meaning that it clears all state associated with the\n\
    \            WTP.\n   Configure to Reset (p):  This state transition occurs if\
    \ the\n   configure phase fails.\n      WTP:  The WTP enters this state when the\
    \ reliable transport fails\n            to deliver the Configure Request, or if\
    \ the ResponseTimeout\n            timer (see Section 12) expires.\n       AC:\
    \  This state transition occurs if the AC is unable to transmit\n            the\
    \ Configure Response to a specific WTP.  Note that the AC\n            itself\
    \ does not reset, but it places the specific WTP's\n            context it is\
    \ communicating with in the reset state: meaning\n            that it clears all\
    \ state associated with the WTP.\n   Configure to Run (q):  This state transition\
    \ occurs when the WTP and\n   AC enter their normal state of operation.\n    \
    \  WTP:  The WTP enters this state when it receives a successful\n           \
    \ Configure Response from the AC.  The WTP initializes the\n            HeartBeat\
    \ timer (see Section 12), and transmits the Change\n            State Event Request\
    \ message (see Section 7.6).\n       AC:  This state transition occurs when the\
    \ AC receives the Change\n            State Event Request (see Section 7.6) from\
    \ the WTP.  The AC\n            responds with a Change State Event Response (see\
    \ Section\n            7.7) message.  The AC must start the Session ID and\n \
    \           NeighborDead timers (see Section 12).\n   Run to Run (r):  This is\
    \ the normal state of operation.\n      WTP:  This is the WTP's normal state of\
    \ operation, and there are\n            many events that cause this to occur:\n\
    \         Configuration Update:  The WTP receives a Configuration Update\n   \
    \      Request (see Section 7.4).  The WTP MUST respond with a\n         Configuration\
    \ Update Response (see Section 7.5).\n         Change State Event:  The WTP receives\
    \ a Change State Event\n         Response, or determines that it must initiate\
    \ a Change State\n         Event Request, as a result of a failure or change in\
    \ the state\n         of a radio.\n         Echo Request:  The WTP receives an\
    \ Echo Request message\n         (Section 6.5), to which it MUST respond with\
    \ an Echo Response\n         (see Section 6.6).\n         Clear Config Indication:\
    \  The WTP receives a Clear Config\n         Indication message (Section 7.8).\
    \  The WTP MUST reset its\n         configuration back to manufacturer defaults.\n\
    \         WTP Event:  The WTP generates a WTP Event Request to send\n        \
    \ information to the AC (Section 8.5).  The WTP receives a WTP\n         Event\
    \ Response from the AC (Section 8.6).\n         Data Transfer:  The WTP generates\
    \ a Data Transfer Request to\n         the AC (Section 8.7).  The WTP receives\
    \ a Data Transfer\n         Response from the AC (Section 8.8).\n         WLAN\
    \ Config Request:  The WTP receives a WLAN Config Request\n         message (Section\
    \ 11.8.1), to which it MUST respond with a WLAN\n         Config Response (see\
    \ Section 11.8.2).\n         Mobile Config Request:  The WTP receives an Mobile\
    \ Config\n         Request message (Section 9.1), to which it MUST respond with\
    \ a\n         Mobile Config Response (see Section 9.2).\n       AC:  This is the\
    \ AC's normal state of operation, and there are\n            many events that\
    \ cause this to occur:\n         Configuration Update:  The AC sends a Configuration\
    \ Update\n         Request (see Section 7.4) to the WTP to update its\n      \
    \   configuration.  The AC receives a Configuration Update Response\n        \
    \ (see Section 7.5) from the WTP.\n         Change State Event:  The AC receives\
    \ a Change State Event\n         Request (see Section 7.6), to which it MUST respond\
    \ with the\n         Change State Event Response (see Section 7.7).\n        \
    \ Echo:  The AC sends an Echo Request message (Section 6.5) or\n         receives\
    \ the associated Echo Response (see Section 6.6) from\n         the WTP.\n   \
    \      Clear Config Indication:  The AC sends a Clear Config\n         Indication\
    \ message (Section 7.8).\n         WLAN Config:  The AC sends a WLAN Config Request\
    \ message\n         (Section 11.8.1) or receives the associated WLAN Config\n\
    \         Response (see Section 11.8.2) from the WTP.\n         Mobile Config:\
    \  The AC sends a Mobile Config Request message\n         (Section 9.1) or receives\
    \ the associated Mobile Config Response\n         (see Section 9.2) from the WTP.\n\
    \         Data Transfer:  The AC receives a Data Transfer Request from\n     \
    \    the AC (see Section 8.7) and MUST generate the associated Data\n        \
    \ Transfer Response message (see Section 8.8).\n         WTP Event:  The AC receives\
    \ a WTP Event Request from the AC\n         (see Section 8.5) and MUST generate\
    \ the associated WTP Event\n         Response message (see Section 8.6).\n   Run\
    \ to Reset (s):  This event occurs when the AC wishes for the WTP\n   to reboot.\n\
    \      WTP:  The WTP enters this state when it receives a Reset Request\n    \
    \        (see Section 8.3).  It must respond with a Reset Response\n         \
    \   (see Section 8.4), and once the reliable transport\n            acknowledgement\
    \ has been received, it must reboot itself.\n       AC:  This state transition\
    \ occurs either through some\n            administrative action, or via some internal\
    \ event on the AC\n            that causes it to request that the WTP disconnect.\
    \  Note\n            that the AC itself does not reset, but it places the\n  \
    \          specific WTPs context it is communicating with in the reset\n     \
    \       state.\n   Run to Idle (t):  This event occurs when an error occurs in\
    \ the\n   communication between the WTP and the AC.\n      WTP:  The WTP enters\
    \ this state when the underlying reliable\n            transport is unable to\
    \ transmit a message within the\n            RetransmitInterval timer (see Section\
    \ 12), and the maximum\n            number of RetransmitCount counter has reached\
    \ the\n            MaxRetransmit variable (see Section 13).\n       AC:  The AC\
    \ enters this state when the underlying reliable\n            transport in unable\
    \ to transmit a message within the\n            RetransmitInterval timer (see\
    \ Section 12), and the maximum\n            number of RetransmitCount counter\
    \ has reached the\n            MaxRetransmit variable (see Section 13).\n   Run\
    \ to Key Update (u):  This event occurs when the WTP and the AC are\n   to exchange\
    \ new keying material, with which it must use to protect\n   all future messages.\n\
    \      WTP:  This state transition occurs when the KeyLifetime timer\n       \
    \     expires (see Section 12).\n       AC:  The WTP enters this state when it\
    \ receives a Key Update\n            Request (see Section 6.7).\n   Key Update\
    \ to Key Confirm (w):  This event occurs during the rekey\n   phase and is used\
    \ to complete the loop.\n      WTP:  This state transition occurs when the WTP\
    \ receives the Key\n            Update Response.  The WTP MUST only accept the\
    \ message if it\n            is authentic.  The WTP responds to this response\
    \ with a Key\n            Update ACK.\n       AC:  The AC enters this state when\
    \ it receives an authenticated\n            Key Update ACK message.\n   Key Confirm\
    \ to Run (5):  This event occurs when the rekey exchange\n   phase is completed.\n\
    \      WTP:  This state transition occurs when the WTP receives the Key\n    \
    \        Update Confirm.  The newly derived encryption key and\n            Initialization\
    \ Vector (IV) must be plumbed into the crypto\n            module after validating\
    \ the message's authentication.\n       AC:  The AC enters this state when it\
    \ transmits the Key Update\n            Confirm message.  The newly derived encryption\
    \ key and IV\n            must be plumbed into the crypto module after transmitting\
    \ a\n            Key Update Confirm message.\n   Key Update to Reset (x):  This\
    \ event occurs when the key exchange\n   phase times out.\n      WTP:  This state\
    \ transition occurs when the WTP does not receive a\n            Key Update Response\
    \ from the AC.\n       AC:  The AC enters this state when it is unable to process\
    \ a Key\n            Update Request.\n   Reset to Idle (y):  This event occurs\
    \ when the state machine is\n   restarted.\n      WTP:  The WTP reboots itself.\
    \  After rebooting, the WTP will start\n            its LWAPP state machine in\
    \ the Idle state.\n       AC:  The AC clears out any state associated with the\
    \ WTP.  The AC\n            generally does this as a result of the reliable link\
    \ layer\n            timing out.\n"
- title: 3.  LWAPP Transport Layers
  contents:
  - "3.  LWAPP Transport Layers\n   The LWAPP protocol can operate at Layer 2 or 3.\
    \  For Layer 2 support,\n   the LWAPP messages are carried in a native Ethernet\
    \ frame.  As such,\n   the protocol is not routable and depends upon Layer 2 connectivity\n\
    \   between the WTP and the AC.  Layer 3 support is provided by\n   encapsulating\
    \ the LWAPP messages within UDP.\n"
- title: 3.1.  LWAPP Transport Header
  contents:
  - "3.1.  LWAPP Transport Header\n   All LWAPP protocol packets are encapsulated\
    \ using a common header\n   format, regardless of the transport used to carry\
    \ the frames.\n   However, certain flags are not applicable for a given transport,\
    \ and\n   it is therefore necessary to refer to the specific transport section\n\
    \   in order to determine which flags are valid.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |VER| RID |C|F|L|    Frag ID    |            Length             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          Status/WLANs         |   Payload...  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.1.1.  VER Field
  contents:
  - "3.1.1.  VER Field\n   A 2-bit field that contains the version of LWAPP used in\
    \ this packet.\n   The value for this document is 0.\n"
- title: 3.1.2.  RID Field
  contents:
  - "3.1.2.  RID Field\n   A 3-bit field that contains the Radio ID number for this\
    \ packet.\n   WTPs with multiple radios but a single MAC address use this field\
    \ to\n   indicate which radio is associated with the packet.\n"
- title: 3.1.3.  C Bit
  contents:
  - "3.1.3.  C Bit\n   The control message 'C' bit indicates whether this packet carries\
    \ a\n   data or control message.  When this bit is zero (0), the packet\n   carries\
    \ an LWAPP data message in the payload (see Section 4.1).  When\n   this bit is\
    \ one (1), the packet carries an LWAPP control message as\n   defined in Section\
    \ 4.2 for consumption by the addressed destination.\n"
- title: 3.1.4.  F Bit
  contents:
  - "3.1.4.  F Bit\n   The Fragment 'F' bit indicates whether this packet is a fragment.\n\
    \   When this bit is one (1), the packet is a fragment and MUST be\n   combined\
    \ with the other corresponding fragments to reassemble the\n   complete information\
    \ exchanged between the WTP and AC.\n"
- title: 3.1.5.  L Bit
  contents:
  - "3.1.5.  L Bit\n   The Not Last 'L' bit is valid only if the 'F' bit is set and\n\
    \   indicates whether the packet contains the last fragment of a\n   fragmented\
    \ exchange between the WTP and AC.  When this bit is 1, the\n   packet is not\
    \ the last fragment.  When this bit is 0, the packet is\n   the last fragment.\n"
- title: 3.1.6.  Fragment ID
  contents:
  - "3.1.6.  Fragment ID\n   An 8-bit field whose value is assigned to each group\
    \ of fragments\n   making up a complete set.  The Fragment ID space is managed\n\
    \   individually for every WTP/AC pair.  The value of Fragment ID is\n   incremented\
    \ with each new set of fragments.  The Fragment ID wraps to\n   zero after the\
    \ maximum value has been used to identify a set of\n   fragments.  LWAPP only\
    \ supports up to 2 fragments per frame.\n"
- title: 3.1.7.  Length
  contents:
  - "3.1.7.  Length\n   The 16-bit length field contains the number of bytes in the\
    \ Payload.\n   The field is encoded as an unsigned number.  If the LWAPP packet\
    \ is\n   encrypted, the length field includes the Advanced Encryption Standard\n\
    \   Counter with CBC-MAC (AES-CCM) MIC (see Section 10.2 for more\n   information).\n"
- title: 3.1.8.  Status and WLANS
  contents:
  - "3.1.8.  Status and WLANS\n   The interpretation of this 16-bit field is binding-specific.\
    \  Refer\n   to the transport portion of the binding for a wireless technology\
    \ for\n   the specification.\n"
- title: 3.1.9.  Payload
  contents:
  - "3.1.9.  Payload\n   This field contains the header for an LWAPP data message\
    \ or LWAPP\n   control message, followed by the data associated with that message.\n"
- title: 3.2.  Using IEEE 802.3 MAC as LWAPP Transport
  contents:
  - "3.2.  Using IEEE 802.3 MAC as LWAPP Transport\n   This section describes how\
    \ the LWAPP protocol is provided over native\n   Ethernet frames.  An LWAPP packet\
    \ is formed from the MAC frame\n   header, followed by the LWAPP message header.\
    \  The following figure\n   provides an example of the frame formats used when\
    \ LWAPP is used over\n   the IEEE 802.3 transport.\n      Layer 2 LWAPP Data Frame\n\
    \      +-----------------------------------------------------------+\n      |\
    \ MAC Header | LWAPP Header [C=0] | Forwarded Data ...      |\n      +-----------------------------------------------------------+\n\
    \      Layer 2 LWAPP Control Frame\n      +---------------------------------------------------+\n\
    \      | MAC Header | LWAPP Header [C=1] | Control Message |\n      +---------------------------------------------------+\n\
    \      | Message Elements ... |\n      +----------------------+\n"
- title: 3.2.1.  Framing
  contents:
  - "3.2.1.  Framing\n   Source Address\n   A MAC address belonging to the interface\
    \ from which this message is\n   sent.  If multiple source addresses are configured\
    \ on an interface,\n   then the one chosen is implementation-dependent.\n   Destination\
    \ Address\n   A MAC address belonging to the interface to which this message is\
    \ to\n   be sent.  This destination address MAY be either an individual\n   address\
    \ or a multicast address, if more than one destination\n   interface is intended.\n\
    \   Ethertype\n   The Ethertype field is set to 0x88bb.\n"
- title: 3.2.2.  AC Discovery
  contents:
  - "3.2.2.  AC Discovery\n   When run over IEEE 802.3, LWAPP messages are distributed\
    \ to a\n   specific MAC-level broadcast domain.  The AC discovery mechanism used\n\
    \   with this transport is for a WTP to transmit a Discovery Request\n   message\
    \ to a broadcast destination MAC address.  The ACs will receive\n   this message\
    \ and reply based on their policy.\n"
- title: 3.2.3.  LWAPP Message Header Format over IEEE 802.3 MAC Transport
  contents:
  - "3.2.3.  LWAPP Message Header Format over IEEE 802.3 MAC Transport\n   All of\
    \ the fields described in Section 3.1 are used when LWAPP uses\n   the IEEE 802.3\
    \ MAC transport.\n"
- title: 3.2.4.  Fragmentation/Reassembly
  contents:
  - "3.2.4.  Fragmentation/Reassembly\n   Fragmentation at the MAC layer is managed\
    \ using the F, L, and Frag ID\n   fields of the LWAPP message header.  The LWAPP\
    \ protocol only allows a\n   single packet to be fragmented into 2, which is sufficient\
    \ for a\n   frame that exceeds MTU due to LWAPP encapsulation.  When used with\n\
    \   Layer 2 (Ethernet) transport, both fragments MUST include the LWAPP\n   header.\n"
- title: 3.2.5.  Multiplexing
  contents:
  - "3.2.5.  Multiplexing\n   LWAPP control messages and data messages are distinguished\
    \ by the 'C'\n   bit in the LWAPP message header.\n"
- title: 3.3.  Using IP/UDP as LWAPP Transport
  contents:
  - "3.3.  Using IP/UDP as LWAPP Transport\n   This section defines how LWAPP makes\
    \ use of IP/UDP transport between\n   the WTP and the AC.  When this transport\
    \ is used, the MAC layer is\n   controlled by the IP stack, and there are therefore\
    \ no special MAC-\n   layer requirements.  The following figure provides an example\
    \ of the\n   frame formats used when LWAPP is used over the IP/UDP transport.\
    \  IP\n   stacks can be either IPv4 or IPv6.\n      Layer 3 LWAPP Data Frame\n\
    \      +--------------------------------------------+\n      | MAC Header | IP\
    \ | UDP | LWAPP Header [C=0] |\n      +--------------------------------------------+\n\
    \      |Forwarded Data ... |\n      +-------------------+\n      Layer 3 LWAPP\
    \ Control Frame\n      +--------------------------------------------+\n      |\
    \ MAC Header | IP | UDP | LWAPP Header [C=1] |\n      +--------------------------------------------+\n\
    \      | Control Message | Message Elements ... |\n      +-----------------+----------------------+\n"
- title: 3.3.1.  Framing
  contents:
  - "3.3.1.  Framing\n   Communication between the WTP and AC is established according\
    \ to the\n   standard UDP client/server model.  The connection is initiated by\
    \ the\n   WTP (client) to the well-known UDP port of the AC (server) used for\n\
    \   control messages.  This UDP port number of the AC is 12222 for LWAPP\n   data\
    \ and 12223 for LWAPP control frames.\n"
- title: 3.3.2.  AC Discovery
  contents:
  - "3.3.2.  AC Discovery\n   When LWAPP is run over routed IP networks, the WTP and\
    \ the AC do not\n   need to reside in the same IP subnet (broadcast domain). \
    \ However, in\n   the event the peers reside on separate subnets, there must exist\
    \ a\n   mechanism for the WTP to discover the AC.\n   As the WTP attempts to establish\
    \ communication with the AC, it sends\n   the Discovery Request message and receives\
    \ the corresponding response\n   message from the AC.  The WTP must send the Discovery\
    \ Request message\n   to either the limited broadcast IP address (255.255.255.255),\
    \ a well\n   known multicast address, or the unicast IP address of the AC.  Upon\n\
    \   receipt of the message, the AC issues a Discovery Response message to\n  \
    \ the unicast IP address of the WTP, regardless of whether a Discovery\n   Request\
    \ was sent as a broadcast, multicast, or unicast message.\n   Whether the WTP\
    \ uses a limited IP broadcast, multicast or unicast IP\n   address is implementation-dependent.\n\
    \   In order for a WTP to transmit a Discovery Request to a unicast\n   address,\
    \ the WTP must first obtain the IP address of the AC.  Any\n   static configuration\
    \ of an AC's IP address on the WTP non-volatile\n   storage is implementation-dependent.\
    \  However, additional dynamic\n   schemes are possible: for example:\n   DHCP:\
    \  A comma-delimited, ASCII-encoded list of AC IP addresses is\n          embedded\
    \ inside a DHCP vendor-specific option 43 extension.\n          An example of\
    \ the actual format of the vendor-specific payload\n          for IPv4 is of the\
    \ form \"10.1.1.1, 10.1.1.2\".\n    DNS:  The DNS name \"LWAPP-AC-Address\" MAY\
    \ be resolvable to one or\n          more AC addresses.\n"
- title: 3.3.3.  LWAPP Message Header Format over IP/UDP Transport
  contents:
  - "3.3.3.  LWAPP Message Header Format over IP/UDP Transport\n   All of the fields\
    \ described in Section 3.1 are used when LWAPP uses\n   the IPv4/UDP or IPv6/UDP\
    \ transport, with the following exceptions.\n"
- title: 3.3.3.1.  F Bit
  contents:
  - "3.3.3.1.  F Bit\n   This flag field is not used with this transport, and MUST\
    \ be set to\n   zero.\n"
- title: 3.3.3.2.  L Bit
  contents:
  - "3.3.3.2.  L Bit\n   This flag field is not used with this transport, and MUST\
    \ be set to\n   zero.\n"
- title: 3.3.3.3.  Frag ID
  contents:
  - "3.3.3.3.  Frag ID\n   This field is not used with this transport, and MUST be\
    \ set to zero.\n"
- title: 3.3.4.  Fragmentation/Reassembly for IPv4
  contents:
  - "3.3.4.  Fragmentation/Reassembly for IPv4\n   When LWAPP is implemented at L3,\
    \ the transport layer uses IP\n   fragmentation to fragment and reassemble LWAPP\
    \ messages that are\n   longer than the MTU size used by either the WTP or AC.\
    \  The details\n   of IP fragmentation are covered in [8].  When used with the\
    \ IP\n   transport, only the first fragment would include the LWAPP header.\n"
- title: 3.3.5.  Fragmentation/Reassembly for IPv6
  contents:
  - "3.3.5.  Fragmentation/Reassembly for IPv6\n   IPv6 does MTU discovery so fragmentation\
    \ and re-assembly is not\n   necessary for UDP packets.\n"
- title: 3.3.6.  Multiplexing
  contents:
  - "3.3.6.  Multiplexing\n   LWAPP messages convey control information between WTP\
    \ and AC, as well\n   as binding specific data frames or binding specific management\n\
    \   frames.  As such, LWAPP messages need to be multiplexed in the\n   transport\
    \ sub-layer and be delivered to the proper software entities\n   in the endpoints\
    \ of the protocol.  However, the 'C' bit is still used\n   to differentiate between\
    \ data and control frames.\n   In case of Layer 3 connection, multiplexing is\
    \ achieved by use of\n   different UDP ports for control and data packets (see\
    \ Section 3.3.1).\n   As part of the Join procedure, the WTP and AC may negotiate\
    \ different\n   IP Addresses for data or control messages.  The IP address returned\n\
    \   in the AP Manager Control IP Address message element is used to\n   inform\
    \ the WTP with the IP address to which it must send all control\n   frames.  The\
    \ AP Manager Data IP Address message element MAY be\n   present only if the AC\
    \ has a different IP address that the WTP is to\n   use to send its data LWAPP\
    \ frames.\n   In the event the WTP and AC are separated by a NAT, with the WTP\n\
    \   using private IP address space, it is the responsibility of the NAT\n   to\
    \ manage appropriate UDP port mapping.\n"
- title: 4.  LWAPP Packet Definitions
  contents:
  - "4.  LWAPP Packet Definitions\n   This section contains the packet types and format.\
    \  The LWAPP\n   protocol is designed to be transport-agnostic by specifying packet\n\
    \   formats for both MAC frames and IP packets.  An LWAPP packet consists\n  \
    \ of an LWAPP Transport Layer packet header followed by an LWAPP\n   message.\n\
    \   Transport details can be found in Section 3.\n"
- title: 4.1.  LWAPP Data Messages
  contents:
  - "4.1.  LWAPP Data Messages\n   An LWAPP data message is a forwarded wireless frame.\
    \  When forwarding\n   wireless frames, the sender simply encapsulates the wireless\
    \ frame in\n   an LWAPP data packet, using the appropriate transport rules defined\n\
    \   in Section 3.\n   In the event that the encapsulated frame would exceed the\
    \ transport\n   layer's MTU, the sender is responsible for the fragmentation of\
    \ the\n   frame, as specified in the transport-specific section of Section 3.\n\
    \   The actual format of the encapsulated LWAPP data frame is subject to\n   the\
    \ rules defined under the specific wireless technology binding.\n"
- title: 4.2.  LWAPP Control Messages Overview
  contents:
  - "4.2.  LWAPP Control Messages Overview\n   The LWAPP Control protocol provides\
    \ a control channel between the WTP\n   and the AC.  The control channel is the\
    \ series of control messages\n   between the WTP and AC, associated with a session\
    \ ID and key.\n   Control messages are divided into the following distinct message\n\
    \   types:\n   Discovery:  LWAPP Discovery messages are used to identify potential\n\
    \      ACs, their load and capabilities.\n   Control Channel Management:  Messages\
    \ that fall within this\n      classification are used for the discovery of ACs\
    \ by the WTPs as\n      well as the establishment and maintenance of an LWAPP\
    \ control\n      channel.\n   WTP Configuration:  The WTP Configuration messages\
    \ are used by the AC\n      to push a specific configuration to the WTPs with\
    \ which it has a\n      control channel.  Messages that deal with the retrieval\
    \ of\n      statistics from the WTP also fall in this category.\n   Mobile Session\
    \ Management:  Mobile Session Management messages are\n      used by the AC to\
    \ push specific mobile policies to the WTP.\n   Firmware Management:  Messages\
    \ in this category are used by the AC to\n      push a new firmware image down\
    \ to the WTP.\n   Control Channel, WTP Configuration, and Mobile Session Management\n\
    \   MUST be implemented.  Firmware Management MAY be implemented.\n   In addition,\
    \ technology-specific bindings may introduce new control\n   channel commands\
    \ that depart from the above list.\n"
- title: 4.2.1.  Control Message Format
  contents:
  - "4.2.1.  Control Message Format\n   All LWAPP control messages are sent encapsulated\
    \ within the LWAPP\n   header (see Section 3.1).  Immediately following the header\
    \ is the\n   LWAPP control header, which has the following format:\n       0 \
    \                  1                   2                   3\n       0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Message Type |    Seq Num    |      Msg Element Length       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           Session ID                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      Msg Element [0..N]       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.2.1.1.  Message Type
  contents:
  - "4.2.1.1.  Message Type\n   The Message Type field identifies the function of\
    \ the LWAPP control\n   message.  The valid values for a Message Type are the\
    \ following:\n                  Description                       Value\n    \
    \              Discovery Request                    1\n                  Discovery\
    \ Response                   2\n                  Join Request               \
    \          3\n                  Join Response                        4\n     \
    \             Join ACK                             5\n                  Join Confirm\
    \                         6\n                  Unused                        \
    \     7-9\n                  Configure Request                   10\n        \
    \          Configure Response                  11\n                  Configuration\
    \ Update Request        12\n                  Configuration Update Response  \
    \     13\n                  WTP Event Request                   14\n         \
    \         WTP Event Response                  15\n                  Change State\
    \ Event Request          16\n                  Change State Event Response   \
    \      17\n                  Unused                           18-21\n        \
    \          Echo Request                        22\n                  Echo Response\
    \                       23\n                  Image Data Request             \
    \     24\n                  Image Data Response                 25\n         \
    \         Reset Request                       26\n                  Reset Response\
    \                      27\n                  Unused                          \
    \ 28-29\n                  Key Update Request                  30\n          \
    \        Key Update Response                 31\n                  Primary Discovery\
    \ Request           32\n                  Primary Discovery Response         \
    \ 33\n                  Data Transfer Request               34\n             \
    \     Data Transfer Response              35\n                  Clear Config Indication\
    \             36\n                  WLAN Config Request                 37\n \
    \                 WLAN Config Response                38\n                  Mobile\
    \ Config Request               39\n                  Mobile Config Response  \
    \            40\n"
- title: 4.2.1.2.  Sequence Number
  contents:
  - "4.2.1.2.  Sequence Number\n   The Sequence Number field is an identifier value\
    \ to match request/\n   response packet exchanges.  When an LWAPP packet with\
    \ a request\n   message type is received, the value of the Sequence Number field\
    \ is\n   copied into the corresponding response packet.\n   When an LWAPP control\
    \ frame is sent, its internal sequence number\n   counter is monotonically incremented,\
    \ ensuring that no two requests\n   pending have the same sequence number.  This\
    \ field will wrap back to\n   zero.\n"
- title: 4.2.1.3.  Message Element Length
  contents:
  - "4.2.1.3.  Message Element Length\n   The length field indicates the number of\
    \ bytes following the Session\n   ID field.  If the LWAPP packet is encrypted,\
    \ the length field\n   includes the AES-CCM MIC (see Section 10.2 for more information).\n"
- title: 4.2.1.4.  Session ID
  contents:
  - "4.2.1.4.  Session ID\n   The Session ID is a 32-bit unsigned integer that is\
    \ used to identify\n   the security context for encrypted exchanges between the\
    \ WTP and the\n   AC.  Note that a Session ID is a random value that MUST be unique\n\
    \   between a given AC and any of the WTPs with which it may be\n   communicating.\n"
- title: 4.2.1.5.  Message Element [0..N]
  contents:
  - "4.2.1.5.  Message Element [0..N]\n   The message element(s) carry the information\
    \ pertinent to each of the\n   control message types.  Every control message in\
    \ this specification\n   specifies which message elements are permitted.\n"
- title: 4.2.2.  Message Element Format
  contents:
  - "4.2.2.  Message Element Format\n   The message element is used to carry information\
    \ pertinent to a\n   control message.  Every message element is identified by\
    \ the Type\n   field, whose numbering space is managed via IANA (see Section 16).\n\
    \   The total length of the message elements is indicated in the Message\n   Element\
    \ Length field.\n   All of the message element definitions in this document use\
    \ a diagram\n   similar to the one below in order to depict their formats.  Note\
    \ that\n   in order to simplify this specification, these diagrams do not\n  \
    \ include the header fields (Type and Length).  However, in each\n   message element\
    \ description, the header's field values will be\n   defined.\n   Note that additional\
    \ message elements may be defined in separate IETF\n   documents.\n   The format\
    \ of a message element uses the TLV format shown here:\n       0             \
    \      1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      Type     |             Length            |   Value ...   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   where\
    \ Type (8 bits) identifies the character of the information\n   carried in the\
    \ Value field and Length (16 bits) indicates the number\n   of bytes in the Value\
    \ field.\n"
- title: 4.2.2.1.  Generic Message Elements
  contents:
  - "4.2.2.1.  Generic Message Elements\n   This section includes message elements\
    \ that are not bound to a\n   specific control message.\n"
- title: 4.2.2.1.1.  Vendor Specific
  contents:
  - "4.2.2.1.1.  Vendor Specific\n   The Vendor-Specific Payload is used to communicate\
    \ vendor-specific\n   information between the WTP and the AC.  The value contains\
    \ the\n   following format:\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Vendor Identifier                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          Element ID           |   Value...    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   104 for Vendor Specific\n   Length:   >= 7\n   Vendor Identifier:\
    \   A 32-bit value containing the IANA-assigned \"SMI\n      Network Management\
    \ Private Enterprise Codes\" [13].\n   Element ID:   A 16-bit Element Identifier\
    \ that is managed by the\n      vendor.\n   Value:   The value associated with\
    \ the vendor-specific element.\n"
- title: 4.2.3.  Quality of Service
  contents:
  - "4.2.3.  Quality of Service\n   It is recommended that LWAPP control messages\
    \ be sent by both the AC\n   and the WTP with an appropriate Quality-of-Service\
    \ precedence value,\n   ensuring that congestion in the network minimizes occurrences\
    \ of\n   LWAPP control channel disconnects.  Therefore, a Quality-of-Service-\n\
    \   enabled LWAPP device should use:\n   802.1P:   The precedence value of 7 SHOULD\
    \ be used.\n   DSCP:   The Differentiated Services Code Point (DSCP) tag value\
    \ of 46\n           SHOULD be used.\n"
- title: 5.  LWAPP Discovery Operations
  contents:
  - "5.  LWAPP Discovery Operations\n   The Discovery messages are used by a WTP to\
    \ determine which ACs are\n   available to provide service, as well as the capabilities\
    \ and load of\n   the ACs.\n"
- title: 5.1.  Discovery Request
  contents:
  - "5.1.  Discovery Request\n   The Discovery Request is used by the WTP to automatically\
    \ discover\n   potential ACs available in the network.  A WTP must transmit this\n\
    \   command even if it has a statically configured AC, as it is a\n   required\
    \ step in the LWAPP state machine.\n   Discovery Requests MUST be sent by a WTP\
    \ in the Discover state after\n   waiting for a random delay less of than MaxDiscoveryInterval,\
    \ after a\n   WTP first comes up or is (re)initialized.  A WTP MUST send no more\n\
    \   than a maximum of MaxDiscoveries discoveries, waiting for a random\n   delay\
    \ less than MaxDiscoveryInterval between each successive\n   discovery.\n   This\
    \ is to prevent an explosion of WTP Discoveries.  An example of\n   this occurring\
    \ would be when many WTPs are powered on at the same\n   time.\n   Discovery Requests\
    \ MUST be sent by a WTP when no Echo Responses are\n   received for NeighborDeadInterval\
    \ and the WTP returns to the Idle\n   state.  Discovery Requests are sent after\
    \ NeighborDeadInterval, they\n   MUST be sent after waiting for a random delay\
    \ less than\n   MaxDiscoveryInterval.  A WTP MAY send up to a maximum of\n   MaxDiscoveries\
    \ discoveries, waiting for a random delay less than\n   MaxDiscoveryInterval between\
    \ each successive discovery.\n   If a Discovery Response is not received after\
    \ sending the maximum\n   number of Discovery Requests, the WTP enters the Sulking\
    \ state and\n   MUST wait for an interval equal to SilentInterval before sending\n\
    \   further Discovery Requests.\n   The Discovery Request message may be sent\
    \ as a unicast, broadcast, or\n   multicast message.\n   Upon receiving a Discovery\
    \ Request, the AC will respond with a\n   Discovery Response sent to the address\
    \ in the source address of the\n   received Discovery Request.\n   The following\
    \ subsections define the message elements that MUST be\n   included in this LWAPP\
    \ operation.\n"
- title: 5.1.1.  Discovery Type
  contents:
  - "5.1.1.  Discovery Type\n   The Discovery message element is used to configure\
    \ a WTP to operate\n   in a specific mode.\n       0\n       0 1 2 3 4 5 6 7\n\
    \      +-+-+-+-+-+-+-+-+\n      | Discovery Type|\n      +-+-+-+-+-+-+-+-+\n \
    \  Type:   58 for Discovery Type\n   Length:   1\n   Discovery Type:   An 8-bit\
    \ value indicating how the AC was\n      discovered.  The following values are\
    \ supported:\n      0 -  Broadcast\n      1 -  Configured\n"
- title: 5.1.2.  WTP Descriptor
  contents:
  - "5.1.2.  WTP Descriptor\n   The WTP Descriptor message element is used by the\
    \ WTP to communicate\n   its current hardware/firmware configuration.  The value\
    \ contains the\n   following fields.\n       0                   1           \
    \        2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Hardware   Version                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                      Software   Version                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          Boot   Version                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   Max Radios  | Radios in use |    Encryption Capabilities    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   3 for WTP Descriptor\n   Length:   16\n   Hardware Version:   A 32-bit\
    \ integer representing the WTP's hardware\n      version number.\n   Software\
    \ Version:   A 32-bit integer representing the WTP's Firmware\n      version number.\n\
    \   Boot Version:   A 32-bit integer representing the WTP's boot loader's\n  \
    \    version number.\n   Max Radios:   An 8-bit value representing the number\
    \ of radios (where\n      each radio is identified via the RID field) supported\
    \ by the WTP.\n   Radios in Use:   An 8-bit value representing the number of radios\n\
    \      present in the WTP.\n   Encryption Capabilities:   This 16-bit field is\
    \ used by the WTP to\n      communicate its capabilities to the AC.  Since most\
    \ WTPs support\n      link-layer encryption, the AC may make use of these services.\n\
    \      There are binding-dependent encryption capabilites.  A WTP that\n     \
    \ does not have any encryption capabilities would set this field to\n      zero\
    \ (0).  Refer to the specific binding for the specification.\n"
- title: 5.1.3.  WTP Radio Information
  contents:
  - "5.1.3.  WTP Radio Information\n   The WTP Radio Information message element is\
    \ used to communicate the\n   radio information in a specific slot.  The Discovery\
    \ Request MUST\n   include one such message element per radio in the WTP.  The\
    \ Radio-\n   Type field is used by the AC in order to determine which technology-\n\
    \   specific binding is to be used with the WTP.\n   The value contains two fields,\
    \ as shown:\n       0                   1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   Radio ID    |   Radio\
    \ Type  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:   4 for WTP Radio\
    \ Information\n   Length:   2\n   Radio ID:   The Radio Identifier, typically\
    \ refers to some interface\n      index on the WTP.\n   Radio Type:   The type\
    \ of radio present.  The following values are\n      supported:\n      1 - 802.11bg:\
    \   An 802.11bg radio.\n      2 - 802.11a:   An 802.11a radio.\n      3 - 802.16:\
    \   An 802.16 radio.\n      4 - Ultra Wideband:   A UWB radio.\n      7 - all:\
    \   Used to specify all radios in the WTP.\n"
- title: 5.2.  Discovery Response
  contents:
  - "5.2.  Discovery Response\n   The Discovery Response is a mechanism by which an\
    \ AC advertises its\n   services to requesting WTPs.\n   Discovery Responses are\
    \ sent by an AC after receiving a Discovery\n   Request.\n   When a WTP receives\
    \ a Discovery Response, it MUST wait for an\n   interval not less than DiscoveryInterval\
    \ for receipt of additional\n   Discovery Responses.  After the DiscoveryInterval\
    \ elapses, the WTP\n   enters the Joining state and will select one of the ACs\
    \ that sent a\n   Discovery Response and send a Join Request to that AC.\n   The\
    \ following subsections define the message elements that MUST be\n   included\
    \ in this LWAPP operation.\n"
- title: 5.2.1.  AC Address
  contents:
  - "5.2.1.  AC Address\n   The AC Address message element is used to communicate\
    \ the identity of\n   the AC.  The value contains two fields, as shown:\n    \
    \   0                   1                   2                   3\n       0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Reserved    |                  MAC Address                  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                 MAC Address                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   2 for AC Address\n   Length:   7\n   Reserved:   MUST be set to zero\n\
    \   MAC Address:   The MAC address of the AC\n"
- title: 5.2.2.  AC Descriptor
  contents:
  - "5.2.2.  AC Descriptor\n   The AC Descriptor message element is used by the AC\
    \ to communicate\n   its current state.  The value contains the following fields:\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Reserved    |                 Hardware  Version ...         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     HW Ver    |                 Software  Version ...         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     SW Ver    |            Stations           |     Limit     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     Limit     |            Radios             |   Max Radio   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Max Radio   |    Security   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   6 for AC Descriptor\n   Length:   17\n   Reserved:   MUST be set to\
    \ zero\n   Hardware Version:   A 32-bit integer representing the AC's hardware\n\
    \      version number.\n   Software Version:   A 32-bit integer representing the\
    \ AC's Firmware\n      version number.\n   Stations:   A 16-bit integer representing\
    \ the number of mobile\n      stations currently associated with the AC.\n   Limit:\
    \   A 16-bit integer representing the maximum number of stations\n      supported\
    \ by the AC.\n   Radios:   A 16-bit integer representing the number of WTPs currently\n\
    \      attached to the AC.\n   Max Radio:   A 16-bit integer representing the\
    \ maximum number of WTPs\n      supported by the AC.\n   Security:   An 8-bit\
    \ bitmask specifying the security schemes\n      supported by the AC.  The following\
    \ values are supported (see\n      Section 10):\n      1 -  X.509 Certificate-Based\n\
    \      2 -  Pre-Shared Secret\n"
- title: 5.2.3.  AC Name
  contents:
  - "5.2.3.  AC Name\n   The AC Name message element contains an ASCII representation\
    \ of the\n   AC's identity.  The value is a variable-length byte string.  The\n\
    \   string is NOT zero terminated.\n       0\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n\
    \      | Name ...\n      +-+-+-+-+-+-+-+-+\n   Type:   31 for AC Name\n   Length:\
    \   > 0\n   Name:   A variable-length ASCII string containing the AC's name.\n"
- title: 5.2.4.  WTP Manager Control IPv4 Address
  contents:
  - "5.2.4.  WTP Manager Control IPv4 Address\n   The WTP Manager Control IPv4 Address\
    \ message element is sent by the\n   AC to the WTP during the discovery process\
    \ and is used by the AC to\n   provide the interfaces available on the AC, and\
    \ their current load.\n   This message element is useful for the WTP to perform\
    \ load balancing\n   across multiple interfaces.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           IP Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           WTP Count           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  Type:   99 for WTP Manager Control IPv4 Address\n   Length:   6\n   IP Address:\
    \   The IP address of an interface.\n   WTP Count:   The number of WTPs currently\
    \ connected to the interface.\n"
- title: 5.2.5.  WTP Manager Control IPv6 Address
  contents:
  - "5.2.5.  WTP Manager Control IPv6 Address\n   The WTP Manager Control IPv6 Address\
    \ message element is sent by the\n   AC to the WTP during the discovery process\
    \ and is used by the AC to\n   provide the interfaces available on the AC, and\
    \ their current load.\n   This message element is useful for the WTP to perform\
    \ load balancing\n   across multiple interfaces.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           IP Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           IP Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           IP Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           IP Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           WTP Count           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   137 for WTP Manager Control IPv6 Address\n   Length:   6\n   IP Address:\
    \   The IP address of an interface.\n   WTP Count:   The number of WTPs currently\
    \ connected to the interface.\n"
- title: 5.3.  Primary Discovery Request
  contents:
  - "5.3.  Primary Discovery Request\n   The Primary Discovery Request is sent by\
    \ the WTP in order to\n   determine whether its preferred (or primary) AC is available.\n\
    \   Primary Discovery Requests are sent by a WTP when it has a primary AC\n  \
    \ configured, and is connected to another AC.  This generally occurs as\n   a\
    \ result of a failover, and is used by the WTP as a means to discover\n   when\
    \ its primary AC becomes available.  As a consequence, this\n   message is only\
    \ sent by a WTP when it is in the Run state.\n   The frequency of the Primary\
    \ Discovery Requests should be no more\n   often than the sending of the Echo\
    \ Request message.\n   Upon receiving a Discovery Request, the AC will respond\
    \ with a\n   Primary Discovery Response sent to the address in the source address\n\
    \   of the received Primary Discovery Request.\n   The following subsections define\
    \ the message elements that MUST be\n   included in this LWAPP operation.\n"
- title: 5.3.1.  Discovery Type
  contents:
  - "5.3.1.  Discovery Type\n   The Discovery Type message element is defined in Section\
    \ 5.1.1.\n"
- title: 5.3.2.  WTP Descriptor
  contents:
  - "5.3.2.  WTP Descriptor\n   The WTP Descriptor message element is defined in Section\
    \ 5.1.2.\n"
- title: 5.3.3.  WTP Radio Information
  contents:
  - "5.3.3.  WTP Radio Information\n   A WTP Radio Information message element must\
    \ be present for every\n   radio in the WTP.  This message element is defined\
    \ in Section 5.1.3.\n"
- title: 5.4.  Primary Discovery Response
  contents:
  - "5.4.  Primary Discovery Response\n   The Primary Discovery Response is a mechanism\
    \ by which an AC\n   advertises its availability and services to requesting WTPs\
    \ that are\n   configured to have the AC as its primary AC.\n   Primary Discovery\
    \ Responses are sent by an AC after receiving a\n   Primary Discovery Request.\n\
    \   When a WTP receives a Primary Discovery Response, it may opt to\n   establish\
    \ an LWAPP connection to its primary AC, based on the\n   configuration of the\
    \ WTP Fallback Status message element on the WTP.\n   The following subsections\
    \ define the message elements that MUST be\n   included in this LWAPP operation.\n"
- title: 5.4.1.  AC Descriptor
  contents:
  - "5.4.1.  AC Descriptor\n   The Discovery Type message element is defined in Section\
    \ 5.2.2.\n"
- title: 5.4.2.  AC Name
  contents:
  - "5.4.2.  AC Name\n   The AC Name message element is defined in Section 5.2.3.\n"
- title: 5.4.3.  WTP Manager Control IPv4 Address
  contents:
  - "5.4.3.  WTP Manager Control IPv4 Address\n   A WTP Radio Information message\
    \ element MAY be present for every\n   radio in the WTP that is reachable via\
    \ IPv4.  This message element is\n   defined in Section 5.2.4.\n"
- title: 5.4.4.  WTP Manager Control IPv6 Address
  contents:
  - "5.4.4.  WTP Manager Control IPv6 Address\n   A WTP Radio Information message\
    \ element must be present for every\n   radio in the WTP that is reachable via\
    \ IPv6.  This message element is\n   defined in Section 5.2.5.\n"
- title: 6.  Control Channel Management
  contents:
  - "6.  Control Channel Management\n   The Control Channel Management messages are\
    \ used by the WTP and AC to\n   create and maintain a channel of communication\
    \ on which various other\n   commands may be transmitted, such as configuration,\
    \ firmware update,\n   etc.\n"
- title: 6.1.  Join Request
  contents:
  - "6.1.  Join Request\n   The Join Request is used by a WTP to inform an AC that\
    \ it wishes to\n   provide services through it.\n   Join Requests are sent by\
    \ a WTP in the Joining state after receiving\n   one or more Discovery Responses.\
    \  The Join Request is also used as an\n   MTU discovery mechanism by the WTP.\
    \  The WTP issues a Join Request\n   with a Test message element, bringing the\
    \ total size of the message\n   to exceed MTU.\n   If the transport used does\
    \ not provide MTU path discovery, the\n   initial Join Request is padded with\
    \ the Test message element to 1596\n   bytes.  If a Join Response is received,\
    \ the WTP can forward frames\n   without requiring any fragmentation.  If no Join\
    \ Response is\n   received, it issues a second Join Request padded with the Test\n\
    \   payload to a total of 1500 bytes.  The WTP continues to cycle from\n   large\
    \ (1596) to small (1500) packets until a Join Response has been\n   received,\
    \ or until both packets' sizes have been retransmitted 3\n   times.  If the Join\
    \ Response is not received after the maximum number\n   of retransmissions, the\
    \ WTP MUST abandon the AC and restart the\n   discovery phase.\n   When an AC\
    \ receives a Join Request, it will respond with a Join\n   Response.  If the certificate-based\
    \ security mechanism is used, the\n   AC validates the certificate found in the\
    \ request.  If valid, the AC\n   generates a session key that will be used to\
    \ secure the control\n   frames it exchanges with the WTP.  When the AC issues\
    \ the Join\n   Response, the AC creates a context for the session with the WTP.\n\
    \   If the pre-shared session key security mechanism is used, the AC\n   saves\
    \ the WTP's nonce, found in the WNonce message element, and\n   creates its own\
    \ nonce, which it includes in the ANonce message\n   element.  Finally, the AC\
    \ creates the PSK-MIC, which is computed\n   using a key that is derived from\
    \ the PSK.\n   A Join Request that includes both a WNonce and a Certificate message\n\
    \   element MUST be considered invalid.\n   Details on the key generation are\
    \ found in Section 10.\n   The following subsections define the message elements\
    \ that MUST be\n   included in this LWAPP operation.\n"
- title: 6.1.1.  WTP Descriptor
  contents:
  - "6.1.1.  WTP Descriptor\n   The WTP Descriptor message element is defined in Section\
    \ 5.1.2.\n"
- title: 6.1.2.  AC Address
  contents:
  - "6.1.2.  AC Address\n   The AC Address message element is defined in Section 5.2.1.\n"
- title: 6.1.3.  WTP Name
  contents:
  - "6.1.3.  WTP Name\n   The WTP Name message element value is a variable-length\
    \ byte string.\n   The string is NOT zero terminated.\n       0\n       0 1 2\
    \ 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n      | Name ...\n      +-+-+-+-+-+-+-+-+\n\
    \   Type:   5 for WTP Name\n   Length:   > 0\n   Name:   A non-zero-terminated\
    \ string containing the WTP's name.\n"
- title: 6.1.4.  Location Data
  contents:
  - "6.1.4.  Location Data\n   The Location Data message element is a variable-length\
    \ byte string\n   containing user-defined location information (e.g., \"Next to\n\
    \   Fridge\").  The string is NOT zero terminated.\n       0\n       0 1 2 3 4\
    \ 5 6 7\n      +-+-+-+-+-+-+-+-+\n      | Location ...\n      +-+-+-+-+-+-+-+-+\n\
    \   Type:   35 for Location Data\n   Length:   > 0\n   Location:   A non-zero-terminated\
    \ string containing the WTP's\n      location.\n"
- title: 6.1.5.  WTP Radio Information
  contents:
  - "6.1.5.  WTP Radio Information\n   A WTP Radio Information message element must\
    \ be present for every\n   radio in the WTP.  This message element is defined\
    \ in Section 5.1.3.\n"
- title: 6.1.6.  Certificate
  contents:
  - "6.1.6.  Certificate\n   The Certificate message element value is a byte string\
    \ containing a\n   DER-encoded x.509v3 certificate.  This message element is only\n\
    \   included if the LWAPP security type used between the WTP and the AC\n   makes\
    \ use of certificates (see Section 10 for more information).\n       0\n     \
    \  0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n      | Certificate...\n      +-+-+-+-+-+-+-+-+\n\
    \   Type:   44 for Certificate\n   Length:   > 0\n   Certificate:   A non-zero-terminated\
    \ string containing the device's\n      certificate.\n"
- title: 6.1.7.  Session ID
  contents:
  - "6.1.7.  Session ID\n   The Session ID message element value contains a randomly\
    \ generated\n   [4] unsigned 32-bit integer.\n       0                   1   \
    \                2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           Session ID                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   45 for Session ID\n   Length:   4\n   Session ID:   32-bit random session\
    \ identifier.\n"
- title: 6.1.8.  Test
  contents:
  - "6.1.8.  Test\n   The Test message element is used as padding to perform MTU discovery,\n\
    \   and it MAY contain any value, of any length.\n       0\n       0 1 2 3 4 5\
    \ 6 7\n      +-+-+-+-+-+-+-+-+\n      |  Padding ...\n      +-+-+-+-+-+-+-+-+\n\
    \   Type:   18 for Test\n   Length:   > 0\n   Padding:   A variable-length pad.\n"
- title: 6.1.9.  XNonce
  contents:
  - "6.1.9.  XNonce\n   The XNonce is used by the WTP to communicate its random nonce\
    \ during\n   the join or rekey phase.  See Section 10 for more information.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Nonce                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Nonce                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Nonce                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Nonce                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   111 for XNonce\n   Length:   16\n   Nonce:   1 16-octet random nonce.\n"
- title: 6.2.  Join Response
  contents:
  - "6.2.  Join Response\n   The Join Response is sent by the AC to indicate to a\
    \ WTP whether it\n   is capable and willing to provide service to it.\n   Join\
    \ Responses are sent by the AC after receiving a Join Request.\n   Once the Join\
    \ Response has been sent, the Heartbeat timer is\n   initiated for the session\
    \ to EchoInterval.  Expiration of the timer\n   will result in deletion of the\
    \ AC-WTP session.  The timer is\n   refreshed upon receipt of the Echo Request.\n\
    \   If the security method used is certificate-based, when a WTP receives\n  \
    \ a Join Response, it enters the Joined state and initiates either a\n   Configure\
    \ Request or Image Data to the AC to which it is now joined.\n   Upon entering\
    \ the Joined state, the WTP begins timing an interval\n   equal to NeighborDeadInterval.\
    \  Expiration of the timer will result\n   in the transmission of the Echo Request.\n\
    \   If the security method used is pre-shared-secret-based, when a WTP\n   receives\
    \ a Join Response that includes a valid PSK-MIC message\n   element, it responds\
    \ with a Join ACK that also MUST include a locally\n   computed PSK-MIC message\
    \ element.\n   The following subsections define the message elements that MUST\
    \ be\n   included in this LWAPP operation.\n"
- title: 6.2.1.  Result Code
  contents:
  - "6.2.1.  Result Code\n   The Result Code message element value is a 32-bit integer\
    \ value,\n   indicating the result of the request operation corresponding to the\n\
    \   sequence number in the message.  The Result Code is included in a\n   successful\
    \ Join Response.\n       0                   1                   2           \
    \        3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Result Code                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   2 for Result Code\n   Length:   4\n   Result Code:   The following values\
    \ are defined:\n      0  Success\n      1  Failure (AC List message element MUST\
    \ be present)\n"
- title: 6.2.2.  Status
  contents:
  - "6.2.2.  Status\n   The Status message element is sent by the AC to the WTP in\
    \ a non-\n   successful Join Response message.  This message element is used to\n\
    \   indicate the reason for the failure and should only be accompanied\n   with\
    \ a Result Code message element that indicates a failure.\n       0\n       0\
    \ 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n      |    Status     |\n      +-+-+-+-+-+-+-+-+\n\
    \   Type:   60 for Status\n   Length:   1\n   Status:   The Status field indicates\
    \ the reason for an LWAPP failure.\n      The following values are supported:\n\
    \      1 -  Reserved - do not use\n      2 -  Resource Depletion\n      3 -  Unknown\
    \ Source\n      4 -  Incorrect Data\n"
- title: 6.2.3.  Certificate
  contents:
  - "6.2.3.  Certificate\n   The Certificate message element is defined in Section\
    \ 6.1.6.  Note\n   this message element is only included if the WTP and the AC\
    \ make use\n   of certificate-based security as defined in Section 10.\n"
- title: 6.2.4.  WTP Manager Data IPv4 Address
  contents:
  - "6.2.4.  WTP Manager Data IPv4 Address\n   The WTP Manager Data IPv4 Address message\
    \ element is optionally sent\n   by the AC to the WTP during the join phase. \
    \ If present, the IP\n   Address contained in this message element is the address\
    \ the WTP is\n   to use when sending any of its LWAPP data frames.\n   Note that\
    \ this message element is only valid when LWAPP uses the\n   IP/UDP Layer 3 transport.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           IP Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   138 for WTP Manager Data IPv4 Address\n   Length:   4\n   IP Address:   The\
    \ IP address of an interface.\n"
- title: 6.2.5.  WTP Manager Data IPv6 Address
  contents:
  - "6.2.5.  WTP Manager Data IPv6 Address\n   The WTP Manager Data IPv6 Address message\
    \ element is optionally sent\n   by the AC to the WTP during the join phase. \
    \ If present, the IP\n   Address contained in this message element is the address\
    \ the WTP is\n   to use when sending any of its LWAPP data frames.\n   Note that\
    \ this message element is only valid when LWAPP uses the\n   IP/UDP Layer 3 transport.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           IP Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           IP Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           IP Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           IP Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   139 for WTP Manager Data IPv6 Address\n   Length:   4\n   IP Address:\
    \   The IP address of an interface.\n"
- title: 6.2.6.  AC IPv4 List
  contents:
  - "6.2.6.  AC IPv4 List\n   The AC List message element is used to configure a WTP\
    \ with the\n   latest list of ACs in a cluster.  This message element MUST be\n\
    \   included if the Join Response returns a failure indicating that the\n   AC\
    \ cannot handle the WTP at this time, allowing the WTP to find an\n   alternate\
    \ AC to which to connect.\n       0                   1                   2  \
    \                 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       AC IP Address[]                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   59 for AC List\n   Length:   >= 4\n   AC IP Address:   An array of 32-bit\
    \ integers containing an AC's IPv4\n      Address.\n"
- title: 6.2.7.  AC IPv6 List
  contents:
  - "6.2.7.  AC IPv6 List\n   The AC List message element is used to configure a WTP\
    \ with the\n   latest list of ACs in a cluster.  This message element MUST be\n\
    \   included if the Join Response returns a failure indicating that the\n   AC\
    \ cannot handle the WTP at this time, allowing the WTP to find an\n   alternate\
    \ AC to which to connect.\n       0                   1                   2  \
    \                 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       AC IP Address[]                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       AC IP Address[]                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       AC IP Address[]                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       AC IP Address[]                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   141 for AC List\n   Length:   >= 4\n   AC IP Address:   An array of\
    \ 32-bit integers containing an AC's IPv6\n      Address.\n"
- title: 6.2.8.  ANonce
  contents:
  - "6.2.8.  ANonce\n   The ANonce message element is sent by an AC during the join\
    \ or rekey\n   phase.  The contents of the ANonce are encrypted as described in\n\
    \   Section 10 for more information.\n       0                   1           \
    \        2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Nonce                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Nonce                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Nonce                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Nonce                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   108 for ANonce\n   Length:   16\n   Nonce:   An encrypted, 16-octet\
    \ random nonce.\n"
- title: 6.2.9.  PSK-MIC
  contents:
  - "6.2.9.  PSK-MIC\n   The PSK-MIC message element includes a message integrity\
    \ check, whose\n   purpose is to provide confirmation to the peer that the sender\
    \ has\n   the proper session key.  This message element is only included if the\n\
    \   security method used between the WTP and the AC is the pre-shared\n   secret\
    \ mechanism.  See Section 10 for more information.\n   When present, the PSK-MIC\
    \ message element MUST be the last message\n   element in the message.  The MIC\
    \ is computed over the complete LWAPP\n   packet, from the LWAPP control header\
    \ as defined in Section 4.2.1 to\n   the end of the packet (which MUST be this\
    \ PSK-MIC message element).\n   The MIC field in this message element and the\
    \ Sequence Number field\n   in the LWAPP control header MUST be set to zeroes\
    \ prior to computing\n   the MIC.  The length field in the LWAPP control header\
    \ must already\n   include this message element prior to computing the MIC.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       SPI       |                    MIC ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   109 for PSK-MIC\n   Length:   > 1\n   SPI:   The Security Parameter\
    \ Index (SPI) field specifies the\n      cryptographic algorithm used to create\
    \ the message integrity\n      check.  The following values are supported:\n \
    \     0 -  Unused\n      1 -  HMAC-SHA-1 (RFC 2104 [15])\n   MIC:   A 20-octet\
    \ Message Integrity Check.\n"
- title: 6.3.  Join ACK
  contents:
  - "6.3.  Join ACK\n   The Join ACK message is sent by the WTP upon receiving a Join\n\
    \   Response, which has a valid PSK-MIC message element, as a means of\n   providing\
    \ key confirmation to the AC.  The Join ACK is only used in\n   the case where\
    \ the WTP makes use of the pre-shared key LWAPP mode\n   (see Section 10 for more\
    \ information).\n   Note that the AC should never receive this message unless\
    \ the\n   security method used between the WTP and the AC is pre-shared-secret-\n\
    \   based.\n   The following subsections define the message elements that MUST\
    \ be\n   included in this LWAPP operation.\n"
- title: 6.3.1.  Session ID
  contents:
  - "6.3.1.  Session ID\n   The Session ID message element is defined in Section 6.1.7.\n"
- title: 6.3.2.  WNonce
  contents:
  - "6.3.2.  WNonce\n   The WNonce message element is sent by a WTP during the join\
    \ or rekey\n   phase.  The contents of the ANonce are encrypted as described in\n\
    \   Section 10 for more information.\n       0                   1           \
    \        2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Nonce                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Nonce                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Nonce                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Nonce                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   107 for WNonce\n   Length:   16\n   Nonce:   An encrypted, 16-octet\
    \ random nonce.\n"
- title: 6.3.3.  PSK-MIC
  contents:
  - "6.3.3.  PSK-MIC\n   The PSK-MIC message element is defined in Section 6.2.9.\n"
- title: 6.4.  Join Confirm
  contents:
  - "6.4.  Join Confirm\n   The Join Confirm message is sent by the AC upon receiving\
    \ a Join ACK,\n   which has a valid PSK-MIC message element, as a means of providing\n\
    \   key confirmation to the WTP.  The Join Confirm is only used in the\n   case\
    \ where the WTP makes use of the pre-shared key LWAPP mode (see\n   Section 10\
    \ for more information).\n   If the security method used is pre-shared-key-based,\
    \ when a WTP\n   receives a Join Confirm, it enters the Joined state and initiates\n\
    \   either a Configure Request or Image Data to the AC to which it is now\n  \
    \ joined.  Upon entering the Joined state, the WTP begins timing an\n   interval\
    \ equal to NeighborDeadInterval.  Expiration of the timer will\n   result in the\
    \ transmission of the Echo Request.\n   This message is never received, or sent,\
    \ when the security type used\n   between the WTP and the AC is certificated-based.\n\
    \   The following subsections define the message elements that MUST be\n   included\
    \ in this LWAPP operation.\n"
- title: 6.4.1.  Session ID
  contents:
  - "6.4.1.  Session ID\n   The Session ID message element is defined in Section 6.1.7.\n"
- title: 6.4.2.  PSK-MIC
  contents:
  - "6.4.2.  PSK-MIC\n   The PSK-MIC message element is defined in Section 6.2.9.\n"
- title: 6.5.  Echo Request
  contents:
  - "6.5.  Echo Request\n   The Echo Request message is a keepalive mechanism for\
    \ the LWAPP\n   control message.\n   Echo Requests are sent periodically by a\
    \ WTP in the Run state (see\n   Figure 2) to determine the state of the connection\
    \ between the WTP\n   and the AC.  The Echo Request is sent by the WTP when the\
    \ Heartbeat\n   timer expires, and it MUST start its NeighborDeadInterval timer.\n\
    \   The Echo Request carries no message elements.\n   When an AC receives an Echo\
    \ Request, it responds with an Echo\n   Response.\n"
- title: 6.6.  Echo Response
  contents:
  - "6.6.  Echo Response\n   The Echo Response acknowledges the Echo Request, and\
    \ is only accepted\n   while in the Run state (see Figure 2).\n   Echo Responses\
    \ are sent by an AC after receiving an Echo Request.\n   After transmitting the\
    \ Echo Response, the AC should reset its\n   Heartbeat timer to expire in the\
    \ value configured for EchoInterval.\n   If another Echo request is not received\
    \ by the AC when the timer\n   expires, the AC SHOULD consider the WTP to no longer\
    \ be reachable.\n   The Echo Response carries no message elements.\n   When a\
    \ WTP receives an Echo Response it stops the\n   NeighborDeadInterval timer, and\
    \ starts the Heartbeat timer to\n   EchoInterval.\n   If the NeighborDeadInterval\
    \ timer expires prior to receiving an Echo\n   Response, the WTP enters the Idle\
    \ state.\n"
- title: 6.7.  Key Update Request
  contents:
  - "6.7.  Key Update Request\n   The Key Update Request is used by the WTP to initiate\
    \ the rekeying\n   phase.  This message is sent by a WTP when in the Run state\
    \ and MUST\n   include a new unique Session Identifier.  This message MUST also\n\
    \   include a unique nonce in the XNonce message element, which is used\n   to\
    \ protect against replay attacks (see Section 10).\n   The following subsections\
    \ define the message elements that MUST be\n   included in this LWAPP operation.\n"
- title: 6.7.1.  Session ID
  contents:
  - "6.7.1.  Session ID\n   The Session ID message element is defined in Section 6.1.7.\n"
- title: 6.7.2.  XNonce
  contents:
  - "6.7.2.  XNonce\n   The XNonce message element is defined in Section 6.1.9.\n"
- title: 6.8.  Key Update Response
  contents:
  - "6.8.  Key Update Response\n   The Key Update Response is sent by the AC in response\
    \ to the request\n   message, and includes an encrypted ANonce, which is used\
    \ to derive\n   new session keys.  This message MUST include a Session Identifier\n\
    \   message element, whose value MUST be identical to the one found in\n   the\
    \ Key Update Request.\n   The AC MUST include a PSK-MIC message element, which\
    \ provides message\n   integrity over the whole message.\n   The following subsections\
    \ define the message elements that MUST be\n   included in this LWAPP operation.\n"
- title: 6.8.1.  Session ID
  contents:
  - "6.8.1.  Session ID\n   The Session ID message element is defined in Section 6.1.7.\n"
- title: 6.8.2.  ANonce
  contents:
  - "6.8.2.  ANonce\n   The ANonce message element is defined in Section 6.2.8.\n"
- title: 6.8.3.  PSK-MIC
  contents:
  - "6.8.3.  PSK-MIC\n   The PSK-MIC message element is defined in Section 6.2.9.\n"
- title: 6.9.  Key Update ACK
  contents:
  - "6.9.  Key Update ACK\n   The Key Update ACK is sent by the WTP and includes an\
    \ encrypted\n   version of the WTP's nonce, which is used in the key derivation\n\
    \   process.  The session keys derived are then used as new LWAPP control\n  \
    \ message encryption keys (see Section 10).\n   The WTP MUST include a PSK-MIC\
    \ message element, which provides\n   message integrity over the whole message.\n\
    \   The following subsections define the message elements that MUST be\n   included\
    \ in this LWAPP operation.\n"
- title: 6.9.1.  WNonce
  contents:
  - "6.9.1.  WNonce\n   The WNonce message element is defined in Section 6.3.2.\n"
- title: 6.9.2.  PSK-MIC
  contents:
  - "6.9.2.  PSK-MIC\n   The PSK-MIC message element is defined in Section 6.2.9.\n"
- title: 6.10.  Key Update Confirm
  contents:
  - "6.10.  Key Update Confirm\n   The Key Update Confirm closes the rekeying loop,\
    \ and allows the WTP\n   to recognize that the AC has received and processed the\
    \ Key Update\n   messages.  At this point, the WTP updates its session key in\
    \ its\n   crypto engine, and the associated Initialization Vector, ensuring\n\
    \   that all future LWAPP control frames are encrypted with the newly\n   derived\
    \ encryption key.\n   The WTP MUST include a PSK-MIC message element, which provides\n\
    \   message integrity over the whole message.\n   The following subsections define\
    \ the message elements that MUST be\n   included in this LWAPP operation.\n"
- title: 6.10.1.  PSK-MIC
  contents:
  - "6.10.1.  PSK-MIC\n   The PSK-MIC message element is defined in Section 6.2.9.\n"
- title: 6.11.  Key Update Trigger
  contents:
  - "6.11.  Key Update Trigger\n   The Key Update Trigger is used by the AC to request\
    \ that a Key Update\n   Request be initiated by the WTP.\n   Key Update Triggers\
    \ are sent by an AC in the Run state to inform the\n   WTP to initiate a Key Update\
    \ Request message.\n   When a WTP receives a Key Update Trigger, it generates\
    \ a Key Update\n   Request.\n   The following subsections define the message elements\
    \ that MUST be\n   included in this LWAPP operation.\n"
- title: 6.11.1.  Session ID
  contents:
  - "6.11.1.  Session ID\n   The Session ID message element is defined in Section\
    \ 6.1.7.\n"
- title: 7.  WTP Configuration Management
  contents:
  - "7.  WTP Configuration Management\n   The Wireless Termination Point Configuration\
    \ messages are used to\n   exchange configuration between the AC and the WTP.\n"
- title: 7.1.  Configuration Consistency
  contents:
  - "7.1.  Configuration Consistency\n   The LWAPP protocol provides flexibility in\
    \ how WTP configuration is\n   managed.  To put it simply, a WTP has one of two\
    \ options:\n   1. The WTP retains no configuration and simply abides by the\n\
    \      configuration provided by the AC.\n   2. The WTP retains the configuration\
    \ of parameters provided by the AC\n      that are non-default values.\n   If\
    \ the WTP opts to save configuration locally, the LWAPP protocol\n   state machine\
    \ defines the \"Configure\" state, which is used during the\n   initial binding\
    \ WTP-AC phase, which allows for configuration\n   exchange.  During this period,\
    \ the WTP sends its current\n   configuration overrides to the AC via the Configure\
    \ Request message.\n   A configuration override is a parameter that is non-default.\
    \  One\n   example is that in the LWAPP protocol, the default antenna\n   configuration\
    \ is an internal-omni antenna.  However, a WTP that\n   either has no internal\
    \ antennas, or has been explicitely configured\n   by the AC to use external antennas\
    \ would send its antenna\n   configuration during the configure phase, allowing\
    \ the AC to become\n   aware of the WTP's current configuration.\n   Once the\
    \ WTP has provided its configuration to the AC, the AC sends\n   down its own\
    \ configuration.  This allows the WTP to inherit the\n   configuration and policies\
    \ on the AC.\n   An LWAPP AC maintains a copy of each active WTP's configuration.\n\
    \   There is no need for versioning or other means to identify\n   configuration\
    \ changes.  If a WTP becomes inactive, the AC MAY delete\n   the configuration\
    \ associated with it.  If a WTP were to fail, and\n   connect to a new AC, it\
    \ would provide its overridden configuration\n   parameters, allowing the new\
    \ AC to be aware of the WTP's\n   configuration.\n   As a consequence, this model\
    \ allows for resiliency, whereby in light\n   of an AC failure, another AC could\
    \ provide service to the WTP.  In\n   this scenario, the new AC would be automatically\
    \ updated on any\n   possible WTP configuration changes -- eliminating the need\
    \ for Inter-\n   AC communication or the need for all ACs to be aware of the\n\
    \   configuration of all WTPs in the network.\n   Once the LWAPP protocol enters\
    \ the Run state, the WTPs begin to\n   provide service.  However, it is quite\
    \ common for administrators to\n   require that configuration changes be made\
    \ while the network is\n   operational.  Therefore, the Configuration Update Request\
    \ is sent by\n   the AC to the WTP in order to make these changes at run-time.\n"
- title: 7.2.  Configure Request
  contents:
  - "7.2.  Configure Request\n   The Configure Request message is sent by a WTP to\
    \ send its current\n   configuration to its AC.\n   Configure Requests are sent\
    \ by a WTP after receiving a Join Response,\n   while in the Configure state.\n\
    \   The Configure Request carries binding-specific message elements.\n   Refer\
    \ to the appropriate binding for the definition of this\n   structure.\n   When\
    \ an AC receives a Configure Request, it will act upon the content\n   of the\
    \ packet and respond to the WTP with a Configure Response.\n   The Configure Request\
    \ includes multiple Administrative State message\n   elements.  There is one such\
    \ message element for the WTP, and then\n   one per radio in the WTP.\n   The\
    \ following subsections define the message elements that MUST be\n   included\
    \ in this LWAPP operation.\n"
- title: 7.2.1.  Administrative State
  contents:
  - "7.2.1.  Administrative State\n   The Administrative Event message element is\
    \ used to communicate the\n   state of a particular radio.  The value contains\
    \ the following\n   fields.\n       0                   1\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |    Radio\
    \ ID   |  Admin State  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:  \
    \ 27 for Administrative State\n   Length:   2\n   Radio ID:   An 8-bit value representing\
    \ the radio to configure.  The\n      Radio ID field may also include the value\
    \ of 0xff, which is used\n      to identify the WTP itself.  Therefore, if an\
    \ AC wishes to change\n      the administrative state of a WTP, it would include\
    \ 0xff in the\n      Radio ID field.\n   Admin State:   An 8-bit value representing\
    \ the administrative state\n      of the radio.  The following values are supported:\n\
    \      1 -  Enabled\n      2 -  Disabled\n"
- title: 7.2.2.  AC Name
  contents:
  - "7.2.2.  AC Name\n   The AC Name message element is defined in Section 5.2.3.\n"
- title: 7.2.3.  AC Name with Index
  contents:
  - "7.2.3.  AC Name with Index\n   The AC Name with Index message element is sent\
    \ by the AC to the WTP\n   to configure preferred ACs.  The number of instances\
    \ where this\n   message element would be present is equal to the number of ACs\n\
    \   configured on the WTP.\n       0                   1\n       0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |     Index\
    \     |   AC Name...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:   90 for\
    \ AC Name with Index\n   Length:   5\n   Index:   The index of the preferred server\
    \ (e.g., 1=primary,\n      2=secondary).\n   AC Name:   A variable-length ASCII\
    \ string containing the AC's name.\n"
- title: 7.2.4.  WTP Board Data
  contents:
  - "7.2.4.  WTP Board Data\n   The WTP Board Data message element is sent by the\
    \ WTP to the AC and\n   contains information about the hardware present.\n   \
    \    0                   1                   2                   3\n       0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |            Card ID            |         Card Revision         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          WTP Model                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          WTP Model                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                      WTP Serial Number ...                    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           Reserved                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                     Ethernet MAC Address                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      Ethernet MAC Address     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   50 for WTP Board Data\n   Length:   26\n   Card ID:   A hardware identifier.\n\
    \   Card Revision:   4-byte Revision of the card.\n   WTP Model:   8-byte WTP\
    \ Model Number.\n   WTP Serial Number:   24-byte WTP Serial Number.\n   Reserved:\
    \   A 4-byte reserved field that MUST be set to zero (0).\n   Ethernet MAC Address:\
    \   MAC address of the WTP's Ethernet interface.\n"
- title: 7.2.5.  Statistics Timer
  contents:
  - "7.2.5.  Statistics Timer\n   The Statistics Timer message element value is used\
    \ by the AC to\n   inform the WTP of the frequency that it expects to receive\
    \ updated\n   statistics.\n       0                   1\n       0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |        Statistics\
    \ Timer       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:   37 for Statistics\
    \ Timer\n   Length:   2\n   Statistics Timer:   A 16-bit unsigned integer indicating\
    \ the time, in\n      seconds.\n"
- title: 7.2.6.  WTP Static IP Address Information
  contents:
  - "7.2.6.  WTP Static IP Address Information\n   The WTP Static IP Address Information\
    \ message element is used by an\n   AC to configure or clear a previously configured\
    \ static IP address on\n   a WTP.\n       0                   1              \
    \     2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          IP Address                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                            Netmask                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                            Gateway                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    Static     |\n      +-+-+-+-+-+-+-+-+\n   Type:   82 for WTP Static IP Address\
    \ Information\n   Length:   13\n   IP Address:   The IP address to assign to the\
    \ WTP.\n   Netmask:   The IP Netmask.\n   Gateway:   The IP address of the gateway.\n\
    \   Netmask:   The IP Netmask.\n   Static:   An 8-bit Boolean stating whether\
    \ or not the WTP should use\n      a static IP address.  A value of zero disables\
    \ the static IP\n      address, while a value of one enables it.\n"
- title: 7.2.7.  WTP Reboot Statistics
  contents:
  - "7.2.7.  WTP Reboot Statistics\n   The WTP Reboot Statistics message element is\
    \ sent by the WTP to the\n   AC to communicate information about reasons why reboots\
    \ have\n   occurred.\n       0                   1                   2       \
    \            3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          Crash Count          |     LWAPP Initiated Count     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      Link Failure Count       | Failure Type  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   67 for WTP Reboot Statistics\n   Length:   7\n   Crash Count:   The\
    \ number of reboots that have occurred due to a WTP\n      crash.\n   LWAPP Initiated\
    \ Count:   The number of reboots that have occurred at\n      the request of some\
    \ LWAPP message, such as a change in\n      configuration that required a reboot\
    \ or an explicit LWAPP reset\n      request.\n   Link Failure Count:   The number\
    \ of times that an LWAPP connection\n      with an AC has failed.\n   Failure\
    \ Type:   The last WTP failure.  The following values are\n      supported:\n\
    \      0 -  Link Failure\n      1 -  LWAPP Initiated\n      2 -  WTP Crash\n"
- title: 7.3.  Configure Response
  contents:
  - "7.3.  Configure Response\n   The Configure Response message is sent by an AC\
    \ and provides an\n   opportunity for the AC to override a WTP's requested configuration.\n\
    \   Configure Responses are sent by an AC after receiving a Configure\n   Request.\n\
    \   The Configure Response carries binding-specific message elements.\n   Refer\
    \ to the appropriate binding for the definition of this\n   structure.\n   When\
    \ a WTP receives a Configure Response, it acts upon the content of\n   the packet,\
    \ as appropriate.  If the Configure Response message\n   includes a Change State\
    \ Event message element that causes a change in\n   the operational state of one\
    \ of the Radios, the WTP will transmit a\n   Change State Event to the AC as an\
    \ acknowledgement of the change in\n   state.\n   The following subsections define\
    \ the message elements that MUST be\n   included in this LWAPP operation.\n"
- title: 7.3.1.  Decryption Error Report Period
  contents:
  - "7.3.1.  Decryption Error Report Period\n   The Decryption Error Report Period\
    \ message element value is used by\n   the AC to inform the WTP of how frequently\
    \ it should send decryption\n   error report messages.\n       0             \
    \      1                   2\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   Radio\
    \ ID    |        Report Interval        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   38 for Decryption Error Report Period\n   Length:   3\n   Radio ID:\
    \   The Radio Identifier: typically refers to some interface\n      index on the\
    \ WTP.\n   Report Interval:   A 16-bit, unsigned integer indicating the time,\
    \ in\n      seconds.\n"
- title: 7.3.2.  Change State Event
  contents:
  - "7.3.2.  Change State Event\n   The WTP Radio Information message element is used\
    \ to communicate the\n   operational state of a radio.  The value contains two\
    \ fields, as\n   shown.\n       0                   1\n       0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \     |   Radio ID    |     State     |     Cause     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   26 for Change State Event\n   Length:   3\n   Radio ID:   The Radio\
    \ Identifier: typically refers to some interface\n      index on the WTP.\n  \
    \ State:   An 8-bit Boolean value representing the state of the radio.\n     \
    \ A value of one disables the radio, while a value of two enables\n      it.\n\
    \   Cause:   In the event of a radio being inoperable, the Cause field\n     \
    \ would contain the reason the radio is out of service.  The\n      following\
    \ values are supported:\n      0 -  Normal\n      1 -  Radio Failure\n      2\
    \ -  Software Failure\n"
- title: 7.3.3.  LWAPP Timers
  contents:
  - "7.3.3.  LWAPP Timers\n   The LWAPP Timers message element is used by an AC to\
    \ configure LWAPP\n   timers on a WTP.\n       0                   1\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |   Discovery   | Echo Request  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   68 for LWAPP Timers\n   Length:   2\n   Discovery:   The number of\
    \ seconds between LWAPP Discovery packets\n      when the WTP is in the discovery\
    \ mode.\n   Echo Request:   The number of seconds between WTP Echo Request LWAPP\n\
    \      messages.\n"
- title: 7.3.4.  AC IPv4 List
  contents:
  - "7.3.4.  AC IPv4 List\n   The AC List message element is defined in Section 6.2.6.\n"
- title: 7.3.5.  AC IPv6 List
  contents:
  - "7.3.5.  AC IPv6 List\n   The AC List message element is defined in Section 6.2.7.\n"
- title: 7.3.6.  WTP Fallback
  contents:
  - "7.3.6.  WTP Fallback\n   The WTP Fallback message element is sent by the AC to\
    \ the WTP to\n   enable or disable automatic LWAPP fallback in the event that\
    \ a WTP\n   detects its preferred AC, and is not currently connected to it.\n\
    \       0\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n      |     Mode \
    \     |\n      +-+-+-+-+-+-+-+-+\n   Type:   91 for WTP Fallback\n   Length: \
    \  1\n   Mode:   The 8-bit Boolean value indicates the status of automatic\n \
    \     LWAPP fallback on the WTP.  A value of zero disables the fallback\n    \
    \  feature, while a value of one enables it.  When enabled, if the\n      WTP\
    \ detects that its primary AC is available, and it is not\n      connected to\
    \ it, it SHOULD automatically disconnect from its\n      current AC and reconnect\
    \ to its primary.  If disabled, the WTP\n      will only reconnect to its primary\
    \ through manual intervention\n      (e.g., through the Reset Request command).\n"
- title: 7.3.7.  Idle Timeout
  contents:
  - "7.3.7.  Idle Timeout\n   The Idle Timeout message element is sent by the AC to\
    \ the WTP to\n   provide it with the idle timeout that it should enforce on its\
    \ active\n   mobile station entries.\n       0                   1           \
    \        2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                            Timeout                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   97 for Idle Timeout\n   Length:   4\n   Timeout:   The current idle timeout\
    \ to be enforced by the WTP.\n"
- title: 7.4.  Configuration Update Request
  contents:
  - "7.4.  Configuration Update Request\n   Configure Update Requests are sent by\
    \ the AC to provision the WTP\n   while in the Run state.  This is used to modify\
    \ the configuration of\n   the WTP while it is operational.\n   When an AC receives\
    \ a Configuration Update Request it will respond\n   with a Configuration Update\
    \ Response, with the appropriate Result\n   Code.\n   The following subsections\
    \ define the message elements introduced by\n   this LWAPP operation.\n"
- title: 7.4.1.  WTP Name
  contents:
  - "7.4.1.  WTP Name\n   The WTP Name message element is defined in Section 6.1.3.\n"
- title: 7.4.2.  Change State Event
  contents:
  - "7.4.2.  Change State Event\n   The Change State Event message element is defined\
    \ in Section 7.3.2.\n"
- title: 7.4.3.  Administrative State
  contents:
  - "7.4.3.  Administrative State\n   The Administrative State message element is\
    \ defined in Section 7.2.1.\n"
- title: 7.4.4.  Statistics Timer
  contents:
  - "7.4.4.  Statistics Timer\n   The Statistics Timer message element is defined\
    \ in Section 7.2.5.\n"
- title: 7.4.5.  Location Data
  contents:
  - "7.4.5.  Location Data\n   The Location Data message element is defined in Section\
    \ 6.1.4.\n"
- title: 7.4.6.  Decryption Error Report Period
  contents:
  - "7.4.6.  Decryption Error Report Period\n   The Decryption Error Report Period\
    \ message element is defined in\n   Section 7.3.1.\n"
- title: 7.4.7.  AC IPv4 List
  contents:
  - "7.4.7.  AC IPv4 List\n   The AC List message element is defined in Section 6.2.6.\n"
- title: 7.4.8.  AC IPv6 List
  contents:
  - "7.4.8.  AC IPv6 List\n   The AC List message element is defined in Section 6.2.7.\n"
- title: 7.4.9.  Add Blacklist Entry
  contents:
  - "7.4.9.  Add Blacklist Entry\n   The Add Blacklist Entry message element is used\
    \ by an AC to add a\n   blacklist entry on a WTP, ensuring that the WTP no longer\
    \ provides\n   any service to the MAC addresses provided in the message.  The\
    \ MAC\n   addresses provided in this message element are not expected to be\n\
    \   saved in non-volative memory on the WTP.\n       0                   1   \
    \                2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Num of Entries|                 MAC Address[]                 |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                 MAC Address[]                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   65 for Add Blacklist Entry\n   Length:   >= 7\n   Num of Entries:\
    \   The number of MAC addresses in the array.\n   MAC Address:   An array of MAC\
    \ addresses to add to the blacklist\n      entry.\n"
- title: 7.4.10.  Delete Blacklist Entry
  contents:
  - "7.4.10.  Delete Blacklist Entry\n   The Delete Blacklist Entry message element\
    \ is used by an AC to delete\n   a previously added blacklist entry on a WTP,\
    \ ensuring that the WTP\n   provides service to the MAC addresses provided in\
    \ the message.\n       0                   1                   2             \
    \      3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Num of Entries|                 MAC Address[]                 |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                 MAC Address[]                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   66 for Delete Blacklist Entry\n   Length:   >= 7\n   Num of Entries:\
    \   The number of MAC addresses in the array.\n   MAC Address:   An array of MAC\
    \ addresses to delete from the blacklist\n      entry.\n"
- title: 7.4.11.  Add Static Blacklist Entry
  contents:
  - "7.4.11.  Add Static Blacklist Entry\n   The Add Static Blacklist Entry message\
    \ element is used by an AC to\n   add a permanent Blacklist Entry on a WTP, ensuring\
    \ that the WTP no\n   longer provides any service to the MAC addresses provided\
    \ in the\n   message.  The MAC addresses provided in this message element are\n\
    \   expected to be saved in non-volative memory on the WTP.\n       0        \
    \           1                   2                   3\n       0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Num of Entries|                 MAC Address[]                 |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                 MAC Address[]                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   70 for Delete Blacklist Entry\n   Length:   >= 7\n   Num of Entries:\
    \   The number of MAC addresses in the array.\n   MAC Address:   An array of MAC\
    \ addresses to add to the permanent\n      blacklist entry.\n"
- title: 7.4.12.  Delete Static Blacklist Entry
  contents:
  - "7.4.12.  Delete Static Blacklist Entry\n   The Delete Static Blacklist Entry\
    \ message element is used by an AC to\n   delete a previously added static blacklist\
    \ entry on a WTP, ensuring\n   that the WTP provides service to the MAC addresses\
    \ provided in the\n   message.\n       0                   1                 \
    \  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Num of Entries|                 MAC Address[]                 |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                 MAC Address[]                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   71 for Delete Blacklist Entry\n   Length:   >= 7\n   Num of Entries:\
    \   The number of MAC addresses in the array.\n   MAC Address:   An array of MAC\
    \ addresses to delete from the static\n      blacklist entry.\n"
- title: 7.4.13.  LWAPP Timers
  contents:
  - "7.4.13.  LWAPP Timers\n   The LWAPP Timers message element is defined in Section\
    \ 7.3.3.\n"
- title: 7.4.14.  AC Name with Index
  contents:
  - "7.4.14.  AC Name with Index\n   The AC Name with Index message element is defined\
    \ in Section 7.2.3.\n"
- title: 7.4.15.  WTP Fallback
  contents:
  - "7.4.15.  WTP Fallback\n   The WTP Fallback message element is defined in Section\
    \ 7.3.6.\n"
- title: 7.4.16.  Idle Timeout
  contents:
  - "7.4.16.  Idle Timeout\n   The Idle Timeout message element is defined in Section\
    \ 7.3.7.\n"
- title: 7.5.  Configuration Update Response
  contents:
  - "7.5.  Configuration Update Response\n   The Configuration Update Response is\
    \ the acknowledgement message for\n   the Configuration Update Request.\n   Configuration\
    \ Update Responses are sent by a WTP after receiving a\n   Configuration Update\
    \ Request.\n   When an AC receives a Configure Update Response, the result code\n\
    \   indicates if the WTP successfully accepted the configuration.\n   The following\
    \ subsections define the message elements that must be\n   present in this LWAPP\
    \ operation.\n"
- title: 7.5.1.  Result Code
  contents:
  - "7.5.1.  Result Code\n   The Result Code message element is defined in Section\
    \ 6.2.1.\n"
- title: 7.6.  Change State Event Request
  contents:
  - "7.6.  Change State Event Request\n   The Change State Event is used by the WTP\
    \ to inform the AC of a\n   change in the operational state.\n   The Change State\
    \ Event message is sent by the WTP when it receives a\n   Configuration Response\
    \ that includes a Change State Event message\n   element.  It is also sent in\
    \ the event that the WTP detects an\n   operational failure with a radio.  The\
    \ Change State Event may be sent\n   in either the Configure or Run state (see\
    \ Figure 2).\n   When an AC receives a Change State Event it will respond with\
    \ a\n   Change State Event Response and make any necessary modifications to\n\
    \   internal WTP data structures.\n   The following subsections define the message\
    \ elements that must be\n   present in this LWAPP operation.\n"
- title: 7.6.1.  Change State Event
  contents:
  - "7.6.1.  Change State Event\n   The Change State Event message element is defined\
    \ in Section 7.3.2.\n"
- title: 7.7.  Change State Event Response
  contents:
  - "7.7.  Change State Event Response\n   The Change State Event Response acknowledges\
    \ the Change State Event.\n   Change State Event Responses are sent by a WTP after\
    \ receiving a\n   Change State Event.\n   The Change State Event Response carries\
    \ no message elements.  Its\n   purpose is to acknowledge the receipt of the Change\
    \ State Event.\n   The WTP does not need to perform any special processing of\
    \ the Change\n   State Event Response message.\n"
- title: 7.8.  Clear Config Indication
  contents:
  - "7.8.  Clear Config Indication\n   The Clear Config Indication is used to reset\
    \ a WTP's configuration.\n   The Clear Config Indication is sent by an AC to request\
    \ that a WTP\n   reset its configuration to manufacturing defaults.  The Clear\
    \ Config\n   Indication message is sent while in the Run LWAPP state.\n   The\
    \ Reset Request carries no message elements.\n   When a WTP receives a Clear Config\
    \ Indication, it will reset its\n   configuration to manufacturing defaults.\n"
- title: 8.  Device Management Operations
  contents:
  - "8.  Device Management Operations\n   This section defines LWAPP operations responsible\
    \ for debugging,\n   gathering statistics, logging, and firmware management.\n"
- title: 8.1.  Image Data Request
  contents:
  - "8.1.  Image Data Request\n   The Image Data Request is used to update firmware\
    \ on the WTP.  This\n   message and its companion response are used by the AC\
    \ to ensure that\n   the image being run on each WTP is appropriate.\n   Image\
    \ Data Requests are exchanged between the WTP and the AC to\n   download a new\
    \ program image to a WTP.\n   When a WTP or AC receives an Image Data Request,\
    \ it will respond with\n   an Image Data Response.\n   The format of the Image\
    \ Data and Image Download message elements are\n   described in the following\
    \ subsections.\n"
- title: 8.1.1.  Image Download
  contents:
  - "8.1.1.  Image Download\n   The Image Download message element is sent by the\
    \ WTP to the AC and\n   contains the image filename.  The value is a variable-length\
    \ byte\n   string.  The string is NOT zero terminated.\n"
- title: 8.1.2.  Image Data
  contents:
  - "8.1.2.  Image Data\n   The Image Data message element is present when sent by\
    \ the AC and\n   contains the following fields.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Opcode    |           Checksum            |  Image Data   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Image Data ...                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   33 for Image Data\n   Length:   >= 5\n   Opcode:   An 8-bit value\
    \ representing the transfer opcode.  The\n      following values are supported:\n\
    \      3 -  Image Data is included.\n      5 -  An error occurred.  Transfer is\
    \ aborted.\n   Checksum:   A 16-bit value containing a checksum of the Image Data\n\
    \      that follows.\n   Image Data:   The Image Data field contains 1024 characters,\
    \ unless\n      the payload being sent is the last one (end of file).\n"
- title: 8.2.  Image Data Response
  contents:
  - "8.2.  Image Data Response\n   The Image Data Response acknowledges the Image\
    \ Data Request.\n   An Image Data Responses is sent in response to an Image Data\
    \ Request.\n   Its purpose is to acknowledge the receipt of the Image Data Request\n\
    \   packet.\n   The Image Data Response carries no message elements.\n   No action\
    \ is necessary on receipt.\n"
- title: 8.3.  Reset Request
  contents:
  - "8.3.  Reset Request\n   The Reset Request is used to cause a WTP to reboot.\n\
    \   Reset Requests are sent by an AC to cause a WTP to reinitialize its\n   operation.\n\
    \   The Reset Request carries no message elements.\n   When a WTP receives a Reset\
    \ Request it will respond with a Reset\n   Response and then reinitialize itself.\n"
- title: 8.4.  Reset Response
  contents:
  - "8.4.  Reset Response\n   The Reset Response acknowledges the Reset Request.\n\
    \   Reset Responses are sent by a WTP after receiving a Reset Request.\n   The\
    \ Reset Response carries no message elements.  Its purpose is to\n   acknowledge\
    \ the receipt of the Reset Request.\n   When an AC receives a Reset Response,\
    \ it is notified that the WTP\n   will now reinitialize its operation.\n"
- title: 8.5.  WTP Event Request
  contents:
  - "8.5.  WTP Event Request\n   The WTP Event Request is used by a WTP to send information\
    \ to its AC.\n   These types of events may be periodical, or some asynchronous\
    \ event\n   on the WTP.  For instance, a WTP collects statistics and uses the\
    \ WTP\n   Event Request to transmit this information to the AC.\n   When an AC\
    \ receives a WTP Event Request, it will respond with a WTP\n   Event Request.\n\
    \   The WTP Event Request message MUST contain one of the following\n   message\
    \ element described in the next subsections, or a message\n   element that is\
    \ defined for a specific technology.\n"
- title: 8.5.1.  Decryption Error Report
  contents:
  - "8.5.1.  Decryption Error Report\n   The Decryption Error Report message element\
    \ value is used by the WTP\n   to inform the AC of decryption errors that have\
    \ occurred since the\n   last report.\n       0                   1          \
    \         2\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Radio ID    |Num Of Entries |      Mobile MAC Address       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Mobile MAC Address[]                    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   39 for Decryption Error Report\n   Length:   >= 8\n   Radio ID:  \
    \ The Radio Identifier, typically refers to some interface\n      index on the\
    \ WTP.\n   Num Of Entries:   An 8-bit unsigned integer indicating the number of\n\
    \      mobile MAC addresses.\n   Mobile MAC Address:   An array of mobile station\
    \ MAC addresses that\n      have caused decryption errors.\n"
- title: 8.5.2.  Duplicate IPv4 Address
  contents:
  - "8.5.2.  Duplicate IPv4 Address\n   The Duplicate IPv4 Address message element\
    \ is used by a WTP to inform\n   an AC that it has detected another host using\
    \ the same IP address it\n   is currently using.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          IP Address                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          MAC Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          MAC Address          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   77 for Duplicate IPv4 Address\n   Length:   10\n   IP Address:   The\
    \ IP address currently used by the WTP.\n   MAC Address:   The MAC address of\
    \ the offending device.\n"
- title: 8.5.3.  Duplicate IPv6 Address
  contents:
  - "8.5.3.  Duplicate IPv6 Address\n   The Duplicate IPv6 Address message element\
    \ is used by a WTP to inform\n   an AC that it has detected another host using\
    \ the same IP address it\n   is currently using.\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          IP Address                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          IP Address                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          IP Address                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          IP Address                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          MAC Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          MAC Address          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  Type:   77 for Duplicate IPv6 Address\n   Length:   10\n   IP Address:   The\
    \ IP address currently used by the WTP.\n   MAC Address:   The MAC address of\
    \ the offending device.\n"
- title: 8.6.  WTP Event Response
  contents:
  - "8.6.  WTP Event Response\n   The WTP Event Response acknowledges the WTP Event\
    \ Request.\n   WTP Event Responses are sent by an AC after receiving a WTP Event\n\
    \   Request.\n   The WTP Event Response carries no message elements.\n"
- title: 8.7.  Data Transfer Request
  contents:
  - "8.7.  Data Transfer Request\n   The Data Transfer Request is used to upload debug\
    \ information from\n   the WTP to the AC.\n   Data Transfer Requests are sent\
    \ by the WTP to the AC when it\n   determines that it has important information\
    \ to send to the AC.  For\n   instance, if the WTP detects that its previous reboot\
    \ was caused by a\n   system crash, it would want to send the crash file to the\
    \ AC.  The\n   remote debugger function in the WTP also uses the Data Transfer\n\
    \   Request in order to send console output to the AC for debugging\n   purposes.\n\
    \   When an AC receives a Data Transfer Request, it will respond with a\n   Data\
    \ Transfer Response.  The AC may log the information received as\n   it sees fit.\n\
    \   The Data Transfer Request message MUST contain ONE of the following\n   message\
    \ element described in the next subsection.\n"
- title: 8.7.1.  Data Transfer Mode
  contents:
  - "8.7.1.  Data Transfer Mode\n   The Data Transfer Mode message element is used\
    \ by the AC to request\n   information from the WTP for debugging purposes.\n\
    \       0\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n      |   Data  Type\
    \   |\n      +-+-+-+-+-+-+-+-+\n   Type:   52 for Data Transfer Mode\n   Length:\
    \   1\n   Data Type:   An 8-bit value describing the type of information being\n\
    \      requested.  The following values are supported:\n      1 -  WTP Crash Data\n\
    \      2 -  WTP Memory Dump\n"
- title: 8.7.2.  Data Transfer Data
  contents:
  - "8.7.2.  Data Transfer Data\n   The Data Transfer Data message element is used\
    \ by the WTP to provide\n   information to the AC for debugging purposes.\n  \
    \     0                   1                   2                   3\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Data Type   |  Data Length  |    Data ....\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   53 for Data Transfer Data\n   Length:   >= 3\n   Data Type:   An 8-bit\
    \ value describing the type of information being\n      sent.  The following values\
    \ are supported:\n      1 -  WTP Crash Data\n      2 -  WTP Memory Dump\n   Data\
    \ Length:   Length of data field.\n   Data:   Debug information.\n"
- title: 8.8.  Data Transfer Response
  contents:
  - "8.8.  Data Transfer Response\n   The Data Transfer Response acknowledges the\
    \ Data Transfer Request.\n   A Data Transfer Response is sent in response to a\
    \ Data Transfer\n   Request.  Its purpose is to acknowledge the receipt of the\
    \ Data\n   Transfer Request packet.\n   The Data Transfer Response carries no\
    \ message elements.\n   Upon receipt of a Data Transfer Response, the WTP transmits\
    \ more\n   information, if any is available.\n"
- title: 9.  Mobile Session Management
  contents:
  - "9.  Mobile Session Management\n   Messages in this section are used by the AC\
    \ to create, modify, or\n   delete mobile station session state on the WTPs.\n"
- title: 9.1.  Mobile Config Request
  contents:
  - "9.1.  Mobile Config Request\n   The Mobile Config Request message is used to\
    \ create, modify, or\n   delete mobile session state on a WTP.  The message is\
    \ sent by the AC\n   to the WTP, and may contain one or more message elements.\
    \  The\n   message elements for this LWAPP control message include information\n\
    \   that is generally highly technology-specific.  Therefore, please\n   refer\
    \ to the appropriate binding section or document for the\n   definitions of the\
    \ messages elements that may be used in this control\n   message.\n   This section\
    \ defines the format of the Delete Mobile message element,\n   since it does not\
    \ contain any technology-specific information.\n"
- title: 9.1.1.  Delete Mobile
  contents:
  - "9.1.1.  Delete Mobile\n   The Delete Mobile message element is used by the AC\
    \ to inform a WTP\n   that it should no longer provide service to a particular\
    \ mobile\n   station.  The WTP must terminate service immediately upon receiving\n\
    \   this message element.\n   The transmission of a Delete Mobile message element\
    \ could occur for\n   various reasons, including administrative reasons, as a\
    \ result of the\n   fact that the mobile has roamed to another WTP, etc.\n   Once\
    \ access has been terminated for a given station, any future\n   packets received\
    \ from the mobile must result in a deauthenticate\n   message, as specified in\
    \ [6].\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    Radio ID   |                  MAC Address                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                  MAC Address                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   30 for Delete Mobile\n   Length:   7\n   Radio ID:   An 8-bit value\
    \ representing the radio\n   MAC Address:   The mobile station's MAC address\n"
- title: 9.2.  Mobile Config Response
  contents:
  - "9.2.  Mobile Config Response\n   The Mobile Configuration Response is used to\
    \ acknowledge a previously\n   received Mobile Configuration Request, and includes\
    \ a Result Code\n   message element that indicates whether an error occurred on\
    \ the WTP.\n   This message requires no special processing and is only used to\n\
    \   acknowledge the Mobile Configuration Request.\n   The Data Transfer Request\
    \ message MUST contain the message elements\n   described in the next subsection.\n"
- title: 9.2.1.  Result Code
  contents:
  - "9.2.1.  Result Code\n   The Result Code message element is defined in Section\
    \ 6.2.1.\n"
- title: 10.  LWAPP Security
  contents:
  - "10.  LWAPP Security\n   Note: This version only defines a certificate and a shared-secret-\n\
    \   based mechanism to secure control LWAPP traffic exchanged between the\n  \
    \ WTP and the AC.\n"
- title: 10.1.  Securing WTP-AC Communications
  contents:
  - "10.1.  Securing WTP-AC Communications\n   While it is generally straightforward\
    \ to produce network\n   installations in which the communications medium between\
    \ the WTP and\n   AC is not accessible to the casual user (e.g., these LAN segments\
    \ are\n   isolated, and no RJ45 or other access ports exist between the WTP and\n\
    \   the AC), this will not always be the case.  Furthermore, a determined\n  \
    \ attacker may resort to various, more sophisticated monitoring and/or\n   access\
    \ techniques, thereby compromising the integrity of this\n   connection.\n   In\
    \ general, a certain level of threat on the local (wired) LAN is\n   expected\
    \ and accepted in most computing environments.  That is, it is\n   expected that\
    \ in order to provide users with an acceptable level of\n   service and maintain\
    \ reasonable productivity levels, a certain amount\n   of risk must be tolerated.\
    \  It is generally believed that a certain\n   perimeter is maintained around\
    \ such LANs, that an attacker must have\n   access to the building(s) in which\
    \ such LANs exist, and that they\n   must be able to \"plug in\" to the LAN in\
    \ order to access the network.\n   With these things in mind, we can begin to\
    \ assess the general\n   security requirements for AC-WTP communications.  While\
    \ an in-depth\n   security analysis of threats and risks to these communications\
    \ is\n   beyond the scope of this document, some discussion of the motivation\n\
    \   for various security-related design choices is useful.  The\n   assumptions\
    \ driving the security design thus far include the\n   following:\n   o  WTP-AC\
    \ communications take place over a wired connection that may\n      be accessible\
    \ to a sophisticated attacker.\n   o  access to this connection is not trivial\
    \ for an outsider (i.e.,\n      someone who does not \"belong\" in the building)\
    \ to access.\n   o  if authentication and/or privacy of end-to-end traffic for\
    \ which\n      the WTP and AC are intermediaries is required, this may be\n  \
    \    provided via IPsec [14].\n   o  privacy and authentication for at least some\
    \ WTP-AC control\n      traffic is required (e.g., Wired Equivalent Privacy (WEP)\
    \ keys for\n      user sessions, passed from the AC to the WTP).\n   o  the AC\
    \ can be trusted to generate strong cryptographic keys.\n   The AC-WTP traffic\
    \ can be considered to consist of two types: data\n   traffic (e.g., to or from\
    \ an end user), and control traffic, which is\n   strictly between the AC and\
    \ WTP.  Since data traffic may be secured\n   using IPsec (or some other end-to-end\
    \ security mechanism), we confine\n   our solution to control traffic.  The resulting\
    \ security consists of\n   two components: an authenticated key exchange and control\
    \ traffic\n   security encapsulation.  The security encapsulation is accomplished\n\
    \   using AES-CCM, described in [3].  This encapsulation provides for\n   strong\
    \ AES-based authentication and encryption [2].  The exchange of\n   cryptographic\
    \ keys used for CCM is described below.\n"
- title: 10.2.  LWAPP Frame Encryption
  contents:
  - "10.2.  LWAPP Frame Encryption\n   While the LWAPP protocol uses AES-CCM to encrypt\
    \ control traffic, it\n   is important to note that not all control frames are\
    \ encrypted.  The\n   LWAPP discovery and join phase are not encrypted.  The Discovery\n\
    \   messages are sent in the clear since there does not exist a security\n   association\
    \ between the WTP and the AC during the discovery phase.\n   The join phase is\
    \ an authenticated exchange used to negotiate\n   symmetric session keys (see\
    \ Section 10.3).\n   Once the join phase has been successfully completed, the\
    \ LWAPP state\n   machine Figure 2 will move to the Configure state, at which\
    \ time all\n   LWAPP control frames are encrypted using AES-CCM.\n   Encryption\
    \ of a control message begins at the Message Element field:\n   meaning the Msg\
    \ Type, Seq Num, Msg Element Length, and Session ID\n   fields are left intact\
    \ (see Section 4.2.1).\n   The AES-CCM 12-byte authentication data is appended\
    \ to the end of the\n   message.  The authentication data is calculated from the\
    \ start of the\n   LWAPP packet and includes the complete LWAPP control header\
    \ (see\n   Section 4.2.1).\n   The AES-CCM block cipher protocol requires an initialization\
    \ vector.\n   The LWAPP protocol requires that the WTP and the AC maintain two\n\
    \   separate IVs, one for transmission and one for reception.  The IV\n   derived\
    \ during the key exchange phase by both the WTP and the AC is\n   used as the\
    \ base for all encrypted packets with a new key.\n"
- title: 10.3.  Authenticated Key Exchange
  contents:
  - "10.3.  Authenticated Key Exchange\n   This section describes the key management\
    \ component of the LWAPP\n   protocol.  There are two modes supported by LWAPP:\
    \ certificate and\n   pre-shared key.\n"
- title: 10.3.1.  Terminology
  contents:
  - "10.3.1.  Terminology\n   This section details the key management protocol that\
    \ makes use of\n   pre-shared secrets.\n   The following notations are used throughout\
    \ this section:\n   o  PSK - the pre-shared key shared between the WTP and the\
    \ AC.\n   o  Kpriv - the private key of a public-private key pair.\n   o  Kpub\
    \ - the public key of the pair.\n   o  SessionID - a randomly generated LWAPP\
    \ session identifier,\n      provided by the WTP in the Join Request.\n   o  E-x{Kpub,\
    \ M} - RSA encryption of M using X's public key.\n   o  D-x{Kpriv, C} - RSA decryption\
    \ of C using X's private key.\n   o  AES-CMAC(key, packet) - A message integrity\
    \ check, using AES-CMAC\n      and key, of the complete LWAPP packet, with the\
    \ Sequence Number\n      field and the payload of the PSK-MIC message element\
    \ set to zero.\n   o  AES-E(key, plaintext) - Plaintext is encrypted with key,\
    \ using\n      AES.\n   o  AES-D(key, ciphertext) - ciphertext is decrypted with\
    \ key, using\n      AES.\n   o  Certificate-AC - AC's Certificate.\n   o  Certificate-WTP\
    \ - WTP's Certificate.\n   o  WTP-MAC - The WTP's MAC address.\n   o  AC-MAC -\
    \ The AC's MAC address.\n   o  RK0 - the root key, which is created through a\
    \ Key Derivation\n      Function (KDF) function.\n   o  RK0E - the root Encryption\
    \ key, derived from RK0.\n   o  RK0M - the root MIC key, derived from RK0.\n \
    \  o  SK1 - the session key.\n   o  SK1C - the session confirmation key, derived\
    \ from SK.\n   o  SK1E - the session encryption key, derived from SK.\n   o  SK1W\
    \ - the session keywrap key, derived from SK (see RFC 3394\n      [9]).\n   o\
    \  WNonce - The WTP's randomly generated nonce.\n   o  ANonce - The AC's randomly\
    \ generated nonce.\n   o  EWNonce - The payload of the WNonce message element,\
    \ which\n      includes the WNonce.\n   o  EANonce - The payload of the ANonce\
    \ message element, which\n      includes the ANonce.\n"
- title: 10.3.2.  Initial Key Generation
  contents:
  - "10.3.2.  Initial Key Generation\n   The AC and WTP accomplish mutual authentication\
    \ and a cryptographic\n   key exchange in a dual round trip using the Join Request,\
    \ Join\n   Response, Join ACK, and Join Confirm (see Section 6.1).\n   The following\
    \ text describes the exchange between the WTP and the AC\n   that creates a session\
    \ key, which is used to secure LWAPP control\n   messages.\n   o  The WTP creates\
    \ a Join Request using the following process:\n      o  If certificate-based security\
    \ is used, the WTP adds the\n         Certificate message element (see Section\
    \ 6.1.6) with its\n         contents set to Certificate-WTP.\n      o  The WTP\
    \ adds the Session ID message element (see Section 6.1.7)\n         with the contents\
    \ set to a randomly generated session\n         identifier (see RFC 1750 [4]).\
    \  The WTP MUST save the Session\n         ID in order to validate the Join Response.\n\
    \      o  The WTP creates a random nonce, included in the XNonce message\n   \
    \      element (see Section 6.1.9).  The WTP MUST save the XNonce to\n       \
    \  validate the Join Response.\n      o  The WTP transmits the Join Request to\
    \ the AC.\n   o  Upon receiving the Join Request, the AC uses the following\n\
    \      process:\n      o  The AC creates the Join Response, and ensures that the\
    \ Session\n         ID message element matches the value found in the Join Request.\n\
    \      o  If certificate-based security is used, the AC:\n         o  adds the\
    \ Certificate-AC to the Certificate message element.\n         o  creates a random\
    \ 'AC Nonce' and encrypts it using the\n            following algorithm E-wtp(Kpub,\
    \ XNonce XOR 'AC Nonce').  The\n            encrypted contents are added to the\
    \ ANonce's message element\n            payload.\n      o  If a pre-shared-key-based\
    \ security is used, the AC:\n         o  creates RK0 through the following algorithm:\
    \ RK0 = KDF-\n            256{PSK, \"LWAPP PSK Top K0\" || Session ID || WTP-MAC\
    \ || AC-\n            MAC}, where WTP-MAC is the WTP's MAC address in the form\n\
    \            \"xx:xx:xx:xx:xx:xx\".  Similarly, the AC-MAC is an ASCII\n     \
    \       encoding of the AC's MAC address, of the form \"xx:xx:xx:xx:\n       \
    \     xx:xx\".  The resulting K0 is split into the following:\n            o \
    \ The first 16 octets are known as RK0E, and are used as an\n               encryption\
    \ key.\n            o  The second 16 octets are known as RK0M, and are used for\n\
    \               MIC'ing purposes.\n         o  The AC creates a random 'AC Nonce'\
    \ and encrypts it using the\n            following algorithm: AES-E(RK0E, XNonce\
    \ XOR 'AC Nonce').\n            The encrypted contents are added to the ANonce's\
    \ message\n            element payload.\n         o  The AC adds a MIC to the\
    \ contents of the Join Response using\n            AES-CMAC(RK0M, Join Response)\
    \ and adds the resulting hash to\n            the PSK-MIC (Section 6.2.9) message\
    \ element.\n   o  Upon receiving the Join Response, the WTP uses the following\n\
    \      process:\n      o  If a pre-shared key is used, the WTP authenticates the\
    \ Join\n         Response's PSK-MIC message element.  If authentication fails,\n\
    \         the packet is dropped.\n      o  The WTP decrypts the ANonce message\
    \ element and XOR's the value\n         with XNonce to retrieve the 'AC Nonce'.\
    \  The ANonce payload is\n         referred to as ciphertext below:\n        \
    \ o  If a pre-shared key is used, use AES-D(RK0E, ciphertext).\n            The\
    \ 'AC Nonce' is then recovered using XNonce XOR plaintext.\n         o  If certificates\
    \ are used, use d-wtp(Kpriv, ciphertext).  The\n            'AC Nonce' is then\
    \ recovered using XNonce XOR plaintext.\n      o  The WTP creates a random 'WTP\
    \ Nonce'.\n      o  The WTP uses the KDF function to create a 64-octet session\
    \ key\n         (SK).  The KDF function used is as follows: KDF-512{'WTP Nonce'\n\
    \         || 'AC Nonce', \"LWAPP Key Generation\", WTP-MAC || AC-MAC}.  The\n\
    \         KDF function is defined in [7].\n      o  SK is then broken down into\
    \ three separate session keys with\n         different purposes:\n         o \
    \ The first 16 octets are known as SK1C, and are used as a\n            confirmation\
    \ key.\n         o  The second 16 octets are known as SK1E, and are as the\n \
    \           encryption key.\n         o  The third 16 octets are known as SK1D,\
    \ and are used as the\n            keywrap key.\n         o  The fourth 16 octets\
    \ are known as IV, and are used as the\n            Initialization Vector during\
    \ encryption.\n      o  The WTP creates the Join ACK message.\n      o  If certificate-based\
    \ security is used, the AC:\n         o  encrypts the 'WTP Nonce' using the following\
    \ algorithm: E-\n            ac(Kpub, 'WTP Nonce').  The encrypted contents are\
    \ added to\n            the WNonce's message element payload.\n      o  If a pre-shared-key-based\
    \ security is used, the AC:\n         o  encrypts the 'WTP Nonce' using the following\
    \ algorithm:\n            AES-E(RK0E, 'WTP Nonce').  The encrypted contents are\
    \ added\n            to the WNonce's message element payload.\n      o  The WTP\
    \ adds a MIC to the contents of the Join ACK using\n         AES-CMAC(SK1M, Join\
    \ ACK) and adds the resulting hash to the\n         PSK-MIC (Section 6.2.9) message\
    \ element.\n      o  The WTP then transmits the Join ACK to the AC.\n   o  Upon\
    \ receiving the Join ACK, the AC uses the following process:\n      o  The AC\
    \ authenticates the Join ACK through the PSK-MIC message\n         element.  If\
    \ authentic, the AC decrypts the WNonce message\n         element to retrieve\
    \ the 'WTP Nonce'.  If the Join ACK cannot be\n         authenticated, the packet\
    \ is dropped.\n      o  The AC decrypts the WNonce message element to retrieve\
    \ the 'WTP\n         Nonce'.  The WNonce payload is referred to as ciphertext\
    \ below:\n         o  If a pre-shared key is used, use AES-D(RK0E, ciphertext).\n\
    \            The plaintext is then considered the 'WTP Nonce'.\n         o  If\
    \ certificates are used, use d-ac(Kpriv, ciphertext).  The\n            plaintext\
    \ is then considered the 'WTP Nonce'.\n      o  The AC then uses the KDF function\
    \ to create a 64-octet session\n         key (SK).  The KDF function used is as\
    \ follows: KDF-512{'WTP\n         Nonce' || 'AC Nonce', \"LWAPP Key Generation\"\
    , WTP-MAC ||\n         AC-MAC}.  The KDF function is defined in [7].  The SK is\
    \ split\n         into SK1C, SK1E, SK1D, and IV, as previously noted.\n      o\
    \  The AC creates the Join Confirm.\n      o  The AC adds a MIC to the contents\
    \ of the Join Confirm using\n         AES-CMAC(SK1M, Join Confirm) and adds the\
    \ resulting hash to the\n         MIC (Section 6.2.9) message element.\n     \
    \ o  The AC then transmits the Join Confirm to the WTP.\n   o  Upon receiving\
    \ the Join Confirm, the WTP uses the following\n      process:\n      o  The WTP\
    \ authenticates the Join Confirm through the PSK-MIC\n         message element.\
    \  If the Join Confirm cannot be authenticated,\n         the packet is dropped.\n\
    \   o  SK1E is now plumbed into the AC and WTP's crypto engine as the\n      AES-CCM\
    \ LWAPP control encryption session key.  Furthermore, the\n      random IV is\
    \ used as the base Initialization Vector.  From this\n      point on, all control\
    \ protocol payloads between the WTP and AC are\n      encrypted and authenticated\
    \ using the new session key.\n"
- title: 10.3.3.  Refreshing Cryptographic Keys
  contents:
  - "10.3.3.  Refreshing Cryptographic Keys\n   Since AC-WTP associations will tend\
    \ to be relatively long-lived, it\n   is sensible to periodically refresh the\
    \ encryption and authentication\n   keys; this is referred to as \"rekeying\"\
    .  When the key lifetime\n   reaches 95% of the configured value, identified in\
    \ the KeyLifetime\n   timer (see Section 12), the rekeying will proceed as follows:\n\
    \   o  The WTP creates RK0 through the previously defined KDF algorithm:\n   \
    \   RK0 = KDF-256{SK1D, \"LWAPP PSK Top K0\" || Session ID || WTP-MAC ||\n   \
    \   AC-MAC}.  Note that the difference in this specific instance is\n      that\
    \ SK1D that was previously generated is used instead of the\n      PSK.  Note\
    \ this is used in both the certificate and pre-shared key\n      modes.  The resulting\
    \ RK0 creates RK0E, RK0M.\n   o  The remaining steps used are identical to the\
    \ join process, with\n      the exception that the rekey messages are used instead\
    \ of join\n      messages, and the fact that the messages are encrypted using\
    \ the\n      previously created SK1E.  This means the Join Request is replaced\n\
    \      with the Rekey Request, the Join Response is replaced with the\n      Rekey\
    \ Response, etc.  The two differences between the rekey and\n      the join process\
    \ are:\n      o  The Certificate-WTP and Certificate-AC are not included in the\n\
    \         Rekey-Request and Rekey-Response, respectively.\n      o  Regardless\
    \ of whether certificates or pre-shared keys were used\n         in the initial\
    \ key derivation, the process now uses the pre-\n         shared key mode only,\
    \ using SK1D as the \"PSK\".\n   o  The Key Update Request is sent to the AC.\n\
    \   o  The newly created SK1E is now plumbed into the AC and WTP's crypto\n  \
    \    engine as the AES-CCM LWAPP control encryption session key.\n      Furthermore,\
    \ the new random IV is used as the base Initialization\n      Vector.  From this\
    \ point on, all control protocol payloads between\n      the WTP and AC are encrypted\
    \ and authenticated using the new\n      session key.\n      If either the WTP\
    \ or the AC do not receive an expected response by\n      the time the ResponseTimeout\
    \ timer expires (see Section 12), the\n      WTP MUST delete the new and old session\
    \ information, and reset the\n      state machine to the Idle state.\n      Following\
    \ a rekey process, both the WTP and the AC keep the\n      previous encryption\
    \ for 5-10 seconds in order to be able to\n      process packets that arrive out\
    \ of order.\n"
- title: 10.4.  Certificate Usage
  contents:
  - "10.4.  Certificate Usage\n   Validation of the certificates by the AC and WTP\
    \ is required so that\n   only an AC may perform the functions of an AC and that\
    \ only a WTP may\n   perform the functions of a WTP.  This restriction of functions\
    \ to the\n   AC or WTP requires that the certificates used by the AC MUST be\n\
    \   distinguishable from the certificate used by the WTP.  To accomplish\n   this\
    \ differentiation, the x.509v3 certificates MUST include the\n   Extensions field\
    \ [10] and MUST include the NetscapeComment [11]\n   extension.\n   For an AC,\
    \ the value of the NetscapeComment extension MUST be the\n   string \"CAPWAP AC\
    \ Device Certificate\".  For a WTP, the value of the\n   NetscapeComment extension\
    \ MUST be the string \"CAPWAP WTP Device\n   Certificate\".\n   Part of the LWAPP\
    \ certificate validation process includes ensuring\n   that the proper string\
    \ is included in the NetscapeComment extension,\n   and only allowing the LWAPP\
    \ session to be established if the\n   extension does not represent the same role\
    \ as the device validating\n   the certificate.  For instance, a WTP MUST NOT\
    \ accept a certificate\n   whose NetscapeComment field is set to \"CAPWAP WTP\
    \ Device\n   Certificate\".\n"
- title: 11.  IEEE 802.11 Binding
  contents:
  - "11.  IEEE 802.11 Binding\n   This section defines the extensions required for\
    \ the LWAPP protocol\n   to be used with the IEEE 802.11 protocol.\n"
- title: 11.1.  Division of Labor
  contents:
  - "11.1.  Division of Labor\n   The LWAPP protocol, when used with IEEE 802.11 devices,\
    \ requires a\n   specific behavior from the WTP and the AC, specifically in terms\
    \ of\n   which 802.11 protocol functions are handled.\n   For both the Split and\
    \ Local MAC approaches, the CAPWAP functions, as\n   defined in the taxonomy specification,\
    \ reside in the AC.\n"
- title: 11.1.1.  Split MAC
  contents:
  - "11.1.1.  Split MAC\n   This section shows the division of labor between the WTP\
    \ and the AC\n   in a Split MAC architecture.  Figure 3 shows the clear separation\
    \ of\n   functionality among LWAPP components.\n       Function              \
    \                 Location\n           Distribution Service                  \
    \    AC\n           Integration Service                       AC\n           Beacon\
    \ Generation                         WTP\n           Probe Response          \
    \                  WTP\n           Power Mgmt/Packet Buffering               WTP\n\
    \           Fragmentation/Defragmentation             WTP\n           Assoc/Disassoc/Reassoc\
    \                    AC\n      802.11e\n           Classifying               \
    \                AC\n           Scheduling                                WTP/AC\n\
    \           Queuing                                   WTP\n      802.11i\n   \
    \        802.1X/EAP                                AC\n           Key Management\
    \                            AC\n           802.11 Encryption/Decryption     \
    \         WTP or AC\n       Figure 3: Mapping of 802.11 Functions for Split MAC\
    \ Architecture\n   The Distribution and Integration services reside on the AC,\
    \ and\n   therefore all user data is tunneled between the WTP and the AC.  As\n\
    \   noted above, all real-time 802.11 services, including the control\n   protocol\
    \ and the beacon and Probe Response frames, are handled on the\n   WTP.\n   All\
    \ remaining 802.11 MAC management frames are supported on the AC,\n   including\
    \ the Association Request, which allows the AC to be involved\n   in the access\
    \ policy enforcement portion of the 802.11 protocol.  The\n   802.1X and 802.11i\
    \ key management function are also located on the\n   AC.\n   While the admission\
    \ control component of 802.11e resides on the AC,\n   the real-time scheduling\
    \ and queuing functions are on the WTP.  Note\n   that this does not exclude the\
    \ AC from providing additional policing\n   and scheduling functionality.\n  \
    \ Note that in the following figure, the use of '( - )' indicates that\n   processing\
    \ of the frames is done on the WTP.\n      Client                       WTP  \
    \                      AC\n               Beacon\n      <-----------------------------\n\
    \            Probe Request\n      ----------------------------( - )------------------------->\n\
    \            Probe Response\n      <-----------------------------\n          \
    \             802.11 AUTH/Association\n      <--------------------------------------------------------->\n\
    \                         Add Mobile (Clear Text, 802.1X Only)\n             \
    \                         <------------------------->\n             802.1X Authentication\
    \ & 802.11i Key Exchange\n      <--------------------------------------------------------->\n\
    \                                  Add Mobile (AES-CCMP, PTK=x)\n            \
    \                          <------------------------->\n                     \
    \   802.11 Action Frames\n      <--------------------------------------------------------->\n\
    \                            802.11 DATA (1)\n      <---------------------------(\
    \ - )------------------------->\n                       Figure 4: Split MAC Message\
    \ Flow\n   Figure 4 provides an illustration of the division of labor in a Split\n\
    \   MAC architecture.  In this example, a WLAN has been created that is\n   configured\
    \ for 802.11i, using AES-CCMP for privacy.  The following\n   process occurs:\n\
    \   o  The WTP generates the 802.11 beacon frames, using information\n      provided\
    \ to it through the Add WLAN (see Section 11.8.1.1) message\n      element.\n\
    \   o  The WTP processes the Probe Request and responds with a\n      corresponding\
    \ Probe Response.  The problem request is then\n      forwarded to the AC for\
    \ optional processing.\n   o  The WTP forwards the 802.11 Authentication and Association\
    \ frames\n      to the AC, which is responsible for responding to the client.\n\
    \   o  Once the association is complete, the AC transmits an LWAPP Add\n     \
    \ Mobile Request to the WTP (see Section 11.7.1.1).  In the above\n      example,\
    \ the WLAN is configured for 802.1X, and therefore the\n      '802.1X only' policy\
    \ bit is enabled.\n   o  If the WTP is providing encryption/decryption services,\
    \ once the\n      client has completed the 802.11i key exchange, the AC transmits\n\
    \      another Add Mobile Request to the WTP, stating the security policy\n  \
    \    to enforce for the client (in this case AES-CCMP), as well as the\n     \
    \ encryption key to use.  If encryption/decryption is handled in the\n      AC,\
    \ the Add Mobile Request would have the encryption policy set to\n      \"Clear\
    \ Text\".\n   o  The WTP forwards any 802.11 Action frames received to the AC.\n\
    \   o  All client data frames are tunneled between the WTP and the AC.\n     \
    \ Note that the WTP is responsible for encrypting and decrypting\n      frames,\
    \ if it was indicated in the Add Mobile Request.\n"
- title: 11.1.2.  Local MAC
  contents:
  - "11.1.2.  Local MAC\n   This section shows the division of labor between the WTP\
    \ and the AC\n   in a Local MAC architecture.  Figure 5 shows the clear separation\
    \ of\n   functionality among LWAPP components.\n       Function              \
    \                 Location\n           Distribution Service                  \
    \    WTP\n           Integration Service                       WTP\n         \
    \  Beacon Generation                         WTP\n           Probe Response  \
    \                          WTP\n           Power Mgmt/Packet Buffering       \
    \        WTP\n           Fragmentation/Defragmentation             WTP\n     \
    \      Assoc/Disassoc/Reassoc                    WTP\n      802.11e\n        \
    \   Classifying                               WTP\n           Scheduling     \
    \                           WTP\n           Queuing                          \
    \         WTP\n      802.11i\n           802.1X/EAP                          \
    \      AC\n           Key Management                            AC\n         \
    \  802.11 Encryption/Decryption              WTP\n      Figure 5: Mapping of 802.11\
    \ Functions for Local AP Architecture\n   Given that Distribution and Integration\
    \ Services exist on the WTP,\n   client data frames are not forwarded to the AC,\
    \ with the exception\n   listed in the following paragraphs.\n   While the MAC\
    \ is terminated on the WTP, it is necessary for the AC to\n   be aware of mobility\
    \ events within the WTPs.  As a consequence, the\n   WTP MUST forward the 802.11\
    \ Association Requests to the AC, and the\n   AC MAY reply with a failed Association\
    \ Response if it deems it\n   necessary.\n   The 802.1X and 802.11i Key Management\
    \ function resides in the AC.\n   Therefore, the WTP MUST forward all 802.1X/Key\
    \ Management frames to\n   the AC and forward the associated responses to the\
    \ station.\n   Note that in the following figure, the use of '( - )' indicates\
    \ that\n   processing of the frames is done on the WTP.\n      Client        \
    \               WTP                        AC\n               Beacon\n      <-----------------------------\n\
    \                Probe\n      <---------------------------->\n             802.11\
    \ AUTH\n      <-----------------------------\n                          802.11\
    \ Association\n      <---------------------------( - )------------------------->\n\
    \                         Add Mobile (Clear Text, 802.1X Only)\n             \
    \                         <------------------------->\n             802.1X Authentication\
    \ & 802.11i Key Exchange\n      <--------------------------------------------------------->\n\
    \                        802.11 Action Frames\n      <--------------------------------------------------------->\n\
    \                                  Add Mobile (AES-CCMP, PTK=x)\n            \
    \                          <------------------------->\n              802.11 DATA\n\
    \      <----------------------------->\n                       Figure 6: Local\
    \ MAC Message Flow\n   Figure 6 provides an illustration of the division of labor\
    \ in a Local\n   MAC architecture.  In this example, a WLAN has been created that\
    \ is\n   configured for 802.11i, using AES-CCMP for privacy.  The following\n\
    \   process occurs:\n   o  The WTP generates the 802.11 beacon frames, using information\n\
    \      provided to it through the Add WLAN (see Section 11.8.1.1) message\n  \
    \    element.\n   o  The WTP processes the Probe Request and responds with a\n\
    \      corresponding Probe Response.\n   o  The WTP forwards the 802.11 Authentication\
    \ and Association frames\n      to the AC, which is responsible for responding\
    \ to the client.\n   o  Once the association is complete, the AC transmits an\
    \ LWAPP Add\n      Mobile Request to the WTP (see Section 11.7.1.1.  In the above\n\
    \      example, the WLAN is configured for 802.1X, and therefore the\n      '802.1X\
    \ only' policy bit is enabled.\n   o  The WTP forwards all 802.1X and 802.11i\
    \ key exchange messages to\n      the AC for processing.\n   o  The AC transmits\
    \ another Add Mobile Request to the WTP, stating\n      the security policy to\
    \ enforce for the client (in this case, AES-\n      CCMP), as well as the encryption\
    \ key to use.  The Add Mobile\n      Request MAY include a VLAN name, which when\
    \ present is used by the\n      WTP to identify the VLAN on which the user's data\
    \ frames are to be\n      bridged.\n   o  The WTP forwards any 802.11 Action frames\
    \ received to the AC.\n   o  The WTP locally bridges all client data frames, and\
    \ provides the\n      necessary encryption and decryption services.\n"
- title: 11.2.  Roaming Behavior and 802.11 Security
  contents:
  - "11.2.  Roaming Behavior and 802.11 Security\n   It is important that LWAPP implementations\
    \ react properly to mobile\n   devices associating to the networks in how they\
    \ generate Add Mobile\n   and Delete Mobile messages.  This section expands upon\
    \ the examples\n   provided in the previous section, and describes how the LWAPP\
    \ control\n   protocol is used in order to provide secure roaming.\n   Once a\
    \ client has successfully associated with the network in a\n   secure fashion,\
    \ it is likely to attempt to roam to another access\n   point.  Figure 7 shows\
    \ an example of a currently associated station\n   moving from its \"Old WTP\"\
    \ to a new \"WTP\".  The figure is useful for\n   multiple different security\
    \ policies, including standard 802.1X and\n   dynamic WEP keys, WPA or even WPA2\
    \ both with key caching (where the\n   802.1x exchange would be bypassed) and\
    \ without.\n      Client              Old WTP              WTP              AC\n\
    \                    Association Request/Response\n       <--------------------------------------(\
    \ - )-------------->\n                          Add Mobile (Clear Text, 802.1X\
    \ Only)\n                                                <---------------->\n\
    \       802.1X Authentication (if no key cache entry exists)\n       <--------------------------------------(\
    \ - )-------------->\n                     802.11i 4-way Key Exchange\n      \
    \ <--------------------------------------( - )-------------->\n              \
    \                     Delete Mobile\n                              <---------------------------------->\n\
    \                                   Add Mobile (AES-CCMP, PTK=x)\n           \
    \                                     <---------------->\n                   \
    \    Figure 7: Client Roaming Example\n"
- title: 11.3.  Transport-Specific Bindings
  contents:
  - "11.3.  Transport-Specific Bindings\n   All LWAPP transports have the following\
    \ IEEE 802.11 specific\n   bindings:\n"
- title: 11.3.1.  Status and WLANS Field
  contents:
  - "11.3.1.  Status and WLANS Field\n   The interpretation of this 16-bit field depends\
    \ on the direction of\n   transmission of the packet.  Refer to the figure in\
    \ Section 3.1.\n   Status\n   When an LWAPP packet is transmitted from a WTP to\
    \ an AC, this field\n   is called the Status field and indicates radio resource\
    \ information\n   associated with the frame.  When the message is an LWAPP control\n\
    \   message this field is transmitted as zero.\n   The Status field is divided\
    \ into the signal strength and signal-to-\n   noise ratio with which an IEEE 802.11\
    \ frame was received, encoded in\n   the following manner:\n       0         \
    \          1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     RSSI      |     SNR       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   RSSI:   RSSI is a signed, 8-bit value.  It is the received signal\n      strength\
    \ indication, in dBm.\n   SNR:   SNR is a signed, 8-bit value.  It is the signal-to-noise\
    \ ratio\n      of the received IEEE 802.11 frame, in dB.\n   WLANs field:   When\
    \ an LWAPP data message is transmitted from an AC\n      to a WTP, this 16-bit\
    \ field indicates on which WLANs the\n      encapsulated IEEE 802.11 frame is\
    \ to be transmitted.  For unicast\n      packets, this field is not used by the\
    \ WTP.  For broadcast or\n      multicast packets, the WTP might require this\
    \ information if it\n      provides encryption services.\n      Given that a single\
    \ broadcast or multicast packet might need to be\n      sent to multiple wireless\
    \ LANs (presumably each with a different\n      broadcast key), this field is\
    \ defined as a bit field.  A bit set\n      indicates a WLAN ID (see Section 11.8.1.1),\
    \ which will be sent the\n      data.  The WLANS field is encoded in the following\
    \ manner:\n       0                   1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |          WLAN ID(s)    \
    \       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 11.4.  BSSID to WLAN ID Mapping
  contents:
  - "11.4.  BSSID to WLAN ID Mapping\n   The LWAPP protocol makes assumptions regarding\
    \ the BSSIDs used on the\n   WTP.  It is a requirement for the WTP to use a contiguous\
    \ block of\n   BSSIDs.  The WLAN Identifier field, which is managed by the AC,\
    \ is\n   used as an offset into the BSSID list.\n   For instance, if a WTP had\
    \ a base BSSID address of 00:01:02:00:00:00,\n   and the AC sent an Add WLAN message\
    \ with a WLAN Identifier of 2 (see\n   Section 11.8.1.1), the BSSID for the specific\
    \ WLAN on the WTP would\n   be 00:01:02:00:00:02.\n   The WTP communicates the\
    \ maximum number of BSSIDs that it supports\n   during the Config Request within\
    \ the IEEE 802.11 WTP WLAN Radio\n   Configuration message element (see Section\
    \ 11.9.1).\n"
- title: 11.5.  Quality of Service
  contents:
  - "11.5.  Quality of Service\n   It is recommended that 802.11 MAC management be\
    \ sent by both the AC\n   and the WTP with appropriate Quality-of-Service (QoS)\
    \ values,\n   ensuring that congestion in the network minimizes occurrences of\n\
    \   packet loss.  Therefore, a QoS-enabled LWAPP device should use:\n   802.1P:\
    \   The precedence value of 6 SHOULD be used for all 802.11 MAC\n      management\
    \ messages, except for Probe Requests, which SHOULD use\n      4.\n   DSCP:  \
    \ The DSCP tag value of 46 SHOULD be used for all 802.11 MAC\n      management\
    \ messages, except for Probe Requests, which SHOULD use\n      34.\n"
- title: 11.6.  Data Message Bindings
  contents:
  - "11.6.  Data Message Bindings\n   There are no LWAPP data message bindings for\
    \ IEEE 802.11.\n"
- title: 11.7.  Control Message Bindings
  contents:
  - "11.7.  Control Message Bindings\n   The IEEE 802.11 binding has the following\
    \ control message\n   definitions.\n"
- title: 11.7.1.  Mobile Config Request
  contents:
  - "11.7.1.  Mobile Config Request\n   This section contains the 802.11-specific\
    \ message elements that are\n   used with the Mobile Config Request.\n"
- title: 11.7.1.1.  Add Mobile
  contents:
  - "11.7.1.1.  Add Mobile\n   The Add Mobile Request is used by the AC to inform\
    \ a WTP that it\n   should forward traffic from a particular mobile station. \
    \ The Add\n   Mobile Request may also include security parameters that must be\n\
    \   enforced by the WTP for the particular mobile.\n   When the AC sends an Add\
    \ Mobile Request, it includes any security\n   parameters that may be required.\
    \  An AC that wishes to update a\n   mobile's policy on a WTP may do so by simply\
    \ sending a new Add Mobile\n   message element.\n   When a WTP receives an Add\
    \ Mobile message element, it must first\n   override any existing state it may\
    \ have for the mobile station in\n   question.  The latest Add Mobile overrides\
    \ any previously received\n   messages.  If the Add Mobile message element's EAP-Only\
    \ bit is set,\n   the WTP MUST drop all 802.11 packets that do not contain EAP\
    \ packets.\n   Note that when EAP Only is set, the Encryption Policy field MAY\
    \ have\n   additional values, and therefore it is possible to inform a WTP to\n\
    \   only accept encrypted EAP packets.  Once the mobile station has\n   successfully\
    \ completed EAP authentication, the AC must send a new Add\n   Mobile message\
    \ element to push the session key down to the WTP as\n   well as to remove the\
    \ EAP Only restriction.\n   If the QoS field is set, the WTP MUST observe and\
    \ provide policing of\n   the 802.11e priority tag to ensure that it does not\
    \ exceed the value\n   provided by the AC.\n       0                   1     \
    \              2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |        Association ID         |  MAC Address  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          MAC Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  MAC Address  |E|C|            Encryption Policy              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |Encrypt\
    \ Policy |                Session Key...                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Pairwise TSC...                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                        Pairwise RSC...                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          Capabilities         |   WLAN ID     |    WME Mode   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ 802.11e Mode  |      Qos      |        Supported Rates        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Supported Rates                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          VLAN Name...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:   29\
    \ for Add Mobile\n   Length:   36\n   Radio ID:   An 8-bit value representing\
    \ the radio.\n   Association ID:   A 16-bit value specifying the 802.11 Association\n\
    \      Identifier.\n   MAC Address:   The mobile station's MAC address.\n   E:\
    \   The 1-bit field is set by the AC to inform the WTP that it MUST\n      NOT\
    \ accept any 802.11 data frames, other than 802.1X frames.  This\n      is the\
    \ equivalent of the WTP's 802.1X port for the mobile station\n      to be in the\
    \ closed state.  When set, the WTP MUST drop any\n      non-802.1X packets it\
    \ receives from the mobile station.\n   C:   The 1-bit field is set by the AC\
    \ to inform the WTP that\n      encryption services will be provided by the AC.\
    \  When set, the WTP\n      SHOULD police frames received from stations to ensure\
    \ that they\n      comply to the stated encryption policy, but does not need to\
    \ take\n      specific cryptographic action on the frame.  Similarly, for\n  \
    \    transmitted frames, the WTP only needs to forward already\n      encrypted\
    \ frames.\n   Encryption Policy:   The policy field informs the WTP how to handle\n\
    \      packets from/to the mobile station.  The following values are\n      supported:\n\
    \      0 -  Encrypt WEP 104: All packets to/from the mobile station must\n   \
    \        be encrypted using a standard 104-bit WEP.\n      1 -  Clear Text: All\
    \ packets to/from the mobile station do not\n           require any additional\
    \ crypto processing by the WTP.\n      2 -  Encrypt WEP 40: All packets to/from\
    \ the mobile station must\n           be encrypted using a standard 40-bit WEP.\n\
    \      3 -  Encrypt WEP 128: All packets to/from the mobile station must\n   \
    \        be encrypted using a standard 128-bit WEP.\n      4 -  Encrypt AES-CCMP\
    \ 128: All packets to/from the mobile station\n           must be encrypted using\
    \ a 128-bit AES-CCMP [7].\n      5 -  Encrypt TKIP-MIC: All packets to/from the\
    \ mobile station must\n           be encrypted using Temporal Key Integrity Protocol\
    \ (TKIP) and\n           authenticated using Michael [16].\n   Session Key:  \
    \ A 32-octet session key the WTP is to use when\n      encrypting traffic to or\
    \ decrypting traffic from the mobile\n      station.  The type of key is determined\
    \ based on the Encryption\n      Policy field.\n   Pairwise TSC:   The TKIP Sequence\
    \ Counter (TSC) to use for unicast\n      packets transmitted to the mobile.\n\
    \   Pairwise RSC:   The Receive Sequence Counter (RSC) to use for unicast\n  \
    \    packets received from the mobile.\n   Capabilities:   A 16-bit field containing\
    \ the 802.11 capabilities to\n      use with the mobile.\n   WLAN ID:   An 8-bit\
    \ value specifying the WLAN Identifier.\n   WME Mode:   An 8-bit Boolean used\
    \ to identify whether the station is\n      WME capable.  A value of zero is used\
    \ to indicate that the station\n      is not Wireless Multimedia Extension (WME)\
    \ capable, while a value\n      of one means that the station is WME capable.\n\
    \   802.11e Mode:   An 8-bit Boolean used to identify whether the station\n  \
    \    is 802.11e-capable.  A value of zero is used to indicate that the\n     \
    \ station is not 802.11e-capable, while a value of one means that\n      the station\
    \ is 802.11e-capable.\n   QoS:   An 8-bit value specifying the QoS policy to enforce\
    \ for the\n      station.  The following values are supported: PRC: TO CHECK\n\
    \      0 -  Silver (Best Effort)\n      1 -  Gold (Video)\n      2 -  Platinum\
    \ (Voice)\n      3 -  Bronze (Background)\n   Supported Rates:   The supported\
    \ rates to be used with the mobile\n      station.\n   VLAN Name:   An optional\
    \ variable string containing the VLAN Name on\n      which the WTP is to locally\
    \ bridge user data.  Note that this\n      field is only valid with Local MAC\
    \ WTPs.\n"
- title: 11.7.1.2.  IEEE 802.11 Mobile Session Key
  contents:
  - "11.7.1.2.  IEEE 802.11 Mobile Session Key\n   The Mobile Session Key Payload\
    \ message element is sent when the AC\n   determines that encryption of a mobile\
    \ station must be performed in\n   the WTP.  This message element MUST NOT be\
    \ present without the Add\n   Mobile message element, and MUST NOT be sent if\
    \ the WTP had not\n   specifically advertised support for the requested encryption\
    \ scheme\n   (see Section 11.7.1.1).\n       0                   1           \
    \        2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           MAC Address                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          MAC Address          |       Encryption Policy       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       Encryption Policy       |        Session Key...         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   105 for IEEE 802.11 Mobile Session Key\n   Length:   >= 11\n   MAC Address:\
    \ The mobile station's MAC address.\n   Encryption Policy: The policy field informs\
    \ the WTP how to handle\n      packets from/to the mobile station.  The following\
    \ values are\n      supported:\n      0 -  Encrypt WEP 104: All packets to/from\
    \ the mobile station must\n           be encrypted using a standard 104-bit WEP.\n\
    \      1 -  Clear Text: All packets to/from the mobile station do not\n      \
    \     require any additional crypto processing by the WTP.\n      2 -  Encrypt\
    \ WEP 40: All packets to/from the mobile station must\n           be encrypted\
    \ using a standard 40-bit WEP.\n      3 -  Encrypt WEP 128: All packets to/from\
    \ the mobile station must\n           be encrypted using a standard 128-bit WEP.\n\
    \      4 -  Encrypt AES-CCMP 128: All packets to/from the mobile station\n   \
    \        must be encrypted using a 128-bit AES-CCMP [7].\n      5 -  Encrypt TKIP-MIC:\
    \ All packets to/from the mobile station must\n           be encrypted using TKIP\
    \ and authenticated using Michael [16].\n   Session Key: The session key the WTP\
    \ is to use when encrypting\n      traffic to/from the mobile station.\n"
- title: 11.7.1.3.  Station QoS Profile
  contents:
  - "11.7.1.3.  Station QoS Profile\n   The Station QoS Profile Payload message element\
    \ contains the maximum\n   802.11e priority tag that may be used by the station.\
    \  Any packets\n   received that exceed the value encoded in this message element\
    \ must\n   either be dropped or tagged using the maximum value permitted to the\n\
    \   user.  The priority tag must be between zero (0) and seven (7).\n       0\
    \                   1                   2                   3\n       0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           MAC Address                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          MAC Address          |     802.1P Precedence Tag     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   140 for IEEE 802.11 Station QoS Profile\n   Length:   12\n   MAC Address:\
    \   The mobile station's MAC address.\n   802.1P Precedence Tag:   The maximum\
    \ 802.1P precedence value that the\n      WTP will allow in the Traffic Identifier\
    \ (TID) field in the\n      extended 802.11e QoS Data header.\n"
- title: 11.7.1.4.  IEEE 802.11 Update Mobile QoS
  contents:
  - "11.7.1.4.  IEEE 802.11 Update Mobile QoS\n   The Update Mobile QoS message element\
    \ is used to change the Quality-\n   of-Service policy on the WTP for a given\
    \ mobile station.\n       0                   1                   2          \
    \         3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Radio ID    |        Association ID         |  MAC Address  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          MAC Address                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  MAC Address  |  QoS Profile  |        Vlan Identifier        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   DSCP Tag    |  802.1P Tag   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  Type:   106 for IEEE 802.11 Update Mobile QoS\n   Length:   14\n   Radio ID:\
    \   The Radio Identifier, typically refers to some interface\n      index on the\
    \ WTP.\n   Association ID:   The 802.11 Association Identifier.\n   MAC Address:\
    \   The mobile station's MAC address.\n   QoS Profile:   An 8-bit value specifying\
    \ the QoS policy to enforce\n      for the station.  The following values are\
    \ supported:\n      0 -  Silver (Best Effort)\n      1 -  Gold (Video)\n     \
    \ 2 -  Platinum (Voice)\n      3 -  Bronze (Background)\n   VLAN Identifier: \
    \  PRC.\n   DSCP Tag:   The DSCP label to use if packets are to be DSCP tagged.\n\
    \   802.1P Tag:   The 802.1P precedence value to use if packets are to be\n  \
    \    802.1P-tagged.\n"
- title: 11.7.2.  WTP Event Request
  contents:
  - "11.7.2.  WTP Event Request\n   This section contains the 802.11-specific message\
    \ elements that are\n   used with the WTP Event Request message.\n"
- title: 11.7.2.1.  IEEE 802.11 Statistics
  contents:
  - "11.7.2.1.  IEEE 802.11 Statistics\n   The Statistics message element is sent\
    \ by the WTP to transmit its\n   current statistics.  The value contains the following\
    \ fields:\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |    Radio ID   |               Tx Fragment Count               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |Tx Fragment Cnt|               Multicast Tx Count              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ Mcast Tx Cnt  |                  Failed Count                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Failed Count  |                  Retry Count                  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Retry Count  |             Multiple Retry Count              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |Multi Retry Cnt|             Frame Duplicate Count             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ Frame Dup Cnt |               RTS Success Count               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |RTS Success Cnt|               RTS Failure Count               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |RTS\
    \ Failure Cnt|               ACK Failure Count               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |ACK Failure Cnt|               Rx Fragment Count               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |Rx\
    \ Fragment Cnt|               Multicast RX Count              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Mcast Rx Cnt  |                FCS Error  Count               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ FCS Error  Cnt|                 Tx Frame Count                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Tx Frame Cnt  |               Decryption Errors               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |Decryption\
    \ Errs|\n      +-+-+-+-+-+-+-+-+\n   Type:   38 for Statistics\n   Length:   57\n\
    \   Radio ID:   An 8-bit value representing the radio.\n   Tx Fragment Count:\
    \   A 32-bit value representing the number of\n      fragmented frames transmitted.\n\
    \   Multicast Tx Count:   A 32-bit value representing the number of\n      multicast\
    \ frames transmitted.\n   Failed Count:   A 32-bit value representing the transmit\
    \ excessive\n      retries.\n   Retry Count:   A 32-bit value representing the\
    \ number of transmit\n      retries.\n   Multiple Retry Count:   A 32-bit value\
    \ representing the number of\n      transmits that required more than one retry.\n\
    \   Frame Duplicate Count:   A 32-bit value representing the duplicate\n     \
    \ frames received.\n   RTS Success Count:   A 32-bit value representing the number\
    \ of\n      successfully transmitted Ready To Send (RTS).\n   RTS Failure Count:\
    \   A 32-bit value representing the failed\n      transmitted RTS.\n   ACK Failure\
    \ Count:   A 32-bit value representing the number of failed\n      acknowledgements.\n\
    \   Rx Fragment Count:   A 32-bit value representing the number of\n      fragmented\
    \ frames received.\n   Multicast RX Count:   A 32-bit value representing the number\
    \ of\n      multicast frames received.\n   FCS Error Count:   A 32-bit value representing\
    \ the number of Frame\n      Check Sequence (FCS) failures.\n   Decryption Errors:\
    \   A 32-bit value representing the number of\n      Decryption errors that occurred\
    \ on the WTP.  Note that this field\n      is only valid in cases where the WTP\
    \ provides encryption/\n      decryption services.\n"
- title: 11.8.  802.11 Control Messages
  contents:
  - "11.8.  802.11 Control Messages\n   This section will define LWAPP control messages\
    \ that are specific to\n   the IEEE 802.11 binding.\n"
- title: 11.8.1.  IEEE 802.11 WLAN Config Request
  contents:
  - "11.8.1.  IEEE 802.11 WLAN Config Request\n   The IEEE 802.11 WLAN Configuration\
    \ Request is sent by the AC to the\n   WTP in order to change services provided\
    \ by the WTP.  This control\n   message is used to either create, update, or delete\
    \ a WLAN on the\n   WTP.\n   The IEEE 802.11 WLAN Configuration Request is sent\
    \ as a result of\n   either some manual administrative process (e.g., deleting\
    \ a WLAN), or\n   automatically to create a WLAN on a WTP.  When sent automatically\
    \ to\n   create a WLAN, this control message is sent after the LWAPP\n   Configuration\
    \ Request message has been received by the WTP.\n   Upon receiving this control\
    \ message, the WTP will modify the\n   necessary services, and transmit an IEEE\
    \ 802.11 WLAN Configuration\n   Response.\n   An WTP MAY provide service for more\
    \ than one WLAN: therefore, every\n   WLAN is identified through a numerical index.\
    \  For instance, a WTP\n   that is capable of supporting up to 16 SSIDs could\
    \ accept up to 16\n   IEEE 802.11 WLAN Configuration Request messages that include\
    \ the Add\n   WLAN message element.\n   Since the index is the primary identifier\
    \ for a WLAN, an AC SHOULD\n   attempt to ensure that the same WLAN is identified\
    \ through the same\n   index number on all of its WTPs.  An AC that does not follow\
    \ this\n   approach MUST find some other means of maintaining a WLAN Identifier\n\
    \   to SSID mapping table.\n   The following subsections define the message elements\
    \ that are of\n   value for this LWAPP operation.  Only one message MUST be present.\n"
- title: 11.8.1.1.  IEEE 802.11 Add WLAN
  contents:
  - "11.8.1.1.  IEEE 802.11 Add WLAN\n   The Add WLAN message element is used by the\
    \ AC to define a wireless\n   LAN on the WTP.  The value contains the following\
    \ format:\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |    Radio ID   |         WLAN Capability       |    WLAN ID    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Encryption Policy                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Key ...                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Key Index   |   Shared Key  | WPA Data Len  |WPA IE Data ...|\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ RSN Data Len  |RSN IE Data ...|         Reserved ....         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | WME Data Len  |WME IE Data ...|  11e Data Len |11e IE Data ...|\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      QoS      |   Auth Type   |Broadcast SSID |  Reserved...  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    SSID ...   |\n      +-+-+-+-+-+-+-+-+\n   Type:   7 for IEEE 802.11\
    \ Add WLAN\n   Length:   >= 298\n   Radio ID:   An 8-bit value representing the\
    \ radio.\n   WLAN Capability:   A 16-bit value containing the capabilities to\
    \ be\n      advertised by the WTP within the Probe and Beacon messages.\n   WLAN\
    \ ID:   A 16-bit value specifying the WLAN Identifier.\n   Encryption Policy:\
    \   A 32-bit value specifying the encryption scheme\n      to apply to traffic\
    \ to and from the mobile station.\n      The following values are supported:\n\
    \      0 -  Encrypt WEP 104: All packets to/from the mobile station must\n   \
    \        be encrypted using a standard 104-bit WEP.\n      1 -  Clear Text: All\
    \ packets to/from the mobile station do not\n           require any additional\
    \ crypto processing by the WTP.\n      2 -  Encrypt WEP 40: All packets to/from\
    \ the mobile station must\n           be encrypted using a standard 40-bit WEP.\n\
    \      3 -  Encrypt WEP 128: All packets to/from the mobile station must\n   \
    \        be encrypted using a standard 128-bit WEP.\n      4 -  Encrypt AES-CCMP\
    \ 128: All packets to/from the mobile station\n           must be encrypted using\
    \ a 128-bit AES-CCMP [7].\n      5 -  Encrypt TKIP-MIC: All packets to/from the\
    \ mobile station must\n           be encrypted using TKIP and authenticated using\
    \ Michael [16].\n      6 -  Encrypt CKIP: All packets to/from the mobile station\
    \ must be\n           encrypted using Cisco TKIP.\n   Key:   A 32-byte session\
    \ key to use with the encryption policy.\n   Key-Index:   The Key Index associated\
    \ with the key.\n   Shared Key:   A 1-byte Boolean that specifies whether the\
    \ key\n      included in the Key field is a shared WEP key.  A value of zero is\n\
    \      used to state that the key is not a shared WEP key, while a value\n   \
    \   of one is used to state that the key is a shared WEP key.\n   WPA Data Len:\
    \   Length of the WPA Information Element (IE).\n   WPA IE:   A 32-byte field\
    \ containing the WPA Information Element.\n   RSN Data Len:   Length of the Robust\
    \ Security Network (RSN) IE.\n   RSN IE:   A 64-byte field containing the RSN\
    \ Information Element.\n   Reserved:   A 49-byte reserved field, which MUST be\
    \ set to zero (0).\n   WME Data Len:   Length of the WME IE.\n   WME IE:   A 32-byte\
    \ field containing the WME Information Element.\n   DOT11E Data Len:   Length\
    \ of the 802.11e IE.\n   DOT11E IE:   A 32-byte field containing the 802.11e Information\n\
    \      Element.\n   QOS:   An 8-bit value specifying the QoS policy to enforce\
    \ for the\n      station.\n      The following values are supported:\n      0\
    \ -  Silver (Best Effort)\n      1 -  Gold (Video)\n      2 -  Platinum (Voice)\n\
    \      3 -  Bronze (Background)\n   Auth Type:   An 8-bit value specifying the\
    \ station's authentication\n      type.\n      The following values are supported:\n\
    \      0 -  Open System\n      1 -  WEP Shared Key\n      2 -  WPA/WPA2 802.1X\n\
    \      3 -  WPA/WPA2 PSK\n   Broadcast SSID:   A Boolean indicating whether the\
    \ SSID is to be\n      broadcast by the WTP.  A value of zero disables SSID broadcast,\n\
    \      while a value of one enables it.\n   Reserved:   A 40-byte reserved field.\n\
    \   SSID:   The SSID attribute is the service set identifier that will be\n  \
    \    advertised by the WTP for this WLAN.\n"
- title: 11.8.1.2.  IEEE 802.11 Delete WLAN
  contents:
  - "11.8.1.2.  IEEE 802.11 Delete WLAN\n   The Delete WLAN message element is used\
    \ to inform the WTP that a\n   previously created WLAN is to be deleted.  The\
    \ value contains the\n   following fields:\n       0                   1     \
    \              2\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |    Radio ID   |\
    \            WLAN ID            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   28 for IEEE 802.11 Delete WLAN\n   Length:   3\n   Radio ID:   An\
    \ 8-bit value representing the radio\n   WLAN ID:   A 16-bit value specifying\
    \ the WLAN Identifier\n"
- title: 11.8.1.3.  IEEE 802.11 Update WLAN
  contents:
  - "11.8.1.3.  IEEE 802.11 Update WLAN\n   The Update WLAN message element is used\
    \ by the AC to define a\n   wireless LAN on the WTP.  The value contains the following\
    \ format:\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |    Radio ID   |             WLAN ID           |Encrypt Policy |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Encryption Policy        |     Key...    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Key ...                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Key Index   |   Shared Key  |        WLAN Capability        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   34 for IEEE 802.11 Update WLAN\n   Length:   43\n   Radio ID:   An 8-bit value\
    \ representing the radio.\n   WLAN ID:   A 16-bit value specifying the WLAN Identifier.\n\
    \   Encryption Policy:   A 32-bit value specifying the encryption scheme\n   \
    \   to apply to traffic to and from the mobile station.\n      The following values\
    \ are supported:\n      0 -  Encrypt WEP 104: All packets to/from the mobile station\
    \ must\n           be encrypted using a standard 104-bit WEP.\n      1 -  Clear\
    \ Text: All packets to/from the mobile station do not\n           require any\
    \ additional crypto processing by the WTP.\n      2 -  Encrypt WEP 40: All packets\
    \ to/from the mobile station must\n           be encrypted using a standard 40-bit\
    \ WEP.\n      3 -  Encrypt WEP 128: All packets to/from the mobile station must\n\
    \           be encrypted using a standard 128-bit WEP.\n      4 -  Encrypt AES-CCMP\
    \ 128: All packets to/from the mobile station\n           must be encrypted using\
    \ a 128-bit AES-CCMP [7].\n      5 -  Encrypt TKIP-MIC: All packets to/from the\
    \ mobile station must\n           be encrypted using TKIP and authenticated using\
    \ Michael [16].\n      6 -  Encrypt CKIP: All packets to/from the mobile station\
    \ must be\n           encrypted using Cisco TKIP.\n   Key:   A 32-byte session\
    \ key to use with the encryption policy.\n   Key-Index:   The Key Index associated\
    \ with the key.\n   Shared Key:   A 1-byte Boolean that specifies whether the\
    \ key\n      included in the Key field is a shared WEP key.  A value of zero\n\
    \      means that the key is not a shared WEP key, while a value of one\n    \
    \  is used to state that the key is a shared WEP key.\n   WLAN Capability:   A\
    \ 16-bit value containing the capabilities to be\n      advertised by the WTP\
    \ within the Probe and Beacon messages.\n"
- title: 11.8.2.  IEEE 802.11 WLAN Config Response
  contents:
  - "11.8.2.  IEEE 802.11 WLAN Config Response\n   The IEEE 802.11 WLAN Configuration\
    \ Response is sent by the WTP to the\n   AC as an acknowledgement of the receipt\
    \ of an IEEE 802.11 WLAN\n   Configuration Request.\n   This LWAPP control message\
    \ does not include any message elements.\n"
- title: 11.8.3.  IEEE 802.11 WTP Event
  contents:
  - "11.8.3.  IEEE 802.11 WTP Event\n   The IEEE 802.11 WTP Event LWAPP message is\
    \ used by the WTP in order\n   to report asynchronous events to the AC.  There\
    \ is no reply message\n   expected from the AC, except that the message is acknowledged\
    \ via the\n   reliable transport.\n   When the AC receives the IEEE 802.11 WTP\
    \ Event, it will take whatever\n   action is necessary, depending upon the message\
    \ elements present in\n   the message.\n   The IEEE 802.11 WTP Event message MUST\
    \ contain one of the following\n   message elements described in the next subsections.\n"
- title: 11.8.3.1.  IEEE 802.11 MIC Countermeasures
  contents:
  - "11.8.3.1.  IEEE 802.11 MIC Countermeasures\n   The MIC Countermeasures message\
    \ element is sent by the WTP to the AC\n   to indicate the occurrence of a MIC\
    \ failure.\n       0                   1                   2                 \
    \  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |   Radio ID    |    WLAN ID    |          MAC Address          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          MAC Address                          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   61 for IEEE 802.11 MIC Countermeasures\n   Length:   8\n   Radio ID:   The\
    \ Radio Identifier, typically refers to some interface\n      index on the WTP.\n\
    \   WLAN ID:   This 8-bit unsigned integer includes the WLAN Identifier,\n   \
    \   on which the MIC failure occurred.\n   MAC Address:   The MAC address of the\
    \ mobile station that caused the\n      MIC failure.\n"
- title: 11.8.3.2.  IEEE 802.11 WTP Radio Fail Alarm Indication
  contents:
  - "11.8.3.2.  IEEE 802.11 WTP Radio Fail Alarm Indication\n   The WTP Radio Fail\
    \ Alarm Indication message element is sent by the\n   WTP to the AC when it detects\
    \ a radio failure.\n       0                   1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Radio ID    |     Type      |    Status     |      Pad      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   95 for WTP Radio Fail Alarm Indication\n   Length:   4\n   Radio ID:   The\
    \ Radio Identifier, typically refers to some interface\n      index on the WTP.\n\
    \   Type:   The type of radio failure detected.  The following values are\n  \
    \    supported:\n      1 -  Receiver\n      2 -  Transmitter\n   Status:   An\
    \ 8-bit Boolean indicating whether the radio failure is\n      being reported\
    \ or cleared.  A value of zero is used to clear the\n      event, while a value\
    \ of one is used to report the event.\n   Pad:   Reserved field MUST be set to\
    \ zero (0).\n"
- title: 11.9.  Message Element Bindings
  contents:
  - "11.9.  Message Element Bindings\n   The IEEE 802.11 Message Element binding has\
    \ the following\n   definitions:\n                                           \
    \     Conf  Conf  Conf  Add\n                                                Req\
    \   Resp  Upd   Mobile\n      IEEE 802.11 WTP WLAN Radio Configuration   X   \
    \  X     X\n      IEEE 802.11 Rate Set                             X     X\n \
    \     IEEE 802.11 Multi-domain Capability        X     X     X\n      IEEE 802.11\
    \ MAC Operation                  X     X     X\n      IEEE 802.11 Tx Power   \
    \                    X     X     X\n      IEEE 802.11 Tx Power Level         \
    \        X\n      IEEE 802.11 Direct Sequence Control        X     X     X\n \
    \     IEEE 802.11 OFDM Control                   X     X     X\n      IEEE 802.11\
    \ Supported Rates                X     X\n      IEEE 802.11 Antenna          \
    \              X     X     X\n      IEEE 802.11 CFP Status                   \
    \  X           X\n      IEEE 802.11 Broadcast Probe Mode                 X   \
    \  X\n      IEEE 802.11 WTP Mode and Type              X?          X\n      IEEE\
    \ 802.11 WTP Quality of Service               X     X\n      IEEE 802.11 MIC Error\
    \ Report From Mobile               X\n      IEEE 802.11 Update Mobile QoS    \
    \                            X\n      IEEE 802.11 Mobile Session Key         \
    \                      X\n"
- title: 11.9.1.  IEEE 802.11 WTP WLAN Radio Configuration
  contents:
  - "11.9.1.  IEEE 802.11 WTP WLAN Radio Configuration\n   The WTP WLAN radio configuration\
    \ is used by the AC to configure a\n   Radio on the WTP.  The message element\
    \ value contains the following\n   Fields:\n        0                   1    \
    \               2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |    Reserved   |        Occupancy Limit        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    CFP Per    |      CFP Maximum Duration     |     BSS ID    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                            BSS ID                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     BSS ID    |        Beacon Period          |    DTIM Per   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Country String                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ Num Of BSSIDs |\n      +-+-+-+-+-+-+-+-+\n   Type:   8 for IEEE 802.11 WTP WLAN\
    \ Radio Configuration\n   Length:   20\n   Radio ID:   An 8-bit value representing\
    \ the radio to configure.\n   Reserved:   MUST be set to zero\n   Occupancy Limit:\
    \   This attribute indicates the maximum amount of\n      time, in Time Units\
    \ (TUs), that a point coordinator MAY control\n      the usage of the wireless\
    \ medium without relinquishing control for\n      long enough to allow at least\
    \ one instance of Distributed\n      Coordination Function (DCF) access to the\
    \ medium.  The default\n      value of this attribute SHOULD be 100, and the maximum\
    \ value\n      SHOULD be 1000.\n   CFP Period:   The attribute describes the number\
    \ of DTIM intervals\n      between the start of Contention-Free Periods (CFPs).\n\
    \   CFP Maximum Duration:   The attribute describes the maximum duration\n   \
    \   of the CFP in TU that MAY be generated by the Point Coordination\n      Function\
    \ (PCF).\n   BSSID:   The WLAN Radio's base MAC address.  For WTPs that support\n\
    \      more than a single WLAN, the value of the WLAN Identifier is added\n  \
    \    to the last octet of the BSSID.  Therefore, a WTP that supports 16\n    \
    \  WLANs MUST have 16 MAC addresses reserved for it, and the last\n      nibble\
    \ is used to represent the WLAN ID.\n   Beacon Period:   This attribute specifies\
    \ the number of TUs that a\n      station uses for scheduling Beacon transmissions.\
    \  This value is\n      transmitted in Beacon and Probe Response frames.\n   DTIM\
    \ Period:   This attribute specifies the number of Beacon\n      intervals that\
    \ elapses between transmission of Beacons frames\n      containing a TIM element\
    \ whose DTIM Count field is 0.  This value\n      is transmitted in the DTIM Period\
    \ field of Beacon frames.\n   Country Code:   This attribute identifies the country\
    \ in which the\n      station is operating.  The first two octets of this string\
    \ is the\n      two-character country code as described in document ISO/IEC 3166-\n\
    \      1.  The third octet MUST be one of the following:\n   1. an ASCII space\
    \ character, if the regulations under which the\n      station is operating encompass\
    \ all environments in the country,\n   2. an ASCII 'O' character, if the regulations\
    \ under which the station\n      is operating are for an outdoor environment only,\
    \ or\n   3. an ASCII 'I' character, if the regulations under which the station\n\
    \      is operating are for an indoor environment only.\n   Number of BSSIDs:\
    \   This attribute contains the maximum number of\n      BSSIDs supported by the\
    \ WTP.  This value restricts the number of\n      logical networks supported by\
    \ the WTP.\n"
- title: 11.9.2.  IEEE 802.11 Rate Set
  contents:
  - "11.9.2.  IEEE 802.11 Rate Set\n   The Rate Set message element value is sent\
    \ by the AC and contains the\n   supported operational rates.  It contains the\
    \ following fields:\n        0                   1                   2       \
    \            3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |                   Rate Set                    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   16 for IEEE 802.11 Rate Set\n   Length:   4\n   Radio ID:   An 8-bit value\
    \ representing the radio to configure.\n   Rate Set:   The AC generates the Rate\
    \ Set that the WTP is to include\n      in its Beacon and Probe messages.\n"
- title: 11.9.3.  IEEE 802.11 Multi-Domain Capability
  contents:
  - "11.9.3.  IEEE 802.11 Multi-Domain Capability\n   The Multi-Domain Capability\
    \ message element is used by the AC to\n   inform the WTP of regulatory limits.\
    \  The value contains the\n   following fields:\n        0                   1\
    \                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |    Reserved   |        First Channel #        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \       Number of Channels      |       Max Tx Power Level      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   10 for IEEE 802.11 Multi-Domain Capability\n   Length:   8\n   Radio\
    \ ID:   An 8-bit value representing the radio to configure.\n   Reserved:   MUST\
    \ be set to zero\n   First Channel #:   This attribute indicates the value of\
    \ the lowest\n      channel number in the subband for the associated domain country\n\
    \      string.\n   Number of Channels:   This attribute indicates the value of\
    \ the total\n      number of channels allowed in the subband for the associated\n\
    \      domain country string.\n   Max Tx Power Level:   This attribute indicates\
    \ the maximum transmit\n      power, in dBm, allowed in the subband for the associated\
    \ domain\n      country string.\n"
- title: 11.9.4.  IEEE 802.11 MAC Operation
  contents:
  - "11.9.4.  IEEE 802.11 MAC Operation\n   The MAC Operation message element is sent\
    \ by the AC to set the 802.11\n   MAC parameters on the WTP.  The value contains\
    \ the following fields:\n       0                   1                   2    \
    \               3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |    Reserved   |         RTS Threshold         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Short Retry  |  Long Retry   |    Fragmentation Threshold    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Tx MSDU Lifetime                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Rx MSDU Lifetime                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   11 for IEEE 802.11 MAC Operation\n   Length:   16\n   Radio ID:  \
    \ An 8-bit value representing the radio to configure.\n   Reserved:   MUST be\
    \ set to zero\n   RTS Threshold:   This attribute indicates the number of octets\
    \ in a\n      Management Protocol Data Unit (MPDU), below which an RTS/CTS\n \
    \     (clear to send) handshake MUST NOT be performed.  An RTS/CTS\n      handshake\
    \ MUST be performed at the beginning of any frame exchange\n      sequence where\
    \ the MPDU is of type Data or Management, the MPDU\n      has an individual address\
    \ in the Address1 field, and the length of\n      the MPDU is greater than this\
    \ threshold.  Setting this attribute\n      to be larger than the maximum MAC\
    \ Service Data Unit (MSDU) size\n      MUST have the effect of turning off the\
    \ RTS/CTS handshake for\n      frames of Data or Management type transmitted by\
    \ this Station\n      (STA).  Setting this attribute to zero MUST have the effect\
    \ of\n      turning on the RTS/CTS handshake for all frames of Data or\n     \
    \ Management type transmitted by this STA.  The default value of\n      this attribute\
    \ MUST be 2347.\n   Short Retry:   This attribute indicates the maximum number\
    \ of\n      transmission attempts of a frame, the length of which is less than\n\
    \      or equal to RTSThreshold, that MUST be made before a failure\n      condition\
    \ is indicated.  The default value of this attribute MUST\n      be 7.\n   Long\
    \ Retry:   This attribute indicates the maximum number of\n      transmission\
    \ attempts of a frame, the length of which is greater\n      than dot11RTSThreshold,\
    \ that MUST be made before a failure\n      condition is indicated.  The default\
    \ value of this attribute MUST\n      be 4.\n   Fragmentation Threshold:   This\
    \ attribute specifies the current\n      maximum size, in octets, of the MPDU\
    \ that MAY be delivered to the\n      PHY.  An MSDU MUST be broken into fragments\
    \ if its size exceeds\n      the value of this attribute after adding MAC headers\
    \ and trailers.\n      An MSDU or MAC Management Protocol Data Unit (MMPDU) MUST\
    \ be\n      fragmented when the resulting frame has an individual address in\n\
    \      the Address1 field, and the length of the frame is larger than\n      this\
    \ threshold.  The default value for this attribute MUST be the\n      lesser of\
    \ 2346 or the aMPDUMaxLength of the attached PHY and MUST\n      never exceed\
    \ the lesser of 2346 or the aMPDUMaxLength of the\n      attached PHY.  The value\
    \ of this attribute MUST never be less than\n      256.\n   Tx MSDU Lifetime:\
    \   This attribute specifies the elapsed time in TU,\n      after the initial\
    \ transmission of an MSDU, after which, further\n      attempts to transmit the\
    \ MSDU MUST be terminated.  The default\n      value of this attribute MUST be\
    \ 512.\n   Rx MSDU Lifetime:   This attribute specifies the elapsed time, in TU,\n\
    \      after the initial reception of a fragmented MMPDU or MSDU, after\n    \
    \  which, further attempts to reassemble the MMPDU or MSDU MUST be\n      terminated.\
    \  The default value MUST be 512.\n"
- title: 11.9.5.  IEEE 802.11 Tx Power
  contents:
  - "11.9.5.  IEEE 802.11 Tx Power\n   The Tx Power message element value is bi-directional.\
    \  When sent by\n   the WTP, it contains the current power level of the radio\
    \ in\n   question.  When sent by the AC, it contains the power level to which\n\
    \   the WTP MUST adhere:\n       0                   1                   2   \
    \                3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |    Reserved   |        Current Tx Power       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   12 for IEEE 802.11 Tx Power\n   Length:   4\n   Radio ID:   An 8-bit value\
    \ representing the radio to configure.\n   Reserved:   MUST be set to zero\n \
    \  Current Tx Power:   This attribute contains the transmit output power\n   \
    \   in mW.\n"
- title: 11.9.6.  IEEE 802.11 Tx Power Level
  contents:
  - "11.9.6.  IEEE 802.11 Tx Power Level\n   The Tx Power Level message element is\
    \ sent by the WTP and contains\n   the different power levels supported.  The\
    \ value contains the\n   following fields:\n       0                   1     \
    \              2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |   Num Levels  |        Power Level [n]        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   13 for IEEE 802.11 Tx Power Level\n   Length:   >= 4\n   Radio ID:   An 8-bit\
    \ value representing the radio to configure.\n   Num Levels:   The number of power\
    \ level attributes.\n   Power Level:   Each power level fields contains a supported\
    \ power\n      level, in mW.\n"
- title: 11.9.7.  IEEE 802.11 Direct Sequence Control
  contents:
  - "11.9.7.  IEEE 802.11 Direct Sequence Control\n   The Direct Sequence Control\
    \ message element is a bi-directional\n   element.  When sent by the WTP, it contains\
    \ the current state.  When\n   sent by the AC, the WTP MUST adhere to the values.\
    \  This element is\n   only used for 802.11b radios.  The value has the following\
    \ fields.\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |    Radio ID   |    Reserved   | Current Chan  |  Current CCA  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Energy Detect Threshold                    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   14 for IEEE 802.11 Direct Sequence Control\n   Length:   8\n   Radio ID: \
    \  An 8-bit value representing the radio to configure.\n   Reserved:   MUST be\
    \ set to zero\n   Current Channel:   This attribute contains the current operating\n\
    \      frequency channel of the Direct Sequence Spread Spectrum (DSSS)\n     \
    \ PHY.\n   Current CCA:   The current Controlled Channel Access (CCA) method in\n\
    \      operation.  Valid values are:\n      1 - energy detect only (edonly)\n\
    \      2 - carrier sense only (csonly)\n      4 - carrier sense and energy detect\
    \ (edandcs)\n      8 - carrier sense with timer (cswithtimer)\n      16 - high-rate\
    \ carrier sense and energy detect (hrcsanded)\n   Energy Detect Threshold:   The\
    \ current Energy Detect Threshold being\n      used by the DSSS PHY.\n"
- title: 11.9.8.  IEEE 802.11 OFDM Control
  contents:
  - "11.9.8.  IEEE 802.11 OFDM Control\n   The Orthogonal Frequency Division Multiplexing\
    \ (OFDM) Control message\n   element is a bi-directional element.  When sent by\
    \ the WTP, it\n   contains the current state.  When sent by the AC, the WTP MUST\
    \ adhere\n   to the values.  This element is only used for 802.11a radios.  The\n\
    \   value contains the following fields:\n       0                   1       \
    \            2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |    Reserved   | Current Chan  |  Band Support |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         TI Threshold                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   15 for IEEE 802.11 OFDM Control\n   Length:   8\n   Radio ID:   An\
    \ 8-bit value representing the radio to configure.\n   Reserved:   MUST be set\
    \ to zero\n   Current Channel:   This attribute contains the current operating\n\
    \      frequency channel of the OFDM PHY.\n   Band Supported:   The capability\
    \ of the OFDM PHY implementation to\n      operate in the three U-NII bands. \
    \ Coded as an integer value of a\n      3-bit field as follows:\n      Bit 0 -\
    \  capable of operating in the lower (5.15-5.25 GHz) U-NII\n               band\n\
    \      Bit 1 -  capable of operating in the middle (5.25-5.35 GHz) U-NII\n   \
    \            band\n      Bit 2 -  capable of operating in the upper (5.725-5.825\
    \ GHz) U-NII\n               band\n      For example, for an implementation capable\
    \ of operating in the\n      lower and mid bands, this attribute would take the\
    \ value.\n   TI Threshold:   The threshold being used to detect a busy medium\n\
    \      (frequency).  CCA MUST report a busy medium upon detecting the\n      RSSI\
    \ above this threshold.\n"
- title: 11.9.9.  IEEE 802.11 Antenna
  contents:
  - "11.9.9.  IEEE 802.11 Antenna\n   The Antenna message element is communicated\
    \ by the WTP to the AC to\n   provide information on the antennas available. \
    \ The AC MAY use this\n   element to reconfigure the WTP's antennas.  The value\
    \ contains the\n   following fields:\n       0                   1           \
    \        2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |   Diversity   |    Combiner   |  Antenna Cnt  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Antenna Selection [0..N]                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   41 for IEEE 802.11 Antenna\n   Length:   >= 8\n   Radio ID:   An 8-bit\
    \ value representing the radio to configure.\n   Diversity:   An 8-bit value specifying\
    \ whether the antenna is to\n      provide receive diversity.  The following values\
    \ are supported:\n      0 -  Disabled\n      1 -  Enabled (may only be true if\
    \ the antenna can be used as a\n           receive antenna)\n   Combiner:   An\
    \ 8-bit value specifying the combiner selection.  The\n      following values\
    \ are supported:\n      1 -  Sectorized (Left)\n      2 -  Sectorized (Right)\n\
    \      3 -  Omni\n      4 -  Mimo\n   Antenna Count:   An 8-bit value specifying\
    \ the number of Antenna\n      Selection fields.\n   Antenna Selection:   One\
    \ 8-bit antenna configuration value per\n      antenna in the WTP.  The following\
    \ values are supported:\n      1 -  Internal Antenna\n      2 -  External Antenna\n"
- title: 11.9.10.  IEEE 802.11 Supported Rates
  contents:
  - "11.9.10.  IEEE 802.11 Supported Rates\n   The Supported Rates message element\
    \ is sent by the WTP to indicate\n   the rates that it supports.  The value contains\
    \ the following fields:\n       0                   1                   2    \
    \               3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Radio ID   |                 Supported Rates               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type:\
    \   16 for IEEE 802.11 Supported Rates\n   Length:   4\n   Radio ID:   An 8-bit\
    \ value representing the radio.\n   Supported Rates:   The WTP includes the Supported\
    \ Rates that its\n      hardware supports.  The format is identical to the Rate\
    \ Set\n      message element.\n"
- title: 11.9.11.  IEEE 802.11 CFP Status
  contents:
  - "11.9.11.  IEEE 802.11 CFP Status\n   The CFP Status message element is sent to\
    \ provide the CF Polling\n   configuration.\n       0                   1\n  \
    \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Radio ID    |    Status     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   48 for IEEE 802.11 CFP Status\n   Length:   2\n   Radio ID:   The\
    \ Radio Identifier, typically refers to some interface\n      index on the WTP.\n\
    \   Status:   An 8-bit Boolean containing the status of the CF Polling\n     \
    \ feature.  A value of zero disables CFP Status, while a value of\n      one enables\
    \ it.\n"
- title: 11.9.12.  IEEE 802.11 WTP Mode and Type
  contents:
  - "11.9.12.  IEEE 802.11 WTP Mode and Type\n   The WTP Mode and Type message element\
    \ is used to configure a WTP to\n   operate in a specific mode.\n       0    \
    \               1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Mode      |     Type      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type:   54 for IEEE 802.11 WTP Mode and Type\n   Length:   2\n   Mode:   An\
    \ 8-bit value describing the type of information being sent.\n      The following\
    \ values are supported:\n      0 -  Split MAC\n      2 -  Local MAC\n   Type:\
    \   The type field is not currently used.\n"
- title: 11.9.13.  IEEE 802.11 Broadcast Probe Mode
  contents:
  - "11.9.13.  IEEE 802.11 Broadcast Probe Mode\n   The Broadcast Probe Mode message\
    \ element indicates whether a WTP will\n   respond to NULL SSID Probe requests.\
    \  Since broadcast NULL Probes are\n   not sent to a specific BSSID, the WTP cannot\
    \ know which SSID the\n   sending station is querying.  Therefore, this behavior\
    \ must be global\n   to the WTP.\n       0\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n\
    \      |    Status     |\n      +-+-+-+-+-+-+-+-+\n   Type:   51 for IEEE 802.11\
    \ Broadcast Probe Mode\n   Length:   1\n   Status:   An 8-bit Boolean indicating\
    \ the status of whether a WTP\n      shall respond to a NULL SSID Probe request.\
    \  A value of zero\n      disables the NULL SSID Probe response, while a value\
    \ of one\n      enables it.\n"
- title: 11.9.14.  IEEE 802.11 WTP Quality of Service
  contents:
  - "11.9.14.  IEEE 802.11 WTP Quality of Service\n   The WTP Quality of Service message\
    \ element value is sent by the AC to\n   the WTP to communicate quality-of-service\
    \ configuration information.\n       0                   1\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   Radio\
    \ ID    |  Tag Packets  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type: \
    \  57 for IEEE 802.11 WTP Quality of Service\n   Length:   12\n   Radio ID:  \
    \ The Radio Identifier, typically refers to some interface\n      index on the\
    \ WTP.\n   Tag Packets:   A value indicating whether LWAPP packets should be\n\
    \      tagged for QoS purposes.  The following values are currently\n      supported:\n\
    \      0 -  Untagged\n      1 -  802.1P\n      2 -  DSCP\n      Immediately following\
    \ the above header is the following data\n      structure.  This data structure\
    \ will be repeated five times, once\n      for every QoS profile.  The order of\
    \ the QoS profiles is Uranium,\n      Platinum, Gold, Silver, and Bronze.\n  \
    \     0                   1                   2                   3\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Queue Depth  |             CWMin             |     CWMax     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     CWMax     |     AIFS      |              CBR              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   Dot1P Tag   |   DSCP Tag    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Queue Depth:   The number of packets that can be on the specific QoS\n   \
    \   transmit queue at any given time.\n   CWMin:   The Contention Window minimum\
    \ value for the QoS transmit\n      queue.\n   CWMax:   The Contention Window\
    \ maximum value for the QoS transmit\n      queue.\n   AIFS:   The Arbitration\
    \ Inter Frame Spacing to use for the QoS\n      transmit queue.\n   CBR:   The\
    \ Constant Bit Rate (CBR) value to observe for the QoS\n      transmit queue.\n\
    \   Dot1P Tag:   The 802.1P precedence value to use if packets are to be\n   \
    \   802.1P tagged.\n   DSCP Tag:   The DSCP label to use if packets are to be\
    \ DSCP tagged.\n"
- title: 11.9.15.  IEEE 802.11 MIC Error Report From Mobile
  contents:
  - "11.9.15.  IEEE 802.11 MIC Error Report From Mobile\n   The MIC Error Report From\
    \ Mobile message element is sent by an AC to\n   a WTP when it receives a MIC\
    \ failure notification via the Error bit\n   in the EAP over LAN (EAPOL)-Key frame.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Client MAC Address                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      Client MAC Address       |             BSSID             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             BSSID                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   Radio ID    |    WLAN ID    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  Type:   79 for IEEE 802.11 MIC Error Report From Mobile\n   Length:   14\n\
    \   Client MAC Address:   The Client MAC address of the station reporting\n  \
    \    the MIC failure.\n   BSSID:   The BSSID on which the MIC failure is being\
    \ reported.\n   Radio ID:   The Radio Identifier, typically refers to some interface\n\
    \      index on the WTP.\n   WLAN ID:   The WLAN ID on which the MIC failure is\
    \ being reported.\n"
- title: 11.10.  IEEE 802.11 Message Element Values
  contents:
  - "11.10.  IEEE 802.11 Message Element Values\n   This section lists IEEE 802.11-specific\
    \ values for any generic LWAPP\n   message elements that include fields whose\
    \ values are technology-\n   specific.\n   IEEE 802.11 uses the following values:\n\
    \   4 - Encrypt AES-CCMP 128:   WTP supports AES-CCMP, as defined in [7].\n  \
    \ 5 - Encrypt TKIP-MIC:   WTP supports TKIP and Michael, as defined in\n     \
    \  [16].\n"
- title: 12.  LWAPP Protocol Timers
  contents:
  - "12.  LWAPP Protocol Timers\n   A WTP or AC that implements LWAPP discovery MUST\
    \ implement the\n   following timers.\n"
- title: 12.1.  MaxDiscoveryInterval
  contents:
  - "12.1.  MaxDiscoveryInterval\n   The maximum time allowed between sending Discovery\
    \ Requests from the\n   interface, in seconds.  Must be no less than 2 seconds\
    \ and no greater\n   than 180 seconds.\n   Default: 20 seconds.\n"
- title: 12.2.  SilentInterval
  contents:
  - "12.2.  SilentInterval\n   The minimum time, in seconds, a WTP MUST wait after\
    \ failing to\n   receive any responses to its Discovery Requests, before it MAY\
    \ again\n   send Discovery Requests.\n   Default: 30\n"
- title: 12.3.  NeighborDeadInterval
  contents:
  - "12.3.  NeighborDeadInterval\n   The minimum time, in seconds, a WTP MUST wait\
    \ without having received\n   Echo Responses to its Echo Requests, before the\
    \ destination for the\n   Echo Request may be considered dead.  Must be no less\
    \ than\n   2*EchoInterval seconds and no greater than 240 seconds.\n   Default:\
    \ 60\n"
- title: 12.4.  EchoInterval
  contents:
  - "12.4.  EchoInterval\n   The minimum time, in seconds, between sending Echo Requests\
    \ to the AC\n   with which the WTP has joined.\n   Default: 30\n"
- title: 12.5.  DiscoveryInterval
  contents:
  - "12.5.  DiscoveryInterval\n   The minimum time, in seconds, that a WTP MUST wait\
    \ after receiving a\n   Discovery Response, before sending a Join Request.\n \
    \  Default: 5\n"
- title: 12.6.  RetransmitInterval
  contents:
  - "12.6.  RetransmitInterval\n   The minimum time, in seconds, that a non-acknowledged\
    \ LWAPP packet\n   will be retransmitted.\n   Default: 3\n"
- title: 12.7.  ResponseTimeout
  contents:
  - "12.7.  ResponseTimeout\n   The minimum time, in seconds, in which an LWAPP Request\
    \ message must\n   be responded to.\n   Default: 1\n"
- title: 12.8.  KeyLifetime
  contents:
  - "12.8.  KeyLifetime\n   The maximum time, in seconds, that an LWAPP session key\
    \ is valid.\n   Default: 28800\n"
- title: 13.  LWAPP Protocol Variables
  contents:
  - "13.  LWAPP Protocol Variables\n   A WTP or AC that implements LWAPP discovery\
    \ MUST allow for the\n   following variables to be configured by system management;\
    \ default\n   values are specified so as to make it unnecessary to configure any\
    \ of\n   these variables in many cases.\n"
- title: 13.1.  MaxDiscoveries
  contents:
  - "13.1.  MaxDiscoveries\n   The maximum number of Discovery Requests that will\
    \ be sent after a\n   WTP boots.\n   Default: 10\n"
- title: 13.2.  DiscoveryCount
  contents:
  - "13.2.  DiscoveryCount\n   The number of discoveries transmitted by a WTP to a\
    \ single AC.  This\n   is a monotonically increasing counter.\n"
- title: 13.3.  RetransmitCount
  contents:
  - "13.3.  RetransmitCount\n   The number of retransmissions for a given LWAPP packet.\
    \  This is a\n   monotonically increasing counter.\n"
- title: 13.4.  MaxRetransmit
  contents:
  - "13.4.  MaxRetransmit\n   The maximum number of retransmissions for a given LWAPP\
    \ packet before\n   the link layer considers the peer dead.\n   Default: 5\n"
- title: 14.  NAT Considerations
  contents:
  - "14.  NAT Considerations\n   There are two specific situations where a NAT system\
    \ may be used in\n   conjunction with LWAPP.  The first consists of a configuration\
    \ where\n   the WTP is behind a NAT system.  Given that all communication is\n\
    \   initiated by the WTP, and all communication is performed over IP\n   using\
    \ a single UDP port, the protocol easily traverses NAT systems in\n   this configuration.\n\
    \   The second configuration is one where the AC sits behind a NAT, and\n   there\
    \ are two main issues that exist in this situation.  First, an AC\n   communicates\
    \ its interfaces and associated WTP load on these\n   interfaces, through the\
    \ WTP Manager Control IP Address.  This message\n   element is currently mandatory,\
    \ and if NAT compliance became an\n   issue, it would be possible to either:\n\
    \   1. make the WTP Manager Control IP Address optional, allowing the WTP\n  \
    \    to simply use the known IP address.  However, note that this\n      approach\
    \ would eliminate the ability to perform load balancing of\n      WTP across ACs,\
    \ and therefore is not the recommended approach.\n   2. allow an AC to be able\
    \ to configure a NAT'ed address for every\n      associated AC that would generally\
    \ be communicated in the WTP\n      Manager Control IP Address message element.\n\
    \   3. require that if a WTP determines that the AC List message element\n   \
    \   consists of a set of IP addresses that are different from the AC's\n     \
    \ IP address it is currently communicating with, then assume that\n      NAT is\
    \ being enforced, and require that the WTP communicate with\n      the original\
    \ AC's IP address (and ignore the WTP Manager Control\n      IP Address message\
    \ element(s)).\n   Another issue related to having an AC behind a NAT system is\
    \ LWAPP's\n   support for the CAPWAP Objective to allow the control and data plane\n\
    \   to be separated.  In order to support this requirement, the LWAPP\n   protocol\
    \ defines the WTP Manager Data IP Address message element,\n   which allows the\
    \ AC to inform the WTP that the LWAPP data frames are\n   to be forwarded to a\
    \ separate IP address.  This feature MUST be\n   disabled when an AC is behind\
    \ a NAT.  However, there is no easy way\n   to provide some default mechanism\
    \ that satisfies both the data/\n   control separation and NAT objectives, as\
    \ they directly conflict with\n   each other.  As a consequence, user intervention\
    \ will be required to\n   support such networks.\n   LWAPP has a feature that\
    \ allows for all of the AC's identities\n   supporting a group of WTPs to be communicated\
    \ through the AC List\n   message element.  This feature must be disabled when\
    \ the AC is behind\n   a NAT and the IP address that is embedded would be invalid.\n\
    \   The LWAPP protocol has a feature that allows an AC to configure a\n   static\
    \ IP address on a WTP.  The WTP Static IP Address Information\n   message element\
    \ provides such a function; however, this feature\n   SHOULD NOT be used in NAT'ed\
    \ environments, unless the administrator\n   is familiar with the internal IP\
    \ addressing scheme within the WTP's\n   private network, and does not rely on\
    \ the public address seen by the\n   AC.\n   When a WTP detects the duplicate\
    \ address condition, it generates a\n   message to the AC, which includes the\
    \ Duplicate IP Address message\n   element.  Once again, it is important to note\
    \ that the IP address\n   embedded within this message element would be different\
    \ from the\n   public IP address seen by the AC.\n"
- title: 15.  Security Considerations
  contents:
  - "15.  Security Considerations\n   LWAPP uses either an authenticated key exchange\
    \ or key agreement\n   mechanism to ensure peer authenticity and establish fresh\
    \ session\n   keys to protect the LWAPP communications.\n   The LWAPP protocol\
    \ defines a join phase, which allows a WTP to bind a\n   session with an AC. \
    \ During this process, a session key is mutually\n   derived, and secured either\
    \ through an X.509 certificate or a pre-\n   shared key.  The resulting key exchange\
    \ generates an encryption\n   session key, which is used to encrypt the LWAPP\
    \ control packets, and\n   a key derivation key.\n   During the established secure\
    \ communication, the WTP and AC may rekey\n   using the key update process, which\
    \ is identical to the join phase,\n   meaning the session keys are mutually derived.\
    \  However, the exchange\n   described for pre-shared session keys is always used\
    \ for the key\n   update, with the pre-shared key set to the derivation key created\n\
    \   either during the join, or the last key update if one has occurred.\n   The\
    \ key update results in a new derivation key, which is used in the\n   next key\
    \ update, as well as an encryption session key to encrypt the\n   LWAPP control\
    \ packets.\n   Replay protection of the Join Request is handled through an exchange\n\
    \   of nonces during the join (or key update) phase.  The Join Request\n   includes\
    \ an XNonce, which is included in the AC's authenticated Join\n   Reply's encrypted\
    \ ANonce message element, allowing for the two\n   messages to be bound.  Upon\
    \ receipt of the Join Reply, the WTP\n   generates the WNonce, and generates a\
    \ set of session keys using a KDF\n   function.  One of these keys is used to\
    \ MIC the Join ACK.  The AC\n   responds with a Join Confirm, which must also\
    \ include a MIC, and\n   therefore be capable of deriving the same set of session\
    \ keys.\n   In both the X.509 certificate and pre-shared key modes, an\n   initialization\
    \ vector is created through the above mentioned KDF\n   function.  The IV and\
    \ the KDF created encryption key are used to\n   encrypt the LWAPP control frames.\n\
    \   Given that authentication in the Join exchange does not occur until\n   the\
    \ WTP transmits the Join ACK message, it is crucial that an AC not\n   delete\
    \ any state for a WTP it is servicing until an authentication\n   Join ACK has\
    \ been received.  Otherwise, a potential Denial-of-Service\n   attack exists,\
    \ whereby sending a spoofed Join Request for a valid WTP\n   would cause the AC\
    \ to reset the WTP's connection.\n   It is important to note that Perfect Forward\
    \ Secrecy is not a\n   requirement for the LWAPP protocol.\n   Note that the LWAPP\
    \ protocol does not add any new vulnerabilities to\n   802.11 infrastructure that\
    \ makes use of WEP for encryption purposes.\n   However, implementors SHOULD discourage\
    \ the use of WEP to allow the\n   market to move towards technically sound cryptographic\
    \ solutions,\n   such as 802.11i.\n"
- title: 15.1.  Certificate-Based Session Key Establishment
  contents:
  - "15.1.  Certificate-Based Session Key Establishment\n   LWAPP uses public key\
    \ cryptography to ensure trust between the WTP\n   and the AC.  One question that\
    \ periodically arises is why the Join\n   Request is not signed.  Signing this\
    \ request would not be optimal for\n   the following reasons:\n   1. The Join\
    \ Request is replayable, so a signature doesn't provide\n      much protection\
    \ unless the switches keep track of all previous\n      Join Requests from a given\
    \ WTP.\n   2. Replay detection is handled during the Join Reply and Join ACK\n\
    \      messages.\n   3. A signed Join Request provides a potential Denial-of-Service\n\
    \      attack on the AC, which would have to authenticate each\n      (potentially\
    \ malicious) message.\n   The WTP-Certificate that is included in the Join Request\
    \ MUST be\n   validated by the AC.  It is also good practice that the AC perform\n\
    \   some form of authorization, ensuring that the WTP in question is\n   allowed\
    \ to establish an LWAPP session with it.\n"
- title: 15.2.  PSK-Based Session Key Establishment
  contents:
  - "15.2.  PSK-Based Session Key Establishment\n   Use of a fixed shared secret of\
    \ limited entropy (for example, a PSK\n   that is relatively short, or was chosen\
    \ by a human and thus may\n   contain less entropy than its length would imply)\
    \ may allow an\n   attacker to perform a brute-force or dictionary attack to recover\
    \ the\n   secret.\n   It is RECOMMENDED that implementations that allow the administrator\n\
    \   to manually configure the PSK also provide a functionality for\n   generating\
    \ a new random PSK, taking RFC 1750 [4] into account.\n   Since the key generation\
    \ does not expose the nonces in plaintext,\n   there are no practical passive\
    \ attacks possible.\n"
- title: 16.  Acknowledgements
  contents:
  - "16.  Acknowledgements\n   The authors wish to thank Michael Vakulenko for contributing\
    \ text\n   that describes how LWAPP can be used over a Layer 3 (IP) network.\n\
    \   The authors would also like to thanks Russ Housley and Charles Clancy\n  \
    \ for their assistance in providing a security review of the LWAPP\n   specification.\
    \  Charles' review can be found in [12].\n"
- title: 17.  References
  contents:
  - '17.  References

    '
- title: 17.1.  Normative References
  contents:
  - "17.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   National Institute of Standards and Technology, \"Advanced\n       \
    \  Encryption Standard (AES)\", FIPS PUB 197, November 2001,\n         <http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf>.\n\
    \   [3]   Whiting, D., Housley, R., and N. Ferguson, \"Counter with CBC-\n   \
    \      MAC (CCM)\", RFC 3610, September 2003.\n   [4]   Eastlake, D., 3rd, Schiller,\
    \ J., and S. Crocker, \"Randomness\n         Requirements for Security\", BCP\
    \ 106, RFC 4086, June 2005.\n   [5]   Manner, J., Ed., and M. Kojo, Ed., \"Mobility\
    \ Related\n         Terminology\", RFC 3753, June 2004.\n   [6]   \"Information\
    \ technology - Telecommunications and information\n         exchange between systems\
    \ - Local and metropolitan area networks\n         - Specific requirements - Part\
    \ 11: Wireless LAN Medium Access\n         Control (MAC) and Physical Layer (PHY)\
    \ specifications\", IEEE\n         Standard 802.11, 2007,\n         <http://standards.ieee.org/getieee802/download/802.11-2007.pdf>\n\
    \   [7]   \"Information technology - Telecommunications and information\n    \
    \     exchange between systems - Local and metropolitan area networks\n      \
    \   - Specific requirements - Part 11: Wireless LAN Medium Access\n         Control\
    \ (MAC) and Physical Layer (PHY) specifications Amendment\n         6: Medium\
    \ Access Control (MAC) Security Enhancements\", IEEE\n         Standard 802.11i,\
    \ July 2004,\n         http://standards.ieee.org/getieee802/download/802.11i-2004.pdf\n\
    \   [8]   Clark, D., \"IP datagram reassembly algorithms\", RFC 815, July\n  \
    \       1982.\n   [9]   Schaad, J. and R. Housley, \"Advanced Encryption Standard\
    \ (AES)\n         Key Wrap Algorithm\", RFC 3394, September 2002.\n   [10]  Cooper,\
    \ D., Santesson, S., Farrell, S., Boeyen, S., Housley,\n         R., and W. Polk,\
    \ \"Internet X.509 Public Key Infrastructure\n         Certificate and Certificate\
    \ Revocation List (CRL) Profile\", RFC\n         5280, May 2008.\n   [11]  \"\
    Netscape-Defined Certificate Extensions\",\n         <http://www.redhat.com/docs/manuals/cert-\n\
    \         system/admin/7.1/app_ext.html#35336>.\n   [12]  Clancy, C., \"Security\
    \ Review of the Light-Weight Access Point\n         Protocol\", May 2005,\n  \
    \       <http://www.cs.umd.edu/~clancy/docs/lwapp-review.pdf>.\n"
- title: 17.2.  Informative References
  contents:
  - "17.2.  Informative References\n   [13]  Reynolds, J., Ed., \"Assigned Numbers:\
    \ RFC 1700 is Replaced by\n         an On-line Database\", RFC 3232, January 2002.\n\
    \   [14]   Kent, S. and K. Seo, \"Security Architecture for the Internet\n   \
    \      Protocol\", RFC 4301, December 2005.\n   [15]  Krawczyk, H., Bellare, M.,\
    \ and R. Canetti, \"HMAC: Keyed-Hashing\n         for Message Authentication\"\
    , RFC 2104, February 1997.\n   [16]  \"WiFi Protected Access (WPA) rev 1.6\",\
    \ April 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Pat R. Calhoun\n   Cisco Systems, Inc.\n   170 West Tasman\
    \ Drive\n   San Jose, CA  95134\n   Phone: +1 408-853-5269\n   EMail: pcalhoun@cisco.com\n\
    \   Rohit Suri\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose,\
    \ CA  95134\n   Phone: +1 408-853-5548\n   EMail: rsuri@cisco.com\n   Nancy Cam-Winget\n\
    \   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA  95134\n  \
    \ Phone: +1 408-853-0532\n   EMail: ncamwing@cisco.com\n   Scott Kelly\n   EMail:\
    \ scott@hyperthought.com\n   Michael Glenn Williams\n   GWhiz Arts & Sciences\n\
    \   1560 Newbury Road, Suite 1-204\n   Newbury Park, CA 91320\n   Phone: +1 805-499-1994\n\
    \   EMail: gwhiz@gwhiz.com\n   Sue Hares\n   Phone: +1 734-604-0332\n   EMail:\
    \ shares@ndzh.com\n   Bob O'Hara\n   EMail: bob.ohara@computer.org\n"
