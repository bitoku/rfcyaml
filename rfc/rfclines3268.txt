Abstract This document proposes several new ciphersuites.
At present, the symmetric ciphers supported by Transport Layer Security (TLS) are RC2, RC4, International Data Encryption Algorithm (IDEA), Data Encryption Standard (DES), and triple DES.
The protocol would be enhanced by the addition of Advanced Encryption Standard (AES) ciphersuites.
At present, the symmetric ciphers supported by TLS are RC2, RC4, IDEA, DES, and triple DES.
The protocol would be enhanced by the addition of AES [AES] ciphersuites, for the following reasons
: 1. RC2, RC4, and IDEA are all subject to intellectual property claims.
RSA Security Inc. has trademark rights in the names RC2 and RC4, and claims that the RC4 algorithm itself is a trade secret.
Ascom Systec Ltd. owns a patent on the IDEA algorithm.
Triple DES is much less efficient than more modern ciphers.
Now that the AES process is completed there will be commercial pressure to use the selected cipher.
The AES is efficient and has withstood extensive cryptanalytic efforts.
The AES is therefore a desirable choice.
Currently the DHE ciphersuites only allow triple DES (along with some "export" variants which do not use a satisfactory key length).
At the same time the DHE ciphersuites are the only ones to offer forward secrecy.
This document proposes several new ciphersuites, with the aim of overcoming these problems.
The new ciphersuites proposed here are very similar to the following, defined in [TLS]: TLS RSA WITH 3DES EDE CBC SHA TLS DH DSS WITH 3DES EDE
CBC SHA TLS DH RSA WITH 3DES EDE CBC SHA TLS DHE DSS WITH 3DES EDE CBC SHA TLS DHE RSA WITH 3DES EDE CBC SHA TLS DH
anon WITH 3DES EDE CBC SHA
All the ciphersuites described here use the AES in cipher block chaining (CBC) mode.
Furthermore, they use SHA 1
[SHA 1] in an HMAC construction as described in section 5 of [TLS].
(Although the TLS ciphersuite names include the text "SHA", this actually refers to the modified SHA 1 version of the algorithm.)
The ciphersuites differ in the type of certificate and key exchange method.
128 CBC SHA    DH DSS TLS DH RSA WITH AES 128 CBC SHA    DH RSA TLS DHE DSS WITH AES 128 CBC
SHA   DHE DSS TLS DHE RSA WITH AES 128 CBC SHA
DHE RSA TLS DH anon WITH AES 128 CBC SHA   DH anon TLS RSA WITH AES 256
CBC SHA    DH RSA TLS DHE DSS WITH AES 256 CBC
SHA   DHE DSS TLS DHE RSA WITH AES 256 CBC SHA
DHE RSA TLS DH anon WITH AES 256 CBC SHA   DH anon
For the meanings of the terms RSA, DH DSS, DH RSA, DHE DSS, DHE RSA and DH anon, please refer to sections 7.4.2 and 7.4.3 of [TLS].
The AES supports key lengths of 128, 192 and 256 bits.
However, this document only defines ciphersuites for 128  and 256 bit keys.
This is to avoid unnecessary proliferation of ciphersuites.
Rijndael actually allows for 192  and 256 bit block sizes as well as the 128  bit blocks mandated by the AES process.
The ciphersuites defined here all use 128 bit blocks.
The new ciphersuites will have the following definitions: CipherSuite TLS RSA WITH AES 128
, 0x38 }; CipherSuite TLS DHE RSA WITH AES 256
It is not believed that the new ciphersuites are ever less secure than the corresponding older ones.
The AES is believed to be secure, and it has withstood extensive cryptanalytic attack.
The ephemeral Diffie Hellman ciphersuites provide forward secrecy without any known reduction in security in other areas.
To obtain the maximum benefit from these ciphersuites: 1.
The ephemeral keys should only be used once.
With the TLS protocol as currently defined there is no significant efficiency gain from reusing ephemeral keys.
Ephemeral keys should be destroyed securely when they are no longer required.
The random number generator used to create ephemeral keys
must not reveal past output even when its internal state is compromised.
[TLS] describes the anonymous Diffie Hellman (ADH) ciphersuites as deprecated.
The ADH ciphersuites defined here are not deprecated.
However, when they are used, particular care must be taken: 1.
ADH provides confidentiality but not authentication.
This means that (if authentication is required) the communicating parties must authenticate to each other by some means other than TLS.
ADH is vulnerable to man in the middle attacks, as a consequence of the lack of authentication.
The parties must have a way of determining whether they are participating in the same TLS connection.
If they are not, they can deduce that they are under attack, and presumably abort the connection.
For example, if the parties share a secret, it is possible to compute a MAC of the TLS Finished message.
An attacker would have to negotiate two different TLS connections; one with each communicating party.
The Finished messages would be different in each case, because they depend on the parties' public keys (among other things).
For this reason, the MACs computed by each party would be different.
It is important to note that authentication techniques which do not use the Finished message do not usually provide protection from this attack.
For example, the client could authenticate to the server with a password, but it would still be vulnerable to man in the middle attacks.
Recent research has identified a chosen plaintext attack which applies to all ciphersuites defined in [TLS] which use CBC mode.
This weakness does not affect the common use of TLS on the World Wide Web, but may affect the use of TLS in other applications.
When TLS is used in an application where this attack is possible, attackers can determine the truth or otherwise of a hypothesis that particular plaintext data was sent earlier in the session.
No key material is compromised.
It is likely that the CBC construction will be changed in a future revision of the TLS protocol.
