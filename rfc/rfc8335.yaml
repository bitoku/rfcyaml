- title: __initial_text__
  contents:
  - '                PROBE: A Utility for Probing Interfaces

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a network diagnostic tool called PROBE.\n\
    \   PROBE is similar to PING in that it can be used to query the status\n   of\
    \ a probed interface, but it differs from PING in that it does not\n   require\
    \ bidirectional connectivity between the probing and probed\n   interfaces.  Instead,\
    \ PROBE requires bidirectional connectivity\n   between the probing interface\
    \ and a proxy interface.  The proxy\n   interface can reside on the same node\
    \ as the probed interface, or it\n   can reside on a node to which the probed\
    \ interface is directly\n   connected.  This document updates RFC 4884.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8335.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Requirements Language . . . . . . . . . . . . . . .\
    \ . . .   4\n   2.  ICMP Extended Echo Request  . . . . . . . . . . . . . . .\
    \ . .   5\n     2.1.  Interface Identification Object . . . . . . . . . . . .\
    \ .   6\n   3.  ICMP Extended Echo Reply  . . . . . . . . . . . . . . . . . .\
    \   7\n   4.  ICMP Message Processing . . . . . . . . . . . . . . . . . . .  \
    \ 9\n     4.1.  Code Field Processing . . . . . . . . . . . . . . . . . .  11\n\
    \   5.  Use Cases . . . . . . . . . . . . . . . . . . . . . . . . . .  11\n  \
    \ 6.  Updates to RFC 4884 . . . . . . . . . . . . . . . . . . . . .  12\n   7.\
    \  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12\n   8.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  14\n   9.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  15\n     9.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  15\n     9.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  16\n   Appendix A.  The PROBE\
    \ Application  . . . . . . . . . . . . . . .  17\n   Acknowledgments . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  18\n   Authors' Addresses  . . . .\
    \ . . . . . . . . . . . . . . . . . . .  19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network operators use PING [RFC2151] to test bidirectional\n\
    \   connectivity between two interfaces.  For the purposes of this\n   document,\
    \ these interfaces are called the probing and probed\n   interfaces.  PING sends\
    \ an ICMP [RFC792] [RFC4443] Echo Request\n   message from the probing interface\
    \ to the probed interface.  The\n   probing interface resides on a probing node\
    \ while the probed\n   interface resides on a probed node.\n   If the probed interface\
    \ receives the ICMP Echo Request message, it\n   returns an ICMP Echo Reply. \
    \ When the probing interface receives the\n   ICMP Echo Reply, it has verified\
    \ bidirectional connectivity between\n   the probing and probed interfaces.  Specifically,\
    \ it has verified\n   that:\n   o  The probing node can reach the probed interface.\n\
    \   o  The probed interface is active.\n   o  The probed node can reach the probing\
    \ interface.\n   o  The probing interface is active.\n   This document describes\
    \ a network diagnostic tool called PROBE.\n   PROBE is similar to PING in that\
    \ it can be used to query the status\n   of a probed interface, but it differs\
    \ from PING in that it does not\n   require bidirectional connectivity between\
    \ the probing and probed\n   interfaces.  Instead, PROBE requires bidirectional\
    \ connectivity\n   between the probing interface and a proxy interface.  The proxy\n\
    \   interface can reside on the same node as the probed interface, or it\n   can\
    \ reside on a node to which the probed interface is directly\n   connected.  Section\
    \ 5 of this document describes scenarios in which\n   this characteristic is useful.\n\
    \   Like PING, PROBE executes on a probing node.  It sends an ICMP\n   Extended\
    \ Echo Request message from a local interface, called the\n   probing interface,\
    \ to a proxy interface.  The proxy interface resides\n   on a proxy node.\n  \
    \ The ICMP Extended Echo Request contains an ICMP Extension Structure\n   and\
    \ the ICMP Extension Structure contains an Interface Identification\n   Object.\
    \  The Interface Identification Object identifies the probed\n   interface.  The\
    \ probed interface can reside on or directly connect to\n   the proxy node.\n\
    \   When the proxy interface receives the ICMP Extended Echo Request, the\n  \
    \ proxy node executes access control procedures.  If access is granted,\n   the\
    \ proxy node determines the status of the probed interface and\n   returns an\
    \ ICMP Extended Echo Reply message.  The ICMP Extended Echo\n   Reply indicates\
    \ the status of the probed interface.\n   If the probed interface resides on the\
    \ proxy node, PROBE determines\n   the status of the probed interface as it would\
    \ determine its oper-\n   status [RFC7223].  If oper-status is equal to 'up' (1),\
    \ PROBE reports\n   that the probed interface is active.  Otherwise, PROBE reports\
    \ that\n   the probed interface is inactive.\n   If the probed interface resides\
    \ on a node that is directly connected\n   to the proxy node, and the probed interface\
    \ appears in the IPv4\n   Address Resolution Protocol (ARP) table [RFC826] or\
    \ IPv6 Neighbor\n   Cache [RFC4861], PROBE reports interface reachability.  Otherwise,\n\
    \   PROBE reports that the table entry does not exist.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document uses the following terms:\n   o  Probing\
    \ interface: The interface that sends the ICMP Extended Echo\n      Request.\n\
    \   o  Probing node: The node upon which the probing interface resides.\n   o\
    \  Proxy interface: The interface to which the ICMP Extended Echo\n      Request\
    \ message is sent.\n   o  Proxy node: The node upon which the proxy interface\
    \ resides.\n   o  Probed interface: The interface whose status is being queried.\n\
    \   o  Probed node: The node upon which the probed interface resides.  If\n  \
    \    the proxy interface and the probed interface reside upon the same\n     \
    \ node, the proxy node is also the probed node.  Otherwise, the\n      proxy node\
    \ is directly connected to the probed node.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  ICMP Extended Echo Request
  contents:
  - "2.  ICMP Extended Echo Request\n   The ICMP Extended Echo Request message is\
    \ defined for both ICMPv4 and\n   ICMPv6.  Like any ICMP message, the ICMP Extended\
    \ Echo Request\n   message is encapsulated in an IP header.  The ICMPv4 version\
    \ of the\n   Extended Echo Request message is encapsulated in an IPv4 header,\n\
    \   while the ICMPv6 version is encapsulated in an IPv6 header.\n   Figure 1 depicts\
    \ the ICMP Extended Echo Request message.\n       0                   1      \
    \             2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |     Code      |          Checksum             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |Sequence Number|   Reserved  |L|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   ICMP Extension Structure\n               Figure 1: ICMP Extended Echo\
    \ Request Message\n   IP Header fields:\n   o  Source Address: The Source Address\
    \ identifies the probing\n      interface.  It MUST be a valid IPv4 or IPv6 unicast\
    \ address.\n   o  Destination Address: The Destination Address identifies the\
    \ proxy\n      interface.  It MUST be a unicast address.\n   ICMP fields:\n  \
    \ o  Type: Extended Echo Request.  The value for ICMPv4 is 42.  The\n      value\
    \ for ICMPv6 is 160.\n   o  Code: MUST be set to 0 and MUST be ignored upon receipt.\n\
    \   o  Checksum: For ICMPv4, see RFC 792.  For ICMPv6, see RFC 4443.\n   o  Identifier:\
    \ An Identifier to aid in matching Extended Echo Replies\n      to Extended Echo\
    \ Requests.  May be 0.\n   o  Sequence Number: A Sequence Number to aid in matching\
    \ Extended\n      Echo Replies to Extended Echo Requests.  May be 0.\n   o  Reserved:\
    \ This field MUST be set to 0 and ignored upon receipt.\n   o  L (local): The\
    \ L-bit is set if the probed interface resides on the\n      proxy node.  The\
    \ L-bit is clear if the probed interface is\n      directly connected to the proxy\
    \ node.\n   o  ICMP Extension Structure: The ICMP Extension Structure identifies\n\
    \      the probed interface.\n   Section 7 of [RFC4884] defines the ICMP Extension\
    \ Structure.  As per\n   RFC 4884, the Extension Structure contains exactly one\
    \ Extension\n   Header followed by one or more objects.  When applied to the ICMP\n\
    \   Extended Echo Request message, the ICMP Extension Structure MUST\n   contain\
    \ exactly one instance of the Interface Identification Object\n   (see Section\
    \ 2.1).\n   If the L-bit is set, the Interface Identification Object can identify\n\
    \   the probed interface by name, index, or address.  If the L-bit is\n   clear,\
    \ the Interface Identification Object MUST identify the probed\n   interface by\
    \ address.\n   If the Interface Identification Object identifies the probed\n\
    \   interface by address, that address can be a member of any address\n   family.\
    \  For example, an ICMPv4 Extended Echo Request message can\n   carry an Interface\
    \ Identification Object that identifies the probed\n   interface by IPv4, IPv6,\
    \ or IEEE 802 address.  Likewise, an ICMPv6\n   Extended Echo Request message\
    \ can carry an Interface Identification\n   Object that identifies the probed\
    \ interface by IPv4, IPv6, or IEEE\n   802 address.\n"
- title: 2.1.  Interface Identification Object
  contents:
  - "2.1.  Interface Identification Object\n   The Interface Identification Object\
    \ identifies the probed interface\n   by name, index, or address.  Like any other\
    \ ICMP Extension Object, it\n   contains an Object Header and Object Payload.\
    \  The Object Header\n   contains the following fields:\n   o  Class-Num: Interface\
    \ Identification Object.  The value is 3.\n   o  C-Type: Values are (1) Identifies\
    \ Interface by Name, (2)\n      Identifies Interface by Index, and (3) Identifies\
    \ Interface by\n      Address.\n   o  Length: Length of the object, measured in\
    \ octets, including the\n      Object Header and Object Payload.\n   If the Interface\
    \ Identification Object identifies the probed\n   interface by name, the Object\
    \ Payload MUST be the interface name as\n   defined in [RFC7223].  If the Object\
    \ Payload would not otherwise\n   terminate on a 32-bit boundary, it MUST be padded\
    \ with ASCII NULL\n   characters.\n   If the Interface Identification Object identifies\
    \ the probed\n   interface by index, the length is equal to 8 and the payload\
    \ contains\n   the if-index [RFC7223].\n   If the Interface Identification Object\
    \ identifies the probed\n   interface by address, the payload is as depicted in\
    \ Figure 2.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            AFI                | Address Length|   Reserved    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Address   ....\n       Figure 2: Interface Identification\
    \ Object - C-Type 3 Payload\n   Payload fields are defined as follows:\n   o \
    \ Address Family Identifier (AFI): This 16-bit field identifies the\n      type\
    \ of address represented by the Address field.  All values\n      found in the\
    \ IANA registry of Address Family Numbers (available\n      from <https://www.iana.org/assignments/address-family-numbers>)\n\
    \      are valid in this field.\n   o  Address Length: Number of significant bytes\
    \ contained by the\n      Address field.  (The Address field contains significant\
    \ bytes and\n      padding bytes.)\n   o  Reserved: This field MUST be set to\
    \ 0 and ignored upon receipt.\n   o  Address: This variable-length field represents\
    \ an address\n      associated with the probed interface.  If the address field\
    \ would\n      not otherwise terminate on a 32-bit boundary, it MUST be padded\n\
    \      with zeroes.\n"
- title: 3.  ICMP Extended Echo Reply
  contents:
  - "3.  ICMP Extended Echo Reply\n   The ICMP Extended Echo Reply message is defined\
    \ for both ICMPv4 and\n   ICMPv6.  Like any ICMP message, the ICMP Extended Echo\
    \ Reply message\n   is encapsulated in an IP header.  The ICMPv4 version of the\
    \ Extended\n   Echo Reply message is encapsulated in an IPv4 header, while the\n\
    \   ICMPv6 version is encapsulated in an IPv6 header.\n   Figure 3 depicts the\
    \ ICMP Extended Echo Reply message.\n       0                   1            \
    \       2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |     Code      |          Checksum             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |Sequence Number|State|Res|A|4|6|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 3: ICMP Extended Echo Reply Message\n   IP Header fields:\n\
    \   o  Source Address: Copied from the Destination Address field of the\n    \
    \  invoking Extended Echo Request message.\n   o  Destination Address: Copied\
    \ from the Source Address field of the\n      invoking Extended Echo Request message.\n\
    \   ICMP fields:\n   o  Type: Extended Echo Reply.  The value for ICMPv4 is 43.\
    \  The value\n      for ICMPv6 is 161.\n   o  Code: Values are (0) No Error, (1)\
    \ Malformed Query, (2) No Such\n      Interface, (3) No Such Table Entry, and\
    \ (4) Multiple Interfaces\n      Satisfy Query.\n   o  Checksum: For ICMPv4, see\
    \ RFC 792.  For ICMPv6, see RFC 4443.\n   o  Identifier: Copied from the Identifier\
    \ field of the invoking\n      Extended Echo Request packet.\n   o  Sequence Number:\
    \ Copied from the Sequence Number field of the\n      invoking Extended Echo Request\
    \ packet.\n   o  State: If Code is not equal to 0, this field MUST be set to 0\
    \ and\n      ignored upon receipt.  Likewise, if the probed interface resides\n\
    \      upon the proxy node, this field MUST be set to 0 and ignored upon\n   \
    \   receipt.  Otherwise, this field reflects the state of the ARP\n      table\
    \ or Neighbor Cache entry associated with the probed\n      interface.  Values\
    \ are (0) Reserved, (1) Incomplete, (2)\n      Reachable, (3) Stale, (4) Delay,\
    \ (5) Probe, and (6) Failed.\n   o  Res: This field MUST be set to 0 and ignored\
    \ upon receipt.\n   o  A (Active): The A-bit is set if the Code is equal to 0,\
    \ the probed\n      interface resides on the proxy node, and the probed interface\
    \ is\n      active.  Otherwise, the A-bit is clear.\n   o  4 (IPv4): The 4-bit\
    \ is set if the A-bit is also set and IPv4 is\n      running on the probed interface.\
    \  Otherwise, the 4-bit is clear.\n   o  6 (IPv6): The 6-bit is set if the A-bit\
    \ is also set and IPv6 is\n      running on the probed interface.  Otherwise,\
    \ the 6-bit is clear.\n"
- title: 4.  ICMP Message Processing
  contents:
  - "4.  ICMP Message Processing\n   When a node receives an ICMP Extended Echo Request\
    \ message and any of\n   the following conditions apply, the node MUST silently\
    \ discard the\n   incoming message:\n   o  The node does not recognize ICMP Extended\
    \ Echo Request messages.\n   o  The node has not explicitly enabled ICMP Extended\
    \ Echo\n      functionality.\n   o  The incoming ICMP Extend Echo Request carries\
    \ a Source Address\n      that is not explicitly authorized for the L-bit setting\
    \ of the\n      incoming ICMP Extended Echo Request.\n   o  The incoming ICMP\
    \ Extend Echo Request carries a Source Address\n      that is not explicitly authorized\
    \ for the incoming ICMP Extended\n      Echo Request type (i.e., by ifName, by\
    \ IfIndex, or by Address).\n   o  The Source Address of the incoming message is\
    \ not a unicast\n      address.\n   o  The Destination Address of the incoming\
    \ message is a multicast\n      address.\n   Otherwise, when a node receives an\
    \ ICMPv4 Extended Echo Request, it\n   MUST format an ICMP Extended Echo Reply\
    \ as follows:\n   o  Don't Fragment (DF) flag is 1\n   o  More Fragments flag\
    \ is 0\n   o  Fragment Offset is 0\n   o  TTL is 255\n   o  Protocol is ICMP\n\
    \   When a node receives an ICMPv6 Extended Echo Request, it MUST format\n   an\
    \ ICMPv6 Extended Echo Reply as follows:\n   o  Hop Limit is 255\n   o  Next Header\
    \ is ICMPv6\n   In either case, the responding node MUST do the following:\n \
    \  o  Copy the Source Address from the Extended Echo Request message to\n    \
    \  the Destination Address of the Extended Echo Reply.\n   o  Copy the Destination\
    \ Address from the Extended Echo Request\n      message to the Source Address\
    \ of the Extended Echo Reply.\n   o  Set the DiffServ codepoint to CS0 [RFC4594].\n\
    \   o  Set the ICMP Type to Extended Echo Reply.\n   o  Copy the Identifier from\
    \ the Extended Echo Request message to the\n      Extended Echo Reply.\n   o \
    \ Copy the Sequence Number from the Extended Echo Request message to\n      the\
    \ Extended Echo Reply.\n   o  Set the Code field as described in Section 4.1.\n\
    \   o  Set the State field to 0.\n   o  Clear the A-bit, the 4-bit, and the 6-bit.\n\
    \   o  If (1) the Code Field is equal to (0) No Error, (2) the L-bit is\n    \
    \  set, and (3) the probed interface is active, set the A-bit.  Also,\n      set\
    \ the 4-bit and the 6-bit as appropriate.\n   o  If the Code field is equal to\
    \ (0) No Error and the L-bit is clear,\n      then set the State field to reflect\
    \ the state of the ARP table or\n      Neighbor Cache entry that represents the\
    \ probed interface.\n   o  Set the Checksum appropriately.\n   o  Forward the\
    \ ICMP Extended Echo Reply to its destination.\n"
- title: 4.1.  Code Field Processing
  contents:
  - "4.1.  Code Field Processing\n   The Code field MUST be set to (1) Malformed Query\
    \ if any of the\n   following conditions apply:\n   o  The ICMP Extended Echo\
    \ Request does not include an ICMP Extension\n      Structure.\n   o  The ICMP\
    \ Extension Structure does not include exactly one\n      Interface Identification\
    \ Object.\n   o  The L-bit is clear and the Interface Identification Object\n\
    \      identifies the probed interface by ifName or ifIndex.\n   o  The query\
    \ is otherwise malformed.\n   The Code field MUST be set to (2) No Such Interface\
    \ if the L-bit is\n   set and the ICMP Extension Structure does not identify an\
    \ interface\n   that resides on the proxy node.\n   The Code field MUST be set\
    \ to (3) No Such Table Entry if the L-bit is\n   clear and the address found in\
    \ the Interface Identification Object\n   does not appear in the IPv4 Address\
    \ Resolution Protocol (ARP) table\n   or the IPv6 Neighbor Cache.\n   The Code\
    \ field MUST be set to (4) Multiple Interfaces Satisfy Query\n   if any of the\
    \ following conditions apply:\n   o  The L-bit is set and the ICMP Extension Structure\
    \ identifies more\n      than one interface that resides in the proxy node.\n\
    \   o  The L-bit is clear and the address found in the Interface\n      Identification\
    \ Object maps to multiple IPv4 ARP or IPv6 Neighbor\n      Cache entries.\n  \
    \ Otherwise, the Code field MUST be set to (0) No Error.\n"
- title: 5.  Use Cases
  contents:
  - "5.  Use Cases\n   In the scenarios listed below, network operators can use PROBE\
    \ to\n   determine the status of a probed interface but cannot use PING for\n\
    \   the same purpose.  In all scenarios, assume bidirectional\n   connectivity\
    \ between the probing and proxy interfaces.  However,\n   bidirectional connectivity\
    \ between the probing and probed interfaces\n   is lacking.\n   o  The probed\
    \ interface is unnumbered.\n   o  The probing and probed interfaces are not directly\
    \ connected to\n      one another.  The probed interface has an IPv6 link-local\
    \ address\n      but does not have a more globally scoped address.\n   o  The\
    \ probing interface runs IPv4 only while the probed interface\n      runs IPv6\
    \ only.\n   o  The probing interface runs IPv6 only while the probed interface\n\
    \      runs IPv4 only.\n   o  For lack of a route, the probing node cannot reach\
    \ the probed\n      interface.\n"
- title: 6.  Updates to RFC 4884
  contents:
  - "6.  Updates to RFC 4884\n   Section 4.6 of [RFC4884] provides a list of extensible\
    \ ICMP messages\n   (i.e., messages that can carry the ICMP Extension Structure).\
    \  This\n   document adds the ICMP Extended Echo Request message and the ICMP\n\
    \   Extended Echo Reply message to that list.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has performed the following actions:\n   o \
    \ Added the following to the \"ICMP Type Numbers\" registry:\n         42 Extended\
    \ Echo Request\n      Added the following to the \"Type 42 - Extended Echo Request\"\
    \n      subregistry:\n         (0) No Error\n   o  Added the following to the\
    \ \"ICMPv6 'type' Numbers\" registry:\n         160 Extended Echo Request\n  \
    \       As ICMPv6 distinguishes between informational and error\n         messages,\
    \ and this is an informational message, the value has\n         been assigned\
    \ from the range 128-255.\n      Added the following to the \"Type 160 - Extended\
    \ Echo Request\"\n      subregistry:\n         (0) No Error\n   o  Added the following\
    \ to the \"ICMP Type Numbers\" registry:\n         43 Extended Echo Reply\n  \
    \    Added the following to the \"Type 43 - Extended Echo Reply\"\n      subregistry:\n\
    \         (0) No Error\n         (1) Malformed Query\n         (2) No Such Interface\n\
    \         (3) No Such Table Entry\n         (4) Multiple Interfaces Satisfy Query\n\
    \   o  Added the following to the \"ICMPv6 'type' Numbers\" registry:\n      \
    \   161 Extended Echo Reply\n         As ICMPv6 distinguishes between informational\
    \ and error\n         messages, and this is an informational message, the value\
    \ has\n         been assigned from the range 128-255.\n      Added the following\
    \ to the \"Type 161 - Extended Echo Reply\"\n      subregistry:\n         (0)\
    \ No Error\n         (1) Malformed Query\n         (2) No Such Interface\n   \
    \      (3) No Such Table Entry\n         (4) Multiple Interfaces Satisfy Query\n\
    \   o  Added the following to the \"ICMP Extension Object Classes and\n      Class\
    \ Sub-types\" registry:\n         (3) Interface Identification Object\n      Added\
    \ the following C-types to the \"Sub-types - Class 3 -\n      Interface Identification\
    \ Object\" subregistry:\n         (0) Reserved\n         (1) Identifies Interface\
    \ by Name\n         (2) Identifies Interface by Index\n         (3) Identifies\
    \ Interface by Address\n      C-Type values are assigned on a First Come First\
    \ Serve (FCFS)\n      basis with a range of 0-255.\n   All codes mentioned above\
    \ are assigned on an FCFS basis with a range\n   of 0-255.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The following are legitimate uses of PROBE:\n\
    \   o  to determine the operational status of an interface.\n   o  to determine\
    \ which protocols (e.g., IPv4 or IPv6) are active on an\n      interface.\n  \
    \ However, malicious parties can use PROBE to obtain additional\n   information.\
    \  For example, a malicious party can use PROBE to\n   discover interface names.\
    \  Having discovered an interface name, the\n   malicious party may be able to\
    \ infer additional information.\n   Additional information may include:\n   o\
    \  interface bandwidth\n   o  the type of device that supports the interface (e.g.,\
    \ vendor\n      identity)\n   o  the operating system version that the above-mentioned\
    \ device\n      executes\n   Understanding this risk, network operators establish\
    \ policies that\n   restrict access to ICMP Extended Echo functionality.  In order\
    \ to\n   enforce these policies, nodes that support ICMP Extended Echo\n   functionality\
    \ MUST support the following configuration options:\n   o  Enable/disable ICMP\
    \ Extended Echo functionality.  By default, ICMP\n      Extend Echo functionality\
    \ is disabled.\n   o  Define enabled L-bit settings.  By default, the option to\
    \ set the\n      L-bit is enabled and the option to clear the L-bit is disabled.\n\
    \   o  Define enabled query types (i.e., by name, by index, or by\n      address);\
    \ by default, all query types are disabled.\n   o  For each enabled query type,\
    \ define the prefixes from which ICMP\n      Extended Echo Request messages are\
    \ permitted.\n   o  For each interface, determine whether ICMP Echo Request messages\n\
    \      are accepted.\n   When a node receives an ICMP Extended Echo Request message\
    \ that it is\n   not configured to support, it MUST silently discard the message.\
    \  See\n   Section 4 for details.\n   PROBE must not leak information about one\
    \ Virtual Private Network\n   (VPN) into another.  Therefore, when a node receives\
    \ an ICMP Extended\n   Echo Request and the proxy interface is in a different\
    \ VPN than the\n   probed interface, the node MUST return an ICMP Extended Echo\
    \ Reply\n   with error code equal to (2) No Such Interface.\n   In order to protect\
    \ local resources, implementations SHOULD rate-\n   limit incoming ICMP Extended\
    \ Echo Request messages.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC792]   Postel, J., \"Internet Control Message\
    \ Protocol\", STD 5,\n              RFC 792, DOI 10.17487/RFC0792, September 1981,\n\
    \              <https://www.rfc-editor.org/info/rfc792>.\n   [RFC826]   Plummer,\
    \ D., \"Ethernet Address Resolution Protocol: Or\n              Converting Network\
    \ Protocol Addresses to 48.bit Ethernet\n              Address for Transmission\
    \ on Ethernet Hardware\", STD 37,\n              RFC 826, DOI 10.17487/RFC0826,\
    \ November 1982,\n              <https://www.rfc-editor.org/info/rfc826>.\n  \
    \ [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n          \
    \    Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC4443]\
    \  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n              Control\
    \ Message Protocol (ICMPv6) for the Internet\n              Protocol Version 6\
    \ (IPv6) Specification\", STD 89,\n              RFC 4443, DOI 10.17487/RFC4443,\
    \ March 2006,\n              <https://www.rfc-editor.org/info/rfc4443>.\n   [RFC4861]\
    \  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor\
    \ Discovery for IP version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc4861>.\n\
    \   [RFC4884]  Bonica, R., Gan, D., Tappan, D., and C. Pignataro,\n          \
    \    \"Extended ICMP to Support Multi-Part Messages\", RFC 4884,\n           \
    \   DOI 10.17487/RFC4884, April 2007,\n              <https://www.rfc-editor.org/info/rfc4884>.\n\
    \   [RFC7223]  Bjorklund, M., \"A YANG Data Model for Interface\n            \
    \  Management\", RFC 7223, DOI 10.17487/RFC7223, May 2014,\n              <https://www.rfc-editor.org/info/rfc7223>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC2151]  Kessler, G. and S. Shepard, \"A Primer\
    \ On Internet and TCP/\n              IP Tools and Utilities\", FYI 30, RFC 2151,\n\
    \              DOI 10.17487/RFC2151, June 1997,\n              <https://www.rfc-editor.org/info/rfc2151>.\n\
    \   [RFC4594]  Babiarz, J., Chan, K., and F. Baker, \"Configuration\n        \
    \      Guidelines for DiffServ Service Classes\", RFC 4594,\n              DOI\
    \ 10.17487/RFC4594, August 2006,\n              <https://www.rfc-editor.org/info/rfc4594>.\n"
- title: Appendix A.  The PROBE Application
  contents:
  - "Appendix A.  The PROBE Application\n   The PROBE application accepts input parameters,\
    \ sets a counter, and\n   enters a loop to be exited when the counter is equal\
    \ to 0.  On each\n   iteration of the loop, PROBE emits an ICMP Extended Echo\
    \ Request,\n   decrements the counter, sets a timer, and waits.  The ICMP Extended\n\
    \   Echo Request includes an Identifier and a Sequence Number.\n   If an ICMP\
    \ Extended Echo Reply carrying the same Identifier and\n   Sequence Number arrives,\
    \ PROBE relays information returned by that\n   message to its user.  However,\
    \ on each iteration of the loop, PROBE\n   waits for the timer to expire regardless\
    \ of whether an Extended Echo\n   Reply message arrives.\n   PROBE accepts the\
    \ following parameters:\n   o  Count\n   o  Wait\n   o  Probing Interface Address\n\
    \   o  Hop Count\n   o  Proxy Interface Address\n   o  Local\n   o  Probed Interface\
    \ Identifier\n   Count is a positive integer whose default value is 3.  Count\n\
    \   determines the number of times that PROBE iterates through the above-\n  \
    \ mentioned loop.\n   Wait is a positive integer whose minimum and default values\
    \ are 1.\n   Wait determines the duration of the above-mentioned timer, measured\n\
    \   in seconds.\n   Probing Interface Address specifies the Source Address of\
    \ the ICMP\n   Extended Echo Request.  The Probing Interface Address MUST be a\n\
    \   unicast address and MUST identify an interface that resides on the\n   probing\
    \ node.\n   The Proxy Interface Address identifies the interface to which the\n\
    \   ICMP Extended Echo Request message is sent.  It must be an IPv4 or\n   IPv6\
    \ unicast address.  If it is an IPv4 address, PROBE emits an\n   ICMPv4 message.\
    \  If it is an IPv6 address, PROBE emits an ICMPv6\n   message.\n   Local is a\
    \ boolean value.  It is TRUE if the proxy and probed\n   interfaces both reside\
    \ on the same node.  Otherwise, it is FALSE.\n   The Probed Interface Identifier\
    \ identifies the probed interface.  It\n   is one of the following:\n   o  an\
    \ interface name;\n   o  an address from any address family (e.g., IPv4, IPv6,\
    \ IEEE 802,\n      48-bit MAC, or 64-bit MAC); or\n   o  an if-index.\n   If the\
    \ Probed Interface Identifier is an address, it does not need to\n   be of the\
    \ same address family as the proxy interface address.  For\n   example, PROBE\
    \ accepts an IPv4 Proxy Interface Address and an IPv6\n   Probed Interface Identifier.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Sowmini Varadhan, Jeff Haas, Carlos Pignataro,\
    \ Jonathan\n   Looney, Dave Thaler, Mikio Hara, Joel Halpern, Yaron Sheffer, Stefan\n\
    \   Winter, Jean-Michel Combes, Amanda Barber, and Joe Touch for their\n   thoughtful\
    \ review of this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ron Bonica\n   Juniper Networks\n   2251 Corporate Park\
    \ Drive\n   Herndon, Virginia  20171\n   United States of America\n   Email: rbonica@juniper.net\n\
    \   Reji Thomas\n   Juniper Networks\n   Elnath-Exora Business Park Survey\n \
    \  Bangalore, Karnataka  560103\n   India\n   Email: rejithomas@juniper.net\n\
    \   Jen Linkova\n   Google\n   1600 Amphitheatre Parkway\n   Mountain View, California\
    \  94043\n   United States of America\n   Email: furry@google.com\n   Chris Lenart\n\
    \   Verizon\n   22001 Loudoun County Parkway\n   Ashburn, Virginia  20147\n  \
    \ United States of America\n   Email: chris.lenart@verizon.com\n   Mohamed Boucadair\n\
    \   Orange\n   Rennes 35000\n   France\n   Email: mohamed.boucadair@orange.com\n"
