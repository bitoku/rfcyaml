- title: __initial_text__
  contents:
  - '      Detecting Inactive Neighbors over OSPF Demand Circuits (DC)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   OSPF is a link-state intra-domain routing protocol used in IP\n\
    \   networks.  OSPF behavior over demand circuits (DC) is optimized in\n   RFC\
    \ 1793 to minimize the amount of overhead traffic.  A part of the\n   OSPF demand\
    \ circuit extensions is the Hello suppression mechanism.\n   This technique allows\
    \ a demand circuit to go down when no interesting\n   traffic is going through\
    \ the link.  However, it also introduces a\n   problem, where it becomes impossible\
    \ to detect an OSPF-inactive\n   neighbor over such a link.  This memo introduces\
    \ a new mechanism\n   called \"neighbor probing\" to address the above problem.\n"
- title: 1.  Motivation
  contents:
  - "1.  Motivation\n   In some situations, when operating over demand circuits, the\
    \ remote\n   neighbor may be unable to run OSPF [RFC2328], and, as a possible\n\
    \   result, unable to route application traffic.  Possible scenarios\n   include:\n\
    \   o  The OSPF process might have died on the remote neighbor.\n   o  Oversubscription\
    \ (Section 7 of [RFC1793]) may cause a continuous\n      drop of application data\
    \ at the link level.\n   The problem here is that the local router cannot identify\
    \ problems\n   such as this, since the Hello exchange is suppressed on demand\n\
    \   circuits.  If the topology of the network is such that other routers\n   cannot\
    \ communicate their knowledge about the remote neighbor via\n   flooding, the\
    \ local router and all the routers behind it will never\n   know about the problem,\
    \ so application traffic may continue being\n   forwarded to the OSPF-incapable\
    \ router.\n   This memo describes a backward-compatible neighbor probing mechanism\n\
    \   based on the details of the standard flooding procedure followed by\n   OSPF\
    \ routers.\n"
- title: 2.  Proposed Solution
  contents:
  - "2.  Proposed Solution\n   The solution this document proposes uses the link-state\
    \ update\n   packets to detect whether the OSPF process is operational on the\n\
    \   remote neighbor.  We call this process \"Neighbor probing\".  The idea\n \
    \  behind this technique is to allow either of the two neighbors\n   connected\
    \ over a demand circuit to test the remote neighbor at any\n   time (see Section\
    \ 2.1).\n   The routers across the demand circuit can be connected by either a\n\
    \   point-to-point link, a virtual link, or a point-to-multipoint\n   interface.\
    \  The case of routers connected by broadcast networks or\n   Non-Broadcast Multi-Access\
    \ (NBMA) links is not considered, since\n   Hello suppression is not used in these\
    \ cases (Section 3.2 [RFC1793]).\n   The neighbor probing mechanism is used as\
    \ follows.  After a router\n   has synchronized the Link State Database (LSDB)\
    \ with its neighbor\n   over the demand circuit, the demand circuit may be torn\
    \ down if there\n   is no more application traffic.  When application traffic\
    \ starts\n   going over the link, the link is brought up.  If ospfIfDemandNbrProbe\n\
    \   is enabled, the routers SHOULD probe each other.  While the link is\n   up,\
    \ the routers may also periodically probe each other every\n   ospfIfDemandNbrProbeInterval.\
    \  Neighbor probing should not be\n   considered as interesting traffic and should\
    \ not cause the demand\n   circuit to remain up (relevant details of implementation\
    \ are outside\n   of the scope of this document).\n   The case when one or more\
    \ of the router's links are oversubscribed\n   (see section 7 of [RFC1793]) should\
    \ be considered by the\n   implementations.  In such a situation, even if the\
    \ link status is up\n   and application data is being sent on the link, only a\
    \ limited number\n   of neighbors are really reachable.  To make sure temporarily\n\
    \   unreachable neighbors are not mistakenly declared down, Neighbor\n   probing\
    \ should be restricted to those neighbors that are actually\n   reachable (i.e.,\
    \ there is a circuit established with the neighbor at\n   the moment the probing\
    \ procedure needs to be initiated).  This check\n   itself is also considered\
    \ an implementation detail.\n"
- title: 2.1.  Neighbor Probing
  contents:
  - "2.1.  Neighbor Probing\n   The neighbor probing method described in this section\
    \ is completely\n   compatible with standard OSPF implementations, because it\
    \ is based on\n   standard behavior that must be followed by OSPF implementations\
    \ in\n   order to keep their LSDBs synchronized.\n   When a router needs to verify\
    \ the OSPF capability of a neighbor\n   reachable through a demand circuit, it\
    \ should flood to the neighbor\n   any LSA in its LSDB that would normally be\
    \ sent to the neighbor\n   during the initial LSDB synchronization process (in\
    \ most cases, such\n   an LSA must have already been flooded to the neighbor by\
    \ the time the\n   probing procedure starts).  For example, the router may flood\
    \ its own\n   router-LSA (without originating a new version), or the neighbor's\
    \ own\n   router-LSA.  If the neighbor is still alive and OSPF-capable, it\n \
    \  replies with a link state acknowledgement or a link state update (an\n   implied\
    \ acknowledgement), and the LSA is removed from the neighbor's\n   retransmission\
    \ list.  The implementations should limit the number of\n   times an LSA can be\
    \ retransmitted to ospfIfDemandNbrProbeRetxLimit,\n   when used for neighbor probing.\
    \  If no acknowledgement (explicit or\n   implicit) is received for a predefined\
    \ period of time, the probing\n   router should treat this as evidence of the\
    \ neighbor's unreachability\n   (proving wrong the assumption of reachability\
    \ used in [RFC1793]) and\n   should bring the adjacency down.\n   Note that when\
    \ the neighbor being probed receives such a link state\n   update packet, the\
    \ received LSA has the same contents as the LSA in\n   the neighbor's LSDB, and\
    \ hence should normally not cause any\n   additional flooding.  However, since\
    \ LSA refreshes are not flooded\n   over demand circuits, the received LSA may\
    \ have a higher Sequence\n   Number.  This will result in the first probe LSA\
    \ being flooded\n   further by the neighbor.  Note that if the current version\
    \ of the\n   probe LSA has already been flooded to the neighbor, it will not be\n\
    \   propagated any further by the neighbor.  Also note that in any case,\n   subsequent\
    \ (non-first) probe LSAs will not cause further flooding\n   until the LSA's sequence\
    \ number is incremented.\n   Again, the implementation should insure (through\
    \ internal mechanisms)\n   that OSPF link state update packets sent over the demand\
    \ circuit for\n   the purpose of neighbor probing do not prevent that circuit\
    \ from\n   being torn down.\n"
- title: 3.  Support of Virtual Links and Point-to-multipoint Interfaces
  contents:
  - "3.  Support of Virtual Links and Point-to-multipoint Interfaces\n   Virtual links\
    \ can be treated analogously to point-to-point links, so\n   the techniques described\
    \ in this memo are applicable to virtual links\n   as well.  The case of point-to-multipoint\
    \ interface running as a\n   demand circuit (section 3.5 [RFC1793]) can be treated\
    \ as individual\n   point-to-point links, for which the solution has been described\
    \ in\n   section 2.\n"
- title: 4.  Compatibility Issues
  contents:
  - "4.  Compatibility Issues\n   All mechanisms described in this document are backward-compatible\n\
    \   with standard OSPF implementations.\n"
- title: 5.  Deployment Considerations
  contents:
  - "5.  Deployment Considerations\n   In addition to the lost functionality mentioned\
    \ in Section 6 of\n   [RFC1793], there is additional overhead in terms of the\
    \ amount of\n   data (link state updates and acknowledgements) being transmitted\
    \ due\n   to neighbor probing whenever the link is up, thereby increasing the\n\
    \   overall cost.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The original idea of limiting the number of LSA retransmissions\
    \ on\n   demand circuits (used as part of the solution described in this\n   document)\
    \ and its implementation belong to Padma Pillay-Esnault and\n   Derek Yeung.\n\
    \   The authors would like to thank John Moy, Vijayapal Reddy Patil, SVR\n   Anand,\
    \ and Peter Psenak for their comments on this work.\n   A significant portion\
    \ of Sira's work was carried out as part of the\n   HFCL-IISc Research Project\
    \ (HIRP), Bangalore, India.  He would like\n   to thank the team for their insightful\
    \ discussions.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The mechanism described in this document does\
    \ not modify security\n   aspects of the OSPF routing protocol.\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [RFC2328] Moy, J., \"OSPF Version 2\", STD 54, RFC\
    \ 2328, April 1998.\n   [RFC1793] Moy, J., \"Extending OSPF to Support Demand\
    \ Circuits\", RFC\n             1793, April 1995.\n"
- title: Appendix A.  Configurable Parameters
  contents:
  - "Appendix A.  Configurable Parameters\n   This memo defines the following additional\
    \ configuration parameters\n   for OSPF interfaces.\n      ospfIfDemandNbrProbe\n\
    \         Indicates whether or not neighbor probing is enabled to\n         determine\
    \ whether the neighbor is inactive.  Neighbor probing\n         is disabled by\
    \ default.\n      ospfIfDemandNbrProbeRetxLimit\n         The number of consecutive\
    \ LSA retransmissions before the\n         neighbor is deemed inactive and the\
    \ neighbor adjacency is\n         brought down.  Sample value is 10 consecutive\
    \ LSA\n         retransmissions.\n      ospfIfDemandNbrProbeInterval\n       \
    \  Defines how often the neighbor will be probed.  The sample\n         value\
    \ is 2 minutes.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Sira Panduranga Rao\n   The University of Texas at Arlington\n\
    \   416 Yates Street, 300 Nedderman Hall\n   Arlington, TX 76019\n   EMail: siraprao@hotmail.com\n\
    \   Alex Zinin\n   Alcatel\n   701 E Middlefield Rd\n   Mountain View, CA 94043\n\
    \   EMail: zinin@psg.com\n   Abhay Roy\n   Cisco Systems\n   170 W. Tasman Dr.\n\
    \   San Jose,CA 95134\n   EMail: akr@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n   REPRESENTS\
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
