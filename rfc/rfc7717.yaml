- contents:
  - "                  IKEv2-Derived Shared Secret Key for\n          the One-Way
    Active Measurement Protocol (OWAMP) and\n              Two-Way Active Measurement
    Protocol (TWAMP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The One-Way Active Measurement Protocol (OWAMP) and Two-Way Active\n
    \  Measurement Protocol (TWAMP) security mechanisms require that both\n   the
    client and server endpoints possess a shared secret.  This\n   document describes
    the use of keys derived from an IKEv2 security\n   association (SA) as the shared
    key in OWAMP or TWAMP.  If the shared\n   key can be derived from the IKEv2 SA,
    OWAMP or TWAMP can support\n   certificate-based key exchange; this would allow
    for more operational\n   flexibility and efficiency.  The key derivation presented
    in this\n   document can also facilitate automatic key management.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7717.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   4\n   3.  Scope . . . . . . . . . . . . . . . . . . . . . . . . . . .
    .   5\n   4.  O/TWAMP Security  . . . . . . . . . . . . . . . . . . . . . .   5\n
    \    4.1.  O/TWAMP-Control Security  . . . . . . . . . . . . . . . .   5\n     4.2.
    \ O/TWAMP-Test Security . . . . . . . . . . . . . . . . . .   6\n     4.3.  O/TWAMP
    Security Root . . . . . . . . . . . . . . . . . .   7\n   5.  O/TWAMP for IPsec
    Networks  . . . . . . . . . . . . . . . . .   7\n     5.1.  Shared Key Derivation
    . . . . . . . . . . . . . . . . . .   7\n     5.2.  Server Greeting Message Update
    \ . . . . . . . . . . . . .   8\n     5.3.  Set-Up-Response Update  . . . . .
    . . . . . . . . . . . .   9\n     5.4.  O/TWAMP over an IPsec Tunnel  . . . .
    . . . . . . . . . .  11\n   6.  Security Considerations . . . . . . . . . . .
    . . . . . . . .  11\n   7.  IANA Considerations . . . . . . . . . . . . . . .
    . . . . . .  11\n   8.  References  . . . . . . . . . . . . . . . . . . . . .
    . . . .  12\n     8.1.  Normative References  . . . . . . . . . . . . . . . .
    . .  12\n     8.2.  Informative References  . . . . . . . . . . . . . . . . .
    \ 13\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  14\n
    \  Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  15\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The One-Way Active Measurement Protocol (OWAMP) [RFC4656]
    and the\n   Two-Way Active Measurement Protocol (TWAMP) [RFC5357] can be used
    to\n   measure network performance parameters such as latency, bandwidth,\n   and
    packet loss by sending probe packets and monitoring their\n   experience in the
    network.  In order to guarantee the accuracy of\n   network measurement results,
    security aspects must be considered.\n   Otherwise, attacks may occur and the
    authenticity of the measurement\n   results may be violated.  For example, if
    no protection is provided,\n   an adversary in the middle may modify packet timestamps,
    thus\n   altering the measurement results.\n   According to [RFC4656] and [RFC5357],
    the OWAMP and TWAMP (O/TWAMP)\n   security mechanisms require that endpoints (i.e.,
    both the client and\n   the server) possess a shared secret.  In today's network
    deployments,\n   however, the use of pre-shared keys is far from optimal.  For\n
    \  example, in wireless infrastructure networks, certain network\n   elements
    (which can be seen as the two endpoints from an O/TWAMP\n   perspective) support
    certificate-based security.  For instance,\n   consider the case in which one
    wants to measure IP performance\n   between an E-UTRAN Evolved Node B (eNB) and
    Security Gateway (SeGW),\n   both of which are 3GPP Long Term Evolution (LTE)
    nodes and support\n   certificate mode and the Internet Key Exchange Protocol
    version 2\n   (IKEv2).\n   The O/TWAMP security mechanism specified in [RFC4656]
    and [RFC5357]\n   supports the pre-shared key (PSK) mode only, hindering large-scale\n
    \  deployment of O/TWAMP: provisioning and management of \"shared\n   secrets\"
    for massive deployments consumes a tremendous amount of\n   effort and is prone
    to human error.  At the same time, recent trends\n   point to wider IKEv2 deployment
    that, in turn, calls for mechanisms\n   and methods that enable tunnel end-users,
    as well as operators, to\n   measure one-way and two-way network performance in
    a standardized\n   manner.\n   With IKEv2 widely deployed, employing shared keys
    derived from an\n   IKEv2 security association (SA) can be considered a viable\n
    \  alternative through the method described in this document.  If the\n   shared
    key can be derived from the IKEv2 SA, O/TWAMP can support\n   certificate-based
    key exchange and practically increase operational\n   flexibility and efficiency.
    \ The use of IKEv2 also makes it easier to\n   extend automatic key management.\n
    \  In general, O/TWAMP measurement packets can be transmitted inside the\n   IPsec
    tunnel, as typical user traffic is, or transmitted outside the\n   IPsec tunnel.
    \ This may depend on the operator's policy and the\n   performance evaluation
    goal, and it is orthogonal to the mechanism\n   described in this document.  When
    IPsec is deployed, protecting\n   O/TWAMP traffic in unauthenticated mode using
    IPsec is one option.\n   Another option is to protect O/TWAMP traffic using the
    O/TWAMP\n   security established using the PSK derived from IKEv2 and bypassing\n
    \  the IPsec tunnel.\n   Protecting unauthenticated O/TWAMP control and/or test
    traffic via\n   the Authentication Header (AH) [RFC4302] or Encapsulating Security\n
    \  Payload (ESP) [RFC4303] cannot provide various security options,\n   e.g.,
    it cannot authenticate part of an O/TWAMP packet as mentioned\n   in [RFC4656].
    \ For measuring latency, a timestamp is carried in O/\n   TWAMP test traffic.
    \ The sender has to fetch the timestamp, encrypt\n   it, and send it.  When the
    mechanism described in this document is\n   used, partial authentication of O/TWAMP
    packets is possible and\n   therefore the middle step can be skipped, potentially
    improving\n   accuracy as the sequence number can be encrypted and authenticated\n
    \  before the timestamp is fetched.  The receiver obtains the timestamp\n   without
    the need for the corresponding decryption step.  In such\n   cases, protecting
    O/TWAMP traffic using O/TWAMP security but\n   bypassing the IPsec tunnel has
    its advantages.\n   This document specifies a method for enabling network measurements\n
    \  between a TWAMP client and a TWAMP server.  In short, the shared key\n   used
    for securing TWAMP traffic is derived from IKEv2 [RFC7296].\n   TWAMP implementations
    signal the use of this method by setting\n   IKEv2Derived (see Section 7).  IKEv2-derived
    keys SHOULD be used\n   instead of shared secrets when O/TWAMP is employed in
    a deployment\n   using IKEv2.  From an operations and management perspective\n
    \  [RFC5706], the mechanism described in this document requires that\n   both
    the TWAMP Control-Client and Server support IPsec.\n   The remainder of this document
    is organized as follows.  Section 4\n   summarizes O/TWAMP protocol operation
    with respect to security.\n   Section 5 presents the method for binding TWAMP
    and IKEv2 for network\n   measurements between the client and the server that
    both support\n   IKEv2.  Finally, Section 6 discusses the security considerations\n
    \  arising from the proposed mechanisms.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Terminology
- contents:
  - "3.  Scope\n   This document specifies a method using keys derived from an IKEv2
    SA\n   as the shared key in O/TWAMP.  O/TWAMP implementations signal the use\n
    \  of this method by setting IKEv2Derived (see Section 7).\n"
  title: 3.  Scope
- contents:
  - "4.  O/TWAMP Security\n   Security for O/TWAMP-Control and O/TWAMP-Test are briefly
    reviewed in\n   the following subsections.\n"
  - contents:
    - "4.1.  O/TWAMP-Control Security\n   O/TWAMP uses a simple cryptographic protocol
      that relies on\n   o  AES-CBC for confidentiality\n   o  HMAC-SHA1 truncated
      to 128 bits for message authentication\n   Three modes of operation are supported
      in the OWAMP-Control protocol:\n   unauthenticated, authenticated, and encrypted.
      \ In addition to these\n   modes, the TWAMP-Control protocol also supports a
      mixed mode, i.e.,\n   the TWAMP-Control protocol operates in encrypted mode
      while TWAMP-\n   Test protocol operates in unauthenticated mode.  The authenticated,\n
      \  encrypted, and mixed modes require that endpoints possess a shared\n   secret,
      typically a passphrase.  The secret key is derived from the\n   passphrase using
      a password-based key derivation function PBKDF2\n   (PKCS #5) [RFC2898].\n   In
      the unauthenticated mode, the security parameters are left unused.\n   In the
      authenticated, encrypted, and mixed modes, the security\n   parameters are negotiated
      during the control connection\n   establishment.\n   Figure 1 illustrates the
      initiation stage of the O/TWAMP-Control\n   protocol between a Control-Client
      and a Server.  In short, the\n   Control-Client opens a TCP connection to the
      Server in order to be\n   able to send O/TWAMP-Control commands.  The Server
      responds with a\n   Server Greeting, which contains the Modes, Challenge, Salt,
      Count,\n   and MBZ (\"MUST be zero\") fields (see Section 3.1 of [RFC4656]).
      \ If\n   the Control-Client preferred mode is available, the client responds\n
      \  with a Set-Up-Response message, wherein the selected Mode, as well as\n   the
      KeyID, Token, and Client initialization vector (IV) are included.\n   The Token
      is the concatenation of a 16-octet Challenge, a 16-octet\n   AES Session-key
      used for encryption, and a 32-octet HMAC-SHA1\n   Session-key used for authentication.
      \ The Token is encrypted using\n   AES-CBC.\n   +----------------+                  +--------+\n
      \  | Control-Client |                  | Server |\n   +----------------+                  +--------+\n
      \           |                               |\n            |<------ TCP Connection--
      ----->|\n            |                               |\n            |<------
      Greeting message ------|\n            |                               |\n            |-------
      Set-Up-Response ------>|\n            |                               |\n            |<------
      Server-Start ----------|\n            |                               |\n                  Figure
      1: Initiation of O/TWAMP-Control\n   Encryption uses a key derived from the
      shared secret associated with\n   KeyID.  In the authenticated, encrypted, and
      mixed modes, all further\n   communication is encrypted using the AES Session-key
      and\n   authenticated with the HMAC Session-key.  After receiving the Set-Up-\n
      \  Response, the Server responds with a Server-Start message containing\n   the
      Server-IV.  The Control-Client encrypts everything it transmits\n   through
      the just established O/TWAMP-Control connection using stream\n   encryption
      with Client-IV as the IV.  Correspondingly, the Server\n   encrypts its side
      of the connection using Server-IV as the IV.  The\n   IVs themselves are transmitted
      in cleartext.  Encryption starts with\n   the block immediately following that
      containing the IV.\n   The AES Session-key and HMAC Session-key are generated
      randomly by\n   the Control-Client.  The HMAC Session-key is communicated along
      with\n   the AES Session-key during O/TWAMP-Control connection setup.  The\n
      \  HMAC Session-key is derived independently of the AES Session-key.\n"
    title: 4.1.  O/TWAMP-Control Security
  - contents:
    - "4.2.  O/TWAMP-Test Security\n   The O/TWAMP-Test protocol runs over UDP, using
      the Session-Sender and\n   Session-Reflector IP and port numbers that were negotiated
      during the\n   Request-Session exchange.  O/TWAMP-Test has the same mode with
      O/\n   TWAMP-Control and all O/TWAMP-Test sessions inherit the corresponding\n
      \  O/TWAMP-Control session mode except when operating in mixed mode.\n   The
      O/TWAMP-Test packet format is the same in authenticated and\n   encrypted modes.
      \ The encryption and authentication operations are,\n   however, different.
      \ Similarly, with the respective O/TWAMP-Control\n   session, each O/TWAMP-Test
      session has two keys: an AES Session-key\n   and an HMAC Session-key.  However,
      there is a difference in how the\n   keys are obtained:\n   O/TWAMP-Control:
      \ the keys are generated by the Control-Client and\n           communicated
      to the Server during the control connection\n           establishment with the
      Set-Up-Response message (as part of\n           the Token).\n   O/TWAMP-Test:
      \ the keys are derived from the O/TWAMP-Control keys and\n           the session
      identifier (SID), which serve as inputs to the\n           key derivation function
      (KDF).  The O/TWAMP-Test AES Session-\n           key is generated using the
      O/TWAMP-Control AES Session-key,\n           with the 16-octet SID, for encrypting
      and decrypting the\n           packets of the particular O/TWAMP-Test session.
      \ The O/TWAMP-\n           Test HMAC Session-key is generated using the O/TWAMP-Control\n
      \          HMAC Session-key, with the 16-octet SID, for authenticating\n           the
      packets of the particular O/TWAMP-Test session.\n"
    title: 4.2.  O/TWAMP-Test Security
  - contents:
    - "4.3.  O/TWAMP Security Root\n   As discussed above, the O/TWAMP-Test AES Session-key
      and HMAC\n   Session-key are derived, respectively, from the O/TWAMP-Control
      AES\n   Session-key and HMAC Session-key.  The AES Session-key and HMAC\n   Session-key
      used in the O/TWAMP-Control protocol are generated\n   randomly by the Control-Client,
      and encrypted with the shared secret\n   associated with KeyID.  Therefore,
      the security root is the shared\n   secret key.  Thus, for large deployments,
      key provision and\n   management may become overly complicated.  Comparatively,
      a\n   certificate-based approach using IKEv2 can automatically manage the\n
      \  security root and solve this problem, as we explain in Section 5.\n"
    title: 4.3.  O/TWAMP Security Root
  title: 4.  O/TWAMP Security
- contents:
  - "5.  O/TWAMP for IPsec Networks\n   This section presents a method of binding
    O/TWAMP and IKEv2 for\n   network measurements between a client and a server that
    both support\n   IPsec.  In short, the shared key used for securing O/TWAMP traffic
    is\n   derived using IKEv2 [RFC7296].\n"
  - contents:
    - "5.1.  Shared Key Derivation\n   In the authenticated, encrypted, and mixed
      modes, the shared secret\n   key MUST be derived from the IKEv2 SA.  Note that
      we explicitly opt\n   to derive the shared secret key from the IKEv2 SA, rather
      than the\n   child SA, since it is possible that an IKEv2 SA is created without\n
      \  generating any child SA [RFC6023].\n   When the shared secret key is derived
      from the IKEv2 SA, SK_d must be\n   generated first.  SK_d must be computed
      as per [RFC7296].\n   The shared secret key MUST be generated as follows:\n
      \     Shared secret key = prf( SK_d, \"IPPM\" )\n   Wherein the string \"IPPM\"
      is encoded in ASCII and \"prf\" is a\n   pseudorandom function.\n   It is recommended
      that the shared secret key is derived in the IPsec\n   layer so that IPsec keying
      material is not exposed to the O/TWAMP\n   client.  Note, however, that the
      interaction between the O/TWAMP and\n   IPsec layers is host internal and implementation
      specific.\n   Therefore, this is clearly outside the scope of this document,
      which\n   focuses on the interaction between the O/TWAMP client and server.\n
      \  That said, one possible way could be the following: at the Control-\n   Client
      side, the IPsec layer can perform a lookup in the Security\n   Association Database
      (SAD) using the IP address of the Server and\n   thus match the corresponding
      IKEv2 SA.  At the Server side, the IPsec\n   layer can look up the corresponding
      IKEv2 SA by using the Security\n   Parameter Indexes (SPIs) sent by the Control-Client
      (see\n   Section 5.3), and therefore extract the shared secret key.\n   If both
      the client and server do support IKEv2 but there is no\n   current IKEv2 SA,
      two alternative ways could be considered.  First,\n   the O/TWAMP Control-Client
      initiates the establishment of the IKEv2\n   SA, logs this operation, and selects
      the mode that supports IKEv2.\n   Alternatively, the O/TWAMP Control-Client
      does not initiate the\n   establishment of the IKEv2 SA, logs an error for operational\n
      \  management purposes, and proceeds with the modes defined in\n   [RFC4656],
      [RFC5357], and [RFC5618].  Again, although both\n   alternatives are feasible,
      they are in fact implementation specific.\n   If rekeying for the IKEv2 SA or
      deletion of the IKEv2 SA occurs, the\n   corresponding shared secret key generated
      from the SA MUST continue\n   to be used until the O/TWAMP session terminates.\n"
    title: 5.1.  Shared Key Derivation
  - contents:
    - "5.2.  Server Greeting Message Update\n   To trigger a binding association between
      the key generated from IKEv2\n   and the O/TWAMP shared secret key, the Modes
      field in the Server\n   Greeting Message (Figure 2) must support key derivation
      as discussed\n   in Section 5.1.  Support for deriving the shared key from the
      IKEv2\n   SA is indicated by setting IKEv2Derived (see Section 7).  Therefore,\n
      \  when this method is used, the Modes value extension MUST be\n   supported.\n
      \  0                   1                   2                   3\n   0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                       Unused
      (12 octets)                      |\n   |                                                               |\n
      \  |+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                           Modes
      \                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                     Challenge
      (16 octets)                     |\n   |                                                               |\n
      \  |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                        Salt
      (16 octets)                       |\n   |                                                               |\n
      \  |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                        Count (4 octets)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                        MBZ
      (12 octets)                        |\n   |                                                               |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                     Figure
      2: Server Greeting Format\n   The choice of this set of Modes values poses no
      backwards-\n   compatibility problems to existing O/TWAMP clients.  Robust legacy\n
      \  Control-Client implementations would disregard the fact that the\n   IKEv2Derived
      Modes bit in the Server Greeting is set.  On the other\n   hand, a Control-Client
      implementing this method can identify that the\n   O/TWAMP Server contacted
      does not support this specification.  If the\n   Server supports other Modes,
      as one could assume, the Control-Client\n   would then decide which Mode to
      use and indicate such accordingly as\n   per [RFC4656] and [RFC5357].  A Control-Client
      that is implementing\n   this method and decides not to employ IKEv2 derivation
      can simply\n   behave as a client that is purely compatible with [RFC4656] and\n
      \  [RFC5357].\n"
    title: 5.2.  Server Greeting Message Update
  - contents:
    - "5.3.  Set-Up-Response Update\n   The Set-Up-Response message Figure 3 is updated
      as follows.  When an\n   O/TWAMP Control-Client implementing this method receives
      a Server\n   Greeting indicating support for Mode IKEv2Derived, it SHOULD reply
      to\n   the O/TWAMP Server with a Set-Up-Response that indicates so.  For\n   example,
      a compatible O/TWAMP Control-Client choosing the\n   authenticated mode with
      IKEv2 shared secret key derivation should set\n   the Mode bits as per Section
      7.\n   0                   1                   2                   3\n   0 1
      2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                            Mode                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                      KeyID
      (80 octets)                        |\n   |                                                               |\n
      \  |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                     Token
      (16 octets)                         |\n   |                                                               |\n
      \  |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                    Client-IV
      (12 octets)                      |\n   |                                                               |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                     Figure
      3: Set-Up-Response Message\n   The Security Parameter Index (SPI), as described
      in [RFC4301] and\n   [RFC7296], uniquely identifies the SA.  If the Control-Client\n
      \  supports shared secret key derivation for the IKEv2 SA, it will\n   choose
      the corresponding Mode value and carry SPIi and SPIr in the\n   KeyID field.
      \ SPIi and SPIr MUST be included in the KeyID field of\n   the Set-Up-Response
      Message to indicate the IKEv2 SA from which the\n   O/TWAMP shared secret key
      was derived.  The length of SPI is 8\n   octets.  Therefore, the first 8 octets
      of the KeyID field MUST carry\n   SPIi, and the second 8 octets MUST carry SPIr.
      \ The remaining bits of\n   the KeyID field MUST be set to zero.\n   An O/TWAMP
      Server implementation MUST obtain the SPIi and SPIr from\n   the first 16 octets
      and ignore the remaining octets of the KeyID\n   field.  Then, the Control-Client
      and the Server can derive the shared\n   secret key based on the Mode value
      and SPI.  If the O/TWAMP Server\n   cannot find the IKEv2 SA corresponding to
      the SPIi and SPIr received,\n   it MUST log the event for operational management
      purposes.  In\n   addition, the O/TWAMP Server SHOULD set the Accept field of
      the\n   Server-Start message to the value 6 to indicate that the Server is\n
      \  not willing to conduct further transactions in this O/TWAMP-Control\n   session
      since it cannot find the corresponding IKEv2 SA.\n"
    title: 5.3.  Set-Up-Response Update
  - contents:
    - "5.4.  O/TWAMP over an IPsec Tunnel\n   The IPsec Authentication Header (AH)
      [RFC4302] and Encapsulating\n   Security Payload (ESP) [RFC4303] provide confidentiality
      and data\n   integrity to IP datagrams.  An IPsec tunnel can be used to provide\n
      \  the protection needed for O/TWAMP Control and Test packets, even if\n   the
      peers choose the unauthenticated mode of operation.  In order to\n   ensure
      authenticity and security, O/TWAMP packets between two IKEv2\n   systems SHOULD
      be configured to use the corresponding IPsec tunnel\n   running over an external
      network even when using the O/TWAMP\n   unauthenticated mode.\n"
    title: 5.4.  O/TWAMP over an IPsec Tunnel
  title: 5.  O/TWAMP for IPsec Networks
- contents:
  - "6.  Security Considerations\n   As the shared secret key is derived from the
    IKEv2 SA, the key\n   derivation algorithm strength and limitations are as per
    [RFC7296].\n   The strength of a key derived from a Diffie-Hellman exchange using\n
    \  any of the groups defined here depends on the inherent strength of\n   the
    group, the size of the exponent used, and the entropy provided by\n   the random
    number generator employed.  The strength of all keys and\n   implementation vulnerabilities,
    particularly denial-of-service (DoS)\n   attacks are as defined in [RFC7296].\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   During the production of this document, the authors
    and reviewers\n   noticed that the TWAMP-Modes registry should describe a field
    of\n   single bit position flags, rather than the existing registry\n   construction
    with assignment of integer values.  In addition, the\n   Semantics Definition
    column seemed to have spurious information in\n   it.  The registry has been reformatted
    to simplify future\n   assignments.  Thus, the contents of the TWAMP-Modes registry
    are as\n   follows:\n   Bit|Description                               |Semantics
    \  |Reference\n   Pos|                                          |Definition  |\n
    \  ---|------------------------------------------|------------|---------\n   0
    \  Unauthenticated                            Section 3.1  [RFC4656]\n   1   Authenticated
    \                             Section 3.1  [RFC4656]\n   2   Encrypted                                  Section
    3.1  [RFC4656]\n   3   Unauth. TEST protocol, Encrypted CONTROL   Section 3.1
    \ [RFC5618]\n   4   Individual Session Control                              [RFC5938]\n
    \  5   Reflect Octets Capability                               [RFC6038]\n   6
    \  Symmetrical Size Sender Test Packet Format              [RFC6038]\n                           Figure
    4: TWAMP Modes\n   The new description and registry management instructions follow.\n
    \  Registry Specification: TWAMP-Modes are specified in TWAMP Server\n   Greeting
    messages and Set-Up-Response messages consistent with\n   Section 3.1 of [RFC5357].
    \ Modes are indicated by setting single bits\n   in the 32-bit Modes field.\n
    \  Registry Management: Because the \"TWAMP-Modes\" are based on only 32\n   bit
    positions with each position conveying a unique feature, and\n   because TWAMP
    is an IETF protocol, this registry must be updated only\n   by \"IETF Review\"
    as specified in [RFC5226].  IANA SHOULD allocate\n   monotonically increasing
    bit positions when requested.\n   Experimental Numbers: No experimental bit positions
    are currently\n   assigned in the Modes registry, as indicated in the initial
    contents\n   above.\n   In addition, per this document, a new entry has been added
    to the\n   TWAMP-Modes registry:\n   Bit|Description                               |Semantics
    \  |Reference\n   Pos|                                          |Definition  |\n
    \  ---|------------------------------------------|------------|---------\n   7
    \  IKEv2Derived Mode Capability               Section 5    RFC 7717\n               Figure
    5: TWAMP IKEv2-Derived Mode Capability\n   For the new OWAMP-Modes registry, see
    the IANA Considerations in\n   [RFC7718].\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC4656]  Shalunov, S., Teitelbaum, B., Karp, A., Boote, J., and M.\n              Zekauskas,
      \"A One-way Active Measurement Protocol\n              (OWAMP)\", RFC 4656,
      DOI 10.17487/RFC4656, September 2006,\n              <http://www.rfc-editor.org/info/rfc4656>.\n
      \  [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,
      May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC5357]
      \ Hedayat, K., Krzanowski, R., Morton, A., Yum, K., and J.\n              Babiarz,
      \"A Two-Way Active Measurement Protocol (TWAMP)\",\n              RFC 5357,
      DOI 10.17487/RFC5357, October 2008,\n              <http://www.rfc-editor.org/info/rfc5357>.\n
      \  [RFC5618]  Morton, A. and K. Hedayat, \"Mixed Security Mode for the\n              Two-Way
      Active Measurement Protocol (TWAMP)\", RFC 5618,\n              DOI 10.17487/RFC5618,
      August 2009,\n              <http://www.rfc-editor.org/info/rfc5618>.\n   [RFC7296]
      \ Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n              Kivinen,
      \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\", STD 79,
      RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <http://www.rfc-editor.org/info/rfc7296>.\n
      \  [RFC7718]  Morton, A., \"Registries for the One-Way Active Measurement\n
      \             Protocol (OWAMP)\", RFC 7718, DOI 10.17487/RFC7718,\n              December
      2015, <http://www.rfc-editor.org/info/rfc7718>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC2898]  Kaliski, B., \"PKCS #5: Password-Based
      Cryptography\n              Specification Version 2.0\", RFC 2898,\n              DOI
      10.17487/RFC2898, September 2000,\n              <http://www.rfc-editor.org/info/rfc2898>.\n
      \  [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n              Internet
      Protocol\", RFC 4301, DOI 10.17487/RFC4301,\n              December 2005, <http://www.rfc-editor.org/info/rfc4301>.\n
      \  [RFC4302]  Kent, S., \"IP Authentication Header\", RFC 4302,\n              DOI
      10.17487/RFC4302, December 2005,\n              <http://www.rfc-editor.org/info/rfc4302>.\n
      \  [RFC4303]  Kent, S., \"IP Encapsulating Security Payload (ESP)\",\n              RFC
      4303, DOI 10.17487/RFC4303, December 2005,\n              <http://www.rfc-editor.org/info/rfc4303>.\n
      \  [RFC5706]  Harrington, D., \"Guidelines for Considering Operations and\n
      \             Management of New Protocols and Protocol Extensions\",\n              RFC
      5706, DOI 10.17487/RFC5706, November 2009,\n              <http://www.rfc-editor.org/info/rfc5706>.\n
      \  [RFC5938]  Morton, A. and M. Chiba, \"Individual Session Control\n              Feature
      for the Two-Way Active Measurement Protocol\n              (TWAMP)\", RFC 5938,
      DOI 10.17487/RFC5938, August 2010,\n              <http://www.rfc-editor.org/info/rfc5938>.\n
      \  [RFC6023]  Nir, Y., Tschofenig, H., Deng, H., and R. Singh, \"A\n              Childless
      Initiation of the Internet Key Exchange Version\n              2 (IKEv2) Security
      Association (SA)\", RFC 6023,\n              DOI 10.17487/RFC6023, October 2010,\n
      \             <http://www.rfc-editor.org/info/rfc6023>.\n   [RFC6038]  Morton,
      A. and L. Ciavattone, \"Two-Way Active Measurement\n              Protocol (TWAMP)
      Reflect Octets and Symmetrical Size\n              Features\", RFC 6038, DOI
      10.17487/RFC6038, October 2010,\n              <http://www.rfc-editor.org/info/rfc6038>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   We thank Eric Chen, Yaakov Stein, Brian Trammell, Emily
    Bi, John\n   Mattsson, Steve Baillargeon, Spencer Dawkins, Tero Kivinen, Fred\n
    \  Baker, Meral Shirazipour, Hannes Tschofenig, Ben Campbell, Stephen\n   Farrell,
    Brian Haberman, and Barry Leiba for their reviews, comments,\n   and text suggestions.\n
    \  Al Morton deserves a special mention for his thorough reviews and\n   text
    contributions to this document as well as the constructive\n   discussions over
    several IPPM meetings.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Kostas Pentikousis (editor)\n   EICT GmbH\n   EUREF-Campus
    Haus 13\n   Torgauer Strasse 12-15\n   10829 Berlin\n   Germany\n   Email: k.pentikousis@eict.de\n
    \  Emma Zhang\n   Huawei Technologies\n   Huawei Building, No.3, Rd. XinXi\n   Haidian
    District, Beijing  100095\n   China\n   Email: emma.zhanglijia@huawei.com\n   Yang
    Cui\n   Huawei Technologies\n   Otemachi First Square 1-5-1 Otemachi\n   Chiyoda-ku,
    Tokyo  100-0004\n   Japan\n   Email: cuiyang@huawei.com\n"
  title: Authors' Addresses
