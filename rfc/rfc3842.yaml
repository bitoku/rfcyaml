- title: __initial_text__
  contents:
  - "   A Message Summary and Message Waiting Indication Event Package for\n     \
    \            the Session Initiation Protocol (SIP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a Session Initiation Protocol (SIP) event\n\
    \   package to carry message waiting status and message summaries from a\n   messaging\
    \ system to an interested User Agent.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Conventions  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.   Background and Appropriateness . . . . . . . . . . .\
    \ . . . .   3\n   3.   Event Package Formal Definition  . . . . . . . . . . .\
    \ . . .   4\n        3.1.  Event Package Name . . . . . . . . . . . . . . . .\
    \ . .   4\n        3.2.  Event Package Parameters . . . . . . . . . . . . . .\
    \ .   4\n        3.3.  SUBSCRIBE Bodies . . . . . . . . . . . . . . . . . . .\
    \   4\n        3.4.  Subscription Duration. . . . . . . . . . . . . . . . .  \
    \ 4\n        3.5.  NOTIFY Bodies. . . . . . . . . . . . . . . . . . . . .   4\n\
    \        3.6.  Subscriber Generation of SUBSCRIBE Requests. . . . . .   6\n  \
    \      3.7.  Notifier Processing of SUBSCRIBE Requests. . . . . . .   6\n    \
    \    3.8.  Notifier Generation of NOTIFY Requests . . . . . . . .   7\n      \
    \  3.9.  Subscriber Processing of NOTIFY Requests . . . . . . .   7\n        3.10.\
    \ Handling of Forked Requests. . . . . . . . . . . . . .   7\n        3.11. Rate\
    \ of Notifications. . . . . . . . . . . . . . . . .   7\n        3.12. State Agents\
    \ and Lists . . . . . . . . . . . . . . . .   8\n        3.13. Behavior of a Proxy\
    \ Server . . . . . . . . . . . . . .   8\n   4.   Examples of Usage  . . . . .\
    \ . . . . . . . . . . . . . . . .   8\n        4.1.  Example Message Flow . .\
    \ . . . . . . . . . . . . . . .   8\n        4.2.  Example Usage with Callee Capabilities\
    \ and Caller\n              Preferences. . . . . . . . . . . . . . . . . . . .\
    \ . .  14\n   5.   Formal Syntax  . . . . . . . . . . . . . . . . . . . . . .\
    \ .  14\n        5.1.  New Event-Package Definition . . . . . . . . . . . . .\
    \  15\n        5.2.  Body Format Syntax . . . . . . . . . . . . . . . . . .  15\n\
    \   6.   Security Considerations  . . . . . . . . . . . . . . . . . .  15\n  \
    \ 7.   IANA Considerations  . . . . . . . . . . . . . . . . . . . .  16\n    \
    \    7.1.  SIP Event Package Registration for message-summary . .  16\n      \
    \  7.2.  MIME Registration for application/\n              simple-message-summary\
    \ . . . . . . . . . . . . . . . .  16\n   8.   Contributors . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  17\n   9.   Acknowledgments  . . . . . . . .\
    \ . . . . . . . . . . . . . .  17\n   10.  References . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  17\n        10.1. Normative References . . . . .\
    \ . . . . . . . . . . . .  17\n        10.2. Informational References . . . .\
    \ . . . . . . . . . . .  18\n   11.  Author's Address . . . . . . . . . . . .\
    \ . . . . . . . . . .  18\n   12.  Full Copyright Statement . . . . . . . . .\
    \ . . . . . . . . .  19\n"
- title: 1.  Conventions
  contents:
  - "1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP\
    \ 14, RFC 2119 [3].\n"
- title: 2.  Background and Appropriateness
  contents:
  - "2.  Background and Appropriateness\n   Message Waiting Indication is a common\
    \ feature of telephone networks.\n   It typically involves an audible or visible\
    \ indication that messages\n   are waiting, such as playing a special dial tone\
    \ (which in telephone\n   networks is called message-waiting dial tone), lighting\
    \ a light or\n   indicator on the phone, displaying icons or text, or some\n \
    \  combination.\n      Message-waiting dial tone is similar to but distinct from\
    \ stutter\n      dial tone.  Both are defined in GR-506 [11].\n   The methods\
    \ in the SIP [1] base specification were only designed to\n   solve the problem\
    \ of session initiation for multimedia sessions, and\n   rendezvous.  Since Message\
    \ Waiting Indication is really status\n   information orthogonal to a session,\
    \ it was not clear how an IP\n   telephone acting as a SIP User Agent would implement\
    \ comparable\n   functionality.  Members of the telephony community viewed this\
    \ as a\n   shortcoming of SIP.\n   Users want the useful parts of the functionality\
    \ they have using\n   traditional analog, mobile, and PBX telephones.  It is also\
    \ desirable\n   to provide comparable functionality in a flexible way that allows\
    \ for\n   more customization and new features.  SIP Specific Event Notification\n\
    \   (RFC 3265 -- SIP Events) [2] is an appropriate mechanism to use in\n   this\
    \ environment, as it preserves the user mobility and rendezvous\n   features which\
    \ SIP provides.\n   Using SIP-Specific Event Notification, a Subscriber User Agent\n\
    \   (typically an IP phone or SIP software User Agent) subscribes to the\n   status\
    \ of their messages.  A SIP User Agent acting on behalf of the\n   user's messaging\
    \ system then notifies the Subscriber each time the\n   messaging account's messages\
    \ have changed.  (This Notifier could be\n   composed with a User Agent that provides\
    \ a real-time media interface\n   to send or receive messages, or it could be\
    \ a stand-alone entity.)\n   The Notifier sends a message summary in the body\
    \ of a NOTIFY, encoded\n   in a new MIME type defined later in this document.\
    \  A User Agent can\n   also explicitly fetch the current status.\n   A SIP User\
    \ Agent MAY subscribe to multiple accounts (distinguished by\n   the Request URI).\
    \  Multiple SIP User Agents MAY subscribe to the same\n   account.\n   Before\
    \ any subscriptions or notifications are sent, each interested\n   User Agent\
    \ must be made aware of its messaging notifier(s).  This MAY\n   be manually configured\
    \ on interested User Agents, manually configured\n   on an appropriate SIP Proxy,\
    \ or dynamically discovered based on\n   requested caller preferences [4] and\
    \ registered callee capabilities\n   [5].  (For more information on usage with\
    \ callee capabilities, see\n   Section 4.2)\n"
- title: 3.  Event Package Formal Definition
  contents:
  - '3.  Event Package Formal Definition

    '
- title: 3.1.  Event Package Name
  contents:
  - "3.1.  Event Package Name\n   This document defines a SIP Event Package as defined\
    \ in RFC 3265 [2].\n   The event-package token name for this package is:\n   \
    \   \"message-summary\"\n"
- title: 3.2.  Event Package Parameters
  contents:
  - "3.2.  Event Package Parameters\n   This package does not define any event package\
    \ parameters.\n"
- title: 3.3.  SUBSCRIBE Bodies
  contents:
  - "3.3.  SUBSCRIBE Bodies\n   This package does not define any SUBSCRIBE bodies.\n"
- title: 3.4.  Subscription Duration
  contents:
  - "3.4.  Subscription Duration\n   Subscriptions to this event package MAY range\
    \ from minutes to weeks.\n   Subscriptions in hours or days are more typical and\
    \ are RECOMMENDED.\n   The default subscription duration for this event package\
    \ is one hour.\n"
- title: 3.5.  NOTIFY Bodies
  contents:
  - "3.5.  NOTIFY Bodies\n   A simple text-based format is proposed to prevent an\
    \ undue burden on\n   low-end user agents, for example, inexpensive IP phones\
    \ with no\n   display.  Although this format is text-based, it is intended for\n\
    \   machine consumption only.\n   A future extension MAY define other NOTIFY bodies.\
    \  If no \"Accept\"\n   header is present in the SUBSCRIBE, the body type defined\
    \ in this\n   document MUST be assumed.\n   The format specified in this proposal\
    \ attempts to separate orthogonal\n   attributes of messages as much as possible.\
    \  Messages are separated\n   by message-context-class (for example: voice-message,\
    \ fax-message,\n   pager-message, multimedia-message, text-message, and none),\
    \ by\n   message status (new and old), and urgent and non-urgent type.\n   The\
    \ text format begins with a simple status line, and optionally a\n   summary line\
    \ per message-context-class.  Message-context-classes are\n   defined in [7].\
    \  For each message-context-class, the total number of\n   new and old messages\
    \ is reported in the new and old fields.\n   In some cases, detailed message summaries\
    \ are not available.  The\n   status line allows messaging systems or messaging\
    \ gateways to provide\n   the traditional boolean message waiting notification.\n\
    \      Messages-Waiting: yes\n   If the Request-URI or To header in a message-summary\
    \ subscription\n   corresponds to a group or collection of individual messaging\n\
    \   accounts, the notifier MUST specify to which account the message-\n   summary\
    \ body corresponds.  Note that the account URI MUST NOT be\n   delimited with\
    \ angle brackets (\"<\" and \">\").\n      Message-Account: sip:alice@example.com\n\
    \   In the example that follows, more than boolean message summary\n   information\
    \ is available to the User Agent.  There are two new and\n   four old fax messages.\n\
    \      Fax-Message: 2/4\n   After the summary, the format can optionally list\
    \ a summary count of\n   urgent messages.  In the next example there are one new\
    \ and three old\n   voice messages, none of the new messages are urgent, but one\
    \ of the\n   old messages is.  All counters have a maximum value of 4,294,967,295\n\
    \   ((2^32) - 1).  Notifiers MUST NOT generate a request with a larger\n   value.\
    \  Subscribers MUST treat a larger value as 2^32-1.\n      Voice-Message: 1/3\
    \ (0/1)\n   Optionally, after the summary counts, the messaging systems MAY\n\
    \   append RFC 2822 style message headers [9], which further describe\n   newly\
    \ added messages.  Message headers MUST NOT be included in an\n   initial NOTIFY,\
    \ as new messages could be essentially unbounded in\n   size.  Message headers\
    \ included in subsequent notifications MUST only\n   correspond to messages added\
    \ since the previous notification for that\n   subscription.  A messaging system\
    \ which includes message headers in a\n   NOTIFY MUST provide an administrator\
    \ configurable mechanism to select\n   which headers are sent.  Headers likely\
    \ for inclusion are To, From,\n   Date, Subject, and Message-ID.  Note that the\
    \ formatting of these\n   headers in this body is identical to that of SIP extension-headers,\n\
    \   not the (similar) format defined in RFC 2822.\n   Implementations which generate\
    \ large notifications are reminded to\n   follow the message size restrictions\
    \ for unreliable transports\n   articulated in Section 18.1.1 of SIP [1].\n  \
    \ Mapping local message state to new/old message status and urgency is\n   an\
    \ implementation issue of the messaging system.  However, the\n   messaging notifier\
    \ MUST NOT consider a message \"old\" merely because\n   it generated a notification,\
    \ as this could prevent another\n   subscription from accurately receiving message-summary\
    \ notifications.\n   Likewise, the messaging system MAY use any suitable algorithm\
    \ to\n   determine that a message is \"urgent\".\n   Messaging systems MAY use\
    \ any algorithm for determining the\n   appropriate message-context-class for\
    \ a specific message.  Systems\n   which use Internet Mail SHOULD use the contents\
    \ of the Message-\n   Context header [7] (defined in RFC 3458) if present as a\
    \ hint to make\n   a context determination.  Note that a composed messaging system\
    \ does\n   not need to support a given context in order to generate\n   notifications\
    \ identified with that context.\n"
- title: 3.6.  Subscriber Generation of SUBSCRIBE Requests
  contents:
  - "3.6.  Subscriber Generation of SUBSCRIBE Requests\n   Subscriber User Agents\
    \ will typically SUBSCRIBE to message summary\n   information for a period of\
    \ hours or days, and automatically attempt\n   to re-SUBSCRIBE well before the\
    \ subscription is completely expired.\n   If re-subscription fails, the Subscriber\
    \ SHOULD periodically retry\n   again until a subscription is successful, taking\
    \ care to backoff to\n   avoid network congestion.  If a subscription has expired,\
    \ new re-\n   subscriptions MUST use a new Call-ID.\n   The Subscriber SHOULD\
    \ SUBSCRIBE to that user's message summaries\n   whenever a new user becomes associated\
    \ with the device (a new login).\n   The Subscriber MAY also explicitly fetch\
    \ the current status at any\n   time.  The subscriber SHOULD renew its subscription\
    \ immediately after\n   a reboot, or when the subscriber's network connectivity\
    \ has just been\n   re-established.\n   The Subscriber MUST be prepared to receive\
    \ and process a NOTIFY with\n   new state immediately after sending a new SUBSCRIBE,\
    \ a SUBSCRIBE\n   renewal, an unsubscribe, a fetch, or at any other time during\
    \ the\n   subscription.\n   When a user de-registers from a device (logoff, power\
    \ down of a\n   mobile device, etc.), subscribers SHOULD unsubscribe by sending\
    \ a\n   SUBSCRIBE message with an Expires header of zero.\n"
- title: 3.7.  Notifier Processing of SUBSCRIBE Requests
  contents:
  - "3.7.  Notifier Processing of SUBSCRIBE Requests\n   When a SIP Messaging System\
    \ receives SUBSCRIBE messages with the\n   message-summary event-type, it SHOULD\
    \ authenticate the subscription\n   request.  If authentication is successful,\
    \ the Notifier MAY limit the\n   duration of the subscription to an administrator\
    \ defined amount of\n   time as described in SIP Events [2].\n"
- title: 3.8.  Notifier Generation of NOTIFY Requests
  contents:
  - "3.8.  Notifier Generation of NOTIFY Requests\n   Immediately after a subscription\
    \ is accepted, the Notifier MUST send\n   a NOTIFY with the current message summary\
    \ information.  This allows\n   the Subscriber to resynchronize its state.  This\
    \ initial\n   synchronization NOTIFY MUST NOT include the optional RFC 2822 style\n\
    \   message headers [8].\n   When the status of the messages changes sufficiently\
    \ for a messaging\n   account to change the number of new or old messages, the\
    \ Notifier\n   SHOULD send a NOTIFY message to all active subscribers of that\n\
    \   account.  NOTIFY messages sent to subscribers of a group or alias,\n   MUST\
    \ contain the message account name in the notification body.\n   A Messaging System\
    \ MAY send a NOTIFY with an \"Expires\" header of \"0\"\n   and a \"Subscription-State\"\
    \ header of \"terminated\" before a graceful\n   shutdown.\n"
- title: 3.9.  Subscriber Processing of NOTIFY Requests
  contents:
  - "3.9.  Subscriber Processing of NOTIFY Requests\n   Upon receipt of a valid NOTIFY\
    \ request, the subscriber SHOULD\n   immediately render the message status and\
    \ summary information to the\n   end user in an implementation specific way.\n\
    \   The Subscriber MUST be prepared to receive NOTIFYs from different\n   Contacts\
    \ corresponding to the same SUBSCRIBE.  (The SUBSCRIBE may\n   have been forked).\n"
- title: 3.10.  Handling of Forked Requests
  contents:
  - "3.10.  Handling of Forked Requests\n   Forked requests are allowed for this event\
    \ type and may install\n   multiple subscriptions.  The Subscriber MAY render\
    \ multiple summaries\n   corresponding to the same account directly to the user,\
    \ or MAY merge\n   them as described below.\n   If any of the \"Messages-Waiting\"\
    \ status lines report \"yes\", then the\n   merged state is \"yes\"; otherwise\
    \ the merged state is \"no\".\n   The Subscriber MAY merge summary lines in an\
    \ implementation-specific\n   way if all notifications contain at least one msg-summary\
    \ line.\n"
- title: 3.11.  Rate of Notifications
  contents:
  - "3.11.  Rate of Notifications\n   A Notifier MAY choose to hold NOTIFY requests\
    \ in \"quarantine\" for a\n   short administrator-defined period (seconds or minutes)\
    \ when the\n   message status is changing rapidly.  Requests in the quarantine\
    \ which\n   become invalid are replaced by newer notifications, thus reducing\
    \ the\n   total volume of notifications.  This behavior is encouraged for\n  \
    \ implementations with heavy interactive use.  Note that timely\n   notification\
    \ resulting in a change of overall state (messages waiting\n   or not) and notification\
    \ of newly added messages is probably more\n   significant to the end user than\
    \ a notification of newly deleted\n   messages which do not affect the overall\
    \ message waiting state (e.g.,\n   there are still new messages).\n   Notifiers\
    \ SHOULD NOT generate NOTIFY requests more frequently than\n   once per second.\n"
- title: 3.12.  State Agents and Lists
  contents:
  - "3.12.  State Agents and Lists\n   A Subscriber MAY use an \"alias\" or \"group\"\
    \ in the Request-URI of a\n   subscription if that name is significant to the\
    \ messaging system.\n   Implementers MAY create a service which consolidates and\
    \ summarizes\n   NOTIFYs from many Contacts.  This document does not preclude\n\
    \   implementations from building state agents which support this event\n   package.\
    \  One way to implement such a service is with the event list\n   extension [10].\n"
- title: 3.13.  Behavior of a Proxy Server
  contents:
  - "3.13.  Behavior of a Proxy Server\n   There are no additional requirements on\
    \ a SIP Proxy, other than to\n   transparently forward the SUBSCRIBE and NOTIFY\
    \ methods as required in\n   SIP.  However, Proxies SHOULD allow non-SIP URLs.\
    \  Proxies and\n   Redirect servers SHOULD be able to direct the SUBSCRIBE request\
    \ to an\n   appropriate messaging notifier User Agent.\n"
- title: 4.  Examples of Usage
  contents:
  - '4.  Examples of Usage

    '
- title: 4.1.  Example Message Flow
  contents:
  - "4.1.  Example Message Flow\n   The examples shown below are for informational\
    \ purposes only.  For a\n   normative description of the event package, please\
    \ see sections 3 and\n   5 of this document.\n   In the example call flow below,\
    \ Alice's IP phone subscribes to the\n   status of Alice's messages.  Via headers\
    \ are omitted for clarity.\n      Subscriber              Notifier\n         \
    \ |                       |\n          |  A1: SUBSCRIBE (new)  |\n          |---------------------->|\n\
    \          |  A2: 200 OK           |\n          |<----------------------|\n  \
    \        |                       |\n          |  A3: NOTIFY (sync)    |\n    \
    \      |<----------------------|\n          |  A4: 200 OK           |\n      \
    \    |---------------------->|\n          |                       |\n        \
    \  |                       |\n          |  A5: NOTIFY (change)  |\n          |<----------------------|\n\
    \          |  A6: 200 OK           |\n          |---------------------->|\n  \
    \        |                       |\n          |                       |\n    \
    \      |  A7: (re)SUBSCRIBE    |\n          |---------------------->|\n      \
    \    |  A8: 200 OK           |\n          |<----------------------|\n        \
    \  |                       |\n          |  A9: NOTIFY (sync)    |\n          |<----------------------|\n\
    \          |  A10: 200 OK          |\n          |---------------------->|\n  \
    \        |                       |\n          |                       |\n    \
    \      |  A11: (un)SUBSCRIBE   |\n          |---------------------->|\n      \
    \    |  A12: 200 OK          |\n          |<----------------------|\n        \
    \  |                       |\n          |  A13: NOTIFY (sync)   |\n          |<----------------------|\n\
    \          |  A14: 200 OK          |\n          |---------------------->|\n  \
    \    A1: Subscriber (Alice's phone) ->\n          Notifier (Alice's voicemail\
    \ gateway)\n          Subscribe to Alice's message summary status for 1 day.\n\
    \      SUBSCRIBE sip:alice@vmail.example.com SIP/2.0\n      To: <sip:alice@example.com>\n\
    \      From: <sip:alice@example.com>;tag=78923\n      Date: Mon, 10 Jul 2000 03:55:06\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 4 SUBSCRIBE\n\
    \      Contact: <sip:alice@alice-phone.example.com>\n      Event: message-summary\n\
    \      Expires: 86400\n      Accept: application/simple-message-summary\n    \
    \  Content-Length: 0\n          A2: Notifier -> Subscriber\n      SIP/2.0 200\
    \ OK\n      To: <sip:alice@example.com>;tag=4442\n      From: <sip:alice@example.com>;tag=78923\n\
    \      Date: Mon, 10 Jul 2000 03:55:07 GMT\n      Call-Id: 1349882@alice-phone.example.com\n\
    \      CSeq: 4 SUBSCRIBE\n      Expires: 86400\n      Content-Length: 0\n    \
    \      A3: Notifier -> Subscriber\n          (immediate synchronization of current\
    \ state:\n           2 new and 8 old [2 urgent] messages)\n      NOTIFY sip:alice@alice-phone.example.com\
    \ SIP/2.0\n      To: <sip:alice@example.com>;tag=78923\n      From: <sip:alice@example.com>;tag=4442\n\
    \      Date: Mon, 10 Jul 2000 03:55:07 GMT\n      Call-Id: 1349882@alice-phone.example.com\n\
    \      CSeq: 20 NOTIFY\n      Contact: <sip:alice@vmail.example.com>\n      Event:\
    \ message-summary\n      Subscription-State: active\n      Content-Type: application/simple-message-summary\n\
    \      Content-Length: 99\n      Messages-Waiting: yes\n      Message-Account:\
    \ sip:alice@vmail.example.com\n      Voice-Message: 2/8 (0/2)\n          A4: Subscriber\
    \ -> Notifier\n      SIP/2.0 200 OK\n      To: <sip:alice@example.com>;tag=78923\n\
    \      From: <sip:alice@example.com>;tag=4442\n      Date: Mon, 10 Jul 2000 03:55:08\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 20 NOTIFY\n\
    \      Content-Length: 0\n          A5: Notifier -> Subscriber\n          This\
    \ is a notification of new messages.\n          Some headers from each of the\
    \ new messages are appended.\n      NOTIFY sip:alice@alice-phone.example.com SIP/2.0\n\
    \      To: <sip:alice@example.com>;tag=78923\n      From: <sip:alice@example.com>;tag=4442\n\
    \      Date: Mon, 10 Jul 2000 04:28:53 GMT\n      Contact: <sip:alice@vmail.example.com>\n\
    \      Call-ID: 1349882@alice-phone.example.com\n      CSeq: 31 NOTIFY\n     \
    \ Event: message-summary\n      Subscription-State: active\n      Content-Type:\
    \ application/simple-message-summary\n      Content-Length: 503\n      Messages-Waiting:\
    \ yes\n      Message-Account: sip:alice@vmail.example.com\n      Voice-Message:\
    \ 4/8 (1/2)\n      To: <alice@atlanta.example.com>\n      From: <bob@biloxi.example.com>\n\
    \      Subject: carpool tomorrow?\n      Date: Sun, 09 Jul 2000 21:23:01 -0700\n\
    \      Priority: normal\n      Message-ID: 13784434989@vmail.example.com\n   \
    \   To: <alice@example.com>\n      From: <cathy-the-bob@example.com>\n      Subject:\
    \ HELP! at home ill, present for me please\n      Date: Sun, 09 Jul 2000 21:25:12\
    \ -0700\n      Priority: urgent\n      Message-ID: 13684434990@vmail.example.com\n\
    \          A6: Subscriber -> Notifier\n      SIP/2.0 200 OK\n      To: <sip:alice@example.com>;tag=78923\n\
    \      From: <sip:alice@example.com>;tag=4442\n      Date: Mon, 10 Jul 2000 04:28:53\
    \ GMT\n      Call-ID: 1349882@alice-phone.example.com\n      CSeq: 31 NOTIFY\n\
    \      Content-Length: 0\n          A7: Subscriber  ->  Notifier\n          Refresh\
    \ subscription.\n      SUBSCRIBE sip:alice@vmail.example.com SIP/2.0\n      To:\
    \ <sip:alice@example.com>;tag=4442\n      From: <sip:alice@example.com>;tag=78923\n\
    \      Date: Mon, 10 Jul 2000 15:55:06 GMT\n      Call-Id: 1349882@alice-phone.example.com\n\
    \      CSeq: 8 SUBSCRIBE\n      Contact: <sip:alice@alice-phone.example.com>\n\
    \      Event: message-summary\n      Expires: 86400\n      Accept: application/simple-message-summary\n\
    \      Content-Length: 0\n          A8: Notifier -> Subscriber\n      SIP/2.0\
    \ 200 OK\n      To: <sip:alice@example.com>;tag=4442\n      From: <sip:alice@example.com>;tag=78923\n\
    \      Date: Mon, 10 Jul 2000 15:55:07 GMT\n      Call-Id: 1349882@alice-phone.example.com\n\
    \      CSeq: 8 SUBSCRIBE\n      Contact: <sip:alice@alice-phone.example.com>\n\
    \      Expires: 86400\n      Content-Length: 0\n          A9: Notifier -> Subscriber\n\
    \          (immediate synchronization of current state)\n      NOTIFY sip:alice@alice-phone.example.com\
    \ SIP/2.0\n      To: <sip:alice@example.com>;tag=78923\n      From: <sip:alice@example.com>;tag=4442\n\
    \      Date: Mon, 10 Jul 2000 15:55:07 GMT\n      Call-Id: 1349882@alice-phone.example.com\n\
    \      CSeq: 47 NOTIFY\n      Contact: <sip:alice@vmail.example.com>\n      Event:\
    \ message-summary\n      Subscription-State: active\n      Content-Type: application/simple-message-summary\n\
    \      Content-Length: 99\n      Messages-Waiting: yes\n      Message-Account:\
    \ sip:alice@vmail.example.com\n      Voice-Message: 4/8 (1/2)\n          A10:\
    \ Subscriber -> Notifier\n      SIP/2.0 200 OK\n      To: <sip:alice@example.com>;tag=78923\n\
    \      From: <sip:alice@example.com>;tag=4442\n      Date: Mon, 10 Jul 2000 15:55:08\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 47 NOTIFY\n\
    \      Contact: <sip:alice@vmail.example.com>\n          A11: Subscriber  -> \
    \ Notifier\n          Un-subscribe after \"alice\" logs out.\n      SUBSCRIBE\
    \ sip:alice@vmail.example.com SIP/2.0\n      To: <sip:alice@example.com>;tag=4442\n\
    \      From: <sip:alice@example.com>;tag=78923\n      Date: Mon, 10 Jul 2000 19:35:06\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 17 SUBSCRIBE\n\
    \      Contact: <sip:alice@alice-phone.example.com>\n      Event: message-summary\n\
    \      Expires: 0\n      Accept: application/simple-message-summary\n      Content-Length:\
    \ 0\n          A12: Notifier -> Subscriber\n      SIP/2.0 200 OK\n      To: <sip:alice@example.com>;tag=4442\n\
    \      From: <sip:alice@example.com>;tag=78923\n      Date: Mon, 10 Jul 2000 19:35:07\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 17 SUBSCRIBE\n\
    \      Contact: <sip:alice@alice-phone.example.com>\n      Expires: 0\n      Content-Length:\
    \ 0\n          A13: Notifier -> Subscriber\n         (immediate synchronization\
    \ of current state,\n          which the subscriber can now ignore)\n      NOTIFY\
    \ sip:alice@alice-phone.example.com SIP/2.0\n      To: <sip:alice@example.com>;tag=78923\n\
    \      From: <sip:alice@example.com>;tag=4442\n      Date: Mon, 10 Jul 2000 19:35:07\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 56 NOTIFY\n\
    \      Contact: <sip:alice@vmail.example.com>\n      Event: message-summary\n\
    \      Subscription-State: terminated;reason=timeout\n      Content-Type: application/simple-message-summary\n\
    \      Content-Length: 99\n      Messages-Waiting: yes\n      Message-Account:\
    \ sip:alice@vmail.example.com\n      Voice-Message: 4/8 (1/2)\n          A14:\
    \ Subscriber -> Notifier\n      SIP/2.0 200 OK\n      To: <sip:alice@example.com>;tag=78923\n\
    \      From: <sip:alice@example.com>;tag=4442\n      Date: Mon, 10 Jul 2000 19:35:08\
    \ GMT\n      Call-Id: 1349882@alice-phone.example.com\n      CSeq: 56 NOTIFY\n\
    \      Event: message-summary\n      Content-Length: 0\n"
- title: 4.2.  Example Usage with Callee Capabilities and Caller Preferences
  contents:
  - "4.2.  Example Usage with Callee Capabilities and Caller Preferences\n   The use\
    \ of callee capabilities is optional but encouraged.  If callee\n   capabilities\
    \ are used, a messaging notifier MAY REGISTER a Contact\n   with an appropriate\
    \ methods and events tag as shown in the example\n   below.  To further distinguish\
    \ itself, the messaging notifier MAY\n   also REGISTER as a Contact with the actor=\"\
    msg-taker\" tag.  An\n   example of this kind of registration follows below.\n\
    \       REGISTER sip:sip3-sj.example.com SIP/2.0\n       To: <sip:alice@example.com>\n\
    \       From: <sip:alice@example.com>;tag=4442\n       ...\n       Contact: <sip:alice@vm13-sj.example.com>\n\
    \        ;actor=\"msg-taker\";methods=\"SUBSCRIBE\"\n        ;automata;events=\"\
    message-summary\"\n   The following SUBSCRIBE message would find the Contact which\n\
    \   registered in the example above.\n       SUBSCRIBE sip:alice@example.com SIP/2.0\n\
    \       ...\n       Accept: application/simple-message-summary\n       Event:\
    \ message-summary\n       Accept-Contact: *;automata;actor=\"msg-taker\"\n"
- title: 5.  Formal Syntax
  contents:
  - "5.  Formal Syntax\n   The following syntax specification uses the augmented Backus-Naur\n\
    \   Form (BNF) as described in RFC 2234 [6].\n"
- title: 5.1.  New Event-Package Definition
  contents:
  - "5.1.  New Event-Package Definition\n   This document defines a new event-package\
    \ with the package name:\n      message-summary\n"
- title: 5.2.  Body Format Syntax
  contents:
  - "5.2.  Body Format Syntax\n   The formal syntax for the application/simple-message-summary\
    \ MIME\n   type is described below.  The message-context-class production is\n\
    \   defined in Section 6.2 of RFC 3458 [7].  Note that all productions\n   described\
    \ here are case insensitive.\n   message-summary = msg-status-line CRLF\n    \
    \                  [msg-account CRLF]\n                      [*(msg-summary-line\
    \ CRLF)]\n                      [ *opt-msg-headers ]\n   msg-status-line  = \"\
    Messages-Waiting\" HCOLON msg-status\n   msg-status = \"yes\" / \"no\"\n   msg-account\
    \ = \"Message-Account\" HCOLON Account-URI\n   Account-URI = SIP-URI / SIPS-URI\
    \ / absoluteURI\n   msg-summary-line = message-context-class HCOLON newmsgs SLASH\
    \ oldmsgs\n                   [ LPAREN new-urgentmsgs SLASH old-urgentmsgs RPAREN\
    \ ]\n   opt-msg-headers = CRLF 1*(extension-header CRLF)\n   newmsgs = msgcount\n\
    \   oldmsgs = msgcount\n   new-urgentmsgs = msgcount\n   old-urgentmsgs  = msgcount\n\
    \   msgcount = 1*DIGIT   ; MUST NOT exceed 2^32-1\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Message summaries and optional message bodies\
    \ contain information\n   which is typically very privacy sensitive.  At a minimum,\n\
    \   subscriptions to this event package SHOULD be authenticated and\n   properly\
    \ authorized.  Furthermore, notifications SHOULD be encrypted\n   and integrity\
    \ protected using either end-to-end mechanisms, or the\n   hop-by-hop protection\
    \ afforded messages sent to SIPS URIs.\n   Additional and privacy security considerations\
    \ are discussed in\n   detail in SIP [1] and SIP Events [2].\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  SIP Event Package Registration for message-summary
  contents:
  - "7.1.  SIP Event Package Registration for message-summary\n   Package name: message-summary\n\
    \   Type: package\n   Contact: [Mahy]\n   Published Specification: This document.\n"
- title: 7.2.  MIME Registration for application/simple-message-summary
  contents:
  - "7.2.  MIME Registration for application/simple-message-summary\n   MIME media\
    \ type name: application\n   MIME subtype name: simple-message-summary\n   Required\
    \ parameters: none.\n   Optional parameters: none.\n   Encoding considerations:\
    \   This MIME type was designed for\n     use with protocols which can carry binary-encoded\
    \ data.\n     Although the format of this MIME type is similar to RFC 2822,\n\
    \     it is not identical.  (Specifically, line folding rules are\n     SIP-specific\
    \ and included URIs can contain non-ASCII\n     characters.)  Protocols which\
    \ do not carry binary data\n     (which have line length or character-set restrictions\n\
    \     for example) MUST use a reversible transfer encoding\n     (such as base64)\
    \ to carry this MIME type.\n   Security considerations: See the \"Security Considerations\"\
    \n     section in this document.\n   Interoperability considerations: none\n \
    \  Published specification: This document.\n   Applications which use this media:\
    \ The simple-message-summary\n   application subtype supports the exchange of\
    \ message waiting and\n   message summary information in SIP networks.\n     \
    \    Additional information:\n              1. Magic number(s): N/A\n        \
    \      2. File extension(s): N/A\n              3. Macintosh file type code: N/A\n"
- title: 8.  Contributors
  contents:
  - "8.  Contributors\n   Ilya Slain came up with the initial format of the text body\
    \ contained\n   in this document.  He was previously listed as a co-author, however,\n\
    \   he is no longer reachable.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   Thanks to Dan Wing, Dave Oran, Bill Foster, Steve Levy,\
    \ Denise\n   Caballero-McCann, Jeff Michel, Priti Patil, Satyender Khatter, Bich\n\
    \   Nguyen, Manoj Bhatia, David Williams, and Bryan Byerly of Cisco,\n   Jonathan\
    \ Rosenberg and Adam Roach of Dynamicsoft, Eric Burger of\n   Snowshore, Nir Chen\
    \ of Comverse, and Eric Tremblay of Mediatrix.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n        Session Initiation Protocol\", RFC 3261, June 2002.\n   [2]\
    \  Roach, A.B., \"Session Initiation Protocol (SIP)-Specific Event\n        Notification\"\
    , RFC 3265, June 2002.\n   [3]  Bradner, S., \"Key words for use in RFCs to Indicate\
    \ Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [4]  Rosenberg,\
    \ J., Schulzrinne, H., and P. Kyzivat, \"Caller\n        Preferences for the Session\
    \ Initiation Protocol (SIP)\", RFC\n        3841, August 2004.\n   [5]  Rosenberg,\
    \ J., Schulzrinne, H., and P. Kyzivat, \"Indicating User\n        Agent Capabilities\
    \ in the Session Initiation Protocol (SIP)\",\n        RFC 3840, August 2004.\n\
    \   [6]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n       \
    \ Specifications: ABNF\", RFC 2234, November 1997.\n   [7]  Burger, E., Candell,\
    \ E., Eliot, C., and G. Klyne, \"Message\n        Context for Internet Mail\"\
    , RFC 3458, January 2003.\n"
- title: 10.2.  Informational References
  contents:
  - "10.2.  Informational References\n   [8]  Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n        Extensions (MIME) Part Two: Media Types\", RFC 2046,\
    \ November\n        1996.\n   [9] Resnick, P., Ed., \"Internet Message Format\"\
    , RFC 2822, April\n        2001.\n   [10] Rosenberg, J., Roach, A.B., and B. Campbell,\
    \ \"A Session\n        Initiation Protocol (SIP) Event Notification Extension\
    \ for\n        Resource Lists\", Work in Progress, June 2003.\n   [11] Telcordia,\
    \ \"GR-506: Signaling for Analog Interfaces, Issue 1,\n        Revision 1\", Nov\
    \ 1996.\n"
- title: 11.  Author's Address
  contents:
  - "11.  Author's Address\n   Rohan Mahy\n   Cisco Systems, Inc.\n   5617 Scotts\
    \ Valley Drive, Suite 200\n   Scotts Valley, CA 95066\n   USA\n   EMail: rohan@cisco.com\n"
- title: 12.  Full Copyright Statement
  contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
