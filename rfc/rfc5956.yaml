- title: __initial_text__
  contents:
  - "              Forward Error Correction Grouping Semantics\n                 \
    \ in the Session Description Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the semantics for grouping the associated\n\
    \   source and FEC-based (Forward Error Correction) repair flows in the\n   Session\
    \ Description Protocol (SDP).  The semantics defined in this\n   document are\
    \ to be used with the SDP Grouping Framework (RFC 5888).\n   These semantics allow\
    \ the description of grouping relationships\n   between the source and repair\
    \ flows when one or more source and/or\n   repair flows are associated in the\
    \ same group, and they provide\n   support for additive repair flows.  SSRC-level\
    \ (Synchronization\n   Source) grouping semantics are also defined in this document\
    \ for\n   Real-time Transport Protocol (RTP) streams using SSRC multiplexing.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5956.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements Notation ...........................................5\n  \
    \ 3. Requirements and Changes from RFC 4756 ..........................5\n    \
    \  3.1. FEC Grouping Requirements ..................................5\n      3.2.\
    \ Source and Repair Flow Associations ........................6\n      3.3. Support\
    \ for Additivity .....................................6\n   4. FEC Grouping ....................................................7\n\
    \      4.1. \"FEC-FR\" Grouping Semantics ................................7\n\
    \      4.2. SDP Example ................................................7\n  \
    \    4.3. FEC Grouping for SSRC-Multiplexed RTP Streams ..............9\n    \
    \  4.4. \"FEC\" Grouping Semantics ..................................10\n    \
    \  4.5. SDP Offer/Answer Model and RFC 4756\n           Backward-Compatibility\
    \ Considerations .....................11\n   5. Security Considerations ........................................12\n\
    \   6. IANA Considerations ............................................12\n  \
    \ 7. Acknowledgments ................................................13\n   8.\
    \ References .....................................................13\n      8.1.\
    \ Normative References ......................................13\n      8.2. Informative\
    \ References ....................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Any application that needs a reliable transmission over\
    \ an unreliable\n   packet network has to cope with packet losses.  Forward Error\n\
    \   Correction (FEC) is an effective approach that improves the\n   reliability\
    \ of the transmission, particularly in multicast and\n   broadcast applications\
    \ where the feedback from the receiver(s) is\n   potentially limited.\n   In a\
    \ nutshell, FEC groups source packets into blocks and applies\n   protection to\
    \ generate a desired number of repair packets.  These\n   repair packets may be\
    \ sent on demand or independently of any receiver\n   feedback.  The choice depends\
    \ on the FEC scheme, the packet loss\n   characteristics of the underlying network,\
    \ the transport scheme\n   (e.g., unicast, multicast, and broadcast), and the\
    \ application.  At\n   the receiver side, lost packets can be recovered by erasure\
    \ decoding,\n   provided that a sufficient number of source and repair packets\
    \ have\n   been received.\n   For example, one of the most basic FEC schemes is\
    \ the parity codes,\n   where an exclusive OR (XOR) operation is applied to a\
    \ group of\n   packets (i.e., source block) to generate a single repair packet.\
    \  At\n   the receiver side, this scheme provides a full recovery if only one\n\
    \   packet is lost within the source block and the repair packet is\n   received.\
    \  There are various other ways of generating repair packets,\n   possibly with\
    \ different loss-recovery capabilities.\n   The FEC Framework [FEC-FRAMEWK] outlines\
    \ a general framework for\n   using FEC codes in multimedia applications that\
    \ stream audio, video,\n   or other types of multimedia content.  The FEC Framework\n\
    \   specification states that source and repair packets must be carried\n   in\
    \ different streams, which are referred to as the source and repair\n   flows,\
    \ respectively.  At the receiver side, the receivers should know\n   which flows\
    \ are the source flows and which ones are the repair flows.\n   The receivers\
    \ should also know the exact association of the source\n   and repair flows so\
    \ that they can use the correct data to repair the\n   original content in case\
    \ there is a packet loss.  SDP [RFC4566] uses\n   [RFC5888] and this RFC for this\
    \ purpose.\n   In order to provide applications more flexibility, the FEC Framework\n\
    \   [FEC-FRAMEWK] allows a source flow to be protected by multiple FEC\n   schemes,\
    \ each of which requires an instance of the FEC Framework.\n   Thus, multiple\
    \ instances of the FEC Framework may exist at the sender\n   and the receiver(s).\
    \  Furthermore, within a single FEC Framework\n   instance, multiple source flows\
    \ may be grouped and protected by one\n   or more repair flows.\n   The FEC Framework\
    \ requires the source and repair packets to be\n   carried in different streams.\
    \  When the Real-time Transport Protocol\n   (RTP) [RFC3550] is used to carry\
    \ the source and repair streams, the\n   FEC Framework recommends that each stream\
    \ be carried in its own RTP\n   session.  This provides flexibility in using FEC\
    \ in a backward-\n   compatible manner.  However, in some scenarios, it may be\
    \ desirable\n   for a single RTP session to carry multiple RTP streams via\n \
    \  Synchronization Source (SSRC) multiplexing in order to reduce the\n   port\
    \ usage.  For such scenarios, appropriate grouping semantics are\n   also required.\n\
    \   A basic example scenario is shown in Figure 1.  Here, the source flow\n  \
    \ S1 is protected by the repair flow R1.  Also, the source flows S1 and\n   S2\
    \ are grouped and protected together by the repair flow R2.\n               SOURCE\
    \ FLOWS             | FEC FRAMEWORK INSTANCE #1\n             | S1: Source Flow\
    \ |--------| R1: Repair Flow\n         +---|\n         |   | S2: Source Flow\n\
    \         |\n         +______________________________| FEC FRAMEWORK INSTANCE\
    \ #2\n                                        | R2: Repair Flow\n   Figure 1:\
    \ Example scenario with two FEC Framework instances where R1\n            protects\
    \ S1 and R2 protects the group of S1 and S2\n   Grouping source flows before applying\
    \ FEC protection may allow us to\n   achieve a better coding performance.  As\
    \ a typical scenario, suppose\n   that source flows S1 and S2 in Figure 1 correspond\
    \ to the base and\n   enhancement layers in a layered video content, respectively.\
    \  The\n   repair flow R2 protects the combination of the base and enhancement\n\
    \   layers for the receivers that receive both layers, whereas the repair\n  \
    \ flow R1 protects the base layer only, for the receivers that want the\n   base\
    \ layer only or that receive both layers but prefer FEC protection\n   for the\
    \ base layer only due to a bandwidth or any other limitation.\n   The grouping\
    \ semantics defined in this document offer the flexibility\n   to determine how\
    \ source streams are grouped together prior to\n   applying FEC protection.  However,\
    \ not all FEC schemes may support\n   the full range of the possible scenarios\
    \ (e.g., when the source\n   streams carry different top-level media types such\
    \ as audio and\n   video).\n   Using multiple FEC Framework instances for a single\
    \ source flow\n   provides flexibility to the receivers.  An example scenario\
    \ is\n   sketched in Figure 2.  Different instances may offer repair flows\n \
    \  that are generated by different FEC schemes, and receivers choose to\n   receive\
    \ the appropriate repair flow(s) that they can support and\n   decode.  Alternatively,\
    \ different instances (whether or not they use\n   the same FEC scheme) may use\
    \ larger and smaller source block sizes,\n   which accommodate the receivers that\
    \ have looser and tighter latency\n   requirements, respectively.  In addition,\
    \ different instances may\n   also provide FEC protection at different redundancy\
    \ levels.  This is\n   particularly useful in multicast scenarios where different\
    \ receivers\n   may experience different packet loss rates and each receiver can\n\
    \   choose the repair flow that is tailored to its needs.\n           SOURCE FLOWS\
    \              | FEC FRAMEWORK INSTANCE #1\n           S3: Source Flow |---------|\
    \ R3: Repair Flow\n                           |\n                           |---------|\
    \ FEC FRAMEWORK INSTANCE #2\n                                     | R4: Repair\
    \ Flow\n     Figure 2: Example scenario with two FEC Framework instances, each\n\
    \       with a single repair flow protecting the same source flow S3\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Requirements and Changes from RFC 4756
  contents:
  - '3.  Requirements and Changes from RFC 4756

    '
- title: 3.1.  FEC Grouping Requirements
  contents:
  - "3.1.  FEC Grouping Requirements\n   As illustrated in the introduction and based\
    \ on the FEC Framework\n   [FEC-FRAMEWK], the SDP grouping semantics for FEC must\
    \ support the\n   ability to indicate that:\n   1.  A given source flow is protected\
    \ by multiple different FEC\n       schemes.\n   2.  Multiple repair flows are\
    \ associated with a given FEC scheme.\n   3.  Multiple source flows are grouped\
    \ prior to applying FEC\n       protection.\n   4.  One or more repair flows protect\
    \ a group of source flows.\n"
- title: 3.2.  Source and Repair Flow Associations
  contents:
  - "3.2.  Source and Repair Flow Associations\n   The FEC grouping semantics defined\
    \ in this document and the SDP\n   \"group\" attribute defined in [RFC5888] are\
    \ used to associate source\n   and repair flows.  This document also specifies\
    \ how the \"group\"\n   attribute is used to group multiple repair flows with\
    \ one or more\n   source flows.\n   Note that [RFC5888] obsoleted [RFC3388] to\
    \ allow an \"m\" line\n   identified by its \"mid\" attribute to appear in more\
    \ than one\n   \"a=group\" line using the same semantics.  With this change and\
    \ the\n   definitions contained in this document of the FEC grouping semantics,\n\
    \   a sender can indicate the specific associations between the source\n   and\
    \ repair flows, and a receiver can determine which repair flow(s)\n   protect\
    \ which source flow(s).\n   This document defines the FEC grouping semantics and\
    \ obsoletes\n   [RFC4756].  Implementations compliant with this document MUST\
    \ use the\n   semantics introduced in Sections 4.1 and 4.3.  In addition to\n\
    \   complying with the requirements defined in Sections 4.1 and 4.3,\n   implementations\
    \ are RECOMMENDED to support the \"FEC\" semantics\n   specified in Section 4.4\
    \ for backward-compatibility reasons in\n   scenarios described in Section 4.5.\n"
- title: 3.3.  Support for Additivity
  contents:
  - "3.3.  Support for Additivity\n   The FEC Framework [FEC-FRAMEWK] describes support\
    \ for additive repair\n   flows.  Additivity among the repair flows means that\
    \ multiple repair\n   flows may be decoded jointly to improve the recovery chances\
    \ of the\n   missing packets in a single or the same set of source flows.\n  \
    \ Additive repair flows can be generated by the same FEC scheme or\n   different\
    \ FEC schemes.\n   For example, in Figure 3, the repair flows R5 and R6 may be\
    \ additive\n   within the FEC Framework instance #1.  Alternatively, all three\n\
    \   repair flows R5, R6, and R7 could be additive, too.\n           SOURCE FLOWS\
    \              | FEC FRAMEWORK INSTANCE #1\n           S4: Source Flow |---------|\
    \ R5: Repair Flow\n                           |         | R6: Repair Flow\n  \
    \                         |\n                           |---------| FEC FRAMEWORK\
    \ INSTANCE #2\n                                     | R7: Repair Flow\n   Figure\
    \ 3: Example scenario with two FEC Framework instances where two\n    repair flows\
    \ in the first instance and a single repair flow in the\n              second\
    \ instance protect the same source flow S4\n   This document defines the mechanisms\
    \ to support additive repair flows\n   that were not included in [RFC4756].\n"
- title: 4.  FEC Grouping
  contents:
  - '4.  FEC Grouping

    '
- title: 4.1.  "FEC-FR" Grouping Semantics
  contents:
  - "4.1.  \"FEC-FR\" Grouping Semantics\n   Each \"a=group\" line is used to indicate\
    \ an association relationship\n   between the source and repair flows.  The flows\
    \ included in one\n   \"a=group\" line are called an FEC group.  If there is more\
    \ than one\n   repair flow included in an FEC group, these repair flows MUST be\n\
    \   considered to be additive.  Repair flows that are not additive MUST\n   be\
    \ indicated in separate FEC groups.  However, if two (or more)\n   repair flows\
    \ are additive in an FEC group, it does not necessarily\n   mean that these repair\
    \ flows will also be additive in any other FEC\n   group.  Generally, in order\
    \ to express multiple relations between the\n   source and repair flows, each\
    \ source and repair flow MAY appear in\n   more than one FEC group.\n   Using\
    \ the framework in [RFC5888], this document defines \"FEC-FR\" as\n   the grouping\
    \ semantics to indicate support for the FEC Framework\n   features.\n   The \"\
    a=group:FEC-FR\" semantics MUST be used to associate the source\n   and repair\
    \ flows except when the source and repair flows are\n   specified in the same\
    \ media description, i.e., in the same \"m\" line\n   (see Section 4.3).  Note\
    \ that additivity is not necessarily a\n   transitive relationship.  Thus, each\
    \ set of additive repair flows\n   MUST be stated explicitly in SDP, as illustrated\
    \ in the example\n   below.\n"
- title: 4.2.  SDP Example
  contents:
  - "4.2.  SDP Example\n   For the scenario sketched in Figure 1, we need to write\
    \ the following\n   SDP:\n        v=0\n        o=ali 1122334455 1122334466 IN\
    \ IP4 fec.example.com\n        s=FEC Grouping Semantics\n        t=0 0\n     \
    \   a=group:FEC-FR S1 R1\n        a=group:FEC-FR S1 S2 R2\n        m=video 30000\
    \ RTP/AVP 100\n        c=IN IP4 233.252.0.1/127\n        a=rtpmap:100 MP2T/90000\n\
    \        a=mid:S1\n        m=video 30000 RTP/AVP 101\n        c=IN IP4 233.252.0.2/127\n\
    \        a=rtpmap:101 MP2T/90000\n        a=mid:S2\n        m=application 30000\
    \ RTP/AVP 110\n        c=IN IP4 233.252.0.3/127\n        a=rtpmap:110 1d-interleaved-parityfec/90000\n\
    \        a=fmtp:110 L=5; D=10; repair-window=200000\n        a=mid:R1\n      \
    \  m=application 30000 RTP/AVP 111\n        c=IN IP4 233.252.0.4/127\n       \
    \ a=rtpmap:111 1d-interleaved-parityfec/90000\n        a=fmtp:111 L=10; D=10;\
    \ repair-window=400000\n        a=mid:R2\n   In this example, the source and repair\
    \ flows are carried in their own\n   RTP sessions, and the grouping is achieved\
    \ through the\n   \"a=group:FEC-FR\" lines.\n   For the additivity example, let\
    \ us consider the scenario sketched in\n   Figure 3.  Suppose that repair flows\
    \ R5 and R6 are additive but\n   repair flow R7 is not additive with any of the\
    \ other repair flows.\n   In this case, we must write\n        a=group:FEC-FR\
    \ S4 R5 R6\n        a=group:FEC-FR S4 R7\n   If none of the repair flows is additive,\
    \ we must write\n        a=group:FEC-FR S4 R5\n        a=group:FEC-FR S4 R6\n\
    \        a=group:FEC-FR S4 R7\n"
- title: 4.3.  FEC Grouping for SSRC-Multiplexed RTP Streams
  contents:
  - "4.3.  FEC Grouping for SSRC-Multiplexed RTP Streams\n   [RFC5576] defines an\
    \ SDP media-level attribute, called \"ssrc-group\",\n   for grouping the RTP streams\
    \ that are SSRC multiplexed and carried in\n   the same RTP session.  The grouping\
    \ is based on the Synchronization\n   Source (SSRC) identifiers.  Since SSRC-multiplexed\
    \ RTP streams are\n   defined in the same \"m\" line, the \"group\" attribute\
    \ cannot be used.\n   This section specifies how FEC is applied to source and\
    \ repair flows\n   for SSRC-multiplexed streams using the \"ssrc-group\" attribute\n\
    \   [RFC5576].  This section also specifies how the additivity of the\n   repair\
    \ flows is expressed for the SSRC-multiplexed streams.\n   The semantics of \"\
    FEC-FR\" for the \"ssrc-group\" attribute are the same\n   as those defined for\
    \ the \"group\" attribute, except that the SSRC\n   identifiers are used to designate\
    \ the FEC grouping associations:\n   a=ssrc-group:FEC-FR *(SP ssrc-id) [RFC5576].\n\
    \   The SSRC identifiers for the RTP streams that are carried in the same\n  \
    \ RTP session MUST be unique per [RFC3550].  However, the SSRC\n   identifiers\
    \ are not guaranteed to be unique among different RTP\n   sessions.  Thus, the\
    \ \"ssrc-group\" attribute MUST only be used at the\n   media level [RFC5576].\n\
    \   Let us consider the following scenario where there are two source\n   flows\
    \ (e.g., one video and one audio) and a single repair flow that\n   protects only\
    \ one of the source flows (e.g., video).  Suppose that\n   all these flows are\
    \ separate RTP streams that are SSRC multiplexed in\n   the same RTP session.\n\
    \                  SOURCE FLOWS             | FEC FRAMEWORK INSTANCE #1\n    \
    \              S5: Source Flow |--------| R8: Repair Flow\n                  S6:\
    \ Source Flow\n    Figure 4: Example scenario with one FEC Framework instance\
    \ where a\n         single repair flow protects only one of the source flows\n\
    \   The following SDP describes the scenario sketched in Figure 4.\n        v=0\n\
    \        o=ali 1122334455 1122334466 IN IP4 fec.example.com\n        s=FEC Grouping\
    \ Semantics for SSRC Multiplexing\n        t=0 0\n        m=video 30000 RTP/AVP\
    \ 100 101 110\n        c=IN IP4 233.252.0.1/127\n        a=rtpmap:100 JPEG/90000\n\
    \        a=rtpmap:101 L16/32000/2\n        a=rtpmap:110 1d-interleaved-parityfec/90000\n\
    \        a=fmtp:110 L=5; D=10; repair-window=200000\n        a=ssrc:1000 cname:fec@example.com\n\
    \        a=ssrc:1010 cname:fec@example.com\n        a=ssrc:2110 cname:fec@example.com\n\
    \        a=ssrc-group:FEC-FR 1000 2110\n        a=mid:Group1\n   Note that in\
    \ actual use, SSRC values, which are random 32-bit\n   numbers, may be much larger\
    \ than the ones shown in this example.\n   Also, note that before receiving an\
    \ RTP packet for each stream, the\n   receiver cannot know which SSRC identifier\
    \ is associated with which\n   payload type.\n   The additivity of the repair\
    \ flows is handled in the same way as\n   described in Section 4.2.  In other\
    \ words, the repair flows that are\n   included in an \"a=ssrc-group\" line MUST\
    \ be additive.  Repair flows\n   that are not additive MUST be indicated in separate\
    \ \"a=ssrc-group\"\n   lines.\n"
- title: 4.4.  "FEC" Grouping Semantics
  contents:
  - "4.4.  \"FEC\" Grouping Semantics\n   This document deprecates the usage of the\
    \ \"FEC\" semantics.  Sessions\n   negotiated between two endpoints implementing\
    \ this specification MUST\n   use the \"FEC-FR\" semantics and not the \"FEC\"\
    \ semantics.  Section 4.5\n   details how an implementation supporting this specification\
    \ detects\n   peers that do not support this specification (based on their SDP\n\
    \   answer to the initial offer).  When this occurs, the offering\n   implementation\
    \ SHOULD initiate a new offer using the \"FEC\" semantics\n   as defined in this\
    \ section.\n   The \"FEC\" grouping semantics had been originally introduced in\n\
    \   [RFC4756].  The \"FEC\" semantics used the \"a=group\" line from\n   [RFC3388]\
    \ to form an FEC group to indicate the association\n   relationship between the\
    \ source and repair flows.\n   In the \"FEC\" semantics, a source or repair flow\
    \ can only appear in a\n   single \"a=group:FEC\" line.  Thus, all the source\
    \ and repair flows\n   that are somehow related to each other have to be listed\
    \ in the same\n   \"a=group:FEC\" line.  For example, for the scenario sketched\
    \ in\n   Figure 1, we have to write \"a=group:FEC S1 S2 R1 R2\" regardless of\n\
    \   which repair flows protect which particular source flows.  Similarly,\n  \
    \ for the scenario sketched in Figure 3, we have to write \"a=group:FEC\n   S4\
    \ R5 R6 R7\" regardless of which repair flows are additive.  However,\n   the\
    \ interpretation of these lines would be ambiguous.\n   In certain simple scenarios,\
    \ such as where there is one source flow\n   and one repair flow, these limitations\
    \ may not be a concern.  In\n   Offer/Answer model scenarios, when the \"FEC-FR\"\
    \ semantics are not\n   understood by the answerer, the \"FEC\" semantics can\
    \ be offered, as\n   long as the \"FEC\" semantics provide an exact association\
    \ among the\n   source and repair flows and do not create any ambiguity.  See\n\
    \   Section 4.5 for details.\n"
- title: 4.5.  SDP Offer/Answer Model and RFC 4756 Backward-Compatibility
  contents:
  - "4.5.  SDP Offer/Answer Model and RFC 4756 Backward-Compatibility\n      Considerations\n\
    \   When offering FEC grouping using SDP in an Offer/Answer model\n   [RFC3264],\
    \ the following considerations apply.\n   A node that is receiving an offer from\
    \ a sender may or may not\n   understand line grouping.  It is also possible that\
    \ the node\n   understands line grouping but it does not understand the \"FEC-FR\"\
    \n   semantics.  From the viewpoint of the sender of the offer, these\n   cases\
    \ are indistinguishable.\n   Implementations are RECOMMENDED to support the \"\
    FEC\" semantics\n   specified in Section 4.4 for backward-compatibility reasons.\
    \  If the\n   sender of the offer supports the \"FEC\" semantics, it SHOULD fall\
    \ back\n   to using the \"FEC\" semantics when the \"FEC-FR\" semantics are not\n\
    \   understood by the node.\n   When a node is offered a session with the \"FEC-FR\"\
    \ grouping\n   semantics, but it does not support line grouping or the FEC grouping\n\
    \   semantics, as per [RFC5888], the node responds to the offer with one\n   of\
    \ the following:\n   o  An answer that ignores the grouping attribute.\n     \
    \ In this case, if the original sender of the offer\n      *  supports the \"\
    FEC\" semantics described in Section 4.4, it MUST\n         first check whether\
    \ or not using the \"FEC\" semantics will\n         create any ambiguity.  If\
    \ using the \"FEC\" semantics still\n         provides an exact association among\
    \ the source and repair\n         flows, the sender SHOULD send a new offer using\
    \ the \"FEC\"\n         semantics.  However, if an exact association cannot be\n\
    \         described, it MUST send a new offer without FEC.\n      *  does not\
    \ support the \"FEC\" semantics described in Section 4.4,\n         it MUST send\
    \ a new offer without FEC.\n   o  A refusal to the request (e.g., 488 Not Acceptable\
    \ Here or 606 Not\n      Acceptable in SIP).\n      In this case, if the original\
    \ sender of the offer\n      *  supports the \"FEC\" semantics and still wishes\
    \ to establish the\n         session, it MUST first check whether or not using\
    \ the \"FEC\"\n         semantics will create any ambiguity.  If using the \"\
    FEC\"\n         semantics still provides an exact association among the source\n\
    \         and repair flows, the sender SHOULD send a new offer using the\n   \
    \      \"FEC\" semantics.  However, if an exact association cannot be\n      \
    \   described, it SHOULD send a new offer without FEC.\n      *  does not support\
    \ the \"FEC\" semantics described in Section 4.4,\n         it SHOULD send a new\
    \ offer without FEC.\n   In both cases described above, when the sender of the\
    \ offer sends a\n   new offer with the \"FEC\" semantics, and the node understands\
    \ it, the\n   session will be established, and the rules pertaining to the \"\
    FEC\"\n   semantics will apply.\n   As specified in [RFC5888], if the node does\
    \ not understand the \"FEC\"\n   semantics, it responds to the offer with either\
    \ (1) an answer that\n   ignores the grouping attribute or (2) a refusal to the\
    \ request.  In\n   the first case, the sender must send a new offer without FEC.\
    \  In the\n   second case, if the sender still wishes to establish the session,\
    \ it\n   should retry the request with an offer without FEC.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   There is a weak threat for the receiver that\
    \ the FEC grouping can be\n   modified to indicate FEC relationships that do not\
    \ exist.  Such\n   attacks may result in failure of FEC to protect, and/or to\
    \ mishandle,\n   other media payload streams.  The receiver SHOULD do an integrity\n\
    \   check on SDP and follow the security considerations of SDP [RFC4566]\n   to\
    \ trust only SDP from trusted sources.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document registers the following semantics with\
    \ IANA in the\n   \"Semantics for the \"group\" SDP Attribute\" registry under\
    \ SDP\n   Parameters:\n   Semantics                              Token   Reference\n\
    \   -------------------------------------  ------  ---------\n   Forward Error\
    \ Correction (Deprecated)  FEC     [RFC5956]\n   Forward Error Correction FR \
    \           FEC-FR  [RFC5956]\n   This document also registers the following semantics\
    \ with IANA in the\n   \"Semantics for the \"ssrc-group\" SDP Attribute\" registry\
    \ under SDP\n   Parameters:\n   Token    Semantics                      Reference\n\
    \   -------  -----------------------------  ---------\n   FEC-FR   Forward Error\
    \ Correction FR    [RFC5956]\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Some parts of this document are based on [RFC4756]. \
    \ Thus, the author\n   would like to thank those who contributed to [RFC4756].\
    \  Also, thanks\n   to Jonathan Lennox, who has contributed to Section 4.3; and\n\
    \   Jean-Francois Mule, who has reviewed this document in great detail\n   and\
    \ suggested text edits.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]      Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC3264]      Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer\n\
    \                  Model with Session Description Protocol (SDP)\",\n        \
    \          RFC 3264, June 2002.\n   [RFC3550]      Schulzrinne, H., Casner, S.,\
    \ Frederick, R., and V.\n                  Jacobson, \"RTP: A Transport Protocol\
    \ for Real-Time\n                  Applications\", STD 64, RFC 3550, July 2003.\n\
    \   [RFC4566]      Handley, M., Jacobson, V., and C. Perkins, \"SDP:\n       \
    \           Session Description Protocol\", RFC 4566, July 2006.\n   [RFC5576]\
    \      Lennox, J., Ott, J., and T. Schierl, \"Source-Specific\n              \
    \    Media Attributes in the Session Description Protocol\n                  (SDP)\"\
    , RFC 5576, June 2009.\n   [RFC5888]      Camarillo, G. and H. Schulzrinne, \"\
    The Session\n                  Description Protocol (SDP) Grouping Framework\"\
    ,\n                  RFC 5888, June 2010.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [FEC-FRAMEWK]  Watson, M., \"Forward Error Correction\
    \ (FEC)\n                  Framework\", Work in Progress, September 2010.\n  \
    \ [RFC3388]      Camarillo, G., Eriksson, G., Holler, J., and H.\n           \
    \       Schulzrinne, \"Grouping of Media Lines in the Session\n              \
    \    Description Protocol (SDP)\", RFC 3388, December 2002.\n   [RFC4756]    \
    \  Li, A., \"Forward Error Correction Grouping Semantics\n                  in\
    \ Session Description Protocol\", RFC 4756,\n                  November 2006.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ali Begen\n   Cisco\n   181 Bay Street\n   Toronto, ON \
    \ M5J 2T3\n   Canada\n   EMail:  abegen@cisco.com\n"
