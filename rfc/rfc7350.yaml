- contents:
  - "         Datagram Transport Layer Security (DTLS) as Transport\n             for
    Session Traversal Utilities for NAT (STUN)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies the usage of Datagram Transport Layer\n
    \  Security (DTLS) as a transport protocol for Session Traversal\n   Utilities
    for NAT (STUN).  It provides guidance on when and how to\n   use DTLS with the
    currently standardized STUN usages.  It also\n   specifies modifications to the
    STUN and Traversal Using Relay NAT\n   (TURN) URIs and to the TURN resolution
    mechanism to facilitate the\n   resolution of STUN and TURN URIs into the IP address
    and port of STUN\n   and TURN servers supporting DTLS as a transport protocol.
    \ This\n   document updates RFCs 5389 and 5928.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7350.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  DTLS as Transport for STUN  . . . . . . . . . . . . . . . .
    .   3\n   4.  STUN Usages . . . . . . . . . . . . . . . . . . . . . . . . .   4\n
    \    4.1.  NAT Discovery Usage . . . . . . . . . . . . . . . . . . .   4\n       4.1.1.
    \ DTLS Support in STUN URIs . . . . . . . . . . . . . .   5\n     4.2.  Connectivity
    Check Usage  . . . . . . . . . . . . . . . .   5\n     4.3.  Media Keep-Alive
    Usage  . . . . . . . . . . . . . . . . .   5\n     4.4.  SIP Keep-Alive Usage
    \ . . . . . . . . . . . . . . . . . .   6\n     4.5.  NAT Behavior Discovery Usage
    \ . . . . . . . . . . . . . .   6\n     4.6.  TURN Usage  . . . . . . . . . .
    . . . . . . . . . . . . .   6\n       4.6.1.  DTLS Support in TURN URIs . . .
    . . . . . . . . . . .   7\n       4.6.2.  Resolution Mechanism for TURN over DTLS
    . . . . . . .   7\n   5.  Security Considerations . . . . . . . . . . . . . .
    . . . . .   8\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . .
    . . .   9\n     6.1.  S-NAPTR Application Protocol Tag  . . . . . . . . . . .
    .   9\n     6.2.  Service Name and Transport Protocol Port Number . . . . .   9\n
    \      6.2.1.  The \"stuns\" Service Name  . . . . . . . . . . . . . .  10\n       6.2.2.
    \ The \"turns\" Service Name  . . . . . . . . . . . . . .  11\n   7.  Acknowledgements
    \ . . . . . . . . . . . . . . . . . . . . . .  11\n   8.  References  . . . .
    . . . . . . . . . . . . . . . . . . . . .  12\n     8.1.  Normative References
    \ . . . . . . . . . . . . . . . . . .  12\n     8.2.  Informative References  .
    . . . . . . . . . . . . . . . .  13\n   Appendix A.  Examples . . . . . . . .
    . . . . . . . . . . . . . .  14\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   STUN [RFC5389] defines Transport Layer Security (TLS) over
    TCP\n   (simply referred to as TLS [RFC5246]) as the transport for STUN due\n
    \  to additional security advantages it offers over plain UDP or TCP\n   transport.
    \ But, TCP (and thus TLS-over-TCP) is not an optimal\n   transport when STUN is
    used for its originally intended purpose,\n   which is to support multimedia sessions.
    \ This is a well documented\n   and understood transport limitation for real-time
    communications.\n   DTLS-over-UDP (referred to in this document as simply DTLS
    [RFC6347])\n   offers the same security advantages as TLS-over-TCP, but without
    the\n   undesirable concerns.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"MAY\",
    and \"OPTIONAL\"\n   in this document are to be interpreted as described in [RFC2119]
    when\n   they appear in ALL CAPS.  When these words are not in ALL CAPS (such\n
    \  as \"must\" or \"Must\"), they have their usual English meanings, and are\n
    \  not to be interpreted as RFC 2119 key words.\n"
  title: 2.  Terminology
- contents:
  - "3.  DTLS as Transport for STUN\n   STUN [RFC5389] defines three transports: UDP,
    TCP, and TLS.  This\n   document adds DTLS as a valid transport for STUN.\n   STUN
    over DTLS MUST use the same retransmission rules as STUN over\n   UDP (as described
    in Section 7.2.1 of [RFC5389]).  It MUST also use\n   the same rules that are
    described in Section 7.2.2 of [RFC5389] to\n   verify the server identity.  Instead
    of TLS_RSA_WITH_AES_128_CBC_SHA,\n   which is the default cipher suite for STUN
    over TLS, implementations\n   of STUN over DTLS, and deployed clients and servers,
    MUST support\n   TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 and\n   TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
    and MAY support other cipher\n   suites.  Perfect Forward Secrecy (PFS) cipher
    suites MUST be\n   preferred over non-PFS cipher suites.  Cipher suites with known\n
    \  weaknesses, such as those based on (single) DES and RC4, MUST NOT be\n   used.
    \ Implementations MUST disable TLS-level compression.  The same\n   rules established
    in Section 7.2.2 of [RFC5389] for keeping open and\n   closing TCP/TLS connections
    MUST be used as well for DTLS\n   associations.\n   In addition to the path MTU
    rules described in Section 7.1 of\n   [RFC5389], if the path MTU is unknown, the
    actual STUN message needs\n   to be adjusted to take into account the size of
    the (13-byte) DTLS\n   Record header, the MAC size, and the padding size.\n   By
    default, STUN over DTLS MUST use port 5349, the same port number\n   as STUN over
    TLS.  However, the Service Record (SRV) procedures can\n   be implemented to use
    a different port (as described in Section 9 of\n   [RFC5389]).  When using SRV
    records, the service name MUST be set to\n   \"stuns\" and the protocol name to
    \"udp\".\n   Classic STUN [RFC3489] (which was obsoleted by [RFC5389]) defines\n
    \  only UDP as a transport, and DTLS MUST NOT be used.  Any STUN request\n   or
    indication without the magic cookie (see Section 6 of [RFC5389])\n   over DTLS
    MUST always result in an error.\n"
  title: 3.  DTLS as Transport for STUN
- contents:
  - "4.  STUN Usages\n   Section 7.2 of [RFC5389] states that STUN usages must specify
    which\n   transport protocol is used.  The following sections discuss if and\n
    \  how the existing STUN usages are used with DTLS as the transport.\n   Future
    STUN usages MUST take into account DTLS as a transport and\n   discuss its applicability.
    \ In all cases, new STUN usages MUST\n   explicitly state if implementing the
    denial-of-service countermeasure\n   described in Section 4.2.1 of [RFC6347] is
    mandatory.\n"
  - contents:
    - "4.1.  NAT Discovery Usage\n   As stated by Section 13 of [RFC5389], \"...TLS
      provides minimal\n   security benefits...\" for this particular STUN usage.
      \ DTLS will also\n   similarly offer only limited benefit.  This is because
      the only\n   mandatory attribute that is TLS/DTLS protected is the\n   XOR-MAPPED-ADDRESS,
      which is already known by an on-path attacker,\n   since it is the same as the
      source address and port of the STUN\n   request.  On the other hand, using TLS/DTLS
      will prevent an active\n   attacker to inject XOR-MAPPED-ADDRESS in responses.
      \ The TLS/DTLS\n   transport will also protect the SOFTWARE attribute, which
      can be used\n   to find vulnerabilities in STUN implementations.\n   Regardless,
      this usage is rarely used by itself, since using TURN\n   [RFC5766] with Interactive
      Connectivity Establishment (ICE) [RFC5245]\n   is generally indispensable, and
      TURN provides the same NAT Discovery\n   feature as part of an allocation creation.
      \ In fact, with ICE, the\n   NAT Discovery usage is only used when there is
      no longer any resource\n   available for new allocations in the TURN server.\n
      \  A STUN server implementing the NAT Discovery usage and using DTLS\n   MUST
      implement the denial-of-service countermeasure described in\n   Section 4.2.1
      of [RFC6347].\n"
    - contents:
      - "4.1.1.  DTLS Support in STUN URIs\n   This document does not make any changes
        to the syntax of a STUN URI\n   [RFC7064].  As indicated in Section 3.2 of
        [RFC7064], secure\n   transports like STUN over TLS, and now STUN over DTLS,
        MUST use the\n   \"stuns\" URI scheme.\n   The <host> value MUST be used when
        using the rules in Section 7.2.2\n   of [RFC5389] to verify the server identity.
        \ A STUN URI containing an\n   IP address MUST be rejected, unless the domain
        name is provided by\n   the same mechanism that provided the STUN URI, and
        that domain name\n   can be passed to the verification code.\n"
      title: 4.1.1.  DTLS Support in STUN URIs
    title: 4.1.  NAT Discovery Usage
  - contents:
    - "4.2.  Connectivity Check Usage\n   Using DTLS would hide the USERNAME, PRIORITY,
      USE-CANDIDATE,\n   ICE-CONTROLLED, and ICE-CONTROLLING attributes.  But, because\n
      \  MESSAGE-INTEGRITY protects the entire STUN response using a password\n   that
      is known only by looking at the Session Description Protocol\n   (SDP) exchanged,
      it is not possible for an attacker that does not\n   have access to this SDP
      to inject an incorrect XOR-MAPPED-ADDRESS,\n   which would subsequently be used
      as a peer reflexive candidate.\n   Adding DTLS on top of the connectivity check
      would delay, and\n   consequently impair, the ICE process.  Adding additional
      round trips\n   to ICE is undesirable, so much that there is a proposal ([ICE-DTLS])\n
      \  to use the DTLS handshake used by the WebRTC Secure Real-time\n   Transport
      Protocol (SRTP) streams as a replacement for the\n   connectivity checks.\n
      \  STUN URIs are not used with this usage.\n"
    title: 4.2.  Connectivity Check Usage
  - contents:
    - "4.3.  Media Keep-Alive Usage\n   When STUN Binding Indications are being used
      for media keep-alive\n   (described in Section 10 of [RFC5245]), it runs alongside
      an RTP or\n   RTP Control Protocol (RTCP) session.  It is possible to send these\n
      \  media keep-alive packets inside a separately negotiated non-SRTP DTLS\n   session
      if DTLS-SRTP [RFC5764] is used, but that would add overhead,\n   with minimal
      security benefit.\n   STUN URIs are not used with this usage.\n"
    title: 4.3.  Media Keep-Alive Usage
  - contents:
    - "4.4.  SIP Keep-Alive Usage\n   The SIP keep-alive (described in [RFC5626])
      runs inside a SIP flow.\n   This flow would be protected if a SIP over DTLS
      transport mechanism\n   is implemented (such as described in [SIP-DTLS]).\n
      \  STUN URIs are not used with this usage.\n"
    title: 4.4.  SIP Keep-Alive Usage
  - contents:
    - "4.5.  NAT Behavior Discovery Usage\n   The NAT Behavior Discovery usage is
      Experimental and to date has\n   never been effectively deployed.  Despite this,
      using DTLS would add\n   the same security properties as for the NAT Discovery
      usage\n   (Section 4.1).\n   The STUN URI can be used to access the NAT Discovery
      feature of a NAT\n   Behavior Discovery server, but accessing the full features
      would\n   require definition of a \"stun-behaviors:\" URI, which is out of scope\n
      \  for this document.\n   A STUN server implementing the NAT Behavior Discovery
      usage and using\n   DTLS MUST implement the denial-of-service countermeasure
      described in\n   Section 4.2.1 of [RFC6347].\n"
    title: 4.5.  NAT Behavior Discovery Usage
  - contents:
    - "4.6.  TURN Usage\n   TURN [RFC5766] defines three combinations of transports/allocations:\n
      \  UDP/UDP, TCP/UDP, and TLS/UDP.  This document adds DTLS/UDP as a\n   valid
      combination.  A TURN server using DTLS MUST implement the\n   denial-of-service
      countermeasure described in Section 4.2.1 of\n   [RFC6347].\n   [RFC6062] states
      that TCP allocations cannot be obtained using a UDP\n   association between
      client and server.  The fact that DTLS uses UDP\n   implies that TCP allocations
      MUST NOT be obtained using a DTLS\n   association between client and server.\n
      \  By default, TURN over DTLS uses port 5349, the same port number as\n   TURN
      over TLS.  However, the SRV procedures can be implemented to use\n   a different
      port (as described in Section 6 of [RFC5766]).  When\n   using SRV records,
      the service name MUST be set to \"turns\" and the\n   protocol name to \"udp\".\n"
    - contents:
      - "4.6.1.  DTLS Support in TURN URIs\n   This document does not make any changes
        to the syntax of a TURN URI\n   [RFC7065].  As indicated in Section 3 of [RFC7065],
        secure transports\n   like TURN over TLS, and now TURN over DTLS, MUST use
        the \"turns\" URI\n   scheme.  When using the \"turns\" URI scheme to designate
        TURN over\n   DTLS, the transport value of the TURN URI, if set, MUST be \"udp\".\n
        \  The <host> value MUST be used when using the rules in Section 7.2.2\n   of
        [RFC5389] to verify the server identity.  A TURN URI containing an\n   IP
        address MUST be rejected, unless the domain is provided by the\n   same mechanism
        that provided the TURN URI, and that domain name can\n   be passed to the
        verification code.\n"
      title: 4.6.1.  DTLS Support in TURN URIs
    - contents:
      - "4.6.2.  Resolution Mechanism for TURN over DTLS\n   This document defines
        a new Straightforward-Naming Authority Pointer\n   (S-NAPTR) application protocol
        tag: \"turn.dtls\".\n   The <transport> component, as provisioned or resulting
        from the\n   parsing of a TURN URI, is passed without modification to the
        TURN\n   resolution mechanism defined in Section 3 of [RFC5928], but with
        the\n   following alterations to that algorithm:\n   o  The acceptable values
        for the transport name are extended with the\n      addition of \"dtls\".\n
        \  o  The acceptable values in the ordered list of supported TURN\n      transports
        is extended with the addition of \"Datagram Transport\n      Layer Security
        (DTLS)\".\n   o  The resolution algorithm check rules list is extended with
        the\n      addition of the following step:\n         If <secure> is true and
        <transport> is defined as \"udp\" but the\n         list of TURN transports
        supported by the application does not\n         contain DTLS, then the resolution
        MUST stop with an error.\n   o  The 5th rule of the resolution algorithm check
        rules list is\n      modified to read like this:\n         If <secure> is
        true and <transport> is not defined but the list\n         of TURN transports
        supported by the application does not\n         contain TLS or DTLS, then
        the resolution MUST stop with an\n         error.\n   o  Table 1 is modified
        to add the following line:\n                +----------+-------------+----------------+\n
        \               | <secure> | <transport> | TURN Transport |\n                +----------+-------------+----------------+\n
        \               | true     | \"udp\"       | DTLS           |\n                +----------+-------------+----------------+\n
        \  o  In step 1 of the resolution algorithm, the default port for DTLS\n      is
        5349.\n   o  In step 4 of the resolution algorithm, the following is added
        to\n      the list of conversions between the filtered list of TURN\n      transports
        supported by the application and application protocol\n      tags:\n         \"turn.dtls\"
        is used if the TURN transport is DTLS.\n   Note that using the resolution
        mechanism in [RFC5928] does not imply\n   that additional round trips to the
        DNS server will be needed (e.g.,\n   the TURN client will start immediately
        if the TURN URI contains an IP\n   address).\n"
      title: 4.6.2.  Resolution Mechanism for TURN over DTLS
    title: 4.6.  TURN Usage
  title: 4.  STUN Usages
- contents:
  - "5.  Security Considerations\n   STUN over DTLS as a STUN transport does not introduce
    any specific\n   security considerations beyond those for STUN over TLS detailed
    in\n   [RFC5389].\n   The usage of \"udp\" as a transport parameter with the \"stuns\"
    URI\n   scheme does not introduce any specific security issues beyond those\n
    \  discussed in [RFC7064].\n   TURN over DTLS as a TURN transport does not introduce
    any specific\n   security considerations beyond those for TURN over TLS detailed
    in\n   [RFC5766].\n   The usage of \"udp\" as a transport parameter with the \"turns\"
    URI\n   scheme does not introduce any specific security issues beyond those\n
    \  discussed in [RFC7065].\n   The new S-NAPTR application protocol tag defined
    in this document as\n   well as the modifications this document makes to the TURN
    resolution\n   mechanism described in [RFC5928] do not introduce any additional\n
    \  security considerations beyond those outlined in [RFC5928].\n"
  title: 5.  Security Considerations
- contents:
  - '6.  IANA Considerations

    '
  - contents:
    - "6.1.  S-NAPTR Application Protocol Tag\n   This specification contains the
      registration information for one\n   S-NAPTR application protocol tag in the
      \"Straightforward-NAPTR\n   (S-NAPTR) Parameters\" registry under \"S-NAPTR
      Application Protocol\n   Tags\" (in accordance with [RFC3958]).\n    Application
      Protocol Tag:  turn.dtls\n    Intended Usage:  See Section 4.6.2\n    Interoperability
      considerations:  N/A\n    Security considerations:  See Section 5\n    Relevant
      publications:  This document\n    Contact information:  Marc Petit-Huguenin
      <petithug@acm.org>\n    Author/Change controller:  The IESG\n"
    title: 6.1.  S-NAPTR Application Protocol Tag
  - contents:
    - "6.2.  Service Name and Transport Protocol Port Number\n   This specification
      contains the registration information for two\n   Service Name and Transport
      Protocol Port Numbers in the \"Service\n   Names and Transport Protocol Port
      Numbers/Service Name and Transport\n   Protocol Port Number\" registry (in accordance
      with [RFC6335]).\n"
    - contents:
      - "6.2.1.  The \"stuns\" Service Name\n   IANA has modified the following entry
        in the registry \"Service Names\n   and Transport Protocol Port Numbers/Service
        Name and Transport\n   Protocol Port Number\":\n    Service Name:  stuns\n
        \   PortNumber:  5349\n    Transport Protocol:  udp\n    Description:  Reserved
        for a future enhancement of STUN\n    Assignee:\n    Contact:\n    Reference:
        \ RFC 5389\n   So that it contains the following:\n    Service Name:  stuns\n
        \   Port Number:  5349\n    Transport Protocol:  udp\n    Description:  STUN
        over DTLS\n    Assignee:  IESG\n    Contact:  IETF Chair <chair@ietf.org>\n
        \   Reference:  RFC 7350\n    Assignment Notes:  This service name was initially
        created by\n       RFC 5389.\n"
      title: 6.2.1.  The "stuns" Service Name
    - contents:
      - "6.2.2.  The \"turns\" Service Name\n   IANA has modified the following entry
        in the registry \"Service Names\n   and Transport Protocol Port Numbers/Service
        Name and Transport\n   Protocol Port Number\":\n    Service Name:  turns\n
        \   Port Number:  5349\n    Transport Protocol:  udp\n    Description:  Reserved
        for a future enhancement of TURN\n    Assignee:\n    Contact:\n    Reference:
        \ RFC 5766\n   So that it contains the following:\n    Service Name:  turns\n
        \   Port Number:  5349\n    Transport Protocol:  udp\n    Description:  TURN
        over DTLS\n    Assignee:  IESG\n    Contact:  IETF Chair <chair@ietf.org>\n
        \   Reference:  RFC 7350\n    Assignment Notes:  This service name was initially
        created by\n       RFC 5766.\n"
      title: 6.2.2.  The "turns" Service Name
    title: 6.2.  Service Name and Transport Protocol Port Number
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgements\n   Thanks to Alan Johnston, Oleg Moskalenko, Simon Perreault,
    Thomas\n   Stach, Simon Josefsson, Roni Even, Kathleen Moriarty, Benoit Claise,\n
    \  Martin Stiemerling, Jari Arkko, and Stephen Farrell for the comments,\n   suggestions,
    and questions that helped improve this document.\n"
  title: 7.  Acknowledgements
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3489]  Rosenberg, J., Weinberger, J., Huitema, C., and R. Mahy,\n
      \             \"STUN - Simple Traversal of User Datagram Protocol (UDP)\n              Through
      Network Address Translators (NATs)\", RFC 3489,\n              March 2003.\n
      \  [RFC3958]  Daigle, L. and A. Newton, \"Domain-Based Application\n              Service
      Location Using SRV RRs and the Dynamic Delegation\n              Discovery Service
      (DDDS)\", RFC 3958, January 2005.\n   [RFC5245]  Rosenberg, J., \"Interactive
      Connectivity Establishment\n              (ICE): A Protocol for Network Address
      Translator (NAT)\n              Traversal for Offer/Answer Protocols\", RFC
      5245, April\n              2010.\n   [RFC5246]  Dierks, T. and E. Rescorla,
      \"The Transport Layer Security\n              (TLS) Protocol Version 1.2\",
      RFC 5246, August 2008.\n   [RFC5389]  Rosenberg, J., Mahy, R., Matthews, P.,
      and D. Wing,\n              \"Session Traversal Utilities for NAT (STUN)\",
      RFC 5389,\n              October 2008.\n   [RFC5626]  Jennings, C., Mahy, R.,
      and F. Audet, \"Managing Client-\n              Initiated Connections in the
      Session Initiation Protocol\n              (SIP)\", RFC 5626, October 2009.\n
      \  [RFC5764]  McGrew, D. and E. Rescorla, \"Datagram Transport Layer\n              Security
      (DTLS) Extension to Establish Keys for the Secure\n              Real-time Transport
      Protocol (SRTP)\", RFC 5764, May 2010.\n   [RFC5766]  Mahy, R., Matthews, P.,
      and J. Rosenberg, \"Traversal Using\n              Relays around NAT (TURN):
      Relay Extensions to Session\n              Traversal Utilities for NAT (STUN)\",
      RFC 5766, April 2010.\n   [RFC5928]  Petit-Huguenin, M., \"Traversal Using Relays
      around NAT\n              (TURN) Resolution Mechanism\", RFC 5928, August 2010.\n
      \  [RFC6062]  Perreault, S. and J. Rosenberg, \"Traversal Using Relays\n              around
      NAT (TURN) Extensions for TCP Allocations\", RFC\n              6062, November
      2010.\n   [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and
      S.\n              Cheshire, \"Internet Assigned Numbers Authority (IANA)\n              Procedures
      for the Management of the Service Name and\n              Transport Protocol
      Port Number Registry\", BCP 165, RFC\n              6335, August 2011.\n   [RFC6347]
      \ Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n              Security
      Version 1.2\", RFC 6347, January 2012.\n   [RFC7064]  Nandakumar, S., Salgueiro,
      G., Jones, P., and M. Petit-\n              Huguenin, \"URI Scheme for the Session
      Traversal Utilities\n              for NAT (STUN) Protocol\", RFC 7064, November
      2013.\n   [RFC7065]  Petit-Huguenin, M., Nandakumar, S., Salgueiro, G., and
      P.\n              Jones, \"Traversal Using Relays around NAT (TURN) Uniform\n
      \             Resource Identifiers\", RFC 7065, November 2013.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [ICE-DTLS] Thomson, M., \"Using Datagram Transport
      Layer Security\n              (DTLS) For Interactivity Connectivity Establishment
      (ICE)\n              Connectivity Checking: ICE-DTLS\", Work in Progress, March\n
      \             2012.\n   [SIP-DTLS] Jennings, C. and N. Modadugu, \"Session Initiation
      Protocol\n              (SIP) over Datagram Transport Layer Security (DTLS)\",
      Work\n              in Progress, October 2007.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  Examples\n   Table 1 shows how the <secure>, <port>, and <transport>
    components\n   are populated for a TURN URI that uses DTLS as its transport.  For\n
    \  all these examples, the <host> component is populated with\n   \"example.net\".\n
    \  +---------------------------------+----------+--------+-------------+\n   |
    URI                             | <secure> | <port> | <transport> |\n   +---------------------------------+----------+--------+-------------+\n
    \  | turns:example.net?transport=udp | true     |        | DTLS        |\n   +---------------------------------+----------+--------+-------------+\n
    \                                 Table 1\n   With the DNS Resource Records (RRs)
    in Figure 1 and an ordered TURN\n   transport list of {DTLS, TLS, TCP, UDP}, the
    resolution algorithm\n   will convert the TURN URI \"turns:example.net\" to the
    ordered list of\n   IP address, port, and protocol tuples in Table 2.\n   example.net.\n
    \  IN NAPTR 100 10 \"\" RELAY:turn.udp:turn.dtls \"\" datagram.example.net.\n
    \  IN NAPTR 200 10 \"\" RELAY:turn.tcp:turn.tls \"\" stream.example.net.\n   datagram.example.net.\n
    \  IN NAPTR 100 10 S RELAY:turn.udp \"\" _turn._udp.example.net.\n   IN NAPTR
    200 10 S RELAY:turn.dtls \"\" _turns._udp.example.net.\n   stream.example.net.\n
    \  IN NAPTR 100 10 S RELAY:turn.tcp \"\" _turn._tcp.example.net.\n   IN NAPTR
    200 10 A RELAY:turn.tls \"\" a.example.net.\n   _turn._udp.example.net.\n   IN
    SRV   0 0 3478 a.example.net.\n   _turn._tcp.example.net.\n   IN SRV   0 0 5000
    a.example.net.\n   _turns._udp.example.net.\n   IN SRV   0 0 5349 a.example.net.\n
    \  a.example.net.\n   IN A     192.0.2.1\n                                 Figure
    1\n                 +-------+----------+------------+------+\n                 |
    Order | Protocol | IP address | Port |\n                 +-------+----------+------------+------+\n
    \                | 1     | DTLS     | 192.0.2.1  | 5349 |\n                 |
    2     | TLS      | 192.0.2.1  | 5349 |\n                 +-------+----------+------------+------+\n
    \                                 Table 2\n"
  title: Appendix A.  Examples
- contents:
  - "Authors' Addresses\n   Marc Petit-Huguenin\n   Jive Communications\n   1275 West
    1600 North, Suite 100\n   Orem, UT  84057\n   USA\n   EMail: marcph@getjive.com\n
    \  Gonzalo Salgueiro\n   Cisco Systems\n   7200-12 Kit Creek Road\n   Research
    Triangle Park, NC  27709\n   USA\n   EMail: gsalguei@cisco.com\n"
  title: Authors' Addresses
