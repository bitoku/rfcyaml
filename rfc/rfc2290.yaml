- contents:
  - '             Mobile-IPv4 Configuration Option for PPP IPCP

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Mobile IP [RFC 2002] defines media-independent procedures by which
    a\n   Mobile Node can maintain existing transport and application-layer\n   connections
    despite changing its point-of-attachment to the Internet\n   and without changing
    its IP address.  PPP [RFC 1661] provides a\n   standard method for transporting
    multi-protocol packets over point-\n   to-point links.  As currently specified,
    Mobile IP Foreign Agents\n   which support Mobile Node connections via PPP can
    do so only by first\n   assigning unique addresses to those Mobile Nodes, defeating
    one of\n   the primary advantages of Foreign Agents.  This documents corrects\n
    \  this problem by defining the Mobile-IPv4 Configuration Option to the\n   Internet
    Protocol Control Protocol (IPCP) [RFC 1332].  Using this\n   option, two peers
    can communicate their support for Mobile IP during\n   the IPCP phase of PPP.
    \ Familiarity with Mobile IP [RFC 2002], IPCP\n   [RFC 1332], and PPP [RFC 1661]
    is assumed.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction . . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n       1.1. Specification Language . . . . . . . . . . . . . .
    . . .   2\n       1.2. Terminology  . . . . . . . . . . . . . . . . . . . . .
    .   2\n       1.3. Problem Statement  . . . . . . . . . . . . . . . . . . .   3\n
    \      1.4. Requirements . . . . . . . . . . . . . . . . . . . . . .   5\n   2.
    Mobile-IPv4 Configuration Option . . . . . . . . . . . . . . .   6\n       2.1.
    Option Format  . . . . . . . . . . . . . . . . . . . . .   6\n       2.2. Overview
    . . . . . . . . . . . . . . . . . . . . . . . .   7\n       2.3. High-Level Requirements
    for Non-Mobile-Nodes . . . . . .   7\n       2.4. High-Level Requirements for
    Mobile Nodes . . . . . . . .   8\n       2.5. Detailed Description . . . . . .
    . . . . . . . . . . . .   8\n       2.6. Example Scenarios  . . . . . . . . .
    . . . . . . . . . .  12\n   3. Additional Requirements  . . . . . . . . . . .
    . . . . . . . .  14\n       3.1. Other IPCP Options . . . . . . . . . . . . .
    . . . . . .  14\n       3.2. Move Detection . . . . . . . . . . . . . . . . .
    . . . .  14\n   4. Security Considerations  . . . . . . . . . . . . . . . . .
    . .  15\n   5. References . . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 15\n   6. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . .  16\n
    \  7. Authors' Addresses . . . . . . . . . . . . . . . . . . . . . .  16\n   8.
    Full Copyright Statement . . . . . . . . . . . . . . . . . . .  17\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   Mobile IP [RFC 2002] defines protocols and procedures by
    which\n   packets can be routed to a mobile node, regardless of its current\n
    \  point-of-attachment to the Internet, and without changing its IP\n   address.
    \ Mobile IP is designed to run over any type of media and any\n   type of data
    link-layer.  However, the interaction between Mobile IP\n   and PPP is currently
    underspecified and generally results in an\n   inappropriate application of Mobile
    IP when mobile nodes connect to\n   the Internet via PPP.\n   This document defines
    proper interaction between a mobile node [RFC\n   2002] and a peer through which
    the mobile node connects to the\n   Internet using PPP.  This requires the definition
    of a new option for\n   IPCP [RFC 1332], named the \"Mobile-IPv4\" Configuration
    Option, which\n   is defined in this document.  The mobile node and the peer use
    this\n   option to negotiate the appropriate use of Mobile IP over the PPP\n   link.\n
    \  The Mobile-IPv4 option defined in this document is intended to work\n   in
    conjunction with the existing IP-Address option [RFC 1332].\n"
  - contents:
    - "1.1. Specification Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      RFC 2119.\n"
    title: 1.1. Specification Language
  - contents:
    - "1.2. Terminology\n   This document uses the following terms as defined in [RFC
      2002]:\n      Mobile Node\n         A host or router that changes its point-of-attachment
      from one\n         link to another.  A mobile node may change its location without\n
      \        changing its IP address; it may continue to communicate with\n         other
      Internet nodes at any location using its (permanent)\n         home, IP address,
      assuming link-layer connectivity is available\n         at its current location.\n
      \     Home Agent\n         A router with at least one interface on a mobile
      node's home\n         link.  A home agent intercepts packets destined to a mobile\n
      \        node's home address and tunnels them to the mobile node's\n         care-of
      address when the mobile node is connected to a foreign\n         link.  A mobile
      node informs its home agent of its current\n         care-of address through
      an authenticated registration protocol\n         defined by Mobile IP.\n      Foreign
      Agent\n         A router with at least one interface on a mobile node's\n         (current)
      foreign link.  When a mobile node uses a foreign\n         agent's care-of address,
      the foreign agent detunnels and\n         delivers packets to the mobile node
      that were tunneled by the\n         mobile node's home agent.  A foreign agent
      might also serve as\n         a default router for packets sent by a registered
      mobile node.\n      Peer\n         The PPP peer of a mobile node.  The mobile
      node's peer might\n         support home agent functionality, foreign agent
      functionality,\n         both, or neither.\n"
    title: 1.2. Terminology
  - contents:
    - "1.3. Problem Statement\n   In Mobile IP, packets sent to a mobile node's home
      address are routed\n   first to the mobile node's home agent, a router on the
      mobile node's\n   home link which intercepts packets sent to the home address.
      \ The\n   home agent then tunnels such packets to the mobile node's care-of\n
      \  address, where the packets are extracted from the tunnel and\n   delivered
      to the mobile node.  There are two types of care-of\n   addresses:\n   Co-located
      Care-of Address\n      An address temporarily assigned to a mobile node itself.
      \ In this\n      case, the mobile node is the exit-point of the tunnel and\n
      \     decapsulates packets encapsulated for delivery by its home agent.\n      A
      Co-located Care-of Address may be used by exactly one mobile\n      node at
      any point in time.\n   Foreign Agent Care-of Address\n      An address of a
      foreign agent that has at least one interface on a\n      mobile node's visited,
      foreign link.  In this case, the foreign\n      agent decapsulates packets that
      have been tunneled by the home\n      agent and delivers them to the mobile
      node over the visited link.\n      A Foreign Agent Care-of Address may be used
      simultaneously by many\n      mobile nodes at any point in time.\n   In Appendix
      B, Mobile IP [RFC 2002] currently specifies only the\n   following with respect
      to PPP:\n      \"The Point-to-Point-Protocol (PPP) [RFC 1661] and its Internet\n
      \     Protocol Control Protocol (IPCP) [RFC 1332], negotiates [sic] the\n      use
      of IP addresses.\n      \"The mobile node SHOULD first attempt to specify its
      home address,\n      so that if the mobile node is attaching to its home [link],
      the\n      unrouted link will function correctly.  When the home address is\n
      \     not accepted by the peer, but a transient IP address is\n      dynamically
      assigned to the mobile node, and the mobile node is\n      capable of supporting
      a co-located care-of address, the mobile\n      node MAY register that address
      as a co-located care-of address.\n      When the peer specifies its own IP address,
      that address MUST NOT\n      be assumed to be a foreign agent care-of address
      or the IP address\n      of a home agent.\"\n   Inspection of this text reveals
      that there is currently no way for\n   the mobile node to use a foreign agent
      care-of address, without first\n   being assigned a unique IP address, even
      if the peer also supports\n   foreign agent functionality.  The reason for this
      can be seen by\n   walking through the IPCP negotiation:\n    1. A mobile node
      connects to a peer via PPP and proposes its home\n       address in an IPCP
      Configure-Request containing the IP-Address\n       option.  In this scenario,
      we assume that the mobile node is\n       connecting to some foreign link.\n
      \   2. The peer has no way of knowing whether this Configure-Request was\n       received
      from: (a) a mobile node proposing its home address; or\n       (b) a conventional
      node proposing some topologically non-routable\n       address.  In this case,
      the peer must (conservatively) send a\n       Configure-Nak of the IP-Address
      option supplying a topologically\n       appropriate address for use by the
      node at the other end of the\n       PPP link.\n    3. The mobile node, in turn,
      has no way of knowing whether this\n       Configure-Nak was received because
      the peer is a foreign agent\n       being conservative, or because the peer
      does not implement Mobile\n       IP at all.  Therefore, the mobile node must
      (conservatively)\n       assume that the peer does not implement Mobile IP and
      continue\n       the negotiation of an IP address in IPCP, after which point
      the\n       mobile node can use the assigned address as a co-located care-of\n
      \      address.\n   Here we observe that, even if the mobile node's peer is
      a foreign\n   agent and sends an Agent Advertisement to the mobile node after
      IPCP\n   reaches the Opened state, the mobile node will still have negotiated\n
      \  a routable address in step 3, which it is likely already using as a\n   co-located
      care-of address.  This defeats the purpose of foreign\n   agent care-of addresses,
      which are designed to be shared by multiple\n   mobile nodes and to eliminate
      the need to assign a unique address to\n   each mobile node.\n"
    title: 1.3. Problem Statement
  - contents:
    - "1.4. Requirements\n   The purpose of this document is to specify the behavior
      of both ends\n   of the PPP link when one or more of the PPP peers supports
      Mobile IP.\n   Specifically, the design of the option and protocol defined in
      this\n   document is based upon the following requirements:\n    1. The option
      and protocol described in this document must be\n       backwards compatible
      with conventional nodes and their potential\n       peers which do not implement
      this option nor any Mobile IP\n       functionality.\n    2. The option and
      protocol described in this document must\n       accommodate a variety of scenarios,
      minimally those provided in\n       the examples of Section 2.6.\n    3. The
      option and protocol described in this document must not\n       duplicate any
      functionality already defined in other IPCP\n       options; specifically, the
      IP-Address option.\n    4. A unique address must not be assigned to a mobile
      node unless\n       absolutely necessary.  Specifically, no such address is
      assigned\n       to a mobile node that connects via PPP to its home link or
      a\n       mobile node that connects via PPP to a foreign agent (and uses\n       that
      foreign agent's care-of address).\n"
    title: 1.4. Requirements
  title: 1. Introduction
- contents:
  - "2. Mobile-IPv4 Configuration Option\n   This section defines the Mobile-IPv4
    Configuration Option and\n   provides several examples of its use.\n"
  - contents:
    - "2.1. Option Format\n   The Mobile-IPv4 Configuration Option for IPCP is defined
      as follows:\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |    Length     |         Mobile Node's ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \        ...  Home Address         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      Type\n      4 (Mobile-IPv4)\n   Length\n      6 (The length of this entire
      extension in bytes)\n   Mobile Node's Home Address\n      In a Configure-Request,
      the IP home address of the mobile node\n      sending this Configuration Option,
      otherwise the (unmodified) IP\n      home address of the mobile node when sent
      in a Configure-Ack or\n      Configure-Reject. Configure-Nak'ing this option
      is undefined and\n      MUST NOT be sent by implementations complying with this
      version of\n      the specification.  This field MUST NOT be zero.\n   Default
      Value\n      The Mobile-IPv4 Configuration Option defaults to the sending\n
      \     mobile node's home address.\n   In describing the operation of the Mobile-IPv4
      Configuration Option\n   (in conjunction with the IP-Address Configuration Option),
      we use the\n   following abbreviations:\n      PPP Message Types:\n          Request
      = Configure-Request\n           Reject = Configure-Reject\n              Ack
      = Configure-Ack\n              Nak = Configure-Nak\n      IPCP Configuration
      Options:\n            MIPv4 = Mobile-IPv4\n               IP = IP-Address\n
      \     IP addresses:\n          a.b.c.d = some non-zero IP address\n          w.x.y.z
      = some non-zero IP address other than a.b.c.d\n             home = a mobile
      node's IP Home address\n              coa = an IP Care-Of Address\n                0
      = the all-zeroes IP address (0.0.0.0)\n"
    title: 2.1. Option Format
  - contents:
    - "2.2. Overview\n   The Mobile-IPv4 Configuration Option is designed to be used
      in\n   conjunction with the IP-Address Configuration Option.  For the\n   convenience
      of implementors, the detailed description in section 2.5\n   includes all possible
      combinations of these two options that might be\n   sent by a PPP peer during
      IPCP.  Along with each possibility is a\n   description of how the receiver
      should interpret the contents as well\n   as a suggested course of action.\n"
    title: 2.2. Overview
  - contents:
    - "2.3. High-Level Requirements for Non-Mobile-Nodes\n   A node that is not performing
      mobile node functionality (such as\n   non-Mobile-IP-aware nodes as well as
      nodes performing only home agent\n   functionality, foreign agent functionality,
      or both) MUST NOT include\n   a Mobile-IPv4 Configuration Option within any
      Configure-Request\n   message.  As per [RFC 1332], such a node SHOULD send a
      Configure-\n   Request containing an IP-Address Configuration Option in which
      the\n   IP-Address field is set to a non-zero IP address that the node has\n
      \  assigned to one of its interfaces.  If an explicit IP address has\n   been
      assigned to the node's PPP interface then this address SHOULD be\n   sent in
      preference to any of the node's other addresses.\n   A node MUST NOT send a
      Configure-Nak containing a Mobile-IPv4\n   Configuration Option.  Doing so is
      currently \"undefined\" and might\n   cause interoperability problems when a
      useful meaning for Configure-\n   Nak is ultimately defined for the Mobile-IPv4
      Configuration Option.\n   A node that sends a Configure-Ack containing a Mobile-IPv4\n
      \  Configuration Option SHOULD send an Agent Advertisement [RFC 2002]\n   immediately
      upon IPCP for that link entering the Opened state.\n"
    title: 2.3. High-Level Requirements for Non-Mobile-Nodes
  - contents:
    - "2.4. High-Level Requirements for Mobile Nodes\n   A mobile node SHOULD begin
      its IPCP negotiation by sending the\n   Configure-Request described in either
      item #1 or item #4 in Section\n   2.5.  The mobile node MAY begin its negotiation
      with one of the other\n   numbered items in Section 2.5 under extenuating circumstances.\n
      \  A mobile node that receives a Configure-Ack containing a Mobile-IPv4\n   Configuration
      Option MUST receive an Agent Advertisement, possibly in\n   response to an Agent
      Solicitation, before sending a Registration\n   Request [RFC 2002] if that mobile
      node is connecting to a foreign\n   link.  This is because the peer might be
      a foreign agent that\n   enforces a policy which requires a mobile node to register
      with that\n   foreign agent even if the mobile node is using a co-located care-of\n
      \  address.  A mobile node need not wait for such an advertisement if it\n   connects
      to its home link.  See item 7a in section 2.5 for one way in\n   which a mobile
      node can determine if it has connected to its home\n   link.  Another way is
      by receiving an explicit notification of this\n   fact from its peer, such as
      receipt of the messages in items 1b, 2c,\n   and 3a in section 2.5.\n   A mobile
      node that receives a Configure-Reject containing a Mobile-\n   IPv4 Configuration
      Option SHOULD fall back to IPCP negotiation using\n   the IP-Address option
      [RFC 1332].  A mobile node SHOULD begin this\n   negotiation with Request(IP=home)
      or Request(IP=0), depending on\n   whether or not the mobile node is connecting
      to its home link,\n   respectively.  A mobile node MAY make this determination
      by\n   inspection of an IP-Address option contained within a Configure-\n   Request
      sent by its peer.  If the prefix of the peer's stated IP-\n   address is equal
      to the prefix of the mobile node's home address,\n   then the mobile node MAY
      conclude that it is connecting to its home\n   link.  Otherwise, if the mobile
      node is connecting to a foreign link,\n   then the mobile node SHOULD send Request(IP=0)
      since its peer might\n   have no means for assigning addresses other than IPCP.
      \ This\n   specification therefore updates this behavior as described in [RFC\n
      \  2002], the latter of which recommends that a mobile node begin IP-\n   Address
      negotiation with Request(IP=Home) under all circumstances.\n   A peer that is
      performing neither home agent nor foreign agent\n   functionality SHOULD send
      a Reject in response to any Request\n   received from its peer that contains
      a Mobile-IPv4 Configuration\n   Option.\n"
    title: 2.4. High-Level Requirements for Mobile Nodes
  - contents:
    - "2.5. Detailed Description\n   The numbered items below show all possible combinations
      of Mobile-\n   IPv4 and IP-Address Configuration Options that a mobile node
      (or a\n   conventional node) might send to its peer.  Mobile nodes SHOULD begin\n
      \  their IPCP negotiation with item #1 or item #4 depending on whether\n   they
      prefer a co-located or a foreign agent care-of address\n   respectively.  The
      lettered items list the possible legal responses\n   that a peer might send
      to the mobile node (or conventional node) in\n   response to the numbered Request.\n
      \  In each case, an interpretation is defined and a suggested course of\n   action
      is provided.  Finally, it is believed that the presentation\n   below has the
      advantages of conciseness and precision in comparison\n   to an equivalent presentation
      in \"prose form.\"\n    1. Request(IP=0,MIPv4=home) means \"I prefer a co-located
      care-of\n       address to a foreign agent care-of address.\"  Peer MUST respond\n
      \      with one of the following:\n        a. Nak(IP=coa) means \"use coa as
      your co-located care-of\n           address\".  Goto 2.\n        b. Nak(IP=home)
      means \"you're at home and don't need a care-of\n           address\".  Goto
      3.\n        c. Reject(IP=0) means \"I cannot assign a co-located care-of\n           address
      but you're welcome to use me as a foreign agent\".\n           Goto 4.\n        d.
      Reject(MIPv4=home) means \"I do not implement the Mobile-IPv4\n           option\".
      \ If the peer also sent Request(IP=address) and the\n           prefix of the
      peer's assigned address is equal to that of the\n           mobile node's home
      address, then goto 6 with a.b.c.d=home;\n           otherwise, goto 5.\n        e.
      Reject(IP=0,MIPv4=home) means \"use the default\".  Goto 7.\n        => Ack(IP=0,
      ...), Nak(MIPv4=any, ...) MUST NOT be sent.\n    2. Request(IP=coa,MIPv4=home)
      means \"I want to use coa as my co-\n       located care-of address.\"  Peer
      MUST respond with one of the\n       following:\n        a. Ack(IP=coa,MIPv4=home)
      means \"ok, use coa as your co-located\n           care-of address; be sure
      to wait for an advertisement.\"\n           Opened.\n        b. Nak(IP=alternate-coa)
      means \"no, use alternate-coa as your\n           co-located care-of address\".
      \ Goto 2.\n        c. Nak(IP=home) means \"you're at home and don't need a co-\n
      \          located care-of address\".  Goto 3.\n        d. Reject(IP=coa) means
      \"coa is not a useful value for a co-\n           located care-of address on
      this link and I cannot assign a\n           useful one (or I will not negotiate
      the IP-Address option) --\n           you may use me as a foreign agent\".  Goto
      4.\n        e. Reject(MIPv4=home) means \"I do not implement the Mobile-IPv4\n
      \          option\".  If the peer also sent Request(IP=address) and the\n           prefix
      of the peer's address is equal to that of the mobile\n           node's home
      address, then goto 6 with a.b.c.d=home;\n           otherwise, goto 5.\n        f.
      Reject(IP=coa,MIPv4=home) means \"use the default\".  Goto 7.\n        => Nak(MIPv4=any,
      ...) MUST NOT be sent.\n    3. Request(IP=home,MIPv4=home) means \"I think I'm
      at home but if I'm\n       wrong then I prefer a co-located care-of address
      to a foreign\n       agent care-of address.\"  Peer MUST respond with one of
      the\n       following:\n        a. Ack(IP=home,MIPv4=home) means \"yes, you're
      at home\".  Opened.\n        b. Nak(IP=coa) means \"you're not at home, use
      coa as your co-\n           located care-of address\".  Goto 2.\n        c.
      Reject(IP=home) means \"you're not at home and I cannot assign\n           a
      co-located care-of address (or I will not negotiate the\n           IP-Address
      option) -- you may use me as a foreign agent\".\n           Goto 4.\n        d.
      Reject(MIPv4=home) means \"I do not implement the Mobile-IPv4\n           option\".
      \ If the peer also sent Request(IP=address) and the\n           prefix of the
      peer's address is equal to that of the mobile\n           node's home address,
      then goto 6 with a.b.c.d=home;\n           otherwise, goto 5.\n        e. Reject(IP=home,MIPv4=home)
      means \"use the default\".  Goto 7.\n        => Nak(MIPv4=any, ...) MUST NOT
      be sent.\n    4. Request(MIPv4=home) means \"I want to run Mobile IP over this
      link\n       and I don't want a co-located care-of address.\" Peer MUST respond\n
      \      with one of the following:\n        a. Ack(MIPv4=home) means \"ok, wait
      for an advertisement to\n           figure out where you are.\"  Opened.\n        b.
      Reject(MIPv4=home) means \"I do not implement the Mobile-IPv4\n           option\".
      \ If the peer also sent Request(IP=address) and the\n           prefix of the
      peer's address is equal to that of the mobile\n           node's home address,
      then goto 6 with a.b.c.d=home;\n           otherwise, goto 5.\n        => Nak(MIPv4=any,
      ...) MUST NOT be sent.\n    5. Request(IP=0) means \"Please assign an address/co-located-care-\n
      \      of-address\".  Peer MUST respond with one of the following:\n        a.
      Nak(IP=a.b.c.d) means \"use a.b.c.d as your address/co-\n           located-care-of-address\".
      \ Goto 6.\n        b. Reject(IP=0) means \"I cannot assign an address (for the\n
      \          Mobile Node to use as a co-located-care-of-address), or I do\n           not
      implement the IP-Address option\".  Goto 7.\n        => Ack(IP=0) MUST NOT be
      sent and historically means \"I don't\n           know your address either\".
      \ Opened.  An implementation MUST\n           NOT use 0 as its IP address upon
      receiving Ack(IP=0) but MAY\n           use some other, non-zero, interface
      address for packets sent\n           on its PPP interface.\n    6. Request(IP=a.b.c.d)
      means \"I want to use a.b.c.d as my\n       address/home-address/co-located-care-of-address\".
      \ Peer MUST\n       respond with one of the following:\n        a. Ack(IP=a.b.c.d)
      means \"ok, a.b.c.d is your address/home-\n           address/co-located-care-of-address\".
      \ Opened.\n        b. Nak(IP=w.x.y.z) means \"no, use w.x.y.z as your address/home-\n
      \          address/co-located-care-of-address\".  Goto 6.\n        c. Reject(IP=a.b.c.d)
      means \"a.b.c.d is a bad address to use,\n           but I cannot give you a
      good one\" or \"I do not implement the\n           IP-Address option\".  Goto
      7.\n    7. Request() means \"I want to use the default\".  Peer MUST respond\n
      \      with one of the following:\n        a. Ack() means \"ok, use the default\".
      \ Opened.\n           In this case the mobile node will use the \"default\"
      values of\n           the IP-Address option (no address configured by IPCP)
      and the\n           Mobile-IPv4 option (the mobile node's IP home address).
      \ The\n           mobile node SHOULD send Agent Solicitations to see if there\n
      \          are any agents present on the current link. (Note that the\n           current
      \"link\" might also include a shared medium if the\n           mobile node's
      PPP peer is a bridge.)  If an agent is present\n           and the mobile node
      receives an Agent Advertisement, then the\n           mobile node employs its
      move-detection algorithm(s) and\n           registers accordingly.\n           In
      any case, if the mobile node's peer supplied an IP-Address\n           option
      containing a non-zero value within an IPCP Configure-\n           Request, the
      mobile node MAY use this address to determine\n           whether or not it
      is connected to its home link.  This can be\n           accomplished by comparing
      the stated IP address with the\n           mobile node's home address under
      the prefix-length associated\n           with the home link.  If the mobile
      node is connected to its\n           home link then it SHOULD de-register with
      its home agent.\n           Otherwise, the mobile node MAY attempt to obtain
      a\n           topologically routable address through any of its supported\n
      \          means (e.g., DHCP, manual configuration, etc.)  for use as a\n           co-located
      care-of address.  If the mobile node is successful\n           in obtaining
      such an address then it SHOULD register this\n           address with its home
      agent.\n        => Nak(IP=0) MUST NOT be sent.  Goto 6.\n        => Nak() MUST
      NOT be sent.\n        => Reject() MUST NOT be sent.\n"
    title: 2.5. Detailed Description
  - contents:
    - "2.6. Example Scenarios\n   This section illustrates the use of the option and
      protocol as\n   defined in the previous sections.  In the examples which follow,
      a\n   Configure-Request sent by a mobile node and the response generated by\n
      \  the peer are shown on the same line.  The number and letter to the\n   left
      of each request/response refer to the numbered and lettered\n   items in Section
      2.5.\n    A. A mobile node prefers a co-located care-of address and the peer\n
      \      is a foreign agent that is capable of assigning such an address:\n       (1)(a)
      Request(IP=0,MIPv4=Home) / Nak(IP=coa)\n       (2)(a) Request(IP=coa,MIPv4=Home)
      / Ack(IP=coa,MIPv4=Home)\n         - Mobile node waits to receive an Agent Advertisement.\n
      \        - If (Advertisement has R-bit set) then\n             Mobile node registers
      using co-located care-of address via\n             the foreign agent;\n           else\n
      \            Mobile node registers using co-located care-of address\n             directly
      with its home agent.\n    B. A mobile node prefers a co-located care-of address
      and the peer\n       is a foreign agent that cannot assign a co-located care-of\n
      \      address (e.g., it has no pool of addresses from which to allocate\n       for
      the purpose of assignment):\n       (1)(c) Request(IP=0,MIPv4=Home) / Reject(IP=0)\n
      \      (4)(a) Request(MIPv4=Home) / Ack(MIPv4=Home)\n         - IPCP completes.\n
      \        - Mobile node waits to receive an Agent Advertisement.\n         -
      Mobile node registers using the peer's foreign agent care-of\n           address
      with its home agent.\n    C. A mobile node prefers a co-located care-of address
      and the peer\n       determines that the mobile node's home address is such
      that the\n       mobile node is connecting to its home link:\n       (1)(b)
      Request(IP=0,MIPv4=Home) / Nak(IP=Home)\n       (3)(a) Request(IP=Home,MIPv4=Home)
      / Ack(IP=Home,MIPv4=Home)\n         - IPCP completes.\n         - Mobile node
      de-registers with its home agent.\n    D. A mobile node prefers a foreign agent
      care-of address and the\n       peer is a foreign agent which finds this state
      of affairs\n       satisfactory:\n       (4)(a) Request(MIPv4=Home) / Ack(MIPv4=Home)\n
      \        - IPCP completes.\n         - Mobile node waits to receive an Agent
      Advertisement.\n         - Mobile node registers using the peer's foreign agent
      care-of\n           or de-registers at home, depending on the values in the
      Agent\n           Advertisement.\n    E. A mobile node prefers a co-located
      care-of address and the peer\n       does not implement the Mobile-IPv4 Configuration
      Option.  The\n       peer is, however, capable of assigning dynamic addresses:\n
      \      (1)(d) Request(IP=0,MIPv4=Home) / Reject(MIPv4=Home)\n       (5)(a) Request(IP=0)
      / Nak(IP=a.b.c.d)\n       (6)(a) Request(IP=a.b.c.d) / Ack(IP=a.b.c.d)\n         -
      IPCP completes.\n         - Mobile node registers using a.b.c.d as a co-located
      care-of\n           address with its home agent.\n    F. A mobile node prefers
      a co-located care-of address and the peer\n       does not implement the Mobile-IPv4
      Configuration Option. The peer\n       is not capable of assigning dynamic addresses:\n
      \      (1)(e) Request(IP=0,MIPv4=Home) / Reject(IP=0,MIPv4=Home)\n       (7)(a)
      Request() / Ack()\n         - IPCP completes.\n         - Mobile node sends
      an Agent Solicitation and/or attempts to\n           obtain a co-located care-of
      address via means outside IPCP\n           (e.g., DHCP or manual configuration),
      or it gives up.\n"
    title: 2.6. Example Scenarios
  title: 2. Mobile-IPv4 Configuration Option
- contents:
  - '3. Additional Requirements

    '
  - contents:
    - "3.1. Other IPCP Options\n   A mobile node MUST NOT include the deprecated IP-Addresses
      option in\n   any Configure-Request that contains a Mobile-IPv4 option, an IP-\n
      \  Address option, or both.\n   Conversely, the mobile node MAY include an IP-Compression-Protocol\n
      \  option and any other options that do not involve the negotiation of\n   IP
      addresses.\n   If a mobile node and a foreign agent or a home agent agree in
      IPCP to\n   use Van Jacobson Header Compression [RFC 1144], then the mobile
      node\n   MUST NOT set the 'V' bit in its ensuing Mobile IP Registration\n   Request
      [RFC 2002].  If the PPP peer entities are utilizing VJ header\n   compression
      there is no gain for the mobile ip entities to do so, and\n   requesting this
      option is likely to cause confusion.\n"
    title: 3.1. Other IPCP Options
  - contents:
    - "3.2. Move Detection\n   Mobile nodes that connect via PPP MUST correctly implement
      PPP's\n   IPCP, since movement by the mobile node will likely change its PPP\n
      \  peer.  Specifically, mobile nodes MUST be prepared to renegotiate\n   IPCP
      at any time, including, the renegotiation of the IP-Address\n   Configuration
      Option and the Mobile-IPv4 Configuration Option\n   described in this document.
      \ As per [RFC 1661], a mobile node in the\n   Opened state MUST renegotiate
      IPCP upon receiving an IPCP Configure-\n   Request from its peer.\n   Also note
      that certain wireless links can employ handoff and proxying\n   mechanisms that
      would not necessarily require bringing down a PPP\n   link but would indeed
      require a mobile node to register with a new\n   foreign agent.  Therefore,
      mobile nodes which connect to an agent via\n   PPP MUST employ their move detection
      algorithms (see section 2.4.2 in\n   [RFC 2002]) and register whenever they
      detect a change in\n   connectivity.\n   Specifically, a mobile node that fails
      to receive an Agent\n   Advertisement within the Lifetime advertised by its
      current foreign\n   agent, MUST assume that it has lost contact with that foreign
      agent\n   (see Section 2.4.2.1, [RFC 2002]).  If, in the mean time, the mobile\n
      \  node has received Agent Advertisements from another foreign agent,\n   the
      mobile node SHOULD immediately register with that foreign agent\n   upon timing
      out with its current foreign agent.\n   Likewise, a mobile node that implements
      move detection based upon the\n   Prefix-Length Extension MUST compare the prefix
      of any advertising\n   agents with that of its current foreign agent (see Section
      2.4.2.2,\n   [RFC 2002]).  If such a mobile node receives an Agent Advertisement\n
      \  from a foreign agent specifying a different prefix than that of its\n   current
      foreign agent, then the mobile node that employs this method\n   of move detection
      MUST register with that new foreign agent.\n   A mobile node MAY treat PPP link-establishment
      as a sufficient reason\n   to proceed with a new Mobile IP registration.  Section
      2 defines the\n   circumstances under which mobile nodes MUST wait for an Agent\n
      \  Advertisement before registering.  Accordingly, foreign agents and\n   home
      agents SHOULD send an Agent Advertisement over a PPP link\n   immediately after
      IPCP for that link enters the Opened state.\n"
    title: 3.2. Move Detection
  title: 3. Additional Requirements
- contents:
  - "4. Security Considerations\n   This document introduces no known security threats
    over and above\n   those facing any node on the Internet that either connects
    via PPP or\n   implements Mobile IP or both.  Specifically, service providers
    should\n   use cryptographically strong authentication (e.g., CHAP [RFC 1994])\n
    \  to prevent theft-of-service.  Additionally, users requiring\n   confidentiality
    should use PPP link encryption [RFC 1968], IP-layer\n   encryption [RFC 1827],
    or application-layer encryption, depending\n   upon their individual requirements.
    \ Finally, Mobile IP\n   authentication [RFC 2002] protects against trivial denial-of-service\n
    \  attacks that could otherwise be waged against a mobile node and its\n   home
    agent.\n"
  title: 4. Security Considerations
- contents:
  - "5. References\n   [RFC 2119] Bradner, S., \"Key words for use in RFCs to Indicate\n
    \     Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC 1144] Jacobson,
    V., \"Compressing TCP/IP Headers for Low-Speed\n      Serial Links\", RFC 1144,
    January 1990.\n   [RFC 1332] McGregor, G., \"The PPP Internet Protocol Control
    Protocol\n      (IPCP),\" RFC 1332, May 1992.\n   [RFC 1661] Simpson, W., Editor,
    \"The Point-to-Point Protocol (PPP)\n      for the Transmission of Multi-protocol
    Datagrams over Point-to-\n      Point Links\", STD 51, RFC 1661, July 1994.\n
    \  [RFC 1827] Atkinson, R., \"IP Encapsulating Security Payload (ESP)\",\n      RFC
    1827, August 1995.\n   [RFC 1994] Simpson, W., \"PPP Challenge Handshake Authentication\n
    \     Protocol (CHAP)\", RFC 1994, August 1996.\n   [RFC 1968] Meyer, G., \"The
    PPP Encryption Control Protocol (ECP)\",\n      RFC 1968, June 1996.\n   [RFC
    2002] Perkins, C., Editor, \"IP Mobility Support\", RFC 2002,\n      October 1996.\n"
  title: 5. References
- contents:
  - "6. Acknowledgments\n   The design of this protocol and option were inspired by
    an earlier\n   submission by B. Patel and C. Perkins, then of IBM, in a now expired\n
    \  internet draft.  Also, some of William Simpson's text was copied\n   verbatim
    from [RFC 1661] in order to ensure consistency of\n   terminology and specification.
    \ The same goes for some of Charlie\n   Perkins' definitions, and other relavent
    text, from [RFC 2002].\n   Tim Wilson and Chris Stanaway (Motorola) contributed
    significantly to\n   the design of this Configuration Option and protocol specification.\n
    \  Special thanks to Vernon Schryver (SGI), Craig Fox (Cisco), Karl Fox\n   (Ascend),
    and John Bray (FTP) for their helpful suggestions,\n   comments, and patience.\n"
  title: 6. Acknowledgments
- contents:
  - "7. Authors' Addresses\n   Jim Solomon\n   Motorola, Inc.\n   1301 E. Algonquin
    Rd. - Rm 2240\n   Schaumburg, IL  60196\n   Phone:  +1-847-576-2753\n   Fax:    +1-847-576-3240\n
    \  EMail:  solomon@comm.mot.com\n   Steven Glass\n   FTP Software, Inc.\n   2
    High Street\n   North Andover, MA  01845\n   Phone:  +1-508-685-4000\n   Fax:
    \   +1-508-684-6105\n   EMail:  glass@ftp.com\n"
  title: 7. Authors' Addresses
- contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 8.  Full Copyright Statement
