- title: __initial_text__
  contents:
  - '                        Channel Bindings for TLS

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines three channel binding types for Transport\
    \ Layer\n   Security (TLS), tls-unique, tls-server-end-point, and tls-unique-for-\n\
    \   telnet, in accordance with RFC 5056 (On Channel Binding).\n   Note that based\
    \ on implementation experience, this document changes\n   the original definition\
    \ of 'tls-unique' channel binding type in the\n   channel binding type IANA registry.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5929.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. The 'tls-unique' Channel Binding Type ...........................3\n    \
    \  3.1. Description ................................................3\n      3.2.\
    \ Registration ...............................................4\n   4. The 'tls-server-end-point'\
    \ Channel Binding Type .................5\n      4.1. Description ................................................5\n\
    \      4.2. Registration ...............................................6\n  \
    \ 5. The 'tls-unique-for-telnet' Channel Binding Type ................6\n    \
    \  5.1. Description ................................................7\n      5.2.\
    \ Registration ...............................................7\n   6. Applicability\
    \ of TLS Channel Binding Types ......................7\n   7. Required Application\
    \ Programming Interfaces ....................10\n   8. Description of Backwards-Incompatible\
    \ Changes Made\n      Herein to 'tls-unique' .........................................10\n\
    \   9. IANA Considerations ............................................11\n  \
    \ 10. Security Considerations .......................................11\n    \
    \  10.1. Cryptographic Algorithm Agility ..........................12\n      10.2.\
    \ On Disclosure of Channel Bindings Data by\n            Authentication Mechanisms\
    \ ................................12\n   11. References ....................................................13\n\
    \      11.1. Normative References .....................................13\n  \
    \    11.2. Informative References ...................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Subsequent to the publication of \"On Channel Bindings\"\
    \ [RFC5056],\n   three channel binding types for Transport Layer Security (TLS)\
    \ were\n   proposed, reviewed, and added to the IANA channel binding type\n  \
    \ registry, all in accordance with [RFC5056].  Those channel binding\n   types\
    \ are: 'tls-unique', 'tls-server-end-point', and 'tls-unique-for-\n   telnet'.\
    \  It has become desirable to have these channel binding types\n   re-registered\
    \ through an RFC so as to make it easier to reference\n   them, and to correct\
    \ them to describe actual implementations.  This\n   document does just that.\
    \  The authors of those three channel binding\n   types have transferred, or have\
    \ indicated that they will transfer,\n   \"ownership\" of those channel binding\
    \ types to the IESG.\n   We also provide some advice on the applicability of these\
    \ channel\n   binding types, as well as advice on when to use which.  Additionally,\n\
    \   we provide an abstract API that TLS implementors should provide, by\n   which\
    \ to obtain channel bindings data for a TLS connection.\n   WARNING: it turns\
    \ out that the first implementor implemented and\n   deployed something rather\
    \ different than what was described in the\n   IANA registration for 'tls-unique'.\
    \  Subsequently, it was decided\n   that we should adopt that form of 'tls-unique'.\
    \  This means that this\n   document makes a backwards-incompatible change to\
    \ 'tls-unique'.  See\n   Section 8 for more details.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  The 'tls-unique' Channel Binding Type
  contents:
  - "3.  The 'tls-unique' Channel Binding Type\n   IANA updated the registration of\
    \ the 'tls-unique' channel binding\n   type to match the description below.  There\
    \ are material and\n   substantial changes from the original registration, both\
    \ in the\n   description as well as registration meta-data (such as registration\n\
    \   ownership).\n"
- title: 3.1.  Description
  contents:
  - "3.1.  Description\n   Description: The first TLS Finished message sent (note:\
    \ the Finished\n   struct, not the TLS record layer message containing it) in\
    \ the most\n   recent TLS handshake of the TLS connection being bound to (note:\
    \ TLS\n   connection, not session, so that the channel binding is specific to\n\
    \   each connection regardless of whether session resumption is used).\n   If\
    \ TLS renegotiation takes place before the channel binding\n   operation, then\
    \ the first TLS Finished message sent of the latest/\n   inner-most TLS connection\
    \ is used.  Note that for full TLS\n   handshakes, the first Finished message\
    \ is sent by the client, while\n   for abbreviated TLS handshakes (session resumption),\
    \ the first\n   Finished message is sent by the server.\n   WARNING: The definition,\
    \ security, and interoperability\n   considerations of this channel binding type\
    \ have changed since the\n   original registration.  Implementors should read\
    \ the document that\n   last updated this registration for more information.\n\
    \   Interoperability note:\n      This definition of 'tls-unique' means that a\
    \ channel's bindings\n      data may change over time, which in turn creates a\
    \ synchronization\n      problem should the channel's bindings data change between\
    \ the time\n      that the client initiates authentication with channel binding\
    \ and\n      the time that the server begins to process the client's first\n \
    \     authentication message.  If that happens, the authentication\n      attempt\
    \ will fail spuriously.\n      Based on the fact that while servers may request\
    \ TLS\n      renegotiation, only clients may initiate it, this synchronization\n\
    \      problem can be avoided by clients and servers as follows: server\n    \
    \  applications MUST NOT request TLS renegotiation during phases of\n      the\
    \ application protocol during which application-layer\n      authentication occurs.\
    \  Client applications SHOULD NOT initiate\n      TLS renegotiation between the\
    \ start and completion of\n      authentication.\n      The rationale for making\
    \ the server behavior a requirement while\n      the client behavior is only a\
    \ recommendation is that there\n      typically exist TLS APIs for requesting\
    \ renegotiation on the\n      server side of a TLS connection, while many client\
    \ TLS stacks do\n      not provide fine-grained control over when TLS renegotiation\n\
    \      occurs.\n      Application protocols SHOULD be designed in such a way that\
    \ a\n      server would never need to request TLS renegotiation immediately\n\
    \      before or during application-layer authentication.\n"
- title: 3.2.  Registration
  contents:
  - "3.2.  Registration\n   o  Channel binding unique prefix: tls-unique\n   o  Channel\
    \ binding type: unique\n   o  Channel type: TLS [RFC5246]\n   o  Published specification:\
    \ <RFC 5929>\n   o  Channel binding is secret: no\n   o  Description: <See specification>\n\
    \   o  Intended usage: COMMON\n   o  Person and email address to contact for further\
    \ information: Larry\n      Zhu (larry.zhu@microsoft.com), Nicolas Williams\n\
    \      (Nicolas.Williams@oracle.com).\n   o  Owner/Change controller name and\
    \ email address: IESG.\n   o  Expert reviewer name and contact information: IETF\
    \ TLS WG\n      (tls@ietf.org, failing that, ietf@ietf.org)\n   o  Note: see the\
    \ published specification for advice on the\n      applicability of this channel\
    \ binding type.\n"
- title: 4.  The 'tls-server-end-point' Channel Binding Type
  contents:
  - "4.  The 'tls-server-end-point' Channel Binding Type\n   IANA updated the registration\
    \ of the 'tls-server-end-point' channel\n   binding type to match the description\
    \ below.  Note that the only\n   material changes from the original registration\
    \ are: the \"owner\" (now\n   the IESG), the contacts, the published specification,\
    \ and a note\n   indicating that the published specification should be consulted\
    \ for\n   applicability advice.  References were added to the description.  All\n\
    \   other fields of the registration are copied here for the convenience\n   of\
    \ readers.\n"
- title: 4.1.  Description
  contents:
  - "4.1.  Description\n   Description: The hash of the TLS server's certificate [RFC5280]\
    \ as it\n   appears, octet for octet, in the server's Certificate message.  Note\n\
    \   that the Certificate message contains a certificate_list, in which\n   the\
    \ first element is the server's certificate.\n   The hash function is to be selected\
    \ as follows:\n   o  if the certificate's signatureAlgorithm uses a single hash\n\
    \      function, and that hash function is either MD5 [RFC1321] or SHA-1\n   \
    \   [RFC3174], then use SHA-256 [FIPS-180-3];\n   o  if the certificate's signatureAlgorithm\
    \ uses a single hash\n      function and that hash function neither MD5 nor SHA-1,\
    \ then use\n      the hash function associated with the certificate's\n      signatureAlgorithm;\n\
    \   o  if the certificate's signatureAlgorithm uses no hash functions or\n   \
    \   uses multiple hash functions, then this channel binding type's\n      channel\
    \ bindings are undefined at this time (updates to is channel\n      binding type\
    \ may occur to address this issue if it ever arises).\n   The reason for using\
    \ a hash of the certificate is that some\n   implementations need to track the\
    \ channel binding of a TLS session in\n   kernel-mode memory, which is often at\
    \ a premium.\n"
- title: 4.2.  Registration
  contents:
  - "4.2.  Registration\n   o  Channel binding unique prefix: tls-server-end-point\n\
    \   o  Channel binding type: end-point\n   o  Channel type: TLS [RFC5246]\n  \
    \ o  Published specification: <RFC 5929>\n   o  Channel binding is secret: no\n\
    \   o  Description: <See specification>\n   o  Intended usage: COMMON\n   o  Person\
    \ and email address to contact for further information: Larry\n      Zhu (larry.zhu@microsoft.com),\
    \ Nicolas Williams\n      (Nicolas.Williams@oracle.com).\n   o  Owner/Change controller\
    \ name and email address: IESG.\n   o  Expert reviewer name and contact information:\
    \ IETF TLS WG\n      (tls@ietf.org, failing that, ietf@ietf.org)\n   o  Note:\
    \ see the published specification for advice on the\n      applicability of this\
    \ channel binding type.\n"
- title: 5.  The 'tls-unique-for-telnet' Channel Binding Type
  contents:
  - "5.  The 'tls-unique-for-telnet' Channel Binding Type\n   IANA updated the registration\
    \ of the 'tls-unique-for-telnet' channel\n   binding type to match the description\
    \ below.  Note that the only\n   material changes from the original registration\
    \ are: the \"owner\" (now\n   the IESG), the contacts, the published specification,\
    \ and a note\n   indicating that the published specification should be consulted\
    \ for\n   applicability advice.  The description is also clarified.  We also\n\
    \   moved the security considerations notes to the security\n   considerations\
    \ section of this document.  All other fields of the\n   registration are copied\
    \ here for the convenience of readers.\n"
- title: 5.1.  Description
  contents:
  - "5.1.  Description\n   Description: There is a proposal for adding a \"StartTLS\"\
    \ extension to\n   TELNET, and a channel binding extension for the various TELNET\
    \ AUTH\n   mechanisms whereby each side sends the other a \"checksum\" (MAC --\n\
    \   message authentication code) of their view of the channel's bindings.\n  \
    \ The client uses the TLS Finished messages (note: the Finished struct)\n   sent\
    \ by the client and server, each concatenated in that order and in\n   their clear\
    \ text form, of the first TLS handshake to which the\n   connection is being bound.\
    \  The server does the same but in the\n   opposite concatenation order (server,\
    \ then client).\n"
- title: 5.2.  Registration
  contents:
  - "5.2.  Registration\n   o  Channel binding unique prefix: tls-unique-for-telnet\n\
    \   o  Channel binding type: unique\n   o  Channel type: TLS [RFC5246]\n   o \
    \ Published specification: <RFC 5929>\n   o  Channel binding is secret: no\n \
    \  o  Description: <See specification>\n   o  Intended usage: COMMON\n   o  Person\
    \ and email address to contact for further information: Jeff\n      Altman (jaltman@secure-endpoints.com),\
    \ Nicolas Williams\n      (Nicolas.Williams@oracle.com).\n   o  Owner/Change controller\
    \ name and email address: IESG.\n   o  Expert reviewer name and contact information:\
    \ IETF TLS WG\n      (tls@ietf.org, failing that, ietf@ietf.org)\n   o  Note:\
    \ see the published specification for advice on the\n      applicability of this\
    \ channel binding type.\n"
- title: 6.  Applicability of TLS Channel Binding Types
  contents:
  - "6.  Applicability of TLS Channel Binding Types\n   The 'tls-unique-for-telnet'\
    \ channel binding type is only applicable\n   to TELNET [RFC0854] and is available\
    \ for all TLS connections.\n   The 'tls-unique' channel binding type is available\
    \ for all TLS\n   connections, while 'tls-server-end-point' is only available\
    \ when TLS\n   cipher suites with server certificates are used, specifically:\
    \ cipher\n   suites that use the Certificate handshake message, which typically\n\
    \   involve the use of PKIX [RFC5280].  For example, 'tls-server-end-\n   point'\
    \ is available when using TLS ciphers suites such as (this is\n   not an exhaustive\
    \ list):\n   o  TLS_DHE_DSS_WITH_*\n   o  TLS_DHE_RSA_WITH_*\n   o  TLS_DH_DSS_WITH_*\n\
    \   o  TLS_DH_RSA_WITH_*\n   o  TLS_ECDHE_ECDSA_WITH_*\n   o  TLS_ECDHE_RSA_WITH_*\n\
    \   o  TLS_ECDH_ECDSA_WITH_*\n   o  TLS_ECDH_RSA_WITH_*\n   o  TLS_RSA_PSK_WITH_*\n\
    \   o  TLS_RSA_WITH_*\n   o  TLS_SRP_SHA_DSS_WITH_*\n   o  TLS_SRP_SHA_RSA_WITH_*\n\
    \   but is not available when using TLS cipher suites such as (this is\n   not\
    \ an exhaustive list):\n   o  TLS_DHE_PSK_WITH_*\n   o  TLS_DH_anon_WITH_*\n \
    \  o  TLS_ECDHE_PSK_WITH_*\n   o  TLS_ECDH_anon_WITH_*\n   o  TLS_KRB5_WITH_*\n\
    \   o  TLS_PSK_WITH_*\n   o  TLS_SRP_SHA_WITH_*\n   'tls-server-end-point' is\
    \ also not applicable for use with OpenPGP\n   server certificates [RFC5081] [RFC4880]\
    \ (since these don't use the\n   Certificate handshake message).\n   Therefore,\
    \ 'tls-unique' is applicable to more contexts than 'tls-\n   server-end-point'.\
    \  However, 'tls-server-end-point' may be used with\n   existing TLS server-side\
    \ proxies (\"concentrators\") without\n   modification to the proxies, whereas\
    \ 'tls-unique' may require\n   firmware or software updates to server-side proxies.\
    \  Therefore there\n   may be cases where 'tls-server-end-point' may interoperate\
    \ but where\n   'tls-unique' may not.\n   Also, authentication mechanisms may\
    \ arise that depend on channel\n   bindings to contribute entropy, in which case\
    \ unique channel bindings\n   would always have to be used in preference to end-point\
    \ channel\n   bindings.  At this time there are no such mechanisms, though one\
    \ such\n   SASL mechanism has been proposed.  Whether such mechanisms should be\n\
    \   allowed is out of scope for this document.\n   For many applications, there\
    \ may be two or more potentially\n   applicable TLS channel binding types.  Existing\
    \ security frameworks\n   (such as the GSS-API [RFC2743] or the SASL [RFC4422]\
    \ GS2 framework\n   [RFC5801]) and security mechanisms generally do not support\n\
    \   negotiation of channel binding types.  Therefore, application peers\n   need\
    \ to agree a priori as to what channel binding type to use (or\n   agree to rules\
    \ for deciding what channel binding type to use).\n   The specifics of whether\
    \ and how to negotiate channel binding types\n   are beyond the scope of this\
    \ document.  However, it is RECOMMENDED\n   that application protocols making\
    \ use of TLS channel bindings, use\n   'tls-unique' exclusively, except, perhaps,\
    \ where server-side proxies\n   are common in deployments of an application protocol.\
    \  In the latter\n   case an application protocol MAY specify that 'tls-server-end-point'\n\
    \   channel bindings must be used when available, with 'tls-unique' being\n  \
    \ used when 'tls-server-end-point' channel bindings are not available.\n   Alternatively,\
    \ the application may negotiate which channel binding\n   type to use, or may\
    \ make the choice of channel binding type\n   configurable.\n   Specifically,\
    \ application protocol specifications MUST indicate at\n   least one mandatory\
    \ to implement channel binding type, MAY specify a\n   negotiation protocol, MAY\
    \ allow for out-of-band negotiation or\n   configuration, and SHOULD have a preference\
    \ for 'tls-unique' over\n   'tls-server-end-point'.\n"
- title: 7.  Required Application Programming Interfaces
  contents:
  - "7.  Required Application Programming Interfaces\n   TLS implementations supporting\
    \ the use of 'tls-unique' and/or 'tls-\n   unique-for-telnet' channel binding\
    \ types MUST provide application\n   programming interfaces by which applications\
    \ (clients and servers\n   both) may obtain the channel bindings for a TLS connection.\
    \  Such\n   interfaces may be expressed in terms of extracting the channel\n \
    \  bindings data for a given connection and channel binding type.\n   Alternatively,\
    \ the implementor may provide interfaces by which to\n   obtain the initial client\
    \ Finished message, the initial server\n   Finished message, and/or the server\
    \ certificate (in a form that\n   matches the description of the 'tls-server-end-point'\
    \ channel binding\n   type).  In the latter case, the application has to have\
    \ knowledge of\n   the channel binding type descriptions from this document. \
    \ This\n   document takes no position on which form these application\n   programming\
    \ interfaces must take.\n   TLS implementations supporting TLS renegotiation SHOULD\
    \ provide APIs\n   that allow applications to control when renegotiation can take\
    \ place.\n   For example, a TLS client implementation may provide a \"callback\"\
    \n   interface to indicate that the server requested renegotiation, but\n   may\
    \ not start renegotiation until the application calls a function to\n   indicate\
    \ that now is a good time to renegotiate.\n"
- title: 8.  Description of Backwards-Incompatible Changes Made Herein to
  contents:
  - "8.  Description of Backwards-Incompatible Changes Made Herein to\n    'tls-unique'\n\
    \   The original description of 'tls-unique' read as follows:\n      |OLD| Description:\
    \ The client's TLS Finished message (note: the\n      |OLD| Finished struct) from\
    \ the first handshake of the connection\n      |OLD| (note: connection, not session,\
    \ so that the channel binding\n      |OLD| is specific to each connection regardless\
    \ of whether session\n      |OLD| resumption is used).\n                     Original\
    \ 'tls-unique' description\n   In other words: the client's Finished message from\
    \ the first\n   handshake of a connection, regardless of whether that handshake\
    \ was a\n   full or abbreviated handshake, and regardless of how many subsequent\n\
    \   handshakes (renegotiations) might have followed.\n   As explained in Section\
    \ 1, this is no longer the description of 'tls-\n   unique', and the new description\
    \ is not backwards compatible with the\n   original except in the case of TLS\
    \ connections where: a) only one\n   handshake has taken place before application-layer\
    \ authentication,\n   and b) that one handshake was a full handshake.\n   This\
    \ change has a number of implications:\n   o  Backwards-incompatibility.  It is\
    \ possible that some\n      implementations of the original 'tls-unique' channel\
    \ binding type\n      have been deployed.  We know of at least one TLS implementation\n\
    \      that exports 'tls-unique' channel bindings with the original\n      semantics,\
    \ but we know of no deployed application using the same.\n      Implementations\
    \ of the original and new 'tls-unique' channel\n      binding type will only interoperate\
    \ when: a) full TLS handshakes\n      are used, and b) TLS renegotiation is not\
    \ used.\n   o  Security considerations -- see Section 10.\n   o  Interoperability\
    \ considerations.  As described in Section 3, the\n      new definition of the\
    \ 'tls-unique' channel binding type has an\n      interoperability problem that\
    \ may result in spurious\n      authentication failures unless the application\
    \ implements one or\n      both of the techniques described in that section.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA updated three existing channel binding type\
    \ registrations.  See\n   the rest of this document.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   The Security Considerations sections of [RFC5056],\
    \ [RFC5246], and\n   [RFC5746] apply to this document.\n   The TLS Finished messages\
    \ (see Section 7.4.9 of [RFC5246]) are known\n   to both endpoints of a TLS connection\
    \ and are cryptographically bound\n   to it.  For implementations of TLS that\
    \ correctly handle\n   renegotiation [RFC5746], each handshake on a TLS connection\
    \ is bound\n   to the preceding handshake, if any.  Therefore, the TLS Finished\n\
    \   messages can be safely used as a channel binding provided that the\n   authentication\
    \ mechanism doing the channel binding conforms to the\n   requirements in [RFC5056].\
    \  Applications utilizing 'tls-unique'\n   channel binding with TLS implementations\
    \ without support for secure\n   renegotiation [RFC5746] MUST ensure that ChangeCipherSpec\
    \ has been\n   used in any and all renegotiations prior to application-layer\n\
    \   authentication, and MUST discard any knowledge learned from the\n   server\
    \ prior to the completion of application-layer authentication.\n   The server\
    \ certificate, when present, is also cryptographically bound\n   to the TLS connection\
    \ through its use in key transport and/or\n   authentication of the server (either\
    \ by dint of its use in key\n   transport, by its use in signing key agreement,\
    \ or by its use in key\n   agreement).  Therefore, the server certificate is suitable\
    \ as an end-\n   point channel binding as described in [RFC5056].\n"
- title: 10.1.  Cryptographic Algorithm Agility
  contents:
  - "10.1.  Cryptographic Algorithm Agility\n   The 'tls-unique' and 'tls-unique-for-telnet'\
    \ channel binding types do\n   not add any use of cryptography beyond that used\
    \ by TLS itself.\n   Therefore, these two channel binding types add no considerations\
    \ with\n   respect to cryptographic algorithm agility.\n   The 'tls-server-end-point'\
    \ channel binding type consists of a hash of\n   a server certificate.  The reason\
    \ for this is to produce manageably\n   small channel binding data, as some implementations\
    \ will be using\n   kernel-mode memory (which is typically scarce) to store these.\
    \  This\n   use of a hash algorithm is above and beyond TLS's use of\n   cryptography,\
    \ therefore the 'tls-server-end-point' channel binding\n   type has a security\
    \ consideration with respect to hash algorithm\n   agility.  The algorithm to\
    \ be used, however, is derived from the\n   server certificate's signature algorithm\
    \ as described in Section 4.1;\n   to recap: use SHA-256 if the certificate signature\
    \ algorithm uses MD5\n   or SHA-1, else use whatever hash function the certificate\
    \ uses\n   (unless the signature algorithm uses no hash functions or more than\n\
    \   one hash function, in which case 'tls-server-end-point' is\n   undefined).\
    \  The construction of 'tls-server-end-point' channel\n   bindings is not directly\
    \ hash-agile (since no negotiation of hash\n   function is provided for), but\
    \ it is hash-agile nonetheless.  The\n   hash agility of 'tls-server-end-point'\
    \ channel bindings derives from\n   PKIX and TLS.\n   Current proposals for randomized\
    \ signatures algorithms [RHASH]\n   [NIST-SP.800-106.2009] use hash functions\
    \ in their construction -- a\n   single hash function in each algorithm.  Therefore,\
    \ the 'tls-server-\n   end-point' channel binding type should be available even\
    \ in cases\n   where new signatures algorithms are used that are based on current\n\
    \   randomized hashing proposals (but we cannot guarantee this, of\n   course).\n"
- title: 10.2.  On Disclosure of Channel Bindings Data by Authentication
  contents:
  - "10.2.  On Disclosure of Channel Bindings Data by Authentication\n       Mechanisms\n\
    \   When these channel binding types were first considered, one issue\n   that\
    \ some commenters were concerned about was the possible impact on\n   the security\
    \ of the TLS channel, of disclosure of the channel\n   bindings data by authentication\
    \ mechanisms.  This can happen, for\n   example, when an authentication mechanism\
    \ transports the channel\n   bindings data, with no confidentiality protection,\
    \ over other\n   transports (for example, in communicating with a trusted third\n\
    \   party), or when the TLS channel provides no confidentiality\n   protection\
    \ and the authentication mechanism does not protect the\n   confidentiality of\
    \ the channel bindings data.  This section considers\n   that concern.\n   When\
    \ the TLS connection uses a cipher suite that does not provide\n   confidentiality\
    \ protection, the TLS Finished messages will be visible\n   to eavesdroppers,\
    \ regardless of what the authentication mechanism\n   does.  The same is true\
    \ of the server certificate which, in any case,\n   is generally visible to eavesdroppers.\
    \  Therefore we must consider\n   our choices of TLS channel bindings here to\
    \ be safe to disclose by\n   definition -- if that were not the case, then TLS\
    \ with cipher suites\n   that don't provide confidentiality protection would be\
    \ unsafe.\n   Furthermore, the TLS Finished message construction depends on the\n\
    \   security of the TLS PRF, which in turn needs to be resistant to key\n   recovery\
    \ attacks, and we think that it is, as it is based on HMAC,\n   and the master\
    \ secret is, well, secret (and the result of key\n   exchange).\n   Note too that\
    \ in the case of an attempted active man-in-the-middle\n   attack, the attacker\
    \ will already possess knowledge of the TLS\n   Finished messages for both inbound\
    \ and outbound TLS channels (which\n   will differ, given that the attacker cannot\
    \ force them to be the\n   same).  No additional information is obtained by the\
    \ attacker from\n   the authentication mechanism's disclosure of channel bindings\
    \ data --\n   the attacker already has it, even when cipher suites providing\n\
    \   confidentiality protection are provided.\n   None of the channel binding types\
    \ defined herein produce channel\n   bindings data that must be kept secret. \
    \ Moreover, none of the\n   channel binding types defined herein can be expected\
    \ to be private\n   (known only to the end-points of the channel), except that\
    \ the unique\n   TLS channel binding types can be expected to be private when\
    \ a cipher\n   suite that provides confidentiality protection is used to protect\
    \ the\n   Finished message exchanges and the application data records\n   containing\
    \ application-layer authentication messages.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [FIPS-180-3]            United States of America,\
    \ National Institute\n                           of Standards and Technology,\
    \ \"Secure Hash\n                           Standard\", Federal Information Processing\n\
    \                           Standard (FIPS) 180-3, October 2008.\n   [RFC2119]\
    \               Bradner, S., \"Key words for use in RFCs to\n                \
    \           Indicate Requirement Levels\", BCP 14,\n                         \
    \  RFC 2119, March 1997.\n   [RFC5056]               Williams, N., \"On the Use\
    \ of Channel Bindings\n                           to Secure Channels\", RFC 5056,\
    \ November 2007.\n   [RFC5246]               Dierks, T. and E. Rescorla, \"The\
    \ Transport\n                           Layer Security (TLS) Protocol Version\
    \ 1.2\",\n                           RFC 5246, August 2008.\n   [RFC5746]    \
    \           Rescorla, E., Ray, M., Dispensa, S., and N.\n                    \
    \       Oskov, \"Transport Layer Security (TLS)\n                           Renegotiation\
    \ Indication Extension\",\n                           RFC 5746, February 2010.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [NIST-SP.800-106.2009]  National Institute\
    \ of Standards and\n                           Technology, \"NIST Special Publication\
    \ 800-\n                           106: Randomized Hashing for Digital\n     \
    \                      Signatures\", February 2009.\n   [RFC0854]            \
    \   Postel, J. and J. Reynolds, \"Telnet Protocol\n                          \
    \ Specification\", STD 8, RFC 854, May 1983.\n   [RFC1321]               Rivest,\
    \ R., \"The MD5 Message-Digest\n                           Algorithm\", RFC 1321,\
    \ April 1992.\n   [RFC2743]               Linn, J., \"Generic Security Service\n\
    \                           Application Program Interface Version 2,\n       \
    \                    Update 1\", RFC 2743, January 2000.\n   [RFC3174]       \
    \        Eastlake, D. and P. Jones, \"US Secure Hash\n                       \
    \    Algorithm 1 (SHA1)\", RFC 3174,\n                           September 2001.\n\
    \   [RFC4422]               Melnikov, A., Ed., and K. Zeilenga, Ed.,\n       \
    \                    \"Simple Authentication and Security Layer\n            \
    \               (SASL)\", RFC 4422, June 2006.\n   [RFC4880]               Callas,\
    \ J., Donnerhacke, L., Finney, H.,\n                           Shaw, D., and R.\
    \ Thayer, \"OpenPGP Message\n                           Format\", RFC 4880, November\
    \ 2007.\n   [RFC5081]               Mavrogiannopoulos, N., \"Using OpenPGP Keys\n\
    \                           for Transport Layer Security (TLS)\n             \
    \              Authentication\", RFC 5081, November 2007.\n   [RFC5280]      \
    \         Cooper, D., Santesson, S., Farrell, S.,\n                          \
    \ Boeyen, S., Housley, R., and W. Polk,\n                           \"Internet\
    \ X.509 Public Key Infrastructure\n                           Certificate and\
    \ Certificate Revocation List\n                           (CRL) Profile\", RFC\
    \ 5280, May 2008.\n   [RFC5801]               Josefsson, S. and N. Williams, \"\
    Using Generic\n                           Security Service Application Program\n\
    \                           Interface (GSS-API) Mechanisms in Simple\n       \
    \                    Authentication and Security Layer (SASL): The\n         \
    \                  GS2 Mechanism Family\", RFC 5801, July 2010.\n   [RHASH]  \
    \               Halevi, S. and H. Krawczyk, \"Strengthening\n                \
    \           Digital Signatures via Randomized Hashing\",\n                   \
    \        Work in Progress, October 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jeff Altman\n   Secure Endpoints\n   255 W 94TH ST PHB\n\
    \   New York, NY  10025\n   US\n   EMail: jaltman@secure-endpoints.com\n   Nicolas\
    \ Williams\n   Oracle\n   5300 Riata Trace Ct\n   Austin, TX  78727\n   US\n \
    \  EMail: Nicolas.Williams@oracle.com\n   Larry Zhu\n   Microsoft Corporation\n\
    \   One Microsoft Way\n   Redmond, WA  98052\n   US\n   EMail: larry.zhu@microsoft.com\n"
