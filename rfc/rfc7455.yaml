- contents:
  - ' Transparent Interconnection of Lots of Links (TRILL): Fault Management

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies Transparent Interconnection of Lots of Links\n
    \  (TRILL) Operations, Administration, and Maintenance (OAM) fault\n   management.
    \ Methods in this document follow the CFM (Connectivity\n   Fault Management)
    framework defined in IEEE 802.1 and reuse OAM tools\n   where possible.  Additional
    messages and TLVs are defined for TRILL-\n   specific applications or for cases
    where a different set of\n   information is required other than CFM as defined
    in IEEE 802.1.\n   This document updates RFC 6325.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7455.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................5\n
    \  2. Conventions Used in This Document ...............................5\n   3.
    General Format of TRILL OAM Packets .............................6\n      3.1.
    Identification of TRILL OAM Frames .........................8\n      3.2. Use
    of TRILL OAM Alert Flag ................................8\n           3.2.1. Handling
    of TRILL Frames with the \"A\" Flag ..........9\n      3.3. OAM Capability Announcement
    ................................9\n      3.4. Identification of the OAM Message
    .........................10\n   4. TRILL OAM Layering vs. IEEE Layering ...........................11\n
    \     4.1. Processing at the ISS Layer ...............................12\n           4.1.1.
    Receive Processing .................................12\n           4.1.2. Transmit
    Processing ................................12\n      4.2. End-Station VLAN and
    Priority Processing ..................12\n           4.2.1. Receive Processing
    .................................12\n           4.2.2. Transmit Processing ................................12\n
    \     4.3. TRILL Encapsulation and Decapsulation Layer ...............12\n           4.3.1.
    Receive Processing for Unicast Packets .............12\n           4.3.2. Transmit
    Processing for Unicast Packets ............13\n           4.3.3. Receive Processing
    for Multicast Packets ...........14\n           4.3.4. Transmit Processing of
    Multicast Packets ...........15\n      4.4. TRILL OAM Layer Processing ................................16\n
    \  5. Maintenance Associations (MAs) in TRILL ........................17\n   6.
    MEP Addressing .................................................18\n      6.1.
    Use of MIP in TRILL .......................................21\n   7. Continuity
    Check Message (CCM) .................................22\n   8. TRILL OAM Message
    Channel ......................................25\n      8.1. TRILL OAM Message
    Header ..................................25\n      8.2. TRILL-Specific OAM OpCodes
    ................................26\n      8.3. Format of TRILL OAM TLV ...................................26\n
    \     8.4. TRILL OAM TLVs ............................................27\n           8.4.1.
    Common TLVs between CFM and TRILL ..................27\n           8.4.2. TRILL
    OAM-Specific TLVs ............................27\n           8.4.3. TRILL OAM
    Application Identifier TLV ...............28\n           8.4.4. Out-of-Band Reply
    Address TLV ......................30\n           8.4.5. Diagnostic Label TLV ...............................31\n
    \          8.4.6. Original Data Payload TLV ..........................32\n           8.4.7.
    RBridge Scope TLV ..................................32\n           8.4.8. Previous
    RBridge Nickname TLV ......................33\n           8.4.9. Next-Hop RBridge
    List TLV ..........................34\n           8.4.10. Multicast Receiver Port
    Count TLV .................34\n           8.4.11. Flow Identifier TLV ...............................35\n
    \          8.4.12. Reflector Entropy TLV .............................36\n           8.4.13.
    Authentication TLV ................................37\n   9. Loopback Message
    ...............................................38\n      9.1. Loopback Message
    Format ...................................38\n      9.2. Theory of Operation .......................................39\n
    \          9.2.1. Actions by Originator RBridge ......................39\n           9.2.2.
    Intermediate RBridge ...............................39\n           9.2.3. Destination
    RBridge ................................40\n   10. Path Trace Message ............................................40\n
    \     10.1. Theory of Operation ......................................41\n           10.1.1.
    Actions by Originator RBridge .....................41\n           10.1.2. Intermediate
    RBridge ..............................42\n           10.1.3. Destination RBridge
    ...............................43\n   11. Multi-Destination Tree Verification
    Message (MTVM) ............43\n      11.1. MTVM Format ..............................................44\n
    \     11.2. Theory of Operation ......................................44\n           11.2.1.
    Actions by Originator RBridge .....................44\n           11.2.2. Receiving
    RBridge .................................45\n           11.2.3. In-Scope RBridges
    .................................45\n   12. Application of Continuity Check Message
    (CCM) in TRILL ........46\n      12.1. CCM Error Notification ...................................47\n
    \     12.2. Theory of Operation ......................................48\n           12.2.1.
    Actions by Originator RBridge .....................48\n           12.2.2. Intermediate
    RBridge ..............................49\n           12.2.3. Destination RBridge
    ...............................49\n   13. Fragmented Reply ..............................................50\n
    \  14. Security Considerations .......................................50\n   15.
    IANA Considerations ...........................................52\n      15.1.
    OAM Capability Flags .....................................52\n      15.2. CFM
    Code Points ..........................................52\n      15.3. MAC Addresses
    ............................................53\n      15.4. Return Codes and Sub-codes
    ...............................53\n      15.5. TRILL Nickname Address Family ............................54\n
    \  16. References ....................................................54\n      16.1.
    Normative References .....................................54\n      16.2. Informative
    References ...................................55\n   Appendix A. Backwards Compatibility
    ...............................57\n      A.1.  Maintenance Point (MEP/MIP) Model
    ........................57\n      A.2.  Data-Plane Encoding and Frame Identification
    .............57\n   Appendix B. Base Mode for TRILL OAM ...............................59\n
    \  Appendix C. MAC Addresses Request .................................61\n   Acknowledgments
    ...................................................62\n   Authors' Addresses ................................................62\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The general structure of TRILL OAM messages is presented
    in\n   [RFC7174].  TRILL OAM messages consist of six parts: Link Header,\n   TRILL
    Header, Flow Entropy, OAM Ethertype, OAM Message Channel, and\n   Link Trailer.\n
    \  The OAM Message Channel carries various control information and OAM-\n   related
    data between TRILL switches, also known as RBridges or\n   Routing Bridges.\n
    \  A common OAM Message Channel representation can be shared between\n   different
    technologies.  This consistency between different OAM\n   technologies promotes
    nested fault monitoring and isolation between\n   technologies that share the
    same OAM framework.\n   The TRILL OAM Message Channel is formatted as specified
    in IEEE\n   Connectivity Fault Management (CFM) [8021Q].\n   The ITU-T Y.1731
    [Y1731] standard utilizes the same messaging format\n   as [8021Q] OAM messages
    where applicable.  This document takes a\n   similar stance and reuses [8021Q]
    in TRILL OAM.  It is assumed that\n   readers are familiar with [8021Q] and [Y1731].
    \ Readers who are not\n   familiar with these documents are encouraged to review
    them.\n   This document specifies TRILL OAM fault management.  It updates\n   [RFC6325]
    as specified in Section 3.1.  TRILL performance monitoring\n   is specified in
    [RFC7456].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [RFC2119].\n   Capitalized IANA Considerations terms such as \"Standards
    Action\" are\n   to be interpreted as described in [RFC5226].\n   Acronyms used
    in the document include the following:\n      CCM   - Continuity Check Message
    [8021Q]\n      DA    - Destination Address\n      ECMP  - Equal-Cost Multipath\n
    \     FGL   - Fine-Grained Label\n      ISS   - Internal Sub-Layer Service [8021Q]\n
    \     LBM   - Loopback Message [8021Q]\n      LBR   - Loopback Reply [8021Q]\n
    \     MA    - Maintenance Association [8021Q] [RFC7174]\n      MAC   - Media Access
    Control (MAC)\n      MD    - Maintenance Domain [8021Q]\n      MEP   - Maintenance
    End Point [RFC7174] [8021Q]\n      MIP   - Maintenance Intermediate Point [RFC7174]
    [8021Q]\n      MP    - Maintenance Point [RFC7174]\n      MTVM  - Multi-destination
    Tree Verification Message\n      MTVR  - Multi-destination Tree Verification Reply\n
    \     OAM   - Operations, Administration, and Maintenance [RFC6291]\n      PRI
    \  - Priority of Ethernet Frames [8021Q]\n      PTM   - Path Trace Message\n      PTR
    \  - Path Trace Reply\n      SA    - Source Address\n      SAP   - Service Access
    Point [8021Q]\n      TRILL - Transparent Interconnection of Lots of Links [RFC6325]\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  General Format of TRILL OAM Packets\n   The TRILL forwarding paradigm allows
    an implementation to select a\n   path from a set of equal-cost paths to forward
    a unicast TRILL Data\n   packet.  For multi-destination TRILL Data packets, a
    distribution\n   tree is chosen by the TRILL switch that ingresses or creates
    the\n   packet.  Selection of the path of choice is implementation dependent\n
    \  at each hop for unicast and at the ingress for multi-destination.\n   However,
    it is a common practice to utilize Layer 2 through Layer 4\n   information in
    the frame payload for path selection.\n   For accurate monitoring and/or diagnostics,
    OAM messages are required\n   to follow the same path as corresponding data packets.
    \ [RFC7174]\n   presents the high-level format of OAM messages.  The details of
    the\n   TRILL OAM frame format are defined in this document.\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \        |                               |\n         .    Link  Header               .
    Variable\n         |                               |\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \        |                               |\n         +    TRILL Header               +
    6 or more bytes\n         |                               |\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \        |                               |\n         .   Flow Entropy                .
    96 bytes\n         .                               .\n         |                               |\n
    \        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         |   OAM Ethertype               |\n
    \        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         |                               |\n
    \        .   OAM Message Channel         . Variable\n         .                               .\n
    \        |                               |\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \        |     Link Trailer              | Variable\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \              Figure 1: Format of TRILL OAM Messages\n   o  Link Header: Media-dependent
    header.  For Ethernet, this includes\n      the Destination MAC, Source MAC, VLAN
    (optional), and Ethertype\n      fields.\n   o  TRILL Header: Fixed size of 6
    bytes when the Extended Header is\n      not included [RFC6325].\n   o  Flow Entropy:
    A 96-byte, fixed-size field.  The rightmost bits of\n      the field MUST be padded
    with zeros, up to 96 bytes, when the\n      flow-entropy information is less than
    96 bytes.  Flow Entropy\n      enables emulation of the forwarding behavior of
    the desired data\n      packets.  The Flow Entropy field starts with the Inner.MacDA.
    \ The\n      offset of the Inner.MacDA depends on whether extensions are\n      included
    or not as specified in [RFC7179] and [RFC6325].  Such\n      extensions are not
    commonly supported in current TRILL\n      implementations.\n   o  OAM Ethertype:
    A 16-bit Ethertype that identifies the OAM Message\n      Channel that follows.
    \ This document specifies using the Ethertype\n      0x8902 allocated for CFM
    [8021Q].\n   o  OAM Message Channel: A variable-size section that carries OAM-\n
    \     related information.  The message format is as specified in\n      [8021Q].\n
    \  o  Link Trailer: Media-dependent trailer.  For Ethernet, this is the\n      FCS
    (Frame Check Sequence).\n"
  - contents:
    - "3.1.  Identification of TRILL OAM Frames\n   TRILL, as originally specified
      in [RFC6325], did not have a specific\n   flag or method to identify OAM frames.
      \ This document updates\n   [RFC6325] to include specific methods to identify
      TRILL OAM frames.\n   Section 3.2 explains the details of the method.\n"
    title: 3.1.  Identification of TRILL OAM Frames
  - contents:
    - "3.2.  Use of TRILL OAM Alert Flag\n   The TRILL Header, as defined in [RFC6325],
      has two reserved bits.\n   This document specifies use of the reserved bit next
      to the Version\n   field in the TRILL Header as the Alert flag.  The Alert flag
      will be\n   denoted by \"A\".  RBridges MUST NOT use the \"A\" flag for forwarding\n
      \  decisions such as the selection of which ECMP path or multi-\n   destination
      tree to select.\n   Implementations that comply with this document MUST utilize
      the \"A\"\n   flag and CFM Ethertype to identify TRILL OAM frames.\n                                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                                   | V |A|R|M|Op-Length| Hop Count |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |   Egress RBridge Nickname     |  Ingress RBridge Nickname     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |   Options...\n    +-+-+-+-+-+-+-+-+-+-+-+-\n                 Figure 2:
      TRILL Header with the \"A\" Flag\n   o  A (1 bit): Indicates this is a possible
      OAM frame and is subject\n      to specific handling as specified in this document.\n
      \  All other TRILL Header fields carry the same meaning as defined in\n   [RFC6325].\n"
    - contents:
      - "3.2.1.  Handling of TRILL Frames with the \"A\" Flag\n   The value \"1\"
        in the \"A\" flag indicates TRILL frames that may qualify\n   as OAM frames.
        \ Implementations are further REQUIRED to validate such\n   frames by comparing
        the value at the OAM Ethertype (Figure 1)\n   location with the CFM Ethertype
        \"0x8902\" [8021Q].  If the value\n   matches, such frames are identified
        as TRILL OAM frames and SHOULD be\n   processed as discussed in Section 4.\n
        \  Frames with the \"A\" flag set that do not contain a CFM Ethertype are\n
        \  not considered OAM frames.  Such frames MUST be silently discarded.\n   OAM-capable
        RBridges MUST NOT generate OAM frames to an RBridge that\n   is not OAM capable.\n
        \  Intermediate RBridges that are not OAM capable (i.e., do not\n   understand
        the \"A\" flag) follow the process defined in Section 3.3 of\n   [RFC6325]
        and forward OAM frames with the \"A\" flag unaltered.\n"
      title: 3.2.1.  Handling of TRILL Frames with the "A" Flag
    title: 3.2.  Use of TRILL OAM Alert Flag
  - contents:
    - "3.3.  OAM Capability Announcement\n   Any given RBridge can be (1) OAM incapable,
      (2) OAM capable with new\n   extensions, or (3) OAM capable with the backwards-compatibility\n
      \  method.  The OAM request originator, prior to origination of the\n   request,
      is required to identify the OAM capability of the target and\n   generate the
      appropriate OAM message.\n   The capability flags defined in the TRILL Version
      sub-TLV (TRILL-VER)\n   [RFC7176] will be utilized for announcing OAM capabilities.
      \ The\n   following OAM-related capability flags are defined:\n      O - OAM
      capable\n      B - Backwards-compatible OAM\n   A capability announcement with
      the \"O\" flag set to 1 and the \"B\" flag\n   set to 1 indicates that the originating
      RBridge is OAM capable but\n   utilizes the backwards-compatibility method defined
      in Appendix A.  A\n   capability announcement with the \"O\" flag set to 1 and
      the \"B\" flag\n   set to 0 indicates that the originating RBridge is OAM capable
      and\n   utilizes the method specified in Section 3.2.\n   When the \"O\" flag
      is set to 0, the announcing implementation is\n   considered not capable of
      OAM, and the \"B\" flag is ignored.\n      +-+-+-+-+-+-+-+-+\n      | Type          |
      \             (1 byte)\n      +-+-+-+-+-+-+-+-+\n      | Length        |              (1
      byte)\n      +-+-+-+-+-+-+-+-+\n      | Max-version   |              (1 byte)\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+\n      |A|F|O|B|Other Capabilities
      and Header Flags|  (4 bytes)\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+\n
      \      0                   1                 3\n       0 1 2 3 4 5 6 7 8 9 0
      1 2 3 4 5 6 7   0 1\n    Figure 3: TRILL-VER Sub-TLV [RFC7176] with \"O\" and
      \"B\" Flags\n   In Figure 3, \"A\" is the Affinity sub-TLV support flag as indicated
      in\n   [RFC7176], and \"F\" is the FGL-safe flag as indicated in [RFC7172] and\n
      \  [RFC7176].  The \"O\" and \"B\" flags are located after the \"F\" flag in\n
      \  the Capability and Header Flags field of the TRILL-VER sub-TLV, as\n   depicted
      in Figure 3 above.  Usage of the \"O\" and \"B\" flags is\n   discussed above.\n
      \  Absence of the TRILL-VER sub-TLV means the announcing RBridge is not\n   OAM
      capable.\n"
    title: 3.3.  OAM Capability Announcement
  - contents:
    - "3.4.  Identification of the OAM Message\n   The ingress RBridge nickname allows
      recipients to identify the origin\n   of the message in most cases.  However,
      when an out-of-band reply is\n   generated, the responding RBridge nickname
      is not easy to identify.\n   The [8021Q] Sender ID TLV (1) provides methods
      to identify the device\n   by including the Chassis ID.  The Chassis ID allows
      different\n   addressing formats such as IANA Address Family enumerations.  IANA\n
      \  has allocated Address Family Number 16396 for TRILL nickname.  In\n   TRILL
      OAM, the Chassis ID sub-type of the Sender ID TLV is set to\n   16396, and the
      Chassis ID field contains the corresponding TRILL\n   nickname.\n   When the
      Sender ID TLV is present and the Chassis ID sub-type is set\n   to 16396, the
      sender RBridge TRILL nickname SHOULD be derived from\n   the nickname embedded
      in the Chassis ID.  Otherwise, the sender\n   RBridge TRILL nickname SHOULD
      be derived from the ingress RBridge\n   nickname.\n"
    title: 3.4.  Identification of the OAM Message
  title: 3.  General Format of TRILL OAM Packets
- contents:
  - "4.  TRILL OAM Layering vs. IEEE Layering\n   This section presents the placement
    of the TRILL OAM shim within the\n   IEEE 802.1 layers.  The transmit and receive
    processing are\n   explained.\n                       +-+-+-+-+-+-+-+-+-+-+\n
    \                      |   RBridge Layer   |\n                       |   Processing
    \     |\n                       +-+-+-+-+-+-+-+-+-+-+\n                                |\n
    \                               |\n                            +-+-+-+-+-+-+\n
    \                           | TRILL OAM | UP MEP\n                            |
    Layer     |   MIP\n                            +-+-+-+-+-+-+ Down MEP\n                                 |\n
    \                                |\n                            +-+-+-+-+-+-+\n
    \     (3)-------->          | TRILL     |\n                            | Encap/Decap\n
    \                           +-+-+-+-+-+-+\n                                |\n
    \                           +-+-+-+-+-+-+\n      (2)-------->          |End-station|\n
    \                           | VLAN & Priority Processing\n                            +-+-+-+-+-+-+\n
    \                               |\n                            +-+-+-+-+-+-+\n
    \     (1)-------->          |ISS        |\n                            |Processing
    |\n                            +-+-+-+-+-+-+\n                                |\n
    \                               |\n                                |\n           Figure
    4: Placement of TRILL MP within IEEE 802.1\n   [RFC6325], Section 4.6 as updated
    by [RFC7180] provides a detailed\n   explanation of frame processing.  Please
    refer to those documents for\n   additional details and for processing scenarios
    not covered herein.\n   Sections 4.1 and 4.2 apply to links using a broadcast
    LAN technology\n   such as Ethernet.\n   On links using an inherently point-to-point
    technology, such as PPP\n   [RFC6361], there is no Outer.MacDA, Outer.MacSA, or
    Outer.VLAN\n   because these are part of the Link Header for Ethernet.  Point-to-\n
    \  point links typically have Link Headers without these fields.\n"
  - contents:
    - '4.1.  Processing at the ISS Layer

      '
    - contents:
      - "4.1.1.  Receive Processing\n   The ISS layer receives an indication from
        the port.  It extracts DA\n   and SA, and it marks the remainder of the payload
        as M1.  The ISS\n   layer passes on (DA, SA, M1) as an indication to the higher
        layer.\n   For TRILL Ethernet frames, this is Outer.MacDA and Outer.MacSA.
        \ M1\n   is the remainder of the packet.\n"
      title: 4.1.1.  Receive Processing
    - contents:
      - "4.1.2.  Transmit Processing\n   The ISS layer receives an indication from
        the higher layer that\n   contains (DA, SA, M1).  It constructs an Ethernet
        frame and passes\n   down to the port.\n"
      title: 4.1.2.  Transmit Processing
    title: 4.1.  Processing at the ISS Layer
  - contents:
    - '4.2.  End-Station VLAN and Priority Processing

      '
    - contents:
      - "4.2.1.  Receive Processing\n   Receive (DA, SA, M1) indication from the ISS
        layer.  Extract the VLAN\n   ID and priority from the M1 part of the received
        indication (or\n   derive them from the port defaults or other default parameters)
        and\n   construct (DA, SA, VLAN, PRI, M2).  VLAN+PRI+M2 maps to M1 in the\n
        \  received indication.  Pass (DA, SA, VLAN, PRI, M2) to the TRILL\n   Encapsulation/Decapsulation
        layer.\n"
      title: 4.2.1.  Receive Processing
    - contents:
      - "4.2.2.  Transmit Processing\n   Receive (DA, SA, VLAN, PRI, M2) indication
        from the TRILL\n   Encapsulation/Decapsulation layer.  Merge VLAN, PRI, M2
        to form M1.\n   Pass down (DA, SA, M1) to the ISS layer.\n"
      title: 4.2.2.  Transmit Processing
    title: 4.2.  End-Station VLAN and Priority Processing
  - contents:
    - '4.3.  TRILL Encapsulation and Decapsulation Layer

      '
    - contents:
      - "4.3.1.  Receive Processing for Unicast Packets\n   o  Receive indication
        (DA, SA, VLAN, PRI, M2) from the End-Station\n      VLAN and Priority Processing
        layer.\n   o  If the DA matches the port Local DA and the frame is of TRILL\n
        \     Ethertype:\n      -  Discard DA, SA, VLAN, and PRI.  From M2, derive
        (TRILL-HDR,\n         iDA, iSA, i-VL, M3).\n      -  If TRILL nickname is
        Local and TRILL Header Alert flag is set:\n         *  Pass on to OAM processing.\n
        \     -  Else, pass on (TRILL-HDR, iDA, iSA, i-VL, M3) to the RBridge\n         layer.\n
        \  o  If the DA matches the port Local DA and the Ethertype is RBridge-\n
        \     Channel [RFC7178]:\n      -  Process as a possible unicast native RBridge
        Channel packet.\n   o  If the DA matches the port Local DA and the Ethertype
        is neither\n      TRILL nor RBridge-Channel:\n      -  Discard packet.\n   o
        \ If the DA does not match, the port is Appointed Forwarder for\n      VLAN,
        and the Ethertype is not TRILL or RBridge-Channel:\n      -  Insert TRILL-HDR
        and send (TRILL-HDR, iDA, iSA,i-VL, M3)\n         indication to the RBridge
        layer (this is the TRILL Ingress\n         Function).\n"
      title: 4.3.1.  Receive Processing for Unicast Packets
    - contents:
      - "4.3.2.  Transmit Processing for Unicast Packets\n   o  Receive indication
        (TRILL-HDR, iDA, iSA, iVL, M3) from the RBridge\n      layer.\n   o  If the
        egress TRILL nickname is local:\n      -  If the port is Appointed Forwarder
        for iVL, the port is not\n         configured as a trunk or point-to-point
        (P2P) port, the TRILL\n         Alert flag is set, and the OAM Ethertype is
        present, then:\n         *  Strip TRILL-HDR and construct (DA, SA, VLAN, M2)
        (this is\n            the TRILL Egress Function).\n      - Else:\n         *
        \ Discard packet.\n   o  If the egress TRILL nickname is not local:\n      -
        \ Insert Outer.MacDA, Outer.MacSA, Outer.VLAN, and TRILL\n         Ethertype,
        and construct (DA, SA, VLAN, M2) where M2 is (TRILL-\n         HDR, iDA, iSA,
        iVL, M).\n   o  Forward (DA, SA, V, M2) to the End-Station VLAN and Priority\n
        \     Processing layer.\n"
      title: 4.3.2.  Transmit Processing for Unicast Packets
    - contents:
      - "4.3.3.  Receive Processing for Multicast Packets\n   o  Receive (DA, SA,
        V, M2) from the End-Station VLAN and Priority\n      Processing layer.\n   o
        \ If the DA is All-RBridges and the Ethertype is TRILL:\n      -  Strip DA,
        SA, and V.  From M2, extract (TRILL-HDR, iDA, iSA,\n         iVL, and M3).\n
        \     -  If the TRILL Alert flag is set and the OAM Ethertype is present\n
        \        at the end of Flow Entropy:\n         *  Perform OAM processing.\n
        \     -  Else, extract the TRILL Header, inner MAC addresses, and\n         Inner.VLAN,
        and pass indication (TRILL-HDR, iDA, iSA, iVL and\n         M3) to the TRILL
        RBridge layer.\n   o  If the DA is All-IS-IS-RBridges and the Ethertype is
        L2-IS-IS,\n      then pass frame up to TRILL IS-IS processing.\n   o  If the
        DA is All-RBridges or All-IS-IS-RBridges but the Ethertype\n      is not TRILL
        or L2-IS-IS respectively:\n      -  Discard the packet.\n   o  If the Ethertype
        is TRILL but the multicast DA is not All-RBridges\n      or if the Ethertype
        is L2-IS-IS but the multicast DA is not All-\n      IS-IS-RBridges:\n      -
        \ Discard the packet.\n   o  If the DA is All-Edge-RBridges and the Ethertype
        is RBridge-\n      Channel [RFC7178]:\n      -  Process as a possible multicast
        native RBridge Channel packet.\n   o  If the DA is in the initial bridging/link
        protocols block\n      (01-80-C2-00-00-00 to 01-80-C2-00-00-0F) or is in the
        TRILL block\n      and not assigned for Outer.MacDA use (01-80-C2-00-00-42
        to\n      01-80-C2-00-00-4F), then:\n      -  The frame is not propagated
        through an RBridge although some\n         special processing may be done
        at the port as specified in\n         [RFC6325], and the frame may be dispatched
        to Layer 2\n         processing at the port if certain protocols are supported
        by\n         that port (examples include the Link Aggregation Protocol and\n
        \        the Link-Layer Discovery Protocol).\n   o  If the DA is some other
        multicast value:\n      -  Insert TRILL-HDR and construct (TRILL-HDR, iDA,
        iSA, IVL, M3).\n      -  Pass the (TRILL-HDR, iDA, iSA, IVL, M3) to the RBridge
        layer.\n"
      title: 4.3.3.  Receive Processing for Multicast Packets
    - contents:
      - "4.3.4.  Transmit Processing of Multicast Packets\n   The following ignores
        the case of transmitting TRILL IS-IS packets.\n   o  Receive indication (TRILL-HDR,
        iDA, iSA, iVL, M3) from the RBridge\n      layer.\n   o  If the TRILL Header
        multicast (\"M\") flag is set, the TRILL-HDR\n      Alert flag is set, and
        the OAM Ethertype is present, then:\n      -  Construct (DA, SA, V, M2) by
        inserting TRILL Outer.MacDA of\n         All-RBridges, Outer.MacSA, Outer.VLAN,
        and TRILL Ethertype.  M2\n         here is (Ethertype TRILL, TRILL-HDR, iDA,
        iSA, iVL, M).\n         Note: A second copy of native format is not made.\n
        \  o  Else, if the TRILL Header multicast (\"M\") flag is set and the\n         Alert
        flag not set:\n      -  If the port is Appointed Forwarder for iVL and the
        port is not\n         configured as a trunk port or a P2P port, strip TRILL-HDR,
        iSA,\n         iDA, and iVL and construct (DA, SA, V, M2) for native format.\n
        \     -  Make a second copy (DA, SA, V, M2) by inserting TRILL\n         Outer.MacDA,
        Outer.MacSA, Outer.VLAN, and TRILL Ethertype.  M2\n         here is (Ethertype
        TRILL, TRILL-HDR, iDA, iSA, iVL, M).\n   o  Pass the indication (DA, SA, V,
        M2) to the End-Station VLAN and\n      Priority Processing layer.\n"
      title: 4.3.4.  Transmit Processing of Multicast Packets
    title: 4.3.  TRILL Encapsulation and Decapsulation Layer
  - contents:
    - "4.4.  TRILL OAM Layer Processing\n   The TRILL OAM layer is located between
      the TRILL\n   Encapsulation/Decapsulation layer and the RBridge layer.  It performs\n
      \  the following: 1) identifies OAM frames that need local processing\n   and
      2) performs OAM processing or redirects to the CPU for OAM\n   processing.\n
      \  o  Receive indication (TRILL-HDR, iDA, iSA, iVL, M3) from the RBridge\n      layer.
      \ M3 is the payload after Inner.VLAN iVL.\n   o  If the TRILL Header multicast
      (\"M\") flag is set, the TRILL Alert\n      flag is set, and TRILL OAM Ethertype
      is present, then:\n      -  If MEP or MIP is configured on the Inner.VLAN/FGL
      of the\n         packet, then:\n         *  Discard packets that have MD-Level
      less than that of the MEP\n            or packets that do not have MD-Level
      present (e.g., due to\n            packet truncation).\n         *  If MD-Level
      matches MD-Level of the MEP, then:\n            +  Redirect to OAM processing
      (Do not forward further).\n         *  If MD-Level matches MD-Level of MIP,
      then:\n            +  Make a copy for OAM processing and continue.\n         *
      \ If MD-Level matches MD-Level of MEP, then:\n            +  Redirect the OAM
      packet to OAM processing and do not\n               forward along or forward
      as a native packet.\n   o  Else, if the TRILL Alert flag is set and the TRILL
      OAM Ethertype\n      is present, then:\n      -  If MEP or MIP is configured
      on the Inner.VLAN/FGL of the\n         packet, then:\n         *  Discard packets
      that have MD-Level not present or where MD-\n            Level is less than
      that of the MEP.\n         *  If MD-Level matches MD-Level of the MEP, then:\n
      \           +  Redirect to OAM processing (do not forward further).\n         *
      \ If MD-Level matches MD-Level of MIP, then:\n            +  Make a copy for
      OAM processing and continue.\n   o  Else, for a non-OAM packet:\n      -  Continue.\n
      \  o  Pass the indication (DA, SA, V, M2) to the End-Station VLAN and\n      Priority
      Processing layer.\n   Note: In the receive path, the processing above compares
      with the\n   Down MEP and MIP Half functions.  In the transmit processing, it\n
      \  compares with Up MEP and MIP Half functions.\n   Appointed Forwarder is a
      function that the TRILL\n   Encapsulation/Decapsulation layer performs.  The
      TRILL\n   Encapsulation/Decapsulation layer is responsible for prevention of\n
      \  leaking of OAM packets as native frames.\n"
    title: 4.4.  TRILL OAM Layer Processing
  title: 4.  TRILL OAM Layering vs. IEEE Layering
- contents:
  - "5.  Maintenance Associations (MAs) in TRILL\n   [8021Q] defines a Maintenance
    Association as a logical relationship\n   between a group of nodes.  Each Maintenance
    Association (MA) is\n   identified with a unique MAID of 48 bytes [8021Q].  CCM
    and other\n   related OAM functions operate within the scope of an MA.  The\n
    \  definition of MA is technology independent.  Similarly, it is encoded\n   within
    the OAM message, not in the technology-dependent portion of\n   the packet.  Hence,
    the MAID as defined in [8021Q] can be utilized\n   for TRILL OAM without modifications.
    \ This also allows us to utilize\n   CCM and LBM messages defined in [8021Q] as
    is.\n   In TRILL, an MA may contain two or more RBridges (MEPs).  For\n   unicast,
    it is likely that the MA contains exactly two MEPs that are\n   the two end points
    of the flow.  For multicast, the MA may contain\n   two or more MEPs.\n   For
    TRILL, in addition to all of the standard [8021Q] CFM MIB\n   definitions, each
    MEP's MIB contains one or more Flow Entropy\n   definitions corresponding to the
    set of flows that the MEP monitors.\n   [8021Q] CFM MIB is augmented to add the
    TRILL-specific information.\n   Figure 5 depicts the augmentation of the CFM MIB
    to add the TRILL-\n   specific Flow Entropy.\n             MA---\n            |\n
    \            --- MEP\n            |\n            . - Remote MEP List\n                   .\n
    \                  |\n                    --- MEP-A\n                   |\n                    ---
    MEP-B\n                   .\n            |\n            . - Flow Entropy List
    { Augments IEEE8021-CFM-MIB}\n                   |\n                    --- (Flow
    Entropy-1)\n                   |\n                    --- (Flow Entropy-2)\n                   |\n
    \                  . --- (Flow Entropy-n)\n           |\n            Other MIB
    entries\n          Figure 5: Correlation of TRILL-Augmented MIB\n   The detailed
    TRILL OAM MIB will be specified in a separate document\n   [TRILLOAMMIB].\n"
  title: 5.  Maintenance Associations (MAs) in TRILL
- contents:
  - "6.  MEP Addressing\n   In IEEE CFM [8021Q], OAM messages address the target MEP
    by utilizing\n   a unique MAC address.  In TRILL, a MEP is addressed by a combination\n
    \  of the egress RBridge nickname and the Inner.VLAN/FGL.\n   Additionally, MEPs
    are represented by a 2-octet MEP-ID that is\n   independent of the underlying
    technology.  In CFM [8021Q], the value\n   of MEP-ID is restricted to the range
    of 1 to 8191.  However, on a CFM\n   [8021Q] packet, MEP-IDs are encoded as a
    2-octet field.  In the TRILL\n   Base Mode operation presented in Appendix B,
    MEP-IDs are mapped\n   1-to-1 with the RBridge nicknames.  Hence, in TRILL, a
    MEP-ID MUST be\n   a number in the range from 1 to 65535.\n   At the MEP, OAM
    packets go through a hierarchy of OpCode\n   demultiplexers.  The OpCode demultiplexers
    channel the incoming OAM\n   packets to the appropriate message processor (e.g.,
    LBM).  Refer to\n   Figure 6 for a visual depiction of these different demultiplexers.\n
    \  The demultiplexing sequence is as follows:\n   1.  Identify the packets that
    need OAM processing at the local\n       RBridge as specified in Section 4.\n
    \      a.  Identify the MEP that is associated with the Inner.VLAN/FGL.\n   2.
    \ The MEP first validates the MD-Level and then:\n       a.  Redirects to the
    MD-Level demultiplexer.\n   3.  The MD-Level demultiplexer compares the MD-Level
    of the packet\n       against the MD-Level of the local MEPs of a given MD-Level
    on the\n       port.  (Note: there can be more than one MEP at the same MD-Level\n
    \      but they belong to different MAs.)\n       a.  If the packet MD-Level is
    equal to the configured MD-Level of\n           the MEP, then pass to the OpCode
    demultiplexer.\n       b.  If the packet MD-Level is less than the configured
    MD-Level\n           of the MEP, discard the packet.\n       c.  If the packet
    MD-Level is greater than the configured\n           MD-Level of the MEP, then
    pass on to the next-higher MD-Level\n           demultiplexer, if available.  Otherwise,
    if no such higher\n           MD-Level demultiplexer exists, then forward the
    packet as\n           normal data.\n   4.  The OpCode demultiplexer compares the
    OpCode in the packet with\n       supported OpCodes.\n       a.  If the OpCode
    is CCM, LBM, LBR, PTM, PTR, MTVM, or MTVR, then\n           pass on to the correct
    processor.\n       b.  If the OpCode is unknown, then discard.\n                            |\n
    \                           .CCM   LBM   PTM   MTVM . .\n                            |
    \     |    |      |\n                          +-+-+-+-+-+-+-+-+-+-+-+-+\n                          |
    \       OP Code DE-Mux |--- Unknown\n                          +-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                           ^       ^          ^\n                  MD==Li    |
    \      |          |\n                         +-+-+   +-+-+      +-+-+\n                         |
    L |-->|L2 |-.-   |Ln |---- >\n                         +-+-+   +-+-+      +-+-+
    \     |\n                          |  ^    |          |         |\n                  MD<LI
    Drop |    Drop       Drop      |\n                             |                         |\n
    \                 MD not --- |TRILL OAM need local     |\n                  Present
    \   | Processing              |\n                             |                         |\n
    \               TRILL Data   ----  TRILL Data         ----\n                   ------->|
    T  |----------------- >|  M |--- >\n                + TRILL OAM  ----  + pass
    through OAM ----\n            Figure 6: OAM Demultiplexers at MEP for Active SAP\n
    \  o  T: Denotes Tap.  Identifies OAM frames that need local processing.\n      These
    are the packets with the Alert flag set and OAM Ethertype\n      present after
    the Flow Entropy of the packet.\n   o  M: The post-processing merge that merges
    data and OAM messages\n      that are passed through.  Additionally, the merge
    component\n      ensures, as explained earlier, that OAM packets are not forwarded\n
    \     out as native frames.\n   o  L: Denotes MD-Level processing.  Packets whose
    MD-Level is less\n      than the MD-Level of the current processing step will
    be dropped.\n      Packets with equal MD-Levels are passed on to the OpCode\n
    \     demultiplexer.  Others are passed on to the next-level MD\n      processors
    or eventually to the merge point (M).\n   NOTE: LBM, LBR, MTVM, MTVR, PTM, and
    PTR are not subject to MA\n   demultiplexers.  These packets do not have an MA
    encoded in the\n   packet.  Adequate response can be generated to these packets,
    without\n   loss of functionality, by any of the MEPs present on that interface\n
    \  or an entity within the RBridge.\n"
  - contents:
    - "6.1.  Use of MIP in TRILL\n   Maintenance Intermediate Points (MIPs) are mainly
      used for fault\n   isolation.  Link Trace Messages in [8021Q] utilize a well-known\n
      \  multicast MAC address, and MIPs generate responses to Link Trace\n   Messages.
      \ Response to Link Trace Messages or lack thereof can be\n   used for fault
      isolation in TRILL.\n   As explained in Section 10, a Hop Count expiry approach
      will be\n   utilized for fault isolation and path tracing.  The approach is
      very\n   similar to the well-known IP trace-route approach.  Hence, explicit\n
      \  addressing of MIPs is not required for the purpose of fault\n   isolation.\n
      \  Any given RBridge can have multiple MIPs located within an interface.\n   As
      such, a mechanism is required to identify which MIP should respond\n   to an
      incoming OAM message.  Any MIP residing within the ingress\n   interface may
      reply to the incoming Path Trace Message without loss\n   of functionality or
      information.  As specified in Section 3.4, the\n   address of the responding
      RBridge can be identified by means of the\n   Sender ID TLV (1).  The Reply
      Ingress TLV (5) identifies the\n   interface id.  The combination of these allows
      the recipient of the\n   response to uniquely identify the responder.\n   A
      similar approach to that presented above for MEPs can be used for\n   MIP processing.
      \ It is important to note that \"M\", the merge block of\n   a MIP, does not
      prevent OAM packets leaking out as native frames.  On\n   edge interfaces, MEPs
      MUST be configured to prevent the leaking of\n   TRILL OAM packets out of the
      TRILL campus.\n                      PTM     PTR     MTVM     MTVR\n                       |
      \      |     |      |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                    |             OP Code De-Mux  |-> Unknown\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                       ^       ^          ^\n              MD==Li    |       |
      \         |\n                      +-+-+   +-+-+      +-+-+\n                      |
      L |- >|L2 |-.-   |Ln |------+\n                      +-+-+   +-+-+      +-+-+
      \     |\n                        ^                         |\n                        |
      \                        |\n             Drop       |                         |\n
      \            MD not --- |TRILL OAM                |\n             Present    |
      \                        |\n                        |                         v\n
      \        TRILL Data   ----  TRILL Data          -----\n            ------- >|
      T  |------------------ >|  M  |---->\n         + TRILL OAM  ----                      ----\n
      \         Figure 7: OAM Demultiplexers at MIP for Active SAP\n   o  T: Tap processing
      for MIP.  All packets with the TRILL Header\n      Alert flag set are captured.\n
      \  o  L: MD-Level Processing.  Packets with matching MD-Levels are\n      \"copied\"
      to the OpCode demultiplexer, and the original packet is\n      passed on to
      the next MD-Level processor.  Other packets are\n      simply passed on to the
      next MD-Level processor without copying to\n      the OpCode demultiplexer.\n
      \  o  M: The intermediate point processing merge that merges data and\n      OAM
      messages that are passed through.\n   Packets that carry Path Trace Message
      (PTM) or Multi-destination Tree\n   Verification Message (MTVM) OpCodes are
      passed on to the respective\n   processors.\n   Packets with unknown OpCodes
      are counted and discarded.\n"
    title: 6.1.  Use of MIP in TRILL
  title: 6.  MEP Addressing
- contents:
  - "7.  Continuity Check Message (CCM)\n   CCMs are used to monitor connectivity
    and configuration errors.\n   [8021Q] monitors connectivity by listening to periodic
    CCM messages\n   received from its remote MEP partners in the MA.  An [8021Q]
    MEP\n   identifies cross-connect errors by comparing the MAID in the received\n
    \  CCM message with the MEP's local MAID.  The MAID [8021Q] is a 48-byte\n   field
    that is technology independent.  Similarly, the MEP-ID is a\n   2-byte field that
    is independent of the technology.  Given this\n   generic definition of CCM fields,
    CCM as defined in [8021Q] can be\n   utilized in TRILL with no changes.  TRILL-specific
    information may be\n   carried in CCMs when encoded using TRILL-specific TLVs
    or sub-TLVs.\n   This is possible since CCMs may carry optional TLVs.\n   Unlike
    classical Ethernet environments, TRILL contains multipath\n   forwarding.  The
    path taken by a packet depends on the payload of the\n   packet.  The Maintenance
    Association (MA) identifies the interested\n   Maintenance End Points (MEPs) of
    a given monitored path.  For\n   unicast, there are only two MEPs per MA.  For
    multicast, there can be\n   two or more MEPs in the MA.  The entropy values of
    the monitored\n   flows are defined within the MA.  CCM transmit logic will utilize\n
    \  these Flow Entropy values when constructing the CCM packets.  Please\n   see
    Section 12 for the theory of operation of CCM.\n   The MIB in [8021Q] is augmented
    with the definition of Flow Entropy.\n   Please see [TRILLOAMMIB] for this and
    other TRILL-related OAM MIB\n   definitions.  Figure 8 depicts the correlation
    between MA, CCM, and\n   the Flow Entropy.\n             MA---\n            |\n
    \            --- MEP\n            |\n            . - Remote MEP List\n                   .\n
    \                  |\n                    --- MEP-A\n                   |\n                    ---
    MEP-B\n                   .\n            |\n            . - Flow Entropy List
    {Augments IEEE8021-CFM-MIB}\n                   |\n                    --- (Flow
    Entropy-1)\n                   |\n                    --- (Flow Entropy-2)\n                   |\n
    \                  . ---(Flow Entropy-n)\n           |\n           . - CCM\n                  |\n
    \                  --- (standard 8021ag entries)\n                  |\n                   ---
    (Hop Count) { Augments IEEE8021-CFM-MIB}\n                  |\n                   ---
    (Any other TRILL OAM-specific entries)\n                                                   {Augmented}\n
    \          |\n           .\n           |\n            - Other MIB entries\n               Figure
    8: Augmentation of CCM MIB in TRILL\n   In a multi-pathing environment, a flow,
    by definition, is\n   unidirectional.  A question may arise as to what Flow Entropy
    should\n   be used in the response.  CCMs are unidirectional and have no\n   explicit
    reply; as such, the issue of the response Flow Entropy does\n   not arise.  In
    the transmitted CCM, each MEP reports local status\n   using the Remote Defect
    Indication (RDI) flag.  Additionally, a MEP\n   may raise SNMP TRAPs [TRILLOAMMIB]
    as alarms when a connectivity\n   failure occurs.\n"
  title: 7.  Continuity Check Message (CCM)
- contents:
  - "8.  TRILL OAM Message Channel\n   The TRILL OAM Message Channel can be divided
    into two parts: TRILL\n   OAM message header and TRILL OAM TLVs.  Every OAM message
    MUST\n   contain a single TRILL OAM message header and a set of one or more\n
    \  specified OAM message TLVs.\n"
  - contents:
    - "8.1.  TRILL OAM Message Header\n   As discussed earlier, a common messaging
      framework between [8021Q],\n   TRILL, and other similar standards such as Y.1731
      is accomplished by\n   reusing the OAM message header defined in [8021Q].\n
      \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |MD-L
      | Version | OpCode        |  Flags        |FirstTLVOffset |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                                                               |\n    .
      \  OpCode-Specific Information                                 .\n    |                                                               |\n
      \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |
      \                                                              |\n    .         TLVs
      \                                                 .\n    |                                                               |\n
      \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                       Figure
      9: OAM Message Format\n   o  MD-L: Maintenance Domain Level (3 bits).  For TRILL,
      in general,\n      this field is set to a single value across the TRILL campus.
      \ When\n      using the TRILL Base Mode as specified in Appendix B, MD-L is
      set\n      to 3.  However, extension of TRILL (for example, to support\n      multilevel)
      may create different MD-Levels, and the MD-L field\n      must be appropriately
      set in those scenarios.  (Please refer to\n      [8021Q] for the definition
      of MD-Level).\n   o  Version: Indicates the version (5 bits) as specified in
      [8021Q].\n      This document does not require changing the Version defined
      in\n      [8021Q].\n   o  OpCode: Operation Code (8 bits).  Specifies the operation\n
      \     performed by the message.  See Section 8.2.\n   o  Flags: Includes operational
      flags (1 byte).  The definition of\n      flags is OpCode-specific and is covered
      in the applicable\n      sections.\n   o  FirstTLVOffset: Defines the location
      of the first TLV, in bytes,\n      starting from the end of the FirstTLVOffset
      field (1 byte).\n      (Refer to [8021Q] for the definition of the FirstTLVOffset.)\n
      \  o  OpCode-Specific Information: May contain Session Identification\n      Number,
      timestamp, etc.\n   The MD-L, Version, OpCode, Flags, and FirstTLVOffset fields\n
      \  collectively are referred to as the OAM message header.\n"
    title: 8.1.  TRILL OAM Message Header
  - contents:
    - "8.2.  TRILL-Specific OAM OpCodes\n   The following TRILL-specific CFM OpCodes
      are defined.  Each of the\n   OpCodes indicates a separate type of TRILL OAM
      message.  Details of\n   the messages are presented in Sections 10 and 11.\n
      \  TRILL OAM message OpCodes:\n      64: Path Trace Reply\n      65: Path Trace
      Message\n      66: Multi-destination Tree Verification Reply\n      67: Multi-destination
      Tree Verification Message\n   Loopback and CCM Messages reuse the OpCodes defined
      by [8021Q].\n"
    title: 8.2.  TRILL-Specific OAM OpCodes
  - contents:
    - "8.3.  Format of TRILL OAM TLV\n   The same CFM TLV format as defined in [8021Q]
      is used for TRILL OAM.\n   The following figure depicts the general format of
      a TRILL OAM TLV:\n        0                   1                   2\n        0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      |    Type       |        Length                 |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      |                                               |\n       .            Value
      (variable)                   .\n       |                                               |\n
      \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                   Figure
      10: TRILL OAM TLV\n   o  Type (1 octet): Specifies the type of the TLV (see
      Section 8.4 for\n      TLV types).\n   o  Length (2 octets): Specifies the length
      of the Value field in\n      octets.  Length of the Value field can be zero
      or more octets.\n   o  Value (variable): The length and the content of this
      field depend\n      on the type of TLV.  Please refer to applicable TLV definitions\n
      \     for details.\n   Semantics and usage of Type values allocated for TRILL
      OAM purpose\n   are defined by this document and other future related documents.\n"
    title: 8.3.  Format of TRILL OAM TLV
  - contents:
    - "8.4.  TRILL OAM TLVs\n   TRILL-related TLVs are defined in this section.  TLVS
      defined in\n   [8021Q] are reused, where applicable.\n"
    - contents:
      - "8.4.1.  Common TLVs between CFM and TRILL\n   The following TLVs are defined
        in [8021Q].  We reuse them where\n   applicable.  The format and semantics
        of the TLVs are as defined in\n   [8021Q].\n      Type   Name of TLV in [8021Q]\n
        \     ----   ----------------------\n        0    End TLV\n        1    Sender
        ID TLV\n        2    Port Status TLV\n        3    Data TLV\n        4    Interface
        Status TLV\n        5    Reply Ingress TLV\n        6    Reply Egress TLV\n
        \       7    LTM Egress Identifier TLV\n        8    LTR Egress Identifier
        TLV\n        9-30 Reserved\n        31   Organization Specific TLV\n"
      title: 8.4.1.  Common TLVs between CFM and TRILL
    - contents:
      - "8.4.2.  TRILL OAM-Specific TLVs\n   Listed below is a summary of TRILL OAM
        TLVs and their corresponding\n   codes.  Format and semantics of TRILL OAM
        TLVs are defined in\n   subsequent sections.\n       Type         TLV Name\n
        \      ----         ------------------------------------\n       64           TRILL
        OAM Application Identifier TLV\n       65           Out-of-Band Reply Address
        TLV\n       66           Diagnostic Label TLV\n       67           Original
        Data Payload TLV\n       68           RBridge Scope TLV\n       69           Previous
        RBridge Nickname TLV\n       70           Next-Hop RBridge List TLV\n       71
        \          Multicast Receiver Port Count TLV\n       72           Flow Identifier
        TLV\n       73           Reflector Entropy TLV\n       74           Authentication
        TLV\n   The TRILL OAM Application Identifier TLV (64) MUST be the first TLV.\n
        \  An End TLV (0) MUST be included as the last TLV.  All other TLVs can\n
        \  be included in any order.\n"
      title: 8.4.2.  TRILL OAM-Specific TLVs
    - contents:
      - "8.4.3.  TRILL OAM Application Identifier TLV\n   The TRILL OAM Application
        Identifier TLV carries information specific\n   to TRILL OAM applications.
        \ The TRILL OAM Application Identifier TLV\n   MUST always be present and
        MUST be the first TLV in TRILL OAM\n   messages.  Messages that do not include
        the TRILL OAM Application\n   Identifier TLV as the first TLV MUST be discarded
        by a TRILL MP.\n                         1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Version       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |               Reserved1                       | Fragment-ID   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |  Return Code  |Return Sub-code|     Reserved2         |F|C|O|I|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \           Figure 11: TRILL OAM Application Identifier TLV\n   o  Type (1
        octet): 64, TRILL OAM Application Identifier TLV\n   o  Length (2 octets):
        9\n   o  Version (1 octet): Currently set to zero.  Indicates the TRILL OAM\n
        \     version.  The TRILL OAM version can be different than the [8021Q]\n
        \     version.\n   o  Reserved1 (3 octets): Set to zero on transmission and
        ignored on\n      reception.\n   o  Fragment-ID (1 octet): Indicates the fragment
        number of the\n      current message.  This applies only to reply messages;
        in request\n      messages, it must be set to zero on transmission and ignored
        on\n      receipt.  The \"F\" flag defined below MUST be set with the final\n
        \     message, whether it is the last fragment of the fragmented message\n
        \     or the only message of the reply.  Section 13 provides more\n      details
        on OAM message fragmentation.\n   o  Return Code (1 octet): Set to zero on
        requests.  Set to an\n      appropriate value in response messages.\n   o
        \ Return Sub-code (1 octet): Set to zero on transmission of request\n      message.
        \ The Return Sub-code identifies categories within a\n      specific Return
        Code and MUST be interpreted within a Return Code.\n   o  Reserved2 (12 bits):
        Set to zero on transmission and ignored on\n      reception.\n   o  F (1 bit):
        Final flag.  When set, indicates this is the last\n      response.\n   o  C
        (1 bit): Cross-Connect Error flag (VLAN/FGL mapping error).  If\n      set,
        indicates that the label (VLAN/FGL) in the Flow Entropy is\n      different
        than the label included in the Diagnostic Label TLV.\n      This field is
        ignored in request messages and MUST only be\n      interpreted in response
        messages.\n   o  O (1 bit): If set, indicates OAM out-of-band response requested.\n
        \  o  I (1 bit): If set, indicates OAM in-band response requested.\n   NOTE:
        When both O and I bits are set to zero, this indicates that no\n   response
        is required (silent mode).  Users MAY specify both O and I,\n   one of them,
        or none.  When both O and I bits are set, the response\n   is sent both in-band
        and out-of-band.\n"
      title: 8.4.3.  TRILL OAM Application Identifier TLV
    - contents:
      - "8.4.4.  Out-of-Band Reply Address TLV\n   The Out-of-Band Reply Address TLV
        specifies the address to which an\n   out-of-band OAM reply message MUST be
        sent.  When the O bit in the\n   TRILL Version sub-TLV (Section 3.3) is not
        set, the Out-of-Band Reply\n   Address TLV is ignored.\n                         1
        \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Address Type  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   | Addr Length   |                                               |\n    +-+-+-+-+-+-+-+-+
        \                                              |\n    |                                                               |\n
        \   .       Reply Address                                           .\n    |
        \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                 Figure 12: Out-of-Band Reply Address TLV\n   o  Type (1
        octet): 65, Out-of-Band Reply Address TLV\n   o  Length (2 octets): Variable.
        \ Minimum length is 2 + the length (in\n      octets) of the shortest address.
        \ Currently, the minimum value of\n      this field is 4, but this could change
        in the future if a new\n      address shorter than the TRILL nickname is defined.\n
        \  o  Address Type (1 octet):\n         0 - IPv4\n         1 - IPv6\n         2
        - TRILL nickname\n      All other values reserved.\n   o  Addr Length (1 octet):
        Depends on the Address Type.  Currently,\n      defined values are:\n         4
        \ - IPv4\n         16 - IPv6\n         2  - TRILL nickname\n      Other lengths
        may be acceptable for future Address Types.\n   o  Reply Address (variable):
        Address where the reply needs to be\n      sent.  Length depends on the address
        specification.\n"
      title: 8.4.4.  Out-of-Band Reply Address TLV
    - contents:
      - "8.4.5.  Diagnostic Label TLV\n   The Diagnostic Label TLV specifies the data
        label (VLAN or FGL) in\n   which the OAM messages are generated.  Receiving
        RBridge MUST compare\n   the data label of the Flow Entropy to the data label
        specified in the\n   Diagnostic Label TLV.  The \"C\" flag (Cross Connect
        Error) in the\n   response (TRILL OAM Application Identifier TLV; Section
        8.4.3) MUST\n   be set when the two VLANs do not match.\n                         1
        \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | L-Type        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   | Reserved      |                       Label                   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                     Figure 13: Diagnostic Label TLV\n   o  Type (1 octet):
        66, Diagnostic Label TLV\n   o  Length (2 octets): 5\n   o  L-Type (1 octet):
        Label type\n      0 - Indicates a right-justified 802.1Q 12-bit VLAN padded
        on the\n          left with bits that must be sent as zero and ignored on\n
        \         receipt\n      1 - Indicates a TRILL 24-bit fine-grained label\n
        \  o  Reserved (1 octet): Set to zero on transmission and ignored on\n      reception.\n
        \  o  Label (24 bits): Either 12-bit VLAN or 24 bit fine-grained label.\n
        \  RBridges do not perform label error checking when the Diagnostic\n   Label
        TLV is not included in the OAM message.  In certain\n   deployments, intermediate
        devices may perform label translation.  In\n   such scenarios, the originator
        should not include the Diagnostic\n   Label TLV in OAM messages.  Inclusion
        of Diagnostic Label TLV will\n   generate unwanted label error notifications.\n"
      title: 8.4.5.  Diagnostic Label TLV
    - contents:
      - "8.4.6.  Original Data Payload TLV\n                         1                   2
        \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        |               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \              +\n    |                                                               |\n
        \   .                Original Payload                               .\n    |
        \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                 Figure 14: Original Data Payload TLV\n   o  Type (1 octet):
        67, Original Data Payload TLV\n   o  Length (2 octets): variable\n   o  Original
        Payload: The original TRILL Header and Flow Entropy.\n      Used in constructing
        replies to the Loopback Message (see\n      Section 9) and the Path Trace
        Message (see Section 10).\n"
      title: 8.4.6.  Original Data Payload TLV
    - contents:
      - "8.4.7.  RBridge Scope TLV\n   The RBridge Scope TLV identifies nicknames
        of RBridges from which a\n   response is required.  The RBridge Scope TLV
        is only applicable to\n   Multi-destination Tree Verification Messages.  This
        TLV SHOULD NOT be\n   included in other messages.  Receiving RBridges MUST
        ignore this TLV\n   on messages other than Multi-destination Tree Verification
        Messages.\n   Each TLV can contain up to 255 nicknames of in-scope RBridges.
        \ A\n   Multi-destination Tree Verification Message may contain multiple\n
        \  RBridge scope TLVs, in the event that more than 255 in-scope RBridges\n
        \  need to be specified.\n   Absence of the RBridge Scope TLV indicates that
        a response is needed\n   from all the RBridges.  Please see Section 11 for
        details.\n                         1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | nOfnicknames  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |  Nickname-1                   |   Nickname-2                  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   .                                                               .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                               |  Nickname-n                   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                    Figure 15: RBridge Scope TLV\n   o  Type (1 octet): 68,
        RBridge Scope TLV\n   o  Length (2 octets): Variable.  Minimum value is 1.\n
        \  o  nOfnicknames (1 octet): Indicates the number of nicknames included\n
        \     in this TLV.  Zero (0) indicates no nicknames are included in the\n
        \     TLV.  When this field is set to zero (0), the Length field MUST be\n
        \     set to 1.\n   o  Nickname (2 octets): 16-bit RBridge nickname\n"
      title: 8.4.7.  RBridge Scope TLV
    - contents:
      - "8.4.8.  Previous RBridge Nickname TLV\n   The Previous RBridge Nickname TLV
        identifies the nickname or\n   nicknames of the previous RBridge.  [RFC6325]
        allows a given RBridge\n   to hold multiple nicknames.\n   The Previous RBridge
        Nickname TLV is an optional TLV.  Multiple\n   instances of this TLV MAY be
        included when an upstream RBridge is\n   represented by more than 255 nicknames
        (highly unlikely).\n                         1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Reserved      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |  Reserved (continued)         |   Nickname                    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                Figure 16: Previous RBridge Nickname TLV\n   o  Type (1 octet):
        69, Previous RBridge Nickname TLV\n   o  Length (2 octets): 5\n   o  Reserved
        (3 octet): Set to zero on transmission and ignored on\n      reception.\n
        \  o  Nickname (2 octets): RBridge nickname\n"
      title: 8.4.8.  Previous RBridge Nickname TLV
    - contents:
      - "8.4.9.  Next-Hop RBridge List TLV\n   The Next-Hop RBridge List TLV identifies
        the nickname or nicknames of\n   the downstream next-hop RBridges.  [RFC6325]
        allows a given RBridge\n   to have multiple equal-cost paths to a specified
        destination.  Each\n   next-hop RBridge is represented by one of its nicknames.\n
        \  The Next-Hop RBridge List TLV is an optional TLV.  Multiple instances\n
        \  of this TLV MAY be included when there are more than 255 equal-cost\n   paths
        to the destination.\n                         1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | nOfnicknames  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |  Nickname-1                   |   Nickname-2                  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   .                                                               .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                               |  Nickname-n                   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                 Figure 17: Next-Hop RBridge List TLV\n   o  Type (1 octet):
        70, Next-Hop RBridge List TLV\n   o  Length (2 octets): Variable. Minimum
        value is 1.\n   o  nOfnicknames (1 octet): Indicates the number of nicknames
        included\n      in this TLV.  Zero (0) indicates no nicknames are included
        in the\n      TLV.  When this field is set to zero (0), the Length field MUST
        be\n      set to 1.\n   o  Nickname (2 octets): 16-bit RBridge nickname\n"
      title: 8.4.9.  Next-Hop RBridge List TLV
    - contents:
      - "8.4.10.  Multicast Receiver Port Count TLV\n   The Multicast Receiver Port
        Count TLV identifies the number of ports\n   interested in receiving the specified
        multicast stream within the\n   responding RBridge on the label (VLAN or FGL)
        specified by the\n   Diagnostic Label TLV.\n   The Multicast Receiver Port
        Count TLV is an optional TLV.\n                         1                   2
        \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Reserved      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |              Number of Receivers                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \             Figure 18: Multicast Receiver Port Count TLV\n   o  Type (1
        octet): 71, Multicast Receiver Port Count TLV\n   o  Length (2 octets): 5\n
        \  o  Reserved (1 octet): Set to zero on transmission and ignored on\n      reception.\n
        \  o  Number of Receivers (4 octets): Indicates the number of multicast\n
        \     receivers available on the responding RBridge on the label\n      specified
        by the diagnostic label.\n"
      title: 8.4.10.  Multicast Receiver Port Count TLV
    - contents:
      - "8.4.11.   Flow Identifier TLV\n   The Flow Identifier TLV uniquely identifies
        a specific flow.  The\n   flow-identifier value is unique per MEP and needs
        to be interpreted\n   as such.\n                         1                   2
        \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Reserved      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |  MEP-ID                       |     flow-identifier           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                    Figure 19: Flow Identifier TLV\n   o  Type (1 octet):
        72, Flow Identifier TLV\n   o  Length (2 octets): 5\n   o  Reserved (1 octet):
        Set to 0 on transmission and ignored on\n      reception.\n   o  MEP-ID (2
        octets): MEP-ID of the originator [8021Q].  In TRILL,\n      MEP-ID can take
        a value from 1 to 65535.\n   o  flow-identifier (2 octets): Uniquely identifies
        the flow per MEP.\n      Different MEPs may allocate the same flow-identifier
        value.  The\n      {MEP-ID, flow-identifier} pair is globally unique.\n   Inclusion
        of the MEP-ID in the Flow Identifier TLV allows the\n   inclusion of a MEP-ID
        for messages that do not contain a MEP-ID in\n   their OAM header.  Applications
        may use MEP-ID information for\n   different types of troubleshooting.\n"
      title: 8.4.11.   Flow Identifier TLV
    - contents:
      - "8.4.12.  Reflector Entropy TLV\n   The Reflector Entropy TLV is an optional
        TLV.  This TLV, when\n   present, tells the responder to utilize the Reflector
        Entropy\n   specified within the TLV as the flow-entropy of the response message.\n
        \                        1                   2                   3\n     0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Reserved      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                                                               |\n    .
        \              Reflector Entropy                               .\n    |                                                               |\n
        \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                     Figure
        20: Reflector Entropy TLV\n   o  Type (1 octet): 73, Reflector Entropy TLV\n
        \  o  Length (2 octets): 97\n   o  Reserved (1 octet): Set to zero on transmission
        and ignored by the\n      recipient.\n   o  Reflector Entropy (96 octets):
        Flow Entropy to be used by the\n      responder.  May be padded with zeros
        if the desired flow-entropy\n      information is less than 96 octets.\n"
      title: 8.4.12.  Reflector Entropy TLV
    - contents:
      - "8.4.13.  Authentication TLV\n   The Authentication TLV is an optional TLV
        that can appear in any OAM\n   message or reply in TRILL.\n                         1
        \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        |  Auth Type    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                                                               |\n    .
        \                Authentication Value                          .\n    |                                                               |\n
        \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                    Figure
        21: Authentication TLV\n   o  Type (1 octet): 74, Authentication TLV\n   o
        \ Length (2 octets): Variable\n   o  The Auth Type and following Authentication
        Value are the same as\n      the Auth Type and following value for the [IS-IS]
        Authentication\n      TLV.  It is RECOMMENDED that Auth Type 3 be used.  Auth
        Types 0,\n      1, 2, and 54 MUST NOT be used.  With Auth Type 3, the\n      Authentication
        TLV is as follows:\n                         1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Type       | Length                        | Auth Type = 3 |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |    Key ID                     |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              .\n    .                      Authentication
        Data (variable)           .\n    |                                                               |\n
        \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            Figure
        22: Authentication TLV with Auth Type 3\n   With Auth Type 3, the process
        is generally as specified in [RFC5310]\n   using the same Key ID space as
        TRILL [IS-IS].  The area covered by\n   the Authentication TLV is from the
        beginning of the TRILL Header to\n   the end of the TRILL OAM Message Channel;
        the Link Header and Trailer\n   are not included.  The TRILL Header Alert,
        Reserved bit, and Hop\n   Count are treated as zero for the purposes of computing
        and verifying\n   the Authentication Data.\n   Key distribution is out of
        the scope of this document as the keying\n   distributed for IS-IS is used.\n
        \  An RBridge supporting OAM authentication can be configured to either\n
        \  (1) ignore received OAM Authentication TLVs and not send them, (2)\n   ignore
        received OAM Authentication TLVs but include them in all OAM\n   packets sent,
        or (3) to include Authentication TLVs in all OAM\n   messages sent and enforce
        authentication of OAM messages received.\n   When an RBridge is enforcing
        authentication, it discards any OAM\n   message subject to OAM processing
        that does not contain an\n   Authentication TLV or an Authentication TLV does
        not verify.\n"
      title: 8.4.13.  Authentication TLV
    title: 8.4.  TRILL OAM TLVs
  title: 8.  TRILL OAM Message Channel
- contents:
  - '9.  Loopback Message

    '
  - contents:
    - "9.1.  Loopback Message Format\n                         1                   2
      \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |MD-L | Version | OpCode        |  Flags        |FirstTLVOffset |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                   Loopback Transaction Identifier             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                                                               |\n    .
      \        TLVs                                                  .\n    |                                                               |\n
      \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                  Figure
      23: Loopback Message Format\n   The figure above depicts the format of the Loopback
      Request and\n   Response messages as defined in [8021Q].  The OpCode for the
      Loopback\n   Message is set to 3, and the OpCode for the reply message is set
      to 2\n   [8021Q].  The Loopback Transaction Identifier (commonly called the\n
      \  Session Identification Number or Session ID in this document) is a\n   32-bit
      integer that allows the requesting RBridge to uniquely\n   identify the corresponding
      session.  Responding RBridges, without\n   modification, MUST echo the received
      \"Loopback Transaction\n   Identifier\" number.\n"
    title: 9.1.  Loopback Message Format
  - contents:
    - '9.2.  Theory of Operation

      '
    - contents:
      - "9.2.1.  Actions by Originator RBridge\n   The originator RBridge takes the
        following actions:\n   o  Identifies the destination RBridge nickname based
        on user\n      specification or based on the specified destination MAC or
        IP\n      address.\n   o  Constructs the Flow Entropy based on user-specified
        parameters or\n      implementation-specific default parameters.\n   o  Constructs
        the TRILL OAM header: sets the OpCode to Loopback\n      Message type (3)
        [8021Q].  Assigns applicable Loopback Transaction\n      Identifier number
        for the request.\n   o  The TRILL OAM Application Identifier TLV MUST be included
        with the\n      flags set to applicable values.\n   o  Includes following
        OAM TLVs, where applicable:\n      -  Out-of-Band Reply Address TLV\n      -
        \ Diagnostic Label TLV\n      -  Sender ID TLV\n   o  Specifies the Hop Count
        of the TRILL Data frame per user\n      specification or utilize an applicable
        Hop Count value.\n   o  Dispatches the OAM frame for transmission.\n   RBridges
        may continue to retransmit the request at periodic intervals\n   until a response
        is received or the retransmission count expires.  At\n   each transmission,
        the Session Identification Number MUST be\n   incremented.\n"
      title: 9.2.1.  Actions by Originator RBridge
    - contents:
      - "9.2.2.  Intermediate RBridge\n   Intermediate RBridges forward the frame
        as a normal data frame; no\n   special handling is required.\n"
      title: 9.2.2.  Intermediate RBridge
    - contents:
      - "9.2.3.  Destination RBridge\n   If the Loopback Message is addressed to the
        local RBridge and\n   satisfies the OAM identification criteria specified
        in Section 3.1,\n   then the RBridge data plane forwards the message to the
        CPU for\n   further processing.\n   The TRILL OAM application layer further
        validates the received OAM\n   frame by checking for the presence of OAM Ethertype
        at the end of the\n   Flow Entropy.  Frames that do not contain OAM Ethertype
        at the end of\n   the Flow Entropy MUST be discarded.\n   Construction of
        the TRILL OAM response:\n   o  The TRILL OAM application encodes the received
        TRILL Header and\n      Flow Entropy in the Original Data Payload TLV and
        includes it in\n      the OAM message.\n   o  Set the Return Code to (1) \"Reply\"
        and Return Sub-code to zero (0)\n      \"Valid Response\".  Update the TRILL
        OAM OpCode to 2 (Loopback\n      Message Reply).\n   o  Optionally, if the
        VLAN/FGL identifier value of the received Flow\n      Entropy differs from
        the value specified in the Diagnostic Label\n      TLV, set the \"C\" flag
        (Cross Connect Error) in the TRILL OAM\n      Application Identifier TLV.\n
        \  o  Include the Sender ID TLV (1).\n   o  If in-band response was requested,
        dispatch the frame to the TRILL\n      data plane with request-originator
        RBridge nickname as the egress\n      RBridge nickname.\n   o  If out-of-band
        response was requested, dispatch the frame to the\n      IP forwarding process.\n"
      title: 9.2.3.  Destination RBridge
    title: 9.2.  Theory of Operation
  title: 9.  Loopback Message
- contents:
  - "10.  Path Trace Message\n   The primary use of the Path Trace Message is for
    fault isolation.  It\n   may also be used for plotting the path taken from a given
    RBridge to\n   another RBridge.\n   [8021Q] accomplishes the objectives of the
    TRILL Path Trace Message\n   using Link Trace Messages.  Link Trace Messages utilize
    a well-known\n   multicast MAC address.  This works for [8021Q] because both the\n
    \  unicast and multicast paths are congruent.  However, in TRILL,\n   multicast
    and unicast are not congruent.  Hence, TRILL OAM uses a new\n   message format:
    the Path Trace Message.\n   The Path Trace Message has the same format as the
    Loopback Message.\n   The OpCode for Path Trace Reply is 64, and the OpCode for
    the Path\n   Trace Message is 65.\n   Operation of the Path Trace Message is identical
    to the Loopback\n   Message except that it is first transmitted with a TRILL Header
    Hop\n   Count field value of 1.  The sending RBridge expects an \"Intermediate\n
    \  RBridge\" Return Sub-code from the next hop or a \"Valid response\"\n   Return
    Sub-code response from the destination RBridge.  If an\n   \"Intermediate RBridge\"
    Return Sub-code is received in the response,\n   the originator RBridge records
    the information received from the\n   intermediate node that generated the message
    and resends the message\n   by incrementing the previous Hop Count value by 1.
    \ This process is\n   continued until, a response is received from the destination
    RBridge,\n   a Path Trace process timeout occurs, or the Hop Count reaches a\n
    \  configured maximum value.\n"
  - contents:
    - '10.1.  Theory of Operation

      '
    - contents:
      - "10.1.1.  Actions by Originator RBridge\n   The originator RBridge takes the
        following actions:\n   o  Identifies the destination RBridge based on user
        specification or\n      based on location of the specified MAC address.\n
        \  o  Constructs the Flow Entropy based on user-specified parameters or\n
        \     implementation-specific default parameters.\n   o  Constructs the TRILL
        OAM header: set the OpCode to Path Trace\n      Message type (65).  Assign
        an applicable Session Identification\n      number for the request.  Return
        Code and Return Sub-code MUST be\n      set to zero.\n   o  The TRILL OAM
        Application Identifier TLV MUST be included with the\n      flags set to applicable
        values.\n   o  Includes the following OAM TLVs, where applicable:\n      -
        \ Out-of-Band Reply Address TLV\n      -  Diagnostic Label TLV\n      -  Sender
        ID TLV\n   o  Specifies the Hop Count of the TRILL Data frame as 1 for the
        first\n      request.\n   o  Dispatches the OAM frame to the TRILL data plane
        for transmission.\n   An RBridge may continue to retransmit the request at
        periodic\n   intervals until a response is received or the retransmission
        count\n   expires.  At each new retransmission, the Session Identification\n
        \  number MUST be incremented.  Additionally, for responses received\n   from
        intermediate RBridges, the RBridge nickname and interface\n   information
        MUST be recorded.\n"
      title: 10.1.1.  Actions by Originator RBridge
    - contents:
      - "10.1.2.  Intermediate RBridge\n   Path Trace Messages transit through Intermediate
        RBridges\n   transparently, unless the Hop Count has expired.\n   The TRILL
        OAM application layer further validates the received OAM\n   frame by examining
        the presence of the TRILL Alert flag and OAM\n   Ethertype at the end of the
        Flow Entropy and by examining the\n   MD-Level.  Frames that do not contain
        OAM Ethertype at the end of the\n   Flow Entropy MUST be discarded.\n   Construction
        of the TRILL OAM response:\n   o  The TRILL OAM application encodes the received
        TRILL Header and\n      Flow Entropy in the Original Data Payload TLV and
        includes it in\n      the OAM message.\n   o  Set the Return Code to (1) \"Reply\"
        and Return Sub-code to two (2)\n      \"Intermediate RBridge\".  Update the
        TRILL OAM OpCode to 64 (Path\n      Trace Reply).\n   o  If the VLAN/FGL identifier
        value of the received Flow Entropy\n      differs from the value specified
        in the diagnostic label, set the\n      \"C\" flag (Cross Connect Error) in
        the TRILL OAM Application\n      Identifier TLV.\n   o  Include the following
        TLVs:\n      -  Previous RBridge Nickname TLV (69)\n      -  Reply Ingress
        TLV (5)\n      -  Reply Egress TLV (6)\n      -  Interface Status TLV (4)\n
        \     -  Next-Hop RBridge List TLV (70) (Repeat for each ECMP)\n      -  Sender
        ID TLV (1)\n   o  If a cross-connect error is detected, set the \"C\" flag
        (Cross-\n      Connect Error) in the reply's TRILL OAM Application Identifier\n
        \     TLV.\n   o  If in-band response was requested, dispatch the frame to
        the TRILL\n      data plane with request-originator RBridge nickname as the
        egress\n      RBridge nickname.\n   o  If out-of-band response was requested,
        dispatch the frame to the\n      standard IP forwarding process.\n"
      title: 10.1.2.  Intermediate RBridge
    - contents:
      - "10.1.3.  Destination RBridge\n   Processing is identical to that in Section
        10.1.2 with the exception\n   that the TRILL OAM OpCode is set to Path Trace
        Reply (64).\n"
      title: 10.1.3.  Destination RBridge
    title: 10.1.  Theory of Operation
  title: 10.  Path Trace Message
- contents:
  - "11.  Multi-Destination Tree Verification Message (MTVM)\n   Multi-destination
    Tree Verification Messages allow verifying TRILL\n   distribution tree integrity
    and pruning.  TRILL VLAN/FGL and\n   multicast pruning are described in [RFC6325],
    [RFC7180], and\n   [RFC7172].  Multi-destination Tree Verification and Multicast
    Group\n   Verification Messages are designed to detect pruning defects.\n   Additionally,
    these tools can be used for plotting a given multicast\n   tree within the TRILL
    campus.\n   Multi-destination Tree Verification OAM frames are copied to the CPU\n
    \  of every intermediate RBridge that is part of the distribution tree\n   being
    verified.  The originator of the Multi-destination Tree\n   Verification Message
    specifies the scope of RBridges from which a\n   response is required.  Only the
    RBridges listed in the scope field\n   respond to the request.  Other RBridges
    silently discard the request.\n   Inclusion of the scope field is required to
    prevent receiving an\n   excessive number of responses.  The typical scenario
    of distribution\n   tree verification or group verification involves verifying
    multicast\n   connectivity to a selected set of end nodes as opposed to the entire\n
    \  network.  Availability of the scope facilitates narrowing down the\n   focus
    to only the RBridges of interest.\n   Implementations MAY choose to rate-limit
    CPU-bound multicast traffic.\n   As a result of rate-limiting or due to other
    congestion conditions,\n   MTVM messages may be discarded from time to time by
    the intermediate\n   RBridges, and the requester may be required to retransmit
    the\n   request.  Implementations SHOULD narrow the embedded scope of\n   retransmission
    requests only to RBridges that have failed to respond.\n"
  - contents:
    - "11.1.  MTVM Format\n   The format of MTVM is identical to the Loopback Message
      format\n   defined in Section 9 with the exception that the OpCode used is 67.\n"
    title: 11.1.  MTVM Format
  - contents:
    - '11.2.  Theory of Operation

      '
    - contents:
      - "11.2.1.  Actions by Originator RBridge\n   The user is required, at a minimum,
        to specify either the\n   distribution trees that need to be verified, the
        Multicast MAC\n   address and VLAN/FGL, or the VLAN/FGL and Multicast Destination
        IP\n   address.  Alternatively, for more specific multicast flow\n   verification,
        the user MAY specify more information, e.g., source MAC\n   address, VLAN/FGL,
        and Destination and Source IP addresses.\n   Implementations, at a minimum,
        must allow the user to specify a\n   choice of distribution trees, Destination
        Multicast MAC address, and\n   VLAN/FGL that needs to be verified.  Although
        it is not mandatory, it\n   is highly desired to provide an option to specify
        the scope.  It\n   should be noted that the source MAC address and some other
        parameters\n   may not be specified if the backwards-compatibility method
        in\n   Appendix A is used to identify the OAM frames.\n   Default parameters
        MUST be used for unspecified parameters.  Flow\n   Entropy is constructed
        based on user-specified parameters and/or\n   default parameters.\n   Based
        on user specified parameters, the originating RBridge does the\n   following:\n
        \  o  Identifies the nickname that represents the multicast tree.\n   o  Obtains
        the applicable Hop Count value for the selected multicast\n      tree.\n   o
        \ Constructs TRILL OAM message header and includes the Session\n      Identification
        number.  The Session Identification Number\n      facilitates the originator
        mapping the response to the correct\n      request.\n   o  Includes the TRILL
        OAM Application Identifier TLV, which MUST be\n      included.\n   o  Includes
        the OpCode Multicast Tree Verification Message (67).\n   o  Includes RBridge
        Scope TLV (68).\n   o  Optionally, includes the following TLVs, where applicable:\n
        \     -  Out-of-Band IP Address TLV (65)\n      -  Diagnostic Label TLV (66)\n
        \     -  Sender ID TLV (1)\n   o  Specifies the Hop Count of the TRILL Data
        frame per user\n      specification or alternatively utilizes the applicable
        Hop Count\n      value if the TRILL Hop Count is not being specified by the
        user.\n   o  Dispatches the OAM frame to the TRILL data plane to be ingressed\n
        \     for transmission.\n   The RBridge may continue to retransmit the request
        at a periodic\n   interval until either a response is received or the retransmission\n
        \  count expires.  At each new retransmission, the Session\n   Identification
        Number MUST be incremented.  At each retransmission,\n   the RBridge may further
        reduce the scope to the RBridges that it has\n   not received a response from.\n"
      title: 11.2.1.  Actions by Originator RBridge
    - contents:
      - "11.2.2.  Receiving RBridge\n   Receiving RBridges identify multicast verification
        frames per the\n   procedure explained in Section 3.2.\n   The RBridge validates
        the frame and analyzes the scope RBridge list.\n   If the RBridge Scope TLV
        is present and the local RBridge nickname is\n   not specified in the scope
        list, it will silently discard the frame.\n   If the local RBridge is specified
        in the scope list OR the RBridge\n   Scope TLV is absent, the receiving RBridge
        proceeds with further\n   processing as defined in Section 11.2.3.\n"
      title: 11.2.2.  Receiving RBridge
    - contents:
      - "11.2.3.  In-Scope RBridges\n   Construction of the TRILL OAM response:\n
        \  o  The TRILL OAM application encodes the received TRILL Header and\n      Flow
        Entropy in the Original Data Payload TLV and includes them in\n      the OAM
        message.\n   o  Set the Return Code to zero (0) and Return Sub-code to zero
        (0).\n      Update the TRILL OAM OpCode to 66 (Multi-destination Tree\n      Verification
        Reply).\n   o  Include following TLVs:\n      -  Previous RBridge Nickname
        TLV (69)\n      -  Reply Ingress TLV (5)\n      -  Interface Status TLV (4)\n
        \     -  Next-Hop RBridge List TLV (70)\n      -  Sender ID TLV (1)\n      -
        \ Multicast Receiver Port Count TLV (71)\n   o  If a VLAN/FGL cross-connect
        error is detected, set the \"C\" flag\n      (Cross-Connect Error) in the
        TRILL OAM Application Identifier TLV.\n   o  If in-band response was requested,
        dispatch the frame to the TRILL\n      data plane with request-originator
        RBridge nickname as the egress\n      RBridge nickname.\n   o  If out-of-band
        response was requested, dispatch the frame to the\n      standard IP forwarding
        process.\n"
      title: 11.2.3.  In-Scope RBridges
    title: 11.2.  Theory of Operation
  title: 11.  Multi-Destination Tree Verification Message (MTVM)
- contents:
  - "12.  Application of Continuity Check Message (CCM) in TRILL\n   Section 7 provides
    an overview of CCM Messages defined in [8021Q] and\n   how they can be used within
    TRILL OAM.  This section presents the\n   application and theory of operations
    of CCM within the TRILL OAM\n   framework.  Readers are referred to [8021Q] for
    CCM message format\n   and applicable TLV definitions and usages.  Only the TRILL-specific\n
    \  aspects are explained below.\n   In TRILL, between any two given MEPs, there
    can be multiple potential\n   paths.  Whereas in [8021Q], there is always a single
    path between any\n   two MEPs at any given time.  [RFC6905] requires solutions
    to have the\n   ability to monitor continuity over one or more paths.\n   CCM
    Messages are uni-directional, such that there is no explicit\n   response to a
    received CCM message.  Connectivity status is indicated\n   by setting the applicable
    flags (e.g., RDI) of the CCM messages\n   transmitted by a MEP.\n   It is important
    that the solution presented in this document\n   accomplishes the requirements
    specified in [RFC6905] within the\n   framework of [8021Q] in a straightforward
    manner and with minimum\n   changes.  Section 8 defines multiple flows within
    the CCM object,\n   each corresponding to a flow that a given MEP wishes to monitor.\n
    \  Hence, CCM, in multipath environments like TRILL, monitors per-flow\n   connectivity
    and cross-connect errors.\n   Receiving MEPs do not cross-check whether a received
    CCM belongs to a\n   specific flow from the originating RBridge.  Any attempt
    to track\n   status of individual flows may explode the amount of state\n   information
    that any given RBridge has to maintain.\n   The obvious question arises: how does
    the originating RBridge know\n   which flow or flows are at fault?\n   This is
    accomplished with a combination of the RDI flag in the CCM\n   header, Flow Identifier
    TLV, and SNMP Notifications (Traps).\n   Section 12.1 discusses the procedure.\n"
  - contents:
    - "12.1.  CCM Error Notification\n   Each MEP transmits four CCM messages per
      each flow.  ([8021Q] detects\n   CCM fault when three consecutive CCM messages
      are lost).  Each CCM\n   message has a unique sequence number (Session ID) and
      unique flow-\n   identifier.  The flow-identifier is included in the OAM message
      via\n   the Flow Identifier TLV.\n   When a MEP notices a CCM timeout from a
      remote MEP (MEP-A), it sets\n   the RDI flag on the next CCM message it generates.
      \ Additionally, it\n   logs and sends an SNMP notification that contains the
      remote MEP\n   Identification, flow-identifier, and the sequence number of the
      last\n   CCM message it received, and, if available, the flow-identifier and\n
      \  the sequence number of the first CCM message it received after the\n   failure.
      \ Each MEP maintains a unique flow-identifier per each flow;\n   hence, the
      operator can easily identify flows that correspond to the\n   specific flow-identifier.\n
      \  The following example illustrates the above.\n   Assume there are two MEPs:
      MEP-A and MEP-B.\n   Assume there are three flows between MEP-A and MEP-B.\n
      \  Let's assume MEP-A allocates sequence numbers as follows:\n      Flow-1 Sequence={1,2,3,4,13,14,15,16,..
      } flow-identifier=(1)\n      Flow-2 Sequence={5,6,7,8,17,18,19,20,.. } flow-identifier=(2)\n
      \     Flow-3 Sequence={9,10,12,11,21,22,23,24,.. } flow-identifier=(3)\n   Let's
      assume Flow-2 is at fault.\n   MEP-B receives CCM from MEP-A with sequence numbers
      1, 2, 3, and 4\n   but did not receive 5, 6, 7, and 8.  CCM timeout is set to
      three CCM\n   intervals in [8021Q].  Hence, MEP-B detects the error at the 8th
      CCM\n   message.  At this time, the sequence number of the last good CCM\n   message
      MEP-B has received from MEP-A is 4, and the flow-identifier\n   of the last
      good CCM Message is (1).  Hence, MEP-B will generate a\n   CCM error SNMP notification
      with MEP-A, last good flow-identifier\n   (1), and sequence number 4.\n   When
      MEP-A switches to Flow-3 after transmitting Flow-2, MEP-B will\n   start receiving
      CCM messages.  In the foregoing example, it will be a\n   CCM message with sequence
      numbers 9, 10, 11, 12, and 21 and so on.\n   When in receipt of a new CCM message
      from a specific MEP, after a CCM\n   timeout, the TRILL OAM will generate an
      SNMP Notification of CCM\n   resume with remote MEP-ID, the first valid flow-identifier,
      and the\n   sequence number after the CCM timeout.  In the foregoing example,
      it\n   is MEP-A, flow-identifier (3), and sequence number 9.\n   The remote
      MEP list under the CCM MIB Object is augmented to contain\n   \"Last Sequence
      Number\", flow-identifier, and \"CCM Timeout\" variables.\n   \"Last Sequence
      Number\" and flow-identifier are updated every time a\n   CCM is received from
      a remote MEP.  The CCM Timeout variable is set\n   when the CCM timeout occurs
      and is cleared when a CCM is received.\n"
    title: 12.1.  CCM Error Notification
  - contents:
    - '12.2.  Theory of Operation

      '
    - contents:
      - "12.2.1.  Actions by Originator RBridge\n   The originator RBridge takes the
        following actions:\n   o  Derives the Flow Entropy field based on flow-entropy
        information\n      specified in the CCM Management object.\n   o  Constructs
        the TRILL CCM OAM header as specified in [8021Q].\n   o  The TRILL OAM Application
        Identifier TLV MUST be included as the\n      first TLV with the flags set
        to applicable values.\n   o  Includes other TLVs specified in [8021Q].\n   o
        \ Includes the following optional TLV, where applicable:\n      -  Sender
        ID TLV (1)\n   o  Specifies the Hop Count of the TRILL Data frame per user\n
        \     specification or utilize an applicable Hop Count value.\n   o  Dispatches
        the OAM frame to the TRILL data plane for transmission.\n   An RBridge transmits
        a total of four requests, each at CCM\n   retransmission interval.  At each
        transmission, the Session\n   Identification number MUST be incremented by
        one.\n   At the 5th retransmission interval, the Flow Entropy of the CCM\n
        \  packet is updated to the next flow-entropy information specified in\n   the
        CCM Management object.  If the current Flow Entropy is the last\n   Flow Entropy
        specified, move to the first Flow Entropy specified and\n   continue the process.\n"
      title: 12.2.1.  Actions by Originator RBridge
    - contents:
      - "12.2.2.  Intermediate RBridge\n   Intermediate RBridges forward the frame
        as a normal data frame; no\n   special handling is required.\n"
      title: 12.2.2.  Intermediate RBridge
    - contents:
      - "12.2.3. Destination RBridge\n   If the CCM Message is addressed to the local
        RBridge or multicast and\n   satisfies the OAM identification methods specified
        in Section 3.2,\n   then the RBridge data plane forwards the message to the
        CPU for\n   further processing.\n   The TRILL OAM application layer further
        validates the received OAM\n   frame by examining the presence of OAM Ethertype
        at the end of the\n   Flow Entropy.  Frames that do not contain OAM Ethertype
        at the end of\n   the Flow Entropy MUST be discarded.\n   The TRILL OAM application
        layer then validates the MD-Level and pass\n   the packet to the OpCode demultiplexer.
        \ The OpCode demultiplexer\n   delivers CCM packets to the CCM process.\n
        \  The CCM process performs the processing specified in [8021Q].\n   Additionally,
        the CCM process updates the CCM Management object with\n   the sequence number
        of the received CCM packet.  Note: The last\n   received CCM sequence number
        and CCM timeout are tracked per each\n   remote MEP.\n   If the CCM timeout
        is true for the sending remote MEP, then clear the\n   CCM timeout in the
        CCM Management object and generate the SNMP\n   notification as specified
        above.\n"
      title: 12.2.3. Destination RBridge
    title: 12.2.  Theory of Operation
  title: 12.  Application of Continuity Check Message (CCM) in TRILL
- contents:
  - "13.  Fragmented Reply\n   TRILL OAM allows fragmented reply messages.  In case
    of fragmented\n   replies, all parts of the reply MUST follow the procedure defined
    in\n   this section.\n   The same Session Identification Number MUST be included
    in all\n   related fragments of the same message.\n   The TRILL OAM Application
    Identifier TLV MUST be included, with the\n   Fragment-ID field monotonically
    increasing with each fragment\n   transmitted with the appropriate Final flag
    field.  The Final flag\n   MUST only be equal to one on the final fragment of
    the reply.\n   On the receiver, the process MUST order the fragments based on
    the\n   Fragment-ID.  Any fragments received after the final fragment MUST be\n
    \  discarded.  Messages with incomplete fragments (i.e., messages with\n   one
    or missing fragments after the receipt of the fragment with the\n   final flag
    set) MUST be discarded as well.\n   If the number of fragments exceeds the maximum
    supported fragments\n   (255), then the Return Code of the reply message MUST
    be set to 1\n   (Reply message), and the Return Sub-code MUST be set to 1 (Fragment\n
    \  limit exceeded).\n"
  title: 13.  Fragmented Reply
- contents:
  - "14.  Security Considerations\n   Forged OAM packets could cause false error or
    failure indications,\n   mask actual errors or failures, or be used for denial
    of service.\n   Source addresses for messages can be forged and the out-of-band
    reply\n   facility (see Section 8.4.4) provides for explicitly supplying the\n
    \  address for replies.  For protection against forged OAM packets, the\n   Authentication
    TLV (see Section 8.4.13) can be used in an OAM message\n   in TRILL.  This TLV
    is virtually identical to the IS-IS\n   Authentication TLV specified in [IS-IS]
    and depends on IS-IS keying\n   material and the current state of IS-IS keying
    as discussed in\n   [KARPISIS] and [RFC5310].  In particular, there is currently
    no\n   standardized IS-IS automated key management.\n   Of course, authentication
    is ineffective unless verified and\n   ineffective against senders who have the
    keying material needed to\n   produce OAM messages that will pass authentication
    checks.\n   Implementations MUST implement rate-limiting functionality to protect\n
    \  against exploitation of OAM messages as a means of denial-of-service\n   attacks.
    \ Aggressive rate-limiting may trigger false positive errors\n   against CCM and
    LBM-based session monitoring.\n   Even with authentication, replay of authenticated
    messages may be\n   possible.  There are four types of messages: Continuity Check
    (CCM),\n   Loopback, Path Trace, and Multi-destination Tree Verification (MTVM).\n
    \  In the case of CCM messages, sequence numbers are required (see\n   Section
    12.1) that can protect against replay.  In the case of\n   Loopback Messages (see
    Section 9.1), a Loopback Transaction\n   Identifier is included that, as required
    by [8021Q], is incremented\n   with each transmission and can detect replays.
    \ PTMs (see Section 10)\n   and MTVMs (see Section 11.1) are specified to have
    the same format as\n   Loopback Messages (although with different OpCodes), so
    they also\n   have an identifier incremented with each transmission that can detect\n
    \  replays.  Thus, all TRILL OAM messages have a field that can be used\n   for
    replay protection.\n   For general TRILL-related security considerations, please
    refer to\n   [RFC6325].\n   [8021Q] requires that the MEP filters or passes through
    OAM messages\n   based on the MD-Level.  The MD-Level is embedded deep in the
    OAM\n   message.  Hence, conventional methods of frame filtering may not be\n
    \  able to filter frames based on the MD-Level.  As a result, OAM\n   messages
    that must be dropped due to MD-Level mismatch may leak into\n   a TRILL domain
    with a different MD-Level.\n   This leaking may not cause any functionality loss.
    \ The receiving\n   MEP/MIP is required to validate the MD-level prior to acting
    on the\n   message.  Any frames received with an incorrect MD-Level need to be\n
    \  dropped.\n   Generally, a single operator manages each TRILL campus; hence,
    there\n   is no risk of security exposure.  However, in the event of multi-\n
    \  operator deployments, operators should be aware of possible exposure\n   of
    device-specific information, and appropriate measures must be\n   taken.\n   It
    is also important to note that the MPLS OAM framework [RFC4379]\n   does not include
    the concept of domains and OAM filtering based on\n   operators.  It is our opinion
    that the lack of OAM frame filtering\n   based on domains does not introduce significant
    functional deficiency\n   or security risk.\n   It is possible to mandate requiring
    different credentials to use\n   different OAM functions or capabilities within
    a specific OAM\n   function.  Implementations may consider grouping users to different\n
    \  security clearance levels and restricting functions and capabilities\n   to
    different clearance levels.  However, exact implementation details\n   of such
    a framework are outside the scope of this document.\n"
  title: 14.  Security Considerations
- contents:
  - "15.  IANA Considerations\n   IANA has made the assignments described below.\n"
  - contents:
    - "15.1.  OAM Capability Flags\n   Two TRILL-VER sub-TLV Capability Flags (see
      Section 3.3) have been\n   assigned as follows:\n     Bit     Description               Reference\n
      \    ---     -----------               ---------\n     2       OAM capable               RFC
      7455\n     3       Backwards-compatible OAM  RFC 7455\n"
    title: 15.1.  OAM Capability Flags
  - contents:
    - "15.2.  CFM Code Points\n   Four OpCodes have been assigned from the \"CFM OAM
      IETF OpCodes\" sub-\n   registry as follows:\n     Value     Assignment                                   Reference\n
      \    -----     ----------                                   ---------\n     64
      \       Path Trace Reply                             RFC 7455\n     65        Path
      Trace Message                           RFC 7455\n     66        Multi-destination
      Tree Verification Reply    RFC 7455\n     67        Multi-destination Tree Verification
      Message  RFC 7455\n   Eleven TLV Types have been assigned from the \"CFM OAM
      IETF TLV Types\"\n   sub-registry as follows:\n     Value     Assignment                            Reference\n
      \    -----     ----------                            ---------\n     64        TRILL
      OAM Application Identifier TLV  RFC 7455\n     65        Out-of-Band Reply Address
      TLV         RFC 7455\n     66        Diagnostic Label TLV                  RFC
      7455\n     67        Original Data Payload TLV             RFC 7455\n     68
      \       RBridge Scope TLV                     RFC 7455\n     69        Previous
      RBridge Nickname TLV         RFC 7455\n     70        Next-Hop RBridge List
      TLV             RFC 7455\n     71        Multicast Receiver Port Count TLV     RFC
      7455\n     72        Flow Identifier TLV                   RFC 7455\n     73
      \       Reflector Entropy TLV                 RFC 7455\n     74        Authentication
      TLV                    RFC 7455\n"
    title: 15.2.  CFM Code Points
  - contents:
    - "15.3.  MAC Addresses\n   IANA has assigned a unicast and a multicast MAC address
      under the\n   IANA Organizationally Unique Identifier (OUI) for identification
      of\n   OAM packets as discussed for the backwards-compatibility method\n   (Appendix
      A.2) and based on the request template in Appendix C.  The\n   assigned addresses
      are 00-00-5E-90-01-00 (unicast) and\n   01-00-5E-90-01-00 (multicast).\n"
    title: 15.3.  MAC Addresses
  - contents:
    - "15.4.  Return Codes and Sub-codes\n   IANA has created the \"TRILL OAM Return
      Codes\" registry within the\n   \"Transparent Interconnection of Lots of Links
      (TRILL) Parameters\"\n   registry and a separate sub-code sub-registry for each
      Return Code as\n   shown below:\n   Registry: TRILL OAM Return Codes\n   Registration
      Procedure: Standards Action\n      Return Code    Assignment        References\n
      \     -----------    ----------        ----------\n         0           Request
      message   RFC 7455\n         1           Reply message     RFC 7455\n         2-255
      \      Unassigned        RFC 7455\n   Sub-Registry: Sub-codes for TRILL OAM
      Return Code 0\n   Registration Procedure: Standards Action\n      Sub-code      Assignment
      \       References\n      --------      ----------        ----------\n         0
      \         Valid request     RFC 7455\n         1-255      Unassigned        RFC
      7455\n   Sub-Registry: Sub-codes for TRILL OAM Return Code 1\n   Registration
      Procedure: Standards Action\n      Sub-code      Assignment              References\n
      \     --------      ----------              ----------\n         0          Valid
      response          RFC 7455\n         1          Fragment limit exceeded RFC
      7455\n         2          Intermediate RBridge    RFC 7455\n         3-255      Unassigned
      \             RFC 7455\n"
    title: 15.4.  Return Codes and Sub-codes
  - contents:
    - "15.5.  TRILL Nickname Address Family\n   IANA has allocated 16396 as the Address
      Family Number for TRILL\n   nickname.\n"
    title: 15.5.  TRILL Nickname Address Family
  title: 15.  IANA Considerations
- contents:
  - '16.  References

    '
  - contents:
    - "16.1.  Normative References\n   [8021Q]    IEEE, \"IEEE Standard for Local
      and metropolitan area\n              networks -- Bridges and Bridged Networks\",
      IEEE Std\n              802.1Q, December 2014.\n   [IS-IS]    ISO/IEC, \"Information
      technology -- Telecommunications and\n              information exchange between
      systems -- Intermediate\n              System to Intermediate System intra-domain
      routeing\n              information exchange protocol for use in conjunction
      with\n              the protocol for providing the connectionless-mode network\n
      \             service (ISO 8473)\", ISO/IEC 10589:2002, Second Edition,\n              2002.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May 2008,
      <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC5310]  Bhatia, M., Manral,
      V., Li, T., Atkinson, R., White, R.,\n              and M. Fanto, \"IS-IS Generic
      Cryptographic\n              Authentication\", RFC 5310, February 2009,\n              <http://www.rfc-editor.org/info/rfc5310>.\n
      \  [RFC6325]  Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani,
      \"Routing Bridges (RBridges): Base Protocol\n              Specification\",
      RFC 6325, July 2011,\n              <http://www.rfc-editor.org/info/rfc6325>.\n
      \  [RFC7172]  Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R., and\n              D.
      Dutt, \"Transparent Interconnection of Lots of Links\n              (TRILL):
      Fine-Grained Labeling\", RFC 7172, May 2014,\n              <http://www.rfc-editor.org/info/rfc7172>.\n"
    title: 16.1.  Normative References
  - contents:
    - "16.2.  Informative References\n   [KARPISIS] Chunduri, U., Tian, A., and W.
      Lu, \"KARP IS-IS security\n              analysis\", Work in Progress, draft-ietf-karp-isis-\n
      \             analysis-04, March 2015.\n   [RFC4379]  Eronen, P., Ed., and H.
      Tschofenig, Ed., \"Pre-Shared Key\n              Ciphersuites for Transport
      Layer Security (TLS)\", RFC\n              4279, December 2005,\n              <http://www.rfc-editor.org/info/rfc4279>.\n
      \  [RFC6291]  Andersson, L., van Helvoort, H., Bonica, R., Romascanu,\n              D.,
      and S. Mansfield, \"Guidelines for the Use of the \"OAM\"\n              Acronym
      in the IETF\", BCP 161, RFC 6291, June 2011,\n              <http://www.rfc-editor.org/info/rfc6291>.\n
      \  [RFC6361]  Carlson, J. and D. Eastlake 3rd, \"PPP Transparent\n              Interconnection
      of Lots of Links (TRILL) Protocol Control\n              Protocol\", RFC 6361,
      August 2011,\n              <http://www.rfc-editor.org/info/rfc6361>.\n   [RFC6905]
      \ Senevirathne, T., Bond, D., Aldrin, S., Li, Y., and R.\n              Watve,
      \"Requirements for Operations, Administration, and\n              Maintenance
      (OAM) in Transparent Interconnection of Lots\n              of Links (TRILL)\",
      RFC 6905, March 2013,\n              <http://www.rfc-editor.org/info/rfc6905>.\n
      \  [RFC7174]  Salam, S., Senevirathne, T., Aldrin, S., and D. Eastlake\n              3rd,
      \"Transparent Interconnection of Lots of Links (TRILL)\n              Operations,
      Administration, and Maintenance (OAM)\n              Framework\", RFC 7174,
      May 2014,\n              <http://www.rfc-editor.org/info/rfc7174>.\n   [RFC7176]
      \ Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt,\n              D.,
      and A. Banerjee, \"Transparent Interconnection of Lots\n              of Links
      (TRILL) Use of IS-IS\", RFC 7176, May 2014,\n              <http://www.rfc-editor.org/info/rfc7176>.\n
      \  [RFC7178]  Eastlake 3rd, D., Manral, V., Li, Y., Aldrin, S., and D.\n              Ward,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): RBridge
      Channel Support\", RFC 7178, May 2014,\n              <http://www.rfc-editor.org/info/rfc7178>.\n
      \  [RFC7179]  Eastlake 3rd, D., Ghanwani, A., Manral, V., Li, Y., and C.\n              Bestler,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): Header
      Extension\", RFC 7179, May 2014,\n              <http://www.rfc-editor.org/info/rfc7179>.\n
      \  [RFC7180]  Eastlake 3rd, D., Zhang, M., Ghanwani, A., Manral, V., and\n              A.
      Banerjee, \"Transparent Interconnection of Lots of Links\n              (TRILL):
      Clarifications, Corrections, and Updates\", RFC\n              7180, May 2014,
      <http://www.rfc-editor.org/info/rfc7180>.\n   [RFC7456]  Mizrahi, T., Senevirathne,
      T., Salam, S., Kumar, D., and\n              D. Eastlake 3rd, \"Loss and Delay
      Measurement in\n              Transparent Interconnection of Lots of Links (TRILL)\",
      RFC\n              7456, March 2015,\n              <http://www.rfc-editor.org/info/rfc7456>.\n
      \  [TRILLOAMMIB]\n              Kumar, D., Salam, S., and T. Senevirathne, \"TRILL
      OAM\n              MIB\", Work in Progress, draft-deepak-trill-oam-mib-01,\n
      \             October 2013.\n   [Y1731]    ITU-T, \"OAM functions and mechanisms
      for Ethernet based\n              networks\", ITU-T Recommendation G.8013/Y.1731,
      November\n              2013.\n"
    title: 16.2.  Informative References
  title: 16.  References
- contents:
  - "Appendix A.  Backwards Compatibility\n   The methodology presented in this document
    is in-line with the\n   framework defined in [8021Q] for providing fault management
    coverage.\n   However, in practice, some TRILL platforms may not have the\n   capabilities
    to support some of the required techniques.  In this\n   appendix, we present
    a method that allows RBridges, which do not have\n   the required hardware capabilities,
    to participate in the TRILL OAM\n   solution.\n   There are two broad areas to
    be considered: 1) the Maintenance Point\n   (MEP/MIP) Model and 2) data-plane
    encoding and frame identification.\n"
  - contents:
    - "A.1.  Maintenance Point (MEP/MIP) Model\n   For backwards compatibility, MEPs
      and MIPs are located in the CPU.\n   This will be referred to as the \"central
      brain\" model as opposed to\n   \"port brain\" model.\n   In the \"central brain\"
      model, an RBridge using either Access Control\n   Lists (ACLs) or some other
      method forwards qualifying OAM messages to\n   the CPU.  The CPU then performs
      the required processing and\n   multiplexing to the correct MP (Maintenance
      Point).\n   Additionally, RBridges MUST have the capability to prevent the\n
      \  leaking of OAM packets, as specified in [RFC6905].\n"
    title: A.1.  Maintenance Point (MEP/MIP) Model
  - contents:
    - "A.2.  Data-Plane Encoding and Frame Identification\n   The backwards-compatibility
      method presented in this section defines\n   methods to identify OAM frames
      when implementations do not have\n   capabilities to utilize the TRILL OAM Alert
      flag presented earlier in\n   this document to identify OAM frames in the hardware.\n
      \  It is assumed that ECMP path selection of non-IP flows utilizes MAC\n   DA,
      MAC SA, and VLAN; IP flows utilize IP DA, IP SA, TCP/UDP port\n   numbers, and
      other Layer 3 and Layer 4 information.  The well-known\n   fields to identify
      OAM flows are chosen such that they mimic the ECMP\n   selection of the actual
      data along the path.  However, it is\n   important to note that there may be
      implementations that would\n   utilize these well-known fields for ECMP selections.
      \ Hence,\n   implementations that support OAM SHOULD move to utilizing the TRILL\n
      \  Alert flag, as soon as possible, and methods presented here SHOULD be\n   used
      only as an interim solution.\n   Identification methods are divided in to four
      broader groups:\n   1.  Identification of Unicast non-IP OAM Flows,\n   2.  Identification
      of Multicast non-IP OAM Flows,\n   3.  Identification of Unicast IP OAM Flows,
      and\n   4.  Identification of Multicast IP OAM Flows.\n   As presented in Figure
      24, based on the flow type (as defined above),\n   implementations are required
      to use a well-known value in either the\n   Inner.MacSA field or OAM Ethertype
      field to identify OAM flows.\n   A receiving RBridge identifies OAM flows based
      on the presence of the\n   well-known values in the specified fields.  Additionally,
      for unicast\n   flows, the egress RBridge nickname of the packet MUST match
      that of\n   the local RBridge, or for multicast flows, the TRILL Header multicast\n
      \  (\"M\") flag MUST be set.\n   Unicast OAM flows that qualify for local processing
      MUST be\n   redirected to the OAM process and MUST NOT be forwarded (to prevent\n
      \  leaking of the packet out of the TRILL campus).\n   A copy of multicast OAM
      flows that qualify for local processing MUST\n   be sent to the OAM process,
      and the packets MUST be forwarded along\n   the normal path.  Additionally,
      methods MUST be in place to prevent\n   multicast packets from leaking out of
      the TRILL campus.\n   Figure 24 summarizes the identification of different OAM
      frames from\n   data frames.\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |Flow Entropy   |Inner.MacSA  |OAM Ethertype  |Egress   |\n      |               |
      \            |               |nickname |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |Unicast no IP  | N/A         |Match          |Match    |\n      |               |
      \            |               |         |\n      |Multicast no IP| N/A         |Match
      \         |N/A      |\n      |               |             |               |
      \        |\n      |Unicast IP     | Match       |N/A            |Match    |\n
      \     |               |             |               |         |\n      |Multicast
      IP   | Match       |N/A            |N/A      |\n      |               |             |
      \              |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      Figure 24: Identification of TRILL OAM Frames\n   The unicast and multicast
      Inner.MacSAs used for the unicast and\n   multicast IP cases, respectively,
      are 00-00-5E-90-01-00 and\n   01-00-5E-90-01-00.  These have been assigned per
      the request in\n   Appendix C.\n   It is important to note that all RBridges
      MUST generate OAM flows\n   with the \"A\" flag set and CFM Ethertype \"0x8902\"
      at the Flow Entropy\n   off-set.  However, well-known values MUST be utilized
      as part of the\n   flow-entropy when generating OAM messages destined for older
      RBridges\n   that are compliant to the backwards-compatibility method defined
      in\n   this appendix.\n"
    title: A.2.  Data-Plane Encoding and Frame Identification
  title: Appendix A.  Backwards Compatibility
- contents:
  - "Appendix B.  Base Mode for TRILL OAM\n   CFM, as defined in [8021Q], requires
    configuration of several\n   parameters before the protocol can be used.  These
    parameters include\n   MAID, Maintenance Domain Level (MD-Level), and MEP-IDs.
    \ The Base\n   Mode for TRILL OAM defined here facilitates ease of use and provides\n
    \  out-of-the-box plug-and-play capabilities, supporting the operational\n   and
    manageability considerations described in Section 6 of [RFC7174].\n   All RBridges
    that support TRILL OAM MUST support the Base Mode\n   operation.\n   All RBridges
    MUST create a default MA with MAID as specified herein.\n   MAID [8021Q] has a
    flexible format and includes two parts:\n   Maintenance Domain Name and Short
    MA Name.  In the Base Mode\n   operation, the value of the Maintenance Domain
    Name must be the\n   character string \"TrillBaseMode\" (excluding the quotes).
    \ In the Base\n   Mode operation, the Short MA Name format is set to a 2-octet
    integer\n   format (value 3 in Short MA Format field) and Short MA Name set to\n
    \  65532 (0xFFFC).\n   The default MA belongs to MD-Level 3.\n   In the Base Mode
    of operation, each RBridge creates a single UP MEP\n   associated with a virtual
    OAM port with no physical layer (NULL PHY).\n   The MEP-ID associated with this
    MEP is the 2-octet RBridge nickname.\n   By default, all RBridges operating in
    Base Mode for TRILL OAM are\n   able to initiate LBM, PTM, and other OAM tools
    with no configuration.\n   Implementations MAY provide default flow-entropy to
    be included in\n   OAM messages.  Content of the default flow-entropy is outside
    the\n   scope of this document.\n   Figure 25 depicts encoding of MAID within
    CCM messages.\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |Field Name     |Size
    \    |\n      |               |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Maintenance    | 1       |\n      |Domain Format  |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Maintenance    | 2       |\n      |Domain Length  |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Maintenance    | variable|\n      |Domain Name    |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Short MA       | 1       |\n      |Name   Format  |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Short MA       | 2       |\n      |Name  Length   |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Short MA       | variable|\n      |Name           |         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Padding        | Variable|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Figure
    25: MAID Structure as Defined in [8021Q]\n   Maintenance Domain Name Format: set
    to value 4\n   Maintenance Domain Name Length: set to value 13\n   Maintenance
    Domain Name: set to TrillBaseMode\n   Short MA Name Format: set to value 3\n   Short
    MA Name Length: set to value 2\n   Short MA Name: set to FFFC\n   Padding: set
    of zero up to 48 octets of total length of the MAID\n   Please refer to [8021Q]
    for details.\n"
  title: Appendix B.  Base Mode for TRILL OAM
- contents:
  - "Appendix C.  MAC Addresses Request\n   Applicant Name: IETF TRILL Working Group\n
    \  Applicant Email:  tsenevir@cisco.com\n   Applicant Telephone: +1-408-853-2291\n
    \  Use Name: TRILL OAM\n   Document: RFC 7455\n   Specify whether this is an application
    for EUI-48 or EUI-64\n   identifiers: EUI-48\n   Size of Block requested: 1\n
    \  Specify multicast, unicast, or both: Both\n"
  title: Appendix C.  MAC Addresses Request
- contents:
  - "Acknowledgments\n   Work on this document was largely inspired by the directions
    provided\n   by Stewart Bryant in finding a common OAM solution between SDOs.\n
    \  Acknowledgments are due for many who volunteered to review this\n   document,
    notably, Jari Arkko, Adrian Farrel, Pete Resnick, Stephen\n   Farrell, Dan Romascanu,
    Gayle Nobel, and Tal Mizrahi.\n   Special appreciation is due to Dinesh Dutt for
    his support and\n   encouragement, especially during the initial discussion phase
    of\n   TRILL OAM.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Tissa Senevirathne\n   Cisco Systems\n   375 East Tasman
    Drive\n   San Jose, CA 95134\n   United States\n   Phone: +1 408-853-2291\n   EMail:
    tsenevir@cisco.com\n   Norman Finn\n   Cisco Systems\n   510 McCarthy Blvd\n   Milpitas,
    CA 95035\n   United States\n   EMail: nfinn@cisco.com\n   Samer Salam\n   Cisco
    Systems\n   595 Burrard St., Suite 2123\n   Vancouver, BC V7X 1J1\n   Canada\n
    \  EMail: ssalam@cisco.com\n   Deepak Kumar\n   Cisco Systems\n   510 McCarthy
    Blvd\n   Milpitas, CA 95035\n   United States\n   Phone: +1 408-853-9760\n   EMail:
    dekumar@cisco.com\n   Donald Eastlake 3rd\n   Huawei Technologies\n   155 Beaver
    Street\n   Milford, MA 01757\n   United States\n   Phone: +1-508-333-2270\n   EMail:
    d3e3e3@gmail.com\n   Sam Aldrin\n   Huawei Technologies\n   2330 Central Express
    Way\n   Santa Clara, CA 95951\n   United States\n   EMail: aldrin.ietf@gmail.com\n
    \  Yizhou Li\n   Huawei Technologies\n   101 Software Avenue\n   Nanjing 210012\n
    \  China\n   Phone: +86-25-56625375\n   EMail: liyizhou@huawei.com\n"
  title: Authors' Addresses
