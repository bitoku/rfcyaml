- title: __initial_text__
  contents:
  - '                       TELNET TIMING MARK OPTION

    '
- title: This RFC specifies a standard for the ARPA community.  Hosts on the ARPA
  contents:
  - 'This RFC specifies a standard for the ARPA community.  Hosts on the ARPA

    '
- title: Internet are expected to adopt and implement this standard.
  contents:
  - 'Internet are expected to adopt and implement this standard.

    '
- title: 1.  Command Name and Code
  contents:
  - "1.  Command Name and Code\n   TIMING-MARK          6\n"
- title: 2.  Command Meanings
  contents:
  - "2.  Command Meanings\n   IAC DO TIMING-MARK\n      The sender of this command\
    \ REQUESTS that the receiver of this\n      command return a WILL TIMING-MARK\
    \ in the data stream at the\n      \"appropriate place\" as defined in section\
    \ 4 below.\n   IAC WILL TIMING-MARK\n      The sender of this command ASSURES\
    \ the receiver of this command\n      that it is inserted in the data stream at\
    \ the \"appropriate place\"\n      to insure synchronization with a DO TIMING-MARK\
    \ transmitted by the\n      receiver of this command.\n   IAC WON'T TIMING-MARK\n\
    \      The sender of this command REFUSES to insure that this command is\n   \
    \   inserted in the data stream at the \"appropriate place\" to insure\n     \
    \ synchronization.\n   IAC DON'T TIMING-MARK\n      The sender of this command\
    \ notifies the receiver of this command\n      that a WILL TIMING-MARK (previously\
    \ transmitted by the receiver of\n      this command) has been IGNORED.\n"
- title: 3.  Default
  contents:
  - "3.  Default\n   WON'T TIMING-MARK, DON'T TIMING-MARK\n      i.e., No explicit\
    \ attempt is made to synchronize the activities at\n      the two ends of the\
    \ TELNET connection.\n"
- title: 4.  Motivation for the Option
  contents:
  - '4.  Motivation for the Option

    '
- title: RFC 860                                                         May 1983
  contents:
  - "RFC 860                                                         May 1983\n  \
    \ It is sometimes useful for a user or process at one end of a TELNET\n   connection\
    \ to be sure that previously transmitted data has been\n   completely processed,\
    \ printed, discarded, or otherwise disposed of.\n   This option provides a mechanism\
    \ for doing this.  In addition, even\n   if the option request (DO TIMING-MARK)\
    \ is refused (by WON'T\n   TIMING-MARK) the requester is at least assured that\
    \ the refuser has\n   received (if not processed) all previous data.\n   As an\
    \ example of a particular application, imagine a TELNET\n   connection between\
    \ a physically full duplex terminal and a \"full\n   duplex\" server system which\
    \ permits the user to \"type ahead\" while\n   the server is processing previous\
    \ user input.  Suppose that both\n   sides have agreed to Suppress Go Ahead and\
    \ that the server has agreed\n   to provide echoes.  The server now discovers\
    \ a command which it\n   cannot parse, perhaps because of a user typing error.\
    \  It would like\n   to throw away all of the user's \"type-ahead\" (since failure\
    \ of the\n   parsing of one command is likely to lead to incorrect results if\n\
    \   subsequent commands are executed), send the user an error message,\n   and\
    \ resume interpretation of commands which the user typed after\n   seeing the\
    \ error message.  If the user were local, the system would\n   be able to discard\
    \ the buffered input; but input may be buffered in\n   the user's host or elsewhere.\
    \  Therefore, the server might send a DO\n   TIMING-MARK and hope to receive a\
    \ WILL TIMING-MARK from the user at\n   the \"appropriate place\" in the data\
    \ stream.\n   The \"appropriate place\", therefore (in absence of other information)\n\
    \   is clearly just before the first character which the user typed after\n  \
    \ seeing the error message.  That is, it should appear that the timing\n   mark\
    \ was \"printed\" on the user's terminal and that, in response, the\n   user typed\
    \ an answering timing mark.\n   Next, suppose that the user in the example above\
    \ realized that he had\n   misspelled a command, realized that the server would\
    \ send a DO\n   TIMING-MARK, and wanted to start \"typing ahead\" again without\
    \ waiting\n   for this to occur.  He might then instruct his own system to send\
    \ a\n   WILL TIMING-MARK to the server and then begin \"typing ahead\" again.\n\
    \   (Implementers should remember that the user's own system must\n   remember\
    \ that it sent the WILL TIMING-MARK so as to discard the\n   DO/DON'T TIMING-MARK\
    \ when it eventually arrives.)  Thus, in this case\n   the \"appropriate place\"\
    \ for the insertion of the WILL TIMING-MARK is\n   the place defined by the user.\n\
    \   It should be noted, in both of the examples above, that it is the\n   responsibility\
    \ of the system which transmits the DO TIMING-MARK to\n   discard any unwanted\
    \ characters; the WILL TIMING-MARK only provides\n   help in deciding which characters\
    \ are \"unwanted\".\n"
- title: 5.  Description of the Option
  contents:
  - '5.  Description of the Option

    '
- title: RFC 860                                                         May 1983
  contents:
  - "RFC 860                                                         May 1983\n  \
    \ Suppose that Process A of Figure 1 wishes to synchronize with B. The\n   DO\
    \ TIMING-MARK is sent from A to B.  B can refuse by replying WON'T\n   TIMING-MARK,\
    \ or agree by permitting the timing mark to flow through\n   his \"outgoing\"\
    \ buffer, BUF2.  Then, instead of delivering it to the\n   terminal, B will enter\
    \ the mark into his \"incoming\" buffer BUF1, to\n   flow through toward A.  When\
    \ the mark has propagated through B's\n   incoming buffer, B returns the WILL\
    \ TIMING-MARK over the TELNET\n   connection to A.\n      PROCESS A    TELNETconnection\
    \    PROCESS B           Terminal\n      +-----------+                +---------------+\
    \ Timing+-------+\n      |           |WILL TIMING MARK|     BUF 1     |  Mark\
    \ |       |\n      |           |<---------------|--|-|-|-|-|-|--|<------|    \
    \   |\n      |           |                |  |-|-|-|-|-|  |   ^   |       |\n\
    \      |           |                |     BUF 2     |   ^   |       |\n      |\
    \           |--------------->|--|-|-|-|-|-|--|------>|       |\n      |      \
    \     | DO TIMING MARK |  |-|-|-|-|-|  |       |       |\n      +-----------+\
    \                +---------------+       +-------+\n                         \
    \            (NVT process).ME;\n                         Figure 1\n   When A receives\
    \ the WILL TIMING-MARK, he knows that all the\n   information he sent to B before\
    \ sending the timing mark been\n   delivered, and all the information sent from\
    \ B to A before turnaround\n   of the timing mark has been delivered.\n   Three\
    \ typical applications are:\n      A. Measure round-trip delay between a process\
    \ and a terminal or\n         another process.\n      B. Resynchronizing an interaction\
    \ as described in section 4 above.\n         A is a process interpreting commands\
    \ forwarded from a terminal\n         by B. When A sees an illegal command it:\n\
    \         i.   Sends <carriage return>, <line feed>, <question mark>.\n      \
    \   ii.  Sends DO TIMING-MARK.\n         iii. Sends an error message.\n      \
    \   iv.  Starts reading input and throwing it away until it\n              receives\
    \ a WILL TIMING-MARK.\n         v.   Resumes interpretation of input.\n"
- title: RFC 860                                                         May 1983
  contents:
  - "RFC 860                                                         May 1983\n  \
    \       This achieves the effect of flushing all \"type ahead\" after the\n  \
    \       erroneous command, up to the point when the user actually saw\n      \
    \   the question mark.\n      C.  The dual of B above.  The terminal user wants\
    \ to throw away\n         unwanted output from A.\n         i.   B sends DO TIMING-MARK,\
    \ followed by some new command.\n         ii.  B starts reading output from A\
    \ and throwing it away until\n              it receives WILL TIMING-MARK.\n  \
    \       iii. B resumes forwarding A's output to the terminal.\n         This achieves\
    \ the effect of flushing all output from A, up to\n         the point where A\
    \ saw the timing mark, but not output generated\n         in response to the following\
    \ command.\n"
