Abstract The Network Configuration Protocol (NETCONF) provides mechanisms to manipulate configuration datastores.
However, client applications often need to be aware of common events, such as a change in NETCONF server capabilities, that may impact management applications.
Standard mechanisms are needed to support the monitoring of the base system events within the NETCONF server.
This document defines a YANG module that allows a NETCONF client to receive notifications for some common system events.
The NETCONF protocol [RFC6241] provides mechanisms to manipulate configuration datastores.
However, client applications often need to be aware of common events, such as a change in NETCONF server capabilities, that may impact management applications.
Standard mechanisms are needed to support the monitoring of the base system events within the NETCONF server.
This document defines a YANG module [RFC6020] that allows a NETCONF client to receive notifications for some common system events.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The following terms are defined in [RFC6241]:  client  datastore  protocol operation
The following terms are defined in [RFC5277]:  event  stream  subscription
The following term is defined in [RFC6020]:
YANG Module for NETCONF Base Notifications 2.1.
The YANG module defined within this document specifies a small number of event notification messages for use within the 'NETCONF' stream, and accessible to clients via the subscription mechanism described in [RFC5277].
This module imports data types from the 'ietf netconf' module defined in [RFC6241] and 'ietf inet types' module defined in [RFC6021].
These notifications pertain to configuration and monitoring portions of the managed system, not the entire system.
A server MUST report events that are directly related to the NETCONF protocol.
A server MAY report events for non NETCONF management sessions, using the 'session id' value of zero.
This module defines the following notifications for the 'NETCONF' stream to notify a client application that the NETCONF server state has changed: netconf config change:
Generated when the NETCONF server detects that the <running> or <startup> configuration datastore has been changed by a management session.
The notification summarizes the edits that have been detected.
Generated when the NETCONF server detects that the server capabilities have changed.
Indicates which capabilities have been added, deleted, and/or modified.
The manner in which a server capability is changed is outside the scope of this document.
Generated when a NETCONF server detects that a NETCONF session has started.
A server MAY generate this event for non NETCONF management sessions.
Indicates the identity of the user that started the session.
Generated when a NETCONF server detects that a NETCONF session has terminated.
A server MAY optionally generate this event for non NETCONF management sessions.
Indicates the identity of the user that owned the session, and why the session was terminated.
: Generated when a NETCONF server detects that a confirmed commit event has occurred.
Indicates the event and the current state of the confirmed commit procedure in progress.
file "ietf netconf notifications@2011 12 09.yang
" module ietf netconf notifications { namespace "urn:
yang:ietf netconf notifications"; prefix ncn; import ietf inet types { prefix inet; } import ietf netconf { prefix nc; } organization "IETF NETCONF (Network Configuration Protocol) Working Group"
Andy Bierman <mailto:andy@netconfcentral.org>"; description "This module defines a YANG data model for use with the NETCONF protocol that allows the NETCONF client to receive common NETCONF base event notifications.
Copyright (c) 2012 IETF Trust and the persons identified as the document authors.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
session id or zero type; mandatory true
; description "Identifier of the session.
A NETCONF session MUST be identified by a non zero value.
If caused by internal action, then the empty leaf 'server' will be present.
If caused by a management session, then the name, remote host address, and session ID of the session that made the change will be reported."; choice server or user { mandatory true; leaf server { type empty
; description "If present, the change was caused by the server."
} notification netconf config change { description "
Generated when the NETCONF server detects that the <running> or <startup> configuration datastore has been changed by a management session.
The notification summarizes the edits that have been detected.
This list MAY be omitted if the detailed edit operations are not known.
A server SHOULD set this object to the node within the datastore that is being altered.
notification netconf config change notification netconf capability change { description "Generated when the NETCONF server detects that the server capabilities have changed.
Indicates which capabilities have been added, deleted, and/or modified.
A capability is considered to be modified if the base URI for the capability has not changed, but one or more of the parameters encoded at the end of the capability URI have changed.
A server MAY generate this event for non NETCONF management sessions.
notification netconf session start notification netconf session end { description "Generated when a NETCONF server detects that a NETCONF session has terminated.
A server MAY optionally generate this event for non NETCONF management sessions.
Indicates the identity of the user that owned the session, and why the session was terminated."
; uses common session parms;
If this session was abnormally terminated by a non NETCONF session unknown to the server, then this leaf will not be present."
The session was terminated because of inactivity, e.g., waiting for the <hello> message or <rpc> messages."
Indicates the event and the current state of the confirmed commit procedure in progress."; reference "RFC 6241, Section 8.4"; uses common session parms { when "..
; } enum "timeout" { description "The confirmed commit procedure has been canceled due to the confirm timeout interval expiring.
The common session parameters will not be present in this sub mode."
; } enum "extend" { description "
The confirmed commit timeout has been extended, e.g., by a new <confirmed commit> operation."
; } enum "complete" { description "
The confirmed commit procedure has been completed."
event   'extend'"; type uint32; units "seconds"; description "The configured timeout value if the event type is 'start' or 'extend'.
This document registers one XML namespace URN in the 'IETF XML registry', following the format defined in [RFC3688].
N/A; the requested URI is an XML namespace.
This document registers one module name in the 'YANG Module Names' registry, defined in [RFC6020].
The YANG module defined in this memo is designed to be accessed via the NETCONF protocol [RFC6241].
The lowest NETCONF layer is the secure transport layer and the mandatory to implement secure transport is SSH, defined in [RFC6242].
Some of the readable data nodes in this YANG module may be considered sensitive or vulnerable in some network environments.
It is thus important to control
read access (e.g., via get, get config, or notification) to these data nodes.
These are the subtrees and data nodes and their sensitivity/vulnerability: /netconf
Event type itself indicates that the system configuration has changed.
This event could alert an attacker that specific configuration data nodes have been altered.
config change/changed by: Indicates whether the server or a specific user management session made the configuration change.
Identifies the user name, session id, and source host address associated with the configuration change, if any. /netconf
Indicates which datastore has been changed.
This data can be used to determine if the non volatile startup configuration data has been changed.
Identifies the specific edit operations and specific datastore subtree(s) that have changed.
This data could be used to determine if specific server vulnerabilities may now be present.
Event type itself indicates that the system capabilities have changed, and may now be vulnerable to unspecified attacks.
An attacker will likely need to understand the content represented by specific capability URI strings.
For example, knowing that a packet capture monitoring capability has been added to the system might help an attacker identify the device for possible unauthorized eavesdropping.
capability change/changed by: Indicates whether the server or a specific user management session made the capability change.
Identifies the user name, session id, and source host address associated with the capability change, if any.
: Indicates the specific capability URIs that have been added.
This data could be used to determine if specific server vulnerabilities may now be present.
capability change/deleted capability: Indicates the specific capability URIs that have been deleted.
This data could be used to determine if specific server vulnerabilities may now be present.
/netconf capability change/modified capability: Indicates the specific capability URIs that have been modified.
This data could be used to determine if specific server vulnerabilities may now be present.
Event type itself indicates that a NETCONF or other management session may start altering the device configuration and/or state.
It may be possible for an attacker to alter the configuration by somehow taking advantage of another session concurrently editing an unlocked datastore.
Indicates the user name associated with the session.
/netconf session start/source host: Indicates the source host address associated with the session.
Event type itself indicates that a NETCONF or other management session may be finished altering the device configuration.
This event could alert an attacker that a datastore may have been altered.
: Indicates the user name associated with the session.
/netconf session end/source host: Indicates the source host address associated with the session.
Event type itself indicates that the <running> datastore may have changed.
This event could alert an attacker that the device behavior has changed.
: Indicates the user name associated with the session.
Indicates the source host address associated with the session.
/netconf confirmed commit/confirm event: Indicates the specific confirmed commit state change that occurred.
A value of 'complete' probably indicates that the <running> datastore has changed.
Indicates the number of seconds in the future when the <running> datastore may change, due to the server reverting to an older configuration.
