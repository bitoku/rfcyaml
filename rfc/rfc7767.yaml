- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                     S. Vinapamula
  contents:
  - 'Independent Submission                                     S. Vinapamula

    '
- title: Application-Initiated Check-Pointing via the Port Control Protocol (PCP)
  contents:
  - 'Application-Initiated Check-Pointing via the Port Control Protocol (PCP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a mechanism for a host to indicate via the\n\
    \   Port Control Protocol (PCP) which connections should be protected\n   against\
    \ network failures.  These connections will then be subject to\n   high-availability\
    \ mechanisms enabled on the network side.\n   This approach assumes that applications\
    \ and/or users have more\n   visibility about sensitive connections than any heuristic\
    \ that can be\n   enabled on the network side to guess which connections should\
    \ be\n   check-pointed.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7767.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Note  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Requirements Language . . . . . . . . . . . . . . .\
    \ . . .   3\n   2.  Issues with the Existing Implementations  . . . . . . . .\
    \ . .   4\n   3.  CHECKPOINT_REQUIRED PCP Option  . . . . . . . . . . . . . .\
    \ .   4\n     3.1.  Format  . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   4\n     3.2.  Operation . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n   4.  Sample Use Cases  . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   8\n  \
    \ 6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9\n   7.\
    \  References  . . . . . . . . . . . . . . . . . . . . . . . . .   9\n     7.1.\
    \  Normative References  . . . . . . . . . . . . . . . . . .   9\n     7.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .   9\n   Appendix A.  Additional\
    \ Considerations  . . . . . . . . . . . . .  11\n   Acknowledgments . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  11\n   Authors' Addresses  . . . .\
    \ . . . . . . . . . . . . . . . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The risk of Internet service disruption is critical in service\n\
    \   providers and enterprise networking environments.  Such a risk is\n   often\
    \ mitigated with the introduction of active/backup systems.  Such\n   designs\
    \ not only contribute to minimize the risk of service\n   disruption, but also\
    \ facilitate maintenance operations (e.g., hitless\n   hardware or software upgrades).\n\
    \   In addition, the nature of some connections leads to the\n   establishment\
    \ and the maintenance of connection-specific states by\n   some of the network\
    \ functions invoked when the connection is\n   established.  During active/backup\
    \ failover in case of a network\n   failure, the said states need to be check-pointed\
    \ by the backup\n   system.  Additional issues are discussed in Section 2.\n \
    \  Heuristics based on the protocol, mapping lifetime, etc., are used in\n   the\
    \ network to elect which connections need to be check-pointed\n   (e.g., by means\
    \ of high-availability (HA) techniques).  This document\n   advocates for an application-initiated\
    \ approach that would allow\n   applications and/or users to signal to the network\
    \ which of their\n   connections are critical.\n   Within this document, \"check-pointing\"\
    \ refers to a process of state\n   replication and synchronization between active\
    \ and backup PCP-\n   controlled devices.  When the active PCP-controlled device\
    \ fails, the\n   backup PCP-controlled device will take over all the existing\n\
    \   established sessions that were check-pointed.  This process is\n   transparent\
    \ to internal hosts.\n   This document specifies how PCP [RFC6887] can be extended\
    \ to indicate\n   which connection should be check-pointed for high availability\n\
    \   (Section 3).  A set of use cases are provided for illustrative\n   purposes\
    \ in Section 4.  This document does not make any assumptions\n   about the PCP-controlled\
    \ device that will process the PCP-formatted\n   signaling information from PCP\
    \ clients.  These devices are likely to\n   be flow aware.\n   The approach in\
    \ this document is aligned with the networking trends\n   advocating for open\
    \ network APIs to interact with applications/\n   services (e.g., [RFC7149]).\
    \  For instance, the decision-making\n   process about policy on the network side\
    \ will be enriched with\n   information provided by applications using PCP.\n"
- title: 1.1.  Note
  contents:
  - "1.1.  Note\n   The CHECKPOINT_REQUIRED PCP option (Section 3) is defined in the\n\
    \   \"Specification Required\" range (see Section 6).  In order to be\n   assigned\
    \ a code point in that range, a permanent publication is\n   required as per Section\
    \ 4.1 of [RFC5226].  Publication of an RFC is\n   an ideal means of achieving\
    \ this requirement and also to ease\n   interoperability.\n   Note, this work\
    \ was presented to the Port Control Protocol (PCP) WG,\n   but there was no consensus\
    \ to define this option in the \"Standards\n   Action\" range despite positive\
    \ feedback that was received from the\n   working group.  Technical comments that\
    \ were received during PCP\n   meetings and those received on the mailing list\
    \ were addressed.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Issues with the Existing Implementations
  contents:
  - "2.  Issues with the Existing Implementations\n   Regardless of the selected technology\
    \ or design like HA-based\n   designs, reliably securing connections is expensive\
    \ in terms of\n   memory, CPU usage, and other resources.  Also, check-pointing\
    \ may not\n   be required for all connections, as all connections may not be\n\
    \   critical.  But, this leaves a challenge to identify what connections\n   to\
    \ check-point.\n   Typically, this is addressed by identifying long-lived connections\n\
    \   and check-pointing the state of only those connections that lived\n   long\
    \ enough, to the backup for service continuity.\n   However, check-pointing long-lived\
    \ connections raises the following\n   issues:\n   1.  It is hard for a network\
    \ to identify (or guess) which connection\n       is (business) critical.  This\
    \ characterization is often customer-\n       specific: a flow can be sensitive\
    \ for a User #1, while it is not\n       for another User #2.  Furthermore, this\
    \ characterization can vary\n       over time: a flow can be sensitive during\
    \ hour X, while it is not\n       during other times.\n   2.  Heuristics are not\
    \ deterministic.\n   3.  A potentially long-lived connection may experience disruption\n\
    \       upon failure of the active system, but before it is check-\n       pointed.\n\
    \   4.  A connection may not be long-lived but it may be critical, e.g.,\n   \
    \    for Voice over IP (VoIP) conversations.\n   5.  Likewise, not all long-lived\
    \ connections are deemed critical: for\n       example, connections that pertain\
    \ to free Internet services are\n       usually considered not critical compared\
    \ to the equivalent\n       connections for paid services.  Only the latter need\
    \ to be check-\n       pointed.\n"
- title: 3.  CHECKPOINT_REQUIRED PCP Option
  contents:
  - '3.  CHECKPOINT_REQUIRED PCP Option

    '
- title: 3.1.  Format
  contents:
  - "3.1.  Format\n   The solution is based on the assumption that an application\
    \ or user\n   is the best judge of which of its connections are critical.\n  \
    \ An application or user may explicitly identify the connections that\n   need\
    \ to be check-pointed by means of a PCP client, using the\n   CHECKPOINT_REQUIRED\
    \ option as described in Figure 1.\n   The entry to be backed up is indicated\
    \ by the content of a MAP or\n   PEER message.\n    0                   1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Option Code=192|  Reserved     |        Option Length          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Option Name: CHECKPOINT_REQUIRED\n            Number: 192\n     \
    \       Purpose:  Indicate if an entry needs to be check-pointed.\n          \
    \  Valid for Opcodes: MAP, PEER\n            Length: 0.\n            May appear\
    \ in: Request and response.\n            Maximum occurrences: 1.\n           \
    \      Figure 1: CHECKPOINT_REQUIRED PCP Option\n   The description of the fields\
    \ is as follows:\n   o  Option Code: 192 (see Section 6).\n   o  Reserved: This\
    \ field is initialized as specified in Section 7.3 of\n      [RFC6887].\n   o\
    \  Option Length: 0.  This means no data is included in the option.\n   An application\
    \ or user can take advantage of this PCP option to\n   explicitly indicate which\
    \ of the connections need to be check-pointed\n   and should not be disrupted.\
    \  The processing of this option by the\n   PCP server will then yield the check-pointing\
    \ of the corresponding\n   states by the relevant devices or functions dynamically\
    \ controlled by\n   the PCP server.\n   Communication between application/user\
    \ and PCP client is\n   implementation specific.\n"
- title: 3.2.  Operation
  contents:
  - "3.2.  Operation\n   Support of the CHECKPOINT_REQUIRED option by PCP servers\
    \ and PCP\n   clients is optional.  This option (Code 192; see Figure 1) may be\n\
    \   included in a PCP MAP or PEER request to indicate a connection is to\n   be\
    \ protected against network failures.\n   There is a risk that every PCP client\
    \ may wish to check-point every\n   connection; this can potentially load the\
    \ system.  Administration\n   SHOULD restrict the number of connections that can\
    \ be elected to be\n   backed up and the rate of check-pointing per network attachment\
    \ point\n   (e.g., Customer Premises Equipment (CPE), host).  To that aim, the\n\
    \   PCP server should unambiguously identify the network attachment point\n  \
    \ a PCP client belongs to.  For example, the PCP server may rely on the\n   PCP\
    \ identity [RFC7652], the assigned prefix to a CPE or host, the\n   subscriber-mask\
    \ [PREFIX-BINDING], or other identification means.\n   The PCP client includes\
    \ a CHECKPOINT_REQUIRED option in a MAP or PEER\n   request to signal that the\
    \ corresponding mapping is to be protected.\n   If the PCP client does not receive\
    \ a CHECKPOINT_REQUIRED option in\n   response to a PCP request that enclosed\
    \ the CHECKPOINT_REQUIRED\n   option, this means that either the PCP server does\
    \ not support the\n   option, or the PCP server is configured to ignore the option,\
    \ or the\n   PCP server cannot satisfy the request expressed in this option (e.g.,\n\
    \   because of a lack of resources).\n   If the CHECKPOINT_REQUIRED option is\
    \ not included in the PCP client\n   request, the PCP server MUST NOT include\
    \ the CHECKPOINT_REQUIRED\n   option in the associated response.\n   When the\
    \ PCP server receives a CHECKPOINT_REQUIRED option, the PCP\n   server checks\
    \ if it can honor this request depending on whether\n   resources are available\
    \ for check-pointing.  If there are no\n   resources available for check-pointing,\
    \ but there are resources\n   available to honor the MAP or PEER request, a response\
    \ is sent back\n   to the PCP client without including the CHECKPOINT_REQUIRED\
    \ option\n   (i.e., the request is processed as any MAP or PEER request that does\n\
    \   not convey a CHECKPOINT_REQUIRED option).  If check-pointing\n   resources\
    \ are still available and the quota for this PCP client has\n   not been reached,\
    \ the PCP server tags the corresponding entry as\n   eligible to the HA mechanism\
    \ and sends back the CHECKPOINT_REQUIRED\n   option in the positive answer to\
    \ the PCP client.\n   To update the check-pointing behavior of a mapping maintained\
    \ by the\n   PCP server, the PCP client generates a PCP MAP or PEER renewal\n\
    \   request that includes a CHECKPOINT_REQUIRED option to indicate this\n   mapping\
    \ has to be check-pointed or that doesn't include a\n   CHECKPOINT_REQUIRED option\
    \ to indicate this mapping does not need be\n   check-pointed anymore.  Upon receipt\
    \ of the PCP request, the PCP\n   server proceeds with the same operations to\
    \ validate a MAP or PEER\n   request to update an existing mapping.  If validation\
    \ checks are\n   passed, the PCP server updates the check-point flag associated\
    \ with\n   that mapping accordingly (i.e., it is set if a CHECKPOINT_REQUIRED\n\
    \   option was included in the update request or it is cleared if no\n   CHECKPOINT_REQUIRED\
    \ option was included), and the PCP server returns\n   the response to the PCP\
    \ client accordingly.\n   What information to check-point and how to check-point\
    \ are outside\n   the scope of this document and are left for implementations.\
    \  Also,\n   the mechanism for users or applications to indicate check-pointing\
    \ in\n   a PCP request may be automatic, semiautomatic, or require human\n   intervention.\
    \  This behavior is also left for application\n   implementations.  For managed\
    \ CPEs, a service provider may influence\n   what connections are to be check-pointed.\n\
    \   For honored requests, it is RECOMMENDED to check-point state on\n   backup\
    \ before a response is sent to the PCP client.\n"
- title: 4.  Sample Use Cases
  contents:
  - "4.  Sample Use Cases\n   Below are provided some examples for illustrative purposes:\n\
    \   Example 1:  Consider a streaming service such as live TV\n      broadcasting,\
    \ or any other media streaming, that supports check-\n      pointing signaling\
    \ functionality.  Suppose this application is\n      installed in three hosts\
    \ A, B and C.  For A, the application is\n      critical and should not be interrupted,\
    \ while for B it is not.\n      While for C, only some programs are of interest.\
    \  At the time of\n      installing this application's software, corresponding\
    \ preferences\n      can be provisioned.  When the application starts streaming:\n\
    \      *  All the flows associated with the streaming application are\n      \
    \   critical for A.  Limiting the number of flows to be backed up\n         will\
    \ ensure that host doesn't exceed the user's limit.\n      *  For B, none of these\
    \ flows are critical for check-pointing.\n         The CHECKPOINT_REQUIRED option\
    \ is not included in the PCP\n         requests.\n      *  For C, the user is\
    \ invited to interact with the application by\n         means of a configuration\
    \ option that is provided to dynamically\n         select which streaming to check-point,\
    \ based on the user's\n         interest.\n   Example 2:  Consider a streaming\
    \ service offered by a provider.\n      Suppose three levels of subscriptions\
    \ are offered by that\n      provider, e.g., gold, silver, and bronze.  To guarantee\
    \ a certain\n      level of quality of service for each subscription, policies\
    \ are\n      configured such that:\n      *  All flows associated with a gold\
    \ subscription should be check-\n         pointed.\n      *  Only some flows associated\
    \ with a silver subscription are\n         check-pointed.\n      *  None of the\
    \ flows associated with a bronze subscription are\n         check-pointed.\n \
    \     When a user invokes the streaming service, he/she may fall into\n      one\
    \ of those buckets, and according to the configured policy, his/\n      her associated\
    \ streaming flows are automatically check-pointed.\n      Login credentials can\
    \ be used as a trigger to determine the\n      subscription level (and therefore\
    \ the associated check-pointing\n      behavior).\n   Example 3:  Consider a VoIP\
    \ application that is able to request that\n      its flows be check-pointed.\
    \  No matter what is configured by the\n      user, some calls such as emergency\
    \ calls should be check-pointed.\n      The application has to identify such calls.\n\
    \   Example 4:  In the context of an enterprise network, applications are\n  \
    \    customized by the administrator.  Instructions about whether a\n      CHECKPOINT_REQUIRED\
    \ option is to be included are determined by the\n      administrator.  Only the\
    \ subset of applications identified by the\n      administrator will make use\
    \ of this option in conformance with the\n      enterprise network's management\
    \ policies.  Any misbehavior can be\n      considered as abuse.\n   In order to\
    \ prevent every application from including a\n   CHECKPOINT_REQUIRED option in\
    \ its PCP requests, the following items\n   are assumed:\n   o  Applications may\
    \ be delivered with some default settings for\n      check-pointing, and these\
    \ settings should be programmable by end\n      user.\n   o  Exposing and enforcing\
    \ these settings is application specific.\n   o  The end user may customize these\
    \ settings based on the\n      requirements.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   PCP-related security considerations are discussed\
    \ in [RFC6887].\n   The CHECKPOINT_REQUIRED option can be used by an attacker\
    \ to identify\n   critical flows; this is sensitive from a privacy standpoint.\
    \  Also,\n   an attacker can cause critical flows to not be check-pointed by\n\
    \   stripping the CHECKPOINT_REQUIRED option or by consuming the quota by\n  \
    \ adding the option to other flows.\n   These two issues can be mitigated if the\
    \ network on which the PCP\n   messages are to be sent is fully trusted.  Means\
    \ to defend against\n   attackers who can intercept packets between the PCP server\
    \ and the\n   PCP client should be enabled.  In some deployments, access control\n\
    \   lists (ACLs) can be installed on the PCP client, PCP server, and the\n   network\
    \ between them, so those ACLs allow only communications between\n   trusted PCP\
    \ elements.  If the networking environment between the PCP\n   client and the\
    \ PCP server is not secure, PCP authentication [RFC7652]\n   MUST be enabled.\n\
    \   A network device can always override the end-user signaling, i.e.,\n   what\
    \ is signaled by the PCP client, if the instructions conflict with\n   the network\
    \ policies.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   The following PCP Option Code has been allocated\
    \ in the\n   \"Specification Required\" range of the \"PCP Options\" registry\n\
    \   (http://www.iana.org/assignments/pcp-parameters):\n      192 CHECKPOINT_REQUIRED\
    \ (see Section 3.1)\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and\n  \
    \            P. Selkirk, \"Port Control Protocol (PCP)\", RFC 6887,\n        \
    \      DOI 10.17487/RFC6887, April 2013,\n              <http://www.rfc-editor.org/info/rfc6887>.\n\
    \   [RFC7652]  Cullen, M., Hartman, S., Zhang, D., and T. Reddy, \"Port\n    \
    \          Control Protocol (PCP) Authentication Mechanism\",\n              RFC\
    \ 7652, DOI 10.17487/RFC7652, September 2015,\n              <http://www.rfc-editor.org/info/rfc7652>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [PREFIX-BINDING]\n              Vinapamula,\
    \ S. and M. Boucadair, \"Recommendations for\n              Prefix Binding in\
    \ the Softwire DS-Lite Context\", Work in\n              Progress, draft-vinapamula-softwire-dslite-prefix-\n\
    \              binding-12, October 2015.\n   [RFC5226]  Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\"\
    , BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226, May 2008,\n         \
    \     <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC7149]  Boucadair, M. and\
    \ C. Jacquenet, \"Software-Defined\n              Networking: A Perspective from\
    \ within a Service Provider\n              Environment\", RFC 7149, DOI 10.17487/RFC7149,\
    \ March 2014,\n              <http://www.rfc-editor.org/info/rfc7149>.\n"
- title: Appendix A.  Additional Considerations
  contents:
  - "Appendix A.  Additional Considerations\n   It was tempting to include additional\
    \ fields in the option but this\n   would lead to a more complex design that is\
    \ not justified.  For\n   example, we considered the following.\n   o  Define\
    \ a dedicated field to indicate a priority level.  This\n      priority is intended\
    \ to be used by the PCP server as a hint when\n      processing a request with\
    \ a CHECKPOINT_REQUIRED option.\n      Nevertheless, an application may systematically\
    \ choose to set the\n      priority level to the highest value so that it increases\
    \ its\n      chance to be serviced!\n   o  Return a more granular failure error\
    \ code to the requesting PCP\n      client.  However, this would require extra\
    \ processing at both the\n      PCP client and server sides for handling the various\
    \ error codes\n      without any guarantee that the PCP client would have its\
    \ mappings\n      check-pointed.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Reinaldo Penno, Stuart Cheshire, Dave Thaler, Prashanth\n\
    \   Patil, and Christian Jacquenet for their comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Suresh Vinapamula\n   Juniper Networks\n   1194 North\
    \ Mathilda Avenue\n   Sunnyvale, CA  94089\n   United States\n   Phone: +1 408\
    \ 936 5441\n   Email: sureshk@juniper.net\n   Senthil Sivakumar\n   Cisco Systems\n\
    \   7100-8 Kit Creek Road\n   Research Triangle Park, NC  27760\n   United States\n\
    \   Phone: +1 919 392 5158\n   Email: ssenthil@cisco.com\n   Mohamed Boucadair\n\
    \   Orange\n   Rennes  35000\n   France\n   Email: mohamed.boucadair@orange.com\n\
    \   Tirumaleswar Reddy\n   Cisco Systems, Inc.\n   Cessna Business Park, Varthur\
    \ Hobli\n   Sarjapur Marathalli Outer Ring Road\n   Bangalore, Karnataka  560103\n\
    \   India\n   Email: tireddy@cisco.com\n"
