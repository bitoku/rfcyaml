- title: __initial_text__
  contents:
  - ''
- title: Internet Architecture Board (IAB)                         D. Thaler, Ed.
  contents:
  - "Internet Architecture Board (IAB)                         D. Thaler, Ed.\n  \
    \     Planning for Protocol Adoption and Subsequent Transitions\n"
- title: Abstract
  contents:
  - "Abstract\n   Over the many years since the introduction of the Internet Protocol,\n\
    \   we have seen a number of transitions throughout the protocol stack,\n   such\
    \ as deploying a new protocol, or updating or replacing an\n   existing protocol.\
    \  Many protocols and technologies were not designed\n   to enable smooth transition\
    \ to alternatives or to easily deploy\n   extensions; thus, some transitions,\
    \ such as the introduction of IPv6,\n   have been difficult.  This document attempts\
    \ to summarize some basic\n   principles to enable future transitions, and it\
    \ also summarizes what\n   makes for a good transition plan.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Architecture Board (IAB)\n   and represents information that\
    \ the IAB has deemed valuable to\n   provide for permanent record.  It represents\
    \ the consensus of the\n   Internet Architecture Board (IAB).  Documents approved\
    \ for\n   publication by the IAB are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8170.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Extensibility . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Transition vs. Coexistence  . . . . . . . . . . . . . .\
    \ . . .   5\n   4.  Translation/Adaptation Location . . . . . . . . . . . . .\
    \ . .   6\n   5.  Transition Plans  . . . . . . . . . . . . . . . . . . . . .\
    \ .   7\n     5.1.  Understanding of Existing Deployment  . . . . . . . . . .\
    \   7\n     5.2.  Explanation of Incentives . . . . . . . . . . . . . . . .  \
    \ 7\n     5.3.  Description of Phases and Proposed Criteria . . . . . . .   8\n\
    \     5.4.  Measurement of Success  . . . . . . . . . . . . . . . . .   8\n  \
    \   5.5.  Contingency Planning  . . . . . . . . . . . . . . . . . .   8\n    \
    \ 5.6.  Communicating the Plan  . . . . . . . . . . . . . . . . .   9\n   6. \
    \ Security Considerations . . . . . . . . . . . . . . . . . . .   9\n   7.  IANA\
    \ Considerations . . . . . . . . . . . . . . . . . . . . .   9\n   8.  Conclusion\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n   9.  Informative References\
    \  . . . . . . . . . . . . . . . . . . .  10\n   Appendix A.  Case Studies . .\
    \ . . . . . . . . . . . . . . . . . .  14\n     A.1.  Explicit Congestion Notification\
    \  . . . . . . . . . . . .  14\n     A.2.  Internationalized Domain Names  . .\
    \ . . . . . . . . . . .  15\n     A.3.  IPv6  . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . .  17\n     A.4.  HTTP  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  19\n       A.4.1.  Protocol Versioning, Extensions, and 'Grease'\
    \ . . . .  20\n       A.4.2.  Limits on Changes in Major Versions . . . . . .\
    \ . . .  20\n       A.4.3.  Planning for Replacement  . . . . . . . . . . . .\
    \ . .  21\n   IAB Members at the Time of Approval . . . . . . . . . . . . . .\
    \ .  22\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .\
    \  22\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A \"transition\" is the process or period of changing from\
    \ one state or\n   condition to another.  There are several types of such transitions,\n\
    \   including both technical transitions (e.g., changing protocols or\n   deploying\
    \ an extension) and organizational transitions (e.g.,\n   changing what organization\
    \ manages a web site).  This document\n   focuses solely on technical transitions,\
    \ although some principles\n   might apply to other types as well.\n   In this\
    \ document, we use the term \"transition\" generically to apply\n   to any of:\n\
    \   o  adoption of a new protocol where none existed before,\n   o  deployment\
    \ of a new protocol that obsoletes a previous protocol,\n   o  deployment of an\
    \ updated version of an existing protocol, or\n   o  decommissioning of an obsolete\
    \ protocol.\n   There have been many IETF and IAB RFCs and IAB statements discussing\n\
    \   transitions of various sorts.  Most are protocol-specific documents\n   about\
    \ specific transitions.  For example, some relevant ones in which\n   the IAB\
    \ has been involved include:\n   o  IAB RFC 3424 [RFC3424] recommended that any\
    \ technology for\n      so-called \"UNilateral Self-Address Fixing (UNSAF)\" across\
    \ NATs\n      include an exit strategy to transition away from such a mechanism.\n\
    \      Since the IESG, not the IAB, approves IETF documents, the IESG\n      thus\
    \ became the body to enforce (or not) such a requirement.\n   o  IAB RFC 4690\
    \ [RFC4690] gave recommendations around\n      internationalized domain names.\
    \  It discussed issues around the\n      process of transitioning to new versions\
    \ of Unicode, and this\n      resulted in the creation of the IETF Precis Working\
    \ Group (WG) to\n      address this problem.\n   o  The IAB statement on \"Follow-up\
    \ work on NAT-PT\"\n      [IabIpv6TransitionStatement] pointed out gaps at the\
    \ time in\n      transitioning to IPv6, and this resulted in the rechartering\
    \ of\n      the IETF Behave WG to solve this problem.\n   More recently, the IAB\
    \ has done work on more generally applicable\n   principles, including two RFCs.\n\
    \   IAB RFC 5218 [RFC5218] on \"What Makes for a Successful Protocol?\"\n   studied\
    \ specifically what factors contribute to, and detract from,\n   the success of\
    \ a protocol and it made a number of recommendations.\n   It discussed two types\
    \ of transitions: \"initial success\" (the\n   transition to the technology) and\
    \ extensibility (the transition to\n   updated versions of it).  The principles\
    \ and recommendations in that\n   document are generally applicable to all technical\
    \ transitions.  Some\n   important principles included:\n   1.  Incentive: Transition\
    \ is easiest when the benefits come to those\n       bearing the costs.  That\
    \ is, the benefits should outweigh the\n       costs at *each* entity.  Some successful\
    \ cases did this by\n       providing incentives (e.g., tax breaks), or by reducing\
    \ costs\n       (e.g., freely available source), or by imposing costs of not\n\
    \       transitioning (e.g., regulation), or even by narrowing the\n       scenarios\
    \ of applicability to just the cases where benefits do\n       outweigh costs\
    \ at all relevant entities.\n   2.  Incremental Deployability: Backwards compatibility\
    \ makes\n       transition easier.  Furthermore, transition is easiest when\n\
    \       changing only one entity still benefits that entity.  In the\n       easiest\
    \ case, the benefit immediately outweighs the cost, so\n       entities are naturally\
    \ incented to transition.  More commonly,\n       the benefits only outweigh the\
    \ costs once a significant number of\n       other entities also transition. \
    \ Unfortunately, in such cases,\n       the natural incentive is often to delay\
    \ transitioning.\n   3.  Total Cost: It is important to consider costs that go\
    \ beyond the\n       core hardware and software, such as operational tools and\n\
    \       processes, personnel training, business model (accounting/\n       billing)\
    \ dependencies, and legal (regulation, patents, etc.)\n       costs.\n   4.  Extensibility:\
    \ Design for extensibility [RFC6709] so that things\n       can be fixed up later.\n\
    \   IAB RFC 7305 [RFC7305] reported on an IAB workshop on Internet\n   Technology\
    \ Adoption and Transition (ITAT).  Like RFC 5218, this\n   workshop also discussed\
    \ economic aspects of transition, not just\n   technical aspects.  Some important\
    \ observations included:\n   1.  Early-Adopter Incentives: Part of Bitcoin's strategy\
    \ was extra\n       incentives for early adopters compared to late adopters. \
    \ That\n       is, providing a long-term advantage to early adopters can help\n\
    \       stimulate transition even when the initial costs outweigh the\n      \
    \ initial benefit.\n   2.  Policy Partners: Policy-making organizations of various\
    \ sorts\n       (Regional Internet Registries (RIRs), ICANN, etc.) can be\n  \
    \     important partners in enabling and facilitating transition.\n   The remainder\
    \ of this document continues the discussion started in\n   those two RFCs and\
    \ provides some additional thoughts on the topic of\n   transition strategies\
    \ and plans.\n"
- title: 2.  Extensibility
  contents:
  - "2.  Extensibility\n   Many protocols are designed to be extensible, using mechanisms\
    \ such\n   as options, version negotiation, etc., to ease the transition to new\n\
    \   features.  However, implementations often succumb to commercial\n   pressures\
    \ to ignore this flexibility in favor of performance or\n   economy, and as a\
    \ result such extension mechanisms (e.g., IPv6 Hop-\n   by-Hop Options) often\
    \ experience problems in practice once they begin\n   to be used.  In other cases,\
    \ a mechanism might be put into a protocol\n   for future use without having an\
    \ adequate sense of how it will be\n   used, which causes problems later (e.g.,\
    \ SNMP's original 'security'\n   field, or the IPv6 Flow Label).  Thus, designers\
    \ need to consider\n   whether it would be easier to transition to a new protocol\
    \ than it\n   would be to ensure that an extension point is correctly specified\
    \ and\n   implemented such that it would be available when needed.\n   A protocol\
    \ that plans for its own eventual replacement during its\n   design makes later\
    \ transitions easier.  Developing and testing a\n   design for the technical mechanisms\
    \ needed to signal or negotiate a\n   replacement is essential in such a plan.\n\
    \   When there is interest in translation between a new mechanism and an\n   old\
    \ one, complexity of such translation must also be considered.  The\n   major\
    \ challenge in translation is for semantic differences.  Often,\n   syntactic\
    \ differences can be translated seamlessly; semantic ones\n   almost never.  Hence,\
    \ when designing for translatability, syntactic\n   and semantic differences should\
    \ be clearly documented.\n   See RFC 3692 [RFC3692] and RFC 6709 [RFC6709] for\
    \ more discussion of\n   design considerations for protocol extensions.\n"
- title: 3.  Transition vs. Coexistence
  contents:
  - "3.  Transition vs. Coexistence\n   There is an important distinction between\
    \ a strict \"flag day\" style\n   transition where an old mechanism is immediately\
    \ replaced with a new\n   mechanism, vs. a looser coexistence-based approach where\
    \ transition\n   proceeds in stages where a new mechanism is first added alongside\
    \ an\n   existing one for some overlap period, and then the old mechanism is\n\
    \   removed at a later stage.\n   When a new mechanism is backwards compatible\
    \ with an existing\n   mechanism, transition is easiest because different parties\
    \ can\n   transition at different times.  However, when no backwards\n   compatibility\
    \ exists such as in the IPv4 to IPv6 transition, a\n   transition plan must choose\
    \ either a \"flag day\" or a period of\n   coexistence.  When a large number of\
    \ entities are involved, a flag\n   day becomes impractical or even impossible.\
    \  Coexistence, on the\n   other hand, involves additional costs of maintaining\
    \ two separate\n   mechanisms during the overlap period, which could be quite\
    \ long.\n   Furthermore, the longer the overlap period, the more the old\n   mechanism\
    \ might get further deployment and thus increase the overall\n   pain of transition.\n\
    \   Often the decision between a \"flag day\" and a sustained coexistence\n  \
    \ period may be complicated when differing incentives are involved\n   (e.g.,\
    \ see the case studies in the Appendix).\n   Some new protocols or protocol versions\
    \ are developed with the intent\n   of never retiring the protocol they intend\
    \ to replace.  Such a\n   protocol might only aim to address a subset of the use\
    \ cases for\n   which an original is used.  For these protocols, coexistence is\
    \ the\n   end state.\n   Indefinite coexistence as an approach could be viable\
    \ if removal of\n   the existing protocol is not an urgent goal.  It might also\
    \ be\n   necessary for \"wildly successful\" protocols that have more disparate\n\
    \   uses than can reasonably be considered during the design of a\n   replacement.\
    \  For example, HTTP/2 does not aspire to cause the\n   eventual decommissioning\
    \ of HTTP/1.1 for these reasons.\n"
- title: 4.  Translation/Adaptation Location
  contents:
  - "4.  Translation/Adaptation Location\n   A translation or adaptation mechanism\
    \ is often required if the old\n   and new mechanisms are not interoperable. \
    \ Care must be taken when\n   determining whether one will work and where such\
    \ a translator is best\n   placed.\n   A translation mechanism may not work for\
    \ every use case.  For\n   example, if translation from one protocol (or protocol\
    \ version) to\n   another produces indeterminate results, translation will not\
    \ work\n   reliably.  In addition, if translation always produces a downgraded\n\
    \   protocol result, the incentive considerations in Section 5.2 will be\n   relevant.\n\
    \   Requiring a translator in the middle of the path can hamper end-to-\n   end\
    \ security and reliability.  For example, see the discussion of\n   network-based\
    \ filtering in [RFC7754].\n   On the other hand, requiring a translation layer\
    \ within an endpoint\n   can be a resource issue in some cases, such as if the\
    \ endpoint could\n   be a constrained node [RFC7228].\n   In addition, when a\
    \ translator is within an endpoint, it can attempt\n   to hide the difference\
    \ between an older protocol and a newer\n   protocol, either by exposing one of\
    \ the two sets of behavior to\n   applications and internally mapping it to the\
    \ other set of behavior,\n   or by exposing a higher level of abstraction that\
    \ is then\n   alternatively mapped to either one depending on detecting which\
    \ is\n   needed.  In contrast, when a translator is in the middle of the path,\n\
    \   typically only the first approach can be done since the middle of the\n  \
    \ path is typically unable to provide a higher level of abstraction.\n   Any transition\
    \ strategy for a non-backward-compatible mechanism\n   should include a discussion\
    \ of where the incompatible mechanism is\n   placed and a rationale.  The transition\
    \ plan should also consider the\n   transition away from the use of translation\
    \ and adaptation\n   technologies.\n"
- title: 5.  Transition Plans
  contents:
  - "5.  Transition Plans\n   A review of the case studies described in Appendix A\
    \ suggests that a\n   good transition plan include at least the following components:\
    \ an\n   understanding of what is already deployed and in use, an explanation\n\
    \   of incentives for each entity involved, a description of the phases\n   of\
    \ the transition along with a proposed criteria for each phase, a\n   method for\
    \ measuring the transition's success, a contingency plan for\n   failure of the\
    \ transition, and an effective method for communicating\n   the plan to the entities\
    \ involved and incorporating their feedback\n   thereon.  We recommend that such\
    \ criteria be considered when\n   evaluating proposals to transition to new or\
    \ updated protocols.  Each\n   of these components is discussed in the subsections\
    \ below.\n"
- title: 5.1.  Understanding of Existing Deployment
  contents:
  - "5.1.  Understanding of Existing Deployment\n   Often an existing mechanism has\
    \ variations in implementations and\n   operational deployments.  For example,\
    \ a specification might include\n   optional behaviors that may or may not be\
    \ implemented or deployed.\n   In addition, there may also be implementations\
    \ or deployments that\n   deviate from, or include vendor-specific extensions\
    \ to, various\n   aspects of a specification.  It is important when considering\
    \ a\n   transition to understand what variations one is intending to\n   transition\
    \ from or coexist with, since the technical and\n   non-technical issues may vary\
    \ greatly as a result.\n"
- title: 5.2.  Explanation of Incentives
  contents:
  - "5.2.  Explanation of Incentives\n   A transition plan should explain the incentives\
    \ to each involved\n   entity to support the transition.  Note here that many\
    \ entities other\n   than the endpoint applications and their users may be affected,\
    \ and\n   the barriers to transition may be non-technical as well as technical.\n\
    \   When considering these incentives, also consider network operations\n   tools,\
    \ practices and processes, personnel training, accounting and\n   billing dependencies,\
    \ and legal and regulatory incentives.\n   If there is opposition to a particular\
    \ new protocol (e.g., from\n   another standards organization, or a government,\
    \ or some other\n   affected entity), various non-technical issues arise that\
    \ should be\n   part of what is planned and dealt with.  Similarly, if there are\n\
    \   significant costs or other disincentives, the plan needs to consider\n   how\
    \ to overcome them.\n   It's worth noting that an analysis of incentives can be\
    \ difficult and\n   at times led astray by wishful thinking, as opposed to adequately\n\
    \   considering economic realities.  Thus, honestly considering any\n   barriers\
    \ to transition, and justifying one's conclusions about\n   others' incentives,\
    \ are key to a successful analysis.\n"
- title: 5.3.  Description of Phases and Proposed Criteria
  contents:
  - "5.3.  Description of Phases and Proposed Criteria\n   Transition phases might\
    \ include pilot/experimental deployment,\n   coexistence, deprecation, and removal\
    \ phases for a transition from\n   one technology to another incompatible one.\n\
    \   Timelines are notoriously difficult to predict and impossible to\n   impose\
    \ on uncoordinated transitions at the scale of the Internet, but\n   rough estimates\
    \ can sometimes help all involved entities to\n   understand the intended duration\
    \ of each phase.  More often, it is\n   useful to provide criteria that must be\
    \ met in order to move to the\n   next phase.  For example, is removal scheduled\
    \ for a particular date\n   (e.g., Federal Communications Commission (FCC) regulation\
    \ to\n   discontinue analog TV broadcasts in the U.S. by June 12, 2009), or is\n\
    \   removal to be based on the use of the old mechanism falling below a\n   specified\
    \ level, or some other criteria?\n   As one example, RFC 5211 [RFC5211] proposed\
    \ a transition plan for\n   IPv6 that included a proposed timeline and criteria\
    \ specific to each\n   phase.  While the timeline was not accurately followed,\
    \ the phases\n   and timeline did serve as inputs to the World IPv6 Day and World\
    \ IPv6\n   Launch events.\n"
- title: 5.4.  Measurement of Success
  contents:
  - "5.4.  Measurement of Success\n   The degree of deployment of a given protocol\
    \ or feature at a given\n   phase in its transition can be measured differently,\
    \ depending on its\n   design.  For example, server-side protocols and options\
    \ that identify\n   themselves through a versioning or negotiation mechanism can\
    \ be\n   discovered through active Internet measurement studies.\n"
- title: 5.5.  Contingency Planning
  contents:
  - "5.5.  Contingency Planning\n   A contingency plan can be as simple as providing\
    \ for indefinite\n   coexistence between an old and new protocol, or for reverting\
    \ to the\n   old protocol until an updated version of the new protocol is\n  \
    \ available.  Such a plan is useful in the event that unforeseen\n   problems\
    \ are discovered during deployment, so that such problems can\n   be quickly mitigated.\n\
    \   For example, World IPv6 Day included a contingency plan that was to\n   revert\
    \ to the original state at the end of the day.  After\n   discovering no issues,\
    \ some participants found that this contingency\n   plan was unnecessary and kept\
    \ the new state.\n"
- title: 5.6.  Communicating the Plan
  contents:
  - "5.6.  Communicating the Plan\n   Many of the entities involved in a protocol\
    \ transition may not be\n   aware of the IETF or the RFC series, so dissemination\
    \ through other\n   channels is key for sufficiently broad communication of the\n\
    \   transition plan.  While flag days are impractical at Internet scale,\n   coordinated\
    \ \"events\" such as World IPv6 Launch may improve general\n   awareness of an\
    \ ongoing transition.\n   Also, there is often a need for an entity facilitating\
    \ the transition\n   through advocacy and focus.  Such an entity, independent\
    \ of the IETF,\n   can be key in communicating the plan and its progress.\n  \
    \ Some transitions have a risk of breaking backwards compatibility for\n   some\
    \ fraction of users.  In such a case, when a transition affects\n   competing\
    \ entities facing the risk of losing customers to each other,\n   there is an\
    \ economic disincentive to transition.  Thus, one role for\n   a facilitating\
    \ entity is to get competitors to transition during the\n   same timeframe, so\
    \ as to mitigate this fear.  For example, the\n   success of World IPv6 Launch\
    \ was largely due to ISOC playing this\n   role.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document discusses attributes of protocol\
    \ transitions.  Some\n   types of transition can adversely affect security or\
    \ privacy.  For\n   example, requiring a translator in the middle of the path\
    \ may hamper\n   end-to-end security and privacy, since it creates an attractive\n\
    \   target.  For further discussion of some of these issues, see\n   Section 5\
    \ of [RFC7754].\n   In addition, coexistence of two protocols in general increases\
    \ risk\n   in the sense that it doubles the attack surface.  It allows\n   exploiters\
    \ to choose the weaker of two protocols when both are\n   available, or to force\
    \ use of the weaker when negotiating between the\n   protocols by claiming not\
    \ to understand the stronger one.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 8.  Conclusion
  contents:
  - "8.  Conclusion\n   This document summarized the set of issues that should be\
    \ considered\n   by protocol designers and deployers to facilitate transition\
    \ and\n   provides pointers to previous work (e.g., [RFC3692] and [RFC6709])\n\
    \   that provided detailed design guidelines.  This document also covered\n  \
    \ what makes for a good transition plan and includes several case\n   studies\
    \ that provide examples.  As more experience is gained over\n   time on how to\
    \ successfully apply these principles and design\n   effective transition plans,\
    \ we encourage the community to share such\n   learnings with the IETF community\
    \ and on the\n   architecture-discuss@ietf.org mailing list so that any future\n\
    \   document on this topic can leverage such experience.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [GREASE]   Benjamin, D., \"Applying GREASE to\
    \ TLS Extensibility\", Work\n              in Progress, draft-ietf-tls-grease-00,\
    \ January 2017.\n   [HTTP0.9]  Tim Berners-Lee, \"The Original HTTP as defined\
    \ in 1991\",\n              1991, <https://www.w3.org/Protocols/HTTP/\n      \
    \        AsImplemented.html>.\n   [IabIpv6TransitionStatement]\n             \
    \ IAB, \"Follow-up work on NAT-PT\", October 2007,\n              <https://www.iab.org/documents/correspondence-reports-\n\
    \              documents/docs2007/follow-up-work-on-nat-pt/>.\n   [IPv6Survey2011]\n\
    \              Botterman, M., \"IPv6 Deployment Survey\", 2011,\n            \
    \  <https://www.nro.net/wp-content/uploads/\n              ipv6_deployment_survey.pdf>.\n\
    \   [IPv6Survey2015]\n              British Telecommunications, \"IPv6 Industry\
    \ Survey Report\",\n              August 2015, <http://www.globalservices.bt.com/static/asse\n\
    \              ts/pdf/products/diamond_ip/IPv6-Survey-Report-2015.pdf>.\n   [PAM2015]\
    \  Trammell, B., Kuehlewind, M., Boppart, D., Learmonth, I.,\n              Fairhurst,\
    \ G., and R. Scheffenegger, \"Enabling Internet-\n              Wide Deployment\
    \ of Explicit Congestion Notification\",\n              Proceedings of PAM 2015,\
    \ DOI 10.1007/978-3-319-15509-8_15,\n              2015, <http://ecn.ethz.ch/ecn-pam15.pdf>.\n\
    \   [RFC1883]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n   \
    \           (IPv6) Specification\", RFC 1883, DOI 10.17487/RFC1883,\n        \
    \      December 1995, <http://www.rfc-editor.org/info/rfc1883>.\n   [RFC1933]\
    \  Gilligan, R. and E. Nordmark, \"Transition Mechanisms for\n              IPv6\
    \ Hosts and Routers\", RFC 1933, DOI 10.17487/RFC1933,\n              April 1996,\
    \ <http://www.rfc-editor.org/info/rfc1933>.\n   [RFC1945]  Berners-Lee, T., Fielding,\
    \ R., and H. Frystyk, \"Hypertext\n              Transfer Protocol -- HTTP/1.0\"\
    , RFC 1945,\n              DOI 10.17487/RFC1945, May 1996,\n              <http://www.rfc-editor.org/info/rfc1945>.\n\
    \   [RFC2068]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H., and T.\n    \
    \          Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\",\n       \
    \       RFC 2068, DOI 10.17487/RFC2068, January 1997,\n              <http://www.rfc-editor.org/info/rfc2068>.\n\
    \   [RFC2145]  Mogul, J., Fielding, R., Gettys, J., and H. Frystyk, \"Use\n  \
    \            and Interpretation of HTTP Version Numbers\", RFC 2145,\n       \
    \       DOI 10.17487/RFC2145, May 1997,\n              <http://www.rfc-editor.org/info/rfc2145>.\n\
    \   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n   \
    \           of Explicit Congestion Notification (ECN) to IP\",\n             \
    \ RFC 3168, DOI 10.17487/RFC3168, September 2001,\n              <http://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC3424]  Daigle, L., Ed. and IAB, \"IAB Considerations for\n           \
    \   UNilateral Self-Address Fixing (UNSAF) Across Network\n              Address\
    \ Translation\", RFC 3424, DOI 10.17487/RFC3424,\n              November 2002,\
    \ <http://www.rfc-editor.org/info/rfc3424>.\n   [RFC3692]  Narten, T., \"Assigning\
    \ Experimental and Testing Numbers\n              Considered Useful\", BCP 82,\
    \ RFC 3692,\n              DOI 10.17487/RFC3692, January 2004,\n             \
    \ <http://www.rfc-editor.org/info/rfc3692>.\n   [RFC4380]  Huitema, C., \"Teredo:\
    \ Tunneling IPv6 over UDP through\n              Network Address Translations\
    \ (NATs)\", RFC 4380,\n              DOI 10.17487/RFC4380, February 2006,\n  \
    \            <http://www.rfc-editor.org/info/rfc4380>.\n   [RFC4632]  Fuller,\
    \ V. and T. Li, \"Classless Inter-domain Routing\n              (CIDR): The Internet\
    \ Address Assignment and Aggregation\n              Plan\", BCP 122, RFC 4632,\
    \ DOI 10.17487/RFC4632, August\n              2006, <http://www.rfc-editor.org/info/rfc4632>.\n\
    \   [RFC4690]  Klensin, J., Faltstrom, P., Karp, C., and IAB, \"Review and\n \
    \             Recommendations for Internationalized Domain Names\n           \
    \   (IDNs)\", RFC 4690, DOI 10.17487/RFC4690, September 2006,\n              <http://www.rfc-editor.org/info/rfc4690>.\n\
    \   [RFC5211]  Curran, J., \"An Internet Transition Plan\", RFC 5211,\n      \
    \        DOI 10.17487/RFC5211, July 2008,\n              <http://www.rfc-editor.org/info/rfc5211>.\n\
    \   [RFC5218]  Thaler, D. and B. Aboba, \"What Makes for a Successful\n      \
    \        Protocol?\", RFC 5218, DOI 10.17487/RFC5218, July 2008,\n           \
    \   <http://www.rfc-editor.org/info/rfc5218>.\n   [RFC5894]  Klensin, J., \"Internationalized\
    \ Domain Names for\n              Applications (IDNA): Background, Explanation,\
    \ and\n              Rationale\", RFC 5894, DOI 10.17487/RFC5894, August 2010,\n\
    \              <http://www.rfc-editor.org/info/rfc5894>.\n   [RFC5895]  Resnick,\
    \ P. and P. Hoffman, \"Mapping Characters for\n              Internationalized\
    \ Domain Names in Applications (IDNA)\n              2008\", RFC 5895, DOI 10.17487/RFC5895,\
    \ September 2010,\n              <http://www.rfc-editor.org/info/rfc5895>.\n \
    \  [RFC6055]  Thaler, D., Klensin, J., and S. Cheshire, \"IAB Thoughts on\n  \
    \            Encodings for Internationalized Domain Names\", RFC 6055,\n     \
    \         DOI 10.17487/RFC6055, February 2011,\n              <http://www.rfc-editor.org/info/rfc6055>.\n\
    \   [RFC6269]  Ford, M., Ed., Boucadair, M., Durand, A., Levis, P., and\n    \
    \          P. Roberts, \"Issues with IP Address Sharing\", RFC 6269,\n       \
    \       DOI 10.17487/RFC6269, June 2011,\n              <http://www.rfc-editor.org/info/rfc6269>.\n\
    \   [RFC6455]  Fette, I. and A. Melnikov, \"The WebSocket Protocol\",\n      \
    \        RFC 6455, DOI 10.17487/RFC6455, December 2011,\n              <http://www.rfc-editor.org/info/rfc6455>.\n\
    \   [RFC6709]  Carpenter, B., Aboba, B., Ed., and S. Cheshire, \"Design\n    \
    \          Considerations for Protocol Extensions\", RFC 6709,\n             \
    \ DOI 10.17487/RFC6709, September 2012,\n              <http://www.rfc-editor.org/info/rfc6709>.\n\
    \   [RFC7021]  Donley, C., Ed., Howard, L., Kuarsingh, V., Berg, J., and\n   \
    \           J. Doshi, \"Assessing the Impact of Carrier-Grade NAT on\n       \
    \       Network Applications\", RFC 7021, DOI 10.17487/RFC7021,\n            \
    \  September 2013, <http://www.rfc-editor.org/info/rfc7021>.\n   [RFC7228]  Bormann,\
    \ C., Ersue, M., and A. Keranen, \"Terminology for\n              Constrained-Node\
    \ Networks\", RFC 7228,\n              DOI 10.17487/RFC7228, May 2014,\n     \
    \         <http://www.rfc-editor.org/info/rfc7228>.\n   [RFC7230]  Fielding, R.,\
    \ Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol (HTTP/1.1):\
    \ Message Syntax and Routing\",\n              RFC 7230, DOI 10.17487/RFC7230,\
    \ June 2014,\n              <http://www.rfc-editor.org/info/rfc7230>.\n   [RFC7301]\
    \  Friedl, S., Popov, A., Langley, A., and E. Stephan,\n              \"Transport\
    \ Layer Security (TLS) Application-Layer Protocol\n              Negotiation Extension\"\
    , RFC 7301, DOI 10.17487/RFC7301,\n              July 2014, <http://www.rfc-editor.org/info/rfc7301>.\n\
    \   [RFC7305]  Lear, E., Ed., \"Report from the IAB Workshop on Internet\n   \
    \           Technology Adoption and Transition (ITAT)\", RFC 7305,\n         \
    \     DOI 10.17487/RFC7305, July 2014,\n              <http://www.rfc-editor.org/info/rfc7305>.\n\
    \   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n      \
    \        Transfer Protocol Version 2 (HTTP/2)\", RFC 7540,\n              DOI\
    \ 10.17487/RFC7540, May 2015,\n              <http://www.rfc-editor.org/info/rfc7540>.\n\
    \   [RFC7541]  Peon, R. and H. Ruellan, \"HPACK: Header Compression for\n    \
    \          HTTP/2\", RFC 7541, DOI 10.17487/RFC7541, May 2015,\n             \
    \ <http://www.rfc-editor.org/info/rfc7541>.\n   [RFC7754]  Barnes, R., Cooper,\
    \ A., Kolkman, O., Thaler, D., and E.\n              Nordmark, \"Technical Considerations\
    \ for Internet Service\n              Blocking and Filtering\", RFC 7754, DOI\
    \ 10.17487/RFC7754,\n              March 2016, <http://www.rfc-editor.org/info/rfc7754>.\n\
    \   [TR46]     The Unicode Consortium, \"Unicode IDNA Compatibility\n        \
    \      Processing\", Version 9.0.0, June 2016,\n              <http://www.unicode.org/reports/tr46/>.\n\
    \   [TSV2007]  Sridharan, M., Bansal, D., and D. Thaler, \"Implementation\n  \
    \            Report on Experiences with Various TCP RFCs\", Proceedings\n    \
    \          of IETF 68, March 2007, <http://www.ietf.org/proceedings/\n       \
    \       68/slides/tsvarea-3/sld1.htm>.\n"
- title: Appendix A.  Case Studies
  contents:
  - "Appendix A.  Case Studies\n   Appendix A of [RFC5218] describes a number of case\
    \ studies that are\n   relevant to this document and highlight various transition\
    \ problems\n   and strategies (see, for instance, the Inter-Domain Multicast case\n\
    \   study in Appendix A.4 of [RFC5218]).  We now include several\n   additional\
    \ case studies that focus on transition problems and\n   strategies.  Many other\
    \ equally good case studies could have been\n   included, but, in the interests\
    \ of brevity, only a sampling is\n   included here that is sufficient to justify\
    \ the conclusions in the\n   body of this document.\n"
- title: A.1.  Explicit Congestion Notification
  contents:
  - "A.1.  Explicit Congestion Notification\n   Explicit Congestion Notification (ECN)\
    \ is a mechanism to replace loss\n   as the only signal for the detection of congestion.\
    \  It does this\n   with an explicit signal first sent from a router to a recipient\
    \ of a\n   packet, which is then reflected back to the sender.  It was\n   standardized\
    \ in 2001 in [RFC3168], and the mechanism consists of two\n   parts: congestion\
    \ detection in the IP layer, reusing two bits of the\n   old IP Type of Service\
    \ (TOS) field, and congestion feedback in the\n   transport layer.  Feedback in\
    \ TCP uses two TCP flags, ECN Echo and\n   Congestion Window Reduced.  Together\
    \ with a suitably configured\n   active queue management (AQM), ECN can improve\
    \ TCP performance on\n   congested links.\n   The deployment of ECN is a case\
    \ study in failed transition followed\n   by possible redemption.  Initial deployment\
    \ of ECN in the early and\n   mid 2000s led to severe problems with some network\
    \ equipment,\n   including home router crashes and reboots when packets with ECN\
    \ IP or\n   TCP flags were received [TSV2007].  This led to firewalls stripping\n\
    \   ECN IP and TCP flags, or even dropping packets with these flags set.\n   This\
    \ stalled deployment.  The need for both endpoints (to negotiate\n   and support\
    \ ECN) and on-path devices (to mark traffic when congestion\n   occurs) to cooperate\
    \ in order to see any benefits from ECN deployment\n   was a further issue.  The\
    \ deployment of ECN across the Internet had\n   failed.\n   In the late 2000s,\
    \ Linux and Windows servers began defaulting to\n   \"passive ECN support\", meaning\
    \ they would negotiate ECN if asked by\n   the client but would not ask to negotiate\
    \ ECN by default.  This\n   decision was regarded as without risk: only if a client\
    \ was\n   explicitly configured to negotiate ECN would any possible\n   connectivity\
    \ problems surface.  Gradually, this has increased server\n   support in the Internet\
    \ from near zero in 2008, to 11% of the top\n   million Alexa webservers in 2011,\
    \ to 30% in 2012, and to 65% in late\n   2014.  In the meantime, the risk to connectivity\
    \ of ECN negotiation\n   has reduced dramatically [PAM2015], leading to ongoing\
    \ work to make\n   Windows, Apple iOS, OSX, and Linux clients negotiate ECN by\
    \ default.\n   It is hoped that a critical mass of clients and servers negotiating\n\
    \   ECN will provide an incentive to mark congestion on ECN-enabled\n   traffic,\
    \ thus breaking the logjam.\n"
- title: A.2.  Internationalized Domain Names
  contents:
  - "A.2.  Internationalized Domain Names\n   The deployment of Internationalized\
    \ Domain Names (IDNs) has a long\n   and complicated history.  This should not\
    \ be surprising, since\n   internationalization deals with language and cultural\
    \ issues\n   regarding differing expectations of users around the world, thus\n\
    \   making it inherently difficult to agree on common rules.\n   Furthermore,\
    \ because human languages evolve and change over time,\n   even if common rules\
    \ can be established, there is likely to be a need\n   to review and update them\
    \ regularly.\n   There have been multiple technical transitions related to IDNs,\n\
    \   including the introduction of non-ASCII in DNS, the transition to\n   each\
    \ new version of Unicode, and the transition from IDNA 2003 to\n   IDNA 2008.\
    \  A brief history of the introduction of non-ASCII in DNS\n   and the various\
    \ complications that arose therein, can be found in\n   Section 3 of [RFC6055].\
    \  While IDNA 2003 was limited to Unicode\n   version 3.2 only, one of the IDNA\
    \ 2008 changes was to decouple its\n   rules from any particular version of Unicode\
    \ (see [RFC5894],\n   especially Section 1.4, for more discussion of this point,\
    \ and see\n   [RFC4690] for a list of other issues with IDNA 2003 that motivated\n\
    \   IDNA 2008).  However, the transition from IDNA 2003 to IDNA 2008\n   itself\
    \ presented a problem since IDNA 2008 did not preserve backwards\n   compatibility\
    \ with IDNA 2003 for a couple of codepoints.\n   Investigations and discussions\
    \ with affected parties led to the IETF\n   ultimately choosing IDNA 2008 because\
    \ the overall gain by moving to\n   IDNA 2008 to fix the problems with IDNA 2003\
    \ was seen to be much\n   greater than the problems due to the few incompatibilities\
    \ at the\n   time of the change, as not many IDNs were in use and even fewer that\n\
    \   might see incompatibilities.\n   A couple of browser vendors in particular\
    \ were concerned about the\n   differences between IDNA 2003 and IDNA 2008, and\
    \ the fact that if a\n   browser stopped being able to get to some site, or unknowingly\
    \ sent a\n   user to a different (e.g., phishing) site instead, the browser would\n\
    \   be blamed.  As such, any user-perceivable change from IDNA 2003\n   behavior\
    \ would be painful to the vendor to deal with; hence, they\n   could not depend\
    \ on solutions that would need action by other\n   entities.\n   Thus, to deal\
    \ with issues like such incompatibilities, some\n   applications and client-side\
    \ frameworks wanted to map one string into\n   another (namely, a string that\
    \ would give the same result as when\n   IDNA 2003 was used) before invoking DNS.\n\
    \   To provide such mapping (and some other functionality), the Unicode\n   Consortium\
    \ published [TR46], which continued down the path of IDNA\n   2003 with a code\
    \ point by code point selection mechanism.  This was\n   implemented by some,\
    \ but never adopted by the IETF.\n   Meanwhile, the IETF did not publish any mapping\
    \ mechanism, but\n   [RFC5895] was published on the Independent Submission stream.\
    \  In\n   discussions around mapping, one of the key topics was about how long\n\
    \   the transition should last.  At one end of the duration spectrum is a\n  \
    \ flag day where some entities would be broken initially but the change\n   would\
    \ happen before IDN usage became even more ubiquitous.  At the\n   other end of\
    \ the spectrum is the need to maintain mappings\n   indefinitely.  Local incentives\
    \ at each entity who needed to change,\n   however, meant that a short timeframe\
    \ was impractical.\n   There are many affected types of entities with very different\n\
    \   incentives.  For example, the incentives affecting browser vendors,\n   registries,\
    \ domain name marketers and applicants, app developers, and\n   protocol designers\
    \ are each quite different, and the various\n   solutions require changes by multiple\
    \ types of entities, where the\n   benefits do not always align with the costs.\
    \  If there is some group\n   (or even an individual) that is opposed to a change/transition\
    \ and\n   able to put significant resources behind their opposition,\n   transitions\
    \ get a lot harder.\n   Finally, there are multiple naming contexts, and the protocol\n\
    \   behavior (including how internationalized domain names are handled)\n   within\
    \ each naming context can be different.  Hence, applications and\n   frameworks\
    \ often encounter a variety of behaviors and may or may not\n   be designed to\
    \ deal with them.  See Sections 2 and 3 of [RFC6055] for\n   more discussion.\n\
    \   In summary, all this diversity can cause problems for each affected\n   entity,\
    \ especially if a competitor does not have such a problem,\n   e.g., for browser\
    \ vendors if competing browsers do not have the same\n   problems, or for an email\
    \ server provider if competing server\n   providers do not have the same problems.\n"
- title: A.3.  IPv6
  contents:
  - "A.3.  IPv6\n   Twenty-one years after publication of [RFC1883], the transition\
    \ to\n   IPv6 is still in progress.  The first document to describe a\n   transition\
    \ plan ([RFC1933]) was published less than a year after the\n   protocol itself.\
    \  It recommended coexistence (dual-stack or tunneling\n   technology) with the\
    \ expectation that over time, all hosts would have\n   IPv6, and IPv4 could be\
    \ quietly retired.\n   In the early stages, deployment was limited to peer-to-peer\
    \ uses\n   tunneled over IPv4 networks.  For example, Teredo [RFC4380] aligned\n\
    \   the cost of fixing the problem with the benefit and allowed for\n   incremental\
    \ benefits to those who used it.\n   Operating system vendors had incentives because\
    \ with such tunneling\n   protocols, they could get peer-to-peer apps working\
    \ without depending\n   on any infrastructure changes.  That resulted in the main\
    \ apps using\n   IPv6 being in the peer-to-peer category (BitTorrent, Xbox gaming,\n\
    \   etc.).\n   Router vendors had some incentive because IPv6 could be used within\n\
    \   an intra-domain network more efficiently than tunneling, once the OS\n   vendors\
    \ already had IPv6 support and some special-purpose apps\n   existed.\n   For\
    \ content providers and ISPs, on the other hand, there was little\n   incentive\
    \ for deployment: there was no incremental benefit to\n   deploying locally. \
    \ Since everyone already had IPv4, there was no\n   network effect benefit to\
    \ deploying IPv6.  Even as proponents argued\n   that workarounds to extend the\
    \ life of IPv4 -- such as Classless\n   Inter-Domain Routing (CIDR) [RFC4632]\
    \ , NAT, and stingy allocations\n   -- made it more complex, IPv4 continued to\
    \ work well enough for most\n   applications.\n   Workarounds to NAT problems\
    \ documented in [RFC6269] and [RFC7021]\n   included Interactive Connectivity\
    \ Establishment (ICE), Session\n   Traversal Utilities for NAT (STUN), and Traversal\
    \ Using Relays around\n   NAT (TURN), technologies that allowed those experiencing\
    \ the problems\n   to deploy technologies to resolve them.  As with end-to-end\
    \ IPv6\n   tunneling (e.g., Teredo), the incentives there aligned the cost of\n\
    \   fixing the problem with the benefit and allowed for incremental\n   benefits\
    \ to those who used them.  The IAB discussed NAT technology\n   proposals [RFC3424]\
    \ and recommended that they be considered short-\n   term fixes and said that\
    \ proposals must include an exit plan, such\n   that they would decline over time.\
    \  In particular, the IAB warned\n   against generalizing NAT solutions, which\
    \ would lead to greater\n   dependence on them.  In some ways, these solutions,\
    \ along with other\n   IPv4 development (e.g., the workarounds above, and retrofitting\
    \ IPsec\n   into IPv4) continued to reduce the incentive to deploy IPv6.\n   Some\
    \ early advocates overstated the benefits of IPv6, suggesting that\n   it had\
    \ better security (because IPsec was required) or that NAT was\n   worse than\
    \ it often appeared to be or that IPv4 exhaustion would\n   happen years sooner\
    \ than it actually did.  Some people pushed back on\n   these exaggerations, and\
    \ decided that the protocol itself somehow\n   lacked credibility.\n   Not until\
    \ a few years after IPv4 addresses were exhausted in various\n   RIR regions did\
    \ IPv6 deployment significantly increase.  The RIRs had\n   been advocating in\
    \ their communities for IPv6 for some time, reducing\n   fees for IPv6, and in\
    \ some cases providing training; there is little\n   to suggest that these had\
    \ a significant effect.  The RIRs and others\n   conducted surveys of different\
    \ industries and industry segments to\n   learn why people did not deploy IPv6\
    \ [IPv6Survey2011]\n   [IPv6Survey2015], which commonly listed lack of a business\
    \ case, lack\n   of training, and lack of vendor support as primary hurdles.\n\
    \   Arguably forward-looking companies collaborated, with ISOC, on World\n   IPv6\
    \ Day and World IPv6 Launch to jump-start global IPv6 deployment.\n   By including\
    \ multiple competitors, World IPv6 Day reduced the risk\n   that any of them would\
    \ lose customers if a user's IPv6 implementation\n   was broken.  World IPv6 Launch\
    \ then set a goal for content providers\n   to permanently enable IPv6, and for\
    \ large ISPs to enable IPv6 for at\n   least 1% of end users.  These large, visible\
    \ deployments gave vendors\n   specific features and target dates to support IPv6\
    \ well.  Key aspects\n   of World IPv6 Day and World IPv6 Launch that contributed\
    \ to their\n   successes (measured as increased deployment of IPv6) were the\n\
    \   communication through ISOC, and that measurement metrics and\n   contingency\
    \ plans were announced in advance.\n   Several efforts have been made to mitigate\
    \ the lack of a business\n   case.  Some governments (South Korea and Japan) provided\
    \ tax\n   incentives to include IPv6.  Other governments (Belgium and\n   Singapore)\
    \ mandated IPv6 support by private companies.  Few of these\n   had enough value\
    \ to drive significant IPv6 deployment.\n   The concern about lack of training\
    \ is often a common issue in\n   transitions.  Because IPv4 is so ubiquitous,\
    \ its use is routine and\n   simplified with common tools, and it is taught in\
    \ network training\n   everywhere.  While IPv6 deployment was low, ignorance of\
    \ it was no\n   obstacle to being hired as a network administrator or developer.\n\
    \   Organizations with the greatest incentives to deploy IPv6 are those\n   that\
    \ continue to grow quickly, even after IPv4 free-pool exhaustion.\n   Thus, ISPs\
    \ have had varying levels of commitment, based on the growth\n   of their user\
    \ base, services being added (especially video over IP),\n   and the number of\
    \ IPv4 addresses they had available.  Cloud-based\n   providers, including Content\
    \ Delivery Network (CDN) and hosting\n   companies, have been major buyers of\
    \ IPv4 addresses, and several have\n   been strong deployers and advocates of\
    \ IPv6.\n   Different organizations will use different transition models for\n\
    \   their networks, based on their needs.  Some are electing to use\n   IPv6-only\
    \ hosts in the network with IPv6-IPv4 translation at the\n   edge.  Others are\
    \ using dual-stack hosts with IPv6-only routers in\n   the core of the network,\
    \ and IPv4 tunneled or translated through them\n   to dual-stack edge routers.\
    \  Still others are using native dual-stack\n   throughout the network, but that\
    \ generally persists as an interim\n   measure: adoption of two technologies is\
    \ not the same as\n   transitioning from one technology to another.  Finally,\
    \ some walled\n   gardens or isolated networks, such as management networks, use\n\
    \   IPv6-only end-to-end.\n   It is impossible to predict with certainty the path\
    \ IPv6 deployment\n   will have taken when it is complete.  Lessons learned so\
    \ far include\n   aligning costs and benefits (incentive), and ensuring incremental\n\
    \   benefit (network effect or backward compatibility).\n"
- title: A.4.  HTTP
  contents:
  - "A.4.  HTTP\n   HTTP has been through several transitions as a protocol.\n   The\
    \ first version [HTTP0.9] was extremely simple, with no headers,\n   status codes,\
    \ or explicit versioning.  HTTP/1.0 [RFC1945] introduced\n   these and a number\
    \ of other concepts; it succeeded mostly because\n   deployment of HTTP was still\
    \ relatively new, with a small pool of\n   implementers and (comparatively) small\
    \ set of deployments and users.\n   HTTP/1.1 [RFC7230] (first defined in [RFC2068])\
    \ was an attempt to\n   make the protocol suitable for the massive scale it was\
    \ being\n   deployed upon and to introduce some new features.\n   HTTP/2 [RFC7540]\
    \ was largely aimed at improving performance.  The\n   primary improvement was\
    \ the introduction of request multiplexing,\n   which is supported by request\
    \ prioritization and flow control.  It\n   also introduced header compression\
    \ [RFC7541] and binary framing; this\n   made it completely backwards incompatible\
    \ on the wire, but still\n   semantically compatible with previous versions of\
    \ the protocol.\n"
- title: A.4.1.  Protocol Versioning, Extensions, and 'Grease'
  contents:
  - "A.4.1.  Protocol Versioning, Extensions, and 'Grease'\n   During the development\
    \ of HTTP/1.1, there was a fair amount of\n   confusion regarding the semantics\
    \ of HTTP version numbers, resulting\n   in [RFC2145].  Later, it was felt that\
    \ minor versioning in the\n   protocol caused more confusion than it was worth,\
    \ so HTTP/2.0 became\n   HTTP/2.\n   This decision was informed by the observation\
    \ that many\n   implementations ignored the major version number of the protocol\
    \ or\n   misinterpreted it.  As is the case with many protocol extension\n   points,\
    \ HTTP versioning had failed to be \"greased\" by use often\n   enough, and so\
    \ had become \"rusted\" so that only a limited range of\n   values could interoperate.\n\
    \   This phenomenon has been observed in other protocols, such as TLS (as\n  \
    \ exemplified by [GREASE]), and there are active efforts to identify\n   extension\
    \ points that are in need of such \"grease\" and making it\n   appear as if they\
    \ are in use.\n   Besides the protocol version, HTTP's extension points that are\
    \ well-\n   greased include header fields, status codes, media types, and cache-\n\
    \   control extensions; HTTP methods, content-encodings, and chunk-\n   extensions\
    \ enjoy less flexibility, and need to be extended more\n   cautiously.\n"
- title: A.4.2.  Limits on Changes in Major Versions
  contents:
  - "A.4.2.  Limits on Changes in Major Versions\n   Each update to the \"major\"\
    \ version of HTTP has been accompanied by\n   changes that weren't compatible\
    \ with previous versions.  This was not\n   uniformly successful given the diversity\
    \ and scale of deployment and\n   implementations.\n   HTTP/1.1 introduced pipelining\
    \ to improve protocol efficiency.\n   Although it did enjoy implementation, interoperability\
    \ did not\n   follow.\n   This was partially because many existing implementations\
    \ had chosen\n   architectures that did not lend themselves to supporting it;\n\
    \   pipelining was not uniformly implemented and where it was, support\n   was\
    \ sometimes incorrect or incomplete.  Since support for pipelining\n   was indicated\
    \ by the protocol version number itself, interop was\n   difficult to achieve,\
    \ and furthermore its inability to completely\n   address head-of-line blocking\
    \ issues made pipelining unattractive.\n   Likewise, HTTP/1.1's Expect/Continue\
    \ mechanism relied on wide support\n   for the new semantics it introduced and\
    \ did not have an adequate\n   fallback strategy for previous versions of the\
    \ protocol.  As a\n   result, interoperability and deployment suffered and is\
    \ still\n   considered a \"problem area\" for the protocol.\n   More recently,\
    \ the HTTP working group decided that HTTP/2 represented\n   an opportunity to\
    \ improve security, making the protocol much stricter\n   than previous versions\
    \ about the use of TLS.  To this end, a long\n   list of TLS cipher suites were\
    \ prohibited, constraints were placed on\n   the key exchange method, and renegotiation\
    \ was prohibited.\n   This did cause deployment problems.  Though most were minor\
    \ and\n   transitory, disabling renegotiation caused problems for deployments\n\
    \   that relied on the feature to authenticate clients and prompted new\n   work\
    \ to replace the feature.\n   A number of other features or characteristics of\
    \ HTTP were identified\n   as potentially undesirable as part of the HTTP/2 process\
    \ and\n   considered for removal.  This included trailers, the 1xx series of\n\
    \   responses, certain modes of request forms, and the unsecured\n   (http://)\
    \ variant of the protocol.\n   For each of these, the risk to the successful deployment\
    \ of the new\n   version was considered to be too great to justify removing the\n\
    \   feature.  However, deployment of the unsecured variant of HTTP/2\n   remains\
    \ extremely limited.\n"
- title: A.4.3.  Planning for Replacement
  contents:
  - "A.4.3.  Planning for Replacement\n   HTTP/1.1 provided the Upgrade header field\
    \ to enable transitioning a\n   connection to an entirely different protocol.\
    \  So far, this has been\n   little-used, other than to enable the use of WebSockets\
    \ [RFC6455].\n   With performance being a primary motivation for HTTP/2, a new\n\
    \   mechanism was needed to avoid spending an additional round trip on\n   protocol\
    \ negotiation.  A new mechanism was added to TLS to permit the\n   negotiation\
    \ of the new version of HTTP: Application-Layer Protocol\n   Negotiation (ALPN)\
    \ [RFC7301].  Upgrade was used only for the\n   unsecured variant of the protocol.\n\
    \   ALPN was identified as the primary way in which future protocol\n   versions\
    \ would be negotiated.  The mechanism was well-tested during\n   development of\
    \ the specification, proving that new versions could be\n   deployed safely and\
    \ easily.  Several draft versions of the protocol\n   were successfully deployed\
    \ during development, and version\n   negotiation was never shown to be an issue.\n\
    \   Confidence that new versions would be easy to deploy if necessary\n   lead\
    \ to a particular design stance that might be considered unusual\n   in light\
    \ of the advice in [RFC5218], though is completely consistent\n   with [RFC6709]:\
    \ few extension points were added, unless an immediate\n   need was understood.\n\
    \   This decision was made on the basis that it would be easier to revise\n  \
    \ the entire protocol than it would be to ensure that an extension\n   point was\
    \ correctly specified and implemented such that it would be\n   available when\
    \ needed.\n"
- title: IAB Members at the Time of Approval
  contents:
  - "IAB Members at the Time of Approval\n   Jari Arkko\n   Ralph Droms\n   Ted Hardie\n\
    \   Joe Hildebrand\n   Russ Housley\n   Lee Howard\n   Erik Nordmark\n   Robert\
    \ Sparks\n   Andrew Sullivan\n   Dave Thaler\n   Martin Thomson\n   Brian Trammell\n\
    \   Suzanne Woolf\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document is a product of the IAB Stack Evolution Program,\
    \ with\n   input from many others.  In particular, Mark Nottingham, Dave\n   Crocker,\
    \ Eliot Lear, Joe Touch, Cameron Byrne, John Klensin, Patrik\n   Faltstrom, the\
    \ IETF Applications Area WG, and others provided helpful\n   input on this document.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Dave Thaler (editor)\n   One Microsoft Way\n   Redmond,\
    \ WA  98052\n   United States of America\n   Email: dthaler@microsoft.com\n"
