- contents:
  - '             The Differentiated Services Configuration MIB

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo describes a MIB module that provides a conceptual layer\n
    \  between high-level \"network-wide\" policy definitions that effect\n   configuration
    of the Differentiated Services (diffserv) subsystem and\n   the instance-specific
    information that would include such details as\n   the parameters for all the
    queues associated with each interface in a\n   system.  This essentially provides
    an interface for configuring\n   differentiated services at a conceptually higher
    layer than that of\n   the Differentiated Services MIB.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  The Internet-Standard Management Framework . . . .
    . . . . . .  2\n   2.  Introduction . . . . . . . . . . . . . . . . . . . . .
    . . . .  2\n   3.  Other Documents. . . . . . . . . . . . . . . . . . . . . .
    . .  3\n   4.  Relationship to other MIBs . . . . . . . . . . . . . . . . . .
    \ 3\n       4.1.  The Policy-based Management MIB Module . . . . . . . . .  3\n
    \      4.2.  The Differentiated Services MIB Module . . . . . . . . .  4\n   5.
    \ The Differentiated Services Configuration MIB Module Design. .  5\n   6.  Template
    Cloning . . . . . . . . . . . . . . . . . . . . . . .  6\n       6.1.  An Approach
    to Template Cloning. . . . . . . . . . . . .  6\n       6.2.  Example. . . . .
    . . . . . . . . . . . . . . . . . . . .  7\n             6.2.1.  The Initial Situation.
    . . . . . . . . . . . . .  8\n             6.2.2.  The Configuration Template
    . . . . . . . . . . .  9\n             6.2.3.  Applying the Template. . . . .
    . . . . . . . . . 11\n             6.2.4.  Applying the Template Using SNMP Messages.
    . . . 14\n   7.  Managed Objects Definitions (MIB Module) . . . . . . . . . .
    . 15\n   8.  Security Considerations. . . . . . . . . . . . . . . . . . . . 20\n
    \  9.  Acknowledgments. . . . . . . . . . . . . . . . . . . . . . . . 22\n   10.
    References . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n       10.1.
    Normative References . . . . . . . . . . . . . . . . . . 22\n       10.2. Informative
    References . . . . . . . . . . . . . . . . . 23\n   11. Editors' Addresses . .
    . . . . . . . . . . . . . . . . . . . . 23\n   12. Full Copyright Statement .
    . . . . . . . . . . . . . . . . . . 24\n"
  title: Table of Contents
- contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 1.  The Internet-Standard Management Framework
- contents:
  - "2.  Introduction\n   This memo defines a MIB module that can be used to convey
    management\n   information about desired network-wide Differentiated Services
    based\n   policy behavior.  This module is designed to integrate with the\n   Differentiated
    Services MIB module [RFC3289] in order to provide\n   template configurations
    for the Differentiated Services MIB module.\n   The MIB module defined in this
    memo (the DIFFSERV-CONFIG-MIB) may be\n   used in combination with the Policy-based
    Management MIB module\n   [PMMIBDR], but that is not a requirement.  Without the
    Policy-based\n   Management MIB module, a management application must emulate
    behavior\n   provided by the Policy-based Management MIB using equivalent \"low-\n
    \  level\" SNMP operations in normal manager/agent communication.\n   Together,
    this memo, [RFC3289], and [PMMIBDR] represent an instance\n   of an integrated
    architecture for both device-specific and network-\n   wide policy (configuration)
    management, which is fully integrated\n   with the Internet Standard Management
    Framework.\n   The Differentiated Services MIB module [RFC3289] operates on a
    device\n   level.  The MIB module in this memo, the DIFFSERV-CONFIG-MIB, creates\n
    \  a coherent configuration management view as an umbrella over\n   [RFC3289].
    \ That is, the DIFFSERV-CONFIG-MIB provides a conceptual\n   Application Program
    Interface (API) for configuration of the\n   Differentiated Services parameters.
    \ Since the Differentiated\n   Services MIB module is able to maintain configuration
    information,\n   the DIFFSERV-CONFIG-MIB configuration API consists only of\n
    \  configuration template information and the start of the so-called\n   functional
    datapath.\n"
  title: 2.  Introduction
- contents:
  - "3.  Other Documents\n   It is assumed that the reader is familiar with Differentiated\n
    \  Services ([RFC2474] and [RFC2475]), the Policy-based Management MIB\n   ([PMMIBDR]),
    and \"Configuring Networks and Devices With SNMP\"\n   ([RFC3512]).  These documents
    include all of the necessary\n   terminology for understanding this memo.  However,
    note that use of\n   the MIB module in this memo does not require the use of [PMMIBDR].\n
    \  [RFC3512] also provides an example MIB module which may help in\n   understanding
    the relationship between DIFFSERV-CONFIG-MIB and the\n   Differentiated Services
    MIB in [RFC3289].\n"
  title: 3.  Other Documents
- contents:
  - "4.  Relationship to other MIBs\n   In this section, we describe the relationship
    of this MIB module to\n   other MIB modules.  The overall architecture used for
    policy\n   configuration management is described in [PMMIBDR].\n"
  - contents:
    - "4.1.  The Policy-based Management MIB Module\n   [PMMIBDR] defines a MIB module
      that enables policy-based\n   configuration management of infrastructure using
      the Internet\n   Standard Management Framework.  The document includes a table
      for\n   configuring policies to be implemented, tables for storing the roles\n
      \  of elements on a particular device, a table for representing the\n   capabilities
      of a device with respect to policy management, a table\n   for referencing elements
      affected by a policy, as well as other\n   infrastructure.  There is no requirement
      that [PMMIBDR] be used in\n   conjunction with the MIB module defined in this
      memo.\n   See [PMMIBDR] for a full description of the policy-based\n   configuration
      framework it provides.\n"
    title: 4.1.  The Policy-based Management MIB Module
  - contents:
    - "4.2.  The Differentiated Services MIB Module\n   The Differentiated Services
      MIB module [RFC3289] provides a common\n   set of managed objects useful for
      configuring Differentiated Services\n   parameters on a Differentiated Services
      capable device.  This is what\n   is referred to as instance-level configuration.
      \ It is the alteration\n   of the instance-level information in that MIB module
      which may be\n   done using the objects in the MIB module defined in this memo.\n
      \  It is recognized that vendors may include additional managed objects\n   in
      their devices (via vendor-specific MIB modules) for configuring\n   Differentiated
      Services parameters.  If a vendor chooses to use the\n   objects defined in
      this memo for configuration, the vendor should\n   provide additional managed
      objects in a similar approach as defined\n   for the Differentiated Services
      MIB module.\n   Since the managed objects of the Differentiated Services MIB\n
      \  [RFC3289] are not directly associated with an instance (interface and\n   interface
      direction), the same managed objects can be used for\n   traffic treatment configuration
      templates in a Differentiated\n   Services capable device and can then be applied
      on multiple\n   instances.  Therefore, the tables as defined in the Differentiated\n
      \  Services MIB can be used directly for template configuration\n   purposes.
      \ Those tables are:\n      - diffServClfrTable\n      - diffServClfrElementTable\n
      \     - diffServMultiFieldClfrTable\n      - diffServMeterTable\n      - diffServTBParamTable\n
      \     - diffServActionTable\n      - diffServDscpMarkActTable\n      - diffServCountActTable\n
      \     - diffServAlgDropTable\n      - diffServRandomDropTable\n      - diffServQTable\n
      \     - diffServSchedulerTable\n      - diffServMinRateTable\n      - diffServMaxRateTable\n
      \  Readers familiar with the Differentiated Services MIB will notice\n   that
      these are all templates.  Only the diffServDataPathTable defines\n   a managed
      instance for Differentiated Services traffic treatment by\n   its indexes of
      the interface and its direction.  This also allows the\n   tables mentioned
      above to be used as a configuration template without\n   defining anything directly
      related to a managed instance.\n"
    title: 4.2.  The Differentiated Services MIB Module
  title: 4.  Relationship to other MIBs
- contents:
  - "5.  The Differentiated Services Configuration MIB Module Design\n   The Differentiated
    Services Configuration MIB module (in this memo)\n   of the SNMP-based configuration
    management framework is positioned\n   between the Policy-based Management MIB
    module and the instance-\n   specific Differentiated Services MIB module as described
    above.\n   The MIB module found in this memo is designed to maintain\n   configuration
    templates for the Differentiated Services MIB [RFC3289]\n   module.  The module
    only has a template table that describes a\n   Differentiated Services traffic
    treatment by providing the starting\n   pointer of the functional datapath.  The
    templates represent a\n   specific configuration of traffic treatment in a functional
    datapath\n   of a Differentiated Services capable device.  To avoid duplication
    of\n   managed objects, the actual templates defining the functional\n   datapath
    are defined in the Differentiated Services MIB module.\n   These are also used
    for the management of the instances.  Therefore,\n   the implementation of the
    DIFFSERV-CONFIG-MIB module uses the tables\n   defined in the Differentiated Services
    MIB.  As soon as a\n   configuration is made active via the POLICY-MANAGEMENT-MIB
    or using\n   normal SNMP operations, the configuration defined within this MIB\n
    \  module will be instantiated in the DIFFSERV-MIB.\n   Note that this is a conceptual
    process.  That is, the configuration\n   may not actually go through an API available
    in the subsystem which\n   implements the DIFFSERV-MIB module.  However, configuration
    via the\n   DIFFSERV-CONFIG-MIB module will alter the same instrumentation as
    the\n   DIFFSERV-MIB module whether it does it via the DIFFSERV-MIB module or\n
    \  not.\n   The Differentiated Services Configuration MIB module only needs to\n
    \  define a starting point of a traffic treatment configuration\n   template.
    \ This table is similar to the diffServDataPathTable\n   [RFC3289].  However,
    it has a semantic difference in that the\n   diffServDataPathTable is associated
    with an instance (interface and\n   interface direction), whereas the diffServConfigTable
    in this memo is\n   not.\n   Unlike most MIB modules, changes to the managed objects
    in this MIB\n   module do not cause a change in the external/traffic behavior
    of the\n   device.  This MIB module is used to set up per-hop-behavior\n   configurations.
    \ As soon as configurations are made active via the\n   POLICY-MANAGEMENT-MIB
    or SNMP operations, the configurations defined\n   within this MIB module will
    be instantiated in the DIFFSERV-MIB.\n   The only table in this MIB module is
    the diffServConfigTable, which\n   provides managed objects for registering traffic
    treatment\n   configurations used in differentiated services.  The sole purpose
    of\n   this table is to provide the starting point for a traffic treatment\n   configuration
    template.  The traffic treatment itself is performed by\n   functional datapath
    elements [RFC3289].\n"
  title: 5.  The Differentiated Services Configuration MIB Module Design
- contents:
  - "6.  Template Cloning\n   The concept of the DIFFSERV-CONFIG-MIB is based on having
    traffic\n   treatment configuration templates.  The templates provide a set of\n
    \  configuration values that provide a particular behavior, such as\n   Expedited
    Forwarding traffic treatment, in the functional datapath.\n   The template (or
    functional datapath) is similar to a linked list\n   from a starting point and
    each (functional datapath) element is\n   connected to the next element via the
    so-called next RowPointer.\n   The moment a template is activated (instantiated)
    on an interface and\n   its interface direction, the template needs to be copied/cloned,
    so\n   that the template remains as a template.  Note that the template is\n   logically
    \"locked\" through the cloning process.  That is, the\n   template cannot be changed
    part way through the cloning process.\n   With the exception of the indices, the
    cloned template will be\n   identical to the source template.\n   A literal copy/clone
    of the template is not possible, since the same\n   indices inside the element
    tables cannot be re-used.  The\n   instantiation process must therefore generate
    a new index for each\n   element.  As a result of this, the 'NEXT' pointers also
    need to be\n   updated.  Otherwise, those will point to the template.\n"
  - contents:
    - "6.1.  An Approach to Template Cloning\n   What should a system containing Differentiated
      Services capabilities\n   and Differentiated Services configuration capabilities
      do\n   conceptually at the moment a template is activated on an interface?\n
      \  The following approach should not be considered implementation\n   guidelines,
      but rather a conceptual explanation of what should be\n   done.\n      1) Get
      the index of the template to be activated\n      2) Get RowPointer (current)
      from\n            diffServConfigStart.index\n            of the diffServConfigTable\n
      \     3) Check if RowPointer (current) exists\n      4) Logically \"lock\" the
      entry (current) pointed to by\n         RowPointer so that its values are not
      changed part way\n         through the cloning process.\n      5) Copy/Clone
      the entry (current) pointed to by RowPointer\n            a) Get a new index
      for the entry\n            b) Configure the new entry with the values\n               of
      the entry to be cloned\n            c) Update the NEXT pointer with a new RowPointer\n
      \              that pointed to the previous entry that was copied\n               part
      of this template\n      6) Store RowPointer of cloned entry as (previous) in
      order to\n         update the NEXT pointer with the next cloned entry.\n      7)
      Get the RowPointer of the next element in the template\n         as (current)\n
      \     8) If (current) RowPointer does not equal zeroDotZero go to 4\n      9)
      Logically \"unlock\" all the locked entries done by step 4).\n   If a configuration/template
      is activated via a means other than a\n   direct SNMP SET request, such as via
      the Policy-based Management MIB,\n   the handling of the activation and potential
      error response code must\n   be provided via that mechanism.  If a configuration/template
      is\n   activated using SNMP SET requests, an accurate error response value\n
      \  must be returned.  For example, if a configuration/template has\n   inconsistent
      values, the SNMP SET should return an error.  Whether\n   the configuration
      is already finished is not of direct importance,\n   since the SNMP SET response
      must be accurate.  On systems where the\n   activation may take a long time,
      a response may be given prior to\n   completion, but extra mechanisms must be
      provided to detect any\n   errors.\n"
    title: 6.1.  An Approach to Template Cloning
  - contents:
    - "6.2.  Example\n   This section provides an example of the process described
      in the\n   previous section.  This example will show a Differentiated Services\n
      \  capable incoming (ingress) interface that only counts the traffic\n   stream.
      \ Then, with the policy-based configuration concept as defined\n   in this document
      and in [PMMIBDR], a traffic marking configuration\n   will be applied.  The
      example will walk the reader through all of the\n   steps involved in this process.
      \ Again, the use of [PMMIBDR] is\n   simply an example and is not required.\n
      \     NOTE WELL:  For brevity and clarity, the example does not always\n      show
      the complete entry (row) of a table.  The only objects shown\n      are those
      needed for creating the row pointers to the next\n      functional datapath
      element or needed to provide information about\n      the specific parameters
      of the functional datapath elements.  The\n      column named 'INDEX' always
      defines the complete index as defined\n      for the associated entry.  In some
      cases, this is a combined index\n      of multiple components.  Therefore, the
      names of the columns are\n      omitted.\n      Also note that the values Assured
      Forwarding and Expedited\n      Forwarding are abstracted as DSCP(AF) and DSCP(EF)
      (respectively)\n      or simply as AF and EF.  For the actual values refer to
      [RFC3289].\n"
    - contents:
      - "6.2.1.  The Initial Situation\n   The initial configuration is the existing
        configuration of an ingress\n   interface.\n      +------------------------------------------------------------+\n
        \     |   ingress functional datapath                              |\n      |
        \                       +----------+                        |\n   -->|----------->----------->|
        count    |----------->----------->|-->\n      |                        +----------+
        \                       |\n      +------------------------------------------------------------+\n
        \  This figure depicts a simple traffic treatment functional datapath\n   for
        an ingress interface.  The functional datapath only consists of a\n   count
        action.\n   Within the DIFFSERV-MIB, this would be instantiated as follows.
        \ Note\n   that RowPointer objects must point to the first accessible columnar\n
        \  object in the conceptual row.  Thus, while perhaps more instructive\n   to
        use the index value for the RowPointer object's value (e.g.,\n   diffServCountActId.1)
        in the example, it would nonetheless be\n   incorrect, and the first accessible
        columnar object has been used as\n   should be done (e.g., diffServCountActOctets.1).\n
        \  diffServDataPathTable\n   +-----------------+-----------------------------+--\n
        \  | INDEX           | diffServDataPathStart       |\n   +-----------------+-----------------------------+--\n
        \  | ifIndex.ingress | diffServActionNext.1        |\n   +-----------------+-----------------------------+--\n
        \  diffServActionTable\n   +-------+--------------------+-------------------------+--\n
        \  | INDEX | diffServActionNext |diffServActionSpecific   |\n   +-------+--------------------+-------------------------+--\n
        \  | 1     | 0.0                |diffServCountActOctets.1 |\n   +-------+--------------------+-------------------------+--\n
        \  diffServCountActTable\n   +-------+------------------------+--\n   | INDEX
        | diffServCountActOctets |\n   +-------+------------------------+--\n   |
        1     |                        |\n   +-------+------------------------+--\n"
      title: 6.2.1.  The Initial Situation
    - contents:
      - "6.2.2.  The Configuration Template\n   The following provides an example
        of a policy configuration in which\n   traffic is classified by a specific
        IP filter, that results in two\n   classifiers (one for the IP filter and
        one for match all).  Both\n   streams are then metered, marked, and counted.
        \ This is an example of\n   usage on the edge (an ingress interface) of a
        Differentiated Services\n   domain that wants to have Expedited Forwarding
        and Assured Forwarding\n   marked traffic within the Differentiated Services
        domain.\n   +------------------------------------------------------------+\n
        \  |   ingress functional datapath                              |\n   |   +------------+
        \  +-------+   +---------+   +---------+   |\n   |   |            |   |       |
        \  | action: |   | action: |   |\n"
      - "-->|-->| classifier |-->| meter |-->| mark EF |-->| count   |-->|----->\n
        \  |   | match <IP> |   |       |   |         |   |         |   |\n   |   +------------+
        \  +-------+   +---------+   +---------+   |\n   |         |                 \\
        \                               |\n   |         |                  \\      +---------+
        \             |\n   |         |                   \\     | action: |              |routing\n
        \  |         |                    * -->| dropper |              |core\n   |
        \        |                   /     |         |              |\n   |         |
        \                 /      +---------+              |\n   |         V                 /
        \                               |\n   |   +------------+   +-------+   +---------+
        \  +---------+   |\n   |   |            |   |       |   | action: |   | action:
        |   |\n   |   | classifier |-->| meter |-->| mark AF |-->| count   |-->|----->\n
        \  |   | match all  |   |       |   |         |   |         |   |\n   |   +------------+
        \  +-------+   +---------+   +---------+   |\n   +------------------------------------------------------------+\n
        \  This figure depicts a policy configuration for ingress traffic\n   treatment
        in a Differentiated Services capable device.  The\n   configuration is represented
        as follows in the DIFFSERV-CONFIG-MIB\n   module and the DIFFSERV-MIB module.\n
        \  Note that the original (existing) traffic treatment described in\n   6.2.1
        is also in the tables.\n   Note also that in the diffServDscpMarkActTable,
        DSCP(EF) represents\n   the DSCP value for Expedited Forwarding and DSCP(AF)
        represents the\n   DSCP value for Assured Forwarding.\n diffServConfigTable
        (in the MIB module in this memo)\n +-------+-------------------------+---------------------------+--\n
        | INDEX | diffServConfigStart     | diffServConfigDescr       |\n +-------+-------------------------+---------------------------+--\n
        | \"foo\" | diffServClfrStorage.1   | Example traffic treatment |\n +-------+-------------------------+---------------------------+--\n
        diffServClfrTable\n +-------+---------------------+--------------------+\n
        | INDEX | diffServClfrStorage | diffServClfrStatus |\n +-------+---------------------+--------------------+\n
        | 1     |                     |                    |\n +-------+---------------------+--------------------+\n
        diffServClfrElementTable (shares index with diffServClfrTable)\n +-------+---------------------------+-------------------------------+--\n
        | INDEX | diffServClfrElementNext   | diffServClfrElementPrecedence |\n +-------+---------------------------+-------------------------------+--\n
        | 1.1   |diffServMeterSucceedNext.1 | 1                             |\n |
        1.2   |diffServMeterSucceedNext.2 | 2                             |\n +-------+---------------------------+-------------------------------+--\n
        diffServMeterTable\n +-------+--------------------------+-----------------------+--\n
        | INDEX | diffServMeterSucceedNext |diffServMeterFailNext  |\n +-------+--------------------------+-----------------------+--\n
        | 1     | diffServActionNext.2     | diffServAlgDropType.1 |\n | 2     | diffServActionNext.3
        \    | diffServAlgDropType.1 |\n +-------+--------------------------+-----------------------+--\n
        diffServActionTable\n +-------+----------------------+----------------------------+--\n
        | INDEX | diffServActionNext   | diffServActionSpecific     |\n +-------+----------------------+----------------------------+--\n
        | 1     | 0.0                  | diffServCountActOctets.1   |\n | 2     |
        diffServActionNext.4 | diffServDscpMarkActDscp.EF |\n | 3     | diffServActionNext.5
        | diffServDscpMarkActDscp.AF |\n | 4     | 0.0                  | diffServCountActOctets.2
        \  |\n | 5     | 0.0                  | diffServCountActOctets.3   |\n +-------+----------------------+----------------------------+--\n
        diffServCountActTable\n +-------+------------------------+--\n | INDEX | diffServCountActOctets
        |\n +-------+------------------------+--\n | 1     |                        |\n
        | 2     |                        |\n | 3     |                        |\n
        +-------+------------------------+--\n diffServAlgDropTable\n +-------+---------------------+-------------------------+--\n
        | INDEX | diffServAlgDropType | diffServAlgDropSpecific |\n +-------+---------------------+-------------------------+--\n
        | 1     | alwaysDrop(5)       | 0.0                     |\n +-------+---------------------+-------------------------+--\n
        diffServDscpMarkActTable\n +-------------------------+\n | diffServDscpMarkActDscp
        |\n +-------------------------+\n | DSCP(EF)                |\n | DSCP(AF)
        \               |\n +-------------------------+\n"
      title: 6.2.2.  The Configuration Template
    - contents:
      - "6.2.3.  Applying the Template\n   Now we have the original ingress interface
        configuration and the\n   policy configuration we want to apply to the actual
        interface.\n   The example policy must provide the required Differentiated
        Services\n   traffic treatment to all interfaces used by system administrators.\n
        \  The traffic treatment required is described in 6.2.2 above.\n   Therefore,
        we have the following example policy which is configured\n   via the POLICY-BASED-MANAGEMENT-MIB
        module (see [PMMIBDR]):\n   if ( roleMatch(\"Administrator\") )\n   then\n
        \     /*\n       * The $0 gets the \"element\" returned from the previous\n
        \      * statement.  the .1 at the end is the ingress interface\n       *
        This sets, for example, diffServDataPathStart.3.1 to be\n       * \"diffServConfigStart.3.f.o.o\"
        if interface 3 has the role\n       * \"Administrator\".\n       */\n      setVar(\"diffServDataPathStart.$0.1\",\n
        \             \"diffServConfigStart.3.f.o.o\", Oid)\n   For our purposes,
        we only apply this on the inbound (ingress)\n   direction of the interface.\n
        \  Note that although object descriptors are used in this PolicyScript\n   example,
        the object identifiers must be used in the running script.\n   For more information
        on policies and their syntax refer to [PMMIBDR].\n   The following tables
        in this section provide the cloned entries in\n   the tables of the DIFFSERV-MIB
        module.  All tables may have columns\n   that contain contents or administrative
        objects that are not shown.\n   These columns do not determine a function
        in the datapath and they\n   are not shown for clarity of the cloning mechanism.\n
        \  Note that the original (existing) traffic treatment of 6.2.1 and\n   6.2.2
        are also in the tables.\n"
      - 'diffServConfigTable

        '
      - '+-------+-------------------------+---------------------------+--

        '
      - '| INDEX | diffServConfigStart     | diffServConfigDescr       |

        '
      - '+-------+-------------------------+---------------------------+--

        '
      - '| "foo" | diffServClfrStorage.1   | Example traffic treatment |

        '
      - '+-------+-------------------------+---------------------------+--

        '
      - 'diffServDataPathTable

        '
      - '+-----------------+-----------------------------+--

        '
      - '| INDEX           | diffServDataPathStart       |

        '
      - '+-----------------+-----------------------------+--

        '
      - '| ifIndex.ingress | diffServActionNext.2        |

        '
      - '+-----------------+-----------------------------+--

        '
      - 'diffServClfrTable

        '
      - '+-------+---------------------+--------------------+

        '
      - '| INDEX | diffServClfrStorage | diffServClfrStatus |

        '
      - '+-------+---------------------+--------------------+

        '
      - '| 1     |                     |                    |

        '
      - '| 2     |                     |                    |

        '
      - '+-------+---------------------+--------------------+

        '
      - 'diffServClfrElementTable

        '
      - '+-------+----------------------------+-------------------------------+--

        '
      - '| INDEX | diffServClfrElementNext    | diffServClfrElementPrecedence |

        '
      - '+-------+----------------------------+-------------------------------+--

        '
      - '| 1.1   | diffServMeterSucceedNext.1 | 1                             |

        '
      - '| 1.2   | diffServMeterSucceedNext.2 | 2                             |

        '
      - '| 2.3   | diffServMeterSucceedNext.3 | 1                             |

        '
      - '| 2.4   | diffServMeterSucceedNext.4 | 2                             |

        '
      - '+-------+----------------------------+-------------------------------+--

        '
      - 'diffServMeterTable

        '
      - '+-------+--------------------------+-----------------------+--

        '
      - '| INDEX | diffServMeterSucceedNext | diffServMeterFailNext |

        '
      - '+-------+--------------------------+-----------------------+--

        '
      - '| 1     | diffServActionNext.2     | diffServAlgDropType.1 |

        '
      - '| 2     | diffServActionNext.3     | diffServAlgDropType.1 |

        '
      - '| 3     | diffServActionNext.6     | diffServAlgDropType.2 |

        '
      - '| 4     | diffServActionNext.7     | diffServAlgDropType.2 |

        '
      - '+-------+--------------------------+-----------------------+--

        '
      - 'diffServActionTable

        '
      - '+-------+----------------------+----------------------------+--

        '
      - '| INDEX | diffServActionNext   | diffServActionSpecific     |

        '
      - '+-------+----------------------+----------------------------+--

        '
      - '| 1     | 0.0                  | diffServCountActOctets.1   |

        '
      - '| 2     | diffServActionNext.4 | diffServDscpMarkActDscp.EF |

        '
      - '| 3     | diffServActionNext.5 | diffServDscpMarkActDscp.AF |

        '
      - '| 4     | 0.0                  | diffServCountActOctets.2   |

        '
      - '| 5     | 0.0                  | diffServCountActOctets.3   |

        '
      - '| 6     | diffServActionNext.8 | diffServDscpMarkActDscp.EF |

        '
      - '| 7     | diffServActionNext.9 | diffServDscpMarkActDscp.AF |

        '
      - '| 8     | 0.0                  | diffServCountActOctets.4   |

        '
      - '| 9     | 0.0                  | diffServCountActOctets.5   |

        '
      - '+-------+----------------------+----------------------------+--

        '
      - 'diffServCountActTable

        '
      - '+-------+------------------------+--

        '
      - '| INDEX | diffServActCountOctets |

        '
      - '+-------+------------------------+--

        '
      - '| 1     |                        |

        '
      - '| 2     |                        |

        '
      - '| 3     |                        |

        '
      - '| 4     |                        |

        '
      - '| 5     |                        |

        '
      - '+-------+------------------------+--

        '
      - 'diffServAlgDropTable

        '
      - '+-------+---------------------+-------------------------+--

        '
      - '| INDEX | diffServAlgDropType | diffServAlgDropSpecific |

        '
      - '+-------+---------------------+-------------------------+--

        '
      - '| 1     | alwaysDrop(5)       | 0.0                     |

        '
      - '+-------+---------------------+-------------------------+--

        '
      - 'diffServDscpMarkActTable

        '
      - '+-------------------------+

        '
      - '| diffServDscpMarkActDscp |

        '
      - '+-------------------------+

        '
      - '| DSCP(EF)                |

        '
      - '| DSCP(AF)                |

        '
      - "+-------------------------+\n   As one can see in the example, the main elements
        from which a\n   functional datapath is constructed are duplicated/copied/cloned.\n
        \  That process is needed in order to preserve the policy configuration\n
        \  for reuse at a later time.\n   It is up to the SNMP agent to keep track
        of which network interfaces\n   are under policy control and which policy
        rules are being used.  This\n   avoids duplication of policy enforcement.
        \ How the agent does this is\n   an implementation issue.\n   One can see
        that the old functional datapath configurations stay in\n   the MIB module
        tables.  It is up to the SNMP agent implementation to\n   decide whether to
        delete stale entries or keep them.  Garbage\n   collection of stale entries
        is an implementation issue.\n"
      title: 6.2.3.  Applying the Template
    - contents:
      - "6.2.4.  Applying the Template Using SNMP Messages\n   In this section, the
        above example is explained by using SNMP\n   communication between the SNMP
        \"manager\" and the SNMP \"agent\".\n   In order to apply the template to
        all interfaces that have a role\n   match of \"Administrator,\" the SNMP manager
        must have a list of the\n   roles of the interface.  This means the SNMP manager
        must do an\n   SNMP-SET for all those interfaces.  This is expressed in the\n
        \  following pseudo code function.\n   set_template_if_administrator_interface(\n
        \           <interface_list>, <template_name>\n   ) {\n      template_oid
        = SNMP-GET(\"diffServConfigStart.<template_name>\");\n      foreach interface
        (<ifRole_list>) {\n         if (interface.role == \"Administrator\") {\n            SNMP-SET(\"diffServDataPathStart.$interface.1\",\n
        \                 Oid, template_oid);\n         }\n      }\n   }\n   For example,
        on a system with 3 interfaces, the following list would\n   be known to the
        manager.  The first value indicates the interface\n   number (ifIndex) and
        the second value is its role.\n   interface_list IF_LIST = {\n       { 1,
        ... , \"Administrator\", ... },\n       { 2, ... , \"User\", ... },\n       {
        3, ... , \"Administrator\", ... } }\n   This will result in the communication
        between a manager and agent of\n   1 SNMP-GET and 2 SNMP-SETs:\n   -  SNMP-GET(\"diffServConfigStart.3.f.o.o\")\n
        \  -  SNMP-SET(\"diffServDataPathStart.1.1\", Oid, \"diffServActionNext.1\")\n
        \  -  SNMP-SET(\"diffServDataPathStart.3.1\", Oid, \"diffServActionNext.1\")\n"
      title: 6.2.4.  Applying the Template Using SNMP Messages
    title: 6.2.  Example
  title: 6.  Template Cloning
- contents:
  - '7.  Managed Objects Definitions (MIB Module)

    '
  - "DIFFSERV-CONFIG-MIB DEFINITIONS ::= BEGIN\n    IMPORTS\n    OBJECT-TYPE, MODULE-IDENTITY,\n
    \   zeroDotZero, mib-2            FROM SNMPv2-SMI          -- [RFC2578]\n    RowStatus,
    StorageType,\n    RowPointer, DateAndTime       FROM SNMPv2-TC           -- [RFC2579]\n
    \   MODULE-COMPLIANCE,\n    OBJECT-GROUP                  FROM SNMPv2-CONF         --
    [RFC2580]\n    SnmpAdminString               FROM SNMP-FRAMEWORK-MIB; -- [RFC3411]\n"
  - "diffServConfigMib MODULE-IDENTITY\n    LAST-UPDATED \"200401220000Z\" -- 22 January
    2004\n    ORGANIZATION \"SNMPCONF WG\"\n    CONTACT-INFO\n       \"SNMPCONF Working
    Group\n        http://www.ietf.org/html.charters/snmpconf-charter.html\n        WG
    mailing list: snmpconf@snmp.com\n        Editors:\n        Harrie Hazewinkel\n
    \       I.Net\n        via Darwin 85\n        20019 - Settimo Milanese (MI)\n
    \       Italy\n        EMail: harrie@inet.it\n        David Partain\n        Ericsson
    AB\n        P.O. Box 1248\n        SE-581 12 Linkoping\n        Sweden\n        E-mail:
    David.Partain@ericsson.com\"\n    DESCRIPTION\n        \"This MIB module contains
    differentiated services\n        specific managed objects to perform higher-level\n
    \       configuration management.  This MIB allows policies\n        to use 'templates'
    to instantiate Differentiated\n        Services functional datapath configurations
    to\n        be assigned (associated with an interface and\n        direction)
    when a policy is activated.\n        Copyright (C) The Internet Society (2004).
    \ This version\n        of this MIB module is part of RFC 3747;  see the RFC\n
    \       itself for full legal notices.\"\n    REVISION \"200401220000Z\" -- 22
    January 2004\n    DESCRIPTION\n        \"Initial version published as RFC 3747\"\n
    \   ::= { mib-2 108 }\n"
  - 'diffServConfigMIBObjects OBJECT IDENTIFIER ::= { diffServConfigMib 1 }

    '
  - "diffServConfigMIBConformance OBJECT IDENTIFIER ::=\n                                               {
    diffServConfigMib 2 }\n"
  - '--

    '
  - '-- The Differentiated Services configuration objects

    '
  - '--

    '
  - "diffServConfigTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF DiffServConfigEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"A
    table which defines the various per-hop-behaviors\n       for which the system
    has default 'templates'.\"\n    ::= { diffServConfigMIBObjects 2 }\n"
  - "diffServConfigEntry OBJECT-TYPE\n    SYNTAX       DiffServConfigEntry\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"An entry
    defining a per-hop-behavior.  Each entry in\n       this table combines the various
    parameters (entries)\n       into a specific per-hop-behavior.  Entries in this\n
    \      table might be defined by a vendor (pre-configured)\n       or defined
    by a management application.\"\n    INDEX { diffServConfigId }\n    ::= { diffServConfigTable
    1 }\n"
  - "DiffServConfigEntry ::= SEQUENCE {\n    diffServConfigId           SnmpAdminString,\n
    \   diffServConfigDescr        SnmpAdminString,\n    diffServConfigOwner        SnmpAdminString,\n
    \   diffServConfigLastChange   DateAndTime,\n    diffServConfigStart        RowPointer,\n
    \   diffServConfigStorage      StorageType,\n    diffServConfigStatus       RowStatus\n"
  - '}

    '
  - "diffServConfigId OBJECT-TYPE\n    SYNTAX         SnmpAdminString (SIZE(1..116))\n
    \   MAX-ACCESS     not-accessible\n    STATUS         current\n    DESCRIPTION\n
    \     \"A unique id for the per-hop-behavior policy for at\n       least the SNMP
    agent.  For ease of administration the\n       value may be unique within an administrative
    domain,\n       but this is not required.\n       The range of up to 116 octets
    is chosen to stay within\n       the SMI limit of 128 sub-identifiers in an object\n
    \      identifier.\"\n    ::= { diffServConfigEntry 1 }\n"
  - "diffServConfigDescr OBJECT-TYPE\n    SYNTAX         SnmpAdminString\n    MAX-ACCESS
    \    read-create\n    STATUS         current\n    DESCRIPTION\n       \"A human-readable
    description to identify this defined\n       per-hop-behavior.  Note that this
    is an SnmpAdminString,\n       which permits UTF-8 strings.  An administratively
    assigned\n       identifier for a template that would be unique within\n       an
    administrative domain.  It is up to the management\n       applications to agree
    how these are assigned within the\n       administrative domain.  Once a description,
    such as\n       'EF' is assigned, that has a certain set of parameters\n       that
    achieve 'EF' from box to box. Management\n       application code or script code
    can then scan\n       the table to find the proper template and then\n       assign
    it.\"\n    ::= { diffServConfigEntry 2 }\n"
  - "diffServConfigOwner OBJECT-TYPE\n    SYNTAX         SnmpAdminString\n    MAX-ACCESS
    \    read-create\n    STATUS         current\n    DESCRIPTION\n       \"The owner
    who created this entry.\"\n    ::= { diffServConfigEntry 3 }\n"
  - "diffServConfigLastChange OBJECT-TYPE\n    SYNTAX         DateAndTime\n    MAX-ACCESS
    \    read-only\n    STATUS         current\n    DESCRIPTION\n       \"The date
    and time when this entry was last changed.\"\n    ::= { diffServConfigEntry 4
    }\n"
  - "diffServConfigStart OBJECT-TYPE\n    SYNTAX         RowPointer\n    MAX-ACCESS
    \    read-create\n    STATUS         current\n    DESCRIPTION\n       \"The pointer
    to a functional datapath configuration template as\n       set up in the DIFFSERV-MIB.
    \ This RowPointer should\n       point to an instance of one of:\n         diffServClfrEntry\n
    \        diffServMeterEntry\n         diffServActionEntry\n         diffServAlgDropEntry\n
    \        diffServQEntry\n       A value of zeroDotZero in this attribute indicates
    no\n       further Diffserv treatment is performed on traffic of\n       this
    functional datapath.  This also means that the\n       template described by this
    row is not defined.\n       If the row pointed to does not exist, the treatment\n
    \      is as if this attribute contains a value of zeroDotZero.\"\n    REFERENCE\n
    \      \"Differentiated Services MIB module\"\n    DEFVAL { zeroDotZero }\n    ::=
    { diffServConfigEntry 5 }\n"
  - "diffServConfigStorage OBJECT-TYPE\n    SYNTAX         StorageType\n    MAX-ACCESS
    \    read-create\n    STATUS         current\n    DESCRIPTION\n       \"The type
    of storage used for this row.\n       Since an entry in this table serves as a
    starting\n       point for a configuration, it is recommended that\n       all
    entries comprising the configuration started by\n       diffServConfigStart follow
    the storage type of this\n       entry.  Otherwise, after agent reboots a configuration\n
    \      may differ.  It may very well be that the agent is\n       not capable
    of detecting such changes and therefore,\n       the management application should
    verify the correct\n       configuration after a reboot.  Rows with a StorageType\n
    \      of 'permanent' do not need to allow write access to\n       any of the
    columnar objects in that row.\"\n    DEFVAL { nonVolatile }\n    ::= { diffServConfigEntry
    6 }\n"
  - "diffServConfigStatus OBJECT-TYPE\n    SYNTAX         RowStatus\n    MAX-ACCESS
    \    read-create\n    STATUS         current\n    DESCRIPTION\n       \"RowStatus
    object used for creation and deletion of\n       rows in this table.  All writable
    objects in this row\n       may be modified at any time.\"\n    DEFVAL { notInService
    }\n    ::= { diffServConfigEntry 7 }\n"
  - '--

    '
  - '-- MIB Compliance statements.

    '
  - '--

    '
  - "diffServConfigMIBCompliances\n   OBJECT IDENTIFIER ::= { diffServConfigMIBConformance
    1 }\n"
  - "diffServConfigMIBGroups\n   OBJECT IDENTIFIER ::= { diffServConfigMIBConformance
    2 }\n"
  - "diffServConfigMIBFullCompliance MODULE-COMPLIANCE\n    STATUS       current\n
    \   DESCRIPTION\n       \"The full compliance for this MIB module.\n       For
    this compliance level the 'diffServMIBFullCompliance'\n       must be met, since
    this MIB module depends on it in order\n       to provide the configuration entries.\n
    \      \"\n    MODULE  -- This module\n    MANDATORY-GROUPS {  diffServConfigMIBConfigGroup
    }\n    OBJECT diffServConfigStatus\n    SYNTAX RowStatus { active(1) }\n    WRITE-SYNTAX
    RowStatus { createAndGo(4), destroy(6) }\n    DESCRIPTION\n       \"Support for
    createAndWait and notInService is not required.\"\n    ::= { diffServConfigMIBCompliances
    1 }\n"
  - "diffServConfigMIBConfigGroup OBJECT-GROUP\n    OBJECTS {  diffServConfigDescr,\n
    \              diffServConfigOwner,\n               diffServConfigLastChange,\n
    \              diffServConfigStart,\n               diffServConfigStorage,\n               diffServConfigStatus\n
    \   }\n    STATUS current\n    DESCRIPTION\n       \"The per-hop-behavior Group
    defines the MIB objects that\n       describe the configuration template for the
    per-hop-behavior.\"\n    ::= { diffServConfigMIBGroups 1 }\n"
  - 'END

    '
  title: 7.  Managed Objects Definitions (MIB Module)
- contents:
  - "8.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection can have a negative effect on\n   network operations.
    \ These managed objects are:\n   -  The diffServConfigDescr, diffServConfigOwner,
    and\n      diffServConfigStatus are not security sensitive since these three\n
    \     objects do not affect any direct operational behavior of a\n      diffserv
    capable device.\n   -  Unauthorized change of the diffServConfigStart could lead
    to a\n      different configuration, and the 'changed' configuration could\n      lead
    to different traffic treatment for the diffserv capable\n      device than desired.\n
    \  -  Unauthorized change of the diffServConfigStorage could lead to\n      unknown
    behavior of the diffserv capable device after a reboot of\n      the SNMP agent.
    \ This may be caused by 'not having saved changes\n      of the configuration'
    or unavailable configurations.\n   In addition, the managed objects of the DIFFSERV-MIB
    are also\n   security sensitive, since unauthorized changes may cause\n   configuration
    changes.  For more detail, refer to [RFC3289].\n   Allowing read access to objects
    in this MIB module is generally not\n   considered sensitive, as read access only
    provides information that a\n   template exists.  This is due to the fact that
    the managed objects\n   that actually instantiate the template are in the DIFFSERV-MIB\n
    \  [RFC3289].  However, in environments where the template description\n   (diffServConfigDescr)
    or owner (diffServConfigOwner) is considered\n   sensitive information, appropriate
    access control should be exercised\n   for these objects.\n   SNMP versions prior
    to SNMPv3 did not include adequate security.\n   Even if the network itself is
    secure (for example by using IPSec),\n   there is no control as to who on the
    secure network is allowed to\n   access and GET/SET (read/change/create/delete)
    the objects in this\n   MIB module.\n   It is RECOMMENDED that implementers consider
    the security features as\n   provided by the SNMPv3 framework (see [RFC3410],
    section 8),\n   including full support for the SNMPv3 cryptographic mechanisms
    (for\n   authentication and privacy).\n   Further, deployment of SNMP versions
    prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, deployment of SNMPv3 with cryptographic\n
    \  security enabled is RECOMMENDED.  It is then a customer/operator\n   responsibility
    to ensure that the SNMP entity giving access to an\n   instance of this MIB module
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to GET or SET (change/create/delete) them.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Acknowledgments\n   The editors gratefully acknowledge the significant contributions
    to\n   this work made by several members of both the SNMPCONF and DiffServ\n   working
    groups.\n"
  title: 9.  Acknowledgments
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2578] McCloghrie, K., Perkins, D. and J.
      Schoenwaelder,\n             \"Structure of Management Information Version 2
      (SMIv2)\",\n             STD 58, RFC 2578, April 1999.\n   [RFC2579] McCloghrie,
      K., Perkins, D. and J. Schoenwaelder, \"Textual\n             Conventions for
      SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580] McCloghrie, K., Perkins,
      D. and J. Schoenwaelder,\n             \"Conformance Statements for SMIv2\",
      STD 58, RFC 2580, April\n             1999.\n   [RFC3289] Baker, F., Chan, K.
      and A. Smith, \"Management Information\n             Base for the Differentiated
      Services Architecture\", RFC\n             3289, May 2002.\n   [RFC3411] Harrington,
      D., Presuhn, R. and B. Wijnen, \"An Architecture\n             for Describing
      Simple Network Management Protocol (SNMP)\n             Management Frameworks\",
      STD 62, RFC 3411, December 2002.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3410] Case, J., Mundy, R., Partain, D.
      and B. Stewart,\n             \"Introduction and Applicability Statements for
      Internet-\n             Standard Management Framework\", RFC 3410, December
      2002.\n   [RFC2474] Nichols, K., Blake, S., Baker, F. and D. Black, \"Definition\n
      \            of the Differentiated Services Field (DS Field) in the IPv4\n             and
      IPv6 Headers\", RFC 2474, December 1998.\n   [RFC2475] Blake, S., Black, D.,
      Carlson, M., Davies, E., Wang, Z. and\n             W. Weiss, \"An Architecture
      for Differentiated Services\",\n             RFC 2475, December 1998.\n   [RFC3512]
      MacFaden, M., Partain, D., Saperia, J. and W. Tackabury,\n             \"Configuring
      Networks and Devices with Simple Network\n             Management Protocol (SNMP)\",
      RFC 3512, April 2003.\n   [PMMIBDR] Waldbusser, S., Saperia, J. and T. Hongal,
      \"Policy-based\n             Management MIB\", Work in Progress.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "11.  Editors' Addresses\n   Harrie Hazewinkel\n   I.Net\n   via Darwin 85\n   20019
    - Settimo Milanese (MI)\n   Italy\n   EMail: harrie@inet.it\n   David Partain\n
    \  Ericsson AB\n   P.O. Box 1248\n   SE-581 12 Linkoping\n   Sweden\n   EMail:
    David.Partain@ericsson.com\n"
  title: 11.  Editors' Addresses
- contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).
    \ This document is subject\n   to the rights, licenses and restrictions contained
    in BCP 78 and\n   except as set forth therein, the authors retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: 12.  Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
