Abstract This document describes an Internet Registry Information Service (IRIS)
registry schema for registered DNS information.
The schema extends the necessary query and result operations of IRIS to provide the functional information service needs for syntaxes and results used by domain registries and registrars.
This document describes an IRIS registry schema for Internet domain registries using an XML Schema [4] derived from and using the IRIS [5] schema.
The query and result types outlined in this document are based on the functional requirements described in CRISP [17].
The schema given is this document is specified by using the Extensible Markup Language (XML) 1.0, as described in XML [1]; XML Schema notation, as described in XML SD [3] and XML SS [4]; and XML Namespaces, as described in XML NS [2].
Examples of client/server XML exchanges with this registry type are available in Appendix A. 2.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 [10].
Schema Description IRIS requires the derivation of both query and result elements by a registry schema.
References to XML elements without a namespace qualifier are from the schema defined in Section 4.
References to elements and attributes with the "iris" XML namespace qualifier are from the schema defined in IRIS [5].
The descriptions contained within this section refer to XML elements and attributes and their relation to the exchange of data within the protocol.
These descriptions also contain specifications outside the scope of the formal XML syntax.
This section will use terms defined by RFC 2119 [10] to describe these.
While reading this section, please reference Section 4 for needed details on the formal XML syntax.
Query <findRegistrarsByName> searches for a registration authority designated as a registrar for the registry of the server.
If present, the <baseDomain> element MUST restrict the results of the search to registrars capable of registering subdomains in the domain signified by the content of this element.
The <namePart> element restricts the scope of the query with its child elements.
> element specifies the beginning of the registrar's name.
The <endsWith> element specifies the end of the registrar's name.
The <exactMatch> element specifies equivalence to the registrar's name.
If the <namePart> element is not present, the query MUST return all registrars applicable (i.e., in consideration of <baseDomain>).
This query MUST return a result set of zero or more <registrationAuthority> elements.
Query <findDomainsByContact> finds domains by searches on fields associated with a domain's contact.
A search constraint of <baseDomain> MUST restrict the results to domains underneath the domain specified by its content, if it is present.
The allowable search fields are handled with either the <contactHandle> element or one of the elements in the "contactSearchGroup" (see Section 3.1.7).
The <contactHandle> element allows the domains to be selected based on the contact having the specified contact handle.
The query MAY also be constrained further by using the optional <role> element.
The contents of this element signify the role the contact has with the domain.
This query also provides optional <language> elements containing language tags.
Clients MAY use these elements to hint about the natural language(s) of the affected element.
Servers MAY use this information in processing the query, such as in tailoring normalization routines to aid in more effective searches.
The <findDomainsByName> query finds domains by the name of a domain as it is known in DNS.
> element restricts the scope of the query with its child elements.
> element specifies the beginning of the domain name.
The <endsWith> element specifies the end of the domain name.
This query differs from the <findDomainsByName> query by allowing the scope of the query to take internationalized domain names into consideration.
This query will return the union of the desired domain and any associated variants, therefore differing from a lookup in the "idn" entity class (Section 3.4) (which only returns the domain or no results).
The <namePart> element restricts the scope of the query with its child element.
> element, is designed to contain IDNs and not ACE labels, and thus MUST match only against equivalent IDNs, according to the notion of equivalence defined in RFC 3490 [14].
This query also provides optional <language> elements containing language tags.
Clients MAY use these elements to hint about the natural language(s) of the affected element.
Servers MAY use this information in processing the query, such as in tailoring normalization routines to aid in more effective searches.
<findContacts> Query <findContacts> searches for contacts given search constraints.
The allowable search fields are handled by one of the elements in the "contactSearchGroup" (see Section 3.1.7).
This query also provides optional <language> elements containing language tags.
Clients MAY use these elements to hint about the natural language(s) of the affected element.
Servers MAY use this information in processing the query, such as in tailoring normalization routines to aid in more effective searches.
This query does a simple search for the domains being hosted by a name server.
The search is constrained by using either the host name [12], host handle, IPv4 address, or IPv6 address of the name server.
Some of the queries above have similar query constraints for searching on contacts.
This section describes those common parameters.
> allows the query to be constrained based on the common name of the contact.
The constraint can constrain the query either by an exact match using the <exactMatch> element, or by a subset of the common name using the <beginsWith> and <endsWith> elements.
<organization> allows the query to be constrained based on the organization name of the contact.
It has the same semantics as the <commonName> element.
> constrains the query based on the e mail address of the contact.
This may be done by an exact e mail address using the <exactMatch
> element or by any e mail address in a domain using the <inDomain> element.
If either the contents of the <inDomain> element or the domain part of the contents of the <exactMatch> element contain a name with non ASCII characters, they MUST be normalized according to the processes of RFC 3491 [15].
The <city>, <region>, and <postalCode> elements restrict the scope of the query based on the city, region, or postal code of the contact, respectively.
Each must only contain an <exactMatch> element containing the exact city, region, or postal code (i.e., no substring searches).
Privacy Labels Several of the results in this registry type have values that cannot be given but must be specified as present or must be flagged so that clients do not divulge them.
In order to achieve this, some of the results use the following element types:
"dateTimePrivacyType"   contains the XML Schema [3] data type "dateTime".
The contents of this element MUST be specified by using the 'Z' indicator for Coordinated Universal Time (UTC).
"stringPrivacyType"   contains the XML Schema [3] data type "string".
"normalizedStringPrivacyType"   contains the XML Schema [3] data type "normalizedString".
"tokenPrivacyType"   contains the XML Schema [3] data type "token".
"domainStatusType"   contains the optional element of <appliedDate>, indicating the date and time when the status was applied, and the optional element of <description> with the required attribute 'language', indicating a description of the status.
This element also has the optional attribute 'scope', indicating the scope or origin of the status value.
"contactTypeType"   contains optional <description> child elements.
Each <description> child element requires a 'language' attribute.
As specified, these elements can have nil values and therefore may be present with empty content or present with their specified content.
The use of these elements is also optional.
If present without content, each of these element types MUST have one or more of the following boolean attributes:  'private'
If true, this specifies that the content is absent because it may never be published.
If true, this specifies that the content is absent because policy does not allow it to be given at the current level of access.
If present with content, each of these element types MAY have one or more of the following boolean attributes:  'doNotRedistribute'
If true, this specifies that the content is not to be redistributed.
If true, this specifies that the content has been provided due to special access rights.
These boolean attributes SHOULD be used in accordance with the level of access granted to the recipient of the data.
For example, marking data as 'private' or 'denied' is to be expected if the user is anonymous or has some other low level of access that does not warrant viewing that particular data.
Likewise, data marked with 'doNotRedistribute' or 'specialAccess'
is to be expected if the user is authenticated and has a high level of access.
An example of a <domain> result: <
domain authority "iana.org" registryType "dreg1" entityClass "domain handle" entityName "example com 1"> <
<nameServer iris:referentType "host" authority "iana.org" registryType
"dreg1" entityClass "host handle" entityName "research7" /
> <nameServer iris:referentType "host" authority "iana.org" registryType
registry iris:referentType "registrationAuthority" authority "com" registryType "dreg1" entityClass "contact handle" entityName "VGRS" /
> The <domain> result represents an instance of a domain assignment.
The children of the <domain> element are as follows:  <domainName
the full name of the domain as it is in DNS.
The contents of this element MUST be a domain name as specified by RFC 1035 [9].
the name of the domain in nameprep form, if applicable.
a registry unique assigned identifier for a domain.
MUST contain an entity reference to a referent of type <host> (Section 3.2.3).
>   contains an entity reference to the registrant of this domain.
The referent MUST be a <contact> result (Section 3.2.4).
Domain contacts   the following elements contain an entity reference with a relationship to the domain.
The referent of each MUST be a <contact> (Section 3.2.4).
This may contain at least one of the following elements of type 'domainStatusType' (see Section 3.2.1), but none of these elements may appear more than once.
>   registration assigned but delegation inactive
<transferPending>   change of authority pending
contains an entity reference, the referent of which MUST be a <domain> (Section 3.2.2).
>   contains an entity reference, the referent of which MUST be a <domain> (Section 3.2.2).
This element is intended to point to the downstream registration reference.
Therefore, if this is a result given back by a domain registry, it should point to the domain in the domain registrar or registrant service.
contains an entity reference specifying the domain registry operator for this domain, which MUST be a <registrationAuthority
This element has an optional boolean 'hosting' attribute.
When the value of this attribute is positive, it indicates that the registry is responsible for authoritatively answering DNS queries for this domain.
>   contains an entity reference specifying the domain registrar operator for this domain, which MUST be a <registrationAuthority
This element has an optional boolean 'hosting' attribute.
When the value of this attribute is positive, it indicates that the registrar is responsible for authoratively answering DNS queries for this domain.
contains the date and time of the initial delegation of this domain.
contains the date and time of last renewal of this domain.
contains the date and time of the expiration of this domain.
>   specifies the last time a contact for the domain was added or removed.
The referent MUST be a <contact> (Section 3.2.4) responsible for the last addition or removal of a contact for this domain.
>   contains the date and time of the last time one of the nameservers was added or removed for the delegation of this domain.
The referent MUST be a <contact> result (Section 3.2.4) and MUST be responsible for the last addition or removal of a nameserver for this domain.
contains the date and time of the last time
the data for this domain was verified by the responsible registration authority.
>   contains an entity reference specifying a referent indirectly associated with this domain.
An example of a <host> result: <host authority "iana.org" registryType
The <host> element represents an instance of a host registration.
The children of the <host> element are as follows:  <hostHandle
a registry unique assigned identifier for the host.
<hostName>   the fully qualified domain name of the host.
The contents of this element are a domain name and MUST conform to RFC 1035 [9].
the content of this MUST conform to the a valid IP version 4 host address, as specified by RFC 791 [8].
the content of this MUST conform to the a valid IP version 6 host address, as specified by RFC 3513 [7].
contains an entity reference specifying a contact associated with this host.
The referent MUST be <contact
contains the date and time when this host was created.
contains the date and time when this host was last modified.
contains the date and time when this data for this host was last verified to be correct by the appropriate registration authority.
>   contains an entity reference specifying a referent indirectly associated with this host.
An example of a <contact> result: <
> <address>4676 Admiralty Way, Suite 330</address> <city>Marina del Rey</city
The <contact> element represents an instance of a contact registration.
The children of the <contact> element are as follows:  <contactHandle
a registry unique assigned identifier for this contact.
the name of the contact.
a specification of the language code to use to localize the data in this result.
contains one of the following child elements: <person>, <organization>, <role>, or <other
Each of these elements is a "contactTypeType" as defined in Section 3.2.1.
contains the organization name of the contact.
>   contains an e mail address for this contact.
contains an e mail address within an internationalized domain name [14].
>   contains a SIP URI for this contact.
contains children representing a postal address.
>   contains the street address for this contact.
contains the city for this contact.
>   contains the national region for this contact.
contains the postal code for this contact.
contains the country for this contact.
This SHOULD be a two letter country code compliant with ISO 3166 [11].
>   contains a voice phone number for this contact.
The format number defined in E164 [13] is RECOMMENDED.
>   contains a facsimile phone number for this contact.
The format number defined in E164 [13] is RECOMMENDED.
contains the date and time when this contact was created.
contains the date and time when this contact was last modified.
contains the date and time when this data for this contact was last verified to be correct by the appropriate registration authority.
contains an entity reference specifying equivalents of this contact that have been translated into other languages.
The referent MUST be <contact> results (Section 3.2.4).
>   contains an entity reference specifying a referent indirectly associated with this contact.
An example of a <registrationAuthority> result: <registrationAuthority authority "iana.org" registryType "dreg1" entityClass "registration authority
serviceIdentification" authority "iana.org" registryType "dreg1" entityClass "iris"
Internet Assigned Numbers Authority </organizationName
The <registrationAuthority> result represents an entity capable of registering domains.
The <serviceInstance> child element of <registrationAuthority> contains an entity reference pointing to the entity
"id" in the entity class "iris".
The authority areas found in the referent MUST be domains for which a given registration authority has control.
The <organizationName> child element contains the name of the registration authority.
The registration authority type child elements <registry
determine the role this registration authority plays in the process of registering domains.
This element is intended to explain the various roles a registration authority may have in the authority areas pointed to by the <serviceInstance> element.
A client MAY understand the relationship of a registration authority with respect to a domain by the placement of the reference in the domain (e.g., <registry> or <registrar>).
The <domain> child elements each contain one domain name signifying the domains for which this registration authority may register sub  domains.
Servers MAY use the <searchTooWide> error code when a query must be narrowed to yield a result set acceptable under the policies of the server operator.
The queries <findDomainsByRegistrant>, <findDomainsByIDNName>, and <findContacts> support optional language tags that allow a client to suggest to a server the languages in which to scope the queries.
If a client passes to the server a language that the server does not support, the server MAY use this error code to indicate that one of the languages is not supported.
This element contains child elements named <unsupportedLanguage>.
Each of these child elements specifies a language not supported by the server.
When a server returns this error, it MUST give the languages from the query which are not supported.
The following types of entity classes are recognized by the <lookupEntity> query of IRIS for this registry:  host name
The fully qualified domain name of a nameserver.
It yields a <host> (Section 3.2.3) in the response.
The registry unique identifier given a nameserver.
It yields a <host> (Section 3.2.3) in the response.
The fully qualified name of a domain.
This a domain name as specified by RFC 1035
It yields a <domain> (Section 3.2.2) in the response.
The fully qualified name of a domain in nameprep form (see RFC 3491 [15]).
It yields a <domain> (Section 3.2.2) in the response.
The registry unique identifier given a domain.
It yields a <domain> (Section 3.2.2) in the response.
The registry unique identifier given a contact.
It yields a <contact> (Section 3.2.4) in the response.
The IPv4 address of a nameserver.
It yields a <host> (Section 3.2.3) in the response.
The IPv6 address of a nameserver.
It yields a <host> (Section 3.2.3) in the response.
The name of a registration authority.
It yields a <registrationAuthority> (Section 3.2.5) in the response.
All names in these entity classes are case insensitive.
This registry schema is specified in the XML Schema notation.
The formal syntax presented here is a complete schema representation suitable for automated validation of an XML instance when combined with the formal schema syntax of IRIS.
<schema xmlns "http://www.w3.org/2001/XMLSchema" xmlns:dreg "urn:ietf:params:xml:ns:dreg1" xmlns:iris "urn:ietf:params:xml:ns:
Domain registry schema derived from IRIS schema </documentation> </annotation> <!
<element ref "dreg:baseDomain" minOccurs "0" maxOccurs "1
<element ref "dreg:baseDomain" minOccurs "0" maxOccurs "1" /
> </element> <element name "language" type "language" minOccurs "0" maxOccurs "
<element name "findDomainsByName" type "dreg:findDomainsByNameType
<complexType name "findDomainsByIDNType"> <complexContent> <extension base "iris:queryType"> <sequence>
<element name "namePart" type "dreg:
<complexType name "findContactsType"> <complexContent> <extension base "iris:queryType"> <sequence>
<element ref "dreg:baseDomain" minOccurs "0" maxOccurs "1" /
<element name "hostName" type "dreg:
<element name "ipV4Address" type "dreg:
<element name "findDomainsByHost" type "dreg:findDomainsByHostType
<element name "commonName" type "dreg:
> <element name "city" type "dreg:exactMatchParameter" />
<element name "region" type "dreg:
> </group> <complexType name "
<complexType name "exactMatchParameter"> <group ref "dreg:exactMatchGroup" /
<element name "baseDomain" type "normalizedString" />
<element name "beginsWith"> <simpleType> <restriction base "token"> <minLength value "1"/
> </element> <element minOccurs "0" name "endsWith"> <simpleType> <restriction base "token"> <minLength value "1"/
> </sequence> <element name "endsWith"> <simpleType> <restriction base "token"> <minLength value "
"> <sequence> <element name "exactMatch" type "normalizedString" /
> <element name "nameServer" type "iris:entityType" minOccurs "
<element name "administrativeContact" type "iris:
<element name "legalContact" type "iris:
<element name "lastContactModificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
<element name "lastContactModificationBy" type "iris:
> <complexType> <all> <element name "reservedDelegation" minOccurs "0" maxOccurs "1" type "dreg:domainStatusType" />
" maxOccurs "1" type "dreg:domainStatusType" /
"0" maxOccurs "1" type "dreg:domainStatusType" /
<element name "other" minOccurs "0" maxOccurs "1" type "dreg:domainStatusType" /
> </element> <element name "domainVariant" type "iris:entityType" minOccurs "
<element name "registrationReference" type "iris:
<extension base "iris:entityType"> <attribute name "hosting" type "boolean" /
> </element> <element name "registrar" minOccurs "0" maxOccurs "1"> <complexType
<extension base "iris:entityType"> <attribute name "hosting" type "boolean" /
> </element> <element name "initialDelegationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "lastRenewalDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "expirationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "lastDelegationModificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
<element name "lastDelegationModificationBy" type "iris:
entityType" minOccurs "0" maxOccurs "1" />
<element name "lastVerificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
"> <sequence> <element name "hostHandle" type "dreg:normalizedStringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "lastModificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "lastVerificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
"> <sequence> <element name "contactHandle" type "dreg:normalizedStringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "commonName" type "dreg:normalizedStringPrivacyType" nillable "true" minOccurs "0
> <element name "language" type "language" minOccurs "0" maxOccurs "1
> <element name "person" type "dreg:contactTypeType
> </element> <element name "organization" type "dreg:normalizedStringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
<element name "eMail" type "dreg:stringPrivacyType" nillable "true" minOccurs "
> <element name "address" type "dreg:stringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "city" type "dreg:stringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "region" type "dreg:stringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "postalCode" type "dreg:normalizedStringPrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> </element> <element name "phone" type "dreg:normalizedStringPrivacyType" nillable "true" minOccurs "
> <element name "lastModificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "lastVerificationDateTime" type "dreg:dateTimePrivacyType" nillable "true" minOccurs "0" maxOccurs "1" /
> <element name "translatedContact" type "iris:entityType" minOccurs "
<element name "serviceInstance" type "iris:
entityType" minOccurs "0" maxOccurs "1" /
> <element name "organizationName" type "string" minOccurs "0" maxOccurs "1
> </choice> <element name "domain" type "token" minOccurs "0" maxOccurs "unbounded" /
<complexType name "stringPrivacyType"> <simpleContent> <extension base "string"
> <complexType name "normalizedStringPrivacyType"> <simpleContent> <extension base "normalizedString">
> <element name "appliedDate" type "dateTime" minOccurs "0" maxOccurs "1
> <extension base "string"> <attribute name "language" type "language" use "required" /
> </sequence> <attributeGroup ref "dreg:privacyLabelAttributeGroup" /
<element name "description" minOccurs "0" maxOccurs "unbounded"> <complexType> <simpleContent>
<extension base "string"> <attribute name "language" type "language" use "required" /
> </sequence> <attributeGroup ref "dreg:privacyLabelAttributeGroup" /
<element name "searchTooWide" type "iris:
<element name "unsupportedLanguage" type "language" minOccurs "1" maxOccurs "unbounded" /
"languageNotSupported" type "dreg:languageNotSupportedType" substitutionGroup "iris:
> Figure 5: dreg.xsd 5.
BEEP Transport Compliance IRIS allows several extensions of the core capabilities.
This section outlines extensions allowable by IRIS BEEP [6].
This registry type uses the default message pattern described in IRIS BEEP [6].
This registry type only uses the basic TLS server authentication method, as described in IRIS BEEP [6].
The application service label associated with this registry type MUST be "DREG1".
This is the abbreviated form of the URN for this registry type:
The bottom up alternative resolution method MUST be identified as 'bottom' in IRIS URI's.
The process for this resolution method differs from the direct  resolution method if the authority is only a domain name (i.e., without the port number).
The process for this condition is as follows:
The IRIS [5] direct resolution process is tried on the domain name (e.g., "example.com").
If the direct resolution process yields no server for which a connection can be made, then the leftmost label of the domain name is removed, and the first step is repeated again (e.g., "com").
If all the labels of the domain name are removed and no server connections have been made, then the DNS is queried for the address records corresponding to the original domain name, and the port used is the well known port for the default protocol of IRIS.
The top down alternative resolution method MUST be identified as 'top' in IRIS URIs.
The process for this resolution method differs from the direct  resolution method if the authority is only a domain name (i.e., without the port number).
The process for this condition is as follows:
The domain name is reduced to its rightmost label.
The IRIS [5] direct resolution process is tried on the domain name.
If the direct resolution process yields no server for which a connection can be made, then the original label to the left of the rightmost label of the domain name is prepended, and the second step is repeated again (e.g., if ".
", then "com"; if "com", then "example.com").
If all the labels of the original domain are present and no server connections have been made, then the DNS is queried for the address records corresponding to the original domain name, and the port used is the well known port for the default protocol of IRIS.
Internationalization Considerations Implementers should be aware of considerations for internationalization in IRIS [5].
This document specifies the lookup of domain names, both the traditional ASCII form and the IDN form.
In addition, the social data associated with contacts may also be non ASCII and could contain virtually any Unicode character.
The <language> element is provided in queries that have the potential to traverse such data.
Clients should use this element to indicate the desired target languages to the server, and servers should use this element to better enable normalization and search processes (see [18]).
For clients needing to localize the data tags in this protocol, note that localization is only needed on the names of XML elements and attributes with the exception of elements containing date and time information.
The schema for this registry has been designed so that clients need not interpret the content of elements or attributes for localization, other than that of elements containing date and time information.
Clients should also make use of the <language> elements provided in many of the results.
Results containing data that may be in Unicode are accompanied by these elements in order to aid better presentation of the data to the user.
The "dateTimePrivacyType" element type contains the XML Schema [3] data type "dateTime".
The contents of this element MUST be specified by using the 'Z' indicator for Coordinated Universal Time (UTC).
This document makes use of a proposed XML namespace and schema registry specified in XML URN [16].
Accordingly, the following registration information is provided for the IANA:
The XML Schema specified in Section 4 8.2.
The following S NAPTR application service label has been registered with IANA according to the IANA considerations defined in IRIS [5]:
The following BEEP Profile URI has been registered with IANA, in addition to the registration provided in IRIS BEEP [6].
This document lays out no new considerations for security precautions beyond that specified in IRIS [5].
Appendix A.  Examples of Requests and Responses
The examples in this section use the string "C:" to denote data sent by a client to a server and the string "S:" to denote data sent by a server to a client.
The following is an example of an entity lookup in a dreg1 registry for the domain name of 'example.com'.
The response shows the ability to specify data as being withheld because it is private.
The following is an example of an entity lookup in a dreg1 registry for the contact handle of 'mak21'.
The response shows the ability to specify data as being withheld because it is private.
The following is an example of a domain search based on a registrant's name beginning with the string 'The Cobbler Shoppe'.
This example also shows the use of bags.
Bill sells shoes down by the sea shore.
Rechnung verkauft Schuhe unten durch das Seeufer.
<eMail private "true" xsi:nil "true" /
An Example of Database Serialization
The following is an example of serializing domain data.
This example shows the serialization of a domain, a host, and a referral.
dreg1" xmlns:xsi "http://www.w3.org/2001/XMLSchema instance"> <dreg:domain xmlns
dreg1" authority "com" registryType "dreg1" entityClass "domain handle" entityName "tcs com 1"
:referentType "dreg:host" authority "" registryType
"dreg1" entityClass "host handle" entityName "research7" /
> <nameServer iris:referentType "dreg:host" authority "" registryType
"dreg1" entityClass "host handle" entityName "nsol184" /
<registrant iris:referentType "dreg:contact" authority "iana.org
" registryType "dreg1" entityClass "contact handle" entityName
> </dreg:domain> <dreg:host xmlns "urn:ietf:
:referentType "dreg:contact" authority "com" registryType "dreg1" entityClass "contact handle" entityName "dbarton"
<iris:source authority "com" registryType "dreg1" entityClass "contact handle" entityName "dbarton" />
> </iris:serializedReferral> </iris:serialization> Figure 9
