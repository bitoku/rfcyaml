- title: __initial_text__
  contents:
  - '             MPLS Transport Profile Data Plane Architecture

    '
- title: Abstract
  contents:
  - "Abstract\n   The Multiprotocol Label Switching Transport Profile (MPLS-TP) is\
    \ the\n   set of MPLS protocol functions applicable to the construction and\n\
    \   operation of packet-switched transport networks.  This document\n   specifies\
    \ the subset of these functions that comprises the MPLS-TP\n   data plane: the\
    \ architectural layer concerned with the encapsulation\n   and forwarding of packets\
    \ within an MPLS-TP network.\n   This document is a product of a joint Internet\
    \ Engineering Task Force\n   (IETF) / International Telecommunication Union Telecommunication\n\
    \   Standardization Sector (ITU-T) effort to include an MPLS Transport\n   Profile\
    \ within the IETF MPLS and Pseudowire Emulation Edge-to-Edge\n   (PWE3) architectures\
    \ to support the capabilities and functionalities\n   of a packet transport network.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5960.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Scope  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  Terminology  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n     1.3.  Requirements Language  . . . . . . . . . . . . . . .\
    \ . . .  4\n   2.  MPLS-TP Packet Encapsulation and Forwarding  . . . . . . .\
    \ . .  4\n   3.  MPLS-TP Transport Entities . . . . . . . . . . . . . . . . .\
    \ .  5\n     3.1.  Label Switched Paths . . . . . . . . . . . . . . . . . . .\
    \  5\n       3.1.1.  LSP Packet Encapsulation and Forwarding  . . . . . . .  6\n\
    \       3.1.2.  LSP Payloads . . . . . . . . . . . . . . . . . . . . .  7\n  \
    \     3.1.3.  LSP Types  . . . . . . . . . . . . . . . . . . . . . .  7\n    \
    \ 3.2.  Sections . . . . . . . . . . . . . . . . . . . . . . . . .  8\n     3.3.\
    \  Pseudowires  . . . . . . . . . . . . . . . . . . . . . . .  9\n   4.  MPLS-TP\
    \ Generic Associated Channel . . . . . . . . . . . . . . 10\n   5.  Server-Layer\
    \ Considerations  . . . . . . . . . . . . . . . . . 11\n   6.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 11\n   7.  References . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 12\n     7.1.  Normative References . .\
    \ . . . . . . . . . . . . . . . . . 12\n     7.2.  Informative References . .\
    \ . . . . . . . . . . . . . . . . 14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The MPLS Transport Profile (MPLS-TP) is the set of functions\
    \ that\n   meet the requirements [RFC5654] for the application of MPLS to the\n\
    \   construction and operation of packet-switched transport networks.\n   MPLS-based\
    \ packet-switched transport networks, and the overall\n   architecture of the\
    \ MPLS-TP, are defined and described in [RFC5921].\n   It is assumed that the\
    \ reader is familiar with that document.\n   This document defines the set of\
    \ functions that comprise the MPLS-TP\n   data plane: the architectural layer\
    \ concerned with the encapsulation\n   and forwarding of packets within an MPLS-TP\
    \ network.  This layer is\n   based on the data plane architectures for MPLS ([RFC3031]\
    \ and\n   [RFC3032]) and for pseudowires [RFC3985].\n   This document is a product\
    \ of a joint Internet Engineering Task Force\n   (IETF) / International Telecommunication\
    \ Union Telecommunication\n   Standardization Sector (ITU-T) effort to include\
    \ an MPLS Transport\n   Profile within the IETF MPLS and PWE3 architectures to\
    \ support the\n   capabilities and functionalities of a packet transport network.\n"
- title: 1.1.  Scope
  contents:
  - "1.1.  Scope\n   This document has the following purposes:\n   o  To identify\
    \ the data plane functions within the MPLS Transport\n      Profile; and\n   o\
    \  To indicate which of these data plane functions an MPLS-TP\n      implementation\
    \ is required to support.\n   This document defines the encapsulation and forwarding\
    \ functions\n   applicable to packets traversing an MPLS-TP Label Switched Path\n\
    \   (LSP), pseudowire (PW), or section (see Section 3 for the definitions\n  \
    \ of these transport entities).  Encapsulation and forwarding functions\n   for\
    \ packets outside an MPLS-TP LSP, PW, or section, and mechanisms\n   for delivering\
    \ packets to or from MPLS-TP LSPs, PWs, and sections,\n   are outside the scope\
    \ of this document.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   Term    Definition\n   ------- -------------------------------------------\n\
    \   ACH     Associated Channel Header\n   G-ACh   Generic Associated Channel\n\
    \   GAL     G-ACh Label\n   LER     Label Edge Router\n   LSE     Label Stack\
    \ Entry\n   LSP     Label Switched Path\n   LSR     Label Switching Router\n \
    \  MPLS-TP MPLS Transport Profile\n   OAM     Operations, Administration, and\
    \ Maintenance\n   PW      Pseudowire\n   QoS     Quality of Service\n   S-PE \
    \   PW Switching Provider Edge\n   T-PE    PW Terminating Provider Edge\n   TTL\
    \     Time To Live\n   Additional definitions and terminology can be found in\
    \ [RFC5921] and\n   [RFC5654].\n"
- title: 1.3.  Requirements Language
  contents:
  - "1.3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  MPLS-TP Packet Encapsulation and Forwarding
  contents:
  - "2.  MPLS-TP Packet Encapsulation and Forwarding\n   MPLS-TP packet encapsulation\
    \ and forwarding SHALL operate according\n   to the MPLS data plane architecture\
    \ described in [RFC3031] and\n   [RFC3032] and to the data plane architectures\
    \ for single-segment\n   pseudowires and multi-segment pseudowires (see Section\
    \ 3.3), except\n   as noted otherwise in this document.  The MPLS-TP data plane\n\
    \   satisfies the requirements specified in [RFC5654].\n   Since an MPLS-TP packet\
    \ is an MPLS packet as defined in [RFC3031] and\n   [RFC3032], it will have an\
    \ associated label stack, and the 'push',\n   'pop', and 'swap' label processing\
    \ operations specified in those\n   documents apply.  The label stack represents\
    \ a hierarchy of Label\n   Switched Paths (LSPs).  A label is pushed to introduce\
    \ an additional\n   level of LSP hierarchy and popped to remove it.  Such an additional\n\
    \   level may be introduced by any pair of LSRs, whereupon they become\n   adjacent\
    \ at this new level, and are then known as Label Edge Routers\n   (LERs) with\
    \ respect to the new LSP.\n   In contrast to, for example, Section 3.10 of [RFC3031],\
    \ support for\n   Internet Protocol (IP) host and router data plane functionality\
    \ by\n   MPLS-TP interfaces and in MPLS-TP networks is OPTIONAL.\n   MPLS-TP forwarding\
    \ is based on the label that identifies an LSP or\n   PW.  The label value specifies\
    \ the processing operation to be\n   performed by the next hop at that level of\
    \ encapsulation.  A swap of\n   this label is an atomic operation in which the\
    \ contents of the packet\n   (after the swapped label) are opaque to the forwarding\
    \ function.  The\n   only event that interrupts a swap operation is Time To Live\
    \ (TTL)\n   expiry.\n   At an LSR, S-PE, or T-PE, further processing to determine\
    \ the context\n   of a packet occurs when a swap operation is interrupted by TTL\n\
    \   expiry.  If the TTL of an LSP label expires, then the label with the\n   S\
    \ (Bottom of Stack) bit set is inspected to determine if it is a\n   reserved\
    \ label.  If it is a reserved label, the packet is processed\n   according to\
    \ the rules of that reserved label.  For example, if it is\n   a Generic Associated\
    \ Channel Label (GAL), then it is processed as a\n   packet on the Generic Associated\
    \ Channel (G-ACh); see Section 4.  If\n   the TTL of a PW expires at an S-PE or\
    \ T-PE, then the packet is\n   examined to determine if a Generic Associated Channel\
    \ Header (ACH) is\n   present immediately below the PW label.  If so, then the\
    \ packet is\n   processed as a packet on the G-ACh.\n   Similarly, if a pop operation\
    \ at an LER exposes a reserved label at\n   the top of the label stack, then the\
    \ packet is processed according to\n   the rules of that reserved label.\n   If\
    \ no such exception occurs, the packet is forwarded according to the\n   procedures\
    \ in [RFC3031] and [RFC3032].\n"
- title: 3.  MPLS-TP Transport Entities
  contents:
  - "3.  MPLS-TP Transport Entities\n   The MPLS Transport Profile includes the following\
    \ data plane\n   transport entities:\n   o  Label Switched Paths (LSPs)\n   o\
    \  sections\n   o  pseudowires (PWs)\n"
- title: 3.1.  Label Switched Paths
  contents:
  - "3.1.  Label Switched Paths\n   MPLS-TP LSPs are ordinary MPLS LSPs as defined\
    \ in [RFC3031], except\n   as specifically noted otherwise in this document.\n"
- title: 3.1.1.  LSP Packet Encapsulation and Forwarding
  contents:
  - "3.1.1.  LSP Packet Encapsulation and Forwarding\n   Encapsulation and forwarding\
    \ of packets traversing MPLS-TP LSPs MUST\n   follow standard MPLS packet encapsulation\
    \ and forwarding as defined\n   in [RFC3031], [RFC3032], [RFC5331], and [RFC5332],\
    \ except as\n   explicitly stated otherwise in this document.\n   Data plane Quality\
    \ of Service capabilities are included in the\n   MPLS-TP in the form of Traffic\
    \ Engineered (TE) LSPs [RFC3209] and the\n   MPLS Differentiated Services (Diffserv)\
    \ architecture [RFC3270].  Both\n   E-LSP and L-LSP MPLS Diffserv modes are included.\
    \  The Traffic Class\n   field (formerly the EXP field) of an MPLS label follows\
    \ the\n   definition of [RFC5462] and [RFC3270] and MUST be processed according\n\
    \   to the rules specified in those documents.\n   Except for transient packet\
    \ reordering that may occur, for example,\n   during fault conditions, packets\
    \ are delivered in order on L-LSPs,\n   and on E-LSPs within a specific ordered\
    \ aggregate.\n   The Uniform, Pipe, and Short Pipe Diffserv tunneling and TTL\n\
    \   processing models described in [RFC3270] and [RFC3443] MAY be used\n   for\
    \ MPLS-TP LSPs.  Note, however, that support for the Pipe or Short\n   Pipe models\
    \ is REQUIRED for typical transport applications in which\n   the topology and\
    \ QoS characteristics of the MPLS-TP server layer are\n   independent of the client\
    \ layer.  Specific applications MAY place\n   further requirements on the Diffserv\
    \ tunneling and TTL processing\n   models an LSP can use.\n   Per-platform, per-interface,\
    \ or other context-specific label space\n   [RFC5331] MAY be used for MPLS-TP\
    \ LSPs.  Downstream [RFC3031] or\n   upstream [RFC5331] label allocation schemes\
    \ MAY be used for MPLS-TP\n   LSPs.  The requirements of a particular LSP type\
    \ may, however,\n   dictate which label spaces or allocation schemes LSPs of that\
    \ type\n   can use.\n   Equal-Cost Multi-Path (ECMP) load-balancing MUST NOT be\
    \ performed on\n   an MPLS-TP LSP.  MPLS-TP LSPs as defined in this document MAY\
    \ operate\n   over a server layer that supports load-balancing, but this load-\n\
    \   balancing MUST operate in such a manner that it is transparent to\n   MPLS-TP.\
    \  This does not preclude the future definition of new MPLS-TP\n   LSP types that\
    \ have different requirements regarding the use of ECMP\n   in the server layer.\n\
    \   Penultimate Hop Popping (PHP) MUST be disabled by default on MPLS-TP\n   LSPs.\n"
- title: 3.1.2.  LSP Payloads
  contents:
  - "3.1.2.  LSP Payloads\n   The MPLS-TP includes support for the following LSP payload\
    \ types:\n   o  Network-layer protocol packets (including MPLS-labeled packets)\n\
    \   o  Pseudowire packets\n   The rules for processing LSP payloads that are network-layer\
    \ protocol\n   packets SHALL be as specified in [RFC3032].\n   The rules for processing\
    \ LSP payloads that are pseudowire packets\n   SHALL be as defined in the data\
    \ plane pseudowire specifications (see\n   Section 3.3).\n   The payload of an\
    \ MPLS-TP LSP may be a packet that itself contains an\n   MPLS label stack.  This\
    \ is true, for instance, when the payload is a\n   pseudowire or an MPLS LSP.\
    \  In such cases, the label stack is\n   contiguous between the MPLS-TP LSP and\
    \ its payload, and exactly one\n   LSE in this stack SHALL have the S (Bottom\
    \ of Stack) bit set to 1.\n   This behavior reflects best current practice in\
    \ MPLS but differs\n   slightly from [RFC3032], which uses the S bit to identify\
    \ when MPLS\n   label processing stops and network-layer processing starts.\n"
- title: 3.1.3.  LSP Types
  contents:
  - "3.1.3.  LSP Types\n   The MPLS-TP includes the following LSP types:\n   o  Point-to-point\
    \ unidirectional\n   o  Point-to-point associated bidirectional\n   o  Point-to-point\
    \ co-routed bidirectional\n   o  Point-to-multipoint unidirectional\n   Point-to-point\
    \ unidirectional LSPs are supported by the basic MPLS\n   architecture [RFC3031]\
    \ and are REQUIRED to function in the same\n   manner in the MPLS-TP data plane,\
    \ except as explicitly stated\n   otherwise in this document.\n   A point-to-point\
    \ associated bidirectional LSP between LSRs A and B\n   consists of two unidirectional\
    \ point-to-point LSPs, one from A to B\n   and the other from B to A, which are\
    \ regarded as a pair providing a\n   single logical bidirectional transport path.\n\
    \   A point-to-point co-routed bidirectional LSP is a point-to-point\n   associated\
    \ bidirectional LSP with the additional constraint that its\n   two unidirectional\
    \ component LSPs in each direction follow the same\n   path (in terms of both\
    \ nodes and links).  An important property of\n   co-routed bidirectional LSPs\
    \ is that their unidirectional component\n   LSPs share fate.\n   A point-to-multipoint\
    \ unidirectional LSP functions in the same manner\n   in the data plane, with\
    \ respect to basic label processing and packet-\n   switching operations, as a\
    \ point-to-point unidirectional LSP, with\n   one difference: an LSR may have\
    \ more than one (egress interface,\n   outgoing label) pair associated with the\
    \ LSP, and any packet it\n   transmits on the LSP is transmitted out all associated\
    \ egress\n   interfaces.  Point-to-multipoint LSPs are described in [RFC4875]\
    \ and\n   [RFC5332].  TTL processing and exception handling for point-to-\n  \
    \ multipoint LSPs is the same as for point-to-point LSPs and is\n   described\
    \ in Section 2.\n"
- title: 3.2.  Sections
  contents:
  - "3.2.  Sections\n   Two MPLS-TP LSRs are considered to be topologically adjacent\
    \ at a\n   particular layer n >= 0 of the MPLS-TP LSP hierarchy if there exists\n\
    \   connectivity between them at the next lowest network layer, and if\n   there\
    \ is no MPLS layer processing at layer n between the two LSRs\n   (other than\
    \ at the LSRs themselves).  Such connectivity, if it\n   exists, will be either\
    \ an MPLS-TP LSP (if n > 0) or a data-link\n   provided by the underlying server\
    \ layer network (if n = 0), and is\n   referred to as an MPLS-TP section at layer\
    \ n of the MPLS-TP LSP\n   hierarchy.  Thus, the links traversed by a layer n+1\
    \ MPLS-TP LSP are\n   layer n MPLS-TP sections.  Such an LSP is referred to as\
    \ a client of\n   the section layer, and the section layer is referred to as the\
    \ server\n   layer with respect to its clients.\n   The MPLS label stack associated\
    \ with an MPLS-TP section at layer n\n   consists of n labels, in the absence\
    \ of stack optimization\n   mechanisms.  In order for two LSRs to exchange non-IP\
    \ MPLS-TP control\n   packets over a section, an additional label, the G-ACh Label\
    \ (GAL)\n   (see Section 4) MUST appear at the bottom of the label stack.\n  \
    \ An MPLS-TP section may provide one or more of the following types of\n   service\
    \ to its client layer:\n   o  Point-to-point bidirectional\n   o  Point-to-point\
    \ unidirectional\n   o  Point-to-multipoint unidirectional\n   The manner in which\
    \ a section provides such a service is outside the\n   scope of the MPLS-TP.\n\
    \   An LSP of any of the types listed in Section 3.1.3 may serve as a\n   section\
    \ for a client-layer transport entity as long as it supports\n   the type of service\
    \ the client requires.\n   A section MUST provide a means of identifying the type\
    \ of payload it\n   carries.  If the section is a data-link, link-specific mechanisms\n\
    \   such as a protocol type indication in the data-link header MAY be\n   used.\
    \  If the section is an LSP, this information MAY be implied by\n   the LSP label\
    \ or, if the LSP payload is MPLS-labeled, by the setting\n   of the S bit.  Additional\
    \ labels MAY also be used if necessary to\n   distinguish different payload types;\
    \ see [RFC5921] for examples and\n   further discussion.\n"
- title: 3.3.  Pseudowires
  contents:
  - "3.3.  Pseudowires\n   The data plane architectures for single-segment pseudowires\
    \ [RFC3985]\n   and multi-segment pseudowires [RFC5659] are included in the MPLS-TP.\n\
    \   Data plane processing procedures for pseudowires are defined and\n   described\
    \ in a number of IETF documents.  Some example pseudowire\n   data plane procedures\
    \ include:\n   o  Pseudowire Emulation Edge-to-Edge (PWE3) Control Word for Use\
    \ over\n      an MPLS PSN [RFC4385]\n   o  Encapsulation Methods for Transport\
    \ of Ethernet over MPLS Networks\n      [RFC4448]\n   o  Structure-Agnostic Time\
    \ Division Multiplexing (TDM) over Packet\n      (SAToP) [RFC4553]\n   o  Encapsulation\
    \ Methods for Transport of PPP/High-Level Data Link\n      Control (HDLC) over\
    \ MPLS Networks [RFC4618]\n   o  Encapsulation Methods for Transport of Frame\
    \ Relay over\n      Multiprotocol Label Switching (MPLS) Networks [RFC4619]\n\
    \   o  Encapsulation Methods for Transport of Asynchronous Transfer Mode\n   \
    \   (ATM) over MPLS Networks [RFC4717]\n   o  Pseudowire Emulation Edge-to-Edge\
    \ (PWE3) Asynchronous Transfer\n      Mode (ATM) Transparent Cell Transport Service\
    \ [RFC4816]\n   o  Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/\n\
    \      SDH) Circuit Emulation over Packet (CEP) [RFC4842]\n   o  Structure-Aware\
    \ Time Division Multiplexed (TDM) Circuit Emulation\n      Service over Packet\
    \ Switched Network (CESoPSN) [RFC5086]\n   o  Time Division Multiplexing over\
    \ IP (TDMoIP) [RFC5087]\n   o  Encapsulation Methods for Transport of Fibre Channel\
    \ frames Over\n      MPLS Networks [FC-ENCAP]\n   This document specifies no modifications\
    \ or extensions to pseudowire\n   data plane architectures or protocols.\n"
- title: 4.  MPLS-TP Generic Associated Channel
  contents:
  - "4.  MPLS-TP Generic Associated Channel\n   The MPLS Generic Associated Channel\
    \ (G-ACh) mechanism is specified in\n   [RFC5586] and included in the MPLS-TP.\
    \  The G-ACh provides an\n   auxiliary logical data channel associated with MPLS-TP\
    \ sections,\n   LSPs, and PWs in the data plane.  The primary purpose of the G-ACh\
    \ in\n   the context of MPLS-TP is to support control, management, and\n   Operations,\
    \ Administration, and Maintenance (OAM) traffic associated\n   with MPLS-TP transport\
    \ entities.  The G-ACh MUST NOT be used to\n   transport client layer network\
    \ traffic in MPLS-TP networks.\n   For pseudowires, the G-ACh uses the first four\
    \ bits of the PW control\n   word to provide the initial discrimination between\
    \ data packets and\n   packets belonging to the associated channel, as described\
    \ in\n   [RFC4385].  When this first nibble of a packet, immediately following\n\
    \   the label at the bottom of stack, has a value of '1', then this\n   packet\
    \ belongs to a G-ACh.  The first 32 bits following the bottom of\n   stack label\
    \ then have a defined format called an Associated Channel\n   Header (ACH), which\
    \ further defines the content of the packet.  The\n   ACH is therefore both a\
    \ demultiplexer for G-ACh traffic on the PW,\n   and a discriminator for the type\
    \ of G-ACh traffic.\n   When the control message is carried over a section or\
    \ an LSP, rather\n   than over a PW, it is necessary to provide an indication\
    \ in the\n   packet that the payload is something other than a client data packet.\n\
    \   This is achieved by including a reserved label with a value of 13 at\n   the\
    \ bottom of the label stack.  This reserved label is referred to as\n   the G-ACh\
    \ Label (GAL) and is defined in [RFC5586].  When a GAL is\n   found, it indicates\
    \ that the payload begins with an ACH.  The GAL is\n   thus a demultiplexer for\
    \ G-ACh traffic on the section or the LSP, and\n   the ACH is a discriminator\
    \ for the type of traffic carried on the\n   G-ACh.  MPLS-TP forwarding follows\
    \ the normal MPLS model, and thus a\n   GAL is invisible to an LSR unless it is\
    \ the top label in the label\n   stack.  The only other circumstance under which\
    \ the label stack may\n   be inspected for a GAL is when the TTL has expired.\
    \  Normal packet\n   forwarding MAY continue concurrently with this inspection.\
    \  All\n   operations on the label stack are in accordance with [RFC3031] and\n\
    \   [RFC3032].\n   An application processing a packet received over the G-ACh\
    \ may\n   require packet-specific context (such as the receiving interface or\n\
    \   received label stack).  Data plane implementations MUST therefore\n   provide\
    \ adequate context to the application that is to process a\n   G-ACh packet. \
    \ The definition of the context required MUST be\n   provided as part of the specification\
    \ of the application using the\n   G-ACh.\n"
- title: 5.  Server-Layer Considerations
  contents:
  - "5.  Server-Layer Considerations\n   The MPLS-TP network has no awareness of the\
    \ internals of the server\n   layer of which it is a client; it requires only\
    \ that the server layer\n   be capable of delivering the type of service required\
    \ by the MPLS-TP\n   transport entities that make use of it.  Note that what appears\
    \ to be\n   a single server-layer link to the MPLS-TP network may be a\n   complicated\
    \ construct underneath, such as an LSP or a collection of\n   underlying links\
    \ operating as a bundle.  Special care may be needed\n   in network design and\
    \ operation when such constructs are used as a\n   server layer for MPLS-TP.\n\
    \   Encapsulation of MPLS-TP packets for transport over specific server-\n   layer\
    \ media is outside the scope of this document.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The MPLS data plane (and therefore the MPLS-TP\
    \ data plane) does not\n   provide any security mechanisms in and of itself. \
    \ Client layers that\n   wish to secure data carried over MPLS-TP transport entities\
    \ are\n   REQUIRED to apply their own security mechanisms.\n   Where management\
    \ or control plane protocols are used to install\n   label-switching operations\
    \ necessary to establish MPLS-TP transport\n   paths, those protocols are equipped\
    \ with security features that\n   network operators may use to securely create\
    \ the transport paths.\n   Where enhanced security is desirable, and a trust relationship\
    \ exists\n   between an LSR and its peer, the LSR MAY choose to implement the\n\
    \   following policy for the processing of MPLS packets received from one\n  \
    \ or more of its neighbors:\n      Upon receipt of an MPLS packet, discard the\
    \ packet unless one of\n      the following two conditions holds:\n      1.  Any\
    \ MPLS label in the packet's label stack processed at the\n          receiving\
    \ LSR, such as an LSP or PW label, has a label value\n          that the receiving\
    \ LSR has distributed to that neighbor; or\n      2.  Any MPLS label in the packet's\
    \ label stack processed at the\n          receiving LSR, such as an LSP or PW\
    \ label, has a label value\n          that the receiving LSR has previously distributed\
    \ to the peer\n          beyond that neighbor (i.e., when it is known that the\
    \ path\n          from the system to which the label was distributed to the\n\
    \          receiving system is via that neighbor).\n   Further details of MPLS\
    \ and MPLS-TP security can be found in\n   [RFC5921] and [RFC5920].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3031]   Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n\
    \               Label Switching Architecture\", RFC 3031, January 2001.\n   [RFC3032]\
    \   Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n               Farinacci,\
    \ D., Li, T., and A. Conta, \"MPLS Label Stack\n               Encoding\", RFC\
    \ 3032, January 2001.\n   [RFC3209]   Awduche, D., Berger, L., Gan, D., Li, T.,\
    \ Srinivasan, V.,\n               and G. Swallow, \"RSVP-TE: Extensions to RSVP\
    \ for LSP\n               Tunnels\", RFC 3209, December 2001.\n   [RFC3270]  \
    \ Le Faucheur, F., Wu, L., Davie, B., Davari, S., Vaananen,\n               P.,\
    \ Krishnan, R., Cheval, P., and J. Heinanen, \"Multi-\n               Protocol\
    \ Label Switching (MPLS) Support of Differentiated\n               Services\"\
    , RFC 3270, May 2002.\n   [RFC3443]   Agarwal, P. and B. Akyol, \"Time To Live\
    \ (TTL) Processing\n               in Multi-Protocol Label Switching (MPLS) Networks\"\
    ,\n               RFC 3443, January 2003.\n   [RFC4385]   Bryant, S., Swallow,\
    \ G., Martini, L., and D. McPherson,\n               \"Pseudowire Emulation Edge-to-Edge\
    \ (PWE3) Control Word\n               for Use over an MPLS PSN\", RFC 4385, February\
    \ 2006.\n   [RFC4448]   Martini, L., Rosen, E., El-Aawar, N., and G. Heron,\n\
    \               \"Encapsulation Methods for Transport of Ethernet over\n     \
    \          MPLS Networks\", RFC 4448, April 2006.\n   [RFC4553]   Vainshtein,\
    \ A. and YJ. Stein, \"Structure-Agnostic Time\n               Division Multiplexing\
    \ (TDM) over Packet (SAToP)\",\n               RFC 4553, June 2006.\n   [RFC4618]\
    \   Martini, L., Rosen, E., Heron, G., and A. Malis,\n               \"Encapsulation\
    \ Methods for Transport of PPP/High-Level\n               Data Link Control (HDLC)\
    \ over MPLS Networks\", RFC 4618,\n               September 2006.\n   [RFC4619]\
    \   Martini, L., Kawa, C., and A. Malis, \"Encapsulation\n               Methods\
    \ for Transport of Frame Relay over Multiprotocol\n               Label Switching\
    \ (MPLS) Networks\", RFC 4619,\n               September 2006.\n   [RFC4717] \
    \  Martini, L., Jayakumar, J., Bocci, M., El-Aawar, N.,\n               Brayley,\
    \ J., and G. Koleyni, \"Encapsulation Methods for\n               Transport of\
    \ Asynchronous Transfer Mode (ATM) over MPLS\n               Networks\", RFC 4717,\
    \ December 2006.\n   [RFC4816]   Malis, A., Martini, L., Brayley, J., and T. Walsh,\n\
    \               \"Pseudowire Emulation Edge-to-Edge (PWE3) Asynchronous\n    \
    \           Transfer Mode (ATM) Transparent Cell Transport Service\",\n      \
    \         RFC 4816, February 2007.\n   [RFC4842]   Malis, A., Pate, P., Cohen,\
    \ R., and D. Zelig,\n               \"Synchronous Optical Network/Synchronous\
    \ Digital\n               Hierarchy (SONET/SDH) Circuit Emulation over Packet\n\
    \               (CEP)\", RFC 4842, April 2007.\n   [RFC4875]   Aggarwal, R., Papadimitriou,\
    \ D., and S. Yasukawa,\n               \"Extensions to Resource Reservation Protocol\
    \ - Traffic\n               Engineering (RSVP-TE) for Point-to-Multipoint TE Label\n\
    \               Switched Paths (LSPs)\", RFC 4875, May 2007.\n   [RFC5331]   Aggarwal,\
    \ R., Rekhter, Y., and E. Rosen, \"MPLS Upstream\n               Label Assignment\
    \ and Context-Specific Label Space\",\n               RFC 5331, August 2008.\n\
    \   [RFC5332]   Eckert, T., Rosen, E., Aggarwal, R., and Y. Rekhter,\n       \
    \        \"MPLS Multicast Encapsulations\", RFC 5332, August 2008.\n   [RFC5462]\
    \   Andersson, L. and R. Asati, \"Multiprotocol Label\n               Switching\
    \ (MPLS) Label Stack Entry: \"EXP\" Field Renamed\n               to \"Traffic\
    \ Class\" Field\", RFC 5462, February 2009.\n   [RFC5586]   Bocci, M., Vigoureux,\
    \ M., and S. Bryant, \"MPLS Generic\n               Associated Channel\", RFC\
    \ 5586, June 2009.\n   [RFC5654]   Niven-Jenkins, B., Brungard, D., Betts, M.,\
    \ Sprecher, N.,\n               and S. Ueno, \"Requirements of an MPLS Transport\
    \ Profile\",\n               RFC 5654, September 2009.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [FC-ENCAP]  Black, D. and L. Dunbar, \"Encapsulation\
    \ Methods for\n               Transport of Fibre Channel frames Over MPLS Networks\"\
    ,\n               Work in Progress, June 2010.\n   [RFC3985]   Bryant, S. and\
    \ P. Pate, \"Pseudo Wire Emulation Edge-to-\n               Edge (PWE3) Architecture\"\
    , RFC 3985, March 2005.\n   [RFC5086]   Vainshtein, A., Sasson, I., Metz, E.,\
    \ Frost, T., and P.\n               Pate, \"Structure-Aware Time Division Multiplexed\
    \ (TDM)\n               Circuit Emulation Service over Packet Switched Network\n\
    \               (CESoPSN)\", RFC 5086, December 2007.\n   [RFC5087]   Stein, Y(J).,\
    \ Shashoua, R., Insler, R., and M. Anavi,\n               \"Time Division Multiplexing\
    \ over IP (TDMoIP)\", RFC 5087,\n               December 2007.\n   [RFC5659] \
    \  Bocci, M. and S. Bryant, \"An Architecture for Multi-\n               Segment\
    \ Pseudowire Emulation Edge-to-Edge\", RFC 5659,\n               October 2009.\n\
    \   [RFC5920]   Fang, L., \"Security Framework for MPLS and GMPLS\n          \
    \     Networks\", RFC 5920, July 2010.\n   [RFC5921]   Bocci, M., Bryant, S.,\
    \ Frost, D., Levrau, L., and L.\n               Berger, \"A Framework for MPLS\
    \ in Transport Networks\",\n               RFC 5921, July 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dan Frost (editor)\n   Cisco Systems\n   EMail: danfrost@cisco.com\n\
    \   Stewart Bryant (editor)\n   Cisco Systems\n   EMail: stbryant@cisco.com\n\
    \   Matthew Bocci (editor)\n   Alcatel-Lucent\n   EMail: matthew.bocci@alcatel-lucent.com\n"
