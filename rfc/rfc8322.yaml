- title: __initial_text__
  contents:
  - '       Resource-Oriented Lightweight Information Exchange (ROLIE)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a resource-oriented approach for security\n\
    \   automation information publication, discovery, and sharing.  Using\n   this\
    \ approach, producers may publish, share, and exchange\n   representations of\
    \ software descriptors, security incidents, attack\n   indicators, software vulnerabilities,\
    \ configuration checklists, and\n   other security automation information as web-addressable\
    \ resources.\n   Furthermore, consumers and other stakeholders may access and\
    \ search\n   this security information as needed, establishing a rapid and\n \
    \  on-demand information exchange network for restricted internal use or\n   public\
    \ access repositories.  This specification extends the Atom\n   Publishing Protocol\
    \ and Atom Syndication Format to transport and\n   share security automation resource\
    \ representations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8322.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. XML-Related Conventions .........................................5\n    \
    \  3.1. XML Namespaces .............................................5\n      3.2.\
    \ RELAX NG Compact Schema ....................................5\n   4. Background\
    \ and Motivation .......................................5\n   5. ROLIE Requirements\
    \ for the Atom Publishing Protocol .............7\n      5.1. AtomPub Service\
    \ Documents ..................................7\n           5.1.1. Use of the\
    \ \"app:workspace\" Element ..................8\n           5.1.2. Use of the\
    \ \"app:collection\" Element .................8\n           5.1.3. Service Document\
    \ Discovery ..........................9\n      5.2. Category Documents .........................................9\n\
    \      5.3. Transport Layer Security ..................................10\n  \
    \    5.4. User Authentication and Authorization .....................10\n    \
    \  5.5. \"/\" (Forward Slash) Resource URL ..........................11\n    \
    \  5.6. HTTP Methods ..............................................11\n   6. ROLIE\
    \ Requirements for the Atom Syndication Format .............11\n      6.1. Use\
    \ of the \"atom:feed\" Element ............................11\n           6.1.1.\
    \ Use of the \"atom:category\" Element .................13\n           6.1.2.\
    \ Use of the \"atom:link\" Element .....................14\n           6.1.3.\
    \ Use of the \"atom:updated\" Element ..................15\n      6.2. Use of\
    \ the \"atom:entry\" Element ...........................16\n           6.2.1.\
    \ Use of the \"atom:content\" Element ..................17\n           6.2.2.\
    \ Use of the \"atom:link\" Element .....................17\n           6.2.3.\
    \ Use of the \"rolie:format\" Element ..................18\n           6.2.4.\
    \ Use of the \"rolie:property\" Element ................19\n           6.2.5.\
    \ Requirements for a Standalone Entry ................20\n   7. Available Extension\
    \ Points Provided by ROLIE ...................21\n      7.1. The Category Extension\
    \ Point ..............................21\n           7.1.1. General Use of the\
    \ \"atom:category\" Element .........22\n           7.1.2. Identification of Security\
    \ Automation\n                  Information Types ..................................22\n\
    \      7.2. The \"rolie:format\" Extension Point ........................24\n\
    \      7.3. The Link Relation Extension Point .........................24\n  \
    \    7.4. The \"rolie:property\" Extension Point ......................24\n  \
    \ 8. IANA Considerations ............................................26\n    \
    \  8.1. XML Namespaces and Schema URNs ............................26\n      8.2.\
    \ ROLIE URN Sub-namespace ...................................26\n      8.3. ROLIE\
    \ URN Parameters ......................................27\n      8.4. ROLIE Information\
    \ Types Registry ..........................29\n   9. Security Considerations ........................................29\n\
    \   10. Privacy Considerations ........................................31\n  \
    \ 11. References ....................................................32\n    \
    \  11.1. Normative References .....................................32\n      11.2.\
    \ Informative References ...................................34\n   Appendix A.\
    \ RELAX NG Compact Schema for ROLIE .....................37\n   Appendix B. Examples\
    \ of Use .......................................37\n     B.1. Service Discovery\
    \ ..........................................37\n     B.2. Feed Retrieval .............................................40\n\
    \     B.3. Entry Retrieval ............................................42\n  \
    \ Acknowledgements ..................................................43\n   Authors'\
    \ Addresses ................................................43\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a resource-oriented approach to security\n\
    \   automation information sharing that follows the Representational\n   State\
    \ Transfer (REST) architectural style [REST].  In this approach,\n   computer\
    \ security resources are maintained in web-accessible\n   repositories structured\
    \ as Atom Syndication Format [RFC4287] Feeds.\n   Within a given Feed, which may\
    \ be requested by the consumer,\n   representations of specific types of security\
    \ automation information\n   are organized, categorized, and described.  Furthermore,\
    \ all\n   collections available to a given user are discoverable, allowing the\n\
    \   consumer to search all available content they are authorized to view,\n  \
    \ and to locate and request the desired information resources.  Through\n   the\
    \ use of granular authentication and access controls, only\n   authorized consumers\
    \ may be permitted the ability to read or write to\n   a given Feed.\n   The goal\
    \ of this approach is to increase the communication and\n   sharing of security\
    \ information between providers and consumers that\n   can be used to automate\
    \ security processes (e.g., incident reports,\n   vulnerability assessments, configuration\
    \ checklists, and other\n   security automation information).  Such sharing allows\
    \ human\n   operators and computer systems to leverage this standardized\n   communication\
    \ system to gather information that supports the\n   automation of security processes.\n\
    \   To support new types of security automation information being used as\n  \
    \ time goes on, this specification defines a number of extension points\n   that\
    \ can be used either privately or globally.  These global\n   extensions are IANA-registered\
    \ by Resource-Oriented Lightweight\n   Information Exchange (ROLIE) extension\
    \ specifications and provide\n   enhanced interoperability for new use cases and\
    \ domains.  Sections 5\n   and 6 of this document define the requirements for\
    \ XML\n   representations of ROLIE; other equivalent representations (e.g.\n \
    \  JSON) may be described by other documents.  An overview of the\n   extension\
    \ system is provided in Section 7.  Implementers seeking to\n   provide support\
    \ for specific security automation information types\n   should refer to the specification\
    \ for that domain as described by the\n   IANA registry found in Section 8.4.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n   The previous key words are used in this document\
    \ to define only the\n   requirements for implementations of this specification\
    \ and are not\n   used for recommendations or requirements for the usage of ROLIE.\
    \  (In\n   other words, a programmer of a ROLIE server MUST implement a given\n\
    \   feature, but a user of that ROLIE server needn't use that feature.)\n   Definitions\
    \ for some of the common computer-security-related\n   terminology used in this\
    \ document can be found in Section 2 of\n   [RFC7970].\n   The following term\
    \ is unique to this specification:\n   Information Type:  A class of security\
    \ automation information having\n      one or more associated data models.  Often,\
    \ such security\n      automation information is used in the automation of a security\n\
    \      process.  See Section 7.1.2 for more information.\n"
- title: 3.  XML-Related Conventions
  contents:
  - '3.  XML-Related Conventions

    '
- title: 3.1.  XML Namespaces
  contents:
  - "3.1.  XML Namespaces\n   This specification uses XML namespaces [W3C.REC-xml-names-20091208]\n\
    \   to uniquely identify XML element names.  It uses the following\n   namespace\
    \ prefix mappings for the indicated namespace URI:\n   o  \"app\" is used for\
    \ the \"https://www.w3.org/2007/app\" namespace\n      defined in [RFC5023].\n\
    \   o  \"atom\" is used for the \"https://www.w3.org/2005/Atom\" namespace\n \
    \     defined in [RFC4287].\n   o  \"rolie\" is used for the \"urn:ietf:params:xml:ns:rolie:1.0\"\
    \n      namespace defined in Section 8.1 of this specification.\n"
- title: 3.2.  RELAX NG Compact Schema
  contents:
  - "3.2.  RELAX NG Compact Schema\n   Some sections of this specification are illustrated\
    \ with fragments of\n   a non-normative RELAX NG Compact Schema [RELAX-NG].  The\
    \ text of this\n   specification provides the definition of conformance.  Schema\
    \ for the\n   \"https://www.w3.org/2007/app\" and \"https://www.w3.org/2005/Atom\"\
    \n   namespaces appear in Appendix B of [RFC5023] and Appendix B of\n   [RFC4287],\
    \ respectively.\n   A complete informative RELAX NG Compact Schema for the new\
    \ elements\n   introduced by ROLIE is provided in Appendix A of this document.\n"
- title: 4.  Background and Motivation
  contents:
  - "4.  Background and Motivation\n   In order to automate security processes, tools\
    \ need access to\n   sufficient sources of structured security information that\
    \ can be\n   used to drive security processes.  Thus, security information sharing\n\
    \   is one of the core components of automating security processes.\n   Vulnerabilities,\
    \ configurations, software identification, security\n   incidents, and patch data\
    \ are just a few of the classes of\n   information that are shared today to enable\
    \ effective security on a\n   wide scale.  However, as the scale of defense broadens\
    \ as networks\n   become larger and more complex, and the volume of information\
    \ to\n   process makes humans-in-the-loop difficult to scale, the need for\n \
    \  automation and machine-to-machine communication becomes increasingly\n   critical.\n\
    \   ROLIE seeks to address this need by providing four major information-\n  \
    \ sharing benefits:\n   Extensible information type categories and format agnosticism:\
    \  ROLIE\n      is not bound to any given data format or category of information.\n\
    \      Instead, information categories are extensible, and Entries\n      declare\
    \ the format of the referenced data.  In cases where several\n      formats or\
    \ serializations are available, ROLIE can use link\n      relations to communicate\
    \ how a consumer can access these formats.\n      For example, clients may request\
    \ that a given resource\n      representation be returned as XML, JSON, or in\
    \ some other format\n      or serialization.  This approach allows the provider\
    \ to support\n      multiple isomorphic formats, allowing the consumer to select\
    \ the\n      most suitable version.\n   Open and distributed information sharing:\
    \  Using the Atom Publishing\n      Protocol (AtomPub), ROLIE Feeds can easily\
    \ aggregate Feeds and\n      accept information posted to them from other sources.\
    \  Webs of\n      communicating ROLIE servers form ad hoc sharing communities,\n\
    \      increasing data availability and the ability to correlate linked\n    \
    \  data across sources for participating consumers.  ROLIE servers\n      needn't\
    \ be distributed, however, as large ROLIE repositories can\n      function as\
    \ a central collection or federated collections.\n   Stateless communication model:\
    \  ROLIE, as a RESTful system, is\n      stateless.  That is, the server doesn't\
    \ keep track of client\n      sessions but rather uses link relations for state\
    \ transitions.  In\n      practice, this means that any consumer can find and\
    \ share\n      information at any organizational level and at any time without\n\
    \      needing to execute a long series of requests.\n   Information discovery\
    \ and navigation:  ROLIE provides a number of\n      mechanisms to allow clients\
    \ to programmatically discover and\n      navigate collections of information\
    \ in order to dynamically\n      discover new or revised content.  Extensible\
    \ information types and\n      other categories provide one way of determining\
    \ content that is\n      desirable.  Link elements, each with a target URI and\
    \ an\n      established relationship type, provide a means for ROLIE providers\n\
    \      to link other information that is relevant to the current Entry\n     \
    \ or Feed.\n   These benefits result in an information-sharing protocol that is\n\
    \   lightweight, interactive, open, and, most importantly, machine\n   readable.\n\
    \   The requirements in this specification are broken into two major\n   sections:\
    \ extensions to AtomPub [RFC5023] and extensions to the Atom\n   Syndication Format\
    \ [RFC4287].  All normative requirements in AtomPub\n   and Atom Syndication are\
    \ inherited from their respective\n   specifications and apply here unless the\
    \ requirement is explicitly\n   overridden in this document.  In this way, this\
    \ document may upgrade\n   the requirement (e.g., make a \"SHOULD\" a \"MUST\"\
    ) but will never\n   downgrade a given requirement (e.g., make a \"MUST\" a \"\
    SHOULD\").\n"
- title: 5.  ROLIE Requirements for the Atom Publishing Protocol
  contents:
  - "5.  ROLIE Requirements for the Atom Publishing Protocol\n   This section describes\
    \ a number of restrictions of, and extensions\n   to, AtomPub [RFC5023] that define\
    \ the use of AtomPub in the context\n   of a ROLIE-based solution.  The normative\
    \ requirements in this\n   section are generally oriented towards client and server\n\
    \   implementations.  An understanding of the AtomPub specification\n   [RFC5023]\
    \ is helpful to understand the requirements in this section.\n"
- title: 5.1.  AtomPub Service Documents
  contents:
  - "5.1.  AtomPub Service Documents\n   As described in Section 8 of [RFC5023], a\
    \ Service Document is an\n   XML-based document format that allows a client to\
    \ dynamically\n   discover the Collections provided by a publisher.  A Service\
    \ Document\n   consists of one or more \"app:workspace\" elements that may each\n\
    \   contain a number of \"app:collection\" elements.\n   The general structure\
    \ of a Service Document is as follows (from\n   Section 4.2 of [RFC5023]):\n \
    \       Service\n           o- Workspace\n           |    |\n           |    o-\
    \ Collection\n           |    |     |\n           |    |     o- URI, categories,\
    \ media types\n           |    |\n           |    o- ...\n           |\n     \
    \      o- Workspace\n           |     |\n           |     o- Collection\n    \
    \       |     |     |\n           |     |     o- URI, categories, media types\n\
    \           |     |\n           |     o- ...\n           |\n           o- ...\n\
    \   Note that the Internationalized Resource Identifiers (IRIs) in the\n   original\
    \ diagram have been replaced with URIs.\n"
- title: 5.1.1.  Use of the "app:workspace" Element
  contents:
  - "5.1.1.  Use of the \"app:workspace\" Element\n   In AtomPub, a workspace, represented\
    \ by the \"app:workspace\" element,\n   describes a group of one or more Collections.\
    \  Building on the\n   AtomPub concept of a workspace, in ROLIE a workspace represents\
    \ an\n   aggregation of Collections pertaining to security automation\n   information\
    \ resources.  This specification does not restrict the\n   number of workspaces\
    \ that may be in a Service Document or the\n   specific Collections to be provided\
    \ within a given workspace.\n   A ROLIE implementation can host Collections containing\
    \ both public\n   and private information Entries.  It is suggested that\n   implementations\
    \ segregate Collections into different \"app:workspace\"\n   elements by their\
    \ client access requirements.  With proper naming of\n   workspaces, this reduces\
    \ the amount of trial and error a human user\n   would need to utilize to discover\
    \ accessible Collections.\n"
- title: 5.1.2.  Use of the "app:collection" Element
  contents:
  - "5.1.2.  Use of the \"app:collection\" Element\n   In AtomPub, a Collection in\
    \ a Service Document, represented by the\n   \"app:collection\" element, provides\
    \ metadata that can be used to point\n   to a specific Atom Feed that contains\
    \ information Entries that may be\n   of interest to a client.  The association\
    \ between a Collection and a\n   Feed is provided by the \"href\" attribute of\
    \ the \"app:collection\"\n   element.  Building on the AtomPub concept of a Collection,\
    \ in ROLIE a\n   Collection represents a pointer to a group of security automation\n\
    \   information resources pertaining to a given type of security\n   automation\
    \ information.  Collections are represented as Atom Feeds as\n   per RFC 5023.\
    \  Requirements specific to Atom Feed are defined in\n   Section 6.1.\n   ROLIE\
    \ defines specialized data requirements for Collections, Feeds,\n   and Entries\
    \ containing data related to security automation.  The\n   difference between\
    \ a ROLIE Collection and a non-ROLIE Collection\n   defined in a Service Document\
    \ can be determined as follows:\n   ROLIE Collection:  An app:collection is considered\
    \ a ROLIE Collection\n      when it contains an \"app:categories\" element that\
    \ contains only\n      one \"atom:category\" element with a \"scheme\" attribute\
    \ value of\n      \"urn:ietf:params:rolie:category:information-type\".  Further,\
    \ this\n      category has an appropriate \"term\" attribute value as defined\
    \ in\n      Section 7.1.1.  This ensures that a given Collection corresponds\n\
    \      to a specific type of security automation information.\n   Non-ROLIE Collection:\
    \  An app:collection is considered a non-ROLIE\n      Collection when it does\
    \ not contain an \"atom:category\" element\n      with a \"scheme\" attribute\
    \ value of\n      \"urn:ietf:params:rolie:category:information-type\".\n   By\
    \ distinguishing between ROLIE and non-ROLIE Collections in this\n   way, implementations\
    \ supporting ROLIE can host Collections pertaining\n   to security automation\
    \ information alongside Collections of other\n   non-ROLIE information within\
    \ the same AtomPub instance.\n   The following are additional requirements on\
    \ the use of the\n   \"app:collection\" element for a ROLIE Collection:\n   o\
    \  The child \"atom:category\" elements contained in the\n      \"app:categories\"\
    \ element MUST be the same set of \"atom:category\"\n      elements used in the\
    \ Atom Feed resource referenced by the\n      \"app:collection\" element's \"\
    href\" attribute value.  This ensures\n      that the category metadata associated\
    \ with the Collection and the\n      associated Feed is discoverable in both of\
    \ these resources.\n   o  The \"app:categories\" element in an app:collection\
    \ MAY include\n      additional \"atom:category\" elements using a scheme other\
    \ than\n      \"urn:ietf:params:rolie:category:information-type\".  This allows\n\
    \      other category metadata to be included.\n"
- title: 5.1.3.  Service Document Discovery
  contents:
  - "5.1.3.  Service Document Discovery\n   The Service Document serves as the \"\
    head\" of a given ROLIE\n   repository: from the Service Document, all other repository\
    \ content\n   can be discovered.  A client will need to determine the URL of this\n\
    \   Service Document to discover the Collections provided by the\n   repository.\
    \  The client might determine the URL from a web page,\n   based on out-of-band\
    \ communication, or through a \"service\" link\n   relation in a Feed or Entry\
    \ Document that the client has already\n   retrieved.  The latter is a typical\
    \ scenario if the client learns of\n   a specific Feed or Entry through an out-of-band\
    \ mechanism and wishes\n   to discover additional information provided by the\
    \ repository.\n   This document does not provide a fully automated discovery mechanism.\n\
    \   A mechanism may be defined in the future that allows automated\n   clients\
    \ to discover the URL to use to retrieve a ROLIE Service\n   Document representing\
    \ the head of the ROLIE repository.\n"
- title: 5.2.  Category Documents
  contents:
  - "5.2.  Category Documents\n   As described in Section 7 of [RFC5023], a Category\
    \ Document is an\n   XML-based document format that allows a client to dynamically\n\
    \   discover the categories used within AtomPub Service Documents, Atom\n   Syndication\
    \ Feeds, and Entry Documents provided by a publisher.  A\n   Category Document\
    \ consists of one \"app:categories\" element that\n   contains a number of inline\
    \ \"atom:category\" elements, or a URI\n   referencing a Category Document.\n"
- title: 5.3.  Transport Layer Security
  contents:
  - "5.3.  Transport Layer Security\n   ROLIE is intended to be handled with Transport\
    \ Layer Security (TLS).\n   TLS version 1.2 MUST be supported.  TLS 1.2 SHOULD\
    \ be implemented\n   according to all recommendations and best practices presented\
    \ in\n   [RFC7525].\n   It is RECOMMENDED that the most recent published version\
    \ of TLS be\n   supported.  If this version is TLS 1.3 [TLS-1.3], it is suggested\n\
    \   that 0-RTT (Zero Round-Trip Time Resumption) not be used, in order to\n  \
    \ prevent replay attacks.  Replay attacks on PUT, POST, or DELETE\n   requests\
    \ can disrupt repository operation by modifying data\n   unexpectedly.\n   For\
    \ example, an automated ROLIE repository that updates very\n   frequently may\
    \ receive a PUT request against a given resource a few\n   times an hour (or more).\
    \  An attacker may store an early PUT request,\n   and at the end of the resumption\
    \ window replay the PUT request,\n   reverting the resource to an old version.\
    \  Not only could an attacker\n   be doing this replay continuously to cause havoc\
    \ on the server, but\n   the client is completely unaware of the attack taking\
    \ place.\n   Given the potentially sensitive nature of data handled by ROLIE,\
    \ all\n   appropriate precautions should be taken at the transport layer to\n\
    \   protect forward secrecy and user privacy.\n   The server MUST implement certificate-based\
    \ client authentication.\n   This MAY be enabled on a workspace-by-workspace basis.\n"
- title: 5.4.  User Authentication and Authorization
  contents:
  - "5.4.  User Authentication and Authorization\n   Implementations MUST support\
    \ user authentication.  However, a given\n   implementation MAY allow user authentication\
    \ to be disabled on a\n   Feed-by-Feed or workspace-by-workspace basis.\n   It\
    \ is recommended that servers participating in an information-\n   sharing consortium\
    \ and supporting interactive user logins by members\n   of the consortium support\
    \ client authentication via a federated\n   identity scheme.\n   This document\
    \ does not mandate the use of any specific user\n   authorization mechanisms.\
    \  However, service implementers SHOULD\n   support appropriate authorization\
    \ checking for all resource accesses,\n   including individual Atom Entries, Atom\
    \ Feeds, and Atom Service\n   Documents.\n"
- title: 5.5.  "/" (Forward Slash) Resource URL
  contents:
  - "5.5.  \"/\" (Forward Slash) Resource URL\n   The \"/\" resource MAY be supported\
    \ for compatibility with existing\n   deployments that are using [RFC6546] (\"\
    Transport of Real-time\n   Inter-network Defense (RID) Messages over HTTP/TLS\"\
    ).  The following\n   requirements apply only to implementations that support\
    \ both RFC 6546\n   and the \"/\" resource as described above:\n   o  Consistent\
    \ with Erratum ID 3267 [Err3267] for [RFC6546], a client\n      requesting a GET\
    \ on the \"/\" resource SHOULD receive an HTTP status\n      code 405 (\"Method\
    \ Not Allowed\").\n   o  An implementation MAY provide full support for [RFC6546]\
    \ such that\n      a POST to the \"/\" resource containing a recognized RID message\
    \ is\n      handled correctly as a RID request.  Alternatively, a client\n   \
    \   requesting a POST to \"/\" MAY receive an HTTP status code 307\n      (\"\
    Temporary Redirect\").  In this case, the location header in the\n      HTTP response\
    \ will provide the URL of the appropriate RID\n      endpoint, and the client\
    \ may repeat the POST method at the\n      indicated location.\n   If RFC 6546\
    \ is unsupported, then a request for the \"/\" resource may\n   be handled as\
    \ deemed appropriate by the server.\n"
- title: 5.6.  HTTP Methods
  contents:
  - "5.6.  HTTP Methods\n   Servers MAY accept request methods beyond those specified\
    \ in this\n   document.\n   Clients MUST be capable of recognizing and processing\
    \ any standard\n   HTTP status code, as defined in Section 5 of [RFC5023].\n"
- title: 6.  ROLIE Requirements for the Atom Syndication Format
  contents:
  - "6.  ROLIE Requirements for the Atom Syndication Format\n   This section describes\
    \ a number of restrictions of, and extensions\n   to, the Atom Syndication Format\
    \ [RFC4287] that define the valid use\n   of the format in the context of a ROLIE\
    \ implementation.  An\n   understanding of the Atom Syndication Format specification\
    \ [RFC4287]\n   is helpful to understand the requirements in this section.\n"
- title: 6.1.  Use of the "atom:feed" Element
  contents:
  - "6.1.  Use of the \"atom:feed\" Element\n   As described in Section 4.1.1 of [RFC4287],\
    \ an Atom Feed is an\n   XML-based document format that describes a list of related\n\
    \   information items.  The Atom Feeds provided by a ROLIE service are\n   listed\
    \ in the service's Service Document through one or more\n   \"app:collection\"\
    \ elements.  Each Feed Document, represented using the\n   \"atom:feed\" element,\
    \ contains a listing of zero or more Entries.\n   When applied to the problem\
    \ domain of security automation information\n   sharing, an Atom Feed may be used\
    \ to represent any meaningful\n   collection of security automation information\
    \ resources.  Each Entry\n   in a Feed represents an individual resource (e.g.,\
    \ a specific\n   checklist, a software vulnerability record).  Additional Feeds\
    \ can be\n   used to represent other collections of security automation resources.\n\
    \   As discussed in Section 5.1.2, ROLIE defines specialized data\n   requirements\
    \ for Feeds containing data related to security\n   automation.  The difference\
    \ between a ROLIE Feed and a non-ROLIE Feed\n   can be determined as follows:\n\
    \   ROLIE Feed:  For an \"atom:feed\" to be considered a ROLIE Feed, the\n   \
    \   \"atom:feed\" MUST contain only one child \"atom:category\" element\n    \
    \  with a \"scheme\" attribute value of\n      \"urn:ietf:params:rolie:category:information-type\"\
    .  This category\n      MUST have an appropriate \"term\" attribute value as defined\
    \ in\n      Section 7.1.1.  This ensures that a given Feed corresponds to a\n\
    \      specific type of security automation information.\n   Non-ROLIE Feed: \
    \ For an \"atom:feed\" to be considered a non-ROLIE\n      Feed, the \"atom:feed\"\
    \ MUST NOT contain an \"atom:category\" element\n      with a \"scheme\" attribute\
    \ value of\n      \"urn:ietf:params:rolie:category:information-type\".\n   By\
    \ distinguishing between ROLIE and non-ROLIE Feeds in this way,\n   implementations\
    \ supporting ROLIE can host Feeds pertaining to\n   security automation information\
    \ alongside Feeds of other non-ROLIE\n   information within the same AtomPub instance.\
    \  This is parallel to\n   the handling of Collections as discussed earlier in\
    \ this\n   specification (Section 5.1.2).\n   The following Atom Feed definition\
    \ represents a stricter definition\n   of the \"atom:feed\" element defined in\
    \ [RFC4287] when used as a\n   ROLIE Feed.  Any element not specified here inherits\
    \ its definition\n   and requirements from [RFC4287].\n      atomFeed =\n    \
    \     element atom:feed {\n            atomCommonAttributes,\n            (atomAuthor*\n\
    \             & atomCategory+\n             & atomContributor*\n             &\
    \ atomGenerator?\n             & atomIcon?\n             & atomId\n          \
    \   & atomLink+\n             & atomLogo?\n             & atomRights?\n      \
    \       & atomSubtitle?\n             & atomTitle\n             & atomUpdated\n\
    \             & extensionElement*),\n            atomEntry*\n         }\n   The\
    \ following subsections contain requirements for a ROLIE Feed.\n"
- title: 6.1.1.  Use of the "atom:category" Element
  contents:
  - "6.1.1.  Use of the \"atom:category\" Element\n   An \"atom:feed\" can contain\
    \ one or more \"atom:category\" elements.  In\n   Atom, the naming scheme and\
    \ the semantic meaning of the terms used to\n   identify an Atom category are\
    \ application defined.\n   The following are additional requirements on the use\
    \ of the\n   \"atom:category\" element when used in a ROLIE Feed:\n   o  All member\
    \ Entries in the Feed MUST represent security automation\n      information records\
    \ of the provided information type category.\n   o  The \"atom:feed\" MAY include\
    \ additional \"atom:category\" elements\n      using a scheme other than\n   \
    \   \"urn:ietf:params:rolie:category:information-type\".  This allows\n      other\
    \ category metadata to be included.\n"
- title: 6.1.2.  Use of the "atom:link" Element
  contents:
  - "6.1.2.  Use of the \"atom:link\" Element\n   Link relations defined by the \"\
    atom:link\" element are used to\n   represent state transitions using a stateless\
    \ approach.  In Atom, a\n   type of link relationship can be defined using the\
    \ \"rel\" attribute.\n   A ROLIE Feed MUST contain one or more \"atom:link\" elements\
    \ with\n   rel=\"service\" and an \"href\" attribute whose value is a URI that\n\
    \   points to an Atom Service Document associated with the Feed.  If a\n   client\
    \ accesses a Feed without first accessing the service's Service\n   Document,\
    \ a link with the \"service\" relationship provides a means to\n   discover additional\
    \ security automation information.  The \"service\"\n   link relationship is defined\
    \ in the IANA \"Link Relations\" registry at\n   <https://www.iana.org/assignments/link-relations/>.\n\
    \   A Feed can contain an arbitrary number of Entries.  In some cases, a\n   complete\
    \ Feed may consist of a large number of Entries.\n   Additionally, as new and\
    \ updated Entries are ordered at the beginning\n   of a Feed, a client may only\
    \ be interested in retrieving the first N\n   Entries in a Feed to process only\
    \ the Entries that have changed since\n   the last retrieval of the Feed.  As\
    \ a practical matter, a large set\n   of Entries will likely need to be divided\
    \ into more manageable\n   portions, or pages.  Based on Section 3 of [RFC5005],\
    \ link elements\n   SHOULD be included in all Feeds to support paging using the\
    \ following\n   link relation types:\n   o  \"first\" - Indicates that the \"\
    href\" attribute value of the link\n      identifies a resource URI for the furthest\
    \ preceding page of\n      the Feed.\n   o  \"last\" - Indicates that the \"href\"\
    \ attribute value of the link\n      identifies a resource URI for the furthest\
    \ following page of\n      the Feed.\n   o  \"previous\" - Indicates that the\
    \ \"href\" attribute value of the link\n      identifies a resource URI for the\
    \ immediately preceding page of\n      the Feed.\n   o  \"next\" - Indicates that\
    \ the \"href\" attribute value of the link\n      identifies a resource URI for\
    \ the immediately following page of\n      the Feed.\n   For example:\n     <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n     <feed xmlns=\"https://www.w3.org/2005/Atom\"\
    >\n         <id>b7f65304-b63b-4246-88e2-c104049c5fd7</id>\n         <title>Paged\
    \ Feed</title>\n         <link rel=\"self\" href=\"https://example.org/feedA?page=5\"\
    />\n         <link rel=\"first\" href=\"https://example.org/feedA?page=1\"/>\n\
    \         <link rel=\"prev\" href=\"https://example.org/feedA?page=4\"/>\n   \
    \      <link rel=\"next\" href=\"https://example.org/feedA?page=6\"/>\n      \
    \   <link rel=\"last\" href=\"https://example.org/feedA?page=10\"/>\n        \
    \ <updated>2012-05-04T18:13:51.0Z</updated>\n         <!-- remainder of the Feed's\
    \ elements -->\n     </feed>\n                            Example Paged Feed\n\
    \   A reference to a historical Feed may need to be stable, and/or a Feed\n  \
    \ may need to be divided into a series of defined epochs.\n   Implementations\
    \ SHOULD support the mechanisms described in Section 4\n   of [RFC5005] to provide\
    \ link-based state transitions for maintaining\n   the archiving of Feeds.\n \
    \  A Feed MAY include additional link relationships not specified in\n   this\
    \ document.  If a client encounters an unknown link relationship\n   type, the\
    \ client MUST ignore the unrecognized link and continue\n   processing as if the\
    \ unrecognized link element did not appear.  The\n   definition of new link relations\
    \ that provide additional state\n   transition extensions is discussed in Section\
    \ 7.3.\n"
- title: 6.1.3.  Use of the "atom:updated" Element
  contents:
  - "6.1.3.  Use of the \"atom:updated\" Element\n   The \"atom:updated\" element\
    \ identifies the date and time that a Feed\n   was last updated.\n   The \"atom:updated\"\
    \ element MUST be populated with the current time at\n   the instant the Feed\
    \ was last updated by adding, updating, or\n   deleting an Entry, or by changing\
    \ any metadata for the Feed.\n"
- title: 6.2.  Use of the "atom:entry" Element
  contents:
  - "6.2.  Use of the \"atom:entry\" Element\n   Each Entry in an Atom Feed, represented\
    \ by the \"atom:entry\" element,\n   describes a single referenced information\
    \ record, along with\n   descriptive information about its format, media type,\
    \ and other\n   publication metadata.  The following \"atom:entry\" schema definition\n\
    \   represents a stricter representation of the \"atom:entry\" element\n   defined\
    \ in [RFC4287] for use in a ROLIE-based Atom Feed as defined in\n   Section 6.1.1.\n\
    \     atomEntry =\n       element atom:entry {\n         atomCommonAttributes,\n\
    \         (atomAuthor*\n         & atomCategory*\n         & atomContent\n   \
    \      & atomContributor*\n         & atomId\n         & atomLink*\n         &\
    \ atomPublished?\n         & atomRights?\n         & atomSource?\n         & atomSummary?\n\
    \         & atomTitle\n         & atomUpdated\n         & rolieFormat?\n     \
    \    & rolieProperty*\n         & extensionElement*)\n     }\n   The notable changes\
    \ from [RFC4287] are the addition of \"rolieFormat\"\n   and \"rolieProperty\"\
    \ elements.  Also, the \"atomContent\" element is\n   restricted to the atomOutOfLineContent\
    \ formulation and is now\n   REQUIRED.\n   The following subsections contain requirements\
    \ for Entries in a\n   ROLIE Feed.\n"
- title: 6.2.1.  Use of the "atom:content" Element
  contents:
  - "6.2.1.  Use of the \"atom:content\" Element\n   An \"atom:content\" element associates\
    \ its containing Entry with a\n   content resource identified by the \"src\" attribute.\n\
    \   There MUST be exactly one \"atom:content\" element in the Entry.  The\n  \
    \ \"atom:content\" element MUST adhere to this definition, which is a\n   stricter\
    \ representation of the \"atom:content\" element defined in\n   [RFC4287]:\n \
    \    atomContent =\n       element atom:content {\n         atomCommonAttributes,\n\
    \         attribute type { atomMediaType },\n         attribute src { atomUri\
    \ },\n         empty\n     }\n   This restricts atomContent in ROLIE to the atomOutOfLineContent\n\
    \   formulation presented in [RFC4287].\n   The \"type\" attribute MUST identify\
    \ the serialization type of the\n   content -- for example, \"application/xml\"\
    \ or \"application/json\".  A\n   prefixed media type MAY be used to reflect a\
    \ specific model used with\n   a given serialization approach (e.g., \"application/rdf+xml\"\
    ).  The\n   \"src\" attribute MUST be a URI that can be dereferenced to retrieve\n\
    \   the related content data.\n"
- title: 6.2.2.  Use of the "atom:link" Element
  contents:
  - "6.2.2.  Use of the \"atom:link\" Element\n   Link relations can be included in\
    \ an Entry to represent state\n   transitions to and from the Entry, as well as\
    \ to provide links to\n   related information.\n   If there is a need to provide\
    \ the same information in different data\n   models and/or serialization formats,\
    \ separate Entry instances can be\n   included in the same Feed or a different\
    \ Feed.  Such an alternate\n   content representation can be indicated using an\
    \ \"atom:link\" having a\n   \"rel\" attribute with the value \"alternate\".\n\
    \   A Feed MAY include additional link relationships not specified in\n   this\
    \ document.  If a client encounters an unknown link relationship\n   type, the\
    \ client MUST ignore the unrecognized link and continue\n   processing as if the\
    \ unrecognized link element did not appear.  The\n   definition of new link relations\
    \ that provide additional state\n   transition extensions is discussed in Section\
    \ 7.3.\n"
- title: 6.2.3.  Use of the "rolie:format" Element
  contents:
  - "6.2.3.  Use of the \"rolie:format\" Element\n   As mentioned in Sections 1 and\
    \ 4, a key goal of this specification is\n   to allow a consumer to review a set\
    \ of published security automation\n   information resources and then identify\
    \ and retrieve any resources of\n   interest.  The format of the data is a key\
    \ criteria to consider when\n   deciding what information to retrieve.  For a\
    \ given type of security\n   automation information, it is expected that a number\
    \ of different\n   formats may be used to represent this information.  To support\
    \ this\n   use case, both the serialization format and the specific data model\n\
    \   expressed in that format must be known by the consumer.\n   In the Atom Syndication\
    \ Format, a media type can be defined using the\n   \"type\" attribute of the\
    \ \"atom:content\" element of an \"atom:entry\".\n   The media type can be fully\
    \ descriptive of the format of the linked\n   document, such as \"application/atom+xml\"\
    .  In some cases, however, a\n   format-specific media type may not be defined.\
    \  An example might be\n   when \"application/xml\" is used because there is no\
    \ defined specific\n   media type for the content.  In such a case, the exact\
    \ data model of\n   the content cannot be known without first retrieving the content.\n\
    \   In cases where a specific media type does not exist, the\n   \"rolie:format\"\
    \ element is used to describe the data model used to\n   express the information\
    \ referenced in the \"atom:content\" element.\n   The \"rolie:format\" element\
    \ also allows a schema to be identified that\n   can be used when parsing the\
    \ content to verify or better understand\n   the structure of the content.\n \
    \  When it appears, the \"rolie:format\" element MUST adhere to this\n   definition:\n\
    \     rolieFormat =\n       element rolie:format {\n         atomCommonAttributes,\n\
    \         attribute ns { atomUri },\n         attribute version { text } ?,\n\
    \         attribute schema-location { atomUri } ?,\n         attribute schema-type\
    \ { atomMediaType } ?,\n         empty\n     }\n   The \"rolie:format\" element\
    \ MUST provide a \"ns\" attribute that\n   identifies the data model of the resource\
    \ referenced by the\n   \"atom:content\" element.  For example, the namespace\
    \ used may be an\n   XML namespace URI or an identifier that represents a serialized\
    \ JSON\n   model.  The URI used for the \"ns\" attribute MUST be absolute.  The\n\
    \   resource identified by the URI need not be resolvable.\n   The \"rolie:format\"\
    \ element MAY provide a \"version\" attribute that\n   identifies the version\
    \ of the format used for the related\n   \"atom:content\" element.\n   The \"\
    rolie:format\" element MAY provide a \"schema-location\" attribute,\n   which\
    \ is a URI that identifies a schema resource that can be used to\n   validate\
    \ the related \"atom:content\" element.\n   The \"rolie:format\" element MAY provide\
    \ a \"schema-type\" attribute,\n   which is a media type (as described in [RFC2045])\
    \ identifying the\n   format of the schema resource identified by the \"schema-location\"\
    \n   attribute.\n   The following nominal example shows how these attributes describe\
    \ the\n   format of the content:\n"
- title: <rolie:format ns="urn:ietf:params:xml:ns:iodef-2.0"
  contents:
  - "<rolie:format ns=\"urn:ietf:params:xml:ns:iodef-2.0\"\n  version=\"2.0\"\n  schema-location=\n\
    \    \"https://www.iana.org/assignments/xml-registry/schema/iodef-2.0.xsd\"\n\
    \  schema-type=\"text/xml\"/>\n   The previous element provides an indication\
    \ that the content of the\n   given Entry is using the Incident Object Description\
    \ Exchange Format\n   (IODEF) v2 format.\n"
- title: 6.2.4.  Use of the "rolie:property" Element
  contents:
  - "6.2.4.  Use of the \"rolie:property\" Element\n   An \"atom:category\" element\
    \ provides a way to associate a name/value\n   pair of categorical information\
    \ using the \"scheme\" and \"term\"\n   attributes to represent the name and using\
    \ the \"label\" attribute to\n   represent the value.  When used in this way,\
    \ an \"atom:category\"\n   allows a specific label to be selected from a finite\
    \ set of possible\n   label values that can be used to further classify a given\
    \ Entry or\n   Feed.  Within ROLIE, there may be a need to associate additional\n\
    \   metadata with an Entry.  In such a case, the use of an\n   \"atom:category\"\
    \ is not practical to represent name/value data for\n   which the allowed values\
    \ are unbounded.  Instead, ROLIE introduces a\n   new \"rolie:property\" element\
    \ that can represent non-categorical\n   metadata as name/value pairs.  Examples\
    \ include content-specific\n   identifiers, naming data, and other properties\
    \ that allow for\n   unbounded values.\n   There MAY be zero or more \"rolie:property\"\
    \ elements in an\n   \"atom:entry\".\n   The element MUST adhere to this definition:\n\
    \     rolieProperty =\n       element rolie:property {\n         atomCommonAttributes,\n\
    \         attribute name { atomUri },\n         attribute value { text },\n  \
    \       empty\n     }\n   The \"name\" attribute provides a URI that identifies\
    \ the namespace and\n   name of the property as a URI.\n   The \"value\" attribute\
    \ is text that provides a value for the property\n   identified by the \"name\"\
    \ attribute.\n   For example, the nominal element <rolie:property\n   name=\"\
    urn:ietf:params:rolie:property:content-id\" value=\"12345\"/>\n   would expose\
    \ an IODEF ID value contained in a given Entry's content.\n   The name used in\
    \ the example also demonstrates the use of a\n   registered ROLIE property extension,\
    \ which is described in\n   Section 7.4.\n   Implementations MAY use locally defined\
    \ and namespaced elements in an\n   Entry in order to provide additional information.\
    \  Clients that do\n   not recognize a property with an unregistered \"name\"\
    \ attribute MUST\n   ignore the \"rolie:property\" element; that is, the client\
    \ MUST NOT\n   fail parsing content that contains an unrecognized property.\n"
- title: 6.2.5.  Requirements for a Standalone Entry
  contents:
  - "6.2.5.  Requirements for a Standalone Entry\n   If an Entry is ever shared as\
    \ a standalone resource, separate from\n   its containing Feed, then the following\
    \ additional requirements\n   apply:\n   o  The Entry MUST have an \"atom:link\"\
    \ element with rel=\"collection\"\n      and href=\"[URI of the containing Collection]\"\
    .  This allows the\n      Feed or Feeds of which the Entry is a member to be discovered,\n\
    \      along with the related information the Feed may contain.  In the\n    \
    \  case where the Entry has multiple containing Feeds, the Entry MUST\n      have\
    \ one \"atom:link\" for each related Feed.\n   o  The Entry MUST declare the information\
    \ type of the content\n      resource referenced by the Entry (see Section 7.1.2).\n"
- title: 7.  Available Extension Points Provided by ROLIE
  contents:
  - "7.  Available Extension Points Provided by ROLIE\n   This specification does\
    \ not require particular information types or\n   data formats; rather, ROLIE\
    \ is intended to be extended by additional\n   specifications that define the\
    \ use of new categories and link\n   relations.  The primary point of extension\
    \ is through the definition\n   of new information type category terms.  Additional\
    \ specifications\n   can register new information type category terms with IANA\
    \ that serve\n   as the main characterizing feature of a ROLIE Collection/Feed\
    \ or\n   resource/Entry.  These additional specifications defining new\n   information\
    \ type terms can describe additional requirements for\n   including specific categories\
    \ and link relations, as well as the use\n   of specific data formats supporting\
    \ a given information type term.\n"
- title: 7.1.  The Category Extension Point
  contents:
  - "7.1.  The Category Extension Point\n   The \"atom:category\" element, defined\
    \ in Section 4.2.2 of [RFC4287],\n   provides a mechanism to provide additional\
    \ categorization information\n   for a content resource in ROLIE.  The ability\
    \ to define new\n   categories is one of the core extension points provided by\
    \ Atom.  A\n   Category Document, defined in Section 7 of [RFC5023], provides\
    \ a\n   mechanism for an Atom implementation to make discoverable the\n   \"atom:category\"\
    \ terms and associated allowed values.\n   ROLIE further defines the use of the\
    \ existing Atom extension category\n   mechanism by allowing ROLIE-specific category\
    \ extensions to be\n   registered with IANA.  The\n   \"urn:ietf:params:rolie:category:information-type\"\
    \ category scheme,\n   which has special meaning for implementations of ROLIE,\
    \ has been\n   assigned (see Section 8.3).  This allows category scheme namespaces\n\
    \   to be managed in a more consistent way, allowing for greater\n   interoperability\
    \ between content producers and consumers.\n   Any \"atom:category\" element whose\
    \ \"scheme\" attribute uses an\n   unregistered scheme MUST be considered \"Private\
    \ Use\" as defined in\n   [RFC8126].  Implementations encountering such a category\
    \ MUST parse\n   the content without error but MAY otherwise ignore the element.\n\
    \   The use of the \"atom:category\" element is discussed in the following\n \
    \  subsections.\n"
- title: 7.1.1.  General Use of the "atom:category" Element
  contents:
  - "7.1.1.  General Use of the \"atom:category\" Element\n   The \"atom:category\"\
    \ element can be used for characterizing a ROLIE\n   resource.  An \"atom:category\"\
    \ element has a \"term\" attribute that\n   indicates the assigned category value\
    \ and a \"scheme\" attribute that\n   provides an identifier for the category\
    \ type.  The \"scheme\" provides\n   a means to describe how a set of category\
    \ terms should be used and\n   provides a namespace that can be used to differentiate\
    \ terms that are\n   provided by multiple organizations and that have different\
    \ semantic\n   meaning.\n   To further differentiate category types used in ROLIE,\
    \ an IANA\n   subregistry has been established for ROLIE protocol parameters to\n\
    \   support the registration of new category \"scheme\" attribute values by\n\
    \   ROLIE extension specifications.  The use of this extension point is\n   discussed\
    \ in Section 8.3, using the \"name\" field with a type\n   parameter of \"category\"\
    \ to indicate a category extension.\n"
- title: 7.1.2.  Identification of Security Automation Information Types
  contents:
  - "7.1.2.  Identification of Security Automation Information Types\n   A ROLIE-specific\
    \ extension point is provided through the\n   \"atom:category\" element's \"scheme\"\
    \ attribute value\n   \"urn:ietf:params:rolie:category:information-type\".  This\
    \ value is a\n   Uniform Resource Name (URN) [RFC8141] that is registered with\
    \ IANA as\n   described in Section 8.3.  When used as the \"scheme\" attribute\
    \ in\n   this way, the \"term\" attribute is expected to be a registered value\n\
    \   as defined in Section 8.4.  Through this mechanism, a given security\n   automation\
    \ information type can be used to:\n   1.  identify that an \"app:collection\"\
    \ element in a Service Document\n       points to an Atom Feed that contains Entries\
    \ pertaining to a\n       specific type of security automation information (see\n\
    \       Section 5.1.2),\n   2.  identify that an \"atom:feed\" element in an Atom\
    \ Feed contains\n       Entries pertaining to a specific type of security automation\n\
    \       information (see Section 6.1.1), or\n   3.  identify the information type\
    \ of a standalone resource (see\n       Section 6.2.5).\n   For example, the notional\
    \ security automation information type\n   \"incident\" would be identified as\
    \ follows:\n      <atom:category\n          scheme=\"urn:ietf:params:rolie:category:information-type\"\
    \n          term=\"incident\"/>\n   A security automation information type represents\
    \ a class of\n   information that represents the same or similar information model\n\
    \   [RFC3444].  Note that this document does not register any information\n  \
    \ types but offers the following as examples of potential information\n   types:\n\
    \   indicator:  Computing device- or network-related \"observable features\n \
    \     and phenomenon that aid in the forensic or proactive detection of\n    \
    \  malicious activity and associated metadata\" (from [RFC7970]).\n   incident:\
    \  Information pertaining to or derived from security\n      incidents.\n   vulnerability\
    \ reports:  Information identifying and describing a\n      vulnerability in hardware\
    \ or software.\n   configuration checklists:  Content that can be used to assess\
    \ the\n      configuration settings related to installed software.\n   software\
    \ tags:  Metadata used to identify and characterize\n      installable software.\n\
    \   This is a short list to inspire new engineering of information type\n   extensions\
    \ that support the automation of security processes.\n   This document does not\
    \ specify any information types.  Instead,\n   information types in ROLIE are\
    \ expected to be registered in extension\n   documents that describe one or more\
    \ new information types.  This\n   allows the information types used by ROLIE\
    \ implementations to grow\n   over time to support new security automation use\
    \ cases.  These\n   extension documents may also enhance ROLIE Service, Category,\
    \ Feed,\n   and Entry Documents by defining link relations, other categories,\
    \ and\n   Format data model extensions to address the representational needs of\n\
    \   these specific information types.  New information types are added to\n  \
    \ ROLIE through registrations to the IANA \"ROLIE Information Types\"\n   registry\
    \ defined in Section 8.4.\n"
- title: 7.2.  The "rolie:format" Extension Point
  contents:
  - "7.2.  The \"rolie:format\" Extension Point\n   Security automation data pertaining\
    \ to a given information type may\n   be expressed using a number of supported\
    \ formats.  As described in\n   Section 6.2.3, the \"rolie:format\" element is\
    \ used to describe the\n   specific data model used to represent the resource\
    \ referenced by a\n   given \"atom:entry\".  The structure provided by the \"\
    rolie:format\"\n   element provides a mechanism for extension within the \"atom:entry\"\
    \n   model.  ROLIE extensions MAY further restrict which data models are\n   allowed\
    \ to be used for a given information type.\n   By declaring the data model used\
    \ for a given resource, a consumer can\n   choose to download or ignore the resource,\
    \ or look for alternate\n   formats.  This saves the consumer from downloading\
    \ and parsing\n   resources that the consumer is not interested in or resources\n\
    \   expressed in formats that are not supported by the consumer.\n"
- title: 7.3.  The Link Relation Extension Point
  contents:
  - "7.3.  The Link Relation Extension Point\n   This document uses several link relations\
    \ defined in the IANA\n   \"Link Relation Types\" registry at\n   <https://www.iana.org/assignments/link-relations/>.\
    \  Additional link\n   relations can be registered in this registry to allow new\n\
    \   relationships to be represented in ROLIE according to Section 4.2.7.2\n  \
    \ of [RFC4287].  Based on the preceding reference, if the link relation\n   is\
    \ too specific or limited in its intended use, an absolute URI can\n   be used\
    \ in lieu of registering a new simple name with IANA.\n"
- title: 7.4.  The "rolie:property" Extension Point
  contents:
  - "7.4.  The \"rolie:property\" Extension Point\n   As discussed previously in Section\
    \ 6.2.3, many formats contain unique\n   identifying and characterizing properties\
    \ that are vital for sharing\n   information.  In order to provide a global reference\
    \ for these\n   properties, this document establishes an IANA registry that allows\n\
    \   ROLIE extensions to register named properties using the \"name\" field\n \
    \  with a type parameter of \"property\" to indicate a property extension;\n \
    \  see Section 8.3.  Implementations SHOULD prefer the use of registered\n   properties\
    \ over implementation-specific properties when possible.\n   ROLIE extensions\
    \ are expected to register new properties and use\n   existing properties to provide\
    \ valuable identifying and\n   characterizing information for a given information\
    \ type and/or\n   format.\n   Any \"rolie:property\" element whose \"name\" attribute\
    \ has\n   \"urn:ietf:params:rolie:property:local\" as a prefix MUST be considered\n\
    \   \"Private Use\" as defined in [RFC8126].  Implementations encountering\n \
    \  such a property MUST parse the content without error but MAY\n   otherwise\
    \ ignore the element.\n   This document also registers a number of general-use\
    \ properties that\n   can be used to expose content information in any ROLIE use\
    \ case.  The\n   following are descriptions of how to use these registered properties:\n\
    \   urn:ietf:params:rolie:property:content-author-name\n      The \"value\" attribute\
    \ of this property is a text representation\n      indicating the individual or\
    \ organization that authored the\n      content referenced by the \"src\" attribute\
    \ of the Entry's\n      \"atom:content\" element.  This author may differ from\
    \ the\n      \"atom:author\" element when the author of the content and the\n\
    \      author of the Entry are different people or entities.\n   urn:ietf:params:rolie:property:content-id\n\
    \      The \"value\" attribute of this property is a text representation of\n\
    \      an identifier pertaining to or extracted from the content\n      referenced\
    \ by the \"src\" attribute of the Entry's \"atom:content\"\n      element.  For\
    \ example, if the \"atom:entry\"'s \"atom:content\"\n      element links to an\
    \ IODEF document, the \"content-id\" value would\n      be an identifier of that\
    \ IODEF document.\n   urn:ietf:params:rolie:property:content-published-date\n\
    \      The \"value\" attribute of this property is a text representation\n   \
    \   indicating the original publication date of the content referenced\n     \
    \ by the \"src\" attribute of the Entry's \"atom:content\" element.\n      This\
    \ date may differ from the published date of the ROLIE Entry\n      because publication\
    \ of the content and publication of the ROLIE\n      Entry represent different\
    \ events.  The date MUST be formatted as\n      specified in [RFC3339].\n   urn:ietf:params:rolie:property:content-updated-date\n\
    \      The \"value\" attribute of this property is a text representation\n   \
    \   indicating the date that the content, referenced by the \"src\"\n      attribute\
    \ of the Entry's \"atom:content\" element, was last updated.\n      This date\
    \ may differ from the updated date of the ROLIE Entry\n      because updates made\
    \ to the content and to the ROLIE Entry are\n      different events.  The date\
    \ MUST be formatted as specified in\n      [RFC3339].\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has a number of IANA considerations,\
    \ as described in\n   the following subsections.\n"
- title: 8.1.  XML Namespaces and Schema URNs
  contents:
  - "8.1.  XML Namespaces and Schema URNs\n   This document uses URNs to describe\
    \ XML namespaces and XML schemas\n   conforming to the registry mechanism described\
    \ in [RFC3688].\n   ROLIE XML Namespace:  The ROLIE namespace (rolie-1.0) has\
    \ been\n      registered in the \"ns\" registry.\n      URI: urn:ietf:params:xml:ns:rolie-1.0\n\
    \      Registrant Contact: IESG\n      XML: None.  Namespace URIs do not represent\
    \ an XML specification.\n   ROLIE XML Schema:  The ROLIE schema (rolie-1.0) has\
    \ been registered\n      in the \"schema\" registry.\n      URI: urn:ietf:params:xml:schema:rolie-1.0\n\
    \      Registrant Contact: IESG\n      XML: See Appendix A of this document.\n"
- title: 8.2.  ROLIE URN Sub-namespace
  contents:
  - "8.2.  ROLIE URN Sub-namespace\n   IANA has added an entry to the \"IETF URN Sub-namespace\
    \ for Registered\n   Protocol Parameter Identifiers\" registry located at\n  \
    \ <https://www.iana.org/assignments/params/> as per [RFC3553].\n   The entry is\
    \ as follows:\n      Registered Parameter Identifier: rolie\n      Specification:\
    \ This document\n      Repository: ROLIE URN Parameters.  See Section 8.3.\n \
    \     Index value: See Section 8.4.\n"
- title: 8.3.  ROLIE URN Parameters
  contents:
  - "8.3.  ROLIE URN Parameters\n   A new top-level registry has been created, titled\
    \ \"Resource-Oriented\n   Lightweight Information Exchange (ROLIE) URN Parameters\"\
    .\n   Registration in the \"ROLIE URN Parameters\" subregistry is via the\n  \
    \ Specification Required policy [RFC8126].  Registration requests must\n   be\
    \ sent to both the MILE Working Group mailing list (mile@ietf.org)\n   and IANA.\
    \  IANA will forward registration requests to the Designated\n   Expert.\n   Each\
    \ entry in this subregistry must record the following fields:\n   Name:  A URN\
    \ segment that adheres to the pattern {type}:{label}.  The\n      keywords are\
    \ defined as follows:\n      {type}:   The parameter type.  The allowed values\
    \ are \"category\"\n                or \"property\".  \"category\" denotes a category\
    \ extension\n                as discussed in Section 7.1.  \"property\" denotes\
    \ a\n                property extension as discussed in Section 7.4.\n      {label}:\
    \  A required US-ASCII string that conforms to the URN\n                syntax\
    \ requirements (see [RFC8141]).  This string must\n                be unique within\
    \ the namespace defined by the {type}\n                keyword.  The \"local\"\
    \ label for both the \"category\" and\n                \"property\" types has\
    \ been reserved for private use.\n   Extension URI:  The identifier to use within\
    \ ROLIE, which is the full\n      URN using the form \"urn:ietf:params:rolie:{name}\"\
    , where {name} is\n      the \"name\" field of this registration.\n   Reference:\
    \  A static link to the specification and section where the\n      definition\
    \ of the parameter can be found.\n   Subregistry:  An optional field that links\
    \ to an IANA subregistry for\n      this parameter.  If the {type} is \"category\"\
    , the subregistry must\n      contain a \"name\" field whose registered values\
    \ MUST be US-ASCII.\n      The list of names are the allowed values of the \"\
    term\" attribute\n      in the \"atom:category\" element (see Section 7.1.2).\n\
    \   This repository has the following initial values:\n   +--------------+------------------------+-------------+-------------+\n\
    \   | Name         | Extension URI          | Reference   | Subregistry |\n  \
    \ |              |                        | (This       |             |\n   |\
    \              |                        | Document)   |             |\n   +--------------+------------------------+-------------+-------------+\n\
    \   | category:    | urn:ietf:params:rolie: | Section 8.4 | See         |\n  \
    \ | information- | category:              |             | Section 8.4 |\n   |\
    \ type         | information-type       |             |             |\n   |  \
    \            |                        |             |             |\n   |    \
    \          |                        |             |             |\n   |      \
    \        |                        |             |             |\n   | property:\
    \    | urn:ietf:params:rolie: | Section 7.4 | None        |\n   | content-   \
    \  | property:content-      |             |             |\n   | author-name  |\
    \ author-name            |             |             |\n   |              |  \
    \                      |             |             |\n   | property:    | urn:ietf:params:rolie:\
    \ | Section 7.4 | None        |\n   | content-id   | property:content-id    |\
    \             |             |\n   |              |                        |  \
    \           |             |\n   | property:    | urn:ietf:params:rolie: | Section\
    \ 7.4 | None        |\n   | content-     | property:content-      |          \
    \   |             |\n   | published-   | published-date         |            \
    \ |             |\n   | date         |                        |             |\
    \             |\n   |              |                        |             |  \
    \           |\n   | property:    | urn:ietf:params:rolie: | Section 7.4 | None\
    \        |\n   | content-     | property:content-      |             |       \
    \      |\n   | updated-date | updated-date           |             |         \
    \    |\n   +--------------+------------------------+-------------+-------------+\n"
- title: 8.4.  ROLIE Information Types Registry
  contents:
  - "8.4.  ROLIE Information Types Registry\n   A new subregistry has been created\
    \ to store ROLIE information type\n   values.\n      Name of Registry:  \"ROLIE\
    \ Information Types\"\n      Location of Registry:\n         <https://www.iana.org/assignments/rolie/>\n\
    \      Fields to record in the registry:\n         Name: The full name of the\
    \ security resource information type\n         as a string from the printable\
    \ ASCII character set [RFC20] with\n         individual embedded spaces allowed.\
    \  This value must be unique\n         in the context of this table.  The ABNF\
    \ [RFC5234] syntax for\n         this field is:\n            1*VCHAR *(SP 1*VCHAR)\n\
    \         Index: An IANA-assigned positive integer that identifies the\n     \
    \    registration.  The first entry added to this registry uses the\n        \
    \ value 1, and this value is incremented for each subsequent\n         entry added\
    \ to the registry.\n         Reference: A list of one or more URIs [RFC3986] from\
    \ which the\n         registered specification can be obtained.  The registered\n\
    \         specification MUST be readily and publicly available from that\n   \
    \      URI.  The URI SHOULD be a stable reference.\n      Allocation Policy: Specification\
    \ Required, as per [RFC8126]\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document defines a resource-oriented approach\
    \ for lightweight\n   information exchange using HTTP over TLS, the Atom Syndication\n\
    \   Format, and AtomPub.  As such, implementers must understand the\n   security\
    \ considerations described in those specifications.  All that\n   follows is guidance;\
    \ instructions that are more specific are out of\n   scope for this document.\n\
    \   To protect the confidentiality of a given resource provided by a\n   ROLIE\
    \ implementation, requests for retrieval of the resource need to\n   be authenticated\
    \ to prevent unauthorized users from accessing the\n   resource (see Section 5.4).\
    \  It can also be useful to log and audit\n   access to sensitive resources to\
    \ verify that proper access controls\n   remain in place over time.\n   Access\
    \ control to information published using ROLIE should use\n   mechanisms that\
    \ are appropriate to the sensitivity of the\n   information.  Primitive authentication\
    \ mechanisms like HTTP Basic\n   Authentication [RFC7617] are rarely appropriate\
    \ for sensitive\n   information.  A number of authentication schemes are defined\
    \ in the\n   \"HTTP Authentication Schemes\" registry at\n   <https://www.iana.org/assignments/http-authschemes/>.\
    \  Of these, HTTP\n   Origin-Bound Authentication (HOBA) [RFC7486] and SCRAM-SHA-256\n\
    \   [RFC7804] (\"SCRAM\" stands for \"Salted Challenge Response\n   Authentication\
    \ Mechanism\") provide improved security properties over\n   HTTP Basic [RFC7617]and\
    \ Digest [RFC7616] authentication schemes.\n   However, sharing communities that\
    \ are engaged in sensitive\n   collaborative analysis and/or operational response\
    \ for indicators and\n   incidents targeting high-value information systems should\
    \ adopt a\n   suitably stronger user authentication solution, such as a risk-based\n\
    \   or multi-factor approach.\n   Collaborating consortiums may benefit from the\
    \ adoption of a\n   federated identity solution, such as those based upon OAuth\
    \ [RFC6749]\n   with the JSON Web Token (JWT) [RFC7797], or SAML-core [SAML-core]\n\
    \   (\"SAML\" stands for \"Security Assertion Markup Language\"), SAML-bind\n\
    \   [SAML-bind], and SAML-prof [SAML-prof] for web-based authentication\n   and\
    \ cross-organizational single sign-on.  Dependency on a trusted\n   third-party\
    \ identity provider implies that appropriate care must be\n   exercised to sufficiently\
    \ secure the identity provider.  Any attacks\n   on the federated identity system\
    \ would present a risk to the\n   consortium, as a relying party.  Potential mitigations\
    \ include\n   deployment of a federation-aware identity provider that is under\
    \ the\n   control of the information-sharing consortium, with suitably\n   stringent\
    \ technical and management controls.\n   Authorization of resource representations\
    \ is the responsibility of\n   the source system, i.e., based on the authenticated\
    \ user identity\n   associated with an HTTP(S) request.  The required authorization\n\
    \   policies that are to be enforced must therefore be managed by the\n   security\
    \ administrators of the source system.  Various authorization\n   architectures\
    \ would be suitable for this purpose, such as Role-Based\n   Access Control (RBAC)\
    \ <https://csrc.nist.gov/projects/\n   role-based-access-control> and/or Attribute-Based\
    \ Access Control\n   (ABAC), as embodied in the eXtensible Access Control Markup\
    \ Language\n   (XACML) [XACML].  In particular, implementers adopting XACML may\n\
    \   benefit from the capability to represent their authorization policies\n  \
    \ in a standardized, interoperable format.  Note that implementers are\n   free\
    \ to choose any suitable authorization mechanism that is capable\n   of fulfilling\
    \ the policy enforcement requirements relevant to their\n   consortium and/or\
    \ organization.\n   Additional security requirements such as enforcing message-level\n\
    \   security at the destination system could supplement the security\n   enforcements\
    \ performed at the source system; however, these\n   destination-provided policy\
    \ enforcements are out of scope for this\n   specification.  Implementers requiring\
    \ this capability should\n   consider leveraging, for example, the <RIDPolicy>\
    \ element in the RID\n   schema.  Refer to Section 9 of [RFC6545] for more information.\n\
    \   Additionally, the underlying serialization approach used in the\n   representation\
    \ (e.g., XML, JSON) can offer encryption and message\n   authentication capabilities.\
    \  For example, XML Digital Signatures\n   (XMLDSIG) [RFC3275] for XML, as well\
    \ as JSON Web Encryption [RFC7516]\n   and JSON Web Signature [RFC7515] for JSON,\
    \ can provide such\n   mechanisms.\n   When security policies relevant to the\
    \ source system are to be\n   enforced at both the source and destination systems,\
    \ implementers\n   must take care to avoid unintended interactions of the separately\n\
    \   enforced policies.  Potential risks will include unintended denial of\n  \
    \ service and/or unintended information leakage.  These problems may be\n   mitigated\
    \ by avoiding any dependence upon enforcements performed at\n   the destination\
    \ system.  When distributed enforcement is unavoidable,\n   the usage of a standard\
    \ language (e.g., XACML) for the expression of\n   authorization policies will\
    \ enable the source and destination systems\n   to better coordinate and align\
    \ their respective policy expressions.\n   A service discovery mechanism is not\
    \ explicitly specified in this\n   document, but there are several approaches\
    \ available for\n   implementers.  When selecting this mechanism, implementations\
    \ need to\n   ensure that their choice provides a means for authenticating the\n\
    \   server.  DNS SRV records [RFC2782] are a possible solution to the\n   discovery\
    \ problem described in Section 5.1.3.\n"
- title: 10.  Privacy Considerations
  contents:
  - "10.  Privacy Considerations\n   The optional \"author\" field may provide an\
    \ identification privacy\n   issue if populated without the author's consent.\
    \  This information\n   may become public if posted to a public Feed.  When aggregating\
    \ or\n   sharing Entries from other Feeds or when programmatically generating\n\
    \   ROLIE Entries from some data source, special care should be taken to\n   ensure\
    \ that the author's personal information is not shared without\n   the author's\
    \ consent.\n   When using AtomPub to POST Entries to a Feed, attackers may use\n\
    \   correlating techniques to profile the user.  The request time can be\n   compared\
    \ to the generated \"updated\" field of the Entry in order to\n   build out information\
    \ about a given user.  This correlation attempt\n   can be mitigated by not using\
    \ HTTP requests to POST Entries when\n   profiling is a risk and instead using\
    \ backend control of the Feeds.\n   Adoption of the information-sharing approach\
    \ described in this\n   document will enable users to more easily perform correlations\
    \ across\n   separate, and potentially unrelated, cybersecurity information\n\
    \   providers.  A client may succeed in assembling a data set that would\n   not\
    \ have been permitted within the context of the authorization\n   policies of\
    \ either provider when considered individually.  Thus,\n   providers may face\
    \ a risk of an attacker obtaining an access that\n   constitutes an undetected\
    \ separation of duties (SOD) violation.  It\n   is important to note that this\
    \ risk is not unique to this\n   specification, and a similar potential for abuse\
    \ exists with any\n   other cybersecurity information-sharing protocol.  However,\
    \ the wide\n   availability of tools for HTTP clients and Atom Feed handling implies\n\
    \   that the resources and technical skills required for a successful\n   exploit\
    \ may be less than it was previously.  This risk can be best\n   mitigated through\
    \ appropriate vetting of the client at the time of\n   account provisioning. \
    \ In addition, any increase in the risk of this\n   type of abuse should be offset\
    \ by the corresponding increase in\n   effectiveness that this specification affords\
    \ to the defenders.\n   Overall, privacy concerns in ROLIE can be mitigated by\
    \ following\n   security considerations and by the careful use of the optional\n\
    \   personally identifying elements (e.g., author) provided by Atom\n   Syndication\
    \ and ROLIE.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RELAX-NG] Clark, J., Ed., \"RELAX NG Compact\
    \ Syntax\", November 2002,\n              <https://www.oasis-open.org/committees/relax-ng/\n\
    \              compact-20021121.html>.\n   [RFC20]    Cerf, V., \"ASCII format\
    \ for network interchange\", STD 80,\n              RFC 20, DOI 10.17487/RFC0020,\
    \ October 1969,\n              <https://www.rfc-editor.org/info/rfc20>.\n   [RFC2045]\
    \  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n              Extensions\
    \ (MIME) Part One: Format of Internet Message\n              Bodies\", RFC 2045,\
    \ DOI 10.17487/RFC2045, November 1996,\n              <https://www.rfc-editor.org/info/rfc2045>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3339]\
    \  Klyne, G. and C. Newman, \"Date and Time on the Internet:\n              Timestamps\"\
    , RFC 3339, DOI 10.17487/RFC3339, July 2002,\n              <https://www.rfc-editor.org/info/rfc3339>.\n\
    \   [RFC3553]  Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"An\n  \
    \            IETF URN Sub-namespace for Registered Protocol\n              Parameters\"\
    , BCP 73, RFC 3553, DOI 10.17487/RFC3553,\n              June 2003, <https://www.rfc-editor.org/info/rfc3553>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC4287]  Nottingham, M., Ed., and R. Sayre, Ed., \"The Atom\n          \
    \    Syndication Format\", RFC 4287, DOI 10.17487/RFC4287,\n              December\
    \ 2005, <https://www.rfc-editor.org/info/rfc4287>.\n   [RFC5005]  Nottingham,\
    \ M., \"Feed Paging and Archiving\", RFC 5005,\n              DOI 10.17487/RFC5005,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc5005>.\n\
    \   [RFC5023]  Gregorio, J., Ed., and B. de hOra, Ed., \"The Atom\n          \
    \    Publishing Protocol\", RFC 5023, DOI 10.17487/RFC5023,\n              October\
    \ 2007, <https://www.rfc-editor.org/info/rfc5023>.\n   [RFC5234]  Crocker, D.,\
    \ Ed., and P. Overell, \"Augmented BNF for\n              Syntax Specifications:\
    \ ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n\
    \              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC6546]  Trammell,\
    \ B., \"Transport of Real-time Inter-network\n              Defense (RID) Messages\
    \ over HTTP/TLS\", RFC 6546,\n              DOI 10.17487/RFC6546, April 2012,\n\
    \              <https://www.rfc-editor.org/info/rfc6546>.\n   [RFC7525]  Sheffer,\
    \ Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations for Secure\
    \ Use of Transport Layer\n              Security (TLS) and Datagram Transport\
    \ Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\n\
    \              May 2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC7970]\
    \  Danyliw, R., \"The Incident Object Description Exchange\n              Format\
    \ Version 2\", RFC 7970, DOI 10.17487/RFC7970,\n              November 2016, <https://www.rfc-editor.org/info/rfc7970>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in\n         \
    \     RFC 2119 Key Words\", BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174,\
    \ May 2017,\n              <https://www.rfc-editor.org/info/rfc8174>.\n   [W3C.REC-xml-names-20091208]\n\
    \              Bray, T., Hollander, D., Layman, A., Tobin, R., and H.\n      \
    \        Thompson, \"Namespaces in XML 1.0 (Third Edition)\", World\n        \
    \      Wide Web Consortium Recommendation REC-xml-names-20091208,\n          \
    \    December 2009, <https://www.w3.org/TR/2009/\n              REC-xml-names-20091208>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [Err3267]  RFC Errata, Erratum ID 3267, RFC\
    \ 6546,\n              <https://www.rfc-editor.org/errata/eid3267>.\n   [REST]\
    \     Fielding, R., \"Architectural Styles and the Design of\n              Network-based\
    \ Software Architectures\", 2000,\n              <http://www.ics.uci.edu/~fielding/pubs/\n\
    \              dissertation/top.htm>.\n   [RFC2782]  Gulbrandsen, A., Vixie, P.,\
    \ and L. Esibov, \"A DNS RR for\n              specifying the location of services\
    \ (DNS SRV)\", RFC 2782,\n              DOI 10.17487/RFC2782, February 2000,\n\
    \              <https://www.rfc-editor.org/info/rfc2782>.\n   [RFC3275]  Eastlake\
    \ 3rd, D., Reagle, J., and D. Solo, \"(Extensible\n              Markup Language)\
    \ XML-Signature Syntax and Processing\",\n              RFC 3275, DOI 10.17487/RFC3275,\
    \ March 2002,\n              <https://www.rfc-editor.org/info/rfc3275>.\n   [RFC3444]\
    \  Pras, A. and J. Schoenwaelder, \"On the Difference between\n              Information\
    \ Models and Data Models\", RFC 3444,\n              DOI 10.17487/RFC3444, January\
    \ 2003,\n              <https://www.rfc-editor.org/info/rfc3444>.\n   [RFC6545]\
    \  Moriarty, K., \"Real-time Inter-network Defense (RID)\",\n              RFC\
    \ 6545, DOI 10.17487/RFC6545, April 2012,\n              <https://www.rfc-editor.org/info/rfc6545>.\n\
    \   [RFC6749]  Hardt, D., Ed., \"The OAuth 2.0 Authorization Framework\",\n  \
    \            RFC 6749, DOI 10.17487/RFC6749, October 2012,\n              <https://www.rfc-editor.org/info/rfc6749>.\n\
    \   [RFC7486]  Farrell, S., Hoffman, P., and M. Thomas, \"HTTP\n             \
    \ Origin-Bound Authentication (HOBA)\", RFC 7486,\n              DOI 10.17487/RFC7486,\
    \ March 2015,\n              <https://www.rfc-editor.org/info/rfc7486>.\n   [RFC7515]\
    \  Jones, M., Bradley, J., and N. Sakimura, \"JSON Web\n              Signature\
    \ (JWS)\", RFC 7515, DOI 10.17487/RFC7515,\n              May 2015, <https://www.rfc-editor.org/info/rfc7515>.\n\
    \   [RFC7516]  Jones, M. and J. Hildebrand, \"JSON Web Encryption (JWE)\",\n \
    \             RFC 7516, DOI 10.17487/RFC7516, May 2015,\n              <https://www.rfc-editor.org/info/rfc7516>.\n\
    \   [RFC7616]  Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP\n     \
    \         Digest Access Authentication\", RFC 7616,\n              DOI 10.17487/RFC7616,\
    \ September 2015,\n              <https://www.rfc-editor.org/info/rfc7616>.\n\
    \   [RFC7617]  Reschke, J., \"The 'Basic' HTTP Authentication Scheme\",\n    \
    \          RFC 7617, DOI 10.17487/RFC7617, September 2015,\n              <https://www.rfc-editor.org/info/rfc7617>.\n\
    \   [RFC7797]  Jones, M., \"JSON Web Signature (JWS) Unencoded Payload\n     \
    \         Option\", RFC 7797, DOI 10.17487/RFC7797, February 2016,\n         \
    \     <https://www.rfc-editor.org/info/rfc7797>.\n   [RFC7804]  Melnikov, A.,\
    \ \"Salted Challenge Response HTTP\n              Authentication Mechanism\",\
    \ RFC 7804, DOI 10.17487/RFC7804,\n              March 2016, <https://www.rfc-editor.org/info/rfc7804>.\n\
    \   [RFC8141]  Saint-Andre, P. and J. Klensin, \"Uniform Resource Names\n    \
    \          (URNs)\", RFC 8141, DOI 10.17487/RFC8141, April 2017,\n           \
    \   <https://www.rfc-editor.org/info/rfc8141>.\n   [SAML-bind]\n             \
    \ Cantor, S., Hirsch, F., Kemp, J., Philpott, R., and E.\n              Maler,\
    \ \"Bindings for the OASIS Security Assertion Markup\n              Language (SAML)\
    \ V2.0\", OASIS Standard saml-bindings-\n              2.0-os, March 2005, <http://docs.oasis-open.org/\n\
    \              security/saml/v2.0/saml-bindings-2.0-os.pdf>.\n   [SAML-core]\n\
    \              Cantor, S., Kemp, J., Philpott, R., and E. Maler,\n           \
    \   \"Assertions and Protocols for the OASIS Security Assertion\n            \
    \  Markup Language (SAML) V2.0\", OASIS Standard saml-core-\n              2.0-os,\
    \ March 2005, <http://docs.oasis-open.org/\n              security/saml/v2.0/saml-core-2.0-os.pdf>.\n\
    \   [SAML-prof]\n              Hughes, J., Cantor, S., Hodges, J., Hirsch, F.,\
    \ Mishra,\n              P., Philpott, R., and E. Maler, \"Profiles for the OASIS\n\
    \              Security Assertion Markup Language (SAML) V2.0\", OASIS\n     \
    \         Standard saml-profiles-2.0-os, March 2005,\n              <http://docs.oasis-open.org/security/saml/v2.0/\n\
    \              saml-profiles-2.0-os.pdf>.\n   [TLS-1.3]  Rescorla, E., \"The Transport\
    \ Layer Security (TLS) Protocol\n              Version 1.3\", Work in Progress,\
    \ draft-ietf-tls-tls13-23,\n              January 2018.\n   [XACML]    Rissanen,\
    \ E., \"eXtensible Access Control Markup Language\n              (XACML) Version\
    \ 3.0 Plus Errata 01\", July 2017,\n              <http://docs.oasis-open.org/xacml/3.0/\n\
    \              xacml-3.0-core-spec-en.pdf>.\n"
- title: Appendix A.  RELAX NG Compact Schema for ROLIE
  contents:
  - "Appendix A.  RELAX NG Compact Schema for ROLIE\n   This appendix is informative.\n\
    \   The RELAX NG schema below defines the \"rolie:format\" element.\n   # -*-\
    \ rnc -*-\n   # RELAX NG Compact Syntax Grammar for the rolie ns\n   namespace\
    \ rolie = \"urn:ietf:params:xml:ns:rolie-1.0\"\n   # import the ATOM Syndication\
    \ RELAX NG Compact Syntax Grammar\n   include \"atomsynd.rnc\"\n   # rolie:format\n\
    \   rolieFormat =\n     element rolie:format {\n       atomCommonAttributes,\n\
    \       attribute ns { atomUri },\n       attribute version { text } ?,\n    \
    \   attribute schema-location { atomUri } ?,\n       attribute schema-type { atomMediaType\
    \ } ?,\n       empty\n     }\n   # rolie:property\n   rolieProperty =\n     element\
    \ rolie:property {\n       atomCommonAttributes,\n       attribute name { atomUri\
    \ },\n       attribute value { text },\n       empty\n     }\n"
- title: Appendix B.  Examples of Use
  contents:
  - 'Appendix B.  Examples of Use

    '
- title: B.1.  Service Discovery
  contents:
  - "B.1.  Service Discovery\n   This appendix provides a non-normative example of\
    \ a client doing\n   service discovery.\n   An Atom Service Document enables a\
    \ client to dynamically discover\n   what Feeds a particular publisher makes available.\
    \  Thus, a provider\n   uses an Atom Service Document to enable authorized clients\
    \ to\n   determine what specific information the provider makes available to\n\
    \   the community.  The Service Document should be made accessible from\n   an\
    \ easily found location, such as a link from the producer's\n   home page.\n \
    \  A client may format an HTTP GET request to retrieve the Service\n   Document\
    \ from the specified location:\n     GET /rolie/servicedocument\n     Host: www.example.org\n\
    \     Accept: application/atomsvc+xml\n   Notice the use of the HTTP Accept: request\
    \ header, indicating the\n   MIME type for Atom service discovery.  The response\
    \ to this GET\n   request will be an XML document that contains information on\
    \ the\n   specific Collections that are provided.\n   Example HTTP GET response:\n\
    \    HTTP/1.1 200 OK\n    Date: Fri, 24 Aug 2016 17:09:11 GMT\n    Content-Length:\
    \ 570\n    Content-Type: application/atomsvc+xml;charset=\"utf-8\"\n    <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n    <service xmlns=\"https://www.w3.org/2007/app\"\
    \n        xmlns:atom=\"https://www.w3.org/2005/Atom\">\n      <workspace>\n  \
    \      <atom:title type=\"text\">Vulnerabilities</atom:title>\n        <collection\
    \ href=\"https://example.org/provider/vulns\">\n          <atom:title type=\"\
    text\">Vulnerabilities Feed</atom:title>\n          <categories fixed=\"yes\"\
    >\n            <atom:category\n                scheme=\"urn:ietf:params:rolie:category:information-type\"\
    \n                term=\"vulnerability\"/>\n          </categories>\n        </collection>\n\
    \      </workspace>\n    </service>\n   This simple Service Document example shows\
    \ that the server provides\n   one workspace, named \"Vulnerabilities\".  Within\
    \ that workspace, the\n   server makes one Collection available.\n   A server\
    \ may also offer a number of different Collections, each\n   containing different\
    \ types of security automation information.  In\n   the following example, a number\
    \ of different Collections are\n   provided, each with its own category and authorization\
    \ scope.  This\n   categorization will help the clients to decide which Collections\
    \ will\n   meet their needs.\n    HTTP/1.1 200 OK\n    Date: Fri, 24 Aug 2016\
    \ 17:10:11 GMT\n    Content-Length: 1912\n    Content-Type: application/atomsvc+xml;charset=\"\
    utf-8\"\n    <?xml version=\"1.0\" encoding='utf-8'?>\n    <service xmlns=\"https://www.w3.org/2007/app\"\
    \n        xmlns:atom=\"https://www.w3.org/2005/Atom\">\n      <workspace>\n  \
    \      <atom:title>Public Security Information Sharing</atom:title>\n        <collection\n\
    \            href=\"https://example.org/provider/public/vulns\">\n          <atom:title>Public\
    \ Vulnerabilities</atom:title>\n          <atom:link rel=\"service\"\n       \
    \     href=\"https://example.org/rolie/servicedocument\"/>\n          <categories\
    \ fixed=\"yes\">\n            <atom:category\n                scheme=\"urn:ietf:params:rolie:category:information-type\"\
    \n                term=\"vulnerability\"/>\n          </categories>\n        </collection>\n\
    \      </workspace>\n      <workspace>\n        <atom:title>Private Consortium\
    \ Sharing</atom:title>\n        <collection\n            href=\"https://example.org/provider/private/incidents\"\
    >\n          <atom:title>Incidents</atom:title>\n          <atom:link rel=\"service\"\
    \n            href=\"https://example.org/rolie/servicedocument\"/>\n         \
    \ <categories fixed=\"yes\">\n            <atom:category\n                scheme=\"\
    urn:ietf:params:rolie:category:information-type\"\n                term=\"incident\"\
    />\n          </categories>\n        </collection>\n      </workspace>\n    </service>\n\
    \   In this example, the provider is making available a total of two\n   Collections,\
    \ organized into two different workspaces.  The first\n   workspace contains a\
    \ Collection consisting of publicly available\n   software vulnerabilities.  The\
    \ second workspace provides an incident\n   Collection for use by a private sharing\
    \ consortium.  An appropriately\n   authenticated and authorized client may then\
    \ proceed to make HTTP\n   requests for these Collections.  The publicly provided\
    \ vulnerability\n   information may be accessible with or without authentication.\n\
    \   However, users accessing the Collection restricted to authorized\n   members\
    \ of a private sharing consortium are expected to authenticate\n   before access\
    \ is allowed.\n"
- title: B.2.  Feed Retrieval
  contents:
  - "B.2.  Feed Retrieval\n   This appendix provides a non-normative example of a\
    \ client retrieving\n   a vulnerability Feed.\n   Having discovered the available\
    \ Collections that share security\n   information, a client who is a member of\
    \ the general public may be\n   interested in receiving the Collection of public\
    \ vulnerabilities,\n   expressed as Common Vulnerabilities and Exposures (CVEs).\
    \  The client\n   may retrieve the Feed for this Collection by performing an HTTP\
    \ GET\n   operation on the URL indicated by the Collection's \"href\" attribute.\n\
    \   Example HTTP GET request for a Feed:\n     GET /provider/public/vulns\n  \
    \   Host: www.example.org\n     Accept: application/atom+xml\n   The corresponding\
    \ HTTP response would be an XML document containing\n   the vulnerability Feed:\n\
    \   Example HTTP GET response for a Feed:\n     HTTP/1.1 200 OK\n     Date: Fri,\
    \ 24 Aug 2016 17:20:11 GMT\n     Content-Length: 2882\n     Content-Type: application/atom+xml;charset=\"\
    utf-8\"\n     <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     <feed xmlns=\"\
    https://www.w3.org/2005/Atom\"\n         xmlns:rolie=\"urn:ietf:params:xml:ns:rolie-1.0\"\
    \n         xml:lang=\"en-US\">\n       <id>2a7e265a-39bc-43f2-b711-b8fd9264b5c9</id>\n\
    \       <title type=\"text\">\n           Atom-formatted representation of\n \
    \          a Feed of XML vulnerability documents\n       </title>\n       <category\n\
    \           scheme=\"urn:ietf:params:rolie:category:information-type\"\n     \
    \      term=\"vulnerability\"/>\n       <updated>2016-05-04T18:13:51.0Z</updated>\n\
    \       <link rel=\"self\"\n           href=\"https://example.org/provider/public/vulns\"\
    />\n       <link rel=\"service\"\n           href=\"https://example.org/rolie/servicedocument\"\
    />\n       <entry>\n         <rolie:format ns=\"urn:ietf:params:xml:ns:exampleformat\"\
    />\n         <id>dd786dba-88e6-440b-9158-b8fae67ef67c</id>\n         <title>Sample\
    \ Vulnerability</title>\n         <published>2015-08-04T18:13:51.0Z</published>\n\
    \         <updated>2015-08-05T18:13:51.0Z</updated>\n         <summary>A vulnerability\
    \ issue identified by CVE-...</summary>\n         <content type=\"application/xml\"\
    \n             src=\"https://example.org/provider/vulns/123456/data\"/>\n    \
    \   </entry>\n       <entry>\n           <!-- ...another entry... -->\n      \
    \ </entry>\n     </feed>\n   This Feed Document has two Atom Entries, one of which\
    \ has been\n   elided.  The first Entry illustrates an \"atom:entry\" element\
    \ that\n   provides a summary of essential details about one particular\n   vulnerability.\
    \  Based upon this summary information and the provided\n   category information,\
    \ a client may choose to do an HTTP GET request\n   on the content \"src\" attribute\
    \ to retrieve the full details of the\n   vulnerability.\n"
- title: B.3.  Entry Retrieval
  contents:
  - "B.3.  Entry Retrieval\n   This appendix provides a non-normative example of a\
    \ client retrieving\n   a vulnerability as an Atom Entry.\n   Having retrieved\
    \ the Feed of interest, the client may then decide,\n   based on the description\
    \ and/or category information, that one of the\n   Entries in the Feed is of further\
    \ interest.  The client may retrieve\n   this vulnerability Entry by performing\
    \ an HTTP GET operation on the\n   URL indicated by the \"src\" attribute of the\
    \ \"atom:content\" element.\n   Example HTTP GET request for an Entry:\n     GET\
    \ /provider/public/vulns/123456\n     Host: www.example.org\n     Accept: application/atom+xml;type=entry\n\
    \   The corresponding HTTP response would be an XML document containing\n   the\
    \ Atom Entry for the vulnerability record:\n   Example HTTP GET response for an\
    \ Entry:\n     HTTP/1.1 200 OK\n     Date: Fri, 24 Aug 2016 17:30:11 GMT\n   \
    \  Content-Length: 713\n     Content-Type: application/atom+xml;type=entry;charset=\"\
    utf-8\"\n     <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     <entry xmlns=\"\
    https://www.w3.org/2005/Atom\"\n         xmlns:rolie=\"urn:ietf:params:xml:ns:rolie-1.0\"\
    \n         xml:lang=\"en-US\">\n       <id>f63aafa9-4082-48a3-9ce6-97a2d69d4a9b</id>\n\
    \       <title>Sample Vulnerability</title>\n       <published>2015-08-04T18:13:51.0Z</published>\n\
    \       <updated>2015-08-05T18:13:51.0Z</updated>\n       <category\n        \
    \   scheme=\"urn:ietf:params:rolie:category:information-type\"\n           term=\"\
    vulnerability\"/>\n       <summary>A vulnerability issue identified by CVE-...</summary>\n\
    \       <rolie:format ns=\"urn:ietf:params:xml:ns:exampleformat\"/>\n       <content\
    \ type=\"application/xml\"\n           src=\"https://example.org/provider/vulns/123456/data\"\
    >\n       </content>\n     </entry>\n   The example response above shows an XML\
    \ document referenced by the\n   \"src\" attribute of the \"atom:content\" element.\
    \  The client may\n   retrieve the document using this URL.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors gratefully acknowledge the valuable contributions\
    \ of Tom\n   Maguire, Kathleen Moriarty, and Vijayanand Bharadwaj.  These\n  \
    \ individuals provided detailed review comments on earlier draft\n   versions\
    \ of this document and made many suggestions that have helped\n   to improve this\
    \ document.\n   The authors would also like to thank the MILE Working Group, the\
    \ SACM\n   Working Group, and countless other people from both within the IETF\n\
    \   community and outside of it for their excellent review and effort\n   towards\
    \ constructing this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   John P. Field\n   Pivotal Software, Inc.\n   625 Avenue\
    \ of the Americas\n   New York, New York  10011\n   United States of America\n\
    \   Phone: (646)792-5770\n   Email: jfield@pivotal.io\n   Stephen A. Banghart\n\
    \   National Institute of Standards and Technology\n   100 Bureau Drive\n   Gaithersburg,\
    \ Maryland  20877\n   United States of America\n   Phone: (301)975-4288\n   Email:\
    \ stephen.banghart@nist.gov\n   David Waltermire\n   National Institute of Standards\
    \ and Technology\n   100 Bureau Drive\n   Gaithersburg, Maryland  20877\n   United\
    \ States of America\n   Email: david.waltermire@nist.gov\n"
