- title: __initial_text__
  contents:
  - '  Support for the Resource Reservation Protocol (RSVP) in Layer 3 VPNs

    '
- title: Abstract
  contents:
  - "Abstract\n   RFC 4364 and RFC 4659 define an approach to building provider-\n\
    \   provisioned Layer 3 VPNs (L3VPNs) for IPv4 and IPv6.  It may be\n   desirable\
    \ to use Resource Reservation Protocol (RSVP) to perform\n   admission control\
    \ on the links between Customer Edge (CE) routers and\n   Provider Edge (PE) routers.\
    \  This document specifies procedures by\n   which RSVP messages traveling from\
    \ CE to CE across an L3VPN may be\n   appropriately handled by PE routers so that\
    \ admission control can be\n   performed on PE-CE links.  Optionally, admission\
    \ control across the\n   provider's backbone may also be supported.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6016.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Terminology ................................................5\n  \
    \    1.2. Requirements Language ......................................5\n   2.\
    \ Problem Statement ...............................................5\n      2.1.\
    \ Model of Operation .........................................8\n   3. Admission\
    \ Control on PE-CE Links ................................9\n      3.1. New Objects\
    \ of Type VPN-IPv4 ...............................9\n      3.2. Path Message Processing\
    \ at Ingress PE .....................11\n      3.3. Path Message Processing at\
    \ Egress PE ......................12\n      3.4. Resv Processing at Egress PE\
    \ ..............................13\n      3.5. Resv Processing at Ingress PE .............................13\n\
    \      3.6. Other RSVP Messages .......................................14\n  \
    \ 4. Admission Control in Provider's Backbone .......................14\n   5.\
    \ Inter-AS Operation .............................................15\n      5.1.\
    \ Inter-AS Option A .........................................15\n      5.2. Inter-AS\
    \ Option B .........................................15\n           5.2.1. Admission\
    \ Control on ASBR ..........................16\n           5.2.2. No Admission\
    \ Control on ASBR .......................16\n      5.3. Inter-AS Option C .........................................17\n\
    \   6. Operation with RSVP Disabled ...................................17\n  \
    \ 7. Other RSVP Procedures ..........................................18\n    \
    \  7.1. Refresh Overhead Reduction ................................18\n      7.2.\
    \ Cryptographic Authentication ..............................18\n      7.3. RSVP\
    \ Aggregation ..........................................19\n      7.4. Support\
    \ for CE-CE RSVP-TE .................................19\n   8. Object Definitions\
    \ .............................................20\n      8.1. VPN-IPv4 and VPN-IPv6\
    \ SESSION Objects .....................20\n      8.2. VPN-IPv4 and VPN-IPv6 SENDER_TEMPLATE\
    \ Objects .............21\n      8.3. VPN-IPv4 and VPN-IPv6 FILTER_SPEC Objects\
    \ .................22\n      8.4. VPN-IPv4 and VPN-IPv6 RSVP_HOP Objects ....................22\n\
    \      8.5. Aggregated VPN-IPv4 and VPN-IPv6 SESSION Objects ..........24\n  \
    \    8.6. AGGREGATE-VPN-IPv4 and AGGREGATE-VPN-IPv6\n           SENDER_TEMPLATE\
    \ Objects ...................................26\n      8.7. AGGREGATE-VPN-IPv4\
    \ and AGGREGATE-VPN-IPv6\n           FILTER_SPEC Objects .......................................27\n\
    \   9. IANA Considerations ............................................28\n  \
    \ 10. Security Considerations .......................................30\n   11.\
    \ Acknowledgments ...............................................33\n   Appendix\
    \ A.   Alternatives Considered .............................34\n      A.1. GMPLS\
    \ UNI Approach ........................................34\n      A.2. Label Switching\
    \ Approach ..................................34\n      A.3. VRF Label Approach\
    \ ........................................34\n      A.4. VRF Label Plus VRF Address\
    \ Approach .......................35\n   References ........................................................35\n\
    \      Normative References ...........................................35\n  \
    \    Informative References .........................................36\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC4364] and [RFC4659] define a Layer 3 VPN service known\
    \ as BGP/\n   MPLS VPNs for IPv4 and for IPv6, respectively.  [RFC2205] defines\
    \ the\n   Resource Reservation Protocol (RSVP), which may be used to perform\n\
    \   admission control as part of the Integrated Services (Int-Serv)\n   architecture\
    \ [RFC1633][RFC2210].\n   Customers of a Layer 3 VPN service may run RSVP for\
    \ the purposes of\n   admission control (and associated resource reservation)\
    \ in their own\n   networks.  Since the links between Provider Edge (PE) and Customer\n\
    \   Edge (CE) routers in a Layer 3 VPN may often be resource constrained,\n  \
    \ it may be desirable to be able to perform admission control over\n   those links.\
    \  In order to perform admission control using RSVP in\n   such an environment,\
    \ it is necessary that RSVP control messages, such\n   as Path messages and Resv\
    \ messages, are appropriately handled by the\n   PE routers.  This presents a\
    \ number of challenges in the context of\n   BGP/MPLS VPNs:\n   o  RSVP Path message\
    \ processing depends on routers recognizing the\n      Router Alert Option ([RFC2113],\
    \ [RFC2711]) in the IP header.\n      However, packets traversing the backbone\
    \ of a BGP/MPLS VPN are\n      MPLS encapsulated, and thus the Router Alert Option\
    \ may not be\n      visible to the egress PE due to implementation or policy\n\
    \      considerations (e.g., if the egress PE processes the message as\n     \
    \ \"pop and go\" without examining the IP header).\n   o  BGP/MPLS VPNs support\
    \ non-unique addressing of customer networks.\n      Thus, a PE at the ingress\
    \ or egress of the provider backbone may\n      be called upon to process Path\
    \ messages from different customer\n      VPNs with non-unique destination addresses\
    \ within the RSVP\n      message.  Current mechanisms for identifying customer\
    \ context from\n      data packets are incompatible with RSVP message processing\
    \ rules.\n   o  A PE at the ingress of the provider's backbone may receive Resv\n\
    \      messages corresponding to different customer VPNs from other PEs,\n   \
    \   and needs to be able to associate those Resv messages with the\n      appropriate\
    \ customer VPNs.\n   Further discussion of these issues is presented in Section\
    \ 2.\n   This document describes a set of procedures to overcome these\n   challenges\
    \ and thus to enable admission control using RSVP over the\n   PE-CE links.  We\
    \ note that similar techniques may be applicable to\n   other protocols used for\
    \ admission control such as the combination of\n   the NSIS Signaling Layer Protocol\
    \ (NSLP) for Quality-of-Service (QoS)\n   Signaling [RFC5974] and General Internet\
    \ Signaling Transport (GIST)\n   protocol [RFC5971].\n   Additionally, it may\
    \ be desirable to perform admission control over\n   the provider's backbone on\
    \ behalf of one or more L3VPN customers.\n   Core (P) routers in a BGP/MPLS VPN\
    \ do not have forwarding entries for\n   customer routes, and thus they cannot\
    \ natively process RSVP messages\n   for customer flows.  Also, the core is a\
    \ shared resource that carries\n   traffic for many customers, so issues of resource\
    \ allocation among\n   customers and trust (or lack thereof) also ought to be\
    \ addressed.\n   This document specifies procedures for supporting such a scenario.\n\
    \   This document deals with establishing reservations for unicast flows\n   only.\
    \  Because the support of multicast traffic in BGP/MPLS VPNs is\n   still evolving,\
    \ and raises additional challenges for admission\n   control, we leave the support\
    \ of multicast flows for further study at\n   this point.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document draws freely on the terminology defined in\
    \ [RFC2205]\n   and [RFC4364].  For convenience, we provide a few brief definitions\n\
    \   here:\n   o  Customer Edge (CE) Router: Router at the edge of a customer site\n\
    \      that attaches to the network of the VPN provider.\n   o  Provider Edge\
    \ (PE) Router: Router at the edge of the service\n      provider's network that\
    \ attaches to one or more customer sites.\n   o  VPN Label: An MPLS label associated\
    \ with a route to a customer\n      prefix in a VPN (also called a VPN route label).\n\
    \   o  VPN Routing and Forwarding (VRF) Table: A PE typically has\n      multiple\
    \ VRFs, enabling it to be connected to CEs that are in\n      different VPNs.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Problem Statement
  contents:
  - "2.  Problem Statement\n   The problem space of this document is the support of\
    \ admission\n   control between customer sites when the customer subscribes to\
    \ a BGP/\n   MPLS VPN.  We subdivide the problem into (a) the problem of admission\n\
    \   control on the PE-CE links (in both directions) and (b) the problem\n   of\
    \ admission control across the provider's backbone.\n   RSVP Path messages are\
    \ normally addressed to the destination of a\n   session, and contain the Router\
    \ Alert Option (RAO) within the IP\n   header.  Routers along the path to the\
    \ destination that are\n   configured to process RSVP messages need to detect\
    \ the presence of\n   the RAO to allow them to intercept Path messages.  However,\
    \ the\n   egress PEs of a network supporting BGP/MPLS VPNs receive packets\n \
    \  destined for customer sites as MPLS-encapsulated packets, and they\n   possibly\
    \ forward those based only on examination of the MPLS label.\n   In order to process\
    \ RSVP Path messages, the egress VPN PE would have\n   to pop the VPN label and\
    \ examine the IP header underneath, before\n   forwarding the packet (based on\
    \ the VPN label disposition rules),\n   which is not a requirement for data packet\
    \ processing today.  Hence,\n   a Path message would be forwarded without examination\
    \ of the IP\n   options and would therefore not receive appropriate processing\
    \ at the\n   PE.  Another potential issue is doing Connection Admission Control\n\
    \   (CAC) at an Autonomous System Border Router (ASBR).  Even an\n   implementation\
    \ that examines the IP header when removing the VPN\n   label (e.g., PE-CE link)\
    \ would not be able to do CAC at an Option-B\n   ASBR; that requires examining\
    \ the (interior) IP header while doing a\n   label swap, which is much less desirable\
    \ behavior.\n   In general, there are significant issues with requiring support\
    \ for\n   IP Router Alert outside of a controlled, \"walled-garden\" network,\
    \ as\n   described in [ALERT-USAGE].  The case of a MPLS L3VPN falls under the\n\
    \   \"Overlay Model\" described therein.  Fundamental to this model is that\n\
    \   providers would seek to eliminate the requirement to process RAO-\n   marked\
    \ packets from customers, on any routers except the PEs facing\n   those customers.\
    \  Issues with requiring interior MPLS routers to\n   process RAO-marked packets\
    \ are also described in [LER-OPTIONS].  The\n   approach for RSVP packet handling\
    \ described in this document has the\n   advantage of being independent of any\
    \ data-plane requirements such as\n   IP Router Alert support within the VPN or\
    \ examining any IP options\n   for MPLS-encapsulated packets.  The only requirement\
    \ for processing\n   IP Router Alert packets is for RSVP packets received from\
    \ the CE,\n   which do not carry any MPLS encapsulation.\n   For the PE-CE link\
    \ subproblem, the most basic challenge is that RSVP\n   control messages contain\
    \ IP addresses that are drawn from the\n   customer's address space, and PEs need\
    \ to deal with traffic from many\n   customers who may have non-unique (or overlapping)\
    \ address spaces.\n   Thus, it is essential that a PE be able, in all cases, to\
    \ identify\n   the correct VPN context in which to process an RSVP control message.\n\
    \   The current mechanism for identifying the customer context is the VPN\n  \
    \ label, which is carried in an MPLS header outside of the RSVP\n   message. \
    \ This is divergent from the general RSVP model of session\n   identification\
    \ ([RFC2205], [RFC2209]), which relies solely on RSVP\n   objects to identify\
    \ sessions.  Further, it is incompatible with\n   protocols like COPS/RSVP (Common\
    \ Open Policy Service) ([RFC2748],\n   [RFC2749]), which replace the IP encapsulation\
    \ of the RSVP message\n   and send only RSVP objects to a COPS server.  We believe\
    \ it is\n   important to retain the model of completely identifying an RSVP\n\
    \   session from the contents of RSVP objects.  Much of this document\n   deals\
    \ with this issue.\n   For the case of making reservations across the provider\
    \ backbone, we\n   observe that BGP/MPLS VPNs do not create any per-customer forwarding\n\
    \   state in the P (provider core) routers.  Thus, in order to make\n   reservations\
    \ on behalf of customer-specified flows, it is clearly\n   necessary to make some\
    \ sort of aggregated reservation from PE-PE and\n   then map individual, customer-specific\
    \ reservations onto an aggregate\n   reservation.  That is similar to the problem\
    \ tackled in [RFC3175] and\n   [RFC4804], with the additional complications of\
    \ handling customer-\n   specific addressing associated with BGP/MPLS VPNs.\n\
    \   Consider the case where an MPLS VPN customer uses RSVP signaling\n   across\
    \ his sites for resource reservation and admission control.\n   Let's further\
    \ assume that, initially, RSVP is not processed through\n   the MPLS VPN cloud\
    \ (i.e., RSVP messages from the sender to the\n   receiver travel transparently\
    \ from CE to CE).  In that case, RSVP\n   allows the establishment of resource\
    \ reservations and admission\n   control on a subset of the flow path (from sender\
    \ to ingress CE, and\n   from the RSVP router downstream of the egress CE to the\
    \ receiver).\n   If admission control is then activated on any of the CE-PE link,\
    \ the\n   provider's backbone, or PE-CE link (as allowed by the present\n   document),\
    \ the customer will benefit from an extended coverage of\n   admission control\
    \ and resource reservation: the resource reservation\n   will now span over a\
    \ bigger subset of (and possibly the whole) flow\n   path, which in turn will\
    \ increase the QoS granted to the\n   corresponding flow.  Specific flows whose\
    \ reservation is successful\n   through admission control on the newly enabled\
    \ segments will indeed\n   benefit from this quality of service enhancement. \
    \ However, it must\n   be noted that, in case there are not enough resources on\
    \ one (or\n   more) of the newly enabled segments (e.g., say admission control\
    \ is\n   enabled on a given PE-->CE link and there is not enough capacity on\n\
    \   that link to admit all reservations for all the flows traversing that\n  \
    \ link), then some flows will not be able to maintain, or establish,\n   their\
    \ reservation.  While this may appear undesirable for these\n   flows, we observe\
    \ that this only occurs if there is indeed a lack of\n   capacity on a segment,\
    \ and that in the absence of admission control,\n   all flows would be established\
    \ but would all suffer from the\n   resulting congestion on the bottleneck segment.\
    \  We also observe\n   that, in the case of such a lack of capacity, admission\
    \ control\n   allows enforcement of controlled and flexible policies (so that,\
    \ for\n   example, more important flows can be granted higher priority at\n  \
    \ reserving resources).  We note also that flows are given a chance to\n   establish\
    \ smaller reservations so that the aggregate load can adapt\n   dynamically to\
    \ the bottleneck capacity.\n"
- title: 2.1.  Model of Operation
  contents:
  - "2.1.  Model of Operation\n   Figure 1 illustrates the basic model of operation\
    \ with which this\n   document is concerned.\n                      --------------------------\n\
    \                     /       Provider           \\\n        |----|      |   \
    \      Backbone           |      |----|\n"
- title: Sender->| CE1|  |-----|                       |-----|   |CE2 |->Receiver
  contents:
  - "Sender->| CE1|  |-----|                       |-----|   |CE2 |->Receiver\n  \
    \      |    |--|     |   |---|     |---|     |     |---|    |\n        |----|\
    \  |     |   | P |     | P |     |     |   |----|\n                | PE1 |---|\
    \   |-----|   |-----| PE2 |\n                |     |   |   |     |   |     | \
    \    |\n                |     |   |---|     |---|     |     |\n              \
    \  |-----|                       |-----|\n                    |              \
    \              |\n                     \\                          /\n       \
    \               --------------------------\n           Figure 1. Model of Operation\
    \ for RSVP-Based Admission\n                         Control over MPLS/BGP VPN\n\
    \   To establish a unidirectional reservation for a point-to-point flow\n   from\
    \ Sender to Receiver that takes account of resource availability\n   on the CE-PE\
    \ and PE-CE links only, the following steps need to take\n   place:\n   1.   The\
    \ Sender sends a Path message to an IP address of the\n        Receiver.\n   2.\
    \   The Path message is processed by CE1 using normal RSVP\n        procedures\
    \ and forwarded towards the Receiver along the link\n        CE1-PE1.\n   3. \
    \  PE1 processes the Path message and forwards it towards the\n        Receiver\
    \ across the provider backbone.\n   4.   PE2 processes the Path message and forwards\
    \ it towards the\n        Receiver along link PE2-CE2.\n   5.   CE2 processes\
    \ the Path message using normal RSVP procedures and\n        forwards it towards\
    \ the Receiver.\n   6.   The Receiver sends a Resv message to CE2.\n   7.   CE2\
    \ sends the Resv message to PE2.\n   8.   PE2 processes the Resv message (including\
    \ performing admission\n        control on link PE2-CE2) and sends the Resv message\
    \ to PE1.\n   9.   PE1 processes the Resv message and sends the Resv message to\n\
    \        CE1.\n   10.  CE1 processes the Resv message using normal RSVP procedures,\n\
    \        performs admission control on the link CE1-PE1, and sends the\n     \
    \   Resv message to the Sender if successful.\n   In each of the steps involving\
    \ Resv messages (6 through 10) the node\n   sending the Resv message uses the\
    \ previously established Path state\n   to determine the \"RSVP Previous Hop (PHOP)\"\
    \ and sends a Resv message\n   to that address.  We note that establishing that\
    \ Path state correctly\n   at PEs is one of the challenges posed by the BGP/MPLS\
    \ environment.\n"
- title: 3.  Admission Control on PE-CE Links
  contents:
  - "3.  Admission Control on PE-CE Links\n   In the following sections, we trace\
    \ through the steps outlined in\n   Section 2.1 and expand on the details for\
    \ those steps where standard\n   RSVP procedures need to be extended or modified\
    \ to support the BGP/\n   MPLS VPN environment.  For all the remaining steps described\
    \ in the\n   preceding section, standard RSVP processing rules apply.\n   All\
    \ the procedures described below support both IPv4 and IPv6\n   addressing.  In\
    \ all cases where IPv4 is referenced, IPv6 can be\n   substituted with identical\
    \ procedures and results.  Object\n   definitions for both IPv4 and IPv6 are provided\
    \ in Section 8.\n"
- title: 3.1.  New Objects of Type VPN-IPv4
  contents:
  - "3.1.  New Objects of Type VPN-IPv4\n   For RSVP signaling within a VPN, certain\
    \ RSVP objects need to be\n   extended.  Since customer IP addresses need not\
    \ be unique, the\n   current types of SESSION, SENDER_TEMPLATE, and FILTERSPEC\
    \ objects are\n   no longer sufficient to globally identify RSVP states in P/PE\n\
    \   routers, since they are currently based on IP addresses.  We propose\n   new\
    \ types of SESSION, SENDER_TEMPLATE, and FILTERSPEC objects, which\n   contain\
    \ globally unique VPN-IPv4 format addresses.  The ingress and\n   egress PE nodes\
    \ translate between the regular IPv4 addresses for\n   messages to and from the\
    \ CE, and VPN-IPv4 addresses for messages to\n   and from PE routers.  The rules\
    \ for this translation are described in\n   later sections.\n   The RSVP_HOP object\
    \ in an RSVP message currently specifies an IP\n   address to be used by the neighboring\
    \ RSVP hop to reply to the\n   message sender.  However, MPLS VPN PE routers (especially\
    \ those\n   separated by Option-B ASBRs) are not required to have direct IP\n\
    \   reachability to each other.  To solve this issue, we propose the use\n   of\
    \ label switching to forward RSVP messages between nodes within an\n   MPLS VPN.\
    \  This is achieved by defining a new VPN-IPv4 RSVP_HOP\n   object.  Use of the\
    \ VPN-IPv4 RSVP_HOP object enables any two adjacent\n   RSVP hops in an MPLS VPN\
    \ (e.g., a PE in Autonomous System (AS) 1 and\n   a PE in AS2) to correctly identify\
    \ each other and send RSVP messages\n   directly to each other.\n   The VPN-IPv4\
    \ RSVP_HOP object carries the IPv4 address of the message\n   sender and a Logical\
    \ Interface Handle (LIH) as before, but in\n   addition carries a VPN-IPv4 address\
    \ that also represents the sender\n   of the message.  The message sender MUST\
    \ also advertise this VPN-IPv4\n   address into BGP, associated with a locally\
    \ allocated label, and this\n   advertisement MUST be propagated by BGP throughout\
    \ the VPN and to\n   adjacent ASes if required to provide reachability to this\
    \ PE.  Frames\n   received by the PE marked with this label MUST be given to the\
    \ local\n   control plane for processing.  When a neighboring RSVP hop wishes\
    \ to\n   reply to a message carrying a VPN-IPv4 RSVP_HOP, it looks for a BGP\n\
    \   advertisement of the VPN-IPv4 address contained in that RSVP_HOP.  If\n  \
    \ this address is found and carries an associated label, the\n   neighboring RSVP\
    \ node MUST encapsulate the RSVP message with this\n   label and send it via MPLS\
    \ encapsulation to the BGP next hop\n   associated with the route.  The destination\
    \ IP address of the message\n   is taken from the IP address field of the RSVP_HOP\
    \ object, as\n   described in [RFC2205].  Additionally, the IPv4 address in the\n\
    \   RSVP_HOP object continues to be used for all other existing purposes,\n  \
    \ including neighbor matching between Path/Resv and SRefresh messages\n   [RFC2961],\
    \ authentication [RFC2747], etc.\n   The VPN-IPv4 address used in the VPN-IPv4\
    \ RSVP_HOP object MAY\n   represent an existing address in the VRF that corresponds\
    \ to the flow\n   (e.g., a local loopback or PE-CE link address within the VRF\
    \ for this\n   customer), or it MAY be created specially for this purpose.  In\
    \ the\n   case where the address is specially created for RSVP signaling (and\n\
    \   possibly other control protocols), the BGP advertisement MUST NOT be\n   redistributed\
    \ to, or reachable by, any CEs outside the MPLS VPN.  One\n   way to achieve this\
    \ is by creating a special \"control protocols VPN\"\n   with VRF state on every\
    \ PE/ASBR, carrying route targets not imported\n   into customer VRFs.  In the\
    \ case where a customer VRF address is used\n   as the VPN-IPv4 address, a VPN-IPv4\
    \ address in one customer VRF MUST\n   NOT be used to signal RSVP messages for\
    \ a flow in a different VRF.\n   If a PE/ASBR is sending a Path message to another\
    \ PE/ASBR within the\n   VPN, and it has any appropriate VPN-IPv4 address for\
    \ signaling that\n   satisfies the requirements outlined above, it MUST use a\
    \ VPN-IPv4\n   RSVP_HOP object with this address for all RSVP messages within\
    \ the\n   VPN.  If a PE/ASBR does not have any appropriate VPN-IPv4 address to\n\
    \   use for signaling, it MAY send the Path message with a regular IPv4\n   RSVP_HOP\
    \ object.  In this case, the reply will be IP encapsulated.\n   This option is\
    \ not preferred because there is no guarantee that the\n   neighboring RSVP hop\
    \ has IP reachability to the sending node.  If a\n   PE/ASBR receives or originates\
    \ a Path message with a VPN-IPv4\n   RSVP_HOP object, any RSVP_HOP object in corresponding\
    \ upstream\n   messages for this flow (e.g., Resv, ResvTear) or downstream messages\n\
    \   (e.g., ResvError, PathTear) sent by this node within the VPN MUST be\n   a\
    \ VPN-IPv4 RSVP_HOP.\n"
- title: 3.2.  Path Message Processing at Ingress PE
  contents:
  - "3.2.  Path Message Processing at Ingress PE\n   When a Path message arrives at\
    \ the ingress PE (step 3 of Section 2.1)\n   the PE needs to establish suitable\
    \ Path state and forward the Path\n   message on to the egress PE.  In the following\
    \ paragraphs, we\n   described the steps taken by the ingress PE.\n   The Path\
    \ message is addressed to the eventual destination (the\n   receiver at the remote\
    \ customer site) and carries the IP Router Alert\n   Option, in accordance with\
    \ [RFC2205].  The ingress PE MUST recognize\n   the Router Alert Option, intercept\
    \ these messages and process them as\n   RSVP signaling messages.\n   As noted\
    \ above, there is an issue in recognizing Path messages as\n   they arrive at\
    \ the egress PE (PE2 in Figure 1).  The approach defined\n   here is to address\
    \ the Path messages sent by the ingress PE directly\n   to the egress PE, and\
    \ send it without the IP Router Alert Option;\n   that is, rather than using the\
    \ ultimate receiver's destination\n   address as the destination address of the\
    \ Path message, we use the\n   loopback address of the egress PE as the destination\
    \ address of the\n   Path message.  This approach has the advantage that it does\
    \ not\n   require any new data-plane capabilities for the egress PE beyond\n \
    \  those of a standard BGP/MPLS VPN PE.  Details of the processing of\n   this\
    \ message at the egress PE are described below in Section 3.3.\n   The approach\
    \ of addressing a Path message directly to an RSVP next\n   hop (that may or may\
    \ not be the next IP hop) is already used in other\n   environments such as those\
    \ of [RFC4206] and [RFC4804].\n   The details of operation at the ingress PE are\
    \ as follows.  When the\n   ingress PE (PE1 in Figure 1) receives a Path message\
    \ from CE1 that is\n   addressed to the receiver, the VRF that is associated with\
    \ the\n   incoming interface is identified, just as for normal data path\n   operations.\
    \  The Path state for the session is stored, and is\n   associated with that VRF,\
    \ so that potentially overlapping addresses\n   among different VPNs do not appear\
    \ to belong to the same session.\n   The destination address of the receiver is\
    \ looked up in the\n   appropriate VRF, and the BGP next hop for that destination\
    \ is\n   identified.  That next hop is the egress PE (PE2 in Figure 1).  A new\n\
    \   VPN-IPv4 SESSION object is constructed, containing the Route\n   Distinguisher\
    \ (RD) that is part of the VPN-IPv4 route prefix for this\n   destination, and\
    \ the IPv4 address from the SESSION.  In addition, a\n   new VPN-IPv4 SENDER_TEMPLATE\
    \ object is constructed, with the original\n   IPv4 address from the incoming\
    \ SENDER_TEMPLATE plus the RD that is\n   used by this PE to advertise that prefix\
    \ for this customer into the\n   VPN.  A new Path message is constructed with\
    \ a destination address\n   equal to the address of the egress PE identified above.\
    \  This new\n   Path message will contain all the objects from the original Path\n\
    \   message, replacing the original SESSION and SENDER_TEMPLATE objects\n   with\
    \ the new VPN-IPv4 type objects.  The Path message is sent without\n   the Router\
    \ Alert Option and contains an RSVP_HOP object constructed\n   as specified in\
    \ Section 3.1.\n"
- title: 3.3.  Path Message Processing at Egress PE
  contents:
  - "3.3.  Path Message Processing at Egress PE\n   When a Path message arrives at\
    \ the egress PE, (step 4 of Section 2.1)\n   it is addressed to the PE itself,\
    \ and is handed to RSVP for\n   processing.  The router extracts the RD and IPv4\
    \ address from the\n   VPN-IPv4 SESSION object, and determines the local VRF context\
    \ by\n   finding a matching VPN-IPv4 prefix with the specified RD that has\n \
    \  been advertised by this router into BGP.  The entire incoming RSVP\n   message,\
    \ including the VRF information, is stored as part of the Path\n   state.\n  \
    \ Now the RSVP module can construct a Path message that differs from\n   the Path\
    \ it received in the following ways:\n   a.  Its destination address is the IP\
    \ address extracted from the\n       SESSION object;\n   b.  The SESSION and SENDER_TEMPLATE\
    \ objects are converted back to\n       IPv4-type by discarding the attached RD;\n\
    \   c.  The RSVP_HOP Object contains the IP address of the outgoing\n       interface\
    \ of the egress PE and a Logical Interface Handle (LIH),\n       as per normal\
    \ RSVP processing.\n   The router then sends the Path message on towards its destination\n\
    \   over the interface identified above.  This Path message carries the\n   Router\
    \ Alert Option as required by [RFC2205].\n"
- title: 3.4.  Resv Processing at Egress PE
  contents:
  - "3.4.  Resv Processing at Egress PE\n   When a receiver at the customer site originates\
    \ a Resv message for\n   the session, normal RSVP procedures apply until the Resv,\
    \ making its\n   way back towards the sender, arrives at the \"egress\" PE (step\
    \ 8 of\n   Section 2.1).  Note that this is the \"egress\" PE with respect to\
    \ the\n   direction of data flow, i.e., PE2 in Figure 1.  On arriving at PE2,\n\
    \   the SESSION and FILTER_SPEC objects in the Resv, and the VRF in which\n  \
    \ the Resv was received, are used to find the matching Path state\n   stored previously.\
    \  At this stage, admission control can be performed\n   on the PE-CE link.\n\
    \   Assuming admission control is successful, the PE constructs a Resv\n   message\
    \ to send to the RSVP previous hop stored in the Path state,\n   i.e., the ingress\
    \ PE (PE1 in Figure 1).  The IPv4 SESSION object is\n   replaced with the same\
    \ VPN-IPv4 SESSION object received in the Path.\n   The IPv4 FILTER_SPEC object\
    \ is replaced with a VPN-IPv4 FILTER_SPEC\n   object, which copies the VPN-IPv4\
    \ address from the SENDER_TEMPLATE\n   received in the matching Path message.\
    \  The RSVP_HOP in the Resv\n   message MUST be constructed as specified in Section\
    \ 3.1.  The Resv\n   message MUST be addressed to the IP address contained within\
    \ the\n   RSVP_HOP object in the Path message.  If the Path message contained\
    \ a\n   VPN-IPv4 RSVP_HOP object, the Resv MUST be MPLS encapsulated using\n \
    \  the label associated with that VPN-IPv4 address in BGP, as described\n   in\
    \ Section 3.1.  If the Path message contained an IPv4 RSVP_HOP\n   object, the\
    \ Resv is simply IP encapsulated and addressed directly to\n   the IP address\
    \ in the RSVP_HOP object.\n   If admission control is not successful on the egress\
    \ PE, a ResvError\n   message is sent towards the receiver as per normal RSVP\
    \ processing.\n"
- title: 3.5.  Resv Processing at Ingress PE
  contents:
  - "3.5.  Resv Processing at Ingress PE\n   Upon receiving a Resv message at the\
    \ ingress PE (step 8 of\n   Section 2.1) with respect to data flow (i.e., PE1\
    \ in Figure 1), the\n   PE determines the local VRF context and associated Path\
    \ state for\n   this Resv by decoding the received SESSION and FILTER_SPEC objects.\n\
    \   It is now possible to generate a Resv message to send to the\n   appropriate\
    \ CE.  The Resv message sent to the ingress CE will contain\n   IPv4 SESSION and\
    \ FILTER_SPEC objects, derived from the appropriate\n   Path state.  Since we\
    \ assume, in this section, that admission control\n   over the provider's backbone\
    \ is not needed, the ingress PE does not\n   perform any admission control for\
    \ this reservation.\n"
- title: 3.6.  Other RSVP Messages
  contents:
  - "3.6.  Other RSVP Messages\n   Processing of PathError, PathTear, ResvError, ResvTear,\
    \ and ResvConf\n   messages is generally straightforward and follows the rules\
    \ of\n   [RFC2205].  These additional rules MUST be observed for messages\n  \
    \ transmitted within the VPN (i.e., between the PEs):\n   o  The SESSION, SENDER_TEMPLATE,\
    \ and FILTER_SPEC objects MUST be\n      converted from IPv4 to VPN-IPv4 form\
    \ and back in the same manner\n      as described above for Path and Resv messages.\n\
    \   o  The appropriate type of RSVP_HOP object (VPN-IPv4 or IPv4) MUST be\n  \
    \    used as described above.\n   o  Depending on the type of RSVP_HOP object\
    \ received from the\n      neighbor, the message MUST be MPLS encapsulated or\
    \ IP encapsulated\n      as described above.\n   o  The matching state and VRF\
    \ MUST be determined by decoding the RD\n      and IPv4 addresses in the SESSION\
    \ and FILTER_SPEC objects.\n   o  The message MUST be directly addressed to the\
    \ appropriate PE,\n      without using the Router Alert Option.\n"
- title: 4.  Admission Control in Provider's Backbone
  contents:
  - "4.  Admission Control in Provider's Backbone\n   The preceding section outlines\
    \ how per-customer reservations can be\n   made over the PE-CE links.  This may\
    \ be sufficient in many situations\n   where the backbone is well engineered with\
    \ ample capacity and there\n   is no need to perform any sort of admission control\
    \ in the backbone.\n   However, in some cases where excess capacity cannot be\
    \ relied upon\n   (e.g., during failures or unanticipated periods of overload),\
    \ it may\n   be desirable to be able to perform admission control in the backbone\n\
    \   on behalf of customer traffic.\n   Because of the fact that routes to customer\
    \ addresses are not present\n   in the P routers, along with the concerns of scalability\
    \ that would\n   arise if per-customer reservations were allowed in the P routers,\
    \ it\n   is clearly necessary to map the per-customer reservations described\n\
    \   in the preceding section onto some sort of aggregate reservations.\n   Furthermore,\
    \ customer data packets need to be tunneled across the\n   provider backbone just\
    \ as in normal BGP/MPLS VPN operation.\n   Given these considerations, a feasible\
    \ way to achieve the objective\n   of admission control in the backbone is to\
    \ use the ideas described in\n   [RFC4804].  MPLS-TE tunnels can be established\
    \ between PEs as a means\n   to perform aggregate admission control in the backbone.\n\
    \   An MPLS-TE tunnel from an ingress PE to an egress PE can be thought\n   of\
    \ as a virtual link of a certain capacity.  The main change to the\n   procedures\
    \ described above is that when a Resv is received at the\n   ingress PE, an admission\
    \ control decision can be performed by\n   checking whether sufficient capacity\
    \ of that virtual link remains\n   available to admit the new customer reservation.\
    \  We note also that\n   [RFC4804] uses the IF_ID RSVP_HOP object to identify\
    \ the tunnel\n   across the backbone, rather than the simple RSVP_HOP object described\n\
    \   in Section 3.2.  The procedures of [RFC4804] should be followed here\n   as\
    \ well.\n   To achieve effective admission control in the backbone, there needs\n\
    \   to be some way to separate the data-plane traffic that has a\n   reservation\
    \ from that which does not.  We assume that packets that\n   are subject to admission\
    \ control on the core will be given a\n   particular MPLS EXP value, and that\
    \ no other packets will be allowed\n   to enter the core with this value unless\
    \ they have passed admission\n   control.  Some fraction of link resources will\
    \ be allocated to queues\n   on core links for packets bearing that EXP value,\
    \ and the MPLS-TE\n   tunnels will use that resource pool to make their constraint-based\n\
    \   routing and admission control decisions.  This is all consistent with\n  \
    \ the principles of aggregate RSVP reservations described in [RFC3175].\n"
- title: 5.  Inter-AS Operation
  contents:
  - "5.  Inter-AS Operation\n   [RFC4364] defines three modes of inter-AS operation\
    \ for MPLS/BGP\n   VPNs, referred to as Options A, B, and C.  In the following\
    \ sections\n   we describe how the scheme described above can operate in each\n\
    \   inter-AS environment.\n"
- title: 5.1.  Inter-AS Option A
  contents:
  - "5.1.  Inter-AS Option A\n   Operation of RSVP in Inter-AS Option A is quite straightforward.\n\
    \   Each ASBR operates like a PE, and the ASBR-ASBR links can be viewed\n   as\
    \ PE-CE links in terms of admission control.  If the procedures\n   defined in\
    \ Section 3 are enabled on both ASBRs, then admission\n   control may be performed\
    \ on the inter-ASBR links.  In addition, the\n   operator of each AS can independently\
    \ decide whether or not to\n   perform admission control across his backbone.\
    \  The new objects\n   described in this document MUST NOT be sent in any RSVP\
    \ message\n   between two Option-A ASBRs.\n"
- title: 5.2.  Inter-AS Option B
  contents:
  - "5.2.  Inter-AS Option B\n   To support inter-AS Option B, we require some additional\
    \ processing\n   of RSVP messages on the ASBRs.  Recall that, when packets are\n\
    \   forwarded from one AS to another in Option B, the VPN label is\n   swapped\
    \ by each ASBR as a packet goes from one AS to another.  The\n   BGP next hop\
    \ seen by the ingress PE will be the ASBR, and there need\n   not be IP visibility\
    \ between the ingress and egress PEs.  Hence, when\n   the ingress PE sends the\
    \ Path message to the BGP next hop of the VPN-\n   IPv4 route towards the destination,\
    \ it will be received by the ASBR.\n   The ASBR determines the next hop of the\
    \ route in a similar way as the\n   ingress PE -- by finding a matching BGP VPN-IPv4\
    \ route with the same\n   RD and a matching prefix.\n   The provider(s) who interconnect\
    \ ASes using Option B may or may not\n   desire to perform admission control on\
    \ the inter-AS links.  This\n   choice affects the detailed operation of ASBRs.\
    \  We describe the two\n   modes of operation -- with and without admission control\
    \ at the ASBRs\n   -- in the following sections.\n"
- title: 5.2.1.  Admission Control on ASBR
  contents:
  - "5.2.1.  Admission Control on ASBR\n   In this scenario, the ASBR performs full\
    \ RSVP signaling and admission\n   control.  The RSVP database is indexed on the\
    \ ASBR using the VPN-IPv4\n   SESSION, SENDER_TEMPLATE, and FILTER_SPEC objects\
    \ (which uniquely\n   identify RSVP sessions and flows as per the requirements\
    \ of\n   [RFC2205]).  These objects are forwarded unmodified in both\n   directions\
    \ by the ASBR.  All other procedures of RSVP are performed\n   as if the ASBR\
    \ was an RSVP hop.  In particular, the RSVP_HOP objects\n   sent in Path and Resv\
    \ messages contain IP addresses of the ASBR,\n   which MUST be reachable by the\
    \ neighbor to whom the message is being\n   sent.  Note that since the VPN-IPv4\
    \ SESSION, SENDER_TEMPLATE, and\n   FILTER_SPEC objects satisfy the uniqueness\
    \ properties required for an\n   RSVP database implementation as per [RFC2209],\
    \ no customer VRF\n   awareness is required on the ASBR.\n"
- title: 5.2.2.  No Admission Control on ASBR
  contents:
  - "5.2.2.  No Admission Control on ASBR\n   If the ASBR is not doing admission control,\
    \ it is desirable that per-\n   flow state not be maintained on the ASBR.  This\
    \ requires adjacent\n   RSVP hops (i.e., the ingress and egress PEs of the respective\
    \ ASes)\n   to send RSVP messages directly to each other.  This is only possible\n\
    \   if they are MPLS encapsulated.  The use of the VPN-IPv4 RSVP_HOP\n   object\
    \ described in Section 3.1 is REQUIRED in this case.\n   When an ASBR that is\
    \ not installing local RSVP state receives a Path\n   message, it looks up the\
    \ next hop of the matching BGP route as\n   described in Section 3.2, and sends\
    \ the Path message to the next hop,\n   without modifying any RSVP objects (including\
    \ the RSVP_HOP).  This\n   process is repeated at subsequent ASBRs until the Path\
    \ message\n   arrives at a router that is installing local RSVP state (either\
    \ the\n   ultimate egress PE, or an ASBR configured to perform admission\n   control).\
    \  This router receives the Path and processes it as\n   described in Section\
    \ 3.3 if it is a PE, or Section 5.2.1 if it is an\n   ASBR performing admission\
    \ control.  When this router sends the Resv\n   upstream, it looks up the routing\
    \ table for a next hop+label for the\n   VPN-IPv4 address in the PHOP, encapsulates\
    \ the Resv with that label,\n   and sends it upstream.  This message will be received\
    \ for control\n   processing directly on the upstream RSVP hop (that last updated\
    \ the\n   RSVP_HOP field in the Path message), without any involvement of\n  \
    \ intermediate ASBRs.\n   The ASBR is not expected to process any other RSVP messages\
    \ apart\n   from the Path message as described above.  The ASBR also does not\n\
    \   need to store any RSVP state.  Note that any ASBR along the path that\n  \
    \ wishes to do admission control or insert itself into the RSVP\n   signaling\
    \ flow may do so by writing its own RSVP_HOP object with IPv4\n   and VPN-IPv4\
    \ addresses pointing to itself.\n   If an Option-B ASBR that receives an RSVP\
    \ Path message with an IPv4\n   RSVP_HOP does not wish to perform admission control\
    \ but is willing to\n   install local state for this flow, the ASBR MUST process\
    \ and forward\n   RSVP signaling messages for this flow as described in Section\
    \ 5.2.1\n   (with the exception that it does not perform admission control). \
    \ If\n   an Option-B ASBR receives an RSVP Path message with an IPv4 RSVP_HOP,\n\
    \   but does not wish to install local state or perform admission control\n  \
    \ for this flow, the ASBR MUST NOT forward the Path message.  In\n   addition,\
    \ the ASBR SHOULD send a PathError message of Error Code\n   \"RSVP over MPLS\
    \ Problem\" and Error Value \"RSVP_HOP not reachable\n   across VPN\" (see Section\
    \ 9) signifying to the upstream RSVP hop that\n   the supplied RSVP_HOP object\
    \ is insufficient to provide reachability\n   across this VPN.  This failure condition\
    \ is not expected to be\n   recoverable.\n"
- title: 5.3.  Inter-AS Option C
  contents:
  - "5.3.  Inter-AS Option C\n   Operation of RSVP in Inter-AS Option C is also quite\
    \ straightforward,\n   because there exists an LSP directly from ingress PE to\
    \ egress PE.\n   In this case, there is no significant difference in operation\
    \ from\n   the single AS case described in Section 3.  Furthermore, if it is\n\
    \   desired to provide admission control from PE to PE, it can be done by\n  \
    \ building an inter-AS TE tunnel and then using the procedures\n   described in\
    \ Section 4.\n"
- title: 6.  Operation with RSVP Disabled
  contents:
  - "6.  Operation with RSVP Disabled\n   It is often the case that RSVP will not\
    \ be enabled on the PE-CE\n   links.  In such an environment, a customer may reasonably\
    \ expect that\n   RSVP messages sent into the L3 VPN network should be forwarded\
    \ just\n   like any other IP datagrams.  This transparency is useful when the\n\
    \   customer wishes to use RSVP within his own sites or perhaps to\n   perform\
    \ admission control on the CE-PE links (in CE->PE direction\n   only), without\
    \ involvement of the PEs.  For this reason, a PE SHOULD\n   NOT discard or modify\
    \ RSVP messages sent towards it from a CE when\n   RSVP is not enabled on the\
    \ PE-CE links.  Similarly a PE SHOULD NOT\n   discard or modify RSVP messages\
    \ that are destined for one of its\n   attached CEs, even when RSVP is not enabled\
    \ on those links.  Note\n   that the presence of the Router Alert Option in some\
    \ RSVP messages\n   may cause them to be forwarded outside of the normal forwarding\
    \ path,\n   but that the guidance of this paragraph still applies in that case.\n\
    \   Note also that this guidance applies regardless of whether RSVP-TE is\n  \
    \ used in some, all, or none of the L3VPN network.\n"
- title: 7.  Other RSVP Procedures
  contents:
  - "7.  Other RSVP Procedures\n   This section describes modifications to other RSVP\
    \ procedures\n   introduced by MPLS VPNs.\n"
- title: 7.1.  Refresh Overhead Reduction
  contents:
  - "7.1.  Refresh Overhead Reduction\n   The following points ought to be noted regarding\
    \ RSVP refresh\n   overhead reduction [RFC2961] across an MPLS VPN:\n   o  The\
    \ hop between the ingress and egress PE of a VPN is to be\n      considered as\
    \ traversing one or more non-RSVP hops.  As such, the\n      procedures described\
    \ in Section 5.3 of [RFC2961] relating to non-\n      RSVP hops SHOULD be followed.\n\
    \   o  The source IP address of a SRefresh message MUST match the IPv4\n     \
    \ address signaled in the RSVP_HOP object contained in the\n      corresponding\
    \ Path or Resv message.  The IPv4 address in any\n      received VPN-IPv4 RSVP_HOP\
    \ object MUST be used as the source\n      address of that message for this purpose.\n"
- title: 7.2.  Cryptographic Authentication
  contents:
  - "7.2.  Cryptographic Authentication\n   The following points ought to be noted\
    \ regarding RSVP cryptographic\n   authentication ([RFC2747]) across an MPLS VPN:\n\
    \   o  The IPv4 address in any received VPN-IPv4 RSVP_HOP object MUST be\n   \
    \   used as the source address of that message for purposes of\n      identifying\
    \ the security association.\n   o  Forwarding of Challenge and Response messages\
    \ MUST follow the same\n      rules as described above for hop-by-hop messages.\
    \  Specifically,\n      if the originator of a Challenge/Response message has\
    \ received a\n      VPN-IPv4 RSVP_HOP object from the corresponding neighbor,\
    \ it MUST\n      use the label associated with that VPN-IPv4 address in BGP to\n\
    \      forward the Challenge/Response message.\n"
- title: 7.3.  RSVP Aggregation
  contents:
  - "7.3.  RSVP Aggregation\n   [RFC3175] and [RFC4860] describe mechanisms to aggregate\
    \ multiple\n   individual RSVP reservations into a single larger reservation on\
    \ the\n   basis of a common Differentiated Services Code Point/Per-Hop Behavior\n\
    \   (DSCP/PHB) for traffic classification.  The following points ought to\n  \
    \ be noted in this regard:\n   o  The procedures described in this section apply\
    \ only in the case\n      where the Aggregator and Deaggregator nodes are C/CE\
    \ devices, and\n      the entire MPLS VPN lies within the Aggregation Region.\
    \  The case\n      where the PE is also an Aggregator/Deaggregator is more complex\n\
    \      and not considered in this document.\n   o  Support of Aggregate RSVP sessions\
    \ is OPTIONAL.  When supported:\n      *  Aggregate RSVP sessions MUST be treated\
    \ in the same way as\n         regular IPv4 RSVP sessions.  To this end, all the\
    \ procedures\n         described in Sections 3 and 4 MUST be followed for aggregate\n\
    \         RSVP sessions.  The corresponding new SESSION, SENDER_TEMPLATE,\n  \
    \       and FILTERSPEC objects are defined in Section 8.\n      *  End-To-End\
    \ (E2E) RSVP sessions are passed unmodified through\n         the MPLS VPN.  These\
    \ RSVP messages SHOULD be identified by\n         their IP protocol (RSVP-E2E-IGNORE,\
    \ 134).  When the ingress PE\n         receives any RSVP message with this IP\
    \ protocol, it MUST\n         process this frame as if it is regular customer\
    \ traffic and\n         ignore any Router Alert Option.  The appropriate VPN and\n\
    \         transport labels are applied to the frame and it is forwarded\n    \
    \     towards the remote CE.  Note that this message will not be\n         received\
    \ or processed by any other P or PE node.\n      *  Any SESSION-OF-INTEREST object\
    \ (defined in [RFC4860]) MUST be\n         conveyed unmodified across the MPLS\
    \ VPN.\n"
- title: 7.4.  Support for CE-CE RSVP-TE
  contents:
  - "7.4.  Support for CE-CE RSVP-TE\n   [RFC5824] describes a set of requirements\
    \ for the establishment for\n   CE-CE MPLS LSPs across networks offering an L3VPN\
    \ service.  The\n   requirements specified in that document are similar to those\n\
    \   addressed by this document, in that both address the issue of\n   handling\
    \ RSVP requests from customers in a VPN context.  It is\n   possible that the\
    \ solution described here could be adapted to meet\n   the requirements of [RFC5824].\
    \  To the extent that this document uses\n   signaling extensions described in\
    \ [RFC3473] that have already been\n   used for GMPLS/TE, we expect that CE-CE\
    \ RSVP/TE will be incremental\n   work built on these extensions.  These extensions\
    \ will be considered\n   in a separate document.\n"
- title: 8.  Object Definitions
  contents:
  - '8.  Object Definitions

    '
- title: 8.1.  VPN-IPv4 and VPN-IPv6 SESSION Objects
  contents:
  - "8.1.  VPN-IPv4 and VPN-IPv6 SESSION Objects\n   The usage of the VPN-IPv4 (or\
    \ VPN-IPv6) SESSION object is described\n   in Sections 3.2 to 3.6.  The VPN-IPv4\
    \ (or VPN-IPv6) SESSION object\n   appears in RSVP messages that ordinarily contain\
    \ a SESSION object and\n   are sent between ingress PE and egress PE in either\
    \ direction.  The\n   object MUST NOT be included in any RSVP messages that are\
    \ sent\n   outside of the provider's backbone (except in the inter-AS Option-B\n\
    \   and Option-C cases, as described above, when it may appear on\n   inter-AS\
    \ links).\n   The VPN-IPv6 SESSION object is analogous to the VPN-IPv4 SESSION\n\
    \   object, using an VPN-IPv6 address ([RFC4659]) instead of an VPN-IPv4\n   address\
    \ ([RFC4364]).\n   The formats of the objects are as follows:\n         o    VPN-IPv4\
    \ SESSION object: Class = 1, C-Type = 19\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |             VPN-IPv4 DestAddress (12 bytes)           |\n         \
    \     +                                                       +\n            \
    \  |                                                       |\n              +-------------+-------------+-------------+-------------+\n\
    \              | Protocol Id |    Flags    |          DstPort          |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \   o    VPN-IPv6 SESSION object: Class = 1, C-Type = 20\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |                                                       |\n         \
    \     +             VPN-IPv6 DestAddress (24 bytes)           +\n            \
    \  /                                                       /\n              .\
    \                                                       .\n              /   \
    \                                                    /\n              |      \
    \                                                 |\n              +-------------+-------------+-------------+-------------+\n\
    \              | Protocol Id |     Flags   |          DstPort          |\n   \
    \           +-------------+-------------+-------------+-------------+\n   The\
    \ VPN-IPv4 DestAddress (respectively, VPN-IPv6 DestAddress) field\n   contains\
    \ an address of the VPN-IPv4 (respectively, VPN-IPv6) address\n   family encoded\
    \ as specified in [RFC4364] (respectively, [RFC4659]).\n   The content of this\
    \ field is discussed in Sections 3.2 and 3.3.\n   The protocol ID, flags, and\
    \ DstPort are identical to the same fields\n   in the IPv4 and IPv6 SESSION objects\
    \ ([RFC2205]).\n"
- title: 8.2.  VPN-IPv4 and VPN-IPv6 SENDER_TEMPLATE Objects
  contents:
  - "8.2.  VPN-IPv4 and VPN-IPv6 SENDER_TEMPLATE Objects\n   The usage of the VPN-IPv4\
    \ (or VPN-IPv6) SENDER_TEMPLATE object is\n   described in Sections 3.2 and 3.3.\
    \  The VPN-IPv4 (or VPN-IPv6)\n   SENDER_TEMPLATE object appears in RSVP messages\
    \ that ordinarily\n   contain a SENDER_TEMPLATE object and are sent between ingress\
    \ PE and\n   egress PE in either direction (such as Path, PathError, and\n   PathTear).\
    \  The object MUST NOT be included in any RSVP messages that\n   are sent outside\
    \ of the provider's backbone (except in the inter-AS\n   Option-B and Option-C\
    \ cases, as described above, when it may appear\n   on inter-AS links).  The format\
    \ of the object is as follows:\n         o    VPN-IPv4 SENDER_TEMPLATE object:\
    \ Class = 11, C-Type = 14\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |             VPN-IPv4 SrcAddress (12 bytes)            |\n         \
    \     +                                                       +\n            \
    \  |                                                       |\n              +-------------+-------------+-------------+-------------+\n\
    \              |          Reserved         |          SrcPort          |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \   o    VPN-IPv6 SENDER_TEMPLATE object: Class = 11, C-Type = 15\n          \
    \    +-------------+-------------+-------------+-------------+\n             \
    \ |                                                       |\n              + \
    \                                                      +\n              |    \
    \                                                   |\n              +       \
    \      VPN-IPv6 SrcAddress (24 bytes)            +\n              /          \
    \                                             /\n              .             \
    \                                          .\n              /                \
    \                                       /\n              |                   \
    \                                    |\n              +-------------+-------------+-------------+-------------+\n\
    \              |          Reserved         |          SrcPort          |\n   \
    \           +-------------+-------------+-------------+-------------+\n   The\
    \ VPN-IPv4 SrcAddress (respectively, VPN-IPv6 SrcAddress) field\n   contains an\
    \ address of the VPN-IPv4 (respectively, VPN-IPv6) address\n   family encoded\
    \ as specified in [RFC4364] (respectively, [RFC4659]).\n   The content of this\
    \ field is discussed in Sections 3.2 and 3.3.\n   The SrcPort is identical to\
    \ the SrcPort field in the IPv4 and IPv6\n   SENDER_TEMPLATE objects ([RFC2205]).\n\
    \   The Reserved field MUST be set to zero on transmit and ignored on\n   receipt.\n"
- title: 8.3.  VPN-IPv4 and VPN-IPv6 FILTER_SPEC Objects
  contents:
  - "8.3.  VPN-IPv4 and VPN-IPv6 FILTER_SPEC Objects\n   The usage of the VPN-IPv4\
    \ (or VPN-IPv6) FILTER_SPEC object is\n   described in Sections 3.4 and 3.5. \
    \ The VPN-IPv4 (or VPN-IPv6)\n   FILTER_SPEC object appears in RSVP messages that\
    \ ordinarily contain a\n   FILTER_SPEC object and are sent between ingress PE\
    \ and egress PE in\n   either direction (such as Resv, ResvError, and ResvTear).\
    \  The object\n   MUST NOT be included in any RSVP messages that are sent outside\
    \ of\n   the provider's backbone (except in the inter-AS Option-B and Option-C\n\
    \   cases, as described above, when it may appear on inter-AS links).\n      \
    \   o    VPN-IPv4 FILTER_SPEC object: Class = 10, C-Type = 14\n              Definition\
    \ same as VPN-IPv4 SENDER_TEMPLATE object.\n         o    VPN-IPv6 FILTER_SPEC\
    \ object: Class = 10, C-Type = 15\n              Definition same as VPN-IPv6 SENDER_TEMPLATE\
    \ object.\n   The content of the VPN-IPv4 SrcAddress (or VPN-IPv6 SrcAddress)\
    \ field\n   is discussed in Sections 3.4 and 3.5.\n   The SrcPort is identical\
    \ to the SrcPort field in the IPv4 and IPv6\n   SENDER_TEMPLATE objects ([RFC2205]).\n\
    \   The Reserved field MUST be set to zero on transmit and ignored on\n   receipt.\n"
- title: 8.4.  VPN-IPv4 and VPN-IPv6 RSVP_HOP Objects
  contents:
  - "8.4.  VPN-IPv4 and VPN-IPv6 RSVP_HOP Objects\n   Usage of the VPN-IPv4 (or VPN-IPv6)\
    \ RSVP_HOP object is described in\n   Sections 3.1 and 5.2.2.  The VPN-IPv4 (VPN-IPv6)\
    \ RSVP_HOP object is\n   used to establish signaling reachability between RSVP\
    \ neighbors\n   separated by one or more Option-B ASBRs.  This object may appear\
    \ in\n   RSVP messages that carry an RSVP_HOP object, and that travel between\n\
    \   the ingress and egress PEs.  It MUST NOT be included in any RSVP\n   messages\
    \ that are sent outside of the provider's backbone (except in\n   the inter-AS\
    \ Option-B and Option-C cases, as described above, when it\n   may appear on inter-AS\
    \ links).  The format of the object is as\n   follows:\n         o    VPN-IPv4\
    \ RSVP_HOP object: Class = 3, C-Type = 5\n              +-------------+-------------+-------------+-------------+\n\
    \              |       IPv4 Next/Previous Hop Address (4 bytes)        |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \        |                                                       |\n         \
    \     +                                                       +\n            \
    \  |    VPN-IPv4 Next/Previous Hop Address (12 bytes)      |\n              +\
    \                                                       +\n              |   \
    \                                                    |\n              +-------------+-------------+-------------+-------------+\n\
    \              |                 Logical Interface Handle              |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \   o    VPN-IPv6 RSVP_HOP object: Class = 3, C-Type = 6\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |                                                       |\n         \
    \     +       IPv6 Next/Previous Hop Address (16 bytes)       +\n            \
    \  |                                                       |\n              +\
    \                                                       +\n              |   \
    \                                                    |\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |                                                       |\n         \
    \     +     VPN-IPv6 Next/Previous Hop Address (24 bytes)     +\n            \
    \  /                                                       /\n              .\
    \                                                       .\n              /   \
    \                                                    /\n              |      \
    \                                                 |\n              +-------------+-------------+-------------+-------------+\n\
    \              |                Logical Interface Handle               |\n   \
    \           +-------------+-------------+-------------+-------------+\n   The\
    \ IPv4 Next/Previous Hop Address, IPv6 Next/Previous Hop Address,\n   and the\
    \ Logical Interface Handle fields are identical to those of the\n   RSVP_HOP object\
    \ ([RFC2205]).\n   The VPN-IPv4 Next/Previous Hop Address (respectively, VPN-IPv6\
    \ Next/\n   Previous Hop Address) field contains an address of the VPN-IPv4\n\
    \   (respectively, VPN-IPv6) address family encoded as specified in\n   [RFC4364]\
    \ (respectively, [RFC4659]).  The content of this field is\n   discussed in Section\
    \ 3.1.\n"
- title: 8.5.  Aggregated VPN-IPv4 and VPN-IPv6 SESSION Objects
  contents:
  - "8.5.  Aggregated VPN-IPv4 and VPN-IPv6 SESSION Objects\n   The usage of Aggregated\
    \ VPN-IPv4 (or VPN-IPv6) SESSION object is\n   described in Section 7.3.  The\
    \ AGGREGATE-VPN-IPv4 (respectively,\n   AGGREGATE-IPv6-VPN) SESSION object appears\
    \ in RSVP messages that\n   ordinarily contain a AGGREGATE-IPv4 (respectively,\
    \ AGGREGATE-IPv6)\n   SESSION object as defined in [RFC3175] and are sent between\
    \ ingress\n   PE and egress PE in either direction.  The GENERIC-AGGREGATE-VPN-IPv4\n\
    \   (respectively, AGGREGATE-VPN-IPv6) SESSION object should appear in\n   all\
    \ RSVP messages that ordinarily contain a GENERIC-AGGREGATE-IPv4\n   (respectively,\
    \ GENERIC-AGGREGATE-IPv6) SESSION object as defined in\n   [RFC4860] and are sent\
    \ between ingress PE and egress PE in either\n   direction.  These objects MUST\
    \ NOT be included in any RSVP messages\n   that are sent outside of the provider's\
    \ backbone (except in the\n   inter-AS Option-B and Option-C cases, as described\
    \ above, when it may\n   appear on inter-AS links).  The processing rules for\
    \ these objects\n   are otherwise identical to those of the VPN-IPv4 (respectively,\
    \ VPN-\n   IPv6) SESSION object defined in Section 8.1.  The format of the\n \
    \  object is as follows:\n         o    AGGREGATE-VPN-IPv4 SESSION object: Class\
    \ = 1, C-Type = 21\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |             VPN-IPv4 DestAddress (12 bytes)           |\n         \
    \     +                                                       +\n            \
    \  |                                                       |\n              +-------------+-------------+-------------+-------------+\n\
    \              |   Reserved  |    Flags    |   Reserved  |     DSCP    |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \   o    AGGREGATE-VPN-IPv6 SESSION object: Class = 1, C-Type = 22\n         \
    \     +-------------+-------------+-------------+-------------+\n            \
    \  |                                                       |\n              +\
    \                                                       +\n              |   \
    \                                                    |\n              +      \
    \       VPN-IPv6 DestAddress (24 bytes)           +\n              /         \
    \                                              /\n              .            \
    \                                           .\n              /               \
    \                                        /\n              |                  \
    \                                     |\n              +-------------+-------------+-------------+-------------+\n\
    \              |   Reserved  |    Flags    |   Reserved  |     DSCP    |\n   \
    \           +-------------+-------------+-------------+-------------+\n   The\
    \ VPN-IPv4 DestAddress (respectively, VPN-IPv6 DestAddress) field\n   contains\
    \ an address of the VPN-IPv4 (respectively, VPN-IPv6) address\n   family encoded\
    \ as specified in [RFC4364] (respectively, [RFC4659]).\n   The content of this\
    \ field is discussed in Sections 3.2 and 3.3.\n   The flags and DSCP are identical\
    \ to the same fields of the AGGREGATE-\n   IPv4 and AGGREGATE-IPv6 SESSION objects\
    \ ([RFC3175]).\n   The Reserved field MUST be set to zero on transmit and ignored\
    \ on\n   receipt.\n         o    GENERIC-AGGREGATE-VPN-IPv4 SESSION object:\n\
    \                Class = 1, C-Type = 23\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |             VPN-IPv4 DestAddress (12 bytes)           |\n         \
    \     +                                                       +\n            \
    \  |                                                       |\n              +-------------+-------------+-------------+-------------+\n\
    \              |  Reserved   |    Flags    |           PHB-ID          |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \        |          Reserved         |          vDstPort         |\n         \
    \     +-------------+-------------+-------------+-------------+\n            \
    \  |                    Extended vDstPort                  |\n              +-------------+-------------+-------------+-------------+\n\
    \         o    GENERIC-AGGREGATE-VPN-IPv6 SESSION object:\n                Class\
    \ = 1, C-Type = 24\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |                                                       |\n         \
    \     +             VPN-IPv6 DestAddress (24 bytes)           +\n            \
    \  /                                                       /\n              .\
    \                                                       .\n              /   \
    \                                                    /\n              |      \
    \                                                 |\n              +-------------+-------------+-------------+-------------+\n\
    \              |  Reserved   |    Flags    |           PHB-ID          |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \        |          Reserved         |          vDstPort         |\n         \
    \     +-------------+-------------+-------------+-------------+\n            \
    \  |                    Extended vDstPort                  |\n              +-------------+-------------+-------------+-------------+\n\
    \   The VPN-IPv4 DestAddress (respectively, VPN-IPv6 DestAddress) field\n   contains\
    \ an address of the VPN-IPv4 (respectively, VPN-IPv6) address\n   family encoded\
    \ as specified in [RFC4364] (respectively, [RFC4659]).\n   The content of this\
    \ field is discussed in Sections 3.2 and 3.3.\n   The flags, PHB-ID, vDstPort,\
    \ and Extended vDstPort are identical to\n   the same fields of the GENERIC-AGGREGATE-IPv4\
    \ and GENERIC-AGGREGATE-\n   IPv6 SESSION objects ([RFC4860]).\n   The Reserved\
    \ field MUST be set to zero on transmit and ignored on\n   receipt.\n"
- title: 8.6.  AGGREGATE-VPN-IPv4 and AGGREGATE-VPN-IPv6 SENDER_TEMPLATE Objects
  contents:
  - "8.6.  AGGREGATE-VPN-IPv4 and AGGREGATE-VPN-IPv6 SENDER_TEMPLATE Objects\n   The\
    \ usage of Aggregated VPN-IPv4 (or VPN-IPv6) SENDER_TEMPLATE object\n   is described\
    \ in Section 7.3.  The AGGREGATE-VPN-IPv4 (respectively,\n   AGGREGATE-VPN-IPv6)\
    \ SENDER_TEMPLATE object appears in RSVP messages\n   that ordinarily contain\
    \ a AGGREGATE-IPv4 (respectively, AGGREGATE-\n   IPv6) SENDER_TEMPLATE object\
    \ as defined in [RFC3175] and [RFC4860],\n   and are sent between ingress PE and\
    \ egress PE in either direction.\n   These objects MUST NOT be included in any\
    \ RSVP messages that are sent\n   outside of the provider's backbone (except in\
    \ the inter-AS Option-B\n   and Option-C cases, as described above, when it may\
    \ appear on\n   inter-AS links).  The processing rules for these objects are\n\
    \   otherwise identical to those of the VPN-IPv4 (respectively, VPN-IPv6)\n  \
    \ SENDER_TEMPLATE object defined in Section 8.2.  The format of the\n   object\
    \ is as follows:\n         o    AGGREGATE-VPN-IPv4 SENDER_TEMPLATE object:\n \
    \               Class = 11, C-Type = 16\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |          VPN-IPv4 AggregatorAddress (12 bytes)        |\n         \
    \     +                                                       +\n            \
    \  |                                                       |\n              +-------------+-------------+-------------+-------------+\n\
    \         o    AGGREGATE-VPN-IPv6 SENDER_TEMPLATE object:\n                Class\
    \ = 11, C-Type = 17\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |                                                       |\n         \
    \     +          VPN-IPv6 AggregatorAddress (24 bytes)        +\n            \
    \  /                                                       /\n              .\
    \                                                       .\n              /   \
    \                                                    /\n              |      \
    \                                                 |\n              +-------------+-------------+-------------+-------------+\n\
    \   The VPN-IPv4 AggregatorAddress (respectively, VPN-IPv6\n   AggregatorAddress)\
    \ field contains an address of the VPN-IPv4\n   (respectively, VPN-IPv6) address\
    \ family encoded as specified in\n   [RFC4364] (respectively, [RFC4659]).  The\
    \ content and processing\n   rules for these objects are similar to those of the\
    \ VPN-IPv4\n   SENDER_TEMPLATE object defined in Section 8.2.\n   The flags and\
    \ DSCP are identical to the same fields of the AGGREGATE-\n   IPv4 and AGGREGATE-IPv6\
    \ SESSION objects.\n"
- title: 8.7.  AGGREGATE-VPN-IPv4 and AGGREGATE-VPN-IPv6 FILTER_SPEC Objects
  contents:
  - "8.7.  AGGREGATE-VPN-IPv4 and AGGREGATE-VPN-IPv6 FILTER_SPEC Objects\n   The usage\
    \ of Aggregated VPN-IPv4 FILTER_SPEC object is described in\n   Section 7.3. \
    \ The AGGREGATE-VPN-IPv4 FILTER_SPEC object appears in\n   RSVP messages that\
    \ ordinarily contain a AGGREGATE-IPv4 FILTER_SPEC\n   object as defined in [RFC3175]\
    \ and [RFC4860], and are sent between\n   ingress PE and egress PE in either direction.\
    \  These objects MUST NOT\n   be included in any RSVP messages that are sent outside\
    \ of the\n   provider's backbone (except in the inter-AS Option-B and Option-C\n\
    \   cases, as described above, when it may appear on inter-AS links).\n   The\
    \ processing rules for these objects are otherwise identical to\n   those of the\
    \ VPN-IPv4 FILTER_SPEC object defined in Section 8.3.  The\n   format of the object\
    \ is as follows:\n      o    AGGREGATE-VPN-IPv4 FILTER_SPEC object:\n        \
    \     Class = 10, C-Type = 16\n           Definition same as AGGREGATE-VPN-IPv4\
    \ SENDER_TEMPLATE object.\n      o    AGGREGATE-VPN-IPv6 FILTER_SPEC object:\n\
    \             Class = 10, C-Type = 17\n           Definition same as AGGREGATE-VPN-IPv6\
    \ SENDER_TEMPLATE object.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   Section 8 defines new objects.  Therefore, IANA has\
    \ modified the RSVP\n   parameters registry, 'Class Names, Class Numbers, and\
    \ Class Types'\n   subregistry, and:\n   o  assigned six new C-Types under the\
    \ existing SESSION Class (Class\n      number 1), as follows:\n      Class\n \
    \     Number  Class Name                            Reference\n      ------  -----------------------\
    \               ---------\n           1  SESSION                             \
    \  [RFC2205]\n              Class Types or C-Types:\n               ..   ... \
    \                            ...\n               19   VPN-IPv4               \
    \         [RFC6016]\n               20   VPN-IPv6                        [RFC6016]\n\
    \               21   AGGREGATE-VPN-IPv4              [RFC6016]\n             \
    \  22   AGGREGATE-VPN-IPv6              [RFC6016]\n               23   GENERIC-AGGREGATE-VPN-IPv4\
    \      [RFC6016]\n               24   GENERIC-AGGREGATE-VPN-IPv6      [RFC6016]\n\
    \   o  assigned four new C-Types under the existing SENDER_TEMPLATE Class\n  \
    \    (Class number 11), as follows:\n      Class\n      Number  Class Name   \
    \                         Reference\n      ------  -----------------------   \
    \            ---------\n          11  SENDER_TEMPLATE                       [RFC2205]\n\
    \              Class Types or C-Types:\n               ..   ...              \
    \               ...\n               14   VPN-IPv4                        [RFC6016]\n\
    \               15   VPN-IPv6                        [RFC6016]\n             \
    \  16   AGGREGATE-VPN-IPv4              [RFC6016]\n               17   AGGREGATE-VPN-IPv6\
    \              [RFC6016]\n   o  assigned four new C-Types under the existing FILTER_SPEC\
    \ Class\n      (Class number 10), as follows:\n      Class\n      Number  Class\
    \ Name                            Reference\n      ------  -----------------------\
    \               ---------\n          10  FILTER_SPEC                         \
    \  [RFC2205]\n              Class Types or C-Types:\n               ..   ... \
    \                            ...\n               14   VPN-IPv4               \
    \         [RFC6016]\n               15   VPN-IPv6                        [RFC6016]\n\
    \               16   AGGREGATE-VPN-IPv4              [RFC6016]\n             \
    \  17   AGGREGATE-VPN-IPv6              [RFC6016]\n   o  assigned two new C-Types\
    \ under the existing RSVP_HOP Class (Class\n      number 3), as follows:\n   \
    \   Class\n      Number  Class Name                            Reference\n   \
    \   ------  -----------------------               ---------\n           3  RSVP_HOP\
    \                              [RFC2205]\n              Class Types or C-Types:\n\
    \               ..   ...                             ...\n                5  \
    \ VPN-IPv4                        [RFC6016]\n                6   VPN-IPv6    \
    \                    [RFC6016]\n   In addition, a new PathError code/value is\
    \ required to identify a\n   signaling reachability failure and the need for a\
    \ VPN-IPv4 or VPN-\n   IPv6 RSVP_HOP object as described in Section 5.2.2.  Therefore,\
    \ IANA\n   has modified the RSVP parameters registry, 'Error Codes and Globally-\n\
    \   Defined Error Value Sub-Codes' subregistry, and:\n   o  assigned a new Error\
    \ Code and sub-code, as follows:\n     37  RSVP over MPLS Problem            \
    \          [RFC6016]\n         This Error Code has the following globally-defined\
    \ Error\n         Value sub-codes:\n           1 = RSVP_HOP not reachable across\
    \ VPN     [RFC6016]\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   [RFC4364] addresses the security considerations\
    \ of BGP/MPLS VPNs in\n   general.  General RSVP security considerations are discussed\
    \ in\n   [RFC2205].  To ensure the integrity of RSVP, the RSVP Authentication\n\
    \   mechanisms defined in [RFC2747] and [RFC3097] SHOULD be supported.\n   Those\
    \ protect RSVP message integrity hop-by-hop and provide node\n   authentication\
    \ as well as replay protection, thereby protecting\n   against corruption and\
    \ spoofing of RSVP messages.  [RSVP-KEYING]\n   discusses applicability of various\
    \ keying approaches for RSVP\n   Authentication.  First, we note that the discussion\
    \ about\n   applicability of group keying to an intra-provider environment where\n\
    \   RSVP hops are not IP hops is relevant to securing of RSVP among PEs\n   of\
    \ a given Service Provider deploying the solution specified in the\n   present\
    \ document.  We note that the RSVP signaling in MPLS VPN is\n   likely to spread\
    \ over multiple administrative domains (e.g., the\n   service provider operating\
    \ the VPN service, and the customers of the\n   service).  Therefore the considerations\
    \ in [RSVP-KEYING] about inter-\n   domain issues are likely to apply.\n   Since\
    \ RSVP messages travel through the L3VPN cloud directly addressed\n   to PE or\
    \ ASBR routers (without IP Router Alert Option), P routers\n   remain isolated\
    \ from RSVP messages signaling customer reservations.\n   Providers MAY choose\
    \ to block PEs from sending datagrams with the\n   Router Alert Option to P routers\
    \ as a security practice, without\n   impacting the functionality described herein.\n\
    \   Beyond those general issues, four specific issues are introduced by\n   this\
    \ document: resource usage on PEs, resource usage in the provider\n   backbone,\
    \ PE route advertisement outside the AS, and signaling\n   exposure to ASBRs and\
    \ PEs.  We discuss these in turn.\n   A customer who makes resource reservations\
    \ on the CE-PE links for his\n   sites is only competing for link resources with\
    \ himself, as in\n   standard RSVP, at least in the common case where each CE-PE\
    \ link is\n   dedicated to a single customer.  Thus, from the perspective of the\n\
    \   CE-PE links, the present document does not introduce any new security\n  \
    \ issues.  However, because a PE typically serves multiple customers,\n   there\
    \ is also the possibility that a customer might attempt to use\n   excessive computational\
    \ resources on a PE (CPU cycles, memory, etc.)\n   by sending large numbers of\
    \ RSVP messages to a PE.  In the extreme,\n   this could represent a form of denial-of-service\
    \ attack.  In order to\n   prevent such an attack, a PE SHOULD support mechanisms\
    \ to limit the\n   fraction of its processing resources that can be consumed by\
    \ any one\n   CE or by the set of CEs of a given customer.  For example, a PE\
    \ might\n   implement a form of rate limiting on RSVP messages that it receives\n\
    \   from each CE.  We observe that these security risks and measures\n   related\
    \ to PE resource usage are very similar for any control-plane\n   protocol operating\
    \ between CE and PE (e.g., RSVP, routing,\n   multicast).\n   The second concern\
    \ arises only when the service provider chooses to\n   offer resource reservation\
    \ across the backbone, as described in\n   Section 4.  In this case, the concern\
    \ may be that a single customer\n   might attempt to reserve a large fraction\
    \ of backbone capacity,\n   perhaps with a coordinated effort from several different\
    \ CEs, thus\n   denying service to other customers using the same backbone.\n\
    \   [RFC4804] provides some guidance on the security issues when RSVP\n   reservations\
    \ are aggregated onto MPLS tunnels, which are applicable\n   to the situation\
    \ described here.  We note that a provider MAY use\n   local policy to limit the\
    \ amount of resources that can be reserved by\n   a given customer from a particular\
    \ PE, and that a policy server could\n   be used to control the resource usage\
    \ of a given customer across\n   multiple PEs if desired.  It is RECOMMENDED that\
    \ an implementation of\n   this specification support local policy on the PE to\
    \ control the\n   amount of resources that can be reserved by a given customer/CE.\n\
    \   Use of the VPN-IPv4 RSVP_HOP object requires exporting a PE VPN-IPv4\n   route\
    \ to another AS, and potentially could allow unchecked access to\n   remote PEs\
    \ if those routes were indiscriminately redistributed.\n   However, as described\
    \ in Section 3.1, no route that is not within a\n   customer's VPN should ever\
    \ be advertised to (or be reachable from)\n   that customer.  If a PE uses a local\
    \ address already within a\n   customer VRF (like PE-CE link address), it MUST\
    \ NOT send this address\n   in any RSVP messages in a different customer VRF.\
    \  A \"control-plane\"\n   VPN MAY be created across PEs and ASBRs and addresses\
    \ in this VPN can\n   be used to signal RSVP sessions for any customers, but these\
    \ routes\n   MUST NOT be advertised to, or made reachable from, any customer.\
    \  An\n   implementation of the present document MAY support such operation\n\
    \   using a \"control-plane\" VPN.  Alternatively, ASBRs MAY implement the\n \
    \  signaling procedures described in Section 5.2.1, even if admission\n   control\
    \ is not required on the inter-AS link, as these procedures do\n   not require\
    \ any direct P/PE route advertisement out of the AS.\n   Finally, certain operations\
    \ described herein (Section 3) require an\n   ASBR or PE to receive and locally\
    \ process a signaling packet\n   addressed to the BGP next hop address advertised\
    \ by that router.\n   This requirement does not strictly apply to MPLS/BGP VPNs\
    \ [RFC4364].\n   This could be viewed as opening ASBRs and PEs to being directly\n\
    \   addressable by customer devices where they were not open before, and\n   could\
    \ be considered a security issue.  If a provider wishes to\n   mitigate this situation,\
    \ the implementation MAY support the \"control\n   protocol VPN\" approach described\
    \ above.  That is, whenever a\n   signaling message is to be sent to a PE or ASBR,\
    \ the address of the\n   router in question would be looked up in the \"control\
    \ protocol VPN\",\n   and the message would then be sent on the LSP that is found\
    \ as a\n   result of that lookup.  This would ensure that the router address is\n\
    \   not reachable by customer devices.\n   [RFC4364] mentions use of IPsec both\
    \ on a CE-CE basis and PE-PE\n   basis:\n      Cryptographic privacy is not provided\
    \ by this architecture, nor by\n      Frame Relay or ATM VPNs.  These architectures\
    \ are all compatible\n      with the use of cryptography on a CE-CE basis, if\
    \ that is desired.\n      The use of cryptography on a PE-PE basis is for further\
    \ study.\n   The procedures specified in the present document for admission\n\
    \   control on the PE-CE links (Section 3) are compatible with the use of\n  \
    \ IPsec on a PE-PE basis.  The optional procedures specified in the\n   present\
    \ document for admission control in the Service Provider's\n   backbone (Section\
    \ 4) are not compatible with the use of IPsec on a\n   PE-PE basis, since those\
    \ procedures depend on the use of PE-PE MPLS\n   TE Tunnels to perform aggregate\
    \ reservations through the Service\n   Provider's backbone.\n   [RFC4923] describes\
    \ a model for RSVP operation through IPsec\n   Gateways.  In a nutshell, a form\
    \ of hierarchical RSVP reservation is\n   used where an RSVP reservation is made\
    \ for the IPsec tunnel and then\n   individual RSVP reservations are admitted/aggregated\
    \ over the tunnel\n   reservation.  This model applies to the case where IPsec\
    \ is used on a\n   CE-CE basis.  In that situation, the procedures defined in\
    \ the\n   present document would simply apply \"as is\" to the reservation\n \
    \  established for the IPsec tunnel(s).\n"
- title: 11.  Acknowledgments
  contents:
  - "11.  Acknowledgments\n   Thanks to Ashwini Dahiya, Prashant Srinivas, Yakov Rekhter,\
    \ Eric\n   Rosen, Dan Tappan, and Lou Berger for their many contributions to\n\
    \   solving the problems described in this document.  Thanks to Ferit\n   Yegenoglu\
    \ for his useful comments.  We also thank Stefan Santesson,\n   Vijay Gurbani,\
    \ and Alexey Melnikov for their review comments.  We\n   thank Richard Woundy\
    \ for his very thorough review and comments\n   including those that resulted\
    \ in additional text discussing scenarios\n   of admission control reject in the\
    \ MPLS VPN cloud.  Also, we thank\n   Adrian Farrel for his detailed review and\
    \ contributions.\n"
- title: Appendix A.  Alternatives Considered
  contents:
  - "Appendix A.  Alternatives Considered\n   At this stage, a number of alternatives\
    \ to the approach described\n   above have been considered.  We document some\
    \ of the approaches\n   considered here to assist future discussion.  None of\
    \ these have been\n   shown to improve upon the approach described above, and\
    \ the first two\n   seem to have significant drawbacks relative to the approach\
    \ described\n   above.\n"
- title: Appendix A.1.  GMPLS UNI Approach
  contents:
  - "Appendix A.1.  GMPLS UNI Approach\n   [RFC4208] defines the GMPLS UNI.  In Section\
    \ 7, the operation of the\n   GMPLS UNI in a VPN context is briefly described.\
    \  This is somewhat\n   similar to the problem tackled in the current document.\
    \  The main\n   difference is that the GMPLS UNI is primarily aimed at the problem\
    \ of\n   allowing a CE device to request the establishment of a Label Switched\n\
    \   Path (LSP) across the network on the other side of the UNI.  Hence,\n   the\
    \ procedures in [RFC4208] would lead to the establishment of an LSP\n   across\
    \ the VPN provider's network for every RSVP request received,\n   which is not\
    \ desired in this case.\n   To the extent possible, the approach described in\
    \ this document is\n   consistent with [RFC4208], while filling in more of the\
    \ details and\n   avoiding the problem noted above.\n"
- title: Appendix A.2.  Label Switching Approach
  contents:
  - "Appendix A.2.  Label Switching Approach\n   Implementations that always look\
    \ at IP headers inside the MPLS label\n   on the egress PE can intercept Path\
    \ messages and determine the\n   correct VRF and RSVP state by using a combination\
    \ of the\n   encapsulating VPN label and the IP header.  In our view, this is\
    \ an\n   undesirable approach for two reasons.  Firstly, it imposes a new MPLS\n\
    \   forwarding requirement for all data packets on the egress PE.\n   Secondly,\
    \ it requires using the encapsulating MPLS label to identify\n   RSVP state, which\
    \ runs counter to existing RSVP principle and\n   practice where all information\
    \ used to identify RSVP state is\n   included within RSVP objects.  RSVP extensions\
    \ such as COPS/RSVP\n   [RFC2749] which re-encapsulate RSVP messages are incompatible\
    \ with\n   this change.\n"
- title: Appendix A.3.  VRF Label Approach
  contents:
  - "Appendix A.3.  VRF Label Approach\n   Another approach to solving the problems\
    \ described here involves the\n   use of label switching to ensure that Path,\
    \ Resv, and other RSVP\n   messages are directed to the appropriate VRF on the\
    \ next RSVP hop\n   (e.g., egress PE).  One challenge with such an approach is\
    \ that\n   [RFC4364] does not require labels to be allocated for VRFs, only for\n\
    \   customer prefixes, and that there is no simple, existing method for\n   advertising\
    \ the fact that a label is bound to a VRF.  If, for\n   example, an ingress PE\
    \ sent a Path message labelled with a VPN label\n   that was advertised by the\
    \ egress PE for the prefix that matches the\n   destination address in the Path,\
    \ there is a risk that the egress PE\n   would simply label-switch the Path directly\
    \ on to the CE without\n   performing RSVP processing.\n   A second challenge\
    \ with this approach is that an IP address needs to\n   be associated with a VRF\
    \ and used as the PHOP address for the Path\n   message sent from ingress PE to\
    \ egress PE.  That address needs to be\n   reachable from the egress PE, and to\
    \ exist in the VRF at the ingress\n   PE.  Such an address is not always available\
    \ in today's deployments,\n   so this represents at least a change to existing\
    \ deployment\n   practices.\n"
- title: Appendix A.4.  VRF Label Plus VRF Address Approach
  contents:
  - "Appendix A.4.  VRF Label Plus VRF Address Approach\n   It is possible to create\
    \ an approach based on that described in the\n   previous section that addresses\
    \ the main challenges of that approach.\n   The basic approach has two parts:\
    \ (a) define a new BGP Extended\n   Community to tag a route (and its associated\
    \ MPLS label) as pointing\n   to a VRF; (b) allocate a \"dummy\" address to each\
    \ VRF, specifically to\n   be used for routing RSVP messages.  The dummy address\
    \ (which could be\n   anything, e.g., a loopback of the associated PE) would be\
    \ used as a\n   PHOP for Path messages and would serve as the destination for\
    \ Resv\n   messages but would not be imported into VRFs of any other PE.\n"
- title: References
  contents:
  - 'References

    '
- title: Normative References
  contents:
  - "Normative References\n   [RFC2113]      Katz, D., \"IP Router Alert Option\"\
    , RFC 2113,\n                  February 1997.\n   [RFC2119]      Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n                  Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2205]      Braden, B., Zhang, L., Berson,\
    \ S., Herzog, S., and S.\n                  Jamin, \"Resource ReSerVation Protocol\
    \ (RSVP) --\n                  Version 1 Functional Specification\", RFC 2205,\n\
    \                  September 1997.\n   [RFC2711]      Partridge, C. and A. Jackson,\
    \ \"IPv6 Router Alert\n                  Option\", RFC 2711, October 1999.\n \
    \  [RFC3175]      Baker, F., Iturralde, C., Le Faucheur, F., and B.\n        \
    \          Davie, \"Aggregation of RSVP for IPv4 and IPv6\n                  Reservations\"\
    , RFC 3175, September 2001.\n   [RFC4364]      Rosen, E. and Y. Rekhter, \"BGP/MPLS\
    \ IP Virtual Private\n                  Networks (VPNs)\", RFC 4364, February\
    \ 2006.\n   [RFC4659]      De Clercq, J., Ooms, D., Carugi, M., and F. Le\n  \
    \                Faucheur, \"BGP-MPLS IP Virtual Private Network (VPN)\n     \
    \             Extension for IPv6 VPN\", RFC 4659, September 2006.\n   [RFC4804]\
    \      Le Faucheur, F., \"Aggregation of Resource ReSerVation\n              \
    \    Protocol (RSVP) Reservations over MPLS TE/DS-TE\n                  Tunnels\"\
    , RFC 4804, February 2007.\n"
- title: Informative References
  contents:
  - "Informative References\n   [ALERT-USAGE]  Le Faucheur, F., Ed., \"IP Router Alert\
    \ Considerations\n                  and Usage\", Work in Progress, July 2010.\n\
    \   [LER-OPTIONS]  Smith, D., Mullooly, J., Jaeger, W., and T. Scholl,\n     \
    \             \"Requirements for Label Edge Router Forwarding of IPv4\n      \
    \            Option Packets\", Work in Progress, May 2010.\n   [RFC1633]     \
    \ Braden, B., Clark, D., and S. Shenker, \"Integrated\n                  Services\
    \ in the Internet Architecture: an Overview\",\n                  RFC 1633, June\
    \ 1994.\n   [RFC2209]      Braden, B. and L. Zhang, \"Resource ReSerVation\n \
    \                 Protocol (RSVP) -- Version 1 Message Processing\n          \
    \        Rules\", RFC 2209, September 1997.\n   [RFC2210]      Wroclawski, J.,\
    \ \"The Use of RSVP with IETF Integrated\n                  Services\", RFC 2210,\
    \ September 1997.\n   [RFC2747]      Baker, F., Lindell, B., and M. Talwar, \"\
    RSVP\n                  Cryptographic Authentication\", RFC 2747, January 2000.\n\
    \   [RFC2748]      Durham, D., Boyle, J., Cohen, R., Herzog, S., Rajan,\n    \
    \              R., and A. Sastry, \"The COPS (Common Open Policy\n           \
    \       Service) Protocol\", RFC 2748, January 2000.\n   [RFC2749]      Herzog,\
    \ S., Boyle, J., Cohen, R., Durham, D., Rajan,\n                  R., and A. Sastry,\
    \ \"COPS usage for RSVP\", RFC 2749,\n                  January 2000.\n   [RFC2961]\
    \      Berger, L., Gan, D., Swallow, G., Pan, P., Tommasi,\n                 \
    \ F., and S. Molendini, \"RSVP Refresh Overhead Reduction\n                  Extensions\"\
    , RFC 2961, April 2001.\n   [RFC3097]      Braden, R. and L. Zhang, \"RSVP Cryptographic\n\
    \                  Authentication -- Updated Message Type Value\",\n         \
    \         RFC 3097, April 2001.\n   [RFC3473]      Berger, L., \"Generalized Multi-Protocol\
    \ Label\n                  Switching (GMPLS) Signaling Resource ReserVation\n\
    \                  Protocol-Traffic Engineering (RSVP-TE) Extensions\",\n    \
    \              RFC 3473, January 2003.\n   [RFC4206]      Kompella, K. and Y.\
    \ Rekhter, \"Label Switched Paths\n                  (LSP) Hierarchy with Generalized\
    \ Multi-Protocol Label\n                  Switching (GMPLS) Traffic Engineering\
    \ (TE)\", RFC 4206,\n                  October 2005.\n   [RFC4208]      Swallow,\
    \ G., Drake, J., Ishimatsu, H., and Y. Rekhter,\n                  \"Generalized\
    \ Multiprotocol Label Switching (GMPLS)\n                  User-Network Interface\
    \ (UNI): Resource ReserVation\n                  Protocol-Traffic Engineering\
    \ (RSVP-TE) Support for the\n                  Overlay Model\", RFC 4208, October\
    \ 2005.\n   [RFC4860]      Le Faucheur, F., Davie, B., Bose, P., Christou, C.,\n\
    \                  and M. Davenport, \"Generic Aggregate Resource\n          \
    \        ReSerVation Protocol (RSVP) Reservations\", RFC 4860,\n             \
    \     May 2007.\n   [RFC4923]      Baker, F. and P. Bose, \"Quality of Service\
    \ (QoS)\n                  Signaling in a Nested Virtual Private Network\",\n\
    \                  RFC 4923, August 2007.\n   [RFC5824]      Kumaki, K., Zhang,\
    \ R., and Y. Kamite, \"Requirements\n                  for Supporting Customer\
    \ Resource ReSerVation Protocol\n                  (RSVP) and RSVP Traffic Engineering\
    \ (RSVP-TE) over a\n                  BGP/MPLS IP-VPN\", RFC 5824, April 2010.\n\
    \   [RFC5971]      Schulzrinne, H. and R. Hancock, \"GIST: General\n         \
    \         Internet Signalling Transport\", RFC 5971,\n                  October\
    \ 2010.\n   [RFC5974]      Manner, J., Karagiannis, G., and A. McDonald, \"NSIS\n\
    \                  Signaling Layer Protocol (NSLP) for Quality-of-Service\n  \
    \                Signaling\", RFC 5974, October 2010.\n   [RSVP-KEYING]  Behringer,\
    \ M., Faucheur, F., and B. Weis,\n                  \"Applicability of Keying\
    \ Methods for RSVP Security\",\n                  Work in Progress, September\
    \ 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Bruce Davie\n   Cisco Systems, Inc.\n   1414 Mass. Ave.\n\
    \   Boxborough, MA  01719\n   USA\n   EMail: bsd@cisco.com\n   Francois Le Faucheur\n\
    \   Cisco Systems, Inc.\n   Village d'Entreprise Green Side - Batiment T3\n  \
    \ 400, Avenue de Roumanille\n   Biot Sophia-Antipolis  06410\n   France\n   EMail:\
    \ flefauch@cisco.com\n   Ashok Narayanan\n   Cisco Systems, Inc.\n   1414 Mass.\
    \ Ave.\n   Boxborough, MA  01719\n   USA\n   EMail: ashokn@cisco.com\n"
