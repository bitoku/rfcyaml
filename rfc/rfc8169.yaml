- contents:
  - '              Residence Time Measurement in MPLS Networks

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies a new Generic Associated Channel (G-ACh)
    for\n   Residence Time Measurement (RTM) and describes how it can be used by\n
    \  time synchronization protocols within an MPLS domain.\n   Residence time is
    the variable part of the propagation delay of\n   timing and synchronization messages;
    knowing this delay for each\n   message allows for a more accurate determination
    of the delay to be\n   taken into account when applying the value included in
    a Precision\n   Time Protocol event message.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8169.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n     1.1.  Conventions Used in This Document . . . . . . . . .
    . . .   4\n       1.1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    .   4\n       1.1.2.  Requirements Language . . . . . . . . . . . . . . . .   5\n
    \  2.  Residence Time Measurement  . . . . . . . . . . . . . . . . .   5\n     2.1.
    \ One-Step Clock and Two-Step Clock Modes . . . . . . . . .   6\n       2.1.1.
    \ RTM with Two-Step Upstream PTP Clock  . . . . . . . .   7\n       2.1.2.  Two-Step
    RTM with One-Step Upstream PTP Clock . . . .   8\n   3.  G-ACh for Residence Time
    Measurement  . . . . . . . . . . . .   8\n     3.1.  PTP Packet Sub-TLV  . . .
    . . . . . . . . . . . . . . . .  10\n     3.2.  PTP Associated Value Field  .
    . . . . . . . . . . . . . .  11\n   4.  Control-Plane Theory of Operation . .
    . . . . . . . . . . . .  11\n     4.1.  RTM Capability  . . . . . . . . . . .
    . . . . . . . . . .  11\n     4.2.  RTM Capability Sub-TLV  . . . . . . . . .
    . . . . . . . .  12\n     4.3.  RTM Capability Advertisement in Routing Protocols
    . . . .  13\n       4.3.1.  RTM Capability Advertisement in OSPFv2  . . . . .
    . .  13\n       4.3.2.  RTM Capability Advertisement in OSPFv3  . . . . . . .
    \ 14\n       4.3.3.  RTM Capability Advertisement in IS-IS . . . . . . . .  14\n
    \      4.3.4.  RTM Capability Advertisement in BGP-LS  . . . . . . .  14\n     4.4.
    \ RSVP-TE Control-Plane Operation to Support RTM  . . . . .  15\n       4.4.1.
    \ RTM_SET TLV . . . . . . . . . . . . . . . . . . . . .  16\n   5.  Data-Plane
    Theory of Operation  . . . . . . . . . . . . . . .  20\n   6.  Applicable PTP
    Scenarios  . . . . . . . . . . . . . . . . . .  21\n   7.  IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .  22\n     7.1.  New RTM G-ACh . . .
    . . . . . . . . . . . . . . . . . . .  22\n     7.2.  New MPLS RTM TLV Registry
    . . . . . . . . . . . . . . . .  22\n     7.3.  New MPLS RTM Sub-TLV Registry
    . . . . . . . . . . . . . .  23\n     7.4.  RTM Capability Sub-TLV in OSPFv2  .
    . . . . . . . . . . .  23\n     7.5.  RTM Capability Sub-TLV in IS-IS . . . .
    . . . . . . . . .  24\n     7.6.  RTM Capability TLV in BGP-LS  . . . . . . .
    . . . . . . .  24\n     7.7.  RTM_SET Sub-object RSVP Type and Sub-TLVs . . .
    . . . . .  25\n     7.8.  RTM_SET Attribute Flag  . . . . . . . . . . . . . .
    . . .  26\n     7.9.  New Error Codes . . . . . . . . . . . . . . . . . . . .
    .  26\n   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  26\n
    \  9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  27\n     9.1.
    \ Normative References  . . . . . . . . . . . . . . . . . .  27\n     9.2.  Informative
    References  . . . . . . . . . . . . . . . . .  28\n   Acknowledgments . . . .
    . . . . . . . . . . . . . . . . . . . . .  29\n   Authors' Addresses  . . . .
    . . . . . . . . . . . . . . . . . . .  30\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Time synchronization protocols, e.g., the Network Time Protocol\n
    \  version 4 (NTPv4) [RFC5905] and the Precision Time Protocol version 2\n   (PTPv2)
    [IEEE.1588], define timing messages that can be used to\n   synchronize clocks
    across a network domain.  Measurement of the\n   cumulative time that one of these
    timing messages spends transiting\n   the nodes on the path from ingress node
    to egress node is termed\n   \"residence time\" and is used to improve the accuracy
    of clock\n   synchronization.  Residence time is the sum of the difference between\n
    \  the time of receipt at an ingress interface and the time of\n   transmission
    from an egress interface for each node along the network\n   path from an ingress
    node to an egress node.  This document defines a\n   new Generic Associated Channel
    (G-ACh) value and an associated\n   Residence Time Measurement (RTM) message that
    can be used in a\n   Multiprotocol Label Switching (MPLS) network to measure residence\n
    \  time over a Label Switched Path (LSP).\n   This document describes RTM over
    an LSP signaled using RSVP-TE\n   [RFC3209].  Using RSVP-TE, the LSP's path can
    be either explicitly\n   specified or determined during signaling.  Although it
    is possible to\n   use RTM over an LSP instantiated using the Label Distribution\n
    \  Protocol [RFC5036], that is outside the scope of this document.\n   Comparison
    with alternative proposed solutions such as\n   [TIMING-OVER-MPLS] is outside
    the scope of this document.\n"
  - contents:
    - '1.1.  Conventions Used in This Document

      '
    - contents:
      - "1.1.1.  Terminology\n   MPLS:   Multiprotocol Label Switching\n   ACH:    Associated
        Channel Header\n   TTL:    Time to Live\n   G-ACh:  Generic Associated Channel\n
        \  GAL:    Generic Associated Channel Label\n   NTP:    Network Time Protocol\n
        \  ppm:    parts per million\n   PTP:    Precision Time Protocol\n   BC:     boundary
        clock\n   LSP:    Label Switched Path\n   OAM:    Operations, Administration,
        and Maintenance\n   RRO:    Record Route Object\n   RTM:    Residence Time
        Measurement\n   IGP:    Internal Gateway Protocol\n   BGP-LS: Border Gateway
        Protocol - Link State\n"
      title: 1.1.1.  Terminology
    - contents:
      - "1.1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
        \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
        \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to
        be interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only
        when, they appear in all\n   capitals, as shown here.\n"
      title: 1.1.2.  Requirements Language
    title: 1.1.  Conventions Used in This Document
  title: 1.  Introduction
- contents:
  - "2.  Residence Time Measurement\n   \"Packet Loss and Delay Measurement for MPLS
    Networks\" [RFC6374] can\n   be used to measure one-way or two-way end-to-end
    propagation delay\n   over an LSP or a pseudowire (PW).  But these measurements
    are\n   insufficient for use in some applications, for example, time\n   synchronization
    across a network as defined in the PTP.  In PTPv2\n   [IEEE.1588], the residence
    time is accumulated in the correctionField\n   of the PTP event message, which
    is defined in [IEEE.1588] and\n   referred to as using a one-step clock, or in
    the associated follow-up\n   message (or Delay_Resp message associated with the
    Delay_Req\n   message), which is referred to as using a two-step clock (see the\n
    \  detailed discussion in Section 2.1).\n   IEEE 1588 uses this residence time
    to correct for the transit times\n   of nodes on an LSP, effectively making the
    transit nodes transparent.\n   This document proposes a mechanism that can be
    used as one type of\n   on-path support for a clock synchronization protocol or
    can be used\n   to perform one-way measurement of residence time.  The proposed\n
    \  mechanism accumulates residence time from all nodes that support this\n   extension
    along the path of a particular LSP in the Scratch Pad field\n   of an RTM message
    (Figure 1).  This value can then be used by the\n   egress node to update, for
    example, the correctionField of the PTP\n   event packet carried within the RTM
    message prior to performing its\n   PTP processing.\n"
  - contents:
    - "2.1.  One-Step Clock and Two-Step Clock Modes\n   One-step mode refers to the
      mode of operation where an egress\n   interface updates the correctionField
      value of an original event\n   message.  Two-step mode refers to the mode of
      operation where this\n   update is made in a subsequent follow-up message.\n
      \  Processing of the follow-up message, if present, requires the\n   downstream
      endpoint to wait for the arrival of the follow-up message\n   in order to combine
      correctionField values from both the original\n   (event) message and the subsequent
      (follow-up) message.  In a similar\n   fashion, each two-step node needs to
      wait for the related follow-up\n   message, if there is one, in order to update
      that follow-up message\n   (as opposed to creating a new one).  Hence, the first
      node that uses\n   two-step mode MUST do two things:\n   1.  Mark the original
      event message to indicate that a follow-up\n       message will be forthcoming.
      \ This is necessary in order to\n       *  Let any subsequent two-step node
      know that there is already a\n          follow-up message, and\n       *  Let
      the endpoint know to wait for a follow-up message.\n   2.  Create a follow-up
      message in which to put the RTM determined as\n       an initial correctionField
      value.\n   IEEE 1588v2 [IEEE.1588] defines this behavior for PTP messages.\n
      \  Thus, for example, with reference to the PTP protocol, the PTPType\n   field
      identifies whether the message is a Sync message, Follow_up\n   message, Delay_Req
      message, or Delay_Resp message.  The 10-octet-long\n   Port ID field contains
      the identity of the source port [IEEE.1588],\n   that is, the specific PTP port
      of the boundary clock (BC) connected\n   to the MPLS network.  The Sequence
      ID is the sequence ID of the PTP\n   message carried in the Value field of the
      message.\n   PTP messages also include a bit that indicates whether or not a\n
      \  follow-up message will be coming.  This bit MAY be set by a two-step\n   mode
      PTP device.  The value MUST NOT be unset until the original and\n   follow-up
      messages are combined by an endpoint (such as a BC).\n   For compatibility with
      PTP, RTM (when used for PTP packets) must\n   behave in a similar fashion.  It
      should be noted that the handling of\n   Sync event messages and of Delay_Req/Delay_Resp
      event messages that\n   cross a two-step RTM node is different.  The following
      outlines the\n   handling of a PTP Sync event message by the two-step RTM node.
      \ The\n   details of handling Delay_Resp/Delay_Req PTP event messages by the\n
      \  two-step RTM node are discussed in Section 2.1.1.  As a summary, a\n   two-step
      RTM-capable egress interface will need to examine the S bit\n   in the Flags
      field of the PTP sub-TLV (for RTM messages that indicate\n   they are for PTP),
      and -- if it is clear (set to zero) -- it MUST set\n   the S bit and create
      a follow-up PTP Type RTM message.  If the S bit\n   is already set, then the
      RTM-capable node MUST wait for the RTM\n   message with the PTP type of follow-up
      and matching originator and\n   sequence number to make the corresponding residence
      time update to\n   the Scratch Pad field.  The wait period MUST be reasonably
      bounded.\n   Thus, an RTM packet, containing residence time information relating\n
      \  to an earlier packet, also contains information identifying that\n   earlier
      packet.\n   In practice, an RTM node operating in two-step mode behaves like
      a\n   two-step transparent clock.\n   A one-step-capable RTM node MAY elect
      to operate in either one-step\n   mode (by making an update to the Scratch Pad
      field of the RTM message\n   containing the PTP event message) or two-step mode
      (by making an\n   update to the Scratch Pad of a follow-up message when presence
      of a\n   follow-up is indicated), but it MUST NOT do both.\n   Two main subcases
      identified for an RTM node operating as a two-step\n   clock are described in
      the following sub-sections.\n"
    - contents:
      - "2.1.1.  RTM with Two-Step Upstream PTP Clock\n   If any of the previous RTM-capable
        nodes or the previous PTP clock\n   (e.g., the BC connected to the first node)
        is a two-step clock and if\n   the local RTM-capable node is also operating
        a two-tep clock, the\n   residence time is added to the RTM packet that has
        been created to\n   include the second PTP packet (i.e., the follow-up message
        in the\n   downstream direction).  This RTM packet carries the related\n   accumulated
        residence time, the appropriate values of the Sequence ID\n   and Port ID
        (the same identifiers carried in the original packet),\n   and the two-step
        flag set to 1.\n   Note that the fact that an upstream RTM-capable node operating
        in\n   two-step mode has created a follow-up message does not require any\n
        \  subsequent RTM-capable node to also operate in two-step mode, as long\n
        \  as that RTM-capable node forwards the follow-up message on the same\n   LSP
        on which it forwards the corresponding previous message.\n   A one-step-capable
        RTM node MAY elect to update the RTM follow-up\n   message as if it were operating
        in two-step mode; however, it MUST\n   NOT update both messages.\n   A PTP
        Sync packet is carried in the RTM packet in order to indicate\n   to the RTM
        node that RTM must be performed on that specific packet.\n   To handle the
        residence time of the Delay_Req message in the upstream\n   direction, an
        RTM packet must be created to carry the residence time\n   in the associated
        downstream Delay_Resp message.\n   The last RTM node of the MPLS network,
        in addition to updating the\n   correctionField of the associated PTP packet,
        must also react\n   properly to the two-step flag of the PTP packets.\n"
      title: 2.1.1.  RTM with Two-Step Upstream PTP Clock
    - contents:
      - "2.1.2.  Two-Step RTM with One-Step Upstream PTP Clock\n   When the PTP network
        connected to the MPLS operates in one-step clock\n   mode and an RTM node
        operates in two-step mode, the follow-up RTM\n   packet must be created by
        the RTM node itself.  The RTM packet\n   carrying the PTP event packet needs
        now to indicate that a follow-up\n   message will be coming.\n   The egress
        RTM-capable node of the LSP will remove RTM encapsulation\n   and, in case
        of two-step clock mode being indicated, will generate\n   PTP messages to
        include the follow-up correction as appropriate\n   (according to [IEEE.1588]).
        \ In this case, the common header of the\n   PTP packet carrying the synchronization
        message would have to be\n   modified by setting the twoStepFlag field indicating
        that there is\n   now a follow-up message associated to the current message.\n"
      title: 2.1.2.  Two-Step RTM with One-Step Upstream PTP Clock
    title: 2.1.  One-Step Clock and Two-Step Clock Modes
  title: 2.  Residence Time Measurement
- contents:
  - "3.  G-ACh for Residence Time Measurement\n   [RFC5586] and [RFC6423] define the
    G-ACh to extend the applicability\n   of the Pseudowire Associated Channel Header
    (ACH) [RFC5085] to LSPs.\n   G-ACh provides a mechanism to transport OAM and other
    control\n   messages over an LSP.  Processing of these messages by selected\n
    \  transit nodes is controlled by the use of the Time-to-Live (TTL)\n   value
    in the MPLS header of these messages.\n   The message format for RTM is presented
    in Figure 1.\n     0                   1                   2                   3\n
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \   |0 0 0 1|Version|   Reserved    |           RTM G-ACh           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \   |                                                               |\n    |                        Scratch
    Pad                            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \   |            Type               |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \   |                       Value (optional)                        |\n    ~                                                               ~\n
    \   |                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    Figure 1: RTM G-ACh Message Format for Residence Time Measurement\n   o  The
    first four octets are defined as a G-ACh header in [RFC5586].\n   o  The Version
    field is set to 0, as defined in [RFC4385].\n   o  The Reserved field MUST be
    set to 0 on transmit and ignored on\n      receipt.\n   o  The RTM G-ACh field
    (value 0x000F; see Section 7.1) identifies the\n      packet as such.\n   o  The
    Scratch Pad field is 8 octets in length.  It is used to\n      accumulate the
    residence time spent in each RTM-capable node\n      transited by the packet on
    its path from ingress node to egress\n      node.  The first RTM-capable node
    MUST initialize the Scratch Pad\n      field with its RTM.  Its format is a 64-bit
    signed integer, and it\n      indicates the value of the residence time measured
    in nanoseconds\n      and multiplied by 2^16.  Note that depending on whether
    the timing\n      procedure is a one-step or two-step operation (Section 2.1),
    the\n      residence time is either for the timing packet carried in the\n      Value
    field of this RTM message or for an associated timing packet\n      carried in
    the Value field of another RTM message.\n   o  The Type field identifies the type
    and encapsulation of a timing\n      packet carried in the Value field, e.g.,
    NTP [RFC5905] or PTP\n      [IEEE.1588].  Per this document, IANA has created
    a sub-registry\n      called the \"MPLS RTM TLV Registry\" in the \"Generic Associated\n
    \     Channel (G-ACh) Parameters\" registry (see Section 7.2).\n   o  The Length
    field contains the length, in octets, of any Value\n      field defined for the
    Type given in the Type field.\n   o  The TLV MUST be included in the RTM message,
    even if the length of\n      the Value field is zero.\n"
  - contents:
    - "3.1.  PTP Packet Sub-TLV\n   Figure 2 presents the format of a PTP sub-TLV
      that MUST be included\n   in the Value field of an RTM message preceding the
      carried timing\n   packet when the timing packet is PTP.\n     0                   1
      \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |             Type              |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                         Flags                         |PTPType|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                            Port ID                            |\n    |
      \                                                              |\n    |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                               |           Sequence ID         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                      Figure 2: PTP Sub-TLV Format\n   where the Flags field
      has the following format:\n     0                   1                   2\n
      \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |S|                      Reserved                       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           Figure 3: Flags Field Format of PTP Packet Sub-TLV\n   o  The Type
      field identifies the PTP packet sub-TLV and is set to 1\n      according to
      Section 7.3.\n   o  The Length field of the PTP sub-TLV contains the number
      of octets\n      of the Value part of the TLV and MUST be 20.\n   o  The Flags
      field currently defines one bit, the S bit, that defines\n      whether the
      current message has been processed by a two-step node,\n      where the flag
      is cleared if the message has been handled\n      exclusively by one-step nodes
      and there is no follow-up message\n      and is set if there has been at least
      one two-step node and a\n      follow-up message is forthcoming.\n   o  The
      PTPType field indicates the type of PTP packet to which this\n      PTP sub-TLV
      applies.  PTPType is the messageType field of a PTPv2\n      packet with possible
      values defined in Table 19 of [IEEE.1588].\n   o  The 10-octet-long Port ID
      field contains the identity of the\n      source port.\n   o  The Sequence ID
      is the sequence ID of the PTP message to which\n      this PTP sub-TLV applies.\n
      \  A tuple of PTPType, Port ID, and Sequence ID uniquely identifies the\n   PTP
      timing message included in an RTM message and is used in two-step\n   RTM mode;
      see Section 2.1.1.\n"
    title: 3.1.  PTP Packet Sub-TLV
  - contents:
    - "3.2.  PTP Associated Value Field\n   The Value field (see Figure 1) -- in addition
      to the PTP sub-TLV --\n   MAY carry a packet of the PTP Time synchronization
      protocol (as was\n   identified by the Type field).  It is important to note
      that the\n   timing message packet may be authenticated or encrypted and carried\n
      \  over this LSP unchanged (and inaccessible to intermediate RTM capable\n   LSRs)
      while the residence time is accumulated in the Scratch Pad\n   field.\n   The
      LSP ingress RTM-capable LSR populates the identifying tuple\n   information
      of the PTP sub-TLV (see section 3.1) prior to including\n   the (possibly authenticated/encrypted)
      PTP message packet after the\n   PTP sub-TLV in the Value field of the RTM message
      for an RTM message\n   of the PTP Type (Type 1; see Section 7.3).\n"
    title: 3.2.  PTP Associated Value Field
  title: 3.  G-ACh for Residence Time Measurement
- contents:
  - "4.  Control-Plane Theory of Operation\n   The operation of RTM depends upon TTL
    expiry to deliver an RTM packet\n   from one RTM-capable interface to the next
    along the path from\n   ingress node to egress node.  This means that a node with
    RTM-capable\n   interfaces MUST be able to compute a TTL, which will cause the
    expiry\n   of an RTM packet at the next node with RTM-capable interfaces.\n"
  - contents:
    - "4.1.  RTM Capability\n   Note that the RTM capability of a node is with respect
      to the pair of\n   interfaces that will be used to forward an RTM packet.  In
      general,\n   the ingress interface of this pair must be able to capture the\n
      \  arrival time of the packet and encode it in some way such that this\n   information
      will be available to the egress interface of a node.\n   The supported mode
      (one-step or two-step) of any pair of interfaces\n   is determined by the capability
      of the egress interface.  For both\n   modes, the egress interface implementation
      MUST be able to determine\n   the precise departure time of the same packet
      and determine from\n   this, and the arrival time information from the corresponding
      ingress\n   interface, the difference representing the residence time for the\n
      \  packet.\n   An interface with the ability to do this and update the associated\n
      \  Scratch Pad in real time (i.e., while the packet is being forwarded)\n   is
      said to be one-step capable.\n   Hence, while both ingress and egress interfaces
      are required to\n   support RTM for the pair to be RTM capable, it is the egress\n
      \  interface that determines whether or not the node is one-step or two-\n   step
      capable with respect to the interface pair.\n   The RTM capability used in the
      sub-TLV shown in Figures 4 and 5 is\n   thus a non-routing-related capability
      associated with the interface\n   being advertised based on its egress capability.
      \ The ability of any\n   pair of interfaces on a node that includes this egress
      interface to\n   support any mode of RTM depends on the ability of the ingress\n
      \  interface of a node to record packet arrival time and convey it to\n   the
      egress interface on the node.\n   When a node uses an IGP to support the RTM
      capability advertisement,\n   the IGP sub-TLV MUST reflect the RTM capability
      (one-step or two-\n   step) associated with the advertised interface.  Changes
      of RTM\n   capability are unlikely to be frequent and would result, for example,\n
      \  from the operator's decision to include or exclude a particular port\n   from
      RTM processing or switch between RTM modes.\n"
    title: 4.1.  RTM Capability
  - contents:
    - "4.2.  RTM Capability Sub-TLV\n   [RFC4202] explains that the Interface Switching
      Capability Descriptor\n   describes the switching capability of an interface.
      \ For\n   bidirectional links, the switching capabilities of an interface are\n
      \  defined to be the same in either direction, that is, for data\n   entering
      the node through that interface and for data leaving the\n   node through that
      interface.  That principle SHOULD be applied when a\n   node advertises RTM
      capability.\n   A node that supports RTM MUST be able to act in two-step mode
      and MAY\n   also support one-step RTM mode.  A detailed discussion of one-step\n
      \  and two-step RTM modes is contained in Section 2.1.\n"
    title: 4.2.  RTM Capability Sub-TLV
  - contents:
    - '4.3.  RTM Capability Advertisement in Routing Protocols

      '
    - contents:
      - "4.3.1.  RTM Capability Advertisement in OSPFv2\n   The format for the RTM
        Capability sub-TLV in OSPF is presented in\n   Figure 4.\n     0                   1
        \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |              Type             |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   | RTM |  Value       ...\n    +-+-+-+-+-+-+-+-+-+- ...\n                Figure
        4: RTM Capability Sub-TLV in OSPFv2\n   o  Type value (5) has been assigned
        by IANA in the \"OSPFv2 Extended\n      Link TLV Sub-TLVs\" registry (see
        Section 7.4).\n   o  Length value equals the number of octets of the Value
        field.\n   o  Value contains a variable number of bitmap fields so that the\n
        \     overall number of bits in the fields equals Length * 8.\n   o  Bits
        are defined/sent starting with Bit 0.  Additional bitmap\n      field definitions
        that may be defined in the future SHOULD be\n      assigned in ascending bit
        order so as to minimize the number of\n      bits that will need to be transmitted.\n
        \  o  Undefined bits MUST be transmitted as 0 and MUST be ignored on\n      receipt.\n
        \  o  Bits that are NOT transmitted MUST be treated as if they are set\n      to
        0 on receipt.\n   o  RTM (capability) is a 3-bit-long bitmap field with values
        defined\n      as follows:\n      *  0b001 - one-step RTM supported\n      *
        \ 0b010 - two-step RTM supported\n      *  0b100 - reserved\n   The capability
        to support RTM on a particular link (interface) is\n   advertised in the OSPFv2
        Extended Link Opaque LSA as described in\n   Section 3 of [RFC7684] via the
        RTM Capability sub-TLV.\n"
      title: 4.3.1.  RTM Capability Advertisement in OSPFv2
    - contents:
      - "4.3.2.  RTM Capability Advertisement in OSPFv3\n   The capability to support
        RTM on a particular link (interface) can be\n   advertised in OSPFv3 using
        LSA extensions as described in\n   [OSPFV3-EXTENDED-LSA].  The sub-TLV SHOULD
        use the same format as in\n   Section 4.3.1.  The type allocation and full
        details of exact use of\n   OSPFv3 LSA extensions is for further study.\n"
      title: 4.3.2.  RTM Capability Advertisement in OSPFv3
    - contents:
      - "4.3.3.  RTM Capability Advertisement in IS-IS\n   The capability to support
        RTM on a particular link (interface) is\n   advertised in a new sub-TLV that
        may be included in TLVs advertising\n   Intermediate System (IS) Reachability
        on a specific link (TLVs 22,\n   23, 222, and 223).\n   The format for the
        RTM Capability sub-TLV is presented in Figure 5.\n     0                   1
        \                  2\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 ...\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...\n    |
        \     Type     |     Length    | RTM |   Value      ...\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...\n
        \                    Figure 5: RTM Capability Sub-TLV\n   o  Type value (40)
        has been assigned by IANA in the \"Sub-TLVs for\n      TLVs 22, 23, 141, 222,
        and 223\" registry for IS-IS (see\n      Section 7.5).\n   o  Definitions,
        rules of handling, and values for the Length and\n      Value fields are as
        defined in Section 4.3.1.\n   o  RTM (capability) is a 3-bit-long bitmap field
        with values defined\n      in Section 4.3.1.\n"
      title: 4.3.3.  RTM Capability Advertisement in IS-IS
    - contents:
      - "4.3.4.  RTM Capability Advertisement in BGP-LS\n   The format for the RTM
        Capability TLV is presented in Figure 4.\n   Type value (1105) has been assigned
        by IANA in the \"BGP-LS Node\n   Descriptor, Link Descriptor, Prefix Descriptor,
        and Attribute TLVs\"\n   sub-registry (see Section 7.6).\n   Definitions,
        rules of handling, and values for fields Length, Value,\n   and RTM are as
        defined in Section 4.3.1.\n   The RTM capability will be advertised in BGP-LS
        as a Link Attribute\n   TLV associated with the Link NLRI as described in
        Section 3.3.2 of\n   [RFC7752].\n"
      title: 4.3.4.  RTM Capability Advertisement in BGP-LS
    title: 4.3.  RTM Capability Advertisement in Routing Protocols
  - contents:
    - "4.4.  RSVP-TE Control-Plane Operation to Support RTM\n   Throughout this document,
      we refer to a node as an RTM-capable node\n   when at least one of its interfaces
      is RTM capable.  Figure 6\n   provides an example of roles a node may have with
      respect to RTM\n   capability:\n    -----     -----     -----     -----     -----
      \    -----     -----\n    | A |-----| B |-----| C |-----| D |-----| E |-----|
      F |-----| G |\n    -----     -----     -----     -----     -----     -----     -----\n
      \                       Figure 6: RTM-Capable Roles\n   o  A is a boundary clock
      with its egress port in Master state.  Node\n      A transmits IP-encapsulated
      timing packets whose destination IP\n      address is G.\n   o  B is the ingress
      Label Edge Router (LER) for the MPLS LSP and is\n      the first RTM-capable
      node.  It creates RTM packets, and in each\n      it places a timing packet,
      possibly encrypted, in the Value field\n      and initializes the Scratch Pad
      field with its RTM.\n   o  C is a transit node that is not RTM capable.  It
      forwards RTM\n      packets without modification.\n   o  D is an RTM-capable
      transit node.  It updates the Scratch Pad\n      field of the RTM packet without
      updating the timing packet.\n   o  E is a transit node that is not RTM capable.
      \ It forwards RTM\n      packets without modification.\n   o  F is the egress
      LER and the last RTM-capable node.  It removes the\n      RTM ACH encapsulation
      and processes the timing packet carried in\n      the Value field using the
      value in the Scratch Pad field.  In\n      particular, the value in the Scratch
      Pad field of the RTM ACH is\n      used in updating the Correction field of
      the PTP message(s).  The\n      LER should also include its own residence time
      before creating the\n      outgoing PTP packets.  The details of this process
      depend on\n      whether or not the node F is itself operating as a one-step
      or\n      two-step clock.\n   o  G is a boundary clock with its ingress port
      in Slave state.  Node\n      G receives PTP messages.\n   An ingress node that
      is configured to perform RTM along a path\n   through an MPLS network to an
      egress node MUST verify that the\n   selected egress node has an interface that
      supports RTM via the\n   egress node's advertisement of the RTM Capability sub-TLV,
      as covered\n   in Section 4.3.  In the Path message that the ingress node uses
      to\n   instantiate the LSP to that egress node, it places an LSP_ATTRIBUTES\n
      \  object [RFC5420] with an RTM_SET Attribute Flag set, as described in\n   Section
      7.8, which indicates to the egress node that RTM is requested\n   for this LSP.
      \ The RTM_SET Attribute Flag SHOULD NOT be set in the\n   LSP_REQUIRED_ATTRIBUTES
      object [RFC5420], unless it is known that all\n   nodes recognize the RTM attribute
      (but need not necessarily implement\n   it), because a node that does not recognize
      the RTM_SET Attribute\n   Flag would reject the Path message.\n   If an egress
      node receives a Path message with the RTM_SET Attribute\n   Flag in an LSP_ATTRIBUTES
      object, the egress node MUST include an\n   initialized RRO [RFC3209] and LSP_ATTRIBUTES
      object where the RTM_SET\n   Attribute Flag is set and the RTM_SET TLV (Section
      4.4.1) is\n   initialized.  When the Resv message is received by the ingress
      node,\n   the RTM_SET TLV will contain an ordered list, from egress node to\n
      \  ingress node, of the RTM-capable nodes along the LSP's path.\n   After the
      ingress node receives the Resv, it MAY begin sending RTM\n   packets on the
      LSP's path.  Each RTM packet has its Scratch Pad field\n   initialized and its
      TTL set to expire on the closest downstream RTM-\n   capable node.\n   It should
      be noted that RTM can also be used for LSPs instantiated\n   using [RFC3209]
      in an environment in which all interfaces in an IGP\n   support RTM.  In this
      case, the RTM_SET TLV and LSP_ATTRIBUTES object\n   MAY be omitted.\n"
    - contents:
      - "4.4.1.  RTM_SET TLV\n   RTM-capable interfaces can be recorded via the RTM_SET
        TLV.  The\n   RTM_SET sub-object format is a generic TLV format, presented
        in\n   Figure 7.\n     0                   1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |     Type      |     Length    |I|         Reserved            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   ~                             Value                             ~\n    |
        \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                      Figure 7: RTM_SET TLV Format\n   Type value (5) has
        been assigned by IANA in the RSVP-TE \"Attributes\n   TLV Space\" sub-registry
        (see Section 7.7).\n   The Length contains the total length of the sub-object
        in bytes,\n   including the Type and Length fields.\n   The I bit indicates
        whether the downstream RTM-capable node along the\n   LSP is present in the
        RRO.\n   The Reserved field must be zeroed on initiation and ignored on\n
        \  receipt.\n   The content of an RTM_SET TLV is a series of variable-length\n
        \  sub-TLVs.  Only a single RTM_SET can be present in a given\n   LSP_ATTRIBUTES
        object.  The sub-TLVs are defined in Section 4.4.1.1.\n   The following processing
        procedures apply to every RTM-capable node\n   along the LSP.  In this paragraph,
        an RTM-capable node is referred to\n   as a node for sake of brevity.  Each
        node MUST examine the Resv\n   message for whether the RTM_SET Attribute Flag
        in the LSP_ATTRIBUTES\n   object is set.  If the RTM_SET flag is set, the
        node MUST inspect the\n   LSP_ATTRIBUTES object for presence of an RTM_SET
        TLV.  If more than\n   one is found, then the LSP setup MUST fail with generation
        of the\n   ResvErr message with Error Code \"Duplicate TLV\" (Section 7.9)
        and\n   Error Value that contains the Type value in its 8 least significant\n
        \  bits.  If no RTM_SET TLV is found, then the LSP setup MUST fail with\n
        \  generation of the ResvErr message with Error Code \"RTM_SET TLV\n   Absent\"
        (Section 7.9).  If one RTM_SET TLV has been found, the node\n   will use the
        ID of the first node in the RTM_SET in conjunction with\n   the RRO to compute
        the hop count to its downstream node with a\n   reachable RTM-capable interface.
        \ If the node cannot find a matching\n   ID in the RRO, then it MUST try to
        use the ID of the next node in the\n   RTM_SET until it finds the match or
        reaches the end of the RTM_SET\n   TLV.  If a match has been found, the calculated
        value is used by the\n   node as the TTL value in the outgoing label to reach
        the next RTM-\n   capable node on the LSP.  Otherwise, the TTL value MUST
        be set to\n   255.  The node MUST add an RTM_SET sub-TLV with the same address
        it\n   used in the RRO sub-object at the beginning of the RTM_SET TLV in the\n
        \  associated outgoing Resv message before forwarding it upstream.  If\n   the
        calculated TTL value has been set to 255, as described above,\n   then the
        I flag in the node's RTM_SET TLV MUST be set to 1 before the\n   Resv message
        is forwarded upstream.  Otherwise, the I flag MUST be\n   cleared (0).\n   The
        ingress node MAY inspect the I bit received in each RTM_SET TLV\n   contained
        in the LSP_ATTRIBUTES object of a received Resv message.\n   The presence
        of the RTM_SET TLV with the I bit set to 1 indicates\n   that some RTM nodes
        along the LSP could not be included in the\n   calculation of the residence
        time.  An ingress node MAY choose to\n   resignal the LSP to include all RTM
        nodes or simply notify the user\n   via a management interface.\n   There
        are scenarios when some information is removed from an RRO due\n   to policy
        processing (e.g., as may happen between providers) or the\n   RRO is limited
        due to size constraints.  Such changes affect the core\n   assumption of this
        method and the processing of RTM packets.  RTM\n   SHOULD NOT be used if it
        is not guaranteed that the RRO contains\n   complete information.\n"
      - contents:
        - "4.4.1.1.  RTM_SET Sub-TLVs\n   The RTM Set sub-object contains an ordered
          list, from egress node to\n   ingress node, of the RTM-capable nodes along
          the LSP's path.\n   The contents of an RTM_SET sub-object are a series of
          variable-length\n   sub-TLVs.  Each sub-TLV has its own Length field.  The
          Length\n   contains the total length of the sub-TLV in bytes, including
          the Type\n   and Length fields.  The Length MUST always be a multiple of
          4, and at\n   least 8 (smallest IPv4 sub-object).\n   Sub-TLVs are organized
          as a last-in-first-out stack.  The first-out\n   sub-TLV relative to the
          beginning of RTM_SET TLV is considered the\n   top.  The last-out sub-TLV
          is considered the bottom.  When a new\n   sub-TLV is added, it is always
          added to the top.\n   The RTM_SET TLV is intended to include the subset
          of the RRO sub-TLVs\n   that represent those egress interfaces on the LSP
          that are RTM\n   capable.  After a node chooses an egress interface to use
          in the RRO\n   sub-TLV, that same egress interface, if RTM capable, SHOULD
          be placed\n   into the RTM_SET TLV using one of the following: IPv4 sub-TLV,
          IPv6\n   sub-TLV, or Unnumbered Interface sub-TLV.  The address family chosen\n
          \  SHOULD match that of the RESV message and that used in the RRO; the\n
          \  unnumbered interface sub-TLV is used when the egress interface has no\n
          \  assigned IP address.  A node MUST NOT place more sub-TLVs in the\n   RTM_SET
          TLV than the number of RTM-capable egress interfaces the LSP\n   traverses
          that are under that node's control.  Only a single RTM_SET\n   sub-TLV with
          the given Value field MUST be present in the RTM_SET\n   TLV.  If more than
          one sub-TLV with the same value (e.g., a\n   duplicated address) is found,
          the LSP setup MUST fail with the\n   generation of a ResvErr message with
          the Error Code \"Duplicate\n   sub-TLV\" (Section 7.9) and the Error Value
          containing a 16-bit value\n   composed of (Type of TLV, Type of sub-TLV).\n
          \  Three kinds of sub-TLVs for RTM_SET are currently defined.\n"
        - contents:
          - "4.4.1.1.1.  IPv4 Sub-TLV\n     0                   1                   2
            \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
            2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |    Type     |     Length    |            Reserved             |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |                       IPv4 address                            |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \                      Figure 8: IPv4 Sub-TLV Format\n   Type\n      0x01
            IPv4 address.\n   Length\n      The Length contains the total length of
            the sub-TLV in bytes,\n      including the Type and Length fields.  The
            Length is always 8.\n   IPv4 address\n      A 32-bit unicast host address.\n
            \  Reserved\n      Zeroed on initiation and ignored on receipt.\n"
          title: 4.4.1.1.1.  IPv4 Sub-TLV
        - contents:
          - "4.4.1.1.2.  IPv6 Sub-TLV\n     0                   1                   2
            \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
            2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |    Type     |     Length    |            Reserved             |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |                                                               |\n
            \   |                         IPv6 address                          |\n
            \   |                                                               |\n
            \   |                                                               |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \                      Figure 9: IPv6 Sub-TLV Format\n   Type\n      0x02
            IPv6 address.\n   Length\n      The Length contains the total length of
            the sub-TLV in bytes,\n      including the Type and Length fields.  The
            Length is always 20.\n   IPv6 address\n      A 128-bit unicast host address.\n
            \  Reserved\n      Zeroed on initiation and ignored on receipt.\n"
          title: 4.4.1.1.2.  IPv6 Sub-TLV
        - contents:
          - "4.4.1.1.3.  Unnumbered Interface Sub-TLV\n     0                   1
            \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1
            2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |    Type     |     Length    |            Reserved             |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |                          Node ID                              |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \   |                       Interface ID                            |\n
            \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
            \                     Figure 10: IPv4 Sub-TLV Format\n   Type\n      0x03
            Unnumbered interface.\n   Length\n      The Length contains the total
            length of the sub-TLV in bytes,\n      including the Type and Length fields.
            \ The Length is always 12.\n   Node ID\n      The Node ID interpreted
            as the Router ID as discussed in Section 2\n      of [RFC3477].\n   Interface
            ID\n      The identifier assigned to the link by the node specified by
            the\n      Node ID.\n   Reserved\n      Zeroed on initiation and ignored
            on receipt.\n"
          title: 4.4.1.1.3.  Unnumbered Interface Sub-TLV
        title: 4.4.1.1.  RTM_SET Sub-TLVs
      title: 4.4.1.  RTM_SET TLV
    title: 4.4.  RSVP-TE Control-Plane Operation to Support RTM
  title: 4.  Control-Plane Theory of Operation
- contents:
  - "5.  Data-Plane Theory of Operation\n   After instantiating an LSP for a path
    using RSVP-TE [RFC3209] as\n   described in Section 4.4, the ingress node MAY
    begin sending RTM\n   packets to the first downstream RTM-capable node on that
    path.  Each\n   RTM packet has its Scratch Pad field initialized and its TTL set
    to\n   expire on the next downstream RTM-capable node.  Each RTM-capable\n   node
    on the explicit path receives an RTM packet and records the time\n   at which
    it receives that packet at its ingress interface as well as\n   the time at which
    it transmits that packet from its egress interface.\n   These actions should be
    done as close to the physical layer as\n   possible at the same point of packet
    processing, striving to avoid\n   introducing the appearance of jitter in propagation
    delay whereas it\n   should be accounted as residence time.  The RTM-capable node\n
    \  determines the difference between those two times; for one-step\n   operation,
    this difference is determined just prior to or while\n   sending the packet, and
    the RTM-capable egress interface adds it to\n   the value in the Scratch Pad field
    of the message in progress.  Note,\n   for the purpose of calculating a residence
    time, a common free\n   running clock synchronizing all the involved interfaces
    may be\n   sufficient, as, for example, 4.6 ppm accuracy leads to a 4.6\n   nanosecond
    error for residence time on the order of 1 millisecond.\n   This may be acceptable
    for applications where the target accuracy is\n   in the order of hundreds of
    nanoseconds.  As an example, several\n   applications being considered in the
    area of wireless applications\n   are satisfied with an accuracy of 1.5 microseconds
    [ITU-T.G.8271].\n   For two-step operation, the difference between packet arrival
    time\n   (at an ingress interface) and subsequent departure time (from an\n   egress
    interface) is determined at some later time prior to sending a\n   subsequent
    follow-up message, so that this value can be used to\n   update the correctionField
    in the follow-up message.\n   See Section 2.1 for further details on the difference
    between one-\n   step and two-step operation.\n   The last RTM-capable node on
    the LSP MAY then use the value in the\n   Scratch Pad field to perform time correction,
    if there is no\n   follow-up message.  For example, the egress node may be a PTP\n
    \  boundary clock synchronized to a Master Clock and will use the value\n   in
    the Scratch Pad field to update PTP's correctionField.\n"
  title: 5.  Data-Plane Theory of Operation
- contents:
  - "6.  Applicable PTP Scenarios\n   This approach can be directly integrated in
    a PTP network based on\n   the IEEE 1588 delay request-response mechanism.  The
    RTM-capable\n   nodes act as end-to-end transparent clocks, and boundary clocks,
    at\n   the edges of the MPLS network, typically use the value in the Scratch\n
    \  Pad field to update the correctionField of the corresponding PTP\n   event
    packet prior to performing the usual PTP processing.\n"
  title: 6.  Applicable PTP Scenarios
- contents:
  - '7.  IANA Considerations

    '
  - contents:
    - "7.1.  New RTM G-ACh\n   IANA has assigned a new G-ACh as follows:\n          +--------+----------------------------+---------------+\n
      \         | Value  |        Description         | Reference     |\n          +--------+----------------------------+---------------+\n
      \         | 0x000F | Residence Time Measurement | This document |\n          +--------+----------------------------+---------------+\n
      \                 Table 1: New Residence Time Measurement\n"
    title: 7.1.  New RTM G-ACh
  - contents:
    - "7.2.  New MPLS RTM TLV Registry\n   IANA has created a sub-registry in the
      \"Generic Associated Channel\n   (G-ACh) Parameters\" registry called the \"MPLS
      RTM TLV Registry\".  All\n   codepoints in the range 0 through 127 in this registry
      shall be\n   allocated according to the \"IETF Review\" procedure as specified
      in\n   [RFC5226].  Codepoints in the range 128 through 191 in this registry\n
      \  shall be allocated according to the \"First Come First Served\"\n   procedure
      as specified in [RFC5226].  This document defines the\n   following new RTM
      TLV types:\n        +---------+-------------------------------+---------------+\n
      \       | Value   |          Description          | Reference     |\n        +---------+-------------------------------+---------------+\n
      \       | 0       |            Reserved           | This document |\n        |
      1       |           No payload          | This document |\n        | 2       |
      PTPv2, Ethernet encapsulation | This document |\n        | 3       |   PTPv2,
      IPv4 encapsulation   | This document |\n        | 4       |   PTPv2, IPv6 encapsulation
      \  | This document |\n        | 5       |              NTP              | This
      document |\n        | 6-191   |           Unassigned          |               |\n
      \       | 192-254 |    Reserved for Private Use   | This document |\n        |
      255     |            Reserved           | This document |\n        +---------+-------------------------------+---------------+\n
      \                         Table 2: RTM TLV Types\n"
    title: 7.2.  New MPLS RTM TLV Registry
  - contents:
    - "7.3.  New MPLS RTM Sub-TLV Registry\n   IANA has created a sub-registry in
      the \"MPLS RTM TLV Registry\" (see\n   Section 7.2) called the \"MPLS RTM Sub-TLV
      Registry\".  All codepoints\n   in the range 0 through 127 in this registry
      shall be allocated\n   according to the \"IETF Review\" procedure as specified
      in [RFC5226].\n   Codepoints in the range 128 through 191 in this registry shall
      be\n   allocated according to the \"First Come First Served\" procedure as\n
      \  specified in [RFC5226].  This document defines the following new RTM\n   sub-TLV
      types:\n          +---------+--------------------------+---------------+\n          |
      Value   |       Description        | Reference     |\n          +---------+--------------------------+---------------+\n
      \         | 0       |         Reserved         | This document |\n          |
      1       |           PTP            | This document |\n          | 2-191   |
      \       Unassigned        |               |\n          | 192-254 | Reserved
      for Private Use | This document |\n          | 255     |         Reserved         |
      This document |\n          +---------+--------------------------+---------------+\n
      \                        Table 3: RTM Sub-TLV Type\n"
    title: 7.3.  New MPLS RTM Sub-TLV Registry
  - contents:
    - "7.4.  RTM Capability Sub-TLV in OSPFv2\n   IANA has assigned a new type for
      the RTM Capability sub-TLV in the\n   \"OSPFv2 Extended Link TLV Sub-TLVs\"
      registry as follows:\n                +-------+----------------+---------------+\n
      \               | Value |  Description   | Reference     |\n                +-------+----------------+---------------+\n
      \               | 5     | RTM Capability | This document |\n                +-------+----------------+---------------+\n
      \                     Table 4: RTM Capability Sub-TLV\n"
    title: 7.4.  RTM Capability Sub-TLV in OSPFv2
  - contents:
    - "7.5.  RTM Capability Sub-TLV in IS-IS\n   IANA has assigned a new type for
      the RTM Capability sub-TLV from the\n   \"Sub-TLVs for TLVs 22, 23, 141, 222,
      and 223\" registry as follows:\n   +------+----------------+----+----+-----+-----+-----+---------------+\n
      \  | Type |  Description   | 22 | 23 | 141 | 222 | 223 | Reference     |\n   +------+----------------+----+----+-----+-----+-----+---------------+\n
      \  | 40   | RTM Capability | y  | y  | n   | y   | y   | This document |\n   +------+----------------+----+----+-----+-----+-----+---------------+\n
      \       Table 5: IS-IS RTM Capability Sub-TLV Registry Description\n"
    title: 7.5.  RTM Capability Sub-TLV in IS-IS
  - contents:
    - "7.6.  RTM Capability TLV in BGP-LS\n   IANA has assigned a new codepoint for
      the RTM Capability TLV from the\n   \"BGP-LS Node Descriptor, Link Descriptor,
      Prefix Descriptor, and\n   Attribute TLVs\" sub-registry in the \"Border Gateway
      Protocol - Link\n   State (BGP-LS) Parameters\" registry as follows:\n   +---------------+----------------+------------------+---------------+\n
      \  | TLV Code      |  Description   |  IS-IS TLV/Sub-  | Reference     |\n   |
      Point         |                |       TLV        |               |\n   +---------------+----------------+------------------+---------------+\n
      \  | 1105          | RTM Capability |      22/40       | This document |\n   +---------------+----------------+------------------+---------------+\n
      \                  Table 6: RTM Capability TLV in BGP-LS\n"
    title: 7.6.  RTM Capability TLV in BGP-LS
  - contents:
    - "7.7.  RTM_SET Sub-object RSVP Type and Sub-TLVs\n   IANA has assigned a new
      type for the RTM_SET sub-object from the\n   RSVP-TE \"Attributes TLV Space\"
      sub-registry as follows:\n"
    - '+------+------------+-----------+---------------+-----------+----------+

      '
    - '| Type |    Name    |  Allowed  | Allowed on    | Allowed   | Reference|

      '
    - '|      |            | on LSP_   | LSP_REQUIRED_ | on LSP    |          |

      '
    - '|      |            | ATTRIBUTES|   ATTRIBUTES  | Hop       |          |

      '
    - '|      |            |           |               | Attributes|          |

      '
    - '+------+------------+-----------+---------------+-----------+----------+

      '
    - '| 5    |  RTM_SET   |    Yes    |       No      |    No     | This     |

      '
    - '|      | sub-object |           |               |           | document |

      '
    - "+------+------------+-----------+---------------+-----------+----------+\n
      \                    Table 7: RTM_SET Sub-object Type\n   IANA has created a
      new sub-registry for sub-TLV types of the RTM_SET\n   sub-object called the
      \"RTM_SET Object Sub-Object Types\" registry.\n   All codepoints in the range
      0 through 127 in this registry shall be\n   allocated according to the \"IETF
      Review\" procedure as specified in\n   [RFC5226].  Codepoints in the range 128
      through 191 in this registry\n   shall be allocated according to the \"First
      Come First Served\"\n   procedure as specified in [RFC5226].  This document
      defines the\n   following new values of RTM_SET object sub-object types:\n          +---------+--------------------------+---------------+\n
      \         | Value   |       Description        | Reference     |\n          +---------+--------------------------+---------------+\n
      \         | 0       |         Reserved         | This document |\n          |
      1       |       IPv4 address       | This document |\n          | 2       |
      \      IPv6 address       | This document |\n          | 3       |   Unnumbered
      interface   | This document |\n          | 4-191   |        Unassigned        |
      \              |\n          | 192-254 | Reserved for Private Use | This document
      |\n          | 255     |         Reserved         | This document |\n          +---------+--------------------------+---------------+\n
      \                Table 8: RTM_SET Object Sub-object Types\n"
    title: 7.7.  RTM_SET Sub-object RSVP Type and Sub-TLVs
  - contents:
    - "7.8.  RTM_SET Attribute Flag\n   IANA has assigned a new flag in the RSVP-TE
      \"Attribute Flags\"\n   registry.\n   +-----+---------+-----------+-----------+-----+-----+---------------+\n
      \  | Bit | Name    | Attribute | Attribute | RRO | ERO | Reference     |\n   |
      No  |         | Flags     | Flags     |     |     |               |\n   |     |
      \        | Path      | Resv      |     |     |               |\n   +-----+---------+-----------+-----------+-----+-----+---------------+\n
      \  | 15  | RTM_SET | Yes       | Yes       | No  | No  | This document |\n   +-----+---------+-----------+-----------+-----+-----+---------------+\n
      \                     Table 9: RTM_SET Attribute Flag\n"
    title: 7.8.  RTM_SET Attribute Flag
  - contents:
    - "7.9.  New Error Codes\n   IANA has assigned the following new error codes in
      the RSVP \"Error\n   Codes and Globally-Defined Error Value Sub-Codes\" registry.\n
      \           +------------+--------------------+---------------+\n            |
      Error Code | Meaning            | Reference     |\n            +------------+--------------------+---------------+\n
      \           | 41         | Duplicate TLV      | This document |\n            |
      42         | Duplicate sub-TLV  | This document |\n            | 43         |
      RTM_SET TLV Absent | This document |\n            +------------+--------------------+---------------+\n
      \                        Table 10: New Error Codes\n"
    title: 7.9.  New Error Codes
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   Routers that support RTM are subject to the same
    security\n   considerations as defined in [RFC4385] and [RFC5085].\n   In addition
    -- particularly as applied to use related to PTP -- there\n   is a presumed trust
    model that depends on the existence of a trusted\n   relationship of at least
    all PTP-aware nodes on the path traversed by\n   PTP messages.  This is necessary
    as these nodes are expected to\n   correctly modify specific content of the data
    in PTP messages, and\n   proper operation of the protocol depends on this ability.
    \ In\n   practice, this means that those portions of messages cannot be\n   covered
    by either confidentiality or integrity protection.  Though\n   there are methods
    that make it possible in theory to provide either\n   or both such protections
    and still allow for intermediate nodes to\n   make detectable but authenticated
    modifications, such methods do not\n   seem practical at present, particularly
    for timing protocols that are\n   sensitive to latency and/or jitter.\n   The
    ability to potentially authenticate and/or encrypt RTM and PTP\n   data for scenarios
    both with and without participation of\n   intermediate RTM-/PTP-capable nodes
    is left for further study.\n   While it is possible for a supposed compromised
    node to intercept and\n   modify the G-ACh content, this is an issue that exists
    for nodes in\n   general -- for any and all data that may be carried over an LSP
    --\n   and is therefore the basis for an additional presumed trust model\n   associated
    with existing LSPs and nodes.\n   Security requirements of time protocols are
    provided in RFC 7384\n   [RFC7384].\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [IEEE.1588]\n              IEEE, \"IEEE Standard
      for a Precision Clock Synchronization\n              Protocol for Networked
      Measurement and Control Systems\",\n              IEEE Std 1588-2008, DOI 10.1109/IEEESTD.2008.4579760.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3209]  Awduche,
      D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow,
      \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, DOI
      10.17487/RFC3209, December 2001,\n              <http://www.rfc-editor.org/info/rfc3209>.\n
      \  [RFC3477]  Kompella, K. and Y. Rekhter, \"Signalling Unnumbered Links\n              in
      Resource ReSerVation Protocol - Traffic Engineering\n              (RSVP-TE)\",
      RFC 3477, DOI 10.17487/RFC3477, January 2003,\n              <http://www.rfc-editor.org/info/rfc3477>.\n
      \  [RFC4385]  Bryant, S., Swallow, G., Martini, L., and D. McPherson,\n              \"Pseudowire
      Emulation Edge-to-Edge (PWE3) Control Word for\n              Use over an MPLS
      PSN\", RFC 4385, DOI 10.17487/RFC4385,\n              February 2006, <http://www.rfc-editor.org/info/rfc4385>.\n
      \  [RFC5085]  Nadeau, T., Ed. and C. Pignataro, Ed., \"Pseudowire Virtual\n
      \             Circuit Connectivity Verification (VCCV): A Control\n              Channel
      for Pseudowires\", RFC 5085, DOI 10.17487/RFC5085,\n              December 2007,
      <http://www.rfc-editor.org/info/rfc5085>.\n   [RFC5420]  Farrel, A., Ed., Papadimitriou,
      D., Vasseur, JP., and A.\n              Ayyangarps, \"Encoding of Attributes
      for MPLS LSP\n              Establishment Using Resource Reservation Protocol
      Traffic\n              Engineering (RSVP-TE)\", RFC 5420, DOI 10.17487/RFC5420,\n
      \             February 2009, <http://www.rfc-editor.org/info/rfc5420>.\n   [RFC5586]
      \ Bocci, M., Ed., Vigoureux, M., Ed., and S. Bryant, Ed.,\n              \"MPLS
      Generic Associated Channel\", RFC 5586,\n              DOI 10.17487/RFC5586,
      June 2009,\n              <http://www.rfc-editor.org/info/rfc5586>.\n   [RFC5905]
      \ Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch,\n              \"Network
      Time Protocol Version 4: Protocol and Algorithms\n              Specification\",
      RFC 5905, DOI 10.17487/RFC5905, June 2010,\n              <http://www.rfc-editor.org/info/rfc5905>.\n
      \  [RFC6423]  Li, H., Martini, L., He, J., and F. Huang, \"Using the\n              Generic
      Associated Channel Label for Pseudowire in the\n              MPLS Transport
      Profile (MPLS-TP)\", RFC 6423,\n              DOI 10.17487/RFC6423, November
      2011,\n              <http://www.rfc-editor.org/info/rfc6423>.\n   [RFC7684]
      \ Psenak, P., Gredler, H., Shakir, R., Henderickx, W.,\n              Tantsura,
      J., and A. Lindem, \"OSPFv2 Prefix/Link Attribute\n              Advertisement\",
      RFC 7684, DOI 10.17487/RFC7684, November\n              2015, <http://www.rfc-editor.org/info/rfc7684>.\n
      \  [RFC7752]  Gredler, H., Ed., Medved, J., Previdi, S., Farrel, A., and\n              S.
      Ray, \"North-Bound Distribution of Link-State and\n              Traffic Engineering
      (TE) Information Using BGP\", RFC 7752,\n              DOI 10.17487/RFC7752,
      March 2016,\n              <http://www.rfc-editor.org/info/rfc7752>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <http://www.rfc-editor.org/info/rfc8174>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [ITU-T.G.8271]\n              ITU-T, \"Time
      and phase synchronization aspects of packet\n              networks\", ITU-T
      Recomendation G.8271/Y.1366, July 2016.\n   [OSPFV3-EXTENDED-LSA]\n              Lindem,
      A., Roy, A., Goethals, D., Vallem, V., and F.\n              Baker, \"OSPFv3
      LSA Extendibility\", Work in Progress,\n              draft-ietf-ospf-ospfv3-lsa-extend-14,
      April 2017.\n   [RFC4202]  Kompella, K., Ed. and Y. Rekhter, Ed., \"Routing
      Extensions\n              in Support of Generalized Multi-Protocol Label Switching\n
      \             (GMPLS)\", RFC 4202, DOI 10.17487/RFC4202, October 2005,\n              <http://www.rfc-editor.org/info/rfc4202>.\n
      \  [RFC5036]  Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n              \"LDP
      Specification\", RFC 5036, DOI 10.17487/RFC5036,\n              October 2007,
      <http://www.rfc-editor.org/info/rfc5036>.\n   [RFC5226]  Narten, T. and H. Alvestrand,
      \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\",
      BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226, May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n
      \  [RFC6374]  Frost, D. and S. Bryant, \"Packet Loss and Delay\n              Measurement
      for MPLS Networks\", RFC 6374,\n              DOI 10.17487/RFC6374, September
      2011,\n              <http://www.rfc-editor.org/info/rfc6374>.\n   [RFC7384]
      \ Mizrahi, T., \"Security Requirements of Time Protocols in\n              Packet
      Switched Networks\", RFC 7384, DOI 10.17487/RFC7384,\n              October
      2014, <http://www.rfc-editor.org/info/rfc7384>.\n   [TIMING-OVER-MPLS]\n              Davari,
      S., Oren, A., Bhatia, M., Roberts, P., and L.\n              Montini, \"Transporting
      Timing messages over MPLS\n              Networks\", Work in Progress, draft-ietf-tictoc-\n
      \             1588overmpls-07, October 2015.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgments\n   The authors want to thank Loa Andersson, Lou Berger, Acee
    Lindem, Les\n   Ginsberg, and Uma Chunduri for their thorough reviews, thoughtful\n
    \  comments, and, most of all, patience.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Greg Mirsky\n   ZTE Corp.\n   Email: gregimirsky@gmail.com\n
    \  Stefano Ruffini\n   Ericsson\n   Email: stefano.ruffini@ericsson.com\n   Eric
    Gray\n   Ericsson\n   Email: eric.gray@ericsson.com\n   John Drake\n   Juniper
    Networks\n   Email: jdrake@juniper.net\n   Stewart Bryant\n   Huawei\n   Email:
    stewart.bryant@gmail.com\n   Alexander Vainshtein\n   ECI Telecom\n   Email: Alexander.Vainshtein@ecitele.com\n
    \         Vainshtein.alex@gmail.com\n"
  title: Authors' Addresses
