- title: __initial_text__
  contents:
  - "             View-based Access Control Model (VACM) for the\n               Simple\
    \ Network Management Protocol (SNMP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: IANA Note
  contents:
  - "IANA Note\n   Due to a clerical error in the assignment of the snmpModules in\
    \ this\n   memo, this RFC provides the corrected number assignment for this\n\
    \   protocol.  This memo obsoletes RFC 2265.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the View-based Access Control Model for\
    \ use\n   in the SNMP architecture [RFC2271].  It defines the Elements of\n  \
    \ Procedure for controlling access to management information.  This\n   document\
    \ also includes a MIB for remotely managing the configuration\n   parameters for\
    \ the View-based Access Control Model.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction                                      \
    \       2\n   1.2.  Access Control                                         3\n\
    \   1.3.  Local Configuration Datastore                          3\n   2.  Elements\
    \ of the Model                                    3\n   2.1.  Groups         \
    \                                        3\n   2.2.  securityLevel           \
    \                               4\n   2.3.  Contexts                         \
    \                      4\n   2.4.  MIB Views and View Families               \
    \             4\n   2.4.1.  View Subtree                                     \
    \    5\n   2.4.2.  ViewTreeFamily                                       5\n  \
    \ 2.5.  Access Policy                                          6\n   3.  Elements\
    \ of Procedure                                    6\n   3.1.  Overview  of isAccessAllowed\
    \ Process                   8\n   3.2.  Processing the isAccessAllowed Service\
    \ Request         9\n   4.  Definitions                                      \
    \       10\n   5.  Intellectual Property                                   26\n\
    \   6.  Acknowledgements                                        27\n   7.  Security\
    \ Considerations                                 28\n   7.1.  Recommended Practices\
    \                                 28\n   7.2.  Defining Groups               \
    \                        29\n   7.3.  Conformance                            \
    \               29\n   8.  References                                        \
    \      29\n   9.  Editors' Addresses                                      30\n\
    \   A.1.  Installation Parameters                               31\n   B.  Full\
    \ Copyright Statement                                36\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Architecture for describing Internet Management Frameworks\n\
    \   [RFC2271] describes that an SNMP engine is composed of:\n     1) a Dispatcher\n\
    \     2) a Message Processing Subsystem,\n     3) a Security Subsystem, and\n\
    \     4) an Access Control Subsystem.\n   Applications make use of the services\
    \ of these subsystems.\n   It is important to understand the SNMP architecture\
    \ and its\n   terminology to understand where the View-based Access Control Model\n\
    \   described in this document fits into the architecture and interacts\n   with\
    \ other subsystems within the architecture.  The reader is\n   expected to have\
    \ read and understood the description and terminology\n   of the SNMP architecture,\
    \ as defined in [RFC2271].\n   The Access Control Subsystem of an SNMP engine\
    \ has the responsibility\n   for checking whether a specific type of access (read,\
    \ write, notify)\n   to a particular object (instance) is allowed.\n   It is the\
    \ purpose of this document to define a specific model of the\n   Access Control\
    \ Subsystem, designated the View-based Access Control\n   Model. Note that this\
    \ is not necessarily the only Access Control\n   Model.\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this\n   document are\
    \ to be interpreted as described in [RFC2119].\n"
- title: 1.2.  Access Control
  contents:
  - "1.2.  Access Control\n   Access Control occurs (either implicitly or explicitly)\
    \ in an SNMP\n   entity when processing SNMP retrieval or modification request\n\
    \   messages from an SNMP entity.  For example a Command Responder\n   application\
    \ applies Access Control when processing requests that it\n   received from a\
    \ Command Generator application.  These requests\n   include these types of operations:\
    \ GetRequest, GetNextRequest,\n   GetBulkRequest, and SetRequest operations.\n\
    \   Access Control also occurs in an SNMP entity when an SNMP\n   notification\
    \ message is generated (by a Notification Originator\n   application).  These\
    \ notification messages include these types of\n   operations: InformRequest and\
    \ SNMPv2-Trap operations.\n   The View-based Access Control Model defines a set\
    \ of services that an\n   application (such as a Command Responder or a Notification\
    \ Originator\n   application) can use for checking access rights.  It is the\n\
    \   responsibility of the application to make the proper service calls\n   for\
    \ access checking.\n"
- title: 1.3.  Local Configuration Datastore
  contents:
  - "1.3.  Local Configuration Datastore\n   To implement the model described in this\
    \ document, an SNMP entity\n   needs to retain information about access rights\
    \ and policies.  This\n   information is part of the SNMP engine's Local Configuration\n\
    \   Datastore (LCD). See [RFC2271] for the definition of LCD.\n   In order to\
    \ allow an SNMP entity's LCD to be remotely configured,\n   portions of the LCD\
    \ need to be accessible as managed objects.  A MIB\n   module, the View-based\
    \ Access Control Model Configuration MIB, which\n   defines these managed object\
    \ types is included in this document.\n"
- title: 2.  Elements of the Model
  contents:
  - "2.  Elements of the Model\n   This section contains definitions to realize the\
    \ access control\n   service provided by the View-based Access Control Model.\n"
- title: 2.1.  Groups
  contents:
  - "2.1.  Groups\n   A group is a set of zero or more <securityModel, securityName>\
    \ tuples\n   on whose behalf SNMP management objects can be accessed.  A group\n\
    \   defines the access rights afforded to all securityNames which belong\n   to\
    \ that group. The combination of a securityModel and a securityName\n   maps to\
    \ at most one group.  A group is identified by a groupName.\n   The Access Control\
    \ module assumes that the securityName has already\n   been authenticated as needed\
    \ and provides no further authentication\n   of its own.\n   The View-based Access\
    \ Control Model uses the securityModel and the\n   securityName as inputs to the\
    \ Access Control module when called to\n   check for access rights.  It determines\
    \ the groupName as a function\n   of securityModel and securityName.\n"
- title: 2.2.  securityLevel
  contents:
  - "2.2.  securityLevel\n   Different access rights for members of a group can be\
    \ defined for\n   different levels of security, i.e., noAuthNoPriv, authNoPriv,\
    \ and\n   authPriv. The securityLevel identifies the level of security that\n\
    \   will be assumed when checking for access rights.  See the SNMP\n   Architecture\
    \ document [RFC2271] for a definition of securityLevel.\n   The View-based Access\
    \ Control Model requires that the securityLevel\n   is passed as input to the\
    \ Access Control module when called to check\n   for access rights.\n"
- title: 2.3.  Contexts
  contents:
  - "2.3.  Contexts\n   An SNMP context is a collection of management information\
    \ accessible\n   by an SNMP entity.  An item of management information may exist\
    \ in\n   more than one context.  An SNMP entity potentially has access to many\n\
    \   contexts.  Details about the naming of management information can be\n   found\
    \ in the SNMP Architecture document [RFC2271].\n   The View-based Access Control\
    \ Model defines a vacmContextTable that\n   lists the locally available contexts\
    \ by contextName.\n"
- title: 2.4.  MIB Views and View Families
  contents:
  - "2.4.  MIB Views and View Families\n   For security reasons, it is often valuable\
    \ to be able to restrict the\n   access rights of some groups to only a subset\
    \ of the management\n   information in the management domain.  To provide this\
    \ capability,\n   access to a context is via a \"MIB view\" which details a specific\
    \ set\n   of managed object types (and optionally, the specific instances of\n\
    \   object types) within that context.  For example, for a given context,\n  \
    \ there will typically always be one MIB view which provides access to\n   all\
    \ management information in that context, and often there will be\n   other MIB\
    \ views each of which contains some subset of the\n   information.  So, the access\
    \ allowed for a group can be restricted in\n   the desired manner by specifying\
    \ its rights in terms of the\n   particular (subset) MIB view it can access within\
    \ each appropriate\n   context.\n   Since managed object types (and their instances)\
    \ are identified via\n   the tree-like naming structure of ISO's OBJECT IDENTIFIERs\
    \ [ISO-\n   ASN.1, RFC1902],  it is convenient to define a MIB view as the\n \
    \  combination of a set of \"view subtrees\", where each view subtree is a\n \
    \  subtree within the managed object naming tree.  Thus, a simple MIB\n   view\
    \ (e.g., all managed objects within the Internet Network\n   Management Framework)\
    \ can be defined as a single view subtree, while\n   more complicated MIB views\
    \ (e.g., all information relevant to a\n   particular network interface) can be\
    \ represented by the union of\n   multiple view subtrees.\n   While any set of\
    \ managed objects can be described by the union of\n   some number of view subtrees,\
    \ situations can arise that would require\n   a very large number of view subtrees.\
    \  This could happen, for\n   example, when specifying all columns in one conceptual\
    \ row of a MIB\n   table because they would appear in separate subtrees, one per\
    \ column,\n   each with a very similar format.  Because the formats are similar,\n\
    \   the required set of subtrees can easily be aggregated into one\n   structure.\
    \  This structure is named a family of view subtrees after\n   the set of subtrees\
    \ that it conceptually represents.  A family of\n   view subtrees can either be\
    \ included or excluded from a MIB view.\n"
- title: 2.4.1.  View Subtree
  contents:
  - "2.4.1.  View Subtree\n   A view subtree is the set of all MIB object instances\
    \ which have a\n   common ASN.1 OBJECT IDENTIFIER prefix to their names.  A view\
    \ subtree\n   is identified by the OBJECT IDENTIFIER value which is the longest\n\
    \   OBJECT IDENTIFIER prefix common to all (potential) MIB object\n   instances\
    \ in that subtree.\n"
- title: 2.4.2.  ViewTreeFamily
  contents:
  - "2.4.2.  ViewTreeFamily\n   A family of view subtrees is a pairing of an OBJECT\
    \ IDENTIFIER value\n   (called the family name) together with a bit string value\
    \ (called the\n   family mask).  The family mask indicates which sub-identifiers\
    \ of the\n   associated family name are significant to the family's definition.\n\
    \   For each possible managed object instance, that instance belongs to a\n  \
    \ particular ViewTreeFamily if both of the following conditions are\n   true:\n\
    \   - the OBJECT IDENTIFIER name of the managed object instance\n     contains\
    \ at least as many sub-identifiers as does the family name,\n     and\n   - each\
    \ sub-identifier in the OBJECT IDENTIFIER name of the managed\n     object instance\
    \ matches the corresponding sub-identifier of the\n     family name whenever the\
    \ corresponding bit of the associated family\n     mask is non-zero.\n   When\
    \ the configured value of the family mask is all ones, the view\n   subtree family\
    \ is identical to the single view subtree identified by\n   the family name.\n\
    \   When the configured value of the family mask is shorter than required\n  \
    \ to perform the above test, its value is implicitly extended with\n   ones. \
    \ Consequently, a view subtree family having a family mask of\n   zero length\
    \ always corresponds to a single view subtree.\n"
- title: 2.5.  Access Policy
  contents:
  - "2.5.  Access Policy\n   The View-based Access Control Model determines the access\
    \ rights of a\n   group, representing zero or more securityNames which have the\
    \ same\n   access rights.  For a particular context, identified by contextName,\n\
    \   to which a group, identified by groupName, has access using a\n   particular\
    \ securityModel and securityLevel, that group's access\n   rights are given by\
    \ a read-view, a write-view and a notify-view.\n   The read-view represents the\
    \ set of object instances authorized for\n   the group when reading objects. \
    \ Reading objects occurs when\n   processing a retrieval (for example a GetRequest,\
    \ GetNextRequest,\n   GetBulkRequest) operation.\n   The write-view represents\
    \ the set of object instances authorized for\n   the group when writing objects.\
    \  Writing objects occurs when\n   processing a write (for example a Set) operation.\n\
    \   The notify-view represents the set of object instances authorized for\n  \
    \ the group when sending objects in a notification, such as when\n   sending a\
    \ notification (for example an Inform or SNMPv2-Trap).\n"
- title: 3.  Elements of Procedure
  contents:
  - "3.  Elements of Procedure\n   This section describes the procedures followed\
    \ by an Access Control\n   module that implements the View-based Access Control\
    \ Model when\n   checking access rights as requested by an application (for example\
    \ a\n   Command Responder or a Notification Originator application).  The\n  \
    \ abstract service primitive is:\n     statusInformation =          -- success\
    \ or errorIndication\n         isAccessAllowed(\n             securityModel  \
    \      -- Security Model in use\n             securityName         -- principal\
    \ who wants access\n             securityLevel        -- Level of Security\n \
    \            viewType             -- read, write, or notify view\n           \
    \  contextName          -- context containing variableName\n             variableName\
    \         -- OID for the managed object\n             )\n   The abstract data\
    \ elements are:\n     statusInformation - one of the following:\n        accessAllowed\
    \  - a MIB view was found and access is granted.\n        notInView      - a MIB\
    \ view was found but access is denied.\n                         The variableName\
    \ is not in the configured\n                         MIB view for the specified\
    \ viewType (e.g., in\n                         the relevant entry in the vacmAccessTable).\n\
    \        noSuchView     - no MIB view found because no view has been\n       \
    \                  configured for specified viewType (e.g., in\n             \
    \            the relevant entry in the vacmAccessTable).\n        noSuchContext\
    \  - no MIB view found because of no entry in the\n                         vacmContextTable\
    \ for specified contextName.\n        noGroupName    - no MIB view found because\
    \ no entry has been\n                         configured in the vacmSecurityToGroupTable\n\
    \                         for the specified combination of\n                 \
    \        securityModel and securityName.\n        noAccessEntry  - no MIB view\
    \ found because no entry has been\n                         configured in the\
    \ vacmAccessTable for the\n                         specified combination of contextName,\n\
    \                         groupName (from vacmSecurityToGroupTable),\n       \
    \                  securityModel and securityLevel.\n        otherError     -\
    \ failure, an undefined error occurred.\n     securityModel - Security Model under\
    \ which access is requested.\n     securityName  - the principal on whose behalf\
    \ access is requested.\n     securityLevel - Level of Security under which access\
    \ is requested.\n     viewType      - view to be checked (read, write or notify).\n\
    \     contextName   - context in which access is requested.\n     variableName\
    \  - object instance to which access is requested.\n"
- title: 3.1.  Overview  of isAccessAllowed Process
  contents:
  - "3.1.  Overview  of isAccessAllowed Process\n The following picture shows how\
    \ the decision for access control is made\n by the View-based Access Control Model.\n\
    \ +--------------------------------------------------------------------+\n | \
    \                                                                   |\n |    \
    \  +-> securityModel -+                                          |\n |      |\
    \   (a)            |                                          |\n | who -+   \
    \               +-> groupName ----+                        |\n | (1)  |      \
    \            |   (x)           |                        |\n |      +-> securityName\
    \ --+                 |                        |\n |          (b)            \
    \                  |                        |\n |                            \
    \               |                        |\n | where -> contextName ---------------------+\
    \                        |\n | (2)      (e)                              |   \
    \                     |\n |                                           |      \
    \                  |\n |                                           |         \
    \               |\n |      +-> securityModel -------------------+            \
    \            |\n |      |   (a)                              |               \
    \         |\n | how -+                                    +-> viewName -+    \
    \      |\n | (3)  |                                    |   (y)       |       \
    \   |\n |      +-> securityLevel -------------------+             |          |\n\
    \ |          (c)                              |             +-> yes/no |\n | \
    \                                          |             | decision |\n | why\
    \ ---> viewType (read/write/notify) ----+             | (z)      |\n | (4)   \
    \   (d)                                            |          |\n |          \
    \                                               |          |\n | what --> object-type\
    \ ------+                            |          |\n | (5)      (m)           \
    \    |                            |          |\n |                           \
    \ +-> variableName (OID) ------+          |\n |                            | \
    \  (f)                                 |\n | which -> object-instance --+    \
    \                                   |\n | (6)      (n)                       \
    \                                |\n |                                       \
    \                             |\n +--------------------------------------------------------------------+\n\
    \ How the decision for isAccessAllowed is made.\n 1) Inputs to the isAccessAllowed\
    \ service are:\n    (a)       securityModel    -- Security Model in use\n    (b)\
    \       securityName     -- principal who wants to access\n    (c)       securityLevel\
    \    -- Level of Security\n    (d)       viewType         -- read, write, or notify\
    \ view\n    (e)       contextName      -- context containing variableName\n  \
    \  (f)       variableName     -- OID for the managed object\n                \
    \               -- this is made up of:\n                                  - object-type\
    \ (m)\n                                  - object-instance (n)\n 2) The partial\
    \ \"who\" (1), represented by the securityModel (a) and\n    the securityName\
    \ (b), are used as the indices (a,b) into the\n    vacmSecurityToGroupTable to\
    \ find a single entry that produces a\n    group, represented by groupName (x).\n\
    \ 3) The \"where\" (2), represented by the contextName (e), the \"who\",\n   \
    \ represented by the groupName (x) from the previous step, and the\n    \"how\"\
    \ (3), represented by securityModel (a) and securityLevel (c),\n    are used as\
    \ indices (e,x,a,c) into the vacmAccessTable to find a\n    single entry that\
    \ contains three MIB views.\n 4) The \"why\" (4), represented by the viewType\
    \ (d), is used to select\n    the proper MIB view, represented by a viewName (y),\
    \ from the\n    vacmAccessEntry selected in the previous step. This viewName (y)\
    \ is\n    an index into the vacmViewTreeFamilyTable and selects the set of\n \
    \   entries that define the variableNames which are included in or\n    excluded\
    \ from the MIB view identified by the viewName (y).\n 5) The \"what\" (5) type\
    \ of management data and \"which\" (6) particular\n    instance, represented by\
    \ the variableName (f), is then checked to be\n    in the MIB view or not, e.g.,\
    \ the yes/no decision (z).\n"
- title: 3.2.  Processing the isAccessAllowed Service Request
  contents:
  - "3.2.  Processing the isAccessAllowed Service Request\n   This section describes\
    \ the procedure followed by an Access Control\n   module that implements the View-based\
    \ Access Control Model whenever\n   it receives an isAccessAllowed request.\n\
    \   1) The vacmContextTable is consulted for information about\n      the SNMP\
    \ context identified by the contextName.  If information\n      about this SNMP\
    \ context is absent from the table, then an\n      errorIndication (noSuchContext)\
    \ is returned to the calling module.\n   2) The vacmSecurityToGroupTable is consulted\
    \ for mapping the\n      securityModel and securityName to a groupName.  If the\
    \ information\n      about this combination is absent from the table, then an\n\
    \      errorIndication (noGroupName) is returned to the calling module.\n   3)\
    \ The vacmAccessTable is consulted for information about the\n      groupName,\
    \ contextName, securityModel and securityLevel.  If\n      information about this\
    \ combination is absent from the table, then\n      an errorIndication (noAccessEntry)\
    \ is returned to the calling\n      module.\n   4) a) If the viewType is \"read\"\
    , then the read view is used for\n         checking access rights.\n      b) If\
    \ the viewType is \"write\", then the write view is used for\n         checking\
    \ access rights.\n      c) If the viewType is \"notify\", then the notify view\
    \ is used\n         for checking access rights.\n      If the view to be used\
    \ is the empty view (zero length viewName)\n      then an errorIndication (noSuchView)\
    \ is returned to the calling\n      module.\n   5) a) If there is no view configured\
    \ for the specified viewType,\n         then an errorIndication (noSuchView) is\
    \ returned to the calling\n         module.\n      b) If the specified variableName\
    \ (object instance) is not in the\n         MIB view (see DESCRIPTION clause for\
    \ vacmViewTreeFamilyTable in\n         section 4), then an errorIndication (notInView)\
    \ is returned to\n         the calling module.\n         Otherwise,\n      c)\
    \ The specified variableName is in the MIB view.\n         A statusInformation\
    \ of success (accessAllowed) is returned to\n         the calling module.\n"
- title: 4.  Definitions
  contents:
  - '4.  Definitions

    '
- title: SNMP-VIEW-BASED-ACM-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'SNMP-VIEW-BASED-ACM-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n    MODULE-COMPLIANCE, OBJECT-GROUP       FROM SNMPv2-CONF\n    MODULE-IDENTITY,\
    \ OBJECT-TYPE,\n    snmpModules                           FROM SNMPv2-SMI\n  \
    \  TestAndIncr,\n    RowStatus, StorageType                FROM SNMPv2-TC\n  \
    \  SnmpAdminString,\n    SnmpSecurityLevel,\n    SnmpSecurityModel           \
    \          FROM SNMP-FRAMEWORK-MIB;\n"
- title: snmpVacmMIB       MODULE-IDENTITY
  contents:
  - "snmpVacmMIB       MODULE-IDENTITY\n    LAST-UPDATED \"9711200000Z\"         \
    \   -- 20 Nov 1997, midnight\n    ORGANIZATION \"SNMPv3 Working Group\"\n    CONTACT-INFO\
    \ \"WG-email:   snmpv3@tis.com\n                  Subscribe:  majordomo@tis.com\n\
    \                              In message body:  subscribe snmpv3\n          \
    \        Chair:      Russ Mundy\n                              Trusted Information\
    \ Systems\n                  postal:     3060 Washington Rd\n                \
    \              Glenwood MD 21738\n                              USA\n        \
    \          email:      mundy@tis.com\n                  phone:      +1-301-854-6889\n\
    \                  Co-editor:  Bert Wijnen\n                              IBM\
    \ T.J. Watson Research\n                  postal:     Schagen 33\n           \
    \                   3461 GL Linschoten\n                              Netherlands\n\
    \                  email:      wijnen@vnet.ibm.com\n                  phone: \
    \     +31-348-432-794\n                  Co-editor:  Randy Presuhn\n         \
    \                     BMC Software, Inc\n                  postal:     1190 Saratoga\
    \ Avenue, Suite 130\n                              San Jose, CA  95129-3433\n\
    \                              USA\n                  email:      rpresuhn@bmc.com\n\
    \                  phone:      +1-408-556-0720\n                  Co-editor: \
    \ Keith McCloghrie\n                              Cisco Systems, Inc.\n      \
    \            postal:     170 West Tasman Drive\n                             \
    \ San Jose, CA  95134-1706\n                              USA\n              \
    \    email:      kzm@cisco.com\n                  phone:      +1-408-526-5260\n\
    \                 \"\n    DESCRIPTION  \"The management information definitions\
    \ for the\n                  View-based Access Control Model for SNMP.\n     \
    \            \"\n    ::= { snmpModules 16 }\n"
- title: -- Administrative assignments ****************************************
  contents:
  - '-- Administrative assignments ****************************************

    '
- title: vacmMIBObjects      OBJECT IDENTIFIER ::= { snmpVacmMIB 1 }
  contents:
  - 'vacmMIBObjects      OBJECT IDENTIFIER ::= { snmpVacmMIB 1 }

    '
- title: vacmMIBConformance  OBJECT IDENTIFIER ::= { snmpVacmMIB 2 }
  contents:
  - 'vacmMIBConformance  OBJECT IDENTIFIER ::= { snmpVacmMIB 2 }

    '
- title: -- Information about Local Contexts **********************************
  contents:
  - '-- Information about Local Contexts **********************************

    '
- title: vacmContextTable OBJECT-TYPE
  contents:
  - "vacmContextTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF VacmContextEntry\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    The table of locally available contexts.\n                 This table provides\
    \ information to SNMP Command\n                 Generator applications so that\
    \ they can properly\n                 configure the vacmAccessTable to control\
    \ access to\n                 all contexts at the SNMP entity.\n             \
    \    This table may change dynamically if the SNMP entity\n                 allows\
    \ that contexts are added/deleted dynamically\n                 (for instance\
    \ when its configuration changes). Such\n                 changes would happen\
    \ only if the management\n                 instrumentation at that SNMP entity\
    \ recognizes more\n                 (or fewer) contexts.\n                 The\
    \ presence of entries in this table and of entries\n                 in the vacmAccessTable\
    \ are independent.  That is, a\n                 context identified by an entry\
    \ in this table is not\n                 necessarily referenced by any entries\
    \ in the\n                 vacmAccessTable; and the context(s) referenced by an\n\
    \                 entry in the vacmAccessTable does not necessarily\n        \
    \         currently exist and thus need not be identified by an\n            \
    \     entry in this table.\n                 This table must be made accessible\
    \ via the default\n                 context so that Command Responder applications\
    \ have\n                 a standard way of retrieving the information.\n     \
    \            This table is read-only. It cannot be configured via\n          \
    \       SNMP.\n                \"\n    ::= { vacmMIBObjects 1 }\n"
- title: vacmContextEntry OBJECT-TYPE
  contents:
  - "vacmContextEntry OBJECT-TYPE\n    SYNTAX       VacmContextEntry\n    MAX-ACCESS\
    \   not-accessible\n    STATUS       current\n    DESCRIPTION \"Information about\
    \ a particular context.\"\n    INDEX       {\n                  vacmContextName\n\
    \                }\n    ::= { vacmContextTable 1 }\n"
- title: VacmContextEntry ::= SEQUENCE
  contents:
  - "VacmContextEntry ::= SEQUENCE\n    {\n        vacmContextName SnmpAdminString\n\
    \    }\n"
- title: vacmContextName  OBJECT-TYPE
  contents:
  - "vacmContextName  OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..32))\n\
    \    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION \"A human\
    \ readable name identifying a particular\n                 context at a particular\
    \ SNMP entity.\n                 The empty contextName (zero length) represents\
    \ the\n                 default context.\n                \"\n    ::= { vacmContextEntry\
    \ 1 }\n"
- title: -- Information about Groups ******************************************
  contents:
  - '-- Information about Groups ******************************************

    '
- title: vacmSecurityToGroupTable OBJECT-TYPE
  contents:
  - "vacmSecurityToGroupTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF VacmSecurityToGroupEntry\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    This table maps a combination of securityModel and\n                 securityName\
    \ into a groupName which is used to define\n                 an access control\
    \ policy for a group of principals.\n                \"\n    ::= { vacmMIBObjects\
    \ 2 }\n"
- title: vacmSecurityToGroupEntry OBJECT-TYPE
  contents:
  - "vacmSecurityToGroupEntry OBJECT-TYPE\n    SYNTAX       VacmSecurityToGroupEntry\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    An entry in this table maps the combination of a\n                 securityModel\
    \ and securityName into a groupName.\n                \"\n    INDEX       {\n\
    \                  vacmSecurityModel,\n                  vacmSecurityName\n  \
    \              }\n    ::= { vacmSecurityToGroupTable 1 }\n"
- title: VacmSecurityToGroupEntry ::= SEQUENCE
  contents:
  - "VacmSecurityToGroupEntry ::= SEQUENCE\n    {\n        vacmSecurityModel     \
    \          SnmpSecurityModel,\n        vacmSecurityName                SnmpAdminString,\n\
    \        vacmGroupName                   SnmpAdminString,\n        vacmSecurityToGroupStorageType\
    \  StorageType,\n        vacmSecurityToGroupStatus       RowStatus\n    }\n"
- title: vacmSecurityModel OBJECT-TYPE
  contents:
  - "vacmSecurityModel OBJECT-TYPE\n    SYNTAX       SnmpSecurityModel(1..2147483647)\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    The Security Model, by which the vacmSecurityName\n                 referenced\
    \ by this entry is provided.\n                 Note, this object may not take\
    \ the 'any' (0) value.\n                \"\n    ::= { vacmSecurityToGroupEntry\
    \ 1 }\n"
- title: vacmSecurityName OBJECT-TYPE
  contents:
  - "vacmSecurityName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(1..32))\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    The securityName for the principal, represented in a\n                 Security\
    \ Model independent format, which is mapped by\n                 this entry to\
    \ a groupName.\n                 The securityName for a principal represented\
    \ in a\n                 Security Model independent format.\n                \"\
    \n    ::= { vacmSecurityToGroupEntry 2 }\n"
- title: vacmGroupName    OBJECT-TYPE
  contents:
  - "vacmGroupName    OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(1..32))\n\
    \    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The\
    \ name of the group to which this entry (e.g., the\n                 combination\
    \ of securityModel and securityName)\n                 belongs.\n            \
    \     This groupName is used as index into the\n                 vacmAccessTable\
    \ to select an access control policy.\n                \"\n    ::= { vacmSecurityToGroupEntry\
    \ 3 }\n"
- title: vacmSecurityToGroupStorageType OBJECT-TYPE
  contents:
  - "vacmSecurityToGroupStorageType OBJECT-TYPE\n    SYNTAX       StorageType\n  \
    \  MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The storage\
    \ type for this conceptual row.\n                 Conceptual rows having the value\
    \ 'permanent' need not\n                 allow write-access to any columnar objects\
    \ in the row.\n                \"\n    DEFVAL      { nonVolatile }\n    ::= {\
    \ vacmSecurityToGroupEntry 4 }\n"
- title: vacmSecurityToGroupStatus OBJECT-TYPE
  contents:
  - "vacmSecurityToGroupStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS\
    \   read-create\n    STATUS       current\n    DESCRIPTION \"The status of this\
    \ conceptual row.\n                 The  RowStatus TC [RFC1903] requires that\
    \ this\n                 DESCRIPTION clause states under which circumstances\n\
    \                 other objects in this row can be modified:\n               \
    \  The value of this object has no effect on whether\n                 other objects\
    \ in this conceptual row can be modified.\n                \"\n    ::= { vacmSecurityToGroupEntry\
    \ 5 }\n"
- title: -- Information about Access Rights ***********************************
  contents:
  - '-- Information about Access Rights ***********************************

    '
- title: vacmAccessTable  OBJECT-TYPE
  contents:
  - "vacmAccessTable  OBJECT-TYPE\n    SYNTAX       SEQUENCE OF VacmAccessEntry\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    The table of access rights for groups.\n                 Each entry is indexed\
    \ by a contextPrefix, a groupName\n                 a securityModel and a securityLevel.\
    \  To determine\n                 whether access is allowed, one entry from this\
    \ table\n                 needs to be selected and the proper viewName from that\n\
    \                 entry must be used for access control checking.\n          \
    \       To select the proper entry, follow these steps:\n                 1) the\
    \ set of possible matches is formed by the\n                    intersection of\
    \ the following sets of entries:\n                      the set of entries with\
    \ identical vacmGroupName\n                      the union of these two sets:\n\
    \                       - the set with identical vacmAccessContextPrefix\n   \
    \                    - the set of entries with vacmAccessContextMatch\n      \
    \                   value of 'prefix' and matching\n                         vacmAccessContextPrefix\n\
    \                      intersected with the union of these two sets:\n       \
    \                - the set of entries with identical\n                       \
    \  vacmSecurityModel\n                       - the set of entries with vacmSecurityModel\n\
    \                         value of 'any'\n                      intersected with\
    \ the set of entries with\n                      vacmAccessSecurityLevel value\
    \ less than or equal\n                      to the requested securityLevel\n \
    \                2) if this set has only one member, we're done\n            \
    \        otherwise, it comes down to deciding how to weight\n                \
    \    the preferences between ContextPrefixes,\n                    SecurityModels,\
    \ and SecurityLevels as follows:\n                    a) if the subset of entries\
    \ with identical\n                       securityModels is not empty, discard\
    \ the rest.\n                    b) if the subset of entries with identical\n\
    \                       vacmAccessContextPrefix is not empty,\n              \
    \         discard the rest\n                    c) discard all entries with ContextPrefixes\
    \ shorter\n                       than the longest one remaining in the set\n\
    \                    d) select the entry with the highest securityLevel\n    \
    \             Please note that for securityLevel noAuthNoPriv, all\n         \
    \        groups are really equivalent since the assumption that\n            \
    \     the securityName has been authenticated does not hold.\n               \
    \ \"\n    ::= { vacmMIBObjects 4 }\n"
- title: vacmAccessEntry  OBJECT-TYPE
  contents:
  - "vacmAccessEntry  OBJECT-TYPE\n    SYNTAX       VacmAccessEntry\n    MAX-ACCESS\
    \   not-accessible\n    STATUS       current\n    DESCRIPTION \"An access right\
    \ configured in the Local Configuration\n                 Datastore (LCD) authorizing\
    \ access to an SNMP context.\n                \"\n    INDEX       { vacmGroupName,\n\
    \                  vacmAccessContextPrefix,\n                  vacmAccessSecurityModel,\n\
    \                  vacmAccessSecurityLevel\n                }\n    ::= { vacmAccessTable\
    \ 1 }\n"
- title: VacmAccessEntry ::= SEQUENCE
  contents:
  - "VacmAccessEntry ::= SEQUENCE\n    {\n        vacmAccessContextPrefix    SnmpAdminString,\n\
    \        vacmAccessSecurityModel    SnmpSecurityModel,\n        vacmAccessSecurityLevel\
    \    SnmpSecurityLevel,\n        vacmAccessContextMatch     INTEGER,\n       \
    \ vacmAccessReadViewName     SnmpAdminString,\n        vacmAccessWriteViewName\
    \    SnmpAdminString,\n        vacmAccessNotifyViewName   SnmpAdminString,\n \
    \       vacmAccessStorageType      StorageType,\n        vacmAccessStatus    \
    \       RowStatus\n    }\n"
- title: vacmAccessContextPrefix OBJECT-TYPE
  contents:
  - "vacmAccessContextPrefix OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..32))\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    In order to gain the access rights allowed by this\n                 conceptual\
    \ row, a contextName must match exactly\n                 (if the value of vacmAccessContextMatch\
    \ is 'exact')\n                 or partially (if the value of vacmAccessContextMatch\n\
    \                 is 'prefix') to the value of the instance of this\n        \
    \         object.\n                \"\n    ::= { vacmAccessEntry 1 }\n"
- title: vacmAccessSecurityModel OBJECT-TYPE
  contents:
  - "vacmAccessSecurityModel OBJECT-TYPE\n    SYNTAX       SnmpSecurityModel\n   \
    \ MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"In\
    \ order to gain the access rights allowed by this\n                 conceptual\
    \ row, this securityModel must be in use.\n                \"\n    ::= { vacmAccessEntry\
    \ 2 }\n"
- title: vacmAccessSecurityLevel OBJECT-TYPE
  contents:
  - "vacmAccessSecurityLevel OBJECT-TYPE\n    SYNTAX       SnmpSecurityLevel\n   \
    \ MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"The\
    \ minimum level of security required in order to\n                 gain the access\
    \ rights allowed by this conceptual\n                 row.  A securityLevel of\
    \ noAuthNoPriv is less than\n                 authNoPriv which in turn is less\
    \ than authPriv.\n                 If multiple entries are equally indexed except\
    \ for\n                 this vacmAccessSecurityLevel index, then the entry\n \
    \                which has the highest value for\n                 vacmAccessSecurityLevel\
    \ wins.\n                \"\n    ::= { vacmAccessEntry 3 }\n"
- title: vacmAccessContextMatch OBJECT-TYPE
  contents:
  - "vacmAccessContextMatch OBJECT-TYPE\n    SYNTAX       INTEGER\n              \
    \  { exact (1), -- exact match of prefix and contextName\n                  prefix\
    \ (2) -- Only match to the prefix\n                }\n    MAX-ACCESS   read-create\n\
    \    STATUS       current\n    DESCRIPTION \"If the value of this object is exact(1),\
    \ then all\n                 rows where the contextName exactly matches\n    \
    \             vacmAccessContextPrefix are selected.\n                 If the value\
    \ of this object is prefix(2), then all\n                 rows where the contextName\
    \ whose starting octets\n                 exactly match vacmAccessContextPrefix\
    \ are selected.\n                 This allows for a simple form of wildcarding.\n\
    \                 See also the example in the DESCRIPTION clause of\n        \
    \         the vacmAccessTable above.\n                \"\n    ::= { vacmAccessEntry\
    \ 4 }\n"
- title: vacmAccessReadViewName OBJECT-TYPE
  contents:
  - "vacmAccessReadViewName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..32))\n\
    \    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The\
    \ value of an instance of this object identifies\n                 the MIB view\
    \ of the SNMP context to which this\n                 conceptual row authorizes\
    \ read access.\n                 The identified MIB view is that one for which\
    \ the\n                 vacmViewTreeFamilyViewName has the same value as the\n\
    \                 instance of this object; if the value is the empty\n       \
    \          string or if there is no active MIB view having this\n            \
    \     value of vacmViewTreeFamilyViewName, then no access\n                 is\
    \ granted.\n                \"\n    DEFVAL      { ''H }   -- the empty string\n\
    \    ::= { vacmAccessEntry 5 }\n"
- title: vacmAccessWriteViewName OBJECT-TYPE
  contents:
  - "vacmAccessWriteViewName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..32))\n\
    \    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The\
    \ value of an instance of this object identifies\n                 the MIB view\
    \ of the SNMP context to which this\n                 conceptual row authorizes\
    \ write access.\n                 The identified MIB view is that one for which\
    \ the\n                 vacmViewTreeFamilyViewName has the same value as the\n\
    \                 instance of this object; if the value is the empty\n       \
    \          string or if there is no active MIB view having this\n            \
    \     value of vacmViewTreeFamilyViewName, then no access\n                 is\
    \ granted.\n                \"\n    DEFVAL      { ''H }   -- the empty string\n\
    \    ::= { vacmAccessEntry 6 }\n"
- title: vacmAccessNotifyViewName OBJECT-TYPE
  contents:
  - "vacmAccessNotifyViewName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..32))\n\
    \    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The\
    \ value of an instance of this object identifies\n                 the MIB view\
    \ of the SNMP context to which this\n                 conceptual row authorizes\
    \ access for notifications.\n                 The identified MIB view is that\
    \ one for which the\n                 vacmViewTreeFamilyViewName has the same\
    \ value as the\n                 instance of this object; if the value is the\
    \ empty\n                 string or if there is no active MIB view having this\n\
    \                 value of vacmViewTreeFamilyViewName, then no access\n      \
    \           is granted.\n                \"\n    DEFVAL      { ''H }   -- the\
    \ empty string\n    ::= { vacmAccessEntry 7 }\n"
- title: vacmAccessStorageType OBJECT-TYPE
  contents:
  - "vacmAccessStorageType OBJECT-TYPE\n    SYNTAX       StorageType\n    MAX-ACCESS\
    \   read-create\n    STATUS       current\n    DESCRIPTION \"The storage type\
    \ for this conceptual row.\n                 Conceptual rows having the value\
    \ 'permanent' need not\n                 allow write-access to any columnar objects\
    \ in the row.\n                \"\n    DEFVAL      { nonVolatile }\n    ::= {\
    \ vacmAccessEntry 8 }\n"
- title: vacmAccessStatus OBJECT-TYPE
  contents:
  - "vacmAccessStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS   read-create\n\
    \    STATUS       current\n    DESCRIPTION \"The status of this conceptual row.\n\
    \                 The  RowStatus TC [RFC1903] requires that this\n           \
    \      DESCRIPTION clause states under which circumstances\n                 other\
    \ objects in this row can be modified:\n                 The value of this object\
    \ has no effect on whether\n                 other objects in this conceptual\
    \ row can be modified.\n                \"\n    ::= { vacmAccessEntry 9 }\n"
- title: -- Information about MIB views ***************************************
  contents:
  - '-- Information about MIB views ***************************************

    '
- title: -- Support for instance-level granularity is optional.
  contents:
  - '-- Support for instance-level granularity is optional.

    '
- title: --
  contents:
  - '--

    '
- title: -- In some implementations, instance-level access control
  contents:
  - '-- In some implementations, instance-level access control

    '
- title: -- granularity may come at a high performance cost.  Managers
  contents:
  - '-- granularity may come at a high performance cost.  Managers

    '
- title: -- should avoid requesting such configurations unnecessarily.
  contents:
  - '-- should avoid requesting such configurations unnecessarily.

    '
- title: vacmMIBViews     OBJECT IDENTIFIER ::= { vacmMIBObjects 5 }
  contents:
  - 'vacmMIBViews     OBJECT IDENTIFIER ::= { vacmMIBObjects 5 }

    '
- title: vacmViewSpinLock OBJECT-TYPE
  contents:
  - "vacmViewSpinLock OBJECT-TYPE\n    SYNTAX       TestAndIncr\n    MAX-ACCESS  \
    \ read-write\n    STATUS       current\n    DESCRIPTION \"An advisory lock used\
    \ to allow cooperating SNMP\n                 Command Generator applications to\
    \ coordinate their\n                 use of the Set operation in creating or modifying\n\
    \                 views.\n                 When creating a new view or altering\
    \ an existing\n                 view, it is important to understand the potential\n\
    \                 interactions with other uses of the view.  The\n           \
    \      vacmViewSpinLock should be retrieved.  The name of\n                 the\
    \ view to be created should be determined to be\n                 unique by the\
    \ SNMP Command Generator application by\n                 consulting the vacmViewTreeFamilyTable.\
    \  Finally,\n                 the named view may be created (Set), including the\n\
    \                 advisory lock.\n                 If another SNMP Command Generator\
    \ application has\n                 altered the views in the meantime, then the\
    \ spin\n                 lock's value will have changed, and so this creation\n\
    \                 will fail because it will specify the wrong value for\n    \
    \             the spin lock.\n                 Since this is an advisory lock,\
    \ the use of this lock\n                 is not enforced.\n                \"\n\
    \    ::= { vacmMIBViews 1 }\n"
- title: vacmViewTreeFamilyTable OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF VacmViewTreeFamilyEntry\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    Locally held information about families of subtrees\n                 within MIB\
    \ views.\n                 Each MIB view is defined by two sets of view subtrees:\n\
    \                   - the included view subtrees, and\n                   - the\
    \ excluded view subtrees.\n                 Every such view subtree, both the\
    \ included and the\n                 excluded ones, is defined in this table.\n\
    \                 To determine if a particular object instance is in\n       \
    \          a particular MIB view, compare the object instance's\n            \
    \     OBJECT IDENTIFIER with each of the MIB view's active\n                 entries\
    \ in this table.  If none match, then the\n                 object instance is\
    \ not in the MIB view.  If one or\n                 more match, then the object\
    \ instance is included in,\n                 or excluded from, the MIB view according\
    \ to the\n                 value of vacmViewTreeFamilyType in the entry whose\n\
    \                 value of vacmViewTreeFamilySubtree has the most\n          \
    \       sub-identifiers.  If multiple entries match and have\n               \
    \  the same number of sub-identifiers, then the\n                 lexicographically\
    \ greatest instance of\n                 vacmViewTreeFamilyType determines the\
    \ inclusion or\n                 exclusion.\n                 An object instance's\
    \ OBJECT IDENTIFIER X matches an\n                 active entry in this table\
    \ when the number of\n                 sub-identifiers in X is at least as many\
    \ as in the\n                 value of vacmViewTreeFamilySubtree for the entry,\n\
    \                 and each sub-identifier in the value of\n                 vacmViewTreeFamilySubtree\
    \ matches its corresponding\n                 sub-identifier in X.  Two sub-identifiers\
    \ match\n                 either if the corresponding bit of the value of\n  \
    \               vacmViewTreeFamilyMask for the entry is zero (the\n          \
    \       'wild card' value), or if they are equal.\n                 A 'family'\
    \ of subtrees is the set of subtrees defined\n                 by a particular\
    \ combination of values of\n                 vacmViewTreeFamilySubtree and vacmViewTreeFamilyMask.\n\
    \                 In the case where no 'wild card' is defined in the\n       \
    \          vacmViewTreeFamilyMask, the family of subtrees reduces\n          \
    \       to a single subtree.\n                 When creating or changing MIB views,\
    \ an SNMP Command\n                 Generator application should utilize the\n\
    \                 vacmViewSpinLock to try to avoid collisions. See\n         \
    \        DESCRIPTION clause of vacmViewSpinLock.\n                 When creating\
    \ MIB views, it is strongly advised that\n                 first the 'excluded'\
    \ vacmViewTreeFamilyEntries are\n                 created and then the 'included'\
    \ entries.\n                 When deleting MIB views, it is strongly advised that\n\
    \                 first the 'included' vacmViewTreeFamilyEntries are\n       \
    \          deleted and then the 'excluded' entries.\n                 If a create\
    \ for an entry for instance-level access\n                 control is received\
    \ and the implementation does not\n                 support instance-level granularity,\
    \ then an\n                 inconsistentName error must be returned.\n       \
    \         \"\n    ::= { vacmMIBViews 2 }\n"
- title: vacmViewTreeFamilyEntry OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyEntry OBJECT-TYPE\n    SYNTAX       VacmViewTreeFamilyEntry\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    Information on a particular family of view subtrees\n                 included\
    \ in or excluded from a particular SNMP\n                 context's MIB view.\n\
    \                 Implementations must not restrict the number of\n          \
    \       families of view subtrees for a given MIB view,\n                 except\
    \ as dictated by resource constraints on the\n                 overall number\
    \ of entries in the\n                 vacmViewTreeFamilyTable.\n             \
    \    If no conceptual rows exist in this table for a given\n                 MIB\
    \ view (viewName), that view may be thought of as\n                 consisting\
    \ of the empty set of view subtrees.\n                \"\n    INDEX       { vacmViewTreeFamilyViewName,\n\
    \                  vacmViewTreeFamilySubtree\n                }\n    ::= { vacmViewTreeFamilyTable\
    \ 1 }\n"
- title: VacmViewTreeFamilyEntry ::= SEQUENCE
  contents:
  - "VacmViewTreeFamilyEntry ::= SEQUENCE\n    {\n        vacmViewTreeFamilyViewName\
    \     SnmpAdminString,\n        vacmViewTreeFamilySubtree      OBJECT IDENTIFIER,\n\
    \        vacmViewTreeFamilyMask         OCTET STRING,\n        vacmViewTreeFamilyType\
    \         INTEGER,\n        vacmViewTreeFamilyStorageType  StorageType,\n    \
    \    vacmViewTreeFamilyStatus       RowStatus\n    }\n"
- title: vacmViewTreeFamilyViewName OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyViewName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(1..32))\n\
    \    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    The human readable name for a family of view subtrees.\n                \"\n \
    \   ::= { vacmViewTreeFamilyEntry 1 }\n"
- title: vacmViewTreeFamilySubtree OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilySubtree OBJECT-TYPE\n    SYNTAX       OBJECT IDENTIFIER\n \
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"\
    The MIB subtree which when combined with the\n                 corresponding instance\
    \ of vacmViewTreeFamilyMask\n                 defines a family of view subtrees.\n\
    \                \"\n    ::= { vacmViewTreeFamilyEntry 2 }\n"
- title: vacmViewTreeFamilyMask OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyMask OBJECT-TYPE\n    SYNTAX       OCTET STRING (SIZE (0..16))\n\
    \    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The\
    \ bit mask which, in combination with the\n                 corresponding instance\
    \ of vacmViewTreeFamilySubtree,\n                 defines a family of view subtrees.\n\
    \                 Each bit of this bit mask corresponds to a\n               \
    \  sub-identifier of vacmViewTreeFamilySubtree, with the\n                 most\
    \ significant bit of the i-th octet of this octet\n                 string value\
    \ (extended if necessary, see below)\n                 corresponding to the (8*i\
    \ - 7)-th sub-identifier, and\n                 the least significant bit of the\
    \ i-th octet of this\n                 octet string corresponding to the (8*i)-th\n\
    \                 sub-identifier, where i is in the range 1 through 16.\n    \
    \             Each bit of this bit mask specifies whether or not\n           \
    \      the corresponding sub-identifiers must match when\n                 determining\
    \ if an OBJECT IDENTIFIER is in this\n                 family of view subtrees;\
    \ a '1' indicates that an\n                 exact match must occur; a '0' indicates\
    \ 'wild card',\n                 i.e., any sub-identifier value matches.\n   \
    \              Thus, the OBJECT IDENTIFIER X of an object instance\n         \
    \        is contained in a family of view subtrees if, for\n                 each\
    \ sub-identifier of the value of\n                 vacmViewTreeFamilySubtree,\
    \ either:\n                   the i-th bit of vacmViewTreeFamilyMask is 0, or\n\
    \                   the i-th sub-identifier of X is equal to the i-th\n      \
    \             sub-identifier of the value of\n                   vacmViewTreeFamilySubtree.\n\
    \                 If the value of this bit mask is M bits long and\n         \
    \        there are more than M sub-identifiers in the\n                 corresponding\
    \ instance of vacmViewTreeFamilySubtree,\n                 then the bit mask is\
    \ extended with 1's to be the\n                 required length.\n           \
    \      Note that when the value of this object is the\n                 zero-length\
    \ string, this extension rule results in\n                 a mask of all-1's being\
    \ used (i.e., no 'wild card'),\n                 and the family of view subtrees\
    \ is the one view\n                 subtree uniquely identified by the corresponding\n\
    \                 instance of vacmViewTreeFamilySubtree.\n                 Note\
    \ that masks of length greater than zero length\n                 do not need\
    \ to be supported. In this case this\n                 object is made read-only.\n\
    \                \"\n    DEFVAL      { ''H }\n    ::= { vacmViewTreeFamilyEntry\
    \ 3 }\n"
- title: vacmViewTreeFamilyType OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyType OBJECT-TYPE\n    SYNTAX       INTEGER  { included(1),\
    \ excluded(2) }\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\
    \ \"Indicates whether the corresponding instances of\n                 vacmViewTreeFamilySubtree\
    \ and vacmViewTreeFamilyMask\n                 define a family of view subtrees\
    \ which is included in\n                 or excluded from the MIB view.\n    \
    \            \"\n    DEFVAL      { included }\n    ::= { vacmViewTreeFamilyEntry\
    \ 4 }\n"
- title: vacmViewTreeFamilyStorageType OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyStorageType OBJECT-TYPE\n    SYNTAX       StorageType\n   \
    \ MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The storage\
    \ type for this conceptual row.\n                 Conceptual rows having the value\
    \ 'permanent' need not\n                 allow write-access to any columnar objects\
    \ in the row.\n                \"\n    DEFVAL      { nonVolatile }\n    ::= {\
    \ vacmViewTreeFamilyEntry 5 }\n"
- title: vacmViewTreeFamilyStatus OBJECT-TYPE
  contents:
  - "vacmViewTreeFamilyStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS\
    \   read-create\n    STATUS       current\n    DESCRIPTION \"The status of this\
    \ conceptual row.\n                 The  RowStatus TC [RFC1903] requires that\
    \ this\n                 DESCRIPTION clause states under which circumstances\n\
    \                 other objects in this row can be modified:\n               \
    \  The value of this object has no effect on whether\n                 other objects\
    \ in this conceptual row can be modified.\n                \"\n    ::= { vacmViewTreeFamilyEntry\
    \ 6 }\n"
- title: -- Conformance information *******************************************
  contents:
  - '-- Conformance information *******************************************

    '
- title: vacmMIBCompliances  OBJECT IDENTIFIER ::= { vacmMIBConformance 1 }
  contents:
  - 'vacmMIBCompliances  OBJECT IDENTIFIER ::= { vacmMIBConformance 1 }

    '
- title: vacmMIBGroups       OBJECT IDENTIFIER ::= { vacmMIBConformance 2 }
  contents:
  - 'vacmMIBGroups       OBJECT IDENTIFIER ::= { vacmMIBConformance 2 }

    '
- title: -- Compliance statements *********************************************
  contents:
  - '-- Compliance statements *********************************************

    '
- title: vacmMIBCompliance MODULE-COMPLIANCE
  contents:
  - "vacmMIBCompliance MODULE-COMPLIANCE\n    STATUS       current\n    DESCRIPTION\
    \ \"The compliance statement for SNMP engines which\n                 implement\
    \ the SNMP View-based Access Control Model\n                 configuration MIB.\n\
    \                \"\n    MODULE -- this module\n        MANDATORY-GROUPS { vacmBasicGroup\
    \ }\n        OBJECT        vacmAccessContextMatch\n        MIN-ACCESS    read-only\n\
    \        DESCRIPTION  \"Write access is not required.\"\n        OBJECT      \
    \  vacmAccessReadViewName\n        MIN-ACCESS    read-only\n        DESCRIPTION\
    \  \"Write access is not required.\"\n        OBJECT        vacmAccessWriteViewName\n\
    \        MIN-ACCESS    read-only\n        DESCRIPTION  \"Write access is not required.\"\
    \n        OBJECT        vacmAccessNotifyViewName\n        MIN-ACCESS    read-only\n\
    \        DESCRIPTION  \"Write access is not required.\"\n        OBJECT      \
    \  vacmAccessStorageType\n        MIN-ACCESS    read-only\n        DESCRIPTION\
    \  \"Write access is not required.\"\n        OBJECT        vacmAccessStatus\n\
    \        MIN-ACCESS    read-only\n        DESCRIPTION  \"Create/delete/modify\
    \ access to the\n                      vacmAccessTable is not required.\n    \
    \                 \"\n        OBJECT        vacmViewTreeFamilyMask\n        WRITE-SYNTAX\
    \  OCTET STRING (SIZE (0))\n        MIN-ACCESS    read-only\n        DESCRIPTION\
    \  \"Support for configuration via SNMP of subtree\n                      families\
    \ using wild-cards is not required.\n                     \"\n        OBJECT \
    \       vacmViewTreeFamilyType\n        MIN-ACCESS    read-only\n        DESCRIPTION\
    \  \"Write access is not required.\"\n        OBJECT        vacmViewTreeFamilyStorageType\n\
    \        MIN-ACCESS    read-only\n        DESCRIPTION  \"Write access is not required.\"\
    \n        OBJECT        vacmViewTreeFamilyStatus\n        MIN-ACCESS    read-only\n\
    \        DESCRIPTION  \"Create/delete/modify access to the\n                 \
    \     vacmViewTreeFamilyTable is not required.\n                     \"\n    ::=\
    \ { vacmMIBCompliances 1 }\n"
- title: -- Units of conformance **********************************************
  contents:
  - '-- Units of conformance **********************************************

    '
- title: vacmBasicGroup OBJECT-GROUP
  contents:
  - "vacmBasicGroup OBJECT-GROUP\n    OBJECTS {\n              vacmContextName,\n\
    \              vacmGroupName,\n              vacmSecurityToGroupStorageType,\n\
    \              vacmSecurityToGroupStatus,\n              vacmAccessContextMatch,\n\
    \              vacmAccessReadViewName,\n              vacmAccessWriteViewName,\n\
    \              vacmAccessNotifyViewName,\n              vacmAccessStorageType,\n\
    \              vacmAccessStatus,\n              vacmViewSpinLock,\n          \
    \    vacmViewTreeFamilyMask,\n              vacmViewTreeFamilyType,\n        \
    \      vacmViewTreeFamilyStorageType,\n              vacmViewTreeFamilyStatus\n\
    \            }\n    STATUS       current\n    DESCRIPTION \"A collection of objects\
    \ providing for remote\n                 configuration of an SNMP engine which\
    \ implements\n                 the SNMP View-based Access Control Model.\n   \
    \             \"\n    ::= { vacmMIBGroups 1 }\n"
- title: END
  contents:
  - 'END

    '
- title: 5.  Intellectual Property
  contents:
  - "5.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document is the result of the efforts of the SNMPv3\
    \ Working\n   Group.  Some special thanks are in order to the following SNMPv3\
    \ WG\n   members:\n   Dave Battle (SNMP Research, Inc.)\n   Uri Blumenthal (IBM\
    \ T.J. Watson Research Center)\n   Jeff Case (SNMP Research, Inc.)\n   John Curran\
    \ (BBN)\n   T. Max Devlin (Hi-TECH Connections)\n   John Flick (Hewlett Packard)\n\
    \   David Harrington (Cabletron Systems Inc.)\n   N.C. Hien (IBM T.J. Watson Research\
    \ Center)\n   Dave Levi (SNMP Research, Inc.)\n   Louis A Mamakos (UUNET Technologies\
    \ Inc.)\n   Paul Meyer (Secure Computing Corporation)\n   Keith McCloghrie (Cisco\
    \ Systems)\n   Russ Mundy (Trusted Information Systems, Inc.)\n   Bob Natale (ACE*COMM\
    \ Corporation)\n   Mike O'Dell (UUNET Technologies Inc.)\n   Dave Perkins (DeskTalk)\n\
    \   Peter Polkinghorne (Brunel University)\n   Randy Presuhn (BMC Software, Inc.)\n\
    \   David Reid (SNMP Research, Inc.)\n   Shawn Routhier (Epilogue)\n   Juergen\
    \ Schoenwaelder (TU Braunschweig)\n   Bob Stewart (Cisco Systems)\n   Bert Wijnen\
    \ (IBM T.J. Watson Research Center)\n   The document is based on recommendations\
    \ of the IETF Security and\n   Administrative Framework Evolution for SNMP Advisory\
    \ Team.  Members\n   of that Advisory Team were:\n   David Harrington (Cabletron\
    \ Systems Inc.)\n   Jeff Johnson (Cisco Systems)\n   David Levi (SNMP Research\
    \ Inc.)\n   John Linn (Openvision)\n   Russ Mundy (Trusted Information Systems)\
    \ chair\n   Shawn Routhier (Epilogue)\n   Glenn Waters (Nortel)\n   Bert Wijnen\
    \ (IBM T. J. Watson Research Center)\n   As recommended by the Advisory Team and\
    \ the SNMPv3 Working Group\n   Charter, the design incorporates as much as practical\
    \ from previous\n   RFCs and drafts. As a result, special thanks are due to the\
    \ authors\n   of previous designs known as SNMPv2u and SNMPv2*:\n   Jeff Case\
    \ (SNMP Research, Inc.)\n   David Harrington (Cabletron Systems Inc.)\n   David\
    \ Levi (SNMP Research, Inc.)\n   Keith McCloghrie (Cisco Systems)\n   Brian O'Keefe\
    \ (Hewlett Packard)\n   Marshall T. Rose (Dover Beach Consulting)\n   Jon Saperia\
    \ (BGS Systems Inc.)\n   Steve Waldbusser (International Network Services)\n \
    \  Glenn W. Waters (Bell-Northern Research Ltd.)\n"
- title: 7.  Security Considerations
  contents:
  - '7.  Security Considerations

    '
- title: 7.1.  Recommended Practices
  contents:
  - "7.1.  Recommended Practices\n   This document is meant for use in the SNMP architecture.\
    \  The View-\n   based Access Control Model described in this document checks\
    \ access\n   rights to management information based on:\n   - contextName, representing\
    \ a set of management information at the\n     managed system where the Access\
    \ Control module is running.\n   - groupName, representing a set of zero or more\
    \ securityNames.\n     The combination of a securityModel and a securityName is\
    \ mapped\n     into a group in the View-based Access Control Model.\n   - securityModel\
    \ under which access is requested.\n   - securityLevel under which access is requested.\n\
    \   - operation performed on the management information.\n   - MIB views for read,\
    \ write or notify access.\n   When the User-based Access Control module is called\
    \ for checking\n   access rights, it is assumed that the calling module has ensured\
    \ the\n   authentication and privacy aspects as specified by the securityLevel\n\
    \   that is being passed.\n   When creating entries in or deleting entries from\
    \ the\n   vacmViewFamiliyTreeTable it is important to do such in the sequence\n\
    \   as recommended in the DESCRIPTION clause of the vacmViewFamilityTable\n  \
    \ definition. Otherwise unwanted access may be granted while changing\n   the\
    \ entries in the table.\n"
- title: 7.2.  Defining Groups
  contents:
  - "7.2.  Defining Groups\n   The groupNames are used to give access to a group of\
    \ zero or more\n   securityNames.  Within the View-Based Access Control Model,\
    \ a\n   groupName is considered to exist if that groupName is listed in the\n\
    \   vacmSecurityToGroupTable.\n   By mapping the combination of a securityModel\
    \ and securityName into a\n   groupName, an SNMP Command Generator application\
    \ can add/delete\n   securityNames to/from a group, if proper access is allowed.\n\
    \   Further it is important to realize that the grouping of\n   <securityModel,\
    \ securityName> tuples in the vacmSecurityToGroupTable\n   does not take securityLevel\
    \ into account. It is therefore important\n   that the security administrator\
    \ uses the securityLevel index in the\n   vacmAccessTable to separate noAuthNoPriv\
    \ from authPriv and/or\n   authNoPriv access.\n"
- title: 7.3.  Conformance
  contents:
  - "7.3.  Conformance\n   For an implementation of the View-based Access Control\
    \ Model to be\n   conformant, it MUST implement the SNMP-VIEW-BASED-ACM-MIB. \
    \ It also\n   SHOULD implement the initial configuration, described in appendix\
    \ A.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [RFC1902] Case, J., McCloghrie, K., Rose, M. and S., Waldbusser,\n\
    \        \"Structure of Management Information for Version  2 of the\n       \
    \ Simple Network Management Protocol (SNMPv2)\", RFC 1902, January\n        1996.\n\
    \   [RFC1903] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n        \"\
    Textual Conventions for Version 2 of the Simple Network\n        Management Protocol\
    \ (SNMPv2)\", RFC 1903, January 1996.\n   [RFC2119] Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n        Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2271] Harrington, D., Presuhn, R., and B. Wijnen,\n        \"\
    An Architecture for describing SNMP Management Frameworks\", RFC\n        2271,\
    \ January 1998.\n   [RFC2272] Case, J., Harrington, D., Presuhn, R., and B. Wijnen,\n\
    \        \"Message Processing and Dispatching for the Simple Network\n       \
    \ Management Protocol (SNMP)\", RFC 2272, January 1998.\n   [RFC2274] Blumenthal,\
    \ U., and B. Wijnen, \"User-based\n        Security Model (USM) for version 3\
    \ of the Simple Network\n        Management Protocol (SNMPv3)\", RFC 2274, January\
    \ 1998.\n   [ISO-ASN.1] Information processing systems - Open Systems\n      \
    \  Interconnection - Specification of Abstract Syntax Notation One\n        (ASN.1),\
    \ International Organization for Standardization.\n        International Standard\
    \ 8824, (December, 1987).\n"
- title: 9.  Editors' Addresses
  contents:
  - "9.  Editors' Addresses\n   Bert Wijnen\n   IBM T. J. Watson Research\n   Schagen\
    \ 33\n   3461 GL Linschoten\n   Netherlands\n   EMail:      wijnen@vnet.ibm.com\n\
    \   Phone:      +31-348-432-794\n   Randy Presuhn\n   BMC Software, Inc\n   1190\
    \ Saratoga Avenue, Suite 130\n   San Jose, CA  95129-3433\n   USA\n   EMail: \
    \     rpresuhn@bmc.com\n   Phone:      +1-408-556-0720\n   Keith McCloghrie\n\
    \   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA  95134-1706\n\
    \   USA\n   EMail:      kzm@cisco.com\n   Phone:      +1-408-526-5260\n"
- title: APPENDIX A - Installation
  contents:
  - 'APPENDIX A - Installation

    '
- title: A.1.  Installation Parameters
  contents:
  - "A.1.  Installation Parameters\n   During installation, an authoritative SNMP\
    \ engine which supports this\n   View-based Access Control Model SHOULD be configured\
    \ with several\n   initial parameters.  These include for the View-based Access\
    \ Control\n   Model:\n"
- title: 1) A security configuration
  contents:
  - "1) A security configuration\n   The choice of security configuration determines\
    \ if initial\n   configuration is implemented and if so how.  One of three possible\n\
    \   choices is selected:\n        - initial-minimum-security-configuration\n \
    \       - initial-semi-security-configuration\n        - initial-no-access-configuration\n\
    \   In the case of a initial-no-access-configuration, there is no initial\n  \
    \ configuration, and so the following steps are irrelevant.\n"
- title: 2) A default context
  contents:
  - "2) A default context\n   One entry in the vacmContextTable with a contextName\
    \ of \"\" (the empty\n   string), representing the default context.  Note that\
    \ this table gets\n   created automatically if a default context exists.\n   \
    \                              no privacy support  privacy support\n         \
    \                        ------------------  ---------------\n    vacmContextName\
    \              \"\"                  \"\"\n"
- title: 3) An initial group
  contents:
  - "3) An initial group\n   One entry in the vacmSecurityToGroupTable to allow access\
    \ to group\n   \"initial\".\n                                 no privacy support\
    \  privacy support\n                                 ------------------  ---------------\n\
    \  vacmSecurityModel              3 (USM)             3 (USM)\n  vacmSecurityName\
    \               \"initial\"           \"initial\"\n  vacmGroupName           \
    \       \"initial\"           \"initial\"\n  vacmSecurityToGroupStorageType anyValidStorageType\
    \ anyValidStorageType\n  vacmSecurityToGroupStatus      active              active\n"
- title: 4) Initial access rights
  contents:
  - "4) Initial access rights\n   Three entries in the vacmAccessTable as follows:\n\
    \   - read-notify access for securityModel USM, securityLevel\n     \"noAuthNoPriv\"\
    \ on behalf of securityNames that belong to the group\n     \"initial\" to the\
    \ <restricted> MIB view in the default context with\n     contextName \"\".\n\
    \   - read-write-notify access for securityModel USM, securityLevel\n     \"authNoPriv\"\
    \ on behalf of securityNames that belong to the group\n     \"initial\" to the\
    \ <internet> MIB view in the default context with\n     contextName \"\".\n  \
    \ - if privacy is supported,\n     read-write-notify access for securityModel\
    \ USM, securityLevel\n     \"authPriv\" on behalf of securityNames that belong\
    \ to the group\n     \"initial\" to the <internet> MIB view in the default context\
    \ with\n     contextName \"\".\n   That translates into the following entries\
    \ in the vacmAccessTable.\n   Those columns marked with (index) are index-only\
    \ objects and are not\n   really present in this table.\n   - One entry to be\
    \ used for unauthenticated access (noAuthNoPriv):\n                          \
    \     no privacy support  privacy support\n                               ------------------\
    \  ---------------\n    vacmAccessContextPrefix    \"\"                  \"\"\n\
    \    vacmGroupName     (index)  \"initial\"           \"initial\"\n    vacmSecurityModel\
    \ (index)  3 (USM)             3 (USM)\n    vacmAccessSecurityLevel    noAuthNoPriv\
    \        noAuthNoPriv\n    vacmAccessReadViewName     \"restricted\"        \"\
    restricted\"\n    vacmAccessWriteViewName    \"\"                  \"\"\n    vacmAccessNotifyViewName\
    \   \"restricted\"        \"restricted\"\n    vacmAccessStorageType      anyValidStorageType\
    \ anyValidStorageType\n    vacmAccessStatus           active              active\n\
    \   - One entry to be used for authenticated access but without\n     privacy\
    \ (authNoPriv):\n                               no privacy support  privacy support\n\
    \                               ------------------  ---------------\n    vacmAccessContextPrefix\
    \    \"\"                  \"\"\n    vacmGroupName     (index)  \"initial\"  \
    \         \"initial\"\n    vacmSecurityModel (index)  3 (USM)             3 (USM)\n\
    \    vacmAccessSecurityLevel    authNoPriv          authNoPriv\n    vacmAccessReadViewName\
    \     \"internet\"          \"internet\"\n    vacmAccessWriteViewName    \"internet\"\
    \          \"internet\"\n    vacmAccessNotifyViewName   \"internet\"         \
    \ \"internet\"\n    vacmAccessStorageType      anyValidStorageType anyValidStorageType\n\
    \    vacmAccessStatus           active              active\n   - One entry to\
    \ be used for authenticated access with privacy\n     (authPriv):\n          \
    \                     no privacy support  privacy support\n                  \
    \             ------------------  ---------------\n    vacmAccessContextPrefix\
    \                        \"\"\n    vacmGroupName     (index)                 \
    \     \"initial\"\n    vacmSecurityModel (index)                      3 (USM)\n\
    \    vacmAccessSecurityLevel                        authPriv\n    vacmAccessReadViewName\
    \                         \"internet\"\n    vacmAccessWriteViewName          \
    \              \"internet\"\n    vacmAccessNotifyViewName                    \
    \   \"internet\"\n    vacmAccessStorageType                          anyValidStorageType\n\
    \    vacmAccessStatus                               active\n"
- title: 5) Two MIB views, of which the second one depends on the security
  contents:
  - "5) Two MIB views, of which the second one depends on the security\n   configuration.\n\
    \   -  One view, the <internet> view, for authenticated access:\n      -  the\
    \ <internet> MIB view is the following subtree:\n             \"internet\"  (subtree\
    \ 1.3.6.1)\n   -  A second view, the <restricted> view, for unauthenticated\n\
    \      access.  This view is configured according to the selected\n      security\
    \ configuration:\n      -  For the initial-no-access-configuration there is no\
    \ default\n         initial configuration, so no MIB views are pre-scribed.\n\
    \      -  For the initial-semi-secure-configuration:\n         the <restricted>\
    \ MIB view is the union of these subtrees:\n         (a) \"system\"       (subtree\
    \ 1.3.6.1.2.1.1)     [RFC1907]\n         (b) \"snmp\"         (subtree 1.3.6.1.2.1.11)\
    \    [RFC1907]\n         (c) \"snmpEngine\"   (subtree 1.3.6.1.6.3.7.2.1) [RFC2271]\n\
    \         (d) \"snmpMPDStats\" (subtree 1.3.6.1.6.3.8.2.1) [RFC2272]\n       \
    \  (e) \"usmStats\"     (subtree 1.3.6.1.6.3.9.2.1) [RFC2274]\n      -  For the\
    \ initial-minimum-secure-configuration:\n         the <restricted> MIB view is\
    \ the following subtree.\n             \"internet\"  (subtree 1.3.6.1)\n   This\
    \ translates into the following \"internet\" entry in the\n   vacmViewTreeFamilyTable:\n\
    \                                minimum-secure      semi-secure\n           \
    \                     ----------------    ---------------\n  vacmViewTreeFamilyViewName\
    \    \"internet\"          \"internet\"\n  vacmViewTreeFamilySubtree     1.3.6.1\
    \             1.3.6.1\n  vacmViewTreeFamilyMask        \"\"                  \"\
    \"\n  vacmViewTreeFamilyType        1 (included)        1 (included)\n  vacmViewTreeFamilyStorageType\
    \ anyValidStorageType anyValidStorageType\n  vacmViewTreeFamilyStatus      active\
    \              active\n   In addition it translates into the following \"restricted\"\
    \ entries\n   in the vacmViewTreeFamilyTable:\n                              \
    \  minimum-secure      semi-secure\n                                ----------------\
    \    ---------------\n  vacmViewTreeFamilyViewName    \"restricted\"        \"\
    restricted\"\n  vacmViewTreeFamilySubtree     1.3.6.1             1.3.6.1.2.1.1\n\
    \  vacmViewTreeFamilyMask        \"\"                  \"\"\n  vacmViewTreeFamilyType\
    \        1 (included)        1 (included)\n  vacmViewTreeFamilyStorageType anyValidStorageType\
    \ anyValidStorageType\n  vacmViewTreeFamilyStatus      active              active\n\
    \  vacmViewTreeFamilyViewName                        \"restricted\"\n  vacmViewTreeFamilySubtree\
    \                         1.3.6.1.2.1.11\n  vacmViewTreeFamilyMask           \
    \                 \"\"\n  vacmViewTreeFamilyType                            1\
    \ (included)\n  vacmViewTreeFamilyStorageType                     anyValidStorageType\n\
    \  vacmViewTreeFamilyStatus                          active\n  vacmViewTreeFamilyViewName\
    \                        \"restricted\"\n  vacmViewTreeFamilySubtree         \
    \                1.3.6.1.6.3.7.2.1\n  vacmViewTreeFamilyMask                 \
    \           \"\"\n  vacmViewTreeFamilyType                            1 (included)\n\
    \  vacmViewTreeFamilyStorageType                     anyValidStorageType\n  vacmViewTreeFamilyStatus\
    \                          active\n  vacmViewTreeFamilyViewName              \
    \          \"restricted\"\n  vacmViewTreeFamilySubtree                       \
    \  1.3.6.1.6.3.8.2.1\n  vacmViewTreeFamilyMask                            \"\"\
    \n  vacmViewTreeFamilyType                            1 (included)\n  vacmViewTreeFamilyStorageType\
    \                     anyValidStorageType\n  vacmViewTreeFamilyStatus        \
    \                  active\n  vacmViewTreeFamilyViewName                      \
    \  \"restricted\"\n  vacmViewTreeFamilySubtree                         1.3.6.1.6.3.9.2.1\n\
    \  vacmViewTreeFamilyMask                            \"\"\n  vacmViewTreeFamilyType\
    \                            1 (included)\n  vacmViewTreeFamilyStorageType   \
    \                  anyValidStorageType\n  vacmViewTreeFamilyStatus           \
    \               active\n"
- title: B.  Full Copyright Statement
  contents:
  - "B.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
