- title: __initial_text__
  contents:
  - '                  Generic Routing Encapsulation (GRE)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a protocol for encapsulation of an arbitrary\n\
    \   network layer protocol over another arbitrary network layer protocol.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A number of different proposals [RFC1234, RFC1226] currently\
    \ exist\n   for the encapsulation of one protocol over another protocol. Other\n\
    \   types of encapsulations [RFC1241, RFC1479] have been proposed for\n   transporting\
    \ IP over IP for policy purposes. This memo describes a\n   protocol which is\
    \ very similar to, but is more general than, the\n   above proposals.  In attempting\
    \ to be more general, many protocol\n   specific nuances have been ignored. The\
    \ result is that this proposal\n   may be less suitable for a situation where\
    \ a specific \"X over Y\"\n   encapsulation has been described.  It is the attempt\
    \ of this protocol\n   to provide a simple, general purpose mechanism which reduces\
    \ the\n   problem of encapsulation from its current O(n^2) size to a more\n  \
    \ manageable size. This memo purposely does not address the issue of\n   when\
    \ a packet should be encapsulated.  This memo acknowledges, but\n   does not address\
    \ problems such as mutual encapsulation [RFC1326].\n   In the most general case,\
    \ a system has a packet that needs to be\n   encapsulated and delivered to some\
    \ destination.  We will call this\n   the payload packet.  The payload is first\
    \ encapsulated in a GRE\n   packet.  The resulting GRE packet can then be encapsulated\
    \ in some\n   other protocol and then forwarded.  We will call this outer protocol\n\
    \   the delivery protocol. The algorithms for processing this packet are\n   discussed\
    \ later.\n   Finally this specification describes the intersection of GRE\n  \
    \ currently deployed by multiple vendors.\n   The keywords MUST, MUST NOT, MAY,\
    \ OPTIONAL, REQUIRED, RECOMMENDED,\n   SHALL, SHALL NOT, SHOULD, SHOULD NOT are\
    \ to be interpreted as defined\n   in RFC 2119 [RFC2119].\n"
- title: 2. Structure of a GRE Encapsulated Packet
  contents:
  - "2. Structure of a GRE Encapsulated Packet\n   A GRE encapsulated packet has the\
    \ form:\n    ---------------------------------\n    |                        \
    \       |\n    |       Delivery Header         |\n    |                      \
    \         |\n    ---------------------------------\n    |                    \
    \           |\n    |       GRE Header              |\n    |                  \
    \             |\n    ---------------------------------\n    |                \
    \               |\n    |       Payload packet          |\n    |              \
    \                 |\n    ---------------------------------\n   This specification\
    \ is generally concerned with the structure of the\n   GRE header, although special\
    \ consideration is given to some of the\n   issues surrounding IPv4 payloads.\n"
- title: 2.1. GRE Header
  contents:
  - "2.1. GRE Header\n   The GRE packet header has the form:\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |C|       Reserved0       | Ver |         Protocol Type         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      Checksum (optional)      |       Reserved1 (Optional)    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 2.2. Checksum Present (bit 0)
  contents:
  - "2.2. Checksum Present (bit 0)\n   If the Checksum Present bit is set to one,\
    \ then the Checksum and the\n   Reserved1 fields are present and the Checksum\
    \ field contains valid\n   information. Note that a compliant implementation MUST\
    \ accept and\n   process this field.\n"
- title: 2.3. Reserved0 (bits 1-12)
  contents:
  - "2.3. Reserved0 (bits 1-12)\n   A receiver MUST discard a packet where any of\
    \ bits 1-5 are non-zero,\n   unless that receiver implements RFC 1701. Bits 6-12\
    \ are reserved for\n   future use. These bits MUST be sent as zero and MUST be\
    \ ignored on\n   receipt.\n"
- title: 2.3.1. Version Number (bits 13-15)
  contents:
  - "2.3.1. Version Number (bits 13-15)\n   The Version Number field MUST contain\
    \ the value zero.\n"
- title: 2.4. Protocol Type (2 octets)
  contents:
  - "2.4. Protocol Type (2 octets)\n   The Protocol Type field contains the protocol\
    \ type of the payload\n   packet. These Protocol Types are defined in [RFC1700]\
    \ as \"ETHER\n   TYPES\" and in [ETYPES]. An implementation receiving a packet\n\
    \   containing a Protocol Type which is not listed in [RFC1700] or\n   [ETYPES]\
    \ SHOULD discard the packet.\n"
- title: 2.5. Checksum (2 octets)
  contents:
  - "2.5. Checksum (2 octets)\n   The Checksum field contains the IP (one's complement)\
    \ checksum sum of\n   the all the 16 bit words in the GRE header and the payload\
    \ packet.\n   For purposes of computing the checksum, the value of the checksum\n\
    \   field is zero. This field is present only if the Checksum Present bit\n  \
    \ is set to one.\n"
- title: 2.6. Reserved1 (2 octets)
  contents:
  - "2.6. Reserved1 (2 octets)\n   The Reserved1 field is reserved for future use,\
    \ and if present, MUST\n   be transmitted as zero. The Reserved1 field is present\
    \ only when the\n   Checksum field is present (that is, Checksum Present bit is\
    \ set to\n   one).\n"
- title: 3. IPv4 as a Payload
  contents:
  - "3. IPv4 as a Payload\n   When IPv4 is being carried as the GRE payload, the Protocol\
    \ Type\n   field MUST be set to 0x800.\n"
- title: 3.1. Forwarding Decapsulated IPv4 Payload Packets
  contents:
  - "3.1. Forwarding Decapsulated IPv4 Payload Packets\n   When a tunnel endpoint\
    \ decapsulates a GRE packet which has an IPv4\n   packet as the payload, the destination\
    \ address in the IPv4 payload\n   packet header MUST be used to forward the packet\
    \ and the TTL of the\n   payload packet MUST be decremented. Care should be taken\
    \ when\n   forwarding such a packet, since if the destination address of the\n\
    \   payload packet is the encapsulator of the packet (i.e., the other end\n  \
    \ of the tunnel), looping can occur. In this case, the packet MUST be\n   discarded.\n"
- title: 4. IPv4 as a Delivery Protocol
  contents:
  - "4. IPv4 as a Delivery Protocol\n   The IPv4 protocol 47 [RFC1700] is used when\
    \ GRE packets are\n   enapsulated in IPv4. See [RFC1122] for requirements relating\
    \ to the\n   delivery of packets over IPv4 networks.\n"
- title: 5. Interoperation with RFC 1701 Compliant Implementations
  contents:
  - "5. Interoperation with RFC 1701 Compliant Implementations\n   In RFC 1701, the\
    \ field described here as Reserved0 contained a number\n   of flag bits which\
    \ this specification deprecates. In particular, the\n   Routing Present, Key Present,\
    \ Sequence Number Present, and Strict\n   Source Route bits have been deprecated,\
    \ along with the Recursion\n   Control field. As a result, the GRE header will\
    \ never contain the\n   Key, Sequence Number or Routing fields specified in RFC\
    \ 1701.\n   There are, however, existing implementations of RFC 1701. The\n  \
    \ following sections describe correct interoperation with such\n   implementations.\n"
- title: 5.1. RFC 1701 Compliant Receiver
  contents:
  - "5.1. RFC 1701 Compliant Receiver\n   An implementation complying to this specification\
    \ will transmit the\n   Reserved0 field set to zero. An RFC 1701 compliant receiver\
    \ will\n   interpret this as having the Routing Present, Key Present, Sequence\n\
    \   Number Present, and Strict Source Route bits set to zero, and will\n   not\
    \ expect the RFC 1701 Key, Sequence Number or Routing fields to be\n   present.\n"
- title: 5.2. RFC 1701 Compliant Transmitter
  contents:
  - "5.2. RFC 1701 Compliant Transmitter\n   An RFC 1701 transmitter may set any of\
    \ the Routing Present, Key\n   Present, Sequence Number Present, and Strict Source\
    \ Route bits set to\n   one, and thus may transmit the RFC 1701 Key, Sequence\
    \ Number or\n   Routing fields in the GRE header. As stated in Section 5.3, a\
    \ packet\n   with non-zero bits in any of bits 1-5 MUST be discarded unless the\n\
    \   receiver implements RFC 1701.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   Security in a network using GRE should be relatively\
    \ similar to\n   security in a normal IPv4 network, as routing using GRE follows\
    \ the\n   same routing that IPv4 uses natively. Route filtering will remain\n\
    \   unchanged. However packet filtering requires either that a firewall\n   look\
    \ inside the GRE packet or that the filtering is done on the GRE\n   tunnel endpoints.\
    \ In those environments in which this is considered\n   to be a security issue\
    \ it may be desirable to terminate the tunnel at\n   the firewall.\n"
- title: 7. IANA Considerations
  contents:
  - "7. IANA Considerations\n   This section considers the assignment of additional\
    \ GRE Version\n   Numbers and Protocol Types.\n"
- title: 7.1.  GRE Version Numbers
  contents:
  - "7.1.  GRE Version Numbers\n   This document specifies GRE version number 0. GRE\
    \ version number 1 is\n   used by PPTP [RFC2637]. Additional GRE version numbers\
    \ are assigned\n   by IETF Consensus as defined in RFC 2434 [RFC2434].\n"
- title: 7.2.  Protocol Types
  contents:
  - "7.2.  Protocol Types\n   GRE uses an ETHER Type for the Protocol Type. New ETHER\
    \ TYPES are\n   assigned by Xerox Systems Institute [RFC1700].\n"
- title: 8. Acknowledgments
  contents:
  - "8. Acknowledgments\n   This document is derived from the original ideas of the\
    \ authors of\n   RFC 1701 and RFC 1702. Hitoshi Asaeda, Scott Bradner, Randy Bush,\n\
    \   Brian Carpenter, Bill Fenner, Andy Malis, Thomas Narten, Dave Thaler,\n  \
    \ Tim Gleeson and others provided many constructive and insightful\n   comments.\n"
- title: 9. Appendix -- Known Issues
  contents:
  - "9. Appendix -- Known Issues\n   This document specifies the behavior of currently\
    \ deployed GRE\n   implementations. As such, it does not attempt to address the\n\
    \   following known issues:\n   o Interaction Path MTU Discovery (PMTU) [RFC1191]\n\
    \     Existing implementations of GRE, when using IPv4 as the Delivery\n     Header,\
    \ do not implement Path MTU discovery and do not set the\n     Don't Fragment\
    \ bit in the Delivery Header.  This can cause large\n     packets to become fragmented\
    \ within the tunnel and reassembled at\n     the tunnel exit (independent of whether\
    \ the payload packet is using\n     PMTU).  If a tunnel entry point were to use\
    \ Path MTU discovery,\n     however, that tunnel entry point would also need to\
    \ relay ICMP\n     unreachable error messages (in particular the \"fragmentation\
    \ needed\n     and DF set\" code) back to the originator of the packet, which\
    \ is\n     not a requirement in this specification. Failure to properly relay\n\
    \     Path MTU information to an originator can result in the following\n    \
    \ behavior: the originator sets the don't fragment bit, the packet\n     gets\
    \ dropped within the tunnel, but since the originator doesn't\n     receive proper\
    \ feedback, it retransmits with the same PMTU, causing\n     subsequently transmitted\
    \ packets to be dropped.\n   o IPv6 as Delivery and/or Payload Protocol\n    \
    \ This specification describes the intersection of GRE currently\n     deployed\
    \ by multiple vendors. IPv6 as delivery and/or payload\n     protocol is not included\
    \ in the currently deployed versions of GRE.\n   o Interaction with ICMP\n   o\
    \ Interaction with the Differentiated Services Architecture\n   o Multiple and\
    \ Looping Encapsulations\n"
- title: 10. REFERENCES
  contents:
  - "10. REFERENCES\n   [ETYPES]  ftp://ftp.isi.edu/in-notes/iana/assignments/ethernet-\n\
    \             numbers\n   [RFC1122] Braden, R., \"Requirements for Internet hosts\
    \ -\n             communication layers\", STD 3, RFC 1122, October 1989.\n   [RFC1191]\
    \ Mogul, J. and S. Deering, \"Path MTU Discovery\", RFC 1191,\n             November\
    \ 1990.\n   [RFC1226] Kantor, B., \"Internet Protocol Encapsulation of AX.25\n\
    \             Frames\", RFC 1226, May 1991.\n   [RFC1234] Provan, D., \"Tunneling\
    \ IPX Traffic through IP Networks\",\n             RFC 1234, June 1991.\n   [RFC1241]\
    \ Woodburn, R. and D. Mills, \"Scheme for an Internet\n             Encapsulation\
    \ Protocol: Version 1\", RFC 1241, July 1991.\n   [RFC1326] Tsuchiya, P., \"Mutual\
    \ Encapsulation Considered Dangerous\",\n             RFC 1326, May 1992.\n  \
    \ [RFC1479] Steenstrup, M., \"Inter-Domain Policy Routing Protocol\n         \
    \    Specification: Version 1\", RFC 1479, July 1993.\n   [RFC1700] Reynolds,\
    \ J. and J. Postel, \"Assigned Numbers\", STD 2, RFC\n             1700, October\
    \ 1994.\n   [RFC1701] Hanks, S., Li, T., Farinacci, D. and P. Traina, \"Generic\n\
    \             Routing Encapsulation\", RFC 1701, October 1994.\n   [RFC1702] Hanks,\
    \ S., Li, T., Farinacci, D. and P. Traina, \"Generic\n             Routing Encapsulation\
    \ over IPv4 networks\", RFC 1702,\n             October 1994.\n   [RFC2119] Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n             Requirement Levels\"\
    , BCP 14, RFC 2119, March, 1997.\n   [RFC2408] Maughan, D., Schertler, M., Schneider,\
    \ M. and J.  Turner,\n             \"Internet Security Association and Key Management\
    \ Protocol\n             (ISAKMP)\", RFC 2408, November 1998.\n   [RFC2434] Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n             IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 2434,\n             October, 1998.\n   [RFC2637]\
    \ Hamzeh, K., et al., \"Point-to-Point Tunneling Protocol\n             (PPTP)\"\
    , RFC 2637, July, 1999.\n"
- title: 11.  Authors' Addresses
  contents:
  - "11.  Authors' Addresses\n   Dino Farinacci\n   Procket Networks\n   3850 No.\
    \ First St., Ste. C\n   San Jose, CA 95134\n   EMail: dino@procket.com\n   Tony\
    \ Li\n   Procket Networks\n   3850 No. First St., Ste. C\n   San Jose, CA 95134\n\
    \   Phone: +1 408 954 7903\n   Fax:   +1 408 987 6166\n   EMail: tony1@home.net\n\
    \   Stan Hanks\n   Enron Communications\n   EMail: stan_hanks@enron.net\n   David\
    \ Meyer\n   Cisco Systems, Inc.\n   170 Tasman Drive\n   San Jose, CA, 95134\n\
    \   EMail: dmm@cisco.com\n   Paul Traina\n   Juniper Networks\n   EMail: pst@juniper.net\n"
- title: 12.  Full Copyright Statement
  contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
