- contents:
  - " Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH)\n                  Circuit
    Emulation over Packet (CEP)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document provides encapsulation formats and semantics for\n
    \  emulating Synchronous Optical Network/Synchronous Digital Hierarchy\n   (SONET/SDH)
    circuits and services over MPLS.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  4\n   2.  Scope  . . . . . . . . . . . . . . . . . . . . . . . .
    . . . .  4\n   3.  Requirements Notation  . . . . . . . . . . . . . . . . . .
    . .  4\n   4.  Acronyms . . . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 4\n   5.  CEP Encapsulation Format . . . . . . . . . . . . . . . . . . .  5\n
    \    5.1.  SONET/SDH Fragment . . . . . . . . . . . . . . . . . . . .  6\n     5.2.
    \ CEP Header . . . . . . . . . . . . . . . . . . . . . . . .  7\n     5.3.  RTP
    Header . . . . . . . . . . . . . . . . . . . . . . . .  9\n     5.4.  PSN Encapsulation
    \ . . . . . . . . . . . . . . . . . . . . 11\n   6.  CEP Operation  . . . . .
    . . . . . . . . . . . . . . . . . . . 11\n     6.1.  CEP Packetizer and De-Packetizer
    . . . . . . . . . . . . . 11\n     6.2.  Packet Synchronization . . . . . . .
    . . . . . . . . . . . 12\n       6.2.1.  Acquisition of Packet Synchronization
    \ . . . . . . . . 13\n       6.2.2.  Loss of Packet Synchronization . . . . .
    . . . . . . . 13\n   7.  SONET/SDH Maintenance Signals  . . . . . . . . . . .
    . . . . . 13\n     7.1.  SONET/SDH to PSN . . . . . . . . . . . . . . . . . .
    . . . 13\n       7.1.1.  CEP-AIS: AIS-P/V Indication  . . . . . . . . . . . .
    . 13\n       7.1.2.  Unequipped Indication  . . . . . . . . . . . . . . . . 14\n
    \      7.1.3.  CEP-RDI: Remote Defect Indication  . . . . . . . . . . 15\n     7.2.
    \ PSN to SONET/SDH . . . . . . . . . . . . . . . . . . . . . 15\n       7.2.1.
    \ CEP-AIS: AIS-P/V Indication  . . . . . . . . . . . . . 15\n       7.2.2.  Unequipped
    Indication  . . . . . . . . . . . . . . . . 16\n   8.  SONET/SDH Transport Timing
    . . . . . . . . . . . . . . . . . . 16\n   9.  SONET/SDH Pointer Management .
    . . . . . . . . . . . . . . . . 17\n     9.1.  Explicit Pointer Adjustment Relay
    (EPAR) . . . . . . . . . 17\n     9.2.  Adaptive Pointer Management (APM)  . .
    . . . . . . . . . . 19\n   10. CEP Performance Monitors . . . . . . . . . . .
    . . . . . . . . 19\n     10.1. Near-End Performance Monitors  . . . . . . . .
    . . . . . . 19\n     10.2. Far-End Performance Monitors . . . . . . . . . . .
    . . . . 20\n   11. Payload Compression Options  . . . . . . . . . . . . . . .
    . . 20\n     11.1. Dynamic Bandwidth Allocation . . . . . . . . . . . . . . .
    21\n     11.2. Service-Specific Payload Formats . . . . . . . . . . . . . 21\n
    \      11.2.1. Fractional STS-1 (VC-3) Encapsulation  . . . . . . . . 21\n         11.2.1.1.
    \ Fractional STS-1 CEP Header . . . . . . . . . . . 23\n         11.2.1.2.  B3
    Compensation . . . . . . . . . . . . . . . . . 24\n         11.2.1.3.  Actual
    Payload Size . . . . . . . . . . . . . . . 24\n       11.2.2. Asynchronous T3/E3
    STS-1 (VC-3) Encapsulation  . . . . 25\n         11.2.2.1.  T3 Payload Compression
    \ . . . . . . . . . . . . . 25\n         11.2.2.2.  E3 Payload Compression  .
    . . . . . . . . . . . . 26\n       11.2.3. Fractional VC-4 Encapsulation  . .
    . . . . . . . . . . 26\n         11.2.3.1.  Fractional VC-4 Mapping . . . . .
    . . . . . . . . 27\n         11.2.3.2.  Fractional VC-4 CEP Header  . . . . .
    . . . . . . 28\n         11.2.3.3.  B3 Compensation . . . . . . . . . . . . .
    . . . . 29\n         11.2.3.4.  Actual Payload Sizes  . . . . . . . . . . . .
    . . 30\n   12. Signaling of CEP Pseudowires . . . . . . . . . . . . . . . . .
    30\n     12.1. CEP/TDM Payload Bytes  . . . . . . . . . . . . . . . . . . 31\n
    \    12.2. CEP/TDM Bit Rate . . . . . . . . . . . . . . . . . . . . . 31\n     12.3.
    CEP Options  . . . . . . . . . . . . . . . . . . . . . . . 32\n   13. Congestion
    Control . . . . . . . . . . . . . . . . . . . . . . 34\n   14. Security Considerations
    \ . . . . . . . . . . . . . . . . . . . 34\n   15. IANA Considerations  . . .
    . . . . . . . . . . . . . . . . . . 35\n   16. Acknowledgments  . . . . . . .
    . . . . . . . . . . . . . . . . 35\n   17. Co-Authors . . . . . . . . . . . .
    . . . . . . . . . . . . . . 35\n   Appendix A.  SONET/SDH Rates and Formats .
    . . . . . . . . . . . . 36\n   Appendix B.  Example Network Diagrams  . . . .
    . . . . . . . . . . 37\n   18. References . . . . . . . . . . . . . . . . . .
    . . . . . . . . 40\n     18.1. Normative References . . . . . . . . . . . . .
    . . . . . . 40\n     18.2. Informative References . . . . . . . . . . . . . .
    . . . . 41\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document provides encapsulation formats and semantics
    for\n   emulating SONET/SDH circuits and services over MPLS.\n"
  title: 1.  Introduction
- contents:
  - "2.  Scope\n   The generic requirements and architecture for Pseudowire Emulation\n
    \  Edge-to-Edge (PWE3) are described in [PWE3-REQ] and [PWE3-ARCH].\n   Additional
    requirements for emulation of SONET/SDH and lower-rate TDM\n   circuits are described
    in [PWE3-TDM-REQ].\n   This document provides encapsulation formats and semantics
    for\n   emulating SONET/SDH circuits and services over MPLS packet-switched\n
    \  networks (PSNs).  Emulation of the following digital signals are\n   defined:\n
    \  1.  Synchronous Payload Envelope (SPE)/Virtual Container (VC-n): STS-\n       1/VC-3,
    STS-3c/VC-4, STS-12c/VC-4-4c, STS-48c/VC-4-16c, STS-192c/\n       VC-4-64c, etc.\n
    \  2.  Virtual Tributary (VT)/Virtual Container (VC-n): VT1.5/VC-11,\n       VT2/VC-12,
    VT3, VT6/VC-2\n   For the remainder of this document, these constructs are referred
    to\n   as SONET/SDH channels.\n"
  title: 2.  Scope
- contents:
  - "3.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 3.  Requirements Notation
- contents:
  - "4.  Acronyms\n   ADM    Add Drop Multiplexer\n   AIS    Alarm Indication Signal\n
    \  APM    Adaptive Pointer Management\n   AU-n   Administrative Unit-n (SDH)\n
    \  AUG    Administrative Unit Group (SDH)\n   BIP    Bit Interleaved Parity\n
    \  BITS   Building Integrated Timing Supply\n   CEP    Circuit Emulation over
    Packet\n   DBA    Dynamic Bandwidth Allocation\n   EBM    Equipped Bit Mask\n
    \  EPAR   Explicit Pointer Adjustment Relay\n   LOF    Loss of Frame\n   LOS    Loss
    of Signal\n   LTE    Line Terminating Equipment\n   POH    Path Overhead\n   PSN
    \   Packet Switched Network\n   PTE    Path Terminating Equipment\n   PW     Pseudowire\n
    \  RDI    Remote Defect Indication\n   SDH    Synchronous Digital Hierarchy\n
    \  SONET  Synchronous Optical Network\n   SPE    Synchronous Payload Envelope\n
    \  STM-n  Synchronous Transport Module-n (SDH)\n   STS-n  Synchronous Transport
    Signal-n (SONET)\n   TDM    Time Division Multiplexing\n   TOH    Transport Overhead\n
    \  TU-n   Tributary Unit-n (SDH)\n   TUG-n  Tributary Unit Group-n (SDH)\n   UNEQ
    \  Unequipped\n   VC-n   Virtual Container-n (SDH)\n   VT     Virtual Tributary
    (SONET)\n   VTG    Virtual Tributary Group (SONET)\n"
  title: 4.  Acronyms
- contents:
  - "5.  CEP Encapsulation Format\n   In order to transport SONET/SDH circuits through
    a packet-oriented\n   network, the SPE (or VT) is broken into fragments, and a
    CEP header\n   and optionally an RTP header are prepended to each fragment.\n
    \  The basic CEP packet appears in Figure 1.\n                +-----------------------------------+\n
    \               |   PSN and Multiplexing Layer      |\n                |             Headers
    \              |\n                +-----------------------------------+\n                |
    \          CEP Header              |\n                +-----------------------------------+\n
    \               |           RTP Header              |\n                |           (RFC
    3550)              |\n                +-----------------------------------+\n
    \               |                                   |\n                |                                   |\n
    \               |           SONET/SDH               |\n                |            Fragment
    \              |\n                |                                   |\n                |
    \                                  |\n                +-----------------------------------+\n
    \                       Figure 1: Basic CEP Packet\n"
  title: 5.  CEP Encapsulation Format
- contents:
  - "5.1.  SONET/SDH Fragment\n   The SONET/SDH fragments MUST be byte aligned with
    the SONET/SDH SPE\n   or VT.  The first bit received from each byte of the SONET/SDH
    MUST\n   be the Most Significant Bit of each byte in the SONET/SDH fragment.\n
    \  SONET/SDH bytes are placed into the SONET/SDH fragment in the same\n   order
    in which they are received.\n   SONET/SDH optical interfaces use binary coding
    and therefore are\n   scrambled prior to transmission to ensure an adequate number
    of\n   transitions.  For clarity, this scrambling is referred to as physical\n
    \  layer scrambling/descrambling.\n   In addition, many payload formats (such
    as for Asynchronous Transfer\n   Mode (ATM) and High-Level Data Link Control (HDLC))
    include an\n   additional layer of scrambling to provide protection against\n
    \  transition density violations within the SPEs.  This function is\n   referred
    to as payload scrambling/unscrambling.\n   CEP assumes that physical layer scrambling/unscrambling
    occurs as\n   part of the SONET/SDH section/line termination Native Service\n
    \  Processing (NSP) functions.\n   However, CEP makes no assumption about payload
    scrambling.  The\n   SONET/SDH fragments MUST be constructed without knowledge
    or\n   processing of any incidental payload scrambling.\n   CEP implementations
    MUST include the H3 (or V3) byte in the SONET/SDH\n   fragment during negative
    pointer adjustment events, and MUST remove\n   the stuff byte from the SONET/SDH
    fragment during positive pointer\n   adjustment events.\n   VT emulation implementations
    MUST NOT carry the VT pointer bytes V1,\n   V2, V3, and V4 as part of the CEP
    payload.  The only exception is the\n   carriage of V3 during negative pointer
    adjustment as described above.\n   All CEP SPE implementations MUST support a
    packet size of 783 bytes\n   and MAY support other packet sizes.\n   VT emulation
    implementations MUST support payload size of full VT\n   super-frame, and MAY
    support 1/2 and 1/4 VT super-frame payload\n   sizes.\n   Table 1 below describes
    single super-frame payload size per VT type.\n                      +-------------+--------------+\n
    \                     | VT type     | Size (Bytes) |\n                      +-------------+--------------+\n
    \                     | VT1.5/VC-11 |      104     |\n                      |
    VT2/VC-12   |      140     |\n                      | VT3         |      212     |\n
    \                     | VT6/VC-2    |      428     |\n                      +-------------+--------------+\n
    \                  Table 1: VT Super-Frame Payload Sizes\n   OPTIONAL SONET/SDH
    Fragment formats have been defined to reduce the\n   bandwidth requirements of
    the emulated SONET/SDH circuits under\n   certain conditions.  These OPTIONAL
    formats are included in\n   Section 11.\n"
  title: 5.1.  SONET/SDH Fragment
- contents:
  - "5.2.  CEP Header\n   The CEP header supports both a basic and extended mode.
    \ The Basic\n   CEP header provides the minimum functionality necessary to accurately\n
    \  emulate a SONET/SDH circuit over a PSN.  Extended headers are\n   utilized
    for some of the OPTIONAL SONET/SDH fragment formats\n   described in Section 11.\n
    \  Enhanced functionality and commonality with other real-time Internet\n   applications
    is provided by RTP encapsulation.\n   The CEP header has the following format:\n
    \      0                   1                   2                   3\n       0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0|0|0|L|R|N|P|FRG|Length[0:5]|    Sequence Number[0:15]      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |               Reserved                |Structure Pointer[0:11]|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                       Figure 2: CEP Header Format\n   L bit:  CEP-AIS.  This
    bit MUST be set to 1 to signal to the\n      downstream PE that a failure condition
    has been detected on the\n      attachment circuit.  Failure conditions leading
    to generation of\n      CEP-AIS and the mapping of CEP-AIS signal on the downstream\n
    \     attachment circuit are described in Section 7.\n   R bit:  CEP-RDI.  This
    bit MUST be set to 1 to signal to the upstream\n      PE that a loss of packet
    synchronization has occurred.  This bit\n      MUST be set to 0 once packet synchronization
    is acquired.  See\n      Section 6.2 for details.\n   N and P bits:  These bits
    are used to explicitly relay negative and\n      positive pointer adjustments
    events across the PSN.  The use of N\n      and P bits is OPTIONAL.  If not used,
    N and P bits MUST be set to\n      0.  See Section 9 for details.\n      Table
    2 describes the interpretation of N and P bits settings.\n                  +---+---+-----------------------------+\n
    \                 | N | P | Interpretation              |\n                  +---+---+-----------------------------+\n
    \                 | 0 | 0 | No Pointer Adjustments      |\n                  |
    0 | 1 | Positive Pointer Adjustment |\n                  | 1 | 0 | Negative Pointer
    Adjustment |\n                  | 1 | 1 | Loss of Pointer Alarm       |\n                  +---+---+-----------------------------+\n
    \                 Table 2: Interpretation of N and P Bits\n   FRG bits:  FRG bits
    MUST be set to 0 by sender and ignored by\n      receiver.\n      SONET data is
    continuously fragmented into packets.  The structure\n      pointer field designates
    the offset between the SONET SPE or VT\n      structure and the packet boundary.\n
    \  Length [0:5]:  The Length field, if other than zero, indicates the\n      length
    of the CEP header, plus the length of the RTP header if\n      used, plus the
    length of the payload.  The Length field MUST be\n      set if the length of CEP
    header plus RTP header if used, plus\n      payload is less than or equal to 64
    bytes and MUST be set to 0\n      otherwise.  In particular, if the payload is
    suppressed (e.g.,\n      DBA) the Length field MUST be set to the CEP header length
    plus\n      the RTP header length if used.\n   Sequence Number [0:15]:  The packet
    sequence number MUST continuously\n      cycle from 0 to 0xFFFF.  It is generated
    and processed in\n      accordance with the rules established in [RTP].\n   Structure
    Pointer [0:11]:  The structure pointer MUST contain the\n      offset of the first
    byte of the SONET structure within the packet\n      payload.  For SPE emulation,
    the structure pointer locates the J1\n      byte within the CEP packet.  For VT
    emulation, the structure\n      pointer locates the V5 byte within the packet.
    \ The structure\n      pointer value ranges between 0 to 0xFFE, where 0 represents
    the\n      first byte after the CEP header.  The structure pointer MUST be\n      set
    to 0xFFF if a packet does not carry the J1 (or V5) byte.  An\n      arbitrary
    pointer change (New Data Flag (NDF) event) in the\n      attachment circuit changes
    the offset of the SONET structure\n      within the CEP packet and therefore changes
    the structure pointer\n      value.\n   Reserved field:  The reserved field MUST
    be set to 0 by the sender\n      and ignored by receiver.\n"
  title: 5.2.  CEP Header
- contents:
  - "5.3.  RTP Header\n   Usage of the RTP header is OPTIONAL.  Although CEP MAY employ
    an RTP\n   header when explicit transfer of timing information is required, this\n
    \  is purely a formal reuse of the header format.  RTP mechanisms, such\n   as
    header extensions, contributing source (CSRC) list, padding, RTP\n   Control Protocol
    (RTCP), RTP header compression, Secure Realtime\n   Transport Protocol (SRTP),
    etc., are not applicable to pseudowires.\n   CEP uses the RTP Header as shown
    below.\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |V=2|P|X|  CC   |M|     PT      |       Sequence Number         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                           Timestamp                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |           Synchronization Source (SSRC) Identifier            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                          Figure 3: RTP Header\n   V: Version.  The Version field
    MUST be set to 2.\n   P: Padding.  No padding is required.  The P bit MUST be
    set to 0 by\n      sender and ignored by receiver.\n   X: Header extension.  No
    extensions are defined.  The X bit MUST be\n      set to 0 by sender and ignored
    by receiver.\n   CC:  CSRC count.  The CC field MUST be set to 0 by sender and
    ignored\n      by receiver.\n   M: Marker.  The M bit MUST be set to 0 by sender
    and ignored by\n      receiver.\n   PT [0:6]:  Payload type.  A PT value SHOULD
    be allocated from the\n      range of dynamic values for each direction of the
    PW.  The same PT\n      value MAY be reused both for direction and between different
    CEP\n      PWs.\n   Sequence Number [0:15]:  The packet sequence number MUST continuously\n
    \     cycle from 0 to 0xFFFF.  It is generated and processed in\n      accordance
    with the rules established in [RTP].  The CEP receiver\n      MUST sequence packets
    according to the Sequence Number field of\n      the CEP header and MAY verify
    correct sequencing using RTP\n      Sequence Number field.\n   Timestamp [0:31]:
    \ Timestamp values are used in accordance with the\n      rules established in
    [RTP].  Frequency of the clock used for\n      generating timestamps MUST be 19.44
    MHz based on a local\n      reference.\n   SSRC [0:31]:  Synchronization source.
    \ The SSRC field MAY be used for\n      detection of misconnections.\n"
  title: 5.3.  RTP Header
- contents:
  - "5.4.  PSN Encapsulation\n   This document defines the transport of CEP over MPLS
    PSNs.  The\n   bottom label in the MPLS label stack MUST be used to de-multiplex\n
    \  individual CEP channels.  In keeping with the conventions used in\n   [PWE3-CONTROL],
    this de-multiplexing label is referred to as the PW\n   Label and the upper labels
    are referred to as Tunnel Labels.  The CEP\n   header follows the generic PWE3
    Control Word format specified in\n   [PWE3-MPLSCW] for use over an MPLS PSN.\n
    \  Transport of CEP over other PSN technologies is out of scope of this\n   document.\n"
  title: 5.4.  PSN Encapsulation
- contents:
  - "6.  CEP Operation\n   A CEP implementation MUST support a normal mode of operation
    and MAY\n   support additional bandwidth conserving modes as described in\n   Section
    11.  During normal operation, SONET/SDH payloads are\n   fragmented, prepended
    with the appropriate headers, and then\n   transmitted into the packet network.\n"
  title: 6.  CEP Operation
- contents:
  - "6.1.  CEP Packetizer and De-Packetizer\n   As with all adaptation functions,
    CEP has two distinct components:\n   adapting TDM SONET/SDH into a CEP packet
    stream, and converting the\n   CEP packet stream back into a TDM SONET/SDH.  The
    first function is\n   referred to as CEP packetizer or sender and the second as
    CEP de-\n   packetizer or receiver.  This terminology is illustrated below.\n
    \               +------------+              +---------------+\n                |
    \           |              |               |\n      SONET --> |    CEP     | -->
    PSN  --> |      CEP      | --> SONET\n       SDH      | Packetizer |              |
    De-Packetizer |      SDH\n                |            |              |               |\n
    \               +------------+              +---------------+\n                   (sender)
    \                   (receiver)\n                         Figure 4: CEP Terminology\n
    \  The CEP de-packetizer requires a buffering mechanism to account for\n   delay
    variation in the CEP packet stream.  This buffering mechanism\n   is generically
    referred to as the CEP jitter buffer.\n   During normal operation, the CEP packetizer
    receives a fixed-rate\n   byte stream from a SONET/SDH interface.  When a packet
    worth of data\n   is received from a SONET/SDH channel, the necessary headers
    are\n   prepended to the SPE fragment and the resulting CEP packet is\n   transmitted
    into the packet network.  Because all CEP packets\n   associated with a specific
    SONET/SDH channel have the same length,\n   the transmission of CEP packets for
    that channel SHOULD occur at\n   regular intervals.\n   At the far end of the
    packet network, the CEP de-packetizer receives\n   packets into a jitter buffer
    and then plays out the received byte\n   stream at a fixed rate onto the corresponding
    SONET/SDH channel.  The\n   jitter buffer SHOULD be adjustable in length to account
    for varying\n   network delay behavior.  On average, the receive packet rate from
    the\n   packet network should be balanced by the transmission rate onto the\n
    \  SONET/SDH channel.\n   The CEP sequence numbers provide a mechanism to detect
    lost and/or\n   misordered packets.  The sequence number in the CEP header MUST
    be\n   used when transmission of the RTP header is suppressed.  The CEP de-\n
    \  packetizer MUST detect lost or misordered packets.  The CEP de-\n   packetizer
    SHOULD play out an all-ones pattern (AIS) in place of any\n   dropped packets.
    \ The CEP de-packetizer SHOULD re-order packets\n   received out of order.  If
    the CEP de-packetizer does not support re-\n   ordering, it MUST drop misordered
    packets.\n"
  title: 6.1.  CEP Packetizer and De-Packetizer
- contents:
  - "6.2.  Packet Synchronization\n   A key component in declaring the state of a
    CEP service is whether or\n   not the CEP de-packetizer is in or out of packet
    synchronization.\n   The following paragraphs describe how that determination
    is made.\n   As packets are received from the PSN, they are placed into a jitter\n
    \  buffer prior to play out on the SONET/SDH interface.  If a CEP de-\n   packetizer
    supports re-ordering, any packet received before its play\n   out time will still
    be considered valid.\n   The determination of acquisition or loss of packet synchronization
    is\n   always made at SONET/SDH play out time.  During SONET/SDH play out,\n   the
    CEP de-packetizer will play received CEP packets onto the SONET/\n   SDH interface.
    \ However, if the jitter buffer is empty or the packet\n   to be played out has
    not been received, the CEP de-packetizer will\n   play out an 'empty packet' composed
    of an all-ones AIS pattern onto\n   the SONET/SDH interface in place of the unavailable
    packet.\n   The acquisition of packet synchronization is based on the number of\n
    \  sequential CEP packets that are played onto the SONET/SDH interface.\n   Loss
    of packet synchronization is based on the number of sequential\n   'empty' packets
    that are played onto the SONET/SDH interface.\n   Specific details of these two
    cases are described below.\n"
  title: 6.2.  Packet Synchronization
- contents:
  - "6.2.1.  Acquisition of Packet Synchronization\n   At startup, a CEP de-packetizer
    will be out of packet synchronization\n   by default.  To declare packet synchronization
    at startup or after a\n   loss of packet synchronization, the CEP de-packetizer
    must play out a\n   configurable number of CEP packets with sequential sequence
    numbers\n   towards the SONET/SDH interface.\n"
  title: 6.2.1.  Acquisition of Packet Synchronization
- contents:
  - "6.2.2.   Loss of Packet Synchronization\n   Once a CEP de-packetizer is in packet
    synchronization state, it may\n   encounter a set of events that will cause it
    to lose packet\n   synchronization.\n   If the CEP de-packetizer encounters more
    than a configurable number\n   of sequential empty packets, the CEP de-packetizer
    MUST declare a\n   Loss of Packet Synchronization (LOPS) defect.\n   LOPS failure
    is declared after 2.5 +/- 0.5 seconds of LOPS defect,\n   and cleared after 10
    seconds free of LOPS defect state.  The circuit\n   is considered down as long
    as LOPS failure is declared.\n"
  title: 6.2.2.   Loss of Packet Synchronization
- contents:
  - "7.  SONET/SDH Maintenance Signals\n   This section describes the mapping of maintenance
    and alarm signals\n   between the SONET/SDH network and the CEP pseudowire.  For
    clarity,\n   the mappings are split into two groups: SONET/SDH to PSN, and PSN
    to\n   SONET/SDH.\n   For coherent failure detection, isolation, monitoring, and\n
    \  troubleshooting, SONET/SDH failure indications MUST be transferred\n   correctly
    over the CEP pseudowire, and CEP connection failures MUST\n   be mapped to SONET/SDH
    SPE/VT failure indications.  Failure detection\n   capabilities and performance
    monitoring capabilities are dependent on\n   the NSP functionality, e.g., LTE,
    PTE, Tandem Connection Monitoring\n   [G.707], or Non-intrusive Monitoring (intermediate
    connection\n   monitoring).\n"
  title: 7.  SONET/SDH Maintenance Signals
- contents:
  - "7.1.  SONET/SDH to PSN\n   The following sections describe the mapping of SONET/SDH
    Maintenance\n   Signals and Alarm conditions into CEP pseudowire indications.\n"
  title: 7.1.  SONET/SDH to PSN
- contents:
  - "7.1.1.  CEP-AIS: AIS-P/V Indication\n   SONET/SDH Path outages are signaled by
    using maintenance alarms such\n   as Path AIS (AIS-P).  AIS-P, in particular,
    indicates that the SONET/\n   SDH Path is not currently transmitting valid end-user
    data, and the\n   SPE contains all ones.  Similarly, AIS-V indicates that the
    VT is not\n   currently transmitting valid end-user data, and the VT contains
    all\n   ones.\n   It should be noted that nearly every type of service-affecting\n
    \  section or line defect would result in an AIS-P/V condition.\n   The mapping
    of SONET/SDH failures into the SPE/VT layer is considered\n   part of the NSP
    function and is based on the principles specified in\n   [GR253], [SONET], [G.707],
    [G.806], and [G.783].  For example, should\n   the SONET Section Layer detect
    a Loss of Signal (LOS) or Loss of\n   Frame (LOF) or Section Trace Mismatch (TIM)
    conditions, an AIS-L is\n   sent up to the Line Layer.  If the Line Layer detects
    AIS-L or Loss\n   of Pointer (LOP), an AIS-P is sent to the Path Layer.  If the
    Path is\n   terminated at the PE (i.e., a PTE) and the Path Layer detects AIS-P\n
    \  or UNEQ-P or TIM-P or PLM-P an AIS-V is sent to the VT Layer.\n   The AIS-P/V
    indication is transferred to the CEP packetizer.  During\n   AIS-P/V, CEP packets
    are generated as usual.  The L bit in the CEP\n   header MUST be set to 1 to signal
    AIS-P/V explicitly through the\n   packet network.  The N and P bits SHOULD be
    set to 1 to indicate loss\n   of pointer indication.\n   If DBA has been enabled
    for AIS-P/V, only the necessary headers and\n   optional padding are transmitted
    into the packet network.  The Length\n   field MUST be set to the size of the
    CEP header plus the size of the\n   RTP header if used.\n"
  title: '7.1.1.  CEP-AIS: AIS-P/V Indication'
- contents:
  - "7.1.2.  Unequipped Indication\n   Unequipped indication is used for bandwidth
    conserving modes defined\n   in Section 11 as a trigger for payload removal.\n
    \  The declaration of the SPE/VT channel as Unequipped MUST conform to\n   [GR253],
    [SONET], [G.806], and [G.783].  Unequipped circuits do not\n   carry valid end-user
    data, but MAY be used for transporting valid\n   information in the SPE/VT overhead
    bytes.  Supervisory Unequipped\n   signals and Tandem Connection transport are
    two such applications:\n      Supervisory Unequipped signal (called TEST-P in
    [SONET]) is used\n      to provide a test signal for pre-service testing or in-service\n
    \     supervision of a path connection to a remote PTE from a PTE or an\n      intermediate
    non-terminating path network element.  Both\n      Unequipped and Supervisory
    Unequipped signals carry Unequipped\n      Signal Label defined to be zero.  To
    distinguish between\n      Unequipped and Supervisory Unequipped signals, [G.806]
    recommends\n      that the SPE/VT Trace bytes J1/J2 be set to a non-zero value
    in\n      Supervisory Unequipped signals.\n      The SPE/VT overhead bytes N1/Z6
    (SDH refers to Z6 as N2)\n      optionally transport Tandem Connection signals
    between\n      intermediate network elements.  Unequipped signals transporting\n
    \     Tandem Connection would have non-zero N1 or N2/Z6 bytes.\n   Therefore,
    the CEP packetizer MUST declare a circuit unequipped only\n   if the Signal Label,
    Trace (J1/J2), and Tandem Connection (N1/N2/Z6)\n   bytes all have zero value.\n
    \  During SPE/VT Unequipped, the N and P bits MUST be interpreted as\n   usual.
    \ The SPE/VT MUST be transmitted into the packet network along\n   with the appropriate
    headers.\n   If DBA has been enabled for Unequipped SPE/VT, only the necessary\n
    \  headers and optional padding are transmitted into the packet network.\n   The
    Length field MUST be set to the size of the CEP header plus the\n   size of the
    RTP header if used.  The N and P bits MAY be used to\n   signal pointer adjustments
    as normal.\n"
  title: 7.1.2.  Unequipped Indication
- contents:
  - "7.1.3.  CEP-RDI: Remote Defect Indication\n   The CEP function MUST send CEP-RDI
    indication towards the packet\n   network during loss of packet synchronization
    by setting the R bit to\n   one in the CEP header.  The CEP function SHOULD clear
    the R bit once\n   packet synchronization is restored.\n"
  title: '7.1.3.  CEP-RDI: Remote Defect Indication'
- contents:
  - "7.2.  PSN to SONET/SDH\n   The following sections describe the mapping of pseudowire
    indications\n   to SONET/SDH Maintenance Signals and Alarm conditions.\n"
  title: 7.2.  PSN to SONET/SDH
- contents:
  - "7.2.1.  CEP-AIS: AIS-P/V Indication\n   There are several conditions in the packet
    network that cause the CEP\n   de-packetization function to play out an AIS-P/V
    indication towards a\n   SONET/SDH channel.  The CEP de-packetizer MUST play out
    one packet's\n   worth of all ones for each packet received, and MUST set the
    SONET/\n   SDH Overhead to signal AIS-P/V as defined in [SONET], [GR253], and\n
    \  [G.707].\n   The first of these is the receipt of CEP packets with the L bit
    set\n   to one indicating that the far end has detected an error leading to\n
    \  declaration of AIS-P/V alarm.  In addition to the play out of\n   AIS-P/V,
    the CEP de-packetizer SHOULD set the pointer value to all-\n   ones value.\n   The
    second case that will cause a CEP de-packetization function to\n   play out an
    AIS-P/V indication onto a SONET/SDH channel is during\n   loss of packet synchronization.\n
    \  The third case is the receipt of CEP packets with both the N and P\n   bits
    set to 1.  This is an explicit indication of Loss of Pointer\n   LOP-P/V received
    at the far-end of the packet network.  In addition\n   to play out of AIS-P/V,
    the CEP de-packetizer SHOULD set the pointer\n   value to all-ones value.\n"
  title: '7.2.1.  CEP-AIS: AIS-P/V Indication'
- contents:
  - "7.2.2.  Unequipped Indication\n   There are several conditions in the packet
    network that cause the CEP\n   function to transmit Unequipped indications onto
    the SONET/SDH\n   channel.\n   The first, which is transparent to CEP, is the
    receipt of regular CEP\n   packets that happen to carry an SPE/VT containing the
    appropriate\n   Path overhead or VT overhead set to Unequipped.  This case does
    not\n   require any special processing on the part of the CEP de-packetizer.\n
    \  The second case is the receipt of CEP packets with the Length field\n   indicating
    that the payload was removed by DBA, while the L bit is\n   set to 0, indicating
    that the DBA was triggered by an Unequipped\n   indication and not by an AIS-P/V
    indication.  The CEP de-packetizer\n   MUST use this information to transmit a
    packet of all zeros onto the\n   SONET/SDH interface.\n   The third case when
    a CEP de-packetizer MUST play out an SPE/VT\n   Unequipped indication towards
    the SONET/SDH interface is when the\n   circuit has been de-provisioned.\n"
  title: 7.2.2.  Unequipped Indication
- contents:
  - "8.  SONET/SDH Transport Timing\n   It is assumed that the distribution of SONET/SDH
    transport timing\n   information is addressed either through external mechanisms
    such as\n   Building Integrated Timing Supply (BITS), Stand Alone Synchronization\n
    \  Equipment (SASE), Global Positioning System (GPS), or other such\n   methods,
    or is obtained through an adaptive timing recovery\n   mechanism.\n   Details
    about specific adaptive algorithms for recovery of SONET/SDH\n   transport timing
    are not considered to be within scope for this\n   document.  The wander and jitter
    limits for networks based on the SDH\n   hierarchy are defined in [G.825] and
    for the SONET hierarchy in\n   [GR253].  The wander and jitter limits specified
    in these standards\n   must be maintained when CEP PWs are used.\n"
  title: 8.  SONET/SDH Transport Timing
- contents:
  - "9.  SONET/SDH Pointer Management\n   A pointer management system is defined as
    part of the definition of\n   SONET/SDH.  Details on SONET/SDH pointer management
    can be found in\n   [SONET], [GR253], [G.707], and [G.783].  If there is a frequency\n
    \  offset between the frame rate of the transport overhead and that of\n   the
    SONET/SDH SPE, the alignment of the SPE will periodically slip\n   back or advance
    in time through positive or negative stuffing.\n   Similarly, if there is a frequency
    offset between the SPE rate and\n   the VT rate it carries, the alignment of the
    VT will periodically\n   slip back or advance in time through positive or negative
    stuffing\n   within the SPE.\n   The emulation of this aspect of SONET/SDH networks
    may be\n   accomplished using a variety of techniques including Explicit Pointer\n
    \  Adjustment Relay (EPAR) and Adaptive Pointer Management (APM).\n   In any case,
    the handling of the SPE or VT data by the CEP packetizer\n   is the same.\n   During
    a negative pointer adjustment event, the CEP packetizer MUST\n   incorporate the
    H3 (or V3) byte from the SONET/SDH stream into the\n   CEP packet payload in order
    with the rest of the SPE (or VT).  During\n   a positive pointer adjustment event,
    the CEP packetizer MUST strip\n   the stuff byte from the CEP packet payload.\n
    \  When playing out a negative pointer adjustment event, the appropriate\n   byte
    of the CEP payload MUST be placed into the H3 (or V3) byte of\n   the SONET/SDH
    stream.  When playing out a positive pointer\n   adjustment, the CEP de-packetizer
    MUST insert a stuff byte into the\n   appropriate position within the SONET/SDH
    stream.\n   The details regarding the use of the H3 (and V3) byte and stuff byte\n
    \  during positive and negative pointer adjustments can be found in\n   [SONET],
    [GR253], and [G.707].\n"
  title: 9.  SONET/SDH Pointer Management
- contents:
  - "9.1.  Explicit Pointer Adjustment Relay (EPAR)\n   CEP provides an OPTIONAL mechanism
    to explicitly relay pointer\n   adjustment events from one side of the PSN to
    the other.  This\n   technique is referred to as Explicit Pointer Adjustment Relay
    (EPAR).\n   EPAR is only effective when both ends of the PW have access to a\n
    \  common timing reference.\n   The following text only applies to CEP implementations
    that choose to\n   implement EPAR.  Any CEP implementation that does not support
    EPAR\n   MUST set the N and P bits to 0.\n   The pointer adjustment event MUST
    be transmitted in three consecutive\n   packets by the packetizer.  The de-packetizer
    MUST play out the\n   pointer adjustment event when any one packet with N/P bit
    set is\n   received.  The CEP de-packetizer MUST utilize the CEP sequence\n   numbers
    to ensure that SONET/SDH pointer adjustment events are not\n   played any more
    frequently than once per every three CEP packets\n   transmitted by the remote
    CEP packetizer.\n   The VT EPAR packetizer MUST relay pointer adjustment indications\n
    \  received at the SPE level in addition to relaying VT pointer\n   adjustment
    indications.  Because of the rate differences between VT\n   and SPE, the magnitude
    of a VT pointer adjustment is much larger than\n   that of an SPE adjustment.
    \ Therefore, the VT EPAR packetizer has to\n   convert multiple SPE pointer adjustments
    to fewer VT pointer\n   adjustment indications signaled over the PSN using the
    N and P CEP\n   header bits.  A simple algorithm can be used for this purpose
    using\n   an accumulator (counter):\n      The accumulator value is reset to 0
    when the circuit is in Loss of\n      Packet Synchronization (LOPS) state.\n      A
    positive pointer adjustment indication increases the accumulator\n      value
    by a fixed quota, while negative pointer adjustment\n      subtracts the same
    quota from the accumulator.  A VT pointer\n      adjustment changes the accumulator
    value by 783 units (one STS-1\n      SPE size).  An SPE pointer adjustment changes
    the accumulator\n      value by quota that depends on the VT emulation type.  The
    quota\n      is 1/4 of the VT size as defined in Table 1, e.g., 26 bytes for\n
    \     VT1.5 emulation and 35 bytes for VT2 emulation.\n      When the accumulator
    value is larger than or equal to 783 units, a\n      positive pointer adjustment
    is signaled towards the PSN using the\n      CEP header P bit and 783 units are
    subtracted from the\n      accumulator.\n      When the accumulator value is smaller
    than or equal to minus 783\n      units, a negative pointer adjustment is signaled
    towards the PSN\n      using the CEP header N bit and 783 units are added to the\n
    \     accumulator.\n   The same algorithm is applicable for SDH Virtual Container
    carried in\n   VC-4, i.e., positive VC-4 pointer adjustment adds 35 units to a
    VC-12\n   accumulator, while positive VC-12 pointer adjustment adds 783 units\n
    \  to the accumulator.\n   If both N and P bits are set, then a Loss of Pointer
    event has been\n   detected at the PW ingress, making the pointer invalid.  The
    de-\n   packetizer MUST play out an AIS-P/V indication and SHOULD set the\n   pointer
    value to all-ones value.\n"
  title: 9.1.  Explicit Pointer Adjustment Relay (EPAR)
- contents:
  - "9.2.  Adaptive Pointer Management (APM)\n   Another OPTIONAL method that may
    be used to emulate SONET/SDH pointer\n   management is Adaptive Pointer Management
    (APM).  In basic terms, APM\n   uses information about the depth of the CEP jitter
    buffers to\n   introduce pointer adjustments in the reassembled SONET/SDH SPE.\n
    \  Details about specific APM algorithms are not considered to be within\n   scope
    for this document.\n"
  title: 9.2.  Adaptive Pointer Management (APM)
- contents:
  - "10.  CEP Performance Monitors\n   SONET/SDH as defined in [SONET], [GR253], [G.707],
    and [G.784]\n   includes a definition of several counters used to monitor the\n
    \  performance of SONET/SDH services.  These counters are referred to as\n   Performance
    Monitors.\n   In order for CEP to be utilized by traditional SONET/SDH network\n
    \  operators, CEP SHOULD provide similar functionality.  The following\n   sections
    describe a number of counters that are collectively referred\n   to as CEP Performance
    Monitors.\n"
  title: 10.  CEP Performance Monitors
- contents:
  - "10.1.  Near-End Performance Monitors\n   These performance monitors are maintained
    by the CEP de-packetizer\n   during reassembly of the SONET/SDH stream.\n   The
    performance monitors are based on two types of defects.\n      Type 1: missing
    or dropped packet.\n      Type 2: buffer underrun, buffer overrun, LOPS, missing
    packets\n              above predefined configurable threshold.\n   The specific
    performance monitors defined for CEP are as follows:\n      ES-CEP    - CEP Errored
    Seconds\n      SES-CEP   - CEP Severely Errored Seconds\n      UAS-CEP   - CEP
    Unavailable Seconds\n   Each second that contains at least one type 1 defect SHALL
    be\n   declared as ES-CEP.  Each second that contains at least one type 2\n   defect
    SHALL be declared as SES-CEP.\n   UAS-CEP SHALL be declared after configurable
    number of consecutive\n   SES-CEP, and cleared after a configurable number of
    consecutive\n   seconds without SES-CEP.  Default value for each is 10 seconds.\n
    \  Once unavailability is declared, ES and SES counts SHALL be inhibited\n   up
    to the point where the unavailability was started.  Once\n   unavailability is
    removed, ES and SES that occurred along the\n   clearing period SHALL be added
    to the ES and SES counts.\n   CEP-NE failure is declared after 2.5 +/- 0.5 seconds
    of CEP-NE type 2\n   defect, and cleared after 10 seconds free of CEP-NE defect
    state.\n   Sending notification to the OS for CEP-NE failure is local policy.\n"
  title: 10.1.  Near-End Performance Monitors
- contents:
  - "10.2.  Far-End Performance Monitors\n   Far-end performance monitors provide
    insight into the CEP de-\n   packetizer at the far end of the PSN.\n   Far-end
    statistics are based on the CEP-RDI indication carried in the\n   CEP header R
    bit.  CEP-FE defect is declared when CEP-RDI is set in\n   the incoming CEP packets.\n
    \  CEP-FE failure is declared after 2.5 +/- 0.5 seconds of CEP-FE\n   defect,
    and cleared after 10 seconds free of CEP-FE defect state.\n   Sending notification
    to the OS for CEP-FE failure is local policy.\n"
  title: 10.2.  Far-End Performance Monitors
- contents:
  - "11.  Payload Compression Options\n   In addition to pure emulation, CEP also
    offers a number of options\n   for reducing the total bandwidth utilized by the
    emulated circuit.\n   These options fall into two categories: Dynamic Bandwidth
    Allocation\n   (DBA) and Service-Specific Payload Formats.\n   DBA suppresses
    transmission of the CEP payload altogether under\n   certain circumstances such
    as AIS-P/V and SPE/VT Unequipped.  The use\n   of DBA is dependent on network
    architectures, e.g., support of Tandem\n   Connection Monitoring, test signals
    (TEST-P) [SONET], or Supervisory\n   Unequipped [G.806] signals.\n   Service-Specific
    Payload Formats reduce bandwidth by suppressing\n   transmission of portions of
    the SPE based on specific knowledge of\n   the SPE payload.\n   Details on these
    payload compression options are described in the\n   following subsections.\n"
  title: 11.  Payload Compression Options
- contents:
  - "11.1.  Dynamic Bandwidth Allocation\n   Dynamic Bandwidth Allocation (DBA) is
    an OPTIONAL mechanism for\n   suppressing the transmission of the SPE (or VT)
    fragment when one of\n   two trigger conditions are met, AIS-P/V or SPE/VT Unequipped.\n
    \  Implementations that support DBA MUST include a mechanism for\n   disabling
    DBA on a channel-by-channel basis to allow for\n   interoperability with implementations
    that do not support DBA.\n   When a DBA trigger is recognized at PW ingress, the
    CEP payload will\n   be suppressed.  The CEP Length field MUST be set to the CEP
    header\n   length plus the RTP header length if used, and padding bytes SHOULD\n
    \  be added if the intervening packet network has a minimum packet size\n   that
    is larger than the payload-suppressed DBA packet.\n   Other than the suppression
    of the CEP payload, the CEP behavior\n   during DBA should be equivalent to normal
    CEP behavior.  In\n   particular, the packet transmission rate during DBA should
    be\n   equivalent to the normal packet transmission rate.\n"
  title: 11.1.  Dynamic Bandwidth Allocation
- contents:
  - "11.2.  Service-Specific Payload Formats\n   In addition to the standard payload
    encapsulations for SPE and VT\n   transport, several OPTIONAL payload formats
    have been defined to\n   provide varying amounts of payload compression depending
    on the type\n   and amount of user traffic present within the SPE.  These are\n
    \  described below.\n"
  title: 11.2.  Service-Specific Payload Formats
- contents:
  - "11.2.1.  Fractional STS-1 (VC-3) Encapsulation\n   Fractional STS-1 (VC-3) encapsulation
    carries only a selected set of\n   VTs within an STS-1 container.  This mode is
    applicable for STS-1\n   with POH signal label byte C2=2 (VT-structured SPE) and
    for C2=3\n   (Locked VT mode).\n   Implementations of fractional STS-1 (VC-3)
    encapsulation MUST support\n   payload length of one SPE and MAY support payload
    length of 1/3 SPE.\n   The mapping of VTs into an STS-1 container is described
    in Section\n   3.2.4 of [GR253], and the mapping into VC-3 is defined in Section\n
    \  7.2.4 in [G.707].  The CEP packetizer removes all fixed column bytes\n   (columns
    30 and 59) and all bytes belonging to the removed VTs.  Only\n   STS-1 POH bytes
    and bytes that belong to the selected VTs are carried\n   within the payload.
    \ The CEP de-packetizer adds the fixed stuff bytes\n   and generates unequipped
    VT data replacing the removed VT bytes.\n   The figure below illustrates VT1.5
    mapping into an STS-1 SPE.\n        1   2   3  * * *  29 30 31 32   * * *  58
    59 60  61  * * *  87\n       +--+------------------+-+------------------+-+------------------+\n
    \    1 |J1|  Byte 1 (V1-V4)  |R|   |   |      |   |R|   |   |      |   |\n       +--+---+---+------+---+-+------------------+-+------------------+\n
    \    2 |B3|VT |   |      |   |R|   |   |      |   |R|   |   |      |   |\n       +--+1.5|
    \  |      |   +-+---+---+------+---+-+------------------+\n     3 |C2|   |   |
    \     |   |R|   |   |      |   |R|   |   |      |   |\n       +--+   |   |      |
    \  +-+---+---+------+---+-+------------------+\n     4 |G1|   |   |      |   |R|
    \  |   |      |   |R|   |   |      |   |\n       +--+   |   |      |   +-+---+---+------+---+-+------------------+\n
    \    5 |F2|   |   |      |   |R|   |   |      |   |R|   |   |      |   |\n       +--|1-1|2-1|
    * * *|7-4|-|1-1|2-1| * * *|7-4|-|1-1|2-1| * * *|7-4|\n     6 |H4|   |   |      |
    \  |R|   |   |      |   |R|   |   |      |   |\n       +--+   |   |      |   +-+---+---+------+---+-+------------------+\n
    \    7 |Z3|   |   |      |   |R|   |   |      |   |R|   |   |      |   |\n       +--+
    \  |   |      |   +-+---+---+------+---+-+------------------+\n     8 |Z4|   |
    \  |      |   |R|   |   |      |   |R|   |   |      |   |\n       +--+   |   |
    \     |   +-+---+---+------+---+-+------------------+\n     9 |Z5|   |   |      |
    \  |R|   |   |      |   |R|   |   |      |   |\n       +--+---+---+------+---+-+---+---+------+---+-+------------------+\n
    \       |                     |                    |\n        +-- Path Overhead
    \    +--------------------+-- Fixed Stuffs\n                   Figure 5: SONET
    SPE Mapping of VT1.5\n   The SPE always contains seven interleaved VT groups (VTGs).
    \ Each VTG\n   contains a single type of VT, and each VTG occupies 12 columns
    (108\n   bytes) within each SPE.  A VTG can contain 4 VT1.5s (T1s), 3 VT2s\n   (E1s),
    2 VT3s, or a single VT6.  Altogether, the SPE can carry 28 T1s\n   or carry 21
    E1s.\n   The fractional STS-1 encapsulation can optionally carry a bit mask\n
    \  that specifies which VTs are carried within the STS-1 payload and\n   which
    VTs have been removed.  This optional bit mask attribute allows\n   the ingress
    circuit emulation node to remove an unequipped VT on the\n   fly, providing the
    egress circuit emulation node enough information\n   for reconstructing the VTs
    in the right order.  The use of bit mask\n   enables on-the-fly compression, whereby
    only equipped VTs (carrying\n   actual data) are sent.\n"
  title: 11.2.1.  Fractional STS-1 (VC-3) Encapsulation
- contents:
  - "11.2.1.1.  Fractional STS-1 CEP Header\n   The fractional STS-1 CEP header uses
    the STS-1 CEP header\n   encapsulation as defined in this document.  Optionally,
    an additional\n   4-byte header extension word is added.\n   The extended header
    has the following format:\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0|0|0|L|R|N|P|FRG|Length[0:5]|    Sequence Number[0:15]      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |               Reserved                |Structure Pointer[0:11]|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0|0|0|            Equipped Bit Mask (EBM) [0:27]             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \               Figure 6: Extended Fractional STS-1 Header\n   The L, R, N, P,
    FRG, Length, Sequence Number, and Structured Pointer\n   fields are used as defined
    in this document for STS-1 encapsulation.\n   Each bit within the Equipped Bit
    Mask (EBM) field refers to a\n   different VT within the STS-1 container.  A bit
    set to 1 indicates\n   that the corresponding VT is equipped, hence carried within
    the\n   fractional STS-1 payload.\n   The STS-1 EBM has the following format:\n
    \      0                   1                   2\n       0 1 2 3 4 5 6 7 8 9 0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |  VTG7 |  VTG6 |  VTG5 |  VTG4 |  VTG3 |  VTG2 |  VTG1 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \         Figure 7: Equipped Bit Mask (EBM) for Fractional STS-1\n   The 28 bits
    of the EBM are divided into groups of 4 bits, each\n   corresponding to a different
    VTG within the STS container.  All 4\n   bits are used to indicate whether VT1.5
    (T1) tributaries are carried\n   within a VTG.  The first 3 bits read from right
    to left are used to\n   indicate whether VT2 (E1) tributaries are carried within
    a VTG.  The\n   first 2 bits are used to indicate whether VT3 (DS1C) tributaries
    are\n   carried within a VTG.  The rightmost bit is used to indicate whether\n
    \  a VT6 (DS2) is carried within the VTG.  The VTs within the VTG are\n   numbered
    from right to left, starting from the first VT as the first\n   bit on the right.
    \ For example, the EBM of a fully occupied STS-1\n   with VT1.5 tributaries is
    all ones, while that of an STS-1 fully\n   occupied with VT2 (E1) tributaries
    has the binary value\n   0111011101110111011101110111.\n"
  title: 11.2.1.1.  Fractional STS-1 CEP Header
- contents:
  - "11.2.1.2.  B3 Compensation\n   Fractional STS-1 encapsulation can be implemented
    in Line Terminating\n   Equipment (LTE) or in Path Terminating Equipment (PTE).
    \ PTE\n   implementations terminate the path layer at the ingress PE and\n   generate
    a new path layer at the egress PE.\n   LTE implementations do not terminate the
    path layer, and therefore\n   need to keep the content and integrity of the POH
    bytes across the\n   PSN.  In LTE implementations, special care must be taken
    to maintain\n   the B3 bit-wise parity POH byte.  The B3 compensation algorithm
    is\n   defined below.\n   Since the BIP-8 value in a given frame reflects the
    parity check over\n   the previous frame, the changes made to BIP-8 bits in the
    previous\n   frame shall also be considered in the compensation of BIP-8 in the\n
    \  current frame.  Therefore, the following equation shall be used for\n   compensation
    of the individual bits of the BIP-8:\n      B3[i]'(t) = B3[i](t-1) || B3[i]'(t-1)
    || B3[i](t) || B*3[i](t-1)\n      Where:\n         B3[i]   = the existing B3[i]
    value in the incoming signal\n         B3[i]'  = the new (compensated) B3[i] value\n
    \        B3*[i]  = the B3[i] value of the unequipped VTs in the\n                   incoming
    signal\n         ||  =  exclusive OR operator\n         t   =  the time of the
    current frame\n         t-1 =  the time of the previous frame\n   The egress PE
    MUST reconstruct the unequipped VTs and modify the B3\n   parity value in the
    same manner to accommodate the additional VTs\n   added.  In this way, the end-to-end
    BIP is preserved.\n"
  title: 11.2.1.2.  B3 Compensation
- contents:
  - "11.2.1.3.  Actual Payload Size\n   The actual CEP payload size depends on the
    number of virtual\n   tributaries carried within the fractional SPE.  The contributions
    of\n   each tributary to the fractional STS-1 payload size as well as the\n   path
    overhead contribution are described below.\n      Each VT1.5 contributes 27 bytes\n
    \     Each VT2 contributes 36 bytes\n      Each VT3 contributes 54 bytes\n      Each
    VT6 contributes 108 bytes\n      STS-1 POH contributes 9 bytes\n   For example,
    a fractional STS-1 carrying 7 VT2 circuit in full-SPE\n   encapsulation would
    have an actual size of 261=36*7+9 bytes.  Divide\n   by 3 to calculate the third-SPE
    encapsulation actual payload sizes.\n"
  title: 11.2.1.3.  Actual Payload Size
- contents:
  - "11.2.2.  Asynchronous T3/E3 STS-1 (VC-3) Encapsulation\n   Asynchronous T3/E3
    STS-1 (VC-3) encapsulation is applicable for\n   signals with POH signal label
    byte C2=4, carrying asynchronously\n   mapped T3 or E3 signals.\n   Implementations
    of asynchronous T3/E3 STS-1 (VC-3) encapsulation MUST\n   support payload length
    of one SPE and MAY support payload length of\n   1/3 SPE.\n"
  title: 11.2.2.  Asynchronous T3/E3 STS-1 (VC-3) Encapsulation
- contents:
  - "11.2.2.1.  T3 Payload Compression\n   A T3 is encapsulated asynchronously into
    an STS-1 SPE using the\n   format defined in Section 3.4.2.1 of [GR253].  The
    STS-1 SPE is then\n   encapsulated as defined in this document.\n   Optionally,
    the STS-1 SPE can be compressed by removing the fixed\n   columns leaving only
    data columns.  STS-1 columns are numbered 1 to\n   87, starting from the POH column
    numbered 1.  The following columns\n   have fixed values and are removed: 2, 3,
    30, 31, 59, and 60.\n   Bandwidth saving is approximately 7% (6 columns out of
    87).  The B3\n   parity byte need not be modified as the parity of the fixed columns\n
    \  amounts to 0.  The actual payload size for full-SPE encapsulation\n   would
    be 729 bytes and 243 bytes for third-SPE encapsulation.\n   A T3 is encapsulated
    asynchronously into a VC-3 container as\n   described in Section 10.1.2.1 of [G.707].
    \ VC-3 container has only 85\n   data columns, which is identical to the STS-1
    container with the two\n   fixed stuff columns 30 and 59 removed.  Other than
    that, the mapping\n   is identical.\n"
  title: 11.2.2.1.  T3 Payload Compression
- contents:
  - "11.2.2.2.  E3 Payload Compression\n   An E3 is encapsulated asynchronously into
    a VC-3 SPE using the format\n   defined in Section 10.1.2.2 of [G.707].  The VC-3
    SPE is then\n   encapsulated as defined in this document.\n   Optionally, the
    VC-3 SPE can be compressed by removing the fixed\n   columns leaving only data
    columns.  VC-3 columns are numbered 1 to 85\n   (and not 87), starting from the
    POH column numbered 1.  The following\n   columns have fixed values and are removed:
    2, 6, 10, 14, 18, 19, 23,\n   27, 31, 35, 39, 44, 48, 52, 56, 60, 61, 65, 69,
    73, 77, and 81.\n   Bandwidth saving is approximately 28% (24 columns out of 85).
    \ The B3\n   parity byte need not be modified as the parity of the fixed columns\n
    \  amounts to 0.  The actual payload size for full-SPE encapsulation\n   would
    be 567 bytes and 189 bytes for third-SPE encapsulation.\n"
  title: 11.2.2.2.  E3 Payload Compression
- contents:
  - "11.2.3.  Fractional VC-4 Encapsulation\n   SDH defines a mapping of VC-11, VC-12,
    VC-2, and VC-3 directly into\n   VC-4.  This mapping does not have an equivalent
    within the SONET\n   hierarchy.  The VC-4 mapping is common in SDH implementations.\n
    \      VC-4 <--x3-- TUG-3 <--------x1-------- TU-3 <-- VC-3 <---- E3/T3\n                        |\n
    \                       +--x7-- TUG-2 <--x1-- TU-2 <-- VC-2 <---- DS2\n                                 |\n
    \                                +----x3---- TU-12 <-- VC-12<---- E1\n                                 |\n
    \                                +----x4---- TU-11 <-- VC-11<---- T1\n                    Figure
    8: Mapping of VCs into VC-4\n   Figure 8 describes the mapping options of VCs
    into VC-4.  A VC-4\n   contains three TUG-3s.  Each TUG-3 is composed of either
    a single\n   TU-3 or 7 TUG-2s.  A TU-3 contains a single VC-3.  A TUG-2 contains\n
    \  either 4 VC-11s (T1s), 3 VC-12s (E1s), or one VC-2.  Therefore, a\n   VC-4
    may contain 3 VC-3s, 1 VC-3 and 42 VC-12s, 63 VC-12s, etc.\n   Fractional VC-4
    encapsulation carries only a selected set of VCs\n   within a VC-4 container.
    \ This mode is applicable for VC-4 with POH\n   signal label byte C2=2 (TUG structure)
    and for C2=3 (Locked TU-n).\n   The mapping of VCs into a VC-4 container is described
    in Section 7.2\n   of [G.707].  The CEP packetizer removes all fixed column bytes
    and\n   all bytes that belong to the removed VCs.  Only VC-4 POH bytes and\n   bytes
    that belong to the selected VCs are carried within the payload.\n   The CEP de-packetizer
    adds the fixed stuff bytes and generates\n   unequipped VC data replacing the
    removed VC bytes.\n   The fractional VC-4 encapsulation can optionally carry a
    bit mask\n   that specifies which VCs are carried within the VC-4 payload and\n
    \  which VCs have been removed.  This optional bit mask attribute allows\n   the
    ingress circuit emulation node to remove unequipped VCs on the\n   fly, providing
    the egress circuit emulation node enough information\n   for reconstructing the
    VCs in the right order.  The use of bit mask\n   enables on-the-fly compression,
    whereby only equipped VCs (carrying\n   actual data) are sent.\n   VC-3 carrying
    asynchronous T3/E3 signals within the VC-4 container\n   can optionally be compressed
    by removing the fixed column bytes as\n   described in Section 11.2.2, providing
    additional bandwidth saving.\n   Implementations of fractional VC-4 encapsulation
    MUST support payload\n   length of 1/3 SPE and MAY support payload lengths of
    4/9, 5/9, 6/9,\n   7/9, 8/9, and full SPE.  The actual payload size of fractional
    VC-4\n   encapsulation depends on the number of VCs carried within the\n   payload.\n"
  title: 11.2.3.  Fractional VC-4 Encapsulation
- contents:
  - "11.2.3.1.  Fractional VC-4 Mapping\n   [G.707] defines the mapping of TUG-3 to
    a VC-4 in Section 7.2.1.\n   Each TUG-3 includes 86 columns.  TUG-3#1, TUG-3#2,
    and TUG-3#3 are\n   byte multiplexed, starting from column 4.  Column 1 is the
    VC-4 POH,\n   while columns 2 and 3 are fixed and therefore removed in the\n   fractional
    VC-4 encapsulation.\n   The mapping of TU-3 into TUG-3 is defined in Section 7.2.2
    of\n   [G.707].  The TU-3 consists of the VC-3 with a 9-byte VC-3 POH and\n   the
    TU-3 pointer.  The first column of the 9-row-by-86-column TUG-3\n   is allocated
    to the TU-3 pointer (bytes H1, H2, H3) and fixed stuff.\n   The phase of the VC-3
    with respect to the TUG-3 is indicated by the\n   TU-3 pointer.\n   The mapping
    of TUG-2 into TUG-3 is defined in Section 7.2.3 of\n   [G.707].  The first two
    columns of the TUG-3 are fixed and therefore\n   removed in the fractional VC-4
    encapsulation.  The 7 TUG-2s, each 12\n   columns wide, are byte multiplexed starting
    from column 3 of the\n   TUG-3.  This is the equivalent of multiplexing 7 VTGs
    within STS-1\n   container in SONET terminology, except for the location of the
    fixed\n   columns.\n   The static fractional VC-4 mapping assumes that both the
    ingress and\n   egress nodes are preconfigured with the set of equipped VCs carried\n
    \  within the fractional VC-4 encapsulation.  The ingress emulation edge\n   removes
    the fixed columns as well as columns of the VCs agreed upon\n   by the two edges,
    and updates the B3 VC-4 byte.  The egress side adds\n   the fixed columns and
    the unequipped VCs and updates B3.\n"
  title: 11.2.3.1.  Fractional VC-4 Mapping
- contents:
  - "11.2.3.2.  Fractional VC-4 CEP Header\n   The fractional VC-4 CEP header uses
    the VC-4 CEP header defined in\n   this document.  Optionally, an additional 12-byte
    header extension\n   word is added.\n   The extended header has the following
    format:\n        0                   1                   2                   3\n
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |0|0|0|0|L|R|N|P|FRG|Length[0:5]|    Sequence Number[0:15]      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |               Reserved                |Structure Pointer[0:11]|\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |0|0|         Equipped Bit Mask #1 (EBM) [0:29] TUG-3#1         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |0|0|         Equipped Bit Mask #2 (EBM) [0:29] TUG-3#2         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |0|0|         Equipped Bit Mask #3 (EBM) [0:29] TUG-3#3         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                Figure 9: Extended Fractional VC-4 Header\n   The L, R, N, P,
    FRG, Length, Sequence Number, and Structured Pointer\n   fields are used as defined
    in this document for STS-1 encapsulation.\n   Each bit within the Equipped Bit
    Mask (EBM) field refers to a\n   different tributary within the VC-4 container.
    \ A bit set to 1\n   indicates that the corresponding tributary is equipped, hence
    carried\n   within the fractional VC-4 payload.\n   Three EBM fields are used.
    \ Each EBM field corresponds to a different\n   TUG-3 within the VC-4.  The EBM
    includes 7 groups of 4 bits per\n   TUG-2.  A bit set to 1 indicates that the
    corresponding VC is\n   equipped, hence carried within the fractional VC-4 payload.
    \ An\n   additional 2 bits within the EBM indicate whether VC-3 carried within\n
    \  the TUG-3 is equipped and whether it is in AIS mode.\n   The VC-4 EBM has the
    following format:\n           0                   1                   2\n           0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \         |A|T|TUG2#7 |TUG2#6 |TUG2#5 |TUG2#4 |TUG2#3 |TUG2#2 |TUG2#1 |\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \         Figure 10: Equipped Bit Mask (EBM) for Fractional VC-4\n   The 30 bits
    of the EBM are divided into 2 bits that control the VC-3\n   within the TUG-3
    and 7 groups of 4 bits, each corresponding to a\n   different TUG-2 within the
    TUG-3 container.\n   For a TUG-3 containing TUG-2, the first two A and T bits
    MUST be set\n   to 0.  The TUG-2 bits indicate whether the VCs within the TUG-2
    are\n   equipped.  All 4 bits are used to indicate whether VC-11 (T1)\n   tributaries
    are carried within a TUG-2.  The first 3 bits read right\n   to left are used
    to indicate whether VC-12 (E1) tributaries are\n   carried within a TUG-2.  The
    first bit is used to indicate that a\n   VC-2 is carried within a TUG-2.  The
    VCs within the TUG-2 are\n   numbered from right to left, starting from the first
    VC as the first\n   bit on the right.  For example, 28 bits of the EBM of a fully\n
    \  occupied TUG-3 with VC-11 tributaries are all ones, while that of a\n   TUG-3
    fully occupied with VC-12 tributaries has the binary value\n   000111011101110111011101110111.\n
    \  For a TUG-3 containing VC-3, all TUG-2 bits MUST be set to 0.  The A\n   and
    T bits are defined as follows:\n   T: TUG-3 carried bit.  If set to 1, the VC-3
    payload is carried\n   within the TUG-3 container.  If set to 0, all the TUG-3
    columns are\n   not carried within the fractional VC-4 encapsulation.  The TUG-3\n
    \  columns are removed either because the VC-3 is unequipped or in AIS\n   mode.\n
    \  A: VC-3 AIS bit.  The A bit MUST be set to 0 when the T bit is 1\n   (i.e.,
    when the TUG-3 columns are carried within the fractional VC-4\n   encapsulation).
    \ The A bit indicate the reason for removal of the\n   entire TUG-3 columns.  If
    set to 0, the TUG-3 columns were removed\n   because the VC-3 is unequipped.  If
    set to 1, the TUG-3 columns were\n   removed because the VC-3 is in AIS mode.\n"
  title: 11.2.3.2.  Fractional VC-4 CEP Header
- contents:
  - "11.2.3.3.  B3 Compensation\n   Fractional VC-4 encapsulation can be implemented
    in Line Terminating\n   Equipment (LTE) or in Path Terminating Equipment (PTE).
    \ PTE\n   implementations terminate the path layer at the ingress PE and\n   generate
    a new path layer at the egress PE.  LTE implementations do\n   not terminate the
    path layer, and therefore need to keep the content\n   and integrity of the POH
    bytes across the PSN.  In LTE\n   implementations, special care must be taken
    to maintain the B3 bit-\n   wise parity POH byte.  The same procedures for B3
    compensation as\n   described in Section 11.2.1.2 for fractional STS-1 encapsulation
    are\n   used.\n"
  title: 11.2.3.3.  B3 Compensation
- contents:
  - "11.2.3.4.  Actual Payload Sizes\n   The actual CEP payload size depends on the
    number of virtual\n   tributaries carried within the fractional SPE.  The contributions
    of\n   each tributary to the fractional VC-4 payload length as well as the\n   path
    overhead contribution are described below.\n      Each VC-11 contributes 27 bytes\n
    \     Each VC-12 contributes 36 bytes\n      Each VC-2 contributes 108 bytes\n
    \     Each VC-3(T3) contributes 738 bytes\n      Each VC-3(E3) contributes 576
    bytes\n      Each VC-3(uncompressed) contributes 774 bytes\n      VC-4 POH contributes
    9 bytes\n   The VC-3 contribution includes the AU-3 pointer.  For example, the\n
    \  payload size of a fractional VC-4 configured to third-SPE\n   encapsulation
    that carries a single compressed T3 VC-3 and 6 VC-12s\n   would be: 321=(9 + 6*36
    + 738) / 3 bytes payload per each packet.\n"
  title: 11.2.3.4.  Actual Payload Sizes
- contents:
  - "12.  Signaling of CEP Pseudowires\n   [PWE3-CONTROL] specifies the use of the
    MPLS Label Distribution\n   Protocol, LDP, as a protocol for setting up and maintaining\n
    \  pseudowires.  In particular, it provides a way to bind a de-\n   multiplexer
    field value to a pseudo-wire, specifying procedures for\n   reporting pseudowire
    status changes and for releasing the bindings.\n   [PWE3-CONTROL] assumes that
    the pseudowire de-multiplexer field is an\n   MPLS label; however, the PSN tunnel
    itself can be either an IP or\n   MPLS PSN.\n   The use of LDP for setting up
    and maintaining CEP pseudowires is\n   OPTIONAL.  This section describes the use
    of the CEP-specific fields\n   and error codes.\n   The PW Type field in PWid
    Forwarding Equivalence Class (FEC) and PW\n   generalized ID FEC elements MUST
    be set to SONET/SDH Circuit\n   Emulation over Packet (CEP) [PWE3-IANA].\n   The
    control word is REQUIRED for CEP pseudowires.  Therefore, the C\n   bit in PWid
    FEC and PW generalized ID FEC elements MUST be set.  If\n   the C bit is not set,
    the pseudowire MUST not be established and a\n   Label Release MUST be sent with
    an Illegal C bit status code\n   [PWE3-IANA].\n   The PWid FEC and PW generalized
    ID FEC elements can include one or\n   more Interface Parameters fields.  The
    Interface Parameters fields\n   are used to validate that the two ends of the
    pseudowire have the\n   necessary capabilities to interoperate with each other.
    \ The CEP-\n   specific Interface Parameters fields are the CEP/TDM Payload Bytes,\n
    \  the CEP/TDM Bit Rate, and the CEP Options parameters.\n"
  title: 12.  Signaling of CEP Pseudowires
- contents:
  - "12.1.  CEP/TDM Payload Bytes\n   This parameter MUST contain the expected CEP
    payload size in bytes.\n   The payload size does not include network headers,
    CEP header or\n   padding.  If payload compression is used, the CEP/TDM Payload
    Bytes\n   parameter MUST be set to the uncompressed payload size as if payload\n
    \  compression was disabled.  In particular, when Fractional SPE (STS-1/\n   VC-3
    or VC-4) payload compression is used, the Payload Bytes\n   parameter MUST be
    set to the payload size before removal of the\n   unequipped VT containers and
    fixed value columns.  Therefore, when\n   fractional SPE mode is used, the actual
    (i.e., on the wire) packet\n   length would normally be less than advertised,
    and in dynamic\n   fractional SPE, even change while the connection is active.\n
    \  Similarly, when DBA payload compression is used, the CEP/TDM Payload\n   Bytes
    parameter MUST be set to the payload size prior to compression.\n   The CEP/TDM
    Payload Bytes parameter is OPTIONAL.  Default payload\n   sizes are assumed if
    this parameter is not included as part of the\n   Interface Parameters fields.
    \ The default payload size for VT is a\n   single super frame.  The default payload
    size for SPE is 783 bytes.\n   A PE that receives a label-mapping request with
    request for a CEP/TDM\n   Payload Bytes value that is not locally supported MUST
    return CEP/TDM\n   misconfiguration status error code [PWE3-IANA], and the pseudowire\n
    \  MUST not be established.\n"
  title: 12.1.  CEP/TDM Payload Bytes
- contents:
  - "12.2.  CEP/TDM Bit Rate\n   The CEP/TDM Bit Rate parameter MUST be set to the
    data rate in 64-\n   Kbps units of the CEP payload.  If payload compression is
    used, the\n   CEP/TDM Bit Rate parameter MUST be set to the uncompressed payload\n
    \  data rate as if payload compression was disabled.  Table 3 specifies\n   the
    CEP/TDM Bit Rate parameters that MUST be set for each of the\n   pseudowire circuits.\n
    \                 +-------------+-----------------------+\n                  |
    Circuit     |   Bit Rate Parameter  |\n                  +-------------+-----------------------+\n
    \                 | VT1.5/VC-11 |           26          |\n                  |
    VT2/VC-12   |           35          |\n                  | VT3         |           53
    \         |\n                  | VT6/VC-2    |          107          |\n                  |
    STS-Nc      | 783*N N=1,3,12,48,192 |\n                  +-------------+-----------------------+\n
    \                       Table 3: CEP/TDM Bit Rates\n   The CEP/TDM Bit Rate parameter
    is REQUIRED.  Attempts to establish a\n   pseudowire between two peers with different
    bit rates MUST be\n   rejected with incompatible bit rate status error code [PWE3-IANA],\n
    \  and the pseudowire MUST not be established.\n"
  title: 12.2.  CEP/TDM Bit Rate
- contents:
  - "12.3.  CEP Options\n   The CEP Options parameter is REQUIRED.  The format of
    the CEP Options\n   parameter is described below:\n        0                                       1\n
    \       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n
    \     |AIS|UNE|RTP|EBM|      Reserved [0:6]       | CEP Type  | Async |\n      |
    \  |   |   |   |                           |    [0:2]  |T3 |E3 |\n      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n
    \                         Figure 11: CEP Options\n   AIS:  When set, indicates
    that the PE sending the label-mapping\n      request is configured to send DBA
    packets when AIS indication is\n      detected.\n   UNE:  When set, indicates
    that the PE sending the label-mapping\n      request is configured to send DBA
    packets when unequipped circuit\n      indication is detected.\n   RTP:  When
    set, indicates that the PE sending the label-mapping\n      request is configured
    to send packets with RTP header.\n   EBM:  When set, indicates that the PE sending
    the label-mapping\n      request is configured to send packets with EBM extension
    header.\n   CEP Type:  indicates the CEP connection type:\n         0x0 SPE mode
    (STS-1/STS-Mc)\n         0x1 VT mode (VT1.5/VT2/VT3/VT6)\n         0x2 Fractional
    SPE (STS-1/VC-3/VC-4)\n   Async Type:  indicates the Async E3/T3 bandwidth reduction\n
    \     configuration.  Relevant only when CEP type is set to fractional\n      SPE,
    and fractional SPE is expected to carry Asynchronous T3/E3\n      payload:\n         T3:
    When set, indicates that the PE sending the label-mapping\n         request is
    configured to send Fractional SPE packets with T3\n         bandwidth reduction.\n
    \        E3: When set, indicates that the PE sending the label-mapping\n         request
    is configured to send Fractional SPE packets with E3\n         bandwidth reduction.\n
    \  Reserved field:  MUST be set to 0 by the PE sending the label-mapping\n      request
    and ignored by the receiver.\n   A PE that does not support one of the CEP options
    set in the label-\n   mapping request MUST send a label-release message with status
    code of\n   CEP/TDM misconfiguration [PWE3-IANA], report to the operator, and\n
    \  wait for a new consistent label-mapping.  A PE MUST send a new label-\n   mapping
    request once it is reconfigured or when it receives a label-\n   mapping request
    from its peer with consistent configuration.\n   A pseudowire can be configured
    asymmetrically.  One PE can be\n   configured to use bandwidth reduction modes,
    while the other PE can\n   be configured to send the entire circuit unmodified.
    \ A PE can\n   compare the CEP Options settings received in the label-mapping\n
    \  request with its own configuration and detect an asymmetric\n   pseudowire
    configuration.  A PE that identifies an asymmetric\n   configuration MAY report
    it to the operator.\n"
  title: 12.3.  CEP Options
- contents:
  - "13.  Congestion Control\n   The PSN carrying the CEP PW may be subject to congestion.
    \ Congestion\n   considerations for PWs are described in Section 6.5 of [PWE3-ARCH].\n
    \  CEP PWs represent inelastic constant bit rate (CBR) flows and cannot\n   respond
    to congestion in a TCP-friendly manner prescribed by [CONG].\n   CEP PWs SHOULD
    be carried across traffic-engineered PSNs that provide\n   either bandwidth reservation
    and admission control or forwarding\n   prioritization and boundary traffic conditioning
    mechanisms.\n   Intserv-enabled domains [INTSERV] supporting Guaranteed Service
    [GS]\n   and Diffserv-enabled domains [DIFFSERV] supporting Expedited\n   Forwarding
    [EF] provide examples of such PSNs.  It is expected that\n   PWs emulating high-rate
    SONET STS-Nc or SDH virtual circuits will be\n   tunneled over traffic-engineered
    MPLS PSN.\n   CEP PWs SHOULD monitor packet loss in order to detect \"severe\n
    \  congestion\".  If such a condition is detected, a CEP PW SHOULD shut\n   down
    bi-directionally.  This specification does not define the exact\n   criteria for
    detecting \"severe congestion\" using the CEP packet loss\n   rate and the consequent
    restart criteria after a suitable delay.\n   This is left for further study.\n
    \  If the CEP PW has been set up using the PWE3 control protocol\n   [PWE3-CONTROL],
    the regular PW teardown procedures SHOULD be used\n   upon detection of \"severe
    congestion\".\n   The SONET/SDH services emulated by CEP PWs have high availability\n
    \  objectives that MUST be taken into account when deciding on temporary\n   shutdown
    of CEP PWs.  CEP performance monitoring provides entry and\n   exit criteria for
    the CEP PW unavailable state (UAS-CEP).  Detection\n   of \"severe congestion\"
    MAY be based on unavailability criteria of the\n   CEP PW.\n"
  title: 13.  Congestion Control
- contents:
  - "14.  Security Considerations\n   The CEP encapsulation is subject to all of the
    general security\n   considerations discussed in [PWE3-ARCH].  In addition, this
    document\n   specifies only encapsulations, and not the protocols used to carry\n
    \  the encapsulated packets across the PSN.  Each such protocol may have\n   its
    own set of security issues, but those issues are not affected by\n   the encapsulations
    specified herein.  Note that the security of the\n   transported CEP service will
    only be as good as the security of the\n   PSN.  This level of security may be
    less rigorous than that available\n   from a native TDM service due to the inherent
    differences between\n   circuit-switched and packet-switched public networks.\n
    \  Although CEP MAY employ an RTP header when explicit transfer of\n   timing
    information is required, SRTP [RFC3711] mechanisms are not a\n   substitute for
    securing the PW and underlying MPLS network.\n"
  title: 14.  Security Considerations
- contents:
  - "15.  IANA Considerations\n   IANA considerations for pseudowires are covered
    in [PWE3-IANA].  CEP\n   does not introduce additional requirements from IANA.\n"
  title: 15.  IANA Considerations
- contents:
  - "16.  Acknowledgments\n   The authors would like to thank the members of the PWE3
    Working Group\n   for their assistance on this document.  We thank Sasha Vainshtein,\n
    \  Deborah Brungard, Juergen Heiles, and Nick Weeds for their review and\n   valuable
    feedback.\n"
  title: 16.  Acknowledgments
- contents:
  - "17.  Co-Authors\n   The individuals listed below are co-authors of this document.
    \ Tom\n   Johnson from Litchfield Communications was the editor of this\n   document
    from the pre-WG versions of the SONET SPE work through\n   version 01 of this
    document.\n           Craig White          Level3 Communications\n           Ed
    Hallman           Litchfield Communications\n           Jeremy Brayley       Laurel
    Networks\n           Jim Boyle            Juniper Networks\n           John Shirron
    \        Laurel Networks\n           Luca Martini         Cisco Systems\n           Marlene
    Drost        Litchfield Communications\n           Steve Vogelsang      Laurel
    Networks\n           Tom Johnson          Litchfield Communications\n           Ken
    Hsu              Tellabs\n"
  title: 17.  Co-Authors
- contents:
  - "Appendix A.  SONET/SDH Rates and Formats\n   For simplicity, the discussion in
    this section uses SONET\n   terminology, but it applies equally to SDH as well.
    \ SDH-equivalent\n   terminology is shown in the tables.\n   The basic SONET modular
    signal is the synchronous transport signal-\n   level 1 (STS-1).  A number of
    STS-1s may be multiplexed into higher-\n   level signals denoted as STS-N, with
    N synchronous payload envelopes\n   (SPEs).  The optical counterpart of the STS-N
    is the Optical Carrier-\n   level N, or OC-N.  Table 4 lists standard SONET line
    rates discussed\n   in this document.\n   +-------------+--------+---------+----------+-----------+-----------+\n
    \  | OC Level    |   OC-1 |    OC-3 |    OC-12 |     OC-48 |    OC-192 |\n   +-------------+--------+---------+----------+-----------+-----------+\n
    \  | SDH Term    |      - |   STM-1 |    STM-4 |    STM-16 |    STM-64 |\n   |
    Line        | 51.840 | 155.520 |  622.080 | 2,488.320 | 9,953.280 |\n   | Rate(Mb/s)
    \ |        |         |          |           |           |\n   +-------------+--------+---------+----------+-----------+-----------+\n
    \                   Table 4: Standard SONET Line Rates\n   Each SONET frame is
    125us and consists of nine rows.  An STS-N frame\n   has nine rows and N*90 columns.
    \ Of the N*90 columns, the first N*3\n   columns are transport overhead and the
    other N*87 columns are SPEs.\n   A number of STS-1s may also be linked together
    to form a super-rate\n   signal with only one SPE.  The optical super-rate signal
    is denoted\n   as OC-Nc, which has a higher payload capacity than OC-N.\n   The
    first 9-byte column of each SPE is the path overhead (POH) and\n   the remaining
    columns form the payload capacity with fixed stuff\n   (STS-Nc only).  The fixed
    stuff, which is purely overhead, is N/3-1\n   columns for STS-Nc.  Thus, STS-1
    and STS-3c do not have any fixed\n   stuff, STS-12c has three columns of fixed
    stuff, and so on.\n   The POH of an STS-1 or STS-Nc is always 9 bytes in nine
    rows.  The\n   payload capacity of an STS-1 is 86 columns (774 bytes) per frame.\n
    \  The payload capacity of an STS-Nc is (N*87)-(N/3) columns per frame.\n   Thus,
    the payload capacity of an STS-3c is (3*87 - 1)*9 = 2,340 bytes\n   per frame.
    \ As another example, the payload capacity of an STS-192c\n   is 149,760 bytes,
    which is 64 times the capacity of an STS-3c.\n   There are 8,000 SONET frames
    per second.  Therefore, the SPE size,\n   (POH plus payload capacity) of an STS-1
    is 783*8*8,000 = 50.112 Mb/s.\n   The SPE size of a concatenated STS-3c is 2,349
    bytes per frame or\n   150.336 Mb/s.  The payload capacity of an STS-192c is 149,760
    bytes\n   per frame, which is equivalent to 9,584.640 Mb/s.  Table 5 lists the\n
    \  SPE and payload rates supported.\n   +-------------+--------+---------+----------+-----------+-----------+\n
    \  | SONET STS   |  STS-1 |  STS-3c |   OC-12c |    OC-48c |   OC-192c |\n   |
    Level       |        |         |          |           |           |\n   +-------------+--------+---------+----------+-----------+-----------+\n
    \  | SDH VC      |   VC-3 |    VC-4 |  VC-4-4c |  VC-4-16c |  VC-4-64c |\n   |
    Level       |        |         |          |           |           |\n   | Payload
    \    |    774 |   2,340 |    9,360 |    37,440 |   149,760 |\n   | Size(Bytes)
    |        |         |          |           |           |\n   | Payload     | 49.536
    | 149.760 |  599.040 | 2,396.160 | 9,584.640 |\n   | Rate(Mb/s)  |        |         |
    \         |           |           |\n   | SPE         |    783 |   2,349 |    9,396
    |    37,584 |   150,336 |\n   | Size(Bytes) |        |         |          |           |
    \          |\n   | SPE         | 50.112 | 150.336 |  601.344 | 2,405.376 | 9,621.504
    |\n   | Rate(Mb/s)  |        |         |          |           |           |\n
    \  +-------------+--------+---------+----------+-----------+-----------+\n                      Table
    5: Payload Size and Rate\n   To support circuit emulation, the entire SPE of a
    SONET STS or SDH VC\n   level is encapsulated into packets, using the encapsulation
    defined\n   in Section 5, for carriage across packet-switched networks.\n   VTs
    are organized in SONET super-frames, where a SONET super-frame is\n   a sequence
    of four SONET SPEs.  The SPE path overhead byte H4\n   indicates the SPE number
    within the super-frame.  The VT data can\n   float relative to the SPE position.
    \ The overhead bytes V1, V2, and\n   V3 are used as pointer and stuffing byte
    similar to the use of the\n   H1, H2, and H3 TOH bytes.\n"
  title: Appendix A.  SONET/SDH Rates and Formats
- contents:
  - "Appendix B.  Example Network Diagrams\n   Figure 12 below illustrates a SONET
    interconnect example.  Site A and\n   Site B are connected back to a Hub Site,
    Site C by means of a SONET\n   infrastructure.  The OC-12 from Site A and the
    OC-12 from Site B are\n   partially equipped.  Each of them is transported through
    a SONET\n   network back to a hub site C.  Equipped SPEs (or VTs) are then\n   groomed
    onto the OC-12 towards site C.\n                                 SONET Network\n
    \                           ____     ___       ____\n                           /
    \   \\___/   \\    _/    \\__\n     +------+ Physical    /              \\__/
    \        \\\n     |Site A|    OC-12   /    +---+     OC-12           \\       Hub
    Site\n     |      |=================|\\S/|-------------+-----+  \\      +------+\n
    \    |      |           \\     |/ \\|=============|\\   /|   \\     |      |\n
    \    +------+           /\\    +---+-------------| \\ / |  / OC-12|      |\n                       /
    \                       |  S  |=========|Site C|\n     +------+ Physical/       +---+-------------|
    / \\ |  \\      |      |\n     |Site B|   OC-12 \\       |\\S/|=============|/
    \  \\|   \\     |      |\n     |      |=================|/ \\|-------------+-----+
    \  /     +------+\n     |      |          \\      +---+     OC-12     __     /\n
    \    +------+           \\                      __/  \\   /\n                         \\
    \  ___      ___     /      \\_/\n                          \\_/   \\____/   \\___/\n
    \              Figure 12: SONET Interconnect Example Diagram\n   Figure 13 below
    illustrates the same pair of OC-12s being emulated\n   over a PSN.  This configuration
    frees up bandwidth in the grooming\n   network, since only equipped SPEs (or VTs)
    are sent through the PSN.\n   Additional bandwidth savings can be realized by
    taking advantage of\n   the various payload compression options described in Section
    11.\n                            SONET/TDM/Packet Network\n                           ____
    \    ___       ____\n                          /    \\___/   \\     /    \\__\n
    \    +------+ Physical   /+-+            \\__/         \\_\n     |Site A|   OC-12
    \  / | | +---+                     \\       Hub Site\n     |      |=============|P|=|
    R |   +---+ +-+ +-----+  \\      +------+\n     |      |           \\ |E| |   |===|
    \  | | |=|\\   /|   \\     |      |\n     +------+           /\\+-+ +---+   |
    \  | | | | \\ / |  / OC-12|      |\n                       /              | R
    |=|P| |  S  |=========|Site C|\n     +------+ Physical/   +-+ +---+   |   | |E|
    | / \\ |  \\      |      |\n     |Site B|   OC-12 \\   |P| | R |===|   | | |=|/
    \  \\|   \\     |      |\n     |      |=============|E|=|   |   +---+ +-+ +-----+
    \  /     +------+\n     |      |          \\  | | +---+               __     /\n
    \    +------+           \\ +-+                  __/  \\   /\n                         \\
    \  ___      ___     /      \\_/\n                          \\_/   \\____/   \\___/\n
    \         Figure 13: SONET Interconnect Emulation Example Diagram\n   Figure 14
    below shows an example of T1 grooming into OC-12 in access\n   networks.  The
    VT encapsulation is used to transport the T1s from the\n   Hub site to customer
    sites, maintaining SONET/SDH Operations and\n   Management (OAM).\n                          SONET/TDM/Packet
    Network\n                           ____     ___       ____\n                          /
    \   \\___/   \\     /    \\__\n     +------+ Physical   /+-+            \\__/
    \        \\_\n     |Site A|    T1     / | | +---+                     \\       Hub
    Site\n     |      |=============|P|=| R |   +---+ +-+ +-----+  \\      +------+\n
    \    |      |           \\ |E| |   |===|   | | |=|\\   /|   \\     |      |\n
    \    +------+           /\\+-+ +---+   |   | | | | \\ / |  / OC-12|      |\n                       /
    \             | R |=|P| |  S  |=========|Site C|\n     +------+ Physical/   +-+
    +---+   |   | |E| | / \\ |  \\      |      |\n     |Site B|    T1   \\   |P| |
    R |===|   | | |=|/   \\|   \\     |      |\n     |      |=============|E|=|   |
    \  +---+ +-+ +-----+   /     +------+\n     |      |          \\  | | +---+               __
    \    /\n     +------+           \\ +-+                  __/  \\   /\n                         \\
    \  ___      ___     /      \\_/\n                          \\_/   \\____/   \\___/\n
    \        Figure 14: T1 to OC-12 Grooming Emulation Example Diagram\n"
  title: Appendix B.  Example Network Diagrams
- contents:
  - '18.  References

    '
  - "18.1.  Normative References\n   [G.707]         \"Network Node Interface For
    The Synchronous Digital\n                   Hierarchy\", ITU-T Recommendation
    G.707,\n                   December 2003.\n   [G.783]         \"Characteristics
    of synchronous digital hierarchy\n                   (SDH) equipment functional
    blocks\", ITU-T\n                   Recommendation G.783, February 2004.\n   [G.784]
    \        \"Synchronous Digital Hierarchy (SDH) management\",\n                   ITU-T
    Recommendation G.784, July 1999.\n   [G.806]         \"Characteristics of transport
    equipment-Description\n                   methodology and generic functionality\",
    ITU-T\n                   Recommendation G.806, February 2004.\n   [G.825]         \"The
    control of jitter and wander within digital\n                   networks which
    are based on the synchronous digital\n                   hierarchy (SDH)\", ITU-T
    Recommendation G.825,\n                   March 2000.\n   [GR253]         \"Synchronous
    Optical Network (SONET) Transport\n                   Systems: Common Generic
    Criteria\", Telcordia GR-253-\n                   CORE Issue 3, September 2000.\n
    \  [MPLS]          Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n                   Farinacci,
    D., Li, T., and A. Conta, \"MPLS Label\n                   Stack Encoding\", RFC
    3032, January 2001.\n   [PWE3-CONTROL]  Martini, L., Rosen, E., El-Aawar, N.,
    Smith, T., and\n                   G. Heron, \"Pseudowire Setup and Maintenance
    Using the\n                   Label Distribution Protocol (LDP)\", RFC 4447,\n
    \                  April 2006.\n   [PWE3-IANA]     Martini, L., \"IANA Allocations
    for Pseudowire Edge to\n                   Edge Emulation (PWE3)\", BCP 116, RFC
    4446,\n                   April 2006.\n   [RFC2119]       Bradner, S., \"Key words
    for use in RFCs to Indicate\n                   Requirement Levels\", BCP 14,
    RFC 2119, March 1997.\n   [RTP]           Schulzrinne, H., Casner, S., Frederick,
    R., and V.\n                   Jacobson, \"RTP: A Transport Protocol for Real-Time\n
    \                  Applications\", STD 64, RFC 3005, July 2003.\n   [SONET]         \"Synchronous
    Optical Network (SONET) - Basic\n                   Description including Multiplex
    Structure, Rates and\n                   Formats\", ANSI T1.105-2001, October
    2001.\n"
  - "18.2.  Informative References\n   [CONG]          Floyd, S., \"Congestion Control
    Principles\", RFC 2914,\n                   September 2000.\n   [DIFFSERV]      Blake,
    S., Black, D., Carlson, M., Davies, E., Wang,\n                   Z., and W. Weiss,
    \"An Architecture for Differentiated\n                   Services\", RFC 2475,
    December 1998.\n   [EF]            Davie, B., Charny, A., Bennett, J., Benson,
    K., Le\n                   Boudec, J., Courtney, W., Davari, S., Firoiu, V., and\n
    \                  D. Stiliadis, \"An Expedited Forwarding PHB (Per-Hop\n                   Behavior)\",
    RFC 3246, March 2002.\n   [GS]            Shenker, S., Partridge, C., and R. Guerin,\n
    \                  \"Specification of Guaranteed Quality of Service\",\n                   RFC
    2212, September 1997.\n   [INTSERV]       Braden, R., Clark, D., and S. Shenker,
    \"Integrated\n                   Services in the Internet Architecture: an Overview\",\n
    \                  RFC 1633, June 1994.\n   [PWE3-ARCH]     Bryant, S. and P.
    Pate, \"PWE3 Architecture\",\n                   RFC 3985, March 2005.\n   [PWE3-MPLSCW]
    \  Bryant, S., Swallow, G., and D. McPherson, \"Control\n                   Word
    for Use over an MPLS PSN\", RFC 4385,\n                   February 2006.\n   [PWE3-REQ]
    \     Xiao, X., McPherson, D., and P. Pate, \"Requirements\n                   for
    Pseudo Wire Emulation Edge-to-Edge (PWE3)\",\n                   RFC 3916, September
    2004.\n   [PWE3-TDM-REQ]  Riegel, M., \"Requirements for Edge-to-Edge Emulation\n
    \                  of TDM Circuits over Packet Switching Networks\n                   (PSN)\",
    RFC 4197, October 2005.\n   [RFC3711]       Baugher, M., McGrew, D., Naslund,
    N., Carrara, E.,\n                   and K. Norrman, \"The Secure Real-time Transport\n
    \                  Protocol (SRTP)\", RFC 3711, March 2004.\n"
  title: References
- contents:
  - "Authors' Addresses\n   Andrew G. Malis\n   Verizon Communications\n   40 Sylvan
    Road\n   Waltham, MA  02451\n   USA\n   EMail: andrew.g.malis@verizon.com\n   Prayson
    Pate\n   Overture Networks\n   507 Airport Blvd, Suite 111\n   Morrisville, NC
    \ 27560\n   USA\n   EMail: prayson.pate@overturenetworks.com\n   Ron Cohen (editor)\n
    \  Resolute Networks\n   15 Central Avenue\n   Modiin,   71700\n   Israel\n   EMail:
    ronc@resolutenetworks.com\n   David Zelig\n   Corrigent Systems\n   126 Yigal
    Alon st.\n   Tel Aviv,\n   Israel\n   EMail: davidz@corrigent.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
