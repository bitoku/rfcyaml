- title: __initial_text__
  contents:
  - '            OSPF Database Exchange Summary List Optimization

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a backward-compatible optimization for the\n\
    \   Database Exchange process in OSPFv2 and OSPFv3.  In this\n   optimization,\
    \ a router does not list a Link State Advertisement (LSA)\n   in Database Description\
    \ packets sent to a neighbor, if the same or a\n   more recent instance of the\
    \ LSA was listed in a Database Description\n   packet already received from the\
    \ neighbor.  This optimization reduces\n   Database Description overhead by about\
    \ 50% in large networks.  This\n   optimization does not affect synchronization,\
    \ since it only omits\n   unnecessary information from Database Description packets.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In OSPFv2 [RFC2328] and OSPFv3 [RFC2740], when two neighboring\n\
    \   routers become adjacent, they synchronize their link-state databases\n   via\
    \ the Database Exchange process.  Each router sends the other\n   router a set\
    \ of Database Description (DD) packets that describes the\n   router's link-state\
    \ database.  This is done by listing each LSA\n   (i.e., including the header\
    \ of each LSA) in one of the sent DD\n   packets.  This procedure allows each\
    \ router to determine whether the\n   other router has newer LSA instances that\
    \ should be requested via\n   Link State Request packets.\n   The optimization\
    \ simply observes that it is not necessary for a\n   router (master or slave)\
    \ to list an LSA in a DD packet if it knows\n   the neighbor already has an instance\
    \ of the LSA that is the same or\n   more recent (and therefore will not request\
    \ the LSA).  To avoid\n   listing such LSAs in DD packets, when an LSA is listed\
    \ in a DD packet\n   received from the neighbor, and the Database summary list\
    \ for the\n   neighbor has an instance of the LSA that is the same as or less\n\
    \   recent than the one received, the LSA is removed from the summary\n   list.\n\
    \   The optimization, called the Database Exchange summary list\n   optimization,\
    \ does not affect synchronization, since the LSAs that\n   are omitted from DD\
    \ packets are unnecessary.  The optimization is\n   fully backward compatible\
    \ with OSPF.  The optimization reduces\n   Database Description overhead by about\
    \ 50% in large networks in which\n   routers are usually already nearly synchronized\
    \ when they become\n   adjacent, since it reduces the total number of LSA headers\
    \ exchanged\n   by about one-half in such networks.  The optimization is especially\n\
    \   beneficial in large networks with limited bandwidth, such as large\n   mobile\
    \ ad hoc networks.\n"
- title: 2.  Specification of Optimization
  contents:
  - "2.  Specification of Optimization\n   The Database Exchange summary list optimization\
    \ is defined by\n   modifying Section 10.6 \"Receiving Database Description Packets\"\
    \ of\n   RFC 2328 as follows.  The second-to-last paragraph of Section 10.6 is\n\
    \   replaced with the following augmented paragraph:\n   When the router accepts\
    \ a received Database Description Packet as the\n   next in sequence, the packet\
    \ contents are processed as follows.  For\n   each LSA listed, the LSA's LS type\
    \ is checked for validity.  If the\n   LS type is unknown (e.g., not one of the\
    \ LS types 1-5 defined by this\n   specification), or if this is an AS-external-LSA\
    \ (LS type = 5) and\n   the neighbor is associated with a stub area, generate\
    \ the neighbor\n   event SeqNumberMismatch and stop processing the packet.  Otherwise,\n\
    \   the router looks up the LSA in its database to see whether it also\n   has\
    \ an instance of the LSA.  If it does not, or if the database copy\n   is less\
    \ recent, the LSA is put on the Link state request list so that\n   it can be\
    \ requested (immediately or at some later time) in Link State\n   Request Packets.\
    \  In addition, if the Database summary list contains\n   an instance of the LSA\
    \ that is the same as or less recent than the\n   listed LSA, the LSA is removed\
    \ from the Database summary list.\n   The above additional step (which updates\
    \ the Database summary list)\n   may be performed either before or after the router\
    \ looks up the\n   listed LSA in its database and possibly adds the LSA to the\
    \ Link\n   state request list.  However, to implement the optimization, the\n\
    \   additional step must be performed for each LSA listed in the received\n  \
    \ DD packet (to fully update the Database summary list) before the next\n   DD\
    \ packet is sent in response.\n   Although the optimization does not require that\
    \ LSAs be listed in DD\n   packets in any particular order, faster lookup of LSAs\
    \ in the\n   Database summary list may be possible if LSAs are listed in the same\n\
    \   order by all routers.  If such an ordering is used, then to encourage\n  \
    \ different implementations to use the same ordering, this document\n   recommends\
    \ that LSAs be listed in lexicographically increasing order\n   of (LS type, Link\
    \ State ID, Advertising Router) for OSPFv2 and (LS\n   type, Advertising Router,\
    \ Link State ID) for OSPFv3.\n"
- title: 3.  Example
  contents:
  - "3.  Example\n   This section describes an example to illustrate the Database\
    \ Exchange\n   summary list optimization.  Assume that routers RT1 and RT2 already\n\
    \   have identical databases when they start Database Exchange.  Also\n   assume\
    \ that the list of LSA headers for the database fits into two DD\n   packets.\
    \  Then, the standard Database Exchange is as follows when RT1\n   is the first\
    \ to change the neighbor state to ExStart.  Note that each\n   router sends two\
    \ full DD packets.\n      RT1 (slave)                                      RT2\
    \ (master)\n      ExStart      Empty DD (Seq=x,I,M,Master)\n                 ------------------------------>\n\
    \                   Empty DD (Seq=y,I,M,Master)         ExStart\n            \
    \     <------------------------------\n      Exchange     Full  DD (Seq=y,M,Slave)\n\
    \                 ------------------------------>\n                   Full  DD\
    \ (Seq=y+1,M,Master)         Exchange\n                 <------------------------------\n\
    \                   Full  DD (Seq=y+1,Slave)\n                 ------------------------------>\n\
    \                   Full  DD (Seq=y+2, Master)\n                 <------------------------------\n\
    \       Full        Empty DD (Seq=y+2, Slave)\n                 ------------------------------>\n\
    \                                                       Full\n   If the optimization\
    \ is used, when RT2 receives the first full DD\n   packet from RT1, it removes\
    \ from its summary list all LSAs that are\n   listed in the DD packet.  Then RT2\
    \ sends a DD packet that lists the\n   remaining LSAs (since all of the LSA headers\
    \ fit into two DD\n   packets).  When RT1 receives this DD packet, it removes\
    \ these\n   remaining LSAs from its summary list (causing it to be empty) and\n\
    \   sends an empty DD packet to RT2.\n   With the optimization, each router sends\
    \ only one full DD packet\n   instead of two, as shown below.\n      RT1 (slave)\
    \                                      RT2 (master)\n      ExStart      Empty\
    \ DD (Seq=x,I,M,Master)\n                 ------------------------------>\n  \
    \                 Empty DD (Seq=y,I,M,Master)         ExStart\n              \
    \   <------------------------------\n      Exchange     Full  DD (Seq=y,M,Slave)\n\
    \                 ------------------------------>\n                   Full  DD\
    \ (Seq=y+1,Master)           Exchange\n                 <------------------------------\n\
    \       Full        Empty DD (Seq=y+1, Slave)\n                 ------------------------------>\n\
    \                                                       Full\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document does not raise any new security\
    \ concerns.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document specifies a simple backward-compatible\
    \ optimization for\n   OSPFv2 and OSPFv3 that does not require any new number\
    \ assignment.\n"
- title: 6.  Normative References
  contents:
  - "6.  Normative References\n   [RFC2328] Moy, J., \"OSPF Version 2\", STD 54, RFC\
    \ 2328, April 1998.\n   [RFC2740] Coltun, R., Ferguson, D., and J. Moy, \"OSPF\
    \ for IPv6\", RFC\n             2740, December 1999.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The recommendation to list LSAs in lexicographical order\
    \ was\n   suggested by Acee Lindem.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Richard G. Ogier\n   EMail: rich.ogier@earthlink.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
