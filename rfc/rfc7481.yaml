- title: __initial_text__
  contents:
  - '   Security Services for the Registration Data Access Protocol (RDAP)

    '
- title: Abstract
  contents:
  - "Abstract\n   The Registration Data Access Protocol (RDAP) provides \"RESTful\"\
    \ web\n   services to retrieve registration metadata from Domain Name and\n  \
    \ Regional Internet Registries.  This document describes information\n   security\
    \ services, including access control, authentication,\n   authorization, availability,\
    \ data confidentiality, and data integrity\n   for RDAP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7481.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . .   2\n     2.1.  Acronyms and Abbreviations  . . . . . . . . . . . .\
    \ . . .   3\n   3.  Information Security Services and RDAP  . . . . . . . . .\
    \ . .   3\n     3.1.  Access Control  . . . . . . . . . . . . . . . . . . . .\
    \ .   3\n     3.2.  Authentication  . . . . . . . . . . . . . . . . . . . . .\
    \   3\n       3.2.1.  Federated Authentication  . . . . . . . . . . . . . .  \
    \ 4\n     3.3.  Authorization . . . . . . . . . . . . . . . . . . . . . .   6\n\
    \     3.4.  Availability  . . . . . . . . . . . . . . . . . . . . . .   6\n  \
    \   3.5.  Data Confidentiality  . . . . . . . . . . . . . . . . . .   7\n    \
    \ 3.6.  Data Integrity  . . . . . . . . . . . . . . . . . . . . .   7\n   4. \
    \ Privacy Threats Associated with Registration Data . . . . . .   8\n   5.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .   9\n   6.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     6.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  10\n     6.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  11\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  13\n   Authors' Addresses  . .\
    \ . . . . . . . . . . . . . . . . . . . . .  13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Registration Data Access Protocol (RDAP) is specified\
    \ in multiple\n   documents, including \"Registration Data Access Protocol (RDAP)\
    \ Query\n   Format\" [RFC7482], \"JSON Responses for the Registration Data Access\n\
    \   Protocol (RDAP)\" [RFC7483], and \"HTTP Usage in the Registration Data\n \
    \  Access Protocol (RDAP)\" [RFC7480].\n   One goal of RDAP is to provide security\
    \ services that do not exist in\n   the WHOIS [RFC3912] protocol, including access\
    \ control,\n   authentication, authorization, availability, data confidentiality,\n\
    \   and data integrity.  This document describes how each of these\n   services\
    \ is achieved by RDAP using features that are available in\n   other protocol\
    \ layers.  Additional or alternative mechanisms can be\n   added in the future.\
    \  Where applicable, informative references to\n   requirements for a WHOIS replacement\
    \ service [RFC3707] are noted.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.1.  Acronyms and Abbreviations
  contents:
  - "2.1.  Acronyms and Abbreviations\n      DNR: Domain Name Registry\n      HTTP:\
    \ Hypertext Transfer Protocol\n      JSON: JavaScript Object Notation\n      RDAP:\
    \ Registration Data Access Protocol\n      RIR: Regional Internet Registry\n \
    \     TLS: Transport Layer Security\n"
- title: 3.  Information Security Services and RDAP
  contents:
  - "3.  Information Security Services and RDAP\n   RDAP itself does not include native\
    \ security services.  Instead, RDAP\n   relies on features that are available\
    \ in other protocol layers to\n   provide needed security services, including\
    \ access control,\n   authentication, authorization, availability, data confidentiality,\n\
    \   and data integrity.  A description of each of these security services\n  \
    \ can be found in \"Internet Security Glossary, Version 2\" [RFC4949].\n   No\
    \ requirements have been identified for other security services.\n"
- title: 3.1.  Access Control
  contents:
  - "3.1.  Access Control\n   WHOIS does not include specific features to control\
    \ access to\n   registration information.  As described in the following sections,\n\
    \   RDAP includes features to identify, authenticate, and authorize\n   clients,\
    \ allowing server operators to control access to information\n   based on a client's\
    \ identity and associated authorizations.\n   Information returned to a client\
    \ can be clearly marked with a status\n   value (see Section 10.2.2 of [RFC7483])\
    \ that identifies the access\n   granted to the client.\n"
- title: 3.2.  Authentication
  contents:
  - "3.2.  Authentication\n   This section describes security authentication mechanisms\
    \ and the\n   need for authorization policies to include them.  It describes\n\
    \   requirements for the implementations of clients and servers but does\n   not\
    \ dictate the policies of server operators.  For example, a server\n   operator\
    \ with no policy regarding differentiated or tiered access to\n   data will have\
    \ no authorization mechanisms and will have no need for\n   any type of authentication.\
    \  A server operator with policies on\n   differentiated access will have to construct\
    \ an authorization scheme\n   and will need to follow the specified authentication\
    \ requirements.\n   WHOIS does not provide features to identify and authenticate\
    \ clients.\n   As noted in Section 3.1.4.2 of \"Cross Registry Internet Service\n\
    \   Protocol (CRISP) Requirements\" [RFC3707], there is utility in\n   allowing\
    \ server operators to offer \"varying degrees of access\n   depending on policy\
    \ and need.\"  Clients have to be identified and\n   authenticated to provide\
    \ that utility.\n   RDAP's authentication framework needs to accommodate anonymous\
    \ access\n   as well as verification of identities using a range of authentication\n\
    \   methods and credential services.  To that end, RDAP clients and\n   servers\
    \ MUST implement the authentication framework specified in\n   \"Hypertext Transfer\
    \ Protocol (HTTP/1.1): Authentication\" [RFC7235].\n   The \"basic\" scheme can\
    \ be used to send a client's user name and\n   password to a server in plaintext,\
    \ base64-encoded form.  The \"digest\"\n   scheme can be used to authenticate\
    \ a client without exposing the\n   client's plaintext password.  If the \"basic\"\
    \ scheme is used, HTTP\n   over TLS [RFC2818] MUST be used to protect the client's\
    \ credentials\n   from disclosure while in transit (see Section 3.5).\n   Servers\
    \ MUST support either Basic or Digest authentication; they are\n   not required\
    \ to support both.  Clients MUST support both to\n   interoperate with servers\
    \ that support one or the other.  Servers may\n   provide a login page that triggers\
    \ HTTP authentication.  Clients\n   should continue sending the HTTP authentication\
    \ header once they\n   receive an initial 401 (Unauthorized) response from the\
    \ HTTP server\n   as long as the scheme portion of the URL doesn't change.\n \
    \  The Transport Layer Security protocol [RFC5246] includes an optional\n   feature\
    \ to identify and authenticate clients who possess and present\n   a valid X.509\
    \ digital certificate [RFC5280].  Support for this\n   feature is OPTIONAL.\n\
    \   RDAP does not impose any unique server authentication requirements.\n   The\
    \ server authentication provided by TLS fully addresses the needs\n   of RDAP.\
    \  In general, transports for RDAP must either provide a\n   TLS-protected transport\
    \ (e.g., HTTPS) or a mechanism that provides an\n   equivalent level of server\
    \ authentication.\n   Work on HTTP authentication methods continues.  RDAP is\
    \ designed to\n   be agile enough to support additional methods as they are defined.\n"
- title: 3.2.1.  Federated Authentication
  contents:
  - "3.2.1.  Federated Authentication\n   The traditional client-server authentication\
    \ model requires clients\n   to maintain distinct credentials for every RDAP server.\
    \  This\n   situation can become unwieldy as the number of RDAP servers\n   increases.\
    \  Federated authentication mechanisms allow clients to use\n   one credential\
    \ to access multiple RDAP servers and reduce client\n   credential management\
    \ complexity.  RDAP MAY include a federated\n   authentication mechanism that\
    \ permits a client to access multiple\n   RDAP servers in the same federation\
    \ with one credential.\n   Federated authentication mechanisms used by RDAP MUST\
    \ be fully\n   supported by HTTP.  OAuth, OpenID, Security Assertion Markup Language\n\
    \   (SAML), and mechanisms based on Certification Authority (CA) are all\n   possible\
    \ approaches to provide federated authentication.  At the time\n   of this document's\
    \ publication, negotiation or advertisement of\n   federated authentication services\
    \ is still an undefined mechanism by\n   the noted federated authentication protocols.\
    \  Developing this\n   mechanism is beyond the scope of this document.\n   The\
    \ OAuth authorization framework [RFC6749] describes a method for\n   users to\
    \ access protected web resources without having to hand out\n   their credentials.\
    \  Instead, clients are issued access tokens by\n   authorization servers with\
    \ the permission of the resource owners.\n   Using OAuth, multiple RDAP servers\
    \ can form a federation, and the\n   clients can access any server in the same\
    \ federation by providing one\n   credential registered in any server in that\
    \ federation.  The OAuth\n   authorization framework is designed for use with\
    \ HTTP and thus can be\n   used with RDAP.\n   OpenID [OpenID] is a decentralized\
    \ single sign-on authentication\n   system that allows users to log in at multiple\
    \ web sites with one ID\n   instead of having to create multiple unique accounts.\
    \  An end user\n   can freely choose which OpenID provider to use and can preserve\
    \ their\n   Identifier if they switch OpenID providers.\n   Note that OAuth and\
    \ OpenID do not consistently require data\n   confidentiality services to protect\
    \ interactions between providers\n   and consumers.  HTTP over TLS [RFC2818] can\
    \ be used as needed to\n   provide protection against man-in-the-middle attacks.\n\
    \   SAML 2.0 [SAML] is an XML-based protocol that can be used to\n   implement\
    \ web-based authentication and authorization services,\n   including single sign\
    \ on.  It uses security tokens containing\n   assertions to exchange information\
    \ about an end user between an\n   identity provider and a service provider.\n\
    \   The Transport Layer Security protocol describes the specification of\n   a\
    \ client certificate in Section 7.4.6 of [RFC5246].  Clients who\n   possess and\
    \ present a valid X.509 digital certificate, issued by a\n   CA, could be identified\
    \ and authenticated by a server who trusts the\n   corresponding CA.  A certificate\
    \ authentication method can be used to\n   achieve federated authentication in\
    \ which multiple RDAP servers all\n   trust the same CAs, and then any client\
    \ with a certificate issued by\n   a trusted CA can access any RDAP server in\
    \ the federation.  This\n   certificate-based mechanism is supported by HTTPS\
    \ and can be used\n   with RDAP.\n"
- title: 3.3.  Authorization
  contents:
  - "3.3.  Authorization\n   WHOIS does not provide services to grant different levels\
    \ of access\n   to clients based on a client's authenticated identity.  As noted\
    \ in\n   Section 3.1.4.2 of \"Cross Registry Internet Service Protocol (CRISP)\n\
    \   Requirements\" [RFC3707], there is utility in allowing server\n   operators\
    \ to offer \"varying degrees of access depending on policy and\n   need.\"  Access\
    \ control decisions can be made once a client's identity\n   has been established\
    \ and authenticated (see Section 3.2).\n   Server operators MAY offer varying\
    \ degrees of access depending on\n   policy and need in conjunction with the authentication\
    \ methods\n   described in Section 3.2.  If such varying degrees of access are\n\
    \   supported, an RDAP server MUST provide granular access controls (that\n  \
    \ is, per registration data object) in order to implement authorization\n   policies.\
    \  Some examples:\n   -  Clients will be allowed access only to data for which\
    \ they have a\n      relationship.\n   -  Unauthenticated or anonymous access\
    \ status may not yield any\n      contact information.\n   -  Full access may\
    \ be granted to a special group of authenticated\n      clients.\n   The type\
    \ of access allowed by a server will most likely vary from one\n   operator to\
    \ the next.  A description of the response privacy\n   considerations associated\
    \ with different levels of authorization can\n   be found in Section 13 of [RFC7483].\n"
- title: 3.4.  Availability
  contents:
  - "3.4.  Availability\n   An RDAP service has to be available to be useful.  There\
    \ are no RDAP-\n   unique requirements to provide availability, but as a general\n\
    \   security consideration, a service operator needs to be aware of the\n   issues\
    \ associated with denial of service.  A thorough reading of\n   \"Internet Denial-of-Service\
    \ Considerations\" [RFC4732] is advised.\n   An RDAP service MAY use an HTTP throttling\
    \ mechanism to limit the\n   number of queries that a single client can send in\
    \ a given period of\n   time.  If used, the server SHOULD return an HTTP 429 (Too\
    \ Many\n   Requests) response code as described in \"Additional HTTP Status\n\
    \   Codes\" [RFC6585].  A client that receives a 429 response SHOULD\n   decrease\
    \ its query rate and honor the Retry-After header field if one\n   is present.\
    \  Note that this is not a defense against\n   denial-of-service attacks, since\
    \ a malicious client could ignore the\n   code and continue to send queries at\
    \ a high rate.  A server might use\n   another response code if it did not wish\
    \ to reveal to a client that\n   rate limiting is the reason for the denial of\
    \ a reply.\n"
- title: 3.5.  Data Confidentiality
  contents:
  - "3.5.  Data Confidentiality\n   WHOIS does not provide the ability to protect\
    \ data from inadvertent\n   disclosure while in transit.  RDAP uses HTTP over\
    \ TLS [RFC2818] to\n   provide that protection by encrypting all traffic sent\
    \ on the\n   connection between client and server.  HTTP over TLS MUST be used\
    \ to\n   protect all client-server exchanges unless operational constraints\n\
    \   make it impossible to meet this requirement.  It is also possible to\n   encrypt\
    \ discrete objects (such as command path segments and JSON-\n   encoded response\
    \ objects) at one endpoint, send them to the other\n   endpoint via an unprotected\
    \ transport protocol, and decrypt the\n   object on receipt.  Encryption algorithms\
    \ as described in \"Internet\n   Security Glossary, Version 2\" [RFC4949] are\
    \ commonly used to provide\n   data confidentiality at the object level.\n   There\
    \ are no current requirements for object-level data\n   confidentiality using\
    \ encryption.  Support for this feature could be\n   added to RDAP in the future.\n\
    \   As noted in Section 3.2, the HTTP \"basic\" authentication scheme can\n  \
    \ be used to authenticate a client.  When this scheme is used, HTTP\n   over TLS\
    \ MUST be used to protect the client's credentials from\n   disclosure while in\
    \ transit.  If the policy of the server operator\n   requires encryption to protect\
    \ client-server data exchanges (such as\n   to protect non-public data that cannot\
    \ be accessed without client\n   identification and authentication), HTTP over\
    \ TLS MUST be used to\n   protect those exchanges.\n   A description of privacy\
    \ threats that can be addressed with\n   confidentiality services can be found\
    \ in Section 4.  Section 10.2.2\n   of [RFC7483] describes status values that\
    \ can be used to describe\n   operator actions used to protect response data from\
    \ disclosure to\n   unauthorized clients.\n"
- title: 3.6.  Data Integrity
  contents:
  - "3.6.  Data Integrity\n   WHOIS does not provide the ability to protect data from\
    \ modification\n   while in transit.  Web services such as RDAP commonly use HTTP\
    \ over\n   TLS [RFC2818] to provide that protection by using a keyed Message\n\
    \   Authentication Code (MAC) to detect modifications.  It is also\n   possible\
    \ to sign discrete objects (such as command path segments and\n   JSON-encoded\
    \ response objects) at one endpoint, send them to the\n   other endpoint via a\
    \ transport protocol, and validate the signature\n   of the object on receipt.\
    \  Digital signature algorithms as described\n   in \"Internet Security Glossary,\
    \ Version 2\" [RFC4949] are commonly\n   used to provide data integrity at the\
    \ object level.\n   There are no current requirements for object-level data integrity\n\
    \   using digital signatures.  Support for this feature could be added to\n  \
    \ RDAP in the future.\n   The most specific need for this service is to provide\
    \ assurance that\n   HTTP 30x redirection hints [RFC7231] and response elements\
    \ returned\n   from the server are not modified while in transit.  If the policy\
    \ of\n   the server operator requires message integrity for client-server data\n\
    \   exchanges, HTTP over TLS MUST be used to protect those exchanges.\n"
- title: 4.  Privacy Threats Associated with Registration Data
  contents:
  - "4.  Privacy Threats Associated with Registration Data\n   Registration data has\
    \ historically included personal data about\n   registrants.  WHOIS services have\
    \ historically made this information\n   available to the public, creating a privacy\
    \ risk by revealing the\n   personal details of registrants.  WHOIS services have\
    \ not had the\n   benefit of authentication or access control mechanisms to gate\
    \ access\n   to registration data.  As a result of this, proxy and privacy\n \
    \  services have arisen to shield the identities of registrants.\n   The standardization\
    \ of RDAP does not change or impact the data that\n   operators may require to\
    \ be collected from registrants, but it\n   provides support for a number of mechanisms\
    \ that may be used to\n   mitigate privacy threats to registrants should operators\
    \ choose to\n   use them.\n   RDAP includes mechanisms that can be used to authenticate\
    \ clients,\n   allowing servers to support tiered access based on local policy.\n\
    \   This means that all registration data need no longer be public, and\n   personal\
    \ data or data that may be considered more sensitive can have\n   its access restricted\
    \ to specifically privileged clients.\n   RDAP data structures allow servers to\
    \ indicate via status values when\n   data returned to clients has been made private,\
    \ redacted, obscured,\n   or registered by a proxy.  \"Private\" means that the\
    \ data is not\n   designated for public consumption.  \"Redacted\" means that\
    \ some\n   registration data fields are not being made available.  \"Obscured\"\
    \n   means that data has been altered for the purposes of not readily\n   revealing\
    \ the actual registration information.  One option that\n   operators have available\
    \ to them to reduce privacy risks to\n   registrants is to adopt policies that\
    \ make use of these status values\n   to restrict the registrant data shared with\
    \ any or all clients\n   according to the sensitivity of the data, the privileges\
    \ of the\n   clients, or some other heuristics.\n   RDAP uses the jCard [RFC7095]\
    \ standard format for entity\n   representation.  Operators may find that many\
    \ of the jCard fields are\n   irrelevant for registry operation purposes or that\
    \ they have no\n   reason to collect information from registrants that would correspond\n\
    \   to certain fields.  Operators wishing to reduce privacy risks for\n   registrants\
    \ may restrict which information they collect and/or which\n   fields they populate\
    \ in responses.\n   In addition to privacy risks to registrants, there are also\
    \ potential\n   privacy risks for those who query registration data.  For example,\n\
    \   the fact that a registry employee performs a particular query may\n   reveal\
    \ information about the employee's activities that he or she\n   would have preferred\
    \ to keep private.  RDAP supports the use of HTTP\n   over TLS to provide privacy\
    \ protection for those querying registrant\n   data as well as registrants, unless\
    \ operational constraints make it\n   impossible to meet this requirement.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   One of the goals of RDAP is to provide security\
    \ services that do not\n   exist in the WHOIS protocol.  This document describes\
    \ the security\n   services provided by RDAP and associated protocol layers, including\n\
    \   authentication, authorization, availability, data confidentiality,\n   and\
    \ data integrity.  Non-repudiation services were also considered\n   and ultimately\
    \ rejected due to a lack of requirements.  There are,\n   however, currently deployed\
    \ WHOIS servers that can return signed\n   responses that provide non-repudiation\
    \ with proof of origin.  RDAP\n   might need to be extended to provide this service\
    \ in the future.\n   As an HTTP-based protocol, RDAP is susceptible to code injection\n\
    \   attacks.  Code injection refers to adding code into a computer system\n  \
    \ or program to alter the course of execution.  There are many types of\n   code\
    \ injection, including SQL injection, dynamic variable or function\n   injection,\
    \ include-file injection, shell injection, and HTML-script\n   injection, among\
    \ others.  Data confidentiality and integrity services\n   provide a measure of\
    \ defense against man-in-the-middle injection\n   attacks, but vulnerabilities\
    \ in both client- and server-side software\n   make it possible for injection\
    \ attacks to succeed.  Consistently\n   checking and validating server credentials\
    \ can help detect\n   man-in-the-middle attacks.\n   As noted in Section 3.2.1,\
    \ digital certificates can be used to\n   implement federated authentication.\
    \  There is a risk of too\n   promiscuous, or even rogue, CAs being included in\
    \ the list of\n   acceptable CAs that the TLS server sends the client as part\
    \ of the\n   TLS client-authentication handshake and lending the appearance of\n\
    \   trust to certificates signed by those CAs.  Periodic monitoring of\n   the\
    \ list of CAs that RDAP servers trust for client authentication can\n   help reduce\
    \ this risk.\n   The Transport Layer Security protocol [RFC5246] includes a null\n\
    \   cipher suite that does not encrypt data and thus does not provide\n   data\
    \ confidentiality.  This option MUST NOT be used when data\n   confidentiality\
    \ services are needed.  Additional considerations for\n   secure use of TLS are\
    \ described in [SECURE-TLS-DTLS].\n   Data integrity services are sometimes mistakenly\
    \ associated with\n   directory service operational policy requirements focused\
    \ on data\n   accuracy.  \"Accuracy\" refers to the truthful association of data\n\
    \   elements (such as names, addresses, and telephone numbers) in the\n   context\
    \ of a particular directory object (such as a domain name).\n   Accuracy requirements\
    \ are out of scope for this protocol.\n   Additional security considerations are\
    \ described in the\n   specifications for HTTP [RFC7231], HTTP Basic and Digest\
    \ access\n   authentication [RFC7235], HTTP over TLS [RFC2818], and additional\n\
    \   HTTP status codes [RFC6585].  Security considerations for federated\n   authentication\
    \ systems can be found in the OAuth [RFC6749] and OpenID\n   [OpenID] specifications.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2818]\
    \  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000,\n              <http://www.rfc-editor.org/info/rfc2818>.\n\
    \   [RFC6585]  Nottingham, M. and R. Fielding, \"Additional HTTP Status\n    \
    \          Codes\", RFC 6585, April 2012,\n              <http://www.rfc-editor.org/info/rfc6585>.\n\
    \   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n      \
    \        June 2014, <http://www.rfc-editor.org/info/rfc7231>.\n   [RFC7235]  Fielding,\
    \ R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol (HTTP/1.1):\
    \ Authentication\", RFC 7235, June 2014,\n              <http://www.rfc-editor.org/info/rfc7235>.\n\
    \   [RFC7480]  Newton, A., Ellacott, B., and N. Kong, \"HTTP Usage in the\n  \
    \            Registration Data Access Protocol (RDAP)\", RFC 7480, March\n   \
    \           2015, <http://www.rfc-editor.org/info/rfc7480>.\n   [RFC7482]  Newton,\
    \ A. and S. Hollenbeck, \"Registration Data Access\n              Protocol (RDAP)\
    \ Query Format\", RFC 7482, March 2015,\n              <http://www.rfc-editor.org/info/rfc7482>.\n\
    \   [RFC7483]  Newton, A. and S. Hollenbeck, \"JSON Responses for the\n      \
    \        Registration Data Access Protocol (RDAP)\", RFC 7483, March\n       \
    \       2015, <http://www.rfc-editor.org/info/rfc7483>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [OpenID]   OpenID Foundation, \"OpenID Authentication\
    \ 2.0 - Final\",\n              December 2007, <http://specs.openid.net/auth/2.0>.\n\
    \   [RFC3707]  Newton, A., \"Cross Registry Internet Service Protocol\n      \
    \        (CRISP) Requirements\", RFC 3707, February 2004,\n              <http://www.rfc-editor.org/info/rfc3707>.\n\
    \   [RFC3912]  Daigle, L., \"WHOIS Protocol Specification\", RFC 3912,\n     \
    \         September 2004, <http://www.rfc-editor.org/info/rfc3912>.\n   [RFC4732]\
    \  Handley, M., Ed., Rescorla, E., Ed., and IAB, \"Internet\n              Denial-of-Service\
    \ Considerations\", RFC 4732, December\n              2006, <http://www.rfc-editor.org/info/rfc4732>.\n\
    \   [RFC4949]  Shirey, R., \"Internet Security Glossary, Version 2\", FYI\n  \
    \            36, RFC 4949, August 2007,\n              <http://www.rfc-editor.org/info/rfc4949>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008,\n          \
    \    <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]  Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet\
    \ X.509 Public Key\n              Infrastructure Certificate and Certificate Revocation\
    \ List\n              (CRL) Profile\", RFC 5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC6749]  Hardt, D., Ed., \"The OAuth 2.0 Authorization Framework\",\n  \
    \            RFC 6749, October 2012,\n              <http://www.rfc-editor.org/info/rfc6749>.\n\
    \   [RFC7095]  Kewisch, P., \"jCard: The JSON Format for vCard\", RFC 7095,\n\
    \              January 2014, <http://www.rfc-editor.org/info/rfc7095>.\n   [SAML]\
    \     OASIS, \"Security Assertion Markup Language (SAML) v2.0\",\n           \
    \   March 2005, <https://www.oasis-open.org/\n              standards#samlv2.0>.\n\
    \   [SECURE-TLS-DTLS]\n              Sheffer, Y., Holz, R., and P. Saint-Andre,\n\
    \              \"Recommendations for Secure Use of TLS and DTLS\", Work in\n \
    \             Progress, draft-ietf-uta-tls-bcp-09, February 2015.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to acknowledge the following individuals\
    \ for\n   their contributions to this document: Richard Barnes, Marc Blanchet,\n\
    \   Alissa Cooper, Ernie Dainow, Spencer Dawkins, Jean-Philippe Dionne,\n   Byron\
    \ Ellacott, Stephen Farrell, Tony Hansen, Peter Koch, Murray\n   Kucherawy, Barry\
    \ Leiba, Andrew Newton, and Linlin Zhou.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Scott Hollenbeck\n   Verisign Labs\n   12061 Bluemont\
    \ Way\n   Reston, VA  20190\n   United States\n   EMail: shollenbeck@verisign.com\n\
    \   URI:   http://www.verisignlabs.com/\n   Ning Kong\n   China Internet Network\
    \ Information Center\n   4 South 4th Street, Zhongguancun, Haidian District\n\
    \   Beijing  100190\n   China\n   Phone: +86 10 5881 3147\n   EMail: nkong@cnnic.cn\n"
