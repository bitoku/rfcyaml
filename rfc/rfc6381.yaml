- title: __initial_text__
  contents:
  - '    The ''Codecs'' and ''Profiles'' Parameters for "Bucket" Media Types

    '
- title: Abstract
  contents:
  - "Abstract\n   Several MIME type/subtype combinations exist that can contain\n\
    \   different media formats.  A receiving agent thus needs to examine the\n  \
    \ details of such media content to determine if the specific elements\n   can\
    \ be rendered given an available set of codecs.  Especially when\n   the end system\
    \ has limited resources, or the connection to the end\n   system has limited bandwidth,\
    \ it is helpful to know from the Content-\n   Type alone if the content can be\
    \ rendered.\n   This document specifies two parameters, 'codecs' and 'profiles',\
    \ that\n   are used with various MIME types or type/subtype combinations to\n\
    \   allow for unambiguous specification of the codecs employed by the\n   media\
    \ formats contained within, or the profile(s) of the overall\n   container format.\
    \  This document obsoletes RFC 4281; RFC 4281 defines\n   the 'codecs' parameter,\
    \ which this document retains in a backwards\n   compatible manner with minor\
    \ clarifications; the 'profiles' parameter\n   is added by this document.\n  \
    \ By labeling content with the specific codecs indicated to render the\n   contained\
    \ media, receiving systems can determine if the codecs are\n   supported by the\
    \ end system, and if not, can take appropriate action\n   (such as rejecting the\
    \ content, sending notification of the\n   situation, transcoding the content\
    \ to a supported type, fetching and\n   installing the required codecs, further\
    \ inspection to determine if it\n   will be sufficient to support a subset of\
    \ the indicated codecs,\n   etc.).\n   Similarly, the profiles can provide an\
    \ overall indication, to the\n   receiver, of the specifications with which the\
    \ content complies.\n   This is an indication of the compatibility of the container\
    \ format\n   and its contents to some specification.  The receiver may be able\
    \ to\n   work out the extent to which it can handle and render the content by\n\
    \   examining to see which of the declared profiles it supports, and what\n  \
    \ they mean.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6381.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................5\n  \
    \ 3. The 'Codecs' Parameter ..........................................5\n    \
    \  3.1. Introduction ...............................................5\n      3.2.\
    \ Generic Syntax .............................................7\n      3.3. ISO\
    \ Base Media File Format Name Space ......................8\n      3.4. ISO-Family\
    \ Syntax .........................................11\n      3.5. Use in Additional\
    \ Media Types .............................11\n      3.6. Examples ..................................................12\n\
    \      3.7. Additional Media Feature Details ..........................12\n  \
    \ 4. The 'Profiles' Parameter .......................................12\n    \
    \  4.1. Introduction ..............................................12\n      4.2.\
    \ Formal Declaration ........................................13\n      4.3. 'Profiles'\
    \ Parameter Definition ...........................14\n      4.4. Profiles for\
    \ Files Carrying MP4RA-Registered Brands .......14\n      4.5. 'Profiles' Parameter\
    \ BNF Definition .......................15\n   5. IANA Considerations ............................................15\n\
    \   6. Registration ...................................................15\n  \
    \ 7. Security Considerations ........................................16\n   8.\
    \ Differences from RFC 4281 ......................................16\n   9. Acknowledgements\
    \ ...............................................17\n   10. References ....................................................17\n\
    \      10.1. Normative References .....................................17\n  \
    \    10.2. Informative References ...................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   One of the original motivations for MIME is the ability\
    \ to identify\n   the specific media type of a message part.  However, due to\
    \ various\n   factors, it is not always possible from looking at the MIME type\
    \ and\n   subtype to know which specific media formats are contained in the\n\
    \   body part or which codecs are indicated in order to render the\n   content.\n\
    \   There are several media type/subtypes (either currently registered or\n  \
    \ deployed with registration pending) that contain codecs chosen from a\n   set.\
    \  In the absence of the parameters described here, it is\n   necessary to examine\
    \ each media element in order to determine the\n   codecs or other features required\
    \ to render the content.  For\n   example, video/3gpp may contain any of the video\
    \ formats H.263\n   Profile 0, H.263 Profile 3, H.264, MPEG-4 Simple Profile,\
    \ and/or any\n   of the audio formats Adaptive Multi Rate (AMR), Adaptive Multi\
    \ Rate -\n   WideBand (AMR-WB), Extended AMR-WB, Advanced Audio Coding (AAC),\
    \ or\n   Enhanced aacPlus, as specified in [3GPP-Formats].\n   In some cases,\
    \ the specific codecs can be determined by examining the\n   header information\
    \ of the media content.  While this isn't as bad as\n   examining the entire content,\
    \ it still requires specialized knowledge\n   of each format and is resource consumptive.\n\
    \   This ambiguity can be a problem for various clients and servers.  For\n  \
    \ example, it presents a significant burden to Multimedia Messaging\n   (MMS)\
    \ servers, which must examine the media sent in each message in\n   order to determine\
    \ which codecs are required to render the content.\n   Only then can such a server\
    \ determine if the content requires\n   transcoding or specialized handling prior\
    \ to being transmitted to the\n   handset.\n   Additionally, it presents a challenge\
    \ to smart clients on devices\n   with constrained memory, processing power, or\
    \ transmission bandwidth\n   (such as cellular telephones and PDAs).  Such clients\
    \ often need to\n   determine in advance if they are currently capable of rendering\
    \ the\n   content contained in an MMS or email message.\n   Ambiguity:\n   o \
    \ audio/3gpp can contain AMR, AAC, AMR-WB, Extended AMR-WB, or\n      Enhanced\
    \ aacPlus contents as specified in [3GPP-Formats].\n   o  audio/3gpp2 can contain\
    \ AMR, AAC, 13K (as per [RFC3625]), Enhanced\n      Variable Rate Codec (EVRC),\
    \ Selectable Mode Vocoder (SMV), or\n      Variable Multi Rate WideBand (VMR-WB),\
    \ as specified in\n      [3GPP2-Formats].\n   o  video/3gpp can contain H.263\
    \ Profile 0, H.263 Profile 3, H.264,\n      MPEG-4 Simple Profile, and/or AMR,\
    \ AMR-WB, Extended AMR-WB, AAC,\n      or Enhanced aacPlus, as specified in [3GPP-Formats].\n\
    \   o  video/3gpp2 can contain H.263 Profile 0, H.263 Profile 3, H.264,\n    \
    \  MPEG-4 Simple Profile, and/or AMR, AAC, 13K (as per [RFC3625]),\n      EVRC,\
    \ SMV, or VMR-WB, as specified in [3GPP2-Formats].\n   o  audio/mp4 can include\
    \ any codec defined in MPEG-1, MPEG-2, MPEG-4\n      or registered at the MP4\
    \ registration authority [MP4RA].\n   o  video/mp4 has the same issues as audio/mp4,\
    \ and in addition many\n      video codecs, and especially the MPEG codecs, have\
    \ a variety of\n      profiles and levels, not all of which are supported by every\n\
    \      implementation.\n   Note that there are additional media types that are\
    \ ambiguous, but\n   are outside the scope of this document, including:\n   o\
    \  video/mpeg4-generic, which can contain anything allowed by the\n      MPEG-4\
    \ specification, or any codec registered with the MP4\n      registration authority\
    \ [MP4RA];\n   With each \"bucket\" type, a receiving agent only knows that it\
    \ has a\n   container format.  It doesn't even know whether content that is\n\
    \   labeled video/3gpp or video/3gpp2 contains video; it might be audio\n   only,\
    \ audio and video, or video only.\n   A solution that permits a receiving agent\
    \ to determine the specific\n   codecs or profiles required to render media content\
    \ would help\n   provide efficient and scalable servers, especially for Multimedia\n\
    \   Messaging (MMS), and aid the growth of multimedia services in\n   wireless\
    \ networks.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in \"Key words for use in\n   RFCs to Indicate Requirement Levels\" [RFC2119]\
    \ .\n   The syntax in this document uses the BNF rules specified in [RFC2045]\n\
    \   and [RFC2231].\n"
- title: 3.  The 'Codecs' Parameter
  contents:
  - '3.  The ''Codecs'' Parameter

    '
- title: 3.1.  Introduction
  contents:
  - "3.1.  Introduction\n   This section adds a parameter to allow unambiguous specification\
    \ of\n   all codecs indicated to render the content in the MIME part.  This\n\
    \   parameter is optional in all current types to which it is added.\n   Future\
    \ types that contain ambiguity are strongly encouraged to\n   include this parameter.\n\
    \   This parameter applies to:\n   1.  Files in the family based on the ISO Base\
    \ Media File Format\n       [ISO14496-12] called \"ISO family files\" in this\
    \ specification.\n   2.  The QuickTime file format, owned by Apple, Inc.\n   This\
    \ includes the media types:\n   1.  audio/3gpp, video/3gpp [RFC3839]\n   2.  audio/3gpp2,\
    \ video/3gpp2 [RFC4393]\n   3.  audio/mp4, video/mp4, application/mp4 [RFC4337]\n\
    \   4.  video/quicktime\n   5.  application/mp21 (see note below)\n   Note that\
    \ MPEG-21 files under the type application/mp21 may, but are\n   not required\
    \ to, contain a top-level 'moov' atom providing a timed,\n   coded, resource.\
    \  The 'codecs' parameter SHOULD only be used for\n   MPEG-21 files when this\
    \ timed material is also present in the file.\n   Parameter name: codecs\n   Parameter\
    \ value: A single value, or a comma-separated list of values\n   identifying the\
    \ codec(s) indicated to render the content in the body\n   part.\n   Each value\
    \ consists of one or more dot-separated elements.  The name\n   space for the\
    \ first element is determined by the MIME type.  The name\n   space for each subsequent\
    \ element is determined by the preceding\n   element.  The precise syntax is given\
    \ below in the Generic Syntax\n   (Section 3.2).\n   Note that, per [RFC2045],\
    \ some characters (including the comma used\n   to separate multiple values) require\
    \ that the entire parameter value\n   be enclosed in quotes.\n   An element MAY\
    \ include an octet that [RFC2045] requires encoding.  In\n   this case, [RFC2231]\
    \ is used: an asterisk (\"*\") is placed at the end\n   of the parameter name\
    \ (becoming 'codecs*' instead of 'codecs'), the\n   parameter value usually starts\
    \ with two single quote (\"'\") characters\n   (indicating that neither character\
    \ set nor language is specified),\n   and each octet that requires encoding is\
    \ represented as a percent\n   sign (\"%\") followed by two hexadecimal digits.\
    \  Note that, when the\n   [RFC2231] form is used, the percent sign, asterisk,\
    \ and single quote\n   characters have special meaning and so MUST themselves\
    \ be percent\n   encoded.\n           Examples of Generic Syntax:\n          \
    \     codecs=a.bb.ccc.d\n               codecs=\"a.bb.ccc.d, e.fff\"\n       \
    \        codecs*=''fo%2e\n               codecs*=\"''%25%20xz, gork\"\n   When\
    \ the 'codecs' parameter is used, it MUST contain all codecs\n   indicated by\
    \ the content present in the body part.  The 'codecs'\n   parameter MUST NOT include\
    \ any codecs that are not indicated by any\n   media elements in the body part.\n\
    \   In some cases, not all indicated codecs are absolutely required in\n   order\
    \ to render the content.  Therefore, when a receiver does not\n   support all\
    \ listed codecs, special handling might be required.  For\n   example, the media\
    \ element(s) could be examined in order to determine\n   if an unsupported codec\
    \ is actually required (e.g., there may be\n   alternative tracks (such as English\
    \ and Spanish audio), there may be\n   timed text that can be dropped, etc.).\n\
    \   Although the encoder MUST create parameter values that are complete\n   and\
    \ accurate in 'breadth' (that is, the encoder MUST report all four-\n   character\
    \ codes used in all tracks for ISO family files, for example)\n   receivers MUST\
    \ NOT rely on the parameter values being complete in\n   'depth'.  (If the hierarchical\
    \ rules for a given code (e.g., 'qvxy')\n   were written after a server was implemented,\
    \ for example, that server\n   would not know what elements to place after 'qvxy').\n\
    \   Although a mismatch is not permitted by this specification, the body\n   part\
    \ is definitive of the actual codecs needed; the parameter\n   supplied here is\
    \ informative.  If a receiver encounters a body part\n   whose 'codecs' parameter\
    \ contains codecs that are not indicated by\n   any media elements, then the receiver\
    \ SHOULD process the body part by\n   discarding the information in the 'codecs'\
    \ parameter.\n   If a receiver encounters a body part whose 'codecs' parameter\
    \ does\n   not contain all codecs indicated by the media elements, then the\n\
    \   receiver MAY process the body part by discarding the information in\n   the\
    \ 'codecs' parameter.\n"
- title: 3.2.  Generic Syntax
  contents:
  - "3.2.  Generic Syntax\n   The 'codecs' parameter takes either of two forms.  The\
    \ first form is\n   used when the value does not contain any octets that require\n\
    \   encoding.  The second form uses [RFC2231] to allow arbitrary octets\n   to\
    \ be encoded.  With either form, quotes allow for commas and other\n   characters\
    \ in <tspecials> (quotes MAY be used even when not\n   required).\n   This BNF\
    \ uses the rules specified in [RFC2045] and [RFC2231].\n   While [RFC2231] allows\
    \ specification of character set and language,\n   this parameter does not contain\
    \ items intended for human consumption,\n   and hence makes no use of language.\
    \  The language element SHOULD be\n   omitted; the character set SHOULD also be\
    \ omitted.  A receiver MAY\n   ignore language and MAY choose to support only\
    \ US-ASCII [RFC1345] and\n   UTF-8 [RFC3629].\n   Implementations MUST NOT add\
    \ comments and/or folding white space\n   (CFWS) between the tokens except after\
    \ \",\".  TOKEN is defined in\n   [RFC2045], and <ext-octet> and <attribute-char>\
    \ are defined in\n   [RFC2231].\n   The BNF syntax is as follows:\n      codecs\
    \      := cod-simple / cod-fancy\n      cod-simple  := \"codecs\" \"=\" unencodedv\n\
    \      unencodedv  := id-simple / simp-list\n      simp-list   := DQUOTE id-simple\
    \ *( \",\" id-simple ) DQUOTE\n      id-simple   := element\n                \
    \  ; \".\" reserved as hierarchy delimiter\n      element     := 1*octet-sim\n\
    \      octet-sim   := <any TOKEN character>\n                  ; Within a 'codecs'\
    \ parameter value, \".\" is reserved\n                  ; as a hierarchy delimiter\n\
    \      cod-fancy   := \"codecs*\" \"=\" encodedv\n      encodedv    := fancy-sing\
    \ / fancy-list\n      fancy-sing  := [charset] \"'\" [language] \"'\" id-encoded\n\
    \                  ; Parsers MAY ignore <language>\n                  ; Parsers\
    \ MAY support only US-ASCII and UTF-8\n      fancy-list  := DQUOTE [charset] \"\
    '\" [language] \"'\" id-list DQUOTE\n                  ; Parsers MAY ignore <language>\n\
    \                  ; Parsers MAY support only US-ASCII and UTF-8\n      id-list\
    \     := id-encoded *( \",\" id-encoded )\n      id-encoded  := encoded-elm *(\
    \ \".\" encoded-elm )\n                  ; \".\" reserved as hierarchy delimiter\n\
    \      encoded-elm := 1*octet-fancy\n      octet-fancy := ext-octet / attribute-char\n\
    \      DQUOTE      := %x22 ; \" (double quote)\n   Initial name space: This document\
    \ only defines values for files in\n   the ISO Base Media File Format and QuickTime\
    \ families.  Other file\n   formats may also define codec naming.\n"
- title: 3.3.  ISO Base Media File Format Name Space
  contents:
  - "3.3.  ISO Base Media File Format Name Space\n   For the ISO Base Media File Format,\
    \ and the QuickTime movie file\n   format, the first element of a 'codecs' parameter\
    \ value is a sample\n   description entry four-character code as registered by\
    \ the MP4\n   Registration Authority [MP4RA].  Values are case sensitive.\n  \
    \ Note that there are potentially multiple tracks in a file, each\n   potentially\
    \ carrying multiple sample entries (some but not all uses\n   of the ISO Base\
    \ Media File Format restrict the number of sample\n   entries in a track to one).\n\
    \   When the first element of a value is 'mp4a' (indicating some kind of\n   MPEG-4\
    \ audio), or 'mp4v' (indicating some kind of MPEG-4 part-2\n   video), or 'mp4s'\
    \ (indicating some kind of MPEG-4 Systems streams\n   such as MPEG-4 BInary Format\
    \ for Scenes (BIFS)), the second element\n   is the hexadecimal representation\
    \ of the MP4 Registration Authority\n   ObjectTypeIndication (OTI), as specified\
    \ in [MP4RA] and [MP41]\n   (including amendments).  Note that [MP4RA] uses a\
    \ leading \"0x\" with\n   these values, which is omitted here and hence implied.\n\
    \   One of the OTI values for 'mp4a' is 40 (identifying MPEG-4 audio).\n   For\
    \ this value, the third element identifies the audio\n   ObjectTypeIndication\
    \ (OTI) as defined in [MP4A] (including\n   amendments), expressed as a decimal\
    \ number.\n   For example, AAC low complexity (AAC-LC) has the value 2, so a\n\
    \   complete string for AAC-LC would be \"mp4a.40.2\".\n   One of the OTI values\
    \ for 'mp4v' is 20 (identifying MPEG-4 part-2\n   video).  For this value, the\
    \ third element identifies the video\n   ProfileLevelIndication as defined in\
    \ [MP4V] (including amendments),\n   expressed as a decimal number.\n   For example,\
    \ MPEG-4 Visual Simple Profile Level 0 has the value 9, so\n   a complete string\
    \ for MPEG-4 Visual Simple Profile Level 0 would be\n   \"mp4v.20.9\".\n   When\
    \ the first element of a value is a code indicating a codec from\n   the Advanced\
    \ Video Coding specification [AVC], specifically one of\n   the sample entries\
    \ defined in [AVC-Formats] (such as 'avc1', 'avc2',\n   'svc1', 'mvc1', and 'mvc2')\
    \ -- indicating AVC (H.264), Scalable Video\n   Coding (SVC), or Multiview Video\
    \ Coding (MVC), the second element\n   (referred to as 'avcoti' in the formal\
    \ syntax) is the hexadecimal\n   representation of the following three bytes in\
    \ the (subset) sequence\n   parameter set Network Abstraction Layer (NAL) unit\
    \ specified in\n   [AVC]:\n   (1)  profile_idc,\n   (2)  the byte containing the\
    \ constraint_set flags (currently\n        constraint_set0_flag through constraint_set5_flag,\
    \ and the\n        reserved_zero_2bits), and\n   (3)  level_idc.\n   Note that\
    \ the sample entries 'avc1' and 'avc2' do not necessarily\n   indicate that the\
    \ media only contains AVC NAL units.  In fact, the\n   media may be encoded as\
    \ an SVC or MVC profile and thus contain SVC or\n   MVC NAL units.  In order to\
    \ be able to determine which codec is used,\n   further information is necessary\
    \ (profile_idc).  Note also that\n   reserved_zero_2bits is required to be equal\
    \ to 0 in [AVC], but other\n   values for it may be specified in the future by\
    \ ITU-T or ISO/IEC.\n   This is as previously defined in the 3GPP File Format\
    \ specification\n   3GPP TS 26.244 [3GPP-Formats], Section A.2.2.\n   When SVC\
    \ or MVC content is coded in an AVC-compatible fashion, the\n   sample description\
    \ may include both an AVC configuration record and\n   an SVC or MVC configuration\
    \ record.  Under those circumstances, it is\n   recommended that the two configuration\
    \ records both be reported as\n   they may contain different AVC profile, level,\
    \ and compatibility\n   indicator values.  Thus, the codecs reported would include\
    \ the sample\n   description code (e.g., 'avc1') twice, with the values from one\
    \ of\n   the configuration records forming the 'avcoti' information in each.\n"
- title: 3.4.  ISO-Family Syntax
  contents:
  - "3.4.  ISO-Family Syntax\n   id-simple   :=/ id-iso\n   id-encoded  :=/ id-iso\n\
    \   id-iso      := iso-gen / iso-mpega / iso-mpegv / iso-avc\n   iso-gen     :=\
    \ cpid *( element / encoded-elm )\n               ; <element> used with <codecs-simple>\n\
    \               ; <encoded-elm> used with <codecs-fancy>\n               ;\n \
    \              ; Note that the BNF permits \".\" within <element>\n          \
    \     ; and <encoded-elm> but \".\" is reserved as the\n               ; hierarchy\
    \ delimiter\n   iso-mpega   := mp4a \".\" oti [ \".\" aud-oti ]\n   iso-mpegv\
    \   := mp4v \".\" oti [ \".\" vid-pli ]\n   iso-avc     := avc1  / avc2 / svc1\
    \ / mvc1 / mvc2 [ \".\" avcoti  ]\n   cpid        := 4(octet-simple / octet-fancy)\n\
    \               ; <octet-simple> used with <codecs-simple>\n               ; <octet-fancy>\
    \ used with <codecs-fancy>\n   mp4a        := %x6d.70.34.61 ; 'mp4a'\n   oti \
    \        := 2(DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\")\n       \
    \        ; leading \"0x\" omitted\n   avc1        := %x61.76.63.31 ; 'avc1'\n\
    \   avc2        := %x61.76.63.32 ; 'avc2'\n   svc1        := %x73.76.63.31 ; 'svc1'\n\
    \   mvc1        := %x6d.76.63.31 ; 'mvc1'\n   mvc2        := %x6d.76.63.32 ; 'mvc2'\n\
    \   avcoti      := 6(DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\")\n\
    \               ; leading \"0x\" omitted\n   aud-oti     := 1*DIGIT\n   mp4v \
    \       := %x6d.70.34.76 ; 'mp4v'\n   vid-pli     := 1*DIGIT\n"
- title: 3.5.  Use in Additional Media Types
  contents:
  - "3.5.  Use in Additional Media Types\n   This parameter MAY be specified for use\
    \ with additional MIME media\n   types.\n   For ISO family file formats where\
    \ the name space as defined here is\n   sufficient, all that needs to be done\
    \ is to update the media type\n   registration to specify the 'codecs' parameter\
    \ with a reference to\n   this document.  For existing media types, it is generally\
    \ advisable\n   for the parameter to be optional; for new media types, the parameter\n\
    \   MAY be optional or required, as appropriate.\n   For ISO family file formats\
    \ where the name space as defined here\n   needs to be expanded, a new document\
    \ MAY update this one by\n   specifying the additional detail.\n   For non-ISO\
    \ family file formats, a new document MAY update this one\n   by specifying the\
    \ name space for the media type(s).\n"
- title: 3.6.  Examples
  contents:
  - "3.6.  Examples\n   Content-Type: video/3gpp2; codecs=\"sevc, s263\"\n       (EVRC\
    \ audio plus H.263 video)\n   Content-Type: audio/3gpp; codecs=samr\n       (AMR\
    \ audio)\n   Content-Type: video/3gpp; codecs=\"s263, samr\"\n       (H.263 video\
    \ plus AMR audio)\n   Content-Type: audio/3gpp2; codecs=mp4a.E1\n       (13K audio)\n\
    \   Content-Type: video/3gpp2; codecs=\"mp4v.20.9, mp4a.E1\"\n       (MPEG-4 Visual\
    \ Simple Profile Level 0 plus 13K voice)\n   Content-Type: video/mp4; codecs=\"\
    avc1.640028\"\n        (H.264/AVC video, High Profile, Level 40,\n         e.g.,\
    \ DVB 720p 50Hz HDTV)\n   Content-Type: video/mp4; codecs=\"svc1.56401E, avc1.4D401E\"\
    \n        (SVC video, Scalable High Profile, Level 30,\n         with a Main Profile\
    \ AVC base layer, e.g., DVB 25 Hz SDTV)\n    Content-Type: video/mp4; codecs=\"\
    mvc1.800030, avc1.640030\"\n        (MVC video, Stereo High Profile, Level 42,\n\
    \         with a High Profile base layer, e.g., as adopted in Blu-ray)\n   Note:\
    \ OTI value 20 (\"0x20\" in [MP4RA]) says \"Includes associated\n   Amendment(s)\
    \ and Corrigendum(a).  The actual object types are defined\n   in [MP4V] and are\
    \ conveyed in the DecoderSpecificInfo as specified in\n   [MP4V], Annex K.\" \
    \ (references adjusted).\n"
- title: 3.7.  Additional Media Feature Details
  contents:
  - "3.7.  Additional Media Feature Details\n   It is sometimes helpful to provide\
    \ additional details for a media\n   element (e.g., the number of X and Y pixels,\
    \ the color depth, etc.).\n   These details are sometimes called \"media features\"\
    \ or \"media\n   characteristics\".\n   When such additional features are included,\
    \ the content-features\n   [RFC2912] header provides a handy way to do so.\n"
- title: 4.  The 'Profiles' Parameter
  contents:
  - '4.  The ''Profiles'' Parameter

    '
- title: 4.1.  Introduction
  contents:
  - "4.1.  Introduction\n   Just as some codecs have a variety of profiles (subsets\
    \ of their\n   functionality within which a bitstream can be coded), some media\n\
    \   files can also be profiled and be associated with one or more profile\n  \
    \ identifiers of the profiles to which they conform.  These profiles\n   can indicate\
    \ features of the file format itself, which codecs may be\n   present, the profiles\
    \ of those codecs, and so on.  It can be\n   advantageous to a receiving system\
    \ to know the overall file\n   profile(s) of a file; indeed, under these circumstances\
    \ it may not be\n   necessary to know the codecs themselves if they are implied\
    \ by the\n   profile.\n   The 'profiles' parameter reports on the profile(s) of\
    \ the overall\n   container format.  A profile of the container format may have\n\
    \   restrictions on not only the features of the container format itself\n   but\
    \ also on what codecs may be included, and it may indeed have\n   restrictions\
    \ on the profiles of those codecs.  The 'profiles'\n   parameter does not, however,\
    \ report directly any profiles of the\n   contained media: when such codec-specific\
    \ profiles are reported, this\n   report is part of the 'codecs' parameter.  The\
    \ 'profiles' parameter\n   reports only the profile(s) applying to the complete\
    \ container.\n   When the use of the 'profiles' parameter is defined for a given\n\
    \   format, that definition SHOULD indicate that it directly reflects\n   information\
    \ in the body part, i.e., that it does not convey\n   information beyond, or different\
    \ from, what can be learnt by\n   inspecting the body part.  Although a mismatch\
    \ is not permitted by\n   this specification, the body part is definitive of the\
    \ actual\n   profiles; the parameter supplied here is informative.\n"
- title: 4.2.  Formal Declaration
  contents:
  - "4.2.  Formal Declaration\n   This section adds a parameter to allow unambiguous\
    \ specification of\n   the profiles to which a file claims conformance.  This\
    \ parameter is\n   OPTIONAL in all current types to which it is added.\n   This\
    \ parameter applies to Box-structured (also known as atom-\n   structured) files\
    \ that have an initial box containing compatibility\n   brands, as registered\
    \ at the MP4 Registration Authority [MP4RA], such\n   as a filetype or segment-type\
    \ box.  Principally, this includes files\n   in the family based on the ISO Base\
    \ Media File Format [ISO14496-12]\n   and the QuickTime file format, owned by\
    \ Apple, Inc. (A brand can\n   indicate conformance with restrictions regarding\
    \ which codecs and\n   file format features are used, adherence to quantitative\
    \ limits such\n   as the length/size of the file, and so on.)\n   This includes\
    \ the media types:\n   1.  audio/3gpp, video/3gpp [RFC3839]\n   2.  audio/3gpp2,\
    \ video/3gpp2 [RFC4393]\n   3.  audio/mp4, video/mp4 [RFC4337]\n   4.  video/quicktime\n\
    \   5.  application/mp21\n   Parameter name: profiles\n   Parameter value: A single\
    \ value, or a comma-separated list of values\n   identifying the profiles(s) to\
    \ which the file claims conformance.\n   The name space is determined by the MIME\
    \ type.\n   Note that, per [RFC2045], some characters (including the comma used\n\
    \   to separate multiple values) require that the entire parameter value\n   be\
    \ enclosed in quotes.\n   An element MAY include an octet that [RFC2045] requires\
    \ encoding.  In\n   this case, [RFC2231] is used: an asterisk (\"*\") is placed\
    \ at the end\n   of the parameter name (becoming 'profiles*' instead of 'profiles'),\n\
    \   the parameter value usually starts with two single quote (\"'\")\n   characters(indicating\
    \ that neither character set nor language is\n   specified), and each octet that\
    \ requires encoding is represented as a\n   percent sign (\"%\") followed by two\
    \ hexadecimal digits.  Note that,\n   when the [RFC2231] form is used, the percent\
    \ sign, asterisk, and\n   single quote characters have special meaning and so\
    \ MUST themselves\n   be percent encoded.\n           Examples of Generic Syntax:\n\
    \               profiles=\"isom,mp41,qvXt\"\n               profiles*=\"''%25%20xz,\
    \ gork\"\n"
- title: 4.3.  'Profiles' Parameter Definition
  contents:
  - "4.3.  'Profiles' Parameter Definition\n   The 'profiles' parameter is an OPTIONAL\
    \ parameter that indicates one\n   or more profiles to which the file claims conformance.\
    \  Like the\n   'codecs' parameter described above, it may occur as either 'profiles'\n\
    \   or 'profiles*', with the same encoding rules.  The value is, as for\n   the\
    \ 'codecs' parameter, a comma-separated list of profile\n   identifiers.\n"
- title: 4.4.  Profiles for Files Carrying MP4RA-Registered Brands
  contents:
  - "4.4.  Profiles for Files Carrying MP4RA-Registered Brands\n   For any file format\
    \ carrying a brand registered at the MP4\n   Registration Authority [MP4RA], notably\
    \ files based on the ISO Base\n   Media File Format ISO/IEC 14496-12 [ISO14496-12]\
    \ and QuickTime movie\n   files, the 'profiles' parameter MUST list exactly the\
    \ major-brand,\n   followed by the compatible-brands, as listed in the filetype\
    \ box\n   ('ftyp') or segment-type box ('styp').  The major-brand MUST be\n  \
    \ first, and MAY be removed from the compatible-brands list.  (The file\n   format\
    \ requires that it be repeated in the compatible-brands, but\n   this requirement\
    \ is relaxed here for compactness.)\n   An example might be profiles=\"mp41,isom,qvXt\"\
    , indicating that MPEG-4\n   version 1 is the major-brand and preferred use, that\
    \ the file is\n   compatible with the version of the base file format identified\
    \ by\n   'isom', and that it is also compatible with the specification/profile\n\
    \   'qvXt' (whatever that may be).\n"
- title: 4.5.  'Profiles' Parameter BNF Definition
  contents:
  - "4.5.  'Profiles' Parameter BNF Definition\n   profiles    := pro-simple / pro-fancy\n\
    \   pro-simple  := \"profiles\" \"=\" unencodedv\n   pro-fancy   := \"profiles*\"\
    \ \"=\" encodedv\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has replaced references to [RFC4281] with references\
    \ to this\n   document in the \"MIME Media Types\" registry, thereby indicating\
    \ that\n   the 'codecs' and/or 'profiles' parameters are optional for the\n  \
    \ following media types (as listed in Sections 3 and 4):\n   1.  audio/3gpp, video/3gpp\
    \ [RFC3839]\n   2.  audio/3gpp2, video/3gpp2 [RFC4393]\n   3.  audio/mp4, video/mp4,\
    \ application/mp4 [RFC4337]\n   4.  video/quicktime\n   5.  application/mp21\n"
- title: 6.  Registration
  contents:
  - "6.  Registration\n   The MPEG4 Registration Authority can be consulted for the\
    \ most up-to-\n   date registration of sub-parameters for the codecs type, for\
    \ specific\n   codecs.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The 'codecs' parameter itself does not alter\
    \ the security\n   considerations of any of the media types with which it is used.\
    \  Each\n   audio and video media type has its own set of security considerations\n\
    \   that continue to apply, regardless of the use of the 'codecs'\n   parameter.\n\
    \   An incorrect 'codecs' parameter might cause media content to be\n   received\
    \ by a device that is not capable of rendering it or might\n   cause media content\
    \ not to be sent to a device that is capable of\n   receiving it.  An incorrect\
    \ 'codecs' parameter is therefore capable\n   of some types of denial-of-service\
    \ attacks.  However, this is most\n   likely to arise by accident, as an attacker\
    \ capable of altering media\n   data in transit could cause more harm by altering\
    \ the media format\n   itself, or even the content type header, rather than just\
    \ the\n   'codecs' parameter of the content type header.\n   To the extent that\
    \ a receiver reacts to a 'codecs' parameter that\n   indicates an unsupported\
    \ codec, by fetching and installing the\n   required codecs, such reaction needs\
    \ to be performed carefully and in\n   accord with the system's normal validity\
    \ and security checks and\n   procedures.\n"
- title: 8.  Differences from RFC 4281
  contents:
  - "8.  Differences from RFC 4281\n   1.  Improved the introduction and other supporting\
    \ and explanatory\n       text;\n   2.  improved the references;\n   3.  clarified\
    \ the MIME types to which the parameters apply, and\n       clarified the consequent\
    \ IANA actions;\n   4.  added the 'profiles' parameter;\n   5.  fixed an error\
    \ in the BNF, where it did not correspond to either\n       the examples or common\
    \ usage;\n   6.  added the definition of the sub-parameters for the AVC family\
    \ of\n       codecs;\n   7.  added a security consideration for possible triggering\
    \ of\n       downloads;\n   8.  updated acknowledgments.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Harinath Garudadri provided a great deal of help, which\
    \ is very much\n   appreciated.  Mary Barnes and Bruce Lilly provided detailed\
    \ and\n   helpful comments.  Reviews and comments by Sam Hartman, Russ Housley,\n\
    \   and Bert Wijnen were much appreciated.  Chris Newman carefully\n   reviewed\
    \ and improved the BNF.\n   Christian Timmerer helped with the MPEG-21 material,\
    \ and Thomas\n   Schierl and Yago Sanchez helped with SVC and MVC.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [3GPP-Formats]   3rd Generation Partnership Project,\
    \ \"Technical\n                    Specification Group Services and System Aspects;\n\
    \                    Transparent end-to-end packet switched streaming\n      \
    \              service (PSS); 3GPP file format (3GP)\", 3GPP\n               \
    \     TS 26.244.\n   [AVC]            \"Advanced video coding for generic audiovisual\n\
    \                    services\", ITU-T Recommendation H.264, ISO/\n          \
    \          IEC 14496-10:2009.\n   [AVC-Formats]    \"Information technology --\
    \ Coding of audio-visual\n                    objects -- Part 15: Advanced Video\
    \ Coding (AVC) file\n                    format\", ISO/IEC 14496-15:2010.\n  \
    \ [ISO14496-12]    \"Information technology -- Coding of audio-visual\n      \
    \              objects -- Part 12: ISO base media file format\",\n           \
    \         ISO/IEC 14496-12:2008.\n   [MP4RA]          \"MP4REG, The MPEG-4 Registration\
    \ Authority\",\n                    <http://www.mp4ra.org>.\n   [RFC2045]    \
    \    Freed, N. and N. Borenstein, \"Multipurpose Internet\n                  \
    \  Mail Extensions (MIME) Part One: Format of Internet\n                    Message\
    \ Bodies\", RFC 2045, November 1996.\n   [RFC2119]        Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n                    Requirement Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [RFC2231]        Freed, N. and K. Moore, \"MIME Parameter\
    \ Value and\n                    Encoded Word Extensions:\n                  \
    \  Character Sets, Languages, and Continuations\",\n                    RFC 2231,\
    \ November 1997.\n   [RFC2912]        Klyne, G., \"Indicating Media Features for\
    \ MIME\n                    Content\", RFC 2912, September 2000.\n   [RFC3629]\
    \        Yergeau, F., \"UTF-8, a transformation format of ISO\n              \
    \      10646\", STD 63, RFC 3629, November 2003.\n   [RFC3839]        Castagno,\
    \ R. and D. Singer, \"MIME Type Registrations\n                    for 3rd Generation\
    \ Partnership Project (3GPP)\n                    Multimedia files\", RFC 3839,\
    \ July 2004.\n   [RFC4281]        Gellens, R., Singer, D., and P. Frojdh, \"The\
    \ Codecs\n                    Parameter for \"Bucket\" Media Types\", RFC 4281,\n\
    \                    November 2005.\n   [RFC4337]        Y Lim and D. Singer,\
    \ \"MIME Type Registration for\n                    MPEG-4\", RFC 4337, March\
    \ 2006.\n   [RFC4393]        Garudadri, H., \"MIME Type Registrations for 3GPP2\n\
    \                    Multimedia Files\", RFC 4393, March 2006.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [3GPP2-Formats]  Third Generation Partnership\
    \ Project 2, \"3GPP2 File\n                    Formats for Multimedia Service\"\
    , <http://\n                    www.3gpp2.org/Public_html/specs/\n           \
    \         C.S0050-0_v1.0_121503.pdf>.\n   [MP41]           \"Information technology--Coding\
    \ of audio-visual\n                    objects -- Part 1: Systems\", ISO/IEC 14496-1:2010.\n\
    \   [MP4A]           \"Information technology--Coding of audio-visual\n      \
    \              objects -- 3: Audio\", ISO/IEC 14496-3:2009.\n   [MP4V]       \
    \    \"Information technology--Coding of audio-visual\n                    objects\
    \ -- Part 2: Visual\", ISO/IEC 14496-2:2004.\n   [RFC1345]        Simonsen, K.,\
    \ \"Character Mnemonics and Character\n                    Sets\", RFC 1345, June\
    \ 1992.\n   [RFC3625]        Gellens, R. and H. Garudadri, \"The QCP File Format\n\
    \                    and Media Types for Speech Data\", RFC 3625,\n          \
    \          September 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Randall Gellens\n   QUALCOMM Incorporated\n   5775 Morehouse\
    \ Drive\n   San Diego, CA  92121\n   US\n   EMail: rg+ietf@qualcomm.com\n   David\
    \ Singer\n   Apple, Inc.\n   1 Infinite Loop\n   Cupertino, CA  95014\n   US\n\
    \   Phone: +1 408 996 1010\n   EMail: singer@apple.com\n   Per Frojdh\n   Ericsson\
    \ AB\n   Ericsson Research\n   Stockholm  SE-164 80\n   Sweden\n   Phone: +46\
    \ 10 7190000\n   EMail: Per.Frojdh@ericsson.com\n"
