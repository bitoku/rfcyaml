- title: __initial_text__
  contents:
  - "        Algorithm Implementation Requirements and Usage Guidance\n        for\
    \ the Internet Key Exchange Protocol Version 2 (IKEv2)\n"
- title: Abstract
  contents:
  - "Abstract\n   The IPsec series of protocols makes use of various cryptographic\n\
    \   algorithms in order to provide security services.  The Internet Key\n   Exchange\
    \ (IKE) protocol is used to negotiate the IPsec Security\n   Association (IPsec\
    \ SA) parameters, such as which algorithms should be\n   used.  To ensure interoperability\
    \ between different implementations,\n   it is necessary to specify a set of algorithm\
    \ implementation\n   requirements and usage guidance to ensure that there is at\
    \ least one\n   algorithm that all implementations support.  This document updates\n\
    \   RFC 7296 and obsoletes RFC 4307 in defining the current algorithm\n   implementation\
    \ requirements and usage guidance for IKEv2, and does\n   minor cleaning up of\
    \ the IKEv2 IANA registry.  This document does not\n   update the algorithms used\
    \ for packet encryption using IPsec\n   Encapsulating Security Payload (ESP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8247.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \    1.2. Updating Algorithm Implementation Requirements and\n           Usage\
    \ Guidance .............................................4\n      1.3. Updating\
    \ Algorithm Requirement Levels ......................4\n      1.4. Document Audience\
    \ ..........................................5\n   2. Algorithm Selection .............................................5\n\
    \      2.1. Type 1 - IKEv2 Encryption Algorithm Transforms .............5\n  \
    \    2.2. Type 2 - IKEv2 Pseudorandom Function Transforms ............7\n    \
    \  2.3. Type 3 - IKEv2 Integrity Algorithm Transforms ..............8\n      2.4.\
    \ Type 4 - IKEv2 Diffie-Hellman Group Transforms .............9\n      2.5. Summary\
    \ of Changes from RFC 4307 ..........................11\n   3. IKEv2 Authentication\
    \ ...........................................11\n      3.1. IKEv2 Authentication\
    \ Method ...............................12\n           3.1.1. Recommendations\
    \ for RSA Key Length .................13\n      3.2. Digital Signature Recommendations\
    \ .........................13\n   4. Algorithms for Internet of Things ..............................14\n\
    \   5. Security Considerations ........................................15\n  \
    \ 6. IANA Considerations ............................................15\n   7.\
    \ References .....................................................16\n      7.1.\
    \ Normative References ......................................16\n      7.2. Informative\
    \ References ....................................17\n   Acknowledgements ..................................................17\n\
    \   Authors' Addresses ................................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Internet Key Exchange (IKE) protocol [RFC7296] is used\
    \ to\n   negotiate the parameters of the IPsec SA, such as the encryption and\n\
    \   authentication algorithms and the keys for the protected\n   communications\
    \ between the two endpoints.  The IKE protocol itself is\n   also protected by\
    \ cryptographic algorithms, which are negotiated\n   between the two endpoints\
    \ using IKE.  Different implementations of\n   IKE may negotiate different algorithms\
    \ based on their individual\n   local policy.  To ensure interoperability, a set\
    \ of \"mandatory-to-\n   implement\" IKE cryptographic algorithms is defined.\n\
    \   This document describes the parameters of the IKE protocol and\n   updates\
    \ the IKEv2 specification.  It changes the mandatory-to-\n   implement authentication\
    \ algorithms in Section 4 of [RFC7296] by\n   saying that RSA key lengths of less\
    \ than 2048 SHOULD NOT be used.  It\n   does not describe the cryptographic parameters\
    \ of the Authentication\n   Header (AH) or ESP protocols.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be\
    \ interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,\
    \ they appear in all\n   capitals, as shown here.\n   When used in the tables\
    \ in this document, these terms indicate that\n   the listed algorithm MUST, MUST\
    \ NOT, SHOULD, SHOULD NOT, or MAY be\n   implemented as part of an IKEv2 implementation.\
    \  Additional terms\n   used in this document are:\n   SHOULD+   This term means\
    \ the same as SHOULD.  However, it is likely\n             that an algorithm marked\
    \ as SHOULD+ will be promoted at\n             some future time to be a MUST.\n\
    \   SHOULD-   This term means the same as SHOULD.  However, an algorithm\n   \
    \          marked as SHOULD- may be deprecated to a MAY in a future\n        \
    \     version of this document.\n   MUST-     This term means the same as MUST.\
    \  However, it is expected\n             at some point that this algorithm will\
    \ no longer be a MUST\n             in a future document.  Although its status\
    \ will be\n             determined at a later time, it is reasonable to expect\
    \ that\n             if a future revision of a document alters the status of a\n\
    \             MUST- algorithm, it will remain at least a SHOULD or a\n       \
    \      SHOULD- level.\n   IoT       This abbreviation stands for \"Internet of\
    \ Things\".\n"
- title: 1.2.  Updating Algorithm Implementation Requirements and Usage Guidance
  contents:
  - "1.2.  Updating Algorithm Implementation Requirements and Usage Guidance\n   The\
    \ field of cryptography evolves continuously.  New, stronger\n   algorithms appear\
    \ and existing algorithms are found to be less secure\n   than originally thought.\
    \  Therefore, algorithm implementation\n   requirements and usage guidance need\
    \ to be updated from time to time\n   to reflect the new reality.  The choices\
    \ for algorithms must be\n   conservative to minimize the risk of algorithm compromise.\n\
    \   Algorithms need to be suitable for a wide variety of CPU\n   architectures\
    \ and device deployments ranging from high-end bulk\n   encryption devices to\
    \ small low-power IoT devices.\n   The algorithm implementation requirements and\
    \ usage guidance may need\n   to change over time to adapt to the changing world.\
    \  For this reason,\n   the selection of mandatory-to-implement algorithms was\
    \ removed from\n   the main IKEv2 specification and placed in this separate document.\n"
- title: 1.3.  Updating Algorithm Requirement Levels
  contents:
  - "1.3.  Updating Algorithm Requirement Levels\n   The mandatory-to-implement algorithm\
    \ of tomorrow should already be\n   available in most implementations of IKE by\
    \ the time it is made\n   mandatory.  This document attempts to identify and introduce\
    \ those\n   algorithms for future mandatory-to-implement status.  There is no\n\
    \   guarantee that the algorithms in use today may become mandatory in\n   the\
    \ future.  Published algorithms are continuously subjected to\n   cryptographic\
    \ attack and may become too weak or could become\n   completely broken before\
    \ this document is updated.\n   This document provides updated recommendations\
    \ for the mandatory-to-\n   implement algorithms.  As a result, any algorithm\
    \ listed at the IKEv2\n   IANA registry not mentioned in this document MAY be\
    \ implemented.  For\n   clarification and consistency with [RFC4307], an algorithm\
    \ will be\n   denoted here as MAY only when it has been downgraded.\n   Although\
    \ this document updates the algorithms to keep the IKEv2\n   communication secure\
    \ over time, it also aims at providing\n   recommendations so that IKEv2 implementations\
    \ remain interoperable.\n   IKEv2 interoperability is addressed by an incremental\
    \ introduction or\n   deprecation of algorithms.  In addition, this document also\
    \ considers\n   the new use cases for IKEv2 deployment, such as Internet of Things\n\
    \   (IoT).\n   It is expected that deprecation of an algorithm is performed\n\
    \   gradually.  This provides time for various implementations to update\n   their\
    \ implemented algorithms while remaining interoperable.  Unless\n   there are\
    \ strong security reasons, an algorithm is expected to be\n   downgraded from\
    \ MUST to MUST- or SHOULD, instead of MUST NOT.\n   Similarly, an algorithm that\
    \ has not been mentioned as mandatory-to-\n   implement is expected to be introduced\
    \ with a SHOULD instead of a\n   MUST.\n   The current trend toward Internet of\
    \ Things and its adoption of IKEv2\n   requires this specific use case to be taken\
    \ into account as well.\n   IoT devices are resource-constrained devices and their\
    \ choice of\n   algorithms are motivated by minimizing the footprint of the code,\
    \ the\n   computation effort, and the size of the messages to send.  This\n  \
    \ document indicates \"(IoT)\" when a specified algorithm is specifically\n  \
    \ listed for IoT devices.  Requirement levels that are marked as \"IoT\"\n   apply\
    \ to IoT devices and to server-side implementations that might\n   presumably\
    \ need to interoperate with them, including any general-\n   purpose VPN gateways.\n"
- title: 1.4.  Document Audience
  contents:
  - "1.4.  Document Audience\n   The recommendations of this document mostly target\
    \ IKEv2 implementers\n   who need to create implementations that meet both high\
    \ security\n   expectations as well as high interoperability between various vendors\n\
    \   and with different versions.  Interoperability requires a smooth move\n  \
    \ to more secure cipher suites.  This may differ from a user point of\n   view\
    \ that may deploy and configure IKEv2 with only the safest cipher\n   suite.\n\
    \   This document does not give any recommendations for the use of\n   algorithms,\
    \ it only gives implementation recommendations regarding\n   implementations.\
    \  The use of algorithms by a specific user is\n   dictated by their own security\
    \ policy requirements, which are outside\n   the scope of this document.\n   IKEv1\
    \ is out of scope of this document.  IKEv1 is deprecated and the\n   recommendations\
    \ of this document must not be considered for IKEv1, as\n   most IKEv1 implementations\
    \ have been \"frozen\" and will not be able to\n   update the list of mandatory-to-implement\
    \ algorithms.\n"
- title: 2.  Algorithm Selection
  contents:
  - '2.  Algorithm Selection

    '
- title: 2.1.  Type 1 - IKEv2 Encryption Algorithm Transforms
  contents:
  - "2.1.  Type 1 - IKEv2 Encryption Algorithm Transforms\n   The algorithms in the\
    \ table below are negotiated in the Security\n   Association (SA) payload and\
    \ used for the Encrypted Payload.\n   References to the specification defining\
    \ these algorithms and the\n   ones in the following subsections are in the IANA\
    \ registry\n   [IKEV2-IANA].  Some of these algorithms are Authenticated Encryption\n\
    \   with Associated Data (AEAD) [RFC5282].  Algorithms that are not AEAD\n   MUST\
    \ be used in conjunction with one of the integrity algorithms in\n   Section 2.3.\n\
    \          +------------------------+----------+-------+---------+\n         \
    \ | Name                   | Status   | AEAD? | Comment |\n          +------------------------+----------+-------+---------+\n\
    \          | ENCR_AES_CBC           | MUST     | No    | (*)     |\n         \
    \ | ENCR_CHACHA20_POLY1305 | SHOULD   | Yes   |         |\n          | ENCR_AES_GCM_16\
    \        | SHOULD   | Yes   | (*)     |\n          | ENCR_AES_CCM_8         |\
    \ SHOULD   | Yes   | (IoT)   |\n          | ENCR_3DES              | MAY     \
    \ | No    |         |\n          | ENCR_DES               | MUST NOT | No    |\
    \         |\n          | ENCR_NULL              | MUST NOT | No    |         |\n\
    \          +------------------------+----------+-------+---------+\n   (*)   \
    \ This requirement level is for 128-bit and 256-bit keys.\n          192-bit keys\
    \ remain at the MAY level.\n   (IoT)  This requirement is for interoperability\
    \ with IoT.  Only\n          128-bit keys are at the SHOULD level. 192-bit and\
    \ 256-bit\n          remain at the MAY level.\n   ENCR_AES_CBC is raised from\
    \ SHOULD+ for 128-bit keys and MAY for\n   256-bit keys in [RFC4307] to MUST.\
    \ 192-bit keys remain at the MAY\n   level.  ENCR_AES_CBC is the only shared mandatory-to-implement\n\
    \   algorithm with RFC 4307 and as a result, it is necessary for\n   interoperability\
    \ with IKEv2 implementation compatible with RFC 4307.\n   ENCR_CHACHA20_POLY1305\
    \ was not ready to be considered at the time of\n   RFC 4307's publication.  It\
    \ has been recommended by the Crypto Forum\n   Research Group (CFRG) of the IRTF\
    \ as an alternative to AES-CBC and\n   AES-GCM.  It is also being standardized\
    \ for IPsec for the same\n   reasons.  At the time of writing, there were not\
    \ enough IKEv2\n   implementations supporting ENCR_CHACHA20_POLY1305 to be able\
    \ to\n   introduce it at the SHOULD+ level.\n   ENCR_AES_GCM_16 was not considered\
    \ in RFC 4307.  At the time RFC 4307\n   was written, AES-GCM was not defined\
    \ in an IETF document.  AES-GCM\n   was defined for ESP in [RFC4106] and later\
    \ for IKEv2 in [RFC5282].\n   The main motivation for adopting AES-GCM for ESP\
    \ is encryption\n   performance compared to AES-CBC.  This resulted in AES-GCM\
    \ being\n   widely implemented for ESP.  As the computation load of IKEv2 is\n\
    \   relatively small compared to ESP, many IKEv2 implementations have not\n  \
    \ implemented AES-GCM.  For this reason, AES-GCM is not promoted to a\n   greater\
    \ status than SHOULD.  The reason for promotion from MAY to\n   SHOULD is to promote\
    \ the slightly more secure AEAD method over the\n   traditional encrypt+auth method.\
    \  Its status is expected to be raised\n   once widely implemented.  As the advantage\
    \ of the shorter (and\n   weaker) Integrity Check Values (ICVs) is minimal, the\
    \ 8- and 12-octet\n   ICVs remain at the MAY level.\n   ENCR_AES_CCM_8 was not\
    \ considered in RFC 4307.  This document\n   considers it as SHOULD be implemented\
    \ in order to be able to interact\n   with IoT devices.  As this case is not a\
    \ general use case for non-IoT\n   VPNs, its status is expected to remain as SHOULD.\
    \  The 8-octet size\n   of the ICV is expected to be sufficient for most use cases\
    \ of IKEv2,\n   as far less packets are exchanged in those cases, and IoT devices\n\
    \   want to make packets as small as possible.  The SHOULD level is for\n   128-bit\
    \ keys, 256-bit keys remains at MAY level.\n   ENCR_3DES has been downgraded from\
    \ RFC 4307 MUST- to MAY.  All IKEv2\n   implementations already implement ENCR_AES_CBC,\
    \ so there is no need\n   to keep support for the much slower ENCR_3DES.  In addition,\n\
    \   ENCR_CHACHA20_POLY1305 provides a more modern alternative to AES.\n   ENCR_DES\
    \ can be brute-forced using off-the-shelf hardware.  It\n   provides no meaningful\
    \ security whatsoever and, therefore, MUST NOT\n   be implemented.\n   ENCR_NULL\
    \ was incorrectly specified as MAY in RFC 4307, even when\n   [RFC7296], Section\
    \ 5 clearly states that it MUST NOT be used.  This\n   was fixed and this document\
    \ now lists ENCR_NULL as MUST NOT.\n"
- title: 2.2.  Type 2 - IKEv2 Pseudorandom Function Transforms
  contents:
  - "2.2.  Type 2 - IKEv2 Pseudorandom Function Transforms\n   Transform Type 2 algorithms\
    \ are pseudorandom functions used to\n   generate pseudorandom values when needed.\n\
    \                +-------------------+----------+---------+\n                |\
    \ Name              | Status   | Comment |\n                +-------------------+----------+---------+\n\
    \                | PRF_HMAC_SHA2_256 | MUST     |         |\n                |\
    \ PRF_HMAC_SHA2_512 | SHOULD+  |         |\n                | PRF_HMAC_SHA1  \
    \   | MUST-    |         |\n                | PRF_AES128_XCBC   | SHOULD   | (IoT)\
    \   |\n                | PRF_HMAC_MD5      | MUST NOT |         |\n          \
    \      +-------------------+----------+---------+\n         (IoT) This requirement\
    \ is for interoperability with IoT.\n   As no SHA2-based transforms were referenced\
    \ in RFC 4307,\n   PRF_HMAC_SHA2_256 was not mentioned in RFC 4307.  PRF_HMAC_SHA2_256\n\
    \   MUST be implemented in order to replace SHA1 and PRF_HMAC_SHA1.\n   PRF_HMAC_SHA2_512\
    \ SHOULD be implemented as a future replacement for\n   PRF_HMAC_SHA2_256 or when\
    \ stronger security is required.\n   PRF_HMAC_SHA2_512 is preferred over PRF_HMAC_SHA2_384\
    \ as the\n   additional overhead of PRF_HMAC_SHA2_512 is negligible.\n   PRF_HMAC_SHA1\
    \ has been downgraded from MUST in RFC 4307 to MUST-, as\n   cryptographic attacks\
    \ against SHA1 are increasing, resulting in an\n   industry-wide trend to deprecate\
    \ its usage.\n   PRF_AES128_XCBC is only recommended in the scope of IoT, as Internet\n\
    \   of Things deployments tend to prefer AES-based pseudorandom functions\n  \
    \ in order to avoid implementing SHA2.  For the non-IoT VPN deployment,\n   it\
    \ has been downgraded from SHOULD in RFC 4307 to MAY as it has not\n   seen wide\
    \ adoption.\n   PRF_HMAC_MD5 has been downgraded from MAY in RFC 4307 to MUST\
    \ NOT.\n   Cryptographic attacks against MD5, such as collision attacks\n   mentioned\
    \ in [TRANSCRIPTION], are resulting in an industry-wide trend\n   to deprecate\
    \ and remove MD5 (and thus HMAC-MD5) from cryptographic\n   libraries.\n"
- title: 2.3.  Type 3 - IKEv2 Integrity Algorithm Transforms
  contents:
  - "2.3.  Type 3 - IKEv2 Integrity Algorithm Transforms\n   The algorithms in the\
    \ table below are negotiated in the SA payload\n   and used for the Encrypted\
    \ Payload.  References to the specification\n   defining these algorithms are\
    \ in the IANA registry.  When an AEAD\n   algorithm (see Section 2.1) is proposed,\
    \ this algorithm transform\n   type is not in use.\n              +------------------------+----------+---------+\n\
    \              | Name                   | Status   | Comment |\n             \
    \ +------------------------+----------+---------+\n              | AUTH_HMAC_SHA2_256_128\
    \ | MUST     |         |\n              | AUTH_HMAC_SHA2_512_256 | SHOULD   |\
    \         |\n              | AUTH_HMAC_SHA1_96      | MUST-    |         |\n \
    \             | AUTH_AES_XCBC_96       | SHOULD   | (IoT)   |\n              |\
    \ AUTH_HMAC_MD5_96       | MUST NOT |         |\n              | AUTH_DES_MAC\
    \           | MUST NOT |         |\n              | AUTH_KPDK_MD5          | MUST\
    \ NOT |         |\n              +------------------------+----------+---------+\n\
    \         (IoT) This requirement is for interoperability with IoT.\n   AUTH_HMAC_SHA2_256_128\
    \ was not mentioned in RFC 4307, as no\n   SHA2-based transforms were mentioned.\
    \  AUTH_HMAC_SHA2_256_128 MUST be\n   implemented in order to replace AUTH_HMAC_SHA1_96.\n\
    \   AUTH_HMAC_SHA2_512_256 SHOULD be implemented as a future replacement\n   of\
    \ AUTH_HMAC_SHA2_256_128 or when stronger security is required.\n   This value\
    \ has been preferred over AUTH_HMAC_SHA2_384, as the\n   additional overhead of\
    \ AUTH_HMAC_SHA2_512 is negligible.\n   AUTH_HMAC_SHA1_96 has been downgraded\
    \ from MUST in RFC 4307 to MUST-\n   as cryptographic attacks against SHA1 are\
    \ increasing, resulting in an\n   industry-wide trend to deprecate its usage.\n\
    \   AUTH_AES_XCBC_96 is only recommended in the scope of IoT, as Internet\n  \
    \ of Things deployments tend to prefer AES-based pseudorandom functions\n   in\
    \ order to avoid implementing SHA2.  For the non-IoT VPN deployment,\n   it has\
    \ been downgraded from SHOULD in RFC 4307 to MAY as it has not\n   been widely\
    \ adopted.\n   AUTH_DES_MAC and AUTH_KPDK_MD5 were not mentioned in RFC 4307,\
    \ so\n   their default statuses were MAY.  These have been downgraded to MUST\n\
    \   NOT.  AUTH_HMAC_MD5_96 is also demoted to MUST NOT.  This is because\n   there\
    \ is an industry-wide trend to deprecate DES and MD5.  Note also\n   that MD5\
    \ support is being removed from cryptographic libraries in\n   general because\
    \ its non-HMAC use is known to be subject to collision\n   attacks, for example,\
    \ as mentioned in [TRANSCRIPTION].\n"
- title: 2.4.  Type 4 - IKEv2 Diffie-Hellman Group Transforms
  contents:
  - "2.4.  Type 4 - IKEv2 Diffie-Hellman Group Transforms\n   There are several Modular\
    \ Exponential (MODP) groups and several\n   Elliptic Curve Cryptography (ECC)\
    \ groups that are defined for use in\n   IKEv2.  These groups are defined in both\
    \ the base document [RFC7296]\n   and in extension documents and are identified\
    \ by group number.  Note\n   that it is critical to enforce a secure Diffie-Hellman\
    \ (DH) exchange\n   as this exchange provides keys for the session.  If an attacker\
    \ can\n   retrieve one of the private numbers (a or b) and the complementary\n\
    \   public value (g**b or g**a), then the attacker can compute the secret\n  \
    \ and the keys used and then decrypt the exchange and IPsec SA created\n   inside\
    \ the IKEv2 SA.  Such an attack can be performed off-line on a\n   previously\
    \ recorded communication, years after the communication\n   happened.  This differs\
    \ from attacks that need to be executed during\n   the authentication that must\
    \ be performed online and in near real\n   time.\n   +--------+---------------------------------------------+------------+\n\
    \   | Number | Description                                 | Status     |\n  \
    \ +--------+---------------------------------------------+------------+\n   |\
    \ 14     | 2048-bit MODP Group                         | MUST       |\n   | 19\
    \     | 256-bit random ECP group                    | SHOULD     |\n   | 5   \
    \   | 1536-bit MODP Group                         | SHOULD NOT |\n   | 2     \
    \ | 1024-bit MODP Group                         | SHOULD NOT |\n   | 1      |\
    \ 768-bit MODP Group                          | MUST NOT   |\n   | 22     | 1024-bit\
    \ MODP Group with 160-bit Prime      | MUST NOT   |\n   |        | Order Subgroup\
    \                              |            |\n   | 23     | 2048-bit MODP Group\
    \ with 224-bit Prime      | SHOULD NOT |\n   |        | Order Subgroup       \
    \                       |            |\n   | 24     | 2048-bit MODP Group with\
    \ 256-bit Prime      | SHOULD NOT |\n   |        | Order Subgroup            \
    \                  |            |\n   +--------+---------------------------------------------+------------+\n\
    \   Group 14 or the 2048-bit MODP Group is raised from SHOULD+ in\n   RFC 4307\
    \ to MUST as a replacement for the 1024-bit MODP Group.  Group\n   14 is widely\
    \ implemented and considered secure.\n   Group 19 or the 256-bit random ECP group\
    \ was not specified in\n   RFC 4307 as this group was not defined at that time.\
    \  Group 19 is\n   widely implemented and considered secure and, therefore, has\
    \ been\n   promoted to the SHOULD level.\n   Group 5 or the 1536-bit MODP Group\
    \ has been downgraded from MAY in\n   RFC 4307 to SHOULD NOT.  It was specified\
    \ earlier, but is now\n   considered to be vulnerable to being broken within the\
    \ next few years\n   by a nation-state-level attack, so its security margin is\
    \ considered\n   too narrow.\n   Group 2 or the 1024-bit MODP Group has been downgraded\
    \ from MUST- in\n   RFC 4307 to SHOULD NOT.  It is known to be weak against sufficiently\n\
    \   funded attackers using commercially available mass-computing\n   resources,\
    \ so its security margin is considered too narrow.  It is\n   expected in the\
    \ near future to be downgraded to MUST NOT.\n   Group 1 or the 768-bit MODP Group\
    \ was not mentioned in RFC 4307 and\n   so its status was MAY.  It can be broken\
    \ within hours using cheap\n   off-the-shelf hardware.  It provides no security\
    \ whatsoever.  It has,\n   therefore, been downgraded to MUST NOT.\n   Groups\
    \ 22, 23, and 24 are MODP groups with Prime Order Subgroups that\n   are not safe\
    \ primes.  The seeds for these groups have not been\n   publicly released, resulting\
    \ in reduced trust in these groups.  These\n   groups were proposed as alternatives\
    \ for groups 2 and 14 but never\n   saw wide deployment.  It has been shown that\
    \ group 22 with 1024-bit\n   MODP is too weak and academia have the resources\
    \ to generate\n   malicious values at this size.  This has resulted in group 22\
    \ to be\n   demoted to MUST NOT.  Groups 23 and 24 have been demoted to SHOULD\n\
    \   NOT and are expected to be further downgraded in the near future to\n   MUST\
    \ NOT.  Since groups 23 and 24 have small subgroups, the checks\n   specified\
    \ in the first bullet point of Section 2.2 of \"Additional\n   Diffie-Hellman\
    \ Tests for the Internet Key Exchange Protocol Version 2\n   (IKEv2)\" [RFC6989]\
    \ MUST be done when these groups are used.\n"
- title: 2.5.  Summary of Changes from RFC 4307
  contents:
  - "2.5.  Summary of Changes from RFC 4307\n   The following table summarizes the\
    \ changes from RFC 4307.\n      +---------------------+--------------------------+------------+\n\
    \      | Algorithm           | RFC 4307                 | RFC 8247   |\n     \
    \ +---------------------+--------------------------+------------+\n      | ENCR_3DES\
    \           | MUST-                    | MAY        |\n      | ENCR_NULL     \
    \      | MUST NOT (per [Err1937]) | MUST NOT   |\n      | ENCR_AES_CBC       \
    \ | SHOULD+                  | MUST       |\n      | ENCR_AES_CTR        | SHOULD\
    \                   | MAY(*)     |\n      | PRF_HMAC_MD5        | MAY        \
    \              | MUST NOT   |\n      | PRF_HMAC_SHA1       | MUST            \
    \         | MUST-      |\n      | PRF_AES128_XCBC     | SHOULD+              \
    \    | SHOULD     |\n      | AUTH_HMAC_MD5_96    | MAY                      |\
    \ MUST NOT   |\n      | AUTH_HMAC_SHA1_96   | MUST                     | MUST-\
    \      |\n      | AUTH_AES_XCBC_96    | SHOULD+                  | SHOULD    \
    \ |\n      | Group 2 (1024-bit)  | MUST-                    | SHOULD NOT |\n \
    \     | Group 14 (2048-bit) | SHOULD+                  | MUST       |\n      +---------------------+--------------------------+------------+\n\
    \   (*)  This algorithm is not mentioned in the above sections, so it\n      \
    \  defaults to MAY.\n"
- title: 3.  IKEv2 Authentication
  contents:
  - "3.  IKEv2 Authentication\n   IKEv2 authentication may involve a signatures verification.\n\
    \   Signatures may be used to validate a certificate or to check the\n   signature\
    \ of the AUTH value.  Cryptographic recommendations regarding\n   certificate\
    \ validation are out of scope of this document.  What is\n   mandatory to implement\
    \ is provided by the PKIX community.  This\n   document is mostly concerned with\
    \ signature verification and\n   generation for the authentication.\n"
- title: 3.1.  IKEv2 Authentication Method
  contents:
  - "3.1.  IKEv2 Authentication Method\n      +--------+---------------------------------------+------------+\n\
    \      | Number | Description                           | Status     |\n     \
    \ +--------+---------------------------------------+------------+\n      | 1 \
    \     | RSA Digital Signature                 | MUST       |\n      | 2      |\
    \ Shared Key Message Integrity Code     | MUST       |\n      | 3      | DSS Digital\
    \ Signature                 | SHOULD NOT |\n      | 9      | ECDSA with SHA-256\
    \ on the P-256 curve | SHOULD     |\n      | 10     | ECDSA with SHA-384 on the\
    \ P-384 curve | SHOULD     |\n      | 11     | ECDSA with SHA-512 on the P-521\
    \ curve | SHOULD     |\n      | 14     | Digital Signature                   \
    \  | SHOULD     |\n      +--------+---------------------------------------+------------+\n\
    \   RSA Digital Signature is widely deployed and, therefore, kept for\n   interoperability.\
    \  It is expected to be downgraded in the future as\n   its signatures are based\
    \ on the older RSASSA-PKCS1-v1.5, which is no\n   longer recommended.  RSA authentication,\
    \ as well as other specific\n   authentication methods, are expected to be replaced\
    \ with the generic\n   Digital Signature method of [RFC7427].\n   Shared Key Message\
    \ Integrity Code is widely deployed and mandatory to\n   implement in the IKEv2\
    \ in RFC 7296.  The status remains MUST.\n   \"DSS Digital Signature\" (IANA value\
    \ 3) signatures are bound to SHA-1\n   and have the same level of security as\
    \ 1024-bit RSA.  They are\n   currently at SHOULD NOT and are expected to be downgraded\
    \ to MUST NOT\n   in the future.\n   Authentication methods that are based on\
    \ the Elliptic Curve Digital\n   Signature Algorithm (ECDSA) are also expected\
    \ to be downgraded as\n   these do not provide hash function agility.  Instead,\
    \ ECDSA (like\n   RSA) is expected to be performed using the generic Digital Signature\n\
    \   method.  Its status is SHOULD.\n   Digital Signature [RFC7427] is expected\
    \ to be promoted as it provides\n   hash function, signature format, and algorithm\
    \ agility.  Its current\n   status is SHOULD.\n"
- title: 3.1.1.  Recommendations for RSA Key Length
  contents:
  - "3.1.1.  Recommendations for RSA Key Length\n        +-------------------------------------------+------------+\n\
    \        | Description                               | Status     |\n        +-------------------------------------------+------------+\n\
    \        | RSA with key length 2048                  | MUST       |\n        |\
    \ RSA with key length 3072 and 4096         | SHOULD     |\n        | RSA with\
    \ key length between 2049 and 4095 | MAY        |\n        | RSA with key length\
    \ smaller than 2048     | SHOULD NOT |\n        +-------------------------------------------+------------+\n\
    \   IKEv2 [RFC7296] mandates support for the RSA keys of the bit size\n   1024\
    \ or 2048, but key sizes less than 2048 are updated to SHOULD NOT\n   as there\
    \ is an industry-wide trend to deprecate key lengths less than\n   2048 bits.\
    \  Since these signatures only have value in real time and\n   need no future\
    \ protection, smaller keys were kept at SHOULD NOT\n   instead of MUST NOT.\n"
- title: 3.2.  Digital Signature Recommendations
  contents:
  - "3.2.  Digital Signature Recommendations\n   When a Digital Signature authentication\
    \ method is implemented, the\n   following recommendations are applied for hash\
    \ functions:\n               +--------+-------------+----------+---------+\n \
    \              | Number | Description | Status   | Comment |\n               +--------+-------------+----------+---------+\n\
    \               | 1      | SHA1        | MUST NOT |         |\n              \
    \ | 2      | SHA2-256    | MUST     |         |\n               | 3      | SHA2-384\
    \    | MAY      |         |\n               | 4      | SHA2-512    | SHOULD  \
    \ |         |\n               +--------+-------------+----------+---------+\n\
    \   When the Digital Signature authentication method is used with RSA\n   signature\
    \ algorithm, RSASSA-PSS MUST be supported and RSASSA-\n   PKCS1-v1.5 MAY be supported.\n\
    \   The following table lists recommendations for authentication methods\n   in\
    \ [RFC7427] notation.  These recommendations are applied only if the\n   Digital\
    \ Signature authentication method is implemented.\n        +------------------------------------+----------+---------+\n\
    \        | Description                        | Status   | Comment |\n       \
    \ +------------------------------------+----------+---------+\n        | RSASSA-PSS\
    \ with SHA-256            | MUST     |         |\n        | ecdsa-with-sha256\
    \                  | SHOULD   |         |\n        | sha1WithRSAEncryption   \
    \           | MUST NOT |         |\n        | dsa-with-sha1                  \
    \    | MUST NOT |         |\n        | ecdsa-with-sha1                    | MUST\
    \ NOT |         |\n        | RSASSA-PSS with Empty Parameters   | MUST NOT | (*)\
    \     |\n        | RSASSA-PSS with Default Parameters | MUST NOT | (*)     |\n\
    \        +------------------------------------+----------+---------+\n   (*) \
    \ Empty or Default parameters means it is using SHA1, which is at\n        the\
    \ MUST NOT level.\n"
- title: 4.  Algorithms for Internet of Things
  contents:
  - "4.  Algorithms for Internet of Things\n   Some algorithms in this document are\
    \ marked for use with the Internet\n   of Things (IoT).  There are several reasons\
    \ why IoT devices prefer a\n   different set of algorithms from regular IKEv2\
    \ clients.  IoT devices\n   are usually very constrained, meaning that the memory\
    \ size and CPU\n   power is so limited that these clients only have resources\
    \ to\n   implement and run one set of algorithms.  For example, instead of\n \
    \  implementing AES and SHA, these devices typically use AES_XCBC as an\n   integrity\
    \ algorithm so SHA does not need to be implemented.\n   For example, IEEE Std\
    \ 802.15.4 [IEEE-802-15-4] devices have a\n   mandatory-to-implement link-level\
    \ security using AES-CCM with 128-bit\n   keys.  The \"IEEE Recommended Practice\
    \ for Transport of Key Management\n   Protocol (KMP) Datagrams\" [IEEE-802-15-9]\
    \ already provides a way to\n   use Minimal IKEv2 [RFC7815] over the 802.15.4\
    \ layer to provide link\n   keys for the 802.15.4 layer.\n   These devices might\
    \ want to use AES-CCM as their IKEv2 algorithm, so\n   they can reuse the hardware\
    \ implementing it.  They cannot use the\n   AES-CBC algorithm, as the hardware\
    \ quite often does not include\n   support for the AES decryption needed to support\
    \ the CBC mode.  So\n   despite the AES-CCM algorithm requiring AEAD [RFC5282]\
    \ support, the\n   benefit of reusing the crypto hardware makes AES-CCM the preferred\n\
    \   algorithm.\n   Another important aspect of IoT devices is that their transfer\
    \ rates\n   are usually quite low (in the order of tens of kbit/s), and each bit\n\
    \   they transmit has an energy consumption cost associated with it and\n   shortens\
    \ their battery life.  Therefore, shorter packets are\n   preferred.  This is\
    \ the reason for recommending the 8-octet ICV over\n   the 16-octet ICV.\n   Because\
    \ different IoT devices will have different constraints, this\n   document cannot\
    \ specify the one mandatory profile for IoT.  Instead,\n   this document points\
    \ out commonly used algorithms with IoT devices.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The security of cryptographic-based systems depends\
    \ on both the\n   strength of the cryptographic algorithms chosen and the strength\
    \ of\n   the keys used with those algorithms.  The security also depends on\n\
    \   the engineering of the protocol used by the system to ensure that\n   there\
    \ are no non-cryptographic ways to bypass the security of the\n   overall system.\n\
    \   The Diffie-Hellman Group parameter is the most important one to\n   choose\
    \ conservatively.  Any party capturing all IKE and ESP traffic\n   that (even\
    \ years later) can break the selected DH group in IKE, can\n   gain access to\
    \ the symmetric keys used to encrypt all the ESP\n   traffic.  Therefore, these\
    \ groups must be chosen very conservatively.\n   However, specifying an extremely\
    \ large DH group also puts a\n   considerable load on the device, especially when\
    \ this is a large VPN\n   gateway or an IoT-constrained device.\n   This document\
    \ concerns itself with the selection of cryptographic\n   algorithms for the use\
    \ of IKEv2, specifically with the selection of\n   \"mandatory-to-implement\"\
    \ algorithms.  The algorithms identified in\n   this document as \"MUST implement\"\
    \ or \"SHOULD implement\" are not known\n   to be broken at the current time,\
    \ and cryptographic research so far\n   leads us to believe that they will likely\
    \ remain secure into the\n   foreseeable future.  However, this isn't necessarily\
    \ forever and it\n   is expected that new revisions of this document will be issued\
    \ from\n   time to time to reflect the current best practice in this area.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document renames some of the names in the \"\
    Transform Type 1 -\n   Encryption Algorithm Transform IDs\" registry of the \"\
    Internet Key\n   Exchange Version 2 (IKEv2) Parameters\".  All the other names\
    \ have\n   ENCR_ prefix except 3, and all other entries use names in the format\n\
    \   of uppercase words separated with underscores except 6.  This\n   document\
    \ changes those names to match others.\n   Per this document, IANA has renamed\
    \ the following entries for the\n   AES-GCM cipher [RFC4106] and the Camellia\
    \ cipher [RFC5529]:\n     +---------------------------------------+----------------------+\n\
    \     | Old name                              | New name             |\n     +---------------------------------------+----------------------+\n\
    \     | AES-GCM with a 8 octet ICV            | ENCR_AES_GCM_8       |\n     |\
    \ AES-GCM with a 12 octet ICV           | ENCR_AES_GCM_12      |\n     | AES-GCM\
    \ with a 16 octet ICV           | ENCR_AES_GCM_16      |\n     | ENCR_CAMELLIA_CCM\
    \ with an 8-octet ICV | ENCR_CAMELLIA_CCM_8  |\n     | ENCR_CAMELLIA_CCM with\
    \ a 12-octet ICV | ENCR_CAMELLIA_CCM_12 |\n     | ENCR_CAMELLIA_CCM with a 16-octet\
    \ ICV | ENCR_CAMELLIA_CCM_16 |\n     +---------------------------------------+----------------------+\n\
    \   In addition, IANA has added this RFC as a reference to both the ESP\n   Reference\
    \ and IKEv2 Reference columns for ENCR_AES_GCM entries, while\n   keeping the\
    \ existing references there.  Also, IANA has added this RFC\n   as a reference\
    \ to the ESP Reference column for ENCR_CAMELLIA_CCM\n   entries, while keeping\
    \ the existing reference there.\n   The registry entries currently are:\n   Number\
    \ Name                  ESP Reference       IKEv2 Reference\n   ...\n   18   \
    \  ENCR_AES_GCM_8        [RFC4106][RFC8247]  [RFC5282][RFC8247]\n   19     ENCR_AES_GCM_12\
    \       [RFC4106][RFC8247]  [RFC5282][RFC8247]\n   20     ENCR_AES_GCM_16    \
    \   [RFC4106][RFC8247]  [RFC5282][RFC8247]\n   ...\n   25     ENCR_CAMELLIA_CCM_8\
    \   [RFC5529][RFC8247]  -\n   26     ENCR_CAMELLIA_CCM_12  [RFC5529][RFC8247]\
    \  -\n   27     ENCR_CAMELLIA_CCM_16  [RFC5529][RFC8247]  -\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4106]  Viega, J. and D. McGrew, \"The Use of Galois/Counter Mode\n   \
    \           (GCM) in IPsec Encapsulating Security Payload (ESP)\",\n         \
    \     RFC 4106, DOI 10.17487/RFC4106, June 2005,\n              <https://www.rfc-editor.org/info/rfc4106>.\n\
    \   [RFC4307]  Schiller, J., \"Cryptographic Algorithms for Use in the\n     \
    \         Internet Key Exchange Version 2 (IKEv2)\", RFC 4307,\n             \
    \ DOI 10.17487/RFC4307, December 2005,\n              <https://www.rfc-editor.org/info/rfc4307>.\n\
    \   [RFC5282]  Black, D. and D. McGrew, \"Using Authenticated Encryption\n   \
    \           Algorithms with the Encrypted Payload of the Internet Key\n      \
    \        Exchange version 2 (IKEv2) Protocol\", RFC 5282,\n              DOI 10.17487/RFC5282,\
    \ August 2008,\n              <https://www.rfc-editor.org/info/rfc5282>.\n   [RFC7296]\
    \  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n              Kivinen,\
    \ \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\", STD 79,\
    \ RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <https://www.rfc-editor.org/info/rfc7296>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [Err1937]  RFC Errata, Erratum ID 1937, RFC\
    \ 4307,\n              <https://www.rfc-editor.org/errata/eid1937>.\n   [IEEE-802-15-4]\n\
    \              IEEE, \"IEEE Standard for Low-Rate Wireless Personal Area\n   \
    \           Networks (WPANs)\", IEEE Standard 802.15.4,\n              DOI 10.1109/IEEESTD.2016.7460875,\
    \ 2015,\n              <http://ieeexplore.ieee.org/document/7460875/>.\n   [IEEE-802-15-9]\n\
    \              IEEE, \"IEEE Recommended Practice for Transport of Key\n      \
    \        Management Protocol (KMP) Datagrams\", IEEE Standard\n              802.15.9,\
    \ DOI 10.1109/IEEESTD.2016.7544442, 2016,\n              <http://ieeexplore.ieee.org/document/7544442/>.\n\
    \   [IKEV2-IANA]\n              IANA, \"Internet Key Exchange Version 2 (IKEv2)\n\
    \              Parameters\",\n              <http://www.iana.org/assignments/ikev2-parameters>.\n\
    \   [RFC5529]  Kato, A., Kanda, M., and S. Kanno, \"Modes of Operation for\n \
    \             Camellia for Use with IPsec\", RFC 5529,\n              DOI 10.17487/RFC5529,\
    \ April 2009,\n              <https://www.rfc-editor.org/info/rfc5529>.\n   [RFC6989]\
    \  Sheffer, Y. and S. Fluhrer, \"Additional Diffie-Hellman\n              Tests\
    \ for the Internet Key Exchange Protocol Version 2\n              (IKEv2)\", RFC\
    \ 6989, DOI 10.17487/RFC6989, July 2013,\n              <https://www.rfc-editor.org/info/rfc6989>.\n\
    \   [RFC7427]  Kivinen, T. and J. Snyder, \"Signature Authentication in\n    \
    \          the Internet Key Exchange Version 2 (IKEv2)\", RFC 7427,\n        \
    \      DOI 10.17487/RFC7427, January 2015,\n              <https://www.rfc-editor.org/info/rfc7427>.\n\
    \   [RFC7815]  Kivinen, T., \"Minimal Internet Key Exchange Version 2\n      \
    \        (IKEv2) Initiator Implementation\", RFC 7815,\n              DOI 10.17487/RFC7815,\
    \ March 2016,\n              <https://www.rfc-editor.org/info/rfc7815>.\n   [TRANSCRIPTION]\n\
    \              Bhargavan, K. and G. Leurent, \"Transcript Collision\n        \
    \      Attacks: Breaking Authentication in TLS, IKE, and SSH\",\n            \
    \  Network and Distributed System Security Symposium (NDSS),\n              DOI\
    \ 10.14722/ndss.2016.23418, Feb 2016,\n              <https://hal.inria.fr/hal-01244855/>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   RFC 4307 was authored by Jeffrey I. Schiller of the Massachusetts\n\
    \   Institute of Technology (MIT).  Much of the original text has been\n   copied\
    \ verbatim.\n   We would like to thank Paul Hoffman, Yaron Sheffer, John Mattsson,\n\
    \   Tommy Pauly, Eric Rescorla, and Pete Resnick for their valuable\n   feedback\
    \ and reviews.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yoav Nir\n   Dell EMC\n   9 Andrei Sakharov Street\n \
    \  Haifa  3190500\n   Israel\n   Email: ynir.ietf@gmail.com\n   Tero Kivinen\n\
    \   Email: kivinen@iki.fi\n   Paul Wouters\n   Red Hat\n   Email: pwouters@redhat.com\n\
    \   Daniel Migault\n   Ericsson\n   8275 Trans Canada Route\n   Saint-Laurent,\
    \ QC  H4S 0B6\n   Canada\n   Phone: +1 514-452-2160\n   Email: daniel.migault@ericsson.com\n"
