- title: __initial_text__
  contents:
  - '  Generic Aggregate Resource ReSerVation Protocol (RSVP) Reservations

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   RFC 3175 defines aggregate Resource ReSerVation Protocol (RSVP)\n\
    \   reservations allowing resources to be reserved in a Diffserv network\n   for\
    \ a given Per Hop Behavior (PHB), or given set of PHBs, from a\n   given source\
    \ to a given destination.  RFC 3175 also defines how end-\n   to-end RSVP reservations\
    \ can be aggregated onto such aggregate\n   reservations when transiting through\
    \ a Diffserv cloud.  There are\n   situations where multiple such aggregate reservations\
    \ are needed for\n   the same source IP address, destination IP address, and PHB\
    \ (or set\n   of PHBs).  However, this is not supported by the aggregate\n   reservations\
    \ defined in RFC 3175.  In order to support this, the\n   present document defines\
    \ a more flexible type of aggregate RSVP\n   reservations, referred to as generic\
    \ aggregate reservation.  Multiple\n   such generic aggregate reservations can\
    \ be established for a given\n   PHB (or set of PHBs) from a given source IP address\
    \ to a given\n   destination IP address.  The generic aggregate reservations may\
    \ be\n   used to aggregate end-to-end RSVP reservations.  This document also\n\
    \   defines the procedures for such aggregation.  The generic aggregate\n   reservations\
    \ may also be used end-to-end directly by end-systems\n   attached to a Diffserv\
    \ network.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Related IETF Documents .....................................6\n  \
    \    1.2. Organization of This Document ..............................6\n    \
    \  1.3. Requirements Language ......................................7\n   2. Object\
    \ Definition ...............................................7\n      2.1. SESSION\
    \ Class ..............................................8\n      2.2. SESSION-OF-INTEREST\
    \ (SOI) Class ...........................11\n   3. Processing Rules for Handling\
    \ Generic Aggregate RSVP\n      Reservations ...................................................13\n\
    \      3.1. Extensions to Path and Resv Processing ....................13\n  \
    \ 4. Procedures for Aggregation over Generic Aggregate RSVP\n      Reservations\
    \ ...................................................14\n   5. Example Usage Of\
    \ Multiple Generic Aggregate Reservations\n      per PHB from a Given Aggregator\
    \ to a Given Deaggregator ........19\n   6. Security Considerations ........................................21\n\
    \   7. IANA Considerations ............................................24\n  \
    \ 8. Acknowledgments ................................................25\n   9.\
    \ Normative References ...........................................26\n   10. Informative\
    \ References ........................................26\n   Appendix A. Example\
    \ Signaling Flow ................................28\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RSVP-AGG] defines RSVP aggregate reservations that allow\
    \ resources\n   to be reserved in a Diffserv network for a flow characterized\
    \ by its\n   3-tuple <source IP address, destination IP address, Diffserv Code\n\
    \   Point>.\n   [RSVP-AGG] also defines the procedures for aggregation of end-to-end\n\
    \   (E2E) RSVP reservations onto such aggregate reservations when\n   transiting\
    \ through a Diffserv cloud.  Such aggregation is illustrated\n   in Figure 1.\
    \  This document reuses the terminology defined in\n   [RSVP-AGG].\n         \
    \           --------------------------\n                   /       Aggregation\
    \        \\\n      |----|      |          Region            |      |----|\n  \
    \ H--| R  |\\ |-----|                       |------| /| R  |-->H\n   H--|    |\\\
    \\|     |   |---|     |---|     |      |//|    |-->H\n      |----| \\|     | \
    \  | I |     | I |     |      |/ |----|\n              | Agg |======================>|\
    \ Deag |\n             /|     |   |   |     |   |     |      |\\\n   H--------//|\
    \     |   |---|     |---|     |      |\\\\-------->H\n   H--------/ |-----|  \
    \                     |------| \\-------->H\n                  |             \
    \               |\n                   \\                          /\n        \
    \            --------------------------\n   H       = Host requesting end-to-end\
    \ RSVP reservations\n   R       = RSVP router\n   Agg     = Aggregator\n   Deag\
    \    = Deaggregator\n   I       = Interior Router\n   -->   = E2E RSVP reservation\n\
    \   ==>   = Aggregate RSVP reservation\n                Figure 1 : Aggregation\
    \ of E2E Reservations\n                     over Aggregate RSVP Reservations\n\
    \   These aggregate reservations use a SESSION type specified in\n   [RSVP-AGG]\
    \ that contains the receiver (or Deaggregator) IP address\n   and the Diffserv\
    \ Code Point (DSCP) of the Per Hop Behavior (PHB) from\n   which Diffserv resources\
    \ are to be reserved.  For example, in the\n   case of IPv4, the SESSION object\
    \ is specified as:\n      o  Class = SESSION,\n         C-Type = RSVP-AGGREGATE-IP4\n\
    \           +-------------+-------------+-------------+-------------+\n      \
    \     |              IPv4 Session Address (4 bytes)           |\n           +-------------+-------------+-------------+-------------+\n\
    \           | /////////// |    Flags    |  /////////  |     DSCP    |\n      \
    \     +-------------+-------------+-------------+-------------+\n   These aggregate\
    \ reservations use SENDER_TEMPLATE and FILTER_SPEC\n   types, specified in [RSVP-AGG],\
    \ that contain only the sender (or\n   Aggregator) IP address.  For example, in\
    \ the case of IPv4, the\n   SENDER_TEMPLATE object is specified as:\n      o \
    \ Class = SENDER_TEMPLATE,\n         C-Type = RSVP-AGGREGATE-IP4\n           +-------------+-------------+-------------+-------------+\n\
    \           |                IPv4 Aggregator Address (4 bytes)      |\n      \
    \     +-------------+-------------+-------------+-------------+\n   Thus, it is\
    \ possible to establish, from a given source IP address to\n   a given destination\
    \ IP address, separate such aggregate reservations\n   for different PHBs (or\
    \ different sets of PHBs).  However, from a\n   given source IP address to a given\
    \ IP destination address, only a\n   single [RSVP-AGG] aggregate reservation can\
    \ be established for a\n   given PHB (or given set of PHBs).\n   Situations have\
    \ since been identified where multiple such aggregate\n   reservations are needed\
    \ for the same source IP address, destination\n   IP address, and PHB (or set\
    \ of PHBs).  One example is where E2E\n   reservations using different preemption\
    \ priorities (as per\n   [RSVP-PREEMP]) need to be aggregated through a Diffserv\
    \ cloud using\n   the same PHB.  Using multiple aggregate reservations for the\
    \ same PHB\n   allows enforcement of the different preemption priorities within\
    \ the\n   aggregation region.  In turn, this allows more efficient management\n\
    \   of the Diffserv resources, and in periods of resource shortage, this\n   allows\
    \ sustainment of a larger number of E2E reservations with higher\n   preemption\
    \ priorities.\n   For example, [SIG-NESTED] discusses in detail how end-to-end\
    \ RSVP\n   reservations can be established in a nested VPN environment through\n\
    \   RSVP aggregation.  In particular, [SIG-NESTED] describes how multiple\n  \
    \ parallel generic aggregate reservations (for the same PHB), each with\n   different\
    \ preemption priorities, can be used to efficiently support\n   the preemption\
    \ priorities of end-to-end reservations.\n   This document addresses this requirement\
    \ for multiple aggregate\n   reservations for the same PHB (or same set of PHBs),\
    \ by defining a\n   more flexible type of aggregate RSVP reservations, referred\
    \ to as\n   generic aggregate reservations.  This is achieved primarily by adding\n\
    \   the notions of a Virtual Destination Port and of an Extended Virtual\n   Destination\
    \ Port in the RSVP SESSION object.\n   The notion of Virtual Destination Port\
    \ was introduced in [RSVP-IPSEC]\n   to address a similar requirement (albeit\
    \ in a different context) for\n   identification and demultiplexing of sessions\
    \ beyond the IP\n   destination address.  This document reuses this notion from\n\
    \   [RSVP-IPSEC] for identification and demultiplexing of generic\n   aggregate\
    \ sessions beyond the IP destination address and PHB.  This\n   allows multiple\
    \ generic aggregate reservations to be established for\n   a given PHB (or set\
    \ of PHBs), from a given source IP address to a\n   given destination IP address.\n\
    \   [RSVP-TE] introduced the concept of an Extended Tunnel ID (in\n   addition\
    \ to the tunnel egress address and the Tunnel ID) in the\n   SESSION object used\
    \ to establish MPLS Traffic Engineering tunnels\n   with RSVP.  The Extended Tunnel\
    \ ID provides a very convenient\n   mechanism for the tunnel ingress node to narrow\
    \ the scope of the\n   session to the ingress-egress pair.  The ingress node can\
    \ achieve\n   this by using one of its own IP addresses as a globally unique\n\
    \   identifier and including it in the Extended Tunnel ID and therefore\n   within\
    \ the SESSION object.  This document reuses this notion of\n   Extended Tunnel\
    \ ID from [RSVP-TE], simply renaming it Extended\n   Virtual Destination Port.\
    \  This provides a convenient mechanism to\n   narrow the scope of a generic aggregate\
    \ session to an Aggregator-\n   Deaggregator pair.\n   The RSVP SESSION object\
    \ for generic aggregate reservations uses the\n   PHB Identification Code (PHB-ID)\
    \ defined in [PHB-ID] to identify the\n   PHB, or set of PHBs, from which the\
    \ Diffserv resources are to be\n   reserved.  This is instead of using the Diffserv\
    \ Code Point (DSCP) as\n   per [RSVP-AGG].  Using the PHB-ID instead of the DSCP\
    \ allows explicit\n   indication of whether the Diffserv resources belong to a\
    \ single PHB\n   or to a set of PHBs.  It also facilitates handling of situations\n\
    \   where a generic aggregate reservation spans two (or more) Diffserv\n   domains\
    \ that use different DSCP values for the same Diffserv PHB (or\n   set of PHBs)\
    \ from which resources are reserved.  This is because the\n   PHB-ID allows conveying\
    \ of the PHB (or set of PHBs) independently of\n   what DSCP value(s) are used\
    \ locally for that PHB (or set of PHBs).\n   The generic aggregate reservations\
    \ may be used to aggregate end-to-\n   end RSVP reservations.  This document also\
    \ defines the procedures for\n   such aggregation.  These procedures are based\
    \ on those of [RSVP-AGG],\n   and this document only specifies the differences\
    \ from those.\n   The generic aggregate reservations may also be used end-to-end\n\
    \   directly by end-systems attached to a Diffserv network.\n"
- title: 1.1.  Related IETF Documents
  contents:
  - "1.1.  Related IETF Documents\n   This document is heavily based on [RSVP-AGG].\
    \  It reuses [RSVP-AGG]\n   wherever applicable and only specifies the necessary\
    \ extensions\n   beyond [RSVP-AGG].\n   The mechanisms defined in [BW-REDUC] allow\
    \ an existing reservation to\n   be reduced in allocated bandwidth by RSVP routers\
    \ in lieu of tearing\n   that reservation down.  These mechanisms are applicable\
    \ to the\n   generic aggregate reservations defined in the present document.\n\
    \   [RSVP-TUNNEL] describes a general approach to running RSVP over\n   various\
    \ types of tunnels.  One of these types of tunnel, referred to\n   as a \"type\
    \ 2 tunnel\", has some similarity with the generic aggregate\n   reservations\
    \ described in this document.  The similarity stems from\n   the fact that a single,\
    \ aggregate reservation is made for the tunnel\n   while many individual flows\
    \ are carried over that tunnel.  However,\n   [RSVP-TUNNEL] does not address the\
    \ use of Diffserv-based\n   classification and scheduling in the core of a network\
    \ (between\n   tunnel endpoints), but rather relies on a UDP/IP tunnel header\
    \ for\n   classification.  This is why [RSVP-AGG] required additional objects\n\
    \   and procedures beyond those of [RSVP-TUNNEL].  Like [RSVP-AGG], this\n   document\
    \ also assumes the use of Diffserv-based classification and\n   scheduling in\
    \ the aggregation region and, thus, requires additional\n   objects and procedures\
    \ beyond those of [RSVP-TUNNEL].\n   As explained earlier, this document reuses\
    \ the notion of Virtual\n   Destination Port from [RSVP-IPSEC] and the notion\
    \ of Extended Tunnel\n   ID from [RSVP-TE].\n"
- title: 1.2.  Organization Of This Document
  contents:
  - "1.2.  Organization Of This Document\n   Section 2 defines the new RSVP objects\
    \ related to generic aggregate\n   reservations and to aggregation of E2E reservations\
    \ onto those.\n   Section 3 describes the processing rules for handling of generic\n\
    \   aggregate reservations.  Section 4 specifies the procedures for\n   aggregation\
    \ of end-to-end RSVP reservations over generic aggregate\n   RSVP reservations.\
    \  Section 5 provides example usage of how the\n   generic aggregate reservations\
    \ may be used.\n   The Security Considerations and the IANA Considerations are\
    \ discussed\n   in Sections 6 and 7, respectively.\n   Finally, Appendix A provides\
    \ an example signaling flow that\n   illustrates aggregation of E2E RSVP reservations\
    \ onto generic\n   aggregate RSVP reservations.\n"
- title: 1.3.  Requirements Language
  contents:
  - "1.3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [KEYWORDS].\n"
- title: 2.  Object Definition
  contents:
  - "2.  Object Definition\n   This document reuses the RSVP-AGGREGATE-IP4 FILTER_SPEC,\
    \ RSVP-\n   AGGREGATE-IP6 FILTER_SPEC, RSVP-AGGREGATE-IP4 SENDER_TEMPLATE, and\n\
    \   RSVP-AGGREGATE-IP6 SENDER_TEMPLATE objects defined in [RSVP-AGG].\n   This\
    \ document defines:\n      - two new objects (GENERIC-AGGREGATE-IP4 SESSION and\
    \ GENERIC-\n        AGGREGATE-IP6 SESSION) under the existing SESSION Class, and\n\
    \      - two new objects (GENERIC-AGG-IP4-SOI and GENERIC-AGG-IP6-SOI)\n     \
    \   under a new SESSION-OF-INTEREST Class.\n   Detailed description of these objects\
    \ is provided below in this\n   section.\n   The GENERIC-AGGREGATE-IP4 SESSION\
    \ and GENERIC-AGGREGATE-IP6 SESSION\n   objects are applicable to all types of\
    \ RSVP messages.\n   This specification defines the use of the GENERIC-AGG-IP4-SOI\
    \ and\n   GENERIC-AGG-IP6-SOI objects in two circumstances:\n      - inside an\
    \ E2E PathErr message that contains an error code of\n        NEW-AGGREGATE-NEEDED\
    \ in order to convey the session of a new\n        generic aggregate reservation\
    \ that needs to be established.\n      - inside an E2E Resv message in order to\
    \ convey the session of the\n        generic aggregate reservation onto which\
    \ this E2E reservation\n        needs to be mapped.\n   Details of the corresponding\
    \ procedures can be found in Section 4.\n   However, it is envisioned that the\
    \ ability to signal, inside RSVP\n   messages, the Session of another reservation\
    \ (which has some\n   relationship with the current RSVP reservation) might have\
    \ some other\n   applicability in the future.  Thus, those objects have been specified\n\
    \   in a more generic manner under a flexible SESSION-OF-INTEREST class.\n   All\
    \ the new objects defined in this document are optional with\n   respect to RSVP\
    \ so that general RSVP implementations that are not\n   concerned with generic\
    \ aggregate reservations do not have to support\n   these objects.  RSVP routers\
    \ supporting generic aggregate IPv4 or\n   IPv6 reservations MUST support the\
    \ GENERIC-AGGREGATE-IP4 SESSION\n   object or the GENERIC-AGGREGATE-IP6 SESSION\
    \ object, respectively.\n   RSVP routers supporting RSVP aggregation over generic\
    \ aggregate IPv4\n   or IPv6 reservations MUST support the GENERIC-AGG-IP4-SOI\
    \ object or\n   GENERIC-AGG-IP6-SOI object, respectively.\n"
- title: 2.1.  SESSION Class
  contents:
  - "2.1.  SESSION Class\n   o GENERIC-AGGREGATE-IP4 SESSION object:\n           \
    \       Class = 1 (SESSION)\n                  C-Type = 17\n               0 \
    \          7 8          15 16         23 24          31\n              +-------------+-------------+-------------+-------------+\n\
    \              |               IPv4 DestAddress (4 bytes)              |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \        | Reserved    |     Flags   |          PHB-ID           |\n         \
    \     +-------------+-------------+-------------+-------------+\n            \
    \  |          Reserved         |         vDstPort          |\n              +-------------+-------------+-------------+-------------+\n\
    \              |                    Extended vDstPort                  |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \         0           7 8          15 16         23 24          31\n   IPv4 DestAddress\
    \ (IPv4 Destination Address)\n      IPv4 address of the receiver (or Deaggregator).\n\
    \   Reserved\n      An 8-bit field.  All bits MUST be set to 0 on transmit.  This\n\
    \      field MUST be ignored on receipt.\n   Flags\n      An 8-bit field.  The\
    \ content and processing of this field are the\n      same as for the Flags field\
    \ of the IPv4/UDP SESSION object (see\n      [RSVP]).\n   PHB-ID (Per Hop Behavior\
    \ Identification Code)\n      A 16-bit field containing the Per Hop Behavior Identification\
    \ Code\n      of the PHB, or of the set of PHBs, from which Diffserv resources\n\
    \      are to be reserved.  This field MUST be encoded as specified in\n     \
    \ Section 2 of [PHB-ID].\n   Reserved\n      A 16-bit field.  All bits MUST be\
    \ set to 0 on transmit.  This\n      field MUST be ignored on receipt.\n   VDstPort\
    \ (Virtual Destination Port)\n      A 16-bit identifier used in the SESSION that\
    \ remains constant over\n      the life of the generic aggregate reservation.\n\
    \   Extended vDstPort (Extended Virtual Destination Port)\n      A 32-bit identifier\
    \ used in the SESSION that remains constant over\n      the life of the generic\
    \ aggregate reservation.  A sender (or\n      Aggregator) that wishes to narrow\
    \ the scope of a SESSION to the\n      sender-receiver pair (or Aggregator-Deaggregator\
    \ pair) SHOULD\n      place its IPv4 address here as a network unique identifier.\
    \  A\n      sender (or Aggregator) that wishes to use a common session with\n\
    \      other senders (or Aggregators) in order to use a shared\n      reservation\
    \ across senders (or Aggregators) MUST set this field to\n      all zeros.\n \
    \  o GENERIC-AGGREGATE-IP6 SESSION object:\n                  Class = 1 (SESSION)\n\
    \                  C-Type = 18\n               0           7 8          15 16\
    \         23 24          31\n              +-------------+-------------+-------------+-------------+\n\
    \              |                                                       |\n   \
    \           +                                                       +\n      \
    \        |                                                       |\n         \
    \     +               IPv6 DestAddress (16 bytes)             +\n            \
    \  |                                                       |\n              +\
    \                                                       +\n              |   \
    \                                                    |\n              +-------------+-------------+-------------+-------------+\n\
    \              | Reserved    |     Flags   |          PHB-ID           |\n   \
    \           +-------------+-------------+-------------+-------------+\n      \
    \        |          Reserved         |         vDstPort          |\n         \
    \     +-------------+-------------+-------------+-------------+\n            \
    \  |                                                       |\n              +\
    \                                                       +\n              |   \
    \                  Extended vDstPort                 |\n              +      \
    \                                                 +\n              |         \
    \               (16 bytes)                     |\n              +            \
    \                                           +\n              |               \
    \                                        |\n              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \               0           7 8          15 16            25 26       31\n   IPv6\
    \ DestAddress (IPv6 Destination Address)\n      IPv6 address of the receiver (or\
    \ Deaggregator).\n   Reserved\n      An 8-bit field.  All bits MUST be set to\
    \ 0 on transmit.  This\n      field MUST be ignored on receipt.\n   Flags\n  \
    \    An 8-bit field.  The content and processing of this field are the\n     \
    \ same as for the Flags field of the IPv6/UDP SESSION object (see\n      [RSVP]).\n\
    \   PHB-ID (Per Hop Behavior Identification Code)\n      A 16-bit field containing\
    \ the Per Hop Behavior Identification Code\n      of the PHB, or of the set of\
    \ PHBs, from which Diffserv resources\n      are to be reserved.  This field MUST\
    \ be encoded as specified in\n      Section 2 of [PHB-ID].\n   Reserved\n    \
    \  A 16-bit field.  All bits MUST be set to 0 on transmit.  This\n      field\
    \ MUST be ignored on receipt.\n   VDstPort (Virtual Destination Port)\n      A\
    \ 16-bit identifier used in the SESSION that remains constant over\n      the\
    \ life of the generic aggregate reservation.\n   Extended vDstPort (Extended Virtual\
    \ Destination Port)\n      A 128-bit identifier used in the SESSION that remains\
    \ constant\n      over the life of the generic aggregate reservation.  A sender\
    \ (or\n      Aggregator) that wishes to narrow the scope of a SESSION to the\n\
    \      sender-receiver pair (or Aggregator-Deaggregator pair) SHOULD\n      place\
    \ its IPv6 address here as a network unique identifier.  A\n      sender (or Aggregator)\
    \ that wishes to use a common session with\n      other senders (or Aggregators)\
    \ in order to use a shared\n      reservation across senders (or Aggregators)\
    \ MUST set this field to\n      all zeros.\n"
- title: 2.2.  SESSION-OF-INTEREST (SOI) Class
  contents:
  - "2.2.  SESSION-OF-INTEREST (SOI) Class\n   o GENERIC-AGG-IP4-SOI object:\n   \
    \               Class = 132\n                  C-Type = 1\n            0     \
    \      7 8          15 16         23 24          31\n            +-------------+-------------+-------------+-------------+\n\
    \            |                           | SOI         |GEN-AGG-IP4- |\n     \
    \       |       Length (bytes)      | Class-Num   |SOI C-Type   |\n          \
    \  +-------------+-------------+-------------+-------------+\n            |  \
    \                                                     |\n            //  Content\
    \ of a GENERIC-AGGREGATE-IP4 SESSION Object  //\n            |               \
    \                                        |\n            +-------------+-------------+-------------+-------------+\n\
    \   Content of a GENERIC-AGGREGATE-IP4 SESSION Object:\n      This field contains\
    \ a copy of the SESSION object of the session\n      that is of interest for the\
    \ reservation.  In the case of a\n      GENERIC-AGG-IP4-SOI, the session of interest\
    \ conveyed in this\n      field is a GENERIC-AGGREGATE-IP4 SESSION.\n   o GENERIC-AGG-IP6-SOI\
    \ object:\n                  Class = 132\n                  C-Type = 2\n     \
    \       0           7 8          15 16         23 24          31\n           \
    \ +-------------+-------------+-------------+-------------+\n            |   \
    \                        | SOI         |GEN-AGG-IP6- |\n            |       Length\
    \ (bytes)      | Class-Num   |SOI C-Type   |\n            +-------------+-------------+-------------+-------------+\n\
    \            |                                                       |\n     \
    \       //  Content of a GENERIC-AGGREGATE-IP6 SESSION Object  //\n          \
    \  |                                                       |\n            +-------------+-------------+-------------+-------------+\n\
    \   Content of a GENERIC-AGGREGATE-IP6 SESSION Object:\n      This field contains\
    \ a copy of the SESSION object of the session\n      that is of interest for the\
    \ reservation.  In the case of a\n      GENERIC-AGG-IP6-SOI, the session of interest\
    \ conveyed in this\n      field is a GENERIC-AGGREGATE-IP6 SESSION.\n   For example,\
    \ if a SESSION-OF-INTEREST object is used inside an E2E\n   Resv message (as per\
    \ the procedures defined in Section 4) to indicate\n   which generic aggregate\
    \ IPv4 session the E2E reservation is to be\n   mapped onto, then the GENERIC-AGG-IP4-SOI\
    \ object will be used, and it\n   will be encoded like this:\n             0 \
    \          7 8          15 16         23 24          31\n            +-------------+-------------+-------------+-------------+\n\
    \            |                           | SOI         |GEN-AGG-IP4- |\n     \
    \       |       Length (bytes)      | Class-Num   |SOI C-Type   |\n          \
    \  +-------------+-------------+-------------+-------------+\n            |  \
    \             IPv4 DestAddress (4 bytes)              |\n            +-------------+-------------+-------------+--+----------+\n\
    \            | Reserved    |     Flags   |          PHB-ID           |\n     \
    \       +-------------+-------------+-------------+-------------+\n          \
    \  |          Reserved         |         vDstPort          |\n            +-------------+-------------+-------------+-------------+\n\
    \            |                    Extended vDstPort                  |\n     \
    \       +-------------+-------------+-------------+-------------+\n          \
    \   0           7 8          15 16         23 24          31\n   Note that a SESSION-OF-INTEREST\
    \ object is not a SESSION object in\n   itself.  It does not replace the SESSION\
    \ object in RSVP messages.  It\n   does not modify the usage of the SESSION object\
    \ in RSVP messages.  It\n   simply allows conveying the Session of another RSVP\
    \ reservation\n   inside RSVP signaling messages, for some particular purposes.\
    \  In the\n   context of this document, it is used to convey, inside an E2E RSVP\n\
    \   message pertaining to an end-to-end reservation, the Session of a\n   generic\
    \ aggregate reservation associated with the E2E reservation.\n   Details for the\
    \ corresponding procedures are specified in Section 4.\n"
- title: 3.  Processing Rules for Handling Generic Aggregate RSVP Reservations
  contents:
  - "3.  Processing Rules for Handling Generic Aggregate RSVP Reservations\n   This\
    \ section presents extensions to the processing of RSVP messages\n   required\
    \ by [RSVP] and presented in [RSVP-PROCESS].  These extensions\n   are required\
    \ in order to properly process the GENERIC-AGGREGATE-IP4\n   or GENERIC-AGGREGATE-IP6\
    \ SESSION object and the RSVP-AGGREGATE-IP4 or\n   RSVP-AGGREGATE-IP6 FILTER_SPEC\
    \ object.  Values for referenced error\n   codes can be found in [RSVP].  As with\
    \ the other RSVP documents,\n   values for internally reported (API) errors are\
    \ not defined.\n   When referring to the new GENERIC-AGGREGATE-IP4 and GENERIC-\n\
    \   AGGREGATE-IP6 SESSION objects, IP version will not be included, and\n   they\
    \ will be referred to simply as GENERIC-AGGREGATE SESSION, unless\n   a specific\
    \ distinction between IPv4 and IPv6 is being made.\n   When referring to the [RSVP-AGG]\
    \ RSVP-AGGREGATE-IP4 and RSVP-\n   AGGREGATE-IP6 SESSION, FILTER_SPEC, and SENDER_TEMPLATE\
    \ objects, IP\n   version will not be included, and they will be referred to simply\
    \ as\n   RSVP-AGGREGATE, unless a specific distinction between IPv4 and IPv6\n\
    \   is being made.\n"
- title: 3.1.  Extensions to Path and Resv Processing
  contents:
  - "3.1.  Extensions to Path and Resv Processing\n   The following PATH message processing\
    \ changes are defined:\n      o When a session is defined using the GENERIC-AGGREGATE\
    \ SESSION\n        object, only the [RSVP-AGG] RSVP-AGGREGATE SENDER_TEMPLATE\
    \ may\n        be used.  When this condition is violated in a PATH message\n \
    \       received by an RSVP end-station, the RSVP end-station SHOULD\n       \
    \ report a \"Conflicting C-Type\" API error to the application.\n        When\
    \ this condition is violated in a PATH message received by an\n        RSVP router,\
    \ the RSVP router MUST consider this as a message\n        formatting error.\n\
    \      o For PATH messages that contain the GENERIC-AGGREGATE SESSION\n      \
    \  object, the VDstPort value, the Extended VDstPort value, and the\n        PHB-ID\
    \ value should be recorded (in addition to the\n        destination/Deaggregator\
    \ address and source/Aggregator address).\n        These values form part of the\
    \ recorded state of the session.\n        The PHB-ID may need to be passed to\
    \ traffic control; however the\n        vDstPort and Extended VDstPort are not\
    \ passed to traffic control\n        since they do not appear inside the data\
    \ packets of the\n        corresponding reservation.\n   The following changes\
    \ to RESV message processing are defined:\n      o When a RESV message contains\
    \ a [RSVP-AGG] RSVP-AGGREGATE\n        FILTER_SPEC, the session MUST be defined\
    \ using either the RSVP-\n        AGGREGATE SESSION object (as per [RSVP-AGG])\
    \ or the GENERIC-\n        AGGREGATE SESSION object (as per this document).  If\
    \ this\n        condition is not met, an RSVP router or end-station MUST\n   \
    \     consider that there is a message formatting error.\n      o When the RSVP-AGGREGATE\
    \ FILTER_SPEC is used and the SESSION type\n        is GENERIC-AGGREGATE, each\
    \ node uses data classifiers as per the\n        following:\n        * to perform\
    \ Diffserv classification the node MUST rely on the\n          Diffserv data classifier\
    \ based on the DSCP only.  The relevant\n          DSCP value(s) are those that\
    \ are associated with the PHB-ID of\n          the generic aggregate reservation.\n\
    \        * If the node also needs to perform fine-grain classification\n     \
    \     (for example, to perform fine-grain input policing at a trust\n        \
    \  boundary) then the node MUST create a data classifier\n          described\
    \ by the 3-tuple <DestAddress, SrcAddress, DSCP>.\n          The relevant DSCP\
    \ value(s) are those that are associated with\n          the PHB-ID of the generic\
    \ aggregate reservation.\n          Note that if multiple generic aggregate reservations\
    \ are\n          established with different Virtual Destination Ports (and/or\n\
    \          different Extended Virtual Destination Ports) but with the\n      \
    \    same <DestAddress, SrcAddress, PHB-ID>, then those cannot be\n          distinguished\
    \ by the classifier.  If the router is using the\n          classifier for policing\
    \ purposes, the router will therefore\n          police those together and MUST\
    \ program the policing rate to\n          the sum of the reserved rate across\
    \ all the corresponding\n          reservations.\n"
- title: 4.  Procedures for Aggregation over Generic Aggregate RSVP Reservations
  contents:
  - "4.  Procedures for Aggregation over Generic Aggregate RSVP Reservations\n   The\
    \ procedures for aggregation of E2E reservations over generic\n   aggregate RSVP\
    \ reservations are the same as the procedures specified\n   in [RSVP-AGG] with\
    \ the exceptions of the procedure changes listed in\n   this section.\n   As specified\
    \ in [RSVP-AGG], the Deaggregator is responsible for\n   mapping a given E2E reservation\
    \ on a given aggregate reservation.\n   The Deaggregator requests establishment\
    \ of a new aggregate\n   reservation by sending to the Aggregator an E2E PathErr\
    \ message with\n   an error code of NEW-AGGREGATE-NEEDED.  In [RSVP-AGG], the\n\
    \   Deaggregator conveys the DSCP of the new requested aggregate\n   reservation\
    \ by including a DCLASS Object in the E2E PathErr and\n   encoding the corresponding\
    \ DSCP inside.  This document modifies and\n   extends this procedure.  The Deaggregator\
    \ MUST include in the E2E\n   PathErr message a SESSION-OF-INTEREST object that\
    \ contains the\n   GENERIC-AGGREGATE SESSION to be used for establishment of the\n\
    \   requested generic aggregate reservation.  Since this GENERIC-\n   AGGREGATE\
    \ SESSION contains the PHB-ID, the DCLASS object need not be\n   included in the\
    \ PathErr message.\n   Note that the Deaggregator can easily ensure that different\n\
    \   Aggregators use different sessions for their Aggregate Path towards a\n  \
    \ given Deaggregator.  This is because the Deaggregator can easily\n   select\
    \ VDstPort and/or Extended VDstPort numbers which are different\n   for each Aggregator\
    \ (for example, by using the Aggregator address as\n   the Extended VDstPort)\
    \ and can communicate those inside the GENERIC-\n   AGGREGATE SESSION included\
    \ in the SESSION-OF-INTEREST object.  This\n   provides an easy solution to establish\
    \ separate reservations from\n   every Aggregator to a given Deaggregator.  Conversely,\
    \ if reservation\n   sharing were needed across multiple Aggregators, the Deaggregator\n\
    \   could facilitate this by allocating the same VDstPort and Extended\n   VDstPort\
    \ to the multiple Aggregators, and thus including the same\n   GENERIC-AGGREGATE\
    \ SESSION inside the SESSION-OF-INTEREST object in\n   the E2E PathErr messages\
    \ sent to these Aggregators.  The Aggregators\n   could then all establish an\
    \ Aggregate Path with the same GENERIC-\n   AGGREGATE SESSION.\n   Therefore,\
    \ various sharing scenarios can easily be supported.\n   Policies followed by\
    \ the Deaggregator to determine which Aggregators\n   need shared or separate\
    \ reservations are beyond the scope of this\n   document.\n   The Deaggregator\
    \ MAY also include in the E2E PathErr message (with an\n   error code of NEW-AGGREGATE-NEEDED)\
    \ additional RSVP objects which are\n   to be used for establishment of the newly\
    \ needed generic aggregate\n   reservation.  For example, the Deaggregator MAY\
    \ include in the E2E\n   PathErr an RSVP Signaled Preemption Priority Policy Element\
    \ (as\n   specified in [RSVP-PREEMP]).\n   The [RSVP-AGG] procedures for processing\
    \ of an E2E PathErr message\n   received with an error code of NEW-AGGREGATE-NEEDED\
    \ by the Aggregator\n   are extended correspondingly.  On receipt of such a message\n\
    \   containing a SESSION-OF-INTEREST object, the Aggregator MUST trigger\n   establishment\
    \ of a generic aggregate reservation.  In particular, it\n   MUST start sending\
    \ aggregate Path messages with the GENERIC-AGGREGATE\n   SESSION found in the\
    \ received SESSION-OF-INTEREST object.  When an\n   RSVP Signaled Preemption Priority\
    \ Policy Element is contained in the\n   received E2E PathErr message, the Aggregator\
    \ MUST include this object\n   in the Aggregate Path for the corresponding generic\
    \ aggregate\n   reservation.  When other additional objects are contained in the\n\
    \   received E2E PathErr message and those can be unambiguously\n   interpreted\
    \ as related to the new needed generic aggregate\n   reservation (as opposed to\
    \ related to the E2E reservation), the\n   Aggregator SHOULD include those in\
    \ the Aggregate Path for the\n   corresponding generic aggregate reservation.\
    \  The Aggregator MUST use\n   as the Source Address (i.e., as the Aggregator\
    \ Address in the Sender-\n   Template) for the generic aggregate reservation,\
    \ the address it uses\n   to identify itself as the PHOP (RSVP previous hop) when\
    \ forwarding\n   the E2E Path messages corresponding to the E2E PathErr message.\n\
    \   The Deaggregator follows the same procedures as described in\n   [RSVP-AGG]\
    \ for establishing, maintaining and clearing the aggregate\n   Resv state.  However,\
    \ a Deaggregator behaving according to the\n   present specification MUST use\
    \ the generic aggregate reservations and\n   hence use the GENERIC-AGGREGATE SESSION\
    \ specified earlier in this\n   document.\n   This document also modifies the\
    \ procedures of [RSVP-AGG] related to\n   exchange of E2E Resv messages between\
    \ Deaggregator and Aggregator.\n   The Deaggregator MUST include the new SESSION-OF-INTEREST\
    \ object in\n   the E2E Resv message, in order to indicate to the Aggregator the\n\
    \   generic aggregate session to map a given E2E reservation onto.\n   Again,\
    \ since the GENERIC-AGGREGATE SESSION (included in the SESSION-\n   OF-INTEREST\
    \ object) contains the PHB-ID, the DCLASS object need not\n   be included in the\
    \ E2E Resv message.  The Aggregator MUST interpret\n   the SESSION-OF-INTEREST\
    \ object in the E2E Resv as indicating which\n   generic aggregate reservation\
    \ session the corresponding E2E\n   reservation is mapped onto.  The Aggregator\
    \ MUST not include the\n   SESSION-OF-INTEREST object when sending an E2E Resv\
    \ upstream towards\n   the sender.\n   Based on relevant policy, the Deaggregator\
    \ may decide at some point\n   that an aggregate reservation is no longer needed\
    \ and should be torn\n   down.  In that case, the Deaggregator MUST send an aggregate\n\
    \   ResvTear.  On receipt of the aggregate ResvTear, the Aggregator\n   SHOULD\
    \ send an aggregate PathTear (unless the relevant policy\n   instructs the Aggregator\
    \ to do otherwise or to wait for some time\n   before doing so, for example in\
    \ order to speed up potential re-\n   establishment of the aggregate reservation\
    \ in the future).\n   [RSVP-AGG] describes how the Aggregator and Deaggregator\
    \ can\n   communicate their respective identities to each other.  For example,\n\
    \   the Aggregator includes one of its IP addresses in the RSVP HOP\n   object\
    \ in the E2E Path that is transmitted downstream and received by\n   the Deaggregator\
    \ once it traversed the aggregation region.\n   Similarly, the Deaggregator identifies\
    \ itself to the Aggregator by\n   including one of its IP addresses in various\
    \ fields, including the\n   ERROR SPECIFICATION of the E2E PathErr message (containing\
    \ the NEW-\n   AGGREGATE-NEEDED Error Code) and in the RSVP HOP object of the\
    \ E2E\n   Resv message.  However, [RSVP-AGG] does not discuss which IP\n   addresses\
    \ are to be selected by the Aggregator and Deaggregator for\n   such purposes.\
    \  Because these addresses are intended to identify the\n   Aggregator and Deaggregator\
    \ and not to identify any specific\n   interface on these devices, this document\
    \ RECOMMENDS that the\n   Aggregator and Deaggregator SHOULD use interface-independent\n\
    \   addresses (for example, a loopback address) whenever they communicate\n  \
    \ their respective identities to each other.  This ensures that\n   respective\
    \ identification of the Aggregator and Deaggregator is not\n   impacted by any\
    \ interface state change on these devices.  In turn,\n   this results in more\
    \ stable operations and considerably reduced RSVP\n   signaling in the aggregation\
    \ region.  For example, if interface-\n   independent addresses are used by the\
    \ Aggregator and the\n   Deaggregator, then a failure of an interface on these\
    \ devices may\n   simply result in the rerouting of a given generic aggregate\n\
    \   reservation, but will not result in the generic aggregate reservation\n  \
    \ having to be torn down and another one established.  Moreover, it\n   will not\
    \ result in a change of mapping of E2E reservations on generic\n   aggregate reservations\
    \ (assuming the Aggregator and Deaggregator\n   still have reachability after\
    \ the failure, and the Aggregator and\n   Deaggregator are still on the shortest\
    \ path to the destination).\n   However, when identifying themselves to real RSVP\
    \ neighbors (i.e.,\n   neighbors that are not on the other side of the aggregation\
    \ region),\n   the Aggregator and Deaggregator SHOULD continue using interface-\n\
    \   dependent addresses as per regular [RSVP] procedures.  This applies\n   for\
    \ example when the Aggregator identifies itself downstream as a\n   PHOP for the\
    \ generic aggregate reservation or identifies itself\n   upstream as a NHOP (RSVP\
    \ next hop) for an E2E reservation.  This also\n   applies when the Deaggregator\
    \ identifies itself downstream as a PHOP\n   for the E2E reservation or identifies\
    \ itself upstream as a NHOP for\n   the generic aggregate reservation.  As part\
    \ of the processing of\n   generic aggregate reservations, interior routers (i.e.,\
    \ routers\n   within the aggregation region) SHOULD continue using interface-\n\
    \   dependent addresses as per regular [RSVP] procedures.\n   More generally,\
    \ within the aggregation region (i.e., between\n   Aggregator and Deaggregator)\
    \ the operation of RSVP should be modeled\n   with the notion that E2E reservations\
    \ are mapped to aggregate\n   reservations and are no longer tied to physical\
    \ interfaces (as was\n   the case with regular RSVP).  However, generic aggregate\
    \ reservations\n   (within the aggregation region) as well as E2E reservations\
    \ (outside\n   the aggregation region) retain the model of regular RVSP and remain\n\
    \   tied to physical interfaces.\n   As discussed above, generic aggregate reservations\
    \ may be established\n   edge-to-edge as a result of the establishment of E2E\
    \ reservations\n   (from outside the aggregation region) that are to be aggregated\
    \ over\n   the aggregation region.  However, generic aggregate reservations may\n\
    \   also be used end-to-end by end-systems directly attached to a\n   Diffserv\
    \ domain, such as Public Switched Telephone Network (PSTN)\n   gateways.  In that\
    \ case, the generic aggregate reservations may be\n   established by the end-systems\
    \ in response to application-level\n   triggers such as voice call signaling.\
    \  Alternatively, generic\n   aggregate reservations may also be used edge-to-edge\
    \ to manage\n   bandwidth in a Diffserv cloud even if RSVP is not used end-to-end.\
    \  A\n   simple example of such a usage would be the static configuration of a\n\
    \   generic aggregate reservation for a certain bandwidth for traffic\n   from\
    \ an ingress (Aggregator) router to an egress (Deaggregator)\n   router.\n   In\
    \ this case, the establishment of the generic aggregate reservations\n   is controlled\
    \ by configuration on the Aggregator and on the\n   Deaggregator.  Configuration\
    \ on the Aggregator triggers generation of\n   the aggregate Path message and\
    \ provides sufficient information to the\n   Aggregator to derive the content\
    \ of the GENERIC-AGGREGATE SESSION\n   object.  This would typically include Deaggregator\
    \ IP address, PHB-ID\n   and possibly VDstPort.  Configuration on the Deaggregator\
    \ would\n   instruct the Deaggregator to respond to a received generic aggregate\n\
    \   Path message and would provide sufficient information to the\n   Deaggregator\
    \ to control the reservation.  This may include bandwidth\n   to be reserved by\
    \ the Deaggregator (for a given <Deaggregator,\n   PHB-ID, VDstPort> tuple).\n\
    \   In the absence of E2E microflow reservations, the Aggregator can use\n   a\
    \ variety of policies to set the DSCP of packets passing into the\n   aggregation\
    \ region and how they are mapped onto generic aggregate\n   reservations, thus\
    \ determining whether they gain access to the\n   resources reserved by the aggregate\
    \ reservation.  These policies are\n   a matter of local configuration, as is\
    \ typical for a device at the\n   edge of a Diffserv cloud.\n"
- title: 5.  Example Usage Of Multiple Generic Aggregate Reservations per PHB
  contents:
  - "5.  Example Usage Of Multiple Generic Aggregate Reservations per PHB\n    from\
    \ a Given Aggregator to a Given Deaggregator\n   Let us consider the environment\
    \ depicted in Figure 2 below.  RSVP\n   aggregation is used to support E2E reservations\
    \ between Cloud-1,\n   Cloud-2, and Cloud-3.\n                 I----------I  \
    \             I----------I\n                 I  Cloud-1 I               I  Cloud-2\
    \ I\n                 I----------I               I----------I\n              \
    \         |                      |\n                    Agg-Deag-1------------\
    \ Agg-Deag-2\n                       /                        \\\n           \
    \           /      Aggregation         |\n                     |         Region\
    \            |\n                     |                           |\n         \
    \            |                       ---/\n                      \\          \
    \           /\n                       \\Agg-Deag-3---------/\n               \
    \              |\n                        I----------I\n                     \
    \   I  Cloud-3 I\n                        I----------I\n    Figure 2 : Example\
    \ Usage of Generic Aggregate IP Reservations\n   Let us assume that:\n      o\
    \ The E2E reservations from Cloud-1 to Cloud-3 have a preemption\n        of either\
    \ P1 or P2.\n      o The E2E reservations from Cloud-2 to Cloud-3 have a preemption\n\
    \        of either P1 or P2.\n      o The E2E reservations are only for Voice\
    \ (which needs to be\n        treated in the aggregation region using the EF -Expedited\n\
    \        Forwarding- PHB).\n      o Traffic from the E2E reservations is encapsulated\
    \ in aggregate\n        IP reservations from Aggregator to Deaggregator using\
    \ Generic\n        Routing Encapsulation [GRE] tunneling.\n   Then, the following\
    \ generic aggregate RSVP reservations may be\n   established from Agg-Deag-1 to\
    \ Agg-Deag-3 for aggregation of the end-\n   to-end RSVP reservations:\n   (1)\
    \ A first generic aggregate reservation for aggregation of Voice\n       reservations\
    \ from Cloud-1 to Cloud-3 requiring use of P1:\n          *  GENERIC-AGGREGATE-IP4\
    \ SESSION:\n                  IPv4 DestAddress = Agg-Deag-3\n                \
    \  vDstPort = V1\n                  PHB-ID = EF\n                  Extended VDstPort\
    \ = Agg-Deag-1\n          *  STYLE = FF or SE\n          *  IPv4/GPI FILTER_SPEC:\n\
    \                  IPv4 SrcAddress = Agg-Deag-1\n          *  POLICY_DATA (PREEMPTION_PRI)\
    \ = P1\n   (2) A second generic aggregate reservation for aggregation of Voice\n\
    \       reservations from Cloud-1 to Cloud-3 requiring use of P2:\n          *\
    \  GENERIC-AGGREGATE-IP4 SESSION:\n                  IPv4 DestAddress = Agg-Deag-3\n\
    \                  vDstPort = V2\n                  PHB-ID = EF\n            \
    \      Extended VDstPort = Agg-Deag-1\n          *  STYLE = FF or SE\n       \
    \   *  IPv4/GPI FILTER_SPEC:\n                  IPv4 SrcAddress = Agg-Deag-1\n\
    \          *  POLICY_DATA (PREEMPTION_PRI) = P2\n       where V1 and V2 are arbitrary\
    \ VDstPort values picked by Agg-\n       Deag-3.\n   The following generic aggregate\
    \ RSVP reservations may be established\n   from Agg-Deag-2 to Agg-Deag-3 for aggregation\
    \ of the end-to-end RSVP\n   reservations:\n   (3) A third generic aggregate reservation\
    \ for aggregation of Voice\n       reservations from Cloud-2 to Cloud-3 requiring\
    \ use of P1:\n          *  GENERIC-AGGREGATE-IP4 SESSION:\n                  IPv4\
    \ DestAddress = Agg-Deag-3\n                  vDstPort = V3\n                \
    \  PHB-ID = EF\n                  Extended VDstPort = Agg-Deag-2\n          *\
    \  STYLE = FF or SE\n          *  IPv4/GPI FILTER_SPEC:\n                  IPv4\
    \ SrcAddress = Agg-Deag-2\n          *  POLICY_DATA (PREEMPTION_PRI) = P1\n  \
    \ (4) A fourth generic aggregate reservation for aggregation of Voice\n      \
    \ reservations from Cloud-2 to Cloud-3 requiring use of P2:\n          *  GENERIC-AGGREGATE-IP4\
    \ SESSION:\n                  IPv4 DestAddress = Agg-Deag-3\n                \
    \  vDstPort = V4\n                  PHB-ID = EF\n                  Extended VDstPort\
    \ = Agg-Deag-2\n          *  STYLE = FF or SE\n          *  IPv4/GPI FILTER_SPEC:\n\
    \                  IPv4 SrcAddress = Agg-Deag-2\n          *  POLICY_DATA (PREEMPTION_PRI)\
    \ = P2\n       where V3 and V4 are arbitrary VDstPort values picked by Agg-\n\
    \       Deag-3.\n       Note that V3 and V4 could be equal to V1 and V2 (respectively)\n\
    \       since, in this example, the Extended VDstPort of the GENERIC-\n      \
    \ AGGREGATE Session contains the address of the Aggregator and,\n       thus,\
    \ ensures that different sessions are used from each\n       Aggregator.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   In the environments addressed by this document,\
    \ RSVP messages are\n   used to control resource reservations for generic aggregate\n\
    \   reservations and may be used to control resource reservations for E2E\n  \
    \ reservations being aggregated over the generic aggregate\n   reservations. \
    \ To ensure the integrity of the associated reservation\n   and admission control\
    \ mechanisms, the RSVP Authentication mechanisms\n   defined in [RSVP-CRYPTO1]\
    \ and [RSVP-CRYPTO2] may be used.  These\n   protect RSVP message integrity hop-by-hop\
    \ and provide node\n   authentication as well as replay protection, thereby protecting\n\
    \   against corruption and spoofing of RSVP messages.  These hop-by-hop\n   integrity\
    \ mechanisms can be naturally used to protect the RSVP\n   messages used for generic\
    \ aggregate reservations and to protect RSVP\n   messages used for E2E reservations\
    \ outside the aggregation region.\n   These hop-by-hop RSVP integrity mechanisms\
    \ can also be used to\n   protect RSVP messages used for E2E reservations when\
    \ those transit\n   through the aggregation region.  This is because the Aggregator\
    \ and\n   Deaggregator behave as RSVP neighbors from the viewpoint of the E2E\n\
    \   flows (even if they are not necessarily IP neighbors).\n   [RSVP-CRYPTO1]\
    \ discusses several approaches for key distribution.\n   First, the RSVP Authentication\
    \ shared keys can be distributed\n   manually.  This is the base option and its\
    \ support is mandated for\n   any implementation.  However, in some environments,\
    \ this approach may\n   become a burden if keys frequently change over time. \
    \ Alternatively,\n   a standard key management protocol for secure key distribution\
    \ can be\n   used.  However, existing key distribution protocols may not be\n\
    \   appropriate in all environments because of the complexity or\n   operational\
    \ burden they involve.\n   The use of RSVP Authentication in parts of the network\
    \ where there\n   may be one or more IP hops in between two RSVP neighbors raises\
    \ an\n   additional challenge.  This is because, with some RSVP messages such\n\
    \   as a Path message, an RSVP router does not know the RSVP next hop for\n  \
    \ that message at the time of forwarding it.  In fact, part of the role\n   of\
    \ a Path message is precisely to discover the RSVP next hop (and to\n   dynamically\
    \ re-discover it when it changes, say because of a routing\n   change).  Hence,\
    \ the RSVP router may not know which security\n   association to use when forwarding\
    \ such a message.  This applies in\n   particular to the case where RSVP Authentication\
    \ mechanisms are to be\n   used for protection of RSVP E2E messages (e.g., E2E\
    \ Path) while they\n   transit through an aggregation region and where the dynamic\n\
    \   Deaggregator determination procedure defined in [RSVP-AGG] is used.\n   This\
    \ is because the Aggregator and the Deaggregator behave as RSVP\n   neighbors\
    \ for the E2E reservation, while there may be one or more IP\n   hops in between\
    \ them, and the Aggregator does not know ahead of time\n   which router is going\
    \ to act as the Deaggregator.\n   In that situation, one approach is to share\
    \ the same RSVP\n   Authentication shared key across all the RSVP routers of a\
    \ part of\n   the network where there may be RSVP neighbors with IP hops in\n\
    \   between.  For example, all the Aggregators or Deaggregators of an\n   aggregation\
    \ region could share the same RSVP Authentication key,\n   while different per-neighbor\
    \ keys could be used between any RSVP\n   router pair straddling the boundary\
    \ between two administrative\n   domains that have agreed to use RSVP signaling.\n\
    \   When the same RSVP Authentication shared key is to be shared among\n   multiple\
    \ RSVP neighbors, manual key distribution may be used.  For\n   situations where\
    \ RSVP is being used for multicast flows, it might\n   also be possible, in the\
    \ future, to adapt a multicast key management\n   method (e.g.  from IETF Multicast\
    \ Security Working Group) for key\n   distribution with such multicast RSVP usage.\
    \  For situations where\n   RSVP is being used for unicast flows across domain\
    \ boundaries, it is\n   not currently clear how one might provide automated key\
    \ management.\n   Specification of a specific automated key management technique\
    \ is\n   outside the scope of this document.  Operators should consider these\n\
    \   key management issues when contemplating deployment of this\n   specification.\n\
    \   The RSVP Authentication mechanisms do not provide confidentiality.\n   If\
    \ confidentiality is required, IPsec ESP [IPSEC-ESP] may be used,\n   although\
    \ it imposes the burden of key distribution.  It also faces\n   the additional\
    \ issue discussed for key management above in the case\n   where there can be\
    \ IP hops in between RSVP hops.  In the future,\n   confidentiality solutions\
    \ may be developed for the case where there\n   can be IP hops in between RSVP\
    \ hops, perhaps by adapting\n   confidentiality solutions developed by the IETF\
    \ MSEC Working Group.\n   Such confidentiality solutions for RSVP are outside\
    \ the scope of this\n   document.\n   Protection against traffic analysis is also\
    \ not provided by RSVP\n   Authentication.  Since generic aggregate reservations\
    \ are intended to\n   reserve resources collectively for a whole set of users\
    \ or hosts,\n   malicious snooping of the corresponding RSVP messages could provide\n\
    \   more traffic analysis information than snooping of an E2E\n   reservation.\
    \  When RSVP neighbors are directly attached, mechanisms\n   such as bulk link\
    \ encryption might be used when protection against\n   traffic analysis is required.\
    \  This approach could be used inside the\n   aggregation region for protection\
    \ of the generic aggregate\n   reservations.  It may also be used outside the\
    \ aggregation region for\n   protection of the E2E reservation.  However, it is\
    \ not applicable to\n   the protection of E2E reservations while the corresponding\
    \ E2E RSVP\n   messages transit through the aggregation region.\n   When generic\
    \ aggregate reservations are used for aggregation of E2E\n   reservations, the\
    \ security considerations discussed in [RSVP-AGG]\n   apply and are revisited\
    \ here.\n   First, the loss of an aggregate reservation to an aggressor causes\n\
    \   E2E flows to operate unreserved, and the reservation of a great\n   excess\
    \ of bandwidth may result in a denial of service.  These issues\n   are not confined\
    \ to the extensions defined in the present document:\n   RSVP itself has them.\
    \  However, they may be exacerbated here by the\n   fact that each aggregate reservation\
    \ typically facilitates\n   communication for many sessions.  Hence, compromising\
    \ one such\n   aggregate reservation can result in more damage than compromising\
    \ a\n   typical E2E reservation.  Use of the RSVP Authentication mechanisms\n\
    \   to protect against such attacks has been discussed above.\n   An additional\
    \ security consideration specific to RSVP aggregation\n   involves the modification\
    \ of the IP protocol number in RSVP Path\n   messages that traverse an aggregation\
    \ region.  Malicious modification\n   of the IP protocol number in a Path message\
    \ would cause the message\n   to be ignored by all subsequent RSVP devices on\
    \ its path, preventing\n   reservations from being made.  It could even be possible\
    \ to correct\n   the value before it reached the receiver, making it difficult\
    \ to\n   detect the attack.  Note that, in theory, it might also be possible\n\
    \   for a node to modify the IP protocol number for non-RSVP messages as\n   well,\
    \ thus interfering with the operation of other protocols.  It is\n   RECOMMENDED\
    \ that implementations of this specification only support\n   modification of\
    \ the IP protocol number for RSVP Path, PathTear, and\n   ResvConf messages. \
    \ That is, a general facility for modification of\n   the IP protocol number SHOULD\
    \ NOT be made available.\n   Network operators deploying routers with RSVP aggregation\
    \ capability\n   should be aware of the risks of inappropriate modification of\
    \ the IP\n   protocol number and should take appropriate steps (physical security,\n\
    \   password protection, etc.) to reduce the risk that a router could be\n   configured\
    \ by an attacker to perform malicious modification of the\n   protocol number.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA modified the RSVP parameters registry, 'Class\
    \ Names, Class\n   Numbers, and Class Types' subregistry, and assigned two new\
    \ C-Types\n   under the existing SESSION Class (Class number 1), as described\n\
    \   below:\n   Class\n   Number  Class Name                            Reference\n\
    \   ------  -----------------------               ---------\n        1  SESSION\
    \                               [RFC2205]\n           Class Types or C-Types:\n\
    \            17   GENERIC-AGGREGATE-IP4           [RFC4860]\n            18  \
    \ GENERIC-AGGREGATE-IP6           [RFC4860]\n   IANA also modified the RSVP parameters\
    \ registry, 'Class Names, Class\n   Numbers, and Class Types' subregistry, and\
    \ assigned one new Class\n   Number for the SESSION-OF-INTEREST class and two\
    \ new C-Types for that\n   class, according to the table below:\n   Class\n  \
    \ Number  Class Name                            Reference\n   ------  -----------------------\
    \               ---------\n      132  SESSION-OF-INTEREST                   [RFC4860]\n\
    \           Class Types or C-Types:\n              1  GENERIC-AGG-IP4-SOI    \
    \         [RFC4860]\n              2  GENERIC-AGG-IP6-SOI             [RFC4860]\n\
    \   These allocations are in accordance with [RSVP-MOD].\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   This document borrows heavily from [RSVP-AGG].  It also\
    \ borrows the\n   concepts of Virtual Destination Port and Extended Virtual Destination\n\
    \   Port from [RSVP-IPSEC] and [RSVP-TE], respectively.\n   Also, we thank Fred\
    \ Baker, Roger Levesque, Carol Iturralde, Daniel\n   Voce, Anil Agarwal, Alexander\
    \ Sayenko, and Anca Zamfir for their\n   input into the content of this document.\
    \  Thanks to Steve Kent for\n   insightful comments on usage of RSVP reservations\
    \ in IPsec\n   environments.\n   Ran Atkinson, Fred Baker, Luc Billot, Pascal\
    \ Delprat, and Eric Vyncke\n   provided guidance and suggestions for the security\
    \ considerations\n   section.\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [IPSEC-ESP]    Kent, S., \"IP Encapsulating Security\
    \ Payload (ESP)\",\n                  RFC 4303, December 2005.\n   [KEYWORDS]\
    \     Bradner, S., \"Key words for use in RFCs to Indicate\n                 \
    \ Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [PHB-ID]       Black,\
    \ D., Brim, S., Carpenter, B., and F. Le\n                  Faucheur, \"Per Hop\
    \ Behavior Identification Codes\", RFC\n                  3140, June 2001.\n \
    \  [RSVP]         Braden, R., Ed., Zhang, L., Berson, S., Herzog, S.,\n      \
    \            and S. Jamin, \"Resource ReSerVation Protocol (RSVP) --\n       \
    \           Version 1 Functional Specification\", RFC 2205,\n                \
    \  September 1997.\n   [RSVP-AGG]     Baker, F., Iturralde, C., Le Faucheur, F.,\
    \ and B.\n                  Davie, \"Aggregation of RSVP for IPv4 and IPv6\n \
    \                 Reservations\", RFC 3175, September 2001.\n   [RSVP-CRYPTO1]\
    \ Baker, F., Lindell, B., and M. Talwar, \"RSVP\n                  Cryptographic\
    \ Authentication\", RFC 2747, January 2000.\n   [RSVP-CRYPTO2] Braden, R. and\
    \ L. Zhang, \"RSVP Cryptographic\n                  Authentication -- Updated\
    \ Message Type Value\", RFC\n                  3097, April 2001.\n   [RSVP-IPSEC]\
    \   Berger, L. and T. O'Malley, \"RSVP Extensions for IPSEC\n                \
    \  Data Flows\", RFC 2207, September 1997.\n   [RSVP-MOD]     Kompella, K. and\
    \ J. Lang, \"Procedures for Modifying\n                  the Resource reSerVation\
    \ Protocol (RSVP)\", BCP 96, RFC\n                  3936, October 2004.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [BW-REDUC]     Polk, J. and S. Dhesikan, \"A\
    \ Resource Reservation\n                  Protocol (RSVP) Extension for the Reduction\
    \ of\n                  Bandwidth of a Reservation Flow\", RFC 4495, May 2006.\n\
    \   [GRE]          Farinacci, D., Li, T., Hanks, S., Meyer, D., and P.\n     \
    \             Traina, \"Generic Routing Encapsulation (GRE)\", RFC\n         \
    \         2784, March 2000.\n   [RSVP-PREEMP]  Herzog, S., \"Signaled Preemption\
    \ Priority Policy\n                  Element\", RFC 3181, October 2001.\n   [RSVP-PROCESS]\
    \ Braden, R. and L. Zhang, \"Resource ReSerVation\n                  Protocol\
    \ (RSVP) -- Version 1 Message Processing\n                  Rules\", RFC 2209,\
    \ September 1997.\n   [RSVP-TE]      Awduche, D., Berger, L., Gan, D., Li, T.,\
    \ Srinivasan,\n                  V., and G. Swallow, \"RSVP-TE: Extensions to\
    \ RSVP for\n                  LSP Tunnels\", RFC 3209, December 2001.\n   [RSVP-TUNNEL]\
    \  Terzis, A., Krawczyk, J., Wroclawski, J., and L.\n                  Zhang,\
    \ \"RSVP Operation Over IP Tunnels\", RFC 2746,\n                  January 2000.\n\
    \   [SIG-NESTED]   Baker, F. and P. Bose, \"QoS Signaling in a Nested\n      \
    \            Virtual Private Network\", Work in Progress, February\n         \
    \         2007.\n"
- title: Appendix A.  Example Signaling Flow
  contents:
  - "Appendix A.  Example Signaling Flow\n   This appendix does not provide additional\
    \ specification.  It only\n   illustrates the specification detailed in Section\
    \ 4 through a\n   possible flow of RSVP signaling messages.  This flow assumes\
    \ an\n   environment where E2E reservations are aggregated over generic\n   aggregate\
    \ RSVP reservations.  It illustrates a possible RSVP message\n   flow that could\
    \ take place in the successful establishment of a\n   unicast E2E reservation\
    \ that is the first between a given pair of\n   Aggregator/Deaggregator.\n   \
    \        Aggregator                              Deaggregator\n    E2E Path\n\
    \   ----------->\n                (1)\n                           E2E Path\n \
    \                  ------------------------------->\n                        \
    \                               (2)\n                    E2E PathErr(New-agg-needed,SOI=GAx)\n\
    \                   <----------------------------------\n                    E2E\
    \ PathErr(New-agg-needed,SOI=GAy)\n                   <----------------------------------\n\
    \                (3)\n                         AggPath(Session=GAx)\n        \
    \           ------------------------------->\n                         AggPath(Session=GAy)\n\
    \                   ------------------------------->\n                       \
    \                                (4)\n                                       \
    \                    E2E Path\n                                              \
    \            ----------->\n                                                  \
    \     (5)\n                         AggResv (Session=GAx)\n                  \
    \ <-------------------------------\n                         AggResv (Session=GAy)\n\
    \                   <-------------------------------\n                (6)\n  \
    \                   AggResvConfirm (Session=GAx)\n                   ------------------------------>\n\
    \                     AggResvConfirm (Session=GAy)\n                   ------------------------------>\n\
    \                                                       (7)\n                \
    \                                           E2E Resv\n                       \
    \                                   <---------\n                             \
    \                          (8)\n                           E2E Resv (SOI=GAx)\n\
    \                   <-----------------------------\n                (9)\n    \
    \  E2E Resv\n   <-----------\n   (1) The Aggregator forwards E2E Path into the\
    \ aggregation region\n       after modifying its IP protocol number to RSVP-E2E-IGNORE\n\
    \   (2) Let's assume no Aggregate Path exists.  To be able to accurately\n   \
    \    update the ADSPEC of the E2E Path, the Deaggregator needs the\n       ADSPEC\
    \ of Aggregate Path.  In this example, the Deaggregator\n       elects to instruct\
    \ the Aggregator to set up Aggregate Path states\n       for the two supported\
    \ PHB-IDs.  To do that, the Deaggregator\n       sends two E2E PathErr messages\
    \ with a New-Agg-Needed PathErr\n       code.  Both PathErr messages also contain\
    \ a SESSION-OF-INTEREST\n       (SOI) object.  In the first E2E PathErr, the SOI\
    \ contains a\n       GENERIC-AGGREGATE SESSION (GAx) whose PHB-ID is set to x.\
    \  In the\n       second E2E PathErr, the SOI contains a GENERIC-AGGREGATE SESSION\n\
    \       (GAy) whose PHB-ID is set to y.  In both messages the GENERIC-\n     \
    \  AGGREGATE SESSION contains an interface-independent Deaggregator\n       address\
    \ inside the DestAddress and appropriate values inside the\n       vDstPort and\
    \ Extended vDstPort fields.\n   (3) The Aggregator follows the request from the\
    \ Deaggregator and\n       signals an Aggregate Path for both GENERIC-AGGREGATE\
    \ Sessions\n       (GAx and GAy).\n   (4) The Deaggregator takes into account\
    \ the information contained in\n       the ADSPEC from both Aggregate Paths and\
    \ updates the E2E Path\n       ADSPEC accordingly.  The Deaggregator also modifies\
    \ the E2E Path\n       IP protocol number to RSVP before forwarding it.\n   (5)\
    \ In this example, the Deaggregator elects to immediately proceed\n       with\
    \ establishment of generic aggregate reservations for both\n       PHB-IDs.  In\
    \ effect, the Deaggregator can be seen as anticipating\n       the actual demand\
    \ of E2E reservations so that resources are\n       available on the generic aggregate\
    \ reservations when the E2E Resv\n       requests arrive, in order to speed up\
    \ establishment of E2E\n       reservations.  Assume also that the Deaggregator\
    \ includes the\n       optional Resv Confirm Request in these Aggregate Resv.\n\
    \   (6) The Aggregator merely complies with the received ResvConfirm\n       Request\
    \ and returns the corresponding Aggregate ResvConfirm.\n   (7) The Deaggregator\
    \ has explicit confirmation that both Aggregate\n       Resvs are established.\n\
    \   (8) On receipt of the E2E Resv, the Deaggregator applies the mapping\n   \
    \    policy defined by the network administrator to map the E2E Resv\n       onto\
    \ a generic aggregate reservation.  Let's assume that this\n       policy is such\
    \ that the E2E reservation is to be mapped onto the\n       generic aggregate\
    \ reservation with PHB-ID=x.  The Deaggregator\n       knows that a generic aggregate\
    \ reservation (GAx) is in place for\n       the corresponding PHB-ID since (7).\
    \  The Deaggregator performs\n       admission control of the E2E Resv onto the\
    \ generic aggregate\n       reservation for PHB-ID=x (GAx).  Assuming that the\
    \ generic\n       aggregate reservation for PHB-ID=x (GAx) had been established\n\
    \       with sufficient bandwidth to support the E2E Resv, the\n       Deaggregator\
    \ adjusts its counter, tracking the unused bandwidth\n       on the generic aggregate\
    \ reservation.  Then it forwards the E2E\n       Resv to the Aggregator including\
    \ a SESSION-OF-INTEREST object\n       conveying the selected mapping onto GAx\
    \ (and hence onto\n       PHB-ID=x).\n   (9) The Aggregator records the mapping\
    \ of the E2E Resv onto GAx (and\n       onto PHB-ID=x).  The Aggregator removes\
    \ the SOI object and\n       forwards the E2E Resv towards the sender.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Francois Le Faucheur\n   Cisco Systems, Inc.\n   Village\
    \ d'Entreprise Green Side - Batiment T3\n   400, Avenue de Roumanille\n   06410\
    \ Biot Sophia-Antipolis\n   France\n   EMail: flefauch@cisco.com\n   Bruce Davie\n\
    \   Cisco Systems, Inc.\n   1414 Massachusetts Ave.\n   Boxborough, MA 01719\n\
    \   USA\n   EMail: bds@cisco.com\n   Pratik Bose\n   Lockheed Martin\n   700 North\
    \ Frederick Ave.\n   Gaithersburg, MD 20879\n   USA\n   EMail: pratik.bose@lmco.com\n\
    \   Chris Christou\n   Booz Allen Hamilton\n   13200 Woodland Park Road\n   Herndon,\
    \ VA 20171\n   USA\n   EMail: christou_chris@bah.com\n   Michael Davenport\n \
    \  Booz Allen Hamilton\n   Suite 390\n   5220 Pacific Concourse Drive\n   Los\
    \ Angeles, CA 90045\n   USA\n   EMail: davenport_michael@bah.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
