- title: __initial_text__
  contents:
  - '           Functional Requirements for Uniform Resource Names

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a minimum set of requirements for\
    \ a kind of\n   Internet resource identifier known as Uniform Resource Names (URNs).\n\
    \   URNs fit within a larger Internet information architecture, which in\n   turn\
    \ is composed of, additionally, Uniform Resource Characteristics\n   (URCs), and\
    \ Uniform Resource Locators (URLs).  URNs are used for\n   identification, URCs\
    \ for including meta-information, and URLs for\n   locating or finding resources.\
    \  It is provided as a basis for\n   evaluating standards for URNs.  The discussions\
    \ of this work have\n   occurred on the mailing list uri@bunyip.com and at the\
    \ URI Working\n   Group sessions of the IETF.\n   The requirements described here\
    \ are not necessarily exhaustive; for\n   example, there are several issues dealing\
    \ with support for\n   replication of resources and with security that have been\
    \ discussed;\n   however, the problems are not well enough understood at this\
    \ time to\n   include specific requirements in those areas here.\n   Within the\
    \ general area of distributed object systems design, there\n   are many concepts\
    \ and designs that are discussed under the general\n   topic of \"naming\". The\
    \ URN requirements here are for a facility that\n   addresses a different (and,\
    \ in general, more stringent) set of needs\n   than are frequently the domain\
    \ of general object naming.\n   The requirements for Uniform Resource Names fit\
    \ within the overall\n   architecture of Uniform Resource Identification.  In\
    \ order to build\n   applications in the most general case, the user must be able\
    \ to\n   discover and identify the information, objects, or what we will call\n\
    \   in this architecture resources, on which the application is to\n   operate.\
    \  Beyond this statement, the URI architecture does not define\n   \"resource.\"\
    \  As the network and interconnectivity grow, the ability\n   to make use of remote,\
    \ perhaps independently managed, resources will\n   become more and more important.\
    \  This activity of discovering and\n   utilizing resources can be broken down\
    \ into those activities where\n   one of the primary constraints is human utility\
    \ and facility and\n   those in which human involvement is small or nonexistent.\
    \  Human\n   naming must have such characteristics as being both mnemonic and\n\
    \   short.  Humans, in contrast with computers, are good at heuristic\n   disambiguation\
    \ and wide variability in structure.  In order for\n   computer and network based\
    \ systems to support global naming and\n   access to resources that have perhaps\
    \ an indeterminate lifetime, the\n   flexibility and attendant unreliability of\
    \ human-friendly names\n   should be translated into a naming infrastructure more\
    \ appropriate\n   for the underlying support system.  It is this underlying support\n\
    \   system that the Internet Information Infrastructure Architecture\n   (IIIA)\
    \ is addressing.\n   Within the IIIA, several sorts of information about resources\
    \ are\n   specified and divided among different sorts of structures, along\n \
    \  functional lines.  In order to access information, one must be able\n   to\
    \ discover or identify the particular information desired,\n   determined both\
    \ how and where it might be used or accessed.  The\n   partitioning of the functionality\
    \ in this architecture is into\n   uniform resource names (URN), uniform resource\
    \ characteristics (URC),\n   and uniform resource locators (URL).  A URN identifies\
    \ a resource or\n   unit of information.  It may identify, for example, intellectual\n\
    \   content, a particular presentation of intellectual content, or\n   whatever\
    \ a name assignment authority determines is a distinctly\n   namable entity. \
    \ A URL identifies the location or a container for an\n   instance of a resource\
    \ identified by a URN.  The resource identified\n   by a URN may reside in one\
    \ or more locations at any given time, may\n   move, or may not be available at\
    \ all.  Of course, not all resources\n   will move during their lifetimes, and\
    \ not all resources, although\n   identifiable and identified by a URN will be\
    \ instantiated at any\n   given time.  As such a URL is identifying a place where\
    \ a resource\n   may reside, or a container, as distinct from the resource itself\n\
    \   identified by the URN.  A URC is a set of meta-level information\n   about\
    \ a resource.  Some examples of such meta-information are: owner,\n   encoding,\
    \ access restrictions (perhaps for particular instances),\n   cost.\n   With this\
    \ in mind, we can make the following statement:\n   o  The purpose or function\
    \ of a URN is to provide a globally unique,\n      persistent identifier used\
    \ for recognition, for access to\n      characteristics of the resource or for\
    \ access to the resource\n      itself.\n   More specifically, there are two kinds\
    \ of requirements on URNs:\n   requirements on the functional capabilities of\
    \ URNs, and requirements\n   on the way URNs are encoded in data streams and written\n\
    \   communications.\n"
- title: 2. Requirements for functional capabilities
  contents:
  - "2. Requirements for functional capabilities\n   These are the requirements for\
    \ URNs' functional capabilities:\n   o Global scope: A URN is a name with global\
    \ scope which does not\n     imply a location.  It has the same meaning everywhere.\n\
    \   o Global uniqueness: The same URN will never be assigned to two\n     different\
    \ resources.\n   o Persistence: It is intended that the lifetime of a URN be\n\
    \     permanent.  That is, the URN will be globally unique forever, and\n    \
    \ may well be used as a reference to a resource well beyond the\n     lifetime\
    \ of the resource it identifies or of any naming authority\n     involved in the\
    \ assignment of its name.\n   o Scalability: URNs can be assigned to any resource\
    \ that might\n     conceivably be available on the network, for hundreds of years.\n\
    \   o Legacy support: The scheme must permit the support of existing\n     legacy\
    \ naming systems, insofar as they satisfy the other\n     requirements described\
    \ here. For example, ISBN numbers, ISO\n     public identifiers, and UPC product\
    \ codes seem to satisfy the\n     functional requirements, and allow an embedding\
    \ that satisfies\n     the syntactic requirements described here.\n   o Extensibility:\
    \ Any scheme for URNs must permit future extensions to\n     the scheme.\n   o\
    \ Independence: It is solely the responsibility of a name issuing\n     authority\
    \ to determine the conditions under which it will issue a\n     name.\n   o Resolution:\
    \ A URN will not impede resolution (translation into a\n     URL, q.v.). To be\
    \ more specific, for URNs that have corresponding\n     URLs, there must be some\
    \ feasible mechanism to translate a URN to a\n     URL.\n"
- title: 3. Requirements for URN encoding
  contents:
  - "3. Requirements for URN encoding\n   In addition to requirements on the functional\
    \ elements of the URNs,\n   there are requirements for how they are encoded in\
    \ a string:\n   o Single encoding: The encoding for presentation for people in\
    \ clear\n     text, electronic mail and the like is the same as the encoding in\n\
    \     other transmissions.\n   o Simple comparison: A comparison algorithm for\
    \ URNs is simple,\n     local, and deterministic. That is, there is a single algorithm\
    \ for\n     comparing two URNs that does not require contacting any external\n\
    \     server, is well specified and simple.\n   o Human transcribability: For\
    \ URNs to be easily transcribable by\n     humans without error, they should be\
    \ short, use a minimum of\n     special characters, and be case insensitive. (There\
    \ is no strong\n     requirement that it be easy for a human to generate or interpret\
    \ a\n     URN; explicit human-accessible semantics of the names is not a\n   \
    \  requirement.)  For this reason, URN comparison is insensitive to\n     case,\
    \ and probably white space and some punctuation marks.\n   o Transport friendliness:\
    \ A URN can be transported unmodified in the\n     common Internet protocols,\
    \ such as TCP, SMTP, FTP, Telnet, etc., as\n     well as printed paper.\n   o\
    \ Machine consumption: A URN can be parsed by a computer.\n   o Text recognition:\
    \ The encoding of a URN should enhance the\n     ability to find and parse URNs\
    \ in free text.\n"
- title: 4. Implications
  contents:
  - "4. Implications\n   For a URN specification to be acceptible, it must meet the\
    \ previous\n   requirements.  We draw a set of conclusions, listed below, from\
    \ those\n   requirements; a specification that satisfies the requirments without\n\
    \   meetings these conclusions is deemed acceptable, although unlikely to\n  \
    \ occur.\n   o To satisfy the requirements of uniqueness and scalability, name\n\
    \     assignment is delegated to naming authorities, who may then assign\n   \
    \  names directly or delegate that authority to sub-authorities.\n     Uniqueness\
    \ is guaranteed by requiring each naming authority to\n     guarantee uniqueness.\
    \  The names of the naming authorities\n     themselves are persistent and globally\
    \ unique and top level\n     authorities will be centrally registered.\n   o Naming\
    \ authorities that support scalable naming are encouraged, but\n     not required.\
    \  Scalability implies that a scheme for devising names\n     may be scalable\
    \ both at its terminators as well as within the\n     structure; e.g., in a hierarchical\
    \ naming scheme, a naming\n     authority might have an extensible mechanism for\
    \ adding new\n     sub-registries.\n   o It is strongly recommended that there\
    \ be a mapping between the\n     names generated by each naming authority and\
    \ URLs.  At any specific\n     time there will be zero or more URLs into which\
    \ a particular URN\n     can be mapped.  The naming authority itself need not\
    \ provide the\n     mapping from URN to URL.\n   o For URNs to be transcribable\
    \ and transported in mail, it is\n     necessary to limit the character set usable\
    \ in URNs, although there\n     is not yet consensus on what the limit might be.\n\
    \   In assigning names, a name assignment authority must abide by the\n   preceding\
    \ constraints, as well as defining its own criteria for\n   determining the necessity\
    \ or indication of a new name assignment.\n"
- title: 5. Other considerations
  contents:
  - "5. Other considerations\n   There are three issues about which this document\
    \ has intentionally\n   not taken a position, because it is believed that these\
    \ are issues to\n   be decided by local determination or other services within\
    \ an\n   information infrastructure.  These issues are equality of resources,\n\
    \   reflection of visible semantics in a URN, and name resolution.\n   One of\
    \ the ways in which naming authorities, the assigners of names,\n   may choose\
    \ to make themselves distinctive is by the algorithms by\n   which they distinguish\
    \ or do not distinguish resources from each\n   other.  For example, a publisher\
    \ may choose to distinguish among\n   multiple printings of a book, in which minor\
    \ spelling and\n   typographical mistakes have been made, but a library may prefer\
    \ not\n   to make that distinction.  Furthermore, no one algorithm for testing\n\
    \   for equality is likely to applicable to all sorts of information.\n   For\
    \ example, an algorithm based on testing the equality of two books\n   is unlikely\
    \ to be useful when testing the equality of two\n   spreadsheets.  Thus, although\
    \ this document requires that any\n   particular naming authority use one algorithm\
    \ for determining whether\n   two resources it is comparing are the same or different,\
    \ each naming\n   authority can use a different such algorithm and a naming authority\n\
    \   may restrict the set of resources it chooses to identify in any way\n   at\
    \ all.\n   A naming authority will also have some algorithm for actually\n   choosing\
    \ a name within its namespace.  It may have an algorithm that\n   actually embeds\
    \ in some way some knowledge about the resource.  In\n   turn, that embedding\
    \ may or may not be made public, and may or may\n   not be visible to potential\
    \ clients.  For example, an unreflective\n   URN, simply provides monotonically\
    \ increasing serial numbers for\n   resources.  This conveys nothing other than\
    \ the identity determined\n   by the equality testing algorithm and an ordering\
    \ of name assignment\n   by this server.  It carries no information about the\
    \ resource itself.\n   An MD5 of the resource at some point, in and of itself\
    \ may be\n   reflective of its contents, and, in fact, the naming authority may\
    \ be\n   perfectly willing to publish the fact that it is using MD5, but if\n\
    \   the resource is mutable, it still will be the case that any potential\n  \
    \ client cannot do much with the URN other than check for equality.\n   If, in\
    \ contrast, a URN scheme has much in common with the assignment\n   ISBN numbers,\
    \ the algorithm for assigning them is public and by\n   knowing it, given a particular\
    \ ISBN number, one can learn something\n   more about the resource in question.\
    \  This full range of\n   possibilities is allowed according to this requirements\
    \ document,\n   although it is intended that naming authorities be discouraged\
    \ from\n   making accessible to clients semantic information about the resource,\n\
    \   on the assumption that that may change with time and therefore it is\n   unwise\
    \ to encourage people in any way to depend on that semantics\n   being valid.\n\
    \   Last, this document intentionally does not address the problem of\n   name\
    \ resolution, other than to recommend that for each naming\n   authority a name\
    \ translation mechanism exist.  Naming authorities\n   assign names, while resolvers\
    \ or location services of some sort\n   assist or provide URN to URL mapping.\
    \  There may be one or many such\n   services for the resources named by a particular\
    \ naming authority.\n   It may also be the case that there are generic ones providing\
    \ service\n   for many resources of differing naming authorities.  Some may be\n\
    \   authoritative and others not.  Some may be highly reliable or highly\n   available\
    \ or highly responsive to updates or highly focussed by other\n   criteria such\
    \ as subject matter.  Of course, it is also possible that\n   some naming authorities\
    \ will also act as resolvers for the resources\n   they have named.  This document\
    \ supports and encourages third party\n   and distributed services in this area,\
    \ and therefore intentionally\n   makes no statements about requirements of URNs\
    \ or naming authorities\n   on resolvers.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Applications that require translation from names\
    \ to locations, and\n   the resources themselves may require the resources to\
    \ be\n   authenticated. It seems generally that the information about the\n  \
    \ authentication of either the name or the resource to which it refers\n   should\
    \ be carried by separate information passed along with the URN\n   rather than\
    \ in the URN itself.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Larry Masinter\n   Xerox Palo Alto Research Center\n \
    \  3333 Coyote Hill Road\n   Palo Alto, CA 94304\n   Phone: (415) 812-4365\n \
    \  Fax:   (415) 812-4333\n   EMail: masinter@parc.xerox.com\n   Karen Sollins\n\
    \   MIT Laboratory for Computer Science\n   545 Technology Square\n   Cambridge,\
    \ MA 02139\n   Voice: (617) 253-6006\n   Phone: (617) 253-2673\n   EMail: sollins@lcs.mit.edu\n"
