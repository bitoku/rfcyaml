- contents:
  - '                    Message Tracking Query Protocol

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Customers buying enterprise message systems often ask: Can I track\n
    \  the messages?  Message tracking is the ability to find out the path\n   that
    a particular message has taken through a messaging system and\n   the current
    routing status of that message.  This document describes\n   the Message Tracking
    Query Protocol that is used in conjunction with\n   extensions to the ESMTP protocol
    to provide a complete message\n   tracking solution for the Internet.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   The Message Tracking Models and Requirements document\n
    \  [RFC-MTRK-MODEL] discusses the models that message tracking solutions\n   could
    follow, along with requirements for a message tracking solution\n   that can be
    used with the Internet-wide message infrastructure.  This\n   memo and its companions,
    [RFC-MTRK-ESMTP] and [RFC-MTRK-TSN],\n   describe a complete message tracking
    solution that satisfies those\n   requirements.  The memo [RFC-MTRK-ESMTP] defines
    an extension to the\n   SMTP service that provides the information necessary to
    track\n   messages.  This memo defines a protocol that can be used to query the\n
    \  status of messages that have been transmitted on the Internet via\n   SMTP.
    \ The memo [RFC-MTRK-TSN] describes the message/tracking-status\n   [RFC-MIME]
    media type that is used to report tracking status\n   information.  Using the
    model document's terminology, this solution\n   uses active enabling and active
    requests with both request and\n   chaining referrals.\n"
  title: 1.  Introduction
- contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in BCP 14, RFC 2119\n
    \  [RFC-KEYWORDS].\n   All syntax descriptions use the ABNF specified by [RFC-ABNF].\n
    \  Terminal nodes not defined elsewhere in this document are defined in\n   [RFC-ABNF],
    [RFC-URI], [RFC-MTRK-ESMTP], [RFC-SMTP], or\n   [RFC-SMTPEXT].\n"
  title: 1.1.  Terminology
- contents:
  - "2.  Basic Operation\n   The Message Tracking Query Protocol (MTQP) is similar
    to many other\n   line-oriented Internet protocols, such as [POP3] and [NNTP].\n
    \  Initially, the server host starts the MTQP service by listening on\n   TCP
    port 1038.\n   When an MTQP client wishes to make use of the message tracking\n
    \  service, it establishes a TCP connection with the server host, as\n   recorded
    from the initial message submission or as returned by a\n   previous tracking
    request.  To find the server host, the MTQP client\n   first does an SRV lookup
    for the server host using DNS SRV records,\n   with a service name of \"mtqp\"
    and a protocol name of \"tcp\", as in\n   _mtqp._tcp.smtp3.example.com.  (See
    the \"Usage rules\" section in\n   [RFC-SRV] for details.)  If the SRV records
    do not exist, the MTQP\n   client then does an address record lookup for the server
    host.  When\n   the connection is established, the MTQP server sends a greeting.
    \ The\n   MTQP client and MTQP server then exchange commands and responses\n   (respectively)
    until the connection is closed or aborted.\n"
  title: 2.  Basic Operation
- contents:
  - "2.1.  Tracking Service DNS Considerations\n   Because of the ways server host
    lookups are performed, many different\n   tracking server host configurations
    are supported.\n   A mail system that uses a single mail server host and has the
    MTQP\n   server host on the same server host will most likely have a single MX\n
    \  record pointing at the server host, and if not, will have an address\n   record.
    \ Both mail and MTQP clients will access that host directly.\n   A mail system
    that uses a single mail server host, but wants tracking\n   queries to be performed
    on a different machine, MUST have an SRV MTQP\n   record pointing at that different
    machine.\n   A mail system that uses multihomed mail servers has two choices for\n
    \  providing tracking services: either all mail servers must be running\n   tracking
    servers that are able to retrieve information on all\n   messages, or the tracking
    service must be performed on one (or more)\n   machine(s) that are able to retrieve
    information on all messages.  In\n   the former case, no additional DNS records
    are needed beyond the MX\n   records already in place for the mail system.  In
    the latter case,\n   SRV MTQP records are needed that point at the machine(s)
    that are\n   running the tracking service.  In both cases, note that the tracking\n
    \  service MUST be able to handle the queries for all messages accepted\n   by
    that mail system.\n"
  title: 2.1.  Tracking Service DNS Considerations
- contents:
  - "2.2.  Commands\n   Commands in MTQP consist of a case-insensitive keyword, possibly\n
    \  followed by one or more parameters.  All commands are terminated by a\n   CRLF
    pair.  Keywords and parameters consist of printable ASCII\n   characters.  Keywords
    and parameters are separated by whitespace (one\n   or more space or tab characters).
    \ A command line is limited to 998\n   characters before the CRLF.\n"
  title: 2.2.  Commands
- contents:
  - "2.3.  Responses\n   Responses in MTQP consist of a status indicator that indicates\n
    \  success or failure.  Successful commands may also be followed by\n   additional
    lines of data.  All response lines are terminated by a\n   CRLF pair and are limited
    to 998 characters before the CRLF.  There\n   are several status indicators: \"+OK\"
    indicates success; \"+OK+\"\n   indicates a success followed by additional lines
    of data, a multi-\n   line success response; \"-TEMP\" indicates a temporary failure;
    \"-ERR\"\n   indicates a permanent failure; and \"-BAD\" indicates a protocol
    error\n   (such as for unrecognized commands).\n   A status indicator MAY be followed
    by a series of machine-parsable,\n   case-insensitive response information giving
    more data about the\n   errors.  These are separated from the status indicator
    and each other\n   by a single slash character (\"/\", decimal code 47).  Following
    that,\n   there MAY be white space and a human-readable text message.  The\n   human-readable
    text message is not intended to be presented to the\n   end user, but should be
    appropriate for putting in a log for use in\n   debugging problems.\n   In a multi-line
    success response, each subsequent line is terminated\n   by a CRLF pair and limited
    to 998 characters before the CRLF.  When\n   all lines of the response have been
    sent, a final line is sent\n   consisting of a single period (\".\", decimal code
    046) and a CRLF\n   pair.  If any line of the multi-line response begins with
    a period,\n   the line is \"dot-stuffed\" by prepending the period with a second\n
    \  period.  When examining a multi-line response, the client checks to\n   see
    if the line begins with a period.  If so, and octets other than\n   CRLF follow,
    the first octet of the line (the period) is stripped\n   away.  If so, and if
    CRLF immediately follows the period, then the\n   response from the MTQP server
    is ended and the line containing the\n   \".CRLF\" is not considered part of the
    multi-line response.\n   An MTQP server MUST respond to an unrecognized, unimplemented,
    or\n   syntactically invalid command by responding with a negative -BAD\n   status
    indicator.  A server MUST respond to a command issued when the\n   session is
    in an incorrect state by responding with a negative -ERR\n   status indicator.\n"
  title: 2.3.  Responses
- contents:
  - "2.4.  Firewall Considerations\n   A firewall mail gateway has two choices when
    receiving a tracking\n   query for a host within its domain: it may return a response
    to the\n   query that says the message has been passed on, but no further\n   information
    is available; or it may perform a chaining operation\n   itself, gathering information
    on the message from the mail hosts\n   behind the firewall, and returning to the
    MTQP client the information\n   for each behind-the-firewall hop, or possibly
    just the final hop\n   information, possibly also disguising the names of any
    hosts behind\n   the firewall.  Which option is picked is an administrative decision\n
    \  and is not further mandated by this document.\n   If a server chooses to perform
    a chaining operation itself, it MUST\n   provide a response within 2 minutes,
    and SHOULD return a \"no further\n   information is available\" response if it
    cannot provide an answer at\n   the end of that time limit.\n"
  title: 2.4.  Firewall Considerations
- contents:
  - "2.5.  Optional Timers\n   An MTQP server MAY have an inactivity autologout timer.
    \ Such a timer\n   MUST be of at least 10 minutes in duration.  The receipt of
    any\n   command from the client during that interval should suffice to reset\n
    \  the autologout timer.  An MTQP server MAY limit the number of\n   commands,
    unrecognized commands, or total connection time, or MAY use\n   other criteria,
    to prevent denial of service attacks.\n   An MTQP client MAY have an inactivity
    autologout timer while waiting\n   for a response from the server.  Since an MTQP
    server may be a\n   firewall, and may be chaining information from other servers,
    such a\n   timer MUST be at least 2 minutes in duration.\n"
  title: 2.5.  Optional Timers
- contents:
  - "3.  Initialization and Option Response\n   Once the TCP connection has been opened
    by an MTQP client, the MTQP\n   server issues an initial status response that
    indicates its\n   readiness.  If the status response is positive (+OK or +OK+),
    the\n   client may proceed with other commands.\n   The initial status response
    MUST include the response information\n   \"/MTQP\".  Negative responses MUST
    include a reason code as response\n   information.  The following reason codes
    are defined here;\n   unrecognized reason codes added in the future may be treated
    as\n   equivalent to \"unavailable\".\n      \"/\" \"unavailable\"\n      \"/\"
    \"admin\"\n   The reason code \"/admin\" SHOULD be used when the service is\n
    \  unavailable for administrative reasons.  The reason code\n   \"/unavailable\"
    SHOULD be used when the service is unavailable for\n   other reasons.\n   If the
    server has any options enabled, they are listed as the multi-\n   line response
    of the initial status response, one per line.  An\n   option specification consists
    of an identifier, optionally followed\n   by option-specific parameters.  An option
    specification may be\n   continued onto additional lines by starting the continuation
    lines\n   with white space.  The option identifier is case insensitive.  Option\n
    \  identifiers beginning with the characters \"vnd.\" are reserved for\n   vendor
    use.  (See below.)\n   One option specification is defined here:\n   STARTTLS
    [1*WSP \"required\"]\n   This capability MUST be listed if the optional STARTTLS
    command is\n   enabled on the MQTP server and one or more certificates have been\n
    \  properly installed.\n   It has one optional parameter: the word \"required\"
    (The parameters\n   for STARTTLS are case-insensitive).  If the server requires
    that TLS\n   be used for some of the domains the server handles, the server MUST\n
    \  specify the \"required\" parameter.\n"
  title: 3.  Initialization and Option Response
- contents:
  - "3.1.  Examples\n   Example #1 (no options):\n   S: +OK/MTQP MTQP server ready\n
    \  Example #2 (service temporarily unavailable):\n   S: -TEMP/MTQP/admin Service
    down for admin, call back later\n   Example #3 (service permanently unavailable):\n
    \  S: -ERR/MTQP/unavailable Service down\n   Example #4 (alternative for no options):\n
    \  S: +OK+/MTQP MTQP server ready\n   S: .\n   Example #5 (options available):\n
    \  S: +OK+/MTQP MTQP server ready\n   S: starttls\n   S: vnd.com.example.option2
    with parameters private to example.com\n   S: vnd.com.example.option3 with a very
    long\n   S:  list of parameters\n   S: .\n"
  title: 3.1.  Examples
- contents:
  - "4.  TRACK Command\n   Syntax:\n   track-command = \"TRACK\" 1*WSP unique-envid
    1*WSP mtrk-secret CRLF\n     mtrk-secret = base64\n   Unique-envid is defined
    in [RFC-MTRK-ESMTP].  Mtrk-secret is the\n   secret A described in [RFC-MTRK-ESMTP],
    encoded using base64.\n   When the client issues the TRACK command, and the user
    is validated,\n   the MTQP server retrieves tracking information about an email\n
    \  message.  To validate the user, the value of mtrk-secret is hashed\n   using
    SHA1, as described in [RFC-SHA1].  The hash value is then\n   compared with the
    value passed with the message when it was\n   originally sent.  If the hash values
    match, the user is validated.\n   A successful response MUST be multi-line, consisting
    of a [RFC-MIME]\n   body part.  The MIME body part MUST be of type multipart/related,\n
    \  with subparts of message/tracking-status, as defined in\n   [RFC-MTRK-TSN].
    \ The response contains the tracking information about\n   the email message that
    used the given tracking-id.  A negative\n   response to the TRACK command may
    include these reason codes:\n      \"/\" \"tls-required\"\n      \"/\" \"admin\"\n
    \     \"/\" \"unavailable\"\n      \"/\" \"noinfo\"\n      \"/\" \"insecure\"\n
    \  The reason code \"/tls-required\" SHOULD be used when the server has\n   decided
    to require TLS.  The reason code \"/admin\" SHOULD be used when\n   the server
    has become unavailable, due to administrative reasons,\n   since the connection
    was initialized.  The reason code \"/unavailable\"\n   SHOULD be used when the
    server has become unavailable, for other\n   reasons, since the connection was
    initialized.  The reason code\n   \"/insecure\" is described later.\n   If a message
    has not been seen by the MTQP server, the server MUST\n   choose between two choices:
    it MAY return a positive response with an\n   action field of \"opaque\" in the
    tracking information, or it MAY\n   return a negative response with a reason code
    of \"noinfo\".\n"
  title: 4.  TRACK Command
- contents:
  - "4.1.  Examples\n   In each of the examples below, the unique-envid is\n   \"<12345-20010101@example.com>\",
    the secret A is \"abcdefgh\", and the\n   SHA1 hash B is (in hex) \"734ba8b31975d0dbae4d6e249f4e8da270796c94\".\n
    \  The message came from example.com and the MTQP server is\n   example2.com.\n"
  title: 4.1.  Examples
- contents:
  - 'Example #6      Message Delivered:

    '
  title: 'Example #6      Message Delivered:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon, 1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon, 1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: delivered

    '
  title: 'S: Action: delivered'
- contents:
  - 'S: Status: 2.5.0

    '
  title: 'S: Status: 2.5.0'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - 'Example #7      Message Transferred:

    '
  title: 'Example #7      Message Transferred:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: transferred

    '
  title: 'S: Action: transferred'
- contents:
  - 'S: Remote-MTA: dns; example3.com

    '
  title: 'S: Remote-MTA: dns; example3.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S: Status:2.4.0

    '
  title: 'S: Status:2.4.0'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - 'Example #8 Message Delayed and a Dot-Stuffed Header:

    '
  title: 'Example #8 Message Delayed and a Dot-Stuffed Header:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S: ..Dot-Stuffed-Header: as an example

    '
  title: 'S: ..Dot-Stuffed-Header: as an example'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon, 1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon, 1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: delayed

    '
  title: 'S: Action: delayed'
- contents:
  - 'S: Status: 4.4.1 (No answer from host)

    '
  title: 'S: Status: 4.4.1 (No answer from host)'
- contents:
  - 'S: Remote-MTA: dns; example3.com

    '
  title: 'S: Remote-MTA: dns; example3.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S: Will-Retry-Until: Thu, 4 Jan 2001 15:15:15 -0500

    '
  title: 'S: Will-Retry-Until: Thu, 4 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - 'Example #9 Two Users, One Relayed, One Failed:

    '
  title: 'Example #9 Two Users, One Relayed, One Failed:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: relayed

    '
  title: 'S: Action: relayed'
- contents:
  - 'S: Status: 2.1.9

    '
  title: 'S: Status: 2.1.9'
- contents:
  - 'S: Remote-MTA: dns; example3.com

    '
  title: 'S: Remote-MTA: dns; example3.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user2@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user2@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user2@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user2@example1.com'
- contents:
  - 'S: Action: failed

    '
  title: 'S: Action: failed'
- contents:
  - 'S: Status 5.2.2 (Mailbox full)

    '
  title: 'S: Status 5.2.2 (Mailbox full)'
- contents:
  - 'S: Remote-MTA: dns; example3.com

    '
  title: 'S: Remote-MTA: dns; example3.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - 'Example #10 Firewall:

    '
  title: 'Example #10 Firewall:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: relayed

    '
  title: 'S: Action: relayed'
- contents:
  - 'S: Status: 2.1.9

    '
  title: 'S: Status: 2.1.9'
- contents:
  - 'S: Remote-MTA: dns; smtp.example3.com

    '
  title: 'S: Remote-MTA: dns; smtp.example3.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; smtp.example3.com

    '
  title: 'S: Reporting-MTA: dns; smtp.example3.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user2@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user2@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user4@example3.com

    '
  title: 'S: Final-Recipient: rfc822; user4@example3.com'
- contents:
  - 'S: Action: delivered

    '
  title: 'S: Action: delivered'
- contents:
  - 'S: Status: 2.5.0

    '
  title: 'S: Status: 2.5.0'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - 'Example #11 Firewall, Combining Per-Recipient Blocks:

    '
  title: 'Example #11 Firewall, Combining Per-Recipient Blocks:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: relayed

    '
  title: 'S: Action: relayed'
- contents:
  - 'S: Status: 2.1.9

    '
  title: 'S: Status: 2.1.9'
- contents:
  - 'S: Remote-MTA: dns; smtp.example3.com

    '
  title: 'S: Remote-MTA: dns; smtp.example3.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user2@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user2@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user4@example3.com

    '
  title: 'S: Final-Recipient: rfc822; user4@example3.com'
- contents:
  - 'S: Action: delivered

    '
  title: 'S: Action: delivered'
- contents:
  - 'S: Status:2.5.0

    '
  title: 'S: Status:2.5.0'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - 'Example #12 Firewall, Hiding System Names Behind the Firewall:

    '
  title: 'Example #12 Firewall, Hiding System Names Behind the Firewall:'
- contents:
  - 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK

    '
  title: 'C: TRACK <12345-20010101@example.com> YWJjZGVmZ2gK'
- contents:
  - 'S: +OK+ Tracking information follows

    '
  title: 'S: +OK+ Tracking information follows'
- contents:
  - 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status

    '
  title: 'S: Content-Type: multipart/related; boundary=%%%%; type=tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user1@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user1@example1.com'
- contents:
  - 'S: Action: relayed

    '
  title: 'S: Action: relayed'
- contents:
  - 'S: Status: 2.1.9

    '
  title: 'S: Status: 2.1.9'
- contents:
  - 'S: Remote-MTA: dns; example2.com

    '
  title: 'S: Remote-MTA: dns; example2.com'
- contents:
  - 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500

    '
  title: 'S: Last-Attempt-Date: Mon, 1 Jan 2001 19:15:03 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%

    '
  title: 'S: --%%%%'
- contents:
  - 'S: Content-Type: message/tracking-status

    '
  title: 'S: Content-Type: message/tracking-status'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Envelope-Id: 12345-20010101@example.com

    '
  title: 'S: Original-Envelope-Id: 12345-20010101@example.com'
- contents:
  - 'S: Reporting-MTA: dns; example2.com

    '
  title: 'S: Reporting-MTA: dns; example2.com'
- contents:
  - 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500

    '
  title: 'S: Arrival-Date: Mon,  1 Jan 2001 15:15:15 -0500'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: Original-Recipient: rfc822; user2@example1.com

    '
  title: 'S: Original-Recipient: rfc822; user2@example1.com'
- contents:
  - 'S: Final-Recipient: rfc822; user4@example1.com

    '
  title: 'S: Final-Recipient: rfc822; user4@example1.com'
- contents:
  - 'S: Action: delivered

    '
  title: 'S: Action: delivered'
- contents:
  - 'S: Status: 2.5.0

    '
  title: 'S: Status: 2.5.0'
- contents:
  - 'S:

    '
  title: 'S:'
- contents:
  - 'S: --%%%%--

    '
  title: 'S: --%%%%--'
- contents:
  - 'S: .

    '
  title: 'S: .'
- contents:
  - "5.  COMMENT Command\n   Syntax:\n     comment-command =  \"COMMENT\" opt-text
    CRLF\n            opt-text = [WSP *(VCHAR / WSP)]\n   When the client issues the
    COMMENT command, the MTQP server MUST\n   respond with a successful response (+OK
    or +OK+).  All optional text\n   provided with the COMMENT command are ignored.\n"
  title: 5.  COMMENT Command
- contents:
  - "6.  STARTTLS Command\n   Syntax:\n     starttls-command = \"STARTTLS\" 1*WSP
    domain *WSP CRLF\n               domain = (sub-domain 1*(\".\" sub-domain))\n
    \  TLS [TLS] is a popular mechanism for enhancing TCP communications\n   with
    confidentiality and authentication.  All MTQP servers MUST\n   implement TLS.
    \ However, TLS MAY be disabled by a server\n   administrator, either explicitly
    or by failing to install any\n   certificates for TLS to use.  If an MTQP server
    supports TLS and has\n   one or more certificates available it MUST include \"STARTTLS\"
    in the\n   option specifications list on protocol startup.\n      Note: TLS SHOULD
    be enabled on MQTP servers whenever possible.\n   The parameter MUST be a fully
    qualified domain name (FQDN).  A client\n   MUST specify the hostname it believes
    it is speaking with so that the\n   server may respond with the proper TLS certificate.
    \ This is useful\n   for virtual servers that provide message tracking for multiple\n
    \  domains (i.e., virtual hosting).\n   If the server returns a negative response,
    it MAY use one of the\n   following response codes:\n      \"/\" \"unsupported\"\n
    \     \"/\" \"unavailable\"\n      \"/\" \"tls-in-progress\"\n      \"/\" \"bad-fqdn\"\n
    \  If TLS is not supported, then a response code of \"/unsupported\"\n   SHOULD
    be used.  If TLS is not available for some other reason, then\n   a response code
    of \"/unavailable\" SHOULD be used.  If a TLS session\n   is already in progress,
    then it is a protocol error and \"-BAD\" MUST\n   be returned with a response
    code of \"/tls-in-progress\".  If there is\n   a mismatch between the supplied
    FQDN and the FQDN found in the\n   dNSName field of the subjectAltName extension
    of the server's\n   certificate [RFC-X509], then it is a protocol error and \"-BAD\"
    MUST\n   be returned with a response code of \"/bad-fqdn\".\n   After receiving
    a positive response to a STARTTLS command, the client\n   MUST start the TLS negotiation
    before giving any other MTQP commands.\n   If the MTQP client is using pipelining
    (see below), the STARTTLS\n   command must be the last command in a group.\n"
  title: 6.  STARTTLS Command
- contents:
  - "6.1.  Processing After the STARTTLS Command\n   If the TLS handshake fails, the
    server SHOULD abort the connection.\n   After the TLS handshake has been completed,
    both parties MUST\n   immediately decide whether or not to continue based on the\n
    \  authentication and confidentiality achieved.  The MTQP client and\n   server
    may decide to move ahead even if the TLS negotiation ended\n   with no authentication
    and/or no confidentiality because most MTQP\n   services are performed with no
    authentication and no confidentiality,\n   but some MTQP clients or servers may
    want to continue only if a\n   particular level of authentication and/or confidentiality
    was\n   achieved.\n   If the MTQP client decides that the level of authentication
    or\n   confidentiality is not high enough for it to continue, it SHOULD\n   issue
    an MTQP QUIT command immediately after the TLS negotiation is\n   complete.\n
    \  If the MTQP server decides that the level of authentication or\n   confidentiality
    is not high enough for it to continue, it MAY abort\n   the connection.  If it
    decides that the level of authentication or\n   confidentiality is not high enough
    for it to continue, and it does\n   not abort the connection, it SHOULD reply
    to every MTQP command from\n   the client (other than a QUIT command) with a negative
    \"-ERR\"\n   response and a response code of \"/insecure\".\n"
  title: 6.1.  Processing After the STARTTLS Command
- contents:
  - "6.2.  Result of the STARTTLS Command\n   Upon completion of the TLS handshake,
    the MTQP protocol is reset to\n   the initial state (the state in MTQP after a
    server starts up).  The\n   server MUST discard any knowledge obtained from the
    client prior to\n   the TLS negotiation itself.  The client MUST discard any knowledge\n
    \  obtained from the server, such as the list of MTQP options, which was\n   not
    obtained from the TLS negotiation itself.\n   At the end of the TLS handshake,
    the server acts as if the connection\n   had been initiated and responds with
    an initial status response and,\n   optionally, a list of server options.  The
    list of MTQP server\n   options received after the TLS handshake MUST be different
    than the\n   list returned before the TLS handshake.  In particular, a server
    MUST\n   NOT return the STARTTLS option in the list of server options after a\n
    \  TLS handshake has been completed.\n   Both the client and the server MUST know
    if there is a TLS session\n   active.  A client MUST NOT attempt to start a TLS
    session if a TLS\n   session is already active.\n"
  title: 6.2.  Result of the STARTTLS Command
- contents:
  - "7.  QUIT Command\n      Syntax:\n        quit-command = \"QUIT\" CRLF\n   When
    the client issues the QUIT command, the MTQP session terminates.\n   The QUIT
    command has no parameters.  The server MUST respond with a\n   successful response.
    \ The client MAY close the session from its end\n   immediately after issuing
    this command (if the client is on an\n   operating system where this does not
    cause problems).\n"
  title: 7.  QUIT Command
- contents:
  - "8.  Pipelining\n   The MTQP client may elect to transmit groups of MTQP commands
    in\n   batches without waiting for a response to each individual command.\n   The
    MTQP server MUST process the commands in the order received.\n   Specific commands
    may place further constraints on pipelining.  For\n   example, STARTTLS must be
    the last command in a batch of MTQP\n   commands.\n"
  title: 8.  Pipelining
- contents:
  - "8.1.  Examples\n   The following two examples are identical:\n   Example #13
    :\n   C: TRACK <tracking-id> YWJjZGVmZ2gK\n   S: +OK+ Tracking information follows\n
    \  S:\n   S: ... tracking details #1      go here ...\n   S: .\n   C: TRACK <tracking-id-2>
    QUJDREVGR0gK\n   S: +OK+ Tracking information follows\n   S:\n   S: ... tracking
    details #2      go here ...\n   S: .\n   Example #14 :\n   C: TRACK <tracking-id>
    YWJjZGVmZ2gK\n   C: TRACK <tracking-id-2> QUJDREVGR0gK\n   S: +OK+ Tracking information
    follows\n   S:\n   S: ... tracking details #1      go here ...\n   S: .\n   S:
    +OK+ Tracking information follows\n   S:\n   S: ... tracking details #2      go
    here ...\n   S: .\n"
  title: 8.1.  Examples
- contents:
  - '9.  The MTQP URI Scheme

    '
  title: 9.  The MTQP URI Scheme
- contents:
  - "9.1.  Intended usage\n   The MTQP URI scheme is used to designate MTQP servers
    on Internet\n   hosts accessible using the MTQP protocol.  It performs an MTQP
    query\n   and returns tracking status information.\n"
  title: 9.1.  Intended usage
- contents:
  - "9.2.  URI Scheme Name\n   The name of the URI scheme is \"mtqp\".\n"
  title: 9.2.  URI Scheme Name
- contents:
  - "9.3.  URI Scheme Syntax\n   An MTQP URI takes one of the following forms:\n      mtqp://<mserver>/track/<unique-envid>/<mtrk-secret>\n
    \     mtqp://<mserver>:<port>/track/<unique-envid>/<mtrk-secret>\n   The first
    form is used to refer to an MTQP server on the standard\n   port, while the second
    form specifies a non-standard port.  Both of\n   these forms specify that the
    TRACK command is to be issued using the\n   given tracking id (unique-envid) and
    authorization secret (mtrk-\n   secret).  The path element \"/track/\" MUST BE
    treated case\n   insensitively, but the unique-envid and mtrk-secret MUST NOT
    be.\n"
  title: 9.3.  URI Scheme Syntax
- contents:
  - "9.3.1.  Formal Syntax\n   This is an ABNF description of the MTQP URI.\n   mtqp-uri
    = \"mtqp://\" authority \"/track/\" unique-envid \"/\" mtrk-secret\n"
  title: 9.3.1.  Formal Syntax
- contents:
  - "9.4.  Encoding Rules\n   The encoding of unique-envid is discussed in [RFC-MTRK-ESMTP].\n
    \  Mtrk-secret is required to be base64 encoded.  If the \"/\", \"?\" and\n   \"%\"
    octets appear in unique-envid or mtrk-secret, they are further\n   required to
    be represented by a \"%\" followed by two hexadecimal\n   characters.  (The two
    characters give the hexadecimal representation\n   of that octet).\n"
  title: 9.4.  Encoding Rules
- contents:
  - "10.  IANA Considerations\n   System port number 1038 has been assigned to the
    Message Tracking\n   Query Protocol by the Internet Assigned Numbers Authority
    (IANA).\n   The service name \"MTQP\" has been registered with the IANA.\n   The
    IANA has also registered the URI registration template found in\n   Appendix A
    in accordance with [BCP35].\n   This document requests that IANA maintain one
    new registry: MTQP\n   options.  The registry's purpose is to register options
    to this\n   protocol.  Options whose names do not begin with \"vnd.\" MUST be\n
    \  defined in a standards track or IESG approved experimental RFC.  New\n   MTQP
    options MUST include the following information as part of their\n   definition:\n
    \     option identifier\n      option parameters\n      added commands\n      standard
    commands affected\n      specification reference\n      discussion\n   One MTQP
    option is defined in this document, with the following\n   registration definition:\n
    \     option identifier: STARTTLS\n      option parameters: none\n      added
    commands: STARTTLS\n      standard commands affected: none\n      specification
    reference: RFC 3887\n      discussion: see RFC 3887\n   Additional vendor-specific
    options for this protocol have names that\n   begin with \"vnd.\".  After the
    \"vnd.\" would appear the reversed domain\n   name of the vendor, another dot
    \".\", and a name for the option\n   itself.  For example, \"vnd.com.example.extinfo\"
    might represent a\n   vendor-specific extension providing extended information
    by the owner\n   of the \"example.com\" domain.  These names MAY be registered
    with\n   IANA.\n"
  title: 10.  IANA Considerations
- contents:
  - "11.  Security Considerations\n   If the originator of a message were to delegate
    his or her tracking\n   request to a third party, this would be vulnerable to
    snooping over\n   unencrypted sessions.  The user can decide on a message-by-message\n
    \  basis if this risk is acceptable.\n   The security of tracking information
    is dependent on the randomness\n   of the secret chosen for each message and the
    level of exposure of\n   that secret.  If different secrets are used for each
    message, then\n   the maximum exposure from tracking any message will be that
    single\n   message for the time that the tracking information is kept on any\n
    \  MTQP server.  If this level of exposure is too much, TLS may be used\n   to
    reduce the exposure further.\n   It should be noted that message tracking is not
    an end-to-end\n   mechanism.  Thus, if an MTQP client/server pair decide to use
    TLS\n   confidentiality, they are not securing tracking queries with any\n   prior
    or successive MTQP servers.\n   Both the MTQP client and server must check the
    result of the TLS\n   negotiation to see whether acceptable authentication or\n
    \  confidentiality was achieved.  Ignoring this step completely\n   invalidates
    using TLS for security.  The decision about whether\n   acceptable authentication
    or confidentiality was achieved is made\n   locally, is implementation-dependent,
    and is beyond the scope of this\n   document.\n   The MTQP client and server should
    note carefully the result of the\n   TLS negotiation.  If the negotiation results
    in no confidentiality,\n   or if it results in confidentiality using algorithms
    or key lengths\n   that are deemed not strong enough, or if the authentication
    is not\n   good enough for either party, the client may choose to end the MTQP\n
    \  session with an immediate QUIT command, or the server may choose to\n   not
    accept any more MTQP commands.\n   A man-in-the-middle attack can be launched
    by deleting the \"STARTTLS\"\n   option response from the server.  This would
    cause the client not to\n   try to start a TLS session.  An MTQP client can protect
    against this\n   attack by recording the fact that a particular MTQP server offers
    TLS\n   during one session and generating an alarm if it does not appear in\n
    \  an option response for a later session.\n   Similarly, the identity of the
    server as expressed in the server's\n   certificate should be cached, and an alarm
    generated if they do not\n   match in a later session.\n   If TLS is not used,
    a tracking request is vulnerable to replay\n   attacks, such that a snoop can
    later replay the same handshake again\n   to potentially gain more information
    about a message's status.\n   Before the TLS handshake has begun, any protocol
    interactions are\n   performed in the clear and may be modified by an active attacker.\n
    \  For this reason, clients and servers MUST discard any knowledge\n   obtained
    prior to the start of the TLS handshake upon completion of\n   the TLS handshake.\n
    \  If a client/server pair successfully performs a TLS handshake and the\n   server
    does chaining referrals, then the server SHOULD attempt to\n   negotiate TLS at
    the same (or better) security level at the next hop.\n   In a hop-by-hop scenario,
    STARTTLS is a request for \"best effort\"\n   security and should be treated as
    such.\n   SASL is not used because authentication is per message rather than\n
    \  per user.\n"
  title: 11.  Security Considerations
- contents:
  - "12.  Protocol Syntax\n   This is a collected ABNF description of the MTQP protocol.\n"
  title: 12.  Protocol Syntax
- contents:
  - 'mtqp-uri = "mtqp://" authority "/track/" unique-envid "/" mtrk-secret

    '
  title: mtqp-uri = "mtqp://" authority "/track/" unique-envid "/" mtrk-secret
- contents:
  - 'conversation = command-response *(client-command command-response)

    '
  title: conversation = command-response *(client-command command-response)
- contents:
  - '; client side

    '
  title: ; client side
- contents:
  - 'client-command = track-command / starttls-command / quit-command

    '
  title: client-command = track-command / starttls-command / quit-command
- contents:
  - '/comment-command

    '
  title: /comment-command
- contents:
  - 'track-command = "TRACK" 1*WSP unique-envid 1*WSP mtrk-secret CRLF

    '
  title: track-command = "TRACK" 1*WSP unique-envid 1*WSP mtrk-secret CRLF
- contents:
  - 'mtrk-secret = base64

    '
  title: mtrk-secret = base64
- contents:
  - 'starttls-command = "STARTTLS" 1*WSP domain *WSP CRLF

    '
  title: starttls-command = "STARTTLS" 1*WSP domain *WSP CRLF
- contents:
  - 'domain = (sub-domain 1*("." sub-domain))

    '
  title: domain = (sub-domain 1*("." sub-domain))
- contents:
  - 'quit-command = "QUIT" CRLF

    '
  title: quit-command = "QUIT" CRLF
- contents:
  - 'comment-command = "COMMENT" opt-text CRLF

    '
  title: comment-command = "COMMENT" opt-text CRLF
- contents:
  - '; server side

    '
  title: ; server side
- contents:
  - 'command-response = success-response / temp-response / error-response /

    '
  title: command-response = success-response / temp-response / error-response /
- contents:
  - 'bad-response

    '
  title: bad-response
- contents:
  - 'temp-response = "-TEMP" response-info opt-text CRLF

    '
  title: temp-response = "-TEMP" response-info opt-text CRLF
- contents:
  - 'opt-text = [WSP *(VCHAR / WSP)]

    '
  title: opt-text = [WSP *(VCHAR / WSP)]
- contents:
  - 'error-response = "-ERR" response-info opt-text CRLF

    '
  title: error-response = "-ERR" response-info opt-text CRLF
- contents:
  - 'bad-response = "-BAD" response-info opt-text CRLF

    '
  title: bad-response = "-BAD" response-info opt-text CRLF
- contents:
  - 'success-response = single-line-success / multi-line-success

    '
  title: success-response = single-line-success / multi-line-success
- contents:
  - 'single-line-success = "+OK" response-info opt-text CRLF

    '
  title: single-line-success = "+OK" response-info opt-text CRLF
- contents:
  - "multi-line-success = \"+OK+\" response-info opt-text CRLF\n                               *dataline
    dotcrlf\n"
  title: multi-line-success = "+OK+" response-info opt-text CRLF
- contents:
  - 'dataline = *998OCTET CRLF

    '
  title: dataline = *998OCTET CRLF
- contents:
  - 'dotcrlf = "." CRLF

    '
  title: dotcrlf = "." CRLF
- contents:
  - 'NAMECHAR = ALPHA / DIGIT / "-" / "_"

    '
  title: NAMECHAR = ALPHA / DIGIT / "-" / "_"
- contents:
  - 'response-info = *(      "/" ( "admin" / "unavailable" / "unsupported"

    '
  title: response-info = *(      "/" ( "admin" / "unavailable" / "unsupported"
- contents:
  - '/ "tls-in-progress" / "insecure" / "tls-required" / 1*NAMECHAR ) )

    '
  title: / "tls-in-progress" / "insecure" / "tls-required" / 1*NAMECHAR ) )
- contents:
  - "13.  Acknowledgements\n   The description of STARTTLS is based on [RFC-SMTP-TLS].\n"
  title: 13.  Acknowledgements
- contents:
  - '14.  References

    '
  title: 14.  References
- contents:
  - "14.1.  Normative References\n   [RFC-MIME]         Freed, N. and N. Borenstein,
    \"Multipurpose\n                      Internet Mail Extensions (MIME) Part One:
    Format\n                      of Internet Message Bodies\", RFC 2045, November\n
    \                     1996.\n   [RFC-ABNF]         Crocker, D., Ed. and P. Overell,
    \"Augmented BNF\n                      for Syntax Specifications: ABNF\", RFC
    2234,\n                      November 1997.\n   [RFC-SRV]          Gulbrandsen,
    A., Vixie, P., and L. Esibov, \"A DNS\n                      RR for specifying
    the location of services (DNS\n                      SRV)\", RFC 2782, February
    2000.\n   [RFC-SMTP]         Klensin, J., \"Simple Mail Transfer Protocol\", RFC\n
    \                     2821, April 2001.\n   [RFC-SMTPEXT]      Myers, J., \"SMTP
    Service Extension for\n                      Authentication\", RFC 2554, March
    1999.\n   [RFC-MTRK-ESMTP]   Allman, E. and T. Hansen, \"SMTP Service Extension\n
    \                     for Message Tracking\", RFC 3885, September 2004.\n   [RFC-MTRK-MODEL]
    \  Hansen, T., \"Message Tracking Models and\n                      Requirements\",
    RFC 3885, September 2004.\n   [RFC-MTRK-TSN]     Allman, E., \"The Message/Tracking-Status
    MIME\n                      Extension\", RFC 3886, September 2004.\n   [RFC-URI]
    \         Berners-Lee, T., Fielding, R. and L. Masinter,\n                      \"Uniform
    Resource Identifiers (URI): Generic\n                      Syntax\", RFC 2396,
    August 1998.\n   [TLS]              Dierks, T. and C. Allen, \"The TLS Protocol
    Version\n                      1.0\", RFC 2246, January 1999.\n"
  title: 14.1.  Normative References
- contents:
  - "14.2.  Informational References\n   [BCP35]            Petke, R. and I. King,
    \"Registration Procedures\n                      for URL Scheme Names\", BCP 35,
    RFC 2717, November\n                      1999.\n   [RFC-SHA1]         Eastlake,
    D. and P. Jones, \"US Secure Hash\n                      Algorithm 1 (SHA1)\",
    RFC 3174, September 2001.\n   [RFC-KEYWORDS]     Bradner, S., \"Key words for
    use in RFCs to\n                      Indicate Requirement Levels\", BCP 14, RFC
    2119,\n                      March 1997.\n   [RFC-SMTP-TLS]     Hoffman, P., \"SMTP
    Service Extension for Secure\n                      SMTP over Transport Layer
    Security\", RFC 3207,\n                      February 2002.\n   [RFC-X509]         Housley,
    R., Polk, W., Ford, W. and D. Solo,\n                      \"Internet X.509 Public
    Key Infrastructure\n                      Certificate and Certificate Revocation
    List (CRL)\n                      Profile\", RFC 3280, April 2002.\n   [POP3]
    \            Myers, J. and M. Rose, \"Post Office Protocol -\n                      Version
    3\", STD 53, RFC 1939, May 1996.\n   [NNTP]             Kantor, B. and P. Lapsley,
    \"Network News Transfer\n                      Protocol\", RFC 977, February 1986.\n"
  title: 14.2.  Informational References
- contents:
  - "Appendix A. MTQP URI Registration Template\n   Scheme name: mtqp\n   Scheme syntax:
    see section 9.1\n   Character encoding considerations: see section 9.4\n   Intended
    usage: see section 9.3\n   Applications and/or protocols which use this scheme:
    MTQP\n   Interoperability considerations: as specified for MTQP\n   Security considerations:
    see section 11.0\n   Relevant publications: [RFC-MTRK-ESMTP], [RFC-MTRK-MODEL],\n
    \  [RFC-MTRK-TSN]\n   Contact: MSGTRK Working Group\n   Author/Change Controller:
    IESG\n"
  title: Appendix A. MTQP URI Registration Template
- contents:
  - "Author's Address\n   Tony Hansen\n   AT&T Laboratories\n   Middletown, NJ 07748\n
    \  USA\n   Phone: +1.732.420.8934\n   EMail: tony+msgtrk@maillennium.att.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n   REPRESENTS OR IS
    SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING TASK
    FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED
    TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the IETF's procedures with respect
    to rights in IETF Documents can\n   be found in BCP 78 and BCP 79.\n   Copies
    of IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use of\n   such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
