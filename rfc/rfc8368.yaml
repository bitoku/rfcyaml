- title: __initial_text__
  contents:
  - "      Using an Autonomic Control Plane for Stable Connectivity of\n       Network\
    \ Operations, Administration, and Maintenance (OAM)\n"
- title: Abstract
  contents:
  - "Abstract\n   Operations, Administration, and Maintenance (OAM), as per BCP 161,\n\
    \   for data networks is often subject to the problem of circular\n   dependencies\
    \ when relying on connectivity provided by the network to\n   be managed for the\
    \ OAM purposes.\n   Provisioning while bringing up devices and networks tends\
    \ to be more\n   difficult to automate than service provisioning later on.  Changes\
    \ in\n   core network functions impacting reachability cannot be automated\n \
    \  because of ongoing connectivity requirements for the OAM equipment\n   itself,\
    \ and widely used OAM protocols are not secure enough to be\n   carried across\
    \ the network without security concerns.\n   This document describes how to integrate\
    \ OAM processes with an\n   autonomic control plane in order to provide stable\
    \ and secure\n   connectivity for those OAM processes.  This connectivity is not\n\
    \   subject to the aforementioned circular dependencies.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It has been approved for\
    \ publication by the Internet\n   Engineering Steering Group (IESG).  Not all\
    \ documents approved by the\n   IESG are candidates for any level of Internet\
    \ Standard; see Section 2\n   of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8368.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Self-Dependent OAM Connectivity . . . . . . . . .\
    \ . . . .   3\n     1.2.  Data Communication Networks (DCNs)  . . . . . . . .\
    \ . . .   3\n     1.3.  Leveraging a Generalized Autonomic Control Plane  . .\
    \ . .   4\n   2.  GACP Requirements . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n   3.  Solutions . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   6\n     3.1.  Stable Connectivity for Centralized OAM . . . . . . . . .  \
    \ 6\n       3.1.1.  Simple Connectivity for Non-GACP-Capable\n               NMS\
    \ Hosts . . . . . . . . . . . . . . . . . . . . . .   7\n       3.1.2.  Challenges\
    \ and Limitations of Simple Connectivity . .   8\n       3.1.3.  Simultaneous\
    \ GACP and Data-Plane Connectivity . . . .   9\n       3.1.4.  IPv4-Only NMS Hosts\
    \ . . . . . . . . . . . . . . . . .  10\n       3.1.5.  Path Selection Policies\
    \ . . . . . . . . . . . . . . .  12\n       3.1.6.  Autonomic NOC Device/Applications\
    \ . . . . . . . . . .  16\n       3.1.7.  Encryption of Data-Plane Connections\
    \  . . . . . . . .  16\n       3.1.8.  Long-Term Direction of the Solution . .\
    \ . . . . . . .  17\n     3.2.  Stable Connectivity for Distributed       Network/OAM\
    \ . .  18\n   4.  Architectural Considerations  . . . . . . . . . . . . . . .\
    \ .  18\n     4.1.  No IPv4 for GACP  . . . . . . . . . . . . . . . . . . . .\
    \  18\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  19\n\
    \   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  20\n  \
    \ 7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  21\n    \
    \ 7.1.  Normative References  . . . . . . . . . . . . . . . . . .  21\n     7.2.\
    \  Informative References  . . . . . . . . . . . . . . . . .  22\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  23\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  24\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Self-Dependent OAM Connectivity
  contents:
  - "1.1.  Self-Dependent OAM Connectivity\n   Operations, Administration, and Maintenance\
    \ (OAM), as per BCP 161\n   [RFC6291], for data networks is often subject to the\
    \ problem of\n   circular dependencies when relying on the connectivity service\n\
    \   provided by the network to be managed.  OAM can easily but\n   unintentionally\
    \ break the connectivity required for its own\n   operations.  Avoiding these\
    \ problems can lead to complexity in OAM.\n   This document describes this problem\
    \ and how to use an autonomic\n   control plane to solve it without further OAM\
    \ complexity.\n   The ability to perform OAM on a network device requires first\
    \ the\n   execution of OAM necessary to create network connectivity to that\n\
    \   device in all intervening devices.  This typically leads to\n   sequential\
    \ \"expanding ring configuration\" from a Network Operations\n   Center (NOC).\
    \  It also leads to tight dependencies between\n   provisioning tools and security\
    \ enrollment of devices.  Any process\n   that wants to enroll multiple devices\
    \ along a newly deployed network\n   topology needs to tightly interlock with\
    \ the provisioning process\n   that creates connectivity before the enrollment\
    \ can move on to the\n   next device.\n   Likewise, when performing change operations\
    \ on a network, it is\n   necessary to understand at any step of that process\
    \ that there is no\n   interruption of connectivity that could lead to removal\
    \ of\n   connectivity to remote devices.  This includes especially change\n  \
    \ provisioning of routing, forwarding, security, and addressing\n   policies in\
    \ the network that often occur through mergers and\n   acquisitions, the introduction\
    \ of IPv6, or other major overhauls of\n   the infrastructure design.  Examples\
    \ include change of an IGP or\n   area, change from Provider Aggregatable (PA)\
    \ to Provider Independent\n   (PI) addressing, or systematic topology changes\
    \ (such as Layer 2 to\n   Layer 3 changes).\n   All these circular dependencies\
    \ make OAM complex and potentially\n   fragile.  When automation is being used\
    \ (for example, through\n   provisioning systems), this complexity extends into\
    \ that automation\n   software.\n"
- title: 1.2.  Data Communication Networks (DCNs)
  contents:
  - "1.2.  Data Communication Networks (DCNs)\n   In the late 1990s and early 2000,\
    \ IP networks became the method of\n   choice to build separate OAM networks for\
    \ the communications\n   infrastructure within Network Providers.  This concept\
    \ was\n   standardized in ITU-T G.7712/Y.1703 [ITUT_G7712] and called \"Data\n\
    \   Communications Networks\" (DCNs).  These were (and still are)\n   physically\
    \ separate IP or IP/MPLS networks that provide access to OAM\n   interfaces of\
    \ all equipment that had to be managed, from Public\n   Switched Telephone Network\
    \ (PSTN) switches over optical equipment to\n   nowadays Ethernet and IP/MPLS\
    \ production network equipment.\n   Such DCNs provide stable connectivity not\
    \ subject to the\n   aforementioned problems because they are a separate network\
    \ entirely,\n   so change configuration of the production IP network is done via\
    \ the\n   DCN but never affects the DCN configuration.  Of course, this\n   approach\
    \ comes at a cost of buying and operating a separate network,\n   and this cost\
    \ is not feasible for many providers -- most notably,\n   smaller providers, most\
    \ enterprises, and typical Internet of Things\n   (IoT) networks.\n"
- title: 1.3.  Leveraging a Generalized Autonomic Control Plane
  contents:
  - "1.3.  Leveraging a Generalized Autonomic Control Plane\n   One of the goals of\
    \ the IETF ANIMA (Autonomic Networking Integrated\n   Model and Approach) Working\
    \ Group is the specification of a secure\n   and automatically built in-band management\
    \ plane that provides stable\n   connectivity similar to a DCN, but without having\
    \ to build a separate\n   DCN.  It is clear that such an \"in-band\" approach\
    \ can never fully\n   achieve the same level of separation, but the goal is to\
    \ get as close\n   to it as possible.\n   This document discusses how such an\
    \ in-band management plane can be\n   used to support the DCN-like OAM use case,\
    \ how to leverage its stable\n   connectivity, and what the options are for deploying\
    \ it incrementally\n   in the short and long term.\n   The ANIMA Working Group's\
    \ evolving specification [ACP] calls this in-\n   band management plane the \"\
    Autonomic Control Plane\" (ACP).  The\n   discussions in this document are not\
    \ dependent on the specification\n   of that ACP, but only on a set of high-level\
    \ constraints listed\n   below, which were decided upon early during the work\
    \ on the ACP.\n   Except when being specific about details of the ACP, this document\n\
    \   uses the term \"Generalized ACP\" (GACP) and is applicable to any\n   designs\
    \ that meet the high-level constraints -- for example, the\n   variations of the\
    \ ACP protocol choices.\n"
- title: 2.  GACP Requirements
  contents:
  - "2.  GACP Requirements\n   The high-level constraints of a GACP assumed and discussed\
    \ in this\n   document are as follows:\n   VRF isolation:  The GACP is a virtual\
    \ network (Virtual Routing and\n      Forwarding (VRF)) across network devices;\
    \ its routing and\n      forwarding are separate from other routing and forwarding\
    \ in the\n      network devices.  Non-GACP routing/forwarding is called the \"\
    data\n      plane\".\n   IPv6-only addressing:  The GACP provides only IPv6 reachability.\
    \  It\n      uses Unique Local Addresses (ULAs) [RFC4193] that are routed in a\n\
    \      location-independent fashion, for example, through a subnet prefix\n  \
    \    for each network device.  Therefore, automatic addressing in the\n      GACP\
    \ is simple and stable: it does not require allocation by\n      address registries,\
    \ addresses are identifiers, they do not change\n      when devices move, and\
    \ no engineering of the address space to the\n      network topology is necessary.\n\
    \   NOC connectivity:  NOC equipment (controlling OAM operations) either\n   \
    \   has access to the GACP directly or has an IP subnet connection to\n      a\
    \ GACP edge device.\n   Closed Group Security:  GACP devices have cryptographic\
    \ credentials\n      to mutually authenticate each other as members of a GACP.\
    \  Traffic\n      across the GACP is authenticated with these credentials and\
    \ then\n      encrypted.\n   GACP connect (interface):  The only traffic permitted\
    \ in and out of\n      the GACP that is not authenticated by GACP cryptographic\n\
    \      credentials is through explicit configuration for the traffic\n      from/to\
    \ the aforementioned non-GACP NOC equipment with subnet\n      connections to\
    \ a GACP edge device (as a transition method).\n   The GACP must be built to be\
    \ autonomic and its function must not be\n   able to be disrupted by operator\
    \ or automated configuration/\n   provisioning actions (i.e., Network Management\
    \ System (NMS) or\n   Software-Defined Networking (SDN)).  Those actions are allowed\
    \ to\n   impact only the data plane.  This document does not cover those\n   aspects;\
    \ instead, it focuses on the impact of the above constraints:\n   IPv6 only, dual\
    \ connectivity, and security.\n"
- title: 3.  Solutions
  contents:
  - '3.  Solutions

    '
- title: 3.1.  Stable Connectivity for Centralized OAM
  contents:
  - "3.1.  Stable Connectivity for Centralized OAM\n   The ANI is the Autonomic Networking\
    \ Infrastructure consisting of\n   secure zero-touch bootstrap (BRSKI [BRSKI]),\
    \ the GeneRic Autonomic\n   Signaling Protocol (GRASP [GRASP]), and Autonomic\
    \ Control Plane (ACP\n   [ACP]).  Refer to the reference model [REF_MODEL] for\
    \ an overview of\n   the ANI and how its components interact and [RFC7575] for\
    \ concepts\n   and terminology of ANI and autonomic networks.\n   This section\
    \ describes stable connectivity for centralized OAM via\n   the GACP, for example,\
    \ via the ACP with or without a complete ANI,\n   starting with the option that\
    \ we expect to be the most easy to deploy\n   in the short term.  It then describes\
    \ limitations and challenges of\n   that approach and the corresponding solutions\
    \ and workarounds; it\n   finishes with the preferred target option of autonomic\
    \ NOC devices in\n   Section 3.1.6.\n   This order was chosen because it helps\
    \ to explain how simple initial\n   use of a GACP can be and how difficult workarounds\
    \ can become (and\n   therefore what to avoid).  Also, one very promising long-term\n\
    \   solution is exactly like the most easy short-term solution, only\n   virtualized\
    \ and automated.\n   In the most common case, OAM will be performed by one or\
    \ more\n   applications running on a variety of centralized NOC systems that\n\
    \   communicate with network devices.  This document describes approaches\n  \
    \ to leverage a GACP for stable connectivity, from simple to complex,\n   depending\
    \ on the capabilities and limitations of the equipment used.\n   Three stages\
    \ can be considered:\n   o  There are simple options described in Sections 3.1.1\
    \ through 3.1.3\n      that we consider to be good starting points to operationalize\
    \ the\n      use of a GACP for stable connectivity today.  These options\n   \
    \   require only network and OAM/NOC device configuration.\n   o  The are workarounds\
    \ to connect a GACP to non-IPv6-capable NOC\n      devices through the use of\
    \ IPv4/IPv6 NAT (Network Address\n      Translation) as described in Section 3.1.4.\
    \  These workarounds are\n      not recommended; however, if non-IPv6-capable\
    \ NOC devices need to\n      be used longer term, then the workarounds are the\
    \ only way to\n      connect them to a GACP.\n   o  Options for the near to long\
    \ term can provide all the desired\n      operational, zero-touch, and security\
    \ benefits of an autonomic\n      network, but a range of details for this still\
    \ have to be worked\n      out, and development work on NOC/OAM equipment is necessary.\n\
    \      These options are discussed in Sections 3.1.5 through 3.1.8.\n"
- title: 3.1.1.  Simple Connectivity for Non-GACP-Capable NMS Hosts
  contents:
  - "3.1.1.  Simple Connectivity for Non-GACP-Capable NMS Hosts\n   In the most simple\
    \ candidate deployment case, the GACP extends all\n   the way into the NOC via\
    \ one or more GACP edge devices.  See also\n   Section 6.1 of [ACP].  These devices\
    \ \"leak\" the (otherwise encrypted)\n   GACP natively to NMS hosts.  They act\
    \ as the default routers to those\n   NMS hosts and provide them with IPv6 connectivity\
    \ into the GACP.  NMS\n   hosts with this setup need to support IPv6 (e.g., see\
    \ [RFC6434]) but\n   require no other modifications to leverage the GACP.\n  \
    \ Note that even though the GACP only uses IPv6, it can of course\n   support\
    \ OAM for any type of network deployment as long as the network\n   devices support\
    \ the GACP: The data plane can be IPv4 only, dual\n   stack, or IPv6 only.  It\
    \ is always separate from the GACP; therefore,\n   there is no dependency between\
    \ the GACP and the IP version(s) used in\n   the data plane.\n   This setup is\
    \ sufficient for troubleshooting mechanisms such as SSH\n   into network devices,\
    \ NMS that performs SNMP read operations for\n   status checking, software downloads\
    \ onto autonomic devices,\n   provisioning of devices via NETCONF, and so on.\
    \  In conjunction with\n   otherwise unmodified OAM via separate NMS hosts, this\
    \ setup can\n   provide a good subset of the stable connectivity goals.  The\n\
    \   limitations of this approach are discussed in the next section.\n   Because\
    \ the GACP provides \"only\" for IPv6 connectivity, and because\n   addressing\
    \ provided by the GACP does not include any topological\n   addressing structure\
    \ that a NOC often relies on to recognize where\n   devices are on the network,\
    \ it is likely highly desirable to set up\n   the Domain Name System (DNS; see\
    \ [RFC1034]) so that the GACP IPv6\n   addresses of autonomic devices are known\
    \ via domain names that\n   include the desired structure.  For example, if DNS\
    \ in the network\n   were set up with names for network devices as\n   devicename.noc.example.com,\
    \ and if the well-known structure of the\n   data-plane IPv4 address space were\
    \ used by operators to infer the\n   region where a device is located, then the\
    \ GACP address of that\n   device could be set up as devicename_<region>.acp.noc.example.com,\n\
    \   and devicename.acp.noc.example.com could be a CNAME to\n   devicename_<region>.acp.noc.example.com.\
    \  Note that many networks\n   already use names for network equipment where topological\
    \ information\n   is included, even without a GACP.\n"
- title: 3.1.2.  Challenges and Limitations of Simple Connectivity
  contents:
  - "3.1.2.  Challenges and Limitations of Simple Connectivity\n   This simple connectivity\
    \ of non-autonomic NMS hosts suffers from a\n   range of challenges (that is,\
    \ operators may not be able to do it this\n   way) and limitations (that is, operators\
    \ cannot achieve desired goals\n   with this setup).  The following list summarizes\
    \ these challenges and\n   limitations, and the following sections describe additional\n\
    \   mechanisms to overcome them.\n   Note that these challenges and limitations\
    \ exist because GACP is\n   primarily designed to support distributed Autonomic\
    \ Service Agent\n   (ASA), a piece of autonomic software, in the most lightweight\n\
    \   fashion.  GACP is not required to support the additional mechanisms\n   needed\
    \ for centralized NOC systems.  It is this document that\n   describes additional\
    \ (short-term) workarounds and (long-term)\n   extensions.\n   1.  (Limitation)\
    \ NMS hosts cannot directly probe whether the desired\n       so-called \"data-plane\"\
    \ network connectivity works because they do\n       not directly have access\
    \ to it.  This problem is similar to\n       probing connectivity for other services\
    \ (such as VPN services)\n       that they do not have direct access to, so the\
    \ NOC may already\n       employ appropriate mechanisms to deal with this issue\
    \ (probing\n       proxies).  See Section 3.1.3 for candidate solutions.\n   2.\
    \  (Challenge) NMS hosts need to support IPv6, and this often is\n       still\
    \ not possible in enterprise networks.  See Section 3.1.4 for\n       some workarounds.\n\
    \   3.  (Limitation) Performance of the GACP may be limited versus normal\n  \
    \     \"data-plane\" connectivity.  The setup of the GACP will often\n       support\
    \ only forwarding that is not hardware accelerated.\n       Running a large amount\
    \ of traffic through the GACP, especially\n       for tasks where it is not necessary,\
    \ will reduce its performance\n       and effectiveness for those operations where\
    \ it is necessary or\n       highly desirable.  See Section 3.1.5 for candidate\
    \ solutions.\n   4.  (Limitation) Security of the GACP is reduced by exposing\
    \ the GACP\n       natively (and unencrypted) in a subnet in the NOC where the\
    \ NOC\n       devices are attached to it.  See Section 3.1.7 for candidate\n \
    \      solutions.\n   These four problems can be tackled independently of each\
    \ other by\n   solution improvements.  Combining some of these improvements together\n\
    \   can lead towards a candidate long-term solution.\n"
- title: 3.1.3.  Simultaneous GACP and Data-Plane Connectivity
  contents:
  - "3.1.3.  Simultaneous GACP and Data-Plane Connectivity\n   Simultaneous connectivity\
    \ to both the GACP and data plane can be\n   achieved in a variety of ways.  If\
    \ the data plane is IPv4 only, then\n   any method for dual-stack attachment of\
    \ the NOC device/application\n   will suffice: IPv6 connectivity from the NOC\
    \ provides access via the\n   GACP; IPv4 provides access via the data plane. \
    \ If, as explained\n   above in the simple case, an autonomic device supports\
    \ native\n   attachment to the GACP, and the existing NOC setup is IPv4 only,\
    \ then\n   it could be sufficient to attach the GACP device(s) as the IPv6\n \
    \  default router to the NOC subnet and keep the existing IPv4 default\n   router\
    \ setup unchanged.\n   If the data plane of the network is also supporting IPv6,\
    \ then the\n   most compatible setup for NOC devices is to have two IPv6 interfaces\n\
    \   -- one virtual (e.g., via IEEE 802.1Q [IEEE.802.1Q]) or physical\n   interface\
    \ connecting to a data-plane subnet, and another connecting\n   into a GACP connect\
    \ subnet.  See Section 8.1 of [ACP] for more\n   details.  That document also\
    \ specifies how a NOC device can receive\n   autoconfigured addressing and routes\
    \ towards the ACP connect subnet\n   if it supports default address selection\
    \ as specified in [RFC6724]\n   and default router preferences as specified in\
    \ [RFC4191].\n   Configuring a second interface on a NOC host may be impossible\
    \ or\n   seen as undesired complexity.  In that case, the GACP edge device\n \
    \  needs to provide support for a \"combined ACP and data-plane\n   interface\"\
    \ as described in Section 8.1 of [ACP].  This setup may not\n   work with autoconfiguration\
    \ and all NOC host network stacks due to\n   limitations in those network stacks.\
    \  They need to be able to perform\n   Rule 5.5 of [RFC6724] regarding source\
    \ address selection, including\n   caching of next-hop information.\n   For security\
    \ reasons, it is not considered appropriate to connect a\n   non-GACP router to\
    \ a GACP connect interface.  The reason is that the\n   GACP is a secured network\
    \ domain, and all NOC devices connecting via\n   GACP connect interfaces are also\
    \ part of that secure domain.  The\n   main difference is that the physical links\
    \ between the GACP edge\n   device and the NOC devices are not authenticated or\
    \ encrypted and,\n   therefore, need to be physically secured.  If the secure\
    \ GACP was\n   extendable via untrusted routers, then it would be a lot more\n\
    \   difficult to verify the secure domain assertion.  Therefore, the GACP\n  \
    \ edge devices are not supposed to redistribute routes from non-GACP\n   routers\
    \ into the GACP.\n"
- title: 3.1.4.  IPv4-Only NMS Hosts
  contents:
  - "3.1.4.  IPv4-Only NMS Hosts\n   One architectural expectation for the GACP as\
    \ described in\n   Section 1.3 is that all devices that want to use the GACP (including\n\
    \   NMS hosts) support IPv6.  Note that this expectation does not imply\n   any\
    \ requirements for the data plane, especially it does not imply\n   that IPv6\
    \ must be supported in it.  The data plane could be IPv4\n   only, IPv6 only,\
    \ dual stack, or it may not need to have any IP host\n   stack on the network\
    \ devices.\n   The implication of this architectural decision is the potential\
    \ need\n   for short-term workarounds when the operational practices in a\n  \
    \ network do not yet meet these target expectations.  This section\n   explains\
    \ when and why these workarounds may be operationally\n   necessary and describes\
    \ them.  However, the long-term goal is to\n   upgrade all NMS hosts to native\
    \ IPv6, so the workarounds described in\n   this section should not be considered\
    \ permanent.\n   Most network equipment today supports IPv6, but it is very far\
    \ from\n   being ubiquitously supported in NOC backend solutions (hardware or\n\
    \   software) or in the product space for enterprises.  Even when it is\n   supported,\
    \ there are often additional limitations or issues using it\n   in a dual-stack\
    \ setup, or the operator mandates (for simplicity)\n   single stack for all operations.\
    \  For these reasons, an IPv4-only\n   management plane is still required and\
    \ common practice in many\n   enterprises.  Without the desire to leverage the\
    \ GACP, this required\n   and common practice is not a problem for those enterprises\
    \ even when\n   they run dual stack in the network.  We discuss these workarounds\n\
    \   here because it is a short-term deployment challenge specific to the\n   operations\
    \ of a GACP.\n   To connect IPv4-only management-plane devices/applications with\
    \ a\n   GACP, some form of IP/ICMP translation of packets between IPv4 and\n \
    \  IPv6 is necessary.  The basic mechanisms for this are in [RFC7915],\n   which\
    \ describes the Stateless IP/ICMP Translation Algorithm (SIIT).\n   There are\
    \ multiple solutions using this mechanism.  To understand the\n   possible solutions,\
    \ we consider the requirements:\n   1.  NMS hosts need to be able to initiate\
    \ connections to any GACP\n       device for management purposes.  Examples include\
    \ provisioning\n       via NETCONF, SNMP poll operations, or just diagnostics\
    \ via SSH\n       connections from operators.  Every GACP device/function that\n\
    \       needs to be reachable from NMS hosts needs to have a separate\n      \
    \ IPv4 address.\n   2.  GACP devices need to be able to initiate connections to\
    \ NMS\n       hosts, for example, to initiate NTP or RADIUS/Diameter\n       connections,\
    \ send syslog or SNMP trap, or initiate NETCONF Call\n       Home connections\
    \ after bootstrap.  Every NMS host needs to have a\n       separate IPv6 address\
    \ reachable from the GACP.  When a connection\n       from a GACP device is made\
    \ to an NMS host, the IPv4 source\n       address of the connection (as seen by\
    \ the NMS host) must be\n       unique per GACP device and must be the same address\
    \ as in (1) to\n       maintain addressing simplicity similar to a native IPv4\n\
    \       deployment.  For example in syslog, the source IP address of a\n     \
    \  logging device is used to identify it, and if the device shows\n       problems,\
    \ an operator might want to SSH into the device to\n       diagnose it.\n   Because\
    \ of these requirements, the necessary and sufficient set of\n   solutions are\
    \ those that provide 1:1 mapping of IPv6 GACP addresses\n   into IPv4 space and\
    \ 1:1 mapping of IPv4 NMS host space into IPv6 (for\n   use in the GACP).  This\
    \ means that SIIT-based solutions are\n   sufficient and preferred.\n   Note that\
    \ GACP devices may use multiple IPv6 addresses in the GACP.\n   For example, Section\
    \ 6.10 of [ACP] defines multiple useful addressing\n   sub-schemes supporting\
    \ this option.  All those addresses may then\n   need to be reachable through\
    \ IPv6/IPv4 address translation.\n   The need to allocate for every GACP device\
    \ one or multiple IPv4\n   addresses should not be a problem if -- as we assume\
    \ -- the NMS hosts\n   can use private IPv4 address space ([RFC1918]).  Nevertheless,\
    \ even\n   with private IPv4 address space, it is important that the GACP IPv6\n\
    \   addresses can be mapped efficiently into IPv4 address space without\n   too\
    \ much waste.\n   Currently, the most flexible mapping scheme to achieve this\
    \ is\n   [RFC7757] because it allows configured IPv4 <-> IPv6 prefix mapping.\n\
    \   Assume the GACP uses the ACP Zone Addressing Sub-Scheme and there are\n  \
    \ 3 registrars.  In the ACP Zone Addressing Sub-Scheme, for each\n   registrar,\
    \ there is a constant /112 prefix for which an Explicit\n   Address Mapping (EAM),\
    \ as defined in RFC 7757, to a /16 prefix can be\n   configured (e.g., in the\
    \ private IPv4 address space described in\n   [RFC1918]).  Within the registrar's\
    \ /112 prefix, Device-Numbers for\n   devices are sequentially assigned: with\
    \ the V bit (Virtualization\n   bit) effectively two numbers are assigned per\
    \ GACP device.  This also\n   means that if IPv4 address space is even more constrained,\
    \ and it is\n   known that a registrar will never need the full /15 extent of\
    \ Device-\n   Numbers, then a prefix longer than a /112 can be configured into\
    \ the\n   EAM in order to use less IPv4 space.\n   When using the ACP Vlong Addressing\
    \ Sub-Scheme, it is unlikely that\n   one wants or needs to translate the full\
    \ /8 or /16 of addressing\n   space per GACP device into IPv4.  In this case,\
    \ the EAM rules of\n   dropping trailing bits can be used to map only N bits of\
    \ the V bits\n   into IPv4.  However, this does imply that only addresses that\
    \ differ\n   in those high-order N V bits can be distinguished on the IPv4 side.\n\
    \   Likewise, the IPv4 address space used for NMS hosts can easily be\n   mapped\
    \ into an address prefix assigned to a GACP connect interface.\n   A full specification\
    \ of a solution to perform SIIT in conjunction\n   with GACP connect following\
    \ the considerations below is outside the\n   scope of this document.\n   To be\
    \ in compliance with security expectations, SIIT has to happen on\n   the GACP\
    \ edge device itself so that GACP security considerations can\n   be taken into\
    \ account.  For example, IPv4-only NMS hosts can be dealt\n   with exactly like\
    \ IPv6 hosts connected to a GACP connect interface.\n   Note that prior solutions\
    \ such as NAT64 ([RFC6146]) may equally be\n   useable to translate between GACP\
    \ IPv6 address space and NMS hosts'\n   IPv4 address space.  As a workaround,\
    \ this can also be done on non-\n   GACP Edge Devices connected to a GACP connect\
    \ interface.  The details\n   vary depending on implementation because the options\
    \ to configure\n   address mappings vary widely.  Outside of EAM, there are no\n\
    \   standardized solutions that allow for mapping of prefixes, so it will\n  \
    \ most likely be necessary to explicitly map every individual (/128)\n   GACP\
    \ device address to an IPv4 address.  Such an approach should use\n   automation/scripting\
    \ where these address translation entries are\n   created dynamically whenever\
    \ a GACP device is enrolled or first\n   connected to the GACP network.\n   The\
    \ NAT methods described here are not specific to a GACP.  Instead,\n   they are\
    \ similar to what would be necessary when some parts of a\n   network only support\
    \ IPv6, but the NOC equipment does not support\n   IPv6.  Whether it is more appropriate\
    \ to wait until the NOC equipment\n   supports IPv6 or to use NAT beforehand depends\
    \ in large part on how\n   long the former will take and how easy the latter will\
    \ be when using\n   products that support the NAT options described to operationalize\
    \ the\n   above recommendations.\n"
- title: 3.1.5.  Path Selection Policies
  contents:
  - "3.1.5.  Path Selection Policies\n   As mentioned above, a GACP is not expected\
    \ to have high performance\n   because its primary goal is connectivity and security.\
    \  For existing\n   network device platforms, this often means that it is a lot\
    \ more\n   effort to implement that additional connectivity with hardware\n  \
    \ acceleration than without -- especially because of the desire to\n   support\
    \ full encryption across the GACP to achieve the desired\n   security.\n   Some\
    \ of these issues may go away in the future with further adoption\n   of a GACP\
    \ and network device designs that better tend to the needs of\n   a separate OAM\
    \ plane, but it is wise to plan for long-term designs of\n   the solution that\
    \ do NOT depend on high performance of the GACP.\n   This is the opposite of the\
    \ expectations that future NMS hosts will\n   have IPv6 and that any considerations\
    \ for IPv4/NAT in this solution\n   are temporary.\n   To solve the expected performance\
    \ limitations of the GACP, we do\n   expect to have the above-described dual connectivity\
    \ via both GACP\n   and data plane between NOC application devices and devices\
    \ with GACP.\n   The GACP connectivity is expected to always be there (as soon\
    \ as a\n   device is enrolled), but the data-plane connectivity is only present\n\
    \   under normal operations and will not be present during, e.g., early\n   stages\
    \ of device bootstrap, failures, provisioning mistakes, or\n   network configuration\
    \ changes.\n   The desired policy is therefore as follows: In the absence of further\n\
    \   security considerations (see below), traffic between NMS hosts and\n   GACP\
    \ devices should prefer data-plane connectivity and resort only to\n   using the\
    \ GACP when necessary.  The exception is an operation known\n   to be covered\
    \ by the use cases where the GACP is necessary, so that\n   it makes no sense\
    \ to try using the data plane.  An example is an SSH\n   connection from the NOC\
    \ to a network device to troubleshoot network\n   connectivity.  This could easily\
    \ always rely on the GACP.  Likewise,\n   if an NMS host is known to transmit\
    \ large amounts of data, and it\n   uses the GACP, then its data rate needs to\
    \ be controlled so that it\n   will not overload the GACP path.  Typical examples\
    \ of this are\n   software downloads.\n   There is a wide range of methods to\
    \ build up these policies.  We\n   describe a few below.\n   Ideally, a NOC system\
    \ would learn and keep track of all addresses of\n   a device (GACP and the various\
    \ data-plane addresses).  Every action\n   of the NOC system would indicate via\
    \ a \"path-policy\" what type of\n   connection it needs (e.g., only data-plane,\
    \ GACP only, default to\n   data plane, fallback to GACP, etc.).  A connection\
    \ policy manager\n   would then build connection to the target using the right\n\
    \   address(es).  Shorter term, a common practice is to identify\n   different\
    \ paths to a device via different names (e.g., loopback vs.\n   interface addresses).\
    \  This approach can be expanded to GACP uses,\n   whether it uses the DNS or\
    \ names local to the NOC system.  Below, we\n   describe example schemes using\
    \ DNS.\n   DNS can be used to set up names for the same network devices but with\n\
    \   different addresses assigned:\n   o  One name (name.noc.example.com) with\
    \ only the data-plane\n      address(es) (IPv4 and/or IPv6) to be used for probing\
    \ connectivity\n      or performing routine software downloads that may stall/fail\
    \ when\n      there are connectivity issues.\n   o  One name (name-acp.noc.example.com)\
    \ with only the GACP reachable\n      address of the device for troubleshooting\
    \ and probing/discovery\n      that is desired to always only use the GACP.\n\
    \   o  One name (name-both.noc.example.com) with data-plane and GACP\n      addresses.\n\
    \   Traffic policing and/or shaping at the GACP edge in the NOC can be\n   used\
    \ to throttle applications such as software download into the\n   GACP.\n   Using\
    \ different names that map to different addresses (or subsets of\n   addresses)\
    \ can be difficult to set up and maintain, especially\n   because data-plane addresses\
    \ may change due to reconfiguration or\n   relocation of devices.  The name-based\
    \ approach alone cannot strongly\n   support policies for existing applications\
    \ and long-lived flows to\n   automatically switch between the ACP and data plane\
    \ in the face of\n   data-plane failure and recovery.  A solution would be host\
    \ transport\n   stacks on GACP nodes that support the following requirements:\n\
    \   1.  Only the GACP addresses of the responder must be required by the\n   \
    \    initiator for the initial setup of a connection/flow across the\n       GACP.\n\
    \   2.  Responder and Initiator must be able to exchange their data-plane\n  \
    \     addresses through the GACP, and then -- if needed by policy --\n       build\
    \ an additional flow across the data plane.\n   3.  For unmodified application,\
    \ the following policies should be\n       configurable on at least a per-application\
    \ basis for its TCP\n       connections with GACP peers:\n       Fallback (to\
    \ GACP):  An additional data-plane flow is built and\n          used exclusively\
    \ to send data whenever the data plane is\n          operational.  When the additional\
    \ flow cannot be built during\n          connection setup or when it fails later,\
    \ traffic is sent\n          across the GACP flow.  This could be a default policy\
    \ for most\n          OAM applications using the GACP.\n       Suspend/Fail: \
    \ Like the Fallback policy, except that traffic will\n          not use the GACP\
    \ flow; instead, it will be suspended until a\n          data-plane flow is operational\
    \ or until a policy-configurable\n          timeout indicates a connection failure\
    \ to the application.\n          This policy would be appropriate for large-volume\
    \ background\n          or scavenger-class OAM applications such as firmware downloads\n\
    \          or telemetry/diagnostic uploads -- applications that would\n      \
    \    otherwise easily overrun performance-limited GACP\n          implementations.\n\
    \       GACP (only):  No additional data-plane flow is built, traffic is\n   \
    \       only sent via the GACP flow.  This can just be a TCP\n          connection.\
    \  This policy would be most appropriate for OAM\n          operations known to\
    \ change the data plane in a way that could\n          impact connectivity through\
    \ it (at least temporarily).\n   4.  In the presence of responders or initiators\
    \ not supporting these\n       host stack functions, the Fallback and GACP policies\
    \ must result\n       in a TCP connection across the GACP.  For Suspend/Fail,\
    \ presence\n       of TCP-only peers should result in failure during connection\n\
    \       setup.\n   5.  In case of Fallback and Suspend/Fail, a failed data-plane\n\
    \       connection should automatically be rebuilt when the data plane\n     \
    \  recovers, including when the data-plane address of one side or\n       both\
    \ sides may have changed -- for example, because of\n       reconfiguration or\
    \ device repositioning.\n   6.  Additional data-plane flows created by these host\
    \ transport stack\n       functions must be end-to-end authenticated by these\
    \ host\n       transport stack functions with the GACP domain credentials and\n\
    \       encrypted.  This maintains the expectation that connections from\n   \
    \    GACP addresses to GACP addresses are authenticated and encrypted.\n     \
    \  This may be skipped if the application already provides for end-\n       to-end\
    \ encryption.\n   7.  For enhanced applications, the host stack may support application\n\
    \       control to select the policy on a per-connection basis, or even\n    \
    \   more explicit control for building of the flows and which flow\n       should\
    \ pass traffic.\n   Protocols like Multipath TCP (MPTCP; see [RFC6824]) and the\
    \ Stream\n   Control Transmission Protocol (SCTP; see [RFC4960]) can already\n\
    \   support part of these requirements.  MPTCP, for example, supports\n   signaling\
    \ of addresses in a TCP backward-compatible fashion,\n   establishing additional\
    \ flows (called subflows in MPTCP), and having\n   primary and fallback subflows\
    \ via MP_PRIO signaling.  The details of\n   how MPTCP, SCTP, and/or other approaches\
    \ (potentially with extensions\n   and/or (shim) layers on top of them) can best\
    \ provide a complete\n   solution for the above requirements need further work\
    \ and are outside\n   the scope of this document.\n"
- title: 3.1.6.  Autonomic NOC Device/Applications
  contents:
  - "3.1.6.  Autonomic NOC Device/Applications\n   Setting up connectivity between\
    \ the NOC and autonomic devices when\n   the NOC device itself is non-autonomic\
    \ is a security issue, as\n   mentioned at the beginning of this document.  It\
    \ also results in a\n   range of connectivity considerations (discussed in Section\
    \ 3.1.5),\n   some of which may be quite undesirable or complex to operationalize.\n\
    \   Making NMS hosts autonomic and having them participate in the GACP is\n  \
    \ therefore not only a highly desirable solution to the security\n   issues, but\
    \ can also provide a likely easier operationalization of\n   the GACP because\
    \ it minimizes special edge considerations for the\n   NOC.  The GACP is simply\
    \ built all the way automatically, even inside\n   the NOC, and it is only authorizes\
    \ and authenticates NOC devices/\n   applications that will have access to it.\n\
    \   According to [ACP], supporting the ACP all the way into an\n   application\
    \ device requires implementing the following aspects in it:\n   AN bootstrap/enrollment\
    \ mechanisms, the secure channel for the ACP\n   and at least the host side of\
    \ IPv6 routing setup for the ACP.\n   Minimally, this could all be implemented\
    \ as an application and be\n   made available to the host OS via, e.g., a TAP\
    \ driver to make the ACP\n   show up as another IPv6-enabled interface.\n   Having\
    \ said this: If the structure of NMS hosts is transformed\n   through virtualization\
    \ anyhow, then it may be considered equally\n   secure and appropriate to construct\
    \ a (physical) NMS host system by\n   combining a virtual GACP-enabled router\
    \ with non-GACP-enabled Virtual\n   Machines (VMs) for NOC applications via a\
    \ hypervisor.  This would\n   leverage the configuration options described in\
    \ the previous sections\n   but just virtualize them.\n"
- title: 3.1.7.  Encryption of Data-Plane Connections
  contents:
  - "3.1.7.  Encryption of Data-Plane Connections\n   When combining GACP and data-plane\
    \ connectivity for availability and\n   performance reasons, this too has an impact\
    \ on security: When using\n   the GACP, most traffic will be encryption protected,\
    \ especially when\n   considering the above-described use of application devices\
    \ with GACP.\n   If, instead, the data plane is used, then this is not the case\n\
    \   anymore unless it is done by the application.\n   The simplest solution for\
    \ this problem exists when using GACP-capable\n   NMS hosts, because in that case\
    \ the communicating GACP-capable NMS\n   host and the GACP network device have\
    \ credentials they can mutually\n   trust (same GACP domain).  As a result, data-plane\
    \ connectivity that\n   does support this can simply leverage TLS [RFC5246] or\
    \ DTLS [RFC6347]\n   with those GACP credentials for mutual authentication --\
    \ and this\n   does not incur new key management.\n   If this automatic security\
    \ benefit is seen as most important, but a\n   \"full\" GACP stack into the NMS\
    \ host is unfeasible, then it would\n   still be possible to design a stripped-down\
    \ version of GACP\n   functionality for such NOC hosts that only provides enrollment\
    \ of the\n   NOC host with the GACP cryptographic credentials and does not\n \
    \  directly participate in the GACP encryption method.  Instead, the\n   host\
    \ would just leverage TLS/DTLS using its GACP credentials via the\n   data plane\
    \ with GACP network devices as well as indirectly via the\n   GACP connect interface\
    \ with the above-mentioned GACP connect\n   interface into the GACP.\n   When\
    \ using the GACP itself, TLS/DTLS for the transport layer between\n   NMS hosts\
    \ and network device is somewhat of a double price to pay\n   (GACP also encrypts)\
    \ and could potentially be optimized away;\n   however, given the assumed lower\
    \ performance of the GACP, it seems\n   that this is an unnecessary optimization.\n"
- title: 3.1.8.  Long-Term Direction of the Solution
  contents:
  - "3.1.8.  Long-Term Direction of the Solution\n   If we consider what potentially\
    \ could be the most lightweight and\n   autonomic long-term solution based on\
    \ the technologies described\n   above, we see the following direction:\n   1.\
    \  NMS hosts should at least support IPv6.  IPv4/IPv6 NAT in the\n       network\
    \ to enable use of a GACP is undesirable in the long term.\n       Having IPv4-only\
    \ applications automatically leverage IPv6\n       connectivity via host-stack\
    \ translation may be an option, but\n       this has not been investigated yet.\n\
    \   2.  Build the GACP as a lightweight application for NMS hosts so GACP\n  \
    \     extends all the way into the actual NMS hosts.\n   3.  Leverage and (as\
    \ necessary) enhance host transport stacks with\n       automatic GACP with multipath\
    \ connectivity and data plane as\n       outlined in Section 3.1.5.\n   4.  Consider\
    \ how to best map NMS host desires to underlying transport\n       mechanisms:\
    \ The three points above do not cover all options.\n       Depending on the OAM,\
    \ one may still want only GACP, want only\n       data plane, automatically prefer\
    \ one over the other, and/or want\n       to use the GACP with low performance\
    \ or high performance (for\n       emergency OAM such as countering DDoS).  As\
    \ of today, it is not\n       clear what the simplest set of tools is to explicitly\
    \ enable the\n       choice of desired behavior of each OAM.  The use of the above-\n\
    \       mentioned DNS and multipath mechanisms is a start, but this will\n   \
    \    require additional work.  This is likely a specific case of the\n       more\
    \ generic scope of TAPS.\n"
- title: 3.2.  Stable Connectivity for Distributed Network/OAM
  contents:
  - "3.2.  Stable Connectivity for Distributed Network/OAM\n   Today, many distributed\
    \ protocols implement their own unique security\n   mechanisms.\n   Keying and\
    \ Authentication for Routing Protocols (KARP; see [RFC6518])\n   has tried to\
    \ start to provide common directions and therefore reduce\n   the reinvention\
    \ of at least some of the security aspects, but it only\n   covers routing protocols\
    \ and it is unclear how applicable it is to a\n   wider range of network distributed\
    \ agents such as those performing\n   distributed OAM.  The common security of\
    \ a GACP can help in those\n   cases.\n   Furthermore, a GRASP instance ([GRASP])\
    \ can run on top of a GACP as a\n   security and transport substrate and provide\
    \ common local and remote\n   neighbor discovery and peer negotiation mechanisms;\
    \ this would allow\n   unifying and reusing future protocol designs.\n"
- title: 4.  Architectural Considerations
  contents:
  - '4.  Architectural Considerations

    '
- title: 4.1.  No IPv4 for GACP
  contents:
  - "4.1.  No IPv4 for GACP\n   The GACP is intended to be IPv6 only, and the prior\
    \ explanations in\n   this document show that this can lead to some complexity\
    \ when having\n   to connect IPv4-only NOC solutions, and that it will be impossible\
    \ to\n   leverage the GACP when the OAM agents on a GACP network device do not\n\
    \   support IPv6.  Therefore, the question was raised whether the GACP\n   should\
    \ optionally also support IPv4.\n   The decision not to include IPv4 for GACP\
    \ in the use cases in this\n   document was made for the following reasons:\n\
    \   In service provider networks that have started to support IPv6, often\n  \
    \ the next planned step is to consider moving IPv4 from a native\n   transport\
    \ to just a service on the edge.  There is no benefit or need\n   for multiple\
    \ parallel transport families within the network, and\n   standardizing on one\
    \ reduces operating expenses and improves\n   reliability.  This evolution in\
    \ the data plane makes it highly\n   unlikely that investing development cycles\
    \ into IPv4 support for GACP\n   will have a longer term benefit or enough critical\
    \ short-term use\n   cases.  Support for IPv6-only for GACP is purely a strategic\
    \ choice\n   to focus on the known important long-term goals.\n   In other types\
    \ of networks as well, we think that efforts to support\n   autonomic networking\
    \ are better spent in ensuring that one address\n   family will be supported so\
    \ all use cases will work with it in the\n   long term, instead of duplicating\
    \ effort with IPv4.  Also, auto-\n   addressing for the GACP with IPv4 would be\
    \ more complex than in IPv6\n   due to the IPv4 addressing space.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   In this section, we discuss only security considerations\
    \ not covered\n   in the appropriate subsections of the solutions described.\n\
    \   Even though GACPs are meant to be isolated, explicit operator\n   misconfiguration\
    \ to connect to insecure OAM equipment and/or bugs in\n   GACP devices may cause\
    \ leakage into places where it is not expected.\n   Mergers and acquisitions and\
    \ other complex network reconfigurations\n   affecting the NOC are typical examples.\n\
    \   GACP addresses are ULAs.  Using these addresses also for NOC devices,\n  \
    \ as proposed in this document, is not only necessary for the simple\n   routing\
    \ functionality explained above, but it is also more secure\n   than global IPv6\
    \ addresses.  ULAs are not routed in the global\n   Internet and will therefore\
    \ be subject to more filtering even in\n   places where specific ULAs are being\
    \ used.  Packets are therefore\n   less likely to leak and less likely to be successfully\
    \ injected into\n   the isolated GACP environment.\n   The random nature of a\
    \ ULA prefix provides strong protection against\n   address collision even though\
    \ there is no central assignment\n   authority.  This is helped by the expectation\
    \ that GACPs will never\n   connect all together, and that only a few GACPs may\
    \ ever need to\n   connect together, e.g., when mergers and acquisitions occur.\n\
    \   Note that the GACP constraints demand that only packets from\n   connected\
    \ subnet prefixes are permitted from GACP connect interfaces,\n   limiting the\
    \ scope of non-cryptographically secured transport to a\n   subnet within a NOC\
    \ that instead has to rely on physical security\n   (i.e., only connect trusted\
    \ NOC devices to it).\n   To help diagnose packets that unexpectedly leaked, for\
    \ example, from\n   another GACP (that was meant to be deployed separately), it\
    \ can be\n   useful to voluntarily list your own ULA GACP prefixes on some sites\n\
    \   on the Internet and hope that other users of GACPs do the same so\n   that\
    \ you can look up unknown ULA prefix packets seen in your network.\n   Note that\
    \ this does not constitute registration.\n   <https://www.sixxs.net/tools/grh/ula/>\
    \ was a site to list ULA\n   prefixes, but it has not been open for new listings\
    \ since mid-2017.\n   The authors are not aware of other active Internet sites\
    \ to list ULA\n   use.\n   Note that there is a provision in [RFC4193] for address\
    \ space that is\n   not locally assigned (L bit = 0), but there is no existing\n\
    \   standardization for this, so these ULA prefixes must not be used.\n   According\
    \ to Section 4.4 of [RFC4193], PTR records for ULA addresses\n   should not be\
    \ installed into the global DNS (no guaranteed\n   ownership).  Hence, there is\
    \ also the need to rely on voluntary lists\n   (as mentioned above) to make the\
    \ use of an ULA prefix globally known.\n   Nevertheless, some legacy OAM applications\
    \ running across the GACP\n   may rely on reverse DNS lookup for authentication\
    \ of requests (e.g.,\n   TFTP for download of network firmware, configuration,\
    \ or software).\n   Therefore, operators may need to use a private DNS setup for\
    \ the GACP\n   ULAs.  This is the same setup that would be necessary for using\
    \ RFC\n   1918 addresses in DNS.  For example, see the last paragraph of\n   Section\
    \ 5 of [RFC1918].  In Section 4 of [RFC6950], these setups are\n   discussed in\
    \ more detail.\n   Any current and future protocols must rely on secure end-to-end\n\
    \   communications (TLS/DTLS) and identification and authentication via\n   the\
    \ certificates assigned to both ends.  This is enabled by the\n   cryptographic\
    \ credential mechanisms of the GACP.\n   If DNS and especially reverse DNS are\
    \ set up, then they should be set\n   up in an automated fashion when the GACP\
    \ address for devices are\n   assigned.  In the case of the ACP, DNS resource\
    \ record creation can\n   be linked to the autonomic registrar backend so that\
    \ the DNS and\n   reverse DNS records are actually derived from the subject name\n\
    \   elements of the ACP device certificates in the same way as the\n   autonomic\
    \ devices themselves will derive their ULAs from their\n   certificates to ensure\
    \ correct and consistent DNS entries.\n   If an operator feels that reverse DNS\
    \ records are beneficial to its\n   own operations, but that they should not be\
    \ made available publicly\n   for \"security\" by concealment reasons, then GACP\
    \ DNS entries are\n   probably one of the least problematic use cases for split\
    \ DNS: The\n   GACP DNS names are only needed for the NMS hosts intending to use\
    \ the\n   GACP -- but not network wide across the enterprise.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, DOI 10.17487/RFC1918, February\
    \ 1996,\n              <https://www.rfc-editor.org/info/rfc1918>.\n   [RFC4191]\
    \  Draves, R. and D. Thaler, \"Default Router Preferences and\n              More-Specific\
    \ Routes\", RFC 4191, DOI 10.17487/RFC4191,\n              November 2005, <https://www.rfc-editor.org/info/rfc4191>.\n\
    \   [RFC4193]  Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast\n     \
    \         Addresses\", RFC 4193, DOI 10.17487/RFC4193, October 2005,\n       \
    \       <https://www.rfc-editor.org/info/rfc4193>.\n   [RFC6724]  Thaler, D.,\
    \ Ed., Draves, R., Matsumoto, A., and T. Chown,\n              \"Default Address\
    \ Selection for Internet Protocol Version 6\n              (IPv6)\", RFC 6724,\
    \ DOI 10.17487/RFC6724, September 2012,\n              <https://www.rfc-editor.org/info/rfc6724>.\n\
    \   [RFC6824]  Ford, A., Raiciu, C., Handley, M., and O. Bonaventure,\n      \
    \        \"TCP Extensions for Multipath Operation with Multiple\n            \
    \  Addresses\", RFC 6824, DOI 10.17487/RFC6824, January 2013,\n              <https://www.rfc-editor.org/info/rfc6824>.\n\
    \   [RFC7575]  Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,\n      \
    \        Carpenter, B., Jiang, S., and L. Ciavaglia, \"Autonomic\n           \
    \   Networking: Definitions and Design Goals\", RFC 7575,\n              DOI 10.17487/RFC7575,\
    \ June 2015,\n              <https://www.rfc-editor.org/info/rfc7575>.\n   [RFC7757]\
    \  Anderson, T. and A. Leiva Popper, \"Explicit Address\n              Mappings\
    \ for Stateless IP/ICMP Translation\", RFC 7757,\n              DOI 10.17487/RFC7757,\
    \ February 2016,\n              <https://www.rfc-editor.org/info/rfc7757>.\n \
    \  [RFC7915]  Bao, C., Li, X., Baker, F., Anderson, T., and F. Gont,\n       \
    \       \"IP/ICMP Translation Algorithm\", RFC 7915,\n              DOI 10.17487/RFC7915,\
    \ June 2016,\n              <https://www.rfc-editor.org/info/rfc7915>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [ACP]      Eckert, T., Behringer, M., and S.\
    \ Bjarnason, \"An Autonomic\n              Control Plane (ACP)\", Work in Progress,\n\
    \              draft-ietf-anima-autonomic-control-plane-13,\n              December\
    \ 2017.\n   [BRSKI]    Pritikin, M., Richardson, M., Behringer, M., Bjarnason,\n\
    \              S., and K. Watsen, \"Bootstrapping Remote Secure Key\n        \
    \      Infrastructures (BRSKI)\", Work in Progress,\n              draft-ietf-anima-bootstrapping-keyinfra-15,\
    \ April 2018.\n   [GRASP]    Bormann, C., Carpenter, B., and B. Liu, \"A Generic\n\
    \              Autonomic Signaling Protocol (GRASP)\", Work in Progress,\n   \
    \           draft-ietf-anima-grasp-15, July 2017.\n   [IEEE.802.1Q]\n        \
    \      IEEE, \"IEEE Standard for Local and metropolitan area\n              networks\
    \ -- Bridges and Bridged Networks\",\n              IEEE 802.1Q-2014, DOI 10.1109/ieeestd.2014.6991462,\n\
    \              December 2014, <http://ieeexplore.ieee.org/servlet/\n         \
    \     opac?punumber=6991460>.\n   [ITUT_G7712]\n              ITU, \"Architecture\
    \ and specification of data communication\n              network\", ITU-T Recommendation\
    \ G.7712/Y.1703, November\n              2001, <https://www.itu.int/rec/T-REC-G.7712/en>.\n\
    \   [REF_MODEL]\n              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia,\
    \ L.,\n              and J. Nobre, \"A Reference Model for Autonomic\n       \
    \       Networking\", Work in Progress,\n              draft-ietf-anima-reference-model-06,\
    \ February 2018.\n   [RFC1034]  Mockapetris, P., \"Domain names - concepts and\
    \ facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034, November\
    \ 1987,\n              <https://www.rfc-editor.org/info/rfc1034>.\n   [RFC4960]\
    \  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n             \
    \ RFC 4960, DOI 10.17487/RFC4960, September 2007,\n              <https://www.rfc-editor.org/info/rfc4960>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <https://www.rfc-editor.org/info/rfc5246>.\n   [RFC6146]\
    \  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n              NAT64:\
    \ Network Address and Protocol Translation from IPv6\n              Clients to\
    \ IPv4 Servers\", RFC 6146, DOI 10.17487/RFC6146,\n              April 2011, <https://www.rfc-editor.org/info/rfc6146>.\n\
    \   [RFC6291]  Andersson, L., van Helvoort, H., Bonica, R., Romascanu,\n     \
    \         D., and S. Mansfield, \"Guidelines for the Use of the \"OAM\"\n    \
    \          Acronym in the IETF\", BCP 161, RFC 6291,\n              DOI 10.17487/RFC6291,\
    \ June 2011,\n              <https://www.rfc-editor.org/info/rfc6291>.\n   [RFC6347]\
    \  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n              Security\
    \ Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n              January 2012,\
    \ <https://www.rfc-editor.org/info/rfc6347>.\n   [RFC6434]  Jankiewicz, E., Loughney,\
    \ J., and T. Narten, \"IPv6 Node\n              Requirements\", RFC 6434, DOI\
    \ 10.17487/RFC6434, December\n              2011, <https://www.rfc-editor.org/info/rfc6434>.\n\
    \   [RFC6518]  Lebovitz, G. and M. Bhatia, \"Keying and Authentication for\n \
    \             Routing Protocols (KARP) Design Guidelines\", RFC 6518,\n      \
    \        DOI 10.17487/RFC6518, February 2012,\n              <https://www.rfc-editor.org/info/rfc6518>.\n\
    \   [RFC6950]  Peterson, J., Kolkman, O., Tschofenig, H., and B. Aboba,\n    \
    \          \"Architectural Considerations on Application Features in\n       \
    \       the DNS\", RFC 6950, DOI 10.17487/RFC6950, October 2013,\n           \
    \   <https://www.rfc-editor.org/info/rfc6950>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This work originated from an Autonomic Networking project\
    \ at Cisco\n   Systems, which started in early 2010, with customers involved in\
    \ the\n   design and early testing.  Many people contributed to the aspects\n\
    \   described in this document, including in alphabetical order: BL\n   Balaji,\
    \ Steinthor Bjarnason, Yves Herthoghs, Sebastian Meissner, and\n   Ravi Kumar\
    \ Vadapalli.  The authors would also like to thank Michael\n   Richardson, James\
    \ Woodyatt, and Brian Carpenter for their review and\n   comments.  Special thanks\
    \ to Sheng Jiang and Mohamed Boucadair for\n   their thorough reviews.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Toerless Eckert (editor)\n   Huawei USA\n   2330 Central\
    \ Expy\n   Santa Clara  95050\n   United States of America\n   Email: tte+ietf@cs.fau.de,\
    \ toerless.eckert@huawei.com\n   Michael H. Behringer\n   Email: michael.h.behringer@gmail.com\n"
