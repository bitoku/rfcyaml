- contents:
  - '         Email Greylisting: An Applicability Statement for SMTP

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the art of email greylisting, the practice
    of\n   providing temporarily degraded service to unknown email clients as an\n
    \  anti-abuse mechanism.\n   Greylisting is an established mechanism deemed essential
    to the\n   repertoire of current anti-abuse email filtering systems.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6647.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Background .................................................3\n      1.2.
    Definitions ................................................4\n   2. Types of
    Greylisting ............................................4\n      2.1. Connection-Level
    Greylisting ...............................4\n      2.2. SMTP HELO/EHLO Greylisting
    .................................5\n      2.3. SMTP MAIL Greylisting ......................................5\n
    \     2.4. SMTP RCPT Greylisting ......................................5\n      2.5.
    SMTP DATA Greylisting ......................................6\n      2.6. Additional
    Heuristics ......................................7\n      2.7. Exceptions .................................................7\n
    \  3. Benefits and Costs ..............................................8\n   4.
    Unintended Consequences .........................................9\n      4.1.
    Unintended Mail Delivery Failures ..........................9\n      4.2. Unintended
    SMTP Client Failures ...........................10\n      4.3. Address Space Saturation
    ..................................11\n   5. Recommendations ................................................12\n
    \  6. Measuring Effectiveness ........................................13\n   7.
    IPv6 Applicability .............................................14\n   8. Security
    Considerations ........................................14\n      8.1. Trade-Offs
    ................................................14\n      8.2. Database ..................................................14\n
    \  9. References .....................................................15\n      9.1.
    Normative References ......................................15\n      9.2. Informative
    References ....................................15\n   Appendix A.  Acknowledgments
    ......................................17\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Preferred techniques for handling email abuse explicitly
    identify\n   good actors and bad actors, giving each significantly different\n
    \  service quality.  In some cases, an actor does not have a known\n   reputation;
    this can justify providing degraded service, until there\n   is a basis for providing
    better service.  This latter approach is\n   known as \"greylisting\".  Broadly,
    the term refers to any degradation\n   of service for an unknown or suspect source,
    over a period of time\n   (typically measured in minutes or a small number of
    hours).  The\n   narrow use of the term refers to generation of an SMTP temporary\n
    \  failure reply code for traffic from such sources.  There are diverse\n   implementations
    of this basic concept and predictably, therefore,\n   some blurred terminology.\n
    \  Absent a perfect abuse-detection mechanism that incurs no cost, the\n   current
    requirement is for an array of techniques to be used by each\n   filtering system.
    \ They range in cost, effectiveness, and types of\n   abuse techniques they target.\n
    \  Greylisting happens to be a technique that is cheap and early (in\n   terms
    of its application in the SMTP sequence) and surprisingly\n   remains useful.
    \ Some spamware does indeed route around this\n   technique, but much does not.\n
    \  The firehose of spam over the Internet represents a wide range of\n   sophistication.
    \ Greylisting is useful for removing a large amount of\n   simplistic-but-significant
    traffic.\n   This memo documents common greylisting techniques and discusses their\n
    \  benefits and costs.  It also defines terminology to enable clear\n   distinction
    and discussion of these techniques.\n   There is some confusion in the industry
    that conflates greylisting\n   with an SMTP temporary failure for any reason.
    \ The purpose of this\n   memo is also to dispel such confusion.\n"
  - contents:
    - "1.1.  Background\n   For many years, large amounts of spam have been sent through
      purpose-\n   built software, or \"spamware\", that supports only a constrained\n
      \  version of SMTP.  In particular, such software does not perform\n   retransmission
      attempts after receiving an SMTP temporary failure.\n   That is, if the spamware
      cannot deliver a message, it just goes on to\n   the next address in its list
      since, in spamming, volume counts for\n   far more than reliability.  Greylisting
      exploits this by rejecting\n   mail from unfamiliar sources with a \"transient
      (soft) fail\" (4xx)\n   [SMTP] error code.  Another application of greylisting
      is to delay\n   mail from newly seen IP addresses on the theory that, if it's
      a spam\n   source, then by the time it retries, it will appear in a list of\n
      \  sources to be filtered, and the mail will not be accepted.\n   Early references
      for greylisting descriptions and implementations can\n   be found at [SAUCE]
      and [PUREMAGIC].\n"
    title: 1.1.  Background
  - contents:
    - '1.2.  Definitions

      '
    - contents:
      - "1.2.1.  Keywords\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
        \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
        \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
        in [KEYWORDS].\n"
      title: 1.2.1.  Keywords
    - contents:
      - "1.2.2.  Email Architecture Terminology\n   Readers need to be familiar with
        the material and terminology\n   discussed in [MAIL], [EMAIL-ARCH], and [SMTP].\n"
      title: 1.2.2.  Email Architecture Terminology
    title: 1.2.  Definitions
  title: 1.  Introduction
- contents:
  - "2.  Types of Greylisting\n   Greylisting is primarily performed at some phase
    during an SMTP\n   session.  A set of attributes about the client-side SMTP server
    are\n   used for assessing whether to perform greylisting.  At its simplest,\n
    \  the attribute is the IP address of the client, and the assessment is\n   whether
    it has previously connected recently.  More elaborate\n   attribute combinations
    and more sophisticated assessments can be\n   performed.  The following discussion
    covers the most common\n   combinations and relies on knowledge of [SMTP], its
    commands, and the\n   distinction between envelope and content.\n"
  - contents:
    - "2.1.  Connection-Level Greylisting\n   Connection-level greylisting decides
      whether to accept the TCP\n   connection from a \"new\" [SMTP] client.  At this
      point in the\n   communication between the client and the server, the only information\n
      \  known to the receiving server is the incoming IP address.  This, of\n   course,
      is often (but not always) translatable into a host name.\n   The typical application
      of greylisting here is to keep a record of\n   SMTP client IP addresses and/or
      host names (collectively, \"sources\")\n   that have been seen.  Such a database
      acts as a cache of known\n   senders and might or might not expire records after
      some period.  If\n   the source is not in the database, or the record of the
      source has\n   not reached some required minimum age (such as 30 minutes since
      the\n   initial connection attempt), the server does one of the following,\n
      \  inviting a later retry:\n   o  returns a 421 SMTP reply and closes the connection,
      or\n   o  returns a different 4yz SMTP reply to all further commands in this\n
      \     SMTP session.\n   A useful variant of the basic known/unknown policy is
      to limit\n   greylisting to those addresses that are on some list of IP addresses\n
      \  known to be affiliated with bad actors.  Whereas the simpler policy\n   affects
      all new connections, including those from good actors, the\n   constrained policy
      applies greylisting actions only to sites that\n   already have a negative reputation.\n"
    title: 2.1.  Connection-Level Greylisting
  - contents:
    - "2.2.  SMTP HELO/EHLO Greylisting\n   HELO/EHLO greylisting refers to the first
      command verb in an SMTP\n   session.  It includes a single, required parameter
      that is supposed\n   to contain the client's fully qualified host name or its
      literal IP\n   address.\n   Greylisting implemented at this phase retains a
      record of sources\n   coupled with HELO/EHLO parameters.  It returns 4yz SMTP
      replies to\n   all commands until the end of the SMTP session if that tuple
      has not\n   previously been recorded or if the record exists but has not reached\n
      \  some configured minimum age.\n"
    title: 2.2.  SMTP HELO/EHLO Greylisting
  - contents:
    - "2.3.  SMTP MAIL Greylisting\n   MAIL command greylisting refers to the command
      verb in an SMTP\n   session that initiates a new transaction.  It includes at
      least one\n   required parameter that indicates the return email address\n   (RFC5321.MailFrom)
      of the message being relayed from the client to\n   the server.\n   Greylisting
      implemented at this phase retains a record of sources\n   coupled with return
      email addresses.  It returns 4yz SMTP replies to\n   all commands for the remainder
      of the SMTP session if that tuple has\n   not previously been recorded or if
      the record exists but has not met\n   some configured minimum age.\n"
    title: 2.3.  SMTP MAIL Greylisting
  - contents:
    - "2.4.  SMTP RCPT Greylisting\n   RCPT greylisting refers to the command verb
      in an SMTP session that\n   specifies intended recipients of an email transaction.
      \ It includes\n   at least one required parameter that indicates the email address
      of\n   an intended recipient of the message being relayed from the client to\n
      \  the server.\n   Greylisting implemented at this phase retains a record of
      tuples that\n   combines the provided recipient address with any combination
      of the\n   following:\n   o  the source, as described above;\n   o  the return
      email address; and\n   o  the other recipient addresses of the message (if any).\n
      \  If the selected tuple is not found in the database, or if the record\n   is
      present but has not reached some configured minimum age, the\n   greylisting
      Mail Transfer Agent (MTA) [EMAIL-ARCH] returns 4yz SMTP\n   replies to all commands
      for the remainder of the SMTP session.\n   Note that often a match on a tuple
      involving the first valid RCPT is\n   sufficient to identify a retry correctly,
      and further checks can be\n   omitted.\n"
    title: 2.4.  SMTP RCPT Greylisting
  - contents:
    - "2.5.  SMTP DATA Greylisting\n   DATA greylisting refers to the command verb
      in an SMTP session that\n   transmits the actual message content, as opposed
      to its envelope\n   details.\n   This type of greylisting can be performed at
      two places in the SMTP\n   sequence:\n   1.  on receipt of the DATA command,
      because at that point the entire\n       envelope has been received (i.e., all
      MAIL and RCPT commands have\n       been issued); or\n   2.  on completion of
      the DATA command, i.e., after the \".\" that\n       terminates transmission
      of the message body, since at that point\n       a digest or other analysis
      of the message could be performed.\n   Some implementations do filtering here
      because there are clients that\n   don't bother checking SMTP reply codes to
      commands other than DATA.\n   Hence, it can be useful to add greylisting capability
      at that point\n   in an SMTP session.\n   Numerous greylisting policies are
      possible at this point.  All of\n   them retain a record of tuples that combine
      the various parts of the\n   SMTP transaction in some combination, including:\n
      \  o  the source, as described above;\n   o  the return email address;\n   o
      \ the recipients of the message, as a set or individually;\n   o  identifiers
      in the message header, such as the contents of the\n      RFC5322.From or RFC5322.To
      fields;\n   o  other prominent parts of the content, such as the RFC5322.Subject\n
      \     field;\n   o  a digest of some or all of the message content, as a test
      for\n      uniqueness; and\n   o  analysis of arbitrary portions of the message
      body.\n   (The last four items in the list above are only possible at the end\n
      \  of DATA, not on receipt of the DATA command.)\n   If the selected tuple is
      not found in the database, or if the record\n   exists but has not reached some
      configured minimum age, the\n   greylisting MTA returns 4yz SMTP replies to
      all commands for the\n   remainder of the SMTP session.\n"
    title: 2.5.  SMTP DATA Greylisting
  - contents:
    - "2.6.  Additional Heuristics\n   Since greylisting seeks to target spam senders,
      it follows that being\n   able to identify spamware within the SMTP context
      beyond the simple\n   notion of \"not seen before\" would be desirable.  A more
      targeted\n   approach might also include in its selection heuristics such as
      the\n   following:\n   o  If a DNS blacklist [DNSBL] lists an IP address but
      the implementer\n      wishes to be cautious with mitigation actions rather
      than blocking\n      traffic from the IP address outright, then subject it to\n
      \     greylisting.\n   o  If the value found in a PTR record follows common
      naming patterns\n      for dynamic IP addresses, then subject it to greylisting.\n"
    title: 2.6.  Additional Heuristics
  - contents:
    - "2.7.  Exceptions\n   Most greylisting systems provide for an exception mechanism,
      allowing\n   one to specify IP addresses, IP address Classless Inter-Domain\n
      \  Routing (CIDR) [CIDR] blocks, host names, or domain names that are\n   exempt
      from greylisting checks and thus whose SMTP client sessions\n   are not subject
      to such interference.\n   Likely candidates to be excepted from greylisting
      include those known\n   not to retry according to a pattern that will be observed
      as\n   legitimate and those that send so rarely that they will age out of\n
      \  the database.  In both cases, the excepted source is known not to be\n   an
      abusive one by the site implementing greylisting.  Otherwise,\n   typical non-abusive
      senders will enter the exception list on the\n   first proper retry and remain
      there permanently.\n   One could also use a [DNSBL] that lists known good hosts
      as a\n   greylisting exception set.\n"
    title: 2.7.  Exceptions
  title: 2.  Types of Greylisting
- contents:
  - "3.  Benefits and Costs\n   The most obvious benefit with any of the above techniques
    is that\n   spamware generally does not retry and is therefore less likely to\n
    \  succeed, absent a record of a previous delivery attempts.\n   The most obvious
    detriment to implementing greylisting is the\n   imposition of delay on legitimate
    mail.  Some popular MTAs do not\n   retry failed delivery attempts for an hour
    or more, which can cause\n   expensive delays when delivery of mail is time critical.
    \ Worse, some\n   legitimate MTAs do not retry at all.  (Note, however, that non-\n
    \  retrying clients are not fully SMTP-capable, per Section 2.1 of\n   [SMTP].
    \ A client does not know, nor is it entitled to know, the\n   reason for the temporary
    failure status code being returned;\n   greylisting could be in effect, or it
    could be caused by a local\n   resource issue at the server.  A client therefore
    needs to be\n   equipped to retry in order to be considered fully capable.)\n
    \  The counterargument to this \"false positive\" problem is that email\n   has
    always been a \"best-effort\" mechanism; thus, this cost is\n   ultimately low
    in comparison to the cost of dealing with high volumes\n   of unwanted mail.  Still,
    the actual effect of such delays can be\n   significant, such as altering the
    tone or flow of a multi-participant\n   discussion to a mailing list.\n   When
    the clients are subjected to any kind of reconfiguration,\n   especially network
    renumbering, the cache of information stored about\n   SMTP client history does
    not benefit legitimate clients that are\n   already listed for acceptance.  To
    the greylisting implementation,\n   such clients are once again unknown, and they
    will once again be\n   subjected to the delay.\n   Another obvious cost is for
    the required database.  It has to be\n   large enough to keep the necessary history
    and fast enough to avoid\n   excessive inefficiencies in the server's operations.
    \ The primary\n   consideration is the maximum age of records in the database.
    \ If\n   records age out too soon, then hosts that do retry per [SMTP] will be\n
    \  periodically subjected to greylisting even though they are well-\n   behaved;
    if records age out after too long a period, then eventually\n   spamware that
    launches a new campaign will not be identified as\n   \"unknown\" in this manner
    and will not be required to retry.\n   Presuming that known friendly senders will
    be manually configured as\n   exceptions to the greylisting check, a steady state
    will eventually\n   be reached wherein the only mail that is delayed is mail from
    an IP\n   address that has never sent mail before.  Experience suggests that\n
    \  the vast majority of mail comes from places on a developed exception\n   list,
    so after a training period, only a small proportion of mail is\n   actually affected.
    \ The training period could be replaced by\n   processing a history of email traffic
    and adding the IP addresses\n   from which most traffic arrives to the exception
    list.\n   Applying greylisting based on actual message content (i.e., post-\n
    \  DATA) is substantially more expensive than any of the other\n   alternatives
    both in terms of the resources required to accept and\n   temporarily store a
    complete message body (which can be quite\n   substantial) and any processing
    that is done on that content.  As a\n   consequence, such methods incur more cost
    during the session and thus\n   are not typical practice.\n"
  title: 3.  Benefits and Costs
- contents:
  - '4.  Unintended Consequences

    '
  - contents:
    - "4.1.  Unintended Mail Delivery Failures\n   There are a few failure modes of
      greylisting that are worth\n   considering.  For example, consider an email
      message intended for\n   user@example.com.  The example.com domain is served
      by two receiving\n   mail servers, one called mail1.example.com and one called\n
      \  mail2.example.com.  On the first delivery attempt, mail1.example.com\n   greylists
      the client, and thus the client places the message in its\n   outgoing queue
      for later retry.  Later, when a retry is attempted,\n   mail2.example.com is
      selected for the delivery, either because\n   mail1.example.com is unavailable
      or because a round-robin [DNS]\n   evaluation produces that result.  However,
      the two example.com hosts\n   do not share greylisting databases, so the second
      host again denies\n   the attempt.  Thus, although example.com has sought to
      improve its\n   email throughput by having two servers, it has, in fact, amplified\n
      \  the problem of legitimate mail delay introduced by greylisting.\n   Similarly,
      consider a site with multiple outbound MTAs that share a\n   common queue.  On
      a first outbound delivery attempt to example.com,\n   the attempt is greylisted.
      \ On a later retry, a different outbound\n   MTA is selected, which means example.com
      sees a different source, and\n   once again greylisting occurs on the same message.
      \ The same effect\n   can result from the use of [DHCP], where the IP address
      of an\n   outbound MTA changes between attempts.\n   For systems that do DATA-level
      greylisting, if any part of the\n   message has changed since the first attempt,
      the tuple constructed\n   might be different than the one for the first attempt,
      and the\n   delivery is again greylisted.  Some MTAs do reformulate portions
      of\n   the message at submission time, and this can produce visible\n   differences
      for each attempt.\n   A host that sends mail to a particular destination infrequently
      might\n   not remain \"known\" in the receiving server's database and will\n
      \  therefore be greylisted for a high percentage of mail despite\n   possibly
      being a legitimate sender.\n   All of these and other similar cases can cause
      greylisting to be\n   applied improperly to legitimate MTAs multiple times,
      leading to long\n   delays in delivery or ultimately the return of the message
      to its\n   sender.  Other side effects include out-of-order delivery of related\n
      \  sequenced messages.\n   Address translation technologies such as [NAT] cause
      distinct MTAs to\n   appear to come from a common IP address.  This can cause
      greylisting\n   to be applied only to the first connection attempt from the
      shared IP\n   address, meaning future MTAs connecting for the first time will
      be\n   exempted from the protection greylisting provides.\n"
    title: 4.1.  Unintended Mail Delivery Failures
  - contents:
    - "4.2.  Unintended SMTP Client Failures\n   Atypical SMTP client behaviors also
      need to be considered when\n   deploying greylisting.\n   Some clients do not
      retry messages for very long periods.  Popular\n   open source MTAs implement
      increasing backoff times when messages\n   receive temporary failure messages
      and/or degrade queue priority for\n   very large messages.  This means greylisting
      introduces even more\n   delay for MTAs implementing such schemes, and the delay
      can become\n   large enough to become a nuisance to users.\n   Some clients
      do not retry messages at all, in violation of [SMTP].\n   This means greylisting
      will cause outright delivery failure right\n   away for sources, envelopes,
      or messages that it has not seen before,\n   regardless of the client attempting
      the delivery, essentially\n   treating legitimate mail and spam the same.\n
      \  If a greylisting scheme requires a database record to have reached a\n   certain
      age rather than merely testing for the presence of the record\n   in the database,
      and the client has a retry schedule that is too\n   aggressive, the client could
      be subjected to rate limiting by the MTA\n   independent of the restrictions
      imposed by greylisting.\n   Some SMTP implementations make the error of treating
      all error codes\n   as fatal, contrary to [SMTP]; that is, a 4yz response is
      treated as\n   if it were a 5yz response, and the message is returned to the
      sender\n   as undeliverable.  This can result in such things as inadvertent\n
      \  removal from mailing lists in response to the perceived rejections.\n   Some
      clients encode message-specific details in the address parameter\n   to the
      [SMTP] MAIL command.  If doing so causes the parameter to\n   change between
      retry attempts, a greylisting implementation could see\n   it as a new delivery
      rather than a retry and disallow the delivery.\n   In such cases, the mail will
      never be delivered and will be returned\n   to the sender after the retry timeout
      expires.\n   A client subjected to greylisting might move to the next host found\n
      \  in the ordered [DNS] MX record set for the destination domain and re-\n   attempt
      delivery.  This has several considerations of its own:\n   o  Traffic to those
      alternate servers increases merely as a result of\n      greylisting.\n   o
      \ Alternate (MX) servers SHOULD share the same greylisting database.\n      When
      they do not -- as is often true when the servers occupy\n      different Administrative
      Management Domains (ADMDs) -- SMTP\n      clients can see variable treatment
      if they try to send to\n      different MX hosts.\n   o  When alternate MX servers
      relay mail back to the \"primary\" MX\n      server, the latter SHOULD be configured
      to permit the other\n      servers to relay mail without being subjected to
      greylisting.\n   There are some applications that connect to an SMTP server
      and\n   simulate a transaction up to the point of sending the RCPT command in\n
      \  an attempt to confirm that an address is valid.  Some of these are\n   legitimate
      applications (e.g., mailing list servers), and others are\n   automated programs
      that attempt to ascertain valid addresses to which\n   to send spam (a \"directory
      harvesting\" attack).  Greylisting can\n   interfere with both instances, with
      harmful effects on the former.\n"
    title: 4.2.  Unintended SMTP Client Failures
  - contents:
    - "4.3.  Address Space Saturation\n   Greylisting is obviously not a foolproof
      solution to avoiding abusive\n   traffic.  Bad actors that send mail with just
      enough frequency to\n   avoid having their records expire will never be caught
      by this\n   mechanism after the first instance.\n   Where this is a concern,
      combining greylisting with some form of\n   reputation service that estimates
      the likely behavior for IP\n   addresses that are not intercepted by the greylisting
      function would\n   be a good choice.\n"
    title: 4.3.  Address Space Saturation
  title: 4.  Unintended Consequences
- contents:
  - "5.  Recommendations\n   The following practices are RECOMMENDED based on collected\n
    \  experience:\n   1.  Implement greylisting based on a tuple consisting of (IP
    address,\n       RFC5321.MailFrom, and the first RFC5321.RcptTo).  It is\n       sufficient
    to use only the first RFC5321.RcptTo as legitimate\n       MTAs appear not to
    reorder recipients between retries.  Including\n       RFC5321.MailFrom improves
    accuracy where the IP address is being\n       matched in clusters (e.g., CIDR
    blocks) rather than precisely\n       (see below).  After a successful retry,
    allow all further [SMTP]\n       traffic from the IP address in that tuple regardless
    of envelope\n       information.\n   2.  Include a configurable range of time
    within which a retry from a\n       greylisted host is considered and outside
    of which it is\n       otherwise ignored.  The range needs to cover typical retry
    times\n       of common MTA configurations, thus anticipating that a fully\n       capable
    MTA will retry sometime after the beginning of the range\n       and before the
    end of it.  The default range SHOULD be from one\n       minute to 24 hours.  Retries
    within the range are permitted and\n       satisfy the greylisting test, and the
    client is thus no longer\n       likely to be a sender of spam.  Retries after
    the end of the\n       range SHOULD be considered to be a new message for the
    purposes\n       of greylisting evaluation (i.e., reset the \"first seen\" timestamp\n
    \      for that IP address).  Some sites use a higher time value for the\n       low
    end of the time range to match common legitimate MTA retry\n       timeouts, but
    additional benefit from doing so appears unlikely.\n   3.  Include a timeout for
    database entries, after which records for\n       IP addresses that have generated
    no recent traffic are deleted.\n       This step is intended to re-enable greylisting
    for an IP address\n       in the event that it has changed \"owners\" and will
    subject the\n       client to another round of greylisting.  The default SHOULD
    be at\n       least one week.\n   4.  For an Administrative Management Domain
    (ADMD), all inbound\n       border MTAs listed in the [DNS] SHOULD share a common
    greylisting\n       database and common greylisting policies.  This handles sequences\n
    \      in which a client's retry goes to a different server after the\n       first
    4yz reply, and it lets all servers share the list of hosts\n       that did retry
    successfully.\n   5.  To accommodate those senders that have clusters of outgoing
    mail\n       servers, greylisting servers MAY track CIDR blocks of a size of\n
    \      its own choosing, such as /24, rather than the full IPv4 address.\n       (Note,
    however, that this heuristic will not work for clusters\n       having machines
    on different networks.)  A similar grouping\n       capability MAY be established
    based on the domain name of the\n       mail server if one can be determined.\n
    \  6.  Include a manual override capability for adding specific IP\n       addresses
    or network blocks that always bypass checks.  There are\n       legitimate senders
    that simply don't respond well to greylisting\n       for a variety of reasons,
    most of which do not conflict with\n       [SMTP].  There are also some highly
    visible online entities such\n       as email service providers that will be certain
    to retry; thus,\n       those that are known SHOULD be allowed to bypass the filter.\n
    \  7.  Greylisting SHOULD NOT be applied by an ADMD's submission service\n       (see
    [SUBMISSION]) for authenticated client hosts.  It also\n       SHOULD not be applied
    against any authenticated ADMD session.\n       Authentication can include whatever
    mechanisms are deemed\n       appropriate for the ADMD, such as known internal
    IP addresses,\n       protocol-level client authentication, or the like.\n   There
    is no specific recommendation as to the specific choice of 4yz\n   code to be
    returned as a result of a greylisting delay.  Per [SMTP],\n   however, the only
    two reasonable choices are 421 if the\n   implementation wishes to terminate the
    connection immediately and 450\n   otherwise.  It is possible that some clients
    treat different 4yz\n   codes differently, but no data is available on whether
    using 421\n   versus some other 4yz code is particularly advantageous.\n   There
    is also no specific recommendation as to the choice of text to\n   include in
    the SMTP reply, if any.  Some implementers argue that\n   indicating that greylisting
    is in effect can give spamware a hint as\n   to when to try again for successful
    delivery, while others suspect\n   that it won't matter to spamware and thus the
    more likely audience is\n   legitimate senders seeking to understand why their
    mail is being\n   delayed.\n"
  title: 5.  Recommendations
- contents:
  - "6.  Measuring Effectiveness\n   A few techniques are common when measuring the
    effectiveness of\n   greylisting in a particular installation:\n   o  Arrange
    to log the spam versus legitimate determinations of\n      messages and what the
    greylisting decision would have been if\n      enabled; then determine whether
    there is a correlation (and, of\n      course, whether too much legitimate email
    would also be affected).\n   o  Continuing from the previous point, query the
    set of IP addresses\n      subjected to greylisting in any popular [DNSBL] to
    see if there is\n      a strong correlation.\n"
  title: 6.  Measuring Effectiveness
- contents:
  - "7.  IPv6 Applicability\n   The descriptions and recommendations presented in
    this memo are based\n   on many years of experience with greylisting in the IPv4
    Internet\n   environment, so they clearly pertain to IPv4 deployments only.\n
    \  The greater size of an IPv6 address seems likely to permit\n   differences
    in behaviors by bad actors, and this could well mean\n   needing to alter the
    details for applying greylisting; it might even\n   negate any benefits in using
    greylisting at all.  At a minimum, it is\n   likely to call for different specific
    choices for any greylisting\n   algorithm variables.\n   In addition, an obvious
    consideration is that the size of the\n   database required to store records of
    all of the IP addresses seen\n   will likely be substantially larger in the IPv6
    environment.\n"
  title: 7.  IPv6 Applicability
- contents:
  - "8.  Security Considerations\n   This section discusses potential security issues
    related to\n   greylisting.\n"
  - contents:
    - "8.1.  Trade-Offs\n   The discussion above highlights the fact that, although
      greylisting\n   provides some obvious and valuable defenses, it can introduce\n
      \  unintentional and detrimental consequences for delivery of legitimate\n   mail.
      \ Where timely delivery of email is essential, especially for\n   financial,
      transactional, or security-related applications, the\n   possible consequences
      of such systems need to be carefully\n   considered.\n   Specific sources can
      be exempted from greylisting, but, of course,\n   that means they have elevated
      privilege in terms of access to the\n   mailboxes on the greylisting system,
      and malefactors can seek to\n   exploit this.\n"
    title: 8.1.  Trade-Offs
  - contents:
    - "8.2.  Database\n   The database that has to be maintained as part of any greylisting\n
      \  system will grow as the diversity of its SMTP clients' hosts grows\n   and,
      of course, is larger in general depending on the nature of the\n   tuple stored
      about each delivery attempt.  Even with a record aging\n   policy in place,
      such a database could grow large enough to interfere\n   with the system hosting
      it, or at least to a point at which\n   greylisting service is degraded.  Moreover,
      an attacker knowing which\n   greylisting scheme is in use could rotate parameters
      of SMTP clients\n   under its control, in an attempt to inflate the database
      to the point\n   of denial-of-service.\n   Implementers could consider configuring
      an appropriate failure policy\n   so that something locally acceptable happens
      when the database is\n   attacked or otherwise unavailable.\n   In practice,
      this has not appeared as a serious concern, because any\n   reasonable aging
      policy successfully moderates database growth.  It\n   is nevertheless identified
      here as a consideration as there may be\n   implementations in some environments
      where this is indeed an issue.\n"
    title: 8.2.  Database
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [EMAIL-ARCH]  Crocker, D., \"Internet Mail Architecture\",
      RFC 5598,\n                 July 2009.\n   [KEYWORDS]    Bradner, S., \"Key
      words for use in RFCs to Indicate\n                 Requirement Levels\", BCP
      14, RFC 2119, March 1997.\n   [SMTP]        Klensin, J., \"Simple Mail Transfer
      Protocol\", RFC 5321,\n                 October 2008.\n   [SUBMISSION]  Gellens,
      R. and J. Klensin, \"Message Submission for\n                 Mail\", STD 72,
      RFC 6409, November 2011.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [CIDR]        Fuller, V. and T. Li, \"Classless
      Inter-domain Routing\n                 (CIDR): The Internet Address Assignment
      and Aggregation\n                 Plan\", BCP 122, RFC 4632, August 2006.\n
      \  [DHCP]        Droms, R., \"Dynamic Host Configuration Protocol\",\n                 RFC
      2131, March 1997.\n   [DNS]         Mockapetris, P., \"Domain names - implementation
      and\n                 specification\", STD 13, RFC 1035, November 1987.\n   [DNSBL]
      \      Levine, J., \"DNS Blacklists and Whitelists\", RFC 5782,\n                 February
      2010.\n   [MAIL]        Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n
      \                October 2008.\n   [NAT]         Srisuresh, P. and K. Egevang,
      \"Traditional IP Network\n                 Address Translator (Traditional NAT)\",
      RFC 3022,\n                 January 2001.\n   [PUREMAGIC]   Harris, E., \"The
      Next Step in the Spam Control War:\n                 Greylisting\", August 2003,\n
      \                <http://projects.puremagic.com/greylisting/\n                 whitepaper.html>.\n
      \  [SAUCE]       Jackson, I., \"GNU SAUCE\", 2001,\n                 <http://www.gnu.org/software/sauce>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  Acknowledgments\n   The authors wish to acknowledge Mike Adkins,
    Steve Atkins, Mihai\n   Costea, Derek Diget, Peter J. Holzer, John Levine, Chris
    Lewis, Jose-\n   Marcio Martins da Cruz, John Klensin, S. Moonesamy, Suresh\n
    \  Ramasubramanian, Mark Risher, Jordan Rosenwald, Gregory Shapiro, Joe\n   Sniderman,
    Roland Turner, and Michael Wise for their contributions to\n   this memo.  The
    various participants of the MAAWG Open Sessions about\n   greylisting were also
    valued contributors.\n"
  title: Appendix A.  Acknowledgments
- contents:
  - "Authors' Addresses\n   Murray S. Kucherawy\n   Cloudmark\n   128 King St., 2nd
    Floor\n   San Francisco, CA  94107\n   US\n   Phone: +1 415 946 3800\n   EMail:
    superuser@gmail.com\n   Dave Crocker\n   Brandenburg InternetWorking\n   675 Spruce
    Dr.\n   Sunnyvale, CA  94086\n   USA\n   Phone: +1.408.246.8253\n   EMail: dcrocker@bbiw.net\n
    \  URI:   http://bbiw.net\n"
  title: Authors' Addresses
