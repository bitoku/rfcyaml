- title: __initial_text__
  contents:
  - '  Network News Transfer Protocol (NNTP) Extension for Streaming Feeds

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an extension to the Network News Transfer Protocol\n\
    \   (NNTP) to provide asynchronous (otherwise known as \"streaming\")\n   transfer\
    \ of articles.  This allows servers to transfer articles to\n   other servers\
    \ with much greater efficiency.\n   This document updates and formalizes the CHECK\
    \ and TAKETHIS commands\n   specified in RFC 2980 and deprecates the MODE STREAM\
    \ command.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in this Document ..........................2\n  \
    \ 2. The STREAMING Extension .........................................3\n    \
    \  2.1. Streaming Article Transfer .................................3\n      2.2.\
    \ Advertising the STREAMING Extension ........................4\n      2.3. MODE\
    \ STREAM Command ........................................5\n           2.3.1.\
    \ Usage ...............................................5\n           2.3.2. Description\
    \ .........................................5\n           2.3.3. Examples ............................................5\n\
    \      2.4. CHECK Command ..............................................6\n  \
    \         2.4.1. Usage ...............................................6\n    \
    \       2.4.2. Description .........................................6\n      \
    \     2.4.3. Examples ............................................6\n      2.5.\
    \ TAKETHIS Command ...........................................7\n           2.5.1.\
    \ Usage ...............................................7\n           2.5.2. Description\
    \ .........................................7\n           2.5.3. Examples ............................................8\n\
    \   3. Augmented BNF Syntax for the STREAMING Extension ................9\n  \
    \    3.1. Commands ...................................................9\n    \
    \  3.2. Command Datastream .........................................9\n      3.3.\
    \ Responses .................................................10\n      3.4. Capability\
    \ Entries ........................................10\n   4. Summary of Response\
    \ Codes ......................................10\n   5. Security Considerations\
    \ ........................................11\n   6. IANA Considerations ............................................11\n\
    \   7. Acknowledgements ...............................................12\n  \
    \ 8. References .....................................................12\n    \
    \  8.1. Normative References ......................................12\n      8.2.\
    \ Informative References ....................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   According to the NNTP specification [NNTP], a peer uses\
    \ the IHAVE\n   command to query whether a server wants a particular article.\n\
    \   Because the IHAVE command cannot be pipelined, the need to stop and\n   wait\
    \ for the remote end's response greatly restricts the throughput\n   that can\
    \ be achieved.\n   The ad-hoc CHECK and TAKETHIS commands, originally documented\
    \ in\n   [NNTP-COMMON], provide an alternative method of peer-to-peer article\n\
    \   transfer that permits a more effective use of network bandwidth.  Due\n  \
    \ to their proven usefulness and wide deployment, they are formalized\n   in this\
    \ specification.\n   The ad-hoc MODE STREAM command, also documented in [NNTP-COMMON],\
    \ is\n   deprecated by this specification, but due to its ubiquity is\n   documented\
    \ here for backwards compatibility.\n"
- title: 1.1.  Conventions Used in this Document
  contents:
  - "1.1.  Conventions Used in this Document\n   The notational conventions used in\
    \ this document are the same as\n   those in [NNTP] and any term not defined in\
    \ this document has the\n   same meaning as in that one.\n   The key words \"\
    REQUIRED\", \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\",\n   \"MAY\", and\
    \ \"OPTIONAL\" in this document are to be interpreted as\n   described in \"Key\
    \ words for use in RFCs to Indicate Requirement\n   Levels\" [KEYWORDS].\n   This\
    \ document assumes you familiarity with NNTP [NNTP].  In general,\n   the connections\
    \ described below are from one peer to another, but we\n   will continue to use\
    \ \"client\" to mean the initiator of the NNTP\n   connection, and \"server\"\
    \ to mean the other endpoint.\n   In the examples, commands from the client are\
    \ indicated with [C], and\n   responses from the server are indicated with [S].\n"
- title: 2.  The STREAMING Extension
  contents:
  - "2.  The STREAMING Extension\n   This extension provides three new commands: MODE\
    \ STREAM, CHECK, and\n   TAKETHIS.  The capability label for this extension is\
    \ STREAMING.\n"
- title: 2.1.  Streaming Article Transfer
  contents:
  - "2.1.  Streaming Article Transfer\n   The STREAMING extension provides the same\
    \ functionality as the IHAVE\n   command ([NNTP] section 6.3.2) but splits the\
    \ query and transfer\n   functionality into the CHECK and TAKETHIS commands respectively.\n\
    \   This allows the CHECK and TAKETHIS commands to be pipelined ([NNTP]\n   section\
    \ 3.5) and provides for \"streaming\" article transfer.\n   A streaming client\
    \ will often pipeline many CHECK commands and use\n   the responses to construct\
    \ a list of articles to be sent by a\n   pipelined sequence of TAKETHIS commands,\
    \ thus increasing the fraction\n   of time spent transferring articles.  The CHECK\
    \ and TAKETHIS commands\n   utilize distinct response codes so that these commands\
    \ can be\n   intermingled in a pipeline and the response to any single command\
    \ can\n   be definitively identified by the client.\n   The client MAY send articles\
    \ via TAKETHIS without first querying the\n   server with CHECK.  The client SHOULD\
    \ NOT send every article in this\n   fashion unless explicitly configured to do\
    \ so by the site\n   administrator based on out-of-band information.  However,\
    \ the client\n   MAY use an adaptive strategy where it initially sends CHECK commands\n\
    \   for all articles, but switches to using TAKETHIS without CHECK if\n   most\
    \ articles are being accepted (over 95% acceptance might be a\n   reasonable metric\
    \ in some configurations).  If the client uses such a\n   strategy, it SHOULD\
    \ also switch back to using CHECK on all articles\n   if the acceptance rate ever\
    \ falls much below the threshold.\n"
- title: 2.2.  Advertising the STREAMING Extension
  contents:
  - "2.2.  Advertising the STREAMING Extension\n   A server supporting the streaming\
    \ commands described in this document\n   will advertise the \"STREAMING\" capability\
    \ label in response to the\n   CAPABILITIES command ([NNTP] section 5.2).  The\
    \ server MUST continue\n   to advertise this capability after a client has issued\
    \ the MODE\n   STREAM command.  This capability MAY be advertised both before\
    \ and\n   after any use of the MODE READER command ([NNTP] section 5.3), with\n\
    \   the same semantics.\n   Example of a client using CAPABILITIES and MODE STREAM\
    \ on a mode-\n   switching server:\n      [C] CAPABILITIES\n      [S] 101 Capability\
    \ list:\n      [S] VERSION 2\n      [S] MODE-READER\n      [S] IHAVE\n      [S]\
    \ LIST ACTIVE\n      [S] STREAMING\n      [S] .\n      [C] MODE STREAM\n     \
    \ [S] 203 Streaming permitted\n      [C] CAPABILITIES\n      [S] 101 Capability\
    \ list:\n      [S] VERSION 2\n      [S] MODE-READER\n      [S] IHAVE\n      [S]\
    \ LIST ACTIVE\n      [S] STREAMING\n      [S] .\n      [C] MODE READER\n     \
    \ [S] 200 Posting allowed\n      [C] CAPABILITIES\n      [S] 101 Capability list:\n\
    \      [S] VERSION 2\n      [S] READER\n      [S] POST\n      [S] LIST ACTIVE\
    \ NEWSGROUPS HEADERS\n      [S] HDR\n      [S] .\n"
- title: 2.3.  MODE STREAM Command
  contents:
  - "2.3.  MODE STREAM Command\n   Historically this command was used by a client\
    \ to discover if a\n   server supported the CHECK and TAKETHIS commands.  This\
    \ command is\n   deprecated in favor of the CAPABILITIES discovery command and\
    \ is only\n   provided here for compatibility with legacy implementations\n  \
    \ [NNTP-COMMON] of these transport commands.\n   New clients SHOULD use the CAPABILITIES\
    \ command to check a server for\n   support of the STREAMING extension but MAY\
    \ use the MODE STREAM\n   command for backwards compatibility with legacy servers\
    \ that don't\n   support the CAPABILITIES discovery command.  Servers MUST accept\
    \ the\n   MODE STREAM command for backwards compatibility with legacy clients\n\
    \   that don't use the CAPABILITIES discovery command.\n   NOTE: This command\
    \ may be removed from a future version of this\n   specification, therefore clients\
    \ are urged to transition to the\n   CAPABILITIES command wherever possible.\n"
- title: 2.3.1.  Usage
  contents:
  - "2.3.1.  Usage\n   Syntax\n      MODE STREAM\n   Responses\n      203   Streaming\
    \ permitted\n"
- title: 2.3.2.  Description
  contents:
  - "2.3.2.  Description\n   If a server supports this extension, it MUST return a\
    \ 203 response to\n   the MODE STREAM command (or 501 if an argument is given).\
    \  The MODE\n   STREAM command MUST NOT affect the server state in any way (that\
    \ is,\n   it is not a mode change despite the name), therefore this command MAY\n\
    \   be pipelined.  A server MUST NOT require that the MODE STREAM command\n  \
    \ be issued by the client before accepting the CHECK or TAKETHIS\n   commands.\n"
- title: 2.3.3.  Examples
  contents:
  - "2.3.3.  Examples\n   Example of a client checking the ability to stream articles\
    \ on a\n   server which does not support this extension:\n      [C] MODE STREAM\n\
    \      [S] 501 Unknown MODE variant\n   Example of a client checking the ability\
    \ to stream articles on a\n   server which supports this extension:\n      [C]\
    \ MODE STREAM\n      [S] 203 Streaming permitted\n"
- title: 2.4.  CHECK Command
  contents:
  - '2.4.  CHECK Command

    '
- title: 2.4.1.  Usage
  contents:
  - "2.4.1.  Usage\n   Syntax\n      CHECK message-id\n   Responses\n      238 message-id\
    \   Send article to be transferred\n      431 message-id   Transfer not possible;\
    \ try again later\n      438 message-id   Article not wanted\n   Parameters\n\
    \      message-id = Article message-id\n   The first parameter of the 238, 431,\
    \ and 438 responses MUST be the\n   message-id provided by the client as the parameter\
    \ to CHECK.\n"
- title: 2.4.2.  Description
  contents:
  - "2.4.2.  Description\n   The CHECK command informs the server that the client\
    \ has an article\n   with the specified message-id.  If the server desires a copy\
    \ of that\n   article, a 238 response MUST be returned, indicating that the client\n\
    \   may send the article using the TAKETHIS command.  If the server does\n   not\
    \ want the article (if, for example, the server already has a copy\n   of it),\
    \ a 438 response MUST be returned, indicating that the article\n   is not wanted.\
    \  Finally, if the article isn't wanted immediately but\n   the client should\
    \ retry later if possible (if, for example, another\n   client has offered to\
    \ send the same article to the server), a 431\n   response MUST be returned.\n\
    \   NOTE: The responses to CHECK are advisory; the server MUST NOT rely\n   on\
    \ the client to behave as requested by these responses.\n"
- title: 2.4.3.  Examples
  contents:
  - "2.4.3.  Examples\n   Example of a client checking whether the server would like\
    \ a set of\n   articles and getting a mixture of responses:\n      [C] CHECK <i.am.an.article.you.will.want@example.com>\n\
    \      [S] 238 <i.am.an.article.you.will.want@example.com>\n      [C] CHECK <i.am.an.article.you.have@example.com>\n\
    \      [S] 438 <i.am.an.article.you.have@example.com>\n      [C] CHECK <i.am.an.article.you.defer@example.com>\n\
    \      [S] 431 <i.am.an.article.you.defer@example.com>\n   Example of pipelining\
    \ the CHECK commands in the previous example:\n      [C] CHECK <i.am.an.article.you.will.want@example.com>\n\
    \      [C] CHECK <i.am.an.article.you.have@example.com>\n      [C] CHECK <i.am.an.article.you.defer@example.com>\n\
    \      [S] 238 <i.am.an.article.you.will.want@example.com>\n      [S] 438 <i.am.an.article.you.have@example.com>\n\
    \      [S] 431 <i.am.an.article.you.defer@example.com>\n"
- title: 2.5.  TAKETHIS Command
  contents:
  - '2.5.  TAKETHIS Command

    '
- title: 2.5.1.  Usage
  contents:
  - "2.5.1.  Usage\n   A client MUST NOT use this command unless the server advertises\
    \ the\n   STREAMING capability or returns a 203 response to the MODE STREAM\n\
    \   command.\n   Syntax\n      TAKETHIS message-id\n   Responses\n      239 message-id\
    \   Article transferred OK\n      439 message-id   Transfer rejected; do not retry\n\
    \   Parameters\n      message-id = Article message-id\n   The first parameter\
    \ of the 239 and 439 responses MUST be the\n   message-id provided by the client\
    \ as the parameter to TAKETHIS.\n"
- title: 2.5.2.  Description
  contents:
  - "2.5.2.  Description\n   The TAKETHIS command is used to send an article with\
    \ the specified\n   message-id to the server.  The article is sent immediately\
    \ following\n   the CRLF at the end of the TAKETHIS command line.  The client\
    \ MUST\n   send the entire article, including headers and body, to the server\
    \ as\n   a multi-line data block ([NNTP] section 3.1.1).  Thus, a single dot\n\
    \   (\".\") on a line indicates the end of the text, and lines starting\n   with\
    \ a dot in the original text have that dot doubled during\n   transmission.  The\
    \ server MUST return either a 239 response,\n   indicating that the article was\
    \ successfully transferred, or a 439\n   response, indicating that the article\
    \ was rejected.  If the server\n   encounters a temporary error that prevents\
    \ it from processing the\n   article but does not want to reject the article,\
    \ it MUST reply with a\n   400 response to the client and close the connection.\n\
    \   This function differs from the POST command in that it is intended\n   for\
    \ use in transferring already-posted articles between hosts.  It\n   SHOULD NOT\
    \ be used when the client is a personal news-reading\n   program, since use of\
    \ this command indicates that the article has\n   already been posted at another\
    \ site and is simply being forwarded\n   from another host.  However, despite\
    \ this, the server MAY elect not\n   to post or forward the article if, after\
    \ further examination of the\n   article, it deems it inappropriate to do so.\
    \  Reasons for such\n   subsequent rejection of an article may include problems\
    \ such as\n   inappropriate newsgroups or distributions, disk space limitations,\n\
    \   article lengths, garbled headers, and the like.  These are typically\n   restrictions\
    \ enforced by the server host's news software and not\n   necessarily by the NNTP\
    \ server itself.\n   The client SHOULD NOT assume that the article has been successfully\n\
    \   transferred unless it receives an affirmative response from the\n   server.\
    \  A lack of response (such as a dropped network connection or\n   a network timeout)\
    \ or a 400 response SHOULD be treated as a temporary\n   failure and cause the\
    \ transfer to be tried again later if possible.\n   Because some news server software\
    \ may not immediately be able to\n   determine whether an article is suitable\
    \ for posting or forwarding,\n   an NNTP server MAY acknowledge the successful\
    \ transfer of the article\n   (with a 239 response) but later silently discard\
    \ it.\n"
- title: 2.5.3.  Examples
  contents:
  - "2.5.3.  Examples\n   Example of streaming two articles to another site (the first\
    \ article\n   is accepted and the second is rejected):\n      [C] TAKETHIS <i.am.an.article.you.will.want@example.com>\n\
    \      [C] Path: pathost!demo!somewhere!not-for-mail\n      [C] From: \"Demo User\"\
    \ <nobody@example.com>\n      [C] Newsgroups: misc.test\n      [C] Subject: I\
    \ am just a test article\n      [C] Date: 6 Oct 1998 04:38:40 -0500\n      [C]\
    \ Organization: An Example Com, San Jose, CA\n      [C] Message-ID: <i.am.an.article.you.will.want@example.com>\n\
    \      [C]\n      [C] This is just a test article.\n      [C] .\n      [C] TAKETHIS\
    \ <i.am.an.article.you.have@example.com>\n      [C] Path: pathost!demo!somewhere!not-for-mail\n\
    \      [C] From: \"Demo User\" <nobody@example.com>\n      [C] Newsgroups: misc.test\n\
    \      [C] Subject: I am just a test article\n      [C] Date: 6 Oct 1998 04:38:40\
    \ -0500\n      [C] Organization: An Example Com, San Jose, CA\n      [C] Message-ID:\
    \ <i.am.an.article.you.have@example.com>\n      [C]\n      [C] This is just a\
    \ test article.\n      [C] .\n      [S] 239 <i.am.an.article.you.will.want@example.com>\n\
    \      [S] 439 <i.am.an.article.you.have@example.com>\n   Example of sending an\
    \ article to a site where the transfer fails:\n      [C] TAKETHIS <i.am.an.article.you.will.want@example.com>\n\
    \      [C] Path: pathost!demo!somewhere!not-for-mail\n      [C] From: \"Demo User\"\
    \ <nobody@example.com>\n      [C] Newsgroups: misc.test\n      [C] Subject: I\
    \ am just a test article\n      [C] Date: 6 Oct 1998 04:38:40 -0500\n      [C]\
    \ Organization: An Example Com, San Jose, CA\n      [C] Message-ID: <i.am.an.article.you.will.want@example.com>\n\
    \      [C]\n      [C] This is just a test article.\n      [C] .\n      [S] 400\
    \ Service temporarily unavailable\n      [Server closes connection.]\n"
- title: 3.  Augmented BNF Syntax for the STREAMING Extension
  contents:
  - "3.  Augmented BNF Syntax for the STREAMING Extension\n   This section describes\
    \ the formal syntax of the STREAMING extension\n   using ABNF [ABNF].  It extends\
    \ the syntax in section 9 of [NNTP], and\n   non-terminals not defined in this\
    \ document are defined there.  The\n   [NNTP] ABNF should be imported first before\
    \ attempting to validate\n   these rules.\n"
- title: 3.1.  Commands
  contents:
  - "3.1.  Commands\n   This syntax extends the non-terminal \"command\", which represents\
    \ an\n   NNTP command.\n   command =/ check-command /\n        mode-stream-command\
    \ /\n        takethis-command\n   check-command       = \"CHECK\" WS message-id\n\
    \   mode-stream-command = \"MODE\" WS \"STREAM\"\n   takethis-command    = \"\
    TAKETHIS\" WS message-id\n"
- title: 3.2.  Command Datastream
  contents:
  - "3.2.  Command Datastream\n   This syntax extends the non-terminal \"command-datastream\"\
    , which\n   represents the further material sent by the client in the case of\n\
    \   streaming commands.\n   command-datastream =/ takethis-datastream\n   takethis-datastream\
    \ = encoded-article\n"
- title: 3.3.  Responses
  contents:
  - "3.3.  Responses\n   This syntax extends the non-terminal \"initial-response-content\"\
    ,\n   which represents an initial response line sent by the server.\n   initial-response-content\
    \ =/ response-238-content /\n        response-239-content /\n        response-431-content\
    \ /\n        response-438-content /\n        response-439-content\n   response-238-content\
    \ = \"238\" SP message-id\n   response-239-content = \"239\" SP message-id\n \
    \  response-431-content = \"431\" SP message-id\n   response-438-content = \"\
    438\" SP message-id\n   response-439-content = \"439\" SP message-id\n"
- title: 3.4.  Capability Entries
  contents:
  - "3.4.  Capability Entries\n   This syntax extends the non-terminal \"capability-entry\"\
    , which\n   represents a capability that may be advertised by the server.\n  \
    \ capability-entry =/ streaming-capability\n   streaming-capability = \"STREAMING\"\
    \n"
- title: 4.  Summary of Response Codes
  contents:
  - "4.  Summary of Response Codes\n   This section contains a list of each new response\
    \ code defined in\n   this document and indicates whether it is multi-line, which\
    \ commands\n   can generate it, what arguments it has, and what its meaning is.\n\
    \   Response code 203\n      Generated by: MODE STREAM\n      Meaning: streaming\
    \ permitted.\n   Response code 238\n      Generated by: CHECK\n      1 argument:\
    \ message-id\n      Meaning: send article to be transferred.\n   Response code\
    \ 239\n      Generated by: TAKETHIS\n      1 argument: message-id\n      Meaning:\
    \ article transferred OK.\n   Response code 431\n      Generated by: CHECK\n \
    \     1 argument: message-id\n      Meaning: transfer not possible; try again\
    \ later.\n   Response code 438\n      Generated by: CHECK\n      1 argument: message-id\n\
    \      Meaning: article not wanted.\n   Response code 439\n      Generated by:\
    \ TAKETHIS\n      1 argument: message-id\n      Meaning: transfer rejected; do\
    \ not retry.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   No new security considerations are introduced\
    \ by this extension,\n   beyond those already described in the core specification\
    \ [NNTP].\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This section gives a formal definition of the STREAMING\
    \ extension as\n   required by Section 3.3.3 of [NNTP] for the IANA registry.\n\
    \   o  The STREAMING extension provides for streaming transfer of\n      articles.\n\
    \   o  The capability label for this extension is \"STREAMING\".\n   o  The capability\
    \ label has no arguments.\n   o  The extension defines three new commands, MODE\
    \ STREAM, CHECK, and\n      TAKETHIS, whose behavior, arguments, and responses\
    \ are defined in\n      Sections 2.3, 2.4, and 2.5 respectively.\n   o  The extension\
    \ does not associate any new responses with pre-\n      existing NNTP commands.\n\
    \   o  The extension does not affect the behavior of a server or client\n    \
    \  other than via the new commands.\n   o  The extension does not affect the maximum\
    \ length of commands or\n      initial response lines.\n   o  The extension does\
    \ not alter pipelining, and the MODE STREAM,\n      CHECK, and TAKETHIS commands\
    \ can be pipelined.\n   o  Use of this extension does not alter the capabilities\
    \ list.\n   o  The extension does not cause any pre-existing command to produce\
    \ a\n      401, 480, or 483 response.\n   o  Use of the MODE READER command on\
    \ a mode-switching server may\n      disable this extension.\n   o  Published\
    \ Specification: This document.\n   o  Contact for Further Information: Authors\
    \ of this document.\n   o  Change Controller: IESG <iesg@ietf.org>.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   This document is based heavily on the relevant sections\
    \ of RFC 2980\n   [NNTP-COMMON], by Stan Barber.\n   Special acknowledgement also\
    \ goes to Russ Allbery, Clive Feather,\n   Andrew Gierth, and others who commented\
    \ privately on intermediate\n   revisions of this document, as well as the members\
    \ of the IETF NNTP\n   Working Group for continual (yet sporadic) insight in discussion.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [ABNF]        Crocker, D., Ed. and P. Overell,\
    \ \"Augmented BNF for\n                 Syntax Specifications: ABNF\", RFC 4234,\
    \ October 2005.\n   [KEYWORDS]    Bradner, S., \"Key words for use in RFCs to\
    \ Indicate\n                 Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [NNTP]        Feather, C., \"Network News Transfer Protocol (NNTP)\",\n  \
    \               RFC 3977, October 2006.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [NNTP-COMMON] Barber, S., \"Common NNTP Extensions\"\
    , RFC 2980, October\n                 2000.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jeffrey M. Vinocur\n   Department of Computer Science\n\
    \   Upson Hall\n   Cornell University\n   Ithaca, NY  14853\n   EMail: vinocur@cs.cornell.edu\n\
    \   Kenneth Murchison\n   Carnegie Mellon University\n   5000 Forbes Avenue\n\
    \   Cyert Hall 285\n   Pittsburgh, PA  15213 USA\n   EMail: murch@andrew.cmu.edu\n"
- title: Full Copyright Statement
  contents:
  - 'Full Copyright Statement

    '
- title: Copyright (C) The Internet Society (2006).
  contents:
  - "Copyright (C) The Internet Society (2006).\n   This document is subject to the\
    \ rights, licenses and restrictions\n   contained in BCP 78, and except as set\
    \ forth therein, the authors\n   retain all their rights.\n   This document and\
    \ the information contained herein are provided on an\n   \"AS IS\" basis and\
    \ THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF\
    \ ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE DISCLAIM\
    \ ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO ANY WARRANTY\
    \ THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\
    \ IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
