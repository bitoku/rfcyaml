- title: __initial_text__
  contents:
  - "             IAB Concerns Regarding Congestion Control for\n                \
    \     Voice Traffic in the Internet\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses IAB concerns about effective end-to-end\n\
    \   congestion control for best-effort voice traffic in the Internet.\n   These\
    \ concerns have to do with fairness, user quality, and with the\n   dangers of\
    \ congestion collapse.  The concerns are particularly\n   relevant in light of\
    \ the absence of a widespread Quality of Service\n   (QoS) deployment in the Internet,\
    \ and the likelihood that this\n   situation will not change much in the near\
    \ term.  This document is\n   not making any recommendations about deployment\
    \ paths for Voice over\n   Internet Protocol (VoIP) in terms of QoS support, and\
    \ is not claiming\n   that best-effort service can be relied upon to give acceptable\n\
    \   performance for VoIP.  We are merely observing that voice traffic is\n   occasionally\
    \ deployed as best-effort traffic over some links in the\n   Internet, that we\
    \ expect this occasional deployment to continue, and\n   that we have concerns\
    \ about the lack of effective end-to-end\n   congestion control for this best-effort\
    \ voice traffic.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  An Example of the Potential for Trouble. . . . . . .\
    \ . . . . .  4\n   3.  Why are Persistent, High Drop Rates a Problem? . . . .\
    \ . . . .  6\n       3.1.  Congestion Collapse. . . . . . . . . . . . . . . .\
    \ . . .  6\n       3.2.  User Quality . . . . . . . . . . . . . . . . . . . .\
    \ . .  7\n       3.3.  The Amorphous Problem of Fairness. . . . . . . . . . .\
    \ .  8\n   4.  Current efforts in the IETF. . . . . . . . . . . . . . . . . .\
    \ 10\n       4.1.  RTP. . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n\
    \       4.2.  TFRC . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n  \
    \     4.3.  DCCP . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n    \
    \   4.4.  Adaptive Rate Audio Codecs . . . . . . . . . . . . . . . 12\n      \
    \ 4.5.  Differentiated Services and Related Topics . . . . . . . 13\n   5.  Assessing\
    \ Minimum Acceptable Sending Rates . . . . . . . . . . 13\n       5.1.  Drop Rates\
    \ at 4.75 kbps Minimum Sending Rate . . . . . . 17\n       5.2.  Drop Rates at\
    \ 64 kbps Minimum Sending Rate . . . . . . . 18\n       5.3.  Open Issues. . .\
    \ . . . . . . . . . . . . . . . . . . . . 18\n       5.4.  A Simple Heuristic\
    \ . . . . . . . . . . . . . . . . . . . 19\n   6. Constraints on VoIP Systems\
    \ . . . . . . . . . . . . . . . . . . 20\n   7.  Conclusions and Recommendations.\
    \ . . . . . . . . . . . . . . . 20\n   8.  Acknowledgements . . . . . . . . .\
    \ . . . . . . . . . . . . . . 21\n   9.  References . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 21\n       9.1.  Normative References . . . . . .\
    \ . . . . . . . . . . . . 21\n       9.2.  Informative References . . . . . .\
    \ . . . . . . . . . . . 22\n   10. Appendix - Sending Rates with Packet Drops\
    \ . . . . . . . . . . 26\n   11. Security Considerations. . . . . . . . . . .\
    \ . . . . . . . . . 29\n   12. IANA Considerations. . . . . . . . . . . . . .\
    \ . . . . . . . . 29\n   13. Authors' Addresses . . . . . . . . . . . . . . .\
    \ . . . . . . . 30\n   14. Full Copyright Statement . . . . . . . . . . . . .\
    \ . . . . . . 31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   While many in the telephony community assume that commercial\
    \ VoIP\n   service in the Internet awaits effective end-to-end QoS, in reality\n\
    \   voice service over best-effort broadband Internet connections is an\n   available\
    \ service now with growing demand.  While some ISPs deploy\n   QoS on their backbones,\
    \ and some corporate intranets offer end-to-end\n   QoS internally, end-to-end\
    \ QoS is not generally available to\n   customers in the current Internet.  Given\
    \ the current commercial\n   interest in VoIP on best-effort media connections,\
    \ it seems prudent\n   to examine the potential effect of real time flows on congestion.\
    \  In\n   this document, we perform such an analysis.  Note, however, that this\n\
    \   document is not making any recommendations about deployment paths for\n  \
    \ VoIP in terms of QoS support, and is not claiming that best-effort\n   service\
    \ can be relied upon to give acceptable performance for VoIP.\n   This document\
    \ is also not discussing signalling connections for VoIP.\n   However, voice traffic\
    \ is in fact occasionally deployed as best\n   effort traffic over some links\
    \ in the Internet today, and we expect\n   this occasional deployment to continue.\
    \  This document expresses our\n   concern over the lack of effective end-to-end\
    \ congestion control for\n   this best-effort voice traffic.\n   Assuming that\
    \ VoIP over best-effort Internet connections continues to\n   gain popularity\
    \ among consumers with broadband connections, the\n   deployment of end-to-end\
    \ QoS mechanisms in public ISPs may be slow.\n   The IETF has developed standards\
    \ for QoS mechanisms in the Internet\n   [DIFFSERV, RSVP] and continues to be\
    \ active in this area [NSIS,COPS].\n   However, the deployment of technologies\
    \ requiring change to the\n   Internet infrastructure is subject to a wide range\
    \ of commercial as\n   well as technical considerations, and technologies that\
    \ can be\n   deployed without changes to the infrastructure enjoy considerable\n\
    \   advantages in the speed of deployment.  RFC 2990 outlines some of the\n  \
    \ technical challenges to the deployment of QoS architectures in the\n   Internet\
    \ [RFC2990].  Often, interim measures that provide support for\n   fast-growing\
    \ applications are adopted, and are successful enough at\n   meeting the need\
    \ that the pressure for a ubiquitous deployment of the\n   more disruptive technologies\
    \ is reduced.  There are many examples of\n   the slow deployment of infrastructure\
    \ that are similar to the slow\n   deployment of QoS mechanisms, including IPv6,\
    \ IP multicast, or of a\n   global PKI for IKE and IPsec support.\n   Interim\
    \ QoS measures that can be deployed most easily include\n   single-hop or edge-only\
    \ QoS mechanisms for VoIP traffic on individual\n   congested links, such as edge-only\
    \ QoS mechanisms for cable access\n   networks.  Such local forms of QoS could\
    \ be quite successful in\n   protecting some fraction of best-effort VoIP traffic\
    \ from congestion.\n   However, these local forms of QoS are not directly visible\
    \ to the\n   end-to-end VoIP connection.  A best-effort VoIP connection could\n\
    \   experience high end-to-end packet drop rates, and be competing with\n   other\
    \ best-effort traffic, even if some of the links along the path\n   might have\
    \ single-hop QoS mechanisms.\n   The deployment of IP telephony is likely to include\
    \ best-effort\n   broadband connections to public-access networks, in addition\
    \ to other\n   deployment scenarios of dedicated IP networks, or as an alternative\n\
    \   to band splitting on the last mile of ADSL deployments or QoS\n   mechanisms\
    \ on cable access networks.  There already exists a\n   rapidly-expanding deployment\
    \ of VoIP services intended to operate\n   over residential broadband access links\
    \ (e.g., [FWD, Vonage]).  At\n   the moment, many public-access IP networks are\
    \ uncongested in the\n   core, with low or moderate levels of link utilization,\
    \ but this is\n   not necessarily the case on last hop links.  If an IP telephony\
    \ call\n   runs completely over the Internet, the connection could easily\n  \
    \ traverse congested links on both ends.  Because of economic factors,\n   the\
    \ growth rate of Internet telephony is likely to be greatest in\n   developing\
    \ countries, where core links are more likely to be\n   congested, making congestion\
    \ control an especially important topic\n   for developing countries.\n   Given\
    \ the possible deployment of IP telephony over congested best-\n   effort networks,\
    \ some concerns arise about the possibilities of\n   congestion collapse due to\
    \ a rapid growth in real-time voice traffic\n   that does not practice end-to-end\
    \ congestion control.  This document\n   raises some concerns about fairness,\
    \ user quality, and the danger of\n   congestion collapse that would arise from\
    \ a rapid growth in best-\n   effort telephony traffic on best-effort networks.\
    \  We consider best-\n   effort telephony connections that have a minimum sending\
    \ rate and\n   that compete directly with other best-effort traffic on a path\
    \ with\n   at least one congested link, and address the specific question of\n\
    \   whether such traffic should be required to terminate, or to suspend\n   sending\
    \ temporarily, in the face of a persistent, high packet drop\n   rate, when reducing\
    \ the sending rate is not a viable alternative.\n   The concerns in this document\
    \ about fairness and the danger of\n   congestion collapse apply not only to telephony\
    \ traffic, but also to\n   video traffic and other best-effort real-time traffic\
    \ with a minimum\n   sending rate.  RFC 2914 already makes the point that best-effort\n\
    \   traffic requires end-to-end congestion control [RFC2914].  Because\n   audio\
    \ traffic sends at such a low rate, relative to video and other\n   real-time\
    \ traffic, it is sometimes claimed that audio traffic doesn't\n   require end-to-end\
    \ congestion control.  Thus, while the concerns in\n   this document are general,\
    \ the document focuses on the particular\n   issue of best-effort audio traffic.\n\
    \   Feedback can be sent to the IAB mailing list at iab@ietf.org, or to\n   the\
    \ editors at floyd@icir.org and kempf@docomolabs-usa.com.  Feedback\n   can also\
    \ be sent to the end2end-interest mailing list [E2E].\n"
- title: 2.  An Example of the Potential for Trouble
  contents:
  - "2.  An Example of the Potential for Trouble\n   At the November, 2002, IEPREP\
    \ Working Group meeting in Atlanta, a\n   brief demonstration was made of VoIP\
    \ over a shared link between a\n   hotel room in Atlanta, Georgia, USA, and Nairobi,\
    \ Kenya.  The link\n   ran over the typical uncongested Internet backbone and\
    \ access links\n   to peering points between either endpoint and the Internet\
    \ backbone.\n   The voice quality on the call was very good, especially in comparison\n\
    \   to the typical quality obtained by a circuit-switched call with\n   Nairobi.\
    \  A presentation that accompanied the demonstration described\n   the access\
    \ links (e.g., DSL, T1, T3, dialup, and cable modem links)\n   as the primary\
    \ source of network congestion, and described VoIP\n   traffic as being a very\
    \ small percentage of the packets in commercial\n   ISP traffic [A02].  The presentation\
    \ further stated that VoIP\n   received good quality in the presence of packet\
    \ drop rates of 5-40%\n   [AUT].  The VoIP call used an ITU-T G.711 codec, plus\
    \ proprietary FEC\n   encoding, plus RTP/UDP/IP framing.  The resulting traffic\
    \ load over\n   the Internet was substantially more than the 64 kbps required\
    \ by the\n   codec.  The primary congestion point along the path of the\n   demonstration\
    \ was a 128 kbps access link between an ISP in Kenya and\n   several of its subscribers\
    \ in Nairobi.  So the single VoIP call\n   consumed more than half of the access\
    \ link capacity, capacity that is\n   shared across several different users.\n\
    \   Note that this network configuration is not a particularly good one\n   for\
    \ VoIP.  In particular, if there are data services running TCP on\n   the link\
    \ with a typical packet size of 1500 bytes, then some voice\n   packets could\
    \ be delayed an additional 90 ms, which might cause an\n   increase in the end\
    \ to end delay above the ITU-recommended time of\n   150 ms [G.114] for speech\
    \ traffic.  This would result in a delay\n   noticeable to users, with an increased\
    \ variation in delay, and\n   therefore in call quality, as the bursty TCP traffic\
    \ comes and goes.\n   For a call that already had high delay, such as the Nairobi\
    \ call from\n   the previous paragraph, the increased jitter due to competing\
    \ TCP\n   traffic also increases the requirements on the jitter buffer at the\n\
    \   receiver.  Nevertheless, VoIP usage over congested best-effort links\n   is\
    \ likely to increase in the near future, regardless of VoIP's\n   superior performance\
    \ with \"carrier class\" service.  A best-effort\n   VoIP connection that persists\
    \ in sending packets at 64 Kbps,\n   consuming half of a 128 Kbps access link,\
    \ in the face of a drop rate\n   of 40%, with the resulting user-perceptible degradation\
    \ in voice\n   quality, is not behaving in a way that serves the interests of\
    \ either\n   the VoIP users or the other concurrent users of the network.\n  \
    \ As the Nairobi connection demonstrates, prescribing universal\n   overprovisioning\
    \ (or more precisely, provisioning sufficient to avoid\n   persistent congestion)\
    \ as the solution to the problem is not an\n   acceptable generic solution.  For\
    \ example, in regions of the world\n   where circuit-switched telephone service\
    \ is poor and expensive, and\n   Internet access is possible and lower cost, provisioning\
    \ all Internet\n   links to avoid congestion is likely to be impractical or impossible.\n\
    \   In particular, an over-provisioned core is not by itself sufficient\n   to\
    \ avoid congestion collapse all the way along the path, because an\n   over-provisioned\
    \ core can not address the common problem of\n   congestion on the access links.\
    \  Many access links routinely suffer\n   from congestion.  It is important to\
    \ avoid congestion collapse along\n   the entire end-to-end path, including along\
    \ the access links (where\n   congestion collapse would consist of congested access\
    \ links wasting\n   scarce bandwidth carrying packets that will only be dropped\n\
    \   downstream).  So an over-provisioned core does not by itself\n   eliminate\
    \ or reduce the need for end-to-end congestion avoidance and\n   control.\n  \
    \ There are two possible mechanisms for avoiding this congestion\n   collapse:\
    \ call rejection during busy periods, or the use of end-to-\n   end congestion\
    \ control.  Because there are currently no\n   acceptance/rejection mechanisms\
    \ for best-effort traffic in the\n   Internet, the only alternative is the use\
    \ of end-to-end congestion\n   control.  This is important even if end-to-end\
    \ congestion control is\n   invoked only in those very rare scenarios with congestion\
    \ in\n   generally-uncongested access links or networks.  There will always be\n\
    \   occasional periods of high demand, e.g., in the two hours after an\n   earthquake\
    \ or other disaster, and this is exactly when it is\n   important to avoid congestion\
    \ collapse.\n   Best-effort traffic in the Internet does not include mechanisms\
    \ for\n   call acceptance or rejection.  Instead, a best-effort network itself\n\
    \   is largely neutral in terms of resource management, and the\n   interaction\
    \ of the applications' transport sessions mutually\n   regulates network resources\
    \ in a reasonably fair fashion.  One way to\n   bring voice into the best-effort\
    \ environment in a non-disruptive\n   manner is to focus on the codec and look\
    \ at rate adaptation measures\n   that can successfully interoperate with existing\
    \ transport protocols\n   (e.g., TCP), while at the same time preserving the integrity\
    \ of a\n   real-time, analog voice signal; another way is to consider codecs\n\
    \   with fixed sending rates.  Whether the codec has a fixed or variable\n   sending\
    \ rate, we consider the appropriate response when the codec is\n   at its minimum\
    \ data rate, and the packet drop rate experienced by the\n   flow remains high.\
    \  This is the key issue addressed in this document.\n"
- title: 3.  Why are Persistent, High Drop Rates a Problem?
  contents:
  - "3.  Why are Persistent, High Drop Rates a Problem?\n   Persistent, high packet\
    \ drop rates are rarely seen in the Internet\n   today, in the absence of routing\
    \ failures or other major disruptions.\n   This happy situation is due primarily\
    \ to low levels of link\n   utilization in the core, with congestion typically\
    \ found on lower-\n   capacity access links, and to the use of end-to-end congestion\n\
    \   control in TCP.  Most of the traffic on the Internet today uses TCP,\n   and\
    \ TCP self-corrects so that the two ends of a connection reduce the\n   rate of\
    \ packet sending if congestion is detected.  In the sections\n   below, we discuss\
    \ some of the problems caused by persistent, high\n   packet drop rates.\n"
- title: 3.1.  Congestion Collapse
  contents:
  - "3.1.  Congestion Collapse\n   One possible problem caused by persistent, high\
    \ packet drop rates is\n   that of congestion collapse.  Congestion collapse was\
    \ first observed\n   during the early growth phase of the Internet of the mid\
    \ 1980s\n   [RFC896], and the fix was provided by Van Jacobson, who developed\
    \ the\n   congestion control mechanisms that are now required in TCP\n   implementations\
    \ [Jacobson88, RFC2581].\n   As described in RFC 2914, congestion collapse occurs\
    \ in networks with\n   flows that traverse multiple congested links having persistent,\
    \ high\n   packet drop rates [RFC2914].  In particular, in this scenario packets\n\
    \   that are injected onto congested links squander scarce bandwidth\n   since\
    \ these packets are only dropped later, on a downstream congested\n   link.  If\
    \ congestion collapse occurs, all traffic slows to a crawl\n   and nobody gets\
    \ acceptable packet delivery or acceptable performance.\n   Because congestion\
    \ collapse of this form can occur only for flows\n   that traverse multiple congested\
    \ links, congestion collapse is a\n   potential problem in VoIP networks when\
    \ both ends of the VoIP call\n   are on an congested broadband connection such\
    \ as DSL, or when the\n   call traverses a congested backbone or transoceanic\
    \ link.\n"
- title: 3.2.  User Quality
  contents:
  - "3.2.  User Quality\n   A second problem with persistent, high packet drop rates\
    \ concerns\n   service quality seen by end users.  Consider a network scenario\
    \ where\n   each flow traverses only one congested link, as could have been the\n\
    \   case in the Nairobi demonstration above.  For example, imagine N VoIP\n  \
    \ flows sharing a 128 Kbps link, with each flow sending at least 64\n   Kbps.\
    \  For simplicity, suppose the 128 Kbps link is the only\n   congested link, and\
    \ there is no traffic on that link other than the N\n   VoIP calls.  We will also\
    \ ignore for now the extra bandwidth used by\n   the telephony traffic for FEC\
    \ and packet headers, or the reduced\n   bandwidth (often estimated as 70%) due\
    \ to silence suppression.  We\n   also ignore the fact that the two streams composing\
    \ a bidirectional\n   VoIP call, one for each direction, can in practice add to\
    \ the load on\n   some links of the path.  Given these simplified assumptions,\
    \ the\n   arrival rate to that link is at least N*64 Kbps.  The traffic\n   actually\
    \ forwarded is at most 2*64 Kbps (the link bandwidth), so at\n   least (N-2)*64\
    \ Kbps of the arriving traffic must be dropped.  Thus, a\n   fraction of at least\
    \ (N-2)/N of the arriving traffic is dropped, and\n   each flow receives on average\
    \ a fraction 1/N of the link bandwidth.\n   An important point to note is that\
    \ the drops occur randomly, so that\n   no one flow can be expected statistically\
    \ to present better quality\n   service to users than any other.  Everybody's\
    \ voice quality therefore\n   suffers.\n   It seems clear from this simple example\
    \ that the quality of best-\n   effort VoIP traffic over congested links can be\
    \ improved if each VoIP\n   flow uses end-to-end congestion control, and has a\
    \ codec that can\n   adapt the bit rate to the bandwidth actually received by\
    \ that flow.\n   The overall effect of these measures is to reduce the aggregate\n\
    \   packet drop rate, thus improving voice quality for all VoIP users on\n   the\
    \ link.  Today, applications and popular codecs for Internet\n   telephony attempt\
    \ to compensate by using more FEC, but controlling\n   the packet flow rate directly\
    \ should result in less redundant FEC\n   information, and thus less bandwidth,\
    \ thereby improving throughput\n   even further.  The effect of delay and packet\
    \ loss on VoIP in the\n   presence of FEC has been investigated in detail in the\
    \ literature\n   [JS00, JS02, JS03, MTK03].  One rule of thumb is that when the\
    \ packet\n   loss rate exceeds 20%, the audio quality of VoIP is degraded beyond\n\
    \   usefulness, in part due to the bursty nature of the losses [S03].  We\n  \
    \ are not aware of measurement studies of whether VoIP users in\n   practice tend\
    \ to hang up when packet loss rates exceed some limit.\n   The simple example\
    \ in this section considered only voice flows, but\n   in reality, VoIP traffic\
    \ will compete with other flows, most likely\n   TCP.  The response of VoIP traffic\
    \ to congestion works best by taking\n   into account the congestion control response\
    \ of TCP, as is discussed\n   in the next subsection.\n"
- title: 3.3.  The Amorphous Problem of Fairness
  contents:
  - "3.3.  The Amorphous Problem of Fairness\n   A third problem with persistent,\
    \ high packet drop rates is fairness.\n   In this document we consider fairness\
    \ with regard to best-effort VoIP\n   traffic competing with other best-effort\
    \ traffic in the Internet.\n   That is, we are explicitly not addressing the issues\
    \ raised by\n   emergency services, or by QoS-enabled traffic that is known to\
    \ be\n   treated separately from best-effort traffic at a congested link.\n  \
    \ While fairness is a bit difficult to quantify, we can illustrate the\n   effect\
    \ by adding TCP traffic to the congested link discussed in the\n   previous section.\
    \  In this case, the non-congestion-controlled\n   traffic and congestion-controlled\
    \ TCP traffic [RFC2914] share the\n   link, with the congestion-controlled traffic's\
    \ sending rate\n   determined by the packet drop rate experienced by those flows.\
    \  As in\n   the previous section, the 128 Kbps link has N VoIP connections each\n\
    \   sending 64 Kbps, resulting in packet drop rate of at least (N-2)/N on\n  \
    \ the congested link.  Competing TCP flows will experience the same\n   packet\
    \ drop rates.  However, a TCP flow experiencing the same packet\n   drop rates\
    \ will be sending considerably less than 64 Kbps.  From the\n   point of view\
    \ of who gets what amount of bandwidth, the VoIP traffic\n   is crowding out the\
    \ TCP traffic.\n   Of course, this is only one way to look at fairness.  The relative\n\
    \   fairness between VoIP and TCP traffic can be viewed several different\n  \
    \ ways, depending on the assumptions that one makes on packet sizes and\n   round-trip\
    \ times.  In the presence of a fixed packet drop rate, for\n   example, a TCP\
    \ flow with larger packets sends more (in Bps, bytes per\n   second) than a TCP\
    \ flow with smaller packets, and a TCP flow with a\n   shorter round-trip time\
    \ sends more (in Bps) than a TCP flow with a\n   larger round-trip time.  In environments\
    \ with high packet drop rates,\n   TCP's sending rate depends on the algorithm\
    \ for setting the\n   retransmit timer (RTO) as well, with a TCP implementation\
    \ having a\n   more aggressive RTO setting sending more than a TCP implementation\n\
    \   having a less aggressive RTO setting.\n   Unfortunately, there is no obvious\
    \ canonical round-trip time for\n   judging relative fairness of flows in the\
    \ network.  Agreement in the\n   literature is that the majority of packets on\
    \ most links in the\n   network experience round-trip times between 10 and 500\
    \ ms [RTTWeb].\n   (This does not include satellite links.)  As a result, if there\
    \ was a\n   canonical round-trip for judging relative fairness, it would have\
    \ to\n   be within that range.  In the absence of a single representative\n  \
    \ round-trip time, the assumption of this paper is that it is\n   reasonable to\
    \ consider fairness between a VoIP connection and a TCP\n   connection with the\
    \ same round-trip time.\n   Similarly, there is no canonical packet size for judging\
    \ relative\n   fairness between TCP connections.  However, because the most common\n\
    \   packet size for TCP data packets is 1460 bytes [Measurement], we\n   assume\
    \ that it is reasonable to consider fairness between a VoIP\n   connection, and\
    \ a TCP connection sending 1460-byte data packets.\n   Note that 1460 bytes is\
    \ considerably larger than is typically used\n   for VoIP packets.\n   In the\
    \ same way, while RFC 2988 specifies TCP's algorithm for setting\n   TCP's RTO,\
    \ there is no canonical value for the minimum RTO, and the\n   minimum RTO heavily\
    \ affects TCP's sending rate in times of high\n   congestion [RFC2988].  RFC 2988\
    \ specifies that TCP's RTO must be set\n   to SRTT + 4*RTTVAR, for SRTT the smoothed\
    \ round-trip time, and for\n   RTTVAR the mean deviation of recent round-trip\
    \ time measurements.\n   RFC 2988 further states that the RTO \"SHOULD\" have\
    \ a minimum value of\n   1 second.  However, it is not uncommon in practice for\
    \ TCP\n   implementations to have a minimum RTO as low as 100 ms.  For the\n \
    \  purposes of this document, in considering relative fairness, we will\n   assume\
    \ a minimum RTO of 100 ms.\n   As an additional complication, TCP connections\
    \ that use fine-grained\n   timestamps can have considerably higher sending rates\
    \ than TCP\n   connections that do not use timestamps, in environments with high\n\
    \   packet drop rates.  For TCP connections with fine-grained timestamps,\n  \
    \ a valid round-trip time measurement is obtained when a retransmitted\n   packet\
    \ is successfully received and acknowledged by the receiver; in\n   this case\
    \ a backed-off retransmit timer can be un-backed-off as well.\n   For TCP connections\
    \ without timestamps, a valid round-trip time\n   measurement is only obtained\
    \ when the transmission of a new packet is\n   received and acknowledged by the\
    \ receiver.  This limits the\n   opportunities for the un-backing-off of a backed-off\
    \ retransmit\n   timer.  In this document, in considering relative fairness, we\
    \ use a\n   TCP connection without timestamps, since this is the dominant use\
    \ of\n   TCP in the Internet.\n   A separate claim that has sometimes been raised\
    \ in terms of fairness\n   is that best-effort VoIP traffic is inherently more\
    \ important that\n   other best-effort traffic (e.g., web surfing, peer-to-peer\
    \ traffic,\n   or multi-player games), and therefore merits a larger share of\
    \ the\n   bandwidth in times of high congestion.  Our assumption in this\n   document\
    \ is that TCP traffic includes pressing email messages,\n   business documents,\
    \ and emergency information downloaded from web\n   pages, as well as the more\
    \ recreational uses cited above.  Thus, we\n   do not agree that best-effort VoIP\
    \ traffic should be exempt from\n   end-to-end congestion control due to any claims\
    \ of inherently more\n   valuable content.  (One could equally logically argue\
    \ that because\n   email and instant messaging are more efficient forms of communication\n\
    \   than VoIP in terms of bandwidth usage, as a result email and instant\n   messaging\
    \ are more valuable uses of scarce bandwidth in times of high\n   congestion.)\
    \  In fact, the network is incapable of making a judgment\n   about the relative\
    \ user value of traffic.  The default assumption is\n   that all best-effort traffic\
    \ has equal value to the network provider\n   and to the user.\n   We note that\
    \ this discussion of relative fairness does not in any way\n   challenge the right\
    \ of ISPs to allocate bandwidth on congested links\n   to classes of traffic in\
    \ any way that they choose.  (For example,\n   administrators rate-limit the bandwidth\
    \ used by peer-to-peer traffic\n   on some links in the network, to ensure that\
    \ bandwidth is also\n   available for other classes of traffic.)  This discussion\
    \ merely\n   argues that there is no reason for entire classes of best-effort\n\
    \   traffic to be exempt from end-to-end congestion control.\n"
- title: 4.  Current efforts in the IETF
  contents:
  - "4.  Current efforts in the IETF\n   There are four efforts currently underway\
    \ in IETF to address issues\n   of congestion control for real time traffic: an\
    \ upgrade of the RTP\n   specification, TFRC, DCCP, and work on audio codecs.\n"
- title: 4.1.  RTP
  contents:
  - "4.1.  RTP\n   RFC 1890, the original RTP Profile for Audio and Video Control,\
    \ does\n   not discuss congestion control [RFC1890].  The revised document on\n\
    \   \"RTP Profile for Audio and Video Conferences with Minimal Control\"\n   [RFC3551]\
    \ discusses congestion control in Section 2.  [RFC3551] says\n   the following:\n\
    \      \"If best-effort service is being used, RTP receivers SHOULD\n      monitor\
    \ packet loss to ensure that the packet loss rate is within\n      acceptable\
    \ parameters.  Packet loss is considered acceptable if a\n      TCP flow across\
    \ the same network path and experiencing the same\n      network conditions would\
    \ achieve an average throughput, measured\n      on a reasonable timescale, that\
    \ is not less than the RTP flow is\n      achieving.  This condition can be satisfied\
    \ by implementing\n      congestion control mechanisms to adapt the transmission\
    \ rate (or\n      the number of layers subscribed for a layered multicast session),\n\
    \      or by arranging for a receiver to leave the session if the loss\n     \
    \ rate is unacceptably high.\"\n      \"The comparison to TCP cannot be specified\
    \ exactly, but is\n      intended as an \"order-of-magnitude\" comparison in timescale\
    \ and\n      throughput.  The timescale on which TCP throughput is measured is\n\
    \      the round-trip time of the connection.  In essence, this\n      requirement\
    \ states that it is not acceptable to deploy an\n      application (using RTP\
    \ or any other transport protocol) on the\n      best-effort Internet which consumes\
    \ bandwidth arbitrarily and does\n      not compete fairly with TCP within an\
    \ order of magnitude.\"\n   Note that [RFC3551] says that receivers \"SHOULD\"\
    \ monitor packet loss.\n   [RFC3551] does not explicitly say that the RTP senders\
    \ and receivers\n   \"MUST\" detect and respond to a persistent high loss rate.\
    \  Since\n   congestion collapse can be considered a \"danger to the Internet\"\
    \ the\n   use of \"MUST\" would be appropriate for RTP traffic in the best-effort\n\
    \   Internet, where the VoIP traffic shares a link with other traffic,\n   since\
    \ \"danger to the Internet\" is one of two criteria given in RFC\n   2119 for\
    \ the use of \"MUST\" [RFC2119].  Different requirements may\n   hold for a private\
    \ best-effort IP network provisioned solely for\n   VoIP, where the VoIP traffic\
    \ does not interact with the wider\n   Internet.\n"
- title: 4.2.  TFRC
  contents:
  - "4.2.  TFRC\n   As mentioned in RFC 3267, equation-based congestion control is\
    \ one of\n   the possibilities for VoIP.  TCP Friendly Rate Control (TFRC) is\
    \ the\n   equation-based congestion control mechanism that has been\n   standardized\
    \ in the IETF.  The TFRC specification, \"TCP Friendly Rate\n   Control (TFRC):\
    \ Protocol Specification\" [RFC3448], says the\n   following:\n      \"TFRC ...\
    \ is reasonably fair when competing for bandwidth with TCP\n      flows, but has\
    \ a much lower variation of throughput over time\n      compared with TCP, making\
    \ it more suitable for applications such\n      as telephony or streaming media\
    \ where a relatively smooth sending\n      rate is of importance.  ...  TFRC is\
    \ designed for applications\n      that use a fixed packet size, and vary their\
    \ sending rate in\n      packets per second in response to congestion.  Some audio\n\
    \      applications require a fixed interval of time between packets and\n   \
    \   vary their packet size instead of their packet rate in response to\n     \
    \ congestion.  The congestion control mechanism in this document\n      cannot\
    \ be used by those applications; TFRC-PS (for TFRC-\n      PacketSize) is a variant\
    \ of TFRC for applications that have a\n      fixed sending rate but vary their\
    \ packet size in response to\n      congestion.  TFRC-PS will be specified in\
    \ a later document.\"\n   There is no draft available for TFRC-PS yet, unfortunately,\
    \ but\n   several researchers are still working on these issues.\n"
- title: 4.3.  DCCP
  contents:
  - "4.3.  DCCP\n   The Datagram Congestion Control Protocol (DCCP) is a transport\n\
    \   protocol being standardized in the IETF for unreliable flows, with\n   the\
    \ application being able to specify either TCP-like or TFRC\n   congestion control\
    \ [DCCP03].\n   DCCP currently has two Congestion Control IDentifiers or CCIDs;\
    \ these\n   are CCID 2 for TCP-like congestion control and CCID 3 for TFRC\n \
    \  congestion control.  As TFRC-PS becomes available and goes through\n   the\
    \ standards process, we would expect DCCP to create a new CCID,\n   CCID 4, for\
    \ use with TFRC-PS congestion control.\n"
- title: 4.4.  Adaptive Rate Audio Codecs
  contents:
  - "4.4.  Adaptive Rate Audio Codecs\n   A critical component in the design of any\
    \ real-time application is\n   the selection of appropriate codecs, specifically\
    \ codecs that operate\n   at a low sending rate, or that will reduce the sending\
    \ rate as\n   throughput decreases and/or packet loss increases.  Absent this,\
    \ and\n   in the absence of the response to congestion recommended in this\n \
    \  document, the real-time application is likely to significantly\n   increase\
    \ the risk of Internet congestion collapse, thereby adversely\n   impacting the\
    \ health of the deployed Internet.  If the codec is\n   capable of reducing its\
    \ bit rate in response to congestion, this\n   improves the scaling of the number\
    \ of VoIP or TCP sessions capable of\n   sharing a congested link while still\
    \ providing acceptable performance\n   to users.  Many current audio codecs are\
    \ capable of sending at a low\n   bit rate, in some cases adapting their sending\
    \ rate in response to\n   congestion indications from the network.\n   RFC 3267\
    \ describes RTP payload formats for use with the Adaptive\n   Multi-Rate (AMR)\
    \ and Adaptive Multi-Rate Wideband (AMR-WB) audio\n   codecs [RFC 3267].  The\
    \ AMR codec supports eight speech encoding\n   modes having bit rates between\
    \ 4.75 and 12.2 kbps, with the speech\n   encoding performed on 20 ms speech frames,\
    \ and is able to reduce the\n   transmission rate during silence periods.  The\
    \ payload format\n   specified in RFC 3267 includes forward error correction (FEC)\
    \ and\n   frame interleaving to increase robustness against packet loss\n   somewhat.\
    \  The AMR codec was chosen by the Third Generation\n   Partnership Project (3GPP)\
    \ as the mandatory codec for third\n   generation (3G) cellular systems, and RFC\
    \ 3267 recommends that AMR or\n   AMR-WB applications using the RTP payload format\
    \ specified in RFC\n   3267 use congestion control, though no specific mechanism\
    \ is\n   recommended.  RFC 3267 gives \"Equation-Based Congestion Control for\n\
    \   Unicast Applications\" as an example of a congestion control mechanism\n \
    \  suitable for real-time flows [FHPW00].\n   The \"Internet Low Bit Rate Codec\"\
    , iLBC, is an IETF effort to develop\n   an IPR-free codec for robust voice communication\
    \ over IP [ILBRC].\n   The codec is designed for graceful speech quality degradation\
    \ in the\n   case of lost packets, and has a payload bit rate of 13.33 kbps for\
    \ 30\n   ms frames or 15.20 kbps for 20 ms frames.\n   There are several unencumbered\
    \ low-rate codec algorithms in Ivox (the\n   Interactive VOice eXchange) [IVOX],\
    \ with plans to add additional\n   variable rate codecs.  For example, LPC2400\
    \ (a.k.a. LQ2400) is a 2400\n   bps LPC based codec with an enhancement to permit\
    \ \"silence\n   detection\".  The 2400 bps codec is reported to have a \"slight\
    \ robotic\n   quality\" [A03] (even without the additional complications of packet\n\
    \   loss).  The older multirate codec described in [KFK79, KF82] is an\n   LPC\
    \ codec that works at two rates, 2.4 kbps and 9.6 kbps, and can\n   optionally\
    \ send additional \"residual\" bits for enhanced quality at a\n   higher bit rate.\n\
    \   Off-the-shelf ITU-T vocoders such as G.711 were generally designed\n   explicitly\
    \ for circuit-switched networks and are not as well-adapted\n   for Internet use,\
    \ even with the addition of FEC on top.\n"
- title: 4.5.  Differentiated Services and Related Topics
  contents:
  - "4.5.  Differentiated Services and Related Topics\n   The Differentiated Services\
    \ Working Group [DIFFSERV], which concluded\n   in 2003, completed standards for\
    \ the Differentiated Services Field\n   (DS Field) in the IPv4 and IPv6 Headers\
    \ [RFC2474], including several\n   per-hop forwarding behaviors [RFC2597, RFC3246].\
    \  The Next Steps in\n   Signaling Working Group [NSIS] is developing an optimized\
    \ signalling\n   protocol for QoS, based in part on earlier work of the Resource\n\
    \   Reservation Setup Protocol Working Group [RSVP].  We do not discuss\n   these\
    \ and related efforts further in this document, since this\n   document concerns\
    \ only that VoIP traffic that might be carried as\n   best-effort traffic over\
    \ some congested link in the Internet.\n"
- title: 5.  Assessing Minimum Acceptable Sending Rates
  contents:
  - "5.  Assessing Minimum Acceptable Sending Rates\n   Current IETF work in the DCCP\
    \ and AVT working groups does not\n   consider the problem of applications that\
    \ have a minimum sending rate\n   and are not able to go below that sending rate.\
    \  This clearly must be\n   addressed in the TFRC-PS draft.  As suggested in the\
    \ RTP document, if\n   the loss rate is persistently unacceptably high relative\
    \ to the\n   current sending rate, and the best-effort application is unable to\n\
    \   lower its sending rate, then the only acceptable answer is for that\n   flow\
    \ to discontinue sending on that link.  For a multicast session,\n   this could\
    \ be accomplished by the receiver withdrawing from the\n   multicast group.  For\
    \ a unicast session, this could be accomplished\n   by the unicast connection\
    \ terminating, at least for a period of time.\n   We can formulate a problem statement\
    \ for the minimum sending rate in\n   the following way.  Consider a best-effort,\
    \ adaptive audio\n   application that is able to adapt down to a minimum sending\
    \ rate of N\n   Bps (bytes per second) of application data, sending M packets\
    \ per\n   second.  Is this a sufficiently low sending rate that the best-effort\n\
    \   flow is never required to terminate due to congestion, or to reduce\n   its\
    \ sending rate in packets per second still further? In other words,\n   is N Bps\
    \ an acceptable minimum sending rate for the application,\n   which can be continued\
    \ in the face of congestion without terminating\n   or suspending the application?\n\
    \   We assume, generously for VoIP, that the limitation of the network is\n  \
    \ in bandwidth in bytes per second (Bps), and not in CPU cycles or in\n   packets\
    \ per second (pps).  If the limitation in the network is in\n   bandwidth, this\
    \ is a limitation in Bps, while if the limitation is in\n   router processing\
    \ capacity in packets, this would be a limitation in\n   pps.  We note that TCP\
    \ sends fixed-size data packets, and reduces its\n   sending rate in pps when\
    \ it adapts to network congestion, thus\n   reducing the load on the forward path\
    \ both in Bps and in pps.  In\n   contrast, for adaptive VoIP applications, the\
    \ adaption is sometimes\n   to keep the same sending rate in pps, but to reduce\
    \ the packet size,\n   reducing the sending rate in Bps.  This fits the needs\
    \ of audio as an\n   application, and is a good response on a network path where\
    \ the\n   limitation is in Bps.  Such behavior would be a less appropriate\n \
    \  response for a network path where the limitation is in pps.\n   If the network\
    \ limitation in fact is in Bps, then all that matters in\n   terms of congestion\
    \ is a flow's sending rate on the wire in Bps.  If\n   this assumption of a network\
    \ limitation in Bps is false, then the\n   sending rate in pps could contribute\
    \ to congestion even when the\n   sending rate in Bps is quite moderate.  While\
    \ the ideal would be to\n   have a transport protocol that is able to detect whether\
    \ the\n   bottleneck links along the path are limited in Bps or in pps, and to\n\
    \   respond appropriately when the limitation is in pps, such an ideal is\n  \
    \ hard to achieve. We would not want to delay the deployment of\n   congestion\
    \ control for telephony traffic until such an ideal could be\n   accomplished.\
    \  In addition, we note that the current TCP congestion\n   control mechanisms\
    \ are themselves not very effective in an\n   environment where there is a limitation\
    \ along the reverse path in\n   pps.  While the TCP mechanisms do provide an incentive\
    \ to use large\n   data packets, TCP does not include any effective congestion\
    \ control\n   mechanisms for the stream of small acknowledgement packets on the\n\
    \   reverse path.  Given the arguments above, it seems acceptable to us\n   to\
    \ assume a network limitation in Bps rather than in pps in\n   considering the\
    \ minimum sending rate of telephony traffic.\n   Assuming 40-byte packet headers\
    \ (IP, RTP, and UDP or DCCP), the\n   application data sending rate of N Bps and\
    \ M pps translates to a\n   sending rate on the wire of B = N+40M Bps.  If the\
    \ application uses\n   additional FEC (Forward Error Correction), the FEC bits\
    \ must be added\n   in as well.  In our example, we ignore bandwidth adjustments\
    \ that are\n   needed to take into account the additional overhead for FEC or\
    \ the\n   reduced sending rate for silence periods.  We also are not taking\n\
    \   into account the possible role of header compression on congested\n   edge\
    \ links, which can reduce significantly the number of bytes used\n   for headers\
    \ on those links.\n   Now, consider an equivalent-rate TCP connection with data\
    \ packets of\n   P bytes and a round-trip time of R seconds.  Taking into account\n\
    \   header size, such a TCP connection with a sending rate on the wire of\n  \
    \ B Bps is sending B/(P+40) pps, or, equivalently, BR/(P+40) ppr\n   (packets\
    \ per round-trip time).\n   Restating the question in terms of the above expressions\
    \ for VoIP and\n   TCP: if the best-effort VoIP connection is experiencing a persistent\n\
    \   packet drop rate of D, and is at its minimum sending rate on the wire\n  \
    \ of B Bps, when should the application or transport protocol terminate\n   or\
    \ suspend the VoIP connection?\n   One answer to this question is to find the\
    \ sending rate in ppr for a\n   TCP connection sending at the same rate on the\
    \ wire in Bps, and to\n   use the TCP response function to determine whether a\
    \ conformant TCP\n   connection would be able to maintain a sending rate close\
    \ to that\n   sending rate with the same persistent drop rate D.  If the sending\n\
    \   rate of the VoIP connection is significantly higher than the sending\n   rate\
    \ of a conformant TCP connection under the same conditions, and\n   the VoIP connection\
    \ is unable to reduce its sending rate on the wire,\n   then the VoIP connection\
    \ should terminate or suspend.\n   As discussed above, there are two reasons for\
    \ requiring the\n   application to terminate:\n      1) Avoiding congestion collapse,\
    \ given the possibility of multiple\n         congested links,\n      2) Fairness\
    \ for congestion-controlled TCP traffic sharing the\n         link.\n   In addition,\
    \ if an application requires a minimum service level from\n   the network in order\
    \ to operate, and that service level is\n   consistently not achieved, then the\
    \ application should terminate or\n   suspend sending.\n   One counter-argument\
    \ is that users will just hang up anyway with a\n   high packet drop rate so there\
    \ is no point in enforcing a minimum\n   acceptable rate.  Users might hang up,\
    \ but they might also just keep\n   on talking, with the occasional noise getting\
    \ though, for minutes or\n   longer waiting for a short period of clarity.  Another\
    \ counter-\n   argument is that nobody really benefits from VoIP connections being\n\
    \   terminated or suspended when persistent packet drop rates exceed the\n   allowable\
    \ packet drop rate for the configured minimum sending rate.\n   This is untrue,\
    \ since the termination of these VoIP connections could\n   allow competing TCP\
    \ and VoIP traffic to make some progress.\n   In the next section, we illustrate\
    \ the approach outlined above for\n   VoIP flows with minimum sending rates of\
    \ 4.75 and 64 kbps\n   respectively, and show that in practice such an approach\
    \ would not\n   seem too burdensome for VoIP traffic.  This approach implies that\
    \ the\n   VoIP traffic would terminate or suspend when the packet drop rate\n\
    \   significantly exceeds 40% for a VoIP flow with a minimum sending rate\n  \
    \ of 4.75 kbps.  If VoIP is to deliver \"carrier quality\" or even near\n   \"\
    carrier quality\" on best-effort links, conditioning deployment on\n   the ability\
    \ to maintain maximum sending rates during periods of\n   persistent packet drops\
    \ rates exceeding 40% does not suggest a\n   service model that will see widespread\
    \ acceptance among consumers, no\n   matter what the price differential.  Good\
    \ packet throughput is vital\n   for the delivery of acceptable VoIP service.\n\
    \   For a VoIP flow that stops sending because its minimum sending rate\n   is\
    \ too high for the steady-state packet drop rate, we have not\n   addressed the\
    \ question of when a VoIP flow might be able to start\n   sending again, to see\
    \ if the congestion on the end-to-end path has\n   changed.  This issue has been\
    \ addressed in a proposal for\n   Probabilistic Congestion Control [PCC].\n  \
    \ We note that if the congestion indications are in the form of ECN-\n   marked\
    \ packets (Explicit Congestion Notification), as opposed to\n   dropped packets,\
    \ then the answers about when a flow with a minimum\n   sending rate would have\
    \ to stop sending are somewhat different.  ECN\n   allows routers to explicitly\
    \ notify end-nodes of congestion by ECN-\n   marking instead of dropping packets\
    \ [RFC3168].  If packets are ECN-\n   marked instead of dropped in the network,\
    \ then there are no concerns\n   of congestion collapse or of user quality (for\
    \ the ECN-capable\n   traffic, at any rate), and what remains are concerns of\
    \ fairness with\n   competing flows.  Second, in regimes with very high congestion,\
    \ TCP\n   has a higher sending rate with ECN-marked than with dropped packets,\n\
    \   in part because of different dynamics in terms of un-backing-off a\n   backed-off\
    \ retransmit timer.\n"
- title: 5.1.  Drop Rates at 4.75 kbps Minimum Sending Rate
  contents:
  - "5.1.  Drop Rates at 4.75 kbps Minimum Sending Rate\n   Consider an adaptive audio\
    \ application with an RTT of R=0.1 seconds\n   that is able to adapt down to a\
    \ minimum sending rate of 4.75 kbps\n   application data, sending M=20 packets\
    \ per second.  This sending rate\n   translates to N=593 Bps of application data,\
    \ for a sending rate on\n   the wire of B=1393 Bps.  An equivalent-rate TCP connection\
    \ with data\n   packets of P=1460 bytes and a round-trip time of R=0.1 seconds\
    \ would\n   be sending BR/(P+40) = 0.09 ppr.\n   Table 1 in the Appendix looks\
    \ at the packet drop rate experienced by\n   a TCP connection with the RTO set\
    \ to twice the RTT, and gives the\n   corresponding sending rate of the TCP connection\
    \ in ppr.  The second\n   column gives the sending rate estimated by the standard\
    \ analytical\n   approach, and the third, fourth, and fifth columns give the average\n\
    \   sending rate from simulations with random packet drops or marks.  The\n  \
    \ sixth column gives the sending rates from experiments on a 4.8-\n   RELEASE\
    \ FreeBSD machine.  The analytical approaches require an RTO\n   expressed as\
    \ a multiple of the RTT, and Table 1 shows the results for\n   the RTO set to\
    \ 2 RTT.  In the simulations, the minimum RTO is set to\n   twice the RTT.  See\
    \ the Appendix for more details.\n   For a sending rate of 0.09 ppr and an RTO\
    \ set to 2 RTT, Table 1 shows\n   that the analytical approach gives a corresponding\
    \ packet drop rate\n   of roughly 50%, while the simulations in the fifth column\
    \ and the\n   experiments in the sixth column give a packet drop rate of between\n\
    \   35% and 40% to maintain a sending rate of 0.09 ppr.  (For a reference\n  \
    \ TCP connection using timestamps, shown in the fourth column, the\n   simulations\
    \ give a packet drop rate of 55% to maintain a sending rate\n   of 0.09 ppr.)\
    \  Of the two approaches for determining TCP's\n   relationship between the sending\
    \ rate and the packet drop rate, the\n   analytic approach and the use of simulations,\
    \ we consider the\n   simulations to be the most realistic, for reasons discussed\
    \ in the\n   Appendix.  This suggests a packet drop rate of 40% would be\n   reasonable\
    \ for a TCP connection with an average sending rate of 0.09\n   ppr.  As a result,\
    \ a VoIP connection with an RTT of 0.1 sec and a\n   minimum sending rate of 4.75\
    \ kbps would be required to terminate or\n   suspend when the persistent packet\
    \ drop rate significantly exceeds\n   40%.\n   These estimates are sensitive to\
    \ the assumed round-trip time of the\n   TCP connection.  If we assumed instead\
    \ that the equivalent-rate TCP\n   connection had a round-trip time of R=0.01\
    \ seconds, the equivalent-\n   rate TCP connection would be sending BR/(P+40)\
    \ = 0.009 ppr.  However,\n   we have also assumed a minimum RTO for TCP connections\
    \ of 0.1\n   seconds, which in this case would mean an RTO of at least 10 RTT.\n\
    \   For this setting of the RTO, we would use Table 2 from the appendix\n   to\
    \ determine the average TCP sending rate for a particular packet\n   drop rate.\
    \  The simulations in the fifth column of Table 2 suggest\n   that a TCP connection\
    \ with an RTT of 0.01 sec and an RTO of 10 RTT\n   would be able to send 0.009\
    \ ppr with a packet drop rate of 45%.  (For\n   the same TCP connection using\
    \ timestamps, shown in the fourth column,\n   the simulations give a packet drop\
    \ rate of 60-65% to maintain a\n   sending rate of 0.009 ppr.)\n   Thus, for a\
    \ VoIP connection with an RTT of 0.01 sec and a minimum\n   sending rate of 4.75\
    \ kbps, the VoIP connection would be required to\n   terminate or suspend when\
    \ the persistent packet drop rate exceeded\n   45%.\n"
- title: 5.2.  Drop Rates at 64 kbps Minimum Sending Rate
  contents:
  - "5.2.  Drop Rates at 64 kbps Minimum Sending Rate\n   The effect of increasing\
    \ the minimum acceptable sending rate to 64\n   kbps is effectively to decrease\
    \ the packet drop rate at which the\n   application should terminate or suspend\
    \ sending.  For this section,\n   consider a codec with a minimum sending rate\
    \ of 64 kbps, or N=8000\n   Bps, and a packet sending rate of M=50 pps.  (This\
    \ would be\n   equivalent to 160-byte data packets, with 20 ms. per packet.) \
    \ The\n   sending rate on the wire is B = N+40M Bps, including headers, or\n \
    \  10000 Bps.  A TCP connection having that sending rate, with packets\n   of\
    \ size P=1460 bytes and a round-trip time of R=0.1 seconds, sends\n   BR/(P+40)\
    \ = 0.66 ppr.  From the fifth column of Table 1, for an RTO\n   of 2 RTT, this\
    \ corresponds to a packet drop rate between 20 and 25%.\n   [For a TCP connection\
    \ using fine-grained timestamps, as shown in the\n   fourth column of Table 1,\
    \ this sending rate corresponds to a packet\n   drop rate between 25% and 35%.]\
    \  As a result, a VoIP connection with\n   an RTT of 0.1 sec and a minimum sending\
    \ rate of 64 kbps would be\n   required to terminate or suspend when the persistent\
    \ packet drop rate\n   significantly exceeds 25%.\n   For an equivalent-rate TCP\
    \ connection with a round-trip time of\n   R=0.01 seconds and a minimum RTO of\
    \ 0.1 seconds (giving an RTO of 10\n   RTT), we use the fifth column of Table\
    \ 2, which shows that a sending\n   rate of 0.066 ppr corresponds to a packet\
    \ drop rate of roughly 30%.\n   [For a TCP connection using fine-grained timestamps,\
    \ as shown in the\n   fourth column of Table 2, this sending rate corresponds\
    \ to a packet\n   drop rate of roughly 45%.]  Thus, for a VoIP connection with\
    \ an RTT\n   of 0.01 sec and a minimum sending rate of 64 kbps, the VoIP\n   connection\
    \ would be required to terminate or suspend when the\n   persistent packet drop\
    \ rate exceeded 30%.\n"
- title: 5.3.  Open Issues
  contents:
  - "5.3.  Open Issues\n   This document does not attempt to specify a complete protocol.\
    \  For\n   example, this document does not specify the definition of a\n   persistent\
    \ packet drop rate.  The assumption would be that a\n   \"persistent packet drop\
    \ rate\" would refer to the packet drop rate\n   over a significant number of\
    \ round-trip times, e.g., at least five\n   seconds.  Another possibility would\
    \ be that the time interval for\n   measuring the persistent drop rate is a function\
    \ of the lifetime of\n   the connection, with longer-lived connections using longer\
    \ time\n   intervals for measuring the persistent drop rate.\n   The time period\
    \ for detecting persistent congestion also affects the\n   potential synchronization\
    \ of VoIP sessions all terminating or\n   suspending at the same time in response\
    \ to shared congestion.  If\n   flows use some randomization in setting the time\
    \ interval for\n   detecting persistent congestion, or use a time interval that\
    \ is a\n   function of the connection lifetime, this could help to prevent all\n\
    \   VoIP flows from terminating at the same time.\n   Another design issue for\
    \ a complete protocol concerns whether a flow\n   terminates when the packet drop\
    \ rate is too high, or only suspends\n   temporarily.  For a flow that suspends\
    \ temporarily, there is an issue\n   of how long it should wait before resuming\
    \ transmission.  At the very\n   least, the sender should wait long enough so\
    \ that the flow's overall\n   sending rate doesn't exceed the allowed sending\
    \ rate for that packet\n   drop rate.\n   The recommendation of this document\
    \ is that VoIP flows with minimum\n   sending rates should have corresponding\
    \ configured packet drop rates,\n   such that the flow terminates or suspends\
    \ when the persistent packet\n   drop rate of the flow exceeds the configured\
    \ rate.  If the persistent\n   packet drop rate increases over time, flows with\
    \ higher minimum\n   sending rates would have to suspend sending before flows\
    \ with lower\n   minimum sending rates.  If VoIP flows terminate when the persistent\n\
    \   packet drop rate is too high, this could lead to scenarios where VoIP\n  \
    \ flows with lower minimum sending rates essentially receive all of the\n   link\
    \ bandwidth, while the VoIP flows with higher minimum sending\n   rates are required\
    \ to terminate.  However, if VoIP flows suspend\n   sending for a time when the\
    \ persistent packet drop rate is too high,\n   instead of terminating entirely,\
    \ then the bandwidth could end up\n   being shared reasonably fairly between VoIP\
    \ flows with different\n   minimum sending rates.\n"
- title: 5.4.  A Simple Heuristic
  contents:
  - "5.4.  A Simple Heuristic\n   One simple heuristic for estimating congestion would\
    \ be to use the\n   RTCP reported loss rate as an indicator.  For example, if\
    \ the RTCP-\n   reported lost rate is greater than 30%, or N back-to-back RTCP\n\
    \   reports are missing, the application could assume that the network is\n  \
    \ too congested, and terminate or suspend sending.\n"
- title: 6.  Constraints on VoIP Systems
  contents:
  - "6.  Constraints on VoIP Systems\n   Ultimately, attempting to run VoIP on congested\
    \ links, even with\n   adaptive rate codecs and minimum packet rates, is likely\
    \ to run into\n   hard constraints due to the nature of real time traffic in heavily\n\
    \   congested scenarios.  VoIP systems exhibit a limited ability to scale\n  \
    \ their packet rate.  If the number of packets decreases, the amount of\n   audio\
    \ per packet is greater and error concealment at the receiver\n   becomes harder.\
    \  Any error longer than phoneme length, which is\n   typically 40 to 100 ms depending\
    \ on the phoneme and speaker, is\n   unrecoverable.  Ideally, applications want\
    \ sub 30ms packets and this\n   is what most voice codecs provide.  In addition,\
    \ voice media streams\n   exhibit greater loss sensitivity at lower data rates.\
    \  Lower-data\n   rate codecs maintain more end-to-end state and as a result are\n\
    \   generally more sensitive to loss.\n   We note that very-low-bit-rate codecs\
    \ have proved useful, although\n   with some performance degradation, in very\
    \ low bandwidth, high noise\n   environments (e.g., 2.4 kbps HF radio).  For example,\
    \ 2.4 kbps codecs\n   \"produce speech which although intelligible is far from\
    \ natural\n   sounding\" [W98].  Figure 5 of [W98] shows how the speech quality\
    \ with\n   several forms of codecs varies with the bit rate of the codec.\n"
- title: 7.  Conclusions and Recommendations
  contents:
  - "7.  Conclusions and Recommendations\n   In the near term, VoIP services are likely\
    \ to be deployed, at least\n   in part, over broadband best-effort connections.\
    \  Current real time\n   media encoding and transmission practice ignores congestion\n\
    \   considerations, resulting in the potential for trouble should VoIP\n   become\
    \ a broadly deployed service in the near to intermediate term.\n   Poor user quality,\
    \ unfairness to other VoIP and TCP users, and the\n   possibility of sporadic\
    \ episodes of congestion collapse are some of\n   the potential problems in this\
    \ scenario.\n   These problems can be mitigated in applications that use fixed-rate\n\
    \   codecs by requiring the best-effort VoIP application to specify its\n   minimum\
    \ bit throughput rate.  This minimum bit rate can be used to\n   estimate a packet\
    \ drop rate at which the application would terminate.\n   This document specifically\
    \ recommends the following:\n   (1) In IETF standards for protocols regarding\
    \ best-effort flows with\n   a minimum sending rate, a packet drop rate must be\
    \ specified, such\n   that the best-effort flow terminates, or suspends sending\n\
    \   temporarily, when the steady-state packet drop rate significantly\n   exceeds\
    \ the specified drop rate.\n   (2) The specified drop rate for the minimum sending\
    \ rate should be\n   consistent with the use of Tables 1 and 2 as illustrated\
    \ in this\n   document.\n   We note that this is a recommendation to the IETF\
    \ community, as a\n   specific follow-up to RFC 2914 on Congestion Control Principles.\n\
    \   This is not a specific or complete protocol specification.\n   Codecs that\
    \ are able to vary their bit rate depending on estimates of\n   congestion can\
    \ be even more effective in providing good quality\n   service while maintaining\
    \ network efficiency under high load\n   conditions.  Adaptive variable-bit-rate\
    \ codecs are therefore\n   preferable as a means of supporting VOIP sessions on\
    \ shared use\n   Internet environments.\n   Real-time traffic such as VoIP could\
    \ derive significant benefits from\n   the use of ECN, where routers may indicate\
    \ congestion to end-nodes by\n   marking packets instead of dropping them.  However,\
    \ ECN is only\n   standardized to be used with transport protocols that react\n\
    \   appropriately to marked packets as indications of congestion.  VoIP\n   traffic\
    \ that follows the recommendations in this document could\n   satisfy the congestion-control\
    \ requirements for using ECN, while VoIP\n   traffic with no mechanism for terminating\
    \ or suspending when the\n   packet dropping and marking rate was too high would\
    \ not.  However, we\n   repeat that this document is not a complete protocol specification.\n\
    \   In particular, additional mechanisms would be required before it was\n   safe\
    \ for applications running over UDP to use ECN.  For example,\n   before using\
    \ ECN, the sending application would have to ensure that\n   the receiving application\
    \ was capable of receiving ECN-related\n   information from the lower-layer UDP\
    \ stack, and of interpreting this\n   ECN information as a congestion indication.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   We thank Brian Adamson, Ran Atkinson, Fred Baker, Jon\
    \ Crowcroft,\n   Christophe Diot, Alan Duric, Jeremy George, Mark Handley, Orion\n\
    \   Hodson, Geoff Huston, Eddie Kohler, Simon Leinen, David Meyer, Jean-\n   Francois\
    \ Mule, Colin Perkins, Jon Peterson, Mike Pierce, Cyrus\n   Shaoul, and Henning\
    \ Schulzrinne for feedback on this document.  (Of\n   course, these people do\
    \ not necessarily agree with all of the\n   document.)  Ran Atkinson and Geoff\
    \ Huston contributed to the text of\n   the document.\n   The analysis in Section\
    \ 6.0 resulted from a session at the whiteboard\n   with Mark Handley.  We also\
    \ thank Alberto Medina for the FreeBSD\n   experiments showing TCP's sending rate\
    \ as a function of the packet\n   drop rate.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]     Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2988]     Paxson, V. and M. Allman, \"Computing TCP's\n\
    \                 Retransmission Timer\", RFC 2988, November 2000.\n   [RFC3267]\
    \     Sjoberg, J., Westerlund, M., Lakaniemi, A. and Q. Xie,\n               \
    \  \"Real-Time Transport Protocol (RTP) Payload Format and\n                 File\
    \ Storage Format for the Adaptive Multi-Rate (AMR)\n                 and Adaptive\
    \ Multi-Rate Wideband (AMR-WB) Audio\n                 Codecs\", RFC 3267, June\
    \ 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [A02]         Ran Atkinson, An ISP Reality Check,\
    \ Presentation to\n                 ieprep, 55th IETF Meeting, November 2002.\
    \  URL\n                 \"http://www.ietf.cnri.reston.va.us/proceedings/\n  \
    \               02nov/219.htm#slides\".\n   [A03]         Brian Adamson, private\
    \ communication, June 2003.\n   [BBFS01]      Deepak Bansal, Hari Balakrishnan,\
    \ Sally Floyd, and\n                 Scott Shenker, Dynamic Behavior of Slowly-Responsive\n\
    \                 Congestion Control Algorithms, SIGCOMM 2001.\n   [COPS]    \
    \    Durham, D., Ed., Boyle, J., Cohen, R., Herzog, S.,\n                 Rajan,\
    \ R. and A. Sastry, \"The COPS (Common Open Policy\n                 Service)\
    \ Protocol\", RFC 2748, January 2000.\n   [DCCP03]      Eddie Kohler, Mark Handley,\
    \ Sally Floyd, and Jitendra\n                 Padhye, Datagram Congestion Control\
    \ Protocol (DCCP),\n                 internet-draft Work in Progress, March 2003.\
    \  URL\n                 \"http://www.icir.org/kohler/dcp/\".\n   [DIFFSERV] \
    \   Differentiated Services (diffserv), Concluded Working\n                 Group,\
    \ URL\n                 \"http://www.ietf.cnri.reston.va.us/html.charters/\n \
    \                OLD/diffserv-charter.html\".\n   [E2E]         The end2end-interest\
    \ mailing list, URL\n                 \"http://www.postel.org/mailman/listinfo/end2end-\n\
    \                 interest\".\n   [FHPW00]      S. Floyd, M. Handley, J. Padhye,\
    \ J. Widmer, \"Equation-\n                 Based Congestion Control for Unicast\
    \ Applications\", ACM\n                 SIGCOMM 2000.\n   [FM03]        S. Floyd\
    \ and R. Mahajan, Router Primitives for\n                 Protection Against High-Bandwidth\
    \ Flows and Aggregates,\n                 internet draft (not yet submitted).\n\
    \   [FWD]         Free World Dialup, URL \"www.pulver.com/fwd/\".\n   [IEPREP02]\
    \    Internet Emergency Preparedness (ieprep), Minutes, 55th\n               \
    \  IETF Meeting, November 2002.  URL\n                 \"http://www.ietf.cnri.reston.va.us/proceedings/\n\
    \                 02nov/219.htm#cmr\".\n   [ILBRC]       S.V. Andersen, et. al.,\
    \ Internet Low Bit Rate Codec,\n                 Work in Progress, March 2003.\n\
    \   [G.114]       Recommendation G.114 - One-way Transmission Time, ITU,\n   \
    \              May 2003.  URL \"http://www.itu.int/itudoc/itu-\n             \
    \    t/aap/sg12aap/recaap/g.114/\".\n   [IVOX]        The Interactive VOice eXchange,\
    \ URL\n                 \"http://manimac.itd.nrl.navy.mil/IVOX/\".\n   [Jacobson88]\
    \  V. Jacobson, Congestion Avoidance and Control, ACM\n                 SIGCOMM\
    \ '88, August 1988.\n   [AUT]         The maximum feasible drop rate for VoIP\
    \ traffic depends\n                 on the codec.  These numbers are a range for\
    \ a variety\n                 of codecs; voice quality begins to deteriorate for\
    \ many\n                 codecs around a 10% drop rate. Note from authors.\n \
    \  [JS00]        Wenyu Jiang and Henning Schulzrinne, Modeling of Packet\n   \
    \              Loss and Delay and Their Effect on Real-Time Multimedia\n     \
    \            Service Quality, NOSSDAV, 2000.  URL\n                 \"http://citeseer.nj.nec.com/jiang00modeling.html\"\
    .\n   [JS02]        Wenyu Jiang and Henning Schulzrinne, Comparison and\n    \
    \             Optimization of Packet Loss Repair Methods on VoIP\n           \
    \      Perceived Quality under Bursty Loss, NOSSDAV, 2002.\n                 URL\
    \ \"http://www1.cs.columbia.edu/~wenyu/\".\n   [JS03]        Wenyu Jiang, Kazummi\
    \ Koguchi, and Henning Schulzrinne,\n                 QoS Evaluation of VoIP End-points,\
    \ ICC 2003.  URL\n                 \"http://www1.cs.columbia.edu/~wenyu/\".\n\
    \   [KFK79]       G.S. Kang, L.J. Fransen, and E.L. Kline, \"Multirate\n     \
    \            Processor (MRP) for Digital Voice Communications\", NRL\n       \
    \          Report 8295, Naval Research Laboratory, Washington DC,\n          \
    \       March 1979.\n   [KF82]        G.S. Kang and L.J. Fransen, \"Second Report\
    \ of the\n                 Multirate Processor (MRP) for Digital Voice\n     \
    \            Communications\", NRL Report 8614, Naval Research\n             \
    \    Laboratory, Washington DC, September 1982.\n   [Measurement] Web page on\
    \ \"Measurement Studies of End-to-End\n                 Congestion Control in\
    \ the Internet\", URL\n                 \"http://www.icir.org/floyd/ccmeasure.html\"\
    .  The\n                 section on \"Network Measurements at Specific Sites\"\
    \n                 includes measurement data about the distribution of\n     \
    \            packet sizes on various links in the Internet.\n   [MTK03]      \
    \ A. P. Markopoulou, F. A. Tobagi, and M. J. Karam,\n                 \"Assessing\
    \ the Quality of Voice Communications Over\n                 Internet Backbones\"\
    , IEEE/ACM Transactions on\n                 Networking, V. 11 N. 5, October 2003.\n\
    \   [NSIS]        Next Steps in Signaling (nsis), IETF Working Group, URL\n  \
    \               \"http://www.ietf.cnri.reston.va.us/html.charters/nsis-\n    \
    \             charter.html\".\n   [PCC]         Joerg Widmer, Martin Mauve, and\
    \ Jan Peter Damm.\n                 Probabilistic Congestion Control for Non-Adaptable\n\
    \                 Flows.  Technical Report 3/2001, Department of\n           \
    \      Mathematics and Computer Science, University of\n                 Mannheim.\
    \  URL \"http://www.informatik.uni-\n                 mannheim.de/informatik/pi4/projects/\n\
    \                 CongCtrl/pcc/index.html\".\n   [PFTK98]      J. Padhye, V. Firoiu,\
    \ D. Towsley, J. Kurose, Modeling\n                 TCP Throughput: A Simple Model\
    \ and its Empirical\n                 Validation, Tech Report TF 98-008, U. Mass,\
    \ February\n                 1998.\n   [RFC896]      Nagle, J., \"Congestion Control\
    \ in IP/TCP\", RFC 896,\n                 January 1984.\n   [RFC1890]     Schulzrinne,\
    \ H., \"RTP Profile for Audio and Video\n                 Conferences with Minimal\
    \ Control\", RFC 1890, January\n                 1996.\n   [RFC2474]     Nichols,\
    \ K., Blake, S., Baker, F. and D. Black,\n                 \"Definition of the\
    \ Differentiated Services Field (DS\n                 Field) in the IPv4 and IPv6\
    \ Headers\", RFC 2474,\n                 December 1998.\n   [RFC2581]     Allman,\
    \ M., Paxson, V. and W. Stevens, \"TCP Congestion\n                 Control\"\
    , RFC 2581, April 1999.\n   [RFC2597]     Heinanen, J., Baker, F., Weiss, W. and\
    \ J. Wroclawski,\n                 \"Assured Forwarding PHB Group, RFC 2597, June\
    \ 1999.\n   [RFC2914]     Floyd, S., \"Congestion Control Principles\", BCP 41,\
    \ RFC\n                 2914, September 2000.\n   [RFC2990]     Huston, G., \"\
    Next Steps for the IP QoS Architecture\",\n                 RFC 2990, November\
    \ 2000.\n   [RFC3042]     Allman, M., Balakrishnan, H. and S., Floyd, \"Enhancing\n\
    \                 TCP's Loss Recovery Using Limited Transmit\", RFC 3042,\n  \
    \               January 2001.\n   [RFC3168]     Ramakrishnan, K., Floyd, S. and\
    \ D. Black, \"The Addition\n                 of Explicit Congestion Notification\
    \ (ECN) to IP\", RFC\n                 3168, September 2001.\n   [RFC3246]   \
    \  Davie, B., Charny, A., Bennet, J.C.R., Benson, K., Le\n                 Boudec,\
    \ J.Y., Courtney, W., Davari, S., Firoiu, V. and\n                 D. Stiliadis,\
    \ \"An Expedited Forwarding PHB (Per-Hop\n                 Behavior)\", RFC 3246,\
    \ March 2002.\n   [RFC3448]     Handley, M., Floyd, S., Pahdye, J. and J. Widmer,\
    \ \"TCP\n                 Friendly Rate Control (TFRC): Protocol Specification\"\
    ,\n                 RFC 3448, January 2003.\n   [RSVP]        Resource Reservation\
    \ Setup Protocol (rsvp), Concluded\n                 Working Group, URL\n    \
    \             \"http://www.ietf.cnri.reston.va.us/html.charters/\n           \
    \      OLD/rsvp-charter.html\".\n   [RTTWeb]      Web Page on Round-Trip Times\
    \ in the Internet, URL\n                 \"http://www.icir.org/floyd/rtt-questions.html\"\
    \n   [S03]         H. Schulzrinne, private communication, 2003.\n   [RFC3551]\
    \     Schulzrinne, H. and S. Casner, \"RTP Profile for Audio\n               \
    \  and Video Conferences with Minimal Control\", RFC 3551,\n                 July\
    \ 2003.\n   [Vonage]      Vonage, URL \"www.vonage.com\".\n   [W98]         J.\
    \ Woodward, Speech Coding, Communications Research\n                 Group, University\
    \ of Southampton, 1998.  URL\n                 \"http://www-mobile.ecs.soton.ac.uk/speech_codecs/\"\
    ,\n"
- title: 10.  Appendix - Sending Rates with Packet Drops
  contents:
  - "10.  Appendix - Sending Rates with Packet Drops\n   The standard way to estimate\
    \ TCP's average sending rate S in packets\n   per round-trip as a function of\
    \ the packet drop rate would be to use\n   the TCP response function estimated\
    \ in [PFTK98]:\n      S = 1/(sqrt(2p/3) + K min(1,3 sqrt(3p/8)) p (1 + 32 p^2))\
    \   (1)\n   for acks sent for every data packet, and the RTO set to K*RTT.\n \
    \  The results from Equation (1) are given in the second column in\n   Tables\
    \ 1 and 2 below.  However, Equation (1) overestimates TCP's\n   sending rate in\
    \ the regime with heavy packet drop rates (e.g., of 30%\n   or more).  The analysis\
    \ behind Equation (1) assumes that once a\n   single packet is successfully transmitted,\
    \ TCP's retransmit timer is\n   no longer backed-off.  This might be appropriate\
    \ for an environment\n   with ECN, or for a TCP connection using fine-grained\
    \ timestamps, but\n   this is not necessarily the case for a non-ECN-capable TCP\
    \ connection\n   without timestamps.  As specified in [RFC2988], if TCP's retransmit\n\
    \   timer is backed-off, this back-off should only be removed when TCP\n   successfully\
    \ transmits a new packet (as opposed to a retransmitted\n   packet), in the absence\
    \ of timestamps.\n   When the packet drop rate is 50% or higher, for example,\
    \ many of the\n   successful packet transmissions can be of retransmitted packets,\
    \ and\n   the retransmit timer can remain backed-off for significant periods of\n\
    \   time, in the absence of timestamps.  In this case, TCP's throughput\n   is\
    \ determined largely by the maximum backoff of the retransmit timer.\n   For example,\
    \ in the NS simulator the maximum backoff of the\n   retransmit timer is 64 times\
    \ the un-backed-off value.  RFC 2988\n   specifies that \"a maximum value MAY\
    \ be placed on RTO provided it is\n   at least 60 seconds.\"  [Although TCP implementations\
    \ vary, many TCP\n   implementations have a maximum of 45 seconds for the backed-off\
    \ RTO\n   after dropped SYN packets.]\n   Another limitation of Equation (1) is\
    \ that it models Reno TCP, and\n   therefore underestimates the sending rate of\
    \ a modern TCP connection\n   that used SACK and Limited Transmit.\n   The table\
    \ below shows estimates of the average sending rate S in\n   packets per RTT,\
    \ for TCP connections with the RTO set to 2 RTT for\n   Equation (1).\n   These\
    \ estimates are compared with simulations in the third, fourth,\n   and fifth\
    \ columns, with ECN, packet drops for TCP with fine-grained\n   timestamps, and\
    \ packet drops for TCP without timestamps respectively.\n   (The simulation scripts\
    \ are available from\n   http://www.icir.org/floyd/VoIP/sims.)  Each simulation\
    \ computes the\n   average sending rate over the second half of a 10,000-second\n\
    \   simulation, and for each packet drop rate, the average is given over\n   50\
    \ simulations.  For the simulations with very high packet drop\n   rates, it is\
    \ sometimes the case that the SYN packet is repeatedly\n   dropped, and the TCP\
    \ sender never successfully transmits a packet.\n   In this case, the TCP sender\
    \ also never gets a measurement of the\n   round-trip time.\n   The sixth column\
    \ of Table 1 shows the average sending rate S in\n   packets per RTT for an experiment\
    \ using a 4.8-RELEASE FreeBSD\n   machine.  For the low packet drop rates of 0.1\
    \ and 0.2, the sending\n   rate in the simulations is higher than the sending\
    \ rate in the\n   experiments; this is probably because the TCP implementation\
    \ in the\n   simulations uses Limited Transmit [RFC3042].  With Limited Transmit,\n\
    \   the TCP sender can sometimes avoid a retransmit timeout when a packet\n  \
    \ is dropped and the congestion window is small.  With high packet drop\n   rates\
    \ of 0.65 and 0.7, the sending rate in the simulations is\n   somewhat lower than\
    \ the sending rate in the experiments.  For these\n   high packet drop rates,\
    \ the TCP connections in the experiments would\n   often abort prematurely, after\
    \ a sufficient number of successive\n   packet drops.\n   We note that if the\
    \ ECN marking rate exceeds a locally-configured\n   threshold, then a router is\
    \ advised to switch from marking to\n   dropping.  As a result, we do not expect\
    \ to see high steady-state\n   marking rates in the Internet, even if ECN is in\
    \ fact deployed.\n    Drop\n   Rate p  Eq(1)  Sims:ECN  Sims:TimeStamp  Sims:Drops\
    \  Experiments\n   ------  -----  --------  --------------  ----------  -----------\n\
    \     0.1   2.42    2.92      2.38            2.32       0.72\n     0.2    .89\
    \    1.82      1.26            0.82       0.29\n     0.25   .55    1.52      \
    \ .94             .44       0.22\n     0.35   .23    .99        .51          \
    \   .11       0.10\n     0.4    .16    .75        .36             .054      0.068\n\
    \     0.45   .11    .55        .24             .029      0.050\n     0.5    .10\
    \    .37        .16             .018      0.036\n     0.55   .060   .25      \
    \  .10             .011      0.024\n     0.6    .045   .15        .057       \
    \     .0068     0.006\n     0.65   .051   .          .033            .0034   \
    \  0.008\n     0.7    .041   .06        .018            .0022     0.007\n    \
    \ 0.75   .034   .04        .0099           .0011\n     0p.8    .028   .027   \
    \    .0052           .00072\n     0.85   .023   .015       .0021           .00034\n\
    \     0.9    .020   .011       .0011           .00010\n     0.95   .017   .0079\
    \      .00021          .000037\n   Table 1: Sending Rate S as a Function of the\
    \ Packet Drop Rate p,\n            for RTO set to 2 RTT, and S in packets per\
    \ RTT.\n   The table below shows the average sending rate S, for TCP connections\n\
    \   with the RTO set to 10 RTT.\n    Drop\n   Rate p  Eq(1)  Sims:ECN  Sims:TimeStamp\
    \  Sims:Drops\n   ------  -----  --------  --------------  ----------\n    0.1\
    \    0.97    2.92       1.67          1.64\n    0.2    0.23    1.82        .56\
    \           .31\n    0.25   0.13     .88        .36           .13\n    0.3   \
    \ 0.08     .61        .23           .059\n    0.35   0.056    .41        .15 \
    \          .029\n    0.4    0.040    .28        .094          .014\n    0.45 \
    \  0.029    .18        .061          .0080\n    0.5    0.021    .11        .038\
    \          .0053\n    0.55   0.016    .077       .022          .0030\n    0.6\
    \    0.013    .045       .013          .0018\n    0.65   0.010    .          .0082\
    \         .0013\n    0.7    0.0085   .018       .0042\n    0.75   0.0069   .012\
    \       .0025         .00071\n    0.8    0.0057   .0082      .0014         .00030\n\
    \    0.85   0.0046   .0047      .00057        .00014\n    0.9    0.0041   .0034\
    \      .00026        .000025\n    0.95   0.0035   .0024      .000074       .000013\n\
    \   Table 2: Sending Rate as a Function of the Packet Drop Rate,\n           \
    \ for RTO set to 10 RTT, and S in packets per RTT.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This document does not itself create any new\
    \ security issues for the\n   Internet community.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   There are no IANA considerations regarding this\
    \ document.\n"
- title: 13.  Authors' Addresses
  contents:
  - "13.  Authors' Addresses\n   Internet Architecture Board\n   EMail:  iab@iab.org\n\
    \   Internet Architecture Board Members\n   at the time this document was published\
    \ were:\n   Bernard Aboba\n   Harald Alvestrand (IETF chair)\n   Rob Austein\n\
    \   Leslie Daigle (IAB chair)\n   Patrik Faltstrom\n   Sally Floyd\n   Jun-ichiro\
    \ Itojun Hagino\n   Mark Handley\n   Geoff Huston (IAB Executive Director)\n \
    \  Charlie Kaufman\n   James Kempf\n   Eric Rescorla\n   Mike St. Johns\n   This\
    \ document was created in January 2004.\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE\n   REPRESENTS\
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed\n   to pertain to the implementation or use of the technology\n   described\
    \ in this document or the extent to which any license\n   under such rights might\
    \ or might not be available; nor does it\n   represent that it has made any independent\
    \ effort to identify any\n   such rights.  Information on the procedures with\
    \ respect to\n   rights in RFC documents can be found in BCP 78 and BCP 79.\n\
    \   Copies of IPR disclosures made to the IETF Secretariat and any\n   assurances\
    \ of licenses to be made available, or the result of an\n   attempt made to obtain\
    \ a general license or permission for the use\n   of such proprietary rights by\
    \ implementers or users of this\n   specification can be obtained from the IETF\
    \ on-line IPR repository\n   at http://www.ietf.org/ipr.\n   The IETF invites\
    \ any interested party to bring to its attention\n   any copyrights, patents or\
    \ patent applications, or other\n   proprietary rights that may cover technology\
    \ that may be required\n   to implement this standard.  Please address the information\
    \ to the\n   IETF at ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
