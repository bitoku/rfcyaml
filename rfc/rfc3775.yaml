- title: __initial_text__
  contents:
  - '                        Mobility Support in IPv6

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a protocol which allows nodes to remain\n\
    \   reachable while moving around in the IPv6 Internet.  Each mobile node\n  \
    \ is always identified by its home address, regardless of its current\n   point\
    \ of attachment to the Internet.  While situated away from its\n   home, a mobile\
    \ node is also associated with a care-of address, which\n   provides information\
    \ about the mobile node's current location.  IPv6\n   packets addressed to a mobile\
    \ node's home address are transparently\n   routed to its care-of address.  The\
    \ protocol enables IPv6 nodes to\n   cache the binding of a mobile node's home\
    \ address with its care-of\n   address, and to then send any packets destined\
    \ for the mobile node\n   directly to it at this care-of address.  To support\
    \ this operation,\n   Mobile IPv6 defines a new IPv6 protocol and a new destination\
    \ option.\n   All IPv6 nodes, whether mobile or stationary, can communicate with\n\
    \   mobile nodes.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.     Introduction . . . . . . . . . . . . . . . . . .\
    \ . . . . .   5\n   2.     Comparison with Mobile IP for IPv4 . . . . . . . .\
    \ . . . .   6\n   3.     Terminology. . . . . . . . . . . . . . . . . . . . .\
    \ . . .   7\n          3.1.   General Terms . . . . . . . . . . . . . . . . .\
    \ . .   8\n          3.2.   Mobile IPv6 Terms . . . . . . . . . . . . . . . .\
    \ .  10\n   4.     Overview of Mobile IPv6. . . . . . . . . . . . . . . . . .\
    \  13\n          4.1.   Basic Operation . . . . . . . . . . . . . . . . . .  13\n\
    \          4.2.   New IPv6 Protocol . . . . . . . . . . . . . . . . .  15\n  \
    \        4.3.   New IPv6 Destination Option . . . . . . . . . . . .  17\n    \
    \      4.4.   New IPv6 ICMP Messages. . . . . . . . . . . . . . .  17\n      \
    \    4.5.   Conceptual Data Structure Terminology . . . . . . .  17\n        \
    \  4.6.   Site-Local Addressability . . . . . . . . . . . . .  18\n   5.     Overview\
    \ of Mobile IPv6 Security . . . . . . . . . . . . .  18\n          5.1.   Binding\
    \ Updates to Home Agents. . . . . . . . . . .  18\n          5.2.   Binding Updates\
    \ to Correspondent Nodes. . . . . . .  20\n                 5.2.1.  Node Keys\
    \ . . . . . . . . . . . . . . . . .  20\n                 5.2.2.  Nonces. . .\
    \ . . . . . . . . . . . . . . . .  20\n                 5.2.3.  Cookies and Tokens.\
    \ . . . . . . . . . . . .  21\n                 5.2.4.  Cryptographic Functions\
    \ . . . . . . . . . .  22\n                 5.2.5.  Return Routability Procedure.\
    \ . . . . . . .  22\n                 5.2.6.  Authorizing Binding Management Messages\
    \ . .  27\n                 5.2.7.  Updating Node Keys and Nonces . . . . . .\
    \ .  29\n                 5.2.8.  Preventing Replay Attacks . . . . . . . . .\
    \  30\n          5.3.   Dynamic Home Agent Address Discovery. . . . . . . .  30\n\
    \          5.4.   Mobile Prefix Discovery . . . . . . . . . . . . . .  30\n  \
    \        5.5.   Payload Packets . . . . . . . . . . . . . . . . . .  30\n   6.\
    \     New IPv6 Protocol, Message Types, and Destination Option .  31\n       \
    \   6.1.   Mobility Header . . . . . . . . . . . . . . . . . .  31\n         \
    \        6.1.1.  Format. . . . . . . . . . . . . . . . . . .  32\n           \
    \      6.1.2.  Binding Refresh Request Message . . . . . .  34\n             \
    \    6.1.3.  Home Test Init Message. . . . . . . . . . .  35\n               \
    \  6.1.4.  Care-of Test Init Message . . . . . . . . .  36\n                 6.1.5.\
    \  Home Test Message . . . . . . . . . . . . .  37\n                 6.1.6.  Care-of\
    \ Test Message. . . . . . . . . . . .  38\n                 6.1.7.  Binding Update\
    \ Message. . . . . . . . . . .  39\n                 6.1.8.  Binding Acknowledgement\
    \ Message . . . . . .  42\n                 6.1.9.  Binding Error Message . .\
    \ . . . . . . . . .  44\n          6.2.   Mobility Options. . . . . . . . . .\
    \ . . . . . . . .  46\n                 6.2.1.  Format. . . . . . . . . . . .\
    \ . . . . . . .  46\n                 6.2.2.  Pad1. . . . . . . . . . . . . .\
    \ . . . . . .  47\n                 6.2.3.  PadN. . . . . . . . . . . . . . .\
    \ . . . . .  48\n                 6.2.4.  Binding Refresh Advice. . . . . . .\
    \ . . . .  48\n                 6.2.5.  Alternate Care-of Address . . . . . .\
    \ . . .  49\n                 6.2.6.  Nonce Indices . . . . . . . . . . . . .\
    \ . .  49\n                 6.2.7.  Binding Authorization Data. . . . . . . .\
    \ .  50\n          6.3.   Home Address Option . . . . . . . . . . . . . . . .\
    \  51\n          6.4.   Type 2 Routing Header . . . . . . . . . . . . . . .  53\n\
    \                 6.4.1.  Format. . . . . . . . . . . . . . . . . . .  54\n  \
    \        6.5.   ICMP Home Agent Address Discovery Request Message .  55\n    \
    \      6.6.   ICMP Home Agent Address Discovery Reply Message . .  56\n      \
    \    6.7.   ICMP Mobile Prefix Solicitation Message Format. . .  57\n        \
    \  6.8.   ICMP Mobile Prefix Advertisement Message Format . .  59\n   7.     Modifications\
    \ to IPv6 Neighbor Discovery . . . . . . . . .  61\n          7.1.   Modified\
    \ Router Advertisement Message Format. . . .  61\n          7.2.   Modified Prefix\
    \ Information Option Format . . . . .  62\n          7.3.   New Advertisement\
    \ Interval Option Format. . . . . .  64\n          7.4.   New Home Agent Information\
    \ Option Format. . . . . .  65\n          7.5.   Changes to Sending Router Advertisements.\
    \ . . . . .  67\n   8.     Requirements for Types of IPv6 Nodes . . . . . . .\
    \ . . . .  69\n          8.1.   All IPv6 Nodes. . . . . . . . . . . . . . . .\
    \ . . .  69\n          8.2.   IPv6 Nodes with Support for Route Optimization.\
    \ . .  69\n          8.3.   All IPv6 Routers. . . . . . . . . . . . . . . . .\
    \ .  71\n          8.4.   IPv6 Home Agents. . . . . . . . . . . . . . . . . .\
    \  71\n          8.5.   IPv6 Mobile Nodes . . . . . . . . . . . . . . . . .  73\n\
    \   9.     Correspondent Node Operation . . . . . . . . . . . . . . .  74\n  \
    \        9.1.   Conceptual Data Structures. . . . . . . . . . . . .  74\n    \
    \      9.2.   Processing Mobility Headers . . . . . . . . . . . .  75\n      \
    \    9.3.   Packet Processing . . . . . . . . . . . . . . . . .  76\n        \
    \         9.3.1.  Receiving Packets with Home Address Option.  76\n          \
    \       9.3.2.  Sending Packets to a Mobile Node. . . . . .  77\n            \
    \     9.3.3.  Sending Binding Error Messages. . . . . . .  78\n              \
    \   9.3.4.  Receiving ICMP Error Messages . . . . . . .  79\n          9.4.  \
    \ Return Routability Procedure. . . . . . . . . . . .  79\n                 9.4.1.\
    \  Receiving Home Test Init Messages . . . . .  80\n                 9.4.2.  Receiving\
    \ Care-of Test Init Messages. . . .  80\n                 9.4.3.  Sending Home\
    \ Test Messages. . . . . . . . .  80\n                 9.4.4.  Sending Care-of\
    \ Test Messages . . . . . . .  81\n          9.5    Processing Bindings . . .\
    \ . . . . . . . . . . . . .  81\n                 9.5.1.  Receiving Binding Updates\
    \ . . . . . . . . .  81\n                 9.5.2.  Requests to Cache a Binding\
    \ . . . . . . . .  84\n                 9.5.3.  Requests to Delete a Binding.\
    \ . . . . . . .  84\n                 9.5.4.  Sending Binding Acknowledgements.\
    \ . . . . .  85\n                 9.5.5.  Sending Binding Refresh Requests. .\
    \ . . . .  86\n          9.6.   Cache Replacement Policy. . . . . . . . . . .\
    \ . . .  86\n   10.    Home Agent Operation . . . . . . . . . . . . . . . . .\
    \ . .  87\n          10.1.  Conceptual Data Structures. . . . . . . . . . . .\
    \ .  87\n          10.2.  Processing Mobility Headers . . . . . . . . . . . .\
    \  88\n          10.3.  Processing Bindings . . . . . . . . . . . . . . . .  88\n\
    \                 10.3.1. Primary Care-of Address Registration. . . .  88\n  \
    \               10.3.2. Primary Care-of Address De-Registration . .  92\n    \
    \      10.4.  Packet Processing . . . . . . . . . . . . . . . . .  94\n      \
    \           10.4.1. Intercepting Packets for a Mobile Node. . .  94\n        \
    \         10.4.2. Processing Intercepted Packets. . . . . . .  95\n          \
    \       10.4.3. Multicast Membership Control. . . . . . . .  96\n            \
    \     10.4.4. Stateful Address Autoconfiguration. . . . .  98\n              \
    \   10.4.5. Handling Reverse Tunneled Packets . . . . .  98\n                \
    \ 10.4.6. Protecting Return Routability Packets . . .  99\n          10.5.  Dynamic\
    \ Home Agent Address Discovery. . . . . . . .  99\n                 10.5.1. Receiving\
    \ Router Advertisement Messages . . 100\n          10.6.  Sending Prefix Information\
    \ to the Mobile Node . . . 102\n                 10.6.1. List of Home Network\
    \ Prefixes . . . . . . . 102\n                 10.6.2. Scheduling Prefix Deliveries.\
    \ . . . . . . . 102\n                 10.6.3. Sending Advertisements. . . . .\
    \ . . . . . . 104\n                 10.6.4. Lifetimes for Changed Prefixes. .\
    \ . . . . . 105\n   11.    Mobile Node Operation. . . . . . . . . . . . . . .\
    \ . . . . 105\n          11.1.  Conceptual Data Structures. . . . . . . . . .\
    \ . . . 105\n          11.2.  Processing Mobility Headers . . . . . . . . . .\
    \ . . 107\n          11.3.  Packet Processing . . . . . . . . . . . . . . . .\
    \ . 107\n                 11.3.1. Sending Packets While Away from Home. . . .\
    \ 107\n                 11.3.2. Interaction with Outbound IPsec Processing. 110\n\
    \                 11.3.3. Receiving Packets While Away from Home. . . 112\n  \
    \               11.3.4. Routing Multicast Packets . . . . . . . . . 114\n    \
    \             11.3.5. Receiving ICMP Error Messages . . . . . . . 115\n      \
    \           11.3.6. Receiving Binding Error Messages. . . . . . 116\n        \
    \  11.4.  Home Agent and Prefix Management. . . . . . . . . . 117\n          \
    \       11.4.1. Dynamic Home Agent Address Discovery. . . . 117\n            \
    \     11.4.2. Sending Mobile Prefix Solicitations . . . . 118\n              \
    \   11.4.3. Receiving Mobile Prefix Advertisements. . . 118\n          11.5. \
    \ Movement. . . . . . . . . . . . . . . . . . . . . . 120\n                 11.5.1.\
    \ Movement Detection. . . . . . . . . . . . . 120\n                 11.5.2. Forming\
    \ New Care-of Addresses . . . . . . . 122\n                 11.5.3. Using Multiple\
    \ Care-of Addresses. . . . . . 123\n                 11.5.4. Returning Home. .\
    \ . . . . . . . . . . . . . 124\n          11.6.  Return Routability Procedure.\
    \ . . . . . . . . . . . 126\n                 11.6.1. Sending Test Init Messages.\
    \ . . . . . . . . 126\n                 11.6.2. Receiving Test Messages . . .\
    \ . . . . . . . 127\n                 11.6.3. Protecting Return Routability Packets\
    \ . . . 128\n          11.7.  Processing Bindings . . . . . . . . . . . . . .\
    \ . . 128\n                 11.7.1. Sending Binding Updates to the Home Agent\
    \ . 128\n                 11.7.2. Correspondent Registration. . . . . . . . .\
    \ 131\n                 11.7.3. Receiving Binding Acknowledgements. . . . . 134\n\
    \                 11.7.4. Receiving Binding Refresh Requests. . . . . 136\n  \
    \        11.8.  Retransmissions and Rate Limiting . . . . . . . . . 137\n   12.\
    \    Protocol Constants . . . . . . . . . . . . . . . . . . . . 138\n   13.  \
    \  Protocol Configuration Variables . . . . . . . . . . . . . 138\n   14.    IANA\
    \ Considerations. . . . . . . . . . . . . . . . . . . . 139\n   15.    Security\
    \ Considerations. . . . . . . . . . . . . . . . . . 142\n          15.1.  Threats\
    \ . . . . . . . . . . . . . . . . . . . . . . 142\n          15.2.  Features.\
    \ . . . . . . . . . . . . . . . . . . . . . 144\n          15.3.  Binding Updates\
    \ to Home Agent . . . . . . . . . . . 145\n          15.4.  Binding Updates to\
    \ Correspondent Nodes. . . . . . . 148\n                 15.4.1. Overview. . .\
    \ . . . . . . . . . . . . . . . 149\n                 15.4.2. Achieved Security\
    \ Properties. . . . . . . . 149\n                 15.4.3. Comparison to Regular\
    \ IPv6 Communications . 150\n                 15.4.4. Replay Attacks. . . . .\
    \ . . . . . . . . . . 152\n                 15.4.5. Denial-of-Service Attacks\
    \ . . . . . . . . . 152\n                 15.4.6. Key Lengths . . . . . . . .\
    \ . . . . . . . . 153\n          15.5.  Dynamic Home Agent Address Discovery.\
    \ . . . . . . . 154\n          15.6.  Mobile Prefix Discovery . . . . . . . .\
    \ . . . . . . 155\n          15.7.  Tunneling via the Home Agent. . . . . . .\
    \ . . . . . 155\n          15.8.  Home Address Option . . . . . . . . . . . .\
    \ . . . . 156\n          15.9.  Type 2 Routing Header . . . . . . . . . . . .\
    \ . . . 156\n   16.    Contributors . . . . . . . . . . . . . . . . . . . . .\
    \ . . 157\n   17.    Acknowledgements . . . . . . . . . . . . . . . . . . . .\
    \ . 157\n   18.    References . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 158\n          18.1.  Normative References. . . . . . . . . . . . . . . . 158\n\
    \          18.2.  Informative References. . . . . . . . . . . . . . . 159\n  \
    \ Appendix A.   Future Extensions . . . . . . . . . . . . . . . . . 161\n    \
    \      A.1.   Piggybacking. . . . . . . . . . . . . . . . . . . . 161\n      \
    \    A.2.   Triangular Routing. . . . . . . . . . . . . . . . . 161\n        \
    \  A.3.   New Authorization Methods . . . . . . . . . . . . . 161\n          A.4.\
    \   Dynamically Generated Home Addresses. . . . . . . . 161\n          A.5.  \
    \ Remote Home Address Configuration . . . . . . . . . 162\n          A.6.   Neighbor\
    \ Discovery Extensions . . . . . . . . . . . 163\n   Authors' Addresses. . . .\
    \ . . . . . . . . . . . . . . . . . . . . 164\n   Full Copyright Statement. .\
    \ . . . . . . . . . . . . . . . . . . . 165\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a protocol which allows nodes to\
    \ remain\n   reachable while moving around in the IPv6 Internet.  Without specific\n\
    \   support for mobility in IPv6 [11], packets destined to a mobile node\n   would\
    \ not be able to reach it while the mobile node is away from its\n   home link.\
    \  In order to continue communication in spite of its\n   movement, a mobile node\
    \ could change its IP address each time it\n   moves to a new link, but the mobile\
    \ node would then not be able to\n   maintain transport and higher-layer connections\
    \ when it changes\n   location.  Mobility support in IPv6 is particularly important,\
    \ as\n   mobile computers are likely to account for a majority or at least a\n\
    \   substantial fraction of the population of the Internet during the\n   lifetime\
    \ of IPv6.\n   The protocol defined in this document, known as Mobile IPv6, allows\
    \ a\n   mobile node to move from one link to another without changing the\n  \
    \ mobile node's \"home address\".  Packets may be routed to the mobile\n   node\
    \ using this address regardless of the mobile node's current point\n   of attachment\
    \ to the Internet.  The mobile node may also continue to\n   communicate with\
    \ other nodes (stationary or mobile) after moving to a\n   new link.  The movement\
    \ of a mobile node away from its home link is\n   thus transparent to transport\
    \ and higher-layer protocols and\n   applications.\n   The Mobile IPv6 protocol\
    \ is just as suitable for mobility across\n   homogeneous media as for mobility\
    \ across heterogeneous media.  For\n   example, Mobile IPv6 facilitates node movement\
    \ from one Ethernet\n   segment to another as well as it facilitates node movement\
    \ from an\n   Ethernet segment to a wireless LAN cell, with the mobile node's\
    \ IP\n   address remaining unchanged in spite of such movement.\n   One can think\
    \ of the Mobile IPv6 protocol as solving the network-\n   layer mobility management\
    \ problem.  Some mobility management\n   applications -- for example, handover\
    \ among wireless transceivers,\n   each of which covers only a very small geographic\
    \ area -- have been\n   solved using link-layer techniques.  For example, in many\
    \ current\n   wireless LAN products, link-layer mobility mechanisms allow a\n\
    \   \"handover\" of a mobile node from one cell to another, re-establishing\n\
    \   link-layer connectivity to the node in each new location.\n   Mobile IPv6\
    \ does not attempt to solve all general problems related to\n   the use of mobile\
    \ computers or wireless networks.  In particular,\n   this protocol does not attempt\
    \ to solve:\n   o  Handling links with unidirectional connectivity or partial\n\
    \      reachability, such as the hidden terminal problem where a host is\n   \
    \   hidden from only some of the routers on the link.\n   o  Access control on\
    \ a link being visited by a mobile node.\n   o  Local or hierarchical forms of\
    \ mobility management (similar to\n      many current link-layer mobility management\
    \ solutions).\n   o  Assistance for adaptive applications.\n   o  Mobile routers.\n\
    \   o  Service Discovery.\n   o  Distinguishing between packets lost due to bit\
    \ errors vs.  network\n      congestion.\n"
- title: 2.  Comparison with Mobile IP for IPv4
  contents:
  - "2.  Comparison with Mobile IP for IPv4\n   The design of Mobile IP support in\
    \ IPv6 (Mobile IPv6) benefits both\n   from the experiences gained from the development\
    \ of Mobile IP support\n   in IPv4 (Mobile IPv4) [22, 23, 24], and from the opportunities\n\
    \   provided by IPv6.  Mobile IPv6 thus shares many features with Mobile\n   IPv4,\
    \ but is integrated into IPv6 and offers many other improvements.\n   This section\
    \ summarizes the major differences between Mobile IPv4 and\n   Mobile IPv6:\n\
    \   o  There is no need to deploy special routers as \"foreign agents\", as\n\
    \      in Mobile IPv4.  Mobile IPv6 operates in any location without any\n   \
    \   special support required from the local router.\n   o  Support for route optimization\
    \ is a fundamental part of the\n      protocol, rather than a nonstandard set\
    \ of extensions.\n   o  Mobile IPv6 route optimization can operate securely even\
    \ without\n      pre-arranged security associations.  It is expected that route\n\
    \      optimization can be deployed on a global scale between all mobile\n   \
    \   nodes and correspondent nodes.\n   o  Support is also integrated into Mobile\
    \ IPv6 for allowing route\n      optimization to coexist efficiently with routers\
    \ that perform\n      \"ingress filtering\" [26].\n   o  The IPv6 Neighbor Unreachability\
    \ Detection assures symmetric\n      reachability between the mobile node and\
    \ its default router in the\n      current location.\n   o  Most packets sent\
    \ to a mobile node while away from home in Mobile\n      IPv6 are sent using an\
    \ IPv6 routing header rather than IP\n      encapsulation, reducing the amount\
    \ of resulting overhead compared\n      to Mobile IPv4.\n   o  Mobile IPv6 is\
    \ decoupled from any particular link layer, as it\n      uses IPv6 Neighbor Discovery\
    \ [12] instead of ARP.  This also\n      improves the robustness of the protocol.\n\
    \   o  The use of IPv6 encapsulation (and the routing header) removes the\n  \
    \    need in Mobile IPv6 to manage \"tunnel soft state\".\n   o  The dynamic home\
    \ agent address discovery mechanism in Mobile IPv6\n      returns a single reply\
    \ to the mobile node.  The directed broadcast\n      approach used in IPv4 returns\
    \ separate replies from each home\n      agent.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP\
    \ 14, RFC 2119 [2].\n"
- title: 3.1.  General Terms
  contents:
  - "3.1.  General Terms\n   IP\n      Internet Protocol Version 6 (IPv6).\n   node\n\
    \      A device that implements IP.\n   router\n      A node that forwards IP\
    \ packets not explicitly addressed to\n      itself.\n   unicast routable address\n\
    \      An identifier for a single interface such that a packet sent to it\n  \
    \    from another IPv6 subnet is delivered to the interface identified\n     \
    \ by that address.  Accordingly, a unicast routable address must\n      have either\
    \ a global or site-local scope (but not link-local).\n   host\n      Any node\
    \ that is not a router.\n   link\n      A communication facility or medium over\
    \ which nodes can\n      communicate at the link layer, such as an Ethernet (simple\
    \ or\n      bridged).  A link is the layer immediately below IP.\n   interface\n\
    \      A node's attachment to a link.\n   subnet prefix\n      A bit string that\
    \ consists of some number of initial bits of an IP\n      address.\n   interface\
    \ identifier\n      A number used to identify a node's interface on a link.  The\n\
    \      interface identifier is the remaining low-order bits in the node's\n  \
    \    IP address after the subnet prefix.\n   link-layer address\n      A link-layer\
    \ identifier for an interface, such as IEEE 802\n      addresses on Ethernet links.\n\
    \   packet\n      An IP header plus payload.\n   security association\n      An\
    \ IPsec security association is a cooperative relationship formed\n      by the\
    \ sharing of cryptographic keying material and associated\n      context.  Security\
    \ associations are simplex.  That is, two\n      security associations are needed\
    \ to protect bidirectional traffic\n      between two nodes, one for each direction.\n\
    \   security policy database\n      A database that specifies what security services\
    \ are to be offered\n      to IP packets and in what fashion.\n   destination\
    \ option\n      Destination options are carried by the IPv6 Destination Options\n\
    \      extension header.  Destination options include optional\n      information\
    \ that need be examined only by the IPv6 node given as\n      the destination\
    \ address in the IPv6 header, not by routers in\n      between.  Mobile IPv6 defines\
    \ one new destination option, the Home\n      Address destination option (see\
    \ Section 6.3).\n   routing header\n      A routing header may be present as an\
    \ IPv6 header extension, and\n      indicates that the payload has to be delivered\
    \ to a destination\n      IPv6 address in some way that is different from what\
    \ would be\n      carried out by standard Internet routing.  In this document,\
    \ use\n      of the term \"routing header\" typically refers to use of a type\
    \ 2\n      routing header, as specified in Section 6.4.\n   \"|\" (concatenation)\n\
    \      Some formulas in this specification use the symbol \"|\" to indicate\n\
    \      bytewise concatenation, as in A | B.  This concatenation requires\n   \
    \   that all of the octets of the datum A appear first in the result,\n      followed\
    \ by all of the octets of the datum B.\n   First (size, input)\n      Some formulas\
    \ in this specification use a functional form \"First\n      (size, input)\" to\
    \ indicate truncation of the \"input\" data so that\n      only the first \"size\"\
    \ bits remain to be used.\n"
- title: 3.2.  Mobile IPv6 Terms
  contents:
  - "3.2.  Mobile IPv6 Terms\n   home address\n      A unicast routable address assigned\
    \ to a mobile node, used as the\n      permanent address of the mobile node. \
    \ This address is within the\n      mobile node's home link.  Standard IP routing\
    \ mechanisms will\n      deliver packets destined for a mobile node's home address\
    \ to its\n      home link.  Mobile nodes can have multiple home addresses, for\n\
    \      instance when there are multiple home prefixes on the home link.\n   home\
    \ subnet prefix\n      The IP subnet prefix corresponding to a mobile node's home\n\
    \      address.\n   home link\n      The link on which a mobile node's home subnet\
    \ prefix is defined.\n   mobile node\n      A node that can change its point of\
    \ attachment from one link to\n      another, while still being reachable via\
    \ its home address.\n   movement\n      A change in a mobile node's point of attachment\
    \ to the Internet\n      such that it is no longer connected to the same link\
    \ as it was\n      previously.  If a mobile node is not currently attached to\
    \ its\n      home link, the mobile node is said to be \"away from home\".\n  \
    \ L2 handover\n      A process by which the mobile node changes from one link-layer\n\
    \      connection to another.  For example, a change of wireless access\n    \
    \  point is an L2 handover.\n   L3 handover\n      Subsequent to an L2 handover,\
    \ a mobile node detects a change in an\n      on-link subnet prefix that would\
    \ require a change in the primary\n      care-of address.  For example, a change\
    \ of access router\n      subsequent to a change of wireless access point typically\
    \ results\n      in an L3 handover.\n   correspondent node\n      A peer node\
    \ with which a mobile node is communicating.  The\n      correspondent node may\
    \ be either mobile or stationary.\n   foreign subnet prefix\n      Any IP subnet\
    \ prefix other than the mobile node's home subnet\n      prefix.\n   foreign link\n\
    \      Any link other than the mobile node's home link.\n   care-of address\n\
    \      A unicast routable address associated with a mobile node while\n      visiting\
    \ a foreign link; the subnet prefix of this IP address is a\n      foreign subnet\
    \ prefix.  Among the multiple care-of addresses that\n      a mobile node may\
    \ have at any given time (e.g., with different\n      subnet prefixes), the one\
    \ registered with the mobile node's home\n      agent for a given home address\
    \ is called its \"primary\" care-of\n      address.\n   home agent\n      A router\
    \ on a mobile node's home link with which the mobile node\n      has registered\
    \ its current care-of address.  While the mobile node\n      is away from home,\
    \ the home agent intercepts packets on the home\n      link destined to the mobile\
    \ node's home address, encapsulates\n      them, and tunnels them to the mobile\
    \ node's registered care-of\n      address.\n   binding\n      The association\
    \ of the home address of a mobile node with a care-\n      of address for that\
    \ mobile node, along with the remaining lifetime\n      of that association.\n\
    \   registration\n      The process during which a mobile node sends a Binding\
    \ Update to\n      its home agent or a correspondent node, causing a binding for\
    \ the\n      mobile node to be registered.\n   mobility message\n      A message\
    \ containing a Mobility Header (see Section 6.1).\n   binding authorization\n\
    \      Correspondent registration needs to be authorized to allow the\n      recipient\
    \ to believe that the sender has the right to specify a\n      new binding.\n\
    \   return routability procedure\n      The return routability procedure authorizes\
    \ registrations by the\n      use of a cryptographic token exchange.\n   correspondent\
    \ registration\n      A return routability procedure followed by a registration,\
    \ run\n      between the mobile node and a correspondent node.\n   home registration\n\
    \      A registration between the mobile node and its home agent,\n      authorized\
    \ by the use of IPsec.\n   nonce\n      Nonces are random numbers used internally\
    \ by the correspondent\n      node in the creation of keygen tokens related to\
    \ the return\n      routability procedure.  The nonces are not specific to a mobile\n\
    \      node, and are kept secret within the correspondent node.\n   nonce index\n\
    \      A nonce index is used to indicate which nonces have been used when\n  \
    \    creating keygen token values, without revealing the nonces\n      themselves.\n\
    \   cookie\n      A cookie is a random number used by a mobile node to prevent\n\
    \      spoofing by a bogus correspondent node in the return routability\n    \
    \  procedure.\n   care-of init cookie\n      A cookie sent to the correspondent\
    \ node in the Care-of Test Init\n      message, to be returned in the Care-of\
    \ Test message.\n   home init cookie\n      A cookie sent to the correspondent\
    \ node in the Home Test Init\n      message, to be returned in the Home Test message.\n\
    \   keygen token\n      A keygen token is a number supplied by a correspondent\
    \ node in the\n      return routability procedure to enable the mobile node to\
    \ compute\n      the necessary binding management key for authorizing a Binding\n\
    \      Update.\n   care-of keygen token\n      A keygen token sent by the correspondent\
    \ node in the Care-of Test\n      message.\n   home keygen token\n      A keygen\
    \ token sent by the correspondent node in the Home Test\n      message.\n   binding\
    \ management key (Kbm)\n      A binding management key (Kbm) is a key used for\
    \ authorizing a\n      binding cache management message (e.g., Binding Update\
    \ or Binding\n      Acknowledgement).  Return routability provides a way to create\
    \ a\n      binding management key.\n"
- title: 4.  Overview of Mobile IPv6
  contents:
  - '4.  Overview of Mobile IPv6

    '
- title: 4.1.  Basic Operation
  contents:
  - "4.1.  Basic Operation\n   A mobile node is always expected to be addressable\
    \ at its home\n   address, whether it is currently attached to its home link or\
    \ is away\n   from home.  The \"home address\" is an IP address assigned to the\n\
    \   mobile node within its home subnet prefix on its home link.  While a\n   mobile\
    \ node is at home, packets addressed to its home address are\n   routed to the\
    \ mobile node's home link, using conventional Internet\n   routing mechanisms.\n\
    \   While a mobile node is attached to some foreign link away from home,\n   it\
    \ is also addressable at one or more care-of addresses.  A care-of\n   address\
    \ is an IP address associated with a mobile node that has the\n   subnet prefix\
    \ of a particular foreign link.  The mobile node can\n   acquire its care-of address\
    \ through conventional IPv6 mechanisms,\n   such as stateless or stateful auto-configuration.\
    \  As long as the\n   mobile node stays in this location, packets addressed to\
    \ this care-of\n   address will be routed to the mobile node.  The mobile node\
    \ may also\n   accept packets from several care-of addresses, such as when it\
    \ is\n   moving but still reachable at the previous link.\n   The association\
    \ between a mobile node's home address and care-of\n   address is known as a \"\
    binding\" for the mobile node.  While away from\n   home, a mobile node registers\
    \ its primary care-of address with a\n   router on its home link, requesting this\
    \ router to function as the\n   \"home agent\" for the mobile node.  The mobile\
    \ node performs this\n   binding registration by sending a \"Binding Update\"\
    \ message to the\n   home agent.  The home agent replies to the mobile node by\
    \ returning a\n   \"Binding Acknowledgement\" message.  The operation of the mobile\
    \ node\n   is specified in Section 11, and the operation of the home agent is\n\
    \   specified in Section 10.\n   Any node communicating with a mobile node is\
    \ referred to in this\n   document as a \"correspondent node\" of the mobile node,\
    \ and may itself\n   be either a stationary node or a mobile node.  Mobile nodes\
    \ can\n   provide information about their current location to correspondent\n\
    \   nodes.  This happens through the correspondent registration.  As a\n   part\
    \ of this procedure, a return routability test is performed in\n   order to authorize\
    \ the establishment of the binding.  The operation\n   of the correspondent node\
    \ is specified in Section 9.\n   There are two possible modes for communications\
    \ between the mobile\n   node and a correspondent node.  The first mode, bidirectional\n\
    \   tunneling, does not require Mobile IPv6 support from the\n   correspondent\
    \ node and is available even if the mobile node has not\n   registered its current\
    \ binding with the correspondent node.  Packets\n   from the correspondent node\
    \ are routed to the home agent and then\n   tunneled to the mobile node.  Packets\
    \ to the correspondent node are\n   tunneled from the mobile node to the home\
    \ agent (\"reverse tunneled\")\n   and then routed normally from the home network\
    \ to the correspondent\n   node.  In this mode, the home agent uses proxy Neighbor\
    \ Discovery to\n   intercept any IPv6 packets addressed to the mobile node's home\n\
    \   address (or home addresses) on the home link.  Each intercepted\n   packet\
    \ is tunneled to the mobile node's primary care-of address.\n   This tunneling\
    \ is performed using IPv6 encapsulation [15].\n   The second mode, \"route optimization\"\
    , requires the mobile node to\n   register its current binding at the correspondent\
    \ node.  Packets from\n   the correspondent node can be routed directly to the\
    \ care-of address\n   of the mobile node.  When sending a packet to any IPv6 destination,\n\
    \   the correspondent node checks its cached bindings for an entry for\n   the\
    \ packet's destination address.  If a cached binding for this\n   destination\
    \ address is found, the node uses a new type of IPv6\n   routing header [11] (see\
    \ Section 6.4) to route the packet to the\n   mobile node by way of the care-of\
    \ address indicated in this binding.\n   Routing packets directly to the mobile\
    \ node's care-of address allows\n   the shortest communications path to be used.\
    \  It also eliminates\n   congestion at the mobile node's home agent and home\
    \ link.  In\n   addition, the impact of any possible failure of the home agent\
    \ or\n   networks on the path to or from it is reduced.\n   When routing packets\
    \ directly to the mobile node, the correspondent\n   node sets the Destination\
    \ Address in the IPv6 header to the care-of\n   address of the mobile node.  A\
    \ new type of IPv6 routing header (see\n   Section 6.4) is also added to the packet\
    \ to carry the desired home\n   address.  Similarly, the mobile node sets the\
    \ Source Address in the\n   packet's IPv6 header to its current care-of addresses.\
    \  The mobile\n   node adds a new IPv6 \"Home Address\" destination option (see\
    \ Section\n   6.3) to carry its home address.  The inclusion of home addresses\
    \ in\n   these packets makes the use of the care-of address transparent above\n\
    \   the network layer (e.g., at the transport layer).\n   Mobile IPv6 also provides\
    \ support for multiple home agents, and a\n   limited support for the reconfiguration\
    \ of the home network.  In\n   these cases, the mobile node may not know the IP\
    \ address of its own\n   home agent, and even the home subnet prefixes may change\
    \ over time.\n   A mechanism, known as \"dynamic home agent address discovery\"\
    \ allows a\n   mobile node to dynamically discover the IP address of a home agent\
    \ on\n   its home link, even when the mobile node is away from home.  Mobile\n\
    \   nodes can also learn new information about home subnet prefixes\n   through\
    \ the \"mobile prefix discovery\" mechanism.  These mechanisms\n   are described\
    \ starting from Section 6.5.\n"
- title: 4.2.  New IPv6 Protocol
  contents:
  - "4.2.  New IPv6 Protocol\n   Mobile IPv6 defines a new IPv6 protocol, using the\
    \ Mobility Header\n   (see Section 6.1).  This Header is used to carry the following\n\
    \   messages:\n   Home Test Init\n   Home Test\n   Care-of Test Init\n   Care-of\
    \ Test\n      These four messages are used to perform the return routability\n\
    \      procedure from the mobile node to a correspondent node.  This\n      ensures\
    \ authorization of subsequent Binding Updates, as described\n      in Section\
    \ 5.2.5.\n   Binding Update\n      A Binding Update is used by a mobile node to\
    \ notify a\n      correspondent node or the mobile node's home agent of its current\n\
    \      binding.  The Binding Update sent to the mobile node's home agent\n   \
    \   to register its primary care-of address is marked as a \"home\n      registration\"\
    .\n   Binding Acknowledgement\n      A Binding Acknowledgement is used to acknowledge\
    \ receipt of a\n      Binding Update, if an acknowledgement was requested in the\
    \ Binding\n      Update, the binding update was sent to a home agent, or an error\n\
    \      occurred.\n   Binding Refresh Request\n      A Binding Refresh Request\
    \ is used by a correspondent node to\n      request a mobile node to re-establish\
    \ its binding with the\n      correspondent node.  This message is typically used\
    \ when the\n      cached binding is in active use but the binding's lifetime is\n\
    \      close to expiration.  The correspondent node may use, for\n      instance,\
    \ recent traffic and open transport layer connections as\n      an indication\
    \ of active use.\n   Binding Error\n      The Binding Error is used by the correspondent\
    \ node to signal an\n      error related to mobility, such as an inappropriate\
    \ attempt to use\n      the Home Address destination option without an existing\
    \ binding.\n"
- title: 4.3.  New IPv6 Destination Option
  contents:
  - "4.3.  New IPv6 Destination Option\n   Mobile IPv6 defines a new IPv6 destination\
    \ option, the Home Address\n   destination option.  This option is described in\
    \ detail in Section\n   6.3.\n"
- title: 4.4.  New IPv6 ICMP Messages
  contents:
  - "4.4.  New IPv6 ICMP Messages\n   Mobile IPv6 also introduces four new ICMP message\
    \ types, two for use\n   in the dynamic home agent address discovery mechanism,\
    \ and two for\n   renumbering and mobile configuration mechanisms.  As described\
    \ in\n   Section 10.5 and Section 11.4.1, the following two new ICMP message\n\
    \   types are used for home agent address discovery:\n   o  Home Agent Address\
    \ Discovery Request, described in Section 6.5.\n   o  Home Agent Address Discovery\
    \ Reply, described in Section 6.6.\n   The next two message types are used for\
    \ network renumbering and\n   address configuration on the mobile node, as described\
    \ in Section\n   10.6:\n   o  Mobile Prefix Solicitation, described in Section\
    \ 6.7.\n   o  Mobile Prefix Advertisement, described in Section 6.8.\n"
- title: 4.5.  Conceptual Data Structure Terminology
  contents:
  - "4.5.  Conceptual Data Structure Terminology\n   This document describes the Mobile\
    \ IPv6 protocol in terms of the\n   following conceptual data structures:\n  \
    \ Binding Cache\n      A cache of bindings for other nodes.  This cache is maintained\
    \ by\n      home agents and correspondent nodes.  The cache contains both\n  \
    \    \"correspondent registration\" entries (see Section 9.1) and \"home\n   \
    \   registration\" entries (see Section 10.1).\n   Binding Update List\n     \
    \ This list is maintained by each mobile node.  The list has an item\n      for\
    \ every binding that the mobile node has or is trying to\n      establish with\
    \ a specific other node.  Both correspondent and home\n      registrations are\
    \ included in this list.  Entries from the list\n      are deleted as the lifetime\
    \ of the binding expires.  See Section\n      11.1.\n   Home Agents List\n   \
    \   Home agents need to know which other home agents are on the same\n      link.\
    \  This information is stored in the Home Agents List, as\n      described in\
    \ more detail in Section 10.1.  The list is used for\n      informing mobile nodes\
    \ during dynamic home agent address\n      discovery.\n"
- title: 4.6.  Site-Local Addressability
  contents:
  - "4.6.  Site-Local Addressability\n   This specification requires that home and\
    \ care-of addresses MUST be\n   unicast routable addresses.  Site-local addresses\
    \ may be usable on\n   networks that are not connected to the Internet, but this\n\
    \   specification does not define when such usage is safe and when it is\n   not.\
    \  Mobile nodes may not be aware of which site they are currently\n   in, it is\
    \ hard to prevent accidental attachment to other sites, and\n   ambiguity of site-local\
    \ addresses can cause problems if the home and\n   visited networks use the same\
    \ addresses.  Therefore, site-local\n   addresses SHOULD NOT be used as home or\
    \ care-of addresses.\n"
- title: 5.  Overview of Mobile IPv6 Security
  contents:
  - "5.  Overview of Mobile IPv6 Security\n   This specification provides a number\
    \ of security features.  These\n   include the protection of Binding Updates both\
    \ to home agents and\n   correspondent nodes, the protection of mobile prefix\
    \ discovery, and\n   the protection of the mechanisms that Mobile IPv6 uses for\n\
    \   transporting data packets.\n   Binding Updates are protected by the use of\
    \ IPsec extension headers,\n   or by the use of the Binding Authorization Data\
    \ option.  This option\n   employs a binding management key, Kbm, which can be\
    \ established\n   through the return routability procedure.  Mobile prefix discovery\
    \ is\n   protected through the use of IPsec extension headers.  Mechanisms\n \
    \  related to transporting payload packets - such as the Home Address\n   destination\
    \ option and type 2 routing header - have been specified in\n   a manner which\
    \ restricts their use in attacks.\n"
- title: 5.1.  Binding Updates to Home Agents
  contents:
  - "5.1.  Binding Updates to Home Agents\n   The mobile node and the home agent MUST\
    \ use an IPsec security\n   association to protect the integrity and authenticity\
    \ of the Binding\n   Updates and Acknowledgements.  Both the mobile nodes and\
    \ the home\n   agents MUST support and SHOULD use the Encapsulating Security Payload\n\
    \   (ESP) [6] header in transport mode and MUST use a non-NULL payload\n   authentication\
    \ algorithm to provide data origin authentication,\n   connectionless integrity\
    \ and optional anti-replay protection.  Note\n   that Authentication Header (AH)\
    \ [5] is also possible but for brevity\n   not discussed in this specification.\n\
    \   In order to protect messages exchanged between the mobile node and\n   the\
    \ home agent with IPsec, appropriate security policy database\n   entries must\
    \ be created.  A mobile node must be prevented from using\n   its security association\
    \ to send a Binding Update on behalf of\n   another mobile node using the same\
    \ home agent.  This MUST be achieved\n   by having the home agent check that the\
    \ given home address has been\n   used with the right security association.  Such\
    \ a check is provided\n   in the IPsec processing, by having the security policy\
    \ database\n   entries unequivocally identify a single security association for\n\
    \   protecting Binding Updates between any given home address and home\n   agent.\
    \  In order to make this possible, it is necessary that the home\n   address of\
    \ the mobile node is visible in the Binding Updates and\n   Acknowledgements.\
    \  The home address is used in these packets as a\n   source or destination, or\
    \ in the Home Address Destination option or\n   the type 2 routing header.\n \
    \  As with all IPsec security associations in this specification, manual\n   configuration\
    \ of security associations MUST be supported.  The used\n   shared secrets MUST\
    \ be random and unique for different mobile nodes,\n   and MUST be distributed\
    \ off-line to the mobile nodes.\n   Automatic key management with IKE [9] MAY\
    \ be supported.  When IKE is\n   used, either the security policy database entries\
    \ or the Mobile IPv6\n   processing MUST unequivocally identify the IKE phase\
    \ 1 credentials\n   which can be used to authorize the creation of security associations\n\
    \   for protecting Binding Updates for a particular home address.  How\n   these\
    \ mappings are maintained is outside the scope of this\n   specification, but\
    \ they may be maintained, for instance, as a locally\n   administered table in\
    \ the home agent.  If the phase 1 identity is a\n   Fully Qualified Domain Name\
    \ (FQDN), secure forms of DNS may also be\n   used.\n   Section 11.3.2 discusses\
    \ how IKE connections to the home agent need a\n   careful treatment of the addresses\
    \ used for transporting IKE.  This\n   is necessary to ensure that a Binding Update\
    \ is not needed before the\n   IKE exchange which is needed for securing the Binding\
    \ Update.\n   When IKE version 1 is used with preshared secret authentication\n\
    \   between the mobile node and the home agent, aggressive mode MUST be\n   used.\n\
    \   The ID_IPV6_ADDR Identity Payload MUST NOT be used in IKEv1 phase 1.\n   Reference\
    \ [21] contains a more detailed description and examples on\n   using IPsec to\
    \ protect the communications between the mobile node and\n   the home agent.\n"
- title: 5.2.  Binding Updates to Correspondent Nodes
  contents:
  - "5.2.  Binding Updates to Correspondent Nodes\n   The protection of Binding Updates\
    \ sent to correspondent nodes does\n   not require the configuration of security\
    \ associations or the\n   existence of an authentication infrastructure between\
    \ the mobile\n   nodes and correspondent nodes.  Instead, a method called the\
    \ return\n   routability procedure is used to assure that the right mobile node\
    \ is\n   sending the message.  This method does not protect against attackers\n\
    \   who are on the path between the home network and the correspondent\n   node.\
    \  However, attackers in such a location are capable of\n   performing the same\
    \ attacks even without Mobile IPv6.  The main\n   advantage of the return routability\
    \ procedure is that it limits the\n   potential attackers to those having an access\
    \ to one specific path in\n   the Internet, and avoids forged Binding Updates\
    \ from anywhere else in\n   the Internet.  For a more in depth explanation of\
    \ the security\n   properties of the return routability procedure, see Section\
    \ 15.\n   The integrity and authenticity of the Binding Updates messages to\n\
    \   correspondent nodes is protected by using a keyed-hash algorithm.\n   The\
    \ binding management key, Kbm, is used to key the hash algorithm\n   for this\
    \ purpose.  Kbm is established using data exchanged during the\n   return routability\
    \ procedure.  The data exchange is accomplished by\n   use of node keys, nonces,\
    \ cookies, tokens, and certain cryptographic\n   functions.  Section 5.2.5 outlines\
    \ the basic return routability\n   procedure.  Section 5.2.6 shows how the results\
    \ of this procedure are\n   used to authorize a Binding Update to a correspondent\
    \ node.\n"
- title: 5.2.1.  Node Keys
  contents:
  - "5.2.1.  Node Keys\n   Each correspondent node has a secret key, Kcn, called the\
    \ \"node key\",\n   which it uses to produce the keygen tokens sent to the mobile\
    \ nodes.\n   The node key MUST be a random number, 20 octets in length.  The node\n\
    \   key allows the correspondent node to verify that the keygen tokens\n   used\
    \ by the mobile node in authorizing a Binding Update are indeed\n   its own. \
    \ This key MUST NOT be shared with any other entity.\n   A correspondent node\
    \ MAY generate a fresh node key at any time; this\n   avoids the need for secure\
    \ persistent key storage.  Procedures for\n   optionally updating the node key\
    \ are discussed later in Section\n   5.2.7.\n"
- title: 5.2.2.  Nonces
  contents:
  - "5.2.2.  Nonces\n   Each correspondent node also generates nonces at regular intervals.\n\
    \   The nonces should be generated by using a random number generator\n   that\
    \ is known to have good randomness properties [1].  A\n   correspondent node may\
    \ use the same Kcn and nonce with all the\n   mobiles it is in communication with.\n\
    \   Each nonce is identified by a nonce index.  When a new nonce is\n   generated,\
    \ it must be associated with a new nonce index; this may be\n   done, for example,\
    \ by incrementing the value of the previous nonce\n   index, if the nonce index\
    \ is used as an array pointer into a linear\n   array of nonces.  However, there\
    \ is no requirement that nonces be\n   stored that way, or that the values of\
    \ subsequent nonce indices have\n   any particular relationship to each other.\
    \  The index value is\n   communicated in the protocol, so that if a nonce is\
    \ replaced by new\n   nonce during the run of a protocol, the correspondent node\
    \ can\n   distinguish messages that should be checked against the old nonce\n\
    \   from messages that should be checked against the new nonce.  Strictly\n  \
    \ speaking, indices are not necessary in the authentication, but allow\n   the\
    \ correspondent node to efficiently find the nonce value that it\n   used in creating\
    \ a keygen token.\n   Correspondent nodes keep both the current nonce and a small\
    \ set of\n   valid previous nonces whose lifetime has not yet expired.  Expired\n\
    \   values MUST be discarded, and messages using stale or unknown indices\n  \
    \ will be rejected.\n   The specific nonce index values cannot be used by mobile\
    \ nodes to\n   determine the validity of the nonce.  Expected validity times for\
    \ the\n   nonces values and the procedures for updating them are discussed\n \
    \  later in Section 5.2.7.\n   A nonce is an octet string of any length.  The\
    \ recommended length is\n   64 bits.\n"
- title: 5.2.3.  Cookies and Tokens
  contents:
  - "5.2.3.  Cookies and Tokens\n   The return routability address test procedure\
    \ uses cookies and keygen\n   tokens as opaque values within the test init and\
    \ test messages,\n   respectively.\n   o  The \"home init cookie\" and \"care-of\
    \ init cookie\" are 64 bit values\n      sent to the correspondent node from the\
    \ mobile node, and later\n      returned to the mobile node.  The home init cookie\
    \ is sent in the\n      Home Test Init message, and returned in the Home Test\
    \ message.\n      The care-of init cookie is sent in the Care-of Test Init message,\n\
    \      and returned in the Care-of Test message.\n   o  The \"home keygen token\"\
    \ and \"care-of keygen token\" are 64-bit\n      values sent by the correspondent\
    \ node to the mobile node via the\n      home agent (via the Home Test message)\
    \ and the care-of address (by\n      the Care-of Test message), respectively.\n\
    \   The mobile node should set the home init or care-of init cookie to a\n   newly\
    \ generated random number in every Home or Care-of Test Init\n   message it sends.\
    \  The cookies are used to verify that the Home Test\n   or Care-of Test message\
    \ matches the Home Test Init or Care-of Test\n   Init message, respectively. \
    \ These cookies also serve to ensure that\n   parties who have not seen the request\
    \ cannot spoof responses.\n   Home and care-of keygen tokens are produced by the\
    \ correspondent node\n   based on its currently active secret key (Kcn) and nonces,\
    \ as well as\n   the home or care-of address (respectively).  A keygen token is\
    \ valid\n   as long as both the secret key (Kcn) and the nonce used to create\
    \ it\n   are valid.\n"
- title: 5.2.4.  Cryptographic Functions
  contents:
  - "5.2.4.  Cryptographic Functions\n   In this specification, the function used\
    \ to compute hash values is\n   SHA1 [20].  Message Authentication Codes (MACs)\
    \ are computed using\n   HMAC_SHA1 [25, 20].  HMAC_SHA1(K,m) denotes such a MAC\
    \ computed on\n   message m with key K.\n"
- title: 5.2.5.  Return Routability Procedure
  contents:
  - "5.2.5.  Return Routability Procedure\n   The Return Routability Procedure enables\
    \ the correspondent node to\n   obtain some reasonable assurance that the mobile\
    \ node is in fact\n   addressable at its claimed care-of address as well as at\
    \ its home\n   address.  Only with this assurance is the correspondent node able\
    \ to\n   accept Binding Updates from the mobile node which would then instruct\n\
    \   the correspondent node to direct that mobile node's data traffic to\n   its\
    \ claimed care-of address.\n   This is done by testing whether packets addressed\
    \ to the two claimed\n   addresses are routed to the mobile node.  The mobile\
    \ node can pass\n   the test only if it is able to supply proof that it received\
    \ certain\n   data (the \"keygen tokens\") which the correspondent node sends\
    \ to\n   those addresses.  These data are combined by the mobile node into a\n\
    \   binding management key, denoted Kbm.\n   The figure below shows the message\
    \ flow for the return routability\n   procedure.\n   Mobile node             \
    \    Home agent           Correspondent node\n        |                      \
    \                               |\n        |  Home Test Init (HoTI)   |      \
    \                    |\n        |------------------------->|------------------------->|\n\
    \        |                          |                          |\n        |  Care-of\
    \ Test Init (CoTI)                           |\n        |---------------------------------------------------->|\n\
    \        |                                                     |\n        |  \
    \                        |  Home Test (HoT)         |\n        |<-------------------------|<-------------------------|\n\
    \        |                          |                          |\n        |  \
    \                           Care-of Test (CoT)      |\n        |<----------------------------------------------------|\n\
    \        |                                                     |\n   The Home\
    \ and Care-of Test Init messages are sent at the same time.\n   The procedure\
    \ requires very little processing at the correspondent\n   node, and the Home\
    \ and Care-of Test messages can be returned quickly,\n   perhaps nearly simultaneously.\
    \  These four messages form the return\n   routability procedure.\n   Home Test\
    \ Init\n      A mobile node sends a Home Test Init message to the correspondent\n\
    \      node (via the home agent) to acquire the home keygen token.  The\n    \
    \  contents of the message can be summarized as follows:\n      *  Source Address\
    \ = home address\n      *  Destination Address = correspondent\n      *  Parameters:\n\
    \            +  home init cookie\n      The Home Test Init message conveys the\
    \ mobile node's home address\n      to the correspondent node.  The mobile node\
    \ also sends along a\n      home init cookie that the correspondent node must\
    \ return later.\n      The Home Test Init message is reverse tunneled through\
    \ the home\n      agent.  (The headers and addresses related to  reverse tunneling\n\
    \      have been omitted from the above discussion of the message\n      contents.)\
    \  The mobile node remembers these cookie values to\n      obtain some assurance\
    \ that its protocol messages are being\n      processed by the desired correspondent\
    \ node.\n   Care-of Test Init\n      The mobile node sends a Care-of Test Init\
    \ message to the\n      correspondent node (directly, not via the home agent)\
    \ to acquire\n      the care-of keygen token.  The contents of this message can\
    \ be\n      summarized as follows:\n      *  Source Address = care-of address\n\
    \      *  Destination Address = correspondent\n      *  Parameters:\n        \
    \    +  care-of init cookie\n      The Care-of Test Init message conveys the mobile\
    \ node's care-of\n      address to the correspondent node.  The mobile node also\
    \ sends\n      along a care-of init cookie that the correspondent node must\n\
    \      return later.  The Care-of Test Init message is sent directly to\n    \
    \  the correspondent node.\n   Home Test\n      The Home Test message is sent\
    \ in response to a Home Test Init\n      message.  It is sent via the home agent.\
    \  The contents of the\n      message are:\n      *  Source Address = correspondent\n\
    \      *  Destination Address = home address\n      *  Parameters:\n         +\
    \  home init cookie\n         +  home keygen token\n         +  home nonce index\n\
    \      When the correspondent node receives the Home Test Init message,\n    \
    \  it generates a home keygen token as follows:\n      home keygen token :=\n\
    \           First (64, HMAC_SHA1 (Kcn, (home address | nonce | 0)))\n      where\
    \ | denotes concatenation.  The final \"0\" inside the HMAC_SHA1\n      function\
    \ is a single zero octet, used to distinguish home and\n      care-of cookies\
    \ from each other.\n      The home keygen token is formed from the first 64 bits\
    \ of the MAC.\n      The home keygen token tests that the mobile node can receive\
    \ were\n      messages sent to its home address.  Kcn is used in the production\n\
    \      of home keygen token in order to allow the correspondent node to\n    \
    \  verify that it generated the home and care-of nonces, without\n      forcing\
    \ the correspondent node to remember a list of all tokens it\n      has handed\
    \ out.\n      The Home Test message is sent to the mobile node via the home\n\
    \      network, where it is presumed that the home agent will tunnel the\n   \
    \   message to the mobile node.  This means that the mobile node needs\n     \
    \ to already have sent a Binding Update to the home agent, so that\n      the\
    \ home agent will have received and authorized the new care-of\n      address\
    \ for the mobile node before the return routability\n      procedure.  For improved\
    \ security, the data passed between the\n      home agent and the mobile node\
    \ is made immune to inspection and\n      passive attacks.  Such protection is\
    \ gained by encrypting the home\n      keygen token as it is tunneled from the\
    \ home agent to the mobile\n      node as specified in Section 10.4.6.  The security\
    \ properties of\n      this additional security are discussed in Section 15.4.1.\n\
    \      The home init cookie from the mobile node is returned in the Home\n   \
    \   Test message, to ensure that the message comes from a node on the\n      route\
    \ between the home agent and the correspondent node.\n      The home nonce index\
    \ is delivered to the mobile node to later\n      allow the correspondent node\
    \ to efficiently find the nonce value\n      that it used in creating the home\
    \ keygen token.\n   Care-of Test\n      This message is sent in response to a\
    \ Care-of Test Init message.\n      This message is not sent via the home agent,\
    \ it is sent directly\n      to the mobile node.  The contents of the message\
    \ are:\n      *  Source Address = correspondent\n      *  Destination Address\
    \ = care-of address\n      *  Parameters:\n         +  care-of init cookie\n \
    \        +  care-of keygen token\n         +  care-of nonce index\n      When\
    \ the correspondent node receives the Care-of Test Init\n      message, it generates\
    \ a care-of keygen token as follows:\n      care-of keygen token :=\n        \
    \ First (64, HMAC_SHA1 (Kcn, (care-of address | nonce | 1)))\n      Here, the\
    \ final \"1\" inside the HMAC_SHA1 function is a single\n      octet containing\
    \ the hex value 0x01, and is used to distinguish\n      home and care-of cookies\
    \ from each other.  The keygen token is\n      formed from the first 64 bits of\
    \ the MAC, and sent directly to the\n      mobile node at its care-of address.\
    \  The care-of init cookie from\n      the Care-of Test Init message is returned\
    \ to ensure that the\n      message comes from a node on the route to the correspondent\
    \ node.\n      The care-of nonce index is provided to identify the nonce used\
    \ for\n      the care-of keygen token.  The home and care-of nonce indices MAY\n\
    \      be the same, or different, in the Home and Care-of Test messages.\n   When\
    \ the mobile node has received both the Home and Care-of Test\n   messages, the\
    \ return routability procedure is complete.  As a result\n   of the procedure,\
    \ the mobile node has the data it needs to send a\n   Binding Update to the correspondent\
    \ node.  The mobile node hashes the\n   tokens together to form a 20 octet binding\
    \ key Kbm:\n      Kbm = SHA1 (home keygen token | care-of keygen token)\n   A\
    \ Binding Update may also be used to delete a previously established\n   binding\
    \ (Section 6.1.7).  In this case, the care-of keygen token is\n   not used.  Instead,\
    \ the binding management key is generated as\n   follows:\n      Kbm = SHA1(home\
    \ keygen token)\n   Note that the correspondent node does not create any state\
    \ specific\n   to the mobile node, until it receives the Binding Update from that\n\
    \   mobile node.  The correspondent node does not maintain the value for\n   the\
    \ binding management key Kbm; it creates Kbm when given the nonce\n   indices\
    \ and the mobile node's addresses.\n"
- title: 5.2.6.  Authorizing Binding Management Messages
  contents:
  - "5.2.6.  Authorizing Binding Management Messages\n   After the mobile node has\
    \ created the binding management key (Kbm),\n   it can supply a verifiable Binding\
    \ Update to the correspondent node.\n   This section provides an overview of this\
    \ registration.  The below\n   figure shows the message flow.\n   Mobile node\
    \                                Correspondent node\n        |               \
    \                                |\n        |             Binding Update (BU)\
    \               |\n        |---------------------------------------------->|\n\
    \        |  (MAC, seq#, nonce indices, care-of address)  |\n        |        \
    \                                       |\n        |                         \
    \                      |\n        |    Binding Acknowledgement (BA) (if sent)\
    \     |\n        |<----------------------------------------------|\n        |\
    \              (MAC, seq#, status)              |\n   Binding Update\n      To\
    \ authorize a Binding Update, the mobile node creates a binding\n      management\
    \ key Kbm from the keygen tokens as described in the\n      previous section.\
    \  The contents of the Binding Update include the\n      following:\n      * \
    \ Source Address = care-of address\n      *  Destination Address = correspondent\n\
    \      *  Parameters:\n         +  home address (within the Home Address destination\
    \ option if\n            different from the Source Address)\n         +  sequence\
    \ number (within the Binding Update message header)\n         +  home nonce index\
    \ (within the Nonce Indices option)\n         +  care-of nonce index (within the\
    \ Nonce Indices option)\n         +  First (96, HMAC_SHA1 (Kbm, (care-of address\
    \ | correspondent\n            | BU)))\n      The Binding Update contains a Nonce\
    \ Indices option, indicating to\n      the correspondent node which home and care-of\
    \ nonces to use to\n      recompute Kbm, the binding management key.  The MAC\
    \ is computed as\n      described in Section 6.2.7, using the correspondent node's\
    \ address\n      as the destination address and the Binding Update message itself\n\
    \      (\"BU\" above) as the MH Data.\n      Once the correspondent node has verified\
    \ the MAC, it can create a\n      Binding Cache entry for the mobile.\n   Binding\
    \ Acknowledgement\n      The Binding Update is in some cases acknowledged by the\n\
    \      correspondent node.  The contents of the message are as follows:\n    \
    \  *  Source Address = correspondent\n      *  Destination Address = care-of address\n\
    \      *  Parameters:\n         +  sequence number (within the Binding Update\
    \ message header)\n         +  First (96, HMAC_SHA1 (Kbm, (care-of address | correspondent\n\
    \            | BA)))\n      The Binding Acknowledgement contains the same sequence\
    \ number as\n      the Binding Update.  The MAC is computed as described in Section\n\
    \      6.2.7, using the correspondent node's address as the destination\n    \
    \  address and the message itself (\"BA\" above) as the MH Data.\n      Bindings\
    \ established with correspondent nodes using keys created\n      by way of the\
    \ return routability procedure MUST NOT exceed\n      MAX_RR_BINDING_LIFETIME\
    \ seconds (see Section 12).\n      The value in the Source Address field in the\
    \ IPv6 header carrying\n      the Binding Update is normally also the care-of\
    \ address which is\n      used in the binding.  However, a different care-of address\
    \ MAY be\n      specified by including an Alternate Care-of Address mobility\n\
    \      option in the Binding Update (see Section 6.2.5).  When such a\n      message\
    \ is sent to the correspondent node and the return\n      routability procedure\
    \ is used as the authorization method, the\n      Care-of Test Init and Care-of\
    \ Test messages MUST have been\n      performed for the address in the Alternate\
    \ Care-of Address option\n      (not the Source Address).  The nonce indices and\
    \ MAC value MUST be\n      based on information gained in this test.\n      Binding\
    \ Updates may also be sent to delete a previously\n      established binding.\
    \  In this case, generation of the binding\n      management key depends exclusively\
    \ on the home keygen token and\n      the care-of nonce index is ignored.\n"
- title: 5.2.7.  Updating Node Keys and Nonces
  contents:
  - "5.2.7.  Updating Node Keys and Nonces\n   Correspondent nodes generate nonces\
    \ at regular intervals.  It is\n   recommended to keep each nonce (identified\
    \ by a nonce index)\n   acceptable for at least MAX_TOKEN_LIFETIME seconds (see\
    \ Section 12)\n   after it has been first used in constructing a return routability\n\
    \   message response.  However, the correspondent node MUST NOT accept\n   nonces\
    \ beyond MAX_NONCE_LIFETIME seconds (see Section 12) after the\n   first use.\
    \  As the difference between these two constants is 30\n   seconds, a convenient\
    \ way to enforce the above lifetimes is to\n   generate a new nonce every 30 seconds.\
    \  The node can then continue to\n   accept tokens that have been based on the\
    \ last 8 (MAX_NONCE_LIFETIME\n   / 30) nonces.  This results in tokens being acceptable\n\
    \   MAX_TOKEN_LIFETIME to MAX_NONCE_LIFETIME seconds after they have been\n  \
    \ sent to the mobile node, depending on whether the token was sent at\n   the\
    \ beginning or end of the first 30 second period.  Note that the\n   correspondent\
    \ node may also attempt to generate new nonces on demand,\n   or only if the old\
    \ nonces have been used.  This is possible, as long\n   as the correspondent node\
    \ keeps track of how long a time ago the\n   nonces were used for the first time,\
    \ and does not generate new nonces\n   on every return routability request.\n\
    \   Due to resource limitations, rapid deletion of bindings, or reboots\n   the\
    \ correspondent node may not in all cases recognize the nonces that\n   the tokens\
    \ were based on.  If a nonce index is unrecognized, the\n   correspondent node\
    \ replies with an error code in the Binding\n   Acknowledgement (either 136, 137,\
    \ or 138 as discussed in Section\n   6.1.8).  The mobile node can then retry the\
    \ return routability\n   procedure.\n   An update of Kcn SHOULD be done at the\
    \ same time as an update of a\n   nonce, so that nonce indices can identify both\
    \ the nonce and the key.\n   Old Kcn values have to be therefore remembered as\
    \ long as old nonce\n   values.\n   Given that the tokens are normally expected\
    \ to be usable for\n   MAX_TOKEN_LIFETIME seconds, the mobile node MAY use them\
    \ beyond a\n   single run of the return routability procedure until\n   MAX_TOKEN_LIFETIME\
    \ expires.  After this the mobile node SHOULD NOT\n   use the tokens.  A fast\
    \ moving mobile node MAY reuse a recent home\n   keygen token from a correspondent\
    \ node when moving to a new location,\n   and just acquire a new care-of keygen\
    \ token to show routability in\n   the new location.\n   While this does not save\
    \ the number of round-trips due to the\n   simultaneous processing of home and\
    \ care-of return routability tests,\n   there are fewer messages being exchanged,\
    \ and a potentially long\n   round-trip through the home agent is avoided.  Consequently,\
    \ this\n   optimization is often useful.  A mobile node that has multiple home\n\
    \   addresses, MAY also use the same care-of keygen token for Binding\n   Updates\
    \ concerning all of these addresses.\n"
- title: 5.2.8.  Preventing Replay Attacks
  contents:
  - "5.2.8.  Preventing Replay Attacks\n   The return routability procedure also protects\
    \ the participants\n   against replayed Binding Updates through the use of the\
    \ sequence\n   number and a MAC.  Care must be taken when removing bindings at\
    \ the\n   correspondent node, however.  Correspondent nodes must retain\n   bindings\
    \ and the associated sequence number information at least as\n   long as the nonces\
    \ used in the authorization of the binding are still\n   valid.  Alternatively,\
    \ if memory is very constrained, the\n   correspondent node MAY invalidate the\
    \ nonces that were used for the\n   binding being deleted (or some larger group\
    \ of nonces that they\n   belong to).  This may, however, impact the ability to\
    \ accept Binding\n   Updates from mobile nodes that have recently received keygen\
    \ tokens.\n   This alternative is therefore recommended only as a last measure.\n"
- title: 5.3.  Dynamic Home Agent Address Discovery
  contents:
  - "5.3.  Dynamic Home Agent Address Discovery\n   No security is required for dynamic\
    \ home agent address discovery.\n"
- title: 5.4.  Mobile Prefix Discovery
  contents:
  - "5.4.  Mobile Prefix Discovery\n   The mobile node and the home agent SHOULD use\
    \ an IPsec security\n   association to protect the integrity and authenticity\
    \ of the Mobile\n   Prefix Solicitations and Advertisements.  Both the mobile\
    \ nodes and\n   the home agents MUST support and SHOULD use the Encapsulating\n\
    \   Security Payload (ESP) header in transport mode with a non-NULL\n   payload\
    \ authentication algorithm to provide data origin\n   authentication, connectionless\
    \ integrity and optional anti-replay\n   protection.\n"
- title: 5.5.  Payload Packets
  contents:
  - "5.5.  Payload Packets\n   Payload packets exchanged with mobile nodes can be\
    \ protected in the\n   usual manner, in the same way as stationary hosts can protect\
    \ them.\n   However, Mobile IPv6 introduces the Home Address destination option,\n\
    \   a routing header, and tunneling headers in the payload packets.  In\n   the\
    \ following we define the security measures taken to protect these,\n   and to\
    \ prevent their use in attacks against other parties.\n   This specification limits\
    \ the use of the Home Address destination\n   option to the situation where the\
    \ correspondent node already has a\n   Binding Cache entry for the given home\
    \ address.  This avoids the use\n   of the Home Address option in attacks described\
    \ in Section 15.1.\n   Mobile IPv6 uses a Mobile IPv6 specific type of a routing\
    \ header.\n   This type provides the necessary functionality but does not open\n\
    \   vulnerabilities discussed in Section 15.1.\n   Tunnels between the mobile\
    \ node and the home agent are protected by\n   ensuring proper use of source addresses,\
    \ and optional cryptographic\n   protection.  The mobile node verifies that the\
    \ outer IP address\n   corresponds to its home agent.  The home agent verifies\
    \ that the\n   outer IP address corresponds to the current location of the mobile\n\
    \   node (Binding Updates sent to the home agents are secure).  The home\n   agent\
    \ identifies the mobile node through the source address of the\n   inner packet.\
    \  (Typically, this is the home address of the mobile\n   node, but it can also\
    \ be a link-local address, as discussed in\n   Section 10.4.2.  To recognize the\
    \ latter type of addresses, the home\n   agent requires that the Link-Local Address\
    \ Compatibility (L) was set\n   in the Binding Update.)  These measures protect\
    \ the tunnels against\n   vulnerabilities discussed in Section 15.1.\n   For traffic\
    \ tunneled via the home agent, additional IPsec ESP\n   encapsulation MAY be supported\
    \ and used.  If multicast group\n   membership control protocols or stateful address\
    \ autoconfiguration\n   protocols are supported, payload data protection MUST\
    \ be supported.\n"
- title: 6.  New IPv6 Protocol, Message Types, and Destination Option
  contents:
  - '6.  New IPv6 Protocol, Message Types, and Destination Option

    '
- title: 6.1.  Mobility Header
  contents:
  - "6.1.  Mobility Header\n   The Mobility Header is an extension header used by\
    \ mobile nodes,\n   correspondent nodes, and home agents in all messaging related\
    \ to the\n   creation and management of bindings.  The subsections within this\n\
    \   section describe the message types that may be sent using the\n   Mobility\
    \ Header.\n   Mobility Header messages MUST NOT be sent with a type 2 routing\n\
    \   header, except as described in Section 9.5.4 for Binding\n   Acknowledgement.\
    \  Mobility Header messages also MUST NOT be used with\n   a Home Address destination\
    \ option, except as described in Section\n   11.7.1 and Section 11.7.2 for Binding\
    \ Update.  Binding Update List or\n   Binding Cache information (when present)\
    \ for the destination MUST NOT\n   be used in sending Mobility Header messages.\
    \  That is, Mobility\n   Header messages bypass both the Binding Cache check described\
    \ in\n   Section 9.3.2 and the Binding Update List check described in Section\n\
    \   11.3.1 which are normally performed for all packets.  This applies\n   even\
    \ to messages sent to or from a correspondent node which is itself\n   a mobile\
    \ node.\n"
- title: 6.1.1.  Format
  contents:
  - "6.1.1.  Format\n   The Mobility Header is identified by a Next Header value of\
    \ 135 in\n   the immediately preceding header, and has the following format:\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \ Payload Proto |  Header Len   |   MH Type     |   Reserved    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |           Checksum            |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n    |                                     \
    \                          |\n    .                                          \
    \                     .\n    .                       Message Data            \
    \                .\n    .                                                    \
    \           .\n    |                                                         \
    \      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Payload Proto\n      8-bit selector.  Identifies the type of header immediately\n\
    \      following the Mobility Header.  Uses the same values as the IPv6\n    \
    \  Next Header field [11].\n      This field is intended to be used by a future\
    \ extension (see\n      Appendix B.1).\n      Implementations conforming to this\
    \ specification SHOULD set the\n      payload protocol type to IPPROTO_NONE (59\
    \ decimal).\n   Header Len\n      8-bit unsigned integer, representing the length\
    \ of the Mobility\n      Header in units of 8 octets, excluding the first 8 octets.\n\
    \      The length of the Mobility Header MUST be a multiple of 8 octets.\n   MH\
    \ Type\n      8-bit selector.  Identifies the particular mobility message in\n\
    \      question.  Current values are specified in Section 6.1.2 and\n      onward.\
    \  An unrecognized MH Type field causes an error indication\n      to be sent.\n\
    \   Reserved\n      8-bit field reserved for future use.  The value MUST be\n\
    \      initialized to zero by the sender, and MUST be ignored by the\n      receiver.\n\
    \   Checksum\n      16-bit unsigned integer.  This field contains the checksum\
    \ of the\n      Mobility Header.  The checksum is calculated from the octet string\n\
    \      consisting of a \"pseudo-header\" followed by the entire Mobility\n   \
    \   Header starting with the Payload Proto field.  The checksum is the\n     \
    \ 16-bit one's complement of the one's complement sum of this\n      string.\n\
    \      The pseudo-header contains IPv6 header fields, as specified in\n      Section\
    \ 8.1 of RFC 2460 [11].  The Next Header value used in the\n      pseudo-header\
    \ is 2.  The addresses used in the pseudo-header are\n      the addresses that\
    \ appear in the Source and Destination Address\n      fields in the IPv6 packet\
    \ carrying the Mobility Header.\n      Note that the procedures of calculating\
    \ upper layer checksums\n      while away from home described in Section 11.3.1\
    \ apply even for\n      the Mobility Header.  If a mobility message has a Home\
    \ Address\n      destination option, then the checksum calculation uses the home\n\
    \      address in this option as the value of the IPv6 Source Address\n      field.\
    \  The type 2 routing header is treated as explained in [11].\n      The Mobility\
    \ Header is considered as the upper layer protocol for\n      the purposes of\
    \ calculating the pseudo-header.  The Upper-Layer\n      Packet Length field in\
    \ the pseudo-header MUST be set to the total\n      length of the Mobility Header.\n\
    \      For computing the checksum, the checksum field is set to zero.\n   Message\
    \ Data\n      A variable length field containing the data specific to the\n  \
    \    indicated Mobility Header type.\n   Mobile IPv6 also defines a number of\
    \ \"mobility options\" for use\n   within these messages; if included, any options\
    \ MUST appear after the\n   fixed portion of the message data specified in this\
    \ document.  The\n   presence of such options will be indicated by the Header\
    \ Len field\n   within the message.  When the Header Len value is greater than\
    \ the\n   length required for the message specified here, the remaining octets\n\
    \   are interpreted as mobility options.  These options include padding\n   options\
    \ that can be used to ensure that other options are aligned\n   properly, and\
    \ that the total length of the message is divisible by 8.\n   The encoding and\
    \ format of defined options are described in Section\n   6.2.\n   Alignment requirements\
    \ for the Mobility Header are the same as for\n   any IPv6 protocol Header.  That\
    \ is, they MUST be aligned on an 8-\n   octet boundary.\n"
- title: 6.1.2.  Binding Refresh Request Message
  contents:
  - "6.1.2.  Binding Refresh Request Message\n   The Binding Refresh Request (BRR)\
    \ message requests a mobile node to\n   update its mobility binding.  This message\
    \ is sent by correspondent\n   nodes according to the rules in Section 9.5.5.\
    \  When a mobile node\n   receives a packet containing a Binding Refresh Request\
    \ message it\n   processes the message according to the rules in Section 11.7.4.\n\
    \   The Binding Refresh Request message uses the MH Type value 0.  When\n   this\
    \ value is indicated in the MH Type field, the format of the\n   Message Data\
    \ field in the Mobility Header is as follows:\n                              \
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                   \
    \ |          Reserved             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                   Mobility options                       .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Reserved\n      16-bit field reserved for future use.  The value MUST be\n\
    \      initialized to zero by the sender, and MUST be ignored by the\n      receiver.\n\
    \   Mobility Options\n      Variable-length field of such length that the complete\
    \ Mobility\n      Header is an integer multiple of 8 octets long.  This field\n\
    \      contains zero or more TLV-encoded mobility options.  The encoding\n   \
    \   and format of defined options are described in Section 6.2.  The\n      receiver\
    \ MUST ignore and skip any options which it does not\n      understand.\n    \
    \  There MAY be additional information, associated with this Binding\n      Refresh\
    \ Request message that need not be present in all Binding\n      Refresh Request\
    \ messages sent.  Mobility options allow future\n      extensions to the format\
    \ of the Binding Refresh Request message to\n      be defined.  This specification\
    \ does not define any options valid\n      for the Binding Refresh Request message.\n\
    \   If no actual options are present in this message, no padding is\n   necessary\
    \ and the Header Len field will be set to 0.\n"
- title: 6.1.3.  Home Test Init Message
  contents:
  - "6.1.3.  Home Test Init Message\n   A mobile node uses the Home Test Init (HoTI)\
    \ message to initiate the\n   return routability procedure and request a home\
    \ keygen token from a\n   correspondent node (see Section 11.6.1).  The Home Test\
    \ Init message\n   uses the MH Type value 1.  When this value is indicated in\
    \ the MH\n   Type field, the format of the Message Data field in the Mobility\n\
    \   Header is as follows:\n                                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                    |           Reserved            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                       Home Init Cookie                        +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                  Mobility Options                        .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Reserved\n      16-bit field reserved for future use.  This value MUST be\n\
    \      initialized to zero by the sender, and MUST be ignored by the\n      receiver.\n\
    \   Home Init Cookie\n      64-bit field which contains a random value, the home\
    \ init cookie.\n   Mobility Options\n      Variable-length field of such length\
    \ that the complete Mobility\n      Header is an integer multiple of 8 octets\
    \ long.  This field\n      contains zero or more TLV-encoded mobility options.\
    \  The receiver\n      MUST ignore and skip any options which it does not understand.\n\
    \      This specification does not define any options valid for the Home\n   \
    \   Test Init message.\n   If no actual options are present in this message, no\
    \ padding is\n   necessary and the Header Len field will be set to 1.\n   This\
    \ message is tunneled through the home agent when the mobile node\n   is away\
    \ from home.  Such tunneling SHOULD employ IPsec ESP in tunnel\n   mode between\
    \ the home agent and the mobile node.  This protection is\n   indicated by the\
    \ IPsec security policy database.  The protection of\n   Home Test Init messages\
    \ is unrelated to the requirement to protect\n   regular payload traffic, which\
    \ MAY use such tunnels as well.\n"
- title: 6.1.4.  Care-of Test Init Message
  contents:
  - "6.1.4.  Care-of Test Init Message\n   A mobile node uses the Care-of Test Init\
    \ (CoTI) message to initiate\n   the return routability procedure and request\
    \ a care-of keygen token\n   from a correspondent node (see Section 11.6.1). \
    \ The Care-of Test\n   Init message uses the MH Type value 2.  When this value\
    \ is indicated\n   in the MH Type field, the format of the Message Data field\
    \ in the\n   Mobility Header is as follows:\n                                \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                    |\
    \           Reserved            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                      Care-of Init Cookie                      +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                   Mobility Options                       .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Reserved\n      16-bit field reserved for future use.  The value MUST be\n\
    \      initialized to zero by the sender, and MUST be ignored by the\n      receiver.\n\
    \   Care-of Init Cookie\n      64-bit field which contains a random value, the\
    \ care-of init\n      cookie.\n   Mobility Options\n      Variable-length field\
    \ of such length that the complete Mobility\n      Header is an integer multiple\
    \ of 8 octets long.  This field\n      contains zero or more TLV-encoded mobility\
    \ options.  The receiver\n      MUST ignore and skip any options which it does\
    \ not understand.\n      This specification does not define any options valid\
    \ for the\n      Care-of Test Init message.\n   If no actual options are present\
    \ in this message, no padding is\n   necessary and the Header Len field will be\
    \ set to 1.\n"
- title: 6.1.5.  Home Test Message
  contents:
  - "6.1.5.  Home Test Message\n   The Home Test (HoT) message is a response to the\
    \ Home Test Init\n   message, and is sent from the correspondent node to the mobile\
    \ node\n   (see Section 5.2.5).  The Home Test message uses the MH Type value\
    \ 3.\n   When this value is indicated in the MH Type field, the format of the\n\
    \   Message Data field in the Mobility Header is as follows:\n               \
    \                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                    \
    \                |       Home Nonce Index        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                        Home Init Cookie                       +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                       Home Keygen Token                       +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                   Mobility options                       .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Home Nonce Index\n      This field will be echoed back by the mobile node\
    \ to the\n      correspondent node in a subsequent Binding Update.\n   Home Init\
    \ Cookie\n      64-bit field which contains the home init cookie.\n   Home Keygen\
    \ Token\n      This field contains the 64 bit home keygen token used in the\n\
    \      return routability procedure.\n   Mobility Options\n      Variable-length\
    \ field of such length that the complete Mobility\n      Header is an integer\
    \ multiple of 8 octets long.  This field\n      contains zero or more TLV-encoded\
    \ mobility options.  The receiver\n      MUST ignore and skip any options which\
    \ it does not understand.\n      This specification does not define any options\
    \ valid for the Home\n      Test message.\n   If no actual options are present\
    \ in this message, no padding is\n   necessary and the Header Len field will be\
    \ set to 2.\n"
- title: 6.1.6.  Care-of Test Message
  contents:
  - "6.1.6.  Care-of Test Message\n   The Care-of Test (CoT) message is a response\
    \ to the Care-of Test Init\n   message, and is sent from the correspondent node\
    \ to the mobile node\n   (see Section 11.6.2).  The Care-of Test message uses\
    \ the MH Type\n   value 4.  When this value is indicated in the MH Type field,\
    \ the\n   format of the Message Data field in the Mobility Header is as\n   follows:\n\
    \                                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \                               |      Care-of Nonce Index      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                      Care-of Init Cookie                      +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                     Care-of Keygen Token                      +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                   Mobility Options                       .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Care-of Nonce Index\n      This value will be echoed back by the mobile node\
    \ to the\n      correspondent node in a subsequent Binding Update.\n   Care-of\
    \ Init Cookie\n      64-bit field which contains the care-of init cookie.\n  \
    \ Care-of Keygen Token\n      This field contains the 64 bit care-of keygen token\
    \ used in the\n      return routability procedure.\n   Mobility Options\n    \
    \  Variable-length field of such length that the complete Mobility\n      Header\
    \ is an integer multiple of 8 octets long.  This field\n      contains zero or\
    \ more TLV-encoded mobility options.  The receiver\n      MUST ignore and skip\
    \ any options which it does not understand.\n      This specification does not\
    \ define any options valid for the\n      Care-of Test message.\n   If no actual\
    \ options are present in this message, no padding is\n   necessary and the Header\
    \ Len field will be set to 2.\n"
- title: 6.1.7.  Binding Update Message
  contents:
  - "6.1.7.  Binding Update Message\n   The Binding Update (BU) message is used by\
    \ a mobile node to notify\n   other nodes of a new care-of address for itself.\
    \  Binding Updates are\n   sent as described in Section 11.7.1 and Section 11.7.2.\n\
    \   The Binding Update uses the MH Type value 5.  When this value is\n   indicated\
    \ in the MH Type field, the format of the Message Data field\n   in the Mobility\
    \ Header is as follows:\n                                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                    |          Sequence #           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |A|H|L|K|        Reserved       |           Lifetime            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                   Mobility options                       .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Acknowledge (A)\n      The Acknowledge (A) bit is set by the sending mobile\
    \ node to\n      request a Binding Acknowledgement (Section 6.1.8) be returned\
    \ upon\n      receipt of the Binding Update.\n   Home Registration (H)\n     \
    \ The Home Registration (H) bit is set by the sending mobile node to\n      request\
    \ that the receiving node should act as this node's home\n      agent.  The destination\
    \ of the packet carrying this message MUST\n      be that of a router sharing\
    \ the same subnet prefix as the home\n      address of the mobile node in the\
    \ binding.\n   Link-Local Address Compatibility (L)\n      The Link-Local Address\
    \ Compatibility (L) bit is set when the home\n      address reported by the mobile\
    \ node has the same interface\n      identifier as the mobile node's link-local\
    \ address.\n   Key Management Mobility Capability (K)\n      If this bit is cleared,\
    \ the protocol used for establishing the\n      IPsec security associations between\
    \ the mobile node and the home\n      agent does not survive movements.  It may\
    \ then have to be rerun.\n      (Note that the IPsec security associations themselves\
    \ are expected\n      to survive movements.)  If manual IPsec configuration is\
    \ used, the\n      bit MUST be cleared.\n      This bit is valid only in Binding\
    \ Updates sent to the home agent,\n      and MUST be cleared in other Binding\
    \ Updates.  Correspondent nodes\n      MUST ignore this bit.\n   Reserved\n  \
    \    These fields are unused.  They MUST be initialized to zero by the\n     \
    \ sender and MUST be ignored by the receiver.\n   Sequence #\n      A 16-bit unsigned\
    \ integer used by the receiving node to sequence\n      Binding Updates and by\
    \ the sending node to match a returned\n      Binding Acknowledgement with this\
    \ Binding Update.\n   Lifetime\n      16-bit unsigned integer.  The number of\
    \ time units remaining\n      before the binding MUST be considered expired. \
    \ A value of zero\n      indicates that the Binding Cache entry for the mobile\
    \ node MUST be\n      deleted.  (In this case the specified care-of address MUST\
    \ also be\n      set equal to the home address.)  One time unit is 4 seconds.\n\
    \   Mobility Options\n      Variable-length field of such length that the complete\
    \ Mobility\n      Header is an integer multiple of 8 octets long.  This field\n\
    \      contains zero or more TLV-encoded mobility options.  The encoding\n   \
    \   and format of defined options are described in Section 6.2.  The\n      receiver\
    \ MUST ignore and skip any options which it does not\n      understand.\n    \
    \  The following options are valid in a Binding Update:\n      *  Binding Authorization\
    \ Data option (this option is mandatory in\n         Binding Updates sent to a\
    \ correspondent node)\n      *  Nonce Indices option.\n      *  Alternate Care-of\
    \ Address option\n   If no options are present in this message, 4 octets of padding\
    \ are\n   necessary and the Header Len field will be set to 1.\n   The care-of\
    \ address is specified either by the Source Address field\n   in the IPv6 header\
    \ or by the Alternate Care-of Address option, if\n   present.  The care-of address\
    \ MUST be a unicast routable address.\n   IPv6 Source Address MUST be a topologically\
    \ correct source address.\n   Binding Updates for a care-of address which is not\
    \ a unicast routable\n   address MUST be silently discarded.  Similarly, the Binding\
    \ Update\n   MUST be silently discarded if the care-of address appears as a home\n\
    \   address in an existing Binding Cache entry, with its current location\n  \
    \ creating a circular reference back to the home address specified in\n   the\
    \ Binding Update (possibly through additional entries).\n   The deletion of a\
    \ binding can be indicated by setting the Lifetime\n   field to 0 and by setting\
    \ the care-of address equal to the home\n   address.  In deletion, the generation\
    \ of the binding management key\n   depends exclusively on the home keygen token,\
    \ as explained in Section\n   5.2.5.  (Note that while the senders are required\
    \ to set both the\n   Lifetime field to 0 and the care-of address equal to the\
    \ home\n   address, Section 9.5.1 rules for receivers are more liberal, and\n\
    \   interpret either condition as a deletion.)\n   Correspondent nodes SHOULD\
    \ NOT delete the Binding Cache entry before\n   the lifetime expires, if any application\
    \ hosted by the correspondent\n   node is still likely to require communication\
    \ with the mobile node.\n   A Binding Cache entry that is de-allocated prematurely\
    \ might cause\n   subsequent packets to be dropped from the mobile node, if they\n\
    \   contain the Home Address destination option.  This situation is\n   recoverable,\
    \ since a Binding Error message is sent to the mobile node\n   (see Section 6.1.9);\
    \ however, it causes unnecessary delay in the\n   communications.\n"
- title: 6.1.8.  Binding Acknowledgement Message
  contents:
  - "6.1.8.  Binding Acknowledgement Message\n   The Binding Acknowledgement is used\
    \ to acknowledge receipt of a\n   Binding Update (Section 6.1.7).  This packet\
    \ is sent as described in\n   Section 9.5.4 and Section 10.3.1.\n   The Binding\
    \ Acknowledgement has the MH Type value 6.  When this value\n   is indicated in\
    \ the MH Type field, the format of the Message Data\n   field in the Mobility\
    \ Header is as follows:\n                                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                    |    Status     |K|  Reserved   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |           Sequence #          |           Lifetime            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                   Mobility options                       .\n    .          \
    \                                                     .\n    |               \
    \                                                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Key Management Mobility Capability (K)\n      If this bit is cleared, the\
    \ protocol used by the home agent for\n      establishing the IPsec security associations\
    \ between the mobile\n      node and the home agent does not survive movements.\
    \  It may then\n      have to be rerun.  (Note that the IPsec security associations\n\
    \      themselves are expected to survive movements.)\n      Correspondent nodes\
    \ MUST set the K bit to 0.\n   Reserved\n      These fields are unused.  They\
    \ MUST be initialized to zero by the\n      sender and MUST be ignored by the\
    \ receiver.\n   Status\n      8-bit unsigned integer indicating the disposition\
    \ of the Binding\n      Update.  Values of the Status field less than 128 indicate\
    \ that\n      the Binding Update was accepted by the receiving node.  Values\n\
    \      greater than or equal to 128 indicate that the Binding Update was\n   \
    \   rejected by the receiving node.  The following Status values are\n      currently\
    \ defined:\n        0 Binding Update accepted\n        1 Accepted but prefix discovery\
    \ necessary\n      128 Reason unspecified\n      129 Administratively prohibited\n\
    \      130 Insufficient resources\n      131 Home registration not supported\n\
    \      132 Not home subnet\n      133 Not home agent for this mobile node\n  \
    \    134 Duplicate Address Detection failed\n      135 Sequence number out of\
    \ window\n      136 Expired home nonce index\n      137 Expired care-of nonce\
    \ index\n      138 Expired nonces\n      139 Registration type change disallowed\n\
    \   Up-to-date values of the Status field are to be specified in the IANA\n  \
    \ registry of assigned numbers [19].\n   Sequence #\n      The Sequence Number\
    \ in the Binding Acknowledgement is copied from\n      the Sequence Number field\
    \ in the Binding Update.  It is used by\n      the mobile node in matching this\
    \ Binding Acknowledgement with an\n      outstanding Binding Update.\n   Lifetime\n\
    \      The granted lifetime, in time units of 4 seconds, for which this\n    \
    \  node SHOULD retain the entry for this mobile node in its Binding\n      Cache.\n\
    \      The value of this field is undefined if the Status field indicates\n  \
    \    that the Binding Update was rejected.\n   Mobility Options\n      Variable-length\
    \ field of such length that the complete Mobility\n      Header is an integer\
    \ multiple of 8 octets long.  This field\n      contains zero or more TLV-encoded\
    \ mobility options.  The encoding\n      and format of defined options are described\
    \ in Section 6.2.  The\n      receiver MUST ignore and skip any options which\
    \ it does not\n      understand.\n      There MAY be additional information, associated\
    \ with this Binding\n      Acknowledgement that need not be present in all Binding\n\
    \      Acknowledgements sent.  Mobility options allow future extensions\n    \
    \  to the format of the Binding Acknowledgement to be defined.  The\n      following\
    \ options are valid for the Binding Acknowledgement:\n      *  Binding Authorization\
    \ Data option (this option is mandatory in\n         Binding Acknowledgements\
    \ sent by a correspondent node, except\n         where otherwise noted in Section\
    \ 9.5.4)\n      *  Binding Refresh Advice option\n   If no options are present\
    \ in this message, 4 octets of padding are\n   necessary and the Header Len field\
    \ will be set to 1.\n"
- title: 6.1.9.  Binding Error Message
  contents:
  - "6.1.9.  Binding Error Message\n   The Binding Error (BE) message is used by the\
    \ correspondent node to\n   signal an error related to mobility, such as an inappropriate\
    \ attempt\n   to use the Home Address destination option without an existing\n\
    \   binding; see Section 9.3.3 for details.\n   The Binding Error message uses\
    \ the MH Type value 7.  When this value\n   is indicated in the MH Type field,\
    \ the format of the Message Data\n   field in the Mobility Header is as follows:\n\
    \                                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \                               |     Status    |   Reserved    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                                                               +\n    |     \
    \                                                          |\n    +          \
    \                Home Address                         +\n    |               \
    \                                                |\n    +                    \
    \                                           +\n    |                         \
    \                                      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    .                                                               .\n    .\
    \                        Mobility Options                       .\n    .     \
    \                                                          .\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Status\n      8-bit unsigned integer indicating the reason for this message.\n\
    \      The following values are currently defined:\n         1 Unknown binding\
    \ for Home Address destination option\n         2 Unrecognized MH Type value\n\
    \   Reserved\n      A 8-bit field reserved for future use.  The value MUST be\n\
    \      initialized to zero by the sender, and MUST be ignored by the\n      receiver.\n\
    \   Home Address\n      The home address that was contained in the Home Address\n\
    \      destination option.  The mobile node uses this information to\n      determine\
    \ which binding does not exist, in cases where the mobile\n      node has several\
    \ home addresses.\n   Mobility Options\n      Variable-length field of such length\
    \ that the complete Mobility\n      Header is an integer multiple of 8 octets\
    \ long.  This field\n      contains zero or more TLV-encoded mobility options.\
    \  The receiver\n      MUST ignore and skip any options which it does not understand.\n\
    \      There MAY be additional information, associated with this Binding\n   \
    \   Error message that need not be present in all Binding Error\n      messages\
    \ sent.  Mobility options allow future extensions to the\n      format of the\
    \ format of the Binding Error message to be defined.\n      The encoding and format\
    \ of defined options are described in\n      Section 6.2.  This specification\
    \ does not define any options valid\n      for the Binding Error message.\n  \
    \ If no actual options are present in this message, no padding is\n   necessary\
    \ and the Header Len field will be set to 2.\n"
- title: 6.2.  Mobility Options
  contents:
  - "6.2.  Mobility Options\n   Mobility messages can include zero or more mobility\
    \ options.  This\n   allows optional fields that may not be needed in every use\
    \ of a\n   particular Mobility Header, as well as future extensions to the\n \
    \  format of the messages.  Such options are included in the Message\n   Data\
    \ field of the message itself, after the fixed portion of the\n   message data\
    \ specified in the message subsections of Section 6.1.\n   The presence of such\
    \ options will be indicated by the Header Len of\n   the Mobility Header.  If\
    \ included, the Binding Authorization Data\n   option (Section 6.2.7) MUST be\
    \ the last option and MUST NOT have\n   trailing padding.  Otherwise, options\
    \ can be placed in any order.\n"
- title: 6.2.1.  Format
  contents:
  - "6.2.1.  Format\n   Mobility options are encoded within the remaining space of\
    \ the\n   Message Data field of a mobility message, using a type-length-value\n\
    \   (TLV) format as follows:\n    0                   1                   2  \
    \                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Option Type  | Option Length |   Option Data...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Option Type\n      8-bit identifier of the type of mobility option.  When\
    \ processing\n      a Mobility Header containing an option for which the Option\
    \ Type\n      value is not recognized by the receiver, the receiver MUST quietly\n\
    \      ignore and skip over the option, correctly handling any remaining\n   \
    \   options in the message.\n   Option Length\n      8-bit unsigned integer, representing\
    \ the length in octets of the\n      mobility option, not including the Option\
    \ Type and Option Length\n      fields.\n   Option Data\n      A variable length\
    \ field that contains data specific to the option.\n   The following subsections\
    \ specify the Option types which are\n   currently defined for use in the Mobility\
    \ Header.\n   Implementations MUST silently ignore any mobility options that they\n\
    \   do not understand.\n   Mobility options may have alignment requirements. \
    \ Following the\n   convention in IPv6, these options are aligned in a packet\
    \ so that\n   multi-octet values within the Option Data field of each option fall\n\
    \   on natural boundaries (i.e., fields of width n octets are placed at\n   an\
    \ integer multiple of n octets from the start of the header, for n =\n   1, 2,\
    \ 4, or 8) [11].\n"
- title: 6.2.2.  Pad1
  contents:
  - "6.2.2.  Pad1\n   The Pad1 option does not have any alignment requirements.  Its\
    \ format\n   is as follows:\n       0\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n\
    \      |   Type = 0    |\n      +-+-+-+-+-+-+-+-+\n   NOTE! the format of the\
    \ Pad1 option is a special case - it has\n   neither Option Length nor Option\
    \ Data fields.\n   The Pad1 option is used to insert one octet of padding in the\n\
    \   Mobility Options area of a Mobility Header.  If more than one octet\n   of\
    \ padding is required, the PadN option, described next, should be\n   used rather\
    \ than multiple Pad1 options.\n"
- title: 6.2.3.  PadN
  contents:
  - "6.2.3.  PadN\n   The PadN option does not have any alignment requirements.  Its\
    \ format\n   is as follows:\n       0                   1\n       0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - -\
    \ -\n      |   Type = 1    | Option Length | Option Data\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\
    \ - - - - - - - -\n   The PadN option is used to insert two or more octets of\
    \ padding in\n   the Mobility Options area of a mobility message.  For N octets\
    \ of\n   padding, the Option Length field contains the value N-2, and the\n  \
    \ Option Data consists of N-2 zero-valued octets.  PadN Option data\n   MUST be\
    \ ignored by the receiver.\n"
- title: 6.2.4.  Binding Refresh Advice
  contents:
  - "6.2.4.  Binding Refresh Advice\n   The Binding Refresh Advice option has an alignment\
    \ requirement of 2n.\n   Its format is as follows:\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                   |   Type = 2    |   Length = 2  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Refresh Interval        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Binding Refresh Advice option is only valid in the Binding\n   Acknowledgement,\
    \ and only on Binding Acknowledgements sent from the\n   mobile node's home agent\
    \ in reply to a home registration.  The\n   Refresh Interval is measured in units\
    \ of four seconds, and indicates\n   remaining time until the mobile node SHOULD\
    \ send a new home\n   registration to the home agent.  The Refresh Interval MUST\
    \ be set to\n   indicate a smaller time interval than the Lifetime value of the\n\
    \   Binding Acknowledgement.\n"
- title: 6.2.5.  Alternate Care-of Address
  contents:
  - "6.2.5.  Alternate Care-of Address\n   The Alternate Care-of Address option has\
    \ an alignment requirement of\n   8n+6.  Its format is as follows:\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n                          \
    \         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                \
    \   |   Type = 3    |  Length = 16  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \     Alternate Care-of Address                   +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Normally, a Binding Update specifies the desired care-of address in\n   the\
    \ Source Address field of the IPv6 header.  However, this is not\n   possible\
    \ in some cases, such as when the mobile node wishes to\n   indicate a care-of\
    \ address which it cannot use as a topologically\n   correct source address (Section\
    \ 6.1.7 and Section 11.7.2) or when the\n   used security mechanism does not protect\
    \ the IPv6 header (Section\n   11.7.1).\n   The Alternate Care-of Address option\
    \ is provided for these\n   situations.  This option is valid only in Binding\
    \ Update.  The\n   Alternate Care-of Address field contains an address to use\
    \ as the\n   care-of address for the binding, rather than using the Source Address\n\
    \   of the packet as the care-of address.\n"
- title: 6.2.6.  Nonce Indices
  contents:
  - "6.2.6.  Nonce Indices\n   The Nonce Indices option has an alignment requirement\
    \ of 2n.  Its\n   format is as follows:\n    0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                   |   Type = 4    |   Length = 4  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         Home Nonce Index      |     Care-of Nonce Index       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Nonce Indices option is valid only in the Binding Update message\n   sent\
    \ to a correspondent node, and only when present together with a\n   Binding Authorization\
    \ Data option.  When the correspondent node\n   authorizes the Binding Update,\
    \ it needs to produce home and care-of\n   keygen tokens from its stored random\
    \ nonce values.\n   The Home Nonce Index field tells the correspondent node which\
    \ nonce\n   value to use when producing the home keygen token.\n   The Care-of\
    \ Nonce Index field is ignored in requests to delete a\n   binding.  Otherwise,\
    \ it tells the correspondent node which nonce\n   value to use when producing\
    \ the care-of keygen token.\n"
- title: 6.2.7.  Binding Authorization Data
  contents:
  - "6.2.7.  Binding Authorization Data\n   The Binding Authorization Data option\
    \ does not have alignment\n   requirements as such.  However, since this option\
    \ must be the last\n   mobility option, an implicit alignment requirement is 8n\
    \ + 2.  The\n   format of this option is as follows:\n    0                  \
    \ 1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                   |   Type = 5    | Option Length |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                 Authenticator                         |\n   +              \
    \                                                 +\n   |                    \
    \                                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Binding Authorization Data option is valid in the Binding Update\n   and\
    \ Binding Acknowledgement.\n   The Option Length field contains the length of\
    \ the authenticator in\n   octets.\n   The Authenticator field contains a cryptographic\
    \ value which can be\n   used to determine that the message in question comes\
    \ from the right\n   authority.  Rules for calculating this value depends on the\
    \ used\n   authorization procedure.\n   For the return routability procedure,\
    \ this option can appear in the\n   Binding Update and Binding Acknowledgements.\
    \  Rules for calculating\n   the Authenticator value are the following:\n    \
    \  Mobility Data = care-of address | correspondent | MH Data\n      Authenticator\
    \ = First (96, HMAC_SHA1 (Kbm, Mobility Data))\n   Where | denotes concatenation.\
    \ \"Care-of address\" is the care-of\n   address which will be registered for\
    \ the mobile node if the Binding\n   Update succeeds, or the home address of the\
    \ mobile node if this\n   option is used in de-registration.  Note also that this\
    \ address might\n   be different from the source address of the Binding Update\
    \ message,\n   if the Alternative Care-of Address mobility option is used, or\
    \ when\n   the lifetime of the binding is set to zero.\n   The \"correspondent\"\
    \ is the IPv6 address of the correspondent node.\n   Note that, if the message\
    \ is sent to a destination which is itself\n   mobile, the \"correspondent\" address\
    \ may not be the address found in\n   the Destination Address field of the IPv6\
    \ header; instead the home\n   address from the type 2 Routing header should be\
    \ used.\n   \"MH Data\" is the content of the Mobility Header, excluding the\n\
    \   Authenticator field itself.  The Authenticator value is calculated as\n  \
    \ if the Checksum field in the Mobility Header was zero.  The Checksum\n   in\
    \ the transmitted packet is still calculated in the usual manner,\n   with the\
    \ calculated Authenticator being a part of the packet\n   protected by the Checksum.\
    \  Kbm is the binding management key, which\n   is typically created using nonces\
    \ provided by the correspondent node\n   (see Section 9.4).  Note that while the\
    \ contents of a potential Home\n   Address destination option are not covered\
    \ in this formula, the rules\n   for the calculation of the Kbm do take the home\
    \ address in account.\n   This ensures that the MAC will be different for different\
    \ home\n   addresses.\n   The first 96 bits from the MAC result are used as the\
    \ Authenticator\n   field.\n"
- title: 6.3.  Home Address Option
  contents:
  - "6.3.  Home Address Option\n   The Home Address option is carried by the Destination\
    \ Option\n   extension header (Next Header value = 60).  It is used in a packet\n\
    \   sent by a mobile node while away from home, to inform the recipient\n   of\
    \ the mobile node's home address.\n   The Home Address option is encoded in type-length-value\
    \ (TLV) format\n   as follows:\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                   |  Option Type  | Option Length |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \            Home Address                         +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Option Type\n      201 = 0xC9\n   Option Length\n      8-bit unsigned integer.\
    \  Length of the option, in octets,\n      excluding the Option Type and Option\
    \ Length fields.  This field\n      MUST be set to 16.\n   Home Address\n    \
    \  The home address of the mobile node sending the packet.  This\n      address\
    \ MUST be a unicast routable address.\n   The alignment requirement [11] for the\
    \ Home Address option is 8n+6.\n   The three highest-order bits of the Option\
    \ Type field are encoded to\n   indicate specific processing of the option [11];\
    \ for the Home Address\n   option, these three bits are set to 110.  This indicates\
    \ the\n   following processing requirements:\n   o  Any IPv6 node that does not\
    \ recognize the Option Type must discard\n      the packet, and if the packet's\
    \ Destination Address was not a\n      multicast address, return an ICMP Parameter\
    \ Problem, Code 2,\n      message to the packet's Source Address.  The Pointer\
    \ field in the\n      ICMP message SHOULD point at the Option Type field.  Otherwise,\n\
    \      for multicast addresses, the ICMP message MUST NOT be sent.\n   o  The\
    \ data within the option cannot change en route to the packet's\n      final destination.\n\
    \   The Home Address option MUST be placed as follows:\n   o  After the routing\
    \ header, if that header is present\n   o  Before the Fragment Header, if that\
    \ header is present\n   o  Before the AH Header or ESP Header, if either one of\
    \ those headers\n      are present\n   For each IPv6 packet header, the Home Address\
    \ Option MUST NOT appear\n   more than once.  However, an encapsulated packet\
    \ [15] MAY contain a\n   separate Home Address option associated with each encapsulating\
    \ IP\n   header.\n   The inclusion of a Home Address destination option in a packet\n\
    \   affects the receiving node's processing of only this single packet.\n   No\
    \ state is created or modified in the receiving node as a result of\n   receiving\
    \ a Home Address option in a packet.  In particular, the\n   presence of a Home\
    \ Address option in a received packet MUST NOT alter\n   the contents of the receiver's\
    \ Binding Cache and MUST NOT cause any\n   changes in the routing of subsequent\
    \ packets sent by this receiving\n   node.\n"
- title: 6.4.  Type 2 Routing Header
  contents:
  - "6.4.  Type 2 Routing Header\n   Mobile IPv6 defines a new routing header variant,\
    \ the type 2 routing\n   header, to allow the packet to be routed directly from\
    \ a\n   correspondent to the mobile node's care-of address.  The mobile\n   node's\
    \ care-of address is inserted into the IPv6 Destination Address\n   field.  Once\
    \ the packet arrives at the care-of address, the mobile\n   node retrieves its\
    \ home address from the routing header, and this is\n   used as the final destination\
    \ address for the packet.\n   The new routing header uses a different type than\
    \ defined for\n   \"regular\" IPv6 source routing, enabling firewalls to apply\
    \ different\n   rules to source routed packets than to Mobile IPv6.  This routing\n\
    \   header type (type 2) is restricted to carry only one IPv6 address.\n   All\
    \ IPv6 nodes which process this routing header MUST verify that the\n   address\
    \ contained within is the node's own home address in order to\n   prevent packets\
    \ from being forwarded outside the node.  The IP\n   address contained in the\
    \ routing header, since it is the mobile\n   node's home address, MUST be a unicast\
    \ routable address.\n   Furthermore, if the scope of the home address is smaller\
    \ than the\n   scope of the care-of address, the mobile node MUST discard the\
    \ packet\n   (see Section 4.6).\n"
- title: 6.4.1.  Format
  contents:
  - "6.4.1.  Format\n   The type 2 routing header has the following format:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Next Header  | Hdr Ext Len=2 | Routing Type=2|Segments Left=1|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                            Reserved                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \           Home Address                          +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Next Header\n      8-bit selector.  Identifies the type of header immediately\n\
    \      following the routing header.  Uses the same values as the IPv6\n     \
    \ Next Header field [11].\n   Hdr Ext Len\n      2 (8-bit unsigned integer); \
    \ length of the routing header in 8-\n      octet units, not including the first\
    \ 8 octets.\n   Routing Type\n      2 (8-bit unsigned integer).\n   Segments Left\n\
    \      1 (8-bit unsigned integer).\n   Reserved\n      32-bit reserved field.\
    \  The value MUST be initialized to zero by\n      the sender, and MUST be ignored\
    \ by the receiver.\n   Home Address\n      The Home Address of the destination\
    \ Mobile Node.\n   For a type 2 routing header, the Hdr Ext Len MUST be 2.  The\
    \ Segments\n   Left value describes the number of route segments remaining; i.e.,\n\
    \   number of explicitly listed intermediate nodes still to be visited\n   before\
    \ reaching the final destination.  Segments Left MUST be 1.  The\n   ordering\
    \ rules for extension headers in an IPv6 packet are described\n   in Section 4.1\
    \ of RFC 2460 [11].  The type 2 routing header defined\n   for Mobile IPv6 follows\
    \ the same ordering as other routing headers.\n   If both a type 0 and a type\
    \ 2 routing header are present, the type 2\n   routing header should follow the\
    \ other routing header.  A packet\n   containing such nested encapsulation should\
    \ be created as if the\n   inner (type 2) routing header was constructed first\
    \ and then treated\n   as an original packet by the outer (type 0) routing header\n\
    \   construction process.\n   In addition, the general procedures defined by IPv6\
    \ for routing\n   headers suggest that a received routing header MAY be automatically\n\
    \   \"reversed\" to construct a routing header for use in any response\n   packets\
    \ sent by upper-layer protocols, if the received packet is\n   authenticated [6].\
    \  This MUST NOT be done automatically for type 2\n   routing headers.\n"
- title: 6.5.  ICMP Home Agent Address Discovery Request Message
  contents:
  - "6.5.  ICMP Home Agent Address Discovery Request Message\n   The ICMP Home Agent\
    \ Address Discovery Request message is used by a\n   mobile node to initiate the\
    \ dynamic home agent address discovery\n   mechanism, as described in Section\
    \ 11.4.1.  The mobile node sends the\n   Home Agent Address Discovery Request\
    \ message to the Mobile IPv6\n   Home-Agents anycast address [16] for its own\
    \ home subnet prefix.\n   (Note that the currently defined anycast addresses may\
    \ not work with\n   all prefix lengths other than those defined in RFC 2373 [3,\
    \ 35].)\n    0                   1                   2                   3\n \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |            Checksum           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Identifier           |            Reserved           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      144\n   Code\n      0\n   Checksum\n      The ICMP checksum [14].\n\
    \   Identifier\n      An identifier to aid in matching Home Agent Address Discovery\n\
    \      Reply messages to this Home Agent Address Discovery Request\n      message.\n\
    \   Reserved\n      This field is unused.  It MUST be initialized to zero by the\n\
    \      sender and MUST be ignored by the receiver.\n   The Source Address of the\
    \ Home Agent Address Discovery Request\n   message packet is typically one of\
    \ the mobile node's current care-of\n   addresses.  At the time of performing\
    \ this dynamic home agent address\n   discovery procedure, it is likely that the\
    \ mobile node is not\n   registered with any home agent.  Therefore, neither the\
    \ nature of the\n   address nor the identity of the mobile node can be established\
    \ at\n   this time.  The home agent MUST then return the Home Agent Address\n\
    \   Discovery Reply message directly to the Source Address chosen by the\n   mobile\
    \ node.\n"
- title: 6.6.  ICMP Home Agent Address Discovery Reply Message
  contents:
  - "6.6.  ICMP Home Agent Address Discovery Reply Message\n   The ICMP Home Agent\
    \ Address Discovery Reply message is used by a home\n   agent to respond to a\
    \ mobile node that uses the dynamic home agent\n   address discovery mechanism,\
    \ as described in Section 10.5.\n     0                   1                  \
    \ 2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |     Code      |            Checksum           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |           Identifier          |             Reserved          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                                                               +\n    .     \
    \                                                          .\n    .          \
    \            Home Agent Addresses                     .\n    .               \
    \                                                .\n    +                    \
    \                                           +\n    |                         \
    \                                      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      145\n   Code\n      0\n   Checksum\n      The ICMP checksum [14].\n\
    \   Identifier\n      The identifier from the invoking Home Agent Address Discovery\n\
    \      Request message.\n   Reserved\n      This field is unused.  It MUST be\
    \ initialized to zero by the\n      sender and MUST be ignored by the receiver.\n\
    \   Home Agent Addresses\n      A list of addresses of home agents on the home\
    \ link for the mobile\n      node.  The number of addresses presented in the list\
    \ is indicated\n      by the remaining length of the IPv6 packet carrying the\
    \ Home Agent\n      Address Discovery Reply message.\n"
- title: 6.7.  ICMP Mobile Prefix Solicitation Message Format
  contents:
  - "6.7.  ICMP Mobile Prefix Solicitation Message Format\n   The ICMP Mobile Prefix\
    \ Solicitation Message is sent by a mobile node\n   to its home agent while it\
    \ is away from home.  The purpose of the\n   message is to solicit a Mobile Prefix\
    \ Advertisement from the home\n   agent, which will allow the mobile node to gather\
    \ prefix information\n   about its home network.  This information can be used\
    \ to configure\n   and update home address(es) according to changes in prefix\n\
    \   information supplied by the home agent.\n    0                   1       \
    \            2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Identifier           |            Reserved           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Source Address\n      The mobile node's care-of address.\n\
    \   Destination Address\n      The address of the mobile node's home agent.  This\
    \ home agent must\n      be on the link that the mobile node wishes to learn prefix\n\
    \      information about.\n   Hop Limit\n      Set to an initial hop limit value,\
    \ similarly to any other unicast\n      packet sent by the mobile node.\n   Destination\
    \ Option:\n      A Home Address destination option MUST be included.\n   ESP header:\n\
    \      IPsec headers MUST be supported and SHOULD be used as described in\n  \
    \    Section 5.4.\n   ICMP Fields:\n   Type\n      146\n   Code\n      0\n   Checksum\n\
    \      The ICMP checksum [14].\n   Identifier\n      An identifier to aid in matching\
    \ a future Mobile Prefix\n      Advertisement to this Mobile Prefix Solicitation.\n\
    \   Reserved\n      This field is unused.  It MUST be initialized to zero by the\n\
    \      sender and MUST be ignored by the receiver.\n   The Mobile Prefix Solicitation\
    \ messages may have options.  These\n   options MUST use the option format defined\
    \ in RFC 2461 [12].  This\n   document does not define any option types for the\
    \ Mobile Prefix\n   Solicitation message, but future documents may define new\
    \ options.\n   Home agents MUST silently ignore any options they do not recognize\n\
    \   and continue processing the message.\n"
- title: 6.8.  ICMP Mobile Prefix Advertisement Message Format
  contents:
  - "6.8.  ICMP Mobile Prefix Advertisement Message Format\n   A home agent will send\
    \ a Mobile Prefix Advertisement to a mobile node\n   to distribute prefix information\
    \ about the home link while the mobile\n   node is traveling away from the home\
    \ network.  This will occur in\n   response to a Mobile Prefix Solicitation with\
    \ an Advertisement, or by\n   an unsolicited Advertisement sent according to the\
    \ rules in Section\n   10.6.\n    0                   1                   2  \
    \                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Identifier           |M|O|        Reserved           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Options ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Source Address\n      The home agent's address as the mobile\
    \ node would expect to see it\n      (i.e., same network prefix).\n   Destination\
    \ Address\n      If this message is a response to a Mobile Prefix Solicitation,\n\
    \      this field contains the Source Address field from that packet.\n      For\
    \ unsolicited messages, the mobile node's care-of address SHOULD\n      be used.\
    \  Note that unsolicited messages can only be sent if the\n      mobile node is\
    \ currently registered with the home agent.\n   Routing header:\n      A type\
    \ 2 routing header MUST be included.\n   ESP header:\n      IPsec headers MUST\
    \ be supported and SHOULD be used as described in\n      Section 5.4.\n   ICMP\
    \ Fields:\n   Type\n      147\n   Code\n      0\n   Checksum\n      The ICMP checksum\
    \ [14].\n   Identifier\n      An identifier to aid in matching this Mobile Prefix\
    \ Advertisement\n      to a previous Mobile Prefix Solicitation.\n   M\n     \
    \ 1-bit Managed Address Configuration flag.  When set, hosts use the\n      administered\
    \ (stateful) protocol for address autoconfiguration in\n      addition to any\
    \ addresses autoconfigured using stateless address\n      autoconfiguration. \
    \ The use of this flag is described in [12, 13].\n   O\n      1-bit Other Stateful\
    \ Configuration flag.  When set, hosts use the\n      administered (stateful)\
    \ protocol for autoconfiguration of other\n      (non-address) information.  The\
    \ use of this flag is described in\n      [12, 13].\n   Reserved\n      This field\
    \ is unused.  It MUST be initialized to zero by the\n      sender and MUST be\
    \ ignored by the receiver.\n   The Mobile Prefix Advertisement messages may have\
    \ options.  These\n   options MUST use the option format defined in RFC 2461 [12].\
    \  This\n   document defines one option which may be carried in a Mobile Prefix\n\
    \   Advertisement message, but future documents may define new options.\n   Mobile\
    \ nodes MUST silently ignore any options they do not recognize\n   and continue\
    \ processing the message.\n   Prefix Information\n      Each message contains\
    \ one or more Prefix Information options.\n      Each option carries the prefix(es)\
    \ that the mobile node should use\n      to configure its home address(es).  Section\
    \ 10.6 describes which\n      prefixes should be advertised to the mobile node.\n\
    \      The Prefix Information option is defined in Section 4.6.2 of RFC\n    \
    \  2461 [12], with modifications defined in Section 7.2 of this\n      specification.\
    \  The home agent MUST use this modified Prefix\n      Information option to send\
    \ home network prefixes as defined in\n      Section 10.6.1.\n   If the Advertisement\
    \ is sent in response to a Mobile Prefix\n   Solicitation, the home agent MUST\
    \ copy the Identifier value from that\n   message into the Identifier field of\
    \ the Advertisement.\n   The home agent MUST NOT send more than one Mobile Prefix\n\
    \   Advertisement message per second to any mobile node.\n   The M and O bits\
    \ MUST be cleared if the Home Agent DHCPv6 support is\n   not provided.  If such\
    \ support is provided then they are set in\n   concert with the home network's\
    \ administrative settings.\n"
- title: 7.  Modifications to IPv6 Neighbor Discovery
  contents:
  - '7.  Modifications to IPv6 Neighbor Discovery

    '
- title: 7.1.  Modified Router Advertisement Message Format
  contents:
  - "7.1.  Modified Router Advertisement Message Format\n   Mobile IPv6 modifies the\
    \ format of the Router Advertisement message\n   [12] by the addition of a single\
    \ flag bit to indicate that the router\n   sending the Advertisement message is\
    \ serving as a home agent on this\n   link.  The format of the Router Advertisement\
    \ message is as follows:\n    0                   1                   2      \
    \             3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Cur Hop Limit |M|O|H| Reserved|       Router Lifetime         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Reachable Time                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Retrans Timer                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Options ...\n   +-+-+-+-+-+-+-+-+-+-+-+-\n   This format represents the\
    \ following changes over that originally\n   specified for Neighbor Discovery\
    \ [12]:\n   Home Agent (H)\n      The Home Agent (H) bit is set in a Router Advertisement\
    \ to\n      indicate that the router sending this Router Advertisement is also\n\
    \      functioning as a Mobile IPv6 home agent on this link.\n   Reserved\n  \
    \    Reduced from a 6-bit field to a 5-bit field to account for the\n      addition\
    \ of the above bit.\n"
- title: 7.2.  Modified Prefix Information Option Format
  contents:
  - "7.2.  Modified Prefix Information Option Format\n   Mobile IPv6 requires knowledge\
    \ of a router's global address in\n   building a Home Agents List as part of the\
    \ dynamic home agent address\n   discovery mechanism.\n   However, Neighbor Discovery\
    \ [12] only advertises a router's link-\n   local address, by requiring this address\
    \ to be used as the IP Source\n   Address of each Router Advertisement.\n   Mobile\
    \ IPv6 extends Neighbor Discovery to allow a router to advertise\n   its global\
    \ address, by the addition of a single flag bit in the\n   format of a Prefix\
    \ Information option for use in Router Advertisement\n   messages.  The format\
    \ of the Prefix Information option is as follows:\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     | Prefix Length |L|A|R|Reserved1|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Valid Lifetime                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Preferred Lifetime                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Reserved2                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \              Prefix                             +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   This format represents the following changes over that originally\n   specified\
    \ for Neighbor Discovery [12]:\n   Router Address (R)\n      1-bit router address\
    \ flag.  When set, indicates that the Prefix\n      field contains a complete\
    \ IP address assigned to the sending\n      router.  The indicated prefix is the\
    \ first Prefix Length bits of\n      the Prefix field.  The router IP address\
    \ has the same scope and\n      conforms to the same lifetime values as the advertised\
    \ prefix.\n      This use of the Prefix field is compatible with its use in\n\
    \      advertising the prefix itself, since Prefix Advertisement uses\n      only\
    \ the leading bits.  Interpretation of this flag bit is thus\n      independent\
    \ of the processing required for the On-Link (L) and\n      Autonomous Address-Configuration\
    \ (A) flag bits.\n   Reserved1\n      Reduced from a 6-bit field to a 5-bit field\
    \ to account for the\n      addition of the above bit.\n   In a Router Advertisement,\
    \ a home agent MUST, and all other routers\n   MAY, include at least one Prefix\
    \ Information option with the Router\n   Address (R) bit set.  Neighbor Discovery\
    \ specifies that, if including\n   all options in a Router Advertisement causes\
    \ the size of the\n   Advertisement to exceed the link MTU, multiple Advertisements\
    \ can be\n   sent, each containing a subset of the options [12].  Also, when\n\
    \   sending unsolicited multicast Router Advertisements more frequently\n   than\
    \ the limit specified in RFC 2461 [12], the sending router need\n   not include\
    \ all options in each of these Advertisements.  However, in\n   both of these\
    \ cases the router SHOULD include at least one Prefix\n   Information option with\
    \ the Router Address (R) bit set in each such\n   advertisement, if this bit is\
    \ set in some advertisement sent by the\n   router.\n   In addition, the following\
    \ requirement can assist mobile nodes in\n   movement detection.  Barring changes\
    \ in the prefixes for the link,\n   routers that send multiple Router Advertisements\
    \ with the Router\n   Address (R) bit set in some of the included Prefix Information\n\
    \   options SHOULD provide at least one option and router address which\n   stays\
    \ the same in all of the Advertisements.\n"
- title: 7.3.  New Advertisement Interval Option Format
  contents:
  - "7.3.  New Advertisement Interval Option Format\n   Mobile IPv6 defines a new\
    \ Advertisement Interval option, used in\n   Router Advertisement messages to\
    \ advertise the interval at which the\n   sending router sends unsolicited multicast\
    \ Router Advertisements.\n   The format of the Advertisement Interval option is\
    \ as follows:\n    0                   1                   2                 \
    \  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |    \
    \ Type      |    Length     |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Advertisement Interval                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      7\n   Length\n      8-bit unsigned integer.  The length of the\
    \ option (including the\n      type and length fields) is in units of 8 octets.\
    \  The value of\n      this field MUST be 1.\n   Reserved\n      This field is\
    \ unused.  It MUST be initialized to zero by the\n      sender and MUST be ignored\
    \ by the receiver.\n   Advertisement Interval\n      32-bit unsigned integer.\
    \  The maximum time, in milliseconds,\n      between successive unsolicited Router\
    \ Advertisement messages sent\n      by this router on this network interface.\
    \  Using the conceptual\n      router configuration variables defined by Neighbor\
    \ Discovery [12],\n      this field MUST be equal to the value MaxRtrAdvInterval,\
    \ expressed\n      in milliseconds.\n   Routers MAY include this option in their\
    \ Router Advertisements.  A\n   mobile node receiving a Router Advertisement containing\
    \ this option\n   SHOULD utilize the specified Advertisement Interval for that\
    \ router\n   in its movement detection algorithm, as described in Section 11.5.1.\n\
    \   This option MUST be silently ignored for other Neighbor Discovery\n   messages.\n"
- title: 7.4.  New Home Agent Information Option Format
  contents:
  - "7.4.  New Home Agent Information Option Format\n   Mobile IPv6 defines a new\
    \ Home Agent Information option, used in\n   Router Advertisements sent by a home\
    \ agent to advertise information\n   specific to this router's functionality as\
    \ a home agent.  The format\n   of the Home Agent Information option is as follows:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Home Agent Preference     |      Home Agent Lifetime      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      8\n   Length\n      8-bit unsigned integer.  The length of the\
    \ option (including the\n      type and length fields) in units of 8 octets. \
    \ The value of this\n      field MUST be 1.\n   Reserved\n      This field is\
    \ unused.  It MUST be initialized to zero by the\n      sender and MUST be ignored\
    \ by the receiver.\n   Home Agent Preference\n      16-bit unsigned integer. \
    \ The preference for the home agent\n      sending this Router Advertisement,\
    \ for use in ordering the\n      addresses returned to a mobile node in the Home\
    \ Agent Addresses\n      field of a Home Agent Address Discovery Reply message.\
    \  Higher\n      values mean more preferable.  If this option is not included\
    \ in a\n      Router Advertisement in which the Home Agent (H) bit is set, the\n\
    \      preference value for this home agent MUST be considered to be 0.\n    \
    \  Greater values indicate a more preferable home agent than lower\n      values.\n\
    \      The manual configuration of the Home Agent Preference value is\n      described\
    \ in Section 8.4.  In addition, the sending home agent MAY\n      dynamically\
    \ set the Home Agent Preference value, for example\n      basing it on the number\
    \ of mobile nodes it is currently serving or\n      on its remaining resources\
    \ for serving additional mobile nodes;\n      such dynamic settings are beyond\
    \ the scope of this document.  Any\n      such dynamic setting of the Home Agent\
    \ Preference, however, MUST\n      set the preference appropriately, relative\
    \ to the default Home\n      Agent Preference value of 0 that may be in use by\
    \ some home agents\n      on this link (i.e., a home agent not including a Home\
    \ Agent\n      Information option in its Router Advertisements will be considered\n\
    \      to have a Home Agent Preference value of 0).\n   Home Agent Lifetime\n\
    \      16-bit unsigned integer.  The lifetime associated with the home\n     \
    \ agent in units of seconds.  The default value is the same as the\n      Router\
    \ Lifetime, as specified in the main body of the Router\n      Advertisement.\
    \  The maximum value corresponds to 18.2 hours.  A\n      value of 0 MUST NOT\
    \ be used.  The Home Agent Lifetime applies only\n      to this router's usefulness\
    \ as a home agent; it does not apply to\n      information contained in other\
    \ message fields or options.\n   Home agents MAY include this option in their\
    \ Router Advertisements.\n   This option MUST NOT be included in a Router Advertisement\
    \ in which\n   the Home Agent (H) bit (see Section 7.1) is not set.  If this option\n\
    \   is not included in a Router Advertisement in which the Home Agent (H)\n  \
    \ bit is set, the lifetime for this home agent MUST be considered to be\n   the\
    \ same as the Router Lifetime in the Router Advertisement.  If\n   multiple Advertisements\
    \ are being sent instead of a single larger\n   unsolicited multicast Advertisement,\
    \ all of the multiple\n   Advertisements with the Router Address (R) bit set MUST\
    \ include this\n   option with the same contents, otherwise this option MUST be\
    \ omitted\n   from all Advertisements.\n   This option MUST be silently ignored\
    \ for other Neighbor Discovery\n   messages.\n   If both the Home Agent Preference\
    \ and Home Agent Lifetime are set to\n   their default values specified above,\
    \ this option SHOULD NOT be\n   included in the Router Advertisement messages\
    \ sent by this home\n   agent.\n"
- title: 7.5.  Changes to Sending Router Advertisements
  contents:
  - "7.5.  Changes to Sending Router Advertisements\n   The Neighbor Discovery protocol\
    \ specification [12] limits routers to\n   a minimum interval of 3 seconds between\
    \ sending unsolicited multicast\n   Router Advertisement messages from any given\
    \ network interface\n   (limited by MinRtrAdvInterval and MaxRtrAdvInterval),\
    \ stating that:\n      \"Routers generate Router Advertisements frequently enough\
    \ that\n      hosts will learn of their presence within a few minutes, but not\n\
    \      frequently enough to rely on an absence of advertisements to\n      detect\
    \ router failure; a separate Neighbor Unreachability\n      Detection algorithm\
    \ provides failure detection.\"\n   This limitation, however, is not suitable\
    \ to providing timely\n   movement detection for mobile nodes.  Mobile nodes detect\
    \ their own\n   movement by learning the presence of new routers as the mobile\
    \ node\n   moves into wireless transmission range of them (or physically\n   connects\
    \ to a new wired network), and by learning that previous\n   routers are no longer\
    \ reachable.  Mobile nodes MUST be able to\n   quickly detect when they move to\
    \ a link served by a new router, so\n   that they can acquire a new care-of address\
    \ and send Binding Updates\n   to register this care-of address with their home\
    \ agent and to notify\n   correspondent nodes as needed.\n   One method which\
    \ can provide for faster movement detection, is to\n   increase the rate at which\
    \ unsolicited Router Advertisements are\n   sent.  Mobile IPv6 relaxes this limit\
    \ such that routers MAY send\n   unsolicited multicast Router Advertisements more\
    \ frequently.  This\n   method can be applied where the router is expecting to\
    \ provide\n   service to visiting mobile nodes (e.g., wireless network interfaces),\n\
    \   or on which it is serving as a home agent to one or more mobile nodes\n  \
    \ (who may return home and need to hear its Advertisements).\n   Routers supporting\
    \ mobility SHOULD be able to be configured with a\n   smaller MinRtrAdvInterval\
    \ value and MaxRtrAdvInterval value to allow\n   sending of unsolicited multicast\
    \ Router Advertisements more often.\n   The minimum allowed values are:\n   o\
    \  MinRtrAdvInterval 0.03 seconds\n   o  MaxRtrAdvInterval 0.07 seconds\n   In\
    \ the case where the minimum intervals and delays are used, the mean\n   time\
    \ between unsolicited multicast router advertisements is 50 ms.\n   Use of these\
    \ modified limits MUST be configurable (see also the\n   configuration variable\
    \ MinDelayBetweenRas in Section 13 which may\n   also have to be modified accordingly).\
    \  Systems where these values\n   are available MUST NOT default to them, and\
    \ SHOULD default to values\n   specified in RFC 2461.  Knowledge of the type of\
    \ network interface\n   and operating environment SHOULD be taken into account\
    \ in configuring\n   these limits for each network interface.  This is important\
    \ with some\n   wireless links, where increasing the frequency of multicast beacons\n\
    \   can cause considerable overhead.  Routers SHOULD adhere to the\n   intervals\
    \ specified in RFC 2461 [12], if this overhead is likely to\n   cause service\
    \ degradation.\n   Additionally, the possible low values of MaxRtrAdvInterval\
    \ may cause\n   some problems with movement detection in some mobile nodes.  To\n\
    \   ensure that this is not a problem, Routers SHOULD add 20 ms to any\n   Advertisement\
    \ Intervals sent in RAs, which are below 200 ms, in order\n   to account for scheduling\
    \ granularities on both the MN and the\n   Router.\n   Note that multicast Router\
    \ Advertisements are not always required in\n   certain wireless networks that\
    \ have limited bandwidth.  Mobility\n   detection or link changes in such networks\
    \ may be done at lower\n   layers.  Router advertisements in such networks SHOULD\
    \ be sent only\n   when solicited.  In such networks it SHOULD be possible to\
    \ disable\n   unsolicited multicast Router Advertisements on specific interfaces.\n\
    \   The MinRtrAdvInterval and MaxRtrAdvInterval in such a case can be set\n  \
    \ to some high values.\n   Home agents MUST include the Source Link-Layer Address\
    \ option in all\n   Router Advertisements they send.  This simplifies the process\
    \ of\n   returning home, as discussed in Section 11.5.4.\n   Note that according\
    \ to RFC 2461 [12], AdvDefaultLifetime is by\n   default based on the value of\
    \ MaxRtrAdvInterval.  AdvDefaultLifetime\n   is used in the Router Lifetime field\
    \ of Router Advertisements.  Given\n   that this field is expressed in seconds,\
    \ a small MaxRtrAdvInterval\n   value can result in a zero value for this field.\
    \  To prevent this,\n   routers SHOULD keep AdvDefaultLifetime in at least one\
    \ second, even\n   if the use of MaxRtrAdvInterval would result in a smaller value.\n"
- title: 8.  Requirements for Types of IPv6 Nodes
  contents:
  - "8.  Requirements for Types of IPv6 Nodes\n   Mobile IPv6 places some special\
    \ requirements on the functions\n   provided by different types of IPv6 nodes.\
    \  This section summarizes\n   those requirements, identifying the functionality\
    \ each requirement is\n   intended to support.\n   The requirements are set for\
    \ the following groups of nodes:\n   o  All IPv6 nodes.\n   o  All IPv6 nodes\
    \ with support for route optimization.\n   o  All IPv6 routers.\n   o  All Mobile\
    \ IPv6 home agents.\n   o  All Mobile IPv6 mobile nodes.\n   It is outside the\
    \ scope of this specification to specify which of\n   these groups are mandatory\
    \ in IPv6.  We only describe what is\n   mandatory for a node that supports, for\
    \ instance, route optimization.\n   Other specifications are expected to define\
    \ the extent of IPv6.\n"
- title: 8.1.  All IPv6 Nodes
  contents:
  - "8.1.  All IPv6 Nodes\n   Any IPv6 node may at any time be a correspondent node\
    \ of a mobile\n   node, either sending a packet to a mobile node or receiving\
    \ a packet\n   from a mobile node.  There are no Mobile IPv6 specific MUST\n \
    \  requirements for such nodes, and basic IPv6 techniques are\n   sufficient.\
    \  If a mobile node attempts to set up route optimization\n   with a node with\
    \ only basic IPv6 support, an ICMP error will signal\n   that the node does not\
    \ support such optimizations (Section 11.3.5),\n   and communications will flow\
    \ through the home agent.\n   An IPv6 node MUST NOT support the Home Address destination\
    \ option,\n   type 2 routing header, or the Mobility Header unless it fully\n\
    \   supports the requirements listed in the next sections for either\n   route\
    \ optimization, mobile node, or home agent functionality.\n"
- title: 8.2.  IPv6 Nodes with Support for Route Optimization
  contents:
  - "8.2.  IPv6 Nodes with Support for Route Optimization\n   Nodes that implement\
    \ route optimization are a subset of all IPv6\n   nodes on the Internet.  The\
    \ ability of a correspondent node to\n   participate in route optimization is\
    \ essential for the efficient\n   operation of the IPv6 Internet, for the following\
    \ reasons:\n   o  Avoidance of congestion in the home network, and enabling the\
    \ use\n      of lower-performance home agent equipment even for supporting\n \
    \     thousands of mobile nodes.\n   o  Reduced network load across the entire\
    \ Internet, as mobile devices\n      begin to predominate.\n   o  Reduction of\
    \ jitter and latency for the communications.\n   o  Greater likelihood of success\
    \ for QoS signaling as tunneling is\n      avoided and, again, fewer sources of\
    \ congestion.\n   o  Improved robustness against network partitions, congestion,\
    \ and\n      other problems, since fewer routing path segments are traversed.\n\
    \   These effects combine to enable much better performance and\n   robustness\
    \ for communications between mobile nodes and IPv6\n   correspondent nodes.  Route\
    \ optimization introduces a small amount of\n   additional state for the peers,\
    \ some additional messaging, and up to\n   1.5 roundtrip delays before it can\
    \ be turned on.  However, it is\n   believed that the benefits far outweigh the\
    \ costs in most cases.\n   Section 11.3.1 discusses how mobile nodes may avoid\
    \ route\n   optimization for some of the remaining cases, such as very short-term\n\
    \   communications.\n   The following requirements apply to all correspondent\
    \ nodes that\n   support route optimization:\n   o  The node MUST be able to validate\
    \ a Home Address option using an\n      existing Binding Cache entry, as described\
    \ in Section 9.3.1.\n   o  The node MUST be able to insert a type 2 routing header\
    \ into\n      packets to be sent to a mobile node, as described in Section\n \
    \     9.3.2.\n   o  Unless the correspondent node is also acting as a mobile node,\
    \ it\n      MUST ignore type 2 routing headers and silently discard all\n    \
    \  packets that it has received with such headers.\n   o  The node SHOULD be able\
    \ to interpret ICMP messages as described in\n      Section 9.3.4.\n   o  The\
    \ node MUST be able to send Binding Error messages as described\n      in Section\
    \ 9.3.3.\n   o  The node MUST be able to process Mobility Headers as described\
    \ in\n      Section 9.2.\n   o  The node MUST be able to participate in a return\
    \ routability\n      procedure (Section 9.4).\n   o  The node MUST be able to\
    \ process Binding Update messages (Section\n      9.5).\n   o  The node MUST be\
    \ able to return a Binding Acknowledgement (Section\n      9.5.4).\n   o  The\
    \ node MUST be able to maintain a Binding Cache of the bindings\n      received\
    \ in accepted Binding Updates, as described in Section 9.1\n      and Section\
    \ 9.6.\n   o  The node SHOULD allow route optimization to be administratively\n\
    \      enabled or disabled.  The default SHOULD be enabled.\n"
- title: 8.3.  All IPv6 Routers
  contents:
  - "8.3.  All IPv6 Routers\n   All IPv6 routers, even those not serving as a home\
    \ agent for Mobile\n   IPv6, have an effect on how well mobile nodes can communicate:\n\
    \   o  Every IPv6 router SHOULD be able to send an Advertisement Interval\n  \
    \    option (Section 7.3) in each of its Router Advertisements [12], to\n    \
    \  aid movement detection by mobile nodes (as in Section 11.5.1).\n      The use\
    \ of this option in Router Advertisements SHOULD be\n      configurable.\n   o\
    \  Every IPv6 router SHOULD be able to support sending unsolicited\n      multicast\
    \ Router Advertisements at the faster rate described in\n      Section 7.5.  If\
    \ the router supports a faster rate, the used rate\n      MUST be configurable.\n\
    \   o  Each router SHOULD include at least one prefix with the Router\n      Address\
    \ (R) bit set and with its full IP address in its Router\n      Advertisements\
    \ (as described in Section 7.2).\n   o  Routers supporting filtering packets with\
    \ routing headers SHOULD\n      support different rules for type 0 and type 2\
    \ routing headers (see\n      Section 6.4) so that filtering of source routed\
    \ packets (type 0)\n      will not necessarily limit Mobile IPv6 traffic which\
    \ is delivered\n      via type 2 routing headers.\n"
- title: 8.4.  IPv6 Home Agents
  contents:
  - "8.4.  IPv6 Home Agents\n   In order for a mobile node to operate correctly while\
    \ away from home,\n   at least one IPv6 router on the mobile node's home link\
    \ must function\n   as a home agent for the mobile node.  The following additional\n\
    \   requirements apply to all IPv6 routers that serve as a home agent:\n   o \
    \ Every home agent MUST be able to maintain an entry in its Binding\n      Cache\
    \ for each mobile node for which it is serving as the home\n      agent (Section\
    \ 10.1 and Section 10.3.1).\n   o  Every home agent MUST be able to intercept\
    \ packets (using proxy\n      Neighbor Discovery [12]) addressed to a mobile node\
    \ for which it\n      is currently serving as the home agent, on that mobile node's\
    \ home\n      link, while the mobile node is away from home (Section 10.4.1).\n\
    \   o  Every home agent MUST be able to encapsulate [15] such intercepted\n  \
    \    packets in order to tunnel them to the primary care-of address for\n    \
    \  the mobile node indicated in its binding in the home agent's\n      Binding\
    \ Cache (Section 10.4.2).\n   o  Every home agent MUST support decapsulating [15]\
    \ reverse tunneled\n      packets sent to it from a mobile node's home address.\
    \  Every home\n      agent MUST also check that the source address in the tunneled\n\
    \      packets corresponds to the currently registered location of the\n     \
    \ mobile node (Section 10.4.5).\n   o  The node MUST be able to process Mobility\
    \ Headers as described in\n      Section 10.2.\n   o  Every home agent MUST be\
    \ able to return a Binding Acknowledgement\n      in response to a Binding Update\
    \ (Section 10.3.1).\n   o  Every home agent MUST maintain a separate Home Agents\
    \ List for\n      each link on which it is serving as a home agent, as described\
    \ in\n      Section 10.1 and Section 10.5.1.\n   o  Every home agent MUST be able\
    \ to accept packets addressed to the\n      Mobile IPv6 Home-Agents anycast address\
    \ [16] for the subnet on\n      which it is serving as a home agent, and MUST\
    \ be able to\n      participate in dynamic home agent address discovery (Section\n\
    \      10.5).\n   o  Every home agent SHOULD support a configuration mechanism\
    \ to allow\n      a system administrator to manually set the value to be sent\
    \ by\n      this home agent in the Home Agent Preference field of the Home\n \
    \     Agent Information Option in Router Advertisements that it sends\n      (Section\
    \ 7.4).\n   o  Every home agent SHOULD support sending ICMP Mobile Prefix\n  \
    \    Advertisements (Section 6.8), and SHOULD respond to Mobile Prefix\n     \
    \ Solicitations (Section 6.7).  If supported, this behavior MUST be\n      configurable,\
    \ so that home agents can be configured to avoid\n      sending such Prefix Advertisements\
    \ according to the needs of the\n      network administration in the home domain.\n\
    \   o  Every home agent MUST support IPsec ESP for protection of packets\n   \
    \   belonging to the return routability procedure (Section 10.4.6).\n   o  Every\
    \ home agent SHOULD support the multicast group membership\n      control protocols\
    \ as described in Section 10.4.3.  If this support\n      is provided, the home\
    \ agent MUST be capable of using it to\n      determine which multicast data packets\
    \ to forward via the tunnel\n      to the mobile node.\n   o  Home agents MAY\
    \ support stateful address autoconfiguration for\n      mobile nodes as described\
    \ in Section 10.4.4.\n"
- title: 8.5.  IPv6 Mobile Nodes
  contents:
  - "8.5.  IPv6 Mobile Nodes\n   Finally, the following requirements apply to all\
    \ IPv6 nodes capable\n   of functioning as mobile nodes:\n   o  The node MUST\
    \ maintain a Binding Update List (Section 11.1).\n   o  The node MUST support\
    \ sending packets containing a Home Address\n      option (Section 11.3.1), and\
    \ follow the required IPsec interaction\n      (Section 11.3.2).\n   o  The node\
    \ MUST be able to perform IPv6 encapsulation and\n      decapsulation [15].\n\
    \   o  The node MUST be able to process type 2 routing header as defined\n   \
    \   in Section 6.4 and Section 11.3.3.\n   o  The node MUST support receiving\
    \ a Binding Error message (Section\n      11.3.6).\n   o  The node MUST support\
    \ receiving ICMP errors (Section 11.3.5).\n   o  The node MUST support movement\
    \ detection, care-of address\n      formation, and returning home (Section 11.5).\n\
    \   o  The node MUST be able to process Mobility Headers as described in\n   \
    \   Section 11.2.\n   o  The node MUST support the return routability procedure\
    \ (Section\n      11.6).\n   o  The node MUST be able to send Binding Updates,\
    \ as specified in\n      Section 11.7.1 and Section 11.7.2.\n   o  The node MUST\
    \ be able to receive and process Binding\n      Acknowledgements, as specified\
    \ in Section 11.7.3.\n   o  The node MUST support receiving a Binding Refresh\
    \ Request (Section\n      6.1.2), by responding with a Binding Update.\n   o \
    \ The node MUST support receiving Mobile Prefix Advertisements\n      (Section\
    \ 11.4.3) and reconfiguring its home address based on the\n      prefix information\
    \ contained therein.\n   o  The node SHOULD support use of the dynamic home agent\
    \ address\n      discovery mechanism, as described in Section 11.4.1.\n   o  The\
    \ node MUST allow route optimization to be administratively\n      enabled or\
    \ disabled.  The default SHOULD be enabled.\n   o  The node MAY support the multicast\
    \ address listener part of a\n      multicast group membership protocol as described\
    \ in Section\n      11.3.4.  If this support is provided, the mobile node MUST\
    \ be able\n      to receive tunneled multicast packets from the home agent.\n\
    \   o  The node MAY support stateful address autoconfiguration mechanisms\n  \
    \    such as DHCPv6 [29] on the interface represented by the tunnel to\n     \
    \ the home agent.\n"
- title: 9.  Correspondent Node Operation
  contents:
  - '9.  Correspondent Node Operation

    '
- title: 9.1.  Conceptual Data Structures
  contents:
  - "9.1.  Conceptual Data Structures\n   IPv6 nodes with route optimization support\
    \ maintain a Binding Cache\n   of bindings for other nodes.  A separate Binding\
    \ Cache SHOULD be\n   maintained by each IPv6 node for each of its unicast routable\n\
    \   addresses.  The Binding Cache MAY be implemented in any manner\n   consistent\
    \ with the external behavior described in this document, for\n   example by being\
    \ combined with the node's Destination Cache as\n   maintained by Neighbor Discovery\
    \ [12].  When sending a packet, the\n   Binding Cache is searched before the Neighbor\
    \ Discovery conceptual\n   Destination Cache [12].\n   Each Binding Cache entry\
    \ conceptually contains the following fields:\n   o  The home address of the mobile\
    \ node for which this is the Binding\n      Cache entry.  This field is used as\
    \ the key for searching the\n      Binding Cache for the destination address of\
    \ a packet being sent.\n   o  The care-of address for the mobile node indicated\
    \ by the home\n      address field in this Binding Cache entry.\n   o  A lifetime\
    \ value, indicating the remaining lifetime for this\n      Binding Cache entry.\
    \  The lifetime value is initialized from the\n      Lifetime field in the Binding\
    \ Update that created or last modified\n      this Binding Cache entry.\n   o\
    \  A flag indicating whether or not this Binding Cache entry is a\n      home\
    \ registration entry (applicable only on nodes which support\n      home agent\
    \ functionality).\n   o  The maximum value of the Sequence Number field received\
    \ in\n      previous Binding Updates for this home address.  The Sequence\n  \
    \    Number field is 16 bits long.  Sequence Number values MUST be\n      compared\
    \ modulo 2**16 as explained in Section 9.5.1.\n   o  Usage information for this\
    \ Binding Cache entry.  This is needed to\n      implement the cache replacement\
    \ policy in use in the Binding\n      Cache.  Recent use of a cache entry also\
    \ serves as an indication\n      that a Binding Refresh Request should be sent\
    \ when the lifetime of\n      this entry nears expiration.\n   Binding Cache entries\
    \ not marked as home registrations MAY be\n   replaced at any time by any reasonable\
    \ local cache replacement policy\n   but SHOULD NOT be unnecessarily deleted.\
    \  The Binding Cache for any\n   one of a node's IPv6 addresses may contain at\
    \ most one entry for each\n   mobile node home address.  The contents of a node's\
    \ Binding Cache\n   MUST NOT be changed in response to a Home Address option in\
    \ a\n   received packet.\n"
- title: 9.2.  Processing Mobility Headers
  contents:
  - "9.2.  Processing Mobility Headers\n   Mobility Header processing MUST observe\
    \ the following rules:\n   o  The checksum must be verified as per Section 6.1.\
    \  Otherwise, the\n      node MUST silently discard the message.\n   o  The MH\
    \ Type field MUST have a known value (Section 6.1.1).\n      Otherwise, the node\
    \ MUST discard the message and issue a Binding\n      Error message as described\
    \ in Section 9.3.3, with Status field set\n      to 2 (unrecognized MH Type value).\n\
    \   o  The Payload Proto field MUST be IPPROTO_NONE (59 decimal).\n      Otherwise,\
    \ the node MUST discard the message and SHOULD send ICMP\n      Parameter Problem,\
    \ Code 0, directly to the Source Address of the\n      packet as specified in\
    \ RFC 2463 [14].  Thus no Binding Cache\n      information is used in sending\
    \ the ICMP message.  The Pointer\n      field in the ICMP message SHOULD point\
    \ at the Payload Proto field.\n   o  The Header Len field in the Mobility Header\
    \ MUST NOT be less than\n      the length specified for this particular type of\
    \ message in\n      Section 6.1.  Otherwise, the node MUST discard the message\
    \ and\n      SHOULD send ICMP Parameter Problem, Code 0, directly to the Source\n\
    \      Address of the packet as specified in RFC 2463 [14].  (The Binding\n  \
    \    Cache information is again not used.) The Pointer field in the\n      ICMP\
    \ message SHOULD point at the Header Len field.\n      Subsequent checks depend\
    \ on the particular Mobility Header.\n"
- title: 9.3.  Packet Processing
  contents:
  - "9.3.  Packet Processing\n   This section describes how the correspondent node\
    \ sends packets to\n   the mobile node, and receives packets from it.\n"
- title: 9.3.1.  Receiving Packets with Home Address Option
  contents:
  - "9.3.1.  Receiving Packets with Home Address Option\n   Packets containing a Home\
    \ Address option MUST be dropped if the given\n   home address is not a unicast\
    \ routable address.\n   Mobile nodes can include a Home Address destination option\
    \ in a\n   packet if they believe the correspondent node has a Binding Cache\n\
    \   entry for the home address of a mobile node.  Packets containing a\n   Home\
    \ Address option MUST be dropped if there is no corresponding\n   Binding Cache\
    \ entry.  A corresponding Binding Cache entry MUST have\n   the same home address\
    \ as appears in the Home Address destination\n   option, and the currently registered\
    \ care-of address MUST be equal to\n   the source address of the packet.  These\
    \ tests MUST NOT be done for\n   packets that contain a Home Address option and\
    \ a Binding Update.\n   If the packet is dropped due the above tests, the correspondent\
    \ node\n   MUST send the Binding Error message as described in Section 9.3.3.\n\
    \   The Status field in this message should be set to 1 (unknown binding\n   for\
    \ Home Address destination option).\n   The correspondent node MUST process the\
    \ option in a manner consistent\n   with exchanging the Home Address field from\
    \ the Home Address option\n   into the IPv6 header and replacing the original\
    \ value of the Source\n   Address field there.  After all IPv6 options have been\
    \ processed, it\n   MUST be possible for upper layers to process the packet without\
    \ the\n   knowledge that it came originally from a care-of address or that a\n\
    \   Home Address option was used.\n   The use of IPsec Authentication Header (AH)\
    \ for the Home Address\n   option is not required, except that if the IPv6 header\
    \ of a packet is\n   covered by AH, then the authentication MUST also cover the\
    \ Home\n   Address option; this coverage is achieved automatically by the\n  \
    \ definition of the Option Type code for the Home Address option, since\n   it\
    \ indicates that the data within the option cannot change en route\n   to the\
    \ packet's final destination, and thus the option is included in\n   the AH computation.\
    \  By requiring that any authentication of the IPv6\n   header also cover the\
    \ Home Address option, the security of the Source\n   Address field in the IPv6\
    \ header is not compromised by the presence\n   of a Home Address option.\n  \
    \ When attempting to verify AH authentication data in a packet that\n   contains\
    \ a Home Address option, the receiving node MUST calculate the\n   AH authentication\
    \ data as if the following were true: The Home\n   Address option contains the\
    \ care-of address, and the source IPv6\n   address field of the IPv6 header contains\
    \ the home address.  This\n   conforms with the calculation specified in Section\
    \ 11.3.2.\n"
- title: 9.3.2.  Sending Packets to a Mobile Node
  contents:
  - "9.3.2.  Sending Packets to a Mobile Node\n   Before sending any packet, the sending\
    \ node SHOULD examine its\n   Binding Cache for an entry for the destination address\
    \ to which the\n   packet is being sent.  If the sending node has a Binding Cache\
    \ entry\n   for this address, the sending node SHOULD use a type 2 routing header\n\
    \   to route the packet to this mobile node (the destination node) by way\n  \
    \ of its care-of address.  However, the sending node MUST not do this\n   in the\
    \ following cases:\n   o  When sending an IPv6 Neighbor Discovery [12] packet.\n\
    \   o  Where otherwise noted in Section 6.1.\n   When calculating authentication\
    \ data in a packet that contains a type\n   2 routing header, the correspondent\
    \ node MUST calculate the AH\n   authentication data as if the following were\
    \ true: The routing header\n   contains the care-of address, the destination IPv6\
    \ address field of\n   the IPv6 header contains the home address, and the Segments\
    \ Left\n   field is zero.  The IPsec Security Policy Database lookup MUST based\n\
    \   on the mobile node's home address.\n   For instance, assuming there are no\
    \ additional routing headers in\n   this packet beyond those needed by Mobile\
    \ IPv6, the correspondent\n   node could set the fields in the packet's IPv6 header\
    \ and routing\n   header as follows:\n   o  The Destination Address in the packet's\
    \ IPv6 header is set to the\n      mobile node's home address (the original destination\
    \ address to\n      which the packet was being sent).\n   o  The routing header\
    \ is initialized to contain a single route\n      segment, containing the mobile\
    \ node's care-of address copied from\n      the Binding Cache entry.  The Segments\
    \ Left field is, however,\n      temporarily set to zero.\n   The IP layer will\
    \ insert the routing header before performing any\n   necessary IPsec processing.\
    \  Once all IPsec processing has been\n   performed, the node swaps the IPv6 destination\
    \ field with the Home\n   Address field in the routing header, sets the Segments\
    \ Left field to\n   one, and sends the packet.  This ensures the AH calculation\
    \ is done\n   on the packet in the form it will have on the receiver after\n \
    \  advancing the routing header.\n   Following the definition of a type 2 routing\
    \ header in Section 6.4,\n   this packet will be routed to the mobile node's care-of\
    \ address,\n   where it will be delivered to the mobile node (the mobile node\
    \ has\n   associated the care-of address with its network interface).\n   Note\
    \ that following the above conceptual model in an implementation\n   creates some\
    \ additional requirements for path MTU discovery since the\n   layer that decides\
    \ the packet size (e.g., TCP and applications using\n   UDP) needs to be aware\
    \ of the size of the headers added by the IP\n   layer on the sending node.\n\
    \   If, instead, the sending node has no Binding Cache entry for the\n   destination\
    \ address to which the packet is being sent, the sending\n   node simply sends\
    \ the packet normally, with no routing header.  If\n   the destination node is\
    \ not a mobile node (or is a mobile node that\n   is currently at home), the packet\
    \ will be delivered directly to this\n   node and processed normally by it.  If,\
    \ however, the destination node\n   is a mobile node that is currently away from\
    \ home, the packet will be\n   intercepted by the mobile node's home agent and\
    \ tunneled to the\n   mobile node's current primary care-of address.\n"
- title: 9.3.3.  Sending Binding Error Messages
  contents:
  - "9.3.3.  Sending Binding Error Messages\n   Section 9.2 and Section 9.3.1 describe\
    \ error conditions that lead to\n   a need to send a Binding Error message.\n\
    \   A Binding Error message is sent directly to the address that appeared\n  \
    \ in the IPv6 Source Address field of the offending packet.  If the\n   Source\
    \ Address field does not contain a unicast address, the Binding\n   Error message\
    \ MUST NOT be sent.\n   The Home Address field in the Binding Error message MUST\
    \ be copied\n   from the Home Address field in the Home Address destination option\
    \ of\n   the offending packet, or set to the unspecified address if no such\n\
    \   option appeared in the packet.\n   Note that the IPv6 Source Address and Home\
    \ Address field values\n   discussed above are the values from the wire, i.e.,\
    \ before any\n   modifications possibly performed as specified in Section 9.3.1.\n\
    \   Binding Error messages SHOULD be subject to rate limiting in the same\n  \
    \ manner as is done for ICMPv6 messages [14].\n"
- title: 9.3.4.  Receiving ICMP Error Messages
  contents:
  - "9.3.4.  Receiving ICMP Error Messages\n   When the correspondent node has a Binding\
    \ Cache entry for a mobile\n   node, all traffic destined to the mobile node goes\
    \ directly to the\n   current care-of address of the mobile node using a routing\
    \ header.\n   Any ICMP error message caused by packets on their way to the care-of\n\
    \   address will be returned in the normal manner to the correspondent\n   node.\n\
    \   On the other hand, if the correspondent node has no Binding Cache\n   entry\
    \ for the mobile node, the packet will be routed through the\n   mobile node's\
    \ home link.  Any ICMP error message caused by the packet\n   on its way to the\
    \ mobile node while in the tunnel, will be\n   transmitted to the mobile node's\
    \ home agent.  By the definition of\n   IPv6 encapsulation [15], the home agent\
    \ MUST relay certain ICMP error\n   messages back to the original sender of the\
    \ packet, which in this\n   case is the correspondent node.\n   Thus, in all cases,\
    \ any meaningful ICMP error messages caused by\n   packets from a correspondent\
    \ node to a mobile node will be returned\n   to the correspondent node.  If the\
    \ correspondent node receives\n   persistent ICMP Destination Unreachable messages\
    \ after sending\n   packets to a mobile node based on an entry in its Binding\
    \ Cache, the\n   correspondent node SHOULD delete this Binding Cache entry.  Note\
    \ that\n   if the mobile node continues to send packets with the Home Address\n\
    \   destination option to this correspondent node, they will be dropped\n   due\
    \ to the lack of a binding.  For this reason it is important that\n   only persistent\
    \ ICMP messages lead to the deletion of the Binding\n   Cache entry.\n"
- title: 9.4.  Return Routability Procedure
  contents:
  - "9.4.  Return Routability Procedure\n   This subsection specifies actions taken\
    \ by a correspondent node\n   during the return routability procedure.\n"
- title: 9.4.1.  Receiving Home Test Init Messages
  contents:
  - "9.4.1.  Receiving Home Test Init Messages\n   Upon receiving a Home Test Init\
    \ message, the correspondent node\n   verifies the following:\n   o  The packet\
    \ MUST NOT include a Home Address destination option.\n   Any packet carrying\
    \ a Home Test Init message which fails to satisfy\n   all of these tests MUST\
    \ be silently ignored.\n   Otherwise, in preparation for sending the corresponding\
    \ Home Test\n   Message, the correspondent node checks that it has the necessary\n\
    \   material to engage in a return routability procedure, as specified in\n  \
    \ Section 5.2.  The correspondent node MUST have a secret Kcn and a\n   nonce.\
    \  If it does not have this material yet, it MUST produce it\n   before continuing\
    \ with the return routability procedure.\n   Section 9.4.3 specifies further processing.\n"
- title: 9.4.2.  Receiving Care-of Test Init Messages
  contents:
  - "9.4.2.  Receiving Care-of Test Init Messages\n   Upon receiving a Care-of Test\
    \ Init message, the correspondent node\n   verifies the following:\n   o  The\
    \ packet MUST NOT include a Home Address destination option.\n   Any packet carrying\
    \ a Care-of Test Init message which fails to\n   satisfy all of these tests MUST\
    \ be silently ignored.\n   Otherwise, in preparation for sending the corresponding\
    \ Care-of Test\n   Message, the correspondent node checks that it has the necessary\n\
    \   material to engage in a return routability procedure in the manner\n   described\
    \ in Section 9.4.1.\n   Section 9.4.4 specifies further processing.\n"
- title: 9.4.3.  Sending Home Test Messages
  contents:
  - "9.4.3.  Sending Home Test Messages\n   The correspondent node creates a home\
    \ keygen token and uses the\n   current nonce index as the Home Nonce Index. \
    \ It then creates a Home\n   Test message (Section 6.1.5) and sends it to the\
    \ mobile node at the\n   latter's home address.\n"
- title: 9.4.4.  Sending Care-of Test Messages
  contents:
  - "9.4.4.  Sending Care-of Test Messages\n   The correspondent node creates a care-of\
    \ keygen token and uses the\n   current nonce index as the Care-of Nonce Index.\
    \  It then creates a\n   Care-of Test message (Section 6.1.6) and sends it to\
    \ the mobile node\n   at the latter's care-of address.\n"
- title: 9.5.  Processing Bindings
  contents:
  - "9.5.  Processing Bindings\n   This section explains how the correspondent node\
    \ processes messages\n   related to bindings.  These messages are:\n   o  Binding\
    \ Update\n   o  Binding Refresh Request\n   o  Binding Acknowledgement\n   o \
    \ Binding Error\n"
- title: 9.5.1.  Receiving Binding Updates
  contents:
  - "9.5.1.  Receiving Binding Updates\n   Before accepting a Binding Update, the\
    \ receiving node MUST validate\n   the Binding Update according to the following\
    \ tests:\n   o  The packet MUST contain a unicast routable home address, either\
    \ in\n      the Home Address option or in the Source Address, if the Home\n  \
    \    Address option is not present.\n   o  The Sequence Number field in the Binding\
    \ Update is greater than\n      the Sequence Number received in the previous valid\
    \ Binding Update\n      for this home address, if any.\n   If the receiving node\
    \ has no Binding Cache entry for the indicated\n   home address, it MUST accept\
    \ any Sequence Number value in a received\n   Binding Update from this mobile\
    \ node.\n   This Sequence Number comparison MUST be performed modulo 2**16, i.e.,\n\
    \   the number is a free running counter represented modulo 65536.  A\n   Sequence\
    \ Number in a received Binding Update is considered less than\n   or equal to\
    \ the last received number if its value lies in the range\n   of the last received\
    \ number and the preceding 32768 values,\n   inclusive.  For example, if the last\
    \ received sequence number was 15,\n   then messages with sequence numbers 0 through\
    \ 15, as well as 32783\n   through 65535, would be considered less than or equal.\n\
    \   When the Home Registration (H) bit is not set, the following are also\n  \
    \ required:\n   o  A Nonce Indices mobility option MUST be present, and the Home\
    \ and\n      Care-of Nonce Index values in this option MUST be recent enough to\n\
    \      be recognized by the correspondent node.  (Care-of Nonce Index\n      values\
    \ are not inspected for requests to delete a binding.)\n   o  The correspondent\
    \ node MUST re-generate the home keygen token and\n      the care-of keygen token\
    \ from the information contained in the\n      packet.  It then generates the\
    \ binding management key Kbm and uses\n      it to verify the authenticator field\
    \ in the Binding Update as\n      specified in Section 6.1.7.\n   o  The Binding\
    \ Authorization Data mobility option MUST be present,\n      and its contents\
    \ MUST satisfy rules presented in Section 5.2.6.\n      Note that a care-of address\
    \ different from the Source Address MAY\n      have been specified by including\
    \ an Alternate Care-of Address\n      mobility option in the Binding Update. \
    \ When such a message is\n      received and the return routability procedure\
    \ is used as an\n      authorization method, the correspondent node MUST verify\
    \ the\n      authenticator by using the address within the Alternate Care-of\n\
    \      Address in the calculations.\n   o  The Binding Authorization Data mobility\
    \ option MUST be the last\n      option and MUST NOT have trailing padding.\n\
    \   If the Home Registration (H) bit is set, the Nonce Indices mobility\n   option\
    \ MUST NOT be present.\n   If the mobile node sends a sequence number which is\
    \ not greater than\n   the sequence number from the last valid Binding Update\
    \ for this home\n   address, then the receiving node MUST send back a Binding\n\
    \   Acknowledgement with status code 135, and the last accepted sequence\n   number\
    \ in the Sequence Number field of the Binding Acknowledgement.\n   If a binding\
    \ already exists for the given home address and the home\n   registration flag\
    \ has a different value than the Home Registration\n   (H) bit in the Binding\
    \ Update, then the receiving node MUST send back\n   a Binding Acknowledgement\
    \ with status code 139 (registration type\n   change disallowed).  The home registration\
    \ flag stored in the Binding\n   Cache entry MUST NOT be changed.\n   If the receiving\
    \ node no longer recognizes the Home Nonce Index\n   value, Care-of Nonce Index\
    \ value, or both values from the Binding\n   Update, then the receiving node MUST\
    \ send back a Binding\n   Acknowledgement with status code 136, 137, or 138, respectively.\n\
    \   Packets carrying Binding Updates that fail to satisfy all of these\n   tests\
    \ for any reason other than insufficiency of the Sequence Number,\n   registration\
    \ type change, or expired nonce index values, MUST be\n   silently discarded.\n\
    \   If the Binding Update is valid according to the tests above, then the\n  \
    \ Binding Update is processed further as follows:\n   o  The Sequence Number value\
    \ received from a mobile node in a Binding\n      Update is stored by the receiving\
    \ node in its Binding Cache entry\n      for the given home address.\n   o  If\
    \ the Lifetime specified in the Binding Update is nonzero and the\n      specified\
    \ care-of address is not equal to the home address for the\n      binding, then\
    \ this is a request to cache a binding for the home\n      address.  If the Home\
    \ Registration (H) bit is set in the Binding\n      Update, the Binding Update\
    \ is processed according to the procedure\n      specified in Section 10.3.1;\
    \ otherwise, it is processed according\n      to the procedure specified in Section\
    \ 9.5.2.\n   o  If the Lifetime specified in the Binding Update is zero or the\n\
    \      specified care-of address matches the home address for the\n      binding,\
    \ then this is a request to delete the cached binding for\n      the home address.\
    \  In this case, the Binding Update MUST include a\n      valid home nonce index,\
    \ and the care-of nonce index MUST be\n      ignored by the correspondent node.\
    \  The generation of the binding\n      management key depends then exclusively\
    \ on the home keygen token\n      (Section 5.2.5).  If the Home Registration (H)\
    \ bit is set in the\n      Binding Update, the Binding Update is processed according\
    \ to the\n      procedure specified in Section 10.3.2; otherwise, it is processed\n\
    \      according to the procedure specified in Section 9.5.3.\n   The specified\
    \ care-of address MUST be determined as follows:\n   o  If the Alternate Care-of\
    \ Address option is present, the care-of\n      address is the address in that\
    \ option.\n   o  Otherwise, the care-of address is the Source Address field in\
    \ the\n      packet's IPv6 header.\n   The home address for the binding MUST be\
    \ determined as follows:\n   o  If the Home Address destination option is present,\
    \ the home\n      address is the address in that option.\n   o  Otherwise, the\
    \ home address is the Source Address field in the\n      packet's IPv6 header.\n"
- title: 9.5.2.  Requests to Cache a Binding
  contents:
  - "9.5.2.  Requests to Cache a Binding\n   This section describes the processing\
    \ of a valid Binding Update that\n   requests a node to cache a binding, for which\
    \ the Home Registration\n   (H) bit is not set in the Binding Update.\n   In this\
    \ case, the receiving node SHOULD create a new entry in its\n   Binding Cache\
    \ for this home address, or update its existing Binding\n   Cache entry for this\
    \ home address, if such an entry already exists.\n   The lifetime for the Binding\
    \ Cache entry is initialized from the\n   Lifetime field specified in the Binding\
    \ Update, although this\n   lifetime MAY be reduced by the node caching the binding;\
    \ the lifetime\n   for the Binding Cache entry MUST NOT be greater than the Lifetime\n\
    \   value specified in the Binding Update.  Any Binding Cache entry MUST\n   be\
    \ deleted after the expiration of its lifetime.\n   Note that if the mobile node\
    \ did not request a Binding\n   Acknowledgement, then it is not aware of the selected\
    \ shorter\n   lifetime.  The mobile node may thus use route optimization and send\n\
    \   packets with the Home Address destination option.  As discussed in\n   Section\
    \ 9.3.1, such packets will be dropped if there is no binding.\n   This situation\
    \ is recoverable, but can cause temporary packet loss.\n   The correspondent node\
    \ MAY refuse to accept a new Binding Cache entry\n   if it does not have sufficient\
    \ resources.  A new entry MAY also be\n   refused if the correspondent node believes\
    \ its resources are utilized\n   more efficiently in some other purpose, such\
    \ as serving another\n   mobile node with higher amount of traffic.  In both cases\
    \ the\n   correspondent node SHOULD return a Binding Acknowledgement with\n  \
    \ status value 130.\n"
- title: 9.5.3 Requests to Delete a Binding
  contents:
  - "9.5.3 Requests to Delete a Binding\n   This section describes the processing\
    \ of a valid Binding Update that\n   requests a node to delete a binding when\
    \ the Home Registration (H)\n   bit is not set in the Binding Update.\n   Any\
    \ existing binding for the given home address MUST be deleted.  A\n   Binding\
    \ Cache entry for the home address MUST NOT be created in\n   response to receiving\
    \ the Binding Update.\n   If the Binding Cache entry was created by use of return\
    \ routability\n   nonces, the correspondent node MUST ensure that the same nonces\
    \ are\n   not used again with the particular home and care-of address.  If both\n\
    \   nonces are still valid, the correspondent node has to remember the\n   particular\
    \ combination of nonce indexes, addresses, and sequence\n   number as illegal\
    \ until at least one of the nonces has become too\n   old.\n"
- title: 9.5.4.  Sending Binding Acknowledgements
  contents:
  - "9.5.4.  Sending Binding Acknowledgements\n   A Binding Acknowledgement may be\
    \ sent to indicate receipt of a\n   Binding Update as follows:\n   o  If the Binding\
    \ Update was discarded as described in Section 9.2 or\n      Section 9.5.1, a\
    \ Binding Acknowledgement MUST NOT be sent.\n      Otherwise the treatment depends\
    \ on the following rules.\n   o  If the Acknowledge (A) bit set is set in the\
    \ Binding Update, a\n      Binding Acknowledgement MUST be sent.  Otherwise, the\
    \ treatment\n      depends on the below rule.\n   o  If the node rejects the Binding\
    \ Update due to an expired nonce\n      index, sequence number being out of window\
    \ (Section 9.5.1), or\n      insufficiency of resources (Section 9.5.2), a Binding\n\
    \      Acknowledgement MUST be sent.  If the node accepts the Binding\n      Update,\
    \ the Binding Acknowledgement SHOULD NOT be sent.\n   If the node accepts the\
    \ Binding Update and creates or updates an\n   entry for this binding, the Status\
    \ field in the Binding\n   Acknowledgement MUST be set to a value less than 128.\
    \  Otherwise, the\n   Status field MUST be set to a value greater than or equal\
    \ to 128.\n   Values for the Status field are described in Section 6.1.8 and in\
    \ the\n   IANA registry of assigned numbers [19].\n   If the Status field in the\
    \ Binding Acknowledgement contains the value\n   136 (expired home nonce index),\
    \ 137 (expired care-of nonce index), or\n   138 (expired nonces) then the message\
    \ MUST NOT include the Binding\n   Authorization Data mobility option.  Otherwise,\
    \ the Binding\n   Authorization Data mobility option MUST be included, and MUST\
    \ meet\n   the specific authentication requirements for Binding Acknowledgements\n\
    \   as defined in Section 5.2.\n   If the Source Address field of the IPv6 header\
    \ that carried the\n   Binding Update does not contain a unicast address, the\
    \ Binding\n   Acknowledgement MUST NOT be sent and the Binding Update packet MUST\n\
    \   be silently discarded.  Otherwise, the acknowledgement MUST be sent\n   to\
    \ the Source Address.  Unlike the treatment of regular packets, this\n   addressing\
    \ procedure does not use information from the Binding Cache.\n   However, a routing\
    \ header is needed in some cases.  If the Source\n   Address is the home address\
    \ of the mobile node, i.e., the Binding\n   Update did not contain a Home Address\
    \ destination option, then the\n   Binding Acknowledgement MUST be sent to that\
    \ address and the routing\n   header MUST NOT be used.  Otherwise, the Binding\
    \ Acknowledgement MUST\n   be sent using a type 2 routing header which contains\
    \ the mobile\n   node's home address.\n"
- title: 9.5.5.  Sending Binding Refresh Requests
  contents:
  - "9.5.5.  Sending Binding Refresh Requests\n   If a Binding Cache entry being deleted\
    \ is still in active use when\n   sending packets to a mobile node, then the next\
    \ packet sent to the\n   mobile node will be routed normally to the mobile node's\
    \ home link.\n   Communication with the mobile node continues, but the tunneling\
    \ from\n   the home network creates additional overhead and latency in\n   delivering\
    \ packets to the mobile node.\n   If the sender knows that the Binding Cache entry\
    \ is still in active\n   use, it MAY send a Binding Refresh Request message to\
    \ the mobile node\n   in an attempt to avoid this overhead and latency due to\
    \ deleting and\n   recreating the Binding Cache entry.  This message is always\
    \ sent to\n   the home address of the mobile node.\n   The correspondent node\
    \ MAY retransmit Binding Refresh Request\n   messages as long as the rate limitation\
    \ is applied.  The\n   correspondent node MUST stop retransmitting when it receives\
    \ a\n   Binding Update.\n"
- title: 9.6.  Cache Replacement Policy
  contents:
  - "9.6.  Cache Replacement Policy\n   Conceptually, a node maintains a separate\
    \ timer for each entry in its\n   Binding Cache.  When creating or updating a\
    \ Binding Cache entry in\n   response to a received and accepted Binding Update,\
    \ the node sets the\n   timer for this entry to the specified Lifetime period.\
    \  Any entry in\n   a node's Binding Cache MUST be deleted after the expiration\
    \ of the\n   Lifetime specified in the Binding Update from which the entry was\n\
    \   created or last updated.\n   Each node's Binding Cache will, by necessity,\
    \ have a finite size.  A\n   node MAY use any reasonable local policy for managing\
    \ the space\n   within its Binding Cache.\n   A node MAY choose to drop any entry\
    \ already in its Binding Cache in\n   order to make space for a new entry.  For\
    \ example, a \"least-recently\n   used\" (LRU) strategy for cache entry replacement\
    \ among entries should\n   work well, unless the size of the Binding Cache is\
    \ substantially\n   insufficient.  When entries are deleted, the correspondent\
    \ node MUST\n   follow the rules in Section 5.2.8 in order to guard the return\n\
    \   routability procedure against replay attacks.\n   If the node sends a packet\
    \ to a destination for which it has dropped\n   the entry from its Binding Cache,\
    \ the packet will be routed through\n   the mobile node's home link.  The mobile\
    \ node can detect this and\n   establish a new binding if necessary.\n   However,\
    \ if the mobile node believes that the binding still exists,\n   it may use route\
    \ optimization and send packets with the Home Address\n   destination option.\
    \  This can create temporary packet loss, as\n   discussed earlier, in the context\
    \ of binding lifetime reductions\n   performed by the correspondent node (Section\
    \ 9.5.2).\n"
- title: 10.  Home Agent Operation
  contents:
  - '10.  Home Agent Operation

    '
- title: 10.1.  Conceptual Data Structures
  contents:
  - "10.1.  Conceptual Data Structures\n   Each home agent MUST maintain a Binding\
    \ Cache and Home Agents List.\n   The rules for maintaining a Binding Cache are\
    \ the same for home\n   agents and correspondent nodes and have already been described\
    \ in\n   Section 9.1.\n   The Home Agents List is maintained by each home agent,\
    \ recording\n   information about each router on the same link that is acting\
    \ as a\n   home agent.  This list is used by the dynamic home agent address\n\
    \   discovery mechanism.  A router is known to be acting as a home agent,\n  \
    \ if it sends a Router Advertisement in which the Home Agent (H) bit is\n   set.\
    \  When the lifetime for a list entry (defined below) expires,\n   that entry\
    \ is removed from the Home Agents List.  The Home Agents\n   List is similar to\
    \ the Default Router List conceptual data structure\n   maintained by each host\
    \ for Neighbor Discovery [12].  The Home Agents\n   List MAY be implemented in\
    \ any manner consistent with the external\n   behavior described in this document.\n\
    \   Each home agent maintains a separate Home Agents List for each link\n   on\
    \ which it is serving as a home agent.  A new entry is created or an\n   existing\
    \ entry is updated in response to receipt of a valid Router\n   Advertisement\
    \ in which the Home Agent (H) bit is set.  Each Home\n   Agents List entry conceptually\
    \ contains the following fields:\n   o  The link-local IP address of a home agent\
    \ on the link.  This\n      address is learned through the Source Address of the\
    \ Router\n      Advertisements [12] received from the router.\n   o  One or more\
    \ global IP addresses for this home agent.  Global\n      addresses are learned\
    \ through Prefix Information options with the\n      Router Address (R) bit set\
    \ and received in Router Advertisements\n      from this link-local address. \
    \ Global addresses for the router in\n      a Home Agents List entry MUST be deleted\
    \ once the prefix\n      associated with that address is no longer valid [12].\n\
    \   o  The remaining lifetime of this Home Agents List entry.  If a Home\n   \
    \   Agent Information Option is present in a Router Advertisement\n      received\
    \ from a home agent, the lifetime of the Home Agents List\n      entry representing\
    \ that home agent is initialized from the Home\n      Agent Lifetime field in\
    \ the option (if present); otherwise, the\n      lifetime is initialized from\
    \ the Router Lifetime field in the\n      received Router Advertisement.  If Home\
    \ Agents List entry lifetime\n      reaches zero, the entry MUST be deleted from\
    \ the Home Agents List.\n   o  The preference for this home agent; higher values\
    \ indicate a more\n      preferable home agent.  The preference value is taken\
    \ from the\n      Home Agent Preference field in the received Router Advertisement,\n\
    \      if the Router Advertisement contains a Home Agent Information\n      Option\
    \ and is otherwise set to the default value of 0.  A home\n      agent uses this\
    \ preference in ordering the Home Agents List when\n      it sends an ICMP Home\
    \ Agent Address Discovery message.\n"
- title: 10.2.  Processing Mobility Headers
  contents:
  - "10.2.  Processing Mobility Headers\n   All IPv6 home agents MUST observe the\
    \ rules described in Section 9.2\n   when processing Mobility Headers.\n"
- title: 10.3.  Processing Bindings
  contents:
  - '10.3.  Processing Bindings

    '
- title: 10.3.1.  Primary Care-of Address Registration
  contents:
  - "10.3.1.  Primary Care-of Address Registration\n   When a node receives a Binding\
    \ Update, it MUST validate it and\n   determine the type of Binding Update according\
    \ to the steps described\n   in Section 9.5.1.  Furthermore, it MUST authenticate\
    \ the Binding\n   Update as described in Section 5.1.  An authorization step specific\n\
    \   for the home agent is also needed to ensure that only the right node\n   can\
    \ control a particular home address.  This is provided through the\n   home address\
    \ unequivocally identifying the security association that\n   must be used.\n\
    \   This section describes the processing of a valid and authorized\n   Binding\
    \ Update when it requests the registration of the mobile node's\n   primary care-of\
    \ address.\n   To begin processing the Binding Update, the home agent MUST perform\n\
    \   the following sequence of tests:\n   o  If the node implements only correspondent\
    \ node functionality, or\n      has not been configured to act as a home agent,\
    \ then the node MUST\n      reject the Binding Update.  The node MUST also return\
    \ a Binding\n      Acknowledgement to the mobile node, in which the Status field\
    \ is\n      set to 131 (home registration not supported).\n   o  Else, if the\
    \ home address for the binding (the Home Address field\n      in the packet's\
    \ Home Address option) is not an on-link IPv6\n      address with respect to the\
    \ home agent's current Prefix List, then\n      the home agent MUST reject the\
    \ Binding Update and SHOULD return a\n      Binding Acknowledgement to the mobile\
    \ node, in which the Status\n      field is set to 132 (not home subnet).\n  \
    \ o  Else, if the home agent chooses to reject the Binding Update for\n      any\
    \ other reason (e.g., insufficient resources to serve another\n      mobile node\
    \ as a home agent), then the home agent SHOULD return a\n      Binding Acknowledgement\
    \ to the mobile node, in which the Status\n      field is set to an appropriate\
    \ value to indicate the reason for\n      the rejection.\n   o  A Home Address\
    \ destination option MUST be present in the message.\n      It MUST be validated\
    \ as described in Section 9.3.1 with the\n      following additional rule.  The\
    \ Binding Cache entry existence test\n      MUST NOT be done for IPsec packets\
    \ when the Home Address option\n      contains an address for which the receiving\
    \ node could act as a\n      home agent.\n   If home agent accepts the Binding\
    \ Update, it MUST then create a new\n   entry in its Binding Cache for this mobile\
    \ node or update its\n   existing Binding Cache entry, if such an entry already\
    \ exists.  The\n   Home Address field as received in the Home Address option provides\n\
    \   the home address of the mobile node.\n   The home agent MUST mark this Binding\
    \ Cache entry as a home\n   registration to indicate that the node is serving\
    \ as a home agent for\n   this binding.  Binding Cache entries marked as a home\
    \ registration\n   MUST be excluded from the normal cache replacement policy used\
    \ for\n   the Binding Cache (Section 9.6) and MUST NOT be removed from the\n \
    \  Binding Cache until the expiration of the Lifetime period.\n   Unless this\
    \ home agent already has a binding for the given home\n   address, the home agent\
    \ MUST perform Duplicate Address Detection [13]\n   on the mobile node's home\
    \ link before returning the Binding\n   Acknowledgement.  This ensures that no\
    \ other node on the home link\n   was using the mobile node's home address when\
    \ the Binding Update\n   arrived.  If this Duplicate Address Detection fails for\
    \ the given\n   home address or an associated link local address, then the home\
    \ agent\n   MUST reject the complete Binding Update and MUST return a Binding\n\
    \   Acknowledgement to the mobile node, in which the Status field is set\n   to\
    \ 134 (Duplicate Address Detection failed).  When the home agent\n   sends a successful\
    \ Binding Acknowledgement to the mobile node, the\n   home agent assures to the\
    \ mobile node that its address(es) will be\n   kept unique by the home agent for\
    \ as long as the lifetime was granted\n   for the binding.\n   The specific addresses,\
    \ which are to be tested before accepting the\n   Binding Update and later to\
    \ be defended by performing Duplicate\n   Address Detection, depend on the setting\
    \ of the Link-Local Address\n   Compatibility (L) bit, as follows:\n   o  L=0:\
    \ Defend only the given address.  Do not derive a link-local\n      address.\n\
    \   o  L=1: Defend both the given non link-local unicast (home) address\n    \
    \  and the derived link-local.  The link-local address is derived by\n      replacing\
    \ the subnet prefix in the mobile node's home address with\n      the link-local\
    \ prefix.\n   The lifetime of the Binding Cache entry depends on a number of\n\
    \   factors:\n   o  The lifetime for the Binding Cache entry MUST NOT be greater\
    \ than\n      the Lifetime value specified in the Binding Update.\n   o  The lifetime\
    \ for the Binding Cache entry MUST NOT be greater than\n      the remaining valid\
    \ lifetime for the subnet prefix in the mobile\n      node's home address specified\
    \ with the Binding Update.  The\n      remaining valid lifetime for this prefix\
    \ is determined by the home\n      agent based on its own Prefix List entry [12].\n\
    \      The remaining preferred lifetime SHOULD NOT have any impact on the\n  \
    \    lifetime for the binding cache entry.\n      The home agent MUST remove a\
    \ binding when the valid lifetime of\n      the prefix associated with it expires.\n\
    \   o  The home agent MAY further decrease the specified lifetime for the\n  \
    \    binding, for example based on a local policy.  The resulting\n      lifetime\
    \ is stored by the home agent in the Binding Cache entry,\n      and this Binding\
    \ Cache entry MUST be deleted by the home agent\n      after the expiration of\
    \ this lifetime.\n   Regardless of the setting of the Acknowledge (A) bit in the\
    \ Binding\n   Update, the home agent MUST return a Binding Acknowledgement to\
    \ the\n   mobile node constructed as follows:\n   o  The Status field MUST be\
    \ set to a value indicating success.  The\n      value 1 (accepted but prefix\
    \ discovery necessary) MUST be used if\n      the subnet prefix of the specified\
    \ home address is deprecated, or\n      becomes deprecated during the lifetime\
    \ of the binding, or becomes\n      invalid at the end of the lifetime.  The value\
    \ 0 MUST be used\n      otherwise.  For the purposes of comparing the binding\
    \ and prefix\n      lifetimes, the prefix lifetimes are first converted into units\
    \ of\n      four seconds by ignoring the two least significant bits.\n   o  The\
    \ Key Management Mobility Capability (K) bit is set if the\n      following conditions\
    \ are all fulfilled, and cleared otherwise:\n      *  The Key Management Mobility\
    \ Capability (K) bit was set in the\n         Binding Update.\n      *  The IPsec\
    \ security associations between the mobile node and the\n         home agent have\
    \ been established dynamically.\n      *  The home agent has the capability to\
    \ update its endpoint in the\n         used key management protocol to the new\
    \ care-of address every\n         time it moves.\n      Depending on the final\
    \ value of the bit in the Binding\n      Acknowledgement, the home agent SHOULD\
    \ perform the following\n      actions:\n      K = 0\n         Discard key management\
    \ connections, if any, to the old care-of\n         address.  If the mobile node\
    \ did not have a binding before\n         sending this Binding Update, discard\
    \ the connections to the\n         home address.\n      K = 1\n         Move the\
    \ peer endpoint of the key management protocol\n         connection, if any, to\
    \ the new care-of address.  For an IKE\n         phase 1 connection, this means\
    \ that any IKE packets sent to the\n         peer are sent to this address, and\
    \ packets from this address\n         with the original ISAKMP cookies are accepted.\n\
    \         Note that RFC 2408 [8] Section 2.5.3 gives specific rules that\n   \
    \      ISAKMP cookies must satisfy: they must depend on specific\n         parties\
    \ and can only be generated by the entity itself.  Then\n         it recommends\
    \ a particular way to do this, namely a hash of IP\n         addresses.  With\
    \ the K bit set to 1, the recommended\n         implementation technique does\
    \ not work directly.  To satisfy\n         the two rules, the specific parties\
    \ must be treated as the\n         original IP addresses, not the ones in use\
    \ at the specific\n         moment.\n   o  The Sequence Number field MUST be copied\
    \ from the Sequence Number\n      given in the Binding Update.\n   o  The Lifetime\
    \ field MUST be set to the remaining lifetime for the\n      binding as set by\
    \ the home agent in its home registration Binding\n      Cache entry for the mobile\
    \ node, as described above.\n   o  If the home agent stores the Binding Cache\
    \ entry in nonvolatile\n      storage, then the Binding Refresh Advice mobility\
    \ option MUST be\n      omitted.  Otherwise, the home agent MAY include this option\
    \ to\n      suggest that the mobile node refreshes its binding before the\n  \
    \    actual lifetime of the binding ends.\n      If the Binding Refresh Advice\
    \ mobility option is present, the\n      Refresh Interval field in the option\
    \ MUST be set to a value less\n      than the Lifetime value being returned in\
    \ the Binding\n      Acknowledgement.  This indicates that the mobile node SHOULD\n\
    \      attempt to refresh its home registration at the indicated shorter\n   \
    \   interval.  The home agent MUST still retain the registration for\n      the\
    \ Lifetime period, even if the mobile node does not refresh its\n      registration\
    \ within the Refresh period.\n   The rules for selecting the Destination IP address\
    \ (and possibly\n   routing header construction) for the Binding Acknowledgement\
    \ to the\n   mobile node are the same as in Section 9.5.4.\n   In addition, the\
    \ home agent MUST follow the procedure defined in\n   Section 10.4.1 to intercept\
    \ packets on the mobile node's home link\n   addressed to the mobile node, while\
    \ the home agent is serving as the\n   home agent for this mobile node.  The home\
    \ agent MUST also be\n   prepared to accept reverse tunneled packets from the\
    \ new care-of\n   address of the mobile node, as described in Section 10.4.5.\
    \  Finally,\n   the home agent MUST also propagate new home network prefixes,\
    \ as\n   described in Section 10.6.\n"
- title: 10.3.2.  Primary Care-of Address De-Registration
  contents:
  - "10.3.2.  Primary Care-of Address De-Registration\n   A binding may need to be\
    \ de-registered when the mobile node returns\n   home or when the mobile node\
    \ knows that it will not have any care-of\n   addresses in the visited network.\n\
    \   A Binding Update is validated and authorized in the manner described\n   in\
    \ the previous section; note that when the mobile node de-registers\n   when it\
    \ is at home, it may not include the Home Address destination\n   option, in which\
    \ case the mobile node's home address is the source IP\n   address of the de-registration\
    \ Binding Update.  This section\n   describes the processing of a valid Binding\
    \ Update that requests the\n   receiving node to no longer serve as its home agent,\
    \ de-registering\n   its primary care-of address.\n   To begin processing the\
    \ Binding Update, the home agent MUST perform\n   the following test:\n   o  If\
    \ the receiving node has no entry marked as a home registration\n      in its\
    \ Binding Cache for this mobile node, then this node MUST\n      reject the Binding\
    \ Update and SHOULD return a Binding\n      Acknowledgement to the mobile node,\
    \ in which the Status field is\n      set to 133 (not home agent for this mobile\
    \ node).\n   If the home agent does not reject the Binding Update as described\n\
    \   above, then it MUST delete any existing entry in its Binding Cache\n   for\
    \ this mobile node.  Then, the home agent MUST return a Binding\n   Acknowledgement\
    \ to the mobile node, constructed as follows:\n   o  The Status field MUST be\
    \ set to a value 0, indicating success.\n   o  The Key Management Mobility Capability\
    \ (K) bit is set or cleared\n      and actions based on its value are performed\
    \ as described in the\n      previous section.  The mobile node's home address\
    \ is used as its\n      new care-of address for the purposes of moving the key\
    \ management\n      connection to a new endpoint.\n   o  The Sequence Number field\
    \ MUST be copied from the Sequence Number\n      given in the Binding Update.\n\
    \   o  The Lifetime field MUST be set to zero.\n   o  The Binding Refresh Advice\
    \ mobility option MUST be omitted.\n   In addition, the home agent MUST stop intercepting\
    \ packets on the\n   mobile node's home link that are addressed to the mobile\
    \ node\n   (Section 10.4.1).\n   The rules for selecting the Destination IP address\
    \ (and, if required,\n   routing header construction) for the Binding Acknowledgement\
    \ to the\n   mobile node are the same as in the previous section.  When the Status\n\
    \   field in the Binding Acknowledgement is greater than or equal to 128\n   and\
    \ the Source Address of the Binding Update is on the home link, the\n   home agent\
    \ MUST send it to the mobile node's link layer address\n   (retrieved either from\
    \ the Binding Update or through Neighbor\n   Solicitation).\n"
- title: 10.4.  Packet Processing
  contents:
  - '10.4.  Packet Processing

    '
- title: 10.4.1.  Intercepting Packets for a Mobile Node
  contents:
  - "10.4.1.  Intercepting Packets for a Mobile Node\n   While a node is serving as\
    \ the home agent for mobile node it MUST\n   attempt to intercept packets on the\
    \ mobile node's home link that are\n   addressed to the mobile node.\n   In order\
    \ to do this, when a node begins serving as the home agent it\n   MUST multicast\
    \ onto the home link a Neighbor Advertisement message\n   [12] on behalf of the\
    \ mobile node.  For the home address specified in\n   the Binding Update, the\
    \ home agent sends a Neighbor Advertisement\n   message [12] to the all-nodes\
    \ multicast address on the home link to\n   advertise the home agent's own link-layer\
    \ address for this IP address\n   on behalf of the mobile node.  If the Link-Layer\
    \ Address\n   Compatibility (L) flag has been specified in the Binding Update,\
    \ the\n   home agent MUST do the same for the link-local address of the mobile\n\
    \   node.\n   All fields in each Neighbor Advertisement message SHOULD be set\
    \ in\n   the same way they would be set by the mobile node if it was sending\n\
    \   this Neighbor Advertisement [12] while at home, with the following\n   exceptions:\n\
    \   o  The Target Address in the Neighbor Advertisement MUST be set to\n     \
    \ the specific IP address for the mobile node.\n   o  The Advertisement MUST include\
    \ a Target Link-layer Address option\n      specifying the home agent's link-layer\
    \ address.\n   o  The Router (R) bit in the Advertisement MUST be set to zero.\n\
    \   o  The Solicited Flag (S) in the Advertisement MUST NOT be set, since\n  \
    \    it was not solicited by any Neighbor Solicitation.\n   o  The Override Flag\
    \ (O) in the Advertisement MUST be set, indicating\n      that the Advertisement\
    \ SHOULD override any existing Neighbor Cache\n      entry at any node receiving\
    \ it.\n   o  The Source Address in the IPv6 header MUST be set to the home\n \
    \     agent's IP address on the interface used to send the\n      advertisement.\n\
    \   Any node on the home link that receives one of the Neighbor\n   Advertisement\
    \ messages (described above) will update its Neighbor\n   Cache to associate the\
    \ mobile node's address with the home agent's\n   link layer address, causing\
    \ it to transmit any future packets\n   normally destined to the mobile node to\
    \ the mobile node's home agent.\n   Since multicasting on the local link (such\
    \ as Ethernet) is typically\n   not guaranteed to be reliable, the home agent\
    \ MAY retransmit this\n   Neighbor Advertisement message up to MAX_NEIGHBOR_ADVERTISEMENT\
    \ (see\n   [12]) times to increase its reliability.  It is still possible that\n\
    \   some nodes on the home link will not receive any of the Neighbor\n   Advertisements,\
    \ but these nodes will eventually be able to detect the\n   link-layer address\
    \ change for the mobile node's address through use\n   of Neighbor Unreachability\
    \ Detection [12].\n   While a node is serving as a home agent for some mobile\
    \ node, the\n   home agent uses IPv6 Neighbor Discovery [12] to intercept unicast\n\
    \   packets on the home link addressed to the mobile node.  In order to\n   intercept\
    \ packets in this way, the home agent MUST act as a proxy for\n   this mobile\
    \ node and reply to any received Neighbor Solicitations for\n   it.  When a home\
    \ agent receives a Neighbor Solicitation, it MUST\n   check if the Target Address\
    \ specified in the message matches the\n   address of any mobile node for which\
    \ it has a Binding Cache entry\n   marked as a home registration.\n   If such\
    \ an entry exists in the home agent's Binding Cache, the home\n   agent MUST reply\
    \ to the Neighbor Solicitation with a Neighbor\n   Advertisement giving the home\
    \ agent's own link-layer address as the\n   link-layer address for the specified\
    \ Target Address.  In addition,\n   the Router (R) bit in the Advertisement MUST\
    \ be set to zero.  Acting\n   as a proxy in this way allows other nodes on the\
    \ mobile node's home\n   link to resolve the mobile node's address and for the\
    \ home agent to\n   defend these addresses on the home link for Duplicate Address\n\
    \   Detection [12].\n"
- title: 10.4.2.  Processing Intercepted Packets
  contents:
  - "10.4.2.  Processing Intercepted Packets\n   For any packet sent to a mobile node\
    \ from the mobile node's home\n   agent (in which the home agent is the original\
    \ sender of the packet),\n   the home agent is operating as a correspondent node\
    \ of the mobile\n   node for this packet and the procedures described in Section\
    \ 9.3.2\n   apply.  The home agent then uses a routing header to route the packet\n\
    \   to the mobile node by way of the primary care-of address in the home\n   agent's\
    \ Binding Cache.\n   While the mobile node is away from home, the home agent intercepts\n\
    \   any packets on the home link addressed to the mobile node's home\n   address,\
    \ as described in Section 10.4.1.  In order to forward each\n   intercepted packet\
    \ to the mobile node, the home agent MUST tunnel the\n   packet to the mobile\
    \ node using IPv6 encapsulation [15].  When a home\n   agent encapsulates an intercepted\
    \ packet for forwarding to the mobile\n   node, the home agent sets the Source\
    \ Address in the new tunnel IP\n   header to the home agent's own IP address and\
    \ sets the Destination\n   Address in the tunnel IP header to the mobile node's\
    \ primary care-of\n   address.  When received by the mobile node, normal processing\
    \ of the\n   tunnel header [15] will result in decapsulation and processing of\
    \ the\n   original packet by the mobile node.\n   However, packets addressed to\
    \ the mobile node's link-local address\n   MUST NOT be tunneled to the mobile\
    \ node.  Instead, these packets MUST\n   be discarded and the home agent SHOULD\
    \ return an ICMP Destination\n   Unreachable, Code 3, message to the packet's\
    \ Source Address (unless\n   this Source Address is a multicast address).  Packets\
    \ addressed to\n   the mobile node's site-local address SHOULD NOT be tunneled\
    \ to the\n   mobile node by default.\n   Interception and tunneling of the following\
    \ multicast addressed\n   packets on the home network are only done if the home\
    \ agent supports\n   multicast group membership control messages from the mobile\
    \ node as\n   described in the next section.  Tunneling of multicast packets to\
    \ a\n   mobile node follows similar limitations to those defined above for\n \
    \  unicast packets addressed to the mobile node's link-local and site-\n   local\
    \ addresses.  Multicast packets addressed to a multicast address\n   with link-local\
    \ scope [3], to which the mobile node is subscribed,\n   MUST NOT be tunneled\
    \ to the mobile node.  These packets SHOULD be\n   silently discarded (after delivering\
    \ to other local multicast\n   recipients).  Multicast packets addressed to a\
    \ multicast address with\n   a scope larger than link-local, but smaller than\
    \ global (e.g., site-\n   local and organization-local [3], to which the mobile\
    \ node is\n   subscribed, SHOULD NOT be tunneled to the mobile node.  Multicast\n\
    \   packets addressed with a global scope, to which the mobile node has\n   successfully\
    \ subscribed, MUST be tunneled to the mobile node.\n   Before tunneling a packet\
    \ to the mobile node, the home agent MUST\n   perform any IPsec processing as\
    \ indicated by the security policy data\n   base.\n"
- title: 10.4.3.  Multicast Membership Control
  contents:
  - "10.4.3.  Multicast Membership Control\n   This section is a prerequisite for\
    \ the multicast data packet\n   forwarding, described in the previous section.\
    \  If this support is\n   not provided, multicast group membership control messages\
    \ are\n   silently ignored.\n   In order to forward multicast data packets from\
    \ the home network to\n   all the proper mobile nodes, the home agent SHOULD be\
    \ capable of\n   receiving tunneled multicast group membership control information\n\
    \   from the mobile node in order to determine which groups the mobile\n   node\
    \ has subscribed to.  These multicast group membership messages\n   are Listener\
    \ Report messages specified in MLD [17] or in other\n   protocols such as [37].\n\
    \   The messages are issued by the mobile node, but sent through the\n   reverse\
    \ tunnel to the home agent.  These messages are issued whenever\n   the mobile\
    \ node decides to enable reception of packets for a\n   multicast group or in\
    \ response to an MLD Query from the home agent.\n   The mobile node will also\
    \ issue multicast group control messages to\n   disable reception of multicast\
    \ packets when it is no longer\n   interested in receiving multicasts for a particular\
    \ group.\n   To obtain the mobile node's current multicast group membership the\n\
    \   home agent must periodically transmit MLD Query messages through the\n   tunnel\
    \ to the mobile node.  These MLD periodic transmissions will\n   ensure the home\
    \ agent has an accurate record of the groups in which\n   the mobile node is interested\
    \ despite packet losses of the mobile\n   node's MLD group membership messages.\n\
    \   All MLD packets are sent directly between the mobile node and the\n   home\
    \ agent.  Since all of these packets are destined to a link-scope\n   multicast\
    \ address and have a hop limit of 1, there is no direct\n   forwarding of such\
    \ packets between the home network and the mobile\n   node.  The MLD packets between\
    \ the mobile node and the home agent are\n   encapsulated within the same tunnel\
    \ header used for other packet\n   flows between the mobile node and home agent.\n\
    \   Note that at this time, even though a link-local source is used on\n   MLD\
    \ packets, no functionality depends on these addresses being\n   unique, nor do\
    \ they elicit direct responses.  All MLD messages are\n   sent to multicast destinations.\
    \  To avoid ambiguity on the home\n   agent, due to mobile nodes which may choose\
    \ identical link-local\n   source addresses for their MLD function, it is necessary\
    \ for the home\n   agent to identify which mobile node was actually the issuer\
    \ of a\n   particular MLD message.  This may be accomplished by noting which\n\
    \   tunnel such an MLD arrived by, which IPsec SA was used, or by other\n   distinguishing\
    \ means.\n   This specification puts no requirement on how the functions in this\n\
    \   section and the multicast forwarding in Section 10.4.2 are to be\n   achieved.\
    \  At the time of this writing it was thought that a full\n   IPv6 multicast router\
    \ function would be necessary on the home agent,\n   but it may be possible to\
    \ achieve the same effects through a \"proxy\n   MLD\" application coupled with\
    \ kernel multicast forwarding.  This may\n   be the subject of future specifications.\n"
- title: 10.4.4.  Stateful Address Autoconfiguration
  contents:
  - "10.4.4.  Stateful Address Autoconfiguration\n   This section describes how home\
    \ agents support the use of stateful\n   address autoconfiguration mechanisms\
    \ such as DHCPv6 [29] from the\n   mobile nodes.  If this support is not provided,\
    \ then the M and O bits\n   must remain cleared on the Mobile Prefix Advertisement\
    \ Messages.  Any\n   mobile node which sends DHCPv6 messages to the home agent\
    \ without\n   this support will not receive a response.\n   If DHCPv6 is used,\
    \ packets are sent with link-local source addresses\n   either to a link-scope\
    \ multicast address or a link-local address.\n   Mobile nodes desiring to locate\
    \ a DHCPv6 service may reverse tunnel\n   standard DHCPv6 packets to the home\
    \ agent.  Since these link-scope\n   packets cannot be forwarded onto the home\
    \ network, it is necessary\n   for the home agent to either implement a DHCPv6\
    \ relay agent or a\n   DHCPv6 server function itself.  The arriving tunnel or\
    \ IPsec SA of\n   DHCPv6 link-scope messages from the mobile node must be noted\
    \ so that\n   DHCPv6 responses may be sent back to the appropriate mobile node.\n\
    \   DHCPv6 messages sent to the mobile node with a link-local destination\n  \
    \ must be tunneled within the same tunnel header used for other packet\n   flows.\n"
- title: 10.4.5.  Handling Reverse Tunneled Packets
  contents:
  - "10.4.5.  Handling Reverse Tunneled Packets\n   Unless a binding has been established\
    \ between the mobile node and a\n   correspondent node, traffic from the mobile\
    \ node to the correspondent\n   node goes through a reverse tunnel.  Home agents\
    \ MUST support reverse\n   tunneling as follows:\n   o  The tunneled traffic arrives\
    \ to the home agent's address using\n      IPv6 encapsulation [15].\n   o  Depending\
    \ on the security policies used by the home agent, reverse\n      tunneled packets\
    \ MAY be discarded unless accompanied by a valid\n      ESP header.  The support\
    \ for authenticated reverse tunneling\n      allows the home agent to protect\
    \ the home network and\n      correspondent nodes from malicious nodes masquerading\
    \ as a mobile\n      node.\n   o  Otherwise, when a home agent decapsulates a\
    \ tunneled packet from\n      the mobile node, the home agent MUST verify that\
    \ the Source\n      Address in the tunnel IP header is the mobile node's primary\n\
    \      care-of address.  Otherwise, any node in the Internet could send\n    \
    \  traffic through the home agent and escape ingress filtering\n      limitations.\
    \  This simple check forces the attacker to know the\n      current location of\
    \ the real mobile node and be able to defeat\n      ingress filtering. This check\
    \ is not necessary if the reverse-\n      tunneled packet is protected by ESP\
    \ in tunnel mode.\n"
- title: 10.4.6.  Protecting Return Routability Packets
  contents:
  - "10.4.6.  Protecting Return Routability Packets\n   The return routability procedure,\
    \ described in Section 5.2.5, assumes\n   that the confidentiality of the Home\
    \ Test Init and Home Test messages\n   is protected as they are tunneled between\
    \ the home agent and the\n   mobile node.  Therefore, the home agent MUST support\
    \ tunnel mode\n   IPsec ESP for the protection of packets belonging to the return\n\
    \   routability procedure.  Support for a non-null encryption transform\n   and\
    \ authentication algorithm MUST be available.  It is not necessary\n   to distinguish\
    \ between different kinds of packets during the return\n   routability procedure.\n\
    \   Security associations are needed to provide this protection.  When\n   the\
    \ care-of address for the mobile node changes as a result of an\n   accepted Binding\
    \ Update, special treatment is needed for the next\n   packets sent using these\
    \ security associations.  The home agent MUST\n   set the new care-of address\
    \ as the destination address of these\n   packets, as if the outer header destination\
    \ address in the security\n   association had changed [21].\n   The above protection\
    \ SHOULD be used with all mobile nodes.  The use\n   is controlled by configuration\
    \ of the IPsec security policy database\n   both at the mobile node and at the\
    \ home agent.\n   As described earlier, the Binding Update and Binding Acknowledgement\n\
    \   messages require protection between the home agent and the mobile\n   node.\
    \  The Mobility Header protocol carries both these messages as\n   well as the\
    \ return routability messages.  From the point of view of\n   the security policy\
    \ database these messages are indistinguishable.\n   When IPsec is used to protect\
    \ return routability signaling or payload\n   packets, this protection MUST only\
    \ be applied to the return\n   routability packets entering the IPv6 encapsulated\
    \ tunnel interface\n   between the mobile node and the home agent.  This can be\
    \ achieved,\n   for instance, by defining the security policy database entries\n\
    \   specifically for the tunnel interface.  That is, the policy entries\n   are\
    \ not generally applied on all traffic on the physical interface(s)\n   of the\
    \ nodes, but rather only on traffic that enters the tunnel.\n   This makes use\
    \ of per-interface security policy database entries [4]\n   specific to the tunnel\
    \ interface (the node's attachment to the tunnel\n   [11]).\n"
- title: 10.5.  Dynamic Home Agent Address Discovery
  contents:
  - "10.5.  Dynamic Home Agent Address Discovery\n   This section describes how a\
    \ home agent can help mobile nodes to\n   discover the addresses of the home agents.\
    \  The home agent keeps\n   track of the other home agents on the same link and\
    \ responds to\n   queries sent by the mobile node.\n"
- title: 10.5.1.  Receiving Router Advertisement Messages
  contents:
  - "10.5.1.  Receiving Router Advertisement Messages\n   For each link on which a\
    \ router provides service as a home agent, the\n   router maintains a Home Agents\
    \ List recording information about all\n   other home agents on that link.  This\
    \ list is used in the dynamic\n   home agent address discovery mechanism, described\
    \ in Section 10.5.\n   The information for the list is learned through receipt\
    \ of the\n   periodic unsolicited multicast Router Advertisements, in a manner\n\
    \   similar to the Default Router List conceptual data structure\n   maintained\
    \ by each host for Neighbor Discovery [12].  In the\n   construction of the Home\
    \ Agents List, the Router Advertisements are\n   from each (other) home agent\
    \ on the link and the Home Agent (H) bit\n   is set in them.\n   On receipt of\
    \ a valid Router Advertisement, as defined in the\n   processing algorithm specified\
    \ for Neighbor Discovery [12], the home\n   agent performs the following steps\
    \ in addition to any steps already\n   required of it by Neighbor Discovery:\n\
    \   o  If the Home Agent (H) bit in the Router Advertisement is not set,\n   \
    \   delete the sending node's entry in the current Home Agents List\n      (if\
    \ one exists).  Skip all the following steps.\n   o  Otherwise, extract the Source\
    \ Address from the IP header of the\n      Router Advertisement.  This is the\
    \ link-local IP address on this\n      link of the home agent sending this Advertisement\
    \ [12].\n   o  Determine the preference for this home agent.  If the Router\n\
    \      Advertisement contains a Home Agent Information Option, then the\n    \
    \  preference is taken from the Home Agent Preference field in the\n      option;\
    \ otherwise, the default preference of 0 MUST be used.\n   o  Determine the lifetime\
    \ for this home agent.  If the Router\n      Advertisement contains a Home Agent\
    \ Information Option, then the\n      lifetime is taken from the Home Agent Lifetime\
    \ field in the\n      option; otherwise, the lifetime specified by the Router\
    \ Lifetime\n      field in the Router Advertisement SHOULD be used.\n   o  If\
    \ the link-local address of the home agent sending this\n      Advertisement is\
    \ already present in this home agent's Home Agents\n      List and the received\
    \ home agent lifetime value is zero,\n      immediately delete this entry in the\
    \ Home Agents List.\n   o  Otherwise, if the link-local address of the home agent\
    \ sending\n      this Advertisement is already present in the receiving home\n\
    \      agent's Home Agents List, reset its lifetime and preference to the\n  \
    \    values determined above.\n   o  If the link-local address of the home agent\
    \ sending this\n      Advertisement is not already present in the Home Agents\
    \ List\n      maintained by the receiving home agent, and the lifetime for the\n\
    \      sending home agent is non-zero, create a new entry in the list,\n     \
    \ and initialize its lifetime and preference to the values\n      determined above.\n\
    \   o  If the Home Agents List entry for the link-local address of the\n     \
    \ home agent sending this Advertisement was not deleted as described\n      above,\
    \ determine any global address(es) of the home agent based on\n      each Prefix\
    \ Information option received in this Advertisement in\n      which the Router\
    \ Address (R) bit is set (Section 7.2).  Add all\n      such global addresses\
    \ to the list of global addresses in this Home\n      Agents List entry.\n   A\
    \ home agent SHOULD maintain an entry in its Home Agents List for\n   each valid\
    \ home agent address until that entry's lifetime expires,\n   after which time\
    \ the entry MUST be deleted.\n   As described in Section 11.4.1, a mobile node\
    \ attempts dynamic home\n   agent address discovery by sending an ICMP Home Agent\
    \ Address\n   Discovery Request message to the Mobile IPv6 Home-Agents anycast\n\
    \   address [16] for its home IP subnet prefix.  A home agent receiving a\n  \
    \ Home Agent Address Discovery Request message that serves this subnet\n   SHOULD\
    \ return an ICMP Home Agent Address Discovery Reply message to\n   the mobile\
    \ node with the Source Address of the Reply packet set to\n   one of the global\
    \ unicast addresses of the home agent.  The Home\n   Agent Addresses field in\
    \ the Reply message is constructed as follows:\n   o  The Home Agent Addresses\
    \ field SHOULD contain all global IP\n      addresses for each home agent currently\
    \ listed in this home\n      agent's own Home Agents List (Section 10.1).\n  \
    \ o  The IP addresses in the Home Agent Addresses field SHOULD be\n      listed\
    \ in order of decreasing preference values, based either on\n      the respective\
    \ advertised preference from a Home Agent Information\n      option or on the\
    \ default preference of 0 if no preference is\n      advertised (or on the configured\
    \ home agent preference for this\n      home agent itself).\n   o  Among home\
    \ agents with equal preference, their IP addresses in the\n      Home Agent Addresses\
    \ field SHOULD be listed in an order randomized\n      with respect to other home\
    \ agents with equal preference every time\n      a Home Agent Address Discovery\
    \ Reply message is returned by this\n      home agent.\n   o  If more than one\
    \ global IP address is associated with a home\n      agent, these addresses SHOULD\
    \ be listed in a randomized order.\n   o  The home agent SHOULD reduce the number\
    \ of home agent IP addresses\n      so that the packet fits within the minimum\
    \ IPv6 MTU [11].  The\n      home agent addresses selected for inclusion in the\
    \ packet SHOULD\n      be those from the complete list with the highest preference.\
    \  This\n      limitation avoids the danger of the Reply message packet being\n\
    \      fragmented (or rejected by an intermediate router with an ICMP\n      Packet\
    \ Too Big message [14]).\n"
- title: 10.6.  Sending Prefix Information to the Mobile Node
  contents:
  - '10.6.  Sending Prefix Information to the Mobile Node

    '
- title: 10.6.1.  List of Home Network Prefixes
  contents:
  - "10.6.1.  List of Home Network Prefixes\n   Mobile IPv6 arranges to propagate\
    \ relevant prefix information to the\n   mobile node when it is away from home,\
    \ so that it may be used in\n   mobile node home address configuration and in\
    \ network renumbering.\n   In this mechanism, mobile nodes away from home receive\
    \ Mobile Prefix\n   Advertisements messages.  These messages include Prefix Information\n\
    \   Options for the prefixes configured on the home subnet interface(s)\n   of\
    \ the home agent.\n   If there are multiple home agents, differences in the advertisements\n\
    \   sent by different home agents can lead to an inability to use a\n   particular\
    \ home address when changing to another home agent.  In\n   order to ensure that\
    \ the mobile nodes get the same information from\n   different home agents, it\
    \ is preferred that all of the home agents on\n   the same link be configured\
    \ in the same manner.\n   To support this, the home agent monitors prefixes advertised\
    \ by\n   itself and other home agents on the home link.  In RFC 2461 [12] it\n\
    \   is acceptable for two routers to advertise different sets of prefixes\n  \
    \ on the same link.  For home agents, the differences should be\n   detected for\
    \ a given home address because the mobile node\n   communicates only with one\
    \ home agent at a time and the mobile node\n   needs to know the full set of prefixes\
    \ assigned to the home link.\n   All other comparisons of Router Advertisements\
    \ are as specified in\n   Section 6.2.7 of RFC 2461.\n"
- title: 10.6.2.  Scheduling Prefix Deliveries
  contents:
  - "10.6.2.  Scheduling Prefix Deliveries\n   A home agent serving a mobile node\
    \ will schedule the delivery of the\n   new prefix information to that mobile\
    \ node when any of the following\n   conditions occur:\n   MUST:\n   o  The state\
    \ of the flags changes for the prefix of the mobile node's\n      registered home\
    \ address.\n   o  The valid or preferred lifetime is reconfigured or changes for\
    \ any\n      reason other than advancing real time.\n   o  The mobile node requests\
    \ the information with a Mobile Prefix\n      Solicitation (see Section 11.4.2).\n\
    \   SHOULD:\n   o  A new prefix is added to the home subnet interface(s) of the\
    \ home\n      agent.\n   MAY:\n   o  The valid or preferred lifetime or the state\
    \ of the flags changes\n      for a prefix which is not used in any Binding Cache\
    \ entry for this\n      mobile node.\n   The home agent uses the following algorithm\
    \ to determine when to send\n   prefix information to the mobile node.\n   o \
    \ If a mobile node sends a solicitation, answer right away.\n   o  If no Mobile\
    \ Prefix Advertisement has been sent to the mobile node\n      in the last MaxMobPfxAdvInterval\
    \ seconds (see Section 13), then\n      ensure that a transmission is scheduled.\
    \  The actual transmission\n      time is randomized as described below.\n   o\
    \  If a prefix matching the mobile node's home registration is added\n      on\
    \ the home subnet interface or if its information changes in any\n      way that\
    \ does not deprecate the mobile node's address, ensure that\n      a transmission\
    \ is scheduled.  The actual transmission time is\n      randomized as described\
    \ below.\n   o  If a home registration expires, cancel any scheduled\n      advertisements\
    \ to the mobile node.\n   The list of prefixes is sent in its entirety in all\
    \ cases.\n   If the home agent has already scheduled the transmission of a Mobile\n\
    \   Prefix Advertisement to the mobile node, then the home agent will\n   replace\
    \ the advertisement with a new one to be sent at the scheduled\n   time.\n   Otherwise,\
    \ the home agent computes a fresh value for RAND_ADV_DELAY\n   which offsets from\
    \ the current time for the scheduled transmission.\n   First calculate the maximum\
    \ delay for the scheduled Advertisement:\n      MaxScheduleDelay = min (MaxMobPfxAdvInterval,\
    \ Preferred Lifetime),\n   where MaxMobPfxAdvInterval is as defined in Section\
    \ 12.  Then compute\n   the final delay for the advertisement:\n      RAND_ADV_DELAY\
    \ = MinMobPfxAdvInterval +\n            (rand() % abs(MaxScheduleDelay - MinMobPfxAdvInterval))\n\
    \   Here rand() returns a random integer value in the range of 0 to the\n   maximum\
    \ possible integer value.  This computation is expected to\n   alleviate bursts\
    \ of advertisements when prefix information changes.\n   In addition, a home agent\
    \ MAY further reduce the rate of packet\n   transmission by further delaying individual\
    \ advertisements, when\n   necessary to avoid overwhelming local network resources.\
    \  The home\n   agent SHOULD periodically continue to retransmit an unsolicited\n\
    \   Advertisement to the mobile node, until it is acknowledged by the\n   receipt\
    \ of a Mobile Prefix Solicitation from the mobile node.\n   The home agent MUST\
    \ wait PREFIX_ADV_TIMEOUT (see Section 12) before\n   the first retransmission\
    \ and double the retransmission wait time for\n   every succeeding retransmission\
    \ until a maximum number of\n   PREFIX_ADV_RETRIES attempts (see Section 12) has\
    \ been tried.  If the\n   mobile node's bindings expire before the matching Binding\
    \ Update has\n   been received, then the home agent MUST NOT attempt any more\n\
    \   retransmissions, even if not all PREFIX_ADV_RETRIES have been\n   retransmitted.\
    \  In the meantime, if the mobile node sends another\n   Binding Update without\
    \ returning home, then the home agent SHOULD\n   begin transmitting the unsolicited\
    \ Advertisement again.\n   If some condition, as described above, occurs on the\
    \ home link and\n   causes another Prefix Advertisement to be sent to the mobile\
    \ node,\n   before the mobile node acknowledges a previous transmission, the home\n\
    \   agent SHOULD combine any Prefix Information options in the\n   unacknowledged\
    \ Mobile Prefix Advertisement into a new Advertisement.\n   The home agent then\
    \ discards the old Advertisement.\n"
- title: 10.6.3.  Sending Advertisements
  contents:
  - "10.6.3.  Sending Advertisements\n   When sending a Mobile Prefix Advertisement\
    \ to the mobile node, the\n   home agent MUST construct the packet as follows:\n\
    \   o  The Source Address in the packet's IPv6 header MUST be set to the\n   \
    \   home agent's IP address to which the mobile node addressed its\n      current\
    \ home registration or its default global home agent address\n      if no binding\
    \ exists.\n   o  If the advertisement was solicited, it MUST be destined to the\n\
    \      source address of the solicitation.  If it was triggered by prefix\n  \
    \    changes or renumbering, the advertisement's destination will be\n      the\
    \ mobile node's home address in the binding which triggered the\n      rule.\n\
    \   o  A type 2 routing header MUST be included with the mobile node's\n     \
    \ home address.\n   o  IPsec headers MUST be supported and SHOULD be used.\n \
    \  o  The home agent MUST send the packet as it would any other unicast\n    \
    \  IPv6 packet that it originates.\n   o  Set the Managed Address Configuration\
    \ (M) flag if the\n      corresponding flag has been set in any of the Router\n\
    \      Advertisements from which the prefix information has been learned\n   \
    \   (including the ones sent by this home agent).\n   o  Set the Other Stateful\
    \ Configuration (O) flag if the corresponding\n      flag has been set in any\
    \ of the Router Advertisements from which\n      the prefix information has been\
    \ learned (including the ones sent\n      by this home agent).\n"
- title: 10.6.4.  Lifetimes for Changed Prefixes
  contents:
  - "10.6.4.  Lifetimes for Changed Prefixes\n   As described in Section 10.3.1, the\
    \ lifetime returned by the home\n   agent in a Binding Acknowledgement MUST not\
    \ be greater than the\n   remaining valid lifetime for the subnet prefix in the\
    \ mobile node's\n   home address.  This limit on the binding lifetime serves to\
    \ prohibit\n   use of a mobile node's home address after it becomes invalid.\n"
- title: 11.  Mobile Node Operation
  contents:
  - '11.  Mobile Node Operation

    '
- title: 11.1.  Conceptual Data Structures
  contents:
  - "11.1.  Conceptual Data Structures\n   Each mobile node MUST maintain a Binding\
    \ Update List.\n   The Binding Update List records information for each Binding\
    \ Update\n   sent by this mobile node, in which the lifetime of the binding has\n\
    \   not yet expired.  The Binding Update List includes all bindings sent\n   by\
    \ the mobile node either to its home agent or correspondent nodes.\n   It also\
    \ contains Binding Updates which are waiting for the completion\n   of the return\
    \ routability procedure before they can be sent.\n   However, for multiple Binding\
    \ Updates sent to the same destination\n   address, the Binding Update List contains\
    \ only the most recent\n   Binding Update (i.e., with the greatest Sequence Number\
    \ value) sent\n   to that destination.  The Binding Update List MAY be implemented\
    \ in\n   any manner consistent with the external behavior described in this\n\
    \   document.\n   Each Binding Update List entry conceptually contains the following\n\
    \   fields:\n   o  The IP address of the node to which a Binding Update was sent.\n\
    \   o  The home address for which that Binding Update was sent.\n   o  The care-of\
    \ address sent in that Binding Update.  This value is\n      necessary for the\
    \ mobile node to determine if it has sent a\n      Binding Update while giving\
    \ its new care-of address to this\n      destination after changing its care-of\
    \ address.\n   o  The initial value of the Lifetime field sent in that Binding\n\
    \      Update.\n   o  The remaining lifetime of that binding.  This lifetime is\n\
    \      initialized from the Lifetime value sent in the Binding Update and\n  \
    \    is decremented until it reaches zero, at which time this entry\n      MUST\
    \ be deleted from the Binding Update List.\n   o  The maximum value of the Sequence\
    \ Number field sent in previous\n      Binding Updates to this destination.  The\
    \ Sequence Number field is\n      16 bits long and all comparisons between Sequence\
    \ Number values\n      MUST be performed modulo 2**16 (see Section 9.5.1).\n \
    \  o  The time at which a Binding Update was last sent to this\n      destination,\
    \ as needed to implement the rate limiting restriction\n      for sending Binding\
    \ Updates.\n   o  The state of any retransmissions needed for this Binding Update.\n\
    \      This state includes the time remaining until the next\n      retransmission\
    \ attempt for the Binding Update and the current\n      state of the exponential\
    \ back-off mechanism for retransmissions.\n   o  A flag specifying whether or\
    \ not future Binding Updates should be\n      sent to this destination.  The mobile\
    \ node sets this flag in the\n      Binding Update List entry when it receives\
    \ an ICMP Parameter\n      Problem, Code 1, error message in response to a return\
    \ routability\n      message or Binding Update sent to that destination, as described\n\
    \      in Section 11.3.5.\n   The Binding Update List is used to determine whether\
    \ a particular\n   packet is sent directly to the correspondent node or tunneled\
    \ via the\n   home agent (see Section 11.3.1).\n   The Binding Update list also\
    \ conceptually contains the following data\n   related to running the return routability\
    \ procedure.  This data is\n   relevant only for Binding Updates sent to correspondent\
    \ nodes.\n   o  The time at which a Home Test Init or Care-of Test Init message\n\
    \      was last sent to this destination, as needed to implement the rate\n  \
    \    limiting restriction for the return routability procedure.\n   o  The state\
    \ of any retransmissions needed for this return\n      routability procedure.\
    \  This state includes the time remaining\n      until the next retransmission\
    \ attempt and the current state of the\n      exponential back-off mechanism for\
    \ retransmissions.\n   o  Cookie values used in the Home Test Init and Care-of\
    \ Test Init\n      messages.\n   o  Home and care-of keygen tokens received from\
    \ the correspondent\n      node.\n   o  Home and care-of nonce indices received\
    \ from the correspondent\n      node.\n   o  The time at which each of the tokens\
    \ and nonces were received from\n      the correspondent node, as needed to implement\
    \ reuse while moving.\n"
- title: 11.2.  Processing Mobility Headers
  contents:
  - "11.2.  Processing Mobility Headers\n   All IPv6 mobile nodes MUST observe the\
    \ rules described in Section 9.2\n   when processing Mobility Headers.\n"
- title: 11.3.  Packet Processing
  contents:
  - '11.3.  Packet Processing

    '
- title: 11.3.1.  Sending Packets While Away from Home
  contents:
  - "11.3.1.  Sending Packets While Away from Home\n   While a mobile node is away\
    \ from home, it continues to use its home\n   address, as well as also using one\
    \ or more care-of addresses.  When\n   sending a packet while away from home,\
    \ a mobile node MAY choose among\n   these in selecting the address that it will\
    \ use as the source of the\n   packet, as follows:\n   o  Protocols layered over\
    \ IP will generally treat the mobile node's\n      home address as its IP address\
    \ for most packets.  For packets sent\n      that are part of transport-level\
    \ connections established while the\n      mobile node was at home, the mobile\
    \ node MUST use its home\n      address.  Likewise, for packets sent that are\
    \ part of transport-\n      level connections that the mobile node may still be\
    \ using after\n      moving to a new location, the mobile node SHOULD use its\
    \ home\n      address in this way.  If a binding exists, the mobile node SHOULD\n\
    \      send the packets directly to the correspondent node.  Otherwise,\n    \
    \  if a binding does not exist, the mobile node MUST use reverse\n      tunneling.\n\
    \   o  The mobile node MAY choose to directly use one of its care-of\n      addresses\
    \ as the source of the packet, not requiring the use of a\n      Home Address\
    \ option in the packet.  This is particularly useful\n      for short-term communication\
    \ that may easily be retried if it\n      fails.  Using the mobile node's care-of\
    \ address as the source for\n      such queries will generally have a lower overhead\
    \ than using the\n      mobile node's home address, since no extra options need\
    \ be used in\n      either the query or its reply.  Such packets can be routed\n\
    \      normally, directly between their source and destination without\n     \
    \ relying on Mobile IPv6.  If application running on the mobile node\n      has\
    \ no particular knowledge that the communication being sent fits\n      within\
    \ this general type of communication, however, the mobile\n      node should not\
    \ use its care-of address as the source of the\n      packet in this way.\n  \
    \    The choice of the most efficient communications method is\n      application\
    \ specific, and outside the scope of this specification.\n      The APIs necessary\
    \ for controlling the choice are also out of\n      scope.\n   o  While not at\
    \ its home link, the mobile node MUST NOT use the Home\n      Address destination\
    \ option when communicating with link-local or\n      site-local peers, if the\
    \ scope of the home address is larger than\n      the scope of the peer's address.\n\
    \      Similarly, the mobile node MUST NOT use the Home Address\n      destination\
    \ option for IPv6 Neighbor Discovery [12] packets.\n   Detailed operation of these\
    \ cases is described later in this section\n   and also discussed in [31].\n \
    \  For packets sent by a mobile node while it is at home, no special\n   Mobile\
    \ IPv6 processing is required.  Likewise, if the mobile node\n   uses any address\
    \ other than one of its home addresses as the source\n   of a packet sent while\
    \ away from home, no special Mobile IPv6\n   processing is required.  In either\
    \ case, the packet is simply\n   addressed and transmitted in the same way as\
    \ any normal IPv6 packet.\n   For packets sent by the mobile node sent while away\
    \ from home using\n   the mobile node's home address as the source, special Mobile\
    \ IPv6\n   processing of the packet is required.  This can be done in the\n  \
    \ following two ways:\n   Route Optimization\n   This manner of delivering packets\
    \ does not require going through the\n   home network, and typically will enable\
    \ faster and more reliable\n   transmission.\n   The mobile node needs to ensure\
    \ that a Binding Cache entry exists for\n   its home address so that the correspondent\
    \ node can process the\n   packet (Section 9.3.1 specifies the rules for Home\
    \ Address\n   Destination Option Processing at a correspondent node).  The mobile\n\
    \   node SHOULD examine its Binding Update List for an entry which\n   fulfills\
    \ the following conditions:\n   *  The Source Address field of the packet being\
    \ sent is equal to the\n      home address in the entry.\n   *  The Destination\
    \ Address field of the packet being sent is equal to\n      the address of the\
    \ correspondent node in the entry.\n   *  One of the current care-of addresses\
    \ of the mobile node appears as\n      the care-of address in the entry.\n   *\
    \  The entry indicates that a binding has been successfully created.\n   *  The\
    \ remaining lifetime of the binding is greater than zero.\n   When these conditions\
    \ are met, the mobile node knows that the\n   correspondent node has a suitable\
    \ Binding Cache entry.\n   A mobile node SHOULD arrange to supply the home address\
    \ in a Home\n   Address option, and MUST set the IPv6 header's Source Address\
    \ field\n   to the care-of address which the mobile node has registered to be\n\
    \   used with this correspondent node.  The correspondent node will then\n   use\
    \ the address supplied in the Home Address option to serve the\n   function traditionally\
    \ done by the Source IP address in the IPv6\n   header.  The mobile node's home\
    \ address is then supplied to higher\n   protocol layers and applications.\n \
    \  Specifically:\n   *  Construct the packet using the mobile node's home address\
    \ as the\n      packet's Source Address, in the same way as if the mobile node\n\
    \      were at home.  This includes the calculation of upper layer\n      checksums\
    \ using the home address as the value of the source.\n   *  Insert a Home Address\
    \ option into the packet with the Home Address\n      field copied from the original\
    \ value of the Source Address field\n      in the packet.\n   *  Change the Source\
    \ Address field in the packet's IPv6 header to one\n      of the mobile node's\
    \ care-of addresses.  This will typically be\n      the mobile node's current\
    \ primary care-of address, but MUST be an\n      address assigned to the interface\
    \ on the link being used.\n   By using the care-of address as the Source Address\
    \ in the IPv6\n   header, with the mobile node's home address instead in the Home\n\
    \   Address option, the packet will be able to safely pass through any\n   router\
    \ implementing ingress filtering [26].\n   Reverse Tunneling\n      This is the\
    \ mechanism which tunnels the packets via the home\n      agent.  It is not as\
    \ efficient as the above mechanism, but is\n      needed if there is no binding\
    \ yet with the correspondent node.\n      This mechanism is used for packets that\
    \ have the mobile node's\n      home address as the Source Address in the IPv6\
    \ header, or with\n      multicast control protocol packets as described in Section\
    \ 11.3.4.\n      Specifically:\n      *  The packet is sent to the home agent\
    \ using IPv6 encapsulation\n         [15].\n      *  The Source Address in the\
    \ tunnel packet is the primary care-of\n         address as registered with the\
    \ home agent.\n      *  The Destination Address in the tunnel packet is the home\n\
    \         agent's address.\n      Then, the home agent will pass the encapsulated\
    \ packet to the\n      correspondent node.\n"
- title: 11.3.2.  Interaction with Outbound IPsec Processing
  contents:
  - "11.3.2.  Interaction with Outbound IPsec Processing\n   This section sketches\
    \ the interaction between outbound Mobile IPv6\n   processing and outbound IP\
    \ Security (IPsec) processing for packets\n   sent by a mobile node while away\
    \ from home.  Any specific\n   implementation MAY use algorithms and data structures\
    \ other than\n   those suggested here, but its processing MUST be consistent with\
    \ the\n   effect of the operation described here and with the relevant IPsec\n\
    \   specifications.  In the steps described below, it is assumed that\n   IPsec\
    \ is being used in transport mode [4] and that the mobile node is\n   using its\
    \ home address as the source for the packet (from the point\n   of view of higher\
    \ protocol layers or applications, as described in\n   Section 11.3.1):\n   o\
    \  The packet is created by higher layer protocols and applications\n      (e.g.,\
    \ by TCP) as if the mobile node were at home and Mobile IPv6\n      were not being\
    \ used.\n   o  Determine the outgoing interface for the packet.  (Note that the\n\
    \      selection between reverse tunneling and route optimization may\n      imply\
    \ different interfaces, particularly if tunnels are considered\n      interfaces\
    \ as well.)\n   o  As part of outbound packet processing in IP, the packet is\n\
    \      compared against the IPsec security policy database to determine\n    \
    \  what processing is required for the packet [4].\n   o  If IPsec processing\
    \ is required, the packet is either mapped to an\n      existing Security Association\
    \ (or SA bundle), or a new SA (or SA\n      bundle) is created for the packet,\
    \ according to the procedures\n      defined for IPsec.\n   o  Since the mobile\
    \ node is away from home, the mobile is either\n      using reverse tunneling\
    \ or route optimization to reach the\n      correspondent node.\n      If reverse\
    \ tunneling is used, the packet is constructed in the\n      normal manner and\
    \ then tunneled through the home agent.\n      If route optimization is in use,\
    \ the mobile node inserts a Home\n      Address destination option into the packet,\
    \ replacing the Source\n      Address in the packet's IP header with the care-of\
    \ address used\n      with this correspondent node, as described in Section 11.3.1.\
    \  The\n      Destination Options header in which the Home Address destination\n\
    \      option is inserted MUST appear in the packet after the routing\n      header,\
    \ if present, and before the IPsec (AH [5] or ESP [6])\n      header, so that\
    \ the Home Address destination option is processed\n      by the destination node\
    \ before the IPsec header is processed.\n      Finally, once the packet is fully\
    \ assembled, the necessary IPsec\n      authentication (and encryption, if required)\
    \ processing is\n      performed on the packet, initializing the Authentication\
    \ Data in\n      the IPsec header.\n      RFC 2402 treatment of destination options\
    \ is extended as follows.\n      The AH authentication data MUST be calculated\
    \ as if the following\n      were true:\n      *  the IPv6 source address in the\
    \ IPv6 header contains the mobile\n         node's home address,\n      *  the\
    \ Home Address field of the Home Address destination option\n         (Section\
    \ 6.3) contains the new care-of address.\n   o  This allows, but does not require,\
    \ the receiver of the packet\n      containing a Home Address destination option\
    \ to exchange the two\n      fields of the incoming packet to reach the above\
    \ situation,\n      simplifying processing for all subsequent packet headers.\n\
    \      However, such an exchange is not required, as long as the result\n    \
    \  of the authentication calculation remains the same.\n   When an automated key\
    \ management protocol is used to create new\n   security associations for a peer,\
    \ it is important to ensure that the\n   peer can send the key management protocol\
    \ packets to the mobile node.\n   This may not be possible if the peer is the\
    \ home agent of the mobile\n   node and the purpose of the security associations\
    \ would be to send a\n   Binding Update to the home agent.  Packets addressed\
    \ to the home\n   address of the mobile node cannot be used before the Binding\
    \ Update\n   has been processed.  For the default case of using IKE [9] as the\n\
    \   automated key management protocol, such problems can be avoided by\n   the\
    \ following requirements when communicating with its home agent:\n   o  When the\
    \ mobile node is away from home, it MUST use its care-of\n      address as the\
    \ Source Address of all packets it sends as part of\n      the key management\
    \ protocol (without use of Mobile IPv6 for these\n      packets, as suggested\
    \ in Section 11.3.1).\n   o  In addition, for all security associations bound\
    \ to the mobile\n      node's home address established by IKE, the mobile node\
    \ MUST\n      include an ISAKMP Identification Payload [8] in the IKE phase 2\n\
    \      exchange, giving the mobile node's home address as the initiator\n    \
    \  of the Security Association [7].\n   The Key Management Mobility Capability\
    \ (K) bit in Binding Updates and\n   Acknowledgements can be used to avoid the\
    \ need to rerun IKE upon\n   movements.\n"
- title: 11.3.3.  Receiving Packets While Away from Home
  contents:
  - "11.3.3.  Receiving Packets While Away from Home\n   While away from home, a mobile\
    \ node will receive packets addressed to\n   its home address, by one of two methods:\n\
    \   o  Packets sent by a correspondent node, that does not have a Binding\n  \
    \    Cache entry for the mobile node, will be sent to the home address,\n    \
    \  captured by the home agent and tunneled to the mobile node.\n   o  Packets\
    \ sent by a correspondent node that has a Binding Cache\n      entry for the mobile\
    \ node that contains the mobile node's current\n      care-of address, will be\
    \ sent by the correspondent node using a\n      type 2 routing header.  The packet\
    \ will be addressed to the mobile\n      node's care-of address, with the final\
    \ hop in the routing header\n      directing the packet to the mobile node's home\
    \ address; the\n      processing of this last hop of the routing header is entirely\n\
    \      internal to the mobile node, since the care-of address and home\n     \
    \ address are both addresses within the mobile node.\n   For packets received\
    \ by the first method, the mobile node MUST check\n   that the IPv6 source address\
    \ of the tunneled packet is the IP address\n   of its home agent.  In this method,\
    \ the mobile node may also send a\n   Binding Update to the original sender of\
    \ the packet as described in\n   Section 11.7.2 and subject to the rate limiting\
    \ defined in Section\n   11.8.  The mobile node MUST also process the received\
    \ packet in the\n   manner defined for IPv6 encapsulation [15], which will result\
    \ in the\n   encapsulated (inner) packet being processed normally by upper-layer\n\
    \   protocols within the mobile node as if it had been addressed (only)\n   to\
    \ the mobile node's home address.\n   For packets received by the second method,\
    \ the following rules will\n   result in the packet being processed normally by\
    \ upper-layer\n   protocols within the mobile node as if it had been addressed\
    \ to the\n   mobile node's home address.\n   A node receiving a packet addressed\
    \ to itself (i.e., one of the\n   node's addresses is in the IPv6 destination\
    \ field) follows the next\n   header chain of headers and processes them.  When\
    \ it encounters a\n   type 2 routing header during this processing, it performs\
    \ the\n   following checks.  If any of these checks fail, the node MUST\n   silently\
    \ discard the packet.\n   o  The length field in the routing header is exactly\
    \ 2.\n   o  The segments left field in the routing header is 1 on the wire.\n\
    \      (But implementations may process the routing header so that the\n     \
    \ value may become 0 after the routing header has been processed,\n      but before\
    \ the rest of the packet is processed.)\n   o  The Home Address field in the routing\
    \ header is one of the node's\n      home addresses, if the segments left field\
    \ was 1.  Thus, in\n      particular the address field is required to be a unicast\
    \ routable\n      address.\n   Once the above checks have been performed, the\
    \ node swaps the IPv6\n   destination field with the Home Address field in the\
    \ routing header,\n   decrements segments left by one from the value it had on\
    \ the wire,\n   and resubmits the packet to IP for processing the next header.\n\
    \   Conceptually, this follows the same model as in RFC 2460.  However,\n   in\
    \ the case of type 2 routing header this can be simplified since it\n   is known\
    \ that the packet will not be forwarded to a different node.\n   The definition\
    \ of AH requires the sender to calculate the AH\n   integrity check value of a\
    \ routing header in the same way it appears\n   in the receiver after it has processed\
    \ the header.  Since IPsec\n   headers follow the routing header, any IPsec processing\
    \ will operate\n   on the packet with the home address in the IP destination field\
    \ and\n   segments left being zero.  Thus, the AH calculations at the sender\n\
    \   and receiver will have an identical view of the packet.\n"
- title: 11.3.4.  Routing Multicast Packets
  contents:
  - "11.3.4.  Routing Multicast Packets\n   A mobile node that is connected to its\
    \ home link functions in the\n   same way as any other (stationary) node.  Thus,\
    \ when it is at home, a\n   mobile node functions identically to other multicast\
    \ senders and\n   receivers.  Therefore, this section describes the behavior of\
    \ a\n   mobile node that is not on its home link.\n   In order to receive packets\
    \ sent to some multicast group, a mobile\n   node must join that multicast group.\
    \  One method, in which a mobile\n   node MAY join the group, is via a (local)\
    \ multicast router on the\n   foreign link being visited.  In this case, the mobile\
    \ node MUST use\n   its care-of address and MUST NOT use the Home Address destination\n\
    \   option when sending MLD packets [17].\n   Alternatively, a mobile node MAY\
    \ join multicast groups via a bi-\n   directional tunnel to its home agent.  The\
    \ mobile node tunnels its\n   multicast group membership control packets (such\
    \ as those defined in\n   [17] or in [37]) to its home agent, and the home agent\
    \ forwards\n   multicast packets down the tunnel to the mobile node.  A mobile\
    \ node\n   MUST NOT tunnel multicast group membership control packets until (1)\n\
    \   the mobile node has a binding in place at the home agent, and (2) the\n  \
    \ latter sends at least one multicast group membership control packet\n   via\
    \ the tunnel.  Once this condition is true, the mobile node SHOULD\n   assume\
    \ it does not change as long as the binding does not expire.\n   A mobile node\
    \ that wishes to send packets to a multicast group also\n   has two options:\n\
    \   1.  Send directly on the foreign link being visited.\n       The application\
    \ is aware of the care-of address and uses it as a\n       source address for\
    \ multicast traffic, just like it would use a\n       stationary address.  The\
    \ mobile node MUST NOT use Home Address\n       destination option in such traffic.\n\
    \   2.  Send via a tunnel to its home agent.\n       Because multicast routing\
    \ in general depends upon the Source\n       Address used in the IPv6 header of\
    \ the multicast packet, a mobile\n       node that tunnels a multicast packet\
    \ to its home agent MUST use\n       its home address as the IPv6 Source Address\
    \ of the inner\n       multicast packet.\n   Note that direct sending from the\
    \ foreign link is only applicable\n   while the mobile node is at that foreign\
    \ link.  This is because the\n   associated multicast tree is specific to that\
    \ source location and any\n   change of location and source address will invalidate\
    \ the source\n   specific tree or branch and the application context of the other\n\
    \   multicast group members.\n   This specification does not provide mechanisms\
    \ to enable such local\n   multicast session to survive hand-off and to seamlessly\
    \ continue from\n   a new care-of address on each new foreign link.  Any such\
    \ mechanism,\n   developed as an extension to this specification, needs to take\
    \ into\n   account the impact of fast moving mobile nodes on the Internet\n  \
    \ multicast routing protocols and their ability to maintain the\n   integrity\
    \ of source specific multicast trees and branches.\n   While the use of bidirectional\
    \ tunneling can ensure that multicast\n   trees are independent of the mobile\
    \ nodes movement, in some case such\n   tunneling can have adverse affects.  The\
    \ latency of specific types of\n   multicast applications (such as multicast based\
    \ discovery protocols)\n   will be affected when the round-trip time between the\
    \ foreign subnet\n   and the home agent is significant compared to that of the\
    \ topology to\n   be discovered.  In addition, the delivery tree from the home\
    \ agent in\n   such circumstances relies on unicast encapsulation from the agent\
    \ to\n   the mobile node.  Therefore, bandwidth usage is inefficient compared\n\
    \   to the native multicast forwarding in the foreign multicast system.\n"
- title: 11.3.5.  Receiving ICMP Error Messages
  contents:
  - "11.3.5.  Receiving ICMP Error Messages\n   Any node that does not recognize the\
    \ Mobility header will return an\n   ICMP Parameter Problem, Code 1, message to\
    \ the sender of the packet.\n   If the mobile node receives such an ICMP error\
    \ message in response to\n   a return routability procedure or Binding Update,\
    \ it SHOULD record in\n   its Binding Update List that future Binding Updates\
    \ SHOULD NOT be\n   sent to this destination.  Such Binding Update List entries\
    \ SHOULD be\n   removed after a period of time in order to allow for retrying\
    \ route\n   optimization.\n   New Binding Update List entries MUST NOT be created\
    \ as a result of\n   receiving ICMP error messages.\n   Correspondent nodes that\
    \ have participated in the return routability\n   procedure MUST implement the\
    \ ability to correctly process received\n   packets containing a Home Address\
    \ destination option.  Therefore,\n   correctly implemented correspondent nodes\
    \ should always be able to\n   recognize Home Address options.  If a mobile node\
    \ receives an ICMP\n   Parameter Problem, Code 2, message from some node indicating\
    \ that it\n   does not support the Home Address option, the mobile node SHOULD\
    \ log\n   the error and then discard the ICMP message.\n"
- title: 11.3.6.  Receiving Binding Error Messages
  contents:
  - "11.3.6.  Receiving Binding Error Messages\n   When a mobile node receives a packet\
    \ containing a Binding Error\n   message, it should first check if the mobile\
    \ node has a Binding\n   Update List entry for the source of the Binding Error\
    \ message.  If\n   the mobile node does not have such an entry, it MUST ignore\
    \ the\n   message.  This is necessary to prevent a waste of resources on, e.g.,\n\
    \   return routability procedure due to spoofed Binding Error messages.\n   Otherwise,\
    \ if the message Status field was 1 (unknown binding for\n   Home Address destination\
    \ option), the mobile node should perform one\n   of the following two actions:\n\
    \   o  If the mobile node has recent upper layer progress information,\n     \
    \ which indicates that communications with the correspondent node\n      are progressing,\
    \ it MAY ignore the message.  This can be done in\n      order to limit the damage\
    \ that spoofed Binding Error messages can\n      cause to ongoing communications.\n\
    \   o  If the mobile node has no upper layer progress information, it\n      MUST\
    \ remove the entry and route further communications through the\n      home agent.\
    \  It MAY also optionally start a return routability\n      procedure (see Section\
    \ 5.2).\n   If the message Status field was 2 (unrecognized MH Type value), the\n\
    \   mobile node should perform one of the following two actions:\n   o  If the\
    \ mobile node is not expecting an acknowledgement or response\n      from the\
    \ correspondent node, the mobile node SHOULD ignore this\n      message.\n   o\
    \  Otherwise, the mobile node SHOULD cease the use of any extensions\n      to\
    \ this specification.  If no extensions had been used, the mobile\n      node\
    \ should cease the attempt to use route optimization.\n"
- title: 11.4.  Home Agent and Prefix Management
  contents:
  - '11.4.  Home Agent and Prefix Management

    '
- title: 11.4.1.  Dynamic Home Agent Address Discovery
  contents:
  - "11.4.1.  Dynamic Home Agent Address Discovery\n   Sometimes when the mobile node\
    \ needs to send a Binding Update to its\n   home agent to register its new primary\
    \ care-of address, as described\n   in Section 11.7.1, the mobile node may not\
    \ know the address of any\n   router on its home link that can serve as a home\
    \ agent for it.  For\n   example, some nodes on its home link may have been reconfigured\
    \ while\n   the mobile node has been away from home, such that the router that\n\
    \   was operating as the mobile node's home agent has been replaced by a\n   different\
    \ router serving this role.\n   In this case, the mobile node MAY attempt to discover\
    \ the address of\n   a suitable home agent on its home link.  To do so, the mobile\
    \ node\n   sends an ICMP Home Agent Address Discovery Request message to the\n\
    \   Mobile IPv6 Home-Agents anycast address [16] for its home subnet\n   prefix.\
    \  As described in Section 10.5, the home agent on its home\n   link that receives\
    \ this Request message will return an ICMP Home\n   Agent Address Discovery Reply\
    \ message.  This message gives the\n   addresses for the home agents operating\
    \ on the home link.\n   The mobile node, upon receiving this Home Agent Address\
    \ Discovery\n   Reply message, MAY then send its home registration Binding Update\
    \ to\n   any of the unicast IP addresses listed in the Home Agent Addresses\n\
    \   field in the Reply.  For example, the mobile node MAY attempt its\n   home\
    \ registration to each of these addresses, in turn, until its\n   registration\
    \ is accepted.  The mobile node sends a Binding Update to\n   an address and waits\
    \ for the matching Binding Acknowledgement, moving\n   on to the next address\
    \ if there is no response.  The mobile node\n   MUST, however, wait at least InitialBindackTimeoutFirstReg\
    \ seconds\n   (see Section 13) before sending a Binding Update to the next home\n\
    \   agent.  In trying each of the returned home agent addresses, the\n   mobile\
    \ node SHOULD try each of them in the order they appear in the\n   Home Agent\
    \ Addresses field in the received Home Agent Address\n   Discovery Reply message.\n\
    \   If the mobile node has a current registration with some home agent\n   (the\
    \ Lifetime for that registration has not yet expired), then the\n   mobile node\
    \ MUST attempt any new registration first with that home\n   agent.  If that registration\
    \ attempt fails (e.g., timed out or\n   rejected), the mobile node SHOULD then\
    \ reattempt this registration\n   with another home agent.  If the mobile node\
    \ knows of no other\n   suitable home agent, then it MAY attempt the dynamic home\
    \ agent\n   address discovery mechanism described above.\n   If, after a mobile\
    \ node transmits a Home Agent Address Discovery\n   Request message to the Home\
    \ Agents Anycast address, it does not\n   receive a corresponding Home Agent Address\
    \ Discovery Reply message\n   within INITIAL_DHAAD_TIMEOUT (see Section 12) seconds,\
    \ the mobile\n   node MAY retransmit the same Request message to the same anycast\n\
    \   address.  This retransmission MAY be repeated up to a maximum of\n   DHAAD_RETRIES\
    \ (see Section 12) attempts.  Each retransmission MUST be\n   delayed by twice\
    \ the time interval of the previous retransmission.\n"
- title: 11.4.2.  Sending Mobile Prefix Solicitations
  contents:
  - "11.4.2.  Sending Mobile Prefix Solicitations\n   When a mobile node has a home\
    \ address that is about to become\n   invalid, it SHOULD send a Mobile Prefix\
    \ Solicitation to its home\n   agent in an attempt to acquire fresh routing prefix\
    \ information.  The\n   new information also enables the mobile node to participate\
    \ in\n   renumbering operations affecting the home network, as described in\n\
    \   Section 10.6.\n   The mobile node MUST use the Home Address destination option\
    \ to carry\n   its home address.  The mobile node MUST support and SHOULD use\
    \ IPsec\n   to protect the solicitation.  The mobile node MUST set the Identifier\n\
    \   field in the ICMP header to a random value.\n   As described in Section 11.7.2,\
    \ Binding Updates sent by the mobile\n   node to other nodes MUST use a lifetime\
    \ no greater than the remaining\n   lifetime of its home registration of its primary\
    \ care-of address.\n   The mobile node SHOULD further limit the lifetimes that\
    \ it sends on\n   any Binding Updates to be within the remaining valid lifetime\
    \ (see\n   Section 10.6.2) for the prefix in its home address.\n   When the lifetime\
    \ for a changed prefix decreases, and the change\n   would cause cached bindings\
    \ at correspondent nodes in the Binding\n   Update List to be stored past the\
    \ newly shortened lifetime, the\n   mobile node MUST issue a Binding Update to\
    \ all such correspondent\n   nodes.\n   These limits on the binding lifetime serve\
    \ to prohibit use of a\n   mobile node's home address after it becomes invalid.\n"
- title: 11.4.3.  Receiving Mobile Prefix Advertisements
  contents:
  - "11.4.3.  Receiving Mobile Prefix Advertisements\n   Section 10.6 describes the\
    \ operation of a home agent to support boot\n   time configuration and renumbering\
    \ a mobile node's home subnet while\n   the mobile node is away from home.  The\
    \ home agent sends Mobile\n   Prefix Advertisements to the mobile node while away\
    \ from home, giving\n   \"important\" Prefix Information options that describe\
    \ changes in the\n   prefixes in use on the mobile node's home link.\n   The Mobile\
    \ Prefix Solicitation is similar to the Router Solicitation\n   used in Neighbor\
    \ Discovery [12], except it is routed from the mobile\n   node on the visited\
    \ network to the home agent on the home network by\n   usual unicast routing rules.\n\
    \   When a mobile node receives a Mobile Prefix Advertisement, it MUST\n   validate\
    \ it according to the following test:\n   o  The Source Address of the IP packet\
    \ carrying the Mobile Prefix\n      Advertisement is the same as the home agent\
    \ address to which the\n      mobile node last sent an accepted home registration\
    \ Binding Update\n      to register its primary care-of address.  Otherwise, if\
    \ no such\n      registrations have been made, it SHOULD be the mobile node's\n\
    \      stored home agent address, if one exists.  Otherwise, if the\n      mobile\
    \ node has not yet discovered its home agent's address, it\n      MUST NOT accept\
    \ Mobile Prefix Advertisements.\n   o  The packet MUST have a type 2 routing header\
    \ and SHOULD be\n      protected by an IPsec header as described in Section 5.4\
    \ and\n      Section 6.8.\n   o  If the ICMP Identifier value matches the ICMP\
    \ Identifier value of\n      the most recently sent Mobile Prefix Solicitation\
    \ and no other\n      advertisement has yet been received for this value, then\
    \ the\n      advertisement is considered to be solicited and will be processed\n\
    \      further.\n      Otherwise, the advertisement is unsolicited, and MUST be\n\
    \      discarded.  In this case the mobile node SHOULD send a Mobile\n      Prefix\
    \ Solicitation.\n   Any received Mobile Prefix Advertisement not meeting these\
    \ tests MUST\n   be silently discarded.\n   For an accepted Mobile Prefix Advertisement,\
    \ the mobile node MUST\n   process Managed Address Configuration (M), Other Stateful\n\
    \   Configuration (O), and the Prefix Information Options as if they\n   arrived\
    \ in a Router Advertisement [12] on the mobile node's home\n   link.  (This specification\
    \ does not, however, describe how to acquire\n   home addresses through stateful\
    \ protocols.)  Such processing may\n   result in the mobile node configuring a\
    \ new home address, although\n   due to separation between preferred lifetime\
    \ and valid lifetime, such\n   changes should not affect most communications by\
    \ the mobile node, in\n   the same way as for nodes that are at home.\n   This\
    \ specification assumes that any security associations and\n   security policy\
    \ entries that may be needed for new prefixes have been\n   pre-configured in\
    \ the mobile node.  Note that while dynamic key\n   management avoids the need\
    \ to create new security associations, it is\n   still necessary to add policy\
    \ entries to protect the communications\n   involving the home address(es).  Mechanisms\
    \ for automatic set-up of\n   these entries are outside the scope of this specification.\n"
- title: 11.5.  Movement
  contents:
  - '11.5.  Movement

    '
- title: 11.5.1.  Movement Detection
  contents:
  - "11.5.1.  Movement Detection\n   The primary goal of movement detection is to\
    \ detect L3 handovers.\n   This section does not attempt to specify a fast movement\
    \ detection\n   algorithm which will function optimally for all types of\n   applications,\
    \ link-layers and deployment scenarios; instead, it\n   describes a generic method\
    \ that uses the facilities of IPv6 Neighbor\n   Discovery, including Router Discovery\
    \ and Neighbor Unreachability\n   Detection.  At the time of this writing, this\
    \ method is considered\n   well enough understood to recommend for standardization,\
    \ however it\n   is expected that future versions of this specification or other\n\
    \   specifications may contain updated versions of the movement detection\n  \
    \ algorithm that have better performance.\n   Generic movement detection uses\
    \ Neighbor Unreachability Detection to\n   detect when the default router is no\
    \ longer bi-directionally\n   reachable, in which case the mobile node must discover\
    \ a new default\n   router (usually on a new link).  However, this detection only\
    \ occurs\n   when the mobile node has packets to send, and in the absence of\n\
    \   frequent Router Advertisements or indications from the link-layer,\n   the\
    \ mobile node might become unaware of an L3 handover that occurred.\n   Therefore,\
    \ the mobile node should supplement this method with other\n   information whenever\
    \ it is available to the mobile node (e.g., from\n   lower protocol layers).\n\
    \   When the mobile node detects an L3 handover, it performs Duplicate\n   Address\
    \ Detection [13] on its link-local address, selects a new\n   default router as\
    \ a consequence of Router Discovery, and then\n   performs Prefix Discovery with\
    \ that new router to form new care-of\n   address(es) as described in Section\
    \ 11.5.2.  It then registers its\n   new primary care-of address with its home\
    \ agent as described in\n   Section 11.7.1.  After updating its home registration,\
    \ the mobile\n   node then updates associated mobility bindings in correspondent\
    \ nodes\n   that it is performing route optimization with as specified in Section\n\
    \   11.7.2.\n   Due to the temporary packet flow disruption and signaling overhead\n\
    \   involved in updating mobility bindings, the mobile node should avoid\n   performing\
    \ an L3 handover until it is strictly necessary.\n   Specifically, when the mobile\
    \ node receives a Router Advertisement\n   from a new router that contains a different\
    \ set of on-link prefixes,\n   if the mobile node detects that the currently selected\
    \ default router\n   on the old link is still bi-directionally reachable, it should\n\
    \   generally continue to use the old router on the old link rather than\n   switch\
    \ away from it to use a new default router.\n   Mobile nodes can use the information\
    \ in received Router\n   Advertisements to detect L3 handovers.  In doing so the\
    \ mobile node\n   needs to consider the following issues:\n   o  There might be\
    \ multiple routers on the same link, thus hearing a\n      new router does not\
    \ necessarily constitute an L3 handover.\n   o  When there are multiple routers\
    \ on the same link they might\n      advertise different prefixes.  Thus even\
    \ hearing a new router with\n      a new prefix might not be a reliable indication\
    \ of an L3 handover.\n   o  The link-local addresses of routers are not globally\
    \ unique, hence\n      after completing an L3 handover the mobile node might continue\
    \ to\n      receive Router Advertisements with the same link-local source\n  \
    \    address.  This might be common if routers use the same link-local\n     \
    \ address on multiple interfaces.  This issue can be avoided when\n      routers\
    \ use the Router Address (R) bit, since that provides a\n      global address\
    \ of the router.\n   In addition, the mobile node should consider the following\
    \ events as\n   indications that an L3 handover may have occurred.  Upon receiving\n\
    \   such indications, the mobile node needs to perform Router Discovery\n   to\
    \ discover routers and prefixes on the new link, as described in\n   Section 6.3.7\
    \ of RFC 2461 [12].\n   o  If Router Advertisements that the mobile node receives\
    \ include an\n      Advertisement Interval option, the mobile node may use its\n\
    \      Advertisement Interval field as an indication of the frequency\n      with\
    \ which it should expect to continue to receive future\n      Advertisements from\
    \ that router.  This field specifies the minimum\n      rate (the maximum amount\
    \ of time between successive\n      Advertisements) that the mobile node should\
    \ expect.  If this\n      amount of time elapses without the mobile node receiving\
    \ any\n      Advertisement from this router, the mobile node can be sure that\n\
    \      at least one Advertisement sent by the router has been lost.  The\n   \
    \   mobile node can then implement its own policy to determine how\n      many\
    \ lost Advertisements from its current default router\n      constitute an L3\
    \ handover indication.\n   o  Neighbor Unreachability Detection determines that\
    \ the default\n      router is no longer reachable.\n   o  With some types of\
    \ networks, notification that an L2 handover has\n      occurred might be obtained\
    \ from lower layer protocols or device\n      driver software within the mobile\
    \ node.  While further details\n      around handling L2 indications as movement\
    \ hints is an item for\n      further study, at the time of writing this specification\
    \ the\n      following is considered reasonable:\n      An L2 handover indication\
    \ may or may not imply L2 movement and L2\n      movement may or may not imply\
    \ L3 movement; the correlations might\n      be a function of the type of L2 but\
    \ might also be a function of\n      actual deployment of the wireless topology.\n\
    \      Unless it is well-known that an L2 handover indication is likely\n    \
    \  to imply L3 movement, instead of immediately multicasting a router\n      solicitation\
    \ it may be better to attempt to verify whether the\n      default router is still\
    \ bi-directionally reachable.  This can be\n      accomplished by sending a unicast\
    \ Neighbor Solicitation and\n      waiting for a Neighbor Advertisement with the\
    \ solicited flag set.\n      Note that this is similar to Neighbor Unreachability\
    \ detection but\n      it does not have the same state machine, such as the STALE\
    \ state.\n      If the default router does not respond to the Neighbor\n     \
    \ Solicitation it makes sense to proceed to multicasting a Router\n      Solicitation.\n"
- title: 11.5.2.  Forming New Care-of Addresses
  contents:
  - "11.5.2.  Forming New Care-of Addresses\n   After detecting that it has moved\
    \ a mobile node SHOULD generate a new\n   primary care-of address using normal\
    \ IPv6 mechanisms.  This SHOULD\n   also be done when the current primary care-of\
    \ address becomes\n   deprecated.  A mobile node MAY form a new primary care-of\
    \ address at\n   any time, but a mobile node MUST NOT send a Binding Update about\
    \ a\n   new care-of address to its home agent more than MAX_UPDATE_RATE times\n\
    \   within a second.\n   In addition, a mobile node MAY form new non-primary care-of\
    \ addresses\n   even when it has not switched to a new default router.  A mobile\
    \ node\n   can have only one primary care-of address at a time (which is\n   registered\
    \ with its home agent), but it MAY have an additional care-\n   of address for\
    \ any or all of the prefixes on its current link.\n   Furthermore, since a wireless\
    \ network interface may actually allow a\n   mobile node to be reachable on more\
    \ than one link at a time (i.e.,\n   within wireless transmitter range of routers\
    \ on more than one\n   separate link), a mobile node MAY have care-of addresses\
    \ on more than\n   one link at a time.  The use of more than one care-of address\
    \ at a\n   time is described in Section 11.5.3.\n   As described in Section 4,\
    \ in order to form a new care-of address, a\n   mobile node MAY use either stateless\
    \ [13] or stateful (e.g., DHCPv6\n   [29]) Address Autoconfiguration.  If a mobile\
    \ node needs to use a\n   source address (other than the unspecified address)\
    \ in packets sent\n   as a part of address autoconfiguration, it MUST use an IPv6\
    \ link-\n   local address rather than its own IPv6 home address.\n   RFC 2462\
    \ [13] specifies that in normal processing for Duplicate\n   Address Detection,\
    \ the node SHOULD delay sending the initial Neighbor\n   Solicitation message\
    \ by a random delay between 0 and\n   MAX_RTR_SOLICITATION_DELAY.  Since delaying\
    \ DAD can result in\n   significant delays in configuring a new care-of address\
    \ when the\n   Mobile Node moves to a new link, the Mobile Node preferably SHOULD\n\
    \   NOT delay DAD when configuring a new care-of address.  The Mobile\n   Node\
    \ SHOULD delay according to the mechanisms specified in RFC 2462\n   unless the\
    \ implementation has a behavior that desynchronizes the\n   steps that happen\
    \ before the DAD in the case that multiple nodes\n   experience handover at the\
    \ same time.  Such desynchronizing behaviors\n   might be due to random delays\
    \ in the L2 protocols or device drivers,\n   or due to the movement detection\
    \ mechanism that is used.\n"
- title: 11.5.3.  Using Multiple Care-of Addresses
  contents:
  - "11.5.3.  Using Multiple Care-of Addresses\n   As described in Section 11.5.2,\
    \ a mobile node MAY use more than one\n   care-of address at a time.  Particularly\
    \ in the case of many wireless\n   networks, a mobile node effectively might be\
    \ reachable through\n   multiple links at the same time (e.g., with overlapping\
    \ wireless\n   cells), on which different on-link subnet prefixes may exist. \
    \ The\n   mobile node MUST ensure that its primary care-of address always has\
    \ a\n   prefix that is advertised by its current default router.  After\n   selecting\
    \ a new primary care-of address, the mobile node MUST send a\n   Binding Update\
    \ containing that care-of address to its home agent.\n   The Binding Update MUST\
    \ have the Home Registration (H) and\n   Acknowledge (A) bits set its home agent,\
    \ as described on Section\n   11.7.1.\n   To assist with smooth handovers, a mobile\
    \ node SHOULD retain its\n   previous primary care-of address as a (non-primary)\
    \ care-of address,\n   and SHOULD still accept packets at this address, even after\n\
    \   registering its new primary care-of address with its home agent.\n   This\
    \ is reasonable, since the mobile node could only receive packets\n   at its previous\
    \ primary care-of address if it were indeed still\n   connected to that link.\
    \  If the previous primary care-of address was\n   allocated using stateful Address\
    \ Autoconfiguration [29], the mobile\n   node may not wish to release the address\
    \ immediately upon switching\n   to a new primary care-of address.\n   Whenever\
    \ a mobile node determines that it is no longer reachable\n   through a given\
    \ link, it SHOULD invalidate all care-of addresses\n   associated with address\
    \ prefixes that it discovered from routers on\n   the unreachable link which are\
    \ not in the current set of address\n   prefixes advertised by the (possibly new)\
    \ current default router.\n"
- title: 11.5.4.  Returning Home
  contents:
  - "11.5.4.  Returning Home\n   A mobile node detects that it has returned to its\
    \ home link through\n   the movement detection algorithm in use (Section 11.5.1),\
    \ when the\n   mobile node detects that its home subnet prefix is again on-link.\n\
    \   The mobile node SHOULD then send a Binding Update to its home agent,\n   to\
    \ instruct its home agent to no longer intercept or tunnel packets\n   for it.\
    \  In this home registration, the mobile node MUST set the\n   Acknowledge (A)\
    \ and Home Registration (H) bits, set the Lifetime\n   field to zero, and set\
    \ the care-of address for the binding to the\n   mobile node's own home address.\
    \  The mobile node MUST use its home\n   address as the source address in the\
    \ Binding Update.\n   When sending this Binding Update to its home agent, the\
    \ mobile node\n   must be careful in how it uses Neighbor Solicitation [12] (if\
    \ needed)\n   to learn the home agent's link-layer address, since the home agent\n\
    \   will be currently configured to intercept packets to the mobile\n   node's\
    \ home address using Duplicate Address Detection (DAD).  In\n   particular, the\
    \ mobile node is unable to use its home address as the\n   Source Address in the\
    \ Neighbor Solicitation until the home agent\n   stops defending the home address.\n\
    \   Neighbor Solicitation by the mobile node for the home agent's address\n  \
    \ will normally not be necessary, since the mobile node has already\n   learned\
    \ the home agent's link-layer address from a Source Link-Layer\n   Address option\
    \ in a Router Advertisement.  However, if there are\n   multiple home agents it\
    \ may still be necessary to send a\n   solicitation.  In this special case of\
    \ the mobile node returning\n   home, the mobile node MUST multicast the packet,\
    \ and in addition set\n   the Source Address of this Neighbor Solicitation to\
    \ the unspecified\n   address (0:0:0:0:0:0:0:0).  The target of the Neighbor Solicitation\n\
    \   MUST be set to the mobile node's home address.  The destination IP\n   address\
    \ MUST be set to the Solicited-Node multicast address [3].  The\n   home agent\
    \ will send a multicast Neighbor Advertisement back to the\n   mobile node with\
    \ the Solicited flag (S) set to zero.  In any case,\n   the mobile node SHOULD\
    \ record the information from the Source Link-\n   Layer Address option or from\
    \ the advertisement, and set the state of\n   the Neighbor Cache entry for the\
    \ home agent to REACHABLE.\n   The mobile node then sends its Binding Update to\
    \ the home agent's\n   link-layer address, instructing its home agent to no longer\
    \ serve as\n   a home agent for it.  By processing this Binding Update, the home\n\
    \   agent will cease defending the mobile node's home address for\n   Duplicate\
    \ Address Detection and will no longer respond to Neighbor\n   Solicitations for\
    \ the mobile node's home address.  The mobile node is\n   then the only node on\
    \ the link receiving packets at the mobile node's\n   home address.  In addition,\
    \ when returning home prior to the\n   expiration of a current binding for its\
    \ home address, and configuring\n   its home address on its network interface\
    \ on its home link, the\n   mobile node MUST NOT perform Duplicate Address Detection\
    \ on its own\n   home address, in order to avoid confusion or conflict with its\
    \ home\n   agent's use of the same address.  This rule also applies to the\n \
    \  derived link-local address of the mobile node, if the Link Local\n   Address\
    \ Compatibility (L) bit was set when the binding was created.\n   If the mobile\
    \ node returns home after the bindings for all of its\n   care-of addresses have\
    \ expired, then it SHOULD perform DAD.\n   After the Mobile Node sends the Binding\
    \ Update, it MUST be prepared\n   to reply to Neighbor Solicitations for its home\
    \ address.  Such\n   replies MUST be sent using a unicast Neighbor Advertisement\
    \ to the\n   sender's link-layer address.  It is necessary to reply, since sending\n\
    \   the Binding Acknowledgement from the home agent may require\n   performing\
    \ Neighbor Discovery, and the mobile node may not be able to\n   distinguish Neighbor\
    \ Solicitations coming from the home agent from\n   other Neighbor Solicitations.\
    \  Note that a race condition exists\n   where both the mobile node and the home\
    \ agent respond to the same\n   solicitations sent by other nodes; this will be\
    \ only temporary,\n   however, until the Binding Update is accepted.\n   After\
    \ receiving the Binding Acknowledgement for its Binding Update to\n   its home\
    \ agent, the mobile node MUST multicast onto the home link (to\n   the all-nodes\
    \ multicast address) a Neighbor Advertisement [12], to\n   advertise the mobile\
    \ node's own link-layer address for its own home\n   address.  The Target Address\
    \ in this Neighbor Advertisement MUST be\n   set to the mobile node's home address,\
    \ and the Advertisement MUST\n   include a Target Link-layer Address option specifying\
    \ the mobile\n   node's link-layer address.  The mobile node MUST multicast such\
    \ a\n   Neighbor Advertisement for each of its home addresses, as defined by\n\
    \   the current on-link prefixes, including its link-local address and\n   site-local\
    \ address.  The Solicited Flag (S) in these Advertisements\n   MUST NOT be set,\
    \ since they were not solicited by any Neighbor\n   Solicitation.  The Override\
    \ Flag (O) in these Advertisements MUST be\n   set, indicating that the Advertisements\
    \ SHOULD override any existing\n   Neighbor Cache entries at any node receiving\
    \ them.\n   Since multicasting on the local link (such as Ethernet) is typically\n\
    \   not guaranteed to be reliable, the mobile node MAY retransmit these\n   Neighbor\
    \ Advertisements [12] up to MAX_NEIGHBOR_ADVERTISEMENT times\n   to increase their\
    \ reliability.  It is still possible that some nodes\n   on the home link will\
    \ not receive any of these Neighbor\n   Advertisements, but these nodes will eventually\
    \ be able to recover\n   through use of Neighbor Unreachability Detection [12].\n\
    \   Note that the tunnel via the home agent typically stops operating at\n   the\
    \ same time that the home registration is deleted.\n"
- title: 11.6.  Return Routability Procedure
  contents:
  - "11.6.  Return Routability Procedure\n   This section defines the rules that the\
    \ mobile node must follow when\n   performing the return routability procedure.\
    \  Section 11.7.2\n   describes the rules when the return routability procedure\
    \ needs to be\n   initiated.\n"
- title: 11.6.1.  Sending Test Init Messages
  contents:
  - "11.6.1.  Sending Test Init Messages\n   A mobile node that initiates a return\
    \ routability procedure MUST send\n   (in parallel) a Home Test Init message and\
    \ a Care-of Test Init\n   messages.  However, if the mobile node has recently\
    \ received (see\n   Section 5.2.7) one or both home or care-of keygen tokens,\
    \ and\n   associated nonce indices for the desired addresses, it MAY reuse\n \
    \  them.  Therefore, the return routability procedure may in some cases\n   be\
    \ completed with only one message pair.  It may even be completed\n   without\
    \ any messages at all, if the mobile node has a recent home\n   keygen token and\
    \ has previously visited the same care-of address so\n   that it also has a recent\
    \ care-of keygen token.  If the mobile node\n   intends to send a Binding Update\
    \ with the Lifetime set to zero and\n   the care-of address equal to its home\
    \ address - such as when\n   returning home - sending a Home Test Init message\
    \ is sufficient.  In\n   this case, generation of the binding management key depends\n\
    \   exclusively on the home keygen token (Section 5.2.5).\n   A Home Test Init\
    \ message MUST be created as described in Section\n   6.1.3.\n   A Care-of Test\
    \ Init message MUST be created as described in Section\n   6.1.4.  When sending\
    \ a Home Test Init or Care-of Test Init message\n   the mobile node MUST record\
    \ in its Binding Update List the following\n   fields from the messages:\n   o\
    \  The IP address of the node to which the message was sent.\n   o  The home address\
    \ of the mobile node.  This value will appear in\n      the Source Address field\
    \ of the Home Test Init message.  When\n      sending the Care-of Test Init message,\
    \ this address does not\n      appear in the message, but represents the home\
    \ address for which\n      the binding is desired.\n   o  The time at which each\
    \ of these messages was sent.\n   o  The cookies used in the messages.\n   Note\
    \ that a single Care-of Test Init message may be sufficient even\n   when there\
    \ are multiple home addresses.  In this case the mobile node\n   MAY record the\
    \ same information in multiple Binding Update List\n   entries.\n"
- title: 11.6.2.  Receiving Test Messages
  contents:
  - "11.6.2.  Receiving Test Messages\n   Upon receiving a packet carrying a Home\
    \ Test message, a mobile node\n   MUST validate the packet according to the following\
    \ tests:\n   o  The Source Address of the packet belongs to a correspondent node\n\
    \      for which the mobile node has a Binding Update List entry with a\n    \
    \  state indicating that return routability procedure is in progress.\n      Note\
    \ that there may be multiple such entries.\n   o  The Binding Update List indicates\
    \ that no home keygen token has\n      been received yet.\n   o  The Destination\
    \ Address of the packet has the home address of the\n      mobile node, and the\
    \ packet has been received in a tunnel from the\n      home agent.\n   o  The\
    \ Home Init Cookie field in the message matches the value stored\n      in the\
    \ Binding Update List.\n   Any Home Test message not satisfying all of these tests\
    \ MUST be\n   silently ignored.  Otherwise, the mobile node MUST record the Home\n\
    \   Nonce Index and home keygen token in the Binding Update List.  If the\n  \
    \ Binding Update List entry does not have a care-of keygen token, the\n   mobile\
    \ node SHOULD continue waiting for the Care-of Test message.\n   Upon receiving\
    \ a packet carrying a Care-of Test message, a mobile\n   node MUST validate the\
    \ packet according to the following tests:\n   o  The Source Address of the packet\
    \ belongs to a correspondent node\n      for which the mobile node has a Binding\
    \ Update List entry with a\n      state indicating that return routability procedure\
    \ is in progress.\n      Note that there may be multiple such entries.\n   o \
    \ The Binding Update List indicates that no care-of keygen token has\n      been\
    \ received yet.\n   o  The Destination Address of the packet is the current care-of\n\
    \      address of the mobile node.\n   o  The Care-of Init Cookie field in the\
    \ message matches the value\n      stored in the Binding Update List.\n   Any\
    \ Care-of Test message not satisfying all of these tests MUST be\n   silently\
    \ ignored.  Otherwise, the mobile node MUST record the Care-of\n   Nonce Index\
    \ and care-of keygen token in the Binding Update List.  If\n   the Binding Update\
    \ List entry does not have a home keygen token, the\n   mobile node SHOULD continue\
    \ waiting for the Home Test message.\n   If after receiving either the Home Test\
    \ or the Care-of Test message\n   and performing the above actions, the Binding\
    \ Update List entry has\n   both the home and the care-of keygen tokens, the return\
    \ routability\n   procedure is complete.  The mobile node SHOULD then proceed\
    \ with\n   sending a Binding Update as described in Section 11.7.2.\n   Correspondent\
    \ nodes from the time before this specification was\n   published may not support\
    \ the Mobility Header protocol.  These nodes\n   will respond to Home Test Init\
    \ and Care-of Test Init messages with an\n   ICMP Parameter Problem code 1.  The\
    \ mobile node SHOULD take such\n   messages as an indication that the correspondent\
    \ node cannot provide\n   route optimization, and revert back to the use of bidirectional\n\
    \   tunneling.\n"
- title: 11.6.3.  Protecting Return Routability Packets
  contents:
  - "11.6.3.  Protecting Return Routability Packets\n   The mobile node MUST support\
    \ the protection of Home Test and Home\n   Test Init messages as described in\
    \ Section 10.4.6.\n   When IPsec is used to protect return routability signaling\
    \ or payload\n   packets, the mobile node MUST set the source address it uses\
    \ for the\n   outgoing tunnel packets to the current primary care-of address.\
    \  The\n   mobile node starts to use a new primary care-of address immediately\n\
    \   after sending a Binding Update to the home agent to register this new\n  \
    \ address.\n"
- title: 11.7.  Processing Bindings
  contents:
  - '11.7.  Processing Bindings

    '
- title: 11.7.1.  Sending Binding Updates to the Home Agent
  contents:
  - "11.7.1.  Sending Binding Updates to the Home Agent\n   After deciding to change\
    \ its primary care-of address as described in\n   Section 11.5.1 and Section 11.5.2,\
    \ a mobile node MUST register this\n   care-of address with its home agent in\
    \ order to make this its primary\n   care-of address.\n   Also, if the mobile\
    \ node wants the services of the home agent beyond\n   the current registration\
    \ period, the mobile node should send a new\n   Binding Update to it well before\
    \ the expiration of this period, even\n   if it is not changing its primary care-of\
    \ address.  However, if the\n   home agent returned a Binding Acknowledgement\
    \ for the current\n   registration with Status field set to 1 (accepted but prefix\n\
    \   discovery necessary), the mobile node should not try to register\n   again\
    \ before it has learned the validity of its home prefixes through\n   mobile prefix\
    \ discovery.  This is typically necessary every time this\n   Status value is\
    \ received, because information learned earlier may\n   have changed.\n   To register\
    \ a care-of address or to extend the lifetime of an\n   existing registration,\
    \ the mobile node sends a packet to its home\n   agent containing a Binding Update,\
    \ with the packet constructed as\n   follows:\n   o  The Home Registration (H)\
    \ bit MUST be set in the Binding Update.\n   o  The Acknowledge (A) bit MUST be\
    \ set in the Binding Update.\n   o  The packet MUST contain a Home Address destination\
    \ option, giving\n      the mobile node's home address for the binding.\n   o\
    \  The care-of address for the binding MUST be used as the Source\n      Address\
    \ in the packet's IPv6 header, unless an Alternate Care-of\n      Address mobility\
    \ option is included in the Binding Update.  This\n      option MUST be included\
    \ in all home registrations, as the ESP\n      protocol will not be able to protect\
    \ care-of addresses in the IPv6\n      header.  (Mobile IPv6 implementations that\
    \ know they are using\n      IPsec AH to protect a particular message might avoid\
    \ this option.\n      For brevity the usage of AH is not discussed in this document.)\n\
    \   o  If the mobile node's link-local address has the same interface\n      identifier\
    \ as the home address for which it is supplying a new\n      care-of address,\
    \ then the mobile node SHOULD set the Link-Local\n      Address Compatibility\
    \ (L) bit.\n   o  If the home address was generated using RFC 3041 [18], then\
    \ the\n      link local address is unlikely to have a compatible interface\n \
    \     identifier.  In this case, the mobile node MUST clear the Link-\n      Local\
    \ Address Compatibility (L) bit.\n   o  If the IPsec security associations between\
    \ the mobile node and the\n      home agent have been established dynamically,\
    \ and the mobile node\n      has the capability to update its endpoint in the\
    \ used key\n      management protocol to the new care-of address every time it\n\
    \      moves, the mobile node SHOULD set the Key Management Mobility\n      Capability\
    \ (K) bit in the Binding Update.  Otherwise, the mobile\n      node MUST clear\
    \ the bit.\n   o  The value specified in the Lifetime field MUST be non-zero and\n\
    \      SHOULD be less than or equal to the remaining valid lifetime of\n     \
    \ the home address and the care-of address specified for the\n      binding.\n\
    \      Mobile nodes that use dynamic home agent address discovery should\n   \
    \   be careful with long lifetimes.  If the mobile node loses the\n      knowledge\
    \ of its binding with a specific home agent, registering a\n      new binding\
    \ with another home agent may be impossible as the\n      previous home agent\
    \ is still defending the existing binding.\n      Therefore, to ensure that mobile\
    \ nodes using home agent address\n      discovery do not lose information about\
    \ their binding, they SHOULD\n      de-register before losing this information,\
    \ or use small\n      lifetimes.\n   The Acknowledge (A) bit in the Binding Update\
    \ requests the home agent\n   to return a Binding Acknowledgement in response\
    \ to this Binding\n   Update.  As described in Section 6.1.8, the mobile node\
    \ SHOULD\n   retransmit this Binding Update to its home agent until it receives\
    \ a\n   matching Binding Acknowledgement.  Once reaching a retransmission\n  \
    \ timeout period of MAX_BINDACK_TIMEOUT, the mobile node SHOULD restart\n   the\
    \ process of delivering the Binding Update, but trying instead the\n   next home\
    \ agent returned during dynamic home agent address discovery\n   (see Section\
    \ 11.4.1).  If there was only one home agent, the mobile\n   node instead SHOULD\
    \ continue to periodically retransmit the Binding\n   Update at this rate until\
    \ acknowledged (or until it begins attempting\n   to register a different primary\
    \ care-of address).  See Section 11.8\n   for information about retransmitting\
    \ Binding Updates.\n   With the Binding Update, the mobile node requests the home\
    \ agent to\n   serve as the home agent for the given home address.  Until the\n\
    \   lifetime of this registration expires, the home agent considers\n   itself\
    \ the home agent for this home address.\n   Each Binding Update MUST be authenticated\
    \ as coming from the right\n   mobile node, as defined in Section 5.1.  The mobile\
    \ node MUST use its\n   home address - either in the Home Address destination\
    \ option or in\n   the Source Address field of the IPv6 header - in Binding Updates\
    \ sent\n   to the home agent.  This is necessary in order to allow the IPsec\n\
    \   policies to be matched with the correct home address.\n   When sending a Binding\
    \ Update to its home agent, the mobile node MUST\n   also create or update the\
    \ corresponding Binding Update List entry, as\n   specified in Section 11.7.2.\n\
    \   The last Sequence Number value sent to the home agent in a Binding\n   Update\
    \ is stored by the mobile node.  If the sending mobile node has\n   no knowledge\
    \ of the correct Sequence Number value, it may start at\n   any value.  If the\
    \ home agent rejects the value, it sends back a\n   Binding Acknowledgement with\
    \ a status code 135, and the last accepted\n   sequence number in the Sequence\
    \ Number field of the Binding\n   Acknowledgement.  The mobile node MUST store\
    \ this information and use\n   the next Sequence Number value for the next Binding\
    \ Update it sends.\n   If the mobile node has additional home addresses, then\
    \ the mobile\n   node SHOULD send an additional packet containing a Binding Update\
    \ to\n   its home agent to register the care-of address for each such other\n\
    \   home address.\n   The home agent will only perform DAD for the mobile node's\
    \ home\n   address when the mobile node has supplied a valid binding between its\n\
    \   home address and a care-of address.  If some time elapses during\n   which\
    \ the mobile node has no binding at the home agent, it might be\n   possible for\
    \ another node to autoconfigure the mobile node's home\n   address.  Therefore,\
    \ the mobile node MUST treat the creation of a new\n   binding with the home agent\
    \ using an existing home address, the same\n   as creation of a new home address.\
    \  In the unlikely event that the\n   mobile node's home address is autoconfigured\
    \ as the IPv6 address of\n   another network node on the home network, the home\
    \ agent will reply\n   to the mobile node's subsequent Binding Update with a Binding\n\
    \   Acknowledgement containing a Status of 134 (Duplicate Address\n   Detection\
    \ failed).  In this case, the mobile node MUST NOT attempt to\n   re-use the same\
    \ home address.  It SHOULD continue to register the\n   care-of addresses for\
    \ its other home addresses, if any.  (Mechanisms\n   outlined in Appendix B.5\
    \ may in the future allow mobile nodes to\n   acquire new home addresses to replace\
    \ the one for which Status 134\n   was received.)\n"
- title: 11.7.2.  Correspondent Registration
  contents:
  - "11.7.2.  Correspondent Registration\n   When the mobile node is assured that\
    \ its home address is valid, it\n   can initiate a correspondent registration\
    \ with the purpose of\n   allowing the correspondent node to cache the mobile\
    \ node's current\n   care-of address.  This procedure consists of the return routability\n\
    \   procedure followed by a registration.\n   This section defines when the correspondent\
    \ registration is to be\n   initiated and the rules to follow while it is being\
    \ performed.\n   After the mobile node has sent a Binding Update to its home agent,\n\
    \   registering a new primary care-of address (as described in Section\n   11.7.1),\
    \ the mobile node SHOULD initiate a correspondent registration\n   for each node\
    \ that already appears in the mobile node's Binding\n   Update List.  The initiated\
    \ procedures can be used to either update\n   or delete binding information in\
    \ the correspondent node.\n   For nodes that do not appear in the mobile node's\
    \ Binding Update\n   List, the mobile node MAY initiate a correspondent registration\
    \ at\n   any time after sending the Binding Update to its home agent.\n   Considerations\
    \ regarding when (and if) to initiate the procedure\n   depend on the specific\
    \ movement and traffic patterns of the mobile\n   node and are outside the scope\
    \ of this document.\n   In addition, the mobile node MAY initiate the correspondent\n\
    \   registration in response to receiving a packet that meets all of the\n   following\
    \ tests:\n   o  The packet was tunneled using IPv6 encapsulation.\n   o  The Destination\
    \ Address in the tunnel (outer) IPv6 header is equal\n      to any of the mobile\
    \ node's care-of addresses.\n   o  The Destination Address in the original (inner)\
    \ IPv6 header is\n      equal to one of the mobile node's home addresses.\n  \
    \ o  The Source Address in the tunnel (outer) IPv6 header differs from\n     \
    \ the Source Address in the original (inner) IPv6 header.\n   o  The packet does\
    \ not contain a Home Test, Home Test Init, Care-of\n      Test, or Care-of Test\
    \ Init message.\n   If a mobile node has multiple home addresses, it becomes important\
    \ to\n   select the right home address to use in the correspondent\n   registration.\
    \  The used home address MUST be the Destination Address\n   of the original (inner)\
    \ packet.\n   The peer address used in the procedure MUST be determined as follows:\n\
    \   o  If a Home Address destination option is present in the original\n     \
    \ (inner) packet, the address from this option is used.\n   o  Otherwise, the\
    \ Source Address in the original (inner) IPv6 header\n      of the packet is used.\n\
    \   Note that the validity of the original packet is checked before\n   attempting\
    \ to initiate a correspondent registration.  For instance,\n   if a Home Address\
    \ destination option appeared in the original packet,\n   then rules in Section\
    \ 9.3.1 are followed.\n   A mobile node MAY also choose to keep its topological\
    \ location\n   private from certain correspondent nodes, and thus need not initiate\n\
    \   the correspondent registration.\n   Upon successfully completing the return\
    \ routability procedure, and\n   after receiving a successful Binding Acknowledgement\
    \ from the Home\n   Agent, a Binding Update MAY be sent to the correspondent node.\n\
    \   In any Binding Update sent by a mobile node, the care-of address\n   (either\
    \ the Source Address in the packet's IPv6 header or the Care-of\n   Address in\
    \ the Alternate Care-of Address mobility option of the\n   Binding Update) MUST\
    \ be set to one of the care-of addresses currently\n   in use by the mobile node\
    \ or to the mobile node's home address.  A\n   mobile node MAY set the care-of\
    \ address differently for sending\n   Binding Updates to different correspondent\
    \ nodes.\n   A mobile node MAY also send a Binding Update to such a correspondent\n\
    \   node, instructing it to delete any existing binding for the mobile\n   node\
    \ from its Binding Cache, as described in Section 6.1.7.  Even in\n   this case\
    \ a successful completion of the return routability procedure\n   is required\
    \ first.\n   If the care-of address is not set to the mobile node's home address,\n\
    \   the Binding Update requests that the correspondent node create or\n   update\
    \ an entry for the mobile node in the correspondent node's\n   Binding Cache.\
    \  This is done in order to record a care-of address for\n   use in sending future\
    \ packets to the mobile node.  In this case, the\n   value specified in the Lifetime\
    \ field sent in the Binding Update\n   SHOULD be less than or equal to the remaining\
    \ lifetime of the home\n   registration and the care-of address specified for\
    \ the binding.  The\n   care-of address given in the Binding Update MAY differ\
    \ from the\n   mobile node's primary care-of address.\n   If the Binding Update\
    \ is sent to the correspondent node, requesting\n   the deletion of any existing\
    \ Binding Cache entry it has for the\n   mobile node, the care-of address is set\
    \ to the mobile node's home\n   address and the Lifetime field set to zero.  In\
    \ this case, generation\n   of the binding management key depends exclusively\
    \ on the home keygen\n   token (Section 5.2.5).  The care-of nonce index SHOULD\
    \ be set to zero\n   in this case.  In keeping with the Binding Update creation\
    \ rules\n   below, the care-of address MUST be set to the home address if the\n\
    \   mobile node is at home, or to the current care-of address if it is\n   away\
    \ from home.\n   If the mobile node wants to ensure that its new care-of address\
    \ has\n   been entered into a correspondent node's Binding Cache, the mobile\n\
    \   node needs to request an acknowledgement by setting the Acknowledge\n   (A)\
    \ bit in the Binding Update.\n   A Binding Update is created as follows:\n   o\
    \  The current care-of address of the mobile node MUST be sent either\n      in\
    \ the Source Address of the IPv6 header, or in the Alternate\n      Care-of Address\
    \ mobility option.\n   o  The Destination Address of the IPv6 header MUST contain\
    \ the\n      address of the correspondent node.\n   o  The Mobility Header is\
    \ constructed according to rules in Section\n      6.1.7 and Section 5.2.6, including\
    \ the Binding Authorization Data\n      (calculated as defined in Section 6.2.7)\
    \ and possibly the Nonce\n      Indices mobility options.\n   o  The home address\
    \ of the mobile node MUST be added to the packet in\n      a Home Address destination\
    \ option, unless the Source Address is\n      the home address.\n   Each Binding\
    \ Update MUST have a Sequence Number greater than the\n   Sequence Number value\
    \ sent in the previous Binding Update to the same\n   destination address (if\
    \ any).  The sequence numbers are compared\n   modulo 2**16, as described in Section\
    \ 9.5.1.  There is no\n   requirement, however, that the Sequence Number value\
    \ strictly\n   increase by 1 with each new Binding Update sent or received, as\
    \ long\n   as the value stays within the window.  The last Sequence Number value\n\
    \   sent to a destination in a Binding Update is stored by the mobile\n   node\
    \ in its Binding Update List entry for that destination.  If the\n   sending mobile\
    \ node has no Binding Update List entry, the Sequence\n   Number SHOULD start\
    \ at a random value.  The mobile node MUST NOT use\n   the same Sequence Number\
    \ in two different Binding Updates to the same\n   correspondent node, even if\
    \ the Binding Updates provide different\n   care-of addresses.\n   The mobile\
    \ node is responsible for the completion of the\n   correspondent registration,\
    \ as well as any retransmissions that may\n   be needed (subject to the rate limitation\
    \ defined in Section 11.8).\n"
- title: 11.7.3.  Receiving Binding Acknowledgements
  contents:
  - "11.7.3.  Receiving Binding Acknowledgements\n   Upon receiving a packet carrying\
    \ a Binding Acknowledgement, a mobile\n   node MUST validate the packet according\
    \ to the following tests:\n   o  The packet meets the authentication requirements\
    \ for Binding\n      Acknowledgements defined in Section 6.1.8 and Section 5.\
    \  That is,\n      if the Binding Update was sent to the home agent, underlying\
    \ IPsec\n      protection is used.  If the Binding Update was sent to the\n  \
    \    correspondent node, the Binding Authorization Data mobility option\n    \
    \  MUST be present and have a valid value.\n   o  The Binding Authorization Data\
    \ mobility option, if present, MUST\n      be the last option and MUST not have\
    \ trailing padding.\n   o  The Sequence Number field matches the Sequence Number\
    \ sent by the\n      mobile node to this destination address in an outstanding\
    \ Binding\n      Update.\n   Any Binding Acknowledgement not satisfying all of\
    \ these tests MUST be\n   silently ignored.\n   When a mobile node receives a\
    \ packet carrying a valid Binding\n   Acknowledgement, the mobile node MUST examine\
    \ the Status field as\n   follows:\n   o  If the Status field indicates that the\
    \ Binding Update was accepted\n      (the Status field is less than 128), then\
    \ the mobile node MUST\n      update the corresponding entry in its Binding Update\
    \ List to\n      indicate that the Binding Update has been acknowledged; the mobile\n\
    \      node MUST then stop retransmitting the Binding Update.  In\n      addition,\
    \ if the value specified in the Lifetime field in the\n      Binding Acknowledgement\
    \ is less than the Lifetime value sent in\n      the Binding Update being acknowledged,\
    \ the mobile node MUST\n      subtract the difference between these two Lifetime\
    \ values from the\n      remaining lifetime for the binding as maintained in the\n\
    \      corresponding Binding Update List entry (with a minimum value for\n   \
    \   the Binding Update List entry lifetime of 0).  That is, if the\n      Lifetime\
    \ value sent in the Binding Update was L_update, the\n      Lifetime value received\
    \ in the Binding Acknowledgement was L_ack,\n      and the current remaining lifetime\
    \ of the Binding Update List\n      entry is L_remain, then the new value for\
    \ the remaining lifetime\n      of the Binding Update List entry should be\n \
    \        max((L_remain - (L_update - L_ack)), 0)\n      where max(X, Y) is the\
    \ maximum of X and Y.  The effect of this\n      step is to correctly manage the\
    \ mobile node's view of the\n      binding's remaining lifetime (as maintained\
    \ in the corresponding\n      Binding Update List entry) so that it correctly\
    \ counts down from\n      the Lifetime value given in the Binding Acknowledgement,\
    \ but with\n      the timer countdown beginning at the time that the Binding Update\n\
    \      was sent.\n      Mobile nodes SHOULD send a new Binding Update well before\
    \ the\n      expiration of this period in order to extend the lifetime.  This\n\
    \      helps to avoid disruptions in communications which might otherwise\n  \
    \    be caused by network delays or clock drift.\n   o  Additionally, if the Status\
    \ field value is 1 (accepted but prefix\n      discovery necessary), the mobile\
    \ node SHOULD send a Mobile Prefix\n      Solicitation message to update its information\
    \ about the available\n      prefixes.\n   o  If the Status field indicates that\
    \ the Binding Update was rejected\n      (the Status field is greater than or\
    \ equal to 128), then the\n      mobile node can take steps to correct the cause\
    \ of the error and\n      retransmit the Binding Update (with a new Sequence Number\
    \ value),\n      subject to the rate limiting restriction specified in Section\n\
    \      11.8.  If this is not done or it fails, then the mobile node\n      SHOULD\
    \ record in its Binding Update List that future Binding\n      Updates SHOULD\
    \ NOT be sent to this destination.\n   The treatment of a Binding Refresh Advice\
    \ mobility option within the\n   Binding Acknowledgement depends on where the\
    \ acknowledgement came\n   from.  This option MUST be ignored if the acknowledgement\
    \ came from a\n   correspondent node.  If it came from the home agent, the mobile\
    \ node\n   uses the Refresh Interval field in the option as a suggestion that\
    \ it\n   SHOULD attempt to refresh its home registration at the indicated\n  \
    \ shorter interval.\n   If the acknowledgement came from the home agent, the mobile\
    \ node\n   examines the value of the Key Management Mobility Capability (K) bit.\n\
    \   If this bit is not set, the mobile node SHOULD discard key management\n  \
    \ protocol connections, if any, to the home agent.  The mobile node MAY\n   also\
    \ initiate a new key management connection.\n   If this bit is set, the mobile\
    \ node SHOULD move its own endpoint in\n   the key management protocol connections\
    \ to the home agent, if any.\n   The mobile node's new endpoint should be the\
    \ new care-of address.\n   For an IKE phase 1 connection, this means that packets\
    \ sent to this\n   address with the original ISAKMP cookies are accepted.\n"
- title: 11.7.4.  Receiving Binding Refresh Requests
  contents:
  - "11.7.4.  Receiving Binding Refresh Requests\n   When a mobile node receives a\
    \ packet containing a Binding Refresh\n   Request message, the mobile node has\
    \ a Binding Update List entry for\n   the source of the Binding Refresh Request,\
    \ and the mobile node wants\n   to retain its binding cache entry at the correspondent\
    \ node, then the\n   mobile node should start a return routability procedure.\
    \  If the\n   mobile node wants to have its binding cache entry removed, it can\n\
    \   either ignore the Binding Refresh Request and wait for the binding to\n  \
    \ time out, or at any time, it can delete its binding from a\n   correspondent\
    \ node with an explicit binding update with a zero\n   lifetime and the care-of\
    \ address set to the home address.  If the\n   mobile node does not know if it\
    \ needs the binding cache entry, it can\n   make the decision in an implementation\
    \ dependent manner, such as\n   based on available resources.\n   Note that the\
    \ mobile node should be careful to not respond to Binding\n   Refresh Requests\
    \ for addresses not in the Binding Update List to\n   avoid being subjected to\
    \ a denial of service attack.\n   If the return routability procedure completes\
    \ successfully, a Binding\n   Update message SHOULD be sent, as described in Section\
    \ 11.7.2.  The\n   Lifetime field in this Binding Update SHOULD be set to a new\n\
    \   lifetime, extending any current lifetime remaining from a previous\n   Binding\
    \ Update sent to this node (as indicated in any existing\n   Binding Update List\
    \ entry for this node), and the lifetime SHOULD\n   again be less than or equal\
    \ to the remaining lifetime of the home\n   registration and the care-of address\
    \ specified for the binding.  When\n   sending this Binding Update, the mobile\
    \ node MUST update its Binding\n   Update List in the same way as for any other\
    \ Binding Update sent by\n   the mobile node.\n"
- title: 11.8.  Retransmissions and Rate Limiting
  contents:
  - "11.8.  Retransmissions and Rate Limiting\n   The mobile node is responsible for\
    \ retransmissions and rate limiting\n   in the return routability procedure, registrations,\
    \ and in solicited\n   prefix discovery.\n   When the mobile node sends a Mobile\
    \ Prefix Solicitation, Home Test\n   Init, Care-of Test Init or Binding Update\
    \ for which it expects a\n   response, the mobile node has to determine a value\
    \ for the initial\n   retransmission timer:\n   o  If the mobile node is sending\
    \ a Mobile Prefix Solicitation, it\n      SHOULD use an initial retransmission\
    \ interval of\n      INITIAL_SOLICIT_TIMER (see Section 12).\n   o  If the mobile\
    \ node is sending a Binding Update and does not have\n      an existing binding\
    \ at the home agent, it SHOULD use\n      InitialBindackTimeoutFirstReg (see Section\
    \ 13) as a value for the\n      initial retransmission timer.  This long retransmission\
    \ interval\n      will allow the home agent to complete the Duplicate Address\n\
    \      Detection procedure mandated in this case, as detailed in Section\n   \
    \   11.7.1.\n   o  Otherwise, the mobile node should use the specified value of\n\
    \      INITIAL_BINDACK_TIMEOUT for the initial retransmission timer.\n   If the\
    \ mobile node fails to receive a valid matching response within\n   the selected\
    \ initial retransmission interval, the mobile node SHOULD\n   retransmit the message\
    \ until a response is received.\n   The retransmissions by the mobile node MUST\
    \ use an exponential back-\n   off process in which the timeout period is doubled\
    \ upon each\n   retransmission, until either the node receives a response or the\n\
    \   timeout period reaches the value MAX_BINDACK_TIMEOUT.  The mobile\n   node\
    \ MAY continue to send these messages at this slower rate\n   indefinitely.\n\
    \   The mobile node SHOULD start a separate back-off process for\n   different\
    \ message types, different home addresses and different\n   care-of addresses.\
    \  However, in addition an overall rate limitation\n   applies for messages sent\
    \ to a particular correspondent node.  This\n   ensures that the correspondent\
    \ node has a sufficient amount of time\n   to respond when bindings for multiple\
    \ home addresses are registered,\n   for instance.  The mobile node MUST NOT send\
    \ Mobility Header messages\n   of a particular type to a particular correspondent\
    \ node more than\n   MAX_UPDATE_RATE times within a second.\n   Retransmitted\
    \ Binding Updates MUST use a Sequence Number value\n   greater than that used\
    \ for the previous transmission of this Binding\n   Update.  Retransmitted Home\
    \ Test Init and Care-of Test Init messages\n   MUST use new cookie values.\n"
- title: 12.  Protocol Constants
  contents:
  - "12.  Protocol Constants\n   DHAAD_RETRIES                   4 retransmissions\n\
    \   INITIAL_BINDACK_TIMEOUT         1 second\n   INITIAL_DHAAD_TIMEOUT       \
    \    3 seconds\n   INITIAL_SOLICIT_TIMER           3 seconds\n   MAX_BINDACK_TIMEOUT\
    \             32 seconds\n   MAX_NONCE_LIFETIME              240 seconds\n   MAX_TOKEN_LIFETIME\
    \              210 seconds\n   MAX_RR_BINDING_LIFETIME         420 seconds\n \
    \  MAX_UPDATE_RATE                 3 times\n   PREFIX_ADV_RETRIES            \
    \  3 retransmissions\n   PREFIX_ADV_TIMEOUT              3 seconds\n"
- title: 13.  Protocol Configuration Variables
  contents:
  - "13.  Protocol Configuration Variables\n   MaxMobPfxAdvInterval            Default:\
    \ 86,400 seconds\n   MinDelayBetweenRAs              Default: 3 seconds,\n   \
    \                                Min: 0.03 seconds\n   MinMobPfxAdvInterval  \
    \          Default: 600 seconds\n   InitialBindackTimeoutFirstReg   Default: 1.5\
    \ seconds\n   Home agents MUST allow the first three variables to be configured\
    \ by\n   system management, and mobile nodes MUST allow the last variable to\n\
    \   be configured by system management.\n   The default value for InitialBindackTimeoutFirstReg\
    \ has been\n   calculated as 1.5 times the default value of RetransTimer [12]\
    \ times\n   the default value of DupAddrDetectTransmits [13].\n   The value MinDelayBetweenRAs\
    \ overrides the value of the protocol\n   constant MIN_DELAY_BETWEEN_RAS, as specified\
    \ in RFC 2461 [12].  This\n   variable SHOULD be set to MinRtrAdvInterval, if\
    \ MinRtrAdvInterval is\n   less than 3 seconds.\n"
- title: 14.  IANA Considerations
  contents:
  - "14.  IANA Considerations\n   This document defines a new IPv6 protocol, the Mobility\
    \ Header,\n   described in Section 6.1.  This protocol has been assigned protocol\n\
    \   number 135.\n   This document also creates a new name space \"Mobility Header\
    \ Type\",\n   for the MH Type field in the Mobility Header.  The current message\n\
    \   types are described starting from Section 6.1.2, and are the\n   following:\n\
    \      0  Binding Refresh Request\n      1  Home Test Init\n      2  Care-of Test\
    \ Init\n      3  Home Test\n      4  Care-of Test\n      5  Binding Update\n \
    \     6  Binding Acknowledgement\n      7  Binding Error\n   Future values of\
    \ the MH Type can be allocated using Standards Action\n   or IESG Approval [10].\n\
    \   Furthermore, each mobility message may contain mobility options as\n   described\
    \ in Section 6.2.  This document defines a new name space\n   \"Mobility Option\"\
    \ to identify these options.  The current mobility\n   options are defined starting\
    \ from Section 6.2.2 and are the\n   following:\n      0  Pad1\n      1  PadN\n\
    \      2  Binding Refresh Advice\n      3  Alternate Care-of Address\n      4\
    \  Nonce Indices\n      5  Authorization Data\n   Future values of the Option\
    \ Type can be allocated using Standards\n   Action or IESG Approval [10].\n  \
    \ Finally, this document creates a third new name space \"Status Code\"\n   for\
    \ the Status field in the Binding Acknowledgement message. The\n   current values\
    \ are described in Section 6.1.8, and are the following:\n        0 Binding Update\
    \ accepted\n        1 Accepted but prefix discovery necessary\n      128 Reason\
    \ unspecified\n      129 Administratively prohibited\n      130 Insufficient resources\n\
    \      131 Home registration not supported\n      132 Not home subnet\n      133\
    \ Not home agent for this mobile node\n      134 Duplicate Address Detection failed\n\
    \      135 Sequence number out of window\n      136 Expired home nonce index\n\
    \      137 Expired care-of nonce index\n      138 Expired nonces\n      139 Registration\
    \ type change disallowed\n   Future values of the Status field can be allocated\
    \ using Standards\n   Action or IESG Approval [10].\n   All fields labeled \"\
    Reserved\" are only to be assigned through\n   Standards Action or IESG Approval.\n\
    \   This document also defines a new IPv6 destination option, the Home\n   Address\
    \ option, described in Section 6.3.  This option has been\n   assigned the Option\
    \ Type value 0xC9.\n   This document also defines a new IPv6 type 2 routing header,\n\
    \   described in Section 6.4.  The value 2 has been allocated by IANA.\n   In\
    \ addition, this document defines four ICMP message types, two used\n   as part\
    \ of the dynamic home agent address discovery mechanism, and\n   two used in lieu\
    \ of Router Solicitations and Advertisements when the\n   mobile node is away\
    \ from the home link.  These messages have been\n   assigned ICMPv6 type numbers\
    \ from the informational message range:\n   o  The Home Agent Address Discovery\
    \ Request message, described in\n      Section 6.5;\n   o  The Home Agent Address\
    \ Discovery Reply message, described in\n      Section 6.6;\n   o  The Mobile\
    \ Prefix Solicitation, described in Section 6.7; and\n   o  The Mobile Prefix\
    \ Advertisement, described in Section 6.8.\n   This document also defines two\
    \ new Neighbor Discovery [12] options,\n   which have been assigned Option Type\
    \ values within the option\n   numbering space for Neighbor Discovery messages:\n\
    \   o  The Advertisement Interval option, described in Section 7.3; and\n   o\
    \  The Home Agent Information option, described in Section 7.4.\n"
- title: 15.  Security Considerations
  contents:
  - '15.  Security Considerations

    '
- title: 15.1.  Threats
  contents:
  - "15.1.  Threats\n   Any mobility solution must protect itself against misuses\
    \ of the\n   mobility features and mechanisms.  In Mobile IPv6, most of the\n\
    \   potential threats are concerned with false Bindings, usually\n   resulting\
    \ in Denial-of-Service attacks.  Some of the threats also\n   pose potential for\
    \ Man-in-the-Middle, Hijacking, Confidentiality, and\n   Impersonation attacks.\
    \  The main threats this protocol protects\n   against are the following:\n  \
    \ o  Threats involving Binding Updates sent to home agents and\n      correspondent\
    \ nodes.  For instance, an attacker might claim that a\n      certain mobile node\
    \ is currently at a different location than it\n      really is.  If a home agent\
    \ accepts such spoofed information sent\n      to it, the mobile node might not\
    \ get traffic destined to it.\n      Similarly, a malicious (mobile) node might\
    \ use the home address of\n      a victim node in a forged Binding Update sent\
    \ to a correspondent\n      node.\n      These pose threats against confidentiality,\
    \ integrity, and\n      availability.  That is, an attacker might learn the contents\
    \ of\n      packets destined to another node by redirecting the traffic to\n \
    \     itself.  Furthermore, an attacker might use the redirected packets\n   \
    \   in an attempt to set itself as a Man-in-the-Middle between a\n      mobile\
    \ and a correspondent node.  This would allow the attacker to\n      impersonate\
    \ the mobile node, leading to integrity and availability\n      problems.\n  \
    \    A malicious (mobile) node might also send Binding Updates in which\n    \
    \  the care-of address is set to the address of a victim node.  If\n      such\
    \ Binding Updates were accepted, the malicious node could lure\n      the correspondent\
    \ node into sending potentially large amounts of\n      data to the victim; the\
    \ correspondent node's replies to messages\n      sent by the malicious mobile\
    \ node will be sent to the victim host\n      or network.  This could be used\
    \ to cause a Distributed Denial-of-\n      Service attack.  For example, the correspondent\
    \ node might be a\n      site that will send a high-bandwidth stream of video\
    \ to anyone who\n      asks for it.  Note that the use of flow-control protocols\
    \ such as\n      TCP does not necessarily defend against this type of attack,\n\
    \      because the attacker can fake the acknowledgements.  Even keeping\n   \
    \   TCP initial sequence numbers secret does not help, because the\n      attacker\
    \ can receive the first few segments (including the ISN) at\n      its own address,\
    \ and only then redirect the stream to the victim's\n      address.  These types\
    \ of attacks may also be directed to networks\n      instead of nodes.  Further\
    \ variations of this threat are described\n      elsewhere [27, 34].\n      An\
    \ attacker might also attempt to disrupt a mobile node's\n      communications\
    \ by replaying a Binding Update that the node had\n      sent earlier.  If the\
    \ old Binding Update was accepted, packets\n      destined for the mobile node\
    \ would be sent to its old location as\n      opposed to its current location.\n\
    \      In conclusion, there are Denial-of-Service, Man-in-the-Middle,\n      Confidentiality,\
    \ and Impersonation threats against the parties\n      involved in sending legitimate\
    \ Binding Updates, and Denial-of-\n      Service threats against any other party.\n\
    \   o  Threats associated with payload packets: Payload packets exchanged\n  \
    \    with mobile nodes are exposed to similar threats as that of\n      regular\
    \ IPv6 traffic.  However, Mobile IPv6 introduces the Home\n      Address destination\
    \ option, a new routing header type (type 2),\n      and uses tunneling headers\
    \ in the payload packets.  The protocol\n      must protect against potential\
    \ new threats involving the use of\n      these mechanisms.\n      Third parties\
    \ become exposed to a reflection threat via the Home\n      Address destination\
    \ option, unless appropriate security\n      precautions are followed.  The Home\
    \ Address destination option\n      could be used to direct response traffic toward\
    \ a node whose IP\n      address appears in the option.  In this case, ingress\
    \ filtering\n      would not catch the forged \"return address\" [36, 32].\n \
    \     A similar threat exists with the tunnels between the mobile node\n     \
    \ and the home agent.  An attacker might forge tunnel packets\n      between the\
    \ mobile node and the home agent, making it appear that\n      the traffic is\
    \ coming from the mobile node when it is not.  Note\n      that an attacker who\
    \ is able to forge tunnel packets would\n      typically also be able to forge\
    \ packets that appear to come\n      directly from the mobile node.  This is not\
    \ a new threat as such.\n      However, it may make it easier for attackers to\
    \ escape detection\n      by avoiding ingress filtering and packet tracing mechanisms.\n\
    \      Furthermore, spoofed tunnel packets might be used to gain access\n    \
    \  to the home network.\n      Finally, a routing header could also be used in\
    \ reflection\n      attacks, and in attacks designed to bypass firewalls.  The\n\
    \      generality of the regular routing header would allow circumvention\n  \
    \    of IP-address based rules in firewalls.  It would also allow\n      reflection\
    \ of traffic to other nodes.  These threats exist with\n      routing headers\
    \ in general, even if the usage that Mobile IPv6\n      requires is safe.\n  \
    \ o  Threats associated with dynamic home agent and mobile prefix\n      discovery.\n\
    \   o  Threats against the Mobile IPv6 security mechanisms themselves: An\n  \
    \    attacker might, for instance, lure the participants into executing\n    \
    \  expensive cryptographic operations or allocating memory for the\n      purpose\
    \ of keeping state.  The victim node would have no resources\n      left to handle\
    \ other tasks.\n   As a fundamental service in an IPv6 stack, Mobile IPv6 is expected\
    \ to\n   be deployed in most nodes of the IPv6 Internet.  The above threats\n\
    \   should therefore be considered as being applicable to the whole\n   Internet.\n\
    \   It should also be noted that some additional threats result from\n   movements\
    \ as such, even without the involvement of mobility\n   protocols.  Mobile nodes\
    \ must be capable to defend themselves in the\n   networks that they visit, as\
    \ typical perimeter defenses applied in\n   the home network no longer protect\
    \ them.\n"
- title: 15.2.  Features
  contents:
  - "15.2.  Features\n   This specification provides a series of features designed\
    \ to mitigate\n   the risk introduced by the threats listed above.  The main security\n\
    \   features are the following:\n   o  Reverse Tunneling as a mandatory feature.\n\
    \   o  Protection of Binding Updates sent to home agents.\n   o  Protection of\
    \ Binding Updates sent to correspondent nodes.\n   o  Protection against reflection\
    \ attacks that use the Home Address\n      destination option.\n   o  Protection\
    \ of tunnels between the mobile node and the home agent.\n   o  Closing routing\
    \ header vulnerabilities.\n   o  Mitigating Denial-of-Service threats to the Mobile\
    \ IPv6 security\n      mechanisms themselves.\n   The support for encrypted reverse\
    \ tunneling (see Section 11.3.1)\n   allows mobile nodes to defeat certain kinds\
    \ of traffic analysis.\n   Protecting those Binding Updates that are sent to home\
    \ agents and\n   those that are sent to arbitrary correspondent nodes requires\
    \ very\n   different security solutions due to the different situations.  Mobile\n\
    \   nodes and home agents are naturally expected to be subject to the\n   network\
    \ administration of the home domain.\n   Thus, they can and are supposed to have\
    \ a security association that\n   can be used to reliably authenticate the exchanged\
    \ messages.  See\n   Section 5.1 for the description of the protocol mechanisms,\
    \ and\n   Section 15.3 below for a discussion of the resulting level of\n   security.\n\
    \   It is expected that Mobile IPv6 route optimization will be used on a\n   global\
    \ basis between nodes belonging to different administrative\n   domains.  It would\
    \ be a very demanding task to build an\n   authentication infrastructure on this\
    \ scale.  Furthermore, a\n   traditional authentication infrastructure cannot\
    \ be easily used to\n   authenticate IP addresses because IP addresses can change\
    \ often.  It\n   is not sufficient to just authenticate the mobile nodes;\n  \
    \ Authorization to claim the right to use an address is needed as well.\n   Thus,\
    \ an \"infrastructureless\" approach is necessary.  The chosen\n   infrastructureless\
    \ method is described in Section 5.2, and Section\n   15.4 discusses the resulting\
    \ security level and the design rationale\n   of this approach.\n   Specific rules\
    \ guide the use of the Home Address destination option,\n   the routing header,\
    \ and the tunneling headers in the payload packets.\n   These rules are necessary\
    \ to remove the vulnerabilities associated\n   with their unrestricted use.  The\
    \ effect of the rules is discussed in\n   Section 15.7, Section 15.8, and Section\
    \ 15.9.\n   Denial-of-Service threats against Mobile IPv6 security mechanisms\n\
    \   themselves concern mainly the Binding Update procedures with\n   correspondent\
    \ nodes.  The protocol has been designed to limit the\n   effects of such attacks,\
    \ as will be described in Section 15.4.5.\n"
- title: 15.3.  Binding Updates to Home Agent
  contents:
  - "15.3.  Binding Updates to Home Agent\n   Signaling between the mobile node and\
    \ the home agent requires message\n   integrity.  This is necessary to assure\
    \ the home agent that a Binding\n   Update is from a legitimate mobile node. \
    \ In addition, correct\n   ordering and anti-replay protection are optionally\
    \ needed.\n   IPsec ESP protects the integrity of the Binding Updates and Binding\n\
    \   Acknowledgements by securing mobility messages between the mobile\n   node\
    \ and the home agent.\n   IPsec can provide anti-replay protection only if dynamic\
    \ keying is\n   used (which may not always be the case).  IPsec does not guarantee\n\
    \   correct ordering of packets, only that they have not been replayed.\n   Because\
    \ of this, sequence numbers within the Mobile IPv6 messages are\n   used to ensure\
    \ correct ordering (see Section 5.1).  However, if the\n   16 bit Mobile IPv6\
    \ sequence number space is cycled through, or the\n   home agent reboots and loses\
    \ its state regarding the sequence\n   numbers, replay and reordering attacks\
    \ become possible.  The use of\n   dynamic keying, IPsec anti-replay protection,\
    \ and the Mobile IPv6\n   sequence numbers can together prevent such attacks.\
    \  It is also\n   recommended that use of non-volatile storage be considered for\
    \ home\n   agents, to avoid losing their state.\n   A sliding window scheme is\
    \ used for the sequence numbers.  The\n   protection against replays and reordering\
    \ attacks without a key\n   management mechanism works when the attacker remembers\
    \ up to a\n   maximum of 2**15 Binding Updates.\n   The above mechanisms do not\
    \ show that the care-of address given in\n   the Binding Update is correct.  This\
    \ opens the possibility for\n   Denial-of-Service attacks against third parties.\
    \  However, since the\n   mobile node and home agent have a security association,\
    \ the home\n   agent can always identify an ill-behaving mobile node.  This allows\n\
    \   the home agent operator to discontinue the mobile node's service, and\n  \
    \ possibly take further actions based on the business relationship with\n   the\
    \ mobile node's owner.\n   Note that the use of a single pair of manually keyed\
    \ security\n   associations conflicts with the generation of a new home address\
    \ [18]\n   for the mobile node, or with the adoption of a new home subnet\n  \
    \ prefix.  This is because IPsec security associations are bound to the\n   used\
    \ addresses.  While certificate-based automatic keying alleviates\n   this problem\
    \ to an extent, it is still necessary to ensure that a\n   given mobile node cannot\
    \ send Binding Updates for the address of\n   another mobile node.  In general,\
    \ this leads to the inclusion of home\n   addresses in certificates in the Subject\
    \ AltName field.  This again\n   limits the introduction of new addresses without\
    \ either manual or\n   automatic procedures to establish new certificates.  Therefore,\
    \ this\n   specification restricts the generation of new home addresses (for any\n\
    \   reason) to those situations where a security association or\n   certificate\
    \ for the new address already exists.  (Appendix B.4 lists\n   the improvement\
    \ of security for new addresses as one of the future\n   developments for Mobile\
    \ IPv6.)\n   Support for IKE has been specified as optional.  The following should\n\
    \   be observed about the use of manual keying:\n   o  As discussed above, with\
    \ manually keyed IPsec, only a limited form\n      of protection exists against\
    \ replay and reordering attacks.  A\n      vulnerability exists if either the\
    \ sequence number space is cycled\n      through, or if the home agent reboots\
    \ and forgets its sequence\n      numbers (and uses volatile memory to store the\
    \ sequence numbers).\n      Assuming the mobile node moves continuously every\
    \ 10 minutes, it\n      takes roughly 455 days before the sequence number space\
    \ has been\n      cycled through.  Typical movement patterns rarely reach this\
    \ high\n      frequency today.\n   o  A mobile node and its home agent belong\
    \ to the same domain.  If\n      this were not the case, manual keying would not\
    \ be possible [28],\n      but in Mobile IPv6 only these two parties need to know\
    \ the\n      manually configured keys.  Similarly, we note that Mobile IPv6\n\
    \      employs standard block ciphers in IPsec, and is not vulnerable to\n   \
    \   problems associated with stream ciphers and manual keying.\n   o  It is expected\
    \ that the owner of the mobile node and the\n      administrator of the home agent\
    \ agree on the used keys and other\n      parameters with some off-line mechanism.\n\
    \   The use of IKEv1 with Mobile IPv6 is documented in more detail in\n   [21].\
    \  The following should be observed from the use of IKEv1:\n   o  It is necessary\
    \ to prevent a mobile node from claiming another\n      mobile node's home address.\
    \  The home agent must verify that the\n      mobile node trying to negotiate\
    \ the SA for a particular home\n      address is authorized for that home address.\
    \  This implies that\n      even with the use of IKE, a policy entry needs to\
    \ be configured\n      for each home address served by the home agent.\n     \
    \ It may be possible to include home addresses in the Subject\n      AltName field\
    \ of certificate to avoid this.  However,\n      implementations are not guaranteed\
    \ to support the use of a\n      particular IP address (care-of address) while\
    \ another address\n      (home address) appears in the certificate.  In any case,\
    \ even this\n      approach would require user-specific tasks in the certificate\n\
    \      authority.\n   o  If preshared secret authentication is used, IKEv1 main\
    \ mode cannot\n      be used.  Aggressive mode or group preshared secrets need\
    \ to be\n      used with corresponding security implications instead.\n      Note\
    \ that, like many other issues, this is a general IKEv1 issue\n      related to\
    \ the ability to use different IP addresses, and not\n      specifically related\
    \ to Mobile IPv6.  For further information, see\n      Section 4.4 in [21].\n\
    \   o  Due to the problems outlined in Section 11.3.2, IKE phase 1\n      between\
    \ the mobile node and its home agent is established using\n      the mobile node's\
    \ current care-of address.  This implies that when\n      the mobile node moves\
    \ to a new location, it may have to re-\n      establish phase 1.  A Key Management\
    \ Mobility Capability (K) flag\n      is provided for implementations that can\
    \ update the IKE phase 1\n      endpoints without re-establishing phase 1, but\
    \ the support for\n      this behavior is optional.\n   o  When certificates are\
    \ used, IKE fragmentation can occur as\n      discussed in Section 7 in [21].\n\
    \   o  Nevertheless, even if per-mobile node configuration is required\n     \
    \ with IKE, an important benefit of IKE is that it automates the\n      negotiation\
    \ of cryptographic parameters, including the SPIs,\n      cryptographic algorithms,\
    \ and so on.  Thus, less configuration\n      information is needed.\n   o  The\
    \ frequency of movements in some link layers or deployment\n      scenarios may\
    \ be high enough to make replay and reordering attacks\n      possible, if only\
    \ manual keying is used.  IKE SHOULD be used in\n      such cases.  Potentially\
    \ vulnerable scenarios involve continuous\n      movement through small cells,\
    \ or uncontrolled alternation between\n      available network attachment points.\n\
    \   o  Similarly, in some deployment scenarios the number of mobile nodes\n  \
    \    may be very large.  In these cases, it can be necessary to use\n      automatic\
    \ mechanisms to reduce the management effort in the\n      administration of cryptographic\
    \ parameters, even if some per-\n      mobile node configuration is always needed.\
    \  IKE SHOULD also be\n      used in such cases.\n   o  Other automatic key management\
    \ mechanisms exist beyond IKEv1, but\n      this document does not address the\
    \ issues related to them.  We\n      note, however, that most of the above discussion\
    \ applies to IKEv2\n      [30] as well, at least as it is currently specified.\n"
- title: 15.4.  Binding Updates to Correspondent Nodes
  contents:
  - "15.4.  Binding Updates to Correspondent Nodes\n   The motivation for designing\
    \ the return routability procedure was to\n   have sufficient support for Mobile\
    \ IPv6, without creating significant\n   new security problems.  The goal for\
    \ this procedure was not to\n   protect against attacks that were already possible\
    \ before the\n   introduction of Mobile IPv6.\n   The next sections will describe\
    \ the security properties of the used\n   method, both from the point of view\
    \ of possible on-path attackers who\n   can see those cryptographic values that\
    \ have been sent in the clear\n   (Section 15.4.2 and Section 15.4.3) and from\
    \ the point of view of\n   other attackers (Section 15.4.6).\n"
- title: 15.4.1.  Overview
  contents:
  - "15.4.1.  Overview\n   The chosen infrastructureless method verifies that the\
    \ mobile node is\n   \"live\" (that is, it responds to probes) at its home and\
    \ care-of\n   addresses.  Section 5.2 describes the return routability procedure\
    \ in\n   detail.  The procedure uses the following principles:\n   o  A message\
    \ exchange verifies that the mobile node is reachable at\n      its addresses,\
    \ i.e., is at least able to transmit and receive\n      traffic at both the home\
    \ and care-of addresses.\n   o  The eventual Binding Update is cryptographically\
    \ bound to the\n      tokens supplied in the exchanged messages.\n   o  Symmetric\
    \ exchanges are employed to avoid the use of this protocol\n      in reflection\
    \ attacks.  In a symmetric exchange, the responses are\n      always sent to the\
    \ same address the request was sent from.\n   o  The correspondent node operates\
    \ in a stateless manner until it\n      receives a fully authorized Binding Update.\n\
    \   o  Some additional protection is provided by encrypting the tunnels\n    \
    \  between the mobile node and home agent with IPsec ESP.  As the\n      tunnel\
    \ also transports the nonce exchanges, the ability of\n      attackers to see\
    \ these nonces is limited.  For instance, this\n      prevents attacks from being\
    \ launched from the mobile node's\n      current foreign link, even when no link-layer\
    \ confidentiality is\n      available.\n      The resulting level of security\
    \ is in theory the same even without\n      this additional protection: the return\
    \ routability tokens are\n      still exposed only to one path within the whole\
    \ Internet.\n      However, the mobile nodes are often found on an insecure link,\n\
    \      such as a public access Wireless LAN.  Thus, in many cases, this\n    \
    \  addition makes a practical difference.\n   For further information about the\
    \ design rationale of the return\n   routability procedure, see [27, 34, 33, 32].\
    \  The mechanisms used\n   have been adopted from these documents.\n"
- title: 15.4.2.  Achieved Security Properties
  contents:
  - "15.4.2.  Achieved Security Properties\n   The return routability procedure protects\
    \ Binding Updates against all\n   attackers who are unable to monitor the path\
    \ between the home agent\n   and the correspondent node.  The procedure does not\
    \ defend against\n   attackers who can monitor this path.  Note that such attackers\
    \ are in\n   any case able to mount an active attack against the mobile node when\n\
    \   it is at its home location.  The possibility of such attacks is not\n   an\
    \ impediment to the deployment of Mobile IPv6 because these attacks\n   are possible\
    \ regardless of whether or not Mobile IPv6 is in use.\n   This procedure also\
    \ protects against Denial-of-Service attacks in\n   which the attacker pretends\
    \ to be mobile, but uses the victim's\n   address as the care-of address.  This\
    \ would cause the correspondent\n   node to send the victim some unexpected traffic.\
    \  This procedure\n   defends against these attacks by requiring at least the\
    \ passive\n   presence of the attacker at the care-of address or on the path from\n\
    \   the correspondent to the care-of address.  Normally, this will be the\n  \
    \ mobile node.\n"
- title: 15.4.3.  Comparison to Regular IPv6 Communications
  contents:
  - "15.4.3.  Comparison to Regular IPv6 Communications\n   This section discusses\
    \ the protection offered by the return\n   routability method by comparing it\
    \ to the security of regular IPv6\n   communications.  We will divide vulnerabilities\
    \ into three classes:\n   (1) those related to attackers on the local network\
    \ of the mobile\n   node, home agent, or the correspondent node, (2) those related\
    \ to\n   attackers on the path between the home network and the correspondent\n\
    \   node, and (3) off-path attackers, i.e., the rest of the Internet.\n   We will\
    \ now discuss the vulnerabilities of regular IPv6\n   communications.  The on-link\
    \ vulnerabilities of IPv6 communications\n   include Denial-of-Service, Masquerading,\
    \ Man-in-the-Middle,\n   Eavesdropping, and other attacks.  These attacks can\
    \ be launched\n   through spoofing Router Discovery, Neighbor Discovery and other\
    \ IPv6\n   mechanisms.  Some of these attacks can be prevented with the use of\n\
    \   cryptographic protection in the packets.\n   A similar situation exists with\
    \ on-path attackers.  That is, without\n   cryptographic protection, the traffic\
    \ is completely vulnerable.\n   Assuming that attackers have not penetrated the\
    \ security of the\n   Internet routing protocols, attacks are much harder to launch\
    \ from\n   off-path locations.  Attacks that can be launched from these\n   locations\
    \ are mainly Denial-of-Service attacks, such as flooding and/\n   or reflection\
    \ attacks.  It is not possible for an off-path attacker\n   to become a Man-in-the-Middle.\n\
    \   Next, we will consider the vulnerabilities that exist when IPv6 is\n   used\
    \ together with Mobile IPv6 and the return routability procedure.\n   On the local\
    \ link, the vulnerabilities are the same as those in IPv6,\n   but Masquerade\
    \ and Man-in-the-Middle attacks can now also be launched\n   against future communications,\
    \ and not just against current\n   communications.  If a Binding Update was sent\
    \ while the attacker was\n   present on the link, its effects remain for the lifetime\
    \ of the\n   binding.  This happens even if the attacker moves away from the link.\n\
    \   In contrast, an attacker who uses only plain IPv6 generally has to\n   stay\
    \ on the link in order to continue the attack.  Note that in order\n   to launch\
    \ these new attacks, the IP address of the victim must be\n   known.  This makes\
    \ this attack feasible, mainly in the context of\n   well-known interface IDs,\
    \ such as those already appearing in the\n   traffic on the link or registered\
    \ in the DNS.\n   On-path attackers can exploit similar vulnerabilities as in\
    \ regular\n   IPv6.  There are some minor differences, however.  Masquerade, Man-\n\
    \   in-the-Middle, and Denial-of-Service attacks can be launched with\n   just\
    \ the interception of a few packets, whereas in regular IPv6 it is\n   necessary\
    \ to intercept every packet.  The effect of the attacks is\n   the same regardless\
    \ of the method, however.  In any case, the most\n   difficult task an attacker\
    \ faces in these attacks is getting on the\n   right path.\n   The vulnerabilities\
    \ for off-path attackers are the same as in regular\n   IPv6.  Those nodes that\
    \ are not on the path between the home agent\n   and the correspondent node will\
    \ not be able to receive the home\n   address probe messages.\n   In conclusion,\
    \ we can state the following main results from this\n   comparison:\n   o  Return\
    \ routability prevents any off-path attacks beyond those that\n      are already\
    \ possible in regular IPv6.  This is the most important\n      result, preventing\
    \ attackers on the Internet from exploiting any\n      vulnerabilities.\n   o\
    \  Vulnerabilities to attackers on the home agent link, the\n      correspondent\
    \ node link, and the path between them are roughly the\n      same as in regular\
    \ IPv6.\n   o  However, one difference is that in basic IPv6 an on-path attacker\n\
    \      must be constantly present on the link or the path, whereas with\n    \
    \  Mobile IPv6, an attacker can leave a binding behind after moving\n      away.\n\
    \      For this reason, this specification limits the creation of\n      bindings\
    \ to at most MAX_TOKEN_LIFETIME seconds after the last\n      routability check\
    \ has been performed, and limits the duration of a\n      binding to at most MAX_RR_BINDING_LIFETIME\
    \ seconds.  With these\n      limitations, attackers cannot take any practical\
    \ advantages of\n      this vulnerability.\n   o  There are some other minor differences,\
    \ such as an effect to the\n      Denial-of-Service vulnerabilities.  These can\
    \ be considered to be\n      insignificant.\n   o  The path between the home agent\
    \ and a correspondent node is\n      typically easiest to attack on the links\
    \ at either end, in\n      particular if these links are publicly accessible wireless\
    \ LANs.\n      Attacks against the routers or switches on the path are typically\n\
    \      harder to accomplish.  The security on layer 2 of the links plays\n   \
    \   then a major role in the resulting overall network security.\n      Similarly,\
    \ security of IPv6 Neighbor and Router Discovery on these\n      links has a large\
    \ impact.  If these were secured using some new\n      technology in the future,\
    \ this could change the situation\n      regarding the easiest point of attack.\n\
    \   For a more in-depth discussion of these issues, see [32].\n"
- title: 15.4.4.  Replay Attacks
  contents:
  - "15.4.4.  Replay Attacks\n   The return routability procedure also protects the\
    \ participants\n   against replayed Binding Updates.  The attacker is unable replay\
    \ the\n   same message due to the sequence number which is a part of the\n   Binding\
    \ Update.  It is also unable to modify the Binding Update since\n   the MAC verification\
    \ would fail after such a modification.\n   Care must be taken when removing bindings\
    \ at the correspondent node,\n   however.  If a binding is removed while the nonce\
    \ used in its\n   creation is still valid, an attacker could replay the old Binding\n\
    \   Update.  Rules outlined in Section 5.2.8 ensure that this cannot\n   happen.\n"
- title: 15.4.5.  Denial-of-Service Attacks
  contents:
  - "15.4.5.  Denial-of-Service Attacks\n   The return routability procedure has protection\
    \ against resource\n   exhaustion Denial-of-Service attacks.  The correspondent\
    \ nodes do not\n   retain any state about individual mobile nodes until an authentic\n\
    \   Binding Update arrives.  This is achieved through the construct of\n   keygen\
    \ tokens from the nonces and node keys that are not specific to\n   individual\
    \ mobile nodes.  The keygen tokens can be reconstructed by\n   the correspondent\
    \ node, based on the home and care-of address\n   information that arrives with\
    \ the Binding Update.  This means that\n   the correspondent nodes are safe against\
    \ memory exhaustion attacks\n   except where on-path attackers are concerned.\
    \  Due to the use of\n   symmetric cryptography, the correspondent nodes are relatively\
    \ safe\n   against CPU resource exhaustion attacks as well.\n   Nevertheless,\
    \ as [27] describes, there are situations in which it is\n   impossible for the\
    \ mobile and correspondent nodes to determine if\n   they actually need a binding\
    \ or whether they just have been fooled\n   into believing so by an attacker.\
    \  Therefore, it is necessary to\n   consider situations where such attacks are\
    \ being made.\n   Even if route optimization is a very important optimization,\
    \ it is\n   still only an optimization.  A mobile node can communicate with a\n\
    \   correspondent node even if the correspondent refuses to accept any\n   Binding\
    \ Updates.  However, performance will suffer because packets\n   from the correspondent\
    \ node to the mobile node will be routed via the\n   mobile's home agent rather\
    \ than a more direct route.  A correspondent\n   node can protect itself against\
    \ some of these resource exhaustion\n   attacks as follows.  If the correspondent\
    \ node is flooded with a\n   large number of Binding Updates that fail the cryptographic\
    \ integrity\n   checks, it can stop processing Binding Updates.  If a correspondent\n\
    \   node finds that it is spending more resources on checking bogus\n   Binding\
    \ Updates than it is likely to save by accepting genuine\n   Binding Updates,\
    \ then it may silently discard some or all Binding\n   Updates without performing\
    \ any cryptographic operations.\n   Layers above IP can usually provide additional\
    \ information to help\n   decide if there is a need to establish a binding with\
    \ a specific\n   peer.  For example, TCP knows if the node has a queue of data\
    \ that it\n   is trying to send to a peer.  An implementation of this specification\n\
    \   is not required to make use of information from higher protocol\n   layers,\
    \ but some implementations are likely to be able to manage\n   resources more\
    \ effectively by making use of such information.\n   We also require that all\
    \ implementations be capable of\n   administratively disabling route optimization.\n"
- title: 15.4.6.  Key Lengths
  contents:
  - "15.4.6.  Key Lengths\n   Attackers can try to break the return routability procedure\
    \ in many\n   ways.  Section 15.4.2 discusses the situation where the attacker\
    \ can\n   see the cryptographic values sent in the clear, and Section 15.4.3\n\
    \   discusses the impact this has on IPv6 communications.  This section\n   discusses\
    \ whether attackers can guess the correct values without\n   seeing them.\n  \
    \ While the return routability procedure is in progress, 64 bit cookies\n   are\
    \ used to protect spoofed responses.  This is believed to be\n   sufficient, given\
    \ that to blindly spoof a response a very large\n   number of messages would have\
    \ to be sent before success would be\n   probable.\n   The tokens used in the\
    \ return routability procedure provide together\n   128 bits of information. \
    \ This information is used internally as\n   input to a hash function to produce\
    \ a 160 bit quantity suitable for\n   producing the keyed hash in the Binding\
    \ Update using the HMAC_SHA1\n   algorithm.  The final keyed hash length is 96\
    \ bits.  The limiting\n   factors in this case are the input token lengths and\
    \ the final keyed\n   hash length.  The internal hash function application does\
    \ not reduce\n   the entropy.\n   The 96 bit final keyed hash is of typical size\
    \ and is believed to be\n   secure.  The 128 bit input from the tokens is broken\
    \ in two pieces,\n   the home keygen token and the care-of keygen token.  An attacker\
    \ can\n   try to guess the correct cookie value, but again this would require\
    \ a\n   large number of messages (an the average 2**63 messages for one or\n \
    \  2**127 for two).  Furthermore, given that the cookies are valid only\n   for\
    \ a short period of time, the attack has to keep a high constant\n   message rate\
    \ to achieve a lasting effect.  This does not appear\n   practical.\n   When the\
    \ mobile node is returning home, it is allowed to use just the\n   home keygen\
    \ token of 64 bits.  This is less than 128 bits, but\n   attacking it blindly\
    \ would still require a large number of messages\n   to be sent.  If the attacker\
    \ is on the path and capable of seeing the\n   Binding Update, it could conceivably\
    \ break the keyed hash with brute\n   force.  However, in this case the attacker\
    \ has to be on the path,\n   which appears to offer easier ways for denial-of-service\
    \ than\n   preventing route optimization.\n"
- title: 15.5.  Dynamic Home Agent Address Discovery
  contents:
  - "15.5.  Dynamic Home Agent Address Discovery\n   The dynamic home agent address\
    \ discovery function could be used to\n   learn the addresses of home agents in\
    \ the home network.\n   The ability to learn addresses of nodes may be useful\
    \ to attackers\n   because brute-force scanning of the address space is not practical\n\
    \   with IPv6.  Thus, they could benefit from any means which make\n   mapping\
    \ the networks easier.  For example, if a security threat\n   targeted at routers\
    \ or even home agents is discovered, having a\n   simple ICMP mechanism to easily\
    \ find out possible targets may prove\n   to be an additional (though minor) security\
    \ risk.\n   Apart from discovering the address(es) of home agents, attackers will\n\
    \   not be able to learn much from this information, and mobile nodes\n   cannot\
    \ be tricked into using wrong home agents, as all other\n   communication with\
    \ the home agents is secure.\n"
- title: 15.6.  Mobile Prefix Discovery
  contents:
  - "15.6.  Mobile Prefix Discovery\n   The mobile prefix discovery function may leak\
    \ interesting information\n   about network topology and prefix lifetimes to eavesdroppers;\
    \ for\n   this reason, requests for this information has to be authenticated.\n\
    \   Responses and unsolicited prefix information needs to be\n   authenticated\
    \ to prevent the mobile nodes from being tricked into\n   believing false information\
    \ about the prefixes and possibly\n   preventing communications with the existing\
    \ addresses.  Optionally,\n   encryption may be applied to prevent leakage of\
    \ the prefix\n   information.\n"
- title: 15.7.  Tunneling via the Home Agent
  contents:
  - "15.7.  Tunneling via the Home Agent\n   Tunnels between the mobile node and the\
    \ home agent can be protected\n   by ensuring proper use of source addresses,\
    \ and optional\n   cryptographic protection.  These procedures are discussed in\
    \ Section\n   5.5.\n   Binding Updates to the home agents are secure.  When receiving\n\
    \   tunneled traffic, the home agent verifies that the outer IP address\n   corresponds\
    \ to the current location of the mobile node.  This acts as\n   a weak form of\
    \ protection against spoofing packets that appear to\n   come from the mobile\
    \ node.  This is particularly useful, if no end-\n   to-end security is being\
    \ applied between the mobile and correspondent\n   nodes.  The outer IP address\
    \ check prevents attacks where the\n   attacker is controlled by ingress filtering.\
    \  It also prevents\n   attacks when the attacker does not know the current care-of\
    \ address\n   of the mobile node.  Attackers who know the care-of address and\
    \ are\n   not controlled by ingress filtering could still send traffic through\n\
    \   the home agent.  This includes attackers on the same local link as\n   the\
    \ mobile node is currently on.  But such attackers could send\n   packets that\
    \ appear to come from the mobile node without attacking\n   the tunnel; the attacker\
    \ could simply send packets with the source\n   address set to the mobile node's\
    \ home address.  However, this attack\n   does not work if the final destination\
    \ of the packet is in the home\n   network, and some form of perimeter defense\
    \ is being applied for\n   packets sent to those destinations.  In such cases\
    \ it is recommended\n   that either end-to-end security or additional tunnel protection\
    \ be\n   applied, as is usual in remote access situations.\n   Home agents and\
    \ mobile nodes may use IPsec ESP to protect payload\n   packets tunneled between\
    \ themselves.  This is useful for protecting\n   communications against attackers\
    \ on the path of the tunnel.\n   When site local home addresses are used, reverse\
    \ tunneling can be\n   used to send site local traffic from another location.\n\
    \   Administrators should be aware of this when allowing such home\n   addresses.\
    \  In particular, the outer IP address check described above\n   is not sufficient\
    \ against all attackers.  The use of encrypted\n   tunnels is particularly useful\
    \ for these kinds of home addresses.\n"
- title: 15.8.  Home Address Option
  contents:
  - "15.8.  Home Address Option\n   When the mobile node sends packets directly to\
    \ the correspondent\n   node, the Source Address field of the packet's IPv6 header\
    \ is the\n   care-of address.  Therefore, ingress filtering [26] works in the\n\
    \   usual manner even for mobile nodes, as the Source Address is\n   topologically\
    \ correct.  The Home Address option is used to inform the\n   correspondent node\
    \ of the mobile node's home address.\n   However, the care-of address in the Source\
    \ Address field does not\n   survive in replies sent by the correspondent node\
    \ unless it has a\n   binding for this mobile node.  Also, not all attacker tracing\n\
    \   mechanisms work when packets are being reflected through\n   correspondent\
    \ nodes using the Home Address option.  For these\n   reasons, this specification\
    \ restricts the use of the Home Address\n   option.  It may only be used when\
    \ a binding has already been\n   established with the participation of the node\
    \ at the home address,\n   as described in Section 5.5 and Section 6.3.  This\
    \ prevents\n   reflection attacks through the use of the Home Address option.\
    \  It\n   also ensures that the correspondent nodes reply to the same address\n\
    \   that the mobile node sends traffic from.\n   No special authentication of\
    \ the Home Address option is required\n   beyond the above, but note that if the\
    \ IPv6 header of a packet is\n   covered by IPsec Authentication Header, then\
    \ that authentication\n   covers the Home Address option as well.  Thus, even\
    \ when\n   authentication is used in the IPv6 header, the security of the Source\n\
    \   Address field in the IPv6 header is not compromised by the presence\n   of\
    \ a Home Address option.  Without authentication of the packet, any\n   field\
    \ in the IPv6 header, including the Source Address field or any\n   other part\
    \ of the packet and the Home Address option can be forged or\n   modified in transit.\
    \  In this case, the contents of the Home Address\n   option is no more suspect\
    \ than any other part of the packet.\n"
- title: 15.9.  Type 2 Routing Header
  contents:
  - "15.9.  Type 2 Routing Header\n   The definition of the type 2 routing header\
    \ is described in Section\n   6.4.  This definition and the associated processing\
    \ rules have been\n   chosen so that the header cannot be used for what is traditionally\n\
    \   viewed as source routing.  In particular, the Home Address in the\n   routing\
    \ header will always have to be assigned to the home address of\n   the receiving\
    \ node; otherwise the packet will be dropped.\n   Generally, source routing has\
    \ a number of security concerns.  These\n   include the automatic reversal of\
    \ unauthenticated source routes\n   (which is an issue for IPv4, but not for IPv6).\
    \  Another concern is\n   the ability to use source routing to \"jump\" between\
    \ nodes inside, as\n   well as outside a firewall.  These security concerns are\
    \ not issues\n   in Mobile IPv6, due to the rules mentioned above.\n   In essence\
    \ the semantics of the type 2 routing header is the same as\n   a special form\
    \ of IP-in-IP tunneling where the inner and outer source\n   addresses are the\
    \ same.\n   This implies that a device which implements the filtering of packets\n\
    \   should be able to distinguish between a type 2 routing header and\n   other\
    \ routing headers, as required in Section 8.3.  This is necessary\n   in order\
    \ to allow Mobile IPv6 traffic while still having the option\n   of filtering\
    \ out other uses of routing headers.\n"
- title: 16.  Contributors
  contents:
  - "16.  Contributors\n   Tuomas Aura, Mike Roe, Greg O'Shea, Pekka Nikander, Erik\
    \ Nordmark,\n   and Michael Thomas worked on the return routability protocols\n\
    \   eventually led to the procedures used in this protocol.  The\n   procedures\
    \ described in [34] were adopted in the protocol.\n   Significant contributions\
    \ were made by members of the Mobile IPv6\n   Security Design Team, including\
    \ (in alphabetical order) Gabriel\n   Montenegro, Erik Nordmark and Pekka Nikander.\n"
- title: 17.  Acknowledgements
  contents:
  - "17.  Acknowledgements\n   We would like to thank the members of the Mobile IP\
    \ and IPng Working\n   Groups for their comments and suggestions on this work.\
    \  We would\n   particularly like to thank (in alphabetical order) Fred Baker,\
    \ Josh\n   Broch, Samita Chakrabarti, Robert Chalmers, Noel Chiappa, Greg Daley,\n\
    \   Vijay Devarapalli, Rich Draves, Francis Dupont, Thomas Eklund, Jun-\n   Ichiro\
    \ Itojun Hagino, Brian Haley, Marc Hasson, John Ioannidis, James\n   Kempf, Rajeev\
    \ Koodli, Krishna Kumar, T.J. Kniveton, Joe Lau, Jiwoong\n   Lee, Aime Le Rouzic,\
    \ Vesa-Matti Mantyla, Kevin Miles, Glenn Morrow,\n   Thomas Narten, Karen Nielsen,\
    \ Simon Nybroe, David Oran, Brett\n   Pentland, Lars Henrik Petander, Basavaraj\
    \ Patil, Mohan Parthasarathy,\n   Alexandru Petrescu, Mattias Petterson, Ken Powell,\
    \ Phil Roberts, Ed\n   Remmell, Patrice Romand, Luis A. Sanchez, Jeff Schiller,\
    \ Pekka\n   Savola, Arvind Sevalkar, Keiichi Shima, Tom Soderlund, Hesham\n  \
    \ Soliman, Jim Solomon, Tapio Suihko, Dave Thaler, Benny Van Houdt,\n   Jon-Olov\
    \ Vatn, Carl E. Williams, Vladislav Yasevich, Alper Yegin, and\n   Xinhua Zhao,\
    \ for their detailed reviews of earlier versions of this\n   document.  Their\
    \ suggestions have helped to improve both the design\n   and presentation of the\
    \ protocol.\n   We would also like to thank the participants of the Mobile IPv6\n\
    \   testing event (1999), implementors who participated in Mobile IPv6\n   interoperability\
    \ testing at Connectathons (2000, 2001, 2002, and\n   2003), and the participants\
    \ at the ETSI interoperability testing\n   (2000, 2002).  Finally, we would like\
    \ to thank the TAHI project who\n   has provided test suites for Mobile IPv6.\n"
- title: 18.  References
  contents:
  - '18.  References

    '
- title: 18.1.  Normative References
  contents:
  - "18.1.  Normative References\n   [1]   Eastlake 3rd., D., Crocker, S. and J. Schiller,\
    \ \"Randomness\n         Recommendations for Security\", RFC 1750, December 1994.\n\
    \   [2]   Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n \
    \        Levels\", BCP 14, RFC 2119, March 1997.\n   [3]   Hinden, R. and S. Deering,\
    \ \"Internet Protocol Version 6 (IPv6)\n         Addressing Architecture\", RFC\
    \ 3513, April 2003.\n   [4]   Kent, S. and R. Atkinson, \"Security Architecture\
    \ for the\n         Internet Protocol\", RFC 2401, November 1998.\n   [5]   Kent,\
    \ S. and R. Atkinson, \"IP Authentication Header\", RFC 2402,\n         November\
    \ 1998.\n   [6]   Kent, S. and R. Atkinson, \"IP Encapsulating Security Payload\n\
    \         (ESP)\", RFC 2406, November 1998.\n   [7]   Piper, D., \"The Internet\
    \ IP Security Domain of Interpretation\n         for ISAKMP\", RFC 2407, November\
    \ 1998.\n   [8]   Maughan, D., Schertler, M., Schneider, M. and J. Turner,\n \
    \        \"Internet Security Association and Key Management Protocol\n       \
    \  (ISAKMP)\", RFC 2408, November 1998.\n   [9]   Harkins, D. and D. Carrel, \"\
    The Internet Key Exchange (IKE)\",\n         RFC 2409, November 1998.\n   [10]\
    \  Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA\n         Considerations\
    \ Section in RFCs\", BCP 26, RFC 2434, October\n         1998.\n   [11]  Deering,\
    \ S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6)\n         Specification\"\
    , RFC 2460, December 1998.\n   [12]  Narten, T., Nordmark, E. and W. Simpson,\
    \ \"Neighbor Discovery\n         for IP Version 6 (IPv6)\", RFC 2461, December\
    \ 1998.\n   [13]  Thomson, S. and T. Narten, \"IPv6 Stateless Address\n      \
    \   Autoconfiguration\", RFC 2462, December 1998.\n   [14]  Conta, A. and S. Deering,\
    \ \"Internet Control Message Protocol\n         (ICMPv6) for the Internet Protocol\
    \ Version 6 (IPv6)\n         Specification\", RFC 2463, December 1998.\n   [15]\
    \  Conta, A. and S. Deering, \"Generic Packet Tunneling in IPv6\n         Specification\"\
    , RFC 2473, December 1998.\n   [16]  Johnson, D. and S. Deering, \"Reserved IPv6\
    \ Subnet Anycast\n         Addresses\", RFC 2526, March 1999.\n   [17]  Deering,\
    \ S., Fenner, W. and B. Haberman, \"Multicast Listener\n         Discovery (MLD)\
    \ for IPv6\", RFC 2710, October 1999.\n   [18]  Narten, T. and R. Draves, \"Privacy\
    \ Extensions for Stateless\n         Address Autoconfiguration in IPv6\", RFC\
    \ 3041, January 2001.\n   [19]  Reynolds, J., Ed., \"Assigned Numbers: RFC 1700\
    \ is Replaced by\n         an On-line Database\", RFC 3232, January 2002.\n  \
    \ [20]  National Institute of Standards and Technology, \"Secure Hash\n      \
    \   Standard\", FIPS PUB 180-1, April 1995, <http://\n         www.itl.nist.gov/fipspubs/fip180-1.htm>.\n\
    \   [21]  Arkko, J., Devarapalli, V. and F. Dupont, \"Using IPsec to\n       \
    \  Protect Mobile IPv6 Signaling Between Mobile Nodes and Home\n         Agents\"\
    , RFC 3776, June 2004.\n"
- title: 18.2.  Informative References
  contents:
  - "18.2.  Informative References\n   [22]  Perkins, C., Ed., \"IP Mobility Support\
    \ for IPv4\", RFC 3344,\n         August 2002.\n   [23]  Perkins, C., \"IP Encapsulation\
    \ within IP\", RFC 2003, October\n         1996.\n   [24]  Perkins, C., \"Minimal\
    \ Encapsulation within IP\", RFC 2004,\n         October 1996.\n   [25]  Krawczyk,\
    \ H., Bellare, M. and R. Canetti, \"HMAC: Keyed-Hashing\n         for Message\
    \ Authentication\", RFC 2104, February 1997.\n   [26]  Ferguson, P. and D. Senie,\
    \ \"Network Ingress Filtering:\n         Defeating Denial of Service Attacks which\
    \ employ IP Source\n         Address Spoofing\", BCP 38, RFC 2827, May 2000.\n\
    \   [27]  Aura, T. and J. Arkko, \"MIPv6 BU Attacks and Defenses\", Work in\n\
    \         Progress, March 2002.\n   [28]  Bellovin, S., \"Guidelines for Mandating\
    \ Automated Key\n         Management\", Work in Progress, August 2003.\n   [29]\
    \  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins, C. and\n         M.\
    \ Carney, \"Dynamic Host Configuration Protocol for IPv6\n         (DHCPv6)\"\
    , RFC 3315, July 2003.\n   [30]  Kaufman, C., \"Internet Key Exchange (IKEv2)\
    \ Protocol\", Work in\n         Progress, April 2003.\n   [31]  Draves, R., \"\
    Default Address Selection for Internet Protocol\n         version 6 (IPv6)\",\
    \ RFC 3484, February 2003.\n   [32]  Nikander, P., Aura, T., Arkko, J., Montenegro,\
    \ G. and E.\n         Nordmark, \"Mobile IP version 6 Route Optimization Security\n\
    \         Design Background\", Work in Progress, April 2003.\n   [33]  Nordmark,\
    \ E., \"Securing MIPv6 BUs using return routability\n         (BU3WAY)\", Work\
    \ in Progress, November 2001.\n   [34]  Roe, M., Aura, T., O'Shea, G. and J. Arkko,\
    \ \"Authentication of\n         Mobile IPv6 Binding Updates and Acknowledgments\"\
    , Work in\n         Progress, March 2002.\n   [35]  Savola, P., \"Use of /127\
    \ Prefix Length Between Routers\n         Considered Harmful\", RFC 3627, September\
    \ 2003.\n   [36]  Savola, P., \"Security of IPv6 Routing Header and Home Address\n\
    \         Options\", Work in Progress, December 2002.\n   [37]  Vida, R. and L.\
    \ Costa, Eds., \"Multicast Listener Discovery\n         Version 2 (MLDv2) for\
    \ IPv6\", RFC 3810, June 2004.\n"
- title: Appendix A.  Future Extensions
  contents:
  - 'Appendix A.  Future Extensions

    '
- title: A.1.  Piggybacking
  contents:
  - "A.1.  Piggybacking\n   This document does not specify how to piggyback payload\
    \ packets on\n   the binding related messages.  However, it is envisioned that\
    \ this\n   can be specified in a separate document when issues such as the\n \
    \  interaction between piggybacking and IPsec are fully resolved (see\n   also\
    \ Appendix A.3).  The return routability messages can indicate\n   support for\
    \ piggybacking with a new mobility option.\n"
- title: A.2.  Triangular Routing
  contents:
  - "A.2.  Triangular Routing\n   Due to the concerns about opening reflection attacks\
    \ with the Home\n   Address destination option, this specification requires that\
    \ this\n   option be verified against the Binding Cache, i.e., there must be a\n\
    \   Binding Cache entry for the Home Address and Care-of Address.\n   Future extensions\
    \ may be specified that allow the use of unverified\n   Home Address destination\
    \ options in ways that do not introduce\n   security issues.\n"
- title: A.3.  New Authorization Methods
  contents:
  - "A.3.  New Authorization Methods\n   While the return routability procedure provides\
    \ a good level of\n   security, there exist methods that have even higher levels\
    \ of\n   security.  Secondly, as discussed in Section 15.4, future\n   enhancements\
    \ of IPv6 security may cause a need to also improve the\n   security of the return\
    \ routability procedure.  Using IPsec as the\n   sole method for authorizing Binding\
    \ Updates to correspondent nodes is\n   also possible.  The protection of the\
    \ Mobility Header for this\n   purpose is easy, though one must ensure that the\
    \ IPsec SA was created\n   with appropriate authorization to use the home address\
    \ referenced in\n   the Binding Update.  For instance, a certificate used by IKE\
    \ to\n   create the security association might contain the home address.  A\n\
    \   future specification may specify how this is done.\n"
- title: A.4.  Dynamically Generated Home Addresses
  contents:
  - "A.4.  Dynamically Generated Home Addresses\n   A future version of this specification\
    \ may include functionality that\n   allows the generation of new home addresses\
    \ without requiring pre-\n   arranged security associations or certificates even\
    \ for the new\n   addresses.\n"
- title: A.5.  Remote Home Address Configuration
  contents:
  - "A.5.  Remote Home Address Configuration\n   The method for initializing a mobile\
    \ node's home address upon power-\n   up or after an extended period of being\
    \ disconnected from the network\n   is beyond the scope of this specification.\
    \  Whatever procedure is\n   used should result in the mobile node having the\
    \ same stateless or\n   stateful (e.g., DHCPv6) home address autoconfiguration\
    \ information it\n   would have if it were attached to the home network.  Due\
    \ to the\n   possibility that the home network could be renumbered while the\n\
    \   mobile node is disconnected, a robust mobile node would not rely\n   solely\
    \ on storing these addresses locally.\n   Such a mobile node could be initialized\
    \ by using the following\n   procedure:\n   1.  Generate a care-of address.\n\
    \   2.  Query DNS for an anycast address associated with the FQDN of the\n   \
    \    home agent(s).\n   3.  Perform home agent address discovery, and select a\
    \ home agent.\n   4.  Configure one home address based on the selected home agent's\n\
    \       subnet prefix and the interface identifier of the mobile node.\n   5.\
    \  Create security associations and security policy database entries\n       for\
    \ protecting the traffic between the selected home address and\n       home agent.\n\
    \   6.  Perform a home registration on the selected home agent.\n   7.  Perform\
    \ mobile prefix discovery.\n   8.  Make a decision if further home addresses need\
    \ to be configured.\n   This procedure is restricted to those situations where\
    \ the home\n   prefix is 64 bits and the mobile node knows its own interface\n\
    \   identifier, which is also 64 bits.\n"
- title: A.6.  Neighbor Discovery Extensions
  contents:
  - "A.6.  Neighbor Discovery Extensions\n   Future specifications may improve the\
    \ efficiency of Neighbor\n   Discovery tasks, which could be helpful for fast\
    \ movements.  One\n   factor is currently being looked at: the delays caused by\
    \ the\n   Duplicate Address Detection mechanism.  Currently, Duplicate Address\n\
    \   Detection needs to be performed for every new care-of address as the\n   mobile\
    \ node moves, and for the mobile node's link-local address on\n   every new link.\
    \  In particular, the need and the trade-offs of re-\n   performing Duplicate\
    \ Address Detection for the link-local address\n   every time the mobile node\
    \ moves on to new links will need to be\n   examined.  Improvements in this area\
    \ are, however, generally\n   applicable and progress independently from the Mobile\
    \ IPv6\n   specification.\n   Future functional improvements may also be relevant\
    \ for Mobile IPv6\n   and other applications.  For instance, mechanisms that would\
    \ allow\n   recovery from a Duplicate Address Detection collision would be useful\n\
    \   for link-local, care-of, and home addresses.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David B. Johnson\n   Rice University\n   Dept. of Computer\
    \ Science, MS 132\n   6100 Main Street\n   Houston  TX 77005-1892\n   USA\n  \
    \ EMail: dbj@cs.rice.edu\n   Charles E. Perkins\n   Nokia Research Center\n  \
    \ 313 Fairchild Drive\n   Mountain View  CA 94043\n   USA\n   EMail: charliep@iprg.nokia.com\n\
    \   Jari Arkko\n   Ericsson\n   02420  Jorvas\n   Finland\n   EMail: jari.arkko@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
