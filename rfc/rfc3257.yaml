- title: __initial_text__
  contents:
  - '      Stream Control Transmission Protocol Applicability Statement

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the applicability of the Stream Control\n\
    \   Transmission Protocol (SCTP).  It also contrasts SCTP with the two\n   dominant\
    \ transport protocols, User Datagram Protocol (UDP) &\n   Transmission Control\
    \ Protocol (TCP), and gives some guidelines for\n   when best to use SCTP and\
    \ when not best to use SCTP.\n"
- title: Table of contents
  contents:
  - "Table of contents\n   1. Introduction ..................................................\
    \  2\n   1.1 Terminology ..................................................  2\n\
    \   2 Transport protocols ............................................  2\n  \
    \ 2.1 TCP service model ............................................  2\n   2.2\
    \ SCTP service model ...........................................  3\n   2.3 UDP\
    \ service model ............................................  4\n   3 SCTP Multihoming\
    \ issues ........................................  4\n   4 SCTP Network Address\
    \ Translators (NAT) issues [RFC2663] ........  5\n   5 Security Considerations\
    \ ........................................  6\n   5.1 Security issues with TCP\
    \ .....................................  6\n   5.2 Security issues with SCTP ....................................\
    \  7\n   5.3 Security issues with both TCP and SCTP .......................  8\n\
    \   6 References and related work ....................................  9\n  \
    \ 7 Acknowledgments ................................................ 10\n   Appendix\
    \ A: Major functions provided by SCTP ..................... 11\n   Editor's Address\
    \ ................................................. 12\n   Full Copyright Statement\
    \ ......................................... 13\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   SCTP is a reliable transport protocol [RFC2960], which along\
    \ with TCP\n   [RFC793], RTP [RFC1889], and UDP [RFC768], provides transport-layer\n\
    \   services for upper layer protocols and services.  UDP, RTP, TCP, and\n   SCTP\
    \ are currently the IETF standards-track transport-layer\n   protocols.  Each\
    \ protocol has a domain of applicability and services\n   it provides, albeit\
    \ with some overlaps.\n   By clarifying the situations where the functionality\
    \ of these\n   protocols are applicable, this document can guide implementers\
    \ and\n   protocol designers in selecting which protocol to use.\n   Special attention\
    \ is given to services SCTP provides which would make\n   a decision to use SCTP\
    \ the right one.\n   Major functions provided by SCTP can be found in Appendix\
    \ A.\n"
- title: 1.1 Terminology
  contents:
  - "1.1 Terminology\n   The following terms are commonly identified in this work:\n\
    \   Association: SCTP connection between two endpoints.\n   Transport address:\
    \ A combination of IP address and SCTP port number.\n   Upper layer: The user\
    \ of the SCTP protocol, which may be an\n   adaptation layer, a session layer\
    \ protocol, or the user application\n   directly.\n   Multihoming: Assigning more\
    \ than one IP network interface to a single\n   endpoint.\n"
- title: 2 Transport protocols
  contents:
  - '2 Transport protocols

    '
- title: 2.1 TCP service model
  contents:
  - "2.1 TCP service model\n   TCP is a connection-oriented (a.k.a., session-oriented)\
    \ transport\n   protocol.  This means that it requires both the establishment\
    \ of a\n   connection prior to the exchange of application data and a connection\n\
    \   tear-down to release system resources after the completion of data\n   transfer.\n\
    \   TCP is currently the most widely used connection-oriented transport\n   protocol\
    \ for the Internet.\n   TCP provides the upper layer with the following transport\
    \ services:\n   - data reliability;\n   - data sequence preservation; and\n  \
    \ - flow and congestion control.\n"
- title: 2.2 SCTP service model
  contents:
  - "2.2 SCTP service model\n   SCTP is also connection-oriented and provides all\
    \ the transport\n   services that TCP provides.  Many Internet applications therefore\n\
    \   should find that either TCP or SCTP will meet their transport\n   requirements.\
    \  Note, for applications conscious about processing\n   cost, there might be\
    \ a difference in processing cost associated with\n   running SCTP with only a\
    \ single ordered stream and one address pair\n   in comparison to running TCP.\n\
    \   However, SCTP has some additional capabilities that TCP lacks and\n   This\
    \ can make SCTP a better choice for some applications and\n   environments:\n\
    \   - multi-streams support:\n   SCTP supports the delivery of multiple independent\
    \ user message\n   streams within a single SCTP association.  This capability,\
    \ when\n   properly used, can alleviate the so-called head-of-line-blocking\n\
    \   problem caused by the strict sequence delivery constraint imposed to\n   the\
    \ user data by TCP.\n   This can be particularly useful for applications that\
    \ need to\n   exchange multiple, logically separate message streams between two\n\
    \   endpoints.\n   - multi-homing support:\n   SCTP provides transparent support\
    \ for communications between two\n   endpoints of which one or both is multi-homed.\n\
    \   SCTP provides monitoring of the reachability of the addresses on the\n   remote\
    \ endpoint and in the case of failure can transparently failover\n   from the\
    \ primary address to an alternate address, without upper layer\n   intervention.\n\
    \   This capability can be used to build redundant paths between two SCTP\n  \
    \ endpoints and can be particularly useful for applications that seek\n   transport-level\
    \ fault tolerance.\n   Achieving path redundancy between two SCTP endpoints normally\n\
    \   requires that the two endpoints being equipped with multiple\n   interfaces\
    \ assigned with multiple addresses and that routing is\n   configured appropriately\
    \ (see Section 3).\n   - preservation of message boundaries:\n   SCTP preserves\
    \ application messages boundaries.  This is useful when\n   the application data\
    \ is not a continuous byte stream but comes in\n   logical chunks that the receiver\
    \ handles separately.\n   In contrast, TCP offers a reliable data stream that\
    \ has no indication\n   of what an application may consider logical chunks of\
    \ the data.\n   - unordered reliable message delivery:\n   SCTP supports the transportation\
    \ of user messages that have no\n   application-specified order, yet need guaranteed\
    \ reliable delivery.\n   Applications that need to send un-ordered reliable messages\
    \ or prefer\n   using their own message sequencing and ordering mechanisms may\
    \ find\n   this SCTP capability useful.\n"
- title: 2.3 UDP Service model
  contents:
  - "2.3 UDP Service model\n   UDP is connectionless.  This means that applications\
    \ that use UDP do\n   not need to perform connection establishment or tear-down.\n\
    \   As transport services to its upper layer, UDP provides only:\n   - best-effort\
    \ data delivery, and\n   - preservation of message boundaries.\n   Applications\
    \ that do not require a reliable transfer of more than a\n   packet's worth of\
    \ data will find UDP adequate.  Some transaction-\n   based applications fall\
    \ into this category.\n"
- title: 3 SCTP Multihoming Issues
  contents:
  - "3 SCTP Multihoming Issues\n   SCTP provides transport-layer support for multihoming.\
    \  Multihoming\n   has the potential of providing additional robustness against\
    \ network\n   failures.  In some applications, this may be extremely important,\
    \ for\n   example, in signaling transport of PSTN signaling messages [RFC2719].\n\
    \   It should be noted that SCTP multihoming support only deals with\n   communication\
    \ between two endpoints of which one or both is assigned\n   with multiple IP\
    \ addresses on possibly multiple network interfaces.\n   It does NOT deal with\
    \ communication ends that contain multiple\n   endpoints (i.e., clustered endpoints)\
    \ that can switch over to an\n   alternate endpoint in case of failure of the\
    \ original endpoint.\n   Generally, for truly fault resilient communication between\
    \ two end-\n   points, the multihoming feature needs more than one IP network\n\
    \   interface for each endpoint.  The number of paths used is the minimum\n  \
    \ of network interfaces used by any of the endpoints.  When an endpoint\n   selects\
    \ its source address, careful consideration must be taken.  If\n   the same source\
    \ address is always used, then it is possible that the\n   endpoint will be subject\
    \ to the same single point of failure.  When\n   the endpoint chooses a source\
    \ address, it should always select the\n   source address of the packet to correspond\
    \ to the IP address of the\n   Network interface where the packet will be emitted\
    \ subject to the\n   binding address constraint.  The binding address constraint\
    \ is, put\n   simply, that the endpoint must never choose a source address that\
    \ is\n   not part of the association i.e., the peer endpoint must recognize\n\
    \   any source address used as being part of the association.\n   The availability\
    \ of the association will benefit greatly from having\n   multiple addresses bound\
    \ to the association endpoint when the\n   endpoint is on a multi-homed host.\n"
- title: 4 SCTP Network Address Translators (NAT) issues [RFC2663]
  contents:
  - "4 SCTP Network Address Translators (NAT) issues [RFC2663]\n   When two endpoints\
    \ are to setup an SCTP association and one (or both)\n   of them is behind a NAT\
    \ (i.e., it does not have any publicly\n   available network addresses), the endpoint(s)\
    \ behind the NAT should\n   consider one of the following options:\n   (1) When\
    \ single homed sessions are to be used, no transport addresses\n   should be sent\
    \ in the INIT or INIT ACK chunk(Refer to section 3.3 of\n   RFC2960 for chunk\
    \ definitions).  This will force the endpoint that\n   receives this initiation\
    \ message to use the source address in the IP\n   header as the only destination\
    \ address for this association.  This\n   method can be used for a NAT, but any\
    \ multi-homing configuration at\n   the endpoint that is behind the NAT will not\
    \ be visible to its peer,\n   and thus not be taken advantage of.  See figure\
    \ 1.\n      +-------+  +---------+      *~~~~~~~~~~*           +------+\n    \
    \  |Host A |  |   NAT   |     *   Cloud    *          |Host B|\n      | 10.2 \
    \ +--|10.1|2.1 |----|--------------|---------+ 1.2  |\n      |       |  |    |\
    \    |     *            *          |      |\n      +-------+  +---------+    \
    \  *~~~~~~~~~~*           +------+\n               Fig 1: SCTP through NAT without\
    \ multihoming\n   For multihoming the NAT must have a public IP address for each\n\
    \   represented internal IP address.  The host can preconfigure an IP\n   address\
    \ that the NAT can substitute, or, the NAT can have internal\n   Application Layer\
    \ Gateway (ALG) which will intelligently translate\n   the IP addresses in the\
    \ INIT and INIT ACK chunks.  See Figure 2.\n   If Network Address Port Translation\
    \ is used with a multihomed SCTP\n   endpoint, then any port translation must\
    \ be applied on a per-\n   association basis such that an SCTP endpoint continues\
    \ to receive the\n   same port number for all messages within a given association.\n\
    \      +-------+   +----------+      *~~~~~~~~~~*           +------+\n      |Host\
    \ A |   |    NAT   |     *   Cloud    *          |Host B|\n      | 10.2  +---+\
    \ 10.1|5.2 +-----+ 1.1<+->3.1--+---------+ 1.2  |\n      | 11.2  +---+ 11.1|6.2\
    \ |     |     +->4.2--+---------+ 2.2  |\n      |       |   |          |     \
    \ *           *          |      |\n      +-------+   +----------+       *~~~~~~~~~*\
    \           +------+\n                Fig 2: SCTP through NAT with multihoming\n\
    \   (2) Another alternative is to use the hostname feature and DNS to\n   resolve\
    \ the addresses.  The hostname is included in the INIT of the\n   association\
    \ or in the INIT ACK.  The hostname must be resolved by DNS\n   before the association\
    \ is completely set up.  There are special\n   issues regarding NAT and DNS, refer\
    \ to RFC2694 for details.\n"
- title: 5 Security Considerations
  contents:
  - "5 Security Considerations\n   In this section, some relevant security issues\
    \ found in the\n   deployment of the connection-oriented transport protocols will\
    \ be\n   discussed.\n"
- title: 5.1 Security issues with TCP
  contents:
  - "5.1 Security issues with TCP\n   Some TCP implementations have been known to\
    \ be vulnerable to blind\n   denial of service attacks, i.e., attacks that had\
    \ been executed by an\n   attacker that could not see most of the traffic to or\
    \ from the target\n   host.\n   The attacker would send a large number of connection\
    \ establishment\n   requests (TCP-SYN packets) to the attacked target, possibly\
    \ from\n   faked IP source addresses.  The attacked host would reply by sending\n\
    \   SYN-ACK packets and entering SYN-received state, thereby allocating\n   space\
    \ for a TCB.  At some point the SYN-queue would fill up, (i.e.,\n   the number\
    \ of connections waiting to be established would rise to a\n   limit) and the\
    \ host under attack would have to start turning down new\n   connection establishment\
    \ requests.\n   TCP implementations with SYN-cookies algorithm [SYN-COOK] reduce\
    \ the\n   risk of such blind denial of service attacks.  TCP implementations\n\
    \   can switch to using this algorithm in times when their SYN-queues are\n  \
    \ filled up while still fully conforming to the TCP specification\n   [RFC793].\
    \  However, use of options such as a window scale [RFC1323],\n   is not possible,\
    \ then.  With the SYN-cookie mechanism, a TCB is only\n   created when the client\
    \ sends back a valid ACK packet to the server,\n   and the 3-way handshake has\
    \ thus been successfully completed.\n   Blind connection forgery is another potential\
    \ threat to TCP.  By\n   guessing valid sequence numbers, an attacker would be\
    \ able to forge a\n   connection.  However, with a secure hashsum algorithm, for\
    \ some of\n   the current SYN-cookie implementations the likelihood of achieving\n\
    \   this attack is on the order of magnitude of 1 in 2^24, i.e., the\n   attacker\
    \ would have to send 2^24 packets before obtaining one forged\n   connection when\
    \ SYN-cookies are used.\n"
- title: 5.2 Security issues with SCTP
  contents:
  - "5.2 Security issues with SCTP\n   SCTP has been designed with the experiences\
    \ made with TCP in mind.\n   To make it hard for blind attackers (i.e., attackers\
    \ that are not\n   man-in-the-middle) to inject forged SCTP datagrams into existing\n\
    \   associations, each side of an SCTP association uses a 32 bit value\n   called\
    \ \"Verification Tag\" to ensure that a datagram really belongs to\n   the existing\
    \ association.  So in addition to a combination of source\n   and destination\
    \ transport addresses that belong to an established\n   association, a valid SCTP\
    \ datagram must also have the correct tag to\n   be accepted by the recipient.\n\
    \   Unlike in TCP, usage of cookie in association establishment is made\n   mandatory\
    \ in SCTP.  For the server, a new association is fully\n   established after three\
    \ messages (containing INIT, INIT-ACK, COOKIE-\n   ECHO chunks) have been exchanged.\
    \  The cookie is a variable length\n   parameter that contains all relevant data\
    \ to initialize the TCB on\n   the server side, plus a HMAC used to secure it.\
    \  This HMAC (MD5 as\n   per [RFC1321] or SHA-1 [SHA1]) is computed over the cookie\
    \ and a\n   secret, server-owned key.\n   As specifically prescribed for SCTP\
    \ implementations [RFC2960],\n   additional resources for new associations may\
    \ only be reserved in\n   case a valid COOKIE-ECHO chunk is received by a client,\
    \ and the\n   computed HMAC for this new cookie matches that contained in the\n\
    \   cookie.\n   With SCTP the chances of an attacker being able to blindly forge\
    \ a\n   connection are even lower than in the case of TCP using SYN-cookies,\n\
    \   since the attacker would have to guess a correct value for the HMAC\n   contained\
    \ in the cookie, i.e., lower than 1 in 2^128 which for all\n   practical purposes\
    \ is negligible.\n   It should be noted that SCTP only tries to increase the availability\n\
    \   of a network.  SCTP does not contain any protocol mechanisms that are\n  \
    \ directly related to user message authentication, integrity and\n   confidentiality\
    \ functions.  For such features, it depends on the\n   IPsec protocols and architecture\
    \ and/or on security features of the\n   application protocols.\n   Transport\
    \ Layer security(TLS)[RFC2246] using SCTP must always use\n   in-order streams.\n\
    \   Currently the IPSEC working group is investigating the support of\n   multi-homing\
    \ by IPSEC protocols.  At the present time to use IPSEC,\n   one must use 2 *\
    \ N * M security associations if one endpoint uses N\n   addresses and the other\
    \ M addresses.\n"
- title: 5.3 Security Issues with both TCP and SCTP
  contents:
  - "5.3 Security Issues with both TCP and SCTP\n   It is important to note that neither\
    \ TCP nor SCTP protect itself from\n   man-in-the-middle attacks where an established\
    \ session might be\n   hijacked (assuming the attacker can see the traffic from\
    \ and inject\n   its own packets to either endpoints).\n   Also, to prevent blind\
    \ connection/session setup forgery, both TCP\n   implementations supporting SYN-cookies\
    \ and SCTP implementations rely\n   on a server-known, secret key to protect the\
    \ HMAC data.  It must be\n   ensured that this key is created subject to the recommendations\n\
    \   mentioned in [RFC1750].\n   Although SCTP has been designed carefully as to\
    \ avoid some of the\n   problems that have appeared with TCP, it has as of yet\
    \ not been\n   widely deployed.  It is therefore possible that new security issues\n\
    \   will be identified that will have to be addressed in further\n   revisions\
    \ of [RFC2960].\n"
- title: 6 References and related work
  contents:
  - "6 References and related work\n   [RFC2960]   Stewart, R., Xie, Q., Morneault,\
    \ K., Sharp, C.,\n               Schwarzbauer, H., Taylor, T., Rytina, I., Kalla,\
    \ M.,\n               Zhang, L. and V. Paxson, \"Stream Control Transmission\n\
    \               Protocol\", RFC 2960, October 2000.\n   [RFC2401]   Kent, S. and\
    \ R. Atkinson, \"Security Architecture for the\n               Internet Protocol\"\
    , RFC 2401, November 1998.\n   [RFC2663]   Srisuresh, P. and M. Holdrege, \"IP\
    \ Network Address\n               Translator (NAT) Terminology and Considerations\"\
    , RFC\n               2663, August 1999.\n   [RFC2694]   Srisuresh, P., Tsirtsis,\
    \ G., Akkiraju, P. and A.\n               Heffernan, \"DNS extensions to Network\
    \ Address Translators\n               (DNS_ALG)\", RFC 2694, September 1999.\n\
    \   [RFC768]    Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n    \
    \           August 1980.\n   [RFC793]    Postel, J., \"Transmission Control Protocol\"\
    , STD 7, RFC\n               793, September 1981.\n   [RFC2719]   Ong, L., Rytina,\
    \ I., Garcia, M., Schwarzbauer, H., Coene,\n               L., Lin, H., Juhasz,\
    \ I., Holdrege, M. and C. Sharp,\n               \"Architectural Framework for\
    \ Signaling Transport\", RFC\n               2719, October 1999.\n   [RFC1321]\
    \   Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321,\n            \
    \   April 1992.\n   [RFC1323]   Jacobson, V., Braden, R. and D. Borman, \"TCP\
    \ Extensions\n               for High Performance\", RFC 1323, May 1992.\n   [RFC1750]\
    \   Eastlake, D., Crocker, S. and J. Schiller, \"Randomness\n               Recommendations\
    \ for Security\", RFC 1750, December 1994.\n   [SHA1]      NIST FIPS PUB 180-1,\
    \ \"Secure Hash Standard,\" National\n               Institute of Standards and\
    \ Technology, U.S. Department of\n               Commerce, April 1995.\n   [SYNCOOK]\
    \   Dan J. Bernstein, SYN cookies, 1997, see also\n               <http://cr.yp.to/syncookies.html>\n\
    \   [RFC2246]   Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\",\n \
    \              RFC 2246, January 1999.\n   [RFC1889]   Schulzrinne, H., Casner,\
    \ S., Frederick, R. and V.\n               Jacobson, \"RTP: A Transport Protocol\
    \ for Real-Time\n               Applications\", RFC 1889, January 1996.\n"
- title: 7 Acknowledgments
  contents:
  - "7 Acknowledgments\n   This document was initially developed by a design team\
    \ consisting of\n   Lode Coene, John Loughney, Michel Tuexen, Randall R. Stewart,\n\
    \   Qiaobing Xie, Matt Holdrege, Maria-Carmen Belinchon, Andreas\n   Jungmaier,\
    \ Gery Verwimp and Lyndon Ong.\n   The authors wish to thank Renee Revis, I. Rytina,\
    \ H.J. Schwarzbauer,\n   J.P. Martin-Flatin, T. Taylor, G. Sidebottom, K. Morneault,\
    \ T.\n   George, M. Stillman, N. Makinae, S. Bradner, A. Mankin, G. Camarillo,\n\
    \   H. Schulzrinne, R. Kantola, J. Rosenberg, R.J. Atkinson, and many\n   others\
    \ for their invaluable comments.\n"
- title: 'Appendix A: Major functions provided by SCTP'
  contents:
  - "Appendix A: Major functions provided by SCTP\n   - Reliable Data Transfer\n \
    \  - Multiple streams to help avoid head-of-line blocking\n   - Ordered and unordered\
    \ data delivery on a per-stream basis\n   - Bundling and fragmentation of user\
    \ data\n   - TCP friendly Congestion and flow control\n   - Support continuous\
    \ monitoring of reachability\n   - Graceful termination of association\n   - Support\
    \ of multi-homing for added reliability\n   - Some protection against blind denial-of-service\
    \ attacks\n   - Some protection against blind masquerade attacks\n"
- title: 8  Editor's Address
  contents:
  - "8  Editor's Address\n   Lode Coene\n   Siemens Atea\n   Atealaan 34\n   B-2200\
    \ Herentals\n   Belgium\n   Phone: +32-14-252081\n   EMail: lode.coene@siemens.atea.be\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
